VERSION A05

PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:1    
        1        1        /*M* VDP$WERASE:  Erase a window via VDH.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        VDP$WERASE: PROC ( WINDOW_SPEC )
       10       10              ALTRET;
       11       11
       12       12          %INCLUDE CP_6;
       13       93
       14       94            %B$TCB;
       15       97            %B$ALT;
       16      105    1     DCL B$TCB$ PTR SYMREF;
       17      106
       18      107          %FPT_ERASE;
       19      140
       20      141          %INCLUDE VD_MACROS_M;
       21     2356
       22     2357          %VD$WINDOW_SPEC ( NAME = WINDOW_SPEC,
       23     2358                            STCLASS = PARAM );
       24     2424
       25     2425          %VD$NUMBER ( NAME = VD_$$MON_PRES,
       26     2426                       STCLASS = SYMREF );
       27     2471          %VD$NUMBER ( NAME = VD_$SCREEN,
       28     2472                       STCLASS = SYMREF );
       29     2517
       30     2518    1     DCL RECORD_SET_INDEX UBIN;
       31     2519    1     DCL VD_ERR$ PTR;
       32     2520
       33     2521          %VD$BUFFER;
       34     2579          %VD$ERR ( STCLASS = "BASED ( VD_ERR$ )" );
       35     2632          %VD$RECORD_SET ( NAME = RECORD$SET,
       36     2633                           STCLASS = "BASED ( WINDOW_SPEC.RECORD_SET$ )" );
       37     2711          %VD$TEXTC_NUMBER;
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:2    
       38     2725          %VD$TEXTC_REMOTE;
       39     2786
       40     2787    1     DCL VDG$MPRES_FEPERASE ENTRY (3);
       41     2788    1     DCL VDG$MPRES_RETURN ENTRY (1);
       42     2789    1     DCL VDG$MPRES_WERASE ENTRY (1);
       43     2790    1     DCL VDG$OALLOC ENTRY (3) ALTRET;
       44     2791    1     DCL VDG$OFREE ENTRY (1) ALTRET;
       45     2792        %EJECT;
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:3    
       46     2793    1       IF VD_$$MON_PRES.V# > 0
       47     2794    1       THEN
       48     2795    1         CALL VDG$MPRES_WERASE ( WINDOW_SPEC );
       49     2796
       50     2797    1       IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT
       51     2798    1         OR WINDOW_SPEC.RECORD_SET$ = ADDR(NIL)
       52     2799    1       THEN
       53     2800    1         RETURN;
       54     2801
       55     2802    1       FPT_ERASE.V.DCB# = WINDOW_SPEC.DCB#;
       56     2803
       57     2804    1       IF VD_$$MON_PRES.V# > 0
       58     2805    1       THEN
       59     2806    1         CALL VDG$MPRES_FEPERASE ( WINDOW_SPEC.DCB#,
       60     2807    1           RECORD$SET.DESC.KEY ( 0 ),
       61     2808    1           RECORD$SET.DESC.KEY ( RECORD$SET.N_ENTRIES# - 1 ) );
       62     2809
       63     2810    1       CALL M$ERASE ( FPT_ERASE )
       64     2811    1       WHENALTRETURN
       65     2812    2         DO;
       66     2813    2           CALL VDG$OALLOC ( %CLS_ERR, VD_ERR$ )
       67     2814    3           WHENALTRETURN DO; ALTRETURN; END;
       68     2815    2           VD$ERR.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
       69     2816    2           VD$ERR.FLAGLEV# = %FLV_SERIOUS;
       70     2817    2           VD$ERR.DCB# = FPT_ERASE.V.DCB#;
       71     2818    2           ALTRETURN;
       72     2819    2         END;
       73     2820
       74     2821    1       WINDOW_SPEC.SCREEN_UPDATED = %FALSE;
       75     2822
       76     2823            /*  BUFF, TURF, BOUNCE.  */
       77     2824    2       DO RECORD_SET_INDEX = 0 TO RECORD$SET.N_ENTRIES# - 1;
       78     2825              %CLEARKEY ( KEY = "RECORD$SET.DESC.KEY",
       79     2826              INDX = RECORD_SET_INDEX );
       80     2836    2         CALL VDG$OFREE ( RECORD$SET.DESC.DATA$ ( RECORD_SET_INDEX ) -> VD$BUFFER );
       81     2837    2       END;
       82     2838
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:4    
       83     2839    1       RECORD$SET.N_ENTRIES# = 0;
       84     2840    1       WINDOW_SPEC.BOB_DISPLAYED = %FALSE;
       85     2841    1       WINDOW_SPEC.EOB_DISPLAYED = %FALSE;
       86     2842
       87     2843    1       IF VD_$$MON_PRES.V# > 0
       88     2844    1       THEN
       89     2845    1         CALL VDG$MPRES_RETURN ( WINDOW_SPEC );
       90     2846
       91     2847    1       RETURN;
       92     2848
       93     2849    1   END VDP$WERASE;
       94     2850        %EOD;

PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:5    
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WERASE.

   Procedure VDP$WERASE requires 119 words for executable code.
   Procedure VDP$WERASE requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:6    

 Object Unit name= VDP$WERASE                                 File name= VDP$WINDOW_I_O.:VDA5TOU
 UTS= JUL 04 '97 11:39:35.04 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none     8     10  VDP$WERASE
    2   Proc  even  none   119    167  VDP$WERASE
    3  RoData even  none     4      4  VDP$WERASE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  VDP$WERASE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 VDG$MPRES_WERASE
 yes     yes           Std       3 VDG$OALLOC
 yes     yes           Std       1 VDG$OFREE
         yes           Std       1 VDG$MPRES_RETURN
         yes           Std       3 VDG$MPRES_FEPERASE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                VD_$$MON_PRES
     VD_$SCREEN                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:8    


        1        1        /*M* VDP$WERASE:  Erase a window via VDH.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        VDP$WERASE: PROC ( WINDOW_SPEC )

      9  2 000000   000000 700200 xent  VDP$WERASE   TSX0  ! X66_AUTO_1
         2 000001   000012 000001                    ZERO    10,1

       10       10              ALTRET;
       11       11
       12       12          %INCLUDE CP_6;
       13       93
       14       94            %B$TCB;
       15       97            %B$ALT;
       16      105    1     DCL B$TCB$ PTR SYMREF;
       17      106
       18      107          %FPT_ERASE;
       19      140
       20      141          %INCLUDE VD_MACROS_M;
       21     2356
       22     2357          %VD$WINDOW_SPEC ( NAME = WINDOW_SPEC,
       23     2358                            STCLASS = PARAM );
       24     2424
       25     2425          %VD$NUMBER ( NAME = VD_$$MON_PRES,
       26     2426                       STCLASS = SYMREF );
       27     2471          %VD$NUMBER ( NAME = VD_$SCREEN,
       28     2472                       STCLASS = SYMREF );
       29     2517
       30     2518    1     DCL RECORD_SET_INDEX UBIN;
       31     2519    1     DCL VD_ERR$ PTR;
       32     2520
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:9    
       33     2521          %VD$BUFFER;
       34     2579          %VD$ERR ( STCLASS = "BASED ( VD_ERR$ )" );
       35     2632          %VD$RECORD_SET ( NAME = RECORD$SET,
       36     2633                           STCLASS = "BASED ( WINDOW_SPEC.RECORD_SET$ )" );
       37     2711          %VD$TEXTC_NUMBER;
       38     2725          %VD$TEXTC_REMOTE;
       39     2786
       40     2787    1     DCL VDG$MPRES_FEPERASE ENTRY (3);
       41     2788    1     DCL VDG$MPRES_RETURN ENTRY (1);
       42     2789    1     DCL VDG$MPRES_WERASE ENTRY (1);
       43     2790    1     DCL VDG$OALLOC ENTRY (3) ALTRET;
       44     2791    1     DCL VDG$OFREE ENTRY (1) ALTRET;
       45     2792        %EJECT;
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:10   
       46     2793    1       IF VD_$$MON_PRES.V# > 0

   2793  2 000002   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         2 000003   000010 604400 2                  TMOZ    s:2797

       47     2794    1       THEN
       48     2795    1         CALL VDG$MPRES_WERASE ( WINDOW_SPEC );

   2795  2 000004   200003 630500                    EPPR0   @WINDOW_SPEC,,AUTO
         2 000005   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000006   000000 701000 xent               TSX1    VDG$MPRES_WERASE
         2 000007   000000 011000                    NOP     0

       49     2796
       50     2797    1       IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT

   2797  2 000010   000003 235000 xsym               LDA     VD_$SCREEN+3
         2 000011   000003 115007                    CMPA    3,DL
         2 000012   000017 604000 2                  TMI     s:2800
         2 000013   200003 470500                    LDP0    @WINDOW_SPEC,,AUTO
         2 000014   000016 236100                    LDQ     14,,PR0
         2 000015   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000016   000020 601000 2                  TNZ     s:2802

       51     2798    1         OR WINDOW_SPEC.RECORD_SET$ = ADDR(NIL)
       52     2799    1       THEN
       53     2800    1         RETURN;

   2800  2 000017   000000 702200 xent               TSX2  ! X66_ARET

       54     2801
       55     2802    1       FPT_ERASE.V.DCB# = WINDOW_SPEC.DCB#;

   2802  2 000020   000014 720100                    LXL0    12,,PR0
         2 000021   000006 740000 1                  STX0    FPT_ERASE+6

       56     2803
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:11   
       57     2804    1       IF VD_$$MON_PRES.V# > 0

   2804  2 000022   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         2 000023   000043 604400 2                  TMOZ    s:2810

       58     2805    1       THEN
       59     2806    1         CALL VDG$MPRES_FEPERASE ( WINDOW_SPEC.DCB#,

   2806  2 000024   000016 471500                    LDP1    14,,PR0
         2 000025   100002 236100                    LDQ     2,,PR1
         2 000026   000022 732000                    QRS     18
         2 000027   000006 402007                    MPY     6,DL
         2 000030   177775 633506                    EPPR3   -3,QL,PR1
         2 000031   200010 453500                    STP3    VD_ERR$+3,,AUTO
         2 000032   100003 634500                    EPPR4   3,,PR1
         2 000033   200007 454500                    STP4    VD_ERR$+2,,AUTO
         2 000034   200003 236100                    LDQ     @WINDOW_SPEC,,AUTO
         2 000035   000000 036000 3                  ADLQ    0
         2 000036   200006 756100                    STQ     VD_ERR$+1,,AUTO
         2 000037   200006 630500                    EPPR0   VD_ERR$+1,,AUTO
         2 000040   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000041   000000 701000 xent               TSX1    VDG$MPRES_FEPERASE
         2 000042   000000 011000                    NOP     0

       60     2807    1           RECORD$SET.DESC.KEY ( 0 ),
       61     2808    1           RECORD$SET.DESC.KEY ( RECORD$SET.N_ENTRIES# - 1 ) );
       62     2809
       63     2810    1       CALL M$ERASE ( FPT_ERASE )

   2810  2 000043   000000 630400 1                  EPPR0   FPT_ERASE
         2 000044   560025 713400                    CLIMB   alt,+57365
         2 000045   401000 401760                    pmme    nvectors=3
         2 000046   000050 702000 2                  TSX2    s:2813
         2 000047   000076 710000 2                  TRA     s:2821

       64     2811    1       WHENALTRETURN
       65     2812    2         DO;
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:12   

       66     2813    2           CALL VDG$OALLOC ( %CLS_ERR, VD_ERR$ )

   2813  2 000050   200005 630500                    EPPR0   VD_ERR$,,AUTO
         2 000051   200007 450500                    STP0    VD_ERR$+2,,AUTO
         2 000052   000001 236000 3                  LDQ     1
         2 000053   200006 756100                    STQ     VD_ERR$+1,,AUTO
         2 000054   200006 630500                    EPPR0   VD_ERR$+1,,AUTO
         2 000055   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000056   000000 701000 xent               TSX1    VDG$OALLOC
         2 000057   000061 702000 2                  TSX2    s:2814
         2 000060   000062 710000 2                  TRA     s:2815

       67     2814    3           WHENALTRETURN DO; ALTRETURN; END;

   2814  2 000061   000000 702200 xent               TSX2  ! X66_AALT

       68     2815    2           VD$ERR.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   2815  2 000062   000000 470400 xsym               LDP0    B$TCB$
         2 000063   000000 471500                    LDP1    0,,PR0
         2 000064   100102 236100                    LDQ     66,,PR1
         2 000065   200005 473500                    LDP3    VD_ERR$,,AUTO
         2 000066   300002 756100                    STQ     2,,PR3

       69     2816    2           VD$ERR.FLAGLEV# = %FLV_SERIOUS;

   2816  2 000067   000003 220003                    LDX0    3,DU
         2 000070   200005 471500                    LDP1    VD_ERR$,,AUTO
         2 000071   100003 740100                    STX0    3,,PR1

       70     2817    2           VD$ERR.DCB# = FPT_ERASE.V.DCB#;

   2817  2 000072   000006 221000 1                  LDX1    FPT_ERASE+6
         2 000073   200005 471500                    LDP1    VD_ERR$,,AUTO
         2 000074   100004 741100                    STX1    4,,PR1

PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:13   
       71     2818    2           ALTRETURN;

   2818  2 000075   000000 702200 xent               TSX2  ! X66_AALT

       72     2819    2         END;
       73     2820
       74     2821    1       WINDOW_SPEC.SCREEN_UPDATED = %FALSE;

   2821  2 000076   200003 470500                    LDP0    @WINDOW_SPEC,,AUTO
         2 000077   000002 236000 3                  LDQ     2
         2 000100   000015 356100                    ANSQ    13,,PR0

       75     2822
       76     2823            /*  BUFF, TURF, BOUNCE.  */
       77     2824    2       DO RECORD_SET_INDEX = 0 TO RECORD$SET.N_ENTRIES# - 1;

   2824  2 000101   200004 450100                    STZ     RECORD_SET_INDEX,,AUTO
         2 000102   000142 710000 2                  TRA     s:2837+3

       78     2825              %CLEARKEY ( KEY = "RECORD$SET.DESC.KEY",
       79     2826              INDX = RECORD_SET_INDEX );

   2833  2 000103   200003 470500                    LDP0    @WINDOW_SPEC,,AUTO
         2 000104   000016 471500                    LDP1    14,,PR0
         2 000105   200004 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         2 000106   000006 402007                    MPY     6,DL
         2 000107   100003 720106                    LXL0    3,QL,PR1
         2 000110   000002 100003                    CMPX0   2,DU
         2 000111   000122 601000 2                  TNZ     s:2834+1

   2833  2 000112   100004 473506                    LDP3    4,QL,PR1
         2 000113   200006 453500                    STP3    VD_ERR$+1,,AUTO
         2 000114   200006 630500                    EPPR0   VD_ERR$+1,,AUTO
         2 000115   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000116   000000 701000 xent               TSX1    VDG$OFREE
         2 000117   000121 702000 2                  TSX2    s:2834
         2 000120   000122 710000 2                  TRA     s:2834+1
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:14   

   2834  2 000121   000000 702200 xent               TSX2  ! X66_AALT

   2834  2 000122   200003 470500                    LDP0    @WINDOW_SPEC,,AUTO
         2 000123   000016 471500                    LDP1    14,,PR0
         2 000124   200004 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         2 000125   000006 402007                    MPY     6,DL
         2 000126   100003 450106                    STZ     3,QL,PR1
         2 000127   100004 450106                    STZ     4,QL,PR1

       80     2836    2         CALL VDG$OFREE ( RECORD$SET.DESC.DATA$ ( RECORD_SET_INDEX ) -> VD$BUFFER );

   2836  2 000130   000016 471500                    LDP1    14,,PR0
         2 000131   100007 473506                    LDP3    7,QL,PR1
         2 000132   200006 453500                    STP3    VD_ERR$+1,,AUTO
         2 000133   200006 630500                    EPPR0   VD_ERR$+1,,AUTO
         2 000134   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000135   000000 701000 xent               TSX1    VDG$OFREE
         2 000136   000000 011000                    NOP     0

       81     2837    2       END;

   2837  2 000137   200004 235100                    LDA     RECORD_SET_INDEX,,AUTO
         2 000140   000001 035007                    ADLA    1,DL
         2 000141   200004 755100                    STA     RECORD_SET_INDEX,,AUTO
         2 000142   200003 470500                    LDP0    @WINDOW_SPEC,,AUTO
         2 000143   000016 471500                    LDP1    14,,PR0
         2 000144   100002 236100                    LDQ     2,,PR1
         2 000145   000022 732000                    QRS     18
         2 000146   000152 604000 2                  TMI     s:2839
         2 000147   200004 116100                    CMPQ    RECORD_SET_INDEX,,AUTO
         2 000150   000152 600000 2                  TZE     s:2839
         2 000151   000103 603000 2                  TRC     s:2833

       82     2838
       83     2839    1       RECORD$SET.N_ENTRIES# = 0;

PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:15   
   2839  2 000152   000000 220003                    LDX0    0,DU
         2 000153   100002 740100                    STX0    2,,PR1

       84     2840    1       WINDOW_SPEC.BOB_DISPLAYED = %FALSE;

   2840  2 000154   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 000155   000015 356100                    ANSQ    13,,PR0

       85     2841    1       WINDOW_SPEC.EOB_DISPLAYED = %FALSE;

   2841  2 000156   000003 236000 3                  LDQ     3
         2 000157   000015 356100                    ANSQ    13,,PR0

       86     2842
       87     2843    1       IF VD_$$MON_PRES.V# > 0

   2843  2 000160   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         2 000161   000166 604400 2                  TMOZ    s:2847

       88     2844    1       THEN
       89     2845    1         CALL VDG$MPRES_RETURN ( WINDOW_SPEC );

   2845  2 000162   200003 630500                    EPPR0   @WINDOW_SPEC,,AUTO
         2 000163   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000164   000000 701000 xent               TSX1    VDG$MPRES_RETURN
         2 000165   000000 011000                    NOP     0

       90     2846
       91     2847    1       RETURN;

   2847  2 000166   000000 702200 xent               TSX2  ! X66_ARET
       92     2848
       93     2849    1   END VDP$WERASE;
       94     2850        %EOD;

PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:16   
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WERASE.
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:17   

 **** Variables and constants ****

  ****  Section 001  Data  VDP$WERASE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(288)   r     1 FPT_ERASE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @WINDOW_SPEC               4-0-0/w UBIN        r     1 RECORD_SET_INDEX
     5-0-0/w PTR         r     1 VD_ERR$                   *0-0-0/w STRC(900)   r     1 WINDOW_SPEC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(144)   r     1 VD_$$MON_PRES
     0-0-0/w STRC(144)   r     1 VD_$SCREEN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(324)   r     1 RECORD$SET                 0-0-0/w ASTR(90)    r     1 VD$BUFFER
     0-0-0/w STRC(180)   r     1 VD$ERR                     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE


   Procedure VDP$WERASE requires 119 words for executable code.
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:18   
   Procedure VDP$WERASE requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:20   
          MINI XREF LISTING

B$ALT.CODE
        99**DCL        99--REDEF     100--REDEF     100--REDEF
B$ALT.ERR
       100**DCL      2815>>ASSIGN
B$ALT.ERR.ERR#
       101**DCL       101--REDEF
B$ALT.EVID
       100**DCL       100--REDEF     100--REDEF
B$TCB.ALT$
        95**DCL      2815>>ASSIGN
B$TCB$
       105**DCL      2815>>ASSIGN
FPT_ERASE
       123**DCL      2810<>CALL
FPT_ERASE.V
       131**DCL       125--DCLINIT
FPT_ERASE.V.DCB#
       131**DCL      2802<<ASSIGN   2817>>ASSIGN
M$ERASE
        52**DCL-ENT  2810--CALL
RECORD$SET.DESC.DATA$
      2708**DCL      2836>>CALL     2836>>CALL
RECORD$SET.DESC.KEY
      2690**DCL      2806<>CALL     2806<>CALL     2834<<ASSIGN
RECORD$SET.DESC.KEY.REP#
      2692**DCL      2833>>IF
RECORD$SET.DESC.KEY.V$
      2692**DCL      2833>>CALL     2833>>CALL
RECORD$SET.N_ENTRIES#
      2667**DCL      2806>>CALL     2824>>DOINDEX  2839<<ASSIGN
RECORD_SET_INDEX
      2518**DCL      2824<<DOINDEX  2833>>IF       2833>>CALL     2833>>CALL     2834>>ASSIGN   2836>>CALL
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:21   
      2836>>CALL
VD$BUFFER
      2546**DCL      2836<>CALL
VD$BUFFER.LENGTH#
      2572**DCL      2574--IMP-SIZ  2836>>CALL
VD$ERR.DCB#
      2629**DCL      2817<<ASSIGN
VD$ERR.ERR
      2624**DCL      2815<<ASSIGN
VD$ERR.FLAGLEV#
      2629**DCL      2816<<ASSIGN
VD$TEXTC_REMOTE
      2750**DCL      2833<>CALL
VD$TEXTC_REMOTE.LENGTH#
      2779**DCL      2781--IMP-SIZ  2833>>CALL
VDG$MPRES_FEPERASE
      2787**DCL-ENT  2806--CALL
VDG$MPRES_RETURN
      2788**DCL-ENT  2845--CALL
VDG$MPRES_WERASE
      2789**DCL-ENT  2795--CALL
VDG$OALLOC
      2790**DCL-ENT  2813--CALL
VDG$OFREE
      2791**DCL-ENT  2833--CALL     2836--CALL
VD_$$MON_PRES.V#
      2468**DCL      2793>>IF       2804>>IF       2843>>IF
VD_$SCREEN.V#
      2514**DCL      2797>>IF
VD_ERR$
      2519**DCL      2587--IMP-PTR  2813<>CALL     2815>>ASSIGN   2816>>ASSIGN   2817>>ASSIGN
WINDOW_SPEC
      2366**DCL         9--PROC     2795<>CALL     2845<>CALL
WINDOW_SPEC.BOB_DISPLAYED
      2409**DCL      2840<<ASSIGN
WINDOW_SPEC.DCB#
PL6.E3A0      #001=VDP$WERASE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:39 Page:22   
      2409**DCL      2802>>ASSIGN   2806<>CALL
WINDOW_SPEC.EOB_DISPLAYED
      2409**DCL      2841<<ASSIGN
WINDOW_SPEC.RECORD_SET$
      2410**DCL      2641--IMP-PTR  2797>>IF       2806>>CALL     2806>>CALL     2806>>CALL     2824>>DOINDEX
      2833>>IF       2833>>CALL     2833>>CALL     2834>>ASSIGN   2836>>CALL     2836>>CALL     2839>>ASSIGN
WINDOW_SPEC.SCREEN_UPDATED
      2410**DCL      2821<<ASSIGN

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:23   
       95        1        /*M* VDP$WFORMAT_RECORD:  Format a record for 1D input or output.  */
       96        2        /*T***********************************************************/
       97        3        /*T*                                                         */
       98        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       99        5        /*T*                                                         */
      100        6        /*T***********************************************************/
      101        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
      102        8
      103        9        VDP$WFORMAT_RECORD: PROC ( RGET_NODE_DESC,
      104       10              FPT_SINPUT )
      105       11              ALTRET;
      106       12
      107       13          %INCLUDE CP_6;
      108       94
      109       95            %B$TCB;
      110       98            %B$ALT;
      111      106    1     DCL B$TCB$ PTR SYMREF;
      112      107
      113      108    1     DCL M$LO DCB;
      114      109
      115      110          %FPT_PROMPT ( VFC = YES );
      116      138    1     DCL VLP_PROMPT_DOT CHAR(2) CONSTANT INIT('@.');
      117      139          %FPT_WRITE ( DCB = M$LO );
      118      170    1     DCL INDX_TXT CONSTANT CHAR(0) INIT('(all)edtcmded1ed2ed3ed4ed5ed6ed7ed8ed9');
      119      171
      120      172          %INCLUDE VD_MACROS_M;
      121     2387
      122     2388          %VD$NODE_DESC ( NAME = RGET_NODE_DESC,
      123     2389                         STCLASS = PARAM );
      124     2431          %FPT_SINPUT (STCLASS=PARAM);
      125     2468
      126     2469    1     DCL VDP_KEY$ PTR SYMREF;
      127     2470    1     DCL VDP_KEY_AND_BUFFER$ PTR SYMREF;
      128     2471
      129     2472          %VD$BLOCK_DESC;
      130     2619          %VD$BUFFER (STCLASS="BASED(KEY_AND_BUFFER$)");
      131     2677          %VD$BUFFER_HEADER;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:24   
      132     2713          %VD$KEY;
      133     2727          %VD$NAME_SPEC;
      134     2775          %VD$NUMBER;
      135     2820          %VD$POINTER;
      136     2865          %VD$TEXTC;
      137     2888          %VD$TEXTC_REMOTE;
      138     2949          %VD$WINDOW_SPEC (NAME=WINDOW$SPEC, STCLASS="BASED(RGET_NODE_DESC.SPEC.V$)");
      139     3015
      140     3016    1     DCL CANNED_FORMATTED_NUMBER_KEY CHAR(10) CONSTANT
      141     3017    1       INIT ( '     .000 ' );
      142     3018
      143     3019    1     DCL ACTUAL_DATA_INDEX SBIN;
      144     3020    1     DCL KEY_FORMAT_END_INDEX REDEF ACTUAL_DATA_INDEX SBIN;
      145     3021    1     DCL KEY_AND_BUFFER$ PTR;
      146     3022    1     DCL DATA_CLS SBIN;
      147     3023    1     DCL BLOCK$ PTR;
      148     3024    1     DCL DATA$ PTR;
      149     3025    1     DCL INDX SBIN;
      150     3026    1     DCL DECIMAL_POINT_INDEX UBIN;
      151     3027    1     DCL FORMATTED_NUMBER_KEY CHAR(10);
      152     3028    1     DCL CURRENT_KEY$ PTR;
      153     3029
      154     3030    1     DCL VDG$FORMAT_BLOCK_DESC ENTRY(5);
      155     3031    1     DCL VDG$FORMAT_KEY ENTRY (5);
      156     3032    1     DCL VDG$FORMAT_NUMBER ENTRY(6);
      157     3033    1     DCL VDG$FORMAT_WINDOW_SPEC ENTRY(5);
      158     3034    1     DCL VDG$MONERR ENTRY ALTRET;
      159     3035    1     DCL VDG$OALLOC ENTRY (3) ALTRET;
      160     3036        %EJECT;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:25   
      161     3037            %GETKEY ( KEY = RGET_NODE_DESC.KEY, PTR = CURRENT_KEY$);
      162     3047
      163     3048    1       FPT_PROMPT.V.DCB# = 0;
      164     3049    1       IF ADDR(FPT_SINPUT) ~= ADDR(NIL) THEN FPT_PROMPT.V.DCB# = FPT_SINPUT.V.DCB#;
      165     3050    1       DATA$ = RGET_NODE_DESC.DATA$;
      166     3051    1       INDX = 2;
      167     3052    1       IF FPT_PROMPT.V.DCB# ~= 0
      168     3053    1       THEN
      169     3054    1   REMEMBER_KEY_AND_MAYBE_BUFFER:
      170     3055    2         DO;
      171     3056    2           VDP_KEY$ -> VD$TEXTC_REMOTE.LENGTH# = CURRENT_KEY$ -> VD$TEXTC.LENGTH#;
      172     3057    2           VDP_KEY$ -> VD$TEXTC_REMOTE.BYTES = CURRENT_KEY$ -> VD$TEXTC.BYTES;
      173     3058
      174     3059    2           IF RGET_NODE_DESC.DATA$ -> VD$BUFFER.LENGTH# = 0
      175     3060    2           THEN
      176     3061    2             FPT_SINPUT.BUF_ = VECTOR ( NIL );
      177     3062    2           ELSE
      178     3063    2             FPT_SINPUT.BUF_ = VECTOR ( RGET_NODE_DESC.DATA$ -> VD$BUFFER.BYTES );
      179     3064
      180     3065    2           CALL M$SINPUT ( FPT_SINPUT ) ALTRET ( SINPUT_FAILED );
      181     3066
      182     3067    2         END REMEMBER_KEY_AND_MAYBE_BUFFER;
      183     3068
      184     3069    1   OUTPUT_KEY_AND_OR_BUFFER:
      185     3070    2       DO;
      186     3071    2         IF RGET_NODE_DESC.SPEC.TYPE# ~= 0 /* No key for the string-file */
      187     3072    2         THEN
      188     3073    2   FORMAT_KEY:
      189     3074    3           DO;
      190     3075    3             IF VDP_KEY_AND_BUFFER$ = ADDR (NIL)
      191     3076    3             THEN
      192     3077    3   ALLOC_A_KEY_AND_BUFFER:
      193     3078    4               DO;
      194     3079    4                 CALL VDG$OALLOC ( %CLS_BUFFER,
      195     3080    4                   VDP_KEY_AND_BUFFER$,
      196     3081    4                   ( SIZEC ( VD$BUFFER_HEADER )
      197     3082    4                   + %MXNB_KEY
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:26   
      198     3083    4                   + %MXNB_DATA
      199     3084    4                   + ( %NB_PER_WORD - 1 ) )
      200     3085    4                   / %NB_PER_WORD )
      201     3086    4                   ALTRET ( OALLOC_FAILED );
      202     3087
      203     3088    4                 SUBSTR ( VDP_KEY_AND_BUFFER$ -> VD$BUFFER.BYTES, 0, 1 ) = '@';
      204     3089    4               END ALLOC_A_KEY_AND_BUFFER;
      205     3090
      206     3091    3             KEY_FORMAT_END_INDEX = 1;
      207     3092    3             KEY_AND_BUFFER$ = VDP_KEY_AND_BUFFER$;
      208     3093    3             IF RGET_NODE_DESC.SPEC.TYPE# = %SPT_NAME_SPEC AND
      209     3094    3               RGET_NODE_DESC.SPEC.V$ -> VD$NAME_SPEC.DATA_TYPE# = %NDT_KEYIN THEN
      210     3095    3               CALL FORMAT_STRING (RGET_NODE_DESC.KEY);
      211     3096    3             ELSE
      212     3097    3               CALL VDG$FORMAT_KEY ( RGET_NODE_DESC.KEY,
      213     3098    3                 %MXNB_KEY /* # of bytes in buffer */,
      214     3099    3                 VD$BUFFER.BYTES /* buffer to format into */,
      215     3100    3                 1 /* start index for formatting */,
      216     3101    3                 KEY_FORMAT_END_INDEX /* end index for formatting */ );
      217     3102
      218     3103    3             IF RGET_NODE_DESC.KEY.TYPE# = %KT_NUMBER
      219     3104    3             THEN
      220     3105    3   FORMAT_NUMBER_KEY:
      221     3106    4               DO;
      222     3107    4                 FORMATTED_NUMBER_KEY =
      223     3108    4                   SUBSTR ( VD$BUFFER.BYTES,
      224     3109    4                   1,
      225     3110    4                   KEY_FORMAT_END_INDEX - 1 );
      226     3111
      227     3112    4                 SUBSTR ( VD$BUFFER.BYTES, 1, 10 ) = ' ';
      228     3113
      229     3114    4                 SUBSTR ( VD$BUFFER.BYTES,
      230     3115    4                   11 - KEY_FORMAT_END_INDEX,
      231     3116    4                   KEY_FORMAT_END_INDEX - 1) =
      232     3117    4                   FORMATTED_NUMBER_KEY;
      233     3118
      234     3119    4                 ACTUAL_DATA_INDEX = 11;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:27   
      235     3120    4               END FORMAT_NUMBER_KEY;
      236     3121    3             ELSE IF RGET_NODE_DESC.KEY.TYPE# = %KT_EDITKEY
      237     3122    3               THEN
      238     3123    3   KEEP_FORMATTING_KEY:
      239     3124    4                 DO;
      240     3125    4                   FORMATTED_NUMBER_KEY =
      241     3126    4                     SUBSTR ( VD$BUFFER.BYTES,
      242     3127    4                     1,
      243     3128    4                     KEY_FORMAT_END_INDEX - 1 );
      244     3129
      245     3130    4                   SUBSTR ( VD$BUFFER.BYTES, 1, 10 ) =
      246     3131    4                     CANNED_FORMATTED_NUMBER_KEY;
      247     3132
      248     3133    4                   CALL INDEX ( DECIMAL_POINT_INDEX,
      249     3134    4                     '.',
      250     3135    4                     FORMATTED_NUMBER_KEY );
      251     3136
      252     3137    4                   SUBSTR ( VD$BUFFER.BYTES,
      253     3138    4                     6 - DECIMAL_POINT_INDEX /* leading blanks */,
      254     3139    4                     KEY_FORMAT_END_INDEX - 1 ) =
      255     3140    4                     FORMATTED_NUMBER_KEY;
      256     3141
      257     3142    4                   ACTUAL_DATA_INDEX = 11;
      258     3143    4                 END KEEP_FORMATTING_KEY;
      259     3144    3               ELSE
      260     3145    3   JUST_INCLUDE_KEY:
      261     3146    4                 DO;
      262     3147    4                   IF DATA$ -> VD$BUFFER.FLINK$ ~= ADDR(NIL)
      263     3148    4                   THEN
      264     3149    4   SHOW_AN_ARRAY_KEY:
      265     3150    5                     DO;
      266     3151    5                       SUBSTR ( VD$BUFFER.BYTES, KEY_FORMAT_END_INDEX, 5) = INDX_TXT;
      267     3152    5                       KEY_FORMAT_END_INDEX = KEY_FORMAT_END_INDEX + 5;
      268     3153    5                     END SHOW_AN_ARRAY_KEY;
      269     3154    4                   DECIMAL_POINT_INDEX = KEY_FORMAT_END_INDEX;
      270     3155    4   SHOW_NEXT_ARRAY_ITEM: ;
      271     3156    4                   ACTUAL_DATA_INDEX = MAXIMUM (DECIMAL_POINT_INDEX,20) + 1;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:28   
      272     3157    4                   SUBSTR ( VD$BUFFER.BYTES,
      273     3158    4                     DECIMAL_POINT_INDEX,
      274     3159    4                     ACTUAL_DATA_INDEX - DECIMAL_POINT_INDEX ) = ' ';
      275     3160
      276     3161    4                 END JUST_INCLUDE_KEY;
      277     3162
      278     3163    3             IF FPT_PROMPT.V.DCB# ~= 0
      279     3164    3             THEN
      280     3165    3   OUTPUT_KEY_ONLY:
      281     3166    4               DO;
      282     3167    4                 FPT_PROMPT.PROMPT_ = VECTOR ( SUBSTR ( VD$BUFFER.BYTES,
      283     3168    4                   0,
      284     3169    4                   MINIMUM ( ACTUAL_DATA_INDEX, 30 ) ) );
      285     3170
      286     3171    4                 SUBSTR ( VD$BUFFER.BYTES, 0, 1 ) = 'p';
      287     3172    4                 CALL M$PROMPT ( FPT_PROMPT )
      288     3173    4                   ALTRET ( PROMPT_FAILED );
      289     3174
      290     3175    4                 EXIT OUTPUT_KEY_AND_OR_BUFFER;
      291     3176    4               END OUTPUT_KEY_ONLY;
      292     3177    3             ELSE
      293     3178    3   OUTPUT_KEY_AND_BUFFER:
      294     3179    4               DO;
      295     3180    4                 DATA_CLS = DATA$ -> VD$BUFFER.OBJECT.CLASS#;
      296     3181    4                 IF RGET_NODE_DESC.SPEC.TYPE# = %SPT_WINDOW_SPEC THEN
      297     3182    4                   DATA_CLS = %CLS_WINDOW_SPEC;
      298     3183    4                 ELSE IF RGET_NODE_DESC.SPEC.TYPE# ~= %SPT_NAME_SPEC THEN
      299     3184    4                     DATA_CLS = %CLS_BUFFER;
      300     3185    5                   ELSE DO CASE (RGET_NODE_DESC.SPEC.V$ -> VD$NAME_SPEC.DATA_TYPE#);
      301     3186    5                       CASE (%NDT_LOCATION);
      302     3187    5                         IF DATA_CLS = %CLS_BUFFER THEN
      303     3188    5                           DATA_CLS = %CLS_MX; /* display ?? for not defined */
      304     3189
      305     3190    5                       CASE (%NDT_EQUALS);
      306     3191    5                         IF SUBSTR (VD$BUFFER.BYTES, 1, 7) = '$INTRO_'
      307     3192    5                           OR DATA_CLS = %CLS_BUFFER THEN
      308     3193    5                           DATA_CLS = %0;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:29   
      309     3194
      310     3195    5                       CASE (%NDT_KEYIN);
      311     3196    5                         DATA_CLS = %0;
      312     3197
      313     3198    5                       CASE (%NDT_SYNONYM);
      314     3199    5                         DATA_CLS = %CLS_BUFFER;
      315     3200    5                     END;
      316     3201
      317     3202    5                 DO SELECT (DATA_CLS);
      318     3203    5                   SELECT (%CLS_BLOCK_BUFFER, %CLS_PTR_BLOCK_DESC);
      319     3204    5                   IF DATA_CLS = %CLS_PTR_BLOCK_DESC THEN
      320     3205    5                     BLOCK$ = DATA$ -> VD$POINTER.V$;
      321     3206    5                   ELSE
      322     3207    5                     BLOCK$ =
      323     3208    5                       PINCRW (DATA$, SIZEW(VD$BUFFER_HEADER));
      324     3209    5                   CALL VDG$FORMAT_BLOCK_DESC (BLOCK$ -> VD$BLOCK_DESC,
      325     3210    5                     %MXNB_NAME_VALUE,
      326     3211    5                     VD$BUFFER.BYTES,
      327     3212    5                     ACTUAL_DATA_INDEX,
      328     3213    5                     ACTUAL_DATA_INDEX);
      329     3214
      330     3215    5                   SELECT (%CLS_PTR_KEY);
      331     3216    5                   CALL VDG$FORMAT_KEY (DATA$ -> VD$POINTER.V$ -> VD$KEY,
      332     3217    5                     %MXNB_NAME_VALUE,
      333     3218    5                     VD$BUFFER.BYTES,
      334     3219    5                     ACTUAL_DATA_INDEX,
      335     3220    5                     ACTUAL_DATA_INDEX);
      336     3221
      337     3222    5                   SELECT (%CLS_WINDOW_SPEC);
      338     3223    5                   CALL VDG$FORMAT_WINDOW_SPEC (WINDOW$SPEC,
      339     3224    5                     %MXNB_NAME_VALUE,
      340     3225    5                     VD$BUFFER.BYTES,
      341     3226    5                     ACTUAL_DATA_INDEX,
      342     3227    5                     ACTUAL_DATA_INDEX);
      343     3228
      344     3229
      345     3230    5                   SELECT (%0);
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:30   
      346     3231    5                   CALL FORMAT_STRING (DATA$ -> VD$BUFFER);
      347     3232
      348     3233    5                   SELECT (ELSE);
      349     3234    5                 CALL VDG$FORMAT_NUMBER (DATA_CLS,
      350     3235    5                   DATA$ -> VD$NUMBER.V#,
      351     3236    5                   %MXNB_NAME_VALUE,
      352     3237    5                   VD$BUFFER.BYTES,
      353     3238    5                   ACTUAL_DATA_INDEX,
      354     3239    5                   ACTUAL_DATA_INDEX);
      355     3240
      356     3241    5                 SELECT (%CLS_BUFFER);
      357     3242    5                 SUBSTR ( VD$BUFFER.BYTES,
      358     3243    5                   ACTUAL_DATA_INDEX,
      359     3244    5                   RGET_NODE_DESC.DATA$ -> VD$BUFFER.LENGTH# ) =
      360     3245    5                   RGET_NODE_DESC.DATA$ -> VD$BUFFER.BYTES;
      361     3246    5                 ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX +
      362     3247    5                   DATA$ -> VD$BUFFER.LENGTH#;
      363     3248    5                 END;
      364     3249
      365     3250    4             FPT_WRITE.BUF_ = VECTOR ( SUBSTR ( VD$BUFFER.BYTES,
      366     3251    4               1,
      367     3252    4               ACTUAL_DATA_INDEX - 1) );
      368     3253    4             IF DATA$ -> VD$BUFFER.FLINK$ = ADDR(NIL)
      369     3254    4             THEN EXIT;
      370     3255    4             IF DATA$ -> VD$BUFFER.LENGTH# > 0 THEN
      371     3256    4               CALL M$WRITE ( FPT_WRITE ) ALTRET ( WRITE_FAILED );
      372     3257    4             DATA$ = DATA$ -> VD$BUFFER.FLINK$;
      373     3258    4             INDX = INDX + 3;
      374     3259    4             SUBSTR ( VD$BUFFER.BYTES, DECIMAL_POINT_INDEX-4, 3) =
      375     3260    4               SUBSTR ( INDX_TXT, INDX, 3 );
      376     3261    4             GOTO SHOW_NEXT_ARRAY_ITEM;
      377     3262    4               END OUTPUT_KEY_AND_BUFFER;
      378     3263    3           END FORMAT_KEY;
      379     3264    2         ELSE
      380     3265    2   FORMAT_BUFFER:
      381     3266    3           DO;
      382     3267    3             IF FPT_PROMPT.V.DCB# ~= 0
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:31   
      383     3268    3             THEN
      384     3269    3   OUTPUT_NOTHING:
      385     3270    4               DO;
      386     3271    4                 FPT_PROMPT.PROMPT_ = VECTOR ( VLP_PROMPT_DOT );
      387     3272
      388     3273    4                 SUBSTR ( VD$BUFFER.BYTES,
      389     3274    4                   0,
      390     3275    4                   1 ) = '@';
      391     3276
      392     3277    4                 CALL M$PROMPT ( FPT_PROMPT )
      393     3278    4                   ALTRET ( PROMPT_FAILED );
      394     3279
      395     3280    4                 EXIT OUTPUT_KEY_AND_OR_BUFFER;
      396     3281    4               END OUTPUT_NOTHING;
      397     3282    3             ELSE
      398     3283    3   OUTPUT_BUFFER_ONLY:
      399     3284    4               DO;
      400     3285    4                 FPT_WRITE.BUF_ = VECTOR ( RGET_NODE_DESC.DATA$ -> VD$BUFFER.BYTES );
      401     3286    4                 IF DATA$ -> VD$BUFFER.LENGTH# = 0
      402     3287    4                 THEN
      403     3288    4                   FPT_WRITE.BUF_ = FPT_WRITE.KEY_; /* Handy VECTOR(NIL) */
      404     3289    4               END OUTPUT_BUFFER_ONLY;
      405     3290    3           END FORMAT_BUFFER;
      406     3291
      407     3292
      408     3293    2         CALL M$WRITE ( FPT_WRITE ) ALTRET ( WRITE_FAILED );
      409     3294
      410     3295    2       END OUTPUT_KEY_AND_OR_BUFFER;
      411     3296
      412     3297    1       RETURN;
      413     3298
      414     3299    1   PROMPT_FAILED:;
      415     3300    1   SINPUT_FAILED:;
      416     3301    1   WRITE_FAILED:;
      417     3302    1       CALL VDG$MONERR;
      418     3303
      419     3304    1   OALLOC_FAILED:
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:32   
      420     3305    1       ALTRETURN;
      421     3306
      422     3307        %EJECT;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:33   
      423     3308    1   FORMAT_STRING: PROC (PARM);
      424     3309        /*D* NAME: FORMAT_STRING.
      425     3310             Formats the key or buffer string parameter as a quote string,
      426     3311             expanding unprintables as control-values and doubling quotes.
      427     3312        */
      428     3313
      429     3314        %INCLUDE XU_MACRO_C;
      430     6408        %INCLUDE XU_SUBS_C;
      431     6500        %P$NODE (NAME=ASP_FUNKEY, STCLASS=SYMREF);
      432     6594        %P$NODE (NAME=HEX, STCLASS=SYMREF);
      433     6688        %P$NODE (NAME=NOD, STCLASS=BASED);
      434     6782        %P$LIT (STCLASS=BASED);
      435     6835    2     DCL PARM(0:0) CHAR(1) CALIGNED;
      436     6836
      437     6837    2     DCL MAX_FROM SBIN;
      438     6838    2     DCL STRING_START SBIN;
      439     6839    2     DCL K SBIN;
      440     6840    2     DCL LIT$ PTR;
      441     6841    2     DCL CURR_FROM SBIN;
      442     6842    2     DCL CURR_CHAR UBIN;
      443     6843    2     DCL 1 CURR REDEF CURR_CHAR,
      444     6844    2           2 * BIT(27),
      445     6845    2           2 CHR CHAR(1);
      446     6846
      447     6847    3       IF ACTUAL_DATA_INDEX = 1 THEN DO; /* Must be a keyin name (key) */
      448     6848    3           CURR_FROM = 5;
      449     6849    3           MAX_FROM = ADDR (PARM(4)) -> VD$TEXTC.LENGTH# + 5;
      450     6850    3         END; ELSE DO;
      451     6851    3           CURR_FROM = LENGTHC (VD$BUFFER_HEADER);
      452     6852    3           MAX_FROM = CURR_FROM + ADDR(PARM) -> VD$BUFFER.LENGTH#;
      453     6853    3         END;
      454     6854
      455     6855    2       CURR_CHAR = 0;
      456     6856    2       SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX, 1) = '''';
      457     6857    2       STRING_START = 0;
      458     6858    3       DO WHILE CURR_FROM < MAX_FROM;
      459     6859    3         ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + 1;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:34   
      460     6860    3         CURR.CHR = PARM (CURR_FROM);
      461     6861    3         SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX, 1) = CURR.CHR;
      462     6862    3         CURR_FROM = CURR_FROM + 1;
      463     6863    4         IF CURR_CHAR = ASCBIN('''') THEN DO;
      464     6864    4             SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX+1, 1) = CURR.CHR;
      465     6865    4             ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + 1;
      466     6866    4           END;
      467     6867    3         IF CURR_CHAR < 32 THEN CALL PUTLIT (HEX.SUBNDS$(CURR_CHAR)->P$LIT);
      468     6868    3         ELSE IF CURR_CHAR = 127 THEN CALL PUTLIT (HEX.SUBNDS$(33)->P$LIT);
      469     6869    3           ELSE IF CURR_CHAR>127 THEN
      470     6870    4               IF CURR_CHAR<256 OR STRING_START>0 THEN DO;
      471     6871    4                   SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX, 7) = '%V(000)';
      472     6872    4                   CALL BINCHAR (SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX+3, 3),
      473     6873    4                     CURR_CHAR);
      474     6874    4                   ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + 6;
      475     6875    4                   STRING_START = 2;
      476     6876    4                 END;
      477     6877    4               ELSE DO K=0 TO ASP_FUNKEY.NSUBNDS-1;
      478     6878    5                   IF ASP_FUNKEY.SUBNDS$(K)->P$LIT.CODE = CURR_CHAR-256 THEN DO;
      479     6879    5                       IF ASP_FUNKEY.SUBNDS$(K)->P$LIT.TYPE = %TYPE_LITERAL# THEN
      480     6880    5                         CALL PUTLIT (ASP_FUNKEY.SUBNDS$(K)->P$LIT);
      481     6881    5                       ELSE CALL PUTLIT (ASP_FUNKEY.SUBNDS$(K)->NOD.SUBNDS$(0)->P$LIT);
      482     6882    5                       K = ASP_FUNKEY.NSUBNDS;
      483     6883    5                     END;
      484     6884    4                 END;
      485     6885    3             ELSE STRING_START = 2;
      486     6886    3       END;
      487     6887    3       IF STRING_START ~= 1 THEN DO;
      488     6888    3           SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX+1, 1) = '''';
      489     6889    3           ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + 1;
      490     6890    3           ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + 1;
      491     6891    3         END;
      492     6892    2       ELSE SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX, 1) = ' ';
      493     6893    2       RETURN;
      494     6894
      495     6895    2   PUTLIT: PROC (LIT);
      496     6896        %P$LIT (NAME=LIT, STCLASS=);
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:35   
      497     6949
      498     6950    3       IF STRING_START > 1 THEN
      499     6951    3         SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX, 1) = '''';
      500     6952    3       ELSE ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX - 2;
      501     6953
      502     6954    3       SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX + 1, 1) = '<';
      503     6955    3       K = LIT.ABREV;
      504     6956    3       IF K = 0 THEN K = LIT.COUNT;
      505     6957    3       SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX + 2, K) =
      506     6958    3         SUBSTR (LIT.TEXT, 0, K);
      507     6959    3       ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + K + 3;
      508     6960    3       SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX - 1, 2) = '>''';
      509     6961    3       STRING_START = 1;
      510     6962    3       RETURN;
      511     6963    3   END PUTLIT;
      512     6964    2   END FORMAT_STRING;
      513     6965    1   END VDP$WFORMAT_RECORD;
      514     6966        %EOD;

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:36   
--  Include file information  --

   XU_SUBS_C.:LIBRARY  is referenced.
   XU_MACRO_C.:LIBRARY  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WFORMAT_RECORD.

   Procedure VDP$WFORMAT_RECORD requires 620 words for executable code.
   Procedure VDP$WFORMAT_RECORD requires 32 words of local(AUTO) storage.

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:37   

 Object Unit name= VDP$WFORMAT_RECORD                         File name= VDP$WINDOW_I_O.:VDA5TOU
 UTS= JUL 04 '97 11:39:43.24 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none    22     26  VDP$WFORMAT_RECORD
    3  RoData even  UTS     19     23  VDP$WFORMAT_RECORD
    4   Proc  even  none   620   1154  VDP$WFORMAT_RECORD
    5  RoData even  none    18     22  VDP$WFORMAT_RECORD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        2  VDP$WFORMAT_RECORD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 VDG$OALLOC
         yes           Std       6 VDG$FORMAT_NUMBER
 yes     yes           Std       0 VDG$MONERR
         yes           Std       5 VDG$FORMAT_KEY
         yes           Std       5 VDG$FORMAT_BLOCK_DESC
         yes           Std       5 VDG$FORMAT_WINDOW_SPEC
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:38   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  VDP_KEY$
     VDP_KEY_AND_BUFFER$                   ASP_FUNKEY                            HEX
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:39   


       95        1        /*M* VDP$WFORMAT_RECORD:  Format a record for 1D input or output.  */
       96        2        /*T***********************************************************/
       97        3        /*T*                                                         */
       98        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       99        5        /*T*                                                         */
      100        6        /*T***********************************************************/
      101        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
      102        8
      103        9        VDP$WFORMAT_RECORD: PROC ( RGET_NODE_DESC,

      9  4 000000   000000 700200 xent  VDP$WFORMAT* TSX0  ! X66_AUTO_2
         4 000001   000040 000002                    ZERO    32,2

      104       10              FPT_SINPUT )
      105       11              ALTRET;
      106       12
      107       13          %INCLUDE CP_6;
      108       94
      109       95            %B$TCB;
      110       98            %B$ALT;
      111      106    1     DCL B$TCB$ PTR SYMREF;
      112      107
      113      108    1     DCL M$LO DCB;
      114      109
      115      110          %FPT_PROMPT ( VFC = YES );
      116      138    1     DCL VLP_PROMPT_DOT CHAR(2) CONSTANT INIT('@.');
      117      139          %FPT_WRITE ( DCB = M$LO );
      118      170    1     DCL INDX_TXT CONSTANT CHAR(0) INIT('(all)edtcmded1ed2ed3ed4ed5ed6ed7ed8ed9');
      119      171
      120      172          %INCLUDE VD_MACROS_M;
      121     2387
      122     2388          %VD$NODE_DESC ( NAME = RGET_NODE_DESC,
      123     2389                         STCLASS = PARAM );
      124     2431          %FPT_SINPUT (STCLASS=PARAM);
      125     2468
      126     2469    1     DCL VDP_KEY$ PTR SYMREF;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:40   
      127     2470    1     DCL VDP_KEY_AND_BUFFER$ PTR SYMREF;
      128     2471
      129     2472          %VD$BLOCK_DESC;
      130     2619          %VD$BUFFER (STCLASS="BASED(KEY_AND_BUFFER$)");
      131     2677          %VD$BUFFER_HEADER;
      132     2713          %VD$KEY;
      133     2727          %VD$NAME_SPEC;
      134     2775          %VD$NUMBER;
      135     2820          %VD$POINTER;
      136     2865          %VD$TEXTC;
      137     2888          %VD$TEXTC_REMOTE;
      138     2949          %VD$WINDOW_SPEC (NAME=WINDOW$SPEC, STCLASS="BASED(RGET_NODE_DESC.SPEC.V$)");
      139     3015
      140     3016    1     DCL CANNED_FORMATTED_NUMBER_KEY CHAR(10) CONSTANT
      141     3017    1       INIT ( '     .000 ' );
      142     3018
      143     3019    1     DCL ACTUAL_DATA_INDEX SBIN;
      144     3020    1     DCL KEY_FORMAT_END_INDEX REDEF ACTUAL_DATA_INDEX SBIN;
      145     3021    1     DCL KEY_AND_BUFFER$ PTR;
      146     3022    1     DCL DATA_CLS SBIN;
      147     3023    1     DCL BLOCK$ PTR;
      148     3024    1     DCL DATA$ PTR;
      149     3025    1     DCL INDX SBIN;
      150     3026    1     DCL DECIMAL_POINT_INDEX UBIN;
      151     3027    1     DCL FORMATTED_NUMBER_KEY CHAR(10);
      152     3028    1     DCL CURRENT_KEY$ PTR;
      153     3029
      154     3030    1     DCL VDG$FORMAT_BLOCK_DESC ENTRY(5);
      155     3031    1     DCL VDG$FORMAT_KEY ENTRY (5);
      156     3032    1     DCL VDG$FORMAT_NUMBER ENTRY(6);
      157     3033    1     DCL VDG$FORMAT_WINDOW_SPEC ENTRY(5);
      158     3034    1     DCL VDG$MONERR ENTRY ALTRET;
      159     3035    1     DCL VDG$OALLOC ENTRY (3) ALTRET;
      160     3036        %EJECT;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:41   
      161     3037            %GETKEY ( KEY = RGET_NODE_DESC.KEY, PTR = CURRENT_KEY$);

   3044  4 000002   200003 470500                    LDP0    @RGET_NODE_DESC,,AUTO
         4 000003   000000 720100                    LXL0    0,,PR0
         4 000004   000002 100003                    CMPX0   2,DU
         4 000005   000012 601000 4                  TNZ     s:3044+8

   3044  4 000006   000001 471500                    LDP1    1,,PR0
         4 000007   100002 633500                    EPPR3   2,,PR1
         4 000010   200017 453500                    STP3    CURRENT_KEY$,,AUTO
         4 000011   000015 710000 4                  TRA     s:3048

   3044  4 000012   200003 236100                    LDQ     @RGET_NODE_DESC,,AUTO
         4 000013   000001 036003                    ADLQ    1,DU
         4 000014   200017 756100                    STQ     CURRENT_KEY$,,AUTO

      162     3047
      163     3048    1       FPT_PROMPT.V.DCB# = 0;

   3048  4 000015   000000 221003                    LDX1    0,DU
         4 000016   000006 741000 2                  STX1    FPT_PROMPT+6

      164     3049    1       IF ADDR(FPT_SINPUT) ~= ADDR(NIL) THEN FPT_PROMPT.V.DCB# = FPT_SINPUT.V.DCB#;

   3049  4 000017   200004 236100                    LDQ     @FPT_SINPUT,,AUTO
         4 000020   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000021   000025 600000 4                  TZE     s:3050

   3049  4 000022   200004 471500                    LDP1    @FPT_SINPUT,,AUTO
         4 000023   100006 220100                    LDX0    6,,PR1
         4 000024   000006 740000 2                  STX0    FPT_PROMPT+6

      165     3050    1       DATA$ = RGET_NODE_DESC.DATA$;

   3050  4 000025   000004 236100                    LDQ     4,,PR0
         4 000026   200011 756100                    STQ     DATA$,,AUTO

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:42   
      166     3051    1       INDX = 2;

   3051  4 000027   000002 235007                    LDA     2,DL
         4 000030   200012 755100                    STA     INDX,,AUTO

      167     3052    1       IF FPT_PROMPT.V.DCB# ~= 0

   3052  4 000031   000006 220000 2                  LDX0    FPT_PROMPT+6
         4 000032   000074 600000 4                  TZE     OUTPUT_KEY_AND_OR_BUFFER

      168     3053    1       THEN
      169     3054    1   REMEMBER_KEY_AND_MAYBE_BUFFER:
      170     3055    2         DO;

   3055  4 000033                       REMEMBER_KE* null
      171     3056    2           VDP_KEY$ -> VD$TEXTC_REMOTE.LENGTH# = CURRENT_KEY$ -> VD$TEXTC.LENGTH#;

   3056  4 000033   200017 471500                    LDP1    CURRENT_KEY$,,AUTO
         4 000034   000000 473400 xsym               LDP3    VDP_KEY$
         4 000035   100000 236100                    LDQ     0,,PR1
         4 000036   300002 552140                    STBQ    2,'40'O,PR3

      172     3057    2           VDP_KEY$ -> VD$TEXTC_REMOTE.BYTES = CURRENT_KEY$ -> VD$TEXTC.BYTES;

   3057  4 000037   300002 236100                    LDQ     2,,PR3
         4 000040   000033 772000                    QRL     27
         4 000041   000000 620006                    EAX0    0,QL
         4 000042   100000 236100                    LDQ     0,,PR1
         4 000043   000033 772000                    QRL     27
         4 000044   000000 622006                    EAX2    0,QL
         4 000045   040140 100540                    MLR     fill='040'O
         4 000046   100000 200012                    ADSC9   0,,PR1                   cn=1,n=*X2
         4 000047   300002 200010                    ADSC9   2,,PR3                   cn=1,n=*X0

      173     3058
      174     3059    2           IF RGET_NODE_DESC.DATA$ -> VD$BUFFER.LENGTH# = 0

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:43   
   3059  4 000050   000004 474500                    LDP4    4,,PR0
         4 000051   400002 222100                    LDX2    2,,PR4
         4 000052   000057 601000 4                  TNZ     s:3063

      175     3060    2           THEN
      176     3061    2             FPT_SINPUT.BUF_ = VECTOR ( NIL );

   3061  4 000053   000000 237000 5                  LDAQ    0
         4 000054   200004 475500                    LDP5    @FPT_SINPUT,,AUTO
         4 000055   500004 757100                    STAQ    4,,PR5
         4 000056   000070 710000 4                  TRA     s:3065

      177     3062    2           ELSE
      178     3063    2             FPT_SINPUT.BUF_ = VECTOR ( RGET_NODE_DESC.DATA$ -> VD$BUFFER.BYTES );

   3063  4 000057   000000 636012                    EAQ     0,X2
         4 000060   000022 732000                    QRS     18
         4 000061   000064 737000                    LLS     52
         4 000062   000140 135007                    SBLA    96,DL
         4 000063   200032 454500                    STP4    @LIT+1,,AUTO
         4 000064   200032 236100                    LDQ     @LIT+1,,AUTO
         4 000065   000002 036000 5                  ADLQ    2
         4 000066   200004 475500                    LDP5    @FPT_SINPUT,,AUTO
         4 000067   500004 757100                    STAQ    4,,PR5

      179     3064
      180     3065    2           CALL M$SINPUT ( FPT_SINPUT ) ALTRET ( SINPUT_FAILED );

   3065  4 000070   500000 630500                    EPPR0   0,,PR5
         4 000071   560013 713400                    CLIMB   alt,+57355
         4 000072   401000 401760                    pmme    nvectors=3
         4 000073   000647 702000 4                  TSX2    PROMPT_FAILED

      181     3066
      182     3067    2         END REMEMBER_KEY_AND_MAYBE_BUFFER;

      183     3068
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:44   
      184     3069    1   OUTPUT_KEY_AND_OR_BUFFER:
      185     3070    2       DO;

   3070  4 000074                       OUTPUT_KEY_* null
      186     3071    2         IF RGET_NODE_DESC.SPEC.TYPE# ~= 0 /* No key for the string-file */

   3071  4 000074   200003 470500                    LDP0    @RGET_NODE_DESC,,AUTO
         4 000075   000002 220100                    LDX0    2,,PR0
         4 000076   000607 600000 4                  TZE     FORMAT_BUFFER

      187     3072    2         THEN
      188     3073    2   FORMAT_KEY:
      189     3074    3           DO;

   3074  4 000077                       FORMAT_KEY   null
      190     3075    3             IF VDP_KEY_AND_BUFFER$ = ADDR (NIL)

   3075  4 000077   000000 236000 xsym               LDQ     VDP_KEY_AND_BUFFER$
         4 000100   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000101   000112 601000 4                  TNZ     s:3091

      191     3076    3             THEN
      192     3077    3   ALLOC_A_KEY_AND_BUFFER:
      193     3078    4               DO;

   3078  4 000102                       ALLOC_A_KEY* null
      194     3079    4                 CALL VDG$OALLOC ( %CLS_BUFFER,

   3079  4 000102   000004 630400 5                  EPPR0   4
         4 000103   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000104   000000 701000 xent               TSX1    VDG$OALLOC
         4 000105   000652 702000 4                  TSX2    OALLOC_FAILED

      195     3080    4                   VDP_KEY_AND_BUFFER$,
      196     3081    4                   ( SIZEC ( VD$BUFFER_HEADER )
      197     3082    4                   + %MXNB_KEY
      198     3083    4                   + %MXNB_DATA
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:45   
      199     3084    4                   + ( %NB_PER_WORD - 1 ) )
      200     3085    4                   / %NB_PER_WORD )
      201     3086    4                   ALTRET ( OALLOC_FAILED );
      202     3087
      203     3088    4                 SUBSTR ( VDP_KEY_AND_BUFFER$ -> VD$BUFFER.BYTES, 0, 1 ) = '@';

   3088  4 000106   000000 470400 xsym               LDP0    VDP_KEY_AND_BUFFER$
         4 000107   000002 220100                    LDX0    2,,PR0
         4 000110   100000 236007                    LDQ     32768,DL
         4 000111   000002 552110                    STBQ    2,'10'O,PR0

      204     3089    4               END ALLOC_A_KEY_AND_BUFFER;

      205     3090
      206     3091    3             KEY_FORMAT_END_INDEX = 1;

   3091  4 000112   000001 235007                    LDA     1,DL
         4 000113   200005 755100                    STA     ACTUAL_DATA_INDEX,,AUTO

      207     3092    3             KEY_AND_BUFFER$ = VDP_KEY_AND_BUFFER$;

   3092  4 000114   000000 236000 xsym               LDQ     VDP_KEY_AND_BUFFER$
         4 000115   200006 756100                    STQ     KEY_AND_BUFFER$,,AUTO

      208     3093    3             IF RGET_NODE_DESC.SPEC.TYPE# = %SPT_NAME_SPEC AND

   3093  4 000116   200003 470500                    LDP0    @RGET_NODE_DESC,,AUTO
         4 000117   000002 220100                    LDX0    2,,PR0
         4 000120   000003 100003                    CMPX0   3,DU
         4 000121   000133 601000 4                  TNZ     s:3097
         4 000122   000003 471500                    LDP1    3,,PR0
         4 000123   100002 721100                    LXL1    2,,PR1
         4 000124   000004 101003                    CMPX1   4,DU
         4 000125   000133 601000 4                  TNZ     s:3097

      209     3094    3               RGET_NODE_DESC.SPEC.V$ -> VD$NAME_SPEC.DATA_TYPE# = %NDT_KEYIN THEN
      210     3095    3               CALL FORMAT_STRING (RGET_NODE_DESC.KEY);
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:46   

   3095  4 000126   200003 236100                    LDQ     @RGET_NODE_DESC,,AUTO
         4 000127   200021 756100                    STQ     CURRENT_KEY$+2,,AUTO
         4 000130   000653 701000 4                  TSX1    FORMAT_STRING
         4 000131   000000 011000                    NOP     0
         4 000132   000151 710000 4                  TRA     s:3103

      211     3096    3             ELSE
      212     3097    3               CALL VDG$FORMAT_KEY ( RGET_NODE_DESC.KEY,

   3097  4 000133   200005 631500                    EPPR1   ACTUAL_DATA_INDEX,,AUTO
         4 000134   200036 451500                    STP1    @LIT+5,,AUTO
         4 000135   000010 236000 5                  LDQ     8
         4 000136   200035 756100                    STQ     @LIT+4,,AUTO
         4 000137   200006 236100                    LDQ     KEY_AND_BUFFER$,,AUTO
         4 000140   000002 036000 5                  ADLQ    2
         4 000141   200034 756100                    STQ     @LIT+3,,AUTO
         4 000142   000011 236000 5                  LDQ     9
         4 000143   200003 235100                    LDA     @RGET_NODE_DESC,,AUTO
         4 000144   200032 757100                    STAQ    @LIT+1,,AUTO
         4 000145   200032 630500                    EPPR0   @LIT+1,,AUTO
         4 000146   000023 631400 xsym               EPPR1   B_VECTNIL+19
         4 000147   000000 701000 xent               TSX1    VDG$FORMAT_KEY
         4 000150   000000 011000                    NOP     0

      213     3098    3                 %MXNB_KEY /* # of bytes in buffer */,
      214     3099    3                 VD$BUFFER.BYTES /* buffer to format into */,
      215     3100    3                 1 /* start index for formatting */,
      216     3101    3                 KEY_FORMAT_END_INDEX /* end index for formatting */ );
      217     3102
      218     3103    3             IF RGET_NODE_DESC.KEY.TYPE# = %KT_NUMBER

   3103  4 000151   200003 470500                    LDP0    @RGET_NODE_DESC,,AUTO
         4 000152   000000 220100                    LDX0    0,,PR0
         4 000153   000001 100003                    CMPX0   1,DU
         4 000154   000200 601000 4                  TNZ     s:3121

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:47   
      219     3104    3             THEN
      220     3105    3   FORMAT_NUMBER_KEY:
      221     3106    4               DO;

   3106  4 000155                       FORMAT_NUMB* null
      222     3107    4                 FORMATTED_NUMBER_KEY =

   3107  4 000155   200006 471500                    LDP1    KEY_AND_BUFFER$,,AUTO
         4 000156   100002 221100                    LDX1    2,,PR1
         4 000157   200005 722100                    LXL2    ACTUAL_DATA_INDEX,,AUTO
         4 000160   777777 623012                    EAX3    -1,X2
         4 000161   040100 100540                    MLR     fill='040'O
         4 000162   100002 600013                    ADSC9   2,,PR1                   cn=3,n=*X3
         4 000163   200014 000012                    ADSC9   FORMATTED_NUMBER_KEY,,AUTO cn=0,n=10

      223     3108    4                   SUBSTR ( VD$BUFFER.BYTES,
      224     3109    4                   1,
      225     3110    4                   KEY_FORMAT_END_INDEX - 1 );
      226     3111
      227     3112    4                 SUBSTR ( VD$BUFFER.BYTES, 1, 10 ) = ' ';

   3112  4 000164   040100 100400                    MLR     fill='040'O
         4 000165   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000166   100002 600012                    ADSC9   2,,PR1                   cn=3,n=10

      228     3113
      229     3114    4                 SUBSTR ( VD$BUFFER.BYTES,

   3114  4 000167   200005 720100                    LXL0    ACTUAL_DATA_INDEX,,AUTO
         4 000170   777777 622010                    EAX2    -1,X0
         4 000171   200005 335100                    LCA     ACTUAL_DATA_INDEX,,AUTO
         4 000172   040145 100500                    MLR     fill='040'O
         4 000173   200014 000012                    ADSC9   FORMATTED_NUMBER_KEY,,AUTO cn=0,n=10
         4 000174   100005 200012                    ADSC9   5,A,PR1                  cn=1,n=*X2

      230     3115    4                   11 - KEY_FORMAT_END_INDEX,
      231     3116    4                   KEY_FORMAT_END_INDEX - 1) =
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:48   
      232     3117    4                   FORMATTED_NUMBER_KEY;
      233     3118
      234     3119    4                 ACTUAL_DATA_INDEX = 11;

   3119  4 000175   000013 235007                    LDA     11,DL
         4 000176   200005 755100                    STA     ACTUAL_DATA_INDEX,,AUTO

      235     3120    4               END FORMAT_NUMBER_KEY;

   3120  4 000177   000266 710000 4                  TRA     s:3163

      236     3121    3             ELSE IF RGET_NODE_DESC.KEY.TYPE# = %KT_EDITKEY

   3121  4 000200   000003 100003                    CMPX0   3,DU
         4 000201   000232 601000 4                  TNZ     JUST_INCLUDE_KEY

      237     3122    3               THEN
      238     3123    3   KEEP_FORMATTING_KEY:
      239     3124    4                 DO;

   3124  4 000202                       KEEP_FORMAT* null
      240     3125    4                   FORMATTED_NUMBER_KEY =

   3125  4 000202   200006 471500                    LDP1    KEY_AND_BUFFER$,,AUTO
         4 000203   100002 221100                    LDX1    2,,PR1
         4 000204   200005 722100                    LXL2    ACTUAL_DATA_INDEX,,AUTO
         4 000205   777777 623012                    EAX3    -1,X2
         4 000206   040100 100540                    MLR     fill='040'O
         4 000207   100002 600013                    ADSC9   2,,PR1                   cn=3,n=*X3
         4 000210   200014 000012                    ADSC9   FORMATTED_NUMBER_KEY,,AUTO cn=0,n=10

      241     3126    4                     SUBSTR ( VD$BUFFER.BYTES,
      242     3127    4                     1,
      243     3128    4                     KEY_FORMAT_END_INDEX - 1 );
      244     3129
      245     3130    4                   SUBSTR ( VD$BUFFER.BYTES, 1, 10 ) =

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:49   
   3130  4 000211   040100 100400                    MLR     fill='040'O
         4 000212   000013 000012 3                  ADSC9   CANNED_FORMATTED_NUMBER_KEY cn=0,n=10
         4 000213   100002 600012                    ADSC9   2,,PR1                   cn=3,n=10

      246     3131    4                     CANNED_FORMATTED_NUMBER_KEY;
      247     3132
      248     3133    4                   CALL INDEX ( DECIMAL_POINT_INDEX,

   3133  4 000214   000000 124500                    SCM     mask='000'O
         4 000215   200014 000012                    ADSC9   FORMATTED_NUMBER_KEY,,AUTO cn=0,n=10
         4 000216   000012 000001 5                  ADSC9   10                       cn=0,n=1
         4 000217   200013 000100                    ARG     DECIMAL_POINT_INDEX,,AUTO

      249     3134    4                     '.',
      250     3135    4                     FORMATTED_NUMBER_KEY );
      251     3136
      252     3137    4                   SUBSTR ( VD$BUFFER.BYTES,

   3137  4 000220   200005 720100                    LXL0    ACTUAL_DATA_INDEX,,AUTO
         4 000221   777777 622010                    EAX2    -1,X0
         4 000222   000000 235003                    LDA     0,DU
         4 000223   200013 135100                    SBLA    DECIMAL_POINT_INDEX,,AUTO
         4 000224   040145 100500                    MLR     fill='040'O
         4 000225   200014 000012                    ADSC9   FORMATTED_NUMBER_KEY,,AUTO cn=0,n=10
         4 000226   100004 000012                    ADSC9   4,A,PR1                  cn=0,n=*X2

      253     3138    4                     6 - DECIMAL_POINT_INDEX /* leading blanks */,
      254     3139    4                     KEY_FORMAT_END_INDEX - 1 ) =
      255     3140    4                     FORMATTED_NUMBER_KEY;
      256     3141
      257     3142    4                   ACTUAL_DATA_INDEX = 11;

   3142  4 000227   000013 236007                    LDQ     11,DL
         4 000230   200005 756100                    STQ     ACTUAL_DATA_INDEX,,AUTO

      258     3143    4                 END KEEP_FORMATTING_KEY;

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:50   
   3143  4 000231   000266 710000 4                  TRA     s:3163

      259     3144    3               ELSE
      260     3145    3   JUST_INCLUDE_KEY:
      261     3146    4                 DO;

   3146  4 000232                       JUST_INCLUD* null
      262     3147    4                   IF DATA$ -> VD$BUFFER.FLINK$ ~= ADDR(NIL)

   3147  4 000232   200011 471500                    LDP1    DATA$,,AUTO
         4 000233   100001 236100                    LDQ     1,,PR1
         4 000234   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000235   000246 600000 4                  TZE     s:3154

      263     3148    4                   THEN
      264     3149    4   SHOW_AN_ARRAY_KEY:
      265     3150    5                     DO;

   3150  4 000236                       SHOW_AN_ARR* null
      266     3151    5                       SUBSTR ( VD$BUFFER.BYTES, KEY_FORMAT_END_INDEX, 5) = INDX_TXT;

   3151  4 000236   200006 473500                    LDP3    KEY_AND_BUFFER$,,AUTO
         4 000237   300002 221100                    LDX1    2,,PR3
         4 000240   200005 235100                    LDA     ACTUAL_DATA_INDEX,,AUTO
         4 000241   040105 100400                    MLR     fill='040'O
         4 000242   000001 000005 3                  ADSC9   INDX_TXT                 cn=0,n=5
         4 000243   300002 400005                    ADSC9   2,A,PR3                  cn=2,n=5

      267     3152    5                       KEY_FORMAT_END_INDEX = KEY_FORMAT_END_INDEX + 5;

   3152  4 000244   000005 236007                    LDQ     5,DL
         4 000245   200005 056100                    ASQ     ACTUAL_DATA_INDEX,,AUTO

      268     3153    5                     END SHOW_AN_ARRAY_KEY;

      269     3154    4                   DECIMAL_POINT_INDEX = KEY_FORMAT_END_INDEX;

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:51   
   3154  4 000246   200005 235100                    LDA     ACTUAL_DATA_INDEX,,AUTO
         4 000247   200013 755100                    STA     DECIMAL_POINT_INDEX,,AUTO

   3154  4 000250                       SHOW_NEXT_A* null
      270     3155    4   SHOW_NEXT_ARRAY_ITEM: ;
      271     3156    4                   ACTUAL_DATA_INDEX = MAXIMUM (DECIMAL_POINT_INDEX,20) + 1;

   3156  4 000250   000024 236007                    LDQ     20,DL
         4 000251   200013 116100                    CMPQ    DECIMAL_POINT_INDEX,,AUTO
         4 000252   000254 603000 4                  TRC     SHOW_NEXT_ARRAY_ITEM+4
         4 000253   200013 236100                    LDQ     DECIMAL_POINT_INDEX,,AUTO
         4 000254   000001 036007                    ADLQ    1,DL
         4 000255   200005 756100                    STQ     ACTUAL_DATA_INDEX,,AUTO

      272     3157    4                   SUBSTR ( VD$BUFFER.BYTES,

   3157  4 000256   200006 470500                    LDP0    KEY_AND_BUFFER$,,AUTO
         4 000257   000002 220100                    LDX0    2,,PR0
         4 000260   200013 136100                    SBLQ    DECIMAL_POINT_INDEX,,AUTO
         4 000261   000000 621006                    EAX1    0,QL
         4 000262   200013 235100                    LDA     DECIMAL_POINT_INDEX,,AUTO
         4 000263   040145 100400                    MLR     fill='040'O
         4 000264   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000265   000002 400011                    ADSC9   2,A,PR0                  cn=2,n=*X1

      273     3158    4                     DECIMAL_POINT_INDEX,
      274     3159    4                     ACTUAL_DATA_INDEX - DECIMAL_POINT_INDEX ) = ' ';
      275     3160
      276     3161    4                 END JUST_INCLUDE_KEY;

      277     3162
      278     3163    3             IF FPT_PROMPT.V.DCB# ~= 0

   3163  4 000266   000006 220000 2                  LDX0    FPT_PROMPT+6
         4 000267   000314 600000 4                  TZE     OUTPUT_KEY_AND_BUFFER

      279     3164    3             THEN
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:52   
      280     3165    3   OUTPUT_KEY_ONLY:
      281     3166    4               DO;

   3166  4 000270                       OUTPUT_KEY_* null
      282     3167    4                 FPT_PROMPT.PROMPT_ = VECTOR ( SUBSTR ( VD$BUFFER.BYTES,

   3167  4 000270   200006 470500                    LDP0    KEY_AND_BUFFER$,,AUTO
         4 000271   000002 221100                    LDX1    2,,PR0
         4 000272   000036 236007                    LDQ     30,DL
         4 000273   000276 604000 4                  TMI     OUTPUT_KEY_ONLY+6
         4 000274   200005 116100                    CMPQ    ACTUAL_DATA_INDEX,,AUTO
         4 000275   000277 604400 4                  TMOZ    OUTPUT_KEY_ONLY+7
         4 000276   200005 236100                    LDQ     ACTUAL_DATA_INDEX,,AUTO
         4 000277   000064 737000                    LLS     52
         4 000300   000140 135007                    SBLA    96,DL
         4 000301   200006 236100                    LDQ     KEY_AND_BUFFER$,,AUTO
         4 000302   000002 036000 5                  ADLQ    2
         4 000303   000004 757000 2                  STAQ    FPT_PROMPT+4

      283     3168    4                   0,
      284     3169    4                   MINIMUM ( ACTUAL_DATA_INDEX, 30 ) ) );
      285     3170
      286     3171    4                 SUBSTR ( VD$BUFFER.BYTES, 0, 1 ) = 'p';

   3171  4 000304   000002 221100                    LDX1    2,,PR0
         4 000305   160000 236007                    LDQ     57344,DL
         4 000306   000002 552110                    STBQ    2,'10'O,PR0

      287     3172    4                 CALL M$PROMPT ( FPT_PROMPT )

   3172  4 000307   000000 630400 2                  EPPR0   FPT_PROMPT
         4 000310   560002 713400                    CLIMB   alt,+57346
         4 000311   401000 401760                    pmme    nvectors=3
         4 000312   000647 702000 4                  TSX2    PROMPT_FAILED

      288     3173    4                   ALTRET ( PROMPT_FAILED );
      289     3174
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:53   
      290     3175    4                 EXIT OUTPUT_KEY_AND_OR_BUFFER;

   3175  4 000313   000646 710000 4                  TRA     s:3297

      291     3176    4               END OUTPUT_KEY_ONLY;
      292     3177    3             ELSE
      293     3178    3   OUTPUT_KEY_AND_BUFFER:
      294     3179    4               DO;

   3179  4 000314                       OUTPUT_KEY_* null
      295     3180    4                 DATA_CLS = DATA$ -> VD$BUFFER.OBJECT.CLASS#;

   3180  4 000314   200011 470500                    LDP0    DATA$,,AUTO
         4 000315   000000 236100                    LDQ     0,,PR0
         4 000316   000022 772000                    QRL     18
         4 000317   200007 756100                    STQ     DATA_CLS,,AUTO

      296     3181    4                 IF RGET_NODE_DESC.SPEC.TYPE# = %SPT_WINDOW_SPEC THEN

   3181  4 000320   200003 471500                    LDP1    @RGET_NODE_DESC,,AUTO
         4 000321   100002 221100                    LDX1    2,,PR1
         4 000322   000006 101003                    CMPX1   6,DU
         4 000323   000327 601000 4                  TNZ     s:3183

      297     3182    4                   DATA_CLS = %CLS_WINDOW_SPEC;

   3182  4 000324   000055 235007                    LDA     45,DL
         4 000325   200007 755100                    STA     DATA_CLS,,AUTO
         4 000326   000371 710000 4                  TRA     s:3202

      298     3183    4                 ELSE IF RGET_NODE_DESC.SPEC.TYPE# ~= %SPT_NAME_SPEC THEN

   3183  4 000327   000003 101003                    CMPX1   3,DU
         4 000330   000334 600000 4                  TZE     s:3185

      299     3184    4                     DATA_CLS = %CLS_BUFFER;

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:54   
   3184  4 000331   000004 235007                    LDA     4,DL
         4 000332   200007 755100                    STA     DATA_CLS,,AUTO
         4 000333   000371 710000 4                  TRA     s:3202

      300     3185    5                   ELSE DO CASE (RGET_NODE_DESC.SPEC.V$ -> VD$NAME_SPEC.DATA_TYPE#);

   3185  4 000334   100003 473500                    LDP3    3,,PR1
         4 000335   300002 722100                    LXL2    2,,PR3
         4 000336   000005 102003                    CMPX2   5,DU
         4 000337   000341 602012 4                  TNC     s:3185+5,X2
         4 000340   000371 710000 4                  TRA     s:3202
         4 000341   000371 710000 4                  TRA     s:3202
         4 000342   000353 710000 4                  TRA     s:3191
         4 000343   000346 710000 4                  TRA     s:3187
         4 000344   000367 710000 4                  TRA     s:3199
         4 000345   000365 710000 4                  TRA     s:3196

      301     3186    5                       CASE (%NDT_LOCATION);

      302     3187    5                         IF DATA_CLS = %CLS_BUFFER THEN

   3187  4 000346   000004 116007                    CMPQ    4,DL
         4 000347   000371 601000 4                  TNZ     s:3202

      303     3188    5                           DATA_CLS = %CLS_MX; /* display ?? for not defined */

   3188  4 000350   000143 235007                    LDA     99,DL
         4 000351   200007 755100                    STA     DATA_CLS,,AUTO
         4 000352   000371 710000 4                  TRA     s:3202

      304     3189
      305     3190    5                       CASE (%NDT_EQUALS);

      306     3191    5                         IF SUBSTR (VD$BUFFER.BYTES, 1, 7) = '$INTRO_'

   3191  4 000353   200006 474500                    LDP4    KEY_AND_BUFFER$,,AUTO
         4 000354   400002 223100                    LDX3    2,,PR4
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:55   
         4 000355   040000 106500                    CMPC    fill='040'O
         4 000356   400002 600007                    ADSC9   2,,PR4                   cn=3,n=7
         4 000357   000016 000007 3                  ADSC9   CANNED_FORMATTED_NUMBER_KEY+3 cn=0,n=7
         4 000360   000363 600000 4                  TZE     s:3193
         4 000361   000004 116007                    CMPQ    4,DL
         4 000362   000371 601000 4                  TNZ     s:3202

      307     3192    5                           OR DATA_CLS = %CLS_BUFFER THEN
      308     3193    5                           DATA_CLS = %0;

   3193  4 000363   200007 450100                    STZ     DATA_CLS,,AUTO
         4 000364   000371 710000 4                  TRA     s:3202

      309     3194
      310     3195    5                       CASE (%NDT_KEYIN);

      311     3196    5                         DATA_CLS = %0;

   3196  4 000365   200007 450100                    STZ     DATA_CLS,,AUTO
         4 000366   000371 710000 4                  TRA     s:3202

      312     3197
      313     3198    5                       CASE (%NDT_SYNONYM);

      314     3199    5                         DATA_CLS = %CLS_BUFFER;

   3199  4 000367   000004 235007                    LDA     4,DL
         4 000370   200007 755100                    STA     DATA_CLS,,AUTO

      315     3200    5                     END;

      316     3201
      317     3202    5                 DO SELECT (DATA_CLS);

   3202  4 000371   200007 236100                    LDQ     DATA_CLS,,AUTO
         4 000372   000040 116007                    CMPQ    32,DL
         4 000373   000403 604000 4                  TMI     s:3202+10
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:56   
         4 000374   000414 600000 4                  TZE     s:3204
         4 000375   000043 116007                    CMPQ    35,DL
         4 000376   000510 604000 4                  TMI     s:3234
         4 000377   000443 600000 4                  TZE     s:3216
         4 000400   000055 116007                    CMPQ    45,DL
         4 000401   000510 601000 4                  TNZ     s:3234
         4 000402   000463 710000 4                  TRA     s:3223
         4 000403   000001 116007                    CMPQ    1,DL
         4 000404   000411 604000 4                  TMI     s:3202+16
         4 000405   000414 600000 4                  TZE     s:3204
         4 000406   000004 116007                    CMPQ    4,DL
         4 000407   000510 601000 4                  TNZ     s:3234
         4 000410   000532 710000 4                  TRA     s:3242
         4 000411   000000 116003                    CMPQ    0,DU
         4 000412   000510 601000 4                  TNZ     s:3234
         4 000413   000503 710000 4                  TRA     s:3231

      318     3203    5                   SELECT (%CLS_BLOCK_BUFFER, %CLS_PTR_BLOCK_DESC);

      319     3204    5                   IF DATA_CLS = %CLS_PTR_BLOCK_DESC THEN

   3204  4 000414   000040 116007                    CMPQ    32,DL
         4 000415   000421 601000 4                  TNZ     s:3207

      320     3205    5                     BLOCK$ = DATA$ -> VD$POINTER.V$;

   3205  4 000416   000003 236100                    LDQ     3,,PR0
         4 000417   200010 756100                    STQ     BLOCK$,,AUTO
         4 000420   000424 710000 4                  TRA     s:3209

      321     3206    5                   ELSE
      322     3207    5                     BLOCK$ =

   3207  4 000421   200011 236100                    LDQ     DATA$,,AUTO
         4 000422   000003 036003                    ADLQ    3,DU
         4 000423   200010 756100                    STQ     BLOCK$,,AUTO

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:57   
      323     3208    5                       PINCRW (DATA$, SIZEW(VD$BUFFER_HEADER));
      324     3209    5                   CALL VDG$FORMAT_BLOCK_DESC (BLOCK$ -> VD$BLOCK_DESC,

   3209  4 000424   200005 633500                    EPPR3   ACTUAL_DATA_INDEX,,AUTO
         4 000425   200036 453500                    STP3    @LIT+5,,AUTO
         4 000426   200005 634500                    EPPR4   ACTUAL_DATA_INDEX,,AUTO
         4 000427   200035 454500                    STP4    @LIT+4,,AUTO
         4 000430   200006 236100                    LDQ     KEY_AND_BUFFER$,,AUTO
         4 000431   000002 036000 5                  ADLQ    2
         4 000432   200034 756100                    STQ     @LIT+3,,AUTO
         4 000433   000014 236000 5                  LDQ     12
         4 000434   200010 235100                    LDA     BLOCK$,,AUTO
         4 000435   200032 757100                    STAQ    @LIT+1,,AUTO
         4 000436   200032 630500                    EPPR0   @LIT+1,,AUTO
         4 000437   000023 631400 xsym               EPPR1   B_VECTNIL+19
         4 000440   000000 701000 xent               TSX1    VDG$FORMAT_BLOCK_DESC
         4 000441   000000 011000                    NOP     0
         4 000442   000547 710000 4                  TRA     s:3250

      325     3210    5                     %MXNB_NAME_VALUE,
      326     3211    5                     VD$BUFFER.BYTES,
      327     3212    5                     ACTUAL_DATA_INDEX,
      328     3213    5                     ACTUAL_DATA_INDEX);
      329     3214
      330     3215    5                   SELECT (%CLS_PTR_KEY);

      331     3216    5                   CALL VDG$FORMAT_KEY (DATA$ -> VD$POINTER.V$ -> VD$KEY,

   3216  4 000443   000003 473500                    LDP3    3,,PR0
         4 000444   200005 634500                    EPPR4   ACTUAL_DATA_INDEX,,AUTO
         4 000445   200036 454500                    STP4    @LIT+5,,AUTO
         4 000446   200005 635500                    EPPR5   ACTUAL_DATA_INDEX,,AUTO
         4 000447   200035 455500                    STP5    @LIT+4,,AUTO
         4 000450   200006 236100                    LDQ     KEY_AND_BUFFER$,,AUTO
         4 000451   000002 036000 5                  ADLQ    2
         4 000452   200034 756100                    STQ     @LIT+3,,AUTO
         4 000453   000014 236000 5                  LDQ     12
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:58   
         4 000454   200033 756100                    STQ     @LIT+2,,AUTO
         4 000455   200032 453500                    STP3    @LIT+1,,AUTO
         4 000456   200032 630500                    EPPR0   @LIT+1,,AUTO
         4 000457   000023 631400 xsym               EPPR1   B_VECTNIL+19
         4 000460   000000 701000 xent               TSX1    VDG$FORMAT_KEY
         4 000461   000000 011000                    NOP     0
         4 000462   000547 710000 4                  TRA     s:3250

      332     3217    5                     %MXNB_NAME_VALUE,
      333     3218    5                     VD$BUFFER.BYTES,
      334     3219    5                     ACTUAL_DATA_INDEX,
      335     3220    5                     ACTUAL_DATA_INDEX);
      336     3221
      337     3222    5                   SELECT (%CLS_WINDOW_SPEC);

      338     3223    5                   CALL VDG$FORMAT_WINDOW_SPEC (WINDOW$SPEC,

   3223  4 000463   100003 473500                    LDP3    3,,PR1
         4 000464   200005 634500                    EPPR4   ACTUAL_DATA_INDEX,,AUTO
         4 000465   200036 454500                    STP4    @LIT+5,,AUTO
         4 000466   200005 635500                    EPPR5   ACTUAL_DATA_INDEX,,AUTO
         4 000467   200035 455500                    STP5    @LIT+4,,AUTO
         4 000470   200006 236100                    LDQ     KEY_AND_BUFFER$,,AUTO
         4 000471   000002 036000 5                  ADLQ    2
         4 000472   200034 756100                    STQ     @LIT+3,,AUTO
         4 000473   000014 236000 5                  LDQ     12
         4 000474   200033 756100                    STQ     @LIT+2,,AUTO
         4 000475   200032 453500                    STP3    @LIT+1,,AUTO
         4 000476   200032 630500                    EPPR0   @LIT+1,,AUTO
         4 000477   000023 631400 xsym               EPPR1   B_VECTNIL+19
         4 000500   000000 701000 xent               TSX1    VDG$FORMAT_WINDOW_SPEC
         4 000501   000000 011000                    NOP     0
         4 000502   000547 710000 4                  TRA     s:3250

      339     3224    5                     %MXNB_NAME_VALUE,
      340     3225    5                     VD$BUFFER.BYTES,
      341     3226    5                     ACTUAL_DATA_INDEX,
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:59   
      342     3227    5                     ACTUAL_DATA_INDEX);
      343     3228
      344     3229
      345     3230    5                   SELECT (%0);

      346     3231    5                   CALL FORMAT_STRING (DATA$ -> VD$BUFFER);

   3231  4 000503   200011 236100                    LDQ     DATA$,,AUTO
         4 000504   200021 756100                    STQ     CURRENT_KEY$+2,,AUTO
         4 000505   000653 701000 4                  TSX1    FORMAT_STRING
         4 000506   000000 011000                    NOP     0
         4 000507   000547 710000 4                  TRA     s:3250

      347     3232
      348     3233    5                   SELECT (ELSE);

      349     3234    5                 CALL VDG$FORMAT_NUMBER (DATA_CLS,

   3234  4 000510   200005 633500                    EPPR3   ACTUAL_DATA_INDEX,,AUTO
         4 000511   200037 453500                    STP3    @LIT+6,,AUTO
         4 000512   200005 634500                    EPPR4   ACTUAL_DATA_INDEX,,AUTO
         4 000513   200036 454500                    STP4    @LIT+5,,AUTO
         4 000514   200006 236100                    LDQ     KEY_AND_BUFFER$,,AUTO
         4 000515   000002 036000 5                  ADLQ    2
         4 000516   000014 235000 5                  LDA     12
         4 000517   200034 757100                    STAQ    @LIT+3,,AUTO
         4 000520   200011 236100                    LDQ     DATA$,,AUTO
         4 000521   000003 036003                    ADLQ    3,DU
         4 000522   200033 756100                    STQ     @LIT+2,,AUTO
         4 000523   200007 635500                    EPPR5   DATA_CLS,,AUTO
         4 000524   200032 455500                    STP5    @LIT+1,,AUTO
         4 000525   200032 630500                    EPPR0   @LIT+1,,AUTO
         4 000526   000024 631400 xsym               EPPR1   B_VECTNIL+20
         4 000527   000000 701000 xent               TSX1    VDG$FORMAT_NUMBER
         4 000530   000000 011000                    NOP     0
         4 000531   000547 710000 4                  TRA     s:3250

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:60   
      350     3235    5                   DATA$ -> VD$NUMBER.V#,
      351     3236    5                   %MXNB_NAME_VALUE,
      352     3237    5                   VD$BUFFER.BYTES,
      353     3238    5                   ACTUAL_DATA_INDEX,
      354     3239    5                   ACTUAL_DATA_INDEX);
      355     3240
      356     3241    5                 SELECT (%CLS_BUFFER);

      357     3242    5                 SUBSTR ( VD$BUFFER.BYTES,

   3242  4 000532   200006 473500                    LDP3    KEY_AND_BUFFER$,,AUTO
         4 000533   300002 221100                    LDX1    2,,PR3
         4 000534   100004 474500                    LDP4    4,,PR1
         4 000535   400002 222100                    LDX2    2,,PR4
         4 000536   400002 223100                    LDX3    2,,PR4
         4 000537   200005 235100                    LDA     ACTUAL_DATA_INDEX,,AUTO
         4 000540   040145 100540                    MLR     fill='040'O
         4 000541   400002 400013                    ADSC9   2,,PR4                   cn=2,n=*X3
         4 000542   300002 400012                    ADSC9   2,A,PR3                  cn=2,n=*X2

      358     3243    5                   ACTUAL_DATA_INDEX,
      359     3244    5                   RGET_NODE_DESC.DATA$ -> VD$BUFFER.LENGTH# ) =
      360     3245    5                   RGET_NODE_DESC.DATA$ -> VD$BUFFER.BYTES;
      361     3246    5                 ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX +

   3246  4 000543   000002 236100                    LDQ     2,,PR0
         4 000544   000022 732000                    QRS     18
         4 000545   200005 036100                    ADLQ    ACTUAL_DATA_INDEX,,AUTO
         4 000546   200005 756100                    STQ     ACTUAL_DATA_INDEX,,AUTO

      362     3247    5                   DATA$ -> VD$BUFFER.LENGTH#;
      363     3248    5                 END;

      364     3249
      365     3250    4             FPT_WRITE.BUF_ = VECTOR ( SUBSTR ( VD$BUFFER.BYTES,

   3250  4 000547   200006 470500                    LDP0    KEY_AND_BUFFER$,,AUTO
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:61   
         4 000550   000002 220100                    LDX0    2,,PR0
         4 000551   200005 235100                    LDA     ACTUAL_DATA_INDEX,,AUTO
         4 000552   000020 735000                    ALS     16
         4 000553   200140 135007                    SBLA    65632,DL
         4 000554   200006 236100                    LDQ     KEY_AND_BUFFER$,,AUTO
         4 000555   000015 036000 5                  ADLQ    13
         4 000556   000016 757000 2                  STAQ    FPT_WRITE+4

      366     3251    4               1,
      367     3252    4               ACTUAL_DATA_INDEX - 1) );
      368     3253    4             IF DATA$ -> VD$BUFFER.FLINK$ = ADDR(NIL)

   3253  4 000557   200011 471500                    LDP1    DATA$,,AUTO
         4 000560   100001 236100                    LDQ     1,,PR1
         4 000561   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000562   000606 600000 4                  TZE     s:3263

      369     3254    4             THEN EXIT;
      370     3255    4             IF DATA$ -> VD$BUFFER.LENGTH# > 0 THEN

   3255  4 000563   100002 220100                    LDX0    2,,PR1
         4 000564   000571 604400 4                  TMOZ    s:3257

      371     3256    4               CALL M$WRITE ( FPT_WRITE ) ALTRET ( WRITE_FAILED );

   3256  4 000565   000012 630400 2                  EPPR0   FPT_WRITE
         4 000566   440001 713400                    CLIMB   alt,write
         4 000567   401400 401760                    pmme    nvectors=4
         4 000570   000647 702000 4                  TSX2    PROMPT_FAILED

      372     3257    4             DATA$ = DATA$ -> VD$BUFFER.FLINK$;

   3257  4 000571   200011 470500                    LDP0    DATA$,,AUTO
         4 000572   000001 236100                    LDQ     1,,PR0
         4 000573   200011 756100                    STQ     DATA$,,AUTO

      373     3258    4             INDX = INDX + 3;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:62   

   3258  4 000574   000003 236007                    LDQ     3,DL
         4 000575   200012 056100                    ASQ     INDX,,AUTO

      374     3259    4             SUBSTR ( VD$BUFFER.BYTES, DECIMAL_POINT_INDEX-4, 3) =

   3259  4 000576   200006 470500                    LDP0    KEY_AND_BUFFER$,,AUTO
         4 000577   000002 220100                    LDX0    2,,PR0
         4 000600   200012 235100                    LDA     INDX,,AUTO
         4 000601   200013 236100                    LDQ     DECIMAL_POINT_INDEX,,AUTO
         4 000602   040106 100405                    MLR     fill='040'O
         4 000603   000001 000003 3                  ADSC9   INDX_TXT,A               cn=0,n=3
         4 000604   000001 400003                    ADSC9   1,Q,PR0                  cn=2,n=3

      375     3260    4               SUBSTR ( INDX_TXT, INDX, 3 );
      376     3261    4             GOTO SHOW_NEXT_ARRAY_ITEM;

   3261  4 000605   000250 710000 4                  TRA     SHOW_NEXT_ARRAY_ITEM

      377     3262    4               END OUTPUT_KEY_AND_BUFFER;
      378     3263    3           END FORMAT_KEY;

   3263  4 000606   000642 710000 4                  TRA     s:3293

      379     3264    2         ELSE
      380     3265    2   FORMAT_BUFFER:
      381     3266    3           DO;

   3266  4 000607                       FORMAT_BUFF* null
      382     3267    3             IF FPT_PROMPT.V.DCB# ~= 0

   3267  4 000607   000006 221000 2                  LDX1    FPT_PROMPT+6
         4 000610   000624 600000 4                  TZE     OUTPUT_BUFFER_ONLY

      383     3268    3             THEN
      384     3269    3   OUTPUT_NOTHING:
      385     3270    4               DO;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:63   

   3270  4 000611                       OUTPUT_NOTH* null
      386     3271    4                 FPT_PROMPT.PROMPT_ = VECTOR ( VLP_PROMPT_DOT );

   3271  4 000611   000016 237000 5                  LDAQ    14
         4 000612   000004 757000 2                  STAQ    FPT_PROMPT+4

      387     3272
      388     3273    4                 SUBSTR ( VD$BUFFER.BYTES,

   3273  4 000613   200006 471500                    LDP1    KEY_AND_BUFFER$,,AUTO
         4 000614   100002 220100                    LDX0    2,,PR1
         4 000615   100000 236007                    LDQ     32768,DL
         4 000616   100002 552110                    STBQ    2,'10'O,PR1

      389     3274    4                   0,
      390     3275    4                   1 ) = '@';
      391     3276
      392     3277    4                 CALL M$PROMPT ( FPT_PROMPT )

   3277  4 000617   000000 630400 2                  EPPR0   FPT_PROMPT
         4 000620   560002 713400                    CLIMB   alt,+57346
         4 000621   401000 401760                    pmme    nvectors=3
         4 000622   000647 702000 4                  TSX2    PROMPT_FAILED

      393     3278    4                   ALTRET ( PROMPT_FAILED );
      394     3279
      395     3280    4                 EXIT OUTPUT_KEY_AND_OR_BUFFER;

   3280  4 000623   000646 710000 4                  TRA     s:3297

      396     3281    4               END OUTPUT_NOTHING;
      397     3282    3             ELSE
      398     3283    3   OUTPUT_BUFFER_ONLY:
      399     3284    4               DO;

   3284  4 000624                       OUTPUT_BUFF* null
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:64   
      400     3285    4                 FPT_WRITE.BUF_ = VECTOR ( RGET_NODE_DESC.DATA$ -> VD$BUFFER.BYTES );

   3285  4 000624   000004 471500                    LDP1    4,,PR0
         4 000625   100002 222100                    LDX2    2,,PR1
         4 000626   000000 635012                    EAA     0,X2
         4 000627   000002 731000                    ARS     2
         4 000630   000140 135007                    SBLA    96,DL
         4 000631   200032 451500                    STP1    @LIT+1,,AUTO
         4 000632   200032 236100                    LDQ     @LIT+1,,AUTO
         4 000633   000002 036000 5                  ADLQ    2
         4 000634   000016 757000 2                  STAQ    FPT_WRITE+4

      401     3286    4                 IF DATA$ -> VD$BUFFER.LENGTH# = 0

   3286  4 000635   200011 471500                    LDP1    DATA$,,AUTO
         4 000636   100002 220100                    LDX0    2,,PR1
         4 000637   000642 601000 4                  TNZ     s:3293

      402     3287    4                 THEN
      403     3288    4                   FPT_WRITE.BUF_ = FPT_WRITE.KEY_; /* Handy VECTOR(NIL) */

   3288  4 000640   000014 237000 2                  LDAQ    FPT_WRITE+2
         4 000641   000016 757000 2                  STAQ    FPT_WRITE+4

      404     3289    4               END OUTPUT_BUFFER_ONLY;

      405     3290    3           END FORMAT_BUFFER;

      406     3291
      407     3292
      408     3293    2         CALL M$WRITE ( FPT_WRITE ) ALTRET ( WRITE_FAILED );

   3293  4 000642   000012 630400 2                  EPPR0   FPT_WRITE
         4 000643   440001 713400                    CLIMB   alt,write
         4 000644   401400 401760                    pmme    nvectors=4
         4 000645   000647 702000 4                  TSX2    PROMPT_FAILED

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:65   
      409     3294
      410     3295    2       END OUTPUT_KEY_AND_OR_BUFFER;

      411     3296
      412     3297    1       RETURN;

   3297  4 000646   000000 702200 xent               TSX2  ! X66_ARET

   3297  4 000647                       PROMPT_FAIL* null
   3297  4 000647                       SINPUT_FAIL* null
   3297  4 000647                       WRITE_FAILED null
      413     3298
      414     3299    1   PROMPT_FAILED:;
      415     3300    1   SINPUT_FAILED:;
      416     3301    1   WRITE_FAILED:;
      417     3302    1       CALL VDG$MONERR;

   3302  4 000647   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000650   000000 701000 xent               TSX1    VDG$MONERR
         4 000651   000000 011000                    NOP     0

      418     3303
      419     3304    1   OALLOC_FAILED:
      420     3305    1       ALTRETURN;

   3305  4 000652   000000 702200 xent  OALLOC_FAIL* TSX2  ! X66_AALT

      421     3306
      422     3307        %EJECT;
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:66   
      423     3308    1   FORMAT_STRING: PROC (PARM);

   3308  4 000653   200020 741300       FORMAT_STRI* STX1  ! CURRENT_KEY$+1,,AUTO

      424     3309        /*D* NAME: FORMAT_STRING.
      425     3310             Formats the key or buffer string parameter as a quote string,
      426     3311             expanding unprintables as control-values and doubling quotes.
      427     3312        */
      428     3313
      429     3314        %INCLUDE XU_MACRO_C;
      430     6408        %INCLUDE XU_SUBS_C;
      431     6500        %P$NODE (NAME=ASP_FUNKEY, STCLASS=SYMREF);
      432     6594        %P$NODE (NAME=HEX, STCLASS=SYMREF);
      433     6688        %P$NODE (NAME=NOD, STCLASS=BASED);
      434     6782        %P$LIT (STCLASS=BASED);
      435     6835    2     DCL PARM(0:0) CHAR(1) CALIGNED;
      436     6836
      437     6837    2     DCL MAX_FROM SBIN;
      438     6838    2     DCL STRING_START SBIN;
      439     6839    2     DCL K SBIN;
      440     6840    2     DCL LIT$ PTR;
      441     6841    2     DCL CURR_FROM SBIN;
      442     6842    2     DCL CURR_CHAR UBIN;
      443     6843    2     DCL 1 CURR REDEF CURR_CHAR,
      444     6844    2           2 * BIT(27),
      445     6845    2           2 CHR CHAR(1);
      446     6846
      447     6847    3       IF ACTUAL_DATA_INDEX = 1 THEN DO; /* Must be a keyin name (key) */

   6847  4 000654   200005 235100                    LDA     ACTUAL_DATA_INDEX,,AUTO
         4 000655   000001 115007                    CMPA    1,DL
         4 000656   000667 601000 4                  TNZ     s:6851

      448     6848    3           CURR_FROM = 5;

   6848  4 000657   000005 236007                    LDQ     5,DL
         4 000660   200026 756100                    STQ     CURR_FROM,,AUTO
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:67   

      449     6849    3           MAX_FROM = ADDR (PARM(4)) -> VD$TEXTC.LENGTH# + 5;

   6849  4 000661   200021 470500                    LDP0    @PARM,,AUTO
         4 000662   000001 236100                    LDQ     1,,PR0
         4 000663   000033 772000                    QRL     27
         4 000664   000005 036007                    ADLQ    5,DL
         4 000665   200022 756100                    STQ     MAX_FROM,,AUTO

      450     6850    3         END; ELSE DO;

   6850  4 000666   000676 710000 4                  TRA     s:6855

      451     6851    3           CURR_FROM = LENGTHC (VD$BUFFER_HEADER);

   6851  4 000667   000012 236007                    LDQ     10,DL
         4 000670   200026 756100                    STQ     CURR_FROM,,AUTO

      452     6852    3           MAX_FROM = CURR_FROM + ADDR(PARM) -> VD$BUFFER.LENGTH#;

   6852  4 000671   200021 470500                    LDP0    @PARM,,AUTO
         4 000672   000002 236100                    LDQ     2,,PR0
         4 000673   000022 732000                    QRS     18
         4 000674   200026 036100                    ADLQ    CURR_FROM,,AUTO
         4 000675   200022 756100                    STQ     MAX_FROM,,AUTO

      453     6853    3         END;

      454     6854
      455     6855    2       CURR_CHAR = 0;

   6855  4 000676   200027 450100                    STZ     CURR_CHAR,,AUTO

      456     6856    2       SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX, 1) = '''';

   6856  4 000677   200006 471500                    LDP1    KEY_AND_BUFFER$,,AUTO
         4 000700   100002 220100                    LDX0    2,,PR1
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:68   
         4 000701   040105 100400                    MLR     fill='040'O
         4 000702   000020 000001 5                  ADSC9   16                       cn=0,n=1
         4 000703   100002 400001                    ADSC9   2,A,PR1                  cn=2,n=1

      457     6857    2       STRING_START = 0;

   6857  4 000704   200023 450100                    STZ     STRING_START,,AUTO

      458     6858    3       DO WHILE CURR_FROM < MAX_FROM;

   6858  4 000705   200026 116100                    CMPQ    CURR_FROM,,AUTO
         4 000706   001051 604400 4                  TMOZ    s:6887

      459     6859    3         ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + 1;

   6859  4 000707   200005 054100                    AOS     ACTUAL_DATA_INDEX,,AUTO

      460     6860    3         CURR.CHR = PARM (CURR_FROM);

   6860  4 000710   200021 470500                    LDP0    @PARM,,AUTO
         4 000711   200026 235100                    LDA     CURR_FROM,,AUTO
         4 000712   040100 100505                    MLR     fill='040'O
         4 000713   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         4 000714   200027 600001                    ADSC9   CURR_CHAR,,AUTO          cn=3,n=1

      461     6861    3         SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX, 1) = CURR.CHR;

   6861  4 000715   200006 471500                    LDP1    KEY_AND_BUFFER$,,AUTO
         4 000716   100002 220100                    LDX0    2,,PR1
         4 000717   200005 236100                    LDQ     ACTUAL_DATA_INDEX,,AUTO
         4 000720   040106 100500                    MLR     fill='040'O
         4 000721   200027 600001                    ADSC9   CURR_CHAR,,AUTO          cn=3,n=1
         4 000722   100002 400001                    ADSC9   2,Q,PR1                  cn=2,n=1

      462     6862    3         CURR_FROM = CURR_FROM + 1;

   6862  4 000723   200026 054100                    AOS     CURR_FROM,,AUTO
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:69   

      463     6863    4         IF CURR_CHAR = ASCBIN('''') THEN DO;

   6863  4 000724   200027 235100                    LDA     CURR_CHAR,,AUTO
         4 000725   000047 115007                    CMPA    39,DL
         4 000726   000735 601000 4                  TNZ     s:6867

      464     6864    4             SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX+1, 1) = CURR.CHR;

   6864  4 000727   100002 220100                    LDX0    2,,PR1
         4 000730   200005 236100                    LDQ     ACTUAL_DATA_INDEX,,AUTO
         4 000731   040106 100500                    MLR     fill='040'O
         4 000732   200027 600001                    ADSC9   CURR_CHAR,,AUTO          cn=3,n=1
         4 000733   100002 600001                    ADSC9   2,Q,PR1                  cn=3,n=1

      465     6865    4             ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + 1;

   6865  4 000734   200005 054100                    AOS     ACTUAL_DATA_INDEX,,AUTO

      466     6866    4           END;

      467     6867    3         IF CURR_CHAR < 32 THEN CALL PUTLIT (HEX.SUBNDS$(CURR_CHAR)->P$LIT);

   6867  4 000735   000040 115007                    CMPA    32,DL
         4 000736   000744 603000 4                  TRC     s:6868

   6867  4 000737   000001 473405 xsym               LDP3    HEX+1,AL
         4 000740   200031 453500                    STP3    CURR_CHAR+2,,AUTO
         4 000741   001075 701000 4                  TSX1    PUTLIT
         4 000742   000000 011000                    NOP     0
         4 000743   001046 710000 4                  TRA     s:6886

      468     6868    3         ELSE IF CURR_CHAR = 127 THEN CALL PUTLIT (HEX.SUBNDS$(33)->P$LIT);

   6868  4 000744   000177 115007                    CMPA    127,DL
         4 000745   000753 601000 4                  TNZ     s:6869

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:70   
   6868  4 000746   000042 236000 xsym               LDQ     HEX+34
         4 000747   200031 756100                    STQ     CURR_CHAR+2,,AUTO
         4 000750   001075 701000 4                  TSX1    PUTLIT
         4 000751   000000 011000                    NOP     0
         4 000752   001046 710000 4                  TRA     s:6886

      469     6869    3           ELSE IF CURR_CHAR>127 THEN

   6869  4 000753   000200 115007                    CMPA    128,DL
         4 000754   001044 602000 4                  TNC     s:6885

      470     6870    4               IF CURR_CHAR<256 OR STRING_START>0 THEN DO;

   6870  4 000755   000400 115007                    CMPA    256,DL
         4 000756   000761 602000 4                  TNC     s:6871
         4 000757   200023 236100                    LDQ     STRING_START,,AUTO
         4 000760   001002 604400 4                  TMOZ    s:6877

      471     6871    4                   SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX, 7) = '%V(000)';

   6871  4 000761   100002 220100                    LDX0    2,,PR1
         4 000762   200005 236100                    LDQ     ACTUAL_DATA_INDEX,,AUTO
         4 000763   040106 100400                    MLR     fill='040'O
         4 000764   000020 000007 3                  ADSC9   CANNED_FORMATTED_NUMBER_KEY+5 cn=0,n=7
         4 000765   100002 400007                    ADSC9   2,Q,PR1                  cn=2,n=7

      472     6872    4                   CALL BINCHAR (SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX+3, 3),

   6872  4 000766   100002 220100                    LDX0    2,,PR1
         4 000767   000044 773000                    LRL     36
         4 000770   200032 757100                    STAQ    @LIT+1,,AUTO
         4 000771   200005 235100                    LDA     ACTUAL_DATA_INDEX,,AUTO
         4 000772   000105 301500                    BTD
         4 000773   200032 000010                    NDSC9   @LIT+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 000774   100003 230003                    NDSC9   3,A,PR1                  cn=1,s=nosgn,sf=0,n=3

      473     6873    4                     CURR_CHAR);
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:71   
      474     6874    4                   ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + 6;

   6874  4 000775   000006 236007                    LDQ     6,DL
         4 000776   200005 056100                    ASQ     ACTUAL_DATA_INDEX,,AUTO

      475     6875    4                   STRING_START = 2;

   6875  4 000777   000002 235007                    LDA     2,DL
         4 001000   200023 755100                    STA     STRING_START,,AUTO

      476     6876    4                 END;

   6876  4 001001   001046 710000 4                  TRA     s:6886

      477     6877    4               ELSE DO K=0 TO ASP_FUNKEY.NSUBNDS-1;

   6877  4 001002   200024 450100                    STZ     K,,AUTO
         4 001003   001036 710000 4                  TRA     s:6884+1

      478     6878    5                   IF ASP_FUNKEY.SUBNDS$(K)->P$LIT.CODE = CURR_CHAR-256 THEN DO;

   6878  4 001004   200024 720100                    LXL0    K,,AUTO
         4 001005   000001 470410 xsym               LDP0    ASP_FUNKEY+1,X0
         4 001006   200027 235100                    LDA     CURR_CHAR,,AUTO
         4 001007   000400 135007                    SBLA    256,DL
         4 001010   200032 755100                    STA     @LIT+1,,AUTO
         4 001011   000000 236100                    LDQ     0,,PR0
         4 001012   177777 376007                    ANQ     65535,DL
         4 001013   200032 116100                    CMPQ    @LIT+1,,AUTO
         4 001014   001035 601000 4                  TNZ     s:6884

      479     6879    5                       IF ASP_FUNKEY.SUBNDS$(K)->P$LIT.TYPE = %TYPE_LITERAL# THEN

   6879  4 001015   000000 236100                    LDQ     0,,PR0
         4 001016   700000 376003                    ANQ     -32768,DU
         4 001017   500000 116003                    CMPQ    -98304,DU
         4 001020   001025 601000 4                  TNZ     s:6881
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:72   

      480     6880    5                         CALL PUTLIT (ASP_FUNKEY.SUBNDS$(K)->P$LIT);

   6880  4 001021   200031 450500                    STP0    CURR_CHAR+2,,AUTO
         4 001022   001075 701000 4                  TSX1    PUTLIT
         4 001023   000000 011000                    NOP     0
         4 001024   001031 710000 4                  TRA     s:6882

      481     6881    5                      ELSE CALL PUTLIT (ASP_FUNKEY.SUBNDS$(K)->NOD.SUBNDS$(0)->P$LIT);

   6881  4 001025   000001 471500                    LDP1    1,,PR0
         4 001026   200031 451500                    STP1    CURR_CHAR+2,,AUTO
         4 001027   001075 701000 4                  TSX1    PUTLIT
         4 001030   000000 011000                    NOP     0

      482     6882    5                       K = ASP_FUNKEY.NSUBNDS;

   6882  4 001031   000000 236000 xsym               LDQ     ASP_FUNKEY
         4 001032   000020 772000                    QRL     16
         4 001033   000777 376007                    ANQ     511,DL
         4 001034   200024 756100                    STQ     K,,AUTO

      483     6883    5                     END;

      484     6884    4                 END;

   6884  4 001035   200024 054100                    AOS     K,,AUTO
         4 001036   000000 236000 xsym               LDQ     ASP_FUNKEY
         4 001037   000020 772000                    QRL     16
         4 001040   000777 376007                    ANQ     511,DL
         4 001041   200024 116100                    CMPQ    K,,AUTO
         4 001042   001004 605400 4                  TPNZ    s:6878
         4 001043   001046 710000 4                  TRA     s:6886

      485     6885    3             ELSE STRING_START = 2;

   6885  4 001044   000002 236007                    LDQ     2,DL
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:73   
         4 001045   200023 756100                    STQ     STRING_START,,AUTO

      486     6886    3       END;

   6886  4 001046   200026 236100                    LDQ     CURR_FROM,,AUTO
         4 001047   200022 116100                    CMPQ    MAX_FROM,,AUTO
         4 001050   000707 604000 4                  TMI     s:6859

      487     6887    3       IF STRING_START ~= 1 THEN DO;

   6887  4 001051   200023 235100                    LDA     STRING_START,,AUTO
         4 001052   000001 115007                    CMPA    1,DL
         4 001053   001065 600000 4                  TZE     s:6892

      488     6888    3           SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX+1, 1) = '''';

   6888  4 001054   200006 470500                    LDP0    KEY_AND_BUFFER$,,AUTO
         4 001055   000002 220100                    LDX0    2,,PR0
         4 001056   200005 236100                    LDQ     ACTUAL_DATA_INDEX,,AUTO
         4 001057   040106 100400                    MLR     fill='040'O
         4 001060   000020 000001 5                  ADSC9   16                       cn=0,n=1
         4 001061   000002 600001                    ADSC9   2,Q,PR0                  cn=3,n=1

      489     6889    3           ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + 1;

   6889  4 001062   200005 054100                    AOS     ACTUAL_DATA_INDEX,,AUTO

      490     6890    3           ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + 1;

   6890  4 001063   200005 054100                    AOS     ACTUAL_DATA_INDEX,,AUTO

      491     6891    3         END;

   6891  4 001064   001073 710000 4                  TRA     s:6893

      492     6892    2       ELSE SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX, 1) = ' ';

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:74   
   6892  4 001065   200006 470500                    LDP0    KEY_AND_BUFFER$,,AUTO
         4 001066   000002 220100                    LDX0    2,,PR0
         4 001067   200005 236100                    LDQ     ACTUAL_DATA_INDEX,,AUTO
         4 001070   040106 100400                    MLR     fill='040'O
         4 001071   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 001072   000002 400001                    ADSC9   2,Q,PR0                  cn=2,n=1

      493     6893    2       RETURN;

   6893  4 001073   200020 221300                    LDX1  ! CURRENT_KEY$+1,,AUTO
         4 001074   000001 702211                    TSX2  ! 1,X1

      494     6894
      495     6895    2   PUTLIT: PROC (LIT);

   6895  4 001075   200030 741300       PUTLIT       STX1  ! CURR_CHAR+1,,AUTO

      496     6896        %P$LIT (NAME=LIT, STCLASS=);
      497     6949
      498     6950    3       IF STRING_START > 1 THEN

   6950  4 001076   200023 235100                    LDA     STRING_START,,AUTO
         4 001077   000001 115007                    CMPA    1,DL
         4 001100   001110 604400 4                  TMOZ    s:6952

      499     6951    3         SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX, 1) = '''';

   6951  4 001101   200006 470500                    LDP0    KEY_AND_BUFFER$,,AUTO
         4 001102   000002 220100                    LDX0    2,,PR0
         4 001103   200005 236100                    LDQ     ACTUAL_DATA_INDEX,,AUTO
         4 001104   040106 100400                    MLR     fill='040'O
         4 001105   000020 000001 5                  ADSC9   16                       cn=0,n=1
         4 001106   000002 400001                    ADSC9   2,Q,PR0                  cn=2,n=1
         4 001107   001112 710000 4                  TRA     s:6954

      500     6952    3       ELSE ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX - 2;

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:75   
   6952  4 001110   000002 336007                    LCQ     2,DL
         4 001111   200005 056100                    ASQ     ACTUAL_DATA_INDEX,,AUTO

      501     6953
      502     6954    3       SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX + 1, 1) = '<';

   6954  4 001112   200006 470500                    LDP0    KEY_AND_BUFFER$,,AUTO
         4 001113   000002 220100                    LDX0    2,,PR0
         4 001114   200005 236100                    LDQ     ACTUAL_DATA_INDEX,,AUTO
         4 001115   040106 100400                    MLR     fill='040'O
         4 001116   000021 000001 5                  ADSC9   17                       cn=0,n=1
         4 001117   000002 600001                    ADSC9   2,Q,PR0                  cn=3,n=1

      503     6955    3       K = LIT.ABREV;

   6955  4 001120   200031 471500                    LDP1    @LIT,,AUTO
         4 001121   100000 236100                    LDQ     0,,PR1
         4 001122   000020 772000                    QRL     16
         4 001123   000377 376007                    ANQ     255,DL
         4 001124   200024 756100                    STQ     K,,AUTO

      504     6956    3       IF K = 0 THEN K = LIT.COUNT;

   6956  4 001125   001131 601000 4                  TNZ     s:6957

   6956  4 001126   100001 236100                    LDQ     1,,PR1
         4 001127   000033 772000                    QRL     27
         4 001130   200024 756100                    STQ     K,,AUTO

      505     6957    3       SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX + 2, K) =

   6957  4 001131   000002 220100                    LDX0    2,,PR0
         4 001132   000000 621006                    EAX1    0,QL
         4 001133   200024 722100                    LXL2    K,,AUTO
         4 001134   200005 236100                    LDQ     ACTUAL_DATA_INDEX,,AUTO
         4 001135   040146 100540                    MLR     fill='040'O
         4 001136   100001 200011                    ADSC9   1,,PR1                   cn=1,n=*X1
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:76   
         4 001137   000003 000012                    ADSC9   3,Q,PR0                  cn=0,n=*X2

      506     6958    3         SUBSTR (LIT.TEXT, 0, K);
      507     6959    3       ACTUAL_DATA_INDEX = ACTUAL_DATA_INDEX + K + 3;

   6959  4 001140   200005 236100                    LDQ     ACTUAL_DATA_INDEX,,AUTO
         4 001141   200024 036100                    ADLQ    K,,AUTO
         4 001142   000003 036007                    ADLQ    3,DL
         4 001143   200005 756100                    STQ     ACTUAL_DATA_INDEX,,AUTO

      508     6960    3       SUBSTR (VD$BUFFER.BYTES, ACTUAL_DATA_INDEX - 1, 2) = '>''';

   6960  4 001144   000002 220100                    LDX0    2,,PR0
         4 001145   040106 100400                    MLR     fill='040'O
         4 001146   000022 000002 3                  ADSC9   CANNED_FORMATTED_NUMBER_KEY+7 cn=0,n=2
         4 001147   000002 200002                    ADSC9   2,Q,PR0                  cn=1,n=2

      509     6961    3       STRING_START = 1;

   6961  4 001150   000001 236007                    LDQ     1,DL
         4 001151   200023 756100                    STQ     STRING_START,,AUTO

      510     6962    3       RETURN;

   6962  4 001152   200030 221300                    LDX1  ! CURR_CHAR+1,,AUTO
         4 001153   000001 702211                    TSX2  ! 1,X1
      511     6963    3   END PUTLIT;
      512     6964    2   END FORMAT_STRING;
      513     6965    1   END VDP$WFORMAT_RECORD;
      514     6966        %EOD;

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:77   
--  Include file information  --

   XU_SUBS_C.:LIBRARY  is referenced.
   XU_MACRO_C.:LIBRARY  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WFORMAT_RECORD.
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:78   

 **** Variables and constants ****

  ****  Section 002  Data  VDP$WFORMAT_RECORD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(360)   r     1 FPT_PROMPT                12-0-0/d STRC(432)   r     1 FPT_WRITE

  ****  Section 003 RoData VDP$WFORMAT_RECORD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    13-0-0/c CHAR(10)    r     1 CANNED_FORMATTED_NUMBER_KEY
     1-0-0/c CHAR(38)    r     1 INDX_TXT                   0-0-0/c CHAR(2)     r     1 VLP_PROMPT_DOT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @FPT_SINPUT               31-0-0/w PTR         r     1 @LIT
    21-0-0/w PTR         r     1 @PARM                      3-0-0/w PTR         r     1 @RGET_NODE_DESC
     5-0-0/w SBIN        r     1 ACTUAL_DATA_INDEX         10-0-0/w PTR         r     1 BLOCK$
    27-0-0/w STRC        r     1 CURR                      17-0-0/w PTR         r     1 CURRENT_KEY$
    27-0-0/w UBIN        r     1 CURR_CHAR                 26-0-0/w SBIN        r     1 CURR_FROM
    11-0-0/w PTR         r     1 DATA$                      7-0-0/w SBIN        r     1 DATA_CLS
    13-0-0/w UBIN        r     1 DECIMAL_POINT_INDEX       14-0-0/c CHAR(10)    r     1 FORMATTED_NUMBER_KEY
    *0-0-0/d STRC(288)   r     1 FPT_SINPUT                12-0-0/w SBIN        r     1 INDX
    24-0-0/w SBIN        r     1 K                          6-0-0/w PTR         r     1 KEY_AND_BUFFER$
     5-0-0/w SBIN        r     1 KEY_FORMAT_END_INDEX      *0-0-0/w STRC(63)    r     1 LIT
    22-0-0/w SBIN        r     1 MAX_FROM                  *0-0-0/c CHAR        r     1 PARM(0:0)
    *0-0-0/w STRC(216)   r     1 RGET_NODE_DESC            23-0-0/w SBIN        r     1 STRING_START

  ****  SYMREF variables  ****

PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:79   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 ASP_FUNKEY                 0-0-0/w STRC(72)    r     1 HEX
     0-0-0/w PTR         r     1 VDP_KEY$                   0-0-0/w PTR         r     1 VDP_KEY_AND_BUFFER$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$UC
     0-0-0/w STRC(72)    r     1 NOD                        0-0-0/w STRC(63)    r     1 P$LIT
     0-0-0/w STRC(936)   r     1 VD$BLOCK_DESC              0-0-0/w ASTR(90)    r     1 VD$BUFFER
     0-0-0/w STRC(90)    r     1 VD$BUFFER_HEADER           0-0-0/w STRC(72)    r     1 VD$KEY
     0-0-0/w STRC(252)   r     1 VD$NAME_SPEC               0-0-0/w STRC(144)   r     1 VD$NUMBER
     0-0-0/w STRC(144)   r     1 VD$POINTER                 0-0-0/w ASTR(9)     r     1 VD$TEXTC
     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE            0-0-0/w STRC(900)   r     1 WINDOW$SPEC


   Procedure VDP$WFORMAT_RECORD requires 620 words for executable code.
   Procedure VDP$WFORMAT_RECORD requires 32 words of local(AUTO) storage.
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:80   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:81   
          MINI XREF LISTING

ACTUAL_DATA_INDEX
      3019**DCL      3020--REDEF    3119<<ASSIGN   3142<<ASSIGN   3156<<ASSIGN   3157>>ASSIGN   3167>>ASSIGN
      3209<>CALL     3209<>CALL     3216<>CALL     3216<>CALL     3223<>CALL     3223<>CALL     3234<>CALL
      3234<>CALL     3242>>ASSIGN   3246<<ASSIGN   3246>>ASSIGN   3250>>ASSIGN   6847>>IF       6856>>ASSIGN
      6859<<ASSIGN   6859>>ASSIGN   6861>>ASSIGN   6864>>ASSIGN   6865<<ASSIGN   6865>>ASSIGN   6871>>ASSIGN
      6872>>CALLBLT  6874<<ASSIGN   6874>>ASSIGN   6888>>ASSIGN   6889<<ASSIGN   6889>>ASSIGN   6890<<ASSIGN
      6890>>ASSIGN   6892>>ASSIGN   6951>>ASSIGN   6952<<ASSIGN   6952>>ASSIGN   6954>>ASSIGN   6957>>ASSIGN
      6959<<ASSIGN   6959>>ASSIGN   6960>>ASSIGN
ASP_FUNKEY.NSUBNDS IN PROCEDURE FORMAT_STRING
      6576**DCL      6877>>DOINDEX  6882>>ASSIGN
ASP_FUNKEY.SUBNDS$ IN PROCEDURE FORMAT_STRING
      6584**DCL      6878>>IF       6879>>IF       6880>>CALL     6881>>CALL
B$ALT.CODE
       100**DCL       100--REDEF     101--REDEF     101--REDEF
B$ALT.ERR.ERR#
       102**DCL       102--REDEF
B$ALT.EVID
       101**DCL       101--REDEF     101--REDEF
BLOCK$
      3023**DCL      3205<<ASSIGN   3207<<ASSIGN   3209>>CALL
CANNED_FORMATTED_NUMBER_KEY
      3016**DCL      3130>>ASSIGN
CURR.CHR IN PROCEDURE FORMAT_STRING
      6845**DCL      6860<<ASSIGN   6861>>ASSIGN   6864>>ASSIGN
CURRENT_KEY$
      3028**DCL      3044<<ASSIGN   3044<<ASSIGN   3056>>ASSIGN   3057>>ASSIGN   3057>>ASSIGN
CURR_CHAR IN PROCEDURE FORMAT_STRING
      6842**DCL      6843--REDEF    6855<<ASSIGN   6863>>IF       6867>>IF       6867>>CALL     6868>>IF
      6869>>IF       6870>>IF       6872>>CALLBLT  6878>>IF
CURR_FROM IN PROCEDURE FORMAT_STRING
      6841**DCL      6848<<ASSIGN   6851<<ASSIGN   6852>>ASSIGN   6858>>DOWHILE  6860>>ASSIGN   6862<<ASSIGN
      6862>>ASSIGN
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:82   
DATA$
      3024**DCL      3050<<ASSIGN   3147>>IF       3180>>ASSIGN   3205>>ASSIGN   3207>>ASSIGN   3216>>CALL
      3231>>CALL     3231>>CALL     3234>>CALL     3246>>ASSIGN   3253>>IF       3255>>IF       3257<<ASSIGN
      3257>>ASSIGN   3286>>IF
DATA_CLS
      3022**DCL      3180<<ASSIGN   3182<<ASSIGN   3184<<ASSIGN   3187>>IF       3188<<ASSIGN   3191>>IF
      3193<<ASSIGN   3196<<ASSIGN   3199<<ASSIGN   3202>>DOSELCT  3204>>IF       3234<>CALL
DECIMAL_POINT_INDEX
      3026**DCL      3133<<CALLBLT  3137>>ASSIGN   3154<<ASSIGN   3156>>ASSIGN   3157>>ASSIGN   3157>>ASSIGN
      3259>>ASSIGN
FORMATTED_NUMBER_KEY
      3027**DCL      3107<<ASSIGN   3114>>ASSIGN   3125<<ASSIGN   3133>>CALLBLT  3137>>ASSIGN
FORMAT_STRING
      3308**PROC     3095--CALL     3231--CALL
FPT_PROMPT
       126**DCL      3172<>CALL     3277<>CALL
FPT_PROMPT.PROMPT_
       132**DCL      3167<<ASSIGN   3271<<ASSIGN
FPT_PROMPT.V
       134**DCL       128--DCLINIT
FPT_PROMPT.V.DCB#
       134**DCL      3048<<ASSIGN   3049<<ASSIGN   3052>>IF       3163>>IF       3267>>IF
FPT_SINPUT
      2447**DCL         9--PROC     3049--IF       3065<>CALL
FPT_SINPUT.BUF_
      2454**DCL      3061<<ASSIGN   3063<<ASSIGN
FPT_SINPUT.V.DCB#
      2459**DCL      3049>>ASSIGN
FPT_WRITE
       156**DCL      3256<>CALL     3293<>CALL
FPT_WRITE.BUF_
       156**DCL      3250<<ASSIGN   3285<<ASSIGN   3288<<ASSIGN
FPT_WRITE.KEY_
       156**DCL      3288>>ASSIGN
FPT_WRITE.STATION_
       158**DCL       158--REDEF
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:83   
FPT_WRITE.V
       159**DCL       156--DCLINIT
FPT_WRITE.V.DVBYTE.VFC#
       165**DCL       165--REDEF
HEX.SUBNDS$ IN PROCEDURE FORMAT_STRING
      6678**DCL      6867>>CALL     6868>>CALL
INDX
      3025**DCL      3051<<ASSIGN   3258<<ASSIGN   3258>>ASSIGN   3259>>ASSIGN
INDX_TXT
       170**DCL      3151>>ASSIGN   3259>>ASSIGN
K IN PROCEDURE FORMAT_STRING
      6839**DCL      6877<<DOINDEX  6878>>IF       6879>>IF       6880>>CALL     6881>>CALL     6882<<ASSIGN
      6955<<ASSIGN   6956>>IF       6956<<ASSIGN   6957>>ASSIGN   6957>>ASSIGN   6959>>ASSIGN
KEY_AND_BUFFER$
      3021**DCL      2644--IMP-PTR  3092<<ASSIGN   3097>>CALL     3097>>CALL     3107>>ASSIGN   3107>>ASSIGN
      3112>>ASSIGN   3112>>ASSIGN   3114>>ASSIGN   3114>>ASSIGN   3125>>ASSIGN   3125>>ASSIGN   3130>>ASSIGN
      3130>>ASSIGN   3137>>ASSIGN   3137>>ASSIGN   3151>>ASSIGN   3151>>ASSIGN   3157>>ASSIGN   3157>>ASSIGN
      3167>>ASSIGN   3167>>ASSIGN   3171>>ASSIGN   3171>>ASSIGN   3191>>IF       3191>>IF       3209>>CALL
      3209>>CALL     3216>>CALL     3216>>CALL     3223>>CALL     3223>>CALL     3234>>CALL     3234>>CALL
      3242>>ASSIGN   3242>>ASSIGN   3250>>ASSIGN   3250>>ASSIGN   3259>>ASSIGN   3259>>ASSIGN   3273>>ASSIGN
      3273>>ASSIGN   6856>>ASSIGN   6856>>ASSIGN   6861>>ASSIGN   6861>>ASSIGN   6864>>ASSIGN   6864>>ASSIGN
      6871>>ASSIGN   6871>>ASSIGN   6872>>CALLBLT  6872>>CALLBLT  6888>>ASSIGN   6888>>ASSIGN   6892>>ASSIGN
      6892>>ASSIGN   6951>>ASSIGN   6951>>ASSIGN   6954>>ASSIGN   6954>>ASSIGN   6957>>ASSIGN   6957>>ASSIGN
      6960>>ASSIGN   6960>>ASSIGN
KEY_FORMAT_END_INDEX
      3020**DCL      3091<<ASSIGN   3097<>CALL     3107>>ASSIGN   3114>>ASSIGN   3114>>ASSIGN   3125>>ASSIGN
      3137>>ASSIGN   3151>>ASSIGN   3152<<ASSIGN   3152>>ASSIGN   3154>>ASSIGN
LIT IN PROCEDURE PUTLIT
      6906**DCL      6895--PROC
LIT.ABREV IN PROCEDURE PUTLIT
      6930**DCL      6955>>ASSIGN
LIT.COUNT IN PROCEDURE PUTLIT
      6937**DCL      6956>>ASSIGN
LIT.TEXT IN PROCEDURE PUTLIT
      6940**DCL      6957>>ASSIGN
M$PROMPT
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:84   
        46**DCL-ENT  3172--CALL     3277--CALL
M$SINPUT
        49**DCL-ENT  3065--CALL
M$WRITE
        23**DCL-ENT  3256--CALL     3293--CALL
MAX_FROM IN PROCEDURE FORMAT_STRING
      6837**DCL      6849<<ASSIGN   6852<<ASSIGN   6858>>DOWHILE
NOD.SUBNDS$ IN PROCEDURE FORMAT_STRING
      6772**DCL      6881>>CALL
OALLOC_FAILED
      3305**LABEL    3079--CALLALT
OUTPUT_KEY_AND_OR_BUFFER
      3070**LABEL    3175--EXIT     3280--EXIT
P$LIT IN PROCEDURE FORMAT_STRING
      6792**DCL      6867<>CALL     6868<>CALL     6880<>CALL     6881<>CALL
P$LIT.CODE IN PROCEDURE FORMAT_STRING
      6822**DCL      6878>>IF
P$LIT.TYPE IN PROCEDURE FORMAT_STRING
      6796**DCL      6879>>IF
PARM IN PROCEDURE FORMAT_STRING
      6835**DCL      3308--PROC     6849--ASSIGN   6852--ASSIGN   6860>>ASSIGN
PROMPT_FAILED
      3297**LABEL    3172--CALLALT  3277--CALLALT
PUTLIT IN PROCEDURE FORMAT_STRING
      6895**PROC     6867--CALL     6868--CALL     6880--CALL     6881--CALL
RGET_NODE_DESC
      2397**DCL         9--PROC
RGET_NODE_DESC.DATA$
      2429**DCL      3050>>ASSIGN   3059>>IF       3063>>ASSIGN   3063>>ASSIGN   3242>>ASSIGN   3242>>ASSIGN
      3242>>ASSIGN   3285>>ASSIGN   3285>>ASSIGN
RGET_NODE_DESC.KEY
      2411**DCL      3095<>CALL     3097<>CALL
RGET_NODE_DESC.KEY.REP#
      2413**DCL      3044>>IF
RGET_NODE_DESC.KEY.TYPE#
      2413**DCL      3103>>IF       3121>>IF
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:85   
RGET_NODE_DESC.KEY.V$
      2413**DCL      3044>>ASSIGN   3044--ASSIGN
RGET_NODE_DESC.SPEC.TYPE#
      2427**DCL      3071>>IF       3093>>IF       3181>>IF       3183>>IF
RGET_NODE_DESC.SPEC.V$
      2427**DCL      2957--IMP-PTR  3093>>IF       3185>>DOCASE   3223>>CALL
SHOW_NEXT_ARRAY_ITEM
      3154**LABEL    3261--GOTO
SINPUT_FAILED
      3297**LABEL    3065--CALLALT
STRING_START IN PROCEDURE FORMAT_STRING
      6838**DCL      6857<<ASSIGN   6870>>IF       6875<<ASSIGN   6885<<ASSIGN   6887>>IF       6950>>IF
      6961<<ASSIGN
VD$BLOCK_DESC
      2480**DCL      3209<>CALL
VD$BUFFER
      2644**DCL      3231<>CALL
VD$BUFFER.BYTES
      2672**DCL      3063--ASSIGN   3088<<ASSIGN   3097<>CALL     3107>>ASSIGN   3112<<ASSIGN   3114<<ASSIGN
      3125>>ASSIGN   3130<<ASSIGN   3137<<ASSIGN   3151<<ASSIGN   3157<<ASSIGN   3167--ASSIGN   3171<<ASSIGN
      3191>>IF       3209<>CALL     3216<>CALL     3223<>CALL     3234<>CALL     3242<<ASSIGN   3242>>ASSIGN
      3250--ASSIGN   3259<<ASSIGN   3273<<ASSIGN   3285--ASSIGN   6856<<ASSIGN   6861<<ASSIGN   6864<<ASSIGN
      6871<<ASSIGN   6872<<CALLBLT  6888<<ASSIGN   6892<<ASSIGN   6951<<ASSIGN   6954<<ASSIGN   6957<<ASSIGN
      6960<<ASSIGN
VD$BUFFER.FLINK$
      2670**DCL      3147>>IF       3253>>IF       3257>>ASSIGN
VD$BUFFER.LENGTH#
      2670**DCL      2672--IMP-SIZ  3059>>IF       3063>>ASSIGN   3088>>ASSIGN   3097>>CALL     3107>>ASSIGN
      3112>>ASSIGN   3114>>ASSIGN   3125>>ASSIGN   3130>>ASSIGN   3137>>ASSIGN   3151>>ASSIGN   3157>>ASSIGN
      3167>>ASSIGN   3171>>ASSIGN   3191>>IF       3209>>CALL     3216>>CALL     3223>>CALL     3231>>CALL
      3234>>CALL     3242>>ASSIGN   3242>>ASSIGN   3242>>ASSIGN   3246>>ASSIGN   3250>>ASSIGN   3255>>IF
      3259>>ASSIGN   3273>>ASSIGN   3285>>ASSIGN   3286>>IF       6852>>ASSIGN   6856>>ASSIGN   6861>>ASSIGN
      6864>>ASSIGN   6871>>ASSIGN   6872>>CALLBLT  6888>>ASSIGN   6892>>ASSIGN   6951>>ASSIGN   6954>>ASSIGN
      6957>>ASSIGN   6960>>ASSIGN
VD$BUFFER.OBJECT.CLASS#
      2668**DCL      3180>>ASSIGN
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:86   
VD$BUFFER_HEADER
      2685**DCL      3079--CALL     3207--ASSIGN   6851--ASSIGN
VD$KEY
      2721**DCL      3216<>CALL
VD$NAME_SPEC.DATA_TYPE#
      2770**DCL      3093>>IF       3185>>DOCASE
VD$NUMBER.V#
      2817**DCL      3234<>CALL
VD$POINTER.V$
      2862**DCL      3205>>ASSIGN   3216>>CALL
VD$TEXTC.BYTES
      2883**DCL      3057>>ASSIGN
VD$TEXTC.LENGTH#
      2881**DCL      2883--IMP-SIZ  3056>>ASSIGN   3057>>ASSIGN   6849>>ASSIGN
VD$TEXTC_REMOTE.BYTES
      2944**DCL      3057<<ASSIGN
VD$TEXTC_REMOTE.LENGTH#
      2942**DCL      2944--IMP-SIZ  3044--ASSIGN   3056<<ASSIGN   3057>>ASSIGN
VDG$FORMAT_BLOCK_DESC
      3030**DCL-ENT  3209--CALL
VDG$FORMAT_KEY
      3031**DCL-ENT  3097--CALL     3216--CALL
VDG$FORMAT_NUMBER
      3032**DCL-ENT  3234--CALL
VDG$FORMAT_WINDOW_SPEC
      3033**DCL-ENT  3223--CALL
VDG$MONERR
      3034**DCL-ENT  3302--CALL
VDG$OALLOC
      3035**DCL-ENT  3079--CALL
VDP_KEY$
      2469**DCL      3056>>ASSIGN   3057>>ASSIGN   3057>>ASSIGN
VDP_KEY_AND_BUFFER$
      2470**DCL      3075>>IF       3079<>CALL     3088>>ASSIGN   3088>>ASSIGN   3092>>ASSIGN
VLP_PROMPT_DOT
       138**DCL      3271--ASSIGN
PL6.E3A0      #002=VDP$WFORMAT_RECORD File=VDP$WINDOW_I_O.:VDA5TSI               FRI 07/04/97 11:39 Page:87   
WINDOW$SPEC
      2957**DCL      3223<>CALL
WRITE_FAILED
      3297**LABEL    3256--CALLALT  3293--CALLALT

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:88   
      515        1        /*M* VDP$WREAD:  Read from a window via VDH.  */
      516        2        /*T***********************************************************/
      517        3        /*T*                                                         */
      518        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      519        5        /*T*                                                         */
      520        6        /*T***********************************************************/
      521        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
      522        8
      523        9        /*P*  NAME:         VDP$WREAD
      524       10              PURPOSE:      Presenter's read-from-a-window-via-VDH module.
      525       11              DESCRIPTION:  Called to read from the screen.
      526       12        */
      527       13
      528       14        VDP$WREAD: PROC ( NEXT_WINDOW$,
      529       15              ACTIVATION_CHARACTER,
      530       16              FROM_PRESENTER )
      531       17              ALTRET;
      532       18
      533       19        /*D*  NAME:         VDP$WREAD
      534       20              CALL:         CALL VDP$WREAD ( ininit_ptr );
      535       21              PARAMETERS:   uninit_ptr is an uninitialized ptr which is
      536       22                            set to the VD$FILE_NODE of the new ORG=SE
      537       23                            window selected, or to ADDR(NIL) if the
      538       24                            new window selected is the command window.
      539       25                            (Set upon return:  the interpreter itself reads
      540       26                            directly from the command window).
      541       27              INTERFACE:    Called from ??? when a window other than the
      542       28                            command window is to be read.
      543       29              ENVIRONMENT:  Nothing unusual.
      544       30              INPUT:
      545       31              OUTPUT:
      546       32              SCRATCH:
      547       33              DESCRIPTION:  o If the cursor location isn't within the current
      548       34                              displayed range of the window, tell VDH to clear
      549       35                              the window, and clear the window's RECORD_SET.
      550       36                            o If the RECORD_SET isn't empty, tell VDH about
      551       37                              the cursor field, including any highlighting
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:89   
      552       38                              that may be necessary.
      553       39                              Note that not all of the cursor field may be
      554       40                              on display in the window; the presenter must only
      555       41                              tell VDH about that porstion that is on display.
      556       42                            o Read from the window; act on the completion code.
      557       43                              If VDH needs records to display in the window,
      558       44                              it will immediately altreturn with an
      559       45                              E$RECORDS_NEEDED error.
      560       46                              ALTRETURN if an error has been encountered.
      561       47                              RETURN normally if the interpreter should read
      562       48                              from a different window (either the command window
      563       49                              or a different editing window).
      564       50                              If neither of these is the case, the presenter
      565       51                              shouldn't return yet, but should read again from
      566       52                              the current editing window.
      567       53        */
      568       54
      569       55          %INCLUDE CP_6;
      570      136          %INCLUDE CP_6_SUBS;
      571      676          %INCLUDE B_ERRORS_C;
      572     1802          %INCLUDE B$JIT;
      573     2092    1     DCL B$JIT$ PTR SYMREF;
      574     2093
      575     2094            %B$ALT;
      576     2102            %B$TCB;
      577     2105    1     DCL B$TCB$ PTR SYMREF;
      578     2106          %F$DCB;
      579     2163
      580     2164          %FPT_READ ( KEYR = YES );
      581     2203          %FPT_SINPUT;
      582     2240        %FPT_TRMATTR (TRMATTR = VLP_TRMATTR);
      583     2265        %VLP_TRMATTR;
      584     2303          %FPT_TRMCTL ( FPTN = FPT_EDTCTL,
      585     2304                        TRMCTL = VLP_EDTCTL,
      586     2305                        VLPTYPE = EDTCTL );
      587     2332          %VLP_EDTCTL ( FPTN = VLP_EDTCTL );
      588     2360          %FPT_WEOF;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:90   
      589     2374          %FPT_WRITE (BP=YES);
      590     2405
      591     2406          %INCLUDE VD_MACROS_M;
      592     4621          %INCLUDE VD_PERR_C;
      593     4769
      594     4770    1     DCL NEXT_WINDOW$ PTR PARAM;
      595     4771    1     DCL ACTIVATION_CHARACTER UBIN BYTE CALIGNED PARAM;
      596     4772    1     DCL FROM_PRESENTER BIT(1) ALIGNED PARAM;
      597     4773
      598     4774          %VD_6E ( STCLASS = SYMREF );
      599     4810    1     DCL VD_COMMAND_WINDOW$ PTR SYMREF;
      600     4811    1     DCL VD_CURRENT_WINDOW$ PTR SYMREF;
      601     4812    1     DCL VD_LAST_CWIN_ACTIVITY SBIN SYMREF;
      602     4813          %VD$NUMBER ( NAME = VD_$$MON_PRES,
      603     4814                       STCLASS = SYMREF );
      604     4859          %VD$NUMBER ( NAME = VD_$BY,
      605     4860                       STCLASS = SYMREF );
      606     4905          %VD$NUMBER ( NAME = VD_$COMMAND,
      607     4906                       STCLASS = SYMREF );
      608     4951          %VD$NUMBER ( NAME = VD_$KEY_GENERATION,
      609     4952                       STCLASS = SYMREF );
      610     4997          %VD$NUMBER ( NAME = VD_$MAX_RECORD,
      611     4998                       STCLASS = SYMREF );
      612     5043          %VD$NUMBER ( NAME = VD_$SCREEN,
      613     5044                       STCLASS = SYMREF );
      614     5089          %VD$NUMBER ( NAME = VD_$STRIP_BLANKS,
      615     5090                       STCLASS = SYMREF );
      616     5135
      617     5136          %VD$KEY ( NAME = RREAD_SAVED_KEY,
      618     5137                    STCLASS = AUTO );
      619     5151          %VD$KEY ( NAME = RECORD_SET_KEY,
      620     5152                    STCLASS = AUTO );
      621     5166          %VD$KEY ( NAME = VD_KEY_NUMERIC_BOF,
      622     5167                    STCLASS = SYMREF );
      623     5181          %VD$LOCATION ( NAME = RREAD_LOCATION,
      624     5182                         STCLASS = AUTO );
      625     5210          %VD$LOCATION_PTRS ( NAME = LOCATION_PTRS,
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:91   
      626     5211                              STCLASS = AUTO );
      627     5226          %VD$RANGE ( NAME = RECORD_SET_RANGE,
      628     5227                      STCLASS = AUTO );
      629     5296          %VD$NODE_DESC ( NAME = RGET_NODE_DESC,
      630     5297                          STCLASS = AUTO );
      631     5339          %VD$NODE_DESC ( NAME = VDP_NODE_DESC,
      632     5340                          STCLASS = SYMREF );
      633     5382          %VD$RANGE ( NAME = DELETION_RANGE,
      634     5383                      STCLASS = AUTO );
      635     5452    1     DCL FEP_DELREC_NUMERIC_KEY SBIN;
      636     5453    1     DCL FEP_POS SBIN;
      637     5454    1     DCL FEP_SINPUT_NUMERIC_KEY SBIN;
      638     5455    1     DCL FEP_WRITE_NUMERIC_KEY SBIN;
      639     5456
      640     5457    1     DCL FEP$READ_KEY BASED SBIN ALIGNED;
      641     5458
      642     5459    1     DCL 1 STREAM$PROTECT BASED,
      643     5460    1           2 FLAG (0:%(MX_ACCESS_LEVELS-1)) BIT(1);
      644     5461          %VD$BLOCK_DESC;
      645     5608          %VD$BUFFER;
      646     5666          %VD$BUFFER_HEADER;
      647     5702          %VD$ERR;
      648     5755          %VD$EVAL;
      649     6000          %VD$FILE_NODE;
      650     6093          %VD$KEY_LOCAL;
      651     6108          %VD$LOCATION;
      652     6136          %VD$PORT;
      653     6234          %VD$RECORD_SET;
      654     6312          %VD$STREAM;
      655     6418          %VD$TEXTC (ALIGNMENT=ALIGNED);
      656     6441          %VD$TEXTC_NUMBER;
      657     6455          %VD$TEXTC_REMOTE;
      658     6516          %VD$WINDOW_SPEC ( NAME = WINDOW$SPEC,
      659     6517                            STCLASS = "BASED ( CURRENT_WINDOW$ )" );
      660     6583          %VD$WINDOW_SPEC;
      661     6649
      662     6650    1     DCL VDP_BUFFER$ PTR STATIC SYMDEF INIT(ADDR(NIL));
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:92   
      663     6651    1     DCL VDP_KEY$ PTR STATIC SYMDEF INIT(ADDR(NIL));
      664     6652    1     DCL VDP_KEY_AND_BUFFER$ PTR STATIC SYMDEF INIT(ADDR(NIL));
      665     6653    1     DCL VDP_SPEC$ PTR STATIC SYMDEF INIT(ADDR(NIL));
      666     6654
      667     6655    1     DCL BOB_EOB_FLAG BIT(1) ALIGNED;
      668     6656    1     DCL CURRENT_WINDOW$ PTR;
      669     6657    1     DCL EDIT_BLOCK_START_KEY$ PTR;
      670     6658    1     DCL EDIT_BLOCK_END_KEY$ PTR;
      671     6659    1     DCL DONT_FORGET_TO_WEOF BIT(1) ALIGNED;
      672     6660    1     DCL EVAL_KEY$ PTR;
      673     6661    1     DCL EVAL_RANGE_LOCATION$ PTR;
      674     6662    1     DCL FEP_DELREC_KEY$ PTR;
      675     6663    1     DCL FEP_READ_RETURN_KEY$ PTR;
      676     6664    1     DCL FEP_READ_RETURN_KEY SBIN;
      677     6665    1     DCL LEVEL# SBIN;
      678     6666    1     DCL FEP_SINPUT_KEY$ PTR;
      679     6667    1     DCL FEP_WRITE_KEY$ PTR;
      680     6668    1     DCL JUST_PAST_RECORD_SET_KEY UBIN;
      681     6669    1     DCL LOCATION$ PTR;
      682     6670    1     DCL RREAD_SAVED_KEY$ PTR;
      683     6671    1     DCL NORMAL_READ_COMPLETION BIT(1) ALIGNED;
      684     6672    1     DCL RECORD_SET_INDEX UBIN;
      685     6673    1     DCL RECORD_SET_KEY$ PTR;
      686     6674    1     DCL RECORD_SET_SIZE SBIN;
      687     6675    1     DCL RELATIVE SBIN;
      688     6676    1     DCL SCROLL_INDEX UBIN;
      689     6677    1     DCL SINPUT_KEY$ PTR;
      690     6678    1     DCL SCROLL_LIMIT UBIN;
      691     6679    1     DCL SPEC$ PTR;
      692     6680    1     DCL STREAM_CURRENT_KEY$ PTR;
      693     6681    1     DCL WITHIN_RANGE SBIN ALIGNED;
      694     6682    1     DCL INTERRUPT_STATE_BEFORE_M$READ SBIN;
      695     6683    1     DCL INTERRUPT_STATE_AFTER_M$READ SBIN;
      696     6684
      697     6685    1     DCL VDA$PFLUSH ENTRY (2) ALTRET;
      698     6686    1     DCL VDA$LDELETE ENTRY (2) ALTRET;
      699     6687    1     DCL VDE$RREAD ENTRY (4) ALTRET;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:93   
      700     6688
      701     6689    1     DCL VDE$RGET ENTRY (3) ALTRET;
      702     6690    1     DCL VDE$RPUT ENTRY (6) ALTRET;
      703     6691    1     DCL VDE$RSEARCH ENTRY (4) ALTRET;
      704     6692
      705     6693    1     DCL VDG$EBREAK_ACKNOWLEDGE ENTRY (1);
      706     6694    1     DCL VDG$ERRMSG ENTRY(4) ALTRET;
      707     6695    1     DCL VDG$INFOMSG ENTRY(4) ALTRET;
      708     6696    1     DCL VDG$MONERR ENTRY ALTRET;
      709     6697    1     DCL VDG$WARNMSG ENTRY(4) ALTRET;
      710     6698    1     DCL VDG$EREPORT_ERROR ENTRY (1);
      711     6699    1     DCL VDG$ESCREECH ENTRY (3);
      712     6700    1     DCL VDG$EXPAND_COMMAND_WINDOW ENTRY (1) ALTRET;
      713     6701    1     DCL VDG$LOCATION_TO_PTRS ENTRY (2) ALTRET;
      714     6702    1     DCL VDG$MPRES_FEPDELREC ENTRY (3);
      715     6703    1     DCL VDG$MPRES_FEPREAD ENTRY (2);
      716     6704    1     DCL VDG$MPRES_FEPREAD_RETURN ENTRY (3);
      717     6705    1     DCL VDG$MPRES_FEPSINPUT ENTRY (2);
      718     6706    1     DCL VDG$MPRES_FEPSTRMCTL ENTRY (3);
      719     6707    1     DCL VDG$MPRES_FEPWEOF ENTRY (2);
      720     6708    1     DCL VDG$MPRES_FEPWRITE ENTRY (3);
      721     6709    1     DCL VDG$MPRES_WREAD ENTRY (3);
      722     6710    1     DCL VDG$MPRES_WREAD_RETURN ENTRY (2);
      723     6711    1     DCL VDG$OALLOC ENTRY (3) ALTRET;
      724     6712    1     DCL VDG$OCOPY ENTRY (2) ALTRET;
      725     6713    1     DCL VDG$OFREE ENTRY (1) ALTRET;
      726     6714    1     DCL VDG$OFREE_RANGE ENTRY (1) ALTRET;
      727     6715    1     DCL VDG$COMPARE_PTRS_W_RANGE ENTRY (3) ALTRET;
      728     6716    1     DCL VDI$BSPLIT ENTRY(4) ALTRET;
      729     6717
      730     6718    1     DCL VDP$NFLUSH ENTRY (1) ALTRET;
      731     6719    1     DCL VDP$RDELETE ENTRY (3) ALTRET;
      732     6720    1     DCL VDP$RWRITE ENTRY (5) ALTRET;
      733     6721    1     DCL VDP$WERASE ENTRY (1) ALTRET;
      734     6722    1     DCL VDP$WFORMAT_RECORD ENTRY (2) ALTRET;
      735     6723    1     DCL VDP$WSCROLL_DOWN ENTRY (4) ALTRET;
      736     6724    1     DCL VDP$WSCROLL_UP ENTRY (6) ALTRET;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:94   
      737     6725        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:95   
      738     6726    1       CURRENT_WINDOW$ = VD_CURRENT_WINDOW$ -> VD$FILE_NODE.DESC.SPEC.V$;
      739     6727    1       LEVEL# = WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.OPTIONS.LEVEL#;
      740     6728
      741     6729    1       IF VD_$$MON_PRES.V# > 0
      742     6730    1       THEN
      743     6731    1         CALL VDG$MPRES_WREAD ( ACTIVATION_CHARACTER,
      744     6732    1           FROM_PRESENTER,
      745     6733    1           WINDOW$SPEC );
      746     6734
      747     6735    1       IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT
      748     6736    1       THEN
      749     6737    1         CALL PRESENTER_IN_1_D
      750     6738    1           ALTRET ( PRESENTER_ALTRET );
      751     6739    1       ELSE
      752     6740    1         CALL PRESENTER_IN_2_D
      753     6741    1           ALTRET ( PRESENTER_ALTRET );
      754     6742
      755     6743    1       IF NOT FROM_PRESENTER
      756     6744    1       THEN
      757     6745    1         CALL UPDATE_SELECTEDBLOCK_TO_CURSOR
      758     6746    2         WHENALTRETURN DO; ALTRETURN; END;
      759     6747
      760     6748    1       IF VD_$$MON_PRES.V# > 0
      761     6749    1       THEN
      762     6750    1         CALL VDG$MPRES_WREAD_RETURN ( NEXT_WINDOW$,
      763     6751    1           WINDOW$SPEC );
      764     6752
      765     6753    1       RETURN;
      766     6754
      767     6755    1   PRESENTER_ALTRET:
      768     6756    1       IF NOT FROM_PRESENTER
      769     6757    1       THEN
      770     6758    1         CALL UPDATE_SELECTEDBLOCK_TO_CURSOR
      771     6759    2         WHENALTRETURN DO; ALTRETURN; END;
      772     6760
      773     6761    1       ALTRETURN;
      774     6762
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:96   
      775     6763        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:97   
      776     6764    1   PRESENTER_IN_1_D: PROC ALTRET;
      777     6765
      778     6766    2       CALL ALLOCATE_NECESSARY_OBJECTS;
      779     6767    2       VD_LAST_CWIN_ACTIVITY = 0; /* No screen clearing in 1dim mode */
      780     6768
      781     6769    3       DO CASE ( ACTIVATION_CHARACTER );
      782     6770
      783     6771    3         CASE ( ELSE );
      784     6772    3           RELATIVE = 0;
      785     6773
      786     6774        /*    CASE ( %EOM_SPLIT_RECORD );
      787     6775                CALL COMPLETION_INSERT_NO_ROOM ALTRET (RETALT);
      788     6776                RELATIVE = 0;
      789     6777         */
      790     6778    3         CASE ( %EOM_PREV_RECORD );
      791     6779    3           RELATIVE = -1;
      792     6780
      793     6781    3         CASE ( %EOM_NEXT_RECORD );
      794     6782    3           RELATIVE = 1;
      795     6783
      796     6784    3       END;
      797     6785
      798     6786    3       DO CASE ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# );
      799     6787
      800     6788    3         CASE ( %EVST_INITIAL,
      801     6789    3         %EVST_START );
      802     6790    3           EVAL_RANGE_LOCATION$ = ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.
              6790                    START );
      803     6791
      804     6792    3         CASE ( %EVST_END );
      805     6793    3           EVAL_RANGE_LOCATION$ = ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.
              6793                    ENDD );
      806     6794
      807     6795    3       END;
      808     6796
      809     6797    2       FPT_SINPUT.V.DCB# = WINDOW$SPEC.DCB#;
      810     6798    2       FPT_READ.V.DCB# = WINDOW$SPEC.DCB#;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:98   
      811     6799    2       FPT_READ.V.DVBYTE.REREAD# = %TRUE;
      812     6800
      813     6801    2       IF VD_$STRIP_BLANKS.V# = 0
      814     6802    2       THEN
      815     6803    2         FPT_READ.V.DVBYTE.BP# = %TRUE;
      816     6804    2       ELSE
      817     6805    2         FPT_READ.V.DVBYTE.BP# = %FALSE;
      818     6806
      819     6807    2       CALL COMPLETION_RECORD_NEEDED (RELATIVE, EVAL_RANGE_LOCATION$->VD$LOCATION)
      820     6808    3       WHENALTRETURN DO;
      821     6809    3   RETALT: ALTRETURN; END;
      822     6810
      823     6811    2   READ_THE_TERMINAL:
      824     6812    3       DO WHILE NOT BOB_EOB_FLAG;
      825     6813
      826     6814    3         CALL ALLOCATE_NECESSARY_OBJECTS;
      827     6815
      828     6816    3         IF VD_$$MON_PRES.V# > 0
      829     6817    3         THEN
      830     6818    3           CALL VDG$MPRES_FEPREAD ( WINDOW$SPEC.DCB#,
      831     6819    3             VDP_NODE_DESC );
      832     6820
      833     6821    3         INTERRUPT_STATE_BEFORE_M$READ = VD_6E.INTERRUPT.STATE#;
      834     6822    3         IF VD_6E.INTERRUPT.STATE# = %INST_BREAK_QUEUED THEN
      835     6823    3           NORMAL_READ_COMPLETION = %FALSE;
      836     6824    3         ELSE
      837     6825    3   TRACYS_READ_LABEL_IN_1D:
      838     6826    4           DO;
      839     6827    4             VD_6E.INTERRUPT.STATE# = %INST_READING;
      840     6828    4             CALL M$READ ( FPT_READ )
      841     6829    4             WHENRETURN
      842     6830    5               DO;
      843     6831    5                 NORMAL_READ_COMPLETION = %TRUE;
      844     6832    5               END;
      845     6833    4             WHENALTRETURN
      846     6834    5               DO;
      847     6835    5                 NORMAL_READ_COMPLETION = %FALSE;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:99   
      848     6836    5               END;
      849     6837    4           END TRACYS_READ_LABEL_IN_1D;
      850     6838
      851     6839    4         DO INHIBIT;
      852     6840    4           INTERRUPT_STATE_AFTER_M$READ = VD_6E.INTERRUPT.STATE#;
      853     6841    4           VD_6E.INTERRUPT.STATE# = INTERRUPT_STATE_BEFORE_M$READ;
      854     6842    4         END;
      855     6843
      856     6844    3         FPT_READ.V.DVBYTE.REREAD# = '1'B;
      857     6845
      858     6846    3         IF NORMAL_READ_COMPLETION
      859     6847    3         THEN
      860     6848    3   EVERYTHINGS_PEACHY:
      861     6849    4           DO;
      862     6850
      863     6851    4             VDP_BUFFER$ -> VD$BUFFER.LENGTH# = DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.
              6851                      ARS#;
      864     6852
      865     6853    4             IF VD_$$MON_PRES.V# > 0
      866     6854    4             THEN
      867     6855    4               CALL VDG$MPRES_FEPREAD_RETURN ( B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR,
      868     6856    4                 DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMVAL#.VALUE#,
      869     6857    4                 VDP_NODE_DESC );
      870     6858
      871     6859    4             CALL COMPLETION_NORMAL ALTRET (RETALT);
      872     6860
      873     6861    5             DO CASE ( DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMVAL#.VALUE# );
      874     6862
      875     6863    5               CASE ( ELSE );
      876     6864    5                 IF DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMVAL#.VALUE# ~=
      877     6865    5                   %EOM_SPLIT_RECORD THEN
      878     6866    6                   DO;
      879     6867    6                     FPT_READ.V.DVBYTE.REREAD# = '0'B; /* No reread if wordwrap */
      880     6868    6                     IF DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS# <=
      881     6869    6                       FPT_READ.BUF_.BOUND AND DCBADDR ( WINDOW$SPEC.DCB# ) ->
      882     6870    6                       F$DCB.EOMCHAR# = %EOM_EOR# THEN EXIT;
      883     6871    6                     CALL COMPLETION_EOM_COMMAND;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:100  
      884     6872    6                     RETURN;
      885     6873    6                   END;
      886     6874
      887     6875    5                 CALL COMPLETION_INSERT_NO_ROOM ALTRET (RETALT);
      888     6876
      889     6877    5                 IF WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_END THEN
      890     6878    5                   EVAL_RANGE_LOCATION$ =
      891     6879    5                     ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD );
      892     6880    5                 ELSE
      893     6881    5                   EVAL_RANGE_LOCATION$ =
      894     6882    5                     ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START );
      895     6883    5                 CALL COMPLETION_RECORD_NEEDED (0,
      896     6884    5                   EVAL_RANGE_LOCATION$ -> VD$LOCATION )
      897     6885    5                   ALTRET (RETALT);
      898     6886
      899     6887
      900     6888    5               CASE ( %EOM_NEXT_RECORD );
      901     6889    5                 CALL COMPLETION_RECORD_NEEDED ( 1 ) ALTRET (RETALT);
      902     6890
      903     6891    5               CASE ( %EOM_PREV_RECORD );
      904     6892    5                 CALL COMPLETION_RECORD_NEEDED ( -1 ) ALTRET (RETALT);
      905     6893
      906     6894    5               CASE ( %EOM_NEXT_ED_WINDOW );
      907     6895    5                 CALL COMPLETION_EOM_NEXT_ED_WINDOW ALTRET (RETALT);
      908     6896
      909     6897                    /*  If COMPLETION_EOM_NEXT_ED_WINDOW
      910     6898                        filled in NEXT_WINDOW$ with a *different*
      911     6899                        (ORG=SE) window, then return to the
      912     6900                        Interpreter.  */
      913     6901    5                 IF NEXT_WINDOW$ ~= VD_CURRENT_WINDOW$
      914     6902    5                 THEN
      915     6903    5                   RETURN;
      916     6904
      917     6905    5             END;
      918     6906
      919     6907    4           END EVERYTHINGS_PEACHY;
      920     6908    3         ELSE
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:101  
      921     6909    3   EVERYTHINGS_LOUSY:
      922     6910    4           DO;
      923     6911
      924     6912    5             IF INTERRUPT_STATE_AFTER_M$READ = %INST_BREAK_QUEUED THEN DO;
      925     6913    5                 CALL VDG$EBREAK_ACKNOWLEDGE; /* But don't report an error */
      926     6914    5                 CALL COMPLETION_EOM_COMMAND;
      927     6915    5                 RETURN;
      928     6916    5               END;
      929     6917
      930     6918    4             CALL VDG$MONERR;
      931     6919    4             ALTRETURN;
      932     6920
      933     6921    4           END EVERYTHINGS_LOUSY;
      934     6922
      935     6923    3       END READ_THE_TERMINAL;
      936     6924
      937     6925        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:102  
      938     6926    2   COMPLETION_RECORD_NEEDED: PROC ( RELATIVE, LOCATION ) ALTRET;
      939     6927
      940     6928    3     DCL RELATIVE SBIN PARAM;
      941     6929          %VD$LOCATION (NAME=LOCATION, STCLASS=PARAM);
      942     6957    3     DCL KT_TO_INCR(0:3) CONSTANT SBIN INIT (65535,1,65535,10000);
      943     6958
      944     6959    3       BOB_EOB_FLAG = %FALSE;
      945     6960
      946     6961    3       RREAD_SAVED_KEY = WINDOW$SPEC.OPERAND.STREAM$ ->
      947     6962    3         VD$STREAM.CURRENT.KEY (LEVEL# - 1);
      948     6963
      949     6964    3       CALL VDE$RREAD ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,
      950     6965    3         WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
      951     6966    3         LOCATION /* absolute position = wherever */,
      952     6967    3         RELATIVE /* relative position = forward or backward 1 */ )
      953     6968    3       WHENALTRETURN
      954     6969    4         DO;
      955     6970    4           ALTRETURN;
      956     6971    4         END;
      957     6972
      958     6973
      959     6974    3       IF RELATIVE < 0
      960     6975    3       THEN
      961     6976    3   CHECK_FOR_BOF:
      962     6977    4         DO;
      963     6978                %GETKEY ( KEY = "WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY",
      964     6979                INDX = LEVEL# - 1,
      965     6980                PTR = STREAM_CURRENT_KEY$ );
      966     6990                %GETKEY ( KEY = "RREAD_SAVED_KEY",
      967     6991                PTR = RREAD_SAVED_KEY$ );
      968     7001    4           IF STREAM_CURRENT_KEY$ -> VD$TEXTC >= RREAD_SAVED_KEY$ -> VD$TEXTC
      969     7002    4           THEN
      970     7003    4             BOB_EOB_FLAG = %TRUE;
      971     7004    4         END CHECK_FOR_BOF;
      972     7005
      973     7006    3       IF NOT BOB_EOB_FLAG
      974     7007    3       THEN
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:103  
      975     7008    4         DO;
      976     7009    4           CALL VDE$RGET ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,
      977     7010    4             WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
      978     7011    4             RGET_NODE_DESC )
      979     7012    4           WHENALTRETURN
      980     7013    5             DO;
      981     7014    5               ALTRETURN;
      982     7015    5             END;
      983     7016
      984     7017
      985     7018    4           IF RGET_NODE_DESC.KEY = %CLEAR
      986     7019    4           THEN
      987     7020    4             BOB_EOB_FLAG = %TRUE;
      988     7021    4         END;
      989     7022
      990     7023    3       IF BOB_EOB_FLAG
      991     7024    3       THEN
      992     7025    3   BOB_OR_EOB_REACHED:
      993     7026    4         DO;
      994     7027    4           IF RELATIVE < 0
      995     7028    4           THEN
      996     7029    4             CALL VDG$WARNMSG (%E$INFO_BOB);
      997     7030    4           ELSE
      998     7031    4             CALL VDG$WARNMSG (%E$INFO_EOB);
      999     7032    4           CALL VDG$EREPORT_ERROR;
     1000     7033
     1001     7034    4           CALL COMPLETION_EOM_COMMAND
     1002     7035    4           WHENALTRETURN
     1003     7036    5             DO;
     1004     7037    5               ALTRETURN;
     1005     7038    5             END;
     1006     7039
     1007     7040    4           RETURN;
     1008     7041    4         END BOB_OR_EOB_REACHED;
     1009     7042
     1010     7043    3       IF ADDR ( LOCATION ) ~= ADDR ( NIL ) AND RELATIVE = 0 THEN
     1011     7044    3         FPT_SINPUT.V.REREADPOS# = LOCATION.POSITION# + 1;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:104  
     1012     7045    3       ELSE FPT_SINPUT.V.REREADPOS# = 1;
     1013     7046    3       WINDOW$SPEC.EDTCTL.KEY_INCR# = KT_TO_INCR (RGET_NODE_DESC.KEY.TYPE#);
     1014     7047    3       CALL VDP$WFORMAT_RECORD ( RGET_NODE_DESC,
     1015     7048    3         FPT_SINPUT)
     1016     7049    3       WHENALTRETURN
     1017     7050    4         DO;
     1018     7051    4           ALTRETURN;
     1019     7052    4         END;
     1020     7053
     1021     7054    3       RETURN;
     1022     7055
     1023     7056    3   END COMPLETION_RECORD_NEEDED;
     1024     7057
     1025     7058    2   END PRESENTER_IN_1_D;
     1026     7059        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:105  
     1027     7060    1   PRESENTER_IN_2_D: PROC ALTRET;
     1028     7061
     1029     7062    2       WITHIN_RANGE = %RCCL_GREATER;
     1030     7063    3       IF NOT DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.FCD# THEN DO;
     1031     7064    3           CALL COMPLETION_NO_WINDOW;
     1032     7065    3           RETURN; /* Give up until the window comes back */
     1033     7066    3         END;
     1034     7067    2       IF NOT FROM_PRESENTER
     1035     7068    2         AND WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# ~= 0
     1036     7069    2       THEN
     1037     7070    2   CHECK_CURSOR_POSITION:
     1038     7071    3         DO;
     1039     7072
     1040     7073    3   CHECK_CURSOR_NEAR_RECORD_SET:
     1041     7074    4           DO;
     1042     7075    4             WITHIN_RANGE = 0;
     1043     7076    4             RELATIVE = 0;
     1044     7077    5             DO CASE ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# );
     1045     7078
     1046     7079    5               CASE ( %EVST_INITIAL,
     1047     7080    5               %EVST_START );
     1048     7081    5                 LOCATION$ = ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START );
     1049     7082    5               CASE ( %EVST_END );
     1050     7083    5                 LOCATION$ = ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD );
     1051     7084    5             END;
     1052     7085
     1053     7086    4             IF LOCATION$ -> VD$LOCATION.EOF
     1054     7087    4             THEN
     1055     7088    4   CURSOR_CALLS_FOR_EOB:
     1056     7089    5               DO;
     1057     7090    5                 IF WINDOW$SPEC.EOB_DISPLAYED
     1058     7091    5                 THEN
     1059     7092    5                   EXIT CHECK_CURSOR_NEAR_RECORD_SET;
     1060     7093    5                 ELSE
     1061     7094    5                   WITHIN_RANGE = %RCCL_GREATER;
     1062     7095    5               END CURSOR_CALLS_FOR_EOB;
     1063     7096
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:106  
     1064     7097    4             RECORD_SET_RANGE = %CLEAR;
     1065     7098    4             RECORD_SET_RANGE.START.KEY (LEVEL# - 1) =
     1066     7099    4               WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY (0);
     1067     7100    4             RECORD_SET_RANGE.ENDD.KEY (LEVEL# - 1) =
     1068     7101    4               WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY
     1069     7102    4               ( WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# - 1 );
     1070     7103    5             DO WHILE %TRUE;
     1071     7104
     1072     7105    5               CALL VDG$LOCATION_TO_PTRS ( LOCATION$ -> VD$LOCATION,
     1073     7106    5                 LOCATION_PTRS )
     1074     7107    5               WHENALTRETURN
     1075     7108    6                 DO;
     1076     7109    6   RETALT:         ALTRETURN;
     1077     7110    6                 END;
     1078     7111
     1079     7112    5               IF WITHIN_RANGE = %RCCL_EQUAL
     1080     7113    5               THEN
     1081     7114    5                 CALL VDG$COMPARE_PTRS_W_RANGE ( LOCATION_PTRS,
     1082     7115    5                   RECORD_SET_RANGE,
     1083     7116    5                   WITHIN_RANGE )
     1084     7117    5                 WHENRETURN
     1085     7118    6                   DO;
     1086     7119    6                     EXIT CHECK_CURSOR_NEAR_RECORD_SET;
     1087     7120    6                   END;
     1088     7121
     1089     7122    5               IF RELATIVE ~= %RCCL_EQUAL
     1090     7123    5               THEN EXIT;
     1091     7124    5               RELATIVE = WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES#;
     1092     7125    5               IF RELATIVE > 1 THEN RELATIVE = RELATIVE/2;
     1093     7126    5               RELATIVE = - RELATIVE * WITHIN_RANGE;
     1094     7127
     1095     7128        /* Access half-a-set closer to the set, to see if we're "close enough" */
     1096     7129
     1097     7130    5               CALL VDE$RREAD ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,
     1098     7131    5                 WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1099     7132    5                 LOCATION$ -> VD$LOCATION,
     1100     7133    5                 RELATIVE ) ;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:107  
     1101     7134    5               WITHIN_RANGE = %RCCL_EQUAL;
     1102     7135    5               LOCATION$ = ADDR( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT );
     1103     7136    5             END;
     1104     7137    4           END CHECK_CURSOR_NEAR_RECORD_SET;
     1105     7138
     1106     7139    3           IF WITHIN_RANGE ~= %RCCL_EQUAL
     1107     7140    3           THEN
     1108     7141    3   CLEAR_RECORD_SET:
     1109     7142    4             DO;
     1110     7143    4               CALL VDP$WERASE ( WINDOW$SPEC ) ALTRET (RETALT);
     1111     7144    4             END CLEAR_RECORD_SET;
     1112     7145    3           ELSE
     1113     7146    3   SET_CURSOR_POSITION:
     1114     7147    4             DO;
     1115     7148    4               CALL UPDATE_CURSOR_TO_SELECTEDBLOCK
     1116     7149    4                 ALTRET (RETALT);
     1117     7150    4             END SET_CURSOR_POSITION;
     1118     7151
     1119     7152    3           WITHIN_RANGE = RELATIVE; /* restore any "real" need to position */
     1120     7153    3         END CHECK_CURSOR_POSITION;
     1121     7154
     1122     7155        /*N*  Highlight the cursor field.
     1123     7156            IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET ~= %CLEAR
     1124     7157            THEN
     1125     7158        DECLARE_CURSOR_FIELD:
     1126     7159              DO;
     1127     7160
     1128     7161                CALL M$DCLFLD ( FPT_DCLFLD )
     1129     7162                WHENALTRETURN
     1130     7163                DO;
     1131     7164                  VD$ERR...
     1132     7165                END;
     1133     7166
     1134     7167              END DECLARE_CURSOR_FIELD;
     1135     7168        */
     1136     7169
     1137     7170    2       FPT_READ.V.DCB# = WINDOW$SPEC.DCB#;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:108  
     1138     7171    2       FPT_READ.V.DVBYTE.REREAD# = %FALSE;
     1139     7172
     1140     7173    2       IF VD_$STRIP_BLANKS.V# = 0
     1141     7174    2       THEN
     1142     7175    2         FPT_READ.V.DVBYTE.BP# = %TRUE;
     1143     7176    2       ELSE
     1144     7177    2         FPT_READ.V.DVBYTE.BP# = %FALSE;
     1145     7178
     1146     7179    2   READ_THE_SCREEN:
     1147     7180    3       DO WHILE ( '1'B );
     1148     7181
     1149     7182    3   UGLY_RETRY_UC17_ERROR_LABEL:
     1150     7183    3         CALL ALLOCATE_NECESSARY_OBJECTS;
     1151     7184
     1152     7185    3   CHECK_KEYINCR_AND_KEYTYPE:
     1153     7186    4         DO;
     1154     7187
     1155     7188    4           VLP_EDTCTL.KEYINCR# = WINDOW$SPEC.EDTCTL.KEY_INCR#;
     1156     7189    4           VLP_EDTCTL.KEYTYPE# = WINDOW$SPEC.EDTCTL.KEY_GENERATION#;
     1157     7190
     1158     7191    4           IF ADDR ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.PROTECT
     1159     7192    4             ( WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.OPTIONS.LEVEL# )
     1160     7193    4             ) -> STREAM$PROTECT.FLAG
     1161     7194    4             ( WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.OPTIONS.COMPONENT# )
     1162     7195    4           THEN
     1163     7196    4   WINDOW_IS_PROTECTED:
     1164     7197    5             DO;
     1165     7198    5               IF VLP_EDTCTL.KEYINCR# = 65535
     1166     7199    5               THEN
     1167     7200    5                 EXIT CHECK_KEYINCR_AND_KEYTYPE;
     1168     7201    5               VLP_EDTCTL.KEYINCR# = 65535;
     1169     7202    5               VLP_EDTCTL.KEYTYPE# = %KEYTYPE_BIN10#;
     1170     7203    5               VLP_TRMATTR.FCNTBL# = 'SE2';
     1171     7204    5             END WINDOW_IS_PROTECTED;
     1172     7205    4           ELSE
     1173     7206    4   WINDOW_IS_UNPROTECTED:
     1174     7207    5             DO;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:109  
     1175     7208    6               DO CASE ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.PORT$ ->
     1176     7209    6                 VD$PORT.LEVEL.ORG# ( LEVEL# ) );
     1177     7210
     1178     7211    6                 CASE ( %KEYED# );
     1179     7212    6                   IF WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.PORT$ ->
     1180     7213    6                     VD$PORT.LEVEL.KEY_TYPE# ( LEVEL# ) =
     1181     7214    6                     %KT_STRING
     1182     7215    6                   THEN
     1183     7216    6   UNPROTECTED_KEYED_STRING:
     1184     7217    7                     DO;
     1185     7218    7                       IF VLP_EDTCTL.KEYINCR# = 65535
     1186     7219    7                       THEN
     1187     7220    7                         EXIT CHECK_KEYINCR_AND_KEYTYPE;
     1188     7221    7                       VLP_EDTCTL.KEYINCR# = 65535;
     1189     7222    7                       VLP_EDTCTL.KEYTYPE# = %KEYTYPE_BIN10#;
     1190     7223    7                     END UNPROTECTED_KEYED_STRING;
     1191     7224    6                   ELSE
     1192     7225    6   UNPROTECTED_KEYED_NUMBER:
     1193     7226    7                     DO;
     1194     7227    7                       IF VLP_EDTCTL.KEYINCR# = VD_$BY.V#
     1195     7228    7                         AND VLP_EDTCTL.KEYTYPE# = WINDOW$SPEC.EDTCTL.KEY_GENERATION#
     1196     7229    7                       THEN
     1197     7230    7                         EXIT CHECK_KEYINCR_AND_KEYTYPE;
     1198     7231    7                       VLP_EDTCTL.KEYINCR# = VD_$BY.V#;
     1199     7232    7                       VLP_EDTCTL.KEYTYPE# = WINDOW$SPEC.EDTCTL.KEY_GENERATION#;
     1200     7233    7                     END UNPROTECTED_KEYED_NUMBER;
     1201     7234
     1202     7235    6                 CASE ( %INDEXED# );
     1203     7236    6   UNPROTECTED_INDEXED:
     1204     7237    7                   DO;
     1205     7238    7                     IF VLP_EDTCTL.KEYINCR# = 65535
     1206     7239    7                     THEN
     1207     7240    7                       EXIT CHECK_KEYINCR_AND_KEYTYPE;
     1208     7241    7                     VLP_EDTCTL.KEYINCR# = 65535;
     1209     7242    7                     VLP_EDTCTL.KEYTYPE# = %KEYTYPE_BIN10#;
     1210     7243    7                   END UNPROTECTED_INDEXED;
     1211     7244
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:110  
     1212     7245    6                 CASE ( %CONSEC# );
     1213     7246    6   UNPROTECTED_CONSEC:
     1214     7247    7                   DO;
     1215     7248    7                     IF VLP_EDTCTL.KEYINCR# = 1
     1216     7249    7                     THEN
     1217     7250    7                       EXIT CHECK_KEYINCR_AND_KEYTYPE;
     1218     7251    7                     VLP_EDTCTL.KEYINCR# = 1;
     1219     7252    7                     VLP_EDTCTL.KEYTYPE# = %KEYTYPE_BIN10#;
     1220     7253    7                   END UNPROTECTED_CONSEC;
     1221     7254
     1222     7255    6               END;
     1223     7256    5   USE_UNPROTECTED_TABLE:
     1224     7257    5               VLP_TRMATTR.FCNTBL# = 'SE1';
     1225     7258    5             END WINDOW_IS_UNPROTECTED;
     1226     7259
     1227     7260    4           FPT_EDTCTL.V.DCB# = WINDOW$SPEC.DCB#;
     1228     7261    4           FPT_TRMATTR.V.DCB# = WINDOW$SPEC.DCB#;
     1229     7262    4           WINDOW$SPEC.EDTCTL.KEY_INCR# = VLP_EDTCTL.KEYINCR#;
     1230     7263    4           WINDOW$SPEC.EDTCTL.KEY_GENERATION# = VLP_EDTCTL.KEYTYPE#;
     1231     7264    4           CALL M$STRMATTR (FPT_TRMATTR) ALTRET (BAD_STRM_XXX);
     1232     7265
     1233     7266    4           CALL M$STRMCTL ( FPT_EDTCTL )
     1234     7267    4           WHENALTRETURN
     1235     7268    5             DO;
     1236     7269    5   BAD_STRM_XXX: CALL VDG$MONERR;
     1237     7270    5               ALTRETURN;
     1238     7271    5             END;
     1239     7272
     1240     7273    4         END CHECK_KEYINCR_AND_KEYTYPE;
     1241     7274
     1242     7275              /*
     1243     7276              *   Flush keyins, etc (and ONLY other window screen updates) to the
     1244     7277              *   terminal.  (We don't need to flush screen updates to this window
     1245     7278              *   because the M$READ below will do that automatically.)
     1246     7279              */
     1247     7280    3         WINDOW$SPEC.SCREEN_UPDATED = %TRUE;
     1248     7281    3         CALL VDP$NFLUSH (%TRUE) ALTRET (RETALT);
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:111  
     1249     7282
     1250     7283
     1251     7284    3         IF VD_$$MON_PRES.V# > 0
     1252     7285    3         THEN
     1253     7286    3           CALL VDG$MPRES_FEPREAD ( WINDOW$SPEC.DCB#,
     1254     7287    3             VDP_NODE_DESC );
     1255     7288
     1256     7289    3         IF VD_6E.INTERRUPT.STATE# = %INST_BREAK_QUEUED THEN
     1257     7290    3           NORMAL_READ_COMPLETION = %TRUE;   /* Act like CNTL-C typed */
     1258     7291    3         ELSE
     1259     7292    3   TRACYS_READ_LABEL:
     1260     7293    4           DO;
     1261     7294    4             INTERRUPT_STATE_BEFORE_M$READ = VD_6E.INTERRUPT.STATE#;
     1262     7295    4             VD_6E.INTERRUPT.STATE# = %INST_READING;
     1263     7296    4             CALL M$READ ( FPT_READ )
     1264     7297    4             WHENRETURN
     1265     7298    5               DO;
     1266     7299    5                 NORMAL_READ_COMPLETION = %TRUE;
     1267     7300    5               END;
     1268     7301    4             WHENALTRETURN
     1269     7302    5               DO;
     1270     7303    5                 NORMAL_READ_COMPLETION = %FALSE;
     1271     7304    5               END;
     1272     7305    4           END TRACYS_READ_LABEL;
     1273     7306
     1274     7307    4         DO INHIBIT;
     1275     7308    4           INTERRUPT_STATE_AFTER_M$READ = VD_6E.INTERRUPT.STATE#;
     1276     7309    4           VD_6E.INTERRUPT.STATE# = INTERRUPT_STATE_BEFORE_M$READ;
     1277     7310    4         END;
     1278     7311
     1279     7312    4         IF NOT DCBADDR ( FPT_READ.V.DCB# ) -> F$DCB.FCD# THEN DO;
     1280     7313    4             CALL COMPLETION_NO_WINDOW;
     1281     7314    4             RETURN; /* Give up until the window comes back */
     1282     7315    4           END;
     1283     7316
     1284     7317              /*  Should SCREEN_UPDATED be set if this M$READ
     1285     7318                  ALTRETs, too?  */
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:112  
     1286     7319    3         WINDOW$SPEC.SCREEN_UPDATED = %TRUE;
     1287     7320
     1288     7321              /*  The FEP refuses to include the count in the key itself,
     1289     7322                  so for numeric-type keys (keyed or sequential files),
     1290     7323                  stick the LENGTH# of %NB_NUMERIC_KEY on top of the
     1291     7324                  first byte.  */
     1292     7325    3         FEP_READ_RETURN_KEY = FPT_READ.KEY_.KEY$ -> FEP$READ_KEY;
     1293     7326    3         FEP_READ_RETURN_KEY$ = FPT_READ.KEY_.KEY$;
     1294     7327    3         IF VDP_NODE_DESC.KEY.TYPE# ~= %KT_STRING
     1295     7328    3         THEN
     1296     7329    3           FPT_READ.KEY_.KEY$ -> VD$TEXTC.LENGTH# = %NB_NUMERIC_KEY;
     1297     7330    3         ELSE
     1298     7331    3           IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# = 0
     1299     7332    3           THEN
     1300     7333    3             FEP_READ_RETURN_KEY$ = ADDR ( VD_KEY_NUMERIC_BOF.V$ );
     1301     7334    4           ELSE DO;
     1302     7335    4               VDP_NODE_DESC.KEY = WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY
     1303     7336    4                 ( FEP_READ_RETURN_KEY -
     1304     7337    4                 WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.SQ_OFFSET# );
     1305     7338                    %GETKEY (KEY = VDP_NODE_DESC.KEY,
     1306     7339                    PTR = FEP_READ_RETURN_KEY$ );
     1307     7349    4             END;
     1308     7350
     1309     7351
     1310     7352              /*  If the key returned will fit in a VD$KEY_LOCAL
     1311     7353                  (which it does in the normal cases of keyed or sequential
     1312     7354                  files), then rearrange VDP_NODE_DESC to have a local key.
     1313     7355                  (When VDP_NODE_DESC.KEY.REP# = %REP_REMOTE,
     1314     7356                  VDP_NODE_DESC.KEY.V$ = VDP_KEY$.)  */
     1315     7357    3         IF FEP_READ_RETURN_KEY$ -> VD$TEXTC.LENGTH# <= %MXNB_STRING_LOCAL
     1316     7358    3         THEN
     1317     7359    4           DO;
     1318     7360    4             VDP_NODE_DESC.KEY.REP# = %REP_LOCAL;
     1319     7361    4             ADDR( VDP_NODE_DESC.KEY.V$ ) -> FEP$READ_KEY =
     1320     7362    4               FEP_READ_RETURN_KEY$ -> FEP$READ_KEY;
     1321     7363    4             FEP_READ_RETURN_KEY$ = ADDR( VDP_NODE_DESC.KEY.V$ );
     1322     7364    4           END;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:113  
     1323     7365              %GETKEY ( KEY = VDP_NODE_DESC.KEY,
     1324     7366              PTR = FEP_READ_RETURN_KEY$ );
     1325     7376
     1326     7377    3         VDP_BUFFER$ -> VD$BUFFER.LENGTH# = DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS#;
     1327     7378
     1328     7379    3         IF VD_$$MON_PRES.V# > 0
     1329     7380    3         THEN
     1330     7381    3           CALL VDG$MPRES_FEPREAD_RETURN ( B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR,
     1331     7382    3             DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMCHAR#,
     1332     7383    3             VDP_NODE_DESC );
     1333     7384
     1334     7385    3         IF NORMAL_READ_COMPLETION
     1335     7386    3         THEN
     1336     7387    3   EVERYTHINGS_PEACHY:
     1337     7388    4           DO;
     1338     7389                  %GETKEY ( KEY = "WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY",
     1339     7390                  INDX = "WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# - 1",
     1340     7391                  PTR = RECORD_SET_KEY$ );
     1341     7401
     1342     7402        /*    This is the Keep the Good Record code.  We call COMPLETION_NORMAL to
     1343     7403              accomplish writing of updated records for us.  We want to be careful not
     1344     7404              to write things too soon.      */
     1345     7405
     1346     7406    5             DO CASE ( DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMVAL#.VALUE# );
     1347     7407
     1348     7408    5               CASE ( %ASCBIN ( EOM_EOR# ), ELSE );
     1349     7409    5                 CALL COMPLETION_NORMAL
     1350     7410    5                   ALTRET (RETALT);
     1351     7411                      /*  When EOMVAL#.VALUE# (yuk) is %EOM_EOR#:
     1352     7412                          "the user simply moved off a changed
     1353     7413                          or inserted record".  */
     1354     7414                      /*  ALSO !!  If EOMVAL# is EOM_EOR# or a blank (??) and
     1355     7415                          INTERRUPT_STATE_AFTER_M$READ is %INST_BREAK_QUEUED, then
     1356     7416                          acknowledge the break and act like the user typed CNTL-C.  */
     1357     7417    6                 IF INTERRUPT_STATE_AFTER_M$READ = %INST_BREAK_QUEUED THEN DO;
     1358     7418    6                     CALL VDG$EBREAK_ACKNOWLEDGE; /* But don't report an error */
     1359     7419    6                     CALL COMPLETION_EOM_COMMAND ALTRET (RETALT);
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:114  
     1360     7420    6                     RETURN;
     1361     7421    6                   END;
     1362     7422
     1363     7423    5               CASE ( %EOM_COMMAND );
     1364     7424                       /* Write to the file only if updated */
     1365     7425    5                 IF NOT ( DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.DVBYTE.TRANS# )
     1366     7426    6                 THEN DO;
     1367     7427    6                     CALL COMPLETION_NORMAL ALTRET (RETALT);
     1368     7428    6                   END;
     1369     7429    5                 CALL COMPLETION_EOM_COMMAND ALTRET (RETALT);
     1370     7430
     1371     7431    5                 RETURN;
     1372     7432
     1373     7433    5               CASE ( %EOM_NEXT_ED_WINDOW );
     1374     7434    5                 IF NOT ( DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.DVBYTE.TRANS# )
     1375     7435    6                 THEN DO;
     1376     7436    6                     CALL COMPLETION_NORMAL ALTRET (RETALT);
     1377     7437    6                   END;
     1378     7438    5                 CALL COMPLETION_EOM_NEXT_ED_WINDOW ALTRET (RETALT);
     1379     7439
     1380     7440                      /*  If COMPLETION_EOM_NEXT_ED_WINDOW
     1381     7441                          filled in NEXT_WINDOW$ with a *different*
     1382     7442                          (ORG=SE) window, then return to the
     1383     7443                          Interpreter.  */
     1384     7444    5                 IF NEXT_WINDOW$ ~= VD_CURRENT_WINDOW$
     1385     7445    5                 THEN
     1386     7446    5                   RETURN;
     1387     7447
     1388     7448    5             END;
     1389     7449
     1390     7450    4           END EVERYTHINGS_PEACHY;
     1391     7451    3         ELSE
     1392     7452    3   EVERYTHINGS_LOUSY:
     1393     7453    4           DO;
     1394     7454
     1395     7455    5             DO CASE ( B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE );
     1396     7456
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:115  
     1397     7457    5               CASE ( %E$RECORD_DELETED );
     1398     7458    5                 CALL COMPLETION_RECORD_DELETED
     1399     7459    5                 WHENALTRETURN
     1400     7460    6                   DO;
     1401     7461    6                     ALTRETURN;
     1402     7462    6                   END;
     1403     7463
     1404     7464    5               CASE ( %E$RECORDS_NEEDED );
     1405     7465                      /*  I hate this code.
     1406     7466                          See comments in VDP$WNEW where MX_ENTRIES# is set to 507.  */
     1407     7467    5                 IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.MX_ENTRIES# = 507
     1408     7468    5                 THEN
     1409     7469    5   GET_A_REAL_RECORD_SET:
     1410     7470    6                   DO;
     1411     7471    6                     IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# ~= 0
     1412     7472    6                     THEN
     1413     7473    6                       CALL VDG$ESCREECH;
     1414     7474                          /* Restore the actual # of slots in the recset */
     1415     7475    6                     WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.MX_ENTRIES# = 1;
     1416     7476    6                     CALL VDG$OFREE ( WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET );
     1417     7477    6                     CALL VDG$OALLOC ( %CLS_RECORD_SET,
     1418     7478    6                       WINDOW$SPEC.RECORD_SET$,
     1419     7479    6                       ( SIZEC (VD$RECORD_SET)
     1420     7480    6                       + ( SIZEC (VD$RECORD_SET.DESC (0))
     1421     7481    6                       * (DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS# - 1))
     1422     7482    6                       + (%NB_PER_WORD - 1) ) / %NB_PER_WORD )
     1423     7483    7                     WHENALTRETURN DO; ALTRETURN; END;
     1424     7484    6                   END GET_A_REAL_RECORD_SET;
     1425     7485
     1426     7486
     1427     7487    5                 CALL COMPLETION_RECORDS_NEEDED
     1428     7488    5                   ( DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS# )
     1429     7489    5                   ALTRET (RETALT);
     1430     7490
     1431     7491    5                 IF FROM_PRESENTER
     1432     7492    5                 THEN
     1433     7493    5                   RETURN;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:116  
     1434     7494
     1435     7495                      /*  If we tried to position outside the VDH cache,
     1436     7496                          WITHIN_RANGE is still non-zero.
     1437     7497                          If that's the case, we want to M$SINPUT to
     1438     7498                          the correct record.  Trust me.  */
     1439     7499    5                 IF WITHIN_RANGE ~= 0
     1440     7500    5                 THEN
     1441     7501    5   SINPUT_FOR_PREVIOUS_ERASE:
     1442     7502    6                   DO;
     1443     7503    6                     CALL UPDATE_CURSOR_TO_SELECTEDBLOCK ALTRET (RETALT);
     1444     7504    6                   END SINPUT_FOR_PREVIOUS_ERASE;
     1445     7505
     1446     7506    5               CASE ( %E$INSERT_NO_ROOM );
     1447     7507                      /*  Although this is an ALTRET condition, the data
     1448     7508                          returned in FPT_READ.BUF_ should be valid.  */
     1449     7509    5                 IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# > 0
     1450     7510    5                   OR VDP_BUFFER$-> VD$BUFFER.LENGTH# > 0 THEN
     1451     7511    5                   CALL COMPLETION_NORMAL ALTRET (RETALT);
     1452     7512
     1453     7513    5                 CALL COMPLETION_INSERT_NO_ROOM ALTRET (RETALT);
     1454     7514
     1455     7515    5                 CALL UPDATE_CURSOR_TO_SELECTEDBLOCK;
     1456     7516
     1457     7517    5               CASE ( ELSE );
     1458     7518                      /*  Big fat hairy kludge:
     1459     7519                          if the FEP said, "That key doesn't exist...",
     1460     7520                          it's complaining about a bad (actually good)
     1461     7521                          M$SINPUT before this M$READ.  Just M$SINPUT
     1462     7522                          again and retry the M$READ.  */
     1463     7523    5                 IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOKEY
     1464     7524    5                 THEN
     1465     7525    5   RETRY_UC17_ERROR:
     1466     7526    6                   DO;
     1467     7527    6                     FEP_SINPUT_NUMERIC_KEY = FEP_READ_RETURN_KEY;
     1468     7528    6                     FPT_SINPUT.BUF_ = VECTOR ( FEP_SINPUT_NUMERIC_KEY );
     1469     7529    6                     FPT_SINPUT.V.DCB# = WINDOW$SPEC.DCB#;
     1470     7530
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:117  
     1471     7531    6                     IF VD_$$MON_PRES.V# > 0
     1472     7532    6                     THEN
     1473     7533    6                       CALL VDG$MPRES_FEPSINPUT ( WINDOW$SPEC.DCB#,
     1474     7534    6                         VDP_NODE_DESC.KEY );
     1475     7535
     1476     7536    7                     CALL M$SINPUT ( FPT_SINPUT ) WHENRETURN DO;
     1477     7537    7                         GOTO UGLY_RETRY_UC17_ERROR_LABEL;
     1478     7538    7                       END;
     1479     7539    6                   END RETRY_UC17_ERROR;
     1480     7540
     1481     7541    5                 CALL VDG$MONERR;
     1482     7542    5                 ALTRETURN;
     1483     7543
     1484     7544    5             END;
     1485     7545
     1486     7546    4           END EVERYTHINGS_LOUSY;
     1487     7547
     1488     7548    3       END READ_THE_SCREEN;
     1489     7549
     1490     7550        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:118  
     1491     7551    2   COMPLETION_RECORD_DELETED: PROC ALTRET;
     1492     7552
     1493     7553        /*I*  NAME:         COMPLETION_RECORD_DELETED
     1494     7554              PURPOSE:      Handle E$RECORD_DELETED M$READ completions.
     1495     7555              PARAMETERS:   None.
     1496     7556              DATA:         VDP_NODE_DESC.KEY = the key of the deleted record.
     1497     7557              DESCRIPTION:  o Scroll this window's RECORD_SET.ENDD up one;
     1498     7558                              if this window's RECORD_SET.START was the deleted
     1499     7559                              record, then scroll RECORD_SET.START up one, also.
     1500     7560                            o CALL VDA$LDELETE, giving it the key returned by the
     1501     7561                              M$READ (now in VDP_NODE_DESC.KEY).
     1502     7562                              Note:  the call to VDA$LDELETE will generate a call
     1503     7563                              to VDP$RDELETE for this record.  For this window,
     1504     7564                              VDP$RDELETE won't find the record to delete;
     1505     7565                              however, it will update any other editing windows
     1506     7566                              in which the record is currently being displayed.
     1507     7567                            o Read again from the window.
     1508     7568        */
     1509     7569
     1510     7570    3       CALL VDP$WSCROLL_UP ( WINDOW$SPEC,
     1511     7571    3         /* no scroll_key */,
     1512     7572    3         /* no scroll_spec */,
     1513     7573    3         /* no scroll_data */,
     1514     7574    3         VDP_NODE_DESC.KEY,
     1515     7575    3         VDP_NODE_DESC.KEY )
     1516     7576    3         ALTRET (RETALT);
     1517     7577
     1518     7578    3       DELETION_RANGE = %CLEAR;
     1519     7579    3       DELETION_RANGE.START.KEY (0) = VDP_NODE_DESC.KEY;
     1520     7580    3       DELETION_RANGE.ENDD.KEY (0) = VDP_NODE_DESC.KEY;
     1521     7581
     1522     7582    3       CALL VDP$RDELETE ( WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.FILE_KEY,
     1523     7583    3         DELETION_RANGE,
     1524     7584    3         %FROM_PRESENTER )
     1525     7585    3         ALTRET (RETALT);
     1526     7586
     1527     7587    3   BEFORE_THE_LDELETE:
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:119  
     1528     7588    3       CALL VDA$LDELETE ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,
     1529     7589    3         DELETION_RANGE )
     1530     7590    3         ALTRET (RETALT);
     1531     7591
     1532     7592    3   AFTER_THE_RDELETE:
     1533     7593    3       RETURN;
     1534     7594    3   RETALT: ALTRETURN;
     1535     7595
     1536     7596    3   END COMPLETION_RECORD_DELETED;
     1537     7597        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:120  
     1538     7598    2   COMPLETION_RECORDS_NEEDED: PROC ( RECORDS_NEEDED ) ALTRET;
     1539     7599
     1540     7600        /*I*  NAME:         COMPLETION_RECORDS_NEEDED
     1541     7601              PURPOSE:      Handle E$RECORDS_NEEDED M$READ completions.
     1542     7602              PARAMETERS:   None.
     1543     7603              DATA:         WINDOW$SPEC;
     1544     7604                            the DCB just read.
     1545     7605              DESCRIPTION:  o Scroll this window's DISPLAYED_SET (if any) up
     1546     7606                              | ARS# | entries.
     1547     7607                            o CALL VDE$RREAD to position this window's stream to
     1548     7608                              the record after DISPLAYED_SET.ENDD (if any).
     1549     7609                              (If the DISPLAYED_SET is empty, use the key of the
     1550     7610                              cursor-field start boundary.)
     1551     7611                              If EOF is hit, act as though VDE$RGET (see below)
     1552     7612                              returned BOB_EOB_FLAG.
     1553     7613                            o CALL VDE$RGET to read the record.  The enclosing
     1554     7614                              range is this window's EDIT_BLOCK.RANGE.
     1555     7615                              VDE$RGET will return an BOB_EOB_FLAG flag and an optional
     1556     7616                              ref to a VD$NODE_DESC (VDP_NODE_DESC), omitted if
     1557     7617                              BOB_EOB_FLAG was hit.
     1558     7618                            o If a VD$NODE_DESC (VDP_NODE_DESC) was returned,
     1559     7619                              update WINDOW$SPEC.ENDD (and WINDOW$SPEC.START,
     1560     7620                              if it's %CLEAR) with VDP_NODE_DESC.KEY, and
     1561     7621                              M$WRITE all relevent info to VDH (Key, Spec, and/or
     1562     7622                              Data).
     1563     7623                              If VDE$RGET returned BOB_EOB_FLAG, then set the EOB flag for
     1564     7624                              this window, and M$WEOF to VDH.
     1565     7625                            o Read again from the window.
     1566     7626        */
     1567     7627
     1568     7628    3     DCL RECORDS_NEEDED SBIN;
     1569     7629
     1570     7630    3       IF RECORDS_NEEDED > 0
     1571     7631    3       THEN
     1572     7632    4         DO;
     1573     7633    4           RELATIVE = 1;
     1574     7634    4           SCROLL_LIMIT = RECORDS_NEEDED;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:121  
     1575     7635    4         END;
     1576     7636    3       ELSE
     1577     7637    4         DO;
     1578     7638    4           RELATIVE = -1;
     1579     7639    4           SCROLL_LIMIT = - RECORDS_NEEDED;
     1580     7640    4         END;
     1581     7641
     1582     7642            %GETKEY ( KEY =
              7642                "WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE.START.KEY",
     1583     7643            INDX = LEVEL# - 1,
     1584     7644            PTR = EDIT_BLOCK_START_KEY$ );
     1585     7654
     1586     7655    3       DONT_FORGET_TO_WEOF = %FALSE;
     1587     7656
     1588     7657    3       IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# = 0
     1589     7658    3       THEN
     1590     7659    3   EMPTY_RECORD_SET:
     1591     7660    4         DO;
     1592     7661                /*  Note:  if the record_set's empty
     1593     7662                    and we're asked to scroll_down,
     1594     7663                    we assume it's just an empty file.
     1595     7664                    If it's not, there's something wrong.  */
     1596     7665                /*  Funny case:  if the record_set's empty
     1597     7666                    and we're asked to scroll_up,
     1598     7667                    "wrap the screen around" the start of the
     1599     7668                    SelectedBlock.  */
     1600     7669    4           WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.SQ_OFFSET# = %HALF_INFINITY;
     1601     7670    5           DO CASE ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# );
     1602     7671
     1603     7672    5             CASE ( %EVST_INITIAL,
     1604     7673    5             %EVST_START );
     1605     7674    5               RREAD_LOCATION = WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START;
     1606     7675
     1607     7676    5             CASE ( %EVST_END );
     1608     7677    5               RREAD_LOCATION = WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD;
     1609     7678
     1610     7679    5           END;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:122  
     1611     7680
     1612     7681    4           RREAD_SAVED_KEY = RREAD_LOCATION.KEY (LEVEL# - 1);
     1613     7682
     1614     7683    4           LOCATION$ = ADDR ( RREAD_LOCATION );
     1615     7684    4           RELATIVE = SCROLL_LIMIT / 2;
     1616     7685
     1617     7686    4           CALL VDE$RREAD ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,
     1618     7687    4             WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1619     7688    4             LOCATION$ -> VD$LOCATION,
     1620     7689    4             RELATIVE /* relative position = forward scroll_limit / 2 */ )
     1621     7690    4             ALTRET ( CANT_READ_FILE );
     1622     7691
     1623     7692    4           CALL VDE$RGET ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,
     1624     7693    4             WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1625     7694    4             RGET_NODE_DESC )
     1626     7695    4             ALTRET (RETALT);
     1627     7696
     1628     7697    4           IF RGET_NODE_DESC.KEY = %CLEAR
     1629     7698    4           THEN
     1630     7699    4             DONT_FORGET_TO_WEOF = %TRUE;
     1631     7700
     1632     7701    4           LOCATION$ = ADDR (NIL);
     1633     7702    4           RELATIVE = - SCROLL_LIMIT;
     1634     7703
     1635     7704    4           CALL VDE$RREAD ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,
     1636     7705    4             WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1637     7706    4             LOCATION$ -> VD$LOCATION /* no absolute position */,
     1638     7707    4             RELATIVE /* relative position = backward scroll_limit */ )
     1639     7708    4             ALTRET ( CANT_READ_FILE );
     1640     7709
     1641     7710    4           CALL VDE$RGET ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,
     1642     7711    4             WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1643     7712    4             RGET_NODE_DESC )
     1644     7713    4             ALTRET (RETALT);
     1645     7714
     1646     7715    4           IF RGET_NODE_DESC.KEY = %CLEAR
     1647     7716    4           THEN
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:123  
     1648     7717    4   BIG_FAT_EMPTY_FILE:
     1649     7718    5             DO;
     1650     7719           /*       When we have an empty file, set EOB_DISPLAYED bit at this point,
     1651     7720                    since WEOF_VDH (where this is usually set) only sets BOB_DISPLAYED
     1652     7721                    on new files.   */
     1653     7722    5               WINDOW$SPEC.EOB_DISPLAYED = %TRUE;
     1654     7723    5               CALL WEOF_VDH
     1655     7724    5                 ALTRET (RETALT);
     1656     7725    5               RETURN;
     1657     7726    5             END BIG_FAT_EMPTY_FILE;
     1658     7727
     1659     7728                %GETKEY ( KEY = "WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY",
     1660     7729                INDX = LEVEL# - 1,
     1661     7730                PTR = STREAM_CURRENT_KEY$ );
     1662     7740
     1663     7741    4           RELATIVE = 1;
     1664     7742    4           FEP_READ_RETURN_KEY = %HALF_INFINITY;
     1665     7743    4           VDP_NODE_DESC.KEY.TYPE# = RGET_NODE_DESC.KEY.TYPE#;
     1666     7744    4           CALL WRITE_VDH
     1667     7745    4             ALTRET (RETALT);
     1668     7746
     1669     7747    4           SCROLL_LIMIT = SCROLL_LIMIT - 1;
     1670     7748    4         END EMPTY_RECORD_SET;
     1671     7749    3       ELSE
     1672     7750    3   NON_EMPTY_RECORD_SET:
     1673     7751    4         DO;
     1674     7752                /*  TEMPORARY:  or maybe NOT!!!
     1675     7753                    Always use the KEY passed back by the FEP as the
     1676     7754                    starting point for writing records back.
     1677     7755                    (This is the ol' "dummy record @EOF" problem.
     1678     7756                    Pete creates a dummy record in the FEP and
     1679     7757                    scrolls his record set so we may not be in sync.)  */
     1680     7758    4           RREAD_LOCATION = WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE.
              7758                    START;
     1681     7759
     1682     7760    4           RREAD_LOCATION.KEY ( LEVEL# - 1 ) = VDP_NODE_DESC.KEY;
     1683     7761
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:124  
     1684     7762    4           RREAD_SAVED_KEY = RREAD_LOCATION.KEY ( LEVEL# - 1 );
     1685     7763    4           FEP_READ_RETURN_KEY = FEP_READ_RETURN_KEY + RELATIVE;
     1686     7764
     1687     7765    4           LOCATION$ = ADDR ( RREAD_LOCATION );
     1688     7766    4         END NON_EMPTY_RECORD_SET;
     1689     7767
     1690     7768    3   SCROLL_N_RECORDS:
     1691     7769    4       DO SCROLL_INDEX = 1 TO SCROLL_LIMIT;
     1692     7770
     1693     7771    4         BOB_EOB_FLAG = %FALSE;
     1694     7772
     1695     7773    4         CALL VDE$RREAD ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,
     1696     7774    4           WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1697     7775    4           LOCATION$ -> VD$LOCATION /* absolute position = key or nil */,
     1698     7776    4           RELATIVE /* relative position = backward n or forward 1 */ )
     1699     7777    4           ALTRET ( CANT_READ_FILE );
     1700     7778
     1701     7779              %GETKEY ( KEY = "WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY",
     1702     7780              INDX = LEVEL# - 1,
     1703     7781              PTR = STREAM_CURRENT_KEY$ );
     1704     7791
     1705     7792              /*  RGET will check the EOF case; however, for BOF,
     1706     7793                  we check ourselves by having craftily saved away
     1707     7794                  the current key at our current level before the
     1708     7795                  RREAD.  If it hasn't changed (or moved forward!),
     1709     7796                  we're at BOF.  */
     1710     7797    4         IF RELATIVE < 0
     1711     7798    4         THEN
     1712     7799    4   CHECK_FOR_BOF:
     1713     7800    5           DO;
     1714     7801                  %GETKEY ( KEY = "RREAD_SAVED_KEY",
     1715     7802                  PTR = RREAD_SAVED_KEY$ );
     1716     7812    5             IF STREAM_CURRENT_KEY$ -> VD$TEXTC.BYTES >=
     1717     7813    5               RREAD_SAVED_KEY$ -> VD$TEXTC.BYTES
     1718     7814    5             THEN
     1719     7815    5               BOB_EOB_FLAG = %TRUE;
     1720     7816    5           END CHECK_FOR_BOF;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:125  
     1721     7817
     1722     7818    4         IF NOT BOB_EOB_FLAG
     1723     7819    4         THEN
     1724     7820    5           DO;
     1725     7821    5             CALL VDE$RGET ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,
     1726     7822    5               WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1727     7823    5               RGET_NODE_DESC )
     1728     7824    5               ALTRET (RETALT);
     1729     7825
     1730     7826    5             IF RGET_NODE_DESC.KEY = %CLEAR
     1731     7827    5             THEN
     1732     7828    5               BOB_EOB_FLAG = %TRUE;
     1733     7829    5           END;
     1734     7830
     1735     7831    4         IF BOB_EOB_FLAG
     1736     7832    4         THEN
     1737     7833    4   WEOF_WEOF:
     1738     7834    5           DO;
     1739     7835    5             CALL WEOF_VDH
     1740     7836    5               ALTRET (RETALT);
     1741     7837    5             EXIT SCROLL_N_RECORDS;
     1742     7838    5           END WEOF_WEOF;
     1743     7839    4         ELSE
     1744     7840    4   WRITE_WRITE:
     1745     7841    5           DO;
     1746     7842    5             CALL WRITE_VDH
     1747     7843    5               ALTRET (RETALT);
     1748     7844    5           END WRITE_WRITE;
     1749     7845
     1750     7846    4         LOCATION$ = ADDR (NIL);
     1751     7847
     1752     7848    4         IF RELATIVE < 0
     1753     7849    4         THEN
     1754     7850    5           DO;
     1755     7851    5             RREAD_SAVED_KEY = WINDOW$SPEC.OPERAND.STREAM$ ->
     1756     7852    5               VD$STREAM.CURRENT.KEY ( LEVEL# - 1 );
     1757     7853    5           END;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:126  
     1758     7854
     1759     7855    4       END SCROLL_N_RECORDS;
     1760     7856
     1761     7857    3       IF DONT_FORGET_TO_WEOF
     1762     7858    3       THEN
     1763     7859    3         CALL WEOF_VDH
     1764     7860    3           ALTRET (RETALT);
     1765     7861
     1766     7862    3       RETURN;
     1767     7863
     1768     7864    3   RETALT: ;
     1769     7865    3   CANT_READ_FILE:
     1770     7866    3       ALTRETURN;
     1771     7867
     1772     7868        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:127  
     1773     7869    3   WEOF_VDH: PROC ALTRET;
     1774     7870
     1775     7871    4       IF RELATIVE < 0
     1776     7872    4       THEN
     1777     7873    4         WINDOW$SPEC.BOB_DISPLAYED = %TRUE;
     1778     7874    4       ELSE
     1779     7875    4         WINDOW$SPEC.EOB_DISPLAYED = %TRUE;
     1780     7876
     1781     7877    4       FPT_WEOF.V.DCB# = WINDOW$SPEC.DCB#;
     1782     7878
     1783     7879    4       IF VD_$$MON_PRES.V# > 0
     1784     7880    4       THEN
     1785     7881    4         CALL VDG$MPRES_FEPWEOF ( WINDOW$SPEC.DCB#,
     1786     7882    4           RELATIVE );
     1787     7883
     1788     7884    4       CALL M$WEOF ( FPT_WEOF )
     1789     7885    4       WHENALTRETURN
     1790     7886    5         DO;
     1791     7887    5           CALL VDG$MONERR;
     1792     7888    5           ALTRETURN;
     1793     7889    5         END;
     1794     7890
     1795     7891    4       RETURN;
     1796     7892
     1797     7893    4   END WEOF_VDH;
     1798     7894        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:128  
     1799     7895    3   WRITE_VDH: PROC ALTRET;
     1800     7896
     1801     7897    4       IF RGET_NODE_DESC.DATA$ -> VD$BUFFER.LENGTH# = 0
     1802     7898    4       THEN
     1803     7899    4         FPT_WRITE.BUF_ = VECTOR (NIL);
     1804     7900    4       ELSE
     1805     7901    4         FPT_WRITE.BUF_ = VECTOR ( RGET_NODE_DESC.DATA$ -> VD$BUFFER.BYTES );
     1806     7902
     1807     7903    4       IF VDP_NODE_DESC.KEY.TYPE# ~= %KT_STRING
     1808     7904    4       THEN
     1809     7905    5         DO;
     1810     7906    5           FEP_WRITE_NUMERIC_KEY = STREAM_CURRENT_KEY$ -> VD$TEXTC_NUMBER.BYTES#;
     1811     7907    5         END;
     1812     7908    4       ELSE
     1813     7909    5         DO;
     1814     7910    5           FEP_WRITE_NUMERIC_KEY = FEP_READ_RETURN_KEY;
     1815     7911    5           FEP_READ_RETURN_KEY = FEP_READ_RETURN_KEY + RELATIVE;
     1816     7912    5         END;
     1817     7913
     1818     7914    4       FPT_WRITE.KEY_ = VECTOR ( FEP_WRITE_NUMERIC_KEY );
     1819     7915    4       FPT_WRITE.V.DCB# = WINDOW$SPEC.DCB#;
     1820     7916
     1821     7917    4       IF VD_$$MON_PRES.V# > 0
     1822     7918    4       THEN
     1823     7919    4         CALL VDG$MPRES_FEPWRITE ( WINDOW$SPEC.DCB#,
     1824     7920    4           WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY ( LEVEL# - 1 ),
     1825     7921    4           RGET_NODE_DESC );
     1826     7922
     1827     7923    4       CALL M$WRITE ( FPT_WRITE )
     1828     7924    4       WHENALTRETURN
     1829     7925    5         DO;
     1830     7926    5           CALL VDG$MONERR;
     1831     7927    5   RETALT: ;
     1832     7928    5           ALTRETURN;
     1833     7929    5         END;
     1834     7930
     1835     7931    4       WINDOW$SPEC.SCREEN_UPDATED = %FALSE;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:129  
     1836     7932
     1837     7933    4       IF RELATIVE < 0
     1838     7934    4       THEN
     1839     7935    4         CALL VDP$WSCROLL_DOWN ( WINDOW$SPEC,
     1840     7936    4           WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY ( LEVEL# - 1 ),
     1841     7937    4           /* no scroll_spec */,
     1842     7938    4           RGET_NODE_DESC.DATA$ -> VD$BUFFER )
     1843     7939    4           ALTRET (RETALT);
     1844     7940    4       ELSE
     1845     7941    4         CALL VDP$WSCROLL_UP ( WINDOW$SPEC,
     1846     7942    4           WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY ( LEVEL# - 1 ),
     1847     7943    4           /* no scroll_spec */,
     1848     7944    4           RGET_NODE_DESC.DATA$ -> VD$BUFFER,
     1849     7945    4           /* no deletion_first_key */,
     1850     7946    4           /* no deletion_last_key */ )
     1851     7947    4           ALTRET (RETALT);
     1852     7948
     1853     7949    4       RETURN;
     1854     7950
     1855     7951    4   END WRITE_VDH;
     1856     7952
     1857     7953    3   END COMPLETION_RECORDS_NEEDED;
     1858     7954
     1859     7955    2   END PRESENTER_IN_2_D;
     1860     7956
     1861     7957        %BOX ( TITLE = "Common subroutines to 1D & 2D Presenters", PAGE = YES );
              7965    2
              7969    2   /***************************************************************************
              7971    2    *                                                                         *
              7975    2            *                  Common subroutines to 1D & 2D Presenters               *
              7977    2            *                                                                         *
              7979    2           ***************************************************************************/

     1862     7983    1   ALLOCATE_NECESSARY_OBJECTS: PROC ALTRET;
     1863     7984
     1864     7985    2       IF VDP_BUFFER$ = ADDR (NIL)
     1865     7986    2       THEN
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:130  
     1866     7987    2   ALLOC_A_BUFFER:
     1867     7988    3         DO;
     1868     7989    3           CALL VDG$OALLOC ( %CLS_BUFFER,
     1869     7990    3             VDP_BUFFER$,
     1870     7991    3             ( SIZEC ( VD$BUFFER_HEADER )
     1871     7992    3             + %MXNB_DATA
     1872     7993    3             + ( %NB_PER_WORD - 1 ) )
     1873     7994    3             / %NB_PER_WORD )
     1874     7995    3           WHENALTRETURN
     1875     7996    4             DO;
     1876     7997    4               ALTRETURN;
     1877     7998    4             END;
     1878     7999    3         END ALLOC_A_BUFFER;
     1879     8000
     1880     8001    2       VDP_NODE_DESC.DATA$ = VDP_BUFFER$;
     1881     8002    2       VDP_BUFFER$ -> VD$BUFFER.LENGTH# = %MXNB_DATA;
     1882     8003    2       FPT_READ.BUF_ = VECTOR ( VDP_BUFFER$ -> VD$BUFFER.BYTES );
     1883     8004
     1884     8005    2       IF VDP_KEY$ = ADDR (NIL)
     1885     8006    2       THEN
     1886     8007    2   ALLOC_A_KEY:
     1887     8008    3         DO;
     1888     8009    3           CALL VDG$OALLOC ( %CLS_TEXTC_REMOTE,
     1889     8010    3             VDP_KEY$,
     1890     8011    3             ( %MXNB_KEY
     1891     8012    3             + ( %NB_PER_WORD - 1 ) )
     1892     8013    3             / %NB_PER_WORD )
     1893     8014    3           WHENALTRETURN
     1894     8015    4             DO;
     1895     8016    4               ALTRETURN;
     1896     8017    4             END;
     1897     8018    3         END ALLOC_A_KEY;
     1898     8019
     1899     8020    2       VDP_NODE_DESC.KEY.REP# = %REP_REMOTE;
     1900     8021    2       VDP_NODE_DESC.KEY.TYPE# = WINDOW$SPEC.OPERAND.STREAM$ ->
     1901     8022    2         VD$STREAM.PORT$ -> VD$PORT.LEVEL.KEY_TYPE# ( LEVEL# );
     1902     8023    2       VDP_NODE_DESC.KEY.V$ = VDP_KEY$;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:131  
     1903     8024    2       FPT_READ.KEY_ = VECTOR
     1904     8025    2         ( ADDR (VDP_KEY$ -> VD$TEXTC_REMOTE.LENGTH# ) -> FEP$READ_KEY );
     1905     8026
     1906     8027    2       RETURN;
     1907     8028
     1908     8029    2   END ALLOCATE_NECESSARY_OBJECTS;
     1909     8030        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:132  
     1910     8031    1   COMPLETION_INSERT_NO_ROOM: PROC ALTRET;
     1911     8032
     1912     8033            /*  That's a fine mess you've gotten me into....  */
     1913     8034    3       IF WINDOW$SPEC.EDTCTL.KEY_INCR# = 65535 THEN DO;
     1914     8035    4           CALL VDG$ERRMSG (%E$CANT_GENERATE_KEY) WHENRETURN DO;
     1915     8036    4               VD_6E.ERR_TAIL$ -> VD$ERR.DCB# = FPT_READ.V.DCB#;
     1916     8037    4             END;
     1917     8038    3           ALTRETURN;
     1918     8039    3         END;
     1919     8040    2       RECORD_SET_RANGE = %CLEAR;
     1920     8041    2       WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_INITIAL;
     1921     8042    2       WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.POSITION# = -1;
     1922     8043    2       CALL UPDATE_SELECTEDBLOCK_TO_CURSOR;
     1923     8044    2       CALL VDI$BSPLIT ( RECORD_SET_RANGE, ,
     1924     8045    2         WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE,
     1925     8046    2         WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM)
     1926     8047    3       WHENALTRETURN DO; ALTRETURN; END;
     1927     8048
     1928     8049    2       CALL VDA$PFLUSH ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.PORT$ -> VD$PORT,
     1929     8050    2         %TO_PRESENTER ); /* We ARE the presenter, but VDI$BSPLIT is not. */
     1930     8051
     1931     8052    2       IF WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.POSITION# >=
     1932     8053    2         DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS#
     1933     8054    3         OR DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMCHAR# = ' ' THEN DO;
     1934     8055    3           IF DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMCHAR# = ' ' THEN
     1935     8056        /* Wordwrap split - positions to the end of the new record */
     1936     8057    3             WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD.POSITION# =
     1937     8058    3               DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS# -
     1938     8059    3               DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ACTPOS + 1;
     1939     8060    3           WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_END;
     1940     8061    3         END;
     1941     8062
     1942     8063    2   END COMPLETION_INSERT_NO_ROOM;
     1943     8064        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:133  
     1944     8065    1   COMPLETION_NORMAL: PROC ALTRET;
     1945     8066
     1946     8067        /*I*  NAME:         COMPLETION_NORMAL
     1947     8068              PURPOSE:      Handle normal screen M$READ completions for both 1Dim
     1948     8069                              and 2Dim reads.
     1949     8070              PARAMETERS:   None.
     1950     8071              DATA:         FPT_READ.BUF_ = the inserted or replaced record;
     1951     8072                            FPT_READ.KEY_ = the key of the inserted or replaced record.
     1952     8073              DESCRIPTION:  o CALL VDE$RPUT, telling it not to generate any key,
     1953     8074                              and giving it the key from FPT_READ.KEY_.
     1954     8075                            o CALL VDA$PFLUSH to force immediate update to the
     1955     8076                              file/presenter.  The "originator" flag in the call
     1956     8077                              is set to "presenter".
     1957     8078                              Note:  the call to VDA$PFLUSH would normally
     1958     8079                                     result in a call to VDn$RREPLACE for this
     1959     8080                                     record; however, the "originator" flag tells
     1960     8081                                     the accessor to suppress the call.
     1961     8082                            o Determine if the replaced record is within the
     1962     8083                              displayed range of any other editing window.
     1963     8084                              If it is, tell VDH about the new record data for
     1964     8085                              each window it should be displayed in.
     1965     8086                            o Read again from the window.
     1966     8087        */
     1967     8088
     1968     8089    2       IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT
     1969     8090    2       THEN
     1970     8091    2   ADJUST_WINDOWS_IN_1D:
     1971     8092    3         DO;
     1972     8093    3         END ADJUST_WINDOWS_IN_1D;
     1973     8094    2       ELSE
     1974     8095    2   ADJUST_WINDOWS_IN_2D:
     1975     8096    3         DO;
     1976     8097    3   FIND_JUST_READ_KEY:
     1977     8098    3           DO RECORD_SET_INDEX = 0
     1978     8099    4             TO WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# - 1;
     1979     8100
     1980     8101                  %GETKEY ( KEY = "WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY",
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:134  
     1981     8102                  INDX = RECORD_SET_INDEX,
     1982     8103                  PTR = RECORD_SET_KEY$ );
     1983     8113
     1984     8114    4             IF RECORD_SET_KEY$ -> VD$TEXTC = FEP_READ_RETURN_KEY$ -> VD$TEXTC
     1985     8115    4             THEN
     1986     8116    4   CHECK_FOR_CHANGE:
     1987     8117    5               DO;
     1988     8118    5                 IF ((WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.DATA$ (
              8118                          RECORD_SET_INDEX ) -> VD$BUFFER.BYTES =
     1989     8119    5                   VDP_NODE_DESC.DATA$ -> VD$BUFFER.BYTES) AND
     1990     8120    5                   (WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.DATA$ (
              8120                            RECORD_SET_INDEX) -> VD$BUFFER.LENGTH# =
     1991     8121    5                   VDP_NODE_DESC.DATA$-> VD$BUFFER.LENGTH#))
     1992     8122    5                 THEN
     1993     8123    5                   RETURN;
     1994     8124    5               END CHECK_FOR_CHANGE;
     1995     8125
     1996     8126    4           END FIND_JUST_READ_KEY;
     1997     8127
     1998     8128    3           CALL VDP$WSCROLL_DOWN ( WINDOW$SPEC,
     1999     8129    3             VDP_NODE_DESC.KEY,
     2000     8130    3             /* no scroll_spec */,
     2001     8131    3             VDP_NODE_DESC.DATA$ -> VD$BUFFER )
     2002     8132    3           WHENALTRETURN
     2003     8133    4             DO;
     2004     8134    4               ALTRETURN;
     2005     8135    4             END;
     2006     8136    3         END ADJUST_WINDOWS_IN_2D;
     2007     8137
     2008     8138    2   BEFORE_THE_RPUT:
     2009     8139    2       CALL VDE$RPUT ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,
     2010     8140    2         WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     2011     8141    2         WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.OPTIONS,
     2012     8142    2         VDP_NODE_DESC,
     2013     8143    2         %SQ_CURRENT,
     2014     8144    2         /* no returned key */ )
     2015     8145    2       WHENALTRETURN
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:135  
     2016     8146    3         DO;
     2017     8147    3           VDP_BUFFER$ = ADDR (NIL);
     2018     8148    3           ALTRETURN;
     2019     8149    3         END;
     2020     8150
     2021     8151    2       VDP_BUFFER$ = ADDR (NIL);
     2022     8152
     2023     8153    2   AFTER_THE_RPUT:
     2024     8154    2       CALL VDA$PFLUSH ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.PORT$ -> VD$PORT,
     2025     8155    2         %FROM_PRESENTER )
     2026     8156    2       WHENALTRETURN
     2027     8157    3         DO;
     2028     8158    3           ALTRETURN;
     2029     8159    3         END;
     2030     8160
     2031     8161
     2032     8162    2       RETURN;
     2033     8163
     2034     8164    2   END COMPLETION_NORMAL;
     2035     8165        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:136  
     2036     8166    1   COMPLETION_NO_WINDOW: PROC ALTRET;
     2037     8167        /* The editing window went away.  ASAVE or SAVE/GET must have happened.
     2038     8168           Make the command window use the whole screen, and tell the guy to
     2039     8169           check that the profile and IMPs will work. */
     2040     8170
     2041     8171    2       CALL VDG$EXPAND_COMMAND_WINDOW (VD_$SCREEN.V#);
     2042     8172    2       VD_$COMMAND.V# = 1;
     2043     8173    2       CALL VDG$ERRMSG (%E$CANT_SCREEN_EDIT);
     2044     8174    2       CALL VDG$EREPORT_ERROR;
     2045     8175    2       VD_LAST_CWIN_ACTIVITY = 0; /* no screen clear either */
     2046     8176
     2047     8177    2   COMPLETION_EOM_COMMAND: ENTRY ALTRET;
     2048     8178
     2049     8179    2       NEXT_WINDOW$ = ADDR (NIL);
     2050     8180
     2051     8181    2       RETURN;
     2052     8182
     2053     8183    2   END COMPLETION_NO_WINDOW;
     2054     8184        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:137  
     2055     8185    1   COMPLETION_EOM_NEXT_ED_WINDOW: PROC ALTRET;
     2056     8186
     2057     8187    2       IF VD_CURRENT_WINDOW$ -> VD$FILE_NODE.FLINK$ = ADDR (NIL)
     2058     8188    2       THEN
     2059     8189    2         NEXT_WINDOW$ = VD_6E.WINDOWS$ ->
     2060     8190    2           VD$STREAM.PORT$ ->
     2061     8191    2           VD$PORT.LEVEL.INTERNAL$ ( %LVL_FILE ) ->
     2062     8192    2           VD$FILE_NODE.HEAD$ -> VD$FILE_NODE.FLINK$;
     2063     8193    2       ELSE
     2064     8194    2         NEXT_WINDOW$ = VD_CURRENT_WINDOW$ ->
     2065     8195    2           VD$FILE_NODE.FLINK$;
     2066     8196
     2067     8197    2       RETURN;
     2068     8198
     2069     8199    2   END COMPLETION_EOM_NEXT_ED_WINDOW;
     2070     8200        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:138  
     2071     8201    1   UPDATE_CURSOR_TO_SELECTEDBLOCK: PROC ALTRET;
     2072     8202
     2073     8203    2     DCL VDP_SOBS BIT(1) ALIGNED STATIC SYMDEF INIT( %TRUE );
     2074     8204            /* (ScreechOnBadSinput) */
     2075     8205
     2076     8206    2       RECORD_SET_INDEX = WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES#;
     2077     8207    2       IF RECORD_SET_INDEX = 0
     2078     8208    2       THEN
     2079     8209    2         RETURN;
     2080     8210
     2081     8211    2       WITHIN_RANGE = 0;
     2082     8212            %GETKEY (KEY = WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY,
     2083     8213            INDX = RECORD_SET_INDEX - 1,
     2084     8214            PTR = RECORD_SET_KEY$ );
     2085     8224
     2086     8225    2   FIND_REALEST_RECORD_SET_KEY:
     2087     8226    3       DO;
     2088     8227
     2089     8228    4         DO CASE ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# );
     2090     8229
     2091     8230    4           CASE ( %EVST_INITIAL,
     2092     8231    4           %EVST_START );
     2093     8232    4             LOCATION$ = ADDR( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START );
     2094     8233    4           CASE ( %EVST_END );
     2095     8234    4             LOCATION$ = ADDR( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD );
     2096     8235    4         END;
     2097     8236
     2098     8237    3         FPT_SINPUT.V.REREADPOS# = LOCATION$ -> VD$LOCATION.POSITION# + 1;
     2099     8238              %GETKEY ( KEY = "LOCATION$ -> VD$LOCATION.KEY",
     2100     8239              INDX = LEVEL# - 1,
     2101     8240              PTR = EVAL_KEY$ );
     2102     8250    3         IF NOT LOCATION$ -> VD$LOCATION.EOF
     2103     8251    3         THEN
     2104     8252
     2105     8253    3   FIND_RECORD_SET_KEY:
     2106     8254    3           DO RECORD_SET_INDEX = 0
     2107     8255    4           TO WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# - 1;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:139  
     2108     8256
     2109     8257                  %GETKEY ( KEY = "WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY",
     2110     8258                  INDX = RECORD_SET_INDEX,
     2111     8259                  PTR = RECORD_SET_KEY$ );
     2112     8269
     2113     8270    4             IF RECORD_SET_KEY$ -> VD$TEXTC.BYTES >=
     2114     8271    4               EVAL_KEY$ -> VD$TEXTC.BYTES
     2115     8272    4             THEN
     2116     8273    5               DO;
     2117     8274    5                 IF RECORD_SET_INDEX = 0 AND NOT WINDOW$SPEC.BOB_DISPLAYED
     2118     8275    5                 THEN
     2119     8276    5                   WITHIN_RANGE = %RCCL_LESS;
     2120     8277    5                 FEP_SINPUT_NUMERIC_KEY = 0; /* Use numeric key as-is */
     2121     8278    5                 EXIT FIND_REALEST_RECORD_SET_KEY;
     2122     8279    5               END;
     2123     8280
     2124     8281    4           END FIND_RECORD_SET_KEY;
     2125     8282
     2126     8283    3         IF WINDOW$SPEC.EOB_DISPLAYED
     2127     8284    3         THEN
     2128     8285    4           DO CASE ( WINDOW$SPEC.OPERAND.STREAM$ ->
     2129     8286    4           VD$STREAM.PORT$ -> VD$PORT.LEVEL.ORG# ( LEVEL# ) );
     2130     8287
     2131     8288    4             CASE ( %KEYED# );
     2132     8289    4               IF VD_$BY.V# = 0
     2133     8290    4               THEN
     2134     8291    4                 FEP_SINPUT_NUMERIC_KEY = %DFLT_$BY;
     2135     8292    4               ELSE
     2136     8293    4                 FEP_SINPUT_NUMERIC_KEY = VD_$BY.V#;
     2137     8294
     2138     8295    4             CASE ( %CONSEC# );
     2139     8296    4               FEP_SINPUT_NUMERIC_KEY = 1;
     2140     8297
     2141     8298    4             CASE ( %INDEXED# );
     2142     8299    4               CALL VDG$ESCREECH;
     2143     8300
     2144     8301    4           END;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:140  
     2145     8302    3         ELSE
     2146     8303    4           DO;
     2147     8304    4             WITHIN_RANGE = %RCCL_GREATER;
     2148     8305    4             FEP_SINPUT_NUMERIC_KEY = 0; /* Use last key in set if there's more */
     2149     8306    4           END;
     2150     8307    3       END FIND_REALEST_RECORD_SET_KEY;
     2151     8308
     2152     8309    2       IF VDP_NODE_DESC.KEY.TYPE# ~= %KT_STRING
     2153     8310    2       THEN
     2154     8311    2         FEP_SINPUT_NUMERIC_KEY =
     2155     8312    2           RECORD_SET_KEY$ -> VD$TEXTC_NUMBER.BYTES# + FEP_SINPUT_NUMERIC_KEY;
     2156     8313    2       ELSE
     2157     8314    2         FEP_SINPUT_NUMERIC_KEY =
     2158     8315    2           RECORD_SET_INDEX + WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.SQ_OFFSET#;
     2159     8316
     2160     8317    2       FPT_SINPUT.BUF_ = VECTOR (FEP_SINPUT_NUMERIC_KEY);
     2161     8318    2       FPT_SINPUT.V.DCB# = WINDOW$SPEC.DCB#;
     2162     8319
     2163     8320    2       IF VD_$$MON_PRES.V# > 0
     2164     8321    2       THEN
     2165     8322    2         CALL VDG$MPRES_FEPSINPUT ( WINDOW$SPEC.DCB#,
     2166     8323    2           RECORD_SET_KEY );
     2167     8324
     2168     8325    2       CALL M$SINPUT ( FPT_SINPUT )
     2169     8326    2       WHENALTRETURN
     2170     8327    3         DO;
     2171     8328    3           IF VDP_SOBS
     2172     8329    3           THEN
     2173     8330    3             CALL VDG$ESCREECH;
     2174     8331    3           CALL VDG$MONERR;
     2175     8332    3           ALTRETURN;
     2176     8333    3         END;
     2177     8334
     2178     8335    2       RETURN;
     2179     8336
     2180     8337    2   END UPDATE_CURSOR_TO_SELECTEDBLOCK;
     2181     8338        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:141  
     2182     8339    1   UPDATE_SELECTEDBLOCK_TO_CURSOR: PROC ALTRET;
     2183     8340
     2184     8341    2       IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT
     2185     8342    2       THEN
     2186     8343    2   GET_1D_KEY:
     2187     8344    3         DO;
     2188     8345    3           RREAD_SAVED_KEY = WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY
     2189     8346    3             (LEVEL# - 1);
     2190     8347                %GETKEY ( KEY = RREAD_SAVED_KEY,
     2191     8348                PTR = FEP_READ_RETURN_KEY$ );
     2192     8358    3         END GET_1D_KEY;
     2193     8359    2       ELSE
     2194     8360    2   GET_2D_KEY:
     2195     8361    3         DO;
     2196     8362    3           RREAD_SAVED_KEY = VDP_NODE_DESC.KEY;
     2197     8363    3         END GET_2D_KEY;
     2198     8364            /* If DCB.ACTPOS is 0, it means cursor was at end of record */
     2199     8365    2       IF DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ACTPOS = 0 THEN
     2200     8366    2         FEP_POS = DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS#;
     2201     8367    2       ELSE
     2202     8368    2         FEP_POS = DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ACTPOS - 1;
     2203     8369    2       IF FEP_POS > VD_$MAX_RECORD.V# THEN
     2204     8370    2         FEP_POS = VD_$MAX_RECORD.V#;
     2205     8371
     2206     8372    2       IF WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_INITIAL
     2207     8373    2       THEN
     2208     8374    2   CHECK_KEY_START:
     2209     8375    3         DO;
     2210     8376                %GETKEY ( KEY = "WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.KEY",
     2211     8377                INDX = LEVEL# - 1,
     2212     8378                PTR = EVAL_KEY$ );
     2213     8388    3           IF FEP_READ_RETURN_KEY$ -> VD$TEXTC = EVAL_KEY$ -> VD$TEXTC AND
     2214     8389    3             FEP_POS = WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.POSITION#
     2215     8390    3           THEN
     2216     8391    3             RETURN;
     2217     8392    3         END CHECK_KEY_START;
     2218     8393
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:142  
     2219     8394    2       IF WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_INITIAL
     2220     8395    2         OR WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_START
     2221     8396    2       THEN
     2222     8397    2   UPDATE_RANGE_START:
     2223     8398    3         DO;
     2224     8399                %CLEARKEY ( KEY = "WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.KEY",
     2225     8400                INDX = LEVEL# - 1 );
     2226     8410                %COPYKEY ( FKEY = RREAD_SAVED_KEY,
     2227     8411                TKEY = "WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.KEY",
     2228     8412                TINDX = LEVEL# - 1 );
     2229     8428
     2230     8429    3           WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.EOF = %FALSE;
     2231     8430
     2232     8431    3           WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.POSITION# = FEP_POS;
     2233     8432    3         END UPDATE_RANGE_START;
     2234     8433
     2235     8434    2       IF WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_INITIAL
     2236     8435    2         OR WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_END
     2237     8436    2       THEN
     2238     8437    2   UPDATE_RANGE_END:
     2239     8438    3         DO;
     2240     8439                %CLEARKEY ( KEY = "WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD.KEY",
     2241     8440                INDX = LEVEL# - 1 );
     2242     8450                %COPYKEY ( FKEY = RREAD_SAVED_KEY,
     2243     8451                TKEY = "WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD.KEY",
     2244     8452                TINDX = LEVEL# - 1 );
     2245     8468
     2246     8469    3           WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD.EOF = %FALSE;
     2247     8470
     2248     8471    3           WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD.POSITION# = FEP_POS;
     2249     8472    3         END UPDATE_RANGE_END;
     2250     8473
     2251     8474    2       RETURN;
     2252     8475
     2253     8476    2   END UPDATE_SELECTEDBLOCK_TO_CURSOR;
     2254     8477
     2255     8478    1   END VDP$WREAD;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:143  
     2256     8479        %EOD;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:144  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WREAD.

   Procedure VDP$WREAD requires 2128 words for executable code.
   Procedure VDP$WREAD requires 114 words of local(AUTO) storage.

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:145  

 Object Unit name= VDP$WREAD                                  File name= VDP$WINDOW_I_O.:VDA5TOU
 UTS= JUL 04 '97 11:40:03.12 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    73    111  VDP$WREAD
    2  RoData even  UTS      6      6  VDP$WREAD
    3   Proc  even  none  2128   4120  VDP$WREAD
    4  RoData even  none    42     52  VDP$WREAD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        3  VDP$WREAD

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1    104  VDP_BUFFER$                        1    105  VDP_KEY$
    1    106  VDP_KEY_AND_BUFFER$                1    107  VDP_SPEC$
    1    110  VDP_SOBS
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:146  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 VDG$MPRES_WREAD
         yes           Std       2 VDG$MPRES_WREAD_RETURN
         yes           Std       2 VDG$MPRES_FEPREAD
         yes           Std       3 VDG$MPRES_FEPREAD_RETURN
 yes     yes           Std       0 VDG$MONERR
         yes           Std       1 VDG$EBREAK_ACKNOWLEDGE
 yes     yes           Std       4 VDE$RREAD
 yes     yes           Std       3 VDE$RGET
         yes           Std       1 VDG$EREPORT_ERROR
 yes     yes           Std       4 VDG$WARNMSG
 yes     yes           Std       2 VDP$WFORMAT_RECORD
 yes     yes           Std       3 VDG$COMPARE_PTRS_W_RANGE
 yes     yes           Std       1 VDP$WERASE
 yes     yes           Std       3 VDG$OALLOC
         yes           Std       3 VDG$ESCREECH
 yes     yes           Std       2 VDG$LOCATION_TO_PTRS
 yes     yes           Std       1 VDG$OFREE
         yes           Std       2 VDG$MPRES_FEPSINPUT
 yes     yes           Std       1 VDP$NFLUSH
 yes     yes           Std       6 VDP$WSCROLL_UP
 yes     yes           Std       3 VDP$RDELETE
 yes     yes           Std       2 VDA$LDELETE
         yes           Std       2 VDG$MPRES_FEPWEOF
         yes           Std       3 VDG$MPRES_FEPWRITE
 yes     yes           Std       4 VDP$WSCROLL_DOWN
 yes     yes           Std       4 VDG$ERRMSG
 yes     yes           Std       4 VDI$BSPLIT
 yes     yes           Std       2 VDA$PFLUSH
 yes     yes           Std       6 VDE$RPUT
 yes     yes           Std       1 VDG$EXPAND_COMMAND_WINDOW
 yes     yes           Std       2 VDG$OCOPY
                       nStd      0 X66_AUTO_3
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:147  
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$JIT$                                B$TCB$
     VD_6E                                 VD_CURRENT_WINDOW$                    VD_LAST_CWIN_ACTIVITY
     VD_$$MON_PRES                         VD_$BY                                VD_$COMMAND
     VD_$MAX_RECORD                        VD_$SCREEN                            VD_$STRIP_BLANKS
     VD_KEY_NUMERIC_BOF                    VDP_NODE_DESC                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:148  


      515        1        /*M* VDP$WREAD:  Read from a window via VDH.  */
      516        2        /*T***********************************************************/
      517        3        /*T*                                                         */
      518        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      519        5        /*T*                                                         */
      520        6        /*T***********************************************************/
      521        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
      522        8
      523        9        /*P*  NAME:         VDP$WREAD
      524       10              PURPOSE:      Presenter's read-from-a-window-via-VDH module.
      525       11              DESCRIPTION:  Called to read from the screen.
      526       12        */
      527       13
      528       14        VDP$WREAD: PROC ( NEXT_WINDOW$,

     14  3 000000   000000 700200 xent  VDP$WREAD    TSX0  ! X66_AUTO_3
         3 000001   000162 000003                    ZERO    114,3

      529       15              ACTIVATION_CHARACTER,
      530       16              FROM_PRESENTER )
      531       17              ALTRET;
      532       18
      533       19        /*D*  NAME:         VDP$WREAD
      534       20              CALL:         CALL VDP$WREAD ( ininit_ptr );
      535       21              PARAMETERS:   uninit_ptr is an uninitialized ptr which is
      536       22                            set to the VD$FILE_NODE of the new ORG=SE
      537       23                            window selected, or to ADDR(NIL) if the
      538       24                            new window selected is the command window.
      539       25                            (Set upon return:  the interpreter itself reads
      540       26                            directly from the command window).
      541       27              INTERFACE:    Called from ??? when a window other than the
      542       28                            command window is to be read.
      543       29              ENVIRONMENT:  Nothing unusual.
      544       30              INPUT:
      545       31              OUTPUT:
      546       32              SCRATCH:
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:149  
      547       33              DESCRIPTION:  o If the cursor location isn't within the current
      548       34                              displayed range of the window, tell VDH to clear
      549       35                              the window, and clear the window's RECORD_SET.
      550       36                            o If the RECORD_SET isn't empty, tell VDH about
      551       37                              the cursor field, including any highlighting
      552       38                              that may be necessary.
      553       39                              Note that not all of the cursor field may be
      554       40                              on display in the window; the presenter must only
      555       41                              tell VDH about that porstion that is on display.
      556       42                            o Read from the window; act on the completion code.
      557       43                              If VDH needs records to display in the window,
      558       44                              it will immediately altreturn with an
      559       45                              E$RECORDS_NEEDED error.
      560       46                              ALTRETURN if an error has been encountered.
      561       47                              RETURN normally if the interpreter should read
      562       48                              from a different window (either the command window
      563       49                              or a different editing window).
      564       50                              If neither of these is the case, the presenter
      565       51                              shouldn't return yet, but should read again from
      566       52                              the current editing window.
      567       53        */
      568       54
      569       55          %INCLUDE CP_6;
      570      136          %INCLUDE CP_6_SUBS;
      571      676          %INCLUDE B_ERRORS_C;
      572     1802          %INCLUDE B$JIT;
      573     2092    1     DCL B$JIT$ PTR SYMREF;
      574     2093
      575     2094            %B$ALT;
      576     2102            %B$TCB;
      577     2105    1     DCL B$TCB$ PTR SYMREF;
      578     2106          %F$DCB;
      579     2163
      580     2164          %FPT_READ ( KEYR = YES );
      581     2203          %FPT_SINPUT;
      582     2240        %FPT_TRMATTR (TRMATTR = VLP_TRMATTR);
      583     2265        %VLP_TRMATTR;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:150  
      584     2303          %FPT_TRMCTL ( FPTN = FPT_EDTCTL,
      585     2304                        TRMCTL = VLP_EDTCTL,
      586     2305                        VLPTYPE = EDTCTL );
      587     2332          %VLP_EDTCTL ( FPTN = VLP_EDTCTL );
      588     2360          %FPT_WEOF;
      589     2374          %FPT_WRITE (BP=YES);
      590     2405
      591     2406          %INCLUDE VD_MACROS_M;
      592     4621          %INCLUDE VD_PERR_C;
      593     4769
      594     4770    1     DCL NEXT_WINDOW$ PTR PARAM;
      595     4771    1     DCL ACTIVATION_CHARACTER UBIN BYTE CALIGNED PARAM;
      596     4772    1     DCL FROM_PRESENTER BIT(1) ALIGNED PARAM;
      597     4773
      598     4774          %VD_6E ( STCLASS = SYMREF );
      599     4810    1     DCL VD_COMMAND_WINDOW$ PTR SYMREF;
      600     4811    1     DCL VD_CURRENT_WINDOW$ PTR SYMREF;
      601     4812    1     DCL VD_LAST_CWIN_ACTIVITY SBIN SYMREF;
      602     4813          %VD$NUMBER ( NAME = VD_$$MON_PRES,
      603     4814                       STCLASS = SYMREF );
      604     4859          %VD$NUMBER ( NAME = VD_$BY,
      605     4860                       STCLASS = SYMREF );
      606     4905          %VD$NUMBER ( NAME = VD_$COMMAND,
      607     4906                       STCLASS = SYMREF );
      608     4951          %VD$NUMBER ( NAME = VD_$KEY_GENERATION,
      609     4952                       STCLASS = SYMREF );
      610     4997          %VD$NUMBER ( NAME = VD_$MAX_RECORD,
      611     4998                       STCLASS = SYMREF );
      612     5043          %VD$NUMBER ( NAME = VD_$SCREEN,
      613     5044                       STCLASS = SYMREF );
      614     5089          %VD$NUMBER ( NAME = VD_$STRIP_BLANKS,
      615     5090                       STCLASS = SYMREF );
      616     5135
      617     5136          %VD$KEY ( NAME = RREAD_SAVED_KEY,
      618     5137                    STCLASS = AUTO );
      619     5151          %VD$KEY ( NAME = RECORD_SET_KEY,
      620     5152                    STCLASS = AUTO );
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:151  
      621     5166          %VD$KEY ( NAME = VD_KEY_NUMERIC_BOF,
      622     5167                    STCLASS = SYMREF );
      623     5181          %VD$LOCATION ( NAME = RREAD_LOCATION,
      624     5182                         STCLASS = AUTO );
      625     5210          %VD$LOCATION_PTRS ( NAME = LOCATION_PTRS,
      626     5211                              STCLASS = AUTO );
      627     5226          %VD$RANGE ( NAME = RECORD_SET_RANGE,
      628     5227                      STCLASS = AUTO );
      629     5296          %VD$NODE_DESC ( NAME = RGET_NODE_DESC,
      630     5297                          STCLASS = AUTO );
      631     5339          %VD$NODE_DESC ( NAME = VDP_NODE_DESC,
      632     5340                          STCLASS = SYMREF );
      633     5382          %VD$RANGE ( NAME = DELETION_RANGE,
      634     5383                      STCLASS = AUTO );
      635     5452    1     DCL FEP_DELREC_NUMERIC_KEY SBIN;
      636     5453    1     DCL FEP_POS SBIN;
      637     5454    1     DCL FEP_SINPUT_NUMERIC_KEY SBIN;
      638     5455    1     DCL FEP_WRITE_NUMERIC_KEY SBIN;
      639     5456
      640     5457    1     DCL FEP$READ_KEY BASED SBIN ALIGNED;
      641     5458
      642     5459    1     DCL 1 STREAM$PROTECT BASED,
      643     5460    1           2 FLAG (0:%(MX_ACCESS_LEVELS-1)) BIT(1);
      644     5461          %VD$BLOCK_DESC;
      645     5608          %VD$BUFFER;
      646     5666          %VD$BUFFER_HEADER;
      647     5702          %VD$ERR;
      648     5755          %VD$EVAL;
      649     6000          %VD$FILE_NODE;
      650     6093          %VD$KEY_LOCAL;
      651     6108          %VD$LOCATION;
      652     6136          %VD$PORT;
      653     6234          %VD$RECORD_SET;
      654     6312          %VD$STREAM;
      655     6418          %VD$TEXTC (ALIGNMENT=ALIGNED);
      656     6441          %VD$TEXTC_NUMBER;
      657     6455          %VD$TEXTC_REMOTE;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:152  
      658     6516          %VD$WINDOW_SPEC ( NAME = WINDOW$SPEC,
      659     6517                            STCLASS = "BASED ( CURRENT_WINDOW$ )" );
      660     6583          %VD$WINDOW_SPEC;
      661     6649
      662     6650    1     DCL VDP_BUFFER$ PTR STATIC SYMDEF INIT(ADDR(NIL));
      663     6651    1     DCL VDP_KEY$ PTR STATIC SYMDEF INIT(ADDR(NIL));
      664     6652    1     DCL VDP_KEY_AND_BUFFER$ PTR STATIC SYMDEF INIT(ADDR(NIL));
      665     6653    1     DCL VDP_SPEC$ PTR STATIC SYMDEF INIT(ADDR(NIL));
      666     6654
      667     6655    1     DCL BOB_EOB_FLAG BIT(1) ALIGNED;
      668     6656    1     DCL CURRENT_WINDOW$ PTR;
      669     6657    1     DCL EDIT_BLOCK_START_KEY$ PTR;
      670     6658    1     DCL EDIT_BLOCK_END_KEY$ PTR;
      671     6659    1     DCL DONT_FORGET_TO_WEOF BIT(1) ALIGNED;
      672     6660    1     DCL EVAL_KEY$ PTR;
      673     6661    1     DCL EVAL_RANGE_LOCATION$ PTR;
      674     6662    1     DCL FEP_DELREC_KEY$ PTR;
      675     6663    1     DCL FEP_READ_RETURN_KEY$ PTR;
      676     6664    1     DCL FEP_READ_RETURN_KEY SBIN;
      677     6665    1     DCL LEVEL# SBIN;
      678     6666    1     DCL FEP_SINPUT_KEY$ PTR;
      679     6667    1     DCL FEP_WRITE_KEY$ PTR;
      680     6668    1     DCL JUST_PAST_RECORD_SET_KEY UBIN;
      681     6669    1     DCL LOCATION$ PTR;
      682     6670    1     DCL RREAD_SAVED_KEY$ PTR;
      683     6671    1     DCL NORMAL_READ_COMPLETION BIT(1) ALIGNED;
      684     6672    1     DCL RECORD_SET_INDEX UBIN;
      685     6673    1     DCL RECORD_SET_KEY$ PTR;
      686     6674    1     DCL RECORD_SET_SIZE SBIN;
      687     6675    1     DCL RELATIVE SBIN;
      688     6676    1     DCL SCROLL_INDEX UBIN;
      689     6677    1     DCL SINPUT_KEY$ PTR;
      690     6678    1     DCL SCROLL_LIMIT UBIN;
      691     6679    1     DCL SPEC$ PTR;
      692     6680    1     DCL STREAM_CURRENT_KEY$ PTR;
      693     6681    1     DCL WITHIN_RANGE SBIN ALIGNED;
      694     6682    1     DCL INTERRUPT_STATE_BEFORE_M$READ SBIN;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:153  
      695     6683    1     DCL INTERRUPT_STATE_AFTER_M$READ SBIN;
      696     6684
      697     6685    1     DCL VDA$PFLUSH ENTRY (2) ALTRET;
      698     6686    1     DCL VDA$LDELETE ENTRY (2) ALTRET;
      699     6687    1     DCL VDE$RREAD ENTRY (4) ALTRET;
      700     6688
      701     6689    1     DCL VDE$RGET ENTRY (3) ALTRET;
      702     6690    1     DCL VDE$RPUT ENTRY (6) ALTRET;
      703     6691    1     DCL VDE$RSEARCH ENTRY (4) ALTRET;
      704     6692
      705     6693    1     DCL VDG$EBREAK_ACKNOWLEDGE ENTRY (1);
      706     6694    1     DCL VDG$ERRMSG ENTRY(4) ALTRET;
      707     6695    1     DCL VDG$INFOMSG ENTRY(4) ALTRET;
      708     6696    1     DCL VDG$MONERR ENTRY ALTRET;
      709     6697    1     DCL VDG$WARNMSG ENTRY(4) ALTRET;
      710     6698    1     DCL VDG$EREPORT_ERROR ENTRY (1);
      711     6699    1     DCL VDG$ESCREECH ENTRY (3);
      712     6700    1     DCL VDG$EXPAND_COMMAND_WINDOW ENTRY (1) ALTRET;
      713     6701    1     DCL VDG$LOCATION_TO_PTRS ENTRY (2) ALTRET;
      714     6702    1     DCL VDG$MPRES_FEPDELREC ENTRY (3);
      715     6703    1     DCL VDG$MPRES_FEPREAD ENTRY (2);
      716     6704    1     DCL VDG$MPRES_FEPREAD_RETURN ENTRY (3);
      717     6705    1     DCL VDG$MPRES_FEPSINPUT ENTRY (2);
      718     6706    1     DCL VDG$MPRES_FEPSTRMCTL ENTRY (3);
      719     6707    1     DCL VDG$MPRES_FEPWEOF ENTRY (2);
      720     6708    1     DCL VDG$MPRES_FEPWRITE ENTRY (3);
      721     6709    1     DCL VDG$MPRES_WREAD ENTRY (3);
      722     6710    1     DCL VDG$MPRES_WREAD_RETURN ENTRY (2);
      723     6711    1     DCL VDG$OALLOC ENTRY (3) ALTRET;
      724     6712    1     DCL VDG$OCOPY ENTRY (2) ALTRET;
      725     6713    1     DCL VDG$OFREE ENTRY (1) ALTRET;
      726     6714    1     DCL VDG$OFREE_RANGE ENTRY (1) ALTRET;
      727     6715    1     DCL VDG$COMPARE_PTRS_W_RANGE ENTRY (3) ALTRET;
      728     6716    1     DCL VDI$BSPLIT ENTRY(4) ALTRET;
      729     6717
      730     6718    1     DCL VDP$NFLUSH ENTRY (1) ALTRET;
      731     6719    1     DCL VDP$RDELETE ENTRY (3) ALTRET;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:154  
      732     6720    1     DCL VDP$RWRITE ENTRY (5) ALTRET;
      733     6721    1     DCL VDP$WERASE ENTRY (1) ALTRET;
      734     6722    1     DCL VDP$WFORMAT_RECORD ENTRY (2) ALTRET;
      735     6723    1     DCL VDP$WSCROLL_DOWN ENTRY (4) ALTRET;
      736     6724    1     DCL VDP$WSCROLL_UP ENTRY (6) ALTRET;
      737     6725        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:155  
      738     6726    1       CURRENT_WINDOW$ = VD_CURRENT_WINDOW$ -> VD$FILE_NODE.DESC.SPEC.V$;

   6726  3 000002   000000 470400 xsym               LDP0    VD_CURRENT_WINDOW$
         3 000003   000007 236100                    LDQ     7,,PR0
         3 000004   200107 756100                    STQ     CURRENT_WINDOW$,,AUTO

      739     6727    1       LEVEL# = WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.OPTIONS.LEVEL#;

   6727  3 000005   200107 471500                    LDP1    CURRENT_WINDOW$,,AUTO
         3 000006   100012 473500                    LDP3    10,,PR1
         3 000007   300026 236100                    LDQ     22,,PR3
         3 000010   000022 732000                    QRS     18
         3 000011   200120 756100                    STQ     LEVEL#,,AUTO

      740     6728
      741     6729    1       IF VD_$$MON_PRES.V# > 0

   6729  3 000012   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         3 000013   000024 604400 3                  TMOZ    s:6735

      742     6730    1       THEN
      743     6731    1         CALL VDG$MPRES_WREAD ( ACTIVATION_CHARACTER,

   6731  3 000014   200107 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         3 000015   200156 756100                    STQ     @LOCATION+6,,AUTO
         3 000016   200004 237100                    LDAQ    @ACTIVATION_CHARACTER,,AUTO
         3 000017   200154 757100                    STAQ    @LOCATION+4,,AUTO
         3 000020   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 000021   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000022   000000 701000 xent               TSX1    VDG$MPRES_WREAD
         3 000023   000000 011000                    NOP     0

      744     6732    1           FROM_PRESENTER,
      745     6733    1           WINDOW$SPEC );
      746     6734
      747     6735    1       IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:156  
   6735  3 000024   000003 235000 xsym               LDA     VD_$SCREEN+3
         3 000025   000003 115007                    CMPA    3,DL
         3 000026   000032 605000 3                  TPL     s:6740

      748     6736    1       THEN
      749     6737    1         CALL PRESENTER_IN_1_D

   6737  3 000027   000065 701000 3                  TSX1    PRESENTER_IN_1_D
         3 000030   000055 702000 3                  TSX2    PRESENTER_ALTRET
         3 000031   000034 710000 3                  TRA     s:6743

      750     6738    1           ALTRET ( PRESENTER_ALTRET );
      751     6739    1       ELSE
      752     6740    1         CALL PRESENTER_IN_2_D

   6740  3 000032   000650 701000 3                  TSX1    PRESENTER_IN_2_D
         3 000033   000055 702000 3                  TSX2    PRESENTER_ALTRET

      753     6741    1           ALTRET ( PRESENTER_ALTRET );
      754     6742
      755     6743    1       IF NOT FROM_PRESENTER

   6743  3 000034   200005 470500                    LDP0    @FROM_PRESENTER,,AUTO
         3 000035   000000 234100                    SZN     0,,PR0
         3 000036   000043 604000 3                  TMI     s:6748

      756     6744    1       THEN
      757     6745    1         CALL UPDATE_SELECTEDBLOCK_TO_CURSOR

   6745  3 000037   003630 701000 3                  TSX1    UPDATE_SELECTEDBLOCK_TO_CURSOR
         3 000040   000042 702000 3                  TSX2    s:6746
         3 000041   000043 710000 3                  TRA     s:6748

      758     6746    2         WHENALTRETURN DO; ALTRETURN; END;

   6746  3 000042   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:157  
      759     6747
      760     6748    1       IF VD_$$MON_PRES.V# > 0

   6748  3 000043   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         3 000044   000054 604400 3                  TMOZ    s:6753

      761     6749    1       THEN
      762     6750    1         CALL VDG$MPRES_WREAD_RETURN ( NEXT_WINDOW$,

   6750  3 000045   200107 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         3 000046   200003 235100                    LDA     @NEXT_WINDOW$,,AUTO
         3 000047   200154 757100                    STAQ    @LOCATION+4,,AUTO
         3 000050   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 000051   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000052   000000 701000 xent               TSX1    VDG$MPRES_WREAD_RETURN
         3 000053   000000 011000                    NOP     0

      763     6751    1           WINDOW$SPEC );
      764     6752
      765     6753    1       RETURN;

   6753  3 000054   000000 702200 xent               TSX2  ! X66_ARET

      766     6754
      767     6755    1   PRESENTER_ALTRET:
      768     6756    1       IF NOT FROM_PRESENTER

   6756  3 000055   200005 470500       PRESENTER_A* LDP0    @FROM_PRESENTER,,AUTO
         3 000056   000000 234100                    SZN     0,,PR0
         3 000057   000064 604000 3                  TMI     s:6761

      769     6757    1       THEN
      770     6758    1         CALL UPDATE_SELECTEDBLOCK_TO_CURSOR

   6758  3 000060   003630 701000 3                  TSX1    UPDATE_SELECTEDBLOCK_TO_CURSOR
         3 000061   000063 702000 3                  TSX2    s:6759
         3 000062   000064 710000 3                  TRA     s:6761
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:158  

      771     6759    2         WHENALTRETURN DO; ALTRETURN; END;

   6759  3 000063   000000 702200 xent               TSX2  ! X66_AALT

      772     6760
      773     6761    1       ALTRETURN;

   6761  3 000064   000000 702200 xent               TSX2  ! X66_AALT

      774     6762
      775     6763        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:159  
      776     6764    1   PRESENTER_IN_1_D: PROC ALTRET;

   6764  3 000065   200144 741300       PRESENTER_I* STX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO

      777     6765
      778     6766    2       CALL ALLOCATE_NECESSARY_OBJECTS;

   6766  3 000066   002710 701000 3                  TSX1    ALLOCATE_NECESSARY_OBJECTS
         3 000067   000000 011000                    NOP     0

      779     6767    2       VD_LAST_CWIN_ACTIVITY = 0; /* No screen clearing in 1dim mode */

   6767  3 000070   000000 450000 xsym               STZ     VD_LAST_CWIN_ACTIVITY

      780     6768
      781     6769    3       DO CASE ( ACTIVATION_CHARACTER );

   6769  3 000071   200004 470500                    LDP0    @ACTIVATION_CHARACTER,,AUTO
         3 000072   000100 101500                    MRL     fill='000'O
         3 000073   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000074   200154 000004                    ADSC9   @LOCATION+4,,AUTO        cn=0,n=4
         3 000075   200154 236100                    LDQ     @LOCATION+4,,AUTO
         3 000076   000004 136007                    SBLQ    4,DL
         3 000077   000007 116007                    CMPQ    7,DL
         3 000100   000102 602006 3                  TNC     s:6769+9,QL
         3 000101   000111 710000 3                  TRA     s:6772
         3 000102   000113 710000 3                  TRA     s:6779
         3 000103   000111 710000 3                  TRA     s:6772
         3 000104   000111 710000 3                  TRA     s:6772
         3 000105   000111 710000 3                  TRA     s:6772
         3 000106   000111 710000 3                  TRA     s:6772
         3 000107   000111 710000 3                  TRA     s:6772
         3 000110   000116 710000 3                  TRA     s:6782

      782     6770
      783     6771    3         CASE ( ELSE );

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:160  
      784     6772    3           RELATIVE = 0;

   6772  3 000111   200132 450100                    STZ     RELATIVE,,AUTO
         3 000112   000120 710000 3                  TRA     s:6786

      785     6773
      786     6774        /*    CASE ( %EOM_SPLIT_RECORD );
      787     6775                CALL COMPLETION_INSERT_NO_ROOM ALTRET (RETALT);
      788     6776                RELATIVE = 0;
      789     6777         */
      790     6778    3         CASE ( %EOM_PREV_RECORD );

      791     6779    3           RELATIVE = -1;

   6779  3 000113   000001 335007                    LCA     1,DL
         3 000114   200132 755100                    STA     RELATIVE,,AUTO
         3 000115   000120 710000 3                  TRA     s:6786

      792     6780
      793     6781    3         CASE ( %EOM_NEXT_RECORD );

      794     6782    3           RELATIVE = 1;

   6782  3 000116   000001 235007                    LDA     1,DL
         3 000117   200132 755100                    STA     RELATIVE,,AUTO

      795     6783
      796     6784    3       END;

      797     6785
      798     6786    3       DO CASE ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# );

   6786  3 000120   200107 471500                    LDP1    CURRENT_WINDOW$,,AUTO
         3 000121   100013 473500                    LDP3    11,,PR1
         3 000122   300070 220100                    LDX0    56,,PR3
         3 000123   000004 100003                    CMPX0   4,DU
         3 000124   000126 602010 3                  TNC     s:6786+6,X0
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:161  
         3 000125   000137 710000 3                  TRA     s:6797
         3 000126   000137 710000 3                  TRA     s:6797
         3 000127   000132 710000 3                  TRA     s:6790
         3 000130   000132 710000 3                  TRA     s:6790
         3 000131   000135 710000 3                  TRA     s:6793

      799     6787
      800     6788    3         CASE ( %EVST_INITIAL,

      801     6789    3         %EVST_START );
      802     6790    3           EVAL_RANGE_LOCATION$ = ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.
              6790                    START );

   6790  3 000132   300024 634500                    EPPR4   20,,PR3
         3 000133   200114 454500                    STP4    EVAL_RANGE_LOCATION$,,AUTO
         3 000134   000137 710000 3                  TRA     s:6797

      803     6791
      804     6792    3         CASE ( %EVST_END );

      805     6793    3           EVAL_RANGE_LOCATION$ = ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.
              6793                    ENDD );

   6793  3 000135   300035 634500                    EPPR4   29,,PR3
         3 000136   200114 454500                    STP4    EVAL_RANGE_LOCATION$,,AUTO

      806     6794
      807     6795    3       END;

      808     6796
      809     6797    2       FPT_SINPUT.V.DCB# = WINDOW$SPEC.DCB#;

   6797  3 000137   100014 721100                    LXL1    12,,PR1
         3 000140   000024 741000 1                  STX1    FPT_SINPUT+6

      810     6798    2       FPT_READ.V.DCB# = WINDOW$SPEC.DCB#;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:162  
   6798  3 000141   100014 720100                    LXL0    12,,PR1
         3 000142   000010 740000 1                  STX0    FPT_READ+8

      811     6799    2       FPT_READ.V.DVBYTE.REREAD# = %TRUE;

   6799  3 000143   100000 236003                    LDQ     32768,DU
         3 000144   000013 256000 1                  ORSQ    FPT_READ+11

      812     6800
      813     6801    2       IF VD_$STRIP_BLANKS.V# = 0

   6801  3 000145   000003 235000 xsym               LDA     VD_$STRIP_BLANKS+3
         3 000146   000152 601000 3                  TNZ     s:6805

      814     6802    2       THEN
      815     6803    2         FPT_READ.V.DVBYTE.BP# = %TRUE;

   6803  3 000147   200000 236003                    LDQ     65536,DU
         3 000150   000013 256000 1                  ORSQ    FPT_READ+11
         3 000151   000154 710000 3                  TRA     s:6807

      816     6804    2       ELSE
      817     6805    2         FPT_READ.V.DVBYTE.BP# = %FALSE;

   6805  3 000152   000000 236000 4                  LDQ     0
         3 000153   000013 356000 1                  ANSQ    FPT_READ+11

      818     6806
      819     6807    2       CALL COMPLETION_RECORD_NEEDED (RELATIVE, EVAL_RANGE_LOCATION$->VD$LOCATION)

   6807  3 000154   200114 236100                    LDQ     EVAL_RANGE_LOCATION$,,AUTO
         3 000155   200150 756100                    STQ     @RECORDS_NEEDED+1,,AUTO
         3 000156   200132 633500                    EPPR3   RELATIVE,,AUTO
         3 000157   200147 453500                    STP3    INTERRUPT_STATE_AFTER_M$READ+5,,AUTO
         3 000160   000434 701000 3                  TSX1    COMPLETION_RECORD_NEEDED
         3 000161   000163 702000 3                  TSX2    RETALT
         3 000162   000165 710000 3                  TRA     READ_THE_TERMINAL
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:163  

      820     6808    3       WHENALTRETURN DO;

      821     6809    3   RETALT: ALTRETURN; END;

   6809  3 000163   200144 221300       RETALT       LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 000164   000000 702211                    TSX2  ! 0,X1

      822     6810
      823     6811    2   READ_THE_TERMINAL:
      824     6812    3       DO WHILE NOT BOB_EOB_FLAG;

   6812  3 000165   000431 710000 3     READ_THE_TE* TRA     s:6923

      825     6813
      826     6814    3         CALL ALLOCATE_NECESSARY_OBJECTS;

   6814  3 000166   002710 701000 3                  TSX1    ALLOCATE_NECESSARY_OBJECTS
         3 000167   000000 011000                    NOP     0

      827     6815
      828     6816    3         IF VD_$$MON_PRES.V# > 0

   6816  3 000170   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         3 000171   000203 604400 3                  TMOZ    s:6821

      829     6817    3         THEN
      830     6818    3           CALL VDG$MPRES_FEPREAD ( WINDOW$SPEC.DCB#,

   6818  3 000172   000001 236000 4                  LDQ     1
         3 000173   200155 756100                    STQ     @LOCATION+5,,AUTO
         3 000174   200107 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         3 000175   000002 036000 4                  ADLQ    2
         3 000176   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 000177   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 000200   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000201   000000 701000 xent               TSX1    VDG$MPRES_FEPREAD
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:164  
         3 000202   000000 011000                    NOP     0

      831     6819    3             VDP_NODE_DESC );
      832     6820
      833     6821    3         INTERRUPT_STATE_BEFORE_M$READ = VD_6E.INTERRUPT.STATE#;

   6821  3 000203   000027 235000 xsym               LDA     VD_6E+23
         3 000204   000022 771000                    ARL     18
         3 000205   200141 755100                    STA     INTERRUPT_STATE_BEFORE_M$READ,,AUTO

      834     6822    3         IF VD_6E.INTERRUPT.STATE# = %INST_BREAK_QUEUED THEN

   6822  3 000206   000000 620005                    EAX0    0,AL
         3 000207   000003 100003                    CMPX0   3,DU
         3 000210   000213 601000 3                  TNZ     TRACYS_READ_LABEL_IN_1D

      835     6823    3           NORMAL_READ_COMPLETION = %FALSE;

   6823  3 000211   200126 450100                    STZ     NORMAL_READ_COMPLETION,,AUTO
         3 000212   000225 710000 3                  TRA     s:6840

      836     6824    3         ELSE
      837     6825    3   TRACYS_READ_LABEL_IN_1D:
      838     6826    4           DO;

   6826  3 000213                       TRACYS_READ* null
      839     6827    4             VD_6E.INTERRUPT.STATE# = %INST_READING;

   6827  3 000213   000002 220003                    LDX0    2,DU
         3 000214   000027 740000 xsym               STX0    VD_6E+23

      840     6828    4             CALL M$READ ( FPT_READ )

   6828  3 000215   000000 630400 1                  EPPR0   FPT_READ
         3 000216   440000 713400                    CLIMB   alt,read
         3 000217   401400 401760                    pmme    nvectors=4
         3 000220   000224 702000 3                  TSX2    s:6835
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:165  

      841     6829    4             WHENRETURN
      842     6830    5               DO;

      843     6831    5                 NORMAL_READ_COMPLETION = %TRUE;

   6831  3 000221   400000 236003                    LDQ     -131072,DU
         3 000222   200126 756100                    STQ     NORMAL_READ_COMPLETION,,AUTO

      844     6832    5               END;

   6832  3 000223   000225 710000 3                  TRA     s:6840

      845     6833    4             WHENALTRETURN
      846     6834    5               DO;

      847     6835    5                 NORMAL_READ_COMPLETION = %FALSE;

   6835  3 000224   200126 450100                    STZ     NORMAL_READ_COMPLETION,,AUTO

      848     6836    5               END;

      849     6837    4           END TRACYS_READ_LABEL_IN_1D;

      850     6838
      851     6839    4         DO INHIBIT;

      852     6840    4           INTERRUPT_STATE_AFTER_M$READ = VD_6E.INTERRUPT.STATE#;

   6840  3 000225   000027 235200 xsym               LDA   ! VD_6E+23
         3 000226   000022 771200                    ARL   ! 18
         3 000227   200142 755300                    STA   ! INTERRUPT_STATE_AFTER_M$READ,,AUTO

      853     6841    4           VD_6E.INTERRUPT.STATE# = INTERRUPT_STATE_BEFORE_M$READ;

   6841  3 000230   200141 720300                    LXL0  ! INTERRUPT_STATE_BEFORE_M$READ,,AUTO
         3 000231   000027 740200 xsym               STX0  ! VD_6E+23
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:166  

      854     6842    4         END;

      855     6843
      856     6844    3         FPT_READ.V.DVBYTE.REREAD# = '1'B;

   6844  3 000232   100000 236003                    LDQ     32768,DU
         3 000233   000013 256000 1                  ORSQ    FPT_READ+11

      857     6845
      858     6846    3         IF NORMAL_READ_COMPLETION

   6846  3 000234   200126 234100                    SZN     NORMAL_READ_COMPLETION,,AUTO
         3 000235   000413 605000 3                  TPL     EVERYTHINGS_LOUSY

      859     6847    3         THEN
      860     6848    3   EVERYTHINGS_PEACHY:
      861     6849    4           DO;

   6849  3 000236                       EVERYTHINGS* null
      862     6850
      863     6851    4             VDP_BUFFER$ -> VD$BUFFER.LENGTH# = DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.
              6851                      ARS#;

   6851  3 000236   000003 470400 4                  LDP0    3
         3 000237   000000 471500                    LDP1    0,,PR0
         3 000240   200107 473500                    LDP3    CURRENT_WINDOW$,,AUTO
         3 000241   300014 721100                    LXL1    12,,PR3
         3 000242   100000 474511                    LDP4    0,X1,PR1
         3 000243   400000 722100                    LXL2    0,,PR4
         3 000244   000104 475400 1                  LDP5    VDP_BUFFER$
         3 000245   500002 742100                    STX2    2,,PR5

      864     6852
      865     6853    4             IF VD_$$MON_PRES.V# > 0

   6853  3 000246   000003 235000 xsym               LDA     VD_$$MON_PRES+3
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:167  
         3 000247   000270 604400 3                  TMOZ    s:6859

      866     6854    4             THEN
      867     6855    4               CALL VDG$MPRES_FEPREAD_RETURN ( B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR,

   6855  3 000250   000000 474400 xsym               LDP4    B$TCB$
         3 000251   400000 475500                    LDP5    0,,PR4
         3 000252   300014 721100                    LXL1    12,,PR3
         3 000253   100000 476511                    LDP6    0,X1,PR1
         3 000254   000001 236000 4                  LDQ     1
         3 000255   200156 756100                    STQ     @LOCATION+6,,AUTO
         3 000256   200157 456500                    STP6    @LOCATION+7,,AUTO
         3 000257   200157 236100                    LDQ     @LOCATION+7,,AUTO
         3 000260   000004 036000 4                  ADLQ    4
         3 000261   200155 756100                    STQ     @LOCATION+5,,AUTO
         3 000262   500102 637500                    EPPR7   66,,PR5
         3 000263   200154 457500                    STP7    @LOCATION+4,,AUTO
         3 000264   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 000265   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000266   000000 701000 xent               TSX1    VDG$MPRES_FEPREAD_RETURN
         3 000267   000000 011000                    NOP     0

      868     6856    4                 DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMVAL#.VALUE#,
      869     6857    4                 VDP_NODE_DESC );
      870     6858
      871     6859    4             CALL COMPLETION_NORMAL ALTRET (RETALT);

   6859  3 000270   003114 701000 3                  TSX1    COMPLETION_NORMAL
         3 000271   000163 702000 3                  TSX2    RETALT

      872     6860
      873     6861    5             DO CASE ( DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMVAL#.VALUE# );

   6861  3 000272   000003 470400 4                  LDP0    3
         3 000273   000000 471500                    LDP1    0,,PR0
         3 000274   200107 473500                    LDP3    CURRENT_WINDOW$,,AUTO
         3 000275   300014 720100                    LXL0    12,,PR3
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:168  
         3 000276   100000 474510                    LDP4    0,X0,PR1
         3 000277   400003 236100                    LDQ     3,,PR4
         3 000300   000377 376007                    ANQ     255,DL
         3 000301   000004 136007                    SBLQ    4,DL
         3 000302   000013 116007                    CMPQ    11,DL
         3 000303   000305 602006 3                  TNC     s:6861+11,QL
         3 000304   000320 710000 3                  TRA     s:6864
         3 000305   000374 710000 3                  TRA     s:6892
         3 000306   000320 710000 3                  TRA     s:6864
         3 000307   000320 710000 3                  TRA     s:6864
         3 000310   000320 710000 3                  TRA     s:6864
         3 000311   000320 710000 3                  TRA     s:6864
         3 000312   000320 710000 3                  TRA     s:6864
         3 000313   000365 710000 3                  TRA     s:6889
         3 000314   000320 710000 3                  TRA     s:6864
         3 000315   000320 710000 3                  TRA     s:6864
         3 000316   000320 710000 3                  TRA     s:6864
         3 000317   000403 710000 3                  TRA     s:6895

      874     6862
      875     6863    5               CASE ( ELSE );

      876     6864    5                 IF DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMVAL#.VALUE# ~=

   6864  3 000320   400003 236100                    LDQ     3,,PR4
         3 000321   000377 376007                    ANQ     255,DL
         3 000322   000026 116007                    CMPQ    22,DL
         3 000323   000342 600000 3                  TZE     s:6875

      877     6865    5                   %EOM_SPLIT_RECORD THEN
      878     6866    6                   DO;

      879     6867    6                     FPT_READ.V.DVBYTE.REREAD# = '0'B; /* No reread if wordwrap */

   6867  3 000324   000005 236000 4                  LDQ     5
         3 000325   000013 356000 1                  ANSQ    FPT_READ+11

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:169  
      880     6868    6                     IF DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS# <=

   6868  3 000326   000004 236000 1                  LDQ     FPT_READ+4
         3 000327   000020 772000                    QRL     16
         3 000330   400000 116100                    CMPQ    0,,PR4
         3 000331   000336 604000 3                  TMI     s:6871
         3 000332   400003 236100                    LDQ     3,,PR4
         3 000333   000777 376007                    ANQ     511,DL
         3 000334   000501 116007                    CMPQ    321,DL
         3 000335   000342 600000 3                  TZE     s:6875

      881     6869    6                       FPT_READ.BUF_.BOUND AND DCBADDR ( WINDOW$SPEC.DCB# ) ->
      882     6870    6                       F$DCB.EOMCHAR# = %EOM_EOR# THEN EXIT;
      883     6871    6                     CALL COMPLETION_EOM_COMMAND;

   6871  3 000336   003310 701000 3                  TSX1    COMPLETION_EOM_COMMAND
         3 000337   000000 011000                    NOP     0

      884     6872    6                     RETURN;

   6872  3 000340   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 000341   000001 702211                    TSX2  ! 1,X1

      885     6873    6                   END;
      886     6874
      887     6875    5                 CALL COMPLETION_INSERT_NO_ROOM ALTRET (RETALT);

   6875  3 000342   002772 701000 3                  TSX1    COMPLETION_INSERT_NO_ROOM
         3 000343   000163 702000 3                  TSX2    RETALT

      888     6876
      889     6877    5                 IF WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_END THEN

   6877  3 000344   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 000345   000013 471500                    LDP1    11,,PR0
         3 000346   100070 220100                    LDX0    56,,PR1
         3 000347   000003 100003                    CMPX0   3,DU
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:170  
         3 000350   000354 601000 3                  TNZ     s:6881

      890     6878    5                   EVAL_RANGE_LOCATION$ =

   6878  3 000351   100035 633500                    EPPR3   29,,PR1
         3 000352   200114 453500                    STP3    EVAL_RANGE_LOCATION$,,AUTO
         3 000353   000356 710000 3                  TRA     s:6883

      891     6879    5                     ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD );
      892     6880    5                 ELSE
      893     6881    5                   EVAL_RANGE_LOCATION$ =

   6881  3 000354   100024 633500                    EPPR3   20,,PR1
         3 000355   200114 453500                    STP3    EVAL_RANGE_LOCATION$,,AUTO

      894     6882    5                     ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START );
      895     6883    5                 CALL COMPLETION_RECORD_NEEDED (0,

   6883  3 000356   200114 236100                    LDQ     EVAL_RANGE_LOCATION$,,AUTO
         3 000357   200150 756100                    STQ     @RECORDS_NEEDED+1,,AUTO
         3 000360   000006 236000 4                  LDQ     6
         3 000361   200147 756100                    STQ     INTERRUPT_STATE_AFTER_M$READ+5,,AUTO
         3 000362   000434 701000 3                  TSX1    COMPLETION_RECORD_NEEDED
         3 000363   000163 702000 3                  TSX2    RETALT
         3 000364   000431 710000 3                  TRA     s:6923

      896     6884    5                   EVAL_RANGE_LOCATION$ -> VD$LOCATION )
      897     6885    5                   ALTRET (RETALT);
      898     6886
      899     6887
      900     6888    5               CASE ( %EOM_NEXT_RECORD );

      901     6889    5                 CALL COMPLETION_RECORD_NEEDED ( 1 ) ALTRET (RETALT);

   6889  3 000365   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000366   200150 756100                    STQ     @RECORDS_NEEDED+1,,AUTO
         3 000367   000007 236000 4                  LDQ     7
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:171  
         3 000370   200147 756100                    STQ     INTERRUPT_STATE_AFTER_M$READ+5,,AUTO
         3 000371   000434 701000 3                  TSX1    COMPLETION_RECORD_NEEDED
         3 000372   000163 702000 3                  TSX2    RETALT
         3 000373   000431 710000 3                  TRA     s:6923

      902     6890
      903     6891    5               CASE ( %EOM_PREV_RECORD );

      904     6892    5                 CALL COMPLETION_RECORD_NEEDED ( -1 ) ALTRET (RETALT);

   6892  3 000374   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000375   200150 756100                    STQ     @RECORDS_NEEDED+1,,AUTO
         3 000376   000010 236000 4                  LDQ     8
         3 000377   200147 756100                    STQ     INTERRUPT_STATE_AFTER_M$READ+5,,AUTO
         3 000400   000434 701000 3                  TSX1    COMPLETION_RECORD_NEEDED
         3 000401   000163 702000 3                  TSX2    RETALT
         3 000402   000431 710000 3                  TRA     s:6923

      905     6893
      906     6894    5               CASE ( %EOM_NEXT_ED_WINDOW );

      907     6895    5                 CALL COMPLETION_EOM_NEXT_ED_WINDOW ALTRET (RETALT);

   6895  3 000403   003316 701000 3                  TSX1    COMPLETION_EOM_NEXT_ED_WINDOW
         3 000404   000163 702000 3                  TSX2    RETALT

      908     6896
      909     6897                    /*  If COMPLETION_EOM_NEXT_ED_WINDOW
      910     6898                        filled in NEXT_WINDOW$ with a *different*
      911     6899                        (ORG=SE) window, then return to the
      912     6900                        Interpreter.  */
      913     6901    5                 IF NEXT_WINDOW$ ~= VD_CURRENT_WINDOW$

   6901  3 000405   200003 470500                    LDP0    @NEXT_WINDOW$,,AUTO
         3 000406   000000 236100                    LDQ     0,,PR0
         3 000407   000000 116000 xsym               CMPQ    VD_CURRENT_WINDOW$
         3 000410   000431 600000 3                  TZE     s:6923
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:172  

      914     6902    5                 THEN
      915     6903    5                   RETURN;

   6903  3 000411   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 000412   000001 702211                    TSX2  ! 1,X1

      916     6904
      917     6905    5             END;

      918     6906
      919     6907    4           END EVERYTHINGS_PEACHY;
      920     6908    3         ELSE
      921     6909    3   EVERYTHINGS_LOUSY:
      922     6910    4           DO;

   6910  3 000413                       EVERYTHINGS* null
      923     6911
      924     6912    5             IF INTERRUPT_STATE_AFTER_M$READ = %INST_BREAK_QUEUED THEN DO;

   6912  3 000413   000003 115007                    CMPA    3,DL
         3 000414   000424 601000 3                  TNZ     s:6918

      925     6913    5                 CALL VDG$EBREAK_ACKNOWLEDGE; /* But don't report an error */

   6913  3 000415   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000416   000000 701000 xent               TSX1    VDG$EBREAK_ACKNOWLEDGE
         3 000417   000000 011000                    NOP     0

      926     6914    5                 CALL COMPLETION_EOM_COMMAND;

   6914  3 000420   003310 701000 3                  TSX1    COMPLETION_EOM_COMMAND
         3 000421   000000 011000                    NOP     0

      927     6915    5                 RETURN;

   6915  3 000422   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:173  
         3 000423   000001 702211                    TSX2  ! 1,X1

      928     6916    5               END;
      929     6917
      930     6918    4             CALL VDG$MONERR;

   6918  3 000424   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000425   000000 701000 xent               TSX1    VDG$MONERR
         3 000426   000000 011000                    NOP     0

      931     6919    4             ALTRETURN;

   6919  3 000427   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 000430   000000 702211                    TSX2  ! 0,X1

      932     6920
      933     6921    4           END EVERYTHINGS_LOUSY;
      934     6922
      935     6923    3       END READ_THE_TERMINAL;

   6923  3 000431   200106 234100                    SZN     BOB_EOB_FLAG,,AUTO
         3 000432   000166 605000 3                  TPL     s:6814
         3 000433   000646 710000 3                  TRA     s:7058

      936     6924
      937     6925        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:174  
      938     6926    2   COMPLETION_RECORD_NEEDED: PROC ( RELATIVE, LOCATION ) ALTRET;

   6926  3 000434   200146 741300       COMPLETION_* STX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO

      939     6927
      940     6928    3     DCL RELATIVE SBIN PARAM;
      941     6929          %VD$LOCATION (NAME=LOCATION, STCLASS=PARAM);
      942     6957    3     DCL KT_TO_INCR(0:3) CONSTANT SBIN INIT (65535,1,65535,10000);
      943     6958
      944     6959    3       BOB_EOB_FLAG = %FALSE;

   6959  3 000435   200106 450100                    STZ     BOB_EOB_FLAG,,AUTO

      945     6960
      946     6961    3       RREAD_SAVED_KEY = WINDOW$SPEC.OPERAND.STREAM$ ->

   6961  3 000436   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 000437   000010 471500                    LDP1    8,,PR0
         3 000440   200120 235100                    LDA     LEVEL#,,AUTO
         3 000441   000003 735000                    ALS     3
         3 000442   000100 100505                    MLR     fill='000'O
         3 000443   100004 000010                    ADSC9   4,A,PR1                  cn=0,n=8
         3 000444   200006 000010                    ADSC9   RREAD_SAVED_KEY,,AUTO    cn=0,n=8

      947     6962    3         VD$STREAM.CURRENT.KEY (LEVEL# - 1);
      948     6963
      949     6964    3       CALL VDE$RREAD ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,

   6964  3 000445   000012 473500                    LDP3    10,,PR0
         3 000446   200147 236100                    LDQ     @RELATIVE,,AUTO
         3 000447   200150 235100                    LDA     @LOCATION,,AUTO
         3 000450   200156 757100                    STAQ    @LOCATION+6,,AUTO
         3 000451   300003 634500                    EPPR4   3,,PR3
         3 000452   200155 454500                    STP4    @LOCATION+5,,AUTO
         3 000453   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 000454   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 000455   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:175  
         3 000456   000000 701000 xent               TSX1    VDE$RREAD
         3 000457   000461 702000 3                  TSX2    s:6970
         3 000460   000463 710000 3                  TRA     s:6974

      950     6965    3         WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
      951     6966    3         LOCATION /* absolute position = wherever */,
      952     6967    3         RELATIVE /* relative position = forward or backward 1 */ )
      953     6968    3       WHENALTRETURN
      954     6969    4         DO;

      955     6970    4           ALTRETURN;

   6970  3 000461   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 000462   000000 702211                    TSX2  ! 0,X1

      956     6971    4         END;
      957     6972
      958     6973
      959     6974    3       IF RELATIVE < 0

   6974  3 000463   200147 470500                    LDP0    @RELATIVE,,AUTO
         3 000464   000000 235100                    LDA     0,,PR0
         3 000465   000532 605000 3                  TPL     s:7006

      960     6975    3       THEN
      961     6976    3   CHECK_FOR_BOF:
      962     6977    4         DO;

   6977  3 000466                       CHECK_FOR_B* null
      963     6978                %GETKEY ( KEY = "WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY",
      964     6979                INDX = LEVEL# - 1,
      965     6980                PTR = STREAM_CURRENT_KEY$ );

   6987  3 000466   200107 471500                    LDP1    CURRENT_WINDOW$,,AUTO
         3 000467   100010 473500                    LDP3    8,,PR1
         3 000470   200120 236100                    LDQ     LEVEL#,,AUTO
         3 000471   000001 736000                    QLS     1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:176  
         3 000472   300004 720106                    LXL0    4,QL,PR3
         3 000473   000002 100003                    CMPX0   2,DU
         3 000474   000501 601000 3                  TNZ     s:6987+4

   6987  3 000475   300005 474506                    LDP4    5,QL,PR3
         3 000476   400002 635500                    EPPR5   2,,PR4
         3 000477   200137 455500                    STP5    STREAM_CURRENT_KEY$,,AUTO
         3 000500   000503 710000 3                  TRA     s:6998

   6987  3 000501   300005 634506                    EPPR4   5,QL,PR3
         3 000502   200137 454500                    STP4    STREAM_CURRENT_KEY$,,AUTO

      966     6990                %GETKEY ( KEY = "RREAD_SAVED_KEY",
      967     6991                PTR = RREAD_SAVED_KEY$ );

   6998  3 000503   200006 721100                    LXL1    RREAD_SAVED_KEY,,AUTO
         3 000504   000002 101003                    CMPX1   2,DU
         3 000505   000512 601000 3                  TNZ     s:6998+7

   6998  3 000506   200007 236100                    LDQ     RREAD_SAVED_KEY+1,,AUTO
         3 000507   000002 036003                    ADLQ    2,DU
         3 000510   200125 756100                    STQ     RREAD_SAVED_KEY$,,AUTO
         3 000511   000514 710000 3                  TRA     s:7001

   6998  3 000512   200007 634500                    EPPR4   RREAD_SAVED_KEY+1,,AUTO
         3 000513   200125 454500                    STP4    RREAD_SAVED_KEY$,,AUTO

      968     7001    4           IF STREAM_CURRENT_KEY$ -> VD$TEXTC >= RREAD_SAVED_KEY$ -> VD$TEXTC

   7001  3 000514   200137 474500                    LDP4    STREAM_CURRENT_KEY$,,AUTO
         3 000515   400000 236100                    LDQ     0,,PR4
         3 000516   000033 772000                    QRL     27
         3 000517   000001 620006                    EAX0    1,QL
         3 000520   200125 475500                    LDP5    RREAD_SAVED_KEY$,,AUTO
         3 000521   500000 236100                    LDQ     0,,PR5
         3 000522   000033 772000                    QRL     27
         3 000523   000001 622006                    EAX2    1,QL
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:177  
         3 000524   000140 106540                    CMPC    fill='000'O
         3 000525   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         3 000526   500000 000012                    ADSC9   0,,PR5                   cn=0,n=*X2
         3 000527   000532 602000 3                  TNC     s:7006

      969     7002    4           THEN
      970     7003    4             BOB_EOB_FLAG = %TRUE;

   7003  3 000530   400000 236003                    LDQ     -131072,DU
         3 000531   200106 756100                    STQ     BOB_EOB_FLAG,,AUTO

      971     7004    4         END CHECK_FOR_BOF;

      972     7005
      973     7006    3       IF NOT BOB_EOB_FLAG

   7006  3 000532   200106 234100                    SZN     BOB_EOB_FLAG,,AUTO
         3 000533   000560 604000 3                  TMI     s:7023

      974     7007    3       THEN
      975     7008    4         DO;

      976     7009    4           CALL VDE$RGET ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,

   7009  3 000534   200107 471500                    LDP1    CURRENT_WINDOW$,,AUTO
         3 000535   100010 473500                    LDP3    8,,PR1
         3 000536   100012 474500                    LDP4    10,,PR1
         3 000537   200052 635500                    EPPR5   RGET_NODE_DESC,,AUTO
         3 000540   200156 455500                    STP5    @LOCATION+6,,AUTO
         3 000541   400003 636500                    EPPR6   3,,PR4
         3 000542   200155 456500                    STP6    @LOCATION+5,,AUTO
         3 000543   200154 453500                    STP3    @LOCATION+4,,AUTO
         3 000544   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 000545   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000546   000000 701000 xent               TSX1    VDE$RGET
         3 000547   000551 702000 3                  TSX2    s:7014
         3 000550   000553 710000 3                  TRA     s:7018
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:178  

      977     7010    4             WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
      978     7011    4             RGET_NODE_DESC )
      979     7012    4           WHENALTRETURN
      980     7013    5             DO;

      981     7014    5               ALTRETURN;

   7014  3 000551   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 000552   000000 702211                    TSX2  ! 0,X1

      982     7015    5             END;
      983     7016
      984     7017
      985     7018    4           IF RGET_NODE_DESC.KEY = %CLEAR

   7018  3 000553   200052 237100                    LDAQ    RGET_NODE_DESC,,AUTO
         3 000554   000012 117000 4                  CMPAQ   10
         3 000555   000560 601000 3                  TNZ     s:7023

      986     7019    4           THEN
      987     7020    4             BOB_EOB_FLAG = %TRUE;

   7020  3 000556   400000 236003                    LDQ     -131072,DU
         3 000557   200106 756100                    STQ     BOB_EOB_FLAG,,AUTO

      988     7021    4         END;

      989     7022
      990     7023    3       IF BOB_EOB_FLAG

   7023  3 000560   200106 234100                    SZN     BOB_EOB_FLAG,,AUTO
         3 000561   000610 605000 3                  TPL     s:7043

      991     7024    3       THEN
      992     7025    3   BOB_OR_EOB_REACHED:
      993     7026    4         DO;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:179  

   7026  3 000562                       BOB_OR_EOB_* null
      994     7027    4           IF RELATIVE < 0

   7027  3 000562   200147 470500                    LDP0    @RELATIVE,,AUTO
         3 000563   000000 235100                    LDA     0,,PR0
         3 000564   000572 605000 3                  TPL     s:7031

      995     7028    4           THEN
      996     7029    4             CALL VDG$WARNMSG (%E$INFO_BOB);

   7029  3 000565   000015 630400 4                  EPPR0   13
         3 000566   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000567   000000 701000 xent               TSX1    VDG$WARNMSG
         3 000570   000000 011000                    NOP     0
         3 000571   000576 710000 3                  TRA     s:7032

      997     7030    4           ELSE
      998     7031    4             CALL VDG$WARNMSG (%E$INFO_EOB);

   7031  3 000572   000017 630400 4                  EPPR0   15
         3 000573   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000574   000000 701000 xent               TSX1    VDG$WARNMSG
         3 000575   000000 011000                    NOP     0

      999     7032    4           CALL VDG$EREPORT_ERROR;

   7032  3 000576   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000577   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         3 000600   000000 011000                    NOP     0

     1000     7033
     1001     7034    4           CALL COMPLETION_EOM_COMMAND

   7034  3 000601   003310 701000 3                  TSX1    COMPLETION_EOM_COMMAND
         3 000602   000604 702000 3                  TSX2    s:7037
         3 000603   000606 710000 3                  TRA     s:7040
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:180  

     1002     7035    4           WHENALTRETURN
     1003     7036    5             DO;

     1004     7037    5               ALTRETURN;

   7037  3 000604   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 000605   000000 702211                    TSX2  ! 0,X1

     1005     7038    5             END;
     1006     7039
     1007     7040    4           RETURN;

   7040  3 000606   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 000607   000001 702211                    TSX2  ! 1,X1

     1008     7041    4         END BOB_OR_EOB_REACHED;
     1009     7042
     1010     7043    3       IF ADDR ( LOCATION ) ~= ADDR ( NIL ) AND RELATIVE = 0 THEN

   7043  3 000610   200150 236100                    LDQ     @LOCATION,,AUTO
         3 000611   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000612   000623 600000 3                  TZE     s:7045
         3 000613   200147 470500                    LDP0    @RELATIVE,,AUTO
         3 000614   000000 235100                    LDA     0,,PR0
         3 000615   000623 601000 3                  TNZ     s:7045

     1011     7044    3         FPT_SINPUT.V.REREADPOS# = LOCATION.POSITION# + 1;

   7044  3 000616   200150 471500                    LDP1    @LOCATION,,AUTO
         3 000617   100010 220100                    LDX0    8,,PR1
         3 000620   000001 621010                    EAX1    1,X0
         3 000621   000025 441000 1                  SXL1    FPT_SINPUT+7
         3 000622   000625 710000 3                  TRA     s:7046

     1012     7045    3       ELSE FPT_SINPUT.V.REREADPOS# = 1;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:181  
   7045  3 000623   000001 220003                    LDX0    1,DU
         3 000624   000025 440000 1                  SXL0    FPT_SINPUT+7

     1013     7046    3       WINDOW$SPEC.EDTCTL.KEY_INCR# = KT_TO_INCR (RGET_NODE_DESC.KEY.TYPE#);

   7046  3 000625   200052 220100                    LDX0    RGET_NODE_DESC,,AUTO
         3 000626   000000 721010 2                  LXL1    KT_TO_INCR,X0
         3 000627   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 000630   000023 441100                    SXL1    19,,PR0

     1014     7047    3       CALL VDP$WFORMAT_RECORD ( RGET_NODE_DESC,

   7047  3 000631   000020 236000 4                  LDQ     16
         3 000632   200155 756100                    STQ     @LOCATION+5,,AUTO
         3 000633   200052 631500                    EPPR1   RGET_NODE_DESC,,AUTO
         3 000634   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 000635   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 000636   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000637   000000 701000 xent               TSX1    VDP$WFORMAT_RECORD
         3 000640   000642 702000 3                  TSX2    s:7051
         3 000641   000644 710000 3                  TRA     s:7054

     1015     7048    3         FPT_SINPUT)
     1016     7049    3       WHENALTRETURN
     1017     7050    4         DO;

     1018     7051    4           ALTRETURN;

   7051  3 000642   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 000643   000000 702211                    TSX2  ! 0,X1

     1019     7052    4         END;
     1020     7053
     1021     7054    3       RETURN;

   7054  3 000644   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 000645   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:182  

     1022     7055
     1023     7056    3   END COMPLETION_RECORD_NEEDED;
     1024     7057
     1025     7058    2   END PRESENTER_IN_1_D;

   7058  3 000646   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 000647   000001 702211                    TSX2  ! 1,X1

     1026     7059        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:183  
     1027     7060    1   PRESENTER_IN_2_D: PROC ALTRET;

   7060  3 000650   200144 741300       PRESENTER_I* STX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO

     1028     7061
     1029     7062    2       WITHIN_RANGE = %RCCL_GREATER;

   7062  3 000651   000001 235007                    LDA     1,DL
         3 000652   200140 755100                    STA     WITHIN_RANGE,,AUTO

     1030     7063    3       IF NOT DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.FCD# THEN DO;

   7063  3 000653   000003 470400 4                  LDP0    3
         3 000654   000000 471500                    LDP1    0,,PR0
         3 000655   200107 473500                    LDP3    CURRENT_WINDOW$,,AUTO
         3 000656   300014 720100                    LXL0    12,,PR3
         3 000657   100000 474510                    LDP4    0,X0,PR1
         3 000660   400031 236100                    LDQ     25,,PR4
         3 000661   020000 316007                    CANQ    8192,DL
         3 000662   000667 601000 3                  TNZ     s:7067

     1031     7064    3           CALL COMPLETION_NO_WINDOW;

   7064  3 000663   003270 701000 3                  TSX1    COMPLETION_NO_WINDOW
         3 000664   000000 011000                    NOP     0

     1032     7065    3           RETURN; /* Give up until the window comes back */

   7065  3 000665   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 000666   000001 702211                    TSX2  ! 1,X1

     1033     7066    3         END;
     1034     7067    2       IF NOT FROM_PRESENTER

   7067  3 000667   200005 475500                    LDP5    @FROM_PRESENTER,,AUTO
         3 000670   500000 234100                    SZN     0,,PR5
         3 000671   001061 604000 3                  TMI     s:7170
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:184  
         3 000672   300016 476500                    LDP6    14,,PR3
         3 000673   600002 222100                    LDX2    2,,PR6
         3 000674   001061 600000 3                  TZE     s:7170

     1035     7068    2         AND WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# ~= 0
     1036     7069    2       THEN
     1037     7070    2   CHECK_CURSOR_POSITION:
     1038     7071    3         DO;

   7071  3 000675                       CHECK_CURSO* null
     1039     7072
     1040     7073    3   CHECK_CURSOR_NEAR_RECORD_SET:
     1041     7074    4           DO;

   7074  3 000675                       CHECK_CURSO* null
     1042     7075    4             WITHIN_RANGE = 0;

   7075  3 000675   200140 450100                    STZ     WITHIN_RANGE,,AUTO

     1043     7076    4             RELATIVE = 0;

   7076  3 000676   200132 450100                    STZ     RELATIVE,,AUTO

     1044     7077    5             DO CASE ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# );

   7077  3 000677   300013 474500                    LDP4    11,,PR3
         3 000700   400070 220100                    LDX0    56,,PR4
         3 000701   000004 100003                    CMPX0   4,DU
         3 000702   000704 602010 3                  TNC     s:7077+5,X0
         3 000703   000715 710000 3                  TRA     s:7086
         3 000704   000715 710000 3                  TRA     s:7086
         3 000705   000710 710000 3                  TRA     s:7081
         3 000706   000710 710000 3                  TRA     s:7081
         3 000707   000713 710000 3                  TRA     s:7083

     1045     7078
     1046     7079    5               CASE ( %EVST_INITIAL,
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:185  

     1047     7080    5               %EVST_START );
     1048     7081    5                LOCATION$ = ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START );

   7081  3 000710   400024 636500                    EPPR6   20,,PR4
         3 000711   200124 456500                    STP6    LOCATION$,,AUTO
         3 000712   000715 710000 3                  TRA     s:7086

     1049     7082    5               CASE ( %EVST_END );

     1050     7083    5                 LOCATION$ = ADDR ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD );

   7083  3 000713   400035 636500                    EPPR6   29,,PR4
         3 000714   200124 456500                    STP6    LOCATION$,,AUTO

     1051     7084    5             END;

     1052     7085
     1053     7086    4             IF LOCATION$ -> VD$LOCATION.EOF

   7086  3 000715   200124 476500                    LDP6    LOCATION$,,AUTO
         3 000716   600010 236100                    LDQ     8,,PR6
         3 000717   400000 316007                    CANQ    -131072,DL
         3 000720   000725 600000 3                  TZE     s:7097

     1054     7087    4             THEN
     1055     7088    4   CURSOR_CALLS_FOR_EOB:
     1056     7089    5               DO;

   7089  3 000721                       CURSOR_CALL* null
     1057     7090    5                 IF WINDOW$SPEC.EOB_DISPLAYED

   7090  3 000721   300015 236100                    LDQ     13,,PR3
         3 000722   200000 316003                    CANQ    65536,DU
         3 000723   001046 601000 3                  TNZ     s:7139

     1058     7091    5                 THEN
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:186  
     1059     7092    5                   EXIT CHECK_CURSOR_NEAR_RECORD_SET;
     1060     7093    5                 ELSE
     1061     7094    5                   WITHIN_RANGE = %RCCL_GREATER;

   7094  3 000724   200140 755100                    STA     WITHIN_RANGE,,AUTO

     1062     7095    5               END CURSOR_CALLS_FOR_EOB;

     1063     7096
     1064     7097    4             RECORD_SET_RANGE = %CLEAR;

   7097  3 000725   000100 100400                    MLR     fill='000'O
         3 000726   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000727   200030 000110                    ADSC9   RECORD_SET_RANGE,,AUTO   cn=0,n=72

     1065     7098    4             RECORD_SET_RANGE.START.KEY (LEVEL# - 1) =

   7098  3 000730   200120 236100                    LDQ     LEVEL#,,AUTO
         3 000731   000001 736000                    QLS     1
         3 000732   300016 474500                    LDP4    14,,PR3
         3 000733   000002 736000                    QLS     2
         3 000734   000106 100500                    MLR     fill='000'O
         3 000735   400003 000010                    ADSC9   3,,PR4                   cn=0,n=8
         3 000736   200026 000010                    ADSC9   LOCATION_PTRS+3,Q,AUTO   cn=0,n=8

     1066     7099    4               WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY (0);
     1067     7100    4             RECORD_SET_RANGE.ENDD.KEY (LEVEL# - 1) =

   7100  3 000737   200120 236100                    LDQ     LEVEL#,,AUTO
         3 000740   000001 736000                    QLS     1
         3 000741   300016 474500                    LDP4    14,,PR3
         3 000742   000000 620006                    EAX0    0,QL
         3 000743   400002 236100                    LDQ     2,,PR4
         3 000744   000022 732000                    QRS     18
         3 000745   000006 402007                    MPY     6,DL
         3 000746   000002 736000                    QLS     2
         3 000747   000000 635010                    EAA     0,X0
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:187  
         3 000750   000020 731000                    ARS     16
         3 000751   000105 100506                    MLR     fill='000'O
         3 000752   477775 000010                    ADSC9   -3,Q,PR4                 cn=0,n=8
         3 000753   200037 000010                    ADSC9   RECORD_SET_RANGE+7,A,AUTO cn=0,n=8

     1068     7101    4               WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY
     1069     7102    4               ( WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# - 1 );
     1070     7103    5             DO WHILE %TRUE;

     1071     7104
     1072     7105    5               CALL VDG$LOCATION_TO_PTRS ( LOCATION$ -> VD$LOCATION,

   7105  3 000754   200023 630500                    EPPR0   LOCATION_PTRS,,AUTO
         3 000755   200155 450500                    STP0    @LOCATION+5,,AUTO
         3 000756   200124 236100                    LDQ     LOCATION$,,AUTO
         3 000757   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 000760   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 000761   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000762   000000 701000 xent               TSX1    VDG$LOCATION_TO_PTRS
         3 000763   000765 702000 3                  TSX2    RETALT
         3 000764   000767 710000 3                  TRA     s:7112

     1073     7106    5                 LOCATION_PTRS )
     1074     7107    5               WHENALTRETURN
     1075     7108    6                 DO;

     1076     7109    6   RETALT:         ALTRETURN;

   7109  3 000765   200144 221300       RETALT       LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 000766   000000 702211                    TSX2  ! 0,X1

     1077     7110    6                 END;
     1078     7111
     1079     7112    5               IF WITHIN_RANGE = %RCCL_EQUAL

   7112  3 000767   200140 235100                    LDA     WITHIN_RANGE,,AUTO
         3 000770   001004 601000 3                  TNZ     s:7122
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:188  

     1080     7113    5               THEN
     1081     7114    5                 CALL VDG$COMPARE_PTRS_W_RANGE ( LOCATION_PTRS,

   7114  3 000771   200140 630500                    EPPR0   WITHIN_RANGE,,AUTO
         3 000772   200156 450500                    STP0    @LOCATION+6,,AUTO
         3 000773   200030 631500                    EPPR1   RECORD_SET_RANGE,,AUTO
         3 000774   200155 451500                    STP1    @LOCATION+5,,AUTO
         3 000775   200023 633500                    EPPR3   LOCATION_PTRS,,AUTO
         3 000776   200154 453500                    STP3    @LOCATION+4,,AUTO
         3 000777   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 001000   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 001001   000000 701000 xent               TSX1    VDG$COMPARE_PTRS_W_RANGE
         3 001002   001004 702000 3                  TSX2    s:7122

     1082     7115    5                   RECORD_SET_RANGE,
     1083     7116    5                   WITHIN_RANGE )
     1084     7117    5                 WHENRETURN
     1085     7118    6                   DO;

     1086     7119    6                     EXIT CHECK_CURSOR_NEAR_RECORD_SET;

   7119  3 001003   001046 710000 3                  TRA     s:7139

     1087     7120    6                   END;
     1088     7121
     1089     7122    5               IF RELATIVE ~= %RCCL_EQUAL

   7122  3 001004   200132 235100                    LDA     RELATIVE,,AUTO
         3 001005   001046 601000 3                  TNZ     s:7139

     1090     7123    5               THEN EXIT;
     1091     7124    5               RELATIVE = WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES#;

   7124  3 001006   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 001007   000016 471500                    LDP1    14,,PR0
         3 001010   100002 236100                    LDQ     2,,PR1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:189  
         3 001011   000022 732000                    QRS     18
         3 001012   200132 756100                    STQ     RELATIVE,,AUTO

     1092     7125    5               IF RELATIVE > 1 THEN RELATIVE = RELATIVE/2;

   7125  3 001013   000001 116007                    CMPQ    1,DL
         3 001014   001017 604400 3                  TMOZ    s:7126

   7125  3 001015   000002 506007                    DIV     2,DL
         3 001016   200132 756100                    STQ     RELATIVE,,AUTO

     1093     7126    5               RELATIVE = - RELATIVE * WITHIN_RANGE;

   7126  3 001017   200140 402100                    MPY     WITHIN_RANGE,,AUTO
         3 001020   000027 676000 xsym               ERQ     B_VECTNIL+23
         3 001021   000001 036007                    ADLQ    1,DL
         3 001022   200132 756100                    STQ     RELATIVE,,AUTO

     1094     7127
     1095     7128        /* Access half-a-set closer to the set, to see if we're "close enough" */
     1096     7129
     1097     7130    5               CALL VDE$RREAD ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,

   7130  3 001023   000010 471500                    LDP1    8,,PR0
         3 001024   000012 473500                    LDP3    10,,PR0
         3 001025   200132 634500                    EPPR4   RELATIVE,,AUTO
         3 001026   200157 454500                    STP4    @LOCATION+7,,AUTO
         3 001027   200124 236100                    LDQ     LOCATION$,,AUTO
         3 001030   200156 756100                    STQ     @LOCATION+6,,AUTO
         3 001031   300003 635500                    EPPR5   3,,PR3
         3 001032   200155 455500                    STP5    @LOCATION+5,,AUTO
         3 001033   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 001034   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 001035   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001036   000000 701000 xent               TSX1    VDE$RREAD
         3 001037   000000 011000                    NOP     0

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:190  
     1098     7131    5                 WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1099     7132    5                 LOCATION$ -> VD$LOCATION,
     1100     7133    5                 RELATIVE ) ;
     1101     7134    5               WITHIN_RANGE = %RCCL_EQUAL;

   7134  3 001040   200140 450100                    STZ     WITHIN_RANGE,,AUTO

     1102     7135    5               LOCATION$ = ADDR( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT );

   7135  3 001041   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 001042   000010 471500                    LDP1    8,,PR0
         3 001043   100006 633500                    EPPR3   6,,PR1
         3 001044   200124 453500                    STP3    LOCATION$,,AUTO

     1103     7136    5             END;

   7136  3 001045   000754 710000 3                  TRA     s:7105

     1104     7137    4           END CHECK_CURSOR_NEAR_RECORD_SET;

     1105     7138
     1106     7139    3           IF WITHIN_RANGE ~= %RCCL_EQUAL

   7139  3 001046   200140 235100                    LDA     WITHIN_RANGE,,AUTO
         3 001047   001055 600000 3                  TZE     SET_CURSOR_POSITION

     1107     7140    3           THEN
     1108     7141    3   CLEAR_RECORD_SET:
     1109     7142    4             DO;

   7142  3 001050                       CLEAR_RECOR* null
     1110     7143    4               CALL VDP$WERASE ( WINDOW$SPEC ) ALTRET (RETALT);

   7143  3 001050   200107 630500                    EPPR0   CURRENT_WINDOW$,,AUTO
         3 001051   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 001052   000000 701000 xent               TSX1    VDP$WERASE
         3 001053   000765 702000 3                  TSX2    RETALT
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:191  

     1111     7144    4             END CLEAR_RECORD_SET;

   7144  3 001054   001057 710000 3                  TRA     s:7152

     1112     7145    3           ELSE
     1113     7146    3   SET_CURSOR_POSITION:
     1114     7147    4             DO;

   7147  3 001055                       SET_CURSOR_* null
     1115     7148    4               CALL UPDATE_CURSOR_TO_SELECTEDBLOCK

   7148  3 001055   003337 701000 3                  TSX1    UPDATE_CURSOR_TO_SELECTEDBLOCK
         3 001056   000765 702000 3                  TSX2    RETALT

     1116     7149    4                 ALTRET (RETALT);
     1117     7150    4             END SET_CURSOR_POSITION;

     1118     7151
     1119     7152    3           WITHIN_RANGE = RELATIVE; /* restore any "real" need to position */

   7152  3 001057   200132 235100                    LDA     RELATIVE,,AUTO
         3 001060   200140 755100                    STA     WITHIN_RANGE,,AUTO

     1120     7153    3         END CHECK_CURSOR_POSITION;

     1121     7154
     1122     7155        /*N*  Highlight the cursor field.
     1123     7156            IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET ~= %CLEAR
     1124     7157            THEN
     1125     7158        DECLARE_CURSOR_FIELD:
     1126     7159              DO;
     1127     7160
     1128     7161                CALL M$DCLFLD ( FPT_DCLFLD )
     1129     7162                WHENALTRETURN
     1130     7163                DO;
     1131     7164                  VD$ERR...
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:192  
     1132     7165                END;
     1133     7166
     1134     7167              END DECLARE_CURSOR_FIELD;
     1135     7168        */
     1136     7169
     1137     7170    2       FPT_READ.V.DCB# = WINDOW$SPEC.DCB#;

   7170  3 001061   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 001062   000014 720100                    LXL0    12,,PR0
         3 001063   000010 740000 1                  STX0    FPT_READ+8

     1138     7171    2       FPT_READ.V.DVBYTE.REREAD# = %FALSE;

   7171  3 001064   000005 236000 4                  LDQ     5
         3 001065   000013 356000 1                  ANSQ    FPT_READ+11

     1139     7172
     1140     7173    2       IF VD_$STRIP_BLANKS.V# = 0

   7173  3 001066   000003 235000 xsym               LDA     VD_$STRIP_BLANKS+3
         3 001067   001073 601000 3                  TNZ     s:7177

     1141     7174    2       THEN
     1142     7175    2         FPT_READ.V.DVBYTE.BP# = %TRUE;

   7175  3 001070   200000 236003                    LDQ     65536,DU
         3 001071   000013 256000 1                  ORSQ    FPT_READ+11
         3 001072   001075 710000 3                  TRA     READ_THE_SCREEN

     1143     7176    2       ELSE
     1144     7177    2         FPT_READ.V.DVBYTE.BP# = %FALSE;

   7177  3 001073   000000 236000 4                  LDQ     0
         3 001074   000013 356000 1                  ANSQ    FPT_READ+11

     1145     7178
     1146     7179    2   READ_THE_SCREEN:
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:193  
     1147     7180    3       DO WHILE ( '1'B );

   7180  3 001075                       READ_THE_SC* null
     1148     7181
     1149     7182    3   UGLY_RETRY_UC17_ERROR_LABEL:
     1150     7183    3         CALL ALLOCATE_NECESSARY_OBJECTS;

   7183  3 001075   002710 701000 3     UGLY_RETRY_* TSX1    ALLOCATE_NECESSARY_OBJECTS
         3 001076   000000 011000                    NOP     0

     1151     7184
     1152     7185    3   CHECK_KEYINCR_AND_KEYTYPE:
     1153     7186    4         DO;

   7186  3 001077                       CHECK_KEYIN* null
     1154     7187
     1155     7188    4           VLP_EDTCTL.KEYINCR# = WINDOW$SPEC.EDTCTL.KEY_INCR#;

   7188  3 001077   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 001100   000023 720100                    LXL0    19,,PR0
         3 001101   000061 440000 1                  SXL0    VLP_EDTCTL+1

     1156     7189    4           VLP_EDTCTL.KEYTYPE# = WINDOW$SPEC.EDTCTL.KEY_GENERATION#;

   7189  3 001102   000022 236100                    LDQ     18,,PR0
         3 001103   000060 552020 1                  STBQ    VLP_EDTCTL,'20'O

     1157     7190
     1158     7191    4           IF ADDR ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.PROTECT

   7191  3 001104   000012 471500                    LDP1    10,,PR0
         3 001105   000010 473500                    LDP3    8,,PR0
         3 001106   100026 236100                    LDQ     22,,PR1
         3 001107   000020 732000                    QRS     16
         3 001110   000021 376000 4                  ANQ     17
         3 001111   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 001112   100026 236100                    LDQ     22,,PR1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:194  
         3 001113   777777 376007                    ANQ     -1,DL
         3 001114   200155 756100                    STQ     @LOCATION+5,,AUTO
         3 001115   200154 236100                    LDQ     @LOCATION+4,,AUTO
         3 001116   200155 036100                    ADLQ    @LOCATION+5,,AUTO
         3 001117   001121 605000 3                  TPL     s:7191+13
         3 001120   000044 036003                    ADLQ    36,DU
         3 001121   000000 066506                    CMPB    filb='0'B
         3 001122   300002 400001                    BDSC    2,Q,PR3                  by=2,bit=0,n=1
         3 001123   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         3 001124   001137 600000 3                  TZE     WINDOW_IS_UNPROTECTED

     1159     7192    4             ( WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.OPTIONS.LEVEL# )
     1160     7193    4             ) -> STREAM$PROTECT.FLAG
     1161     7194    4             ( WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.OPTIONS.COMPONENT# )
     1162     7195    4           THEN
     1163     7196    4   WINDOW_IS_PROTECTED:
     1164     7197    5             DO;

   7197  3 001125                       WINDOW_IS_P* null
     1165     7198    5               IF VLP_EDTCTL.KEYINCR# = 65535

   7198  3 001125   177777 100003                    CMPX0   65535,DU
         3 001126   001260 600000 3                  TZE     s:7280

     1166     7199    5               THEN
     1167     7200    5                 EXIT CHECK_KEYINCR_AND_KEYTYPE;
     1168     7201    5               VLP_EDTCTL.KEYINCR# = 65535;

   7201  3 001127   177777 221003                    LDX1    65535,DU
         3 001130   000061 441000 1                  SXL1    VLP_EDTCTL+1

     1169     7202    5               VLP_EDTCTL.KEYTYPE# = %KEYTYPE_BIN10#;

   7202  3 001131   000004 236003                    LDQ     4,DU
         3 001132   000060 552020 1                  STBQ    VLP_EDTCTL,'20'O

     1170     7203    5               VLP_TRMATTR.FCNTBL# = 'SE2';
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:195  

   7203  3 001133   040000 100400                    MLR     fill='040'O
         3 001134   000004 000003 2                  ADSC9   KT_TO_INCR+4             cn=0,n=3
         3 001135   000043 000010 1                  ADSC9   VLP_TRMATTR+5            cn=0,n=8

     1171     7204    5             END WINDOW_IS_PROTECTED;

   7204  3 001136   001231 710000 3                  TRA     s:7260

     1172     7205    4           ELSE
     1173     7206    4   WINDOW_IS_UNPROTECTED:
     1174     7207    5             DO;

   7207  3 001137                       WINDOW_IS_U* null
     1175     7208    6               DO CASE ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.PORT$ ->

   7208  3 001137   000010 471500                    LDP1    8,,PR0
         3 001140   100001 473500                    LDP3    1,,PR1
         3 001141   200120 236100                    LDQ     LEVEL#,,AUTO
         3 001142   000007 402007                    MPY     7,DL
         3 001143   300023 221106                    LDX1    19,QL,PR3
         3 001144   000007 101003                    CMPX1   7,DU
         3 001145   001147 602011 3                  TNC     WINDOW_IS_UNPROTECTED+8,X1
         3 001146   001226 710000 3                  TRA     USE_UNPROTECTED_TABLE
         3 001147   001226 710000 3                  TRA     USE_UNPROTECTED_TABLE
         3 001150   001220 710000 3                  TRA     UNPROTECTED_CONSEC
         3 001151   001156 710000 3                  TRA     s:7212
         3 001152   001226 710000 3                  TRA     USE_UNPROTECTED_TABLE
         3 001153   001226 710000 3                  TRA     USE_UNPROTECTED_TABLE
         3 001154   001226 710000 3                  TRA     USE_UNPROTECTED_TABLE
         3 001155   001211 710000 3                  TRA     UNPROTECTED_INDEXED

     1176     7209    6                 VD$PORT.LEVEL.ORG# ( LEVEL# ) );
     1177     7210
     1178     7211    6                 CASE ( %KEYED# );

     1179     7212    6                   IF WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.PORT$ ->
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:196  

   7212  3 001156   300023 722106                    LXL2    19,QL,PR3
         3 001157   000002 102003                    CMPX2   2,DU
         3 001160   001170 601000 3                  TNZ     UNPROTECTED_KEYED_NUMBER

     1180     7213    6                     VD$PORT.LEVEL.KEY_TYPE# ( LEVEL# ) =
     1181     7214    6                     %KT_STRING
     1182     7215    6                   THEN
     1183     7216    6   UNPROTECTED_KEYED_STRING:
     1184     7217    7                     DO;

   7217  3 001161                       UNPROTECTED* null
     1185     7218    7                       IF VLP_EDTCTL.KEYINCR# = 65535

   7218  3 001161   177777 100003                    CMPX0   65535,DU
         3 001162   001260 600000 3                  TZE     s:7280

     1186     7219    7                       THEN
     1187     7220    7                         EXIT CHECK_KEYINCR_AND_KEYTYPE;
     1188     7221    7                       VLP_EDTCTL.KEYINCR# = 65535;

   7221  3 001163   177777 223003                    LDX3    65535,DU
         3 001164   000061 443000 1                  SXL3    VLP_EDTCTL+1

     1189     7222    7                       VLP_EDTCTL.KEYTYPE# = %KEYTYPE_BIN10#;

   7222  3 001165   000004 236003                    LDQ     4,DU
         3 001166   000060 552020 1                  STBQ    VLP_EDTCTL,'20'O

     1190     7223    7                     END UNPROTECTED_KEYED_STRING;

   7223  3 001167   001226 710000 3                  TRA     USE_UNPROTECTED_TABLE

     1191     7224    6                   ELSE
     1192     7225    6   UNPROTECTED_KEYED_NUMBER:
     1193     7226    7                     DO;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:197  
   7226  3 001170                       UNPROTECTED* null
     1194     7227    7                       IF VLP_EDTCTL.KEYINCR# = VD_$BY.V#

   7227  3 001170   000061 236000 1                  LDQ     VLP_EDTCTL+1
         3 001171   777777 376007                    ANQ     -1,DL
         3 001172   000003 116000 xsym               CMPQ    VD_$BY+3
         3 001173   001204 601000 3                  TNZ     s:7231
         3 001174   000022 236100                    LDQ     18,,PR0
         3 001175   000022 732000                    QRS     18
         3 001176   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 001177   000060 236000 1                  LDQ     VLP_EDTCTL
         3 001200   000022 772000                    QRL     18
         3 001201   000777 376007                    ANQ     511,DL
         3 001202   200154 116100                    CMPQ    @LOCATION+4,,AUTO
         3 001203   001260 600000 3                  TZE     s:7280

     1195     7228    7                         AND VLP_EDTCTL.KEYTYPE# = WINDOW$SPEC.EDTCTL.KEY_GENERATION#
     1196     7229    7                       THEN
     1197     7230    7                         EXIT CHECK_KEYINCR_AND_KEYTYPE;
     1198     7231    7                       VLP_EDTCTL.KEYINCR# = VD_$BY.V#;

   7231  3 001204   000003 721000 xsym               LXL1    VD_$BY+3
         3 001205   000061 441000 1                  SXL1    VLP_EDTCTL+1

     1199     7232    7                       VLP_EDTCTL.KEYTYPE# = WINDOW$SPEC.EDTCTL.KEY_GENERATION#;

   7232  3 001206   000022 236100                    LDQ     18,,PR0
         3 001207   000060 552020 1                  STBQ    VLP_EDTCTL,'20'O

     1200     7233    7                     END UNPROTECTED_KEYED_NUMBER;

   7233  3 001210   001226 710000 3                  TRA     USE_UNPROTECTED_TABLE

     1201     7234
     1202     7235    6                 CASE ( %INDEXED# );

     1203     7236    6   UNPROTECTED_INDEXED:
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:198  
     1204     7237    7                   DO;

   7237  3 001211                       UNPROTECTED* null
     1205     7238    7                     IF VLP_EDTCTL.KEYINCR# = 65535

   7238  3 001211   177777 100003                    CMPX0   65535,DU
         3 001212   001260 600000 3                  TZE     s:7280

     1206     7239    7                     THEN
     1207     7240    7                       EXIT CHECK_KEYINCR_AND_KEYTYPE;
     1208     7241    7                     VLP_EDTCTL.KEYINCR# = 65535;

   7241  3 001213   177777 222003                    LDX2    65535,DU
         3 001214   000061 442000 1                  SXL2    VLP_EDTCTL+1

     1209     7242    7                     VLP_EDTCTL.KEYTYPE# = %KEYTYPE_BIN10#;

   7242  3 001215   000004 236003                    LDQ     4,DU
         3 001216   000060 552020 1                  STBQ    VLP_EDTCTL,'20'O

     1210     7243    7                   END UNPROTECTED_INDEXED;

   7243  3 001217   001226 710000 3                  TRA     USE_UNPROTECTED_TABLE

     1211     7244
     1212     7245    6                 CASE ( %CONSEC# );

     1213     7246    6   UNPROTECTED_CONSEC:
     1214     7247    7                   DO;

   7247  3 001220                       UNPROTECTED* null
     1215     7248    7                     IF VLP_EDTCTL.KEYINCR# = 1

   7248  3 001220   000001 100003                    CMPX0   1,DU
         3 001221   001260 600000 3                  TZE     s:7280

     1216     7249    7                     THEN
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:199  
     1217     7250    7                       EXIT CHECK_KEYINCR_AND_KEYTYPE;
     1218     7251    7                     VLP_EDTCTL.KEYINCR# = 1;

   7251  3 001222   000001 222003                    LDX2    1,DU
         3 001223   000061 442000 1                  SXL2    VLP_EDTCTL+1

     1219     7252    7                     VLP_EDTCTL.KEYTYPE# = %KEYTYPE_BIN10#;

   7252  3 001224   000004 236003                    LDQ     4,DU
         3 001225   000060 552020 1                  STBQ    VLP_EDTCTL,'20'O

     1220     7253    7                   END UNPROTECTED_CONSEC;

     1221     7254
     1222     7255    6               END;

     1223     7256    5   USE_UNPROTECTED_TABLE:
     1224     7257    5               VLP_TRMATTR.FCNTBL# = 'SE1';

   7257  3 001226   040000 100400       USE_UNPROTE* MLR     fill='040'O
         3 001227   000005 000003 2                  ADSC9   KT_TO_INCR+5             cn=0,n=3
         3 001230   000043 000010 1                  ADSC9   VLP_TRMATTR+5            cn=0,n=8

     1225     7258    5             END WINDOW_IS_UNPROTECTED;

     1226     7259
     1227     7260    4           FPT_EDTCTL.V.DCB# = WINDOW$SPEC.DCB#;

   7260  3 001231   000014 720100                    LXL0    12,,PR0
         3 001232   000056 740000 1                  STX0    FPT_EDTCTL+6

     1228     7261    4           FPT_TRMATTR.V.DCB# = WINDOW$SPEC.DCB#;

   7261  3 001233   000014 721100                    LXL1    12,,PR0
         3 001234   000034 741000 1                  STX1    FPT_TRMATTR+6

     1229     7262    4           WINDOW$SPEC.EDTCTL.KEY_INCR# = VLP_EDTCTL.KEYINCR#;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:200  

   7262  3 001235   000061 722000 1                  LXL2    VLP_EDTCTL+1
         3 001236   000023 442100                    SXL2    19,,PR0

     1230     7263    4           WINDOW$SPEC.EDTCTL.KEY_GENERATION# = VLP_EDTCTL.KEYTYPE#;

   7263  3 001237   000060 220000 1                  LDX0    VLP_EDTCTL
         3 001240   000777 360003                    ANX0    511,DU
         3 001241   000022 740100                    STX0    18,,PR0

     1231     7264    4           CALL M$STRMATTR (FPT_TRMATTR) ALTRET (BAD_STRM_XXX);

   7264  3 001242   000026 630400 1                  EPPR0   FPT_TRMATTR
         3 001243   560006 713400                    CLIMB   alt,+57350
         3 001244   401000 401760                    pmme    nvectors=3
         3 001245   001253 702000 3                  TSX2    BAD_STRM_XXX

     1232     7265
     1233     7266    4           CALL M$STRMCTL ( FPT_EDTCTL )

   7266  3 001246   000050 630400 1                  EPPR0   FPT_EDTCTL
         3 001247   560000 713400                    CLIMB   alt,+57344
         3 001250   401000 401760                    pmme    nvectors=3
         3 001251   001253 702000 3                  TSX2    BAD_STRM_XXX
         3 001252   001260 710000 3                  TRA     s:7280

     1234     7267    4           WHENALTRETURN
     1235     7268    5             DO;

     1236     7269    5   BAD_STRM_XXX: CALL VDG$MONERR;

   7269  3 001253   000002 631400 xsym  BAD_STRM_XXX EPPR1   B_VECTNIL+2
         3 001254   000000 701000 xent               TSX1    VDG$MONERR
         3 001255   000000 011000                    NOP     0

     1237     7270    5               ALTRETURN;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:201  
   7270  3 001256   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 001257   000000 702211                    TSX2  ! 0,X1

     1238     7271    5             END;
     1239     7272
     1240     7273    4         END CHECK_KEYINCR_AND_KEYTYPE;

     1241     7274
     1242     7275              /*
     1243     7276              *   Flush keyins, etc (and ONLY other window screen updates) to the
     1244     7277              *   terminal.  (We don't need to flush screen updates to this window
     1245     7278              *   because the M$READ below will do that automatically.)
     1246     7279              */
     1247     7280    3         WINDOW$SPEC.SCREEN_UPDATED = %TRUE;

   7280  3 001260   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 001261   100000 236003                    LDQ     32768,DU
         3 001262   000015 256100                    ORSQ    13,,PR0

     1248     7281    3         CALL VDP$NFLUSH (%TRUE) ALTRET (RETALT);

   7281  3 001263   000022 630400 4                  EPPR0   18
         3 001264   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 001265   000000 701000 xent               TSX1    VDP$NFLUSH
         3 001266   000765 702000 3                  TSX2    RETALT

     1249     7282
     1250     7283
     1251     7284    3         IF VD_$$MON_PRES.V# > 0

   7284  3 001267   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         3 001270   001302 604400 3                  TMOZ    s:7289

     1252     7285    3         THEN
     1253     7286    3           CALL VDG$MPRES_FEPREAD ( WINDOW$SPEC.DCB#,

   7286  3 001271   000001 236000 4                  LDQ     1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:202  
         3 001272   200155 756100                    STQ     @LOCATION+5,,AUTO
         3 001273   200107 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         3 001274   000002 036000 4                  ADLQ    2
         3 001275   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 001276   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 001277   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 001300   000000 701000 xent               TSX1    VDG$MPRES_FEPREAD
         3 001301   000000 011000                    NOP     0

     1254     7287    3             VDP_NODE_DESC );
     1255     7288
     1256     7289    3         IF VD_6E.INTERRUPT.STATE# = %INST_BREAK_QUEUED THEN

   7289  3 001302   000027 220000 xsym               LDX0    VD_6E+23
         3 001303   000003 100003                    CMPX0   3,DU
         3 001304   001310 601000 3                  TNZ     TRACYS_READ_LABEL

     1257     7290    3           NORMAL_READ_COMPLETION = %TRUE;   /* Act like CNTL-C typed */

   7290  3 001305   400000 236003                    LDQ     -131072,DU
         3 001306   200126 756100                    STQ     NORMAL_READ_COMPLETION,,AUTO
         3 001307   001325 710000 3                  TRA     s:7308

     1258     7291    3         ELSE
     1259     7292    3   TRACYS_READ_LABEL:
     1260     7293    4           DO;

   7293  3 001310                       TRACYS_READ* null
     1261     7294    4             INTERRUPT_STATE_BEFORE_M$READ = VD_6E.INTERRUPT.STATE#;

   7294  3 001310   000027 235000 xsym               LDA     VD_6E+23
         3 001311   000022 771000                    ARL     18
         3 001312   200141 755100                    STA     INTERRUPT_STATE_BEFORE_M$READ,,AUTO

     1262     7295    4             VD_6E.INTERRUPT.STATE# = %INST_READING;

   7295  3 001313   000002 221003                    LDX1    2,DU
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:203  
         3 001314   000027 741000 xsym               STX1    VD_6E+23

     1263     7296    4             CALL M$READ ( FPT_READ )

   7296  3 001315   000000 630400 1                  EPPR0   FPT_READ
         3 001316   440000 713400                    CLIMB   alt,read
         3 001317   401400 401760                    pmme    nvectors=4
         3 001320   001324 702000 3                  TSX2    s:7303

     1264     7297    4             WHENRETURN
     1265     7298    5               DO;

     1266     7299    5                 NORMAL_READ_COMPLETION = %TRUE;

   7299  3 001321   400000 236003                    LDQ     -131072,DU
         3 001322   200126 756100                    STQ     NORMAL_READ_COMPLETION,,AUTO

     1267     7300    5               END;

   7300  3 001323   001325 710000 3                  TRA     s:7308

     1268     7301    4             WHENALTRETURN
     1269     7302    5               DO;

     1270     7303    5                 NORMAL_READ_COMPLETION = %FALSE;

   7303  3 001324   200126 450100                    STZ     NORMAL_READ_COMPLETION,,AUTO

     1271     7304    5               END;

     1272     7305    4           END TRACYS_READ_LABEL;

     1273     7306
     1274     7307    4         DO INHIBIT;

     1275     7308    4           INTERRUPT_STATE_AFTER_M$READ = VD_6E.INTERRUPT.STATE#;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:204  
   7308  3 001325   000027 235200 xsym               LDA   ! VD_6E+23
         3 001326   000022 771200                    ARL   ! 18
         3 001327   200142 755300                    STA   ! INTERRUPT_STATE_AFTER_M$READ,,AUTO

     1276     7309    4           VD_6E.INTERRUPT.STATE# = INTERRUPT_STATE_BEFORE_M$READ;

   7309  3 001330   200141 720300                    LXL0  ! INTERRUPT_STATE_BEFORE_M$READ,,AUTO
         3 001331   000027 740200 xsym               STX0  ! VD_6E+23

     1277     7310    4         END;

     1278     7311
     1279     7312    4         IF NOT DCBADDR ( FPT_READ.V.DCB# ) -> F$DCB.FCD# THEN DO;

   7312  3 001332   000003 470400 4                  LDP0    3
         3 001333   000000 471500                    LDP1    0,,PR0
         3 001334   000010 221000 1                  LDX1    FPT_READ+8
         3 001335   100000 473511                    LDP3    0,X1,PR1
         3 001336   300031 236100                    LDQ     25,,PR3
         3 001337   020000 316007                    CANQ    8192,DL
         3 001340   001345 601000 3                  TNZ     s:7319

     1280     7313    4             CALL COMPLETION_NO_WINDOW;

   7313  3 001341   003270 701000 3                  TSX1    COMPLETION_NO_WINDOW
         3 001342   000000 011000                    NOP     0

     1281     7314    4             RETURN; /* Give up until the window comes back */

   7314  3 001343   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 001344   000001 702211                    TSX2  ! 1,X1

     1282     7315    4           END;
     1283     7316
     1284     7317              /*  Should SCREEN_UPDATED be set if this M$READ
     1285     7318                  ALTRETs, too?  */
     1286     7319    3         WINDOW$SPEC.SCREEN_UPDATED = %TRUE;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:205  

   7319  3 001345   200107 474500                    LDP4    CURRENT_WINDOW$,,AUTO
         3 001346   100000 236003                    LDQ     32768,DU
         3 001347   400015 256100                    ORSQ    13,,PR4

     1287     7320
     1288     7321              /*  The FEP refuses to include the count in the key itself,
     1289     7322                  so for numeric-type keys (keyed or sequential files),
     1290     7323                  stick the LENGTH# of %NB_NUMERIC_KEY on top of the
     1291     7324                  first byte.  */
     1292     7325    3         FEP_READ_RETURN_KEY = FPT_READ.KEY_.KEY$ -> FEP$READ_KEY;

   7325  3 001350   000003 475400 1                  LDP5    FPT_READ+3
         3 001351   500000 235100                    LDA     0,,PR5
         3 001352   200117 755100                    STA     FEP_READ_RETURN_KEY,,AUTO

     1293     7326    3         FEP_READ_RETURN_KEY$ = FPT_READ.KEY_.KEY$;

   7326  3 001353   000003 236000 1                  LDQ     FPT_READ+3
         3 001354   200116 756100                    STQ     FEP_READ_RETURN_KEY$,,AUTO

     1294     7327    3         IF VDP_NODE_DESC.KEY.TYPE# ~= %KT_STRING

   7327  3 001355   000000 222000 xsym               LDX2    VDP_NODE_DESC
         3 001356   000002 102003                    CMPX2   2,DU
         3 001357   001363 600000 3                  TZE     s:7331

     1295     7328    3         THEN
     1296     7329    3           FPT_READ.KEY_.KEY$ -> VD$TEXTC.LENGTH# = %NB_NUMERIC_KEY;

   7329  3 001360   003000 236003                    LDQ     1536,DU
         3 001361   500000 552140                    STBQ    0,'40'O,PR5
         3 001362   001410 710000 3                  TRA     s:7357

     1297     7330    3         ELSE
     1298     7331    3           IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# = 0

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:206  
   7331  3 001363   400016 476500                    LDP6    14,,PR4
         3 001364   600002 223100                    LDX3    2,,PR6
         3 001365   001371 601000 3                  TNZ     s:7335

     1299     7332    3           THEN
     1300     7333    3             FEP_READ_RETURN_KEY$ = ADDR ( VD_KEY_NUMERIC_BOF.V$ );

   7333  3 001366   000023 236000 4                  LDQ     19
         3 001367   200116 756100                    STQ     FEP_READ_RETURN_KEY$,,AUTO
         3 001370   001410 710000 3                  TRA     s:7357

     1301     7334    4           ELSE DO;

     1302     7335    4               VDP_NODE_DESC.KEY = WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY

   7335  3 001371   200117 236100                    LDQ     FEP_READ_RETURN_KEY,,AUTO
         3 001372   600001 136100                    SBLQ    1,,PR6
         3 001373   000030 402007                    MPY     24,DL
         3 001374   000000 100506                    MLR     fill='000'O
         3 001375   600003 000010                    ADSC9   3,Q,PR6                  cn=0,n=8
         3 001376   000000 000010 xsym               ADSC9   VDP_NODE_DESC            cn=0,n=8

     1303     7336    4                 ( FEP_READ_RETURN_KEY -
     1304     7337    4                 WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.SQ_OFFSET# );
     1305     7338                    %GETKEY (KEY = VDP_NODE_DESC.KEY,
     1306     7339                    PTR = FEP_READ_RETURN_KEY$ );

   7346  3 001377   000000 722000 xsym               LXL2    VDP_NODE_DESC
         3 001400   000002 102003                    CMPX2   2,DU
         3 001401   001406 601000 3                  TNZ     s:7346+7

   7346  3 001402   000001 236000 xsym               LDQ     VDP_NODE_DESC+1
         3 001403   000002 036003                    ADLQ    2,DU
         3 001404   200116 756100                    STQ     FEP_READ_RETURN_KEY$,,AUTO
         3 001405   001410 710000 3                  TRA     s:7357

   7346  3 001406   000024 236000 4                  LDQ     20
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:207  
         3 001407   200116 756100                    STQ     FEP_READ_RETURN_KEY$,,AUTO

     1307     7349    4             END;

     1308     7350
     1309     7351
     1310     7352              /*  If the key returned will fit in a VD$KEY_LOCAL
     1311     7353                  (which it does in the normal cases of keyed or sequential
     1312     7354                  files), then rearrange VDP_NODE_DESC to have a local key.
     1313     7355                  (When VDP_NODE_DESC.KEY.REP# = %REP_REMOTE,
     1314     7356                  VDP_NODE_DESC.KEY.V$ = VDP_KEY$.)  */
     1315     7357    3         IF FEP_READ_RETURN_KEY$ -> VD$TEXTC.LENGTH# <= %MXNB_STRING_LOCAL

   7357  3 001410   200116 473500                    LDP3    FEP_READ_RETURN_KEY$,,AUTO
         3 001411   300000 236100                    LDQ     0,,PR3
         3 001412   777000 376003                    ANQ     -512,DU
         3 001413   004000 116003                    CMPQ    2048,DU
         3 001414   001423 603000 3                  TRC     s:7373

     1316     7358    3         THEN
     1317     7359    4           DO;

     1318     7360    4             VDP_NODE_DESC.KEY.REP# = %REP_LOCAL;

   7360  3 001415   000001 221003                    LDX1    1,DU
         3 001416   000000 441000 xsym               SXL1    VDP_NODE_DESC

     1319     7361    4             ADDR( VDP_NODE_DESC.KEY.V$ ) -> FEP$READ_KEY =

   7361  3 001417   300000 235100                    LDA     0,,PR3
         3 001420   000001 755000 xsym               STA     VDP_NODE_DESC+1

     1320     7362    4               FEP_READ_RETURN_KEY$ -> FEP$READ_KEY;
     1321     7363    4             FEP_READ_RETURN_KEY$ = ADDR( VDP_NODE_DESC.KEY.V$ );

   7363  3 001421   000024 236000 4                  LDQ     20
         3 001422   200116 756100                    STQ     FEP_READ_RETURN_KEY$,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:208  

     1322     7364    4           END;

     1323     7365              %GETKEY ( KEY = VDP_NODE_DESC.KEY,
     1324     7366              PTR = FEP_READ_RETURN_KEY$ );

   7373  3 001423   000000 721000 xsym               LXL1    VDP_NODE_DESC
         3 001424   000002 101003                    CMPX1   2,DU
         3 001425   001432 601000 3                  TNZ     s:7373+7

   7373  3 001426   000001 236000 xsym               LDQ     VDP_NODE_DESC+1
         3 001427   000002 036003                    ADLQ    2,DU
         3 001430   200116 756100                    STQ     FEP_READ_RETURN_KEY$,,AUTO
         3 001431   001434 710000 3                  TRA     s:7377

   7373  3 001432   000024 236000 4                  LDQ     20
         3 001433   200116 756100                    STQ     FEP_READ_RETURN_KEY$,,AUTO

     1325     7376
     1326     7377    3        VDP_BUFFER$ -> VD$BUFFER.LENGTH# = DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS#;

   7377  3 001434   400014 722100                    LXL2    12,,PR4
         3 001435   100000 473512                    LDP3    0,X2,PR1
         3 001436   300000 723100                    LXL3    0,,PR3
         3 001437   000104 475400 1                  LDP5    VDP_BUFFER$
         3 001440   500002 743100                    STX3    2,,PR5

     1327     7378
     1328     7379    3         IF VD_$$MON_PRES.V# > 0

   7379  3 001441   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         3 001442   001463 604400 3                  TMOZ    s:7385

     1329     7380    3         THEN
     1330     7381    3           CALL VDG$MPRES_FEPREAD_RETURN ( B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR,

   7381  3 001443   000000 473400 xsym               LDP3    B$TCB$
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:209  
         3 001444   300000 475500                    LDP5    0,,PR3
         3 001445   400014 722100                    LXL2    12,,PR4
         3 001446   100000 476512                    LDP6    0,X2,PR1
         3 001447   000001 236000 4                  LDQ     1
         3 001450   200156 756100                    STQ     @LOCATION+6,,AUTO
         3 001451   200157 456500                    STP6    @LOCATION+7,,AUTO
         3 001452   200157 236100                    LDQ     @LOCATION+7,,AUTO
         3 001453   000025 036000 4                  ADLQ    21
         3 001454   200155 756100                    STQ     @LOCATION+5,,AUTO
         3 001455   500102 637500                    EPPR7   66,,PR5
         3 001456   200154 457500                    STP7    @LOCATION+4,,AUTO
         3 001457   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 001460   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 001461   000000 701000 xent               TSX1    VDG$MPRES_FEPREAD_RETURN
         3 001462   000000 011000                    NOP     0

     1331     7382    3             DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMCHAR#,
     1332     7383    3             VDP_NODE_DESC );
     1333     7384
     1334     7385    3         IF NORMAL_READ_COMPLETION

   7385  3 001463   200126 234100                    SZN     NORMAL_READ_COMPLETION,,AUTO
         3 001464   001603 605000 3                  TPL     EVERYTHINGS_LOUSY

     1335     7386    3         THEN
     1336     7387    3   EVERYTHINGS_PEACHY:
     1337     7388    4           DO;

   7388  3 001465                       EVERYTHINGS* null
     1338     7389                  %GETKEY ( KEY = "WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY",
     1339     7390                  INDX = "WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# - 1",
     1340     7391                  PTR = RECORD_SET_KEY$ );

   7398  3 001465   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 001466   000016 471500                    LDP1    14,,PR0
         3 001467   100002 236100                    LDQ     2,,PR1
         3 001470   000022 732000                    QRS     18
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:210  
         3 001471   000006 402007                    MPY     6,DL
         3 001472   177775 720106                    LXL0    -3,QL,PR1
         3 001473   000002 100003                    CMPX0   2,DU
         3 001474   001504 601000 3                  TNZ     s:7398+7

   7398  3 001475   100002 236100                    LDQ     2,,PR1
         3 001476   000022 732000                    QRS     18
         3 001477   000006 402007                    MPY     6,DL
         3 001500   177776 473506                    LDP3    -2,QL,PR1
         3 001501   300002 634500                    EPPR4   2,,PR3
         3 001502   200130 454500                    STP4    RECORD_SET_KEY$,,AUTO
         3 001503   001511 710000 3                  TRA     s:7406

   7398  3 001504   100002 236100                    LDQ     2,,PR1
         3 001505   000022 732000                    QRS     18
         3 001506   000006 402007                    MPY     6,DL
         3 001507   177776 633506                    EPPR3   -2,QL,PR1
         3 001510   200130 453500                    STP3    RECORD_SET_KEY$,,AUTO

     1341     7401
     1342     7402        /*    This is the Keep the Good Record code.  We call COMPLETION_NORMAL to
     1343     7403              accomplish writing of updated records for us.  We want to be careful not
     1344     7404              to write things too soon.      */
     1345     7405
     1346     7406    5             DO CASE ( DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMVAL#.VALUE# );

   7406  3 001511   000003 473400 4                  LDP3    3
         3 001512   300000 474500                    LDP4    0,,PR3
         3 001513   000014 720100                    LXL0    12,,PR0
         3 001514   400000 475510                    LDP5    0,X0,PR4
         3 001515   500003 721100                    LXL1    3,,PR5
         3 001516   000377 361003                    ANX1    255,DU
         3 001517   000017 101003                    CMPX1   15,DU
         3 001520   001522 602011 3                  TNC     s:7406+9,X1
         3 001521   001541 710000 3                  TRA     s:7409
         3 001522   001541 710000 3                  TRA     s:7409
         3 001523   001541 710000 3                  TRA     s:7409
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:211  
         3 001524   001541 710000 3                  TRA     s:7409
         3 001525   001555 710000 3                  TRA     s:7425
         3 001526   001541 710000 3                  TRA     s:7409
         3 001527   001541 710000 3                  TRA     s:7409
         3 001530   001541 710000 3                  TRA     s:7409
         3 001531   001541 710000 3                  TRA     s:7409
         3 001532   001541 710000 3                  TRA     s:7409
         3 001533   001541 710000 3                  TRA     s:7409
         3 001534   001541 710000 3                  TRA     s:7409
         3 001535   001541 710000 3                  TRA     s:7409
         3 001536   001541 710000 3                  TRA     s:7409
         3 001537   001541 710000 3                  TRA     s:7409
         3 001540   001566 710000 3                  TRA     s:7434

     1347     7407
     1348     7408    5               CASE ( %ASCBIN ( EOM_EOR# ), ELSE );

     1349     7409    5                 CALL COMPLETION_NORMAL

   7409  3 001541   003114 701000 3                  TSX1    COMPLETION_NORMAL
         3 001542   000765 702000 3                  TSX2    RETALT

     1350     7410    5                   ALTRET (RETALT);
     1351     7411                      /*  When EOMVAL#.VALUE# (yuk) is %EOM_EOR#:
     1352     7412                          "the user simply moved off a changed
     1353     7413                          or inserted record".  */
     1354     7414                      /*  ALSO !!  If EOMVAL# is EOM_EOR# or a blank (??) and
     1355     7415                          INTERRUPT_STATE_AFTER_M$READ is %INST_BREAK_QUEUED, then
     1356     7416                          acknowledge the break and act like the user typed CNTL-C.  */
     1357     7417    6                 IF INTERRUPT_STATE_AFTER_M$READ = %INST_BREAK_QUEUED THEN DO;

   7417  3 001543   200142 235100                    LDA     INTERRUPT_STATE_AFTER_M$READ,,AUTO
         3 001544   000003 115007                    CMPA    3,DL
         3 001545   001075 601000 3                  TNZ     READ_THE_SCREEN

     1358     7418    6                     CALL VDG$EBREAK_ACKNOWLEDGE; /* But don't report an error */

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:212  
   7418  3 001546   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001547   000000 701000 xent               TSX1    VDG$EBREAK_ACKNOWLEDGE
         3 001550   000000 011000                    NOP     0

     1359     7419    6                     CALL COMPLETION_EOM_COMMAND ALTRET (RETALT);

   7419  3 001551   003310 701000 3                  TSX1    COMPLETION_EOM_COMMAND
         3 001552   000765 702000 3                  TSX2    RETALT

     1360     7420    6                     RETURN;

   7420  3 001553   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 001554   000001 702211                    TSX2  ! 1,X1

     1361     7421    6                   END;
     1362     7422
     1363     7423    5               CASE ( %EOM_COMMAND );

     1364     7424                       /* Write to the file only if updated */
     1365     7425    5                 IF NOT ( DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.DVBYTE.TRANS# )

   7425  3 001555   500003 236100                    LDQ     3,,PR5
         3 001556   020000 316003                    CANQ    8192,DU
         3 001557   001562 601000 3                  TNZ     s:7429

     1366     7426    6                 THEN DO;

     1367     7427    6                     CALL COMPLETION_NORMAL ALTRET (RETALT);

   7427  3 001560   003114 701000 3                  TSX1    COMPLETION_NORMAL
         3 001561   000765 702000 3                  TSX2    RETALT

     1368     7428    6                   END;

     1369     7429    5                 CALL COMPLETION_EOM_COMMAND ALTRET (RETALT);

   7429  3 001562   003310 701000 3                  TSX1    COMPLETION_EOM_COMMAND
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:213  
         3 001563   000765 702000 3                  TSX2    RETALT

     1370     7430
     1371     7431    5                 RETURN;

   7431  3 001564   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 001565   000001 702211                    TSX2  ! 1,X1

     1372     7432
     1373     7433    5               CASE ( %EOM_NEXT_ED_WINDOW );

     1374     7434    5                 IF NOT ( DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.DVBYTE.TRANS# )

   7434  3 001566   500003 236100                    LDQ     3,,PR5
         3 001567   020000 316003                    CANQ    8192,DU
         3 001570   001573 601000 3                  TNZ     s:7438

     1375     7435    6                 THEN DO;

     1376     7436    6                     CALL COMPLETION_NORMAL ALTRET (RETALT);

   7436  3 001571   003114 701000 3                  TSX1    COMPLETION_NORMAL
         3 001572   000765 702000 3                  TSX2    RETALT

     1377     7437    6                   END;

     1378     7438    5                 CALL COMPLETION_EOM_NEXT_ED_WINDOW ALTRET (RETALT);

   7438  3 001573   003316 701000 3                  TSX1    COMPLETION_EOM_NEXT_ED_WINDOW
         3 001574   000765 702000 3                  TSX2    RETALT

     1379     7439
     1380     7440                      /*  If COMPLETION_EOM_NEXT_ED_WINDOW
     1381     7441                          filled in NEXT_WINDOW$ with a *different*
     1382     7442                          (ORG=SE) window, then return to the
     1383     7443                          Interpreter.  */
     1384     7444    5                 IF NEXT_WINDOW$ ~= VD_CURRENT_WINDOW$
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:214  

   7444  3 001575   200003 470500                    LDP0    @NEXT_WINDOW$,,AUTO
         3 001576   000000 236100                    LDQ     0,,PR0
         3 001577   000000 116000 xsym               CMPQ    VD_CURRENT_WINDOW$
         3 001600   001075 600000 3                  TZE     READ_THE_SCREEN

     1385     7445    5                 THEN
     1386     7446    5                   RETURN;

   7446  3 001601   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 001602   000001 702211                    TSX2  ! 1,X1

     1387     7447
     1388     7448    5             END;

     1389     7449
     1390     7450    4           END EVERYTHINGS_PEACHY;
     1391     7451    3         ELSE
     1392     7452    3   EVERYTHINGS_LOUSY:
     1393     7453    4           DO;

   7453  3 001603                       EVERYTHINGS* null
     1394     7454
     1395     7455    5             DO CASE ( B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE );

   7455  3 001603   000000 470400 xsym               LDP0    B$TCB$
         3 001604   000000 471500                    LDP1    0,,PR0
         3 001605   100102 236100                    LDQ     66,,PR1
         3 001606   000003 772000                    QRL     3
         3 001607   037777 376007                    ANQ     16383,DL
         3 001610   002645 136007                    SBLQ    1445,DL
         3 001611   000003 116007                    CMPQ    3,DL
         3 001612   001614 602006 3                  TNC     EVERYTHINGS_LOUSY+9,QL
         3 001613   001741 710000 3                  TRA     s:7523
         3 001614   001625 710000 3                  TRA     s:7467
         3 001615   001617 710000 3                  TRA     s:7458
         3 001616   001723 710000 3                  TRA     s:7509
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:215  

     1396     7456
     1397     7457    5               CASE ( %E$RECORD_DELETED );

     1398     7458    5                 CALL COMPLETION_RECORD_DELETED

   7458  3 001617   002004 701000 3                  TSX1    COMPLETION_RECORD_DELETED
         3 001620   001622 702000 3                  TSX2    s:7461
         3 001621   001624 710000 3                  TRA     s:7461+2

     1399     7459    5                 WHENALTRETURN
     1400     7460    6                   DO;

     1401     7461    6                     ALTRETURN;

   7461  3 001622   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 001623   000000 702211                    TSX2  ! 0,X1
         3 001624   001075 710000 3                  TRA     READ_THE_SCREEN

     1402     7462    6                   END;
     1403     7463
     1404     7464    5               CASE ( %E$RECORDS_NEEDED );

     1405     7465                      /*  I hate this code.
     1406     7466                          See comments in VDP$WNEW where MX_ENTRIES# is set to 507.  */
     1407     7467    5                 IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.MX_ENTRIES# = 507

   7467  3 001625   200107 473500                    LDP3    CURRENT_WINDOW$,,AUTO
         3 001626   300016 474500                    LDP4    14,,PR3
         3 001627   400002 720100                    LXL0    2,,PR4
         3 001630   000773 100003                    CMPX0   507,DU
         3 001631   001701 601000 3                  TNZ     s:7487

     1408     7468    5                 THEN
     1409     7469    5   GET_A_REAL_RECORD_SET:
     1410     7470    6                   DO;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:216  
   7470  3 001632                       GET_A_REAL_* null
     1411     7471    6                     IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# ~= 0

   7471  3 001632   400002 221100                    LDX1    2,,PR4
         3 001633   001637 600000 3                  TZE     s:7475

     1412     7472    6                     THEN
     1413     7473    6                       CALL VDG$ESCREECH;

   7473  3 001634   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001635   000000 701000 xent               TSX1    VDG$ESCREECH
         3 001636   000000 011000                    NOP     0

     1414     7474                          /* Restore the actual # of slots in the recset */
     1415     7475    6                     WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.MX_ENTRIES# = 1;

   7475  3 001637   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 001640   000016 471500                    LDP1    14,,PR0
         3 001641   000001 220003                    LDX0    1,DU
         3 001642   100002 440100                    SXL0    2,,PR1

     1416     7476    6                     CALL VDG$OFREE ( WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET );

   7476  3 001643   000016 471500                    LDP1    14,,PR0
         3 001644   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 001645   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 001646   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 001647   000000 701000 xent               TSX1    VDG$OFREE
         3 001650   000000 011000                    NOP     0

     1417     7477    6                     CALL VDG$OALLOC ( %CLS_RECORD_SET,

   7477  3 001651   000003 470400 4                  LDP0    3
         3 001652   000000 471500                    LDP1    0,,PR0
         3 001653   200107 473500                    LDP3    CURRENT_WINDOW$,,AUTO
         3 001654   300014 720100                    LXL0    12,,PR3
         3 001655   100000 474510                    LDP4    0,X0,PR1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:217  
         3 001656   400000 236100                    LDQ     0,,PR4
         3 001657   000030 402007                    MPY     24,DL
         3 001660   000017 036007                    ADLQ    15,DL
         3 001661   000004 506007                    DIV     4,DL
         3 001662   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 001663   200154 634500                    EPPR4   @LOCATION+4,,AUTO
         3 001664   200157 454500                    STP4    @LOCATION+7,,AUTO
         3 001665   200107 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         3 001666   000016 036003                    ADLQ    14,DU
         3 001667   200156 756100                    STQ     @LOCATION+6,,AUTO
         3 001670   000027 236000 4                  LDQ     23
         3 001671   200155 756100                    STQ     @LOCATION+5,,AUTO
         3 001672   200155 630500                    EPPR0   @LOCATION+5,,AUTO
         3 001673   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 001674   000000 701000 xent               TSX1    VDG$OALLOC
         3 001675   001677 702000 3                  TSX2    s:7483
         3 001676   001701 710000 3                  TRA     s:7487

     1418     7478    6                       WINDOW$SPEC.RECORD_SET$,
     1419     7479    6                       ( SIZEC (VD$RECORD_SET)
     1420     7480    6                       + ( SIZEC (VD$RECORD_SET.DESC (0))
     1421     7481    6                       * (DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS# - 1))
     1422     7482    6                       + (%NB_PER_WORD - 1) ) / %NB_PER_WORD )
     1423     7483    7                     WHENALTRETURN DO; ALTRETURN; END;

   7483  3 001677   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 001700   000000 702211                    TSX2  ! 0,X1

     1424     7484    6                   END GET_A_REAL_RECORD_SET;

     1425     7485
     1426     7486
     1427     7487    5                 CALL COMPLETION_RECORDS_NEEDED

   7487  3 001701   000003 470400 4                  LDP0    3
         3 001702   000000 471500                    LDP1    0,,PR0
         3 001703   200107 473500                    LDP3    CURRENT_WINDOW$,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:218  
         3 001704   300014 720100                    LXL0    12,,PR3
         3 001705   100000 474510                    LDP4    0,X0,PR1
         3 001706   200147 454500                    STP4    @RELATIVE,,AUTO
         3 001707   002063 701000 3                  TSX1    COMPLETION_RECORDS_NEEDED
         3 001710   000765 702000 3                  TSX2    RETALT

     1428     7488    5                   ( DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS# )
     1429     7489    5                   ALTRET (RETALT);
     1430     7490
     1431     7491    5                 IF FROM_PRESENTER

   7491  3 001711   200005 470500                    LDP0    @FROM_PRESENTER,,AUTO
         3 001712   000000 234100                    SZN     0,,PR0
         3 001713   001716 605000 3                  TPL     s:7499

     1432     7492    5                 THEN
     1433     7493    5                   RETURN;

   7493  3 001714   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 001715   000001 702211                    TSX2  ! 1,X1

     1434     7494
     1435     7495                      /*  If we tried to position outside the VDH cache,
     1436     7496                          WITHIN_RANGE is still non-zero.
     1437     7497                          If that's the case, we want to M$SINPUT to
     1438     7498                          the correct record.  Trust me.  */
     1439     7499    5                 IF WITHIN_RANGE ~= 0

   7499  3 001716   200140 235100                    LDA     WITHIN_RANGE,,AUTO
         3 001717   001075 600000 3                  TZE     READ_THE_SCREEN

     1440     7500    5                 THEN
     1441     7501    5   SINPUT_FOR_PREVIOUS_ERASE:
     1442     7502    6                   DO;

   7502  3 001720                       SINPUT_FOR_* null
     1443     7503    6                     CALL UPDATE_CURSOR_TO_SELECTEDBLOCK ALTRET (RETALT);
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:219  

   7503  3 001720   003337 701000 3                  TSX1    UPDATE_CURSOR_TO_SELECTEDBLOCK
         3 001721   000765 702000 3                  TSX2    RETALT

     1444     7504    6                   END SINPUT_FOR_PREVIOUS_ERASE;

   7504  3 001722   001075 710000 3                  TRA     READ_THE_SCREEN

     1445     7505
     1446     7506    5               CASE ( %E$INSERT_NO_ROOM );

     1447     7507                      /*  Although this is an ALTRET condition, the data
     1448     7508                          returned in FPT_READ.BUF_ should be valid.  */
     1449     7509    5                 IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# > 0

   7509  3 001723   200107 473500                    LDP3    CURRENT_WINDOW$,,AUTO
         3 001724   300016 474500                    LDP4    14,,PR3
         3 001725   400002 220100                    LDX0    2,,PR4
         3 001726   001732 605400 3                  TPNZ    s:7511
         3 001727   000104 475400 1                  LDP5    VDP_BUFFER$
         3 001730   500002 221100                    LDX1    2,,PR5
         3 001731   001734 604400 3                  TMOZ    s:7513

     1450     7510    5                   OR VDP_BUFFER$-> VD$BUFFER.LENGTH# > 0 THEN
     1451     7511    5                   CALL COMPLETION_NORMAL ALTRET (RETALT);

   7511  3 001732   003114 701000 3                  TSX1    COMPLETION_NORMAL
         3 001733   000765 702000 3                  TSX2    RETALT

     1452     7512
     1453     7513    5                 CALL COMPLETION_INSERT_NO_ROOM ALTRET (RETALT);

   7513  3 001734   002772 701000 3                  TSX1    COMPLETION_INSERT_NO_ROOM
         3 001735   000765 702000 3                  TSX2    RETALT

     1454     7514
     1455     7515    5                 CALL UPDATE_CURSOR_TO_SELECTEDBLOCK;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:220  

   7515  3 001736   003337 701000 3                  TSX1    UPDATE_CURSOR_TO_SELECTEDBLOCK
         3 001737   000000 011000                    NOP     0
         3 001740   001075 710000 3                  TRA     READ_THE_SCREEN

     1456     7516
     1457     7517    5               CASE ( ELSE );

     1458     7518                      /*  Big fat hairy kludge:
     1459     7519                          if the FEP said, "That key doesn't exist...",
     1460     7520                          it's complaining about a bad (actually good)
     1461     7521                          M$SINPUT before this M$READ.  Just M$SINPUT
     1462     7522                          again and retry the M$READ.  */
     1463     7523    5                 IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOKEY

   7523  3 001741   100102 236100                    LDQ     66,,PR1
         3 001742   377770 376007                    ANQ     131064,DL
         3 001743   001020 116007                    CMPQ    528,DL
         3 001744   001777 601000 3                  TNZ     s:7541

     1464     7524    5                 THEN
     1465     7525    5   RETRY_UC17_ERROR:
     1466     7526    6                   DO;

   7526  3 001745                       RETRY_UC17_* null
     1467     7527    6                     FEP_SINPUT_NUMERIC_KEY = FEP_READ_RETURN_KEY;

   7527  3 001745   200117 235100                    LDA     FEP_READ_RETURN_KEY,,AUTO
         3 001746   200104 755100                    STA     FEP_SINPUT_NUMERIC_KEY,,AUTO

     1468     7528    6                     FPT_SINPUT.BUF_ = VECTOR ( FEP_SINPUT_NUMERIC_KEY );

   7528  3 001747   777640 235007                    LDA     -96,DL
         3 001750   200154 452500                    STP2    @LOCATION+4,,AUTO
         3 001751   200154 236100                    LDQ     @LOCATION+4,,AUTO
         3 001752   000104 036003                    ADLQ    68,DU
         3 001753   000022 757000 1                  STAQ    FPT_SINPUT+4
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:221  

     1469     7529    6                     FPT_SINPUT.V.DCB# = WINDOW$SPEC.DCB#;

   7529  3 001754   200107 471500                    LDP1    CURRENT_WINDOW$,,AUTO
         3 001755   100014 720100                    LXL0    12,,PR1
         3 001756   000024 740000 1                  STX0    FPT_SINPUT+6

     1470     7530
     1471     7531    6                     IF VD_$$MON_PRES.V# > 0

   7531  3 001757   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         3 001760   001772 604400 3                  TMOZ    s:7536

     1472     7532    6                     THEN
     1473     7533    6                       CALL VDG$MPRES_FEPSINPUT ( WINDOW$SPEC.DCB#,

   7533  3 001761   000001 236000 4                  LDQ     1
         3 001762   200155 756100                    STQ     @LOCATION+5,,AUTO
         3 001763   200107 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         3 001764   000002 036000 4                  ADLQ    2
         3 001765   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 001766   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 001767   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 001770   000000 701000 xent               TSX1    VDG$MPRES_FEPSINPUT
         3 001771   000000 011000                    NOP     0

     1474     7534    6                         VDP_NODE_DESC.KEY );
     1475     7535
     1476     7536    7                     CALL M$SINPUT ( FPT_SINPUT ) WHENRETURN DO;

   7536  3 001772   000016 630400 1                  EPPR0   FPT_SINPUT
         3 001773   560013 713400                    CLIMB   alt,+57355
         3 001774   401000 401760                    pmme    nvectors=3
         3 001775   001777 702000 3                  TSX2    s:7541

     1477     7537    7                         GOTO UGLY_RETRY_UC17_ERROR_LABEL;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:222  
   7537  3 001776   001075 710000 3                  TRA     READ_THE_SCREEN

     1478     7538    7                       END;
     1479     7539    6                   END RETRY_UC17_ERROR;

     1480     7540
     1481     7541    5                 CALL VDG$MONERR;

   7541  3 001777   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 002000   000000 701000 xent               TSX1    VDG$MONERR
         3 002001   000000 011000                    NOP     0

     1482     7542    5                 ALTRETURN;

   7542  3 002002   200144 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+2,,AUTO
         3 002003   000000 702211                    TSX2  ! 0,X1

     1483     7543
     1484     7544    5             END;

     1485     7545
     1486     7546    4           END EVERYTHINGS_LOUSY;
     1487     7547
     1488     7548    3       END READ_THE_SCREEN;

     1489     7549
     1490     7550        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:223  
     1491     7551    2   COMPLETION_RECORD_DELETED: PROC ALTRET;

   7551  3 002004   200146 741300       COMPLETION_* STX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO

     1492     7552
     1493     7553        /*I*  NAME:         COMPLETION_RECORD_DELETED
     1494     7554              PURPOSE:      Handle E$RECORD_DELETED M$READ completions.
     1495     7555              PARAMETERS:   None.
     1496     7556              DATA:         VDP_NODE_DESC.KEY = the key of the deleted record.
     1497     7557              DESCRIPTION:  o Scroll this window's RECORD_SET.ENDD up one;
     1498     7558                              if this window's RECORD_SET.START was the deleted
     1499     7559                              record, then scroll RECORD_SET.START up one, also.
     1500     7560                            o CALL VDA$LDELETE, giving it the key returned by the
     1501     7561                              M$READ (now in VDP_NODE_DESC.KEY).
     1502     7562                              Note:  the call to VDA$LDELETE will generate a call
     1503     7563                              to VDP$RDELETE for this record.  For this window,
     1504     7564                              VDP$RDELETE won't find the record to delete;
     1505     7565                              however, it will update any other editing windows
     1506     7566                              in which the record is currently being displayed.
     1507     7567                            o Read again from the window.
     1508     7568        */
     1509     7569
     1510     7570    3       CALL VDP$WSCROLL_UP ( WINDOW$SPEC,

   7570  3 002005   000030 237000 4                  LDAQ    24
         3 002006   200160 757100                    STAQ    @LOCATION+8,,AUTO
         3 002007   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 002010   000001 235000 xsym               LDA     B_VECTNIL+1
         3 002011   200156 757100                    STAQ    @LOCATION+6,,AUTO
         3 002012   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 002013   200107 235100                    LDA     CURRENT_WINDOW$,,AUTO
         3 002014   200154 757100                    STAQ    @LOCATION+4,,AUTO
         3 002015   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 002016   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 002017   000000 701000 xent               TSX1    VDP$WSCROLL_UP
         3 002020   002061 702000 3                  TSX2    RETALT

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:224  
     1511     7571    3         /* no scroll_key */,
     1512     7572    3         /* no scroll_spec */,
     1513     7573    3         /* no scroll_data */,
     1514     7574    3         VDP_NODE_DESC.KEY,
     1515     7575    3         VDP_NODE_DESC.KEY )
     1516     7576    3         ALTRET (RETALT);
     1517     7577
     1518     7578    3       DELETION_RANGE = %CLEAR;

   7578  3 002021   000100 100400                    MLR     fill='000'O
         3 002022   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 002023   200060 000110                    ADSC9   DELETION_RANGE,,AUTO     cn=0,n=72

     1519     7579    3       DELETION_RANGE.START.KEY (0) = VDP_NODE_DESC.KEY;

   7579  3 002024   000100 100400                    MLR     fill='000'O
         3 002025   000000 000010 xsym               ADSC9   VDP_NODE_DESC            cn=0,n=8
         3 002026   200060 000010                    ADSC9   DELETION_RANGE,,AUTO     cn=0,n=8

     1520     7580    3       DELETION_RANGE.ENDD.KEY (0) = VDP_NODE_DESC.KEY;

   7580  3 002027   000100 100400                    MLR     fill='000'O
         3 002030   000000 000010 xsym               ADSC9   VDP_NODE_DESC            cn=0,n=8
         3 002031   200071 000010                    ADSC9   DELETION_RANGE+9,,AUTO   cn=0,n=8

     1521     7581
     1522     7582    3       CALL VDP$RDELETE ( WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.FILE_KEY,

   7582  3 002032   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002033   000012 471500                    LDP1    10,,PR0
         3 002034   000022 236000 4                  LDQ     18
         3 002035   200156 756100                    STQ     @LOCATION+6,,AUTO
         3 002036   200060 633500                    EPPR3   DELETION_RANGE,,AUTO
         3 002037   200155 453500                    STP3    @LOCATION+5,,AUTO
         3 002040   100001 634500                    EPPR4   1,,PR1
         3 002041   200154 454500                    STP4    @LOCATION+4,,AUTO
         3 002042   200154 630500                    EPPR0   @LOCATION+4,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:225  
         3 002043   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 002044   000000 701000 xent               TSX1    VDP$RDELETE
         3 002045   002061 702000 3                  TSX2    RETALT

     1523     7583    3         DELETION_RANGE,
     1524     7584    3         %FROM_PRESENTER )
     1525     7585    3         ALTRET (RETALT);
     1526     7586
     1527     7587    3   BEFORE_THE_LDELETE:
     1528     7588    3       CALL VDA$LDELETE ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,

   7588  3 002046   200107 470500       BEFORE_THE_* LDP0    CURRENT_WINDOW$,,AUTO
         3 002047   000010 471500                    LDP1    8,,PR0
         3 002050   200060 633500                    EPPR3   DELETION_RANGE,,AUTO
         3 002051   200155 453500                    STP3    @LOCATION+5,,AUTO
         3 002052   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 002053   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 002054   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 002055   000000 701000 xent               TSX1    VDA$LDELETE
         3 002056   002061 702000 3                  TSX2    RETALT

     1529     7589    3         DELETION_RANGE )
     1530     7590    3         ALTRET (RETALT);
     1531     7591
     1532     7592    3   AFTER_THE_RDELETE:
     1533     7593    3       RETURN;

   7593  3 002057   200146 221300       AFTER_THE_R* LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 002060   000001 702211                    TSX2  ! 1,X1

     1534     7594    3   RETALT: ALTRETURN;

   7594  3 002061   200146 221300       RETALT       LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 002062   000000 702211                    TSX2  ! 0,X1

     1535     7595
     1536     7596    3   END COMPLETION_RECORD_DELETED;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:226  
     1537     7597        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:227  
     1538     7598    2   COMPLETION_RECORDS_NEEDED: PROC ( RECORDS_NEEDED ) ALTRET;

   7598  3 002063   200146 741300       COMPLETION_* STX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO

     1539     7599
     1540     7600        /*I*  NAME:         COMPLETION_RECORDS_NEEDED
     1541     7601              PURPOSE:      Handle E$RECORDS_NEEDED M$READ completions.
     1542     7602              PARAMETERS:   None.
     1543     7603              DATA:         WINDOW$SPEC;
     1544     7604                            the DCB just read.
     1545     7605              DESCRIPTION:  o Scroll this window's DISPLAYED_SET (if any) up
     1546     7606                              | ARS# | entries.
     1547     7607                            o CALL VDE$RREAD to position this window's stream to
     1548     7608                              the record after DISPLAYED_SET.ENDD (if any).
     1549     7609                              (If the DISPLAYED_SET is empty, use the key of the
     1550     7610                              cursor-field start boundary.)
     1551     7611                              If EOF is hit, act as though VDE$RGET (see below)
     1552     7612                              returned BOB_EOB_FLAG.
     1553     7613                            o CALL VDE$RGET to read the record.  The enclosing
     1554     7614                              range is this window's EDIT_BLOCK.RANGE.
     1555     7615                              VDE$RGET will return an BOB_EOB_FLAG flag and an optional
     1556     7616                              ref to a VD$NODE_DESC (VDP_NODE_DESC), omitted if
     1557     7617                              BOB_EOB_FLAG was hit.
     1558     7618                            o If a VD$NODE_DESC (VDP_NODE_DESC) was returned,
     1559     7619                              update WINDOW$SPEC.ENDD (and WINDOW$SPEC.START,
     1560     7620                              if it's %CLEAR) with VDP_NODE_DESC.KEY, and
     1561     7621                              M$WRITE all relevent info to VDH (Key, Spec, and/or
     1562     7622                              Data).
     1563     7623                              If VDE$RGET returned BOB_EOB_FLAG, then set the EOB flag for
     1564     7624                              this window, and M$WEOF to VDH.
     1565     7625                            o Read again from the window.
     1566     7626        */
     1567     7627
     1568     7628    3     DCL RECORDS_NEEDED SBIN;
     1569     7629
     1570     7630    3       IF RECORDS_NEEDED > 0

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:228  
   7630  3 002064   200147 470500                    LDP0    @RECORDS_NEEDED,,AUTO
         3 002065   000000 235100                    LDA     0,,PR0
         3 002066   002074 604400 3                  TMOZ    s:7638

     1571     7631    3       THEN
     1572     7632    4         DO;

     1573     7633    4           RELATIVE = 1;

   7633  3 002067   000001 236007                    LDQ     1,DL
         3 002070   200132 756100                    STQ     RELATIVE,,AUTO

     1574     7634    4           SCROLL_LIMIT = RECORDS_NEEDED;

   7634  3 002071   000000 235100                    LDA     0,,PR0
         3 002072   200135 755100                    STA     SCROLL_LIMIT,,AUTO

     1575     7635    4         END;

   7635  3 002073   002101 710000 3                  TRA     s:7651

     1576     7636    3       ELSE
     1577     7637    4         DO;

     1578     7638    4           RELATIVE = -1;

   7638  3 002074   000001 336007                    LCQ     1,DL
         3 002075   200132 756100                    STQ     RELATIVE,,AUTO

     1579     7639    4           SCROLL_LIMIT = - RECORDS_NEEDED;

   7639  3 002076   000000 235100                    LDA     0,,PR0
         3 002077   000000 531000                    NEG     0
         3 002100   200135 755100                    STA     SCROLL_LIMIT,,AUTO

     1580     7640    4         END;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:229  
     1581     7641
     1582     7642            %GETKEY ( KEY =
              7642                "WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE.START.KEY",
     1583     7643            INDX = LEVEL# - 1,
     1584     7644            PTR = EDIT_BLOCK_START_KEY$ );

   7651  3 002101   200107 471500                    LDP1    CURRENT_WINDOW$,,AUTO
         3 002102   100012 473500                    LDP3    10,,PR1
         3 002103   200120 235100                    LDA     LEVEL#,,AUTO
         3 002104   000001 735000                    ALS     1
         3 002105   300001 720105                    LXL0    1,AL,PR3
         3 002106   000002 100003                    CMPX0   2,DU
         3 002107   002114 601000 3                  TNZ     s:7651+11

   7651  3 002110   300002 474505                    LDP4    2,AL,PR3
         3 002111   400002 635500                    EPPR5   2,,PR4
         3 002112   200110 455500                    STP5    EDIT_BLOCK_START_KEY$,,AUTO
         3 002113   002116 710000 3                  TRA     s:7655

   7651  3 002114   300002 634505                    EPPR4   2,AL,PR3
         3 002115   200110 454500                    STP4    EDIT_BLOCK_START_KEY$,,AUTO

     1585     7654
     1586     7655    3       DONT_FORGET_TO_WEOF = %FALSE;

   7655  3 002116   200112 450100                    STZ     DONT_FORGET_TO_WEOF,,AUTO

     1587     7656
     1588     7657    3       IF WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# = 0

   7657  3 002117   100016 474500                    LDP4    14,,PR1
         3 002120   400002 222100                    LDX2    2,,PR4
         3 002121   002314 601000 3                  TNZ     NON_EMPTY_RECORD_SET

     1589     7658    3       THEN
     1590     7659    3   EMPTY_RECORD_SET:
     1591     7660    4         DO;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:230  

   7660  3 002122                       EMPTY_RECOR* null
     1592     7661                /*  Note:  if the record_set's empty
     1593     7662                    and we're asked to scroll_down,
     1594     7663                    we assume it's just an empty file.
     1595     7664                    If it's not, there's something wrong.  */
     1596     7665                /*  Funny case:  if the record_set's empty
     1597     7666                    and we're asked to scroll_up,
     1598     7667                    "wrap the screen around" the start of the
     1599     7668                    SelectedBlock.  */
     1600     7669    4           WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.SQ_OFFSET# = %HALF_INFINITY;

   7669  3 002122   377777 235007                    LDA     131071,DL
         3 002123   400001 755100                    STA     1,,PR4

     1601     7670    5           DO CASE ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# );

   7670  3 002124   100013 473500                    LDP3    11,,PR1
         3 002125   300070 220100                    LDX0    56,,PR3
         3 002126   000004 100003                    CMPX0   4,DU
         3 002127   002131 602010 3                  TNC     s:7670+5,X0
         3 002130   002144 710000 3                  TRA     s:7681
         3 002131   002144 710000 3                  TRA     s:7681
         3 002132   002135 710000 3                  TRA     s:7674
         3 002133   002135 710000 3                  TRA     s:7674
         3 002134   002141 710000 3                  TRA     s:7677

     1602     7671
     1603     7672    5             CASE ( %EVST_INITIAL,

     1604     7673    5             %EVST_START );
     1605     7674    5               RREAD_LOCATION = WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START;

   7674  3 002135   000100 100500                    MLR     fill='000'O
         3 002136   300024 000044                    ADSC9   20,,PR3                  cn=0,n=36
         3 002137   200012 000044                    ADSC9   RREAD_LOCATION,,AUTO     cn=0,n=36
         3 002140   002144 710000 3                  TRA     s:7681
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:231  

     1606     7675
     1607     7676    5             CASE ( %EVST_END );

     1608     7677    5               RREAD_LOCATION = WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD;

   7677  3 002141   000100 100500                    MLR     fill='000'O
         3 002142   300035 000044                    ADSC9   29,,PR3                  cn=0,n=36
         3 002143   200012 000044                    ADSC9   RREAD_LOCATION,,AUTO     cn=0,n=36

     1609     7678
     1610     7679    5           END;

     1611     7680
     1612     7681    4           RREAD_SAVED_KEY = RREAD_LOCATION.KEY (LEVEL# - 1);

   7681  3 002144   200120 236100                    LDQ     LEVEL#,,AUTO
         3 002145   000001 736000                    QLS     1
         3 002146   200010 237106                    LDAQ    RECORD_SET_KEY,QL,AUTO
         3 002147   200006 757100                    STAQ    RREAD_SAVED_KEY,,AUTO

     1613     7682
     1614     7683    4           LOCATION$ = ADDR ( RREAD_LOCATION );

   7683  3 002150   200012 633500                    EPPR3   RREAD_LOCATION,,AUTO
         3 002151   200124 453500                    STP3    LOCATION$,,AUTO

     1615     7684    4           RELATIVE = SCROLL_LIMIT / 2;

   7684  3 002152   200135 236100                    LDQ     SCROLL_LIMIT,,AUTO
         3 002153   000001 772000                    QRL     1
         3 002154   200132 756100                    STQ     RELATIVE,,AUTO

     1616     7685
     1617     7686    4           CALL VDE$RREAD ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,

   7686  3 002155   100010 474500                    LDP4    8,,PR1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:232  
         3 002156   100012 475500                    LDP5    10,,PR1
         3 002157   200132 636500                    EPPR6   RELATIVE,,AUTO
         3 002160   200157 456500                    STP6    @LOCATION+7,,AUTO
         3 002161   200124 236100                    LDQ     LOCATION$,,AUTO
         3 002162   200156 756100                    STQ     @LOCATION+6,,AUTO
         3 002163   500003 637500                    EPPR7   3,,PR5
         3 002164   200155 457500                    STP7    @LOCATION+5,,AUTO
         3 002165   200154 454500                    STP4    @LOCATION+4,,AUTO
         3 002166   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 002167   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 002170   000000 701000 xent               TSX1    VDE$RREAD
         3 002171   002503 702000 3                  TSX2    RETALT

     1618     7687    4             WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1619     7688    4             LOCATION$ -> VD$LOCATION,
     1620     7689    4             RELATIVE /* relative position = forward scroll_limit / 2 */ )
     1621     7690    4             ALTRET ( CANT_READ_FILE );
     1622     7691
     1623     7692    4           CALL VDE$RGET ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,

   7692  3 002172   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002173   000010 471500                    LDP1    8,,PR0
         3 002174   000012 473500                    LDP3    10,,PR0
         3 002175   200052 634500                    EPPR4   RGET_NODE_DESC,,AUTO
         3 002176   200156 454500                    STP4    @LOCATION+6,,AUTO
         3 002177   300003 635500                    EPPR5   3,,PR3
         3 002200   200155 455500                    STP5    @LOCATION+5,,AUTO
         3 002201   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 002202   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 002203   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 002204   000000 701000 xent               TSX1    VDE$RGET
         3 002205   002503 702000 3                  TSX2    RETALT

     1624     7693    4             WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1625     7694    4             RGET_NODE_DESC )
     1626     7695    4             ALTRET (RETALT);
     1627     7696
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:233  
     1628     7697    4           IF RGET_NODE_DESC.KEY = %CLEAR

   7697  3 002206   200052 237100                    LDAQ    RGET_NODE_DESC,,AUTO
         3 002207   000012 117000 4                  CMPAQ   10
         3 002210   002213 601000 3                  TNZ     s:7701

     1629     7698    4           THEN
     1630     7699    4             DONT_FORGET_TO_WEOF = %TRUE;

   7699  3 002211   400000 236003                    LDQ     -131072,DU
         3 002212   200112 756100                    STQ     DONT_FORGET_TO_WEOF,,AUTO

     1631     7700
     1632     7701    4           LOCATION$ = ADDR (NIL);

   7701  3 002213   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 002214   200124 756100                    STQ     LOCATION$,,AUTO

     1633     7702    4           RELATIVE = - SCROLL_LIMIT;

   7702  3 002215   000000 235003                    LDA     0,DU
         3 002216   200135 135100                    SBLA    SCROLL_LIMIT,,AUTO
         3 002217   200132 755100                    STA     RELATIVE,,AUTO

     1634     7703
     1635     7704    4           CALL VDE$RREAD ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,

   7704  3 002220   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002221   000010 471500                    LDP1    8,,PR0
         3 002222   000012 473500                    LDP3    10,,PR0
         3 002223   200132 634500                    EPPR4   RELATIVE,,AUTO
         3 002224   200157 454500                    STP4    @LOCATION+7,,AUTO
         3 002225   200156 756100                    STQ     @LOCATION+6,,AUTO
         3 002226   300003 635500                    EPPR5   3,,PR3
         3 002227   200155 455500                    STP5    @LOCATION+5,,AUTO
         3 002230   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 002231   200154 630500                    EPPR0   @LOCATION+4,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:234  
         3 002232   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 002233   000000 701000 xent               TSX1    VDE$RREAD
         3 002234   002503 702000 3                  TSX2    RETALT

     1636     7705    4             WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1637     7706    4             LOCATION$ -> VD$LOCATION /* no absolute position */,
     1638     7707    4             RELATIVE /* relative position = backward scroll_limit */ )
     1639     7708    4             ALTRET ( CANT_READ_FILE );
     1640     7709
     1641     7710    4           CALL VDE$RGET ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,

   7710  3 002235   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002236   000010 471500                    LDP1    8,,PR0
         3 002237   000012 473500                    LDP3    10,,PR0
         3 002240   200052 634500                    EPPR4   RGET_NODE_DESC,,AUTO
         3 002241   200156 454500                    STP4    @LOCATION+6,,AUTO
         3 002242   300003 635500                    EPPR5   3,,PR3
         3 002243   200155 455500                    STP5    @LOCATION+5,,AUTO
         3 002244   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 002245   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 002246   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 002247   000000 701000 xent               TSX1    VDE$RGET
         3 002250   002503 702000 3                  TSX2    RETALT

     1642     7711    4             WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1643     7712    4             RGET_NODE_DESC )
     1644     7713    4             ALTRET (RETALT);
     1645     7714
     1646     7715    4           IF RGET_NODE_DESC.KEY = %CLEAR

   7715  3 002251   200052 237100                    LDAQ    RGET_NODE_DESC,,AUTO
         3 002252   000012 117000 4                  CMPAQ   10
         3 002253   002263 601000 3                  TNZ     s:7737

     1647     7716    4           THEN
     1648     7717    4   BIG_FAT_EMPTY_FILE:
     1649     7718    5             DO;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:235  

   7718  3 002254                       BIG_FAT_EMP* null
     1650     7719           /*       When we have an empty file, set EOB_DISPLAYED bit at this point,
     1651     7720                    since WEOF_VDH (where this is usually set) only sets BOB_DISPLAYED
     1652     7721                    on new files.   */
     1653     7722    5               WINDOW$SPEC.EOB_DISPLAYED = %TRUE;

   7722  3 002254   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002255   200000 236003                    LDQ     65536,DU
         3 002256   000015 256100                    ORSQ    13,,PR0

     1654     7723    5               CALL WEOF_VDH

   7723  3 002257   002505 701000 3                  TSX1    WEOF_VDH
         3 002260   002503 702000 3                  TSX2    RETALT

     1655     7724    5                 ALTRET (RETALT);
     1656     7725    5               RETURN;

   7725  3 002261   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 002262   000001 702211                    TSX2  ! 1,X1

     1657     7726    5             END BIG_FAT_EMPTY_FILE;
     1658     7727
     1659     7728                %GETKEY ( KEY = "WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY",
     1660     7729                INDX = LEVEL# - 1,
     1661     7730                PTR = STREAM_CURRENT_KEY$ );

   7737  3 002263   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002264   000010 471500                    LDP1    8,,PR0
         3 002265   200120 235100                    LDA     LEVEL#,,AUTO
         3 002266   000001 735000                    ALS     1
         3 002267   100004 720105                    LXL0    4,AL,PR1
         3 002270   000002 100003                    CMPX0   2,DU
         3 002271   002276 601000 3                  TNZ     s:7737+11

   7737  3 002272   100005 473505                    LDP3    5,AL,PR1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:236  
         3 002273   300002 634500                    EPPR4   2,,PR3
         3 002274   200137 454500                    STP4    STREAM_CURRENT_KEY$,,AUTO
         3 002275   002300 710000 3                  TRA     s:7741

   7737  3 002276   100005 633505                    EPPR3   5,AL,PR1
         3 002277   200137 453500                    STP3    STREAM_CURRENT_KEY$,,AUTO

     1662     7740
     1663     7741    4           RELATIVE = 1;

   7741  3 002300   000001 235007                    LDA     1,DL
         3 002301   200132 755100                    STA     RELATIVE,,AUTO

     1664     7742    4           FEP_READ_RETURN_KEY = %HALF_INFINITY;

   7742  3 002302   377777 235007                    LDA     131071,DL
         3 002303   200117 755100                    STA     FEP_READ_RETURN_KEY,,AUTO

     1665     7743    4           VDP_NODE_DESC.KEY.TYPE# = RGET_NODE_DESC.KEY.TYPE#;

   7743  3 002304   200052 220100                    LDX0    RGET_NODE_DESC,,AUTO
         3 002305   000000 740000 xsym               STX0    VDP_NODE_DESC

     1666     7744    4           CALL WRITE_VDH

   7744  3 002306   002550 701000 3                  TSX1    WRITE_VDH
         3 002307   002503 702000 3                  TSX2    RETALT

     1667     7745    4             ALTRET (RETALT);
     1668     7746
     1669     7747    4           SCROLL_LIMIT = SCROLL_LIMIT - 1;

   7747  3 002310   200135 235100                    LDA     SCROLL_LIMIT,,AUTO
         3 002311   000001 135007                    SBLA    1,DL
         3 002312   200135 755100                    STA     SCROLL_LIMIT,,AUTO

     1670     7748    4         END EMPTY_RECORD_SET;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:237  

   7748  3 002313   002334 710000 3                  TRA     SCROLL_N_RECORDS

     1671     7749    3       ELSE
     1672     7750    3   NON_EMPTY_RECORD_SET:
     1673     7751    4         DO;

   7751  3 002314                       NON_EMPTY_R* null
     1674     7752                /*  TEMPORARY:  or maybe NOT!!!
     1675     7753                    Always use the KEY passed back by the FEP as the
     1676     7754                    starting point for writing records back.
     1677     7755                    (This is the ol' "dummy record @EOF" problem.
     1678     7756                    Pete creates a dummy record in the FEP and
     1679     7757                    scrolls his record set so we may not be in sync.)  */
     1680     7758    4           RREAD_LOCATION = WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE.
              7758                    START;

   7758  3 002314   000100 100500                    MLR     fill='000'O
         3 002315   300003 000044                    ADSC9   3,,PR3                   cn=0,n=36
         3 002316   200012 000044                    ADSC9   RREAD_LOCATION,,AUTO     cn=0,n=36

     1681     7759
     1682     7760    4           RREAD_LOCATION.KEY ( LEVEL# - 1 ) = VDP_NODE_DESC.KEY;

   7760  3 002317   000002 735000                    ALS     2
         3 002320   000105 100400                    MLR     fill='000'O
         3 002321   000000 000010 xsym               ADSC9   VDP_NODE_DESC            cn=0,n=8
         3 002322   200010 000010                    ADSC9   RECORD_SET_KEY,A,AUTO    cn=0,n=8

     1683     7761
     1684     7762    4           RREAD_SAVED_KEY = RREAD_LOCATION.KEY ( LEVEL# - 1 );

   7762  3 002323   200120 235100                    LDA     LEVEL#,,AUTO
         3 002324   000001 735000                    ALS     1
         3 002325   200010 237105                    LDAQ    RECORD_SET_KEY,AL,AUTO
         3 002326   200006 757100                    STAQ    RREAD_SAVED_KEY,,AUTO

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:238  
     1685     7763    4           FEP_READ_RETURN_KEY = FEP_READ_RETURN_KEY + RELATIVE;

   7763  3 002327   200117 236100                    LDQ     FEP_READ_RETURN_KEY,,AUTO
         3 002330   200132 036100                    ADLQ    RELATIVE,,AUTO
         3 002331   200117 756100                    STQ     FEP_READ_RETURN_KEY,,AUTO

     1686     7764
     1687     7765    4           LOCATION$ = ADDR ( RREAD_LOCATION );

   7765  3 002332   200012 633500                    EPPR3   RREAD_LOCATION,,AUTO
         3 002333   200124 453500                    STP3    LOCATION$,,AUTO

     1688     7766    4         END NON_EMPTY_RECORD_SET;

     1689     7767
     1690     7768    3   SCROLL_N_RECORDS:
     1691     7769    4       DO SCROLL_INDEX = 1 TO SCROLL_LIMIT;

   7769  3 002334   000001 235007       SCROLL_N_RE* LDA     1,DL
         3 002335   200133 755100                    STA     SCROLL_INDEX,,AUTO
         3 002336   002472 710000 3                  TRA     s:7855+3

     1692     7770
     1693     7771    4         BOB_EOB_FLAG = %FALSE;

   7771  3 002337   200106 450100                    STZ     BOB_EOB_FLAG,,AUTO

     1694     7772
     1695     7773    4         CALL VDE$RREAD ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,

   7773  3 002340   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002341   000010 471500                    LDP1    8,,PR0
         3 002342   000012 473500                    LDP3    10,,PR0
         3 002343   200132 634500                    EPPR4   RELATIVE,,AUTO
         3 002344   200157 454500                    STP4    @LOCATION+7,,AUTO
         3 002345   200124 236100                    LDQ     LOCATION$,,AUTO
         3 002346   200156 756100                    STQ     @LOCATION+6,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:239  
         3 002347   300003 635500                    EPPR5   3,,PR3
         3 002350   200155 455500                    STP5    @LOCATION+5,,AUTO
         3 002351   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 002352   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 002353   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 002354   000000 701000 xent               TSX1    VDE$RREAD
         3 002355   002503 702000 3                  TSX2    RETALT

     1696     7774    4           WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     1697     7775    4           LOCATION$ -> VD$LOCATION /* absolute position = key or nil */,
     1698     7776    4           RELATIVE /* relative position = backward n or forward 1 */ )
     1699     7777    4           ALTRET ( CANT_READ_FILE );
     1700     7778
     1701     7779              %GETKEY ( KEY = "WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY",
     1702     7780              INDX = LEVEL# - 1,
     1703     7781              PTR = STREAM_CURRENT_KEY$ );

   7788  3 002356   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002357   000010 471500                    LDP1    8,,PR0
         3 002360   200120 235100                    LDA     LEVEL#,,AUTO
         3 002361   000001 735000                    ALS     1
         3 002362   100004 720105                    LXL0    4,AL,PR1
         3 002363   000002 100003                    CMPX0   2,DU
         3 002364   002371 601000 3                  TNZ     s:7788+11

   7788  3 002365   100005 473505                    LDP3    5,AL,PR1
         3 002366   300002 634500                    EPPR4   2,,PR3
         3 002367   200137 454500                    STP4    STREAM_CURRENT_KEY$,,AUTO
         3 002370   002373 710000 3                  TRA     s:7797

   7788  3 002371   100005 633505                    EPPR3   5,AL,PR1
         3 002372   200137 453500                    STP3    STREAM_CURRENT_KEY$,,AUTO

     1704     7791
     1705     7792              /*  RGET will check the EOF case; however, for BOF,
     1706     7793                  we check ourselves by having craftily saved away
     1707     7794                  the current key at our current level before the
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:240  
     1708     7795                  RREAD.  If it hasn't changed (or moved forward!),
     1709     7796                  we're at BOF.  */
     1710     7797    4         IF RELATIVE < 0

   7797  3 002373   200132 236100                    LDQ     RELATIVE,,AUTO
         3 002374   002424 605000 3                  TPL     s:7818

     1711     7798    4         THEN
     1712     7799    4   CHECK_FOR_BOF:
     1713     7800    5           DO;

   7800  3 002375                       CHECK_FOR_B* null
     1714     7801                  %GETKEY ( KEY = "RREAD_SAVED_KEY",
     1715     7802                  PTR = RREAD_SAVED_KEY$ );

   7809  3 002375   200006 721100                    LXL1    RREAD_SAVED_KEY,,AUTO
         3 002376   000002 101003                    CMPX1   2,DU
         3 002377   002404 601000 3                  TNZ     s:7809+4

   7809  3 002400   200007 236100                    LDQ     RREAD_SAVED_KEY+1,,AUTO
         3 002401   000002 036003                    ADLQ    2,DU
         3 002402   200125 756100                    STQ     RREAD_SAVED_KEY$,,AUTO
         3 002403   002406 710000 3                  TRA     s:7812

   7809  3 002404   200007 633500                    EPPR3   RREAD_SAVED_KEY+1,,AUTO
         3 002405   200125 453500                    STP3    RREAD_SAVED_KEY$,,AUTO

     1716     7812    5             IF STREAM_CURRENT_KEY$ -> VD$TEXTC.BYTES >=

   7812  3 002406   200137 473500                    LDP3    STREAM_CURRENT_KEY$,,AUTO
         3 002407   300000 236100                    LDQ     0,,PR3
         3 002410   000033 772000                    QRL     27
         3 002411   200125 474500                    LDP4    RREAD_SAVED_KEY$,,AUTO
         3 002412   000000 622006                    EAX2    0,QL
         3 002413   400000 236100                    LDQ     0,,PR4
         3 002414   000033 772000                    QRL     27
         3 002415   000000 623006                    EAX3    0,QL
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:241  
         3 002416   040140 106540                    CMPC    fill='040'O
         3 002417   300000 200012                    ADSC9   0,,PR3                   cn=1,n=*X2
         3 002420   400000 200013                    ADSC9   0,,PR4                   cn=1,n=*X3
         3 002421   002424 602000 3                  TNC     s:7818

     1717     7813    5               RREAD_SAVED_KEY$ -> VD$TEXTC.BYTES
     1718     7814    5             THEN
     1719     7815    5               BOB_EOB_FLAG = %TRUE;

   7815  3 002422   400000 236003                    LDQ     -131072,DU
         3 002423   200106 756100                    STQ     BOB_EOB_FLAG,,AUTO

     1720     7816    5           END CHECK_FOR_BOF;

     1721     7817
     1722     7818    4         IF NOT BOB_EOB_FLAG

   7818  3 002424   200106 234100                    SZN     BOB_EOB_FLAG,,AUTO
         3 002425   002445 604000 3                  TMI     s:7831

     1723     7819    4         THEN
     1724     7820    5           DO;

     1725     7821    5             CALL VDE$RGET ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,

   7821  3 002426   000012 473500                    LDP3    10,,PR0
         3 002427   200052 634500                    EPPR4   RGET_NODE_DESC,,AUTO
         3 002430   200156 454500                    STP4    @LOCATION+6,,AUTO
         3 002431   300003 635500                    EPPR5   3,,PR3
         3 002432   200155 455500                    STP5    @LOCATION+5,,AUTO
         3 002433   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 002434   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 002435   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 002436   000000 701000 xent               TSX1    VDE$RGET
         3 002437   002503 702000 3                  TSX2    RETALT

     1726     7822    5               WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:242  
     1727     7823    5               RGET_NODE_DESC )
     1728     7824    5               ALTRET (RETALT);
     1729     7825
     1730     7826    5             IF RGET_NODE_DESC.KEY = %CLEAR

   7826  3 002440   200052 237100                    LDAQ    RGET_NODE_DESC,,AUTO
         3 002441   000012 117000 4                  CMPAQ   10
         3 002442   002445 601000 3                  TNZ     s:7831

     1731     7827    5             THEN
     1732     7828    5               BOB_EOB_FLAG = %TRUE;

   7828  3 002443   400000 236003                    LDQ     -131072,DU
         3 002444   200106 756100                    STQ     BOB_EOB_FLAG,,AUTO

     1733     7829    5           END;

     1734     7830
     1735     7831    4         IF BOB_EOB_FLAG

   7831  3 002445   200106 234100                    SZN     BOB_EOB_FLAG,,AUTO
         3 002446   002452 605000 3                  TPL     WRITE_WRITE

     1736     7832    4         THEN
     1737     7833    4   WEOF_WEOF:
     1738     7834    5           DO;

   7834  3 002447                       WEOF_WEOF    null
     1739     7835    5             CALL WEOF_VDH

   7835  3 002447   002505 701000 3                  TSX1    WEOF_VDH
         3 002450   002503 702000 3                  TSX2    RETALT

     1740     7836    5               ALTRET (RETALT);
     1741     7837    5             EXIT SCROLL_N_RECORDS;

   7837  3 002451   002475 710000 3                  TRA     s:7857
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:243  

     1742     7838    5           END WEOF_WEOF;
     1743     7839    4         ELSE
     1744     7840    4   WRITE_WRITE:
     1745     7841    5           DO;

   7841  3 002452                       WRITE_WRITE  null
     1746     7842    5             CALL WRITE_VDH

   7842  3 002452   002550 701000 3                  TSX1    WRITE_VDH
         3 002453   002503 702000 3                  TSX2    RETALT

     1747     7843    5               ALTRET (RETALT);
     1748     7844    5           END WRITE_WRITE;

     1749     7845
     1750     7846    4         LOCATION$ = ADDR (NIL);

   7846  3 002454   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 002455   200124 756100                    STQ     LOCATION$,,AUTO

     1751     7847
     1752     7848    4         IF RELATIVE < 0

   7848  3 002456   200132 235100                    LDA     RELATIVE,,AUTO
         3 002457   002467 605000 3                  TPL     s:7855

     1753     7849    4         THEN
     1754     7850    5           DO;

     1755     7851    5             RREAD_SAVED_KEY = WINDOW$SPEC.OPERAND.STREAM$ ->

   7851  3 002460   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002461   000010 471500                    LDP1    8,,PR0
         3 002462   200120 235100                    LDA     LEVEL#,,AUTO
         3 002463   000003 735000                    ALS     3
         3 002464   000100 100505                    MLR     fill='000'O
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:244  
         3 002465   100004 000010                    ADSC9   4,A,PR1                  cn=0,n=8
         3 002466   200006 000010                    ADSC9   RREAD_SAVED_KEY,,AUTO    cn=0,n=8

     1756     7852    5               VD$STREAM.CURRENT.KEY ( LEVEL# - 1 );
     1757     7853    5           END;

     1758     7854
     1759     7855    4       END SCROLL_N_RECORDS;

   7855  3 002467   200133 235100                    LDA     SCROLL_INDEX,,AUTO
         3 002470   000001 035007                    ADLA    1,DL
         3 002471   200133 755100                    STA     SCROLL_INDEX,,AUTO
         3 002472   200135 236100                    LDQ     SCROLL_LIMIT,,AUTO
         3 002473   200133 116100                    CMPQ    SCROLL_INDEX,,AUTO
         3 002474   002337 603000 3                  TRC     s:7771

     1760     7856
     1761     7857    3       IF DONT_FORGET_TO_WEOF

   7857  3 002475   200112 234100                    SZN     DONT_FORGET_TO_WEOF,,AUTO
         3 002476   002501 605000 3                  TPL     s:7862

     1762     7858    3       THEN
     1763     7859    3         CALL WEOF_VDH

   7859  3 002477   002505 701000 3                  TSX1    WEOF_VDH
         3 002500   002503 702000 3                  TSX2    RETALT

     1764     7860    3           ALTRET (RETALT);
     1765     7861
     1766     7862    3       RETURN;

   7862  3 002501   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 002502   000001 702211                    TSX2  ! 1,X1

   7857  3 002503                       RETALT       null
     1767     7863
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:245  
     1768     7864    3   RETALT: ;
     1769     7865    3   CANT_READ_FILE:
     1770     7866    3       ALTRETURN;

   7866  3 002503   200146 221300       CANT_READ_F* LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 002504   000000 702211                    TSX2  ! 0,X1

     1771     7867
     1772     7868        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:246  
     1773     7869    3   WEOF_VDH: PROC ALTRET;

   7869  3 002505   200150 741300       WEOF_VDH     STX1  ! @LOCATION,,AUTO

     1774     7870
     1775     7871    4       IF RELATIVE < 0

   7871  3 002506   200132 235100                    LDA     RELATIVE,,AUTO
         3 002507   002514 605000 3                  TPL     s:7875

     1776     7872    4       THEN
     1777     7873    4         WINDOW$SPEC.BOB_DISPLAYED = %TRUE;

   7873  3 002510   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002511   400000 236003                    LDQ     -131072,DU
         3 002512   000015 256100                    ORSQ    13,,PR0
         3 002513   002517 710000 3                  TRA     s:7877

     1778     7874    4       ELSE
     1779     7875    4         WINDOW$SPEC.EOB_DISPLAYED = %TRUE;

   7875  3 002514   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002515   200000 236003                    LDQ     65536,DU
         3 002516   000015 256100                    ORSQ    13,,PR0

     1780     7876
     1781     7877    4       FPT_WEOF.V.DCB# = WINDOW$SPEC.DCB#;

   7877  3 002517   000014 720100                    LXL0    12,,PR0
         3 002520   000066 740000 1                  STX0    FPT_WEOF+2

     1782     7878
     1783     7879    4       IF VD_$$MON_PRES.V# > 0

   7879  3 002521   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         3 002522   002534 604400 3                  TMOZ    s:7884

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:247  
     1784     7880    4       THEN
     1785     7881    4         CALL VDG$MPRES_FEPWEOF ( WINDOW$SPEC.DCB#,

   7881  3 002523   200132 631500                    EPPR1   RELATIVE,,AUTO
         3 002524   200155 451500                    STP1    @LOCATION+5,,AUTO
         3 002525   200107 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         3 002526   000002 036000 4                  ADLQ    2
         3 002527   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 002530   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 002531   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 002532   000000 701000 xent               TSX1    VDG$MPRES_FEPWEOF
         3 002533   000000 011000                    NOP     0

     1786     7882    4           RELATIVE );
     1787     7883
     1788     7884    4       CALL M$WEOF ( FPT_WEOF )

   7884  3 002534   000064 630400 1                  EPPR0   FPT_WEOF
         3 002535   440007 713400                    CLIMB   alt,+16391
         3 002536   400000 401760                    pmme    nvectors=1
         3 002537   002541 702000 3                  TSX2    s:7887
         3 002540   002546 710000 3                  TRA     s:7891

     1789     7885    4       WHENALTRETURN
     1790     7886    5         DO;

     1791     7887    5           CALL VDG$MONERR;

   7887  3 002541   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 002542   000000 701000 xent               TSX1    VDG$MONERR
         3 002543   000000 011000                    NOP     0

     1792     7888    5           ALTRETURN;

   7888  3 002544   200150 221300                    LDX1  ! @LOCATION,,AUTO
         3 002545   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:248  
     1793     7889    5         END;
     1794     7890
     1795     7891    4       RETURN;

   7891  3 002546   200150 221300                    LDX1  ! @LOCATION,,AUTO
         3 002547   000001 702211                    TSX2  ! 1,X1

     1796     7892
     1797     7893    4   END WEOF_VDH;
     1798     7894        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:249  
     1799     7895    3   WRITE_VDH: PROC ALTRET;

   7895  3 002550   200150 741300       WRITE_VDH    STX1  ! @LOCATION,,AUTO

     1800     7896
     1801     7897    4       IF RGET_NODE_DESC.DATA$ -> VD$BUFFER.LENGTH# = 0

   7897  3 002551   200056 470500                    LDP0    RGET_NODE_DESC+4,,AUTO
         3 002552   000002 220100                    LDX0    2,,PR0
         3 002553   002557 601000 3                  TNZ     s:7901

     1802     7898    4       THEN
     1803     7899    4         FPT_WRITE.BUF_ = VECTOR (NIL);

   7899  3 002554   000032 237000 4                  LDAQ    26
         3 002555   000074 757000 1                  STAQ    FPT_WRITE+4
         3 002556   002565 710000 3                  TRA     s:7903

     1804     7900    4       ELSE
     1805     7901    4         FPT_WRITE.BUF_ = VECTOR ( RGET_NODE_DESC.DATA$ -> VD$BUFFER.BYTES );

   7901  3 002557   000000 635010                    EAA     0,X0
         3 002560   000002 731000                    ARS     2
         3 002561   000140 135007                    SBLA    96,DL
         3 002562   200056 236100                    LDQ     RGET_NODE_DESC+4,,AUTO
         3 002563   000034 036000 4                  ADLQ    28
         3 002564   000074 757000 1                  STAQ    FPT_WRITE+4

     1806     7902
     1807     7903    4       IF VDP_NODE_DESC.KEY.TYPE# ~= %KT_STRING

   7903  3 002565   000000 220000 xsym               LDX0    VDP_NODE_DESC
         3 002566   000002 100003                    CMPX0   2,DU
         3 002567   002575 600000 3                  TZE     s:7910

     1808     7904    4       THEN
     1809     7905    5         DO;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:250  

     1810     7906    5           FEP_WRITE_NUMERIC_KEY = STREAM_CURRENT_KEY$ -> VD$TEXTC_NUMBER.BYTES#;

   7906  3 002570   200137 471500                    LDP1    STREAM_CURRENT_KEY$,,AUTO
         3 002571   100000 236100                    LDQ     0,,PR1
         3 002572   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 002573   200105 756100                    STQ     FEP_WRITE_NUMERIC_KEY,,AUTO

     1811     7907    5         END;

   7907  3 002574   002602 710000 3                  TRA     s:7914

     1812     7908    4       ELSE
     1813     7909    5         DO;

     1814     7910    5           FEP_WRITE_NUMERIC_KEY = FEP_READ_RETURN_KEY;

   7910  3 002575   200117 235100                    LDA     FEP_READ_RETURN_KEY,,AUTO
         3 002576   200105 755100                    STA     FEP_WRITE_NUMERIC_KEY,,AUTO

     1815     7911    5           FEP_READ_RETURN_KEY = FEP_READ_RETURN_KEY + RELATIVE;

   7911  3 002577   200117 236100                    LDQ     FEP_READ_RETURN_KEY,,AUTO
         3 002600   200132 036100                    ADLQ    RELATIVE,,AUTO
         3 002601   200117 756100                    STQ     FEP_READ_RETURN_KEY,,AUTO

     1816     7912    5         END;

     1817     7913
     1818     7914    4       FPT_WRITE.KEY_ = VECTOR ( FEP_WRITE_NUMERIC_KEY );

   7914  3 002602   777640 235007                    LDA     -96,DL
         3 002603   200154 452500                    STP2    @LOCATION+4,,AUTO
         3 002604   200154 236100                    LDQ     @LOCATION+4,,AUTO
         3 002605   000105 036003                    ADLQ    69,DU
         3 002606   000072 757000 1                  STAQ    FPT_WRITE+2

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:251  
     1819     7915    4       FPT_WRITE.V.DCB# = WINDOW$SPEC.DCB#;

   7915  3 002607   200107 471500                    LDP1    CURRENT_WINDOW$,,AUTO
         3 002610   100014 722100                    LXL2    12,,PR1
         3 002611   000100 742000 1                  STX2    FPT_WRITE+8

     1820     7916
     1821     7917    4       IF VD_$$MON_PRES.V# > 0

   7917  3 002612   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         3 002613   002632 604400 3                  TMOZ    s:7923

     1822     7918    4       THEN
     1823     7919    4         CALL VDG$MPRES_FEPWRITE ( WINDOW$SPEC.DCB#,

   7919  3 002614   100010 473500                    LDP3    8,,PR1
         3 002615   200052 634500                    EPPR4   RGET_NODE_DESC,,AUTO
         3 002616   200156 454500                    STP4    @LOCATION+6,,AUTO
         3 002617   200120 235100                    LDA     LEVEL#,,AUTO
         3 002620   000001 735000                    ALS     1
         3 002621   300004 635505                    EPPR5   4,AL,PR3
         3 002622   200155 455500                    STP5    @LOCATION+5,,AUTO
         3 002623   200107 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         3 002624   000002 036000 4                  ADLQ    2
         3 002625   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 002626   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 002627   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 002630   000000 701000 xent               TSX1    VDG$MPRES_FEPWRITE
         3 002631   000000 011000                    NOP     0

     1824     7920    4           WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY ( LEVEL# - 1 ),
     1825     7921    4           RGET_NODE_DESC );
     1826     7922
     1827     7923    4       CALL M$WRITE ( FPT_WRITE )

   7923  3 002632   000070 630400 1                  EPPR0   FPT_WRITE
         3 002633   440001 713400                    CLIMB   alt,write
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:252  
         3 002634   401400 401760                    pmme    nvectors=4
         3 002635   002637 702000 3                  TSX2    s:7926
         3 002636   002644 710000 3                  TRA     s:7931

     1828     7924    4       WHENALTRETURN
     1829     7925    5         DO;

     1830     7926    5           CALL VDG$MONERR;

   7926  3 002637   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 002640   000000 701000 xent               TSX1    VDG$MONERR
         3 002641   000000 011000                    NOP     0

   7926  3 002642                       RETALT       null
     1831     7927    5   RETALT: ;
     1832     7928    5           ALTRETURN;

   7928  3 002642   200150 221300                    LDX1  ! @LOCATION,,AUTO
         3 002643   000000 702211                    TSX2  ! 0,X1

     1833     7929    5         END;
     1834     7930
     1835     7931    4       WINDOW$SPEC.SCREEN_UPDATED = %FALSE;

   7931  3 002644   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002645   000005 236000 4                  LDQ     5
         3 002646   000015 356100                    ANSQ    13,,PR0

     1836     7932
     1837     7933    4       IF RELATIVE < 0

   7933  3 002647   200132 235100                    LDA     RELATIVE,,AUTO
         3 002650   002670 605000 3                  TPL     s:7941

     1838     7934    4       THEN
     1839     7935    4         CALL VDP$WSCROLL_DOWN ( WINDOW$SPEC,

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:253  
   7935  3 002651   000010 471500                    LDP1    8,,PR0
         3 002652   200056 236100                    LDQ     RGET_NODE_DESC+4,,AUTO
         3 002653   000001 235000 xsym               LDA     B_VECTNIL+1
         3 002654   200156 757100                    STAQ    @LOCATION+6,,AUTO
         3 002655   200120 235100                    LDA     LEVEL#,,AUTO
         3 002656   000001 735000                    ALS     1
         3 002657   100004 633505                    EPPR3   4,AL,PR1
         3 002660   200155 453500                    STP3    @LOCATION+5,,AUTO
         3 002661   200107 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         3 002662   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 002663   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 002664   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 002665   000000 701000 xent               TSX1    VDP$WSCROLL_DOWN
         3 002666   002642 702000 3                  TSX2    RETALT
         3 002667   002706 710000 3                  TRA     s:7949

     1840     7936    4           WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY ( LEVEL# - 1 ),
     1841     7937    4           /* no scroll_spec */,
     1842     7938    4           RGET_NODE_DESC.DATA$ -> VD$BUFFER )
     1843     7939    4           ALTRET (RETALT);
     1844     7940    4       ELSE
     1845     7941    4         CALL VDP$WSCROLL_UP ( WINDOW$SPEC,

   7941  3 002670   000010 471500                    LDP1    8,,PR0
         3 002671   200056 236100                    LDQ     RGET_NODE_DESC+4,,AUTO
         3 002672   000001 235000 xsym               LDA     B_VECTNIL+1
         3 002673   200156 757100                    STAQ    @LOCATION+6,,AUTO
         3 002674   200120 235100                    LDA     LEVEL#,,AUTO
         3 002675   000001 735000                    ALS     1
         3 002676   100004 633505                    EPPR3   4,AL,PR1
         3 002677   200155 453500                    STP3    @LOCATION+5,,AUTO
         3 002700   200107 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         3 002701   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 002702   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 002703   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 002704   000000 701000 xent               TSX1    VDP$WSCROLL_UP
         3 002705   002642 702000 3                  TSX2    RETALT
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:254  

     1846     7942    4           WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY ( LEVEL# - 1 ),
     1847     7943    4           /* no scroll_spec */,
     1848     7944    4           RGET_NODE_DESC.DATA$ -> VD$BUFFER,
     1849     7945    4           /* no deletion_first_key */,
     1850     7946    4           /* no deletion_last_key */ )
     1851     7947    4           ALTRET (RETALT);
     1852     7948
     1853     7949    4       RETURN;

   7949  3 002706   200150 221300                    LDX1  ! @LOCATION,,AUTO
         3 002707   000001 702211                    TSX2  ! 1,X1

     1854     7950
     1855     7951    4   END WRITE_VDH;
     1856     7952
     1857     7953    3   END COMPLETION_RECORDS_NEEDED;
     1858     7954
     1859     7955    2   END PRESENTER_IN_2_D;
     1860     7956
     1861     7957        %BOX ( TITLE = "Common subroutines to 1D & 2D Presenters", PAGE = YES );
              7965    2
              7969    2   /***************************************************************************
              7971    2    *                                                                         *
              7975    2            *                  Common subroutines to 1D & 2D Presenters              *
              7977    2            *                                                                        *
              7979    2          ***************************************************************************/

     1862     7983    1   ALLOCATE_NECESSARY_OBJECTS: PROC ALTRET;

   7983  3 002710   200146 741300       ALLOCATE_NE* STX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO

     1863     7984
     1864     7985    2       IF VDP_BUFFER$ = ADDR (NIL)

   7985  3 002711   000104 236000 1                  LDQ     VDP_BUFFER$
         3 002712   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:255  
         3 002713   002723 601000 3                  TNZ     s:8001

     1865     7986    2       THEN
     1866     7987    2   ALLOC_A_BUFFER:
     1867     7988    3         DO;

   7988  3 002714                       ALLOC_A_BUF* null
     1868     7989    3           CALL VDG$OALLOC ( %CLS_BUFFER,

   7989  3 002714   000036 630400 4                  EPPR0   30
         3 002715   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 002716   000000 701000 xent               TSX1    VDG$OALLOC
         3 002717   002721 702000 3                  TSX2    s:7997
         3 002720   002723 710000 3                  TRA     s:8001

     1869     7990    3             VDP_BUFFER$,
     1870     7991    3             ( SIZEC ( VD$BUFFER_HEADER )
     1871     7992    3             + %MXNB_DATA
     1872     7993    3             + ( %NB_PER_WORD - 1 ) )
     1873     7994    3             / %NB_PER_WORD )
     1874     7995    3           WHENALTRETURN
     1875     7996    4             DO;

     1876     7997    4               ALTRETURN;

   7997  3 002721   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 002722   000000 702211                    TSX2  ! 0,X1

     1877     7998    4             END;
     1878     7999    3         END ALLOC_A_BUFFER;

     1879     8000
     1880     8001    2       VDP_NODE_DESC.DATA$ = VDP_BUFFER$;

   8001  3 002723   000104 236000 1                  LDQ     VDP_BUFFER$
         3 002724   000004 756000 xsym               STQ     VDP_NODE_DESC+4

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:256  
     1881     8002    2       VDP_BUFFER$ -> VD$BUFFER.LENGTH# = %MXNB_DATA;

   8002  3 002725   004000 220003                    LDX0    2048,DU
         3 002726   000104 470400 1                  LDP0    VDP_BUFFER$
         3 002727   000002 740100                    STX0    2,,PR0

     1882     8003    2       FPT_READ.BUF_ = VECTOR ( VDP_BUFFER$ -> VD$BUFFER.BYTES );

   8003  3 002730   000104 470400 1                  LDP0    VDP_BUFFER$
         3 002731   000002 221100                    LDX1    2,,PR0
         3 002732   000000 635011                    EAA     0,X1
         3 002733   000002 731000                    ARS     2
         3 002734   000140 135007                    SBLA    96,DL
         3 002735   000104 236000 1                  LDQ     VDP_BUFFER$
         3 002736   000034 036000 4                  ADLQ    28
         3 002737   000004 757000 1                  STAQ    FPT_READ+4

     1883     8004
     1884     8005    2       IF VDP_KEY$ = ADDR (NIL)

   8005  3 002740   000105 236000 1                  LDQ     VDP_KEY$
         3 002741   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 002742   002752 601000 3                  TNZ     s:8020

     1885     8006    2       THEN
     1886     8007    2   ALLOC_A_KEY:
     1887     8008    3         DO;

   8008  3 002743                       ALLOC_A_KEY  null
     1888     8009    3           CALL VDG$OALLOC ( %CLS_TEXTC_REMOTE,

   8009  3 002743   000043 630400 4                  EPPR0   35
         3 002744   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 002745   000000 701000 xent               TSX1    VDG$OALLOC
         3 002746   002750 702000 3                  TSX2    s:8016
         3 002747   002752 710000 3                  TRA     s:8020

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:257  
     1889     8010    3             VDP_KEY$,
     1890     8011    3             ( %MXNB_KEY
     1891     8012    3             + ( %NB_PER_WORD - 1 ) )
     1892     8013    3             / %NB_PER_WORD )
     1893     8014    3           WHENALTRETURN
     1894     8015    4             DO;

     1895     8016    4               ALTRETURN;

   8016  3 002750   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 002751   000000 702211                    TSX2  ! 0,X1

     1896     8017    4             END;
     1897     8018    3         END ALLOC_A_KEY;

     1898     8019
     1899     8020    2       VDP_NODE_DESC.KEY.REP# = %REP_REMOTE;

   8020  3 002752   000002 220003                    LDX0    2,DU
         3 002753   000000 440000 xsym               SXL0    VDP_NODE_DESC

     1900     8021    2       VDP_NODE_DESC.KEY.TYPE# = WINDOW$SPEC.OPERAND.STREAM$ ->

   8021  3 002754   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002755   000010 471500                    LDP1    8,,PR0
         3 002756   100001 473500                    LDP3    1,,PR1
         3 002757   200120 236100                    LDQ     LEVEL#,,AUTO
         3 002760   000007 402007                    MPY     7,DL
         3 002761   300023 721106                    LXL1    19,QL,PR3
         3 002762   000000 741000 xsym               STX1    VDP_NODE_DESC

     1901     8022    2         VD$STREAM.PORT$ -> VD$PORT.LEVEL.KEY_TYPE# ( LEVEL# );
     1902     8023    2       VDP_NODE_DESC.KEY.V$ = VDP_KEY$;

   8023  3 002763   000105 236000 1                  LDQ     VDP_KEY$
         3 002764   000001 756000 xsym               STQ     VDP_NODE_DESC+1

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:258  
     1903     8024    2       FPT_READ.KEY_ = VECTOR

   8024  3 002765   777640 235007                    LDA     -96,DL
         3 002766   000002 036003                    ADLQ    2,DU
         3 002767   000002 757000 1                  STAQ    FPT_READ+2

     1904     8025    2         ( ADDR (VDP_KEY$ -> VD$TEXTC_REMOTE.LENGTH# ) -> FEP$READ_KEY );
     1905     8026
     1906     8027    2       RETURN;

   8027  3 002770   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 002771   000001 702211                    TSX2  ! 1,X1

     1907     8028
     1908     8029    2   END ALLOCATE_NECESSARY_OBJECTS;
     1909     8030        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:259  
     1910     8031    1   COMPLETION_INSERT_NO_ROOM: PROC ALTRET;

   8031  3 002772   200146 741300       COMPLETION_* STX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO

     1911     8032
     1912     8033            /*  That's a fine mess you've gotten me into....  */
     1913     8034    3       IF WINDOW$SPEC.EDTCTL.KEY_INCR# = 65535 THEN DO;

   8034  3 002773   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 002774   000023 720100                    LXL0    19,,PR0
         3 002775   177777 100003                    CMPX0   65535,DU
         3 002776   003010 601000 3                  TNZ     s:8040

     1914     8035    4           CALL VDG$ERRMSG (%E$CANT_GENERATE_KEY) WHENRETURN DO;

   8035  3 002777   000046 630400 4                  EPPR0   38
         3 003000   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 003001   000000 701000 xent               TSX1    VDG$ERRMSG
         3 003002   003006 702000 3                  TSX2    s:8038

     1915     8036    4               VD_6E.ERR_TAIL$ -> VD$ERR.DCB# = FPT_READ.V.DCB#;

   8036  3 003003   000010 220000 1                  LDX0    FPT_READ+8
         3 003004   000032 470400 xsym               LDP0    VD_6E+26
         3 003005   000004 740100                    STX0    4,,PR0

     1916     8037    4             END;

     1917     8038    3           ALTRETURN;

   8038  3 003006   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 003007   000000 702211                    TSX2  ! 0,X1

     1918     8039    3         END;
     1919     8040    2       RECORD_SET_RANGE = %CLEAR;

   8040  3 003010   000100 100400                    MLR     fill='000'O
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:260  
         3 003011   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 003012   200030 000110                    ADSC9   RECORD_SET_RANGE,,AUTO   cn=0,n=72

     1920     8041    2       WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_INITIAL;

   8041  3 003013   000013 471500                    LDP1    11,,PR0
         3 003014   000001 220003                    LDX0    1,DU
         3 003015   100070 740100                    STX0    56,,PR1

     1921     8042    2       WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.POSITION# = -1;

   8042  3 003016   000013 471500                    LDP1    11,,PR0
         3 003017   777777 221003                    LDX1    -1,DU
         3 003020   100034 741100                    STX1    28,,PR1

     1922     8043    2       CALL UPDATE_SELECTEDBLOCK_TO_CURSOR;

   8043  3 003021   003630 701000 3                  TSX1    UPDATE_SELECTEDBLOCK_TO_CURSOR
         3 003022   000000 011000                    NOP     0

     1923     8044    2       CALL VDI$BSPLIT ( RECORD_SET_RANGE, ,

   8044  3 003023   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 003024   000013 471500                    LDP1    11,,PR0
         3 003025   000010 473500                    LDP3    8,,PR0
         3 003026   200157 453500                    STP3    @LOCATION+7,,AUTO
         3 003027   100024 634500                    EPPR4   20,,PR1
         3 003030   200156 454500                    STP4    @LOCATION+6,,AUTO
         3 003031   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 003032   200155 756100                    STQ     @LOCATION+5,,AUTO
         3 003033   200030 631500                    EPPR1   RECORD_SET_RANGE,,AUTO
         3 003034   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 003035   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 003036   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 003037   000000 701000 xent               TSX1    VDI$BSPLIT
         3 003040   003042 702000 3                  TSX2    s:8047
         3 003041   003044 710000 3                  TRA     s:8049
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:261  

     1924     8045    2         WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE,
     1925     8046    2         WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM)
     1926     8047    3       WHENALTRETURN DO; ALTRETURN; END;

   8047  3 003042   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 003043   000000 702211                    TSX2  ! 0,X1

     1927     8048
     1928     8049    2       CALL VDA$PFLUSH ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.PORT$ -> VD$PORT,

   8049  3 003044   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 003045   000010 471500                    LDP1    8,,PR0
         3 003046   100001 473500                    LDP3    1,,PR1
         3 003047   000006 236000 4                  LDQ     6
         3 003050   200155 756100                    STQ     @LOCATION+5,,AUTO
         3 003051   200154 453500                    STP3    @LOCATION+4,,AUTO
         3 003052   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 003053   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003054   000000 701000 xent               TSX1    VDA$PFLUSH
         3 003055   000000 011000                    NOP     0

     1929     8050    2         %TO_PRESENTER ); /* We ARE the presenter, but VDI$BSPLIT is not. */
     1930     8051
     1931     8052    2       IF WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.POSITION# >=

   8052  3 003056   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 003057   000013 471500                    LDP1    11,,PR0
         3 003060   000003 473400 4                  LDP3    3
         3 003061   300000 474500                    LDP4    0,,PR3
         3 003062   000014 720100                    LXL0    12,,PR0
         3 003063   400000 475510                    LDP5    0,X0,PR4
         3 003064   100034 236100                    LDQ     28,,PR1
         3 003065   000022 732000                    QRS     18
         3 003066   500000 116100                    CMPQ    0,,PR5
         3 003067   003074 605000 3                  TPL     s:8055
         3 003070   500003 236100                    LDQ     3,,PR5
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:262  
         3 003071   000777 376007                    ANQ     511,DL
         3 003072   000040 116007                    CMPQ    32,DL
         3 003073   003112 601000 3                  TNZ     s:8063

     1932     8053    2         DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS#
     1933     8054    3         OR DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMCHAR# = ' ' THEN DO;

     1934     8055    3           IF DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.EOMCHAR# = ' ' THEN

   8055  3 003074   500003 236100                    LDQ     3,,PR5
         3 003075   000777 376007                    ANQ     511,DL
         3 003076   000040 116007                    CMPQ    32,DL
         3 003077   003107 601000 3                  TNZ     s:8060

     1935     8056        /* Wordwrap split - positions to the end of the new record */
     1936     8057    3             WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD.POSITION# =

   8057  3 003100   500057 236100                    LDQ     47,,PR5
         3 003101   777777 376007                    ANQ     -1,DL
         3 003102   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 003103   500000 236100                    LDQ     0,,PR5
         3 003104   200154 136100                    SBLQ    @LOCATION+4,,AUTO
         3 003105   000001 620006                    EAX0    1,QL
         3 003106   100045 740100                    STX0    37,,PR1

     1937     8058    3               DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS# -
     1938     8059    3               DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ACTPOS + 1;
     1939     8060    3           WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_END;

   8060  3 003107   000013 471500                    LDP1    11,,PR0
         3 003110   000003 220003                    LDX0    3,DU
         3 003111   100070 740100                    STX0    56,,PR1

     1940     8061    3         END;

     1941     8062
     1942     8063    2   END COMPLETION_INSERT_NO_ROOM;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:263  

   8063  3 003112   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 003113   000001 702211                    TSX2  ! 1,X1

     1943     8064        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:264  
     1944     8065    1   COMPLETION_NORMAL: PROC ALTRET;

   8065  3 003114   200146 741300       COMPLETION_* STX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO

     1945     8066
     1946     8067        /*I*  NAME:         COMPLETION_NORMAL
     1947     8068              PURPOSE:      Handle normal screen M$READ completions for both 1Dim
     1948     8069                              and 2Dim reads.
     1949     8070              PARAMETERS:   None.
     1950     8071              DATA:         FPT_READ.BUF_ = the inserted or replaced record;
     1951     8072                            FPT_READ.KEY_ = the key of the inserted or replaced record.
     1952     8073              DESCRIPTION:  o CALL VDE$RPUT, telling it not to generate any key,
     1953     8074                              and giving it the key from FPT_READ.KEY_.
     1954     8075                            o CALL VDA$PFLUSH to force immediate update to the
     1955     8076                              file/presenter.  The "originator" flag in the call
     1956     8077                              is set to "presenter".
     1957     8078                              Note:  the call to VDA$PFLUSH would normally
     1958     8079                                     result in a call to VDn$RREPLACE for this
     1959     8080                                     record; however, the "originator" flag tells
     1960     8081                                     the accessor to suppress the call.
     1961     8082                            o Determine if the replaced record is within the
     1962     8083                              displayed range of any other editing window.
     1963     8084                              If it is, tell VDH about the new record data for
     1964     8085                              each window it should be displayed in.
     1965     8086                            o Read again from the window.
     1966     8087        */
     1967     8088
     1968     8089    2       IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT

   8089  3 003115   000003 235000 xsym               LDA     VD_$SCREEN+3
         3 003116   000003 115007                    CMPA    3,DL
         3 003117   003121 605000 3                  TPL     ADJUST_WINDOWS_IN_2D

     1969     8090    2       THEN
     1970     8091    2   ADJUST_WINDOWS_IN_1D:
     1971     8092    3         DO;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:265  
   8092  3 003120                       ADJUST_WIND* null
     1972     8093    3         END ADJUST_WINDOWS_IN_1D;

   8093  3 003120   003222 710000 3                  TRA     BEFORE_THE_RPUT

     1973     8094    2       ELSE
     1974     8095    2   ADJUST_WINDOWS_IN_2D:
     1975     8096    3         DO;

   8096  3 003121                       ADJUST_WIND* null
     1976     8097    3   FIND_JUST_READ_KEY:
     1977     8098    3           DO RECORD_SET_INDEX = 0
     1978     8099    4             TO WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# - 1;

   8099  3 003121   200127 450100       FIND_JUST_R* STZ     RECORD_SET_INDEX,,AUTO
         3 003122   003175 710000 3                  TRA     s:8126+3

     1979     8100
     1980     8101                  %GETKEY ( KEY = "WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY",
     1981     8102                  INDX = RECORD_SET_INDEX,
     1982     8103                  PTR = RECORD_SET_KEY$ );

   8110  3 003123   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 003124   000016 471500                    LDP1    14,,PR0
         3 003125   200127 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         3 003126   000006 402007                    MPY     6,DL
         3 003127   100003 720106                    LXL0    3,QL,PR1
         3 003130   000002 100003                    CMPX0   2,DU
         3 003131   003136 601000 3                  TNZ     s:8110+11

   8110  3 003132   100004 473506                    LDP3    4,QL,PR1
         3 003133   300002 634500                    EPPR4   2,,PR3
         3 003134   200130 454500                    STP4    RECORD_SET_KEY$,,AUTO
         3 003135   003140 710000 3                  TRA     s:8114

   8110  3 003136   100004 633506                    EPPR3   4,QL,PR1
         3 003137   200130 453500                    STP3    RECORD_SET_KEY$,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:266  

     1983     8113
     1984     8114    4             IF RECORD_SET_KEY$ -> VD$TEXTC = FEP_READ_RETURN_KEY$ -> VD$TEXTC

   8114  3 003140   200130 473500                    LDP3    RECORD_SET_KEY$,,AUTO
         3 003141   300000 236100                    LDQ     0,,PR3
         3 003142   000033 772000                    QRL     27
         3 003143   000001 620006                    EAX0    1,QL
         3 003144   200116 474500                    LDP4    FEP_READ_RETURN_KEY$,,AUTO
         3 003145   400000 236100                    LDQ     0,,PR4
         3 003146   000033 772000                    QRL     27
         3 003147   000001 621006                    EAX1    1,QL
         3 003150   000140 106540                    CMPC    fill='000'O
         3 003151   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         3 003152   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
         3 003153   003172 601000 3                  TNZ     s:8126

     1985     8115    4             THEN
     1986     8116    4   CHECK_FOR_CHANGE:
     1987     8117    5               DO;

   8117  3 003154                       CHECK_FOR_C* null
     1988     8118    5                 IF ((WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.DATA$ (
              8118                          RECORD_SET_INDEX ) -> VD$BUFFER.BYTES =

   8118  3 003154   200127 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         3 003155   000006 402007                    MPY     6,DL
         3 003156   100007 475506                    LDP5    7,QL,PR1
         3 003157   500002 222100                    LDX2    2,,PR5
         3 003160   000004 476400 xsym               LDP6    VDP_NODE_DESC+4
         3 003161   600002 223100                    LDX3    2,,PR6
         3 003162   040140 106540                    CMPC    fill='040'O
         3 003163   500002 400012                    ADSC9   2,,PR5                   cn=2,n=*X2
         3 003164   600002 400013                    ADSC9   2,,PR6                   cn=2,n=*X3
         3 003165   003172 601000 3                  TNZ     s:8126
         3 003166   600002 102100                    CMPX2   2,,PR6
         3 003167   003172 601000 3                  TNZ     s:8126
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:267  

     1989     8119    5                   VDP_NODE_DESC.DATA$ -> VD$BUFFER.BYTES) AND
     1990     8120    5                   (WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.DATA$ (
              8120                            RECORD_SET_INDEX) -> VD$BUFFER.LENGTH# =
     1991     8121    5                   VDP_NODE_DESC.DATA$-> VD$BUFFER.LENGTH#))
     1992     8122    5                 THEN
     1993     8123    5                   RETURN;

   8123  3 003170   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 003171   000001 702211                    TSX2  ! 1,X1

     1994     8124    5               END CHECK_FOR_CHANGE;
     1995     8125
     1996     8126    4           END FIND_JUST_READ_KEY;

   8126  3 003172   200127 235100                    LDA     RECORD_SET_INDEX,,AUTO
         3 003173   000001 035007                    ADLA    1,DL
         3 003174   200127 755100                    STA     RECORD_SET_INDEX,,AUTO
         3 003175   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 003176   000016 471500                    LDP1    14,,PR0
         3 003177   100002 236100                    LDQ     2,,PR1
         3 003200   000022 732000                    QRS     18
         3 003201   003205 604000 3                  TMI     s:8128
         3 003202   200127 116100                    CMPQ    RECORD_SET_INDEX,,AUTO
         3 003203   003205 600000 3                  TZE     s:8128
         3 003204   003123 603000 3                  TRC     s:8110

     1997     8127
     1998     8128    3           CALL VDP$WSCROLL_DOWN ( WINDOW$SPEC,

   8128  3 003205   000004 236000 xsym               LDQ     VDP_NODE_DESC+4
         3 003206   000001 235000 xsym               LDA     B_VECTNIL+1
         3 003207   200156 757100                    STAQ    @LOCATION+6,,AUTO
         3 003210   000001 236000 4                  LDQ     1
         3 003211   200107 235100                    LDA     CURRENT_WINDOW$,,AUTO
         3 003212   200154 757100                    STAQ    @LOCATION+4,,AUTO
         3 003213   200154 630500                    EPPR0   @LOCATION+4,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:268  
         3 003214   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 003215   000000 701000 xent               TSX1    VDP$WSCROLL_DOWN
         3 003216   003220 702000 3                  TSX2    s:8134
         3 003217   003222 710000 3                  TRA     BEFORE_THE_RPUT

     1999     8129    3             VDP_NODE_DESC.KEY,
     2000     8130    3             /* no scroll_spec */,
     2001     8131    3             VDP_NODE_DESC.DATA$ -> VD$BUFFER )
     2002     8132    3           WHENALTRETURN
     2003     8133    4             DO;

     2004     8134    4               ALTRETURN;

   8134  3 003220   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 003221   000000 702211                    TSX2  ! 0,X1

     2005     8135    4             END;
     2006     8136    3         END ADJUST_WINDOWS_IN_2D;

     2007     8137
     2008     8138    2   BEFORE_THE_RPUT:
     2009     8139    2       CALL VDE$RPUT ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM,

   8139  3 003222   200107 470500       BEFORE_THE_* LDP0    CURRENT_WINDOW$,,AUTO
         3 003223   000010 471500                    LDP1    8,,PR0
         3 003224   000012 473500                    LDP3    10,,PR0
         3 003225   000047 236000 4                  LDQ     39
         3 003226   200160 756100                    STQ     @LOCATION+8,,AUTO
         3 003227   000001 236000 4                  LDQ     1
         3 003230   200157 756100                    STQ     @LOCATION+7,,AUTO
         3 003231   300025 634500                    EPPR4   21,,PR3
         3 003232   200156 454500                    STP4    @LOCATION+6,,AUTO
         3 003233   300003 635500                    EPPR5   3,,PR3
         3 003234   200155 455500                    STP5    @LOCATION+5,,AUTO
         3 003235   200154 451500                    STP1    @LOCATION+4,,AUTO
         3 003236   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 003237   000023 631400 xsym               EPPR1   B_VECTNIL+19
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:269  
         3 003240   000000 701000 xent               TSX1    VDE$RPUT
         3 003241   003243 702000 3                  TSX2    s:8147
         3 003242   003247 710000 3                  TRA     s:8151

     2010     8140    2         WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.RANGE,
     2011     8141    2         WINDOW$SPEC.OPERAND.EDIT_BLOCK$ -> VD$BLOCK_DESC.OPTIONS,
     2012     8142    2         VDP_NODE_DESC,
     2013     8143    2         %SQ_CURRENT,
     2014     8144    2         /* no returned key */ )
     2015     8145    2       WHENALTRETURN
     2016     8146    3         DO;

     2017     8147    3           VDP_BUFFER$ = ADDR (NIL);

   8147  3 003243   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 003244   000104 756000 1                  STQ     VDP_BUFFER$

     2018     8148    3           ALTRETURN;

   8148  3 003245   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 003246   000000 702211                    TSX2  ! 0,X1

     2019     8149    3         END;
     2020     8150
     2021     8151    2       VDP_BUFFER$ = ADDR (NIL);

   8151  3 003247   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 003250   000104 756000 1                  STQ     VDP_BUFFER$

     2022     8152
     2023     8153    2   AFTER_THE_RPUT:
     2024     8154    2       CALL VDA$PFLUSH ( WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.PORT$ -> VD$PORT,

   8154  3 003251   200107 470500       AFTER_THE_R* LDP0    CURRENT_WINDOW$,,AUTO
         3 003252   000010 471500                    LDP1    8,,PR0
         3 003253   100001 473500                    LDP3    1,,PR1
         3 003254   000022 236000 4                  LDQ     18
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:270  
         3 003255   200155 756100                    STQ     @LOCATION+5,,AUTO
         3 003256   200154 453500                    STP3    @LOCATION+4,,AUTO
         3 003257   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 003260   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003261   000000 701000 xent               TSX1    VDA$PFLUSH
         3 003262   003264 702000 3                  TSX2    s:8158
         3 003263   003266 710000 3                  TRA     s:8162

     2025     8155    2         %FROM_PRESENTER )
     2026     8156    2       WHENALTRETURN
     2027     8157    3         DO;

     2028     8158    3           ALTRETURN;

   8158  3 003264   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 003265   000000 702211                    TSX2  ! 0,X1

     2029     8159    3         END;
     2030     8160
     2031     8161
     2032     8162    2       RETURN;

   8162  3 003266   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 003267   000001 702211                    TSX2  ! 1,X1

     2033     8163
     2034     8164    2   END COMPLETION_NORMAL;
     2035     8165        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:271  
     2036     8166    1   COMPLETION_NO_WINDOW: PROC ALTRET;

   8166  3 003270   200152 741300       COMPLETION_* STX1  ! @LOCATION+2,,AUTO

     2037     8167        /* The editing window went away.  ASAVE or SAVE/GET must have happened.
     2038     8168           Make the command window use the whole screen, and tell the guy to
     2039     8169           check that the profile and IMPs will work. */
     2040     8170
     2041     8171    2       CALL VDG$EXPAND_COMMAND_WINDOW (VD_$SCREEN.V#);

   8171  3 003271   000050 630400 4                  EPPR0   40
         3 003272   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 003273   000000 701000 xent               TSX1    VDG$EXPAND_COMMAND_WINDOW
         3 003274   000000 011000                    NOP     0

     2042     8172    2       VD_$COMMAND.V# = 1;

   8172  3 003275   000001 235007                    LDA     1,DL
         3 003276   000003 755000 xsym               STA     VD_$COMMAND+3

     2043     8173    2       CALL VDG$ERRMSG (%E$CANT_SCREEN_EDIT);

   8173  3 003277   000036 630400 4                  EPPR0   30
         3 003300   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 003301   000000 701000 xent               TSX1    VDG$ERRMSG
         3 003302   000000 011000                    NOP     0

     2044     8174    2       CALL VDG$EREPORT_ERROR;

   8174  3 003303   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 003304   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         3 003305   000000 011000                    NOP     0

     2045     8175    2       VD_LAST_CWIN_ACTIVITY = 0; /* no screen clear either */

   8175  3 003306   000000 450000 xsym               STZ     VD_LAST_CWIN_ACTIVITY
         3 003307   003311 710000 3                  TRA     s:8179
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:272  

     2046     8176
     2047     8177    2   COMPLETION_EOM_COMMAND: ENTRY ALTRET;

   8177  3 003310   200152 741300       COMPLETION_* STX1  ! @LOCATION+2,,AUTO

     2048     8178
     2049     8179    2       NEXT_WINDOW$ = ADDR (NIL);

   8179  3 003311   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 003312   200003 470500                    LDP0    @NEXT_WINDOW$,,AUTO
         3 003313   000000 756100                    STQ     0,,PR0

     2050     8180
     2051     8181    2       RETURN;

   8181  3 003314   200152 221300                    LDX1  ! @LOCATION+2,,AUTO
         3 003315   000001 702211                    TSX2  ! 1,X1

     2052     8182
     2053     8183    2   END COMPLETION_NO_WINDOW;
     2054     8184        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:273  
     2055     8185    1   COMPLETION_EOM_NEXT_ED_WINDOW: PROC ALTRET;

   8185  3 003316   200146 741300       COMPLETION_* STX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO

     2056     8186
     2057     8187    2       IF VD_CURRENT_WINDOW$ -> VD$FILE_NODE.FLINK$ = ADDR (NIL)

   8187  3 003317   000000 470400 xsym               LDP0    VD_CURRENT_WINDOW$
         3 003320   000002 236100                    LDQ     2,,PR0
         3 003321   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 003322   003333 601000 3                  TNZ     s:8194

     2058     8188    2       THEN
     2059     8189    2         NEXT_WINDOW$ = VD_6E.WINDOWS$ ->

   8189  3 003323   000006 471400 xsym               LDP1    VD_6E+6
         3 003324   100001 473500                    LDP3    1,,PR1
         3 003325   300031 474500                    LDP4    25,,PR3
         3 003326   400012 475500                    LDP5    10,,PR4
         3 003327   500002 236100                    LDQ     2,,PR5
         3 003330   200003 476500                    LDP6    @NEXT_WINDOW$,,AUTO
         3 003331   600000 756100                    STQ     0,,PR6
         3 003332   003335 710000 3                  TRA     s:8197

     2060     8190    2           VD$STREAM.PORT$ ->
     2061     8191    2           VD$PORT.LEVEL.INTERNAL$ ( %LVL_FILE ) ->
     2062     8192    2           VD$FILE_NODE.HEAD$ -> VD$FILE_NODE.FLINK$;
     2063     8193    2       ELSE
     2064     8194    2         NEXT_WINDOW$ = VD_CURRENT_WINDOW$ ->

   8194  3 003333   200003 471500                    LDP1    @NEXT_WINDOW$,,AUTO
         3 003334   100000 756100                    STQ     0,,PR1

     2065     8195    2           VD$FILE_NODE.FLINK$;
     2066     8196
     2067     8197    2       RETURN;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:274  
   8197  3 003335   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 003336   000001 702211                    TSX2  ! 1,X1

     2068     8198
     2069     8199    2   END COMPLETION_EOM_NEXT_ED_WINDOW;
     2070     8200        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:275  
     2071     8201    1   UPDATE_CURSOR_TO_SELECTEDBLOCK: PROC ALTRET;

   8201  3 003337   200146 741300       UPDATE_CURS* STX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO

     2072     8202
     2073     8203    2     DCL VDP_SOBS BIT(1) ALIGNED STATIC SYMDEF INIT( %TRUE );
     2074     8204            /* (ScreechOnBadSinput) */
     2075     8205
     2076     8206    2       RECORD_SET_INDEX = WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES#;

   8206  3 003340   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 003341   000016 471500                    LDP1    14,,PR0
         3 003342   100002 236100                    LDQ     2,,PR1
         3 003343   000022 732000                    QRS     18
         3 003344   200127 756100                    STQ     RECORD_SET_INDEX,,AUTO

     2077     8207    2       IF RECORD_SET_INDEX = 0

   8207  3 003345   003347 601000 3                  TNZ     s:8211

     2078     8208    2       THEN
     2079     8209    2         RETURN;

   8209  3 003346   000001 702211                    TSX2  ! 1,X1

     2080     8210
     2081     8211    2       WITHIN_RANGE = 0;

   8211  3 003347   200140 450100                    STZ     WITHIN_RANGE,,AUTO

     2082     8212            %GETKEY (KEY = WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY,
     2083     8213            INDX = RECORD_SET_INDEX - 1,
     2084     8214            PTR = RECORD_SET_KEY$ );

   8221  3 003350   000016 471500                    LDP1    14,,PR0
         3 003351   000006 402007                    MPY     6,DL
         3 003352   177775 720106                    LXL0    -3,QL,PR1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:276  
         3 003353   000002 100003                    CMPX0   2,DU
         3 003354   003361 601000 3                  TNZ     s:8221+9

   8221  3 003355   177776 473506                    LDP3    -2,QL,PR1
         3 003356   300002 634500                    EPPR4   2,,PR3
         3 003357   200130 454500                    STP4    RECORD_SET_KEY$,,AUTO
         3 003360   003363 710000 3                  TRA     FIND_REALEST_RECORD_SET_KEY

   8221  3 003361   177776 633506                    EPPR3   -2,QL,PR1
         3 003362   200130 453500                    STP3    RECORD_SET_KEY$,,AUTO

     2085     8224
     2086     8225    2   FIND_REALEST_RECORD_SET_KEY:
     2087     8226    3       DO;

   8226  3 003363                       FIND_REALES* null
     2088     8227
     2089     8228    4         DO CASE ( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# );

   8228  3 003363   000013 473500                    LDP3    11,,PR0
         3 003364   300070 222100                    LDX2    56,,PR3
         3 003365   000004 102003                    CMPX2   4,DU
         3 003366   003370 602012 3                  TNC     FIND_REALEST_RECORD_SET_KEY+5,X2
         3 003367   003401 710000 3                  TRA     s:8237
         3 003370   003401 710000 3                  TRA     s:8237
         3 003371   003374 710000 3                  TRA     s:8232
         3 003372   003374 710000 3                  TRA     s:8232
         3 003373   003377 710000 3                  TRA     s:8234

     2090     8229
     2091     8230    4           CASE ( %EVST_INITIAL,

     2092     8231    4           %EVST_START );
     2093     8232    4             LOCATION$ = ADDR( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START );

   8232  3 003374   300024 634500                    EPPR4   20,,PR3
         3 003375   200124 454500                    STP4    LOCATION$,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:277  
         3 003376   003401 710000 3                  TRA     s:8237

     2094     8233    4           CASE ( %EVST_END );

     2095     8234    4             LOCATION$ = ADDR( WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD );

   8234  3 003377   300035 634500                    EPPR4   29,,PR3
         3 003400   200124 454500                    STP4    LOCATION$,,AUTO

     2096     8235    4         END;

     2097     8236
     2098     8237    3         FPT_SINPUT.V.REREADPOS# = LOCATION$ -> VD$LOCATION.POSITION# + 1;

   8237  3 003401   200124 474500                    LDP4    LOCATION$,,AUTO
         3 003402   400010 223100                    LDX3    8,,PR4
         3 003403   000001 624013                    EAX4    1,X3
         3 003404   000025 444000 1                  SXL4    FPT_SINPUT+7

     2099     8238              %GETKEY ( KEY = "LOCATION$ -> VD$LOCATION.KEY",
     2100     8239              INDX = LEVEL# - 1,
     2101     8240              PTR = EVAL_KEY$ );

   8247  3 003405   200120 235100                    LDA     LEVEL#,,AUTO
         3 003406   000001 735000                    ALS     1
         3 003407   477776 720105                    LXL0    -2,AL,PR4
         3 003410   000002 100003                    CMPX0   2,DU
         3 003411   003416 601000 3                  TNZ     s:8247+9

   8247  3 003412   477777 471505                    LDP1    -1,AL,PR4
         3 003413   100002 633500                    EPPR3   2,,PR1
         3 003414   200113 453500                    STP3    EVAL_KEY$,,AUTO
         3 003415   003423 710000 3                  TRA     s:8250

   8247  3 003416   200120 236100                    LDQ     LEVEL#,,AUTO
         3 003417   000023 736000                    QLS     19
         3 003420   000001 136003                    SBLQ    1,DU
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:278  
         3 003421   200124 036100                    ADLQ    LOCATION$,,AUTO
         3 003422   200113 756100                    STQ     EVAL_KEY$,,AUTO

     2102     8250    3         IF NOT LOCATION$ -> VD$LOCATION.EOF

   8250  3 003423   400010 236100                    LDQ     8,,PR4
         3 003424   400000 316007                    CANQ    -131072,DL
         3 003425   003503 601000 3                  TNZ     s:8283

     2103     8251    3         THEN
     2104     8252
     2105     8253    3   FIND_RECORD_SET_KEY:
     2106     8254    3           DO RECORD_SET_INDEX = 0
     2107     8255    4           TO WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.N_ENTRIES# - 1;

   8255  3 003426   200127 450100       FIND_RECORD* STZ     RECORD_SET_INDEX,,AUTO
         3 003427   003474 710000 3                  TRA     s:8281+3

     2108     8256
     2109     8257                  %GETKEY ( KEY = "WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.DESC.KEY",
     2110     8258                  INDX = RECORD_SET_INDEX,
     2111     8259                  PTR = RECORD_SET_KEY$ );

   8266  3 003430   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 003431   000016 471500                    LDP1    14,,PR0
         3 003432   200127 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         3 003433   000006 402007                    MPY     6,DL
         3 003434   100003 720106                    LXL0    3,QL,PR1
         3 003435   000002 100003                    CMPX0   2,DU
         3 003436   003443 601000 3                  TNZ     s:8266+11

   8266  3 003437   100004 473506                    LDP3    4,QL,PR1
         3 003440   300002 634500                    EPPR4   2,,PR3
         3 003441   200130 454500                    STP4    RECORD_SET_KEY$,,AUTO
         3 003442   003445 710000 3                  TRA     s:8270

   8266  3 003443   100004 633506                    EPPR3   4,QL,PR1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:279  
         3 003444   200130 453500                    STP3    RECORD_SET_KEY$,,AUTO

     2112     8269
     2113     8270    4             IF RECORD_SET_KEY$ -> VD$TEXTC.BYTES >=

   8270  3 003445   200130 473500                    LDP3    RECORD_SET_KEY$,,AUTO
         3 003446   300000 236100                    LDQ     0,,PR3
         3 003447   000033 772000                    QRL     27
         3 003450   200113 474500                    LDP4    EVAL_KEY$,,AUTO
         3 003451   000000 620006                    EAX0    0,QL
         3 003452   400000 236100                    LDQ     0,,PR4
         3 003453   000033 772000                    QRL     27
         3 003454   000000 621006                    EAX1    0,QL
         3 003455   040140 106540                    CMPC    fill='040'O
         3 003456   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         3 003457   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         3 003460   003471 602000 3                  TNC     s:8281

     2114     8271    4               EVAL_KEY$ -> VD$TEXTC.BYTES
     2115     8272    4             THEN
     2116     8273    5               DO;

     2117     8274    5                 IF RECORD_SET_INDEX = 0 AND NOT WINDOW$SPEC.BOB_DISPLAYED

   8274  3 003461   200127 235100                    LDA     RECORD_SET_INDEX,,AUTO
         3 003462   003467 601000 3                  TNZ     s:8277
         3 003463   000015 234100                    SZN     13,,PR0
         3 003464   003467 604000 3                  TMI     s:8277

     2118     8275    5                 THEN
     2119     8276    5                   WITHIN_RANGE = %RCCL_LESS;

   8276  3 003465   000001 335007                    LCA     1,DL
         3 003466   200140 755100                    STA     WITHIN_RANGE,,AUTO

     2120     8277    5                 FEP_SINPUT_NUMERIC_KEY = 0; /* Use numeric key as-is */

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:280  
   8277  3 003467   200104 450100                    STZ     FEP_SINPUT_NUMERIC_KEY,,AUTO

     2121     8278    5                 EXIT FIND_REALEST_RECORD_SET_KEY;

   8278  3 003470   003546 710000 3                  TRA     s:8309

     2122     8279    5               END;
     2123     8280
     2124     8281    4           END FIND_RECORD_SET_KEY;

   8281  3 003471   200127 235100                    LDA     RECORD_SET_INDEX,,AUTO
         3 003472   000001 035007                    ADLA    1,DL
         3 003473   200127 755100                    STA     RECORD_SET_INDEX,,AUTO
         3 003474   000016 471500                    LDP1    14,,PR0
         3 003475   100002 236100                    LDQ     2,,PR1
         3 003476   000022 732000                    QRS     18
         3 003477   003503 604000 3                  TMI     s:8283
         3 003500   200127 116100                    CMPQ    RECORD_SET_INDEX,,AUTO
         3 003501   003503 600000 3                  TZE     s:8283
         3 003502   003430 603000 3                  TRC     s:8266

     2125     8282
     2126     8283    3         IF WINDOW$SPEC.EOB_DISPLAYED

   8283  3 003503   000015 236100                    LDQ     13,,PR0
         3 003504   200000 316003                    CANQ    65536,DU
         3 003505   003543 600000 3                  TZE     s:8304

     2127     8284    3         THEN
     2128     8285    4           DO CASE ( WINDOW$SPEC.OPERAND.STREAM$ ->

   8285  3 003506   000010 471500                    LDP1    8,,PR0
         3 003507   100001 473500                    LDP3    1,,PR1
         3 003510   200120 236100                    LDQ     LEVEL#,,AUTO
         3 003511   000007 402007                    MPY     7,DL
         3 003512   300023 220106                    LDX0    19,QL,PR3
         3 003513   000007 100003                    CMPX0   7,DU
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:281  
         3 003514   003516 602010 3                  TNC     s:8285+8,X0
         3 003515   003546 710000 3                  TRA     s:8309
         3 003516   003542 710000 3                  TRA     s:8301
         3 003517   003534 710000 3                  TRA     s:8296
         3 003520   003525 710000 3                  TRA     s:8289
         3 003521   003542 710000 3                  TRA     s:8301
         3 003522   003542 710000 3                  TRA     s:8301
         3 003523   003542 710000 3                  TRA     s:8301
         3 003524   003537 710000 3                  TRA     s:8299

     2129     8286    4           VD$STREAM.PORT$ -> VD$PORT.LEVEL.ORG# ( LEVEL# ) );
     2130     8287
     2131     8288    4             CASE ( %KEYED# );

     2132     8289    4               IF VD_$BY.V# = 0

   8289  3 003525   000003 235000 xsym               LDA     VD_$BY+3
         3 003526   003532 601000 3                  TNZ     s:8293

     2133     8290    4               THEN
     2134     8291    4                 FEP_SINPUT_NUMERIC_KEY = %DFLT_$BY;

   8291  3 003527   023420 235007                    LDA     10000,DL
         3 003530   200104 755100                    STA     FEP_SINPUT_NUMERIC_KEY,,AUTO
         3 003531   003546 710000 3                  TRA     s:8309

     2135     8292    4               ELSE
     2136     8293    4                 FEP_SINPUT_NUMERIC_KEY = VD_$BY.V#;

   8293  3 003532   200104 755100                    STA     FEP_SINPUT_NUMERIC_KEY,,AUTO
         3 003533   003546 710000 3                  TRA     s:8309

     2137     8294
     2138     8295    4             CASE ( %CONSEC# );

     2139     8296    4               FEP_SINPUT_NUMERIC_KEY = 1;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:282  
   8296  3 003534   000001 235007                    LDA     1,DL
         3 003535   200104 755100                    STA     FEP_SINPUT_NUMERIC_KEY,,AUTO
         3 003536   003546 710000 3                  TRA     s:8309

     2140     8297
     2141     8298    4             CASE ( %INDEXED# );

     2142     8299    4               CALL VDG$ESCREECH;

   8299  3 003537   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 003540   000000 701000 xent               TSX1    VDG$ESCREECH
         3 003541   000000 011000                    NOP     0

     2143     8300
     2144     8301    4           END;

   8301  3 003542   003546 710000 3                  TRA     s:8309

     2145     8302    3         ELSE
     2146     8303    4           DO;

     2147     8304    4             WITHIN_RANGE = %RCCL_GREATER;

   8304  3 003543   000001 235007                    LDA     1,DL
         3 003544   200140 755100                    STA     WITHIN_RANGE,,AUTO

     2148     8305    4             FEP_SINPUT_NUMERIC_KEY = 0; /* Use last key in set if there's more */

   8305  3 003545   200104 450100                    STZ     FEP_SINPUT_NUMERIC_KEY,,AUTO

     2149     8306    4           END;

     2150     8307    3       END FIND_REALEST_RECORD_SET_KEY;

     2151     8308
     2152     8309    2       IF VDP_NODE_DESC.KEY.TYPE# ~= %KT_STRING

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:283  
   8309  3 003546   000000 220000 xsym               LDX0    VDP_NODE_DESC
         3 003547   000002 100003                    CMPX0   2,DU
         3 003550   003557 600000 3                  TZE     s:8314

     2153     8310    2       THEN
     2154     8311    2         FEP_SINPUT_NUMERIC_KEY =

   8311  3 003551   200130 470500                    LDP0    RECORD_SET_KEY$,,AUTO
         3 003552   000000 236100                    LDQ     0,,PR0
         3 003553   000032 376000 xsym               ANQ     B_VECTNIL+26
         3 003554   200104 036100                    ADLQ    FEP_SINPUT_NUMERIC_KEY,,AUTO
         3 003555   200104 756100                    STQ     FEP_SINPUT_NUMERIC_KEY,,AUTO
         3 003556   003564 710000 3                  TRA     s:8317

     2155     8312    2           RECORD_SET_KEY$ -> VD$TEXTC_NUMBER.BYTES# + FEP_SINPUT_NUMERIC_KEY;
     2156     8313    2       ELSE
     2157     8314    2         FEP_SINPUT_NUMERIC_KEY =

   8314  3 003557   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 003560   000016 471500                    LDP1    14,,PR0
         3 003561   200127 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         3 003562   100001 036100                    ADLQ    1,,PR1
         3 003563   200104 756100                    STQ     FEP_SINPUT_NUMERIC_KEY,,AUTO

     2158     8315    2           RECORD_SET_INDEX + WINDOW$SPEC.RECORD_SET$ -> VD$RECORD_SET.SQ_OFFSET#;
     2159     8316
     2160     8317    2       FPT_SINPUT.BUF_ = VECTOR (FEP_SINPUT_NUMERIC_KEY);

   8317  3 003564   777640 235007                    LDA     -96,DL
         3 003565   200154 452500                    STP2    @LOCATION+4,,AUTO
         3 003566   200154 236100                    LDQ     @LOCATION+4,,AUTO
         3 003567   000104 036003                    ADLQ    68,DU
         3 003570   000022 757000 1                  STAQ    FPT_SINPUT+4

     2161     8318    2       FPT_SINPUT.V.DCB# = WINDOW$SPEC.DCB#;

   8318  3 003571   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:284  
         3 003572   000014 721100                    LXL1    12,,PR0
         3 003573   000024 741000 1                  STX1    FPT_SINPUT+6

     2162     8319
     2163     8320    2       IF VD_$$MON_PRES.V# > 0

   8320  3 003574   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         3 003575   003607 604400 3                  TMOZ    s:8325

     2164     8321    2       THEN
     2165     8322    2         CALL VDG$MPRES_FEPSINPUT ( WINDOW$SPEC.DCB#,

   8322  3 003576   200010 631500                    EPPR1   RECORD_SET_KEY,,AUTO
         3 003577   200155 451500                    STP1    @LOCATION+5,,AUTO
         3 003600   200107 236100                    LDQ     CURRENT_WINDOW$,,AUTO
         3 003601   000002 036000 4                  ADLQ    2
         3 003602   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 003603   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 003604   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003605   000000 701000 xent               TSX1    VDG$MPRES_FEPSINPUT
         3 003606   000000 011000                    NOP     0

     2166     8323    2           RECORD_SET_KEY );
     2167     8324
     2168     8325    2       CALL M$SINPUT ( FPT_SINPUT )

   8325  3 003607   000016 630400 1                  EPPR0   FPT_SINPUT
         3 003610   560013 713400                    CLIMB   alt,+57355
         3 003611   401000 401760                    pmme    nvectors=3
         3 003612   003614 702000 3                  TSX2    s:8328
         3 003613   003626 710000 3                  TRA     s:8335

     2169     8326    2       WHENALTRETURN
     2170     8327    3         DO;

     2171     8328    3           IF VDP_SOBS

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:285  
   8328  3 003614   000110 234000 1                  SZN     VDP_SOBS
         3 003615   003621 605000 3                  TPL     s:8331

     2172     8329    3           THEN
     2173     8330    3             CALL VDG$ESCREECH;

   8330  3 003616   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 003617   000000 701000 xent               TSX1    VDG$ESCREECH
         3 003620   000000 011000                    NOP     0

     2174     8331    3           CALL VDG$MONERR;

   8331  3 003621   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 003622   000000 701000 xent               TSX1    VDG$MONERR
         3 003623   000000 011000                    NOP     0

     2175     8332    3           ALTRETURN;

   8332  3 003624   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 003625   000000 702211                    TSX2  ! 0,X1

     2176     8333    3         END;
     2177     8334
     2178     8335    2       RETURN;

   8335  3 003626   200146 221300                    LDX1  ! INTERRUPT_STATE_AFTER_M$READ+4,,AUTO
         3 003627   000001 702211                    TSX2  ! 1,X1

     2179     8336
     2180     8337    2   END UPDATE_CURSOR_TO_SELECTEDBLOCK;
     2181     8338        %EJECT;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:286  
     2182     8339    1   UPDATE_SELECTEDBLOCK_TO_CURSOR: PROC ALTRET;

   8339  3 003630   200150 741300       UPDATE_SELE* STX1  ! @LOCATION,,AUTO

     2183     8340
     2184     8341    2       IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT

   8341  3 003631   000003 235000 xsym               LDA     VD_$SCREEN+3
         3 003632   000003 115007                    CMPA    3,DL
         3 003633   003655 605000 3                  TPL     GET_2D_KEY

     2185     8342    2       THEN
     2186     8343    2   GET_1D_KEY:
     2187     8344    3         DO;

   8344  3 003634                       GET_1D_KEY   null
     2188     8345    3           RREAD_SAVED_KEY = WINDOW$SPEC.OPERAND.STREAM$ -> VD$STREAM.CURRENT.KEY

   8345  3 003634   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 003635   000010 471500                    LDP1    8,,PR0
         3 003636   200120 236100                    LDQ     LEVEL#,,AUTO
         3 003637   000003 736000                    QLS     3
         3 003640   000100 100506                    MLR     fill='000'O
         3 003641   100004 000010                    ADSC9   4,Q,PR1                  cn=0,n=8
         3 003642   200006 000010                    ADSC9   RREAD_SAVED_KEY,,AUTO    cn=0,n=8

     2189     8346    3             (LEVEL# - 1);
     2190     8347                %GETKEY ( KEY = RREAD_SAVED_KEY,
     2191     8348                PTR = FEP_READ_RETURN_KEY$ );

   8355  3 003643   200006 720100                    LXL0    RREAD_SAVED_KEY,,AUTO
         3 003644   000002 100003                    CMPX0   2,DU
         3 003645   003652 601000 3                  TNZ     s:8355+7

   8355  3 003646   200007 236100                    LDQ     RREAD_SAVED_KEY+1,,AUTO
         3 003647   000002 036003                    ADLQ    2,DU
         3 003650   200116 756100                    STQ     FEP_READ_RETURN_KEY$,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:287  
         3 003651   003660 710000 3                  TRA     s:8365

   8355  3 003652   200007 633500                    EPPR3   RREAD_SAVED_KEY+1,,AUTO
         3 003653   200116 453500                    STP3    FEP_READ_RETURN_KEY$,,AUTO

     2192     8358    3         END GET_1D_KEY;

   8358  3 003654   003660 710000 3                  TRA     s:8365

     2193     8359    2       ELSE
     2194     8360    2   GET_2D_KEY:
     2195     8361    3         DO;

   8361  3 003655                       GET_2D_KEY   null
     2196     8362    3           RREAD_SAVED_KEY = VDP_NODE_DESC.KEY;

   8362  3 003655   000100 100400                    MLR     fill='000'O
         3 003656   000000 000010 xsym               ADSC9   VDP_NODE_DESC            cn=0,n=8
         3 003657   200006 000010                    ADSC9   RREAD_SAVED_KEY,,AUTO    cn=0,n=8

     2197     8363    3         END GET_2D_KEY;

     2198     8364            /* If DCB.ACTPOS is 0, it means cursor was at end of record */
     2199     8365    2       IF DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ACTPOS = 0 THEN

   8365  3 003660   000003 470400 4                  LDP0    3
         3 003661   000000 471500                    LDP1    0,,PR0
         3 003662   200107 473500                    LDP3    CURRENT_WINDOW$,,AUTO
         3 003663   300014 720100                    LXL0    12,,PR3
         3 003664   100000 474510                    LDP4    0,X0,PR1
         3 003665   400057 722100                    LXL2    47,,PR4
         3 003666   003672 601000 3                  TNZ     s:8368

     2200     8366    2         FEP_POS = DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ARS#;

   8366  3 003667   400000 235100                    LDA     0,,PR4
         3 003670   200103 755100                    STA     FEP_POS,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:288  
         3 003671   003676 710000 3                  TRA     s:8369

     2201     8367    2       ELSE
     2202     8368    2         FEP_POS = DCBADDR ( WINDOW$SPEC.DCB# ) -> F$DCB.ACTPOS - 1;

   8368  3 003672   400057 236100                    LDQ     47,,PR4
         3 003673   777777 376007                    ANQ     -1,DL
         3 003674   000001 136007                    SBLQ    1,DL
         3 003675   200103 756100                    STQ     FEP_POS,,AUTO

     2203     8369    2       IF FEP_POS > VD_$MAX_RECORD.V# THEN

   8369  3 003676   200103 236100                    LDQ     FEP_POS,,AUTO
         3 003677   000003 116000 xsym               CMPQ    VD_$MAX_RECORD+3
         3 003700   003703 604400 3                  TMOZ    s:8372

     2204     8370    2         FEP_POS = VD_$MAX_RECORD.V#;

   8370  3 003701   000003 235000 xsym               LDA     VD_$MAX_RECORD+3
         3 003702   200103 755100                    STA     FEP_POS,,AUTO

     2205     8371
     2206     8372    2       IF WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_INITIAL

   8372  3 003703   300013 475500                    LDP5    11,,PR3
         3 003704   500070 223100                    LDX3    56,,PR5
         3 003705   000001 103003                    CMPX3   1,DU
         3 003706   003743 601000 3                  TNZ     s:8394

     2207     8373    2       THEN
     2208     8374    2   CHECK_KEY_START:
     2209     8375    3         DO;

   8375  3 003707                       CHECK_KEY_S* null
     2210     8376                %GETKEY ( KEY = "WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.KEY",
     2211     8377                INDX = LEVEL# - 1,
     2212     8378                PTR = EVAL_KEY$ );
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:289  

   8385  3 003707   200120 235100                    LDA     LEVEL#,,AUTO
         3 003710   000001 735000                    ALS     1
         3 003711   500022 724105                    LXL4    18,AL,PR5
         3 003712   000002 104003                    CMPX4   2,DU
         3 003713   003720 601000 3                  TNZ     s:8385+4

   8385  3 003714   500023 476505                    LDP6    19,AL,PR5
         3 003715   600002 637500                    EPPR7   2,,PR6
         3 003716   200113 457500                    STP7    EVAL_KEY$,,AUTO
         3 003717   003722 710000 3                  TRA     s:8388

   8385  3 003720   500023 636505                    EPPR6   19,AL,PR5
         3 003721   200113 456500                    STP6    EVAL_KEY$,,AUTO

     2213     8388    3           IF FEP_READ_RETURN_KEY$ -> VD$TEXTC = EVAL_KEY$ -> VD$TEXTC AND

   8388  3 003722   200116 476500                    LDP6    FEP_READ_RETURN_KEY$,,AUTO
         3 003723   600000 236100                    LDQ     0,,PR6
         3 003724   000033 772000                    QRL     27
         3 003725   000001 625006                    EAX5    1,QL
         3 003726   200113 477500                    LDP7    EVAL_KEY$,,AUTO
         3 003727   700000 236100                    LDQ     0,,PR7
         3 003730   000033 772000                    QRL     27
         3 003731   000001 626006                    EAX6    1,QL
         3 003732   000140 106540                    CMPC    fill='000'O
         3 003733   600000 000015                    ADSC9   0,,PR6                   cn=0,n=*X5
         3 003734   700000 000016                    ADSC9   0,,PR7                   cn=0,n=*X6
         3 003735   003743 601000 3                  TNZ     s:8394
         3 003736   500034 236100                    LDQ     28,,PR5
         3 003737   000022 732000                    QRS     18
         3 003740   200103 116100                    CMPQ    FEP_POS,,AUTO
         3 003741   003743 601000 3                  TNZ     s:8394

     2214     8389    3             FEP_POS = WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.POSITION#
     2215     8390    3           THEN
     2216     8391    3             RETURN;
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:290  

   8391  3 003742   000001 702211                    TSX2  ! 1,X1

     2217     8392    3         END CHECK_KEY_START;
     2218     8393
     2219     8394    2       IF WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_INITIAL

   8394  3 003743   000001 103003                    CMPX3   1,DU
         3 003744   003747 600000 3                  TZE     UPDATE_RANGE_START
         3 003745   000002 103003                    CMPX3   2,DU
         3 003746   004027 601000 3                  TNZ     s:8434

     2220     8395    2         OR WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_START
     2221     8396    2       THEN
     2222     8397    2   UPDATE_RANGE_START:
     2223     8398    3         DO;

   8398  3 003747                       UPDATE_RANG* null
     2224     8399                %CLEARKEY ( KEY = "WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.KEY",
     2225     8400                INDX = LEVEL# - 1 );

   8407  3 003747   200120 235100                    LDA     LEVEL#,,AUTO
         3 003750   000001 735000                    ALS     1
         3 003751   500022 724105                    LXL4    18,AL,PR5
         3 003752   000002 104003                    CMPX4   2,DU
         3 003753   003765 601000 3                  TNZ     s:8408+2

   8407  3 003754   500023 476505                    LDP6    19,AL,PR5
         3 003755   200154 456500                    STP6    @LOCATION+4,,AUTO
         3 003756   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 003757   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 003760   000000 701000 xent               TSX1    VDG$OFREE
         3 003761   003763 702000 3                  TSX2    s:8408
         3 003762   003765 710000 3                  TRA     s:8408+2

   8408  3 003763   200150 221300                    LDX1  ! @LOCATION,,AUTO
         3 003764   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:291  

   8408  3 003765   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 003766   000013 471500                    LDP1    11,,PR0
         3 003767   200120 235100                    LDA     LEVEL#,,AUTO
         3 003770   000001 735000                    ALS     1
         3 003771   100022 450105                    STZ     18,AL,PR1
         3 003772   100023 450105                    STZ     19,AL,PR1

     2226     8410                %COPYKEY ( FKEY = RREAD_SAVED_KEY,
     2227     8411                TKEY = "WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.KEY",
     2228     8412                TINDX = LEVEL# - 1 );

   8425  3 003773   000013 471500                    LDP1    11,,PR0
         3 003774   000000 620005                    EAX0    0,AL
         3 003775   000000 621005                    EAX1    0,AL
         3 003776   200006 237100                    LDAQ    RREAD_SAVED_KEY,,AUTO
         3 003777   100022 755110                    STA     18,X0,PR1
         3 004000   100023 756111                    STQ     19,X1,PR1

   8425  3 004001   200006 722100                    LXL2    RREAD_SAVED_KEY,,AUTO
         3 004002   000002 102003                    CMPX2   2,DU
         3 004003   004020 601000 3                  TNZ     s:8429

   8425  3 004004   000013 471500                    LDP1    11,,PR0
         3 004005   100023 633510                    EPPR3   19,X0,PR1
         3 004006   200155 453500                    STP3    @LOCATION+5,,AUTO
         3 004007   200007 236100                    LDQ     RREAD_SAVED_KEY+1,,AUTO
         3 004010   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 004011   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 004012   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 004013   000000 701000 xent               TSX1    VDG$OCOPY
         3 004014   004016 702000 3                  TSX2    s:8426
         3 004015   004020 710000 3                  TRA     s:8429

   8426  3 004016   200150 221300                    LDX1  ! @LOCATION,,AUTO
         3 004017   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:292  
     2229     8428
     2230     8429    3           WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.EOF = %FALSE;

   8429  3 004020   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 004021   000013 471500                    LDP1    11,,PR0
         3 004022   000051 236000 4                  LDQ     41
         3 004023   100034 356100                    ANSQ    28,,PR1

     2231     8430
     2232     8431    3           WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.START.POSITION# = FEP_POS;

   8431  3 004024   000013 471500                    LDP1    11,,PR0
         3 004025   200103 720100                    LXL0    FEP_POS,,AUTO
         3 004026   100034 740100                    STX0    28,,PR1

     2233     8432    3         END UPDATE_RANGE_START;

     2234     8433
     2235     8434    2       IF WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_INITIAL

   8434  3 004027   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 004030   000013 471500                    LDP1    11,,PR0
         3 004031   100070 220100                    LDX0    56,,PR1
         3 004032   000001 100003                    CMPX0   1,DU
         3 004033   004036 600000 3                  TZE     UPDATE_RANGE_END
         3 004034   000003 100003                    CMPX0   3,DU
         3 004035   004116 601000 3                  TNZ     s:8474

     2236     8435    2         OR WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.STATE# = %EVST_END
     2237     8436    2       THEN
     2238     8437    2   UPDATE_RANGE_END:
     2239     8438    3         DO;

   8438  3 004036                       UPDATE_RANG* null
     2240     8439                %CLEARKEY ( KEY = "WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD.KEY",
     2241     8440                INDX = LEVEL# - 1 );

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:293  
   8447  3 004036   200120 235100                    LDA     LEVEL#,,AUTO
         3 004037   000001 735000                    ALS     1
         3 004040   100033 721105                    LXL1    27,AL,PR1
         3 004041   000002 101003                    CMPX1   2,DU
         3 004042   004054 601000 3                  TNZ     s:8448+2

   8447  3 004043   100034 473505                    LDP3    28,AL,PR1
         3 004044   200154 453500                    STP3    @LOCATION+4,,AUTO
         3 004045   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 004046   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004047   000000 701000 xent               TSX1    VDG$OFREE
         3 004050   004052 702000 3                  TSX2    s:8448
         3 004051   004054 710000 3                  TRA     s:8448+2

   8448  3 004052   200150 221300                    LDX1  ! @LOCATION,,AUTO
         3 004053   000000 702211                    TSX2  ! 0,X1

   8448  3 004054   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 004055   000013 471500                    LDP1    11,,PR0
         3 004056   200120 235100                    LDA     LEVEL#,,AUTO
         3 004057   000001 735000                    ALS     1
         3 004060   100033 450105                    STZ     27,AL,PR1
         3 004061   100034 450105                    STZ     28,AL,PR1

     2242     8450                %COPYKEY ( FKEY = RREAD_SAVED_KEY,
     2243     8451                TKEY = "WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD.KEY",
     2244     8452                TINDX = LEVEL# - 1 );

   8465  3 004062   000013 471500                    LDP1    11,,PR0
         3 004063   000000 620005                    EAX0    0,AL
         3 004064   000000 621005                    EAX1    0,AL
         3 004065   200006 237100                    LDAQ    RREAD_SAVED_KEY,,AUTO
         3 004066   100033 755110                    STA     27,X0,PR1
         3 004067   100034 756111                    STQ     28,X1,PR1

   8465  3 004070   200006 722100                    LXL2    RREAD_SAVED_KEY,,AUTO
         3 004071   000002 102003                    CMPX2   2,DU
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:294  
         3 004072   004107 601000 3                  TNZ     s:8469

   8465  3 004073   000013 471500                    LDP1    11,,PR0
         3 004074   100034 633510                    EPPR3   28,X0,PR1
         3 004075   200155 453500                    STP3    @LOCATION+5,,AUTO
         3 004076   200007 236100                    LDQ     RREAD_SAVED_KEY+1,,AUTO
         3 004077   200154 756100                    STQ     @LOCATION+4,,AUTO
         3 004100   200154 630500                    EPPR0   @LOCATION+4,,AUTO
         3 004101   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 004102   000000 701000 xent               TSX1    VDG$OCOPY
         3 004103   004105 702000 3                  TSX2    s:8466
         3 004104   004107 710000 3                  TRA     s:8469

   8466  3 004105   200150 221300                    LDX1  ! @LOCATION,,AUTO
         3 004106   000000 702211                    TSX2  ! 0,X1

     2245     8468
     2246     8469    3           WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD.EOF = %FALSE;

   8469  3 004107   200107 470500                    LDP0    CURRENT_WINDOW$,,AUTO
         3 004110   000013 471500                    LDP1    11,,PR0
         3 004111   000051 236000 4                  LDQ     41
         3 004112   100045 356100                    ANSQ    37,,PR1

     2247     8470
     2248     8471    3           WINDOW$SPEC.OPERAND.EVAL$ -> VD$EVAL.RANGE.ENDD.POSITION# = FEP_POS;

   8471  3 004113   000013 471500                    LDP1    11,,PR0
         3 004114   200103 720100                    LXL0    FEP_POS,,AUTO
         3 004115   100045 740100                    STX0    37,,PR1

     2249     8472    3         END UPDATE_RANGE_END;

     2250     8473
     2251     8474    2       RETURN;

   8474  3 004116   200150 221300                    LDX1  ! @LOCATION,,AUTO
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:295  
         3 004117   000001 702211                    TSX2  ! 1,X1
     2252     8475
     2253     8476    2   END UPDATE_SELECTEDBLOCK_TO_CURSOR;
     2254     8477
     2255     8478    1   END VDP$WREAD;
     2256     8479        %EOD;

PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:296  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WREAD.
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:297  

 **** Variables and constants ****

  ****  Section 001  Data  VDP$WREAD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    50-0-0/d STRC(288)   r     1 FPT_EDTCTL                 0-0-0/d STRC(504)   r     1 FPT_READ
    16-0-0/d STRC(288)   r     1 FPT_SINPUT                26-0-0/d STRC(288)   r     1 FPT_TRMATTR
    64-0-0/d STRC(144)   r     1 FPT_WEOF                  70-0-0/d STRC(432)   r     1 FPT_WRITE
   104-0-0/w PTR         r     1 VDP_BUFFER$              105-0-0/w PTR         r     1 VDP_KEY$
   110-0-0/w BIT         r     1 VDP_SOBS                  60-0-0/d STRC(144)   r     1 VLP_EDTCTL
    36-0-0/d STRC(360)   r     1 VLP_TRMATTR

  ****  Section 002 RoData VDP$WREAD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 KT_TO_INCR(0:3)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ACTIVATION_CHARACTER
     5-0-0/w PTR         r     1 @FROM_PRESENTER          150-0-0/w PTR         r     1 @LOCATION
     3-0-0/w PTR         r     1 @NEXT_WINDOW$            147-0-0/w PTR         r     1 @RECORDS_NEEDED
   147-0-0/w PTR         r     1 @RELATIVE                 *0-0-0/c UBIN(9)     r     1 ACTIVATION_CHARACTER
   106-0-0/w BIT         r     1 BOB_EOB_FLAG             107-0-0/w PTR         r     1 CURRENT_WINDOW$
    60-0-0/w STRC(648)   r     1 DELETION_RANGE           112-0-0/w BIT         r     1 DONT_FORGET_TO_WEOF
   110-0-0/w PTR         r     1 EDIT_BLOCK_START_KEY$
   113-0-0/w PTR         r     1 EVAL_KEY$                114-0-0/w PTR         r     1 EVAL_RANGE_LOCATION$
   103-0-0/w SBIN        r     1 FEP_POS                  117-0-0/w SBIN        r     1 FEP_READ_RETURN_KEY
   116-0-0/w PTR         r     1 FEP_READ_RETURN_KEY$
   104-0-0/w SBIN        r     1 FEP_SINPUT_NUMERIC_KEY
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:298  
   105-0-0/w SBIN        r     1 FEP_WRITE_NUMERIC_KEY
    *0-0-0/w BIT         r     1 FROM_PRESENTER
   142-0-0/w SBIN        r     1 INTERRUPT_STATE_AFTER_M$READ
   141-0-0/w SBIN        r     1 INTERRUPT_STATE_BEFORE_M$READ
   120-0-0/w SBIN        r     1 LEVEL#                    *0-0-0/w STRC(324)   r     1 LOCATION
   124-0-0/w PTR         r     1 LOCATION$                 23-0-0/w STRC(180)   r     1 LOCATION_PTRS
    *0-0-0/w PTR         r     1 NEXT_WINDOW$
   126-0-0/w BIT         r     1 NORMAL_READ_COMPLETION
    *0-0-0/w SBIN        r     1 RECORDS_NEEDED           127-0-0/w UBIN        r     1 RECORD_SET_INDEX
    10-0-0/w STRC(72)    r     1 RECORD_SET_KEY           130-0-0/w PTR         r     1 RECORD_SET_KEY$
    30-0-0/w STRC(648)   r     1 RECORD_SET_RANGE         132-0-0/w SBIN        r     1 RELATIVE
    *0-0-0/w SBIN        r     1 RELATIVE                  52-0-0/w STRC(216)   r     1 RGET_NODE_DESC
    12-0-0/w STRC(324)   r     1 RREAD_LOCATION             6-0-0/w STRC(72)    r     1 RREAD_SAVED_KEY
   125-0-0/w PTR         r     1 RREAD_SAVED_KEY$         133-0-0/w UBIN        r     1 SCROLL_INDEX
   135-0-0/w UBIN        r     1 SCROLL_LIMIT             137-0-0/w PTR         r     1 STREAM_CURRENT_KEY$
   140-0-0/w SBIN        r     1 WITHIN_RANGE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w STRC(216)   r     1 VDP_NODE_DESC              0-0-0/w STRC(144)   r     1 VD_$$MON_PRES
     0-0-0/w STRC(144)   r     1 VD_$BY                     0-0-0/w STRC(144)   r     1 VD_$COMMAND
     0-0-0/w STRC(144)   r     1 VD_$MAX_RECORD             0-0-0/w STRC(144)   r     1 VD_$SCREEN
     0-0-0/w STRC(144)   r     1 VD_$STRIP_BLANKS           0-0-0/w STRC(22644) r     1 VD_6E
     0-0-0/w PTR         r     1 VD_CURRENT_WINDOW$         0-0-0/w STRC(72)    r     1 VD_KEY_NUMERIC_BOF
     0-0-0/w SBIN        r     1 VD_LAST_CWIN_ACTIVITY

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w SBIN        r     1 FEP$READ_KEY
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:299  
     0-0-0N  NULL        r     1 M$UC                       0-0-0/b STRC(5)     r     1 STREAM$PROTECT
     0-0-0/w STRC(936)   r     1 VD$BLOCK_DESC              0-0-0/w ASTR(90)    r     1 VD$BUFFER
     0-0-0/w STRC(90)    r     1 VD$BUFFER_HEADER           0-0-0/w STRC(180)   r     1 VD$ERR
     0-0-0/w STRC(2124)  r     1 VD$EVAL                    0-0-0/w STRC(468)   r     1 VD$FILE_NODE
     0-0-0/w STRC(324)   r     1 VD$LOCATION                0-0-0/w STRC(1944)  r     1 VD$PORT
     0-0-0/w STRC(324)   r     1 VD$RECORD_SET              0-0-0/w STRC(864)   r     1 VD$STREAM
     0-0-0/w ASTR(9)     r     1 VD$TEXTC                   0-0-0/w STRC        r     1 VD$TEXTC_NUMBER
     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE            0-0-0/w STRC(900)   r     1 WINDOW$SPEC


   Procedure VDP$WREAD requires 2128 words for executable code.
   Procedure VDP$WREAD requires 114 words of local(AUTO) storage.
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:300  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:301  
          MINI XREF LISTING

ACTIVATION_CHARACTER
      4771**DCL        14--PROC     6731<>CALL     6769>>DOCASE
ALLOCATE_NECESSARY_OBJECTS
      7983**PROC     6766--CALL     6814--CALL     7183--CALL
B$ALT.CODE
      2096**DCL      2096--REDEF    2097--REDEF    2097--REDEF
B$ALT.ERR
      2097**DCL      6855<>CALL     7381<>CALL
B$ALT.ERR.CODE
      2098**DCL      7455>>DOCASE   7523>>IF
B$ALT.ERR.ERR#
      2098**DCL      2098--REDEF
B$ALT.EVID
      2097**DCL      2097--REDEF    2097--REDEF
B$JIT.CPFLAGS1.SLEAZE
      1910**DCL      1910--REDEF
B$JIT.ERR.MID
      1817**DCL      1817--REDEF
B$JIT.JRESPEAK
      1978**DCL      1979--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      2087**DCL      2087--REDEF    2088--REDEF
B$JIT.PNR
      1991**DCL      1991--REDEF
B$JIT.TSLINE
      2085**DCL      2086--REDEF
B$JIT$
      2092**DCL      1811--IMP-PTR
B$TCB.ALT$
      2103**DCL      6855>>CALL     7381>>CALL     7455>>DOCASE   7523>>IF
B$TCB$
      2105**DCL      6855>>CALL     7381>>CALL     7455>>DOCASE   7523>>IF
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:302  
BAD_STRM_XXX IN PROCEDURE PRESENTER_IN_2_D
      7269**LABEL    7264--CALLALT
BOB_EOB_FLAG
      6655**DCL      6812>>DOWHILE  6959<<ASSIGN   7003<<ASSIGN   7006>>IF       7020<<ASSIGN   7023>>IF
      7771<<ASSIGN   7815<<ASSIGN   7818>>IF       7828<<ASSIGN   7831>>IF
CANT_READ_FILE IN PROCEDURE COMPLETION_RECORDS_NEEDED
      7866**LABEL    7686--CALLALT  7704--CALLALT  7773--CALLALT
CHECK_CURSOR_NEAR_RECORD_SET IN PROCEDURE PRESENTER_IN_2_D
      7074**LABEL    7092--EXIT     7119--EXIT
CHECK_KEYINCR_AND_KEYTYPE IN PROCEDURE PRESENTER_IN_2_D
      7186**LABEL    7200--EXIT     7220--EXIT     7230--EXIT     7240--EXIT     7250--EXIT
COMPLETION_EOM_COMMAND IN PROCEDURE COMPLETION_NO_WINDOW
      8177**ENTRY    6871--CALL     6914--CALL     7034--CALL     7419--CALL     7429--CALL
COMPLETION_EOM_NEXT_ED_WINDOW
      8185**PROC     6895--CALL     7438--CALL
COMPLETION_INSERT_NO_ROOM
      8031**PROC     6875--CALL     7513--CALL
COMPLETION_NORMAL
      8065**PROC     6859--CALL     7409--CALL     7427--CALL     7436--CALL     7511--CALL
COMPLETION_NO_WINDOW
      8166**PROC     7064--CALL     7313--CALL
COMPLETION_RECORDS_NEEDED IN PROCEDURE PRESENTER_IN_2_D
      7598**PROC     7487--CALL
COMPLETION_RECORD_DELETED IN PROCEDURE PRESENTER_IN_2_D
      7551**PROC     7458--CALL
COMPLETION_RECORD_NEEDED IN PROCEDURE PRESENTER_IN_1_D
      6926**PROC     6807--CALL     6883--CALL     6889--CALL     6892--CALL
CURRENT_WINDOW$
      6656**DCL      6525--IMP-PTR  6726<<ASSIGN   6727>>ASSIGN   6731>>CALL     6750>>CALL     6786>>DOCASE
      6790>>ASSIGN   6793>>ASSIGN   6797>>ASSIGN   6798>>ASSIGN   6818>>CALL     6851>>ASSIGN   6855>>CALL
      6861>>DOCASE   6864>>IF       6868>>IF       6868>>IF       6877>>IF       6878>>ASSIGN   6881>>ASSIGN
      6961>>ASSIGN   6964>>CALL     6964>>CALL     6987>>IF       6987>>ASSIGN   6987>>ASSIGN   7009>>CALL
      7009>>CALL     7046>>ASSIGN   7063>>IF       7067>>IF       7077>>DOCASE   7081>>ASSIGN   7083>>ASSIGN
      7090>>IF       7098>>ASSIGN   7100>>ASSIGN   7100>>ASSIGN   7124>>ASSIGN   7130>>CALL     7130>>CALL
      7135>>ASSIGN   7143>>CALL     7170>>ASSIGN   7188>>ASSIGN   7189>>ASSIGN   7191>>IF       7191>>IF
      7191>>IF       7208>>DOCASE   7212>>IF       7227>>IF       7232>>ASSIGN   7260>>ASSIGN   7261>>ASSIGN
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:303  
      7262>>ASSIGN   7263>>ASSIGN   7280>>ASSIGN   7286>>CALL     7319>>ASSIGN   7331>>IF       7335>>ASSIGN
      7335>>ASSIGN   7377>>ASSIGN   7381>>CALL     7398>>IF       7398>>IF       7398>>ASSIGN   7398>>ASSIGN
      7398>>ASSIGN   7398>>ASSIGN   7406>>DOCASE   7425>>IF       7434>>IF       7467>>IF       7471>>IF
      7475>>ASSIGN   7476>>CALL     7477>>CALL     7477>>CALL     7487>>CALL     7509>>IF       7529>>ASSIGN
      7533>>CALL     7570>>CALL     7582>>CALL     7588>>CALL     7651>>IF       7651>>ASSIGN   7651>>ASSIGN
      7657>>IF       7669>>ASSIGN   7670>>DOCASE   7674>>ASSIGN   7677>>ASSIGN   7686>>CALL     7686>>CALL
      7692>>CALL     7692>>CALL     7704>>CALL     7704>>CALL     7710>>CALL     7710>>CALL     7722>>ASSIGN
      7737>>IF       7737>>ASSIGN   7737>>ASSIGN   7758>>ASSIGN   7773>>CALL     7773>>CALL     7788>>IF
      7788>>ASSIGN   7788>>ASSIGN   7821>>CALL     7821>>CALL     7851>>ASSIGN   7873>>ASSIGN   7875>>ASSIGN
      7877>>ASSIGN   7881>>CALL     7915>>ASSIGN   7919>>CALL     7919>>CALL     7931>>ASSIGN   7935>>CALL
      7935>>CALL     7941>>CALL     7941>>CALL     8021>>ASSIGN   8034>>IF       8041>>ASSIGN   8042>>ASSIGN
      8044>>CALL     8044>>CALL     8049>>CALL     8052>>IF       8052>>IF       8052>>IF       8055>>IF
      8057>>ASSIGN   8057>>ASSIGN   8057>>ASSIGN   8060>>ASSIGN   8099>>DOINDEX  8110>>IF       8110>>ASSIGN
      8110>>ASSIGN   8118>>IF       8118>>IF       8118>>IF       8128>>CALL     8139>>CALL     8139>>CALL
      8139>>CALL     8154>>CALL     8206>>ASSIGN   8221>>IF       8221>>ASSIGN   8221>>ASSIGN   8228>>DOCASE
      8232>>ASSIGN   8234>>ASSIGN   8255>>DOINDEX  8266>>IF       8266>>ASSIGN   8266>>ASSIGN   8274>>IF
      8283>>IF       8285>>DOCASE   8314>>ASSIGN   8318>>ASSIGN   8322>>CALL     8345>>ASSIGN   8365>>IF
      8366>>ASSIGN   8368>>ASSIGN   8372>>IF       8385>>IF       8385>>ASSIGN   8385>>ASSIGN   8388>>IF
      8394>>IF       8394>>IF       8407>>IF       8407>>CALL     8407>>CALL     8408>>ASSIGN   8425>>ASSIGN
      8425>>CALL     8429>>ASSIGN   8431>>ASSIGN   8434>>IF       8434>>IF       8447>>IF       8447>>CALL
      8447>>CALL     8448>>ASSIGN   8465>>ASSIGN   8465>>CALL     8469>>ASSIGN   8471>>ASSIGN
DELETION_RANGE
      5391**DCL      7578<<ASSIGN   7582<>CALL     7588<>CALL
DELETION_RANGE.ENDD.KEY
      5445**DCL      7580<<ASSIGN
DELETION_RANGE.START.KEY
      5417**DCL      7579<<ASSIGN
DONT_FORGET_TO_WEOF
      6659**DCL      7655<<ASSIGN   7699<<ASSIGN   7857>>IF
EDIT_BLOCK_START_KEY$
      6657**DCL      7651<<ASSIGN   7651<<ASSIGN
EVAL_KEY$
      6660**DCL      8247<<ASSIGN   8247<<ASSIGN   8270>>IF       8270>>IF       8385<<ASSIGN   8385<<ASSIGN
      8388>>IF       8388>>IF
EVAL_RANGE_LOCATION$
      6661**DCL      6790<<ASSIGN   6793<<ASSIGN   6807>>CALL     6878<<ASSIGN   6881<<ASSIGN   6883>>CALL
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:304  
F$DCB.ACTPOS
      2139**DCL      2139--REDEF    8057>>ASSIGN   8365>>IF       8368>>ASSIGN
F$DCB.ARS#
      2113**DCL      2113--REDEF    6851>>ASSIGN   6868>>IF       7377>>ASSIGN   7477>>CALL     7487<>CALL
      8052>>IF       8057>>ASSIGN   8366>>ASSIGN
F$DCB.ATTR
      2132**DCL      2133--REDEF
F$DCB.BORROW
      2147**DCL      2147--REDEF    2147--REDEF    2147--REDEF
F$DCB.DCBNAME.L
      2161**DCL      2161--IMP-SIZ
F$DCB.DVBYTE.TRANS#
      2116**DCL      7425>>IF       7434>>IF
F$DCB.EOMCHAR#
      2117**DCL      2117--REDEF    6868>>IF       7381<>CALL     8052>>IF       8055>>IF
F$DCB.EOMVAL#.VALUE#
      2118**DCL      6855<>CALL     6861>>DOCASE   6864>>IF       7406>>DOCASE
F$DCB.FCD#
      2126**DCL      7063>>IF       7312>>IF
F$DCB.FLDID
      2142**DCL      2142--REDEF
F$DCB.FORM$
      2136**DCL      2136--REDEF
F$DCB.FSECT
      2152**DCL      2152--REDEF
F$DCB.FSN#
      2129**DCL      2129--REDEF    2129--REDEF    2130--REDEF
F$DCB.HEADER$
      2135**DCL      2135--REDEF
F$DCB.IXTNSIZE#
      2133**DCL      2133--REDEF
F$DCB.LASTSTA$
      2122**DCL      2122--REDEF
F$DCB.LVL
      2148**DCL      2148--REDEF
F$DCB.NAME#.C
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:305  
      2123**DCL      2123--REDEF
F$DCB.NOEOF
      2145**DCL      2145--REDEF
F$DCB.NRECS#
      2134**DCL      2134--REDEF
F$DCB.NRECX
      2153**DCL      2153--REDEF
F$DCB.OHDR
      2145**DCL      2145--REDEF
F$DCB.ORG#
      2128**DCL      2128--REDEF
F$DCB.PRECNO
      2151**DCL      2151--REDEF
F$DCB.RCSZ
      2157**DCL      2157--REDEF
F$DCB.RES#
      2124**DCL      2124--REDEF
F$DCB.SETX
      2136**DCL      2136--REDEF
F$DCB.TAB$
      2136**DCL      2136--REDEF
F$DCB.TDA
      2150**DCL      2151--REDEF
F$DCB.WSN#
      2124**DCL      2124--REDEF
FEP$READ_KEY
      5457**DCL      7325>>ASSIGN   7361<<ASSIGN   7361>>ASSIGN   8024--ASSIGN
FEP_POS
      5453**DCL      8366<<ASSIGN   8368<<ASSIGN   8369>>IF       8370<<ASSIGN   8388>>IF       8431>>ASSIGN
      8471>>ASSIGN
FEP_READ_RETURN_KEY
      6664**DCL      7325<<ASSIGN   7335>>ASSIGN   7527>>ASSIGN   7742<<ASSIGN   7763<<ASSIGN   7763>>ASSIGN
      7910>>ASSIGN   7911<<ASSIGN   7911>>ASSIGN
FEP_READ_RETURN_KEY$
      6663**DCL      7326<<ASSIGN   7333<<ASSIGN   7346<<ASSIGN   7346<<ASSIGN   7357>>IF       7361>>ASSIGN
      7363<<ASSIGN   7373<<ASSIGN   7373<<ASSIGN   8114>>IF       8114>>IF       8355<<ASSIGN   8355<<ASSIGN
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:306  
      8388>>IF       8388>>IF
FEP_SINPUT_NUMERIC_KEY
      5454**DCL      7527<<ASSIGN   7528--ASSIGN   8277<<ASSIGN   8291<<ASSIGN   8293<<ASSIGN   8296<<ASSIGN
      8305<<ASSIGN   8311<<ASSIGN   8311>>ASSIGN   8314<<ASSIGN   8317--ASSIGN
FEP_WRITE_NUMERIC_KEY
      5455**DCL      7906<<ASSIGN   7910<<ASSIGN   7914--ASSIGN
FIND_REALEST_RECORD_SET_KEY IN PROCEDURE UPDATE_CURSOR_TO_SELECTEDBLOCK
      8226**LABEL    8278--EXIT
FPT_EDTCTL
      2321**DCL      7266<>CALL
FPT_EDTCTL.V
      2329**DCL      2323--DCLINIT
FPT_EDTCTL.V.DCB#
      2329**DCL      7260<<ASSIGN
FPT_READ
      2181**DCL      6828<>CALL     7296<>CALL
FPT_READ.BUF_
      2183**DCL      8003<<ASSIGN
FPT_READ.BUF_.BOUND
      2183**DCL      6868>>IF
FPT_READ.KEY_
      2181**DCL      8024<<ASSIGN
FPT_READ.KEY_.KEY$
      2182**DCL      7325>>ASSIGN   7326>>ASSIGN   7329>>ASSIGN
FPT_READ.STATION_
      2184**DCL      2185--REDEF
FPT_READ.V
      2185**DCL      2181--DCLINIT
FPT_READ.V.DCB#
      2185**DCL      6798<<ASSIGN   7170<<ASSIGN   7312--IF       8036>>ASSIGN
FPT_READ.V.DVBYTE.BP#
      2195**DCL      6803<<ASSIGN   6805<<ASSIGN   7175<<ASSIGN   7177<<ASSIGN
FPT_READ.V.DVBYTE.REREAD#
      2196**DCL      2196--REDEF    6799<<ASSIGN   6844<<ASSIGN   6867<<ASSIGN   7171<<ASSIGN
FPT_READ.V.INDX#
      2194**DCL      2194--REDEF
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:307  
FPT_SINPUT
      2219**DCL      7047<>CALL     7536<>CALL     8325<>CALL
FPT_SINPUT.BUF_
      2226**DCL      7528<<ASSIGN   8317<<ASSIGN
FPT_SINPUT.V
      2231**DCL      2221--DCLINIT
FPT_SINPUT.V.DCB#
      2231**DCL      6797<<ASSIGN   7529<<ASSIGN   8318<<ASSIGN
FPT_SINPUT.V.REREADPOS#
      2238**DCL      7044<<ASSIGN   7045<<ASSIGN   8237<<ASSIGN
FPT_TRMATTR
      2255**DCL      7264<>CALL
FPT_TRMATTR.V
      2263**DCL      2257--DCLINIT
FPT_TRMATTR.V.DCB#
      2263**DCL      7261<<ASSIGN
FPT_WEOF
      2371**DCL      7884<>CALL
FPT_WEOF.V
      2371**DCL      2371--DCLINIT
FPT_WEOF.V.DCB#
      2371**DCL      7877<<ASSIGN
FPT_WRITE
      2391**DCL      7923<>CALL
FPT_WRITE.BUF_
      2391**DCL      7899<<ASSIGN   7901<<ASSIGN
FPT_WRITE.KEY_
      2391**DCL      7914<<ASSIGN
FPT_WRITE.STATION_
      2393**DCL      2393--REDEF
FPT_WRITE.V
      2394**DCL      2391--DCLINIT
FPT_WRITE.V.DCB#
      2394**DCL      7915<<ASSIGN
FPT_WRITE.V.DVBYTE.VFC#
      2400**DCL      2400--REDEF
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:308  
FROM_PRESENTER
      4772**DCL        14--PROC     6731<>CALL     6743>>IF       6756>>IF       7067>>IF       7491>>IF
INTERRUPT_STATE_AFTER_M$READ
      6683**DCL      6840<<ASSIGN   6912>>IF       7308<<ASSIGN   7417>>IF
INTERRUPT_STATE_BEFORE_M$READ
      6682**DCL      6821<<ASSIGN   6841>>ASSIGN   7294<<ASSIGN   7309>>ASSIGN
KT_TO_INCR IN PROCEDURE COMPLETION_RECORD_NEEDED
      6957**DCL      7046>>ASSIGN
LEVEL#
      6665**DCL      6727<<ASSIGN   6961>>ASSIGN   6987>>IF       6987>>ASSIGN   6987>>ASSIGN   7098>>ASSIGN
      7100>>ASSIGN   7208>>DOCASE   7212>>IF       7651>>IF       7651>>ASSIGN   7651>>ASSIGN   7681>>ASSIGN
      7737>>IF       7737>>ASSIGN   7737>>ASSIGN   7760>>ASSIGN   7762>>ASSIGN   7788>>IF       7788>>ASSIGN
      7788>>ASSIGN   7851>>ASSIGN   7919>>CALL     7935>>CALL     7941>>CALL     8021>>ASSIGN   8247>>IF
      8247>>ASSIGN   8247>>ASSIGN   8285>>DOCASE   8345>>ASSIGN   8385>>IF       8385>>ASSIGN   8385>>ASSIGN
      8407>>IF       8407>>CALL     8407>>CALL     8408>>ASSIGN   8425>>ASSIGN   8425>>CALL     8447>>IF
      8447>>CALL     8447>>CALL     8448>>ASSIGN   8465>>ASSIGN   8465>>CALL
LOCATION IN PROCEDURE COMPLETION_RECORD_NEEDED
      6937**DCL      6926--PROC     6964<>CALL     7043--IF
LOCATION.POSITION# IN PROCEDURE COMPLETION_RECORD_NEEDED
      6955**DCL      7044>>ASSIGN
LOCATION$
      6669**DCL      7081<<ASSIGN   7083<<ASSIGN   7086>>IF       7105>>CALL     7130>>CALL     7135<<ASSIGN
      7683<<ASSIGN   7686>>CALL     7701<<ASSIGN   7704>>CALL     7765<<ASSIGN   7773>>CALL     7846<<ASSIGN
      8232<<ASSIGN   8234<<ASSIGN   8237>>ASSIGN   8247>>IF       8247>>ASSIGN   8247>>ASSIGN   8250>>IF
LOCATION_PTRS
      5219**DCL      7105<>CALL     7114<>CALL
M$READ
        65**DCL-ENT  6828--CALL     7296--CALL
M$SINPUT
        91**DCL-ENT  7536--CALL     8325--CALL
M$STRMATTR
        90**DCL-ENT  7264--CALL
M$STRMCTL
        88**DCL-ENT  7266--CALL
M$WEOF
        67**DCL-ENT  7884--CALL
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:309  
M$WRITE
        65**DCL-ENT  7923--CALL
NEXT_WINDOW$
      4770**DCL        14--PROC     6750<>CALL     6901>>IF       7444>>IF       8179<<ASSIGN   8189<<ASSIGN
      8194<<ASSIGN
NORMAL_READ_COMPLETION
      6671**DCL      6823<<ASSIGN   6831<<ASSIGN   6835<<ASSIGN   6846>>IF       7290<<ASSIGN   7299<<ASSIGN
      7303<<ASSIGN   7385>>IF
PRESENTER_ALTRET
      6756**LABEL    6737--CALLALT  6740--CALLALT
PRESENTER_IN_1_D
      6764**PROC     6737--CALL
PRESENTER_IN_2_D
      7060**PROC     6740--CALL
RECORDS_NEEDED IN PROCEDURE COMPLETION_RECORDS_NEEDED
      7628**DCL      7598--PROC     7630>>IF       7634>>ASSIGN   7639>>ASSIGN
RECORD_SET_INDEX
      6672**DCL      8099<<DOINDEX  8110>>IF       8110>>ASSIGN   8110>>ASSIGN   8118>>IF       8118>>IF
      8118>>IF       8206<<ASSIGN   8207>>IF       8221>>IF       8221>>ASSIGN   8221>>ASSIGN   8255<<DOINDEX
      8266>>IF       8266>>ASSIGN   8266>>ASSIGN   8274>>IF       8314>>ASSIGN
RECORD_SET_KEY
      5160**DCL      8322<>CALL
RECORD_SET_KEY$
      6673**DCL      7398<<ASSIGN   7398<<ASSIGN   8110<<ASSIGN   8110<<ASSIGN   8114>>IF       8114>>IF
      8221<<ASSIGN   8221<<ASSIGN   8266<<ASSIGN   8266<<ASSIGN   8270>>IF       8270>>IF       8311>>ASSIGN
RECORD_SET_RANGE
      5235**DCL      7097<<ASSIGN   7114<>CALL     8040<<ASSIGN   8044<>CALL
RECORD_SET_RANGE.ENDD.KEY
      5289**DCL      7100<<ASSIGN
RECORD_SET_RANGE.START.KEY
      5261**DCL      7098<<ASSIGN
RELATIVE
      6675**DCL      6772<<ASSIGN   6779<<ASSIGN   6782<<ASSIGN   6807<>CALL     7076<<ASSIGN   7122>>IF
      7124<<ASSIGN   7125>>IF       7125<<ASSIGN   7125>>ASSIGN   7126<<ASSIGN   7126>>ASSIGN   7130<>CALL
      7152>>ASSIGN   7633<<ASSIGN   7638<<ASSIGN   7684<<ASSIGN   7686<>CALL     7702<<ASSIGN   7704<>CALL
      7741<<ASSIGN   7763>>ASSIGN   7773<>CALL     7797>>IF       7848>>IF       7871>>IF       7881<>CALL
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:310  
      7911>>ASSIGN   7933>>IF
RELATIVE IN PROCEDURE COMPLETION_RECORD_NEEDED
      6928**DCL      6926--PROC     6964<>CALL     6974>>IF       7027>>IF       7043>>IF
RETALT IN PROCEDURE COMPLETION_RECORDS_NEEDED
      7857**LABEL    7692--CALLALT  7710--CALLALT  7723--CALLALT  7744--CALLALT  7821--CALLALT  7835--CALLALT
      7842--CALLALT  7859--CALLALT
RETALT IN PROCEDURE COMPLETION_RECORD_DELETED
      7594**LABEL    7570--CALLALT  7582--CALLALT  7588--CALLALT
RETALT IN PROCEDURE PRESENTER_IN_1_D
      6809**LABEL    6859--CALLALT  6875--CALLALT  6883--CALLALT  6889--CALLALT  6892--CALLALT  6895--CALLALT
RETALT IN PROCEDURE PRESENTER_IN_2_D
      7109**LABEL    7143--CALLALT  7148--CALLALT  7281--CALLALT  7409--CALLALT  7419--CALLALT  7427--CALLALT
      7429--CALLALT  7436--CALLALT  7438--CALLALT  7487--CALLALT  7503--CALLALT  7511--CALLALT  7513--CALLALT
RETALT IN PROCEDURE WRITE_VDH
      7926**LABEL    7935--CALLALT  7941--CALLALT
RGET_NODE_DESC
      5305**DCL      7009<>CALL     7047<>CALL     7692<>CALL     7710<>CALL     7821<>CALL     7919<>CALL
RGET_NODE_DESC.DATA$
      5337**DCL      7897>>IF       7901>>ASSIGN   7901>>ASSIGN   7935>>CALL     7935>>CALL     7941>>CALL
      7941>>CALL
RGET_NODE_DESC.KEY
      5319**DCL      7018>>IF       7697>>IF       7715>>IF       7826>>IF
RGET_NODE_DESC.KEY.TYPE#
      5321**DCL      7046>>ASSIGN   7743>>ASSIGN
RREAD_LOCATION
      5190**DCL      7674<<ASSIGN   7677<<ASSIGN   7683--ASSIGN   7758<<ASSIGN   7765--ASSIGN
RREAD_LOCATION.KEY
      5204**DCL      7681>>ASSIGN   7760<<ASSIGN   7762>>ASSIGN
RREAD_SAVED_KEY
      5145**DCL      6961<<ASSIGN   7681<<ASSIGN   7762<<ASSIGN   7851<<ASSIGN   8345<<ASSIGN   8362<<ASSIGN
      8425>>ASSIGN   8465>>ASSIGN
RREAD_SAVED_KEY.REP#
      5149**DCL      6998>>IF       7809>>IF       8355>>IF       8425>>IF       8465>>IF
RREAD_SAVED_KEY.V$
      5149**DCL      6998>>ASSIGN   6998--ASSIGN   7809>>ASSIGN   7809--ASSIGN   8355>>ASSIGN   8355--ASSIGN
      8425>>CALL     8425>>CALL     8465>>CALL     8465>>CALL
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:311  
RREAD_SAVED_KEY$
      6670**DCL      6998<<ASSIGN   6998<<ASSIGN   7001>>IF       7001>>IF       7809<<ASSIGN   7809<<ASSIGN
      7812>>IF       7812>>IF
SCROLL_INDEX
      6676**DCL      7769<<DOINDEX
SCROLL_LIMIT
      6678**DCL      7634<<ASSIGN   7639<<ASSIGN   7684>>ASSIGN   7702>>ASSIGN   7747<<ASSIGN   7747>>ASSIGN
      7769>>DOINDEX
SCROLL_N_RECORDS IN PROCEDURE COMPLETION_RECORDS_NEEDED
      7769**LABEL    7837--EXIT
STREAM$PROTECT.FLAG
      5460**DCL      7191>>IF
STREAM_CURRENT_KEY$
      6680**DCL      6987<<ASSIGN   6987<<ASSIGN   7001>>IF       7001>>IF       7737<<ASSIGN   7737<<ASSIGN
      7788<<ASSIGN   7788<<ASSIGN   7812>>IF       7812>>IF       7906>>ASSIGN
UGLY_RETRY_UC17_ERROR_LABEL IN PROCEDURE PRESENTER_IN_2_D
      7183**LABEL    7537--GOTO
UPDATE_CURSOR_TO_SELECTEDBLOCK
      8201**PROC     7148--CALL     7503--CALL     7515--CALL
UPDATE_SELECTEDBLOCK_TO_CURSOR
      8339**PROC     6745--CALL     6758--CALL     8043--CALL
VD$BLOCK_DESC.FILE_KEY
      5505**DCL      7582<>CALL
VD$BLOCK_DESC.OPTIONS
      5588**DCL      8139<>CALL
VD$BLOCK_DESC.OPTIONS.COMPONENT#
      5590**DCL      7191>>IF
VD$BLOCK_DESC.OPTIONS.LEVEL#
      5590**DCL      6727>>ASSIGN   7191>>IF
VD$BLOCK_DESC.RANGE
      5519**DCL      6964<>CALL     7009<>CALL     7130<>CALL     7686<>CALL     7692<>CALL     7704<>CALL
      7710<>CALL     7773<>CALL     7821<>CALL     8139<>CALL
VD$BLOCK_DESC.RANGE.START
      5531**DCL      7758>>ASSIGN
VD$BLOCK_DESC.RANGE.START.KEY.REP#
      5545**DCL      7651>>IF
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:312  
VD$BLOCK_DESC.RANGE.START.KEY.V$
      5545**DCL      7651>>ASSIGN   7651--ASSIGN
VD$BUFFER
      5633**DCL      7935<>CALL     7941<>CALL     8128<>CALL
VD$BUFFER.BYTES
      5661**DCL      7901--ASSIGN   8003--ASSIGN   8118>>IF       8118>>IF
VD$BUFFER.LENGTH#
      5659**DCL      5661--IMP-SIZ  6851<<ASSIGN   7377<<ASSIGN   7509>>IF       7897>>IF       7901>>ASSIGN
      7935>>CALL     7941>>CALL     8002<<ASSIGN   8003>>ASSIGN   8118>>IF       8118>>IF       8118>>IF
      8118>>IF       8128>>CALL
VD$BUFFER_HEADER
      5674**DCL      7989--CALL
VD$ERR.DCB#
      5752**DCL      8036<<ASSIGN
VD$EVAL.RANGE
      5869**DCL      8044<>CALL
VD$EVAL.RANGE.ENDD
      5909**DCL      6793--ASSIGN   6878--ASSIGN   7083--ASSIGN   7677>>ASSIGN   8234--ASSIGN
VD$EVAL.RANGE.ENDD.EOF
      5925**DCL      8469<<ASSIGN
VD$EVAL.RANGE.ENDD.KEY
      5921**DCL      8448<<ASSIGN   8465<<ASSIGN
VD$EVAL.RANGE.ENDD.KEY.REP#
      5923**DCL      8447>>IF
VD$EVAL.RANGE.ENDD.KEY.V$
      5923**DCL      8447>>CALL     8447>>CALL     8465<>CALL
VD$EVAL.RANGE.ENDD.POSITION#
      5925**DCL      8057<<ASSIGN   8471<<ASSIGN
VD$EVAL.RANGE.START
      5881**DCL      6790--ASSIGN   6881--ASSIGN   7081--ASSIGN   7674>>ASSIGN   8232--ASSIGN
VD$EVAL.RANGE.START.EOF
      5897**DCL      8429<<ASSIGN
VD$EVAL.RANGE.START.KEY
      5893**DCL      8408<<ASSIGN   8425<<ASSIGN
VD$EVAL.RANGE.START.KEY.REP#
      5895**DCL      8385>>IF       8407>>IF
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:313  
VD$EVAL.RANGE.START.KEY.V$
      5895**DCL      8385>>ASSIGN   8385--ASSIGN   8407>>CALL     8407>>CALL     8425<>CALL
VD$EVAL.RANGE.START.POSITION#
      5897**DCL      8042<<ASSIGN   8052>>IF       8388>>IF       8431<<ASSIGN
VD$EVAL.STATE#
      5997**DCL      6786>>DOCASE   6877>>IF       7077>>DOCASE   7670>>DOCASE   8041<<ASSIGN   8060<<ASSIGN
      8228>>DOCASE   8372>>IF       8394>>IF       8394>>IF       8434>>IF       8434>>IF
VD$FILE_NODE.DESC.SPEC.V$
      6087**DCL      6726>>ASSIGN
VD$FILE_NODE.FLINK$
      6034**DCL      8187>>IF       8189>>ASSIGN   8194>>ASSIGN
VD$FILE_NODE.HEAD$
      6091**DCL      8189>>ASSIGN
VD$LOCATION
      6116**DCL      6807<>CALL     6883<>CALL     7105<>CALL     7130<>CALL     7686<>CALL     7704<>CALL
      7773<>CALL
VD$LOCATION.EOF
      6134**DCL      7086>>IF       8250>>IF
VD$LOCATION.KEY.REP#
      6132**DCL      8247>>IF
VD$LOCATION.KEY.V$
      6132**DCL      8247>>ASSIGN   8247--ASSIGN
VD$LOCATION.POSITION#
      6134**DCL      8237>>ASSIGN
VD$PORT
      6144**DCL      8049<>CALL     8154<>CALL
VD$PORT.LEVEL.INTERNAL$
      6231**DCL      8189>>ASSIGN
VD$PORT.LEVEL.KEY_TYPE#
      6215**DCL      7212>>IF       8021>>ASSIGN
VD$PORT.LEVEL.ORG#
      6215**DCL      7208>>DOCASE   8285>>DOCASE
VD$RECORD_SET
      6242**DCL      7476<>CALL     7477--CALL
VD$RECORD_SET.DESC
      6279**DCL      7477--CALL
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:314  
VD$RECORD_SET.DESC.DATA$
      6309**DCL      8118>>IF       8118>>IF       8118>>IF
VD$RECORD_SET.DESC.KEY
      6291**DCL      7098>>ASSIGN   7100>>ASSIGN   7335>>ASSIGN
VD$RECORD_SET.DESC.KEY.REP#
      6293**DCL      7398>>IF       8110>>IF       8221>>IF       8266>>IF
VD$RECORD_SET.DESC.KEY.V$
      6293**DCL      7398>>ASSIGN   7398--ASSIGN   8110>>ASSIGN   8110--ASSIGN   8221>>ASSIGN   8221--ASSIGN
      8266>>ASSIGN   8266--ASSIGN
VD$RECORD_SET.MX_ENTRIES#
      6268**DCL      7467>>IF       7475<<ASSIGN
VD$RECORD_SET.N_ENTRIES#
      6268**DCL      7067>>IF       7100>>ASSIGN   7124>>ASSIGN   7331>>IF       7398>>IF       7398>>ASSIGN
      7398>>ASSIGN   7471>>IF       7509>>IF       7657>>IF       8099>>DOINDEX  8206>>ASSIGN   8255>>DOINDEX
VD$RECORD_SET.SQ_OFFSET#
      6268**DCL      7335>>ASSIGN   7669<<ASSIGN   8314>>ASSIGN
VD$STREAM
      6320**DCL      6964<>CALL     7009<>CALL     7130<>CALL     7588<>CALL     7686<>CALL     7692<>CALL
      7704<>CALL     7710<>CALL     7773<>CALL     7821<>CALL     8044<>CALL     8139<>CALL
VD$STREAM.CURRENT
      6371**DCL      7135--ASSIGN
VD$STREAM.CURRENT.KEY
      6383**DCL      6961>>ASSIGN   7851>>ASSIGN   7919<>CALL     7935<>CALL     7941<>CALL     8345>>ASSIGN
VD$STREAM.CURRENT.KEY.REP#
      6385**DCL      6987>>IF       7737>>IF       7788>>IF
VD$STREAM.CURRENT.KEY.V$
      6385**DCL      6987>>ASSIGN   6987--ASSIGN   7737>>ASSIGN   7737--ASSIGN   7788>>ASSIGN   7788--ASSIGN
VD$STREAM.PORT$
      6346**DCL      7208>>DOCASE   7212>>IF       8021>>ASSIGN   8049>>CALL     8154>>CALL     8189>>ASSIGN
      8285>>DOCASE
VD$STREAM.PROTECT
      6346**DCL      7191--IF
VD$TEXTC
      6426**DCL      7001>>IF       7001>>IF       8114>>IF       8114>>IF       8388>>IF       8388>>IF
VD$TEXTC.BYTES
      6436**DCL      7812>>IF       7812>>IF       8270>>IF       8270>>IF
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:315  
VD$TEXTC.LENGTH#
      6434**DCL      6436--IMP-SIZ  7001>>IF       7001>>IF       7329<<ASSIGN   7357>>IF       7812>>IF
      7812>>IF       8114>>IF       8114>>IF       8270>>IF       8270>>IF       8388>>IF       8388>>IF
VD$TEXTC_NUMBER.BYTES#
      6453**DCL      7906>>ASSIGN   8311>>ASSIGN
VD$TEXTC_REMOTE
      6480**DCL      8407<>CALL     8425<>CALL     8447<>CALL     8465<>CALL
VD$TEXTC_REMOTE.LENGTH#
      6509**DCL      6511--IMP-SIZ  6987--ASSIGN   6998--ASSIGN   7346--ASSIGN   7373--ASSIGN   7398--ASSIGN
      7651--ASSIGN   7737--ASSIGN   7788--ASSIGN   7809--ASSIGN   8024--ASSIGN   8110--ASSIGN   8221--ASSIGN
      8247--ASSIGN   8266--ASSIGN   8355--ASSIGN   8385--ASSIGN   8407>>CALL     8425>>CALL     8447>>CALL
      8465>>CALL
VDA$LDELETE
      6686**DCL-ENT  7588--CALL
VDA$PFLUSH
      6685**DCL-ENT  8049--CALL     8154--CALL
VDE$RGET
      6689**DCL-ENT  7009--CALL     7692--CALL     7710--CALL     7821--CALL
VDE$RPUT
      6690**DCL-ENT  8139--CALL
VDE$RREAD
      6687**DCL-ENT  6964--CALL     7130--CALL     7686--CALL     7704--CALL     7773--CALL
VDG$COMPARE_PTRS_W_RANGE
      6715**DCL-ENT  7114--CALL
VDG$EBREAK_ACKNOWLEDGE
      6693**DCL-ENT  6913--CALL     7418--CALL
VDG$EREPORT_ERROR
      6698**DCL-ENT  7032--CALL     8174--CALL
VDG$ERRMSG
      6694**DCL-ENT  8035--CALL     8173--CALL
VDG$ESCREECH
      6699**DCL-ENT  7473--CALL     8299--CALL     8330--CALL
VDG$EXPAND_COMMAND_WINDOW
      6700**DCL-ENT  8171--CALL
VDG$LOCATION_TO_PTRS
      6701**DCL-ENT  7105--CALL
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:316  
VDG$MONERR
      6696**DCL-ENT  6918--CALL     7269--CALL     7541--CALL     7887--CALL     7926--CALL     8331--CALL
VDG$MPRES_FEPREAD
      6703**DCL-ENT  6818--CALL     7286--CALL
VDG$MPRES_FEPREAD_RETURN
      6704**DCL-ENT  6855--CALL     7381--CALL
VDG$MPRES_FEPSINPUT
      6705**DCL-ENT  7533--CALL     8322--CALL
VDG$MPRES_FEPWEOF
      6707**DCL-ENT  7881--CALL
VDG$MPRES_FEPWRITE
      6708**DCL-ENT  7919--CALL
VDG$MPRES_WREAD
      6709**DCL-ENT  6731--CALL
VDG$MPRES_WREAD_RETURN
      6710**DCL-ENT  6750--CALL
VDG$OALLOC
      6711**DCL-ENT  7477--CALL     7989--CALL     8009--CALL
VDG$OCOPY
      6712**DCL-ENT  8425--CALL     8465--CALL
VDG$OFREE
      6713**DCL-ENT  7476--CALL     8407--CALL     8447--CALL
VDG$WARNMSG
      6697**DCL-ENT  7029--CALL     7031--CALL
VDI$BSPLIT
      6716**DCL-ENT  8044--CALL
VDP$NFLUSH
      6718**DCL-ENT  7281--CALL
VDP$RDELETE
      6719**DCL-ENT  7582--CALL
VDP$WERASE
      6721**DCL-ENT  7143--CALL
VDP$WFORMAT_RECORD
      6722**DCL-ENT  7047--CALL
VDP$WSCROLL_DOWN
      6723**DCL-ENT  7935--CALL     8128--CALL
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:317  
VDP$WSCROLL_UP
      6724**DCL-ENT  7570--CALL     7941--CALL
VDP_BUFFER$
      6650**DCL      6851>>ASSIGN   7377>>ASSIGN   7509>>IF       7985>>IF       7989<>CALL     8001>>ASSIGN
      8002>>ASSIGN   8003>>ASSIGN   8003>>ASSIGN   8147<<ASSIGN   8151<<ASSIGN
VDP_KEY$
      6651**DCL      8005>>IF       8009<>CALL     8023>>ASSIGN   8024>>ASSIGN
VDP_NODE_DESC
      5348**DCL      6818<>CALL     6855<>CALL     7286<>CALL     7381<>CALL     8139<>CALL
VDP_NODE_DESC.DATA$
      5380**DCL      8001<<ASSIGN   8118>>IF       8118>>IF       8118>>IF       8128>>CALL     8128>>CALL
VDP_NODE_DESC.KEY
      5362**DCL      7335<<ASSIGN   7533<>CALL     7570<>CALL     7570<>CALL     7579>>ASSIGN   7580>>ASSIGN
      7760>>ASSIGN   8128<>CALL     8362>>ASSIGN
VDP_NODE_DESC.KEY.REP#
      5364**DCL      7346>>IF       7360<<ASSIGN   7373>>IF       8020<<ASSIGN
VDP_NODE_DESC.KEY.TYPE#
      5364**DCL      7327>>IF       7743<<ASSIGN   7903>>IF       8021<<ASSIGN   8309>>IF
VDP_NODE_DESC.KEY.V$
      5364**DCL      7346>>ASSIGN   7346--ASSIGN   7361--ASSIGN   7363--ASSIGN   7373>>ASSIGN   7373--ASSIGN
      8023<<ASSIGN
VDP_SOBS IN PROCEDURE UPDATE_CURSOR_TO_SELECTEDBLOCK
      8203**DCL      8328>>IF
VD_$$MON_PRES.V#
      4856**DCL      6729>>IF       6748>>IF       6816>>IF       6853>>IF       7284>>IF       7379>>IF
      7531>>IF       7879>>IF       7917>>IF       8320>>IF
VD_$BY.V#
      4902**DCL      7227>>IF       7231>>ASSIGN   8289>>IF       8293>>ASSIGN
VD_$COMMAND.V#
      4948**DCL      8172<<ASSIGN
VD_$MAX_RECORD.V#
      5040**DCL      8369>>IF       8370>>ASSIGN
VD_$SCREEN.V#
      5086**DCL      6735>>IF       8089>>IF       8171<>CALL     8341>>IF
VD_$STRIP_BLANKS.V#
      5132**DCL      6801>>IF       7173>>IF
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:318  
VD_6E.ERR_TAIL$
      4806**DCL      8036>>ASSIGN
VD_6E.INTERRUPT.STATE#
      4806**DCL      6821>>ASSIGN   6822>>IF       6827<<ASSIGN   6840>>ASSIGN   6841<<ASSIGN   7289>>IF
      7294>>ASSIGN   7295<<ASSIGN   7308>>ASSIGN   7309<<ASSIGN
VD_6E.WINDOWS$
      4788**DCL      8189>>ASSIGN
VD_CURRENT_WINDOW$
      4811**DCL      6726>>ASSIGN   6901>>IF       7444>>IF       8187>>IF       8194>>ASSIGN
VD_KEY_NUMERIC_BOF.V$
      5179**DCL      7333--ASSIGN
VD_LAST_CWIN_ACTIVITY
      4812**DCL      6767<<ASSIGN   8175<<ASSIGN
VLP_EDTCTL
      2350**DCL      2327--DCLINIT
VLP_EDTCTL.KEYINCR#
      2353**DCL      7188<<ASSIGN   7198>>IF       7201<<ASSIGN   7218>>IF       7221<<ASSIGN   7227>>IF
      7231<<ASSIGN   7238>>IF       7241<<ASSIGN   7248>>IF       7251<<ASSIGN   7262>>ASSIGN
VLP_EDTCTL.KEYTYPE#
      2351**DCL      7189<<ASSIGN   7202<<ASSIGN   7222<<ASSIGN   7227>>IF       7232<<ASSIGN   7242<<ASSIGN
      7252<<ASSIGN   7263>>ASSIGN
VLP_TRMATTR
      2282**DCL      2261--DCLINIT
VLP_TRMATTR.FCNTBL#
      2298**DCL      7203<<ASSIGN   7257<<ASSIGN
WEOF_VDH IN PROCEDURE COMPLETION_RECORDS_NEEDED
      7869**PROC     7723--CALL     7835--CALL     7859--CALL
WINDOW$SPEC
      6525**DCL      6731<>CALL     6750<>CALL     7143<>CALL     7570<>CALL     7935<>CALL     7941<>CALL
      8128<>CALL
WINDOW$SPEC.BOB_DISPLAYED
      6568**DCL      7873<<ASSIGN   8274>>IF
WINDOW$SPEC.DCB#
      6568**DCL      6797>>ASSIGN   6798>>ASSIGN   6818<>CALL     6851--ASSIGN   6855--CALL     6861--DOCASE
      6864--IF       6868--IF       6868--IF       7063--IF       7170>>ASSIGN   7260>>ASSIGN   7261>>ASSIGN
      7286<>CALL     7377--ASSIGN   7381--CALL     7406--DOCASE   7425--IF       7434--IF       7477--CALL
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:319  
      7487--CALL     7529>>ASSIGN   7533<>CALL     7877>>ASSIGN   7881<>CALL     7915>>ASSIGN   7919<>CALL
      8052--IF       8052--IF       8055--IF       8057--ASSIGN   8057--ASSIGN   8318>>ASSIGN   8322<>CALL
      8365--IF       8366--ASSIGN   8368--ASSIGN
WINDOW$SPEC.EDTCTL.KEY_GENERATION#
      6577**DCL      7189>>ASSIGN   7227>>IF       7232>>ASSIGN   7263<<ASSIGN
WINDOW$SPEC.EDTCTL.KEY_INCR#
      6578**DCL      7046<<ASSIGN   7188>>ASSIGN   7262<<ASSIGN   8034>>IF
WINDOW$SPEC.EOB_DISPLAYED
      6568**DCL      7090>>IF       7722<<ASSIGN   7875<<ASSIGN   8283>>IF
WINDOW$SPEC.OPERAND.EDIT_BLOCK$
      6566**DCL      6727>>ASSIGN   6964>>CALL     7009>>CALL     7130>>CALL     7191>>IF       7191>>IF
      7582>>CALL     7651>>IF       7651>>ASSIGN   7651>>ASSIGN   7686>>CALL     7692>>CALL     7704>>CALL
      7710>>CALL     7758>>ASSIGN   7773>>CALL     7821>>CALL     8139>>CALL     8139>>CALL
WINDOW$SPEC.OPERAND.EVAL$
      6566**DCL      6786>>DOCASE   6790>>ASSIGN   6793>>ASSIGN   6877>>IF       6878>>ASSIGN   6881>>ASSIGN
      7077>>DOCASE   7081>>ASSIGN   7083>>ASSIGN   7670>>DOCASE   7674>>ASSIGN   7677>>ASSIGN   8041>>ASSIGN
      8042>>ASSIGN   8044>>CALL     8052>>IF       8057>>ASSIGN   8060>>ASSIGN   8228>>DOCASE   8232>>ASSIGN
      8234>>ASSIGN   8372>>IF       8385>>IF       8385>>ASSIGN   8385>>ASSIGN   8388>>IF       8394>>IF
      8394>>IF       8407>>IF       8407>>CALL     8407>>CALL     8408>>ASSIGN   8425>>ASSIGN   8425>>CALL
      8429>>ASSIGN   8431>>ASSIGN   8434>>IF       8434>>IF       8447>>IF       8447>>CALL     8447>>CALL
      8448>>ASSIGN   8465>>ASSIGN   8465>>CALL     8469>>ASSIGN   8471>>ASSIGN
WINDOW$SPEC.OPERAND.STREAM$
      6566**DCL      6961>>ASSIGN   6964>>CALL     6987>>IF       6987>>ASSIGN   6987>>ASSIGN   7009>>CALL
      7130>>CALL     7135>>ASSIGN   7191>>IF       7208>>DOCASE   7212>>IF       7588>>CALL     7686>>CALL
      7692>>CALL     7704>>CALL     7710>>CALL     7737>>IF       7737>>ASSIGN   7737>>ASSIGN   7773>>CALL
      7788>>IF       7788>>ASSIGN   7788>>ASSIGN   7821>>CALL     7851>>ASSIGN   7919>>CALL     7935>>CALL
      7941>>CALL     8021>>ASSIGN   8044>>CALL     8049>>CALL     8139>>CALL     8154>>CALL     8285>>DOCASE
      8345>>ASSIGN
WINDOW$SPEC.RECORD_SET$
      6569**DCL      7067>>IF       7098>>ASSIGN   7100>>ASSIGN   7100>>ASSIGN   7124>>ASSIGN   7331>>IF
      7335>>ASSIGN   7335>>ASSIGN   7398>>IF       7398>>IF       7398>>ASSIGN   7398>>ASSIGN   7398>>ASSIGN
      7398>>ASSIGN   7467>>IF       7471>>IF       7475>>ASSIGN   7476>>CALL     7477<>CALL     7509>>IF
      7657>>IF       7669>>ASSIGN   8099>>DOINDEX  8110>>IF       8110>>ASSIGN   8110>>ASSIGN   8118>>IF
      8118>>IF       8118>>IF       8206>>ASSIGN   8221>>IF       8221>>ASSIGN   8221>>ASSIGN   8255>>DOINDEX
      8266>>IF       8266>>ASSIGN   8266>>ASSIGN   8314>>ASSIGN
WINDOW$SPEC.SCREEN_UPDATED
PL6.E3A0      #003=VDP$WREAD File=VDP$WINDOW_I_O.:VDA5TSI                        FRI 07/04/97 11:40 Page:320  
      6569**DCL      7280<<ASSIGN   7319<<ASSIGN   7931<<ASSIGN
WITHIN_RANGE
      6681**DCL      7062<<ASSIGN   7075<<ASSIGN   7094<<ASSIGN   7112>>IF       7114<>CALL     7126>>ASSIGN
      7134<<ASSIGN   7139>>IF       7152<<ASSIGN   7499>>IF       8211<<ASSIGN   8276<<ASSIGN   8304<<ASSIGN
WRITE_VDH IN PROCEDURE COMPLETION_RECORDS_NEEDED
      7895**PROC     7744--CALL     7842--CALL

PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:321  
     2257        1        /*M* VDP$WSCROLL_DOWN:  Scroll a window down.  */
     2258        2        /*T***********************************************************/
     2259        3        /*T*                                                         */
     2260        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2261        5        /*T*                                                         */
     2262        6        /*T***********************************************************/
     2263        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
     2264        8
     2265        9        /*P*  NAME:         VDP$WSCROLL_DOWN
     2266       10              PURPOSE:      Presenter's scroll-record-set-down module.
     2267       11              DESCRIPTION:  Called to scroll a record set down.
     2268       12        */
     2269       13
     2270       14        VDP$WSCROLL_DOWN: PROC ( SCROLL_WINDOW,
     2271       15              SCROLL_KEY,
     2272       16              SCROLL_SPEC,
     2273       17              SCROLL_DATA )
     2274       18              ALTRET;
     2275       19
     2276       20        /*D*  NAME:         VDP$WSCROLL_DOWN
     2277       21              CALL:         CALL VDP$WSCROLL_DOWN ( scroll_window,
     2278       22                                                    scroll_key,
     2279       23                                                    scroll_spec,
     2280       24                                                    scroll_data )
     2281       25                            ALTRET ( label );
     2282       26              PARAMETERS:   scroll_window is a VD$WINDOW_SPEC corresponding
     2283       27                            to the window to scroll;
     2284       28                            scroll_key is the key causing the scroll-down
     2285       29                            request.
     2286       30                            scroll_spec and scroll_data contain the spec and
     2287       31                            data components at the scroll_key
     2288       32              INTERFACE:    Called from VDP$WREAD when:
     2289       33                            1)  a record has been inserted or replaced;
     2290       34                            2)  an E$RECORDS_NEEDED altret was received
     2291       35                                and an appropriate record was found in the
     2292       36                                file.
     2293       37              ENVIRONMENT:  Nothing unusual.
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:322  
     2294       38              INPUT:
     2295       39              OUTPUT:
     2296       40              SCRATCH:
     2297       41              DESCRIPTION:  If appropriate, scrolls the record set down,
     2298       42                            i.e., moves all or part of the record set in
     2299       43                            the EOF direction, thereby "losing" a record
     2300       44                            at the end of the record set if it's already
     2301       45                            full.
     2302       46                            The code within is really handling several
     2303       47                            different cases, not all of them actually
     2304       48                            requiring action by this routine.  This module
     2305       49                            really exists only such that there be only *1*
     2306       50                            fellow who actually scrolls the record set down
     2307       51                            (bugs, hopefully, being easier to find that way).
     2308       52                            Called because:
     2309       53                            1)  An E$RECORDS_NEEDED was received for the
     2310       54                                backwards (towards BOF) direction and an
     2311       55                                appropriate record was found in the file
     2312       56                                and written to the FEP.  We'll insert that
     2313       57                                key at the beginning of the record set and
     2314       58                                shuffle everything down 1, losing the last
     2315       59                                entry if the record set was already full.
     2316       60                                If the record set was empty, we'll add to
     2317       61                                the beginning.
     2318       62                            2)  A record was replaced.  We'll find the
     2319       63                                key in the record set already and RETURN.
     2320       64                            3)  A record was inserted.  We'll find a
     2321       65                                key in the record set which is greater
     2322       66                                than the key of the inserted record, and
     2323       67                                shuffle everything down 1 from there on,
     2324       68                                losing the last entry if the record set was
     2325       69                                already full.  If the inserted record is
     2326       70                                past the end of the record set and the
     2327       71                                record set's not full, we'll add to the
     2328       72                                end.  If the inserted record is past the
     2329       73                                end of the record set and the record set
     2330       74                                is full, we'll call VDP$SCROLL_UP.
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:323  
     2331       75        */
     2332       76
     2333       77        %INCLUDE CP_6;
     2334      158          %INCLUDE VD_MACROS_M;
     2335     2373
     2336     2374            %VD$WINDOW_SPEC ( NAME = SCROLL_WINDOW,
     2337     2375            STCLASS = PARAM );
     2338     2441            %VD$KEY ( NAME = SCROLL_KEY,
     2339     2442            STCLASS = PARAM );
     2340     2456            %VD$SPEC ( NAME = SCROLL_SPEC,
     2341     2457            STCLASS = PARAM );
     2342     2471            %VD$BUFFER ( NAME = SCROLL_DATA,
     2343     2472            STCLASS = PARAM );
     2344     2530
     2345     2531            %VD$NUMBER ( NAME = VD_$$MON_PRES,
     2346     2532            STCLASS = SYMREF );
     2347     2577
     2348     2578    1     DCL RECORD_SET_INDEX SBIN;
     2349     2579    1     DCL RECORD_SET_KEY$ PTR;
     2350     2580    1     DCL RECORD_SET_SCROLL_INDEX SBIN;
     2351     2581    1     DCL SCROLL_KEY$ PTR;
     2352     2582    1     DCL SCROLL_NUMBER UBIN;
     2353     2583
     2354     2584        %FPT_DELREC (KEY=LAST_NUMBER);
     2355     2603    1     DCL LAST_NUMBER UBIN STATIC;
     2356     2604
     2357     2605          %VD$BUFFER;
     2358     2663          %VD$RECORD_SET ( NAME = RECORD$SET,
     2359     2664                           STCLASS = "BASED ( SCROLL_WINDOW.RECORD_SET$ )" );
     2360     2742          %VD$TEXTC;
     2361     2765        %VD$TEXTC_NUMBER;
     2362     2779          %VD$TEXTC_REMOTE;
     2363     2840          %VD$WINDOW_SPEC;
     2364     2906
     2365     2907    1     DCL VDG$MPRES_RETURN ENTRY (1);
     2366     2908    1     DCL VDG$MPRES_WSCROLL_DOWN ENTRY (2);
     2367     2909    1     DCL VDG$OALLOC ENTRY (3) ALTRET;
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:324  
     2368     2910    1     DCL VDG$OCOPY ENTRY (2) ALTRET;
     2369     2911    1     DCL VDG$OFREE ENTRY (1) ALTRET;
     2370     2912    1     DCL VDP$WSCROLL_UP ENTRY (6) ALTRET;
     2371     2913        %EJECT;
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:325  
     2372     2914    1       IF VD_$$MON_PRES.V# > 10
     2373     2915    1       THEN
     2374     2916    1         CALL VDG$MPRES_WSCROLL_DOWN ( SCROLL_WINDOW,
     2375     2917    1           SCROLL_KEY );
     2376     2918
     2377     2919            %GETKEY ( KEY = SCROLL_KEY,
     2378     2920            PTR = SCROLL_KEY$ );
     2379     2930    1       SCROLL_NUMBER = SCROLL_KEY$ -> VD$TEXTC_NUMBER.BYTES#;
     2380     2931    1       FPT_DELREC.V.DCB# = SCROLL_WINDOW.DCB#;
     2381     2932
     2382     2933    1   FIND_SCROLL_KEY:
     2383     2934    2       DO RECORD_SET_INDEX = 0 TO RECORD$SET.N_ENTRIES# - 1;
     2384     2935
     2385     2936              %GETKEY ( KEY = "RECORD$SET.DESC.KEY",
     2386     2937              INDX = RECORD_SET_INDEX,
     2387     2938              PTR = RECORD_SET_KEY$ );
     2388     2948
     2389     2949    2         LAST_NUMBER = RECORD_SET_KEY$ -> VD$TEXTC_NUMBER.BYTES#;
     2390     2950    2         IF LAST_NUMBER = SCROLL_NUMBER
     2391     2951    2         THEN
     2392     2952    2   REPLACE_SPEC_AND_DATA:
     2393     2953    3           DO;
     2394     2954    3             CALL VDG$OFREE ( RECORD$SET.DESC.DATA$ ( RECORD_SET_INDEX ) -> VD$BUFFER )
     2395     2955    4             WHENALTRETURN DO; ALTRETURN; END;
     2396     2956    3             CALL VDG$OCOPY ( SCROLL_DATA,
     2397     2957    3               RECORD$SET.DESC.DATA$ ( RECORD_SET_INDEX ) )
     2398     2958    4             WHENALTRETURN DO; ALTRETURN; END;
     2399     2959    3             RETURN;
     2400     2960    3           END REPLACE_SPEC_AND_DATA;
     2401     2961
     2402     2962    2         IF LAST_NUMBER > SCROLL_NUMBER
     2403     2963    2         THEN
     2404     2964    2   SHUFFLE_AND_INSERT:
     2405     2965    3           DO;
     2406     2966
     2407     2967    3             IF RECORD$SET.N_ENTRIES# = RECORD$SET.MX_ENTRIES#
     2408     2968    3             THEN
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:326  
     2409     2969    3   LOP_OFF_LAST_ENTRY:
     2410     2970    4               DO;
     2411     2971    4                 IF RECORD_SET_INDEX+1 = RECORD$SET.N_ENTRIES#
     2412     2972    4                 THEN
     2413     2973    5                   DO;
     2414     2974        /* If the cursor was ever on the "eof" record, it is possible that VDH
     2415     2975           has deleted the first record we think it had, and still has the last
     2416     2976           one we're about to lose track of.  (See star 37412).  Make sure VDH
     2417     2977           doesn't have it, by deleting it from VDH's cache. */
     2418     2978
     2419     2979    6                     CALL M$DELREC (FPT_DELREC) WHENALTRETURN DO; END;
     2420     2980    5                   END;
     2421     2981                      %CLEARKEY ( KEY = "RECORD$SET.DESC.KEY",
     2422     2982                      INDX = "RECORD$SET.N_ENTRIES# - 1" );
     2423     2992    4                 SCROLL_WINDOW.EOB_DISPLAYED = %FALSE;
     2424     2993    4                 CALL VDG$OFREE ( RECORD$SET.DESC.DATA$ ( RECORD$SET.N_ENTRIES# - 1 )
              2993                          -> VD$BUFFER )
     2425     2994    5                 WHENALTRETURN DO; ALTRETURN; END;
     2426     2995    4               END LOP_OFF_LAST_ENTRY;
     2427     2996    3             ELSE
     2428     2997    3   EXPAND_RECORD_SET:
     2429     2998    4               DO;
     2430     2999    4                 RECORD$SET.N_ENTRIES# = RECORD$SET.N_ENTRIES# + 1;
     2431     3000    4               END EXPAND_RECORD_SET;
     2432     3001
     2433     3002    3   SHUFFLE_EVERYTHING_DOWN_1:
     2434     3003    4             DO;
     2435     3004    4               DO RECORD_SET_SCROLL_INDEX = RECORD$SET.N_ENTRIES# - 2
     2436     3005    5                 DOWNTO RECORD_SET_INDEX;
     2437     3006    5                 RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX + 1 ) =
     2438     3007    5                   RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX );
     2439     3008    5               END;
     2440     3009    4             END SHUFFLE_EVERYTHING_DOWN_1;
     2441     3010
     2442     3011    3             IF RECORD_SET_INDEX = 0
     2443     3012    3             THEN
     2444     3013    3               RECORD$SET.SQ_OFFSET# = RECORD$SET.SQ_OFFSET# - 1;
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:327  
     2445     3014                  %COPYKEY ( FKEY = SCROLL_KEY,
     2446     3015                  TKEY = "RECORD$SET.DESC.KEY",
     2447     3016                  TINDX = RECORD_SET_INDEX );
     2448     3032    3             CALL VDG$OCOPY ( SCROLL_DATA,
     2449     3033    3               RECORD$SET.DESC.DATA$ ( RECORD_SET_INDEX ) )
     2450     3034    4             WHENALTRETURN DO; ALTRETURN; END;
     2451     3035
     2452     3036    3             RETURN;
     2453     3037
     2454     3038    3           END SHUFFLE_AND_INSERT;
     2455     3039
     2456     3040    2       END FIND_SCROLL_KEY;
     2457     3041
     2458     3042            /*  The key to insert is higher than any key in the record set
     2459     3043                (the record set may be empty).  */
     2460     3044    1       IF RECORD$SET.N_ENTRIES# = RECORD$SET.MX_ENTRIES#
     2461     3045    1       THEN
     2462     3046    1   OOPS_ITS_REALLY_A_SCROLL_UP:
     2463     3047    2         DO;
     2464     3048                /*  Here's the case where a record's inserted past EOF
     2465     3049                    and the record set's full.  */
     2466     3050    2           CALL VDP$WSCROLL_UP ( SCROLL_WINDOW,
     2467     3051    2             SCROLL_KEY,
     2468     3052    2             SCROLL_SPEC,
     2469     3053    2             SCROLL_DATA,
     2470     3054    2             /* no deletion_first_key */,
     2471     3055    2             /* no deletion_last_key */ )
     2472     3056    2           WHENALTRETURN
     2473     3057    3             DO;
     2474     3058    3               ALTRETURN;
     2475     3059    3             END;
     2476     3060    2         END OOPS_ITS_REALLY_A_SCROLL_UP;
     2477     3061    1       ELSE
     2478     3062    1   EXTEND_LAST_ENTRY:
     2479     3063    2         DO;
     2480     3064                /*  Here's the case where a record's inserted past EOF
     2481     3065                    and the record set's not full.  */
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:328  
     2482     3066    2           RECORD$SET.N_ENTRIES# = RECORD$SET.N_ENTRIES# + 1;
     2483     3067                %COPYKEY ( FKEY = SCROLL_KEY,
     2484     3068                TKEY = "RECORD$SET.DESC.KEY",
     2485     3069                TINDX = "RECORD$SET.N_ENTRIES# - 1" );
     2486     3085    2           CALL VDG$OCOPY ( SCROLL_DATA,
     2487     3086    2             RECORD$SET.DESC.DATA$ ( RECORD$SET.N_ENTRIES# - 1 ) )
     2488     3087    3           WHENALTRETURN DO; ALTRETURN; END;
     2489     3088    2         END EXTEND_LAST_ENTRY;
     2490     3089
     2491     3090    1       IF VD_$$MON_PRES.V# > 10
     2492     3091    1       THEN
     2493     3092    1         CALL VDG$MPRES_RETURN ( SCROLL_WINDOW );
     2494     3093
     2495     3094    1       RETURN;
     2496     3095
     2497     3096    1   END VDP$WSCROLL_DOWN;
     2498     3097        %EOD;

PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:329  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WSCROLL_DOWN.

   Procedure VDP$WSCROLL_DOWN requires 266 words for executable code.
   Procedure VDP$WSCROLL_DOWN requires 14 words of local(AUTO) storage.

PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:330  

 Object Unit name= VDP$WSCROLL_DOWN                           File name= VDP$WINDOW_I_O.:VDA5TOU
 UTS= JUL 04 '97 11:40:58.32 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    11     13  VDP$WSCROLL_DOWN
    2   Proc  even  none   266    412  VDP$WSCROLL_DOWN
    3  RoData even  none     1      1  VDP$WSCROLL_DOWN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        4  VDP$WSCROLL_DOWN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 VDG$MPRES_WSCROLL_DOWN
 yes     yes           Std       1 VDG$OFREE
 yes     yes           Std       6 VDP$WSCROLL_UP
 yes     yes           Std       2 VDG$OCOPY
         yes           Std       1 VDG$MPRES_RETURN
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:331  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VD_$$MON_PRES                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:332  


     2257        1        /*M* VDP$WSCROLL_DOWN:  Scroll a window down.  */
     2258        2        /*T***********************************************************/
     2259        3        /*T*                                                         */
     2260        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2261        5        /*T*                                                         */
     2262        6        /*T***********************************************************/
     2263        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
     2264        8
     2265        9        /*P*  NAME:         VDP$WSCROLL_DOWN
     2266       10              PURPOSE:      Presenter's scroll-record-set-down module.
     2267       11              DESCRIPTION:  Called to scroll a record set down.
     2268       12        */
     2269       13
     2270       14        VDP$WSCROLL_DOWN: PROC ( SCROLL_WINDOW,

     14  2 000000   000000 700200 xent  VDP$WSCROLL* TSX0  ! X66_AUTO_4
         2 000001   000016 000004                    ZERO    14,4

     2271       15              SCROLL_KEY,
     2272       16              SCROLL_SPEC,
     2273       17              SCROLL_DATA )
     2274       18              ALTRET;
     2275       19
     2276       20        /*D*  NAME:         VDP$WSCROLL_DOWN
     2277       21              CALL:         CALL VDP$WSCROLL_DOWN ( scroll_window,
     2278       22                                                    scroll_key,
     2279       23                                                    scroll_spec,
     2280       24                                                    scroll_data )
     2281       25                            ALTRET ( label );
     2282       26              PARAMETERS:   scroll_window is a VD$WINDOW_SPEC corresponding
     2283       27                            to the window to scroll;
     2284       28                            scroll_key is the key causing the scroll-down
     2285       29                            request.
     2286       30                            scroll_spec and scroll_data contain the spec and
     2287       31                            data components at the scroll_key
     2288       32              INTERFACE:    Called from VDP$WREAD when:
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:333  
     2289       33                            1)  a record has been inserted or replaced;
     2290       34                            2)  an E$RECORDS_NEEDED altret was received
     2291       35                                and an appropriate record was found in the
     2292       36                                file.
     2293       37              ENVIRONMENT:  Nothing unusual.
     2294       38              INPUT:
     2295       39              OUTPUT:
     2296       40              SCRATCH:
     2297       41              DESCRIPTION:  If appropriate, scrolls the record set down,
     2298       42                            i.e., moves all or part of the record set in
     2299       43                            the EOF direction, thereby "losing" a record
     2300       44                            at the end of the record set if it's already
     2301       45                            full.
     2302       46                            The code within is really handling several
     2303       47                            different cases, not all of them actually
     2304       48                            requiring action by this routine.  This module
     2305       49                            really exists only such that there be only *1*
     2306       50                            fellow who actually scrolls the record set down
     2307       51                            (bugs, hopefully, being easier to find that way).
     2308       52                            Called because:
     2309       53                            1)  An E$RECORDS_NEEDED was received for the
     2310       54                                backwards (towards BOF) direction and an
     2311       55                                appropriate record was found in the file
     2312       56                                and written to the FEP.  We'll insert that
     2313       57                                key at the beginning of the record set and
     2314       58                                shuffle everything down 1, losing the last
     2315       59                                entry if the record set was already full.
     2316       60                                If the record set was empty, we'll add to
     2317       61                                the beginning.
     2318       62                            2)  A record was replaced.  We'll find the
     2319       63                                key in the record set already and RETURN.
     2320       64                            3)  A record was inserted.  We'll find a
     2321       65                                key in the record set which is greater
     2322       66                                than the key of the inserted record, and
     2323       67                                shuffle everything down 1 from there on,
     2324       68                                losing the last entry if the record set was
     2325       69                                already full.  If the inserted record is
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:334  
     2326       70                                past the end of the record set and the
     2327       71                                record set's not full, we'll add to the
     2328       72                                end.  If the inserted record is past the
     2329       73                                end of the record set and the record set
     2330       74                                is full, we'll call VDP$SCROLL_UP.
     2331       75        */
     2332       76
     2333       77        %INCLUDE CP_6;
     2334      158          %INCLUDE VD_MACROS_M;
     2335     2373
     2336     2374            %VD$WINDOW_SPEC ( NAME = SCROLL_WINDOW,
     2337     2375            STCLASS = PARAM );
     2338     2441            %VD$KEY ( NAME = SCROLL_KEY,
     2339     2442            STCLASS = PARAM );
     2340     2456            %VD$SPEC ( NAME = SCROLL_SPEC,
     2341     2457            STCLASS = PARAM );
     2342     2471            %VD$BUFFER ( NAME = SCROLL_DATA,
     2343     2472            STCLASS = PARAM );
     2344     2530
     2345     2531            %VD$NUMBER ( NAME = VD_$$MON_PRES,
     2346     2532            STCLASS = SYMREF );
     2347     2577
     2348     2578    1     DCL RECORD_SET_INDEX SBIN;
     2349     2579    1     DCL RECORD_SET_KEY$ PTR;
     2350     2580    1     DCL RECORD_SET_SCROLL_INDEX SBIN;
     2351     2581    1     DCL SCROLL_KEY$ PTR;
     2352     2582    1     DCL SCROLL_NUMBER UBIN;
     2353     2583
     2354     2584        %FPT_DELREC (KEY=LAST_NUMBER);
     2355     2603    1     DCL LAST_NUMBER UBIN STATIC;
     2356     2604
     2357     2605          %VD$BUFFER;
     2358     2663          %VD$RECORD_SET ( NAME = RECORD$SET,
     2359     2664                           STCLASS = "BASED ( SCROLL_WINDOW.RECORD_SET$ )" );
     2360     2742          %VD$TEXTC;
     2361     2765        %VD$TEXTC_NUMBER;
     2362     2779          %VD$TEXTC_REMOTE;
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:335  
     2363     2840          %VD$WINDOW_SPEC;
     2364     2906
     2365     2907    1     DCL VDG$MPRES_RETURN ENTRY (1);
     2366     2908    1     DCL VDG$MPRES_WSCROLL_DOWN ENTRY (2);
     2367     2909    1     DCL VDG$OALLOC ENTRY (3) ALTRET;
     2368     2910    1     DCL VDG$OCOPY ENTRY (2) ALTRET;
     2369     2911    1     DCL VDG$OFREE ENTRY (1) ALTRET;
     2370     2912    1     DCL VDP$WSCROLL_UP ENTRY (6) ALTRET;
     2371     2913        %EJECT;
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:336  
     2372     2914    1       IF VD_$$MON_PRES.V# > 10

   2914  2 000002   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         2 000003   000012 115007                    CMPA    10,DL
         2 000004   000011 604400 2                  TMOZ    s:2927

     2373     2915    1       THEN
     2374     2916    1         CALL VDG$MPRES_WSCROLL_DOWN ( SCROLL_WINDOW,

   2916  2 000005   200003 630500                    EPPR0   @SCROLL_WINDOW,,AUTO
         2 000006   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000007   000000 701000 xent               TSX1    VDG$MPRES_WSCROLL_DOWN
         2 000010   000000 011000                    NOP     0

     2375     2917    1           SCROLL_KEY );
     2376     2918
     2377     2919            %GETKEY ( KEY = SCROLL_KEY,
     2378     2920            PTR = SCROLL_KEY$ );

   2927  2 000011   200004 470500                    LDP0    @SCROLL_KEY,,AUTO
         2 000012   000000 720100                    LXL0    0,,PR0
         2 000013   000002 100003                    CMPX0   2,DU
         2 000014   000021 601000 2                  TNZ     s:2927+8

   2927  2 000015   000001 471500                    LDP1    1,,PR0
         2 000016   100002 633500                    EPPR3   2,,PR1
         2 000017   200012 453500                    STP3    SCROLL_KEY$,,AUTO
         2 000020   000024 710000 2                  TRA     s:2930

   2927  2 000021   200004 236100                    LDQ     @SCROLL_KEY,,AUTO
         2 000022   000001 036003                    ADLQ    1,DU
         2 000023   200012 756100                    STQ     SCROLL_KEY$,,AUTO

     2379     2930    1       SCROLL_NUMBER = SCROLL_KEY$ -> VD$TEXTC_NUMBER.BYTES#;

   2930  2 000024   200012 471500                    LDP1    SCROLL_KEY$,,AUTO
         2 000025   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:337  
         2 000026   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 000027   200013 756100                    STQ     SCROLL_NUMBER,,AUTO

     2380     2931    1       FPT_DELREC.V.DCB# = SCROLL_WINDOW.DCB#;

   2931  2 000030   200003 473500                    LDP3    @SCROLL_WINDOW,,AUTO
         2 000031   300014 721100                    LXL1    12,,PR3
         2 000032   000010 741000 1                  STX1    FPT_DELREC+8

     2381     2932
     2382     2933    1   FIND_SCROLL_KEY:
     2383     2934    2       DO RECORD_SET_INDEX = 0 TO RECORD$SET.N_ENTRIES# - 1;

   2934  2 000033   200007 450100       FIND_SCROLL* STZ     RECORD_SET_INDEX,,AUTO
         2 000034   000306 710000 2                  TRA     s:3040+1

     2384     2935
     2385     2936              %GETKEY ( KEY = "RECORD$SET.DESC.KEY",
     2386     2937              INDX = RECORD_SET_INDEX,
     2387     2938              PTR = RECORD_SET_KEY$ );

   2945  2 000035   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         2 000036   000016 471500                    LDP1    14,,PR0
         2 000037   200007 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         2 000040   000006 402007                    MPY     6,DL
         2 000041   100003 720106                    LXL0    3,QL,PR1
         2 000042   000002 100003                    CMPX0   2,DU
         2 000043   000050 601000 2                  TNZ     s:2945+11

   2945  2 000044   100004 473506                    LDP3    4,QL,PR1
         2 000045   300002 634500                    EPPR4   2,,PR3
         2 000046   200010 454500                    STP4    RECORD_SET_KEY$,,AUTO
         2 000047   000052 710000 2                  TRA     s:2949

   2945  2 000050   100004 633506                    EPPR3   4,QL,PR1
         2 000051   200010 453500                    STP3    RECORD_SET_KEY$,,AUTO

PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:338  
     2388     2948
     2389     2949    2         LAST_NUMBER = RECORD_SET_KEY$ -> VD$TEXTC_NUMBER.BYTES#;

   2949  2 000052   200010 473500                    LDP3    RECORD_SET_KEY$,,AUTO
         2 000053   300000 236100                    LDQ     0,,PR3
         2 000054   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 000055   000012 756000 1                  STQ     LAST_NUMBER

     2390     2950    2         IF LAST_NUMBER = SCROLL_NUMBER

   2950  2 000056   200013 116100                    CMPQ    SCROLL_NUMBER,,AUTO
         2 000057   000111 601000 2                  TNZ     s:2962

     2391     2951    2         THEN
     2392     2952    2   REPLACE_SPEC_AND_DATA:
     2393     2953    3           DO;

   2953  2 000060                       REPLACE_SPE* null
     2394     2954    3            CALL VDG$OFREE ( RECORD$SET.DESC.DATA$ ( RECORD_SET_INDEX ) -> VD$BUFFER )

   2954  2 000060   200007 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         2 000061   000006 402007                    MPY     6,DL
         2 000062   100007 474506                    LDP4    7,QL,PR1
         2 000063   200014 454500                    STP4    SCROLL_NUMBER+1,,AUTO
         2 000064   200014 630500                    EPPR0   SCROLL_NUMBER+1,,AUTO
         2 000065   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000066   000000 701000 xent               TSX1    VDG$OFREE
         2 000067   000071 702000 2                  TSX2    s:2955
         2 000070   000072 710000 2                  TRA     s:2956

     2395     2955    4             WHENALTRETURN DO; ALTRETURN; END;

   2955  2 000071   000000 702200 xent               TSX2  ! X66_AALT

     2396     2956    3             CALL VDG$OCOPY ( SCROLL_DATA,

   2956  2 000072   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:339  
         2 000073   000016 471500                    LDP1    14,,PR0
         2 000074   200007 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         2 000075   000006 402007                    MPY     6,DL
         2 000076   100007 633506                    EPPR3   7,QL,PR1
         2 000077   200015 453500                    STP3    SCROLL_NUMBER+2,,AUTO
         2 000100   200006 236100                    LDQ     @SCROLL_DATA,,AUTO
         2 000101   200014 756100                    STQ     SCROLL_NUMBER+1,,AUTO
         2 000102   200014 630500                    EPPR0   SCROLL_NUMBER+1,,AUTO
         2 000103   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000104   000000 701000 xent               TSX1    VDG$OCOPY
         2 000105   000107 702000 2                  TSX2    s:2958
         2 000106   000110 710000 2                  TRA     s:2959

     2397     2957    3               RECORD$SET.DESC.DATA$ ( RECORD_SET_INDEX ) )
     2398     2958    4             WHENALTRETURN DO; ALTRETURN; END;

   2958  2 000107   000000 702200 xent               TSX2  ! X66_AALT

     2399     2959    3             RETURN;

   2959  2 000110   000000 702200 xent               TSX2  ! X66_ARET

     2400     2960    3           END REPLACE_SPEC_AND_DATA;
     2401     2961
     2402     2962    2         IF LAST_NUMBER > SCROLL_NUMBER

   2962  2 000111   000305 602000 2                  TNC     s:3040
         2 000112   000305 600000 2                  TZE     s:3040

     2403     2963    2         THEN
     2404     2964    2   SHUFFLE_AND_INSERT:
     2405     2965    3           DO;

   2965  2 000113                       SHUFFLE_AND* null
     2406     2966
     2407     2967    3             IF RECORD$SET.N_ENTRIES# = RECORD$SET.MX_ENTRIES#

PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:340  
   2967  2 000113   100002 720100                    LXL0    2,,PR1
         2 000114   100002 100100                    CMPX0   2,,PR1
         2 000115   000203 601000 2                  TNZ     EXPAND_RECORD_SET

     2408     2968    3             THEN
     2409     2969    3   LOP_OFF_LAST_ENTRY:
     2410     2970    4               DO;

   2970  2 000116                       LOP_OFF_LAS* null
     2411     2971    4                 IF RECORD_SET_INDEX+1 = RECORD$SET.N_ENTRIES#

   2971  2 000116   100002 236100                    LDQ     2,,PR1
         2 000117   000022 732000                    QRS     18
         2 000120   200014 756100                    STQ     SCROLL_NUMBER+1,,AUTO
         2 000121   200007 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         2 000122   000001 036007                    ADLQ    1,DL
         2 000123   200014 116100                    CMPQ    SCROLL_NUMBER+1,,AUTO
         2 000124   000132 601000 2                  TNZ     s:2989

     2412     2972    4                 THEN
     2413     2973    5                   DO;

     2414     2974        /* If the cursor was ever on the "eof" record, it is possible that VDH
     2415     2975           has deleted the first record we think it had, and still has the last
     2416     2976           one we're about to lose track of.  (See star 37412).  Make sure VDH
     2417     2977           doesn't have it, by deleting it from VDH's cache. */
     2418     2978
     2419     2979    6                     CALL M$DELREC (FPT_DELREC) WHENALTRETURN DO; END;

   2979  2 000125   000000 630400 1                  EPPR0   FPT_DELREC
         2 000126   440002 713400                    CLIMB   alt,+16386
         2 000127   401400 401760                    pmme    nvectors=4
         2 000130   000132 702000 2                  TSX2    s:2989
         2 000131   000132 710000 2                  TRA     s:2989

     2420     2980    5                   END;

PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:341  
     2421     2981                      %CLEARKEY ( KEY = "RECORD$SET.DESC.KEY",
     2422     2982                      INDX = "RECORD$SET.N_ENTRIES# - 1" );

   2989  2 000132   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         2 000133   000016 471500                    LDP1    14,,PR0
         2 000134   100002 236100                    LDQ     2,,PR1
         2 000135   000022 732000                    QRS     18
         2 000136   000006 402007                    MPY     6,DL
         2 000137   177775 720106                    LXL0    -3,QL,PR1
         2 000140   000002 100003                    CMPX0   2,DU
         2 000141   000155 601000 2                  TNZ     s:2990+1

   2989  2 000142   100002 236100                    LDQ     2,,PR1
         2 000143   000022 732000                    QRS     18
         2 000144   000006 402007                    MPY     6,DL
         2 000145   177776 473506                    LDP3    -2,QL,PR1
         2 000146   200014 453500                    STP3    SCROLL_NUMBER+1,,AUTO
         2 000147   200014 630500                    EPPR0   SCROLL_NUMBER+1,,AUTO
         2 000150   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000151   000000 701000 xent               TSX1    VDG$OFREE
         2 000152   000154 702000 2                  TSX2    s:2990
         2 000153   000155 710000 2                  TRA     s:2990+1

   2990  2 000154   000000 702200 xent               TSX2  ! X66_AALT

   2990  2 000155   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         2 000156   000016 471500                    LDP1    14,,PR0
         2 000157   100002 236100                    LDQ     2,,PR1
         2 000160   000022 732000                    QRS     18
         2 000161   000006 402007                    MPY     6,DL
         2 000162   177775 450106                    STZ     -3,QL,PR1
         2 000163   177776 450106                    STZ     -2,QL,PR1

     2423     2992    4                 SCROLL_WINDOW.EOB_DISPLAYED = %FALSE;

   2992  2 000164   000000 236000 3                  LDQ     0
         2 000165   000015 356100                    ANSQ    13,,PR0
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:342  

     2424     2993    4                 CALL VDG$OFREE ( RECORD$SET.DESC.DATA$ ( RECORD$SET.N_ENTRIES# - 1 )
              2993                          -> VD$BUFFER )

   2993  2 000166   000016 471500                    LDP1    14,,PR0
         2 000167   100002 236100                    LDQ     2,,PR1
         2 000170   000022 732000                    QRS     18
         2 000171   000006 402007                    MPY     6,DL
         2 000172   100001 473506                    LDP3    1,QL,PR1
         2 000173   200014 453500                    STP3    SCROLL_NUMBER+1,,AUTO
         2 000174   200014 630500                    EPPR0   SCROLL_NUMBER+1,,AUTO
         2 000175   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000176   000000 701000 xent               TSX1    VDG$OFREE
         2 000177   000201 702000 2                  TSX2    s:2994
         2 000200   000202 710000 2                  TRA     s:2995

     2425     2994    5                 WHENALTRETURN DO; ALTRETURN; END;

   2994  2 000201   000000 702200 xent               TSX2  ! X66_AALT

     2426     2995    4               END LOP_OFF_LAST_ENTRY;

   2995  2 000202   000206 710000 2                  TRA     SHUFFLE_EVERYTHING_DOWN_1

     2427     2996    3             ELSE
     2428     2997    3   EXPAND_RECORD_SET:
     2429     2998    4               DO;

   2998  2 000203                       EXPAND_RECO* null
     2430     2999    4                 RECORD$SET.N_ENTRIES# = RECORD$SET.N_ENTRIES# + 1;

   2999  2 000203   100002 221100                    LDX1    2,,PR1
         2 000204   000001 622011                    EAX2    1,X1
         2 000205   100002 742100                    STX2    2,,PR1

     2431     3000    4               END EXPAND_RECORD_SET;

PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:343  
     2432     3001
     2433     3002    3   SHUFFLE_EVERYTHING_DOWN_1:
     2434     3003    4             DO;

   3003  2 000206                       SHUFFLE_EVE* null
     2435     3004    4               DO RECORD_SET_SCROLL_INDEX = RECORD$SET.N_ENTRIES# - 2
     2436     3005    5                 DOWNTO RECORD_SET_INDEX;

   3005  2 000206   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         2 000207   000016 471500                    LDP1    14,,PR0
         2 000210   100002 236100                    LDQ     2,,PR1
         2 000211   000022 732000                    QRS     18
         2 000212   000002 136007                    SBLQ    2,DL
         2 000213   200011 756100                    STQ     RECORD_SET_SCROLL_INDEX,,AUTO
         2 000214   000226 710000 2                  TRA     s:3008+2

     2437     3006    5                 RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX + 1 ) =

   3006  2 000215   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         2 000216   000016 471500                    LDP1    14,,PR0
         2 000217   200011 236100                    LDQ     RECORD_SET_SCROLL_INDEX,,AUTO
         2 000220   000030 402007                    MPY     24,DL
         2 000221   000106 100506                    MLR     fill='000'O
         2 000222   100003 000030                    ADSC9   3,Q,PR1                  cn=0,n=24
         2 000223   100011 000030                    ADSC9   9,Q,PR1                  cn=0,n=24

     2438     3007    5                   RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX );
     2439     3008    5               END;

   3008  2 000224   000001 336007                    LCQ     1,DL
         2 000225   200011 056100                    ASQ     RECORD_SET_SCROLL_INDEX,,AUTO
         2 000226   200011 236100                    LDQ     RECORD_SET_SCROLL_INDEX,,AUTO
         2 000227   200007 116100                    CMPQ    RECORD_SET_INDEX,,AUTO
         2 000230   000215 605000 2                  TPL     s:3006

     2440     3009    4             END SHUFFLE_EVERYTHING_DOWN_1;

PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:344  
     2441     3010
     2442     3011    3             IF RECORD_SET_INDEX = 0

   3011  2 000231   200007 235100                    LDA     RECORD_SET_INDEX,,AUTO
         2 000232   000236 601000 2                  TNZ     s:3029

     2443     3012    3             THEN
     2444     3013    3               RECORD$SET.SQ_OFFSET# = RECORD$SET.SQ_OFFSET# - 1;

   3013  2 000233   000016 471500                    LDP1    14,,PR0
         2 000234   000001 336007                    LCQ     1,DL
         2 000235   100001 056100                    ASQ     1,,PR1

     2445     3014                  %COPYKEY ( FKEY = SCROLL_KEY,
     2446     3015                  TKEY = "RECORD$SET.DESC.KEY",
     2447     3016                  TINDX = RECORD_SET_INDEX );

   3029  2 000236   000016 471500                    LDP1    14,,PR0
         2 000237   200007 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         2 000240   000006 402007                    MPY     6,DL
         2 000241   000002 736000                    QLS     2
         2 000242   200004 473500                    LDP3    @SCROLL_KEY,,AUTO
         2 000243   000106 100500                    MLR     fill='000'O
         2 000244   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8
         2 000245   100003 000010                    ADSC9   3,Q,PR1                  cn=0,n=8

   3029  2 000246   300000 720100                    LXL0    0,,PR3
         2 000247   000002 100003                    CMPX0   2,DU
         2 000250   000266 601000 2                  TNZ     s:3032

   3029  2 000251   300001 471500                    LDP1    1,,PR3
         2 000252   000016 474500                    LDP4    14,,PR0
         2 000253   200007 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         2 000254   000006 402007                    MPY     6,DL
         2 000255   400004 635506                    EPPR5   4,QL,PR4
         2 000256   200015 455500                    STP5    SCROLL_NUMBER+2,,AUTO
         2 000257   200014 451500                    STP1    SCROLL_NUMBER+1,,AUTO
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:345  
         2 000260   200014 630500                    EPPR0   SCROLL_NUMBER+1,,AUTO
         2 000261   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000262   000000 701000 xent               TSX1    VDG$OCOPY
         2 000263   000265 702000 2                  TSX2    s:3030
         2 000264   000266 710000 2                  TRA     s:3032

   3030  2 000265   000000 702200 xent               TSX2  ! X66_AALT

     2448     3032    3             CALL VDG$OCOPY ( SCROLL_DATA,

   3032  2 000266   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         2 000267   000016 471500                    LDP1    14,,PR0
         2 000270   200007 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         2 000271   000006 402007                    MPY     6,DL
         2 000272   100007 633506                    EPPR3   7,QL,PR1
         2 000273   200015 453500                    STP3    SCROLL_NUMBER+2,,AUTO
         2 000274   200006 236100                    LDQ     @SCROLL_DATA,,AUTO
         2 000275   200014 756100                    STQ     SCROLL_NUMBER+1,,AUTO
         2 000276   200014 630500                    EPPR0   SCROLL_NUMBER+1,,AUTO
         2 000277   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000300   000000 701000 xent               TSX1    VDG$OCOPY
         2 000301   000303 702000 2                  TSX2    s:3034
         2 000302   000304 710000 2                  TRA     s:3036

     2449     3033    3               RECORD$SET.DESC.DATA$ ( RECORD_SET_INDEX ) )
     2450     3034    4             WHENALTRETURN DO; ALTRETURN; END;

   3034  2 000303   000000 702200 xent               TSX2  ! X66_AALT

     2451     3035
     2452     3036    3             RETURN;

   3036  2 000304   000000 702200 xent               TSX2  ! X66_ARET

     2453     3037
     2454     3038    3           END SHUFFLE_AND_INSERT;
     2455     3039
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:346  
     2456     3040    2       END FIND_SCROLL_KEY;

   3040  2 000305   200007 054100                    AOS     RECORD_SET_INDEX,,AUTO
         2 000306   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         2 000307   000016 471500                    LDP1    14,,PR0
         2 000310   100002 236100                    LDQ     2,,PR1
         2 000311   000022 732000                    QRS     18
         2 000312   200007 116100                    CMPQ    RECORD_SET_INDEX,,AUTO
         2 000313   000035 605400 2                  TPNZ    s:2945

     2457     3041
     2458     3042            /*  The key to insert is higher than any key in the record set
     2459     3043                (the record set may be empty).  */
     2460     3044    1       IF RECORD$SET.N_ENTRIES# = RECORD$SET.MX_ENTRIES#

   3044  2 000314   100002 720100                    LXL0    2,,PR1
         2 000315   100002 100100                    CMPX0   2,,PR1
         2 000316   000326 601000 2                  TNZ     EXTEND_LAST_ENTRY

     2461     3045    1       THEN
     2462     3046    1   OOPS_ITS_REALLY_A_SCROLL_UP:
     2463     3047    2         DO;

   3047  2 000317                       OOPS_ITS_RE* null
     2464     3048                /*  Here's the case where a record's inserted past EOF
     2465     3049                    and the record set's full.  */
     2466     3050    2           CALL VDP$WSCROLL_UP ( SCROLL_WINDOW,

   3050  2 000317   200003 630500                    EPPR0   @SCROLL_WINDOW,,AUTO
         2 000320   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000321   000000 701000 xent               TSX1    VDP$WSCROLL_UP
         2 000322   000324 702000 2                  TSX2    s:3058
         2 000323   000325 710000 2                  TRA     s:3060

     2467     3051    2             SCROLL_KEY,
     2468     3052    2             SCROLL_SPEC,
     2469     3053    2             SCROLL_DATA,
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:347  
     2470     3054    2             /* no deletion_first_key */,
     2471     3055    2             /* no deletion_last_key */ )
     2472     3056    2           WHENALTRETURN
     2473     3057    3             DO;

     2474     3058    3               ALTRETURN;

   3058  2 000324   000000 702200 xent               TSX2  ! X66_AALT

     2475     3059    3             END;
     2476     3060    2         END OOPS_ITS_REALLY_A_SCROLL_UP;

   3060  2 000325   000402 710000 2                  TRA     s:3090

     2477     3061    1       ELSE
     2478     3062    1   EXTEND_LAST_ENTRY:
     2479     3063    2         DO;

   3063  2 000326                       EXTEND_LAST* null
     2480     3064                /*  Here's the case where a record's inserted past EOF
     2481     3065                    and the record set's not full.  */
     2482     3066    2           RECORD$SET.N_ENTRIES# = RECORD$SET.N_ENTRIES# + 1;

   3066  2 000326   100002 221100                    LDX1    2,,PR1
         2 000327   000001 622011                    EAX2    1,X1
         2 000330   100002 742100                    STX2    2,,PR1

     2483     3067                %COPYKEY ( FKEY = SCROLL_KEY,
     2484     3068                TKEY = "RECORD$SET.DESC.KEY",
     2485     3069                TINDX = "RECORD$SET.N_ENTRIES# - 1" );

   3082  2 000331   000016 471500                    LDP1    14,,PR0
         2 000332   100002 236100                    LDQ     2,,PR1
         2 000333   000022 732000                    QRS     18
         2 000334   000006 402007                    MPY     6,DL
         2 000335   000002 736000                    QLS     2
         2 000336   200004 473500                    LDP3    @SCROLL_KEY,,AUTO
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:348  
         2 000337   000106 100500                    MLR     fill='000'O
         2 000340   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8
         2 000341   177775 000010                    ADSC9   -3,Q,PR1                 cn=0,n=8

   3082  2 000342   300000 720100                    LXL0    0,,PR3
         2 000343   000002 100003                    CMPX0   2,DU
         2 000344   000363 601000 2                  TNZ     s:3085

   3082  2 000345   300001 471500                    LDP1    1,,PR3
         2 000346   000016 474500                    LDP4    14,,PR0
         2 000347   400002 236100                    LDQ     2,,PR4
         2 000350   000022 732000                    QRS     18
         2 000351   000006 402007                    MPY     6,DL
         2 000352   477776 635506                    EPPR5   -2,QL,PR4
         2 000353   200015 455500                    STP5    SCROLL_NUMBER+2,,AUTO
         2 000354   200014 451500                    STP1    SCROLL_NUMBER+1,,AUTO
         2 000355   200014 630500                    EPPR0   SCROLL_NUMBER+1,,AUTO
         2 000356   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000357   000000 701000 xent               TSX1    VDG$OCOPY
         2 000360   000362 702000 2                  TSX2    s:3083
         2 000361   000363 710000 2                  TRA     s:3085

   3083  2 000362   000000 702200 xent               TSX2  ! X66_AALT

     2486     3085    2           CALL VDG$OCOPY ( SCROLL_DATA,

   3085  2 000363   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         2 000364   000016 471500                    LDP1    14,,PR0
         2 000365   100002 236100                    LDQ     2,,PR1
         2 000366   000022 732000                    QRS     18
         2 000367   000006 402007                    MPY     6,DL
         2 000370   100001 633506                    EPPR3   1,QL,PR1
         2 000371   200015 453500                    STP3    SCROLL_NUMBER+2,,AUTO
         2 000372   200006 236100                    LDQ     @SCROLL_DATA,,AUTO
         2 000373   200014 756100                    STQ     SCROLL_NUMBER+1,,AUTO
         2 000374   200014 630500                    EPPR0   SCROLL_NUMBER+1,,AUTO
         2 000375   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:349  
         2 000376   000000 701000 xent               TSX1    VDG$OCOPY
         2 000377   000401 702000 2                  TSX2    s:3087
         2 000400   000402 710000 2                  TRA     s:3090

     2487     3086    2             RECORD$SET.DESC.DATA$ ( RECORD$SET.N_ENTRIES# - 1 ) )
     2488     3087    3           WHENALTRETURN DO; ALTRETURN; END;

   3087  2 000401   000000 702200 xent               TSX2  ! X66_AALT

     2489     3088    2         END EXTEND_LAST_ENTRY;

     2490     3089
     2491     3090    1       IF VD_$$MON_PRES.V# > 10

   3090  2 000402   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         2 000403   000012 115007                    CMPA    10,DL
         2 000404   000411 604400 2                  TMOZ    s:3094

     2492     3091    1       THEN
     2493     3092    1         CALL VDG$MPRES_RETURN ( SCROLL_WINDOW );

   3092  2 000405   200003 630500                    EPPR0   @SCROLL_WINDOW,,AUTO
         2 000406   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000407   000000 701000 xent               TSX1    VDG$MPRES_RETURN
         2 000410   000000 011000                    NOP     0

     2494     3093
     2495     3094    1       RETURN;

   3094  2 000411   000000 702200 xent               TSX2  ! X66_ARET
     2496     3095
     2497     3096    1   END VDP$WSCROLL_DOWN;
     2498     3097        %EOD;

PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:350  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WSCROLL_DOWN.
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:351  

 **** Variables and constants ****

  ****  Section 001  Data  VDP$WSCROLL_DOWN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(360)   r     1 FPT_DELREC                12-0-0/w UBIN        r     1 LAST_NUMBER

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @SCROLL_DATA               4-0-0/w PTR         r     1 @SCROLL_KEY
     5-0-0/w PTR         r     1 @SCROLL_SPEC               3-0-0/w PTR         r     1 @SCROLL_WINDOW
     7-0-0/w SBIN        r     1 RECORD_SET_INDEX          10-0-0/w PTR         r     1 RECORD_SET_KEY$
    11-0-0/w SBIN        r     1 RECORD_SET_SCROLL_INDEX
    *0-0-0/w ASTR(90)    r     1 SCROLL_DATA               *0-0-0/w STRC(72)    r     1 SCROLL_KEY
    12-0-0/w PTR         r     1 SCROLL_KEY$               13-0-0/w UBIN        r     1 SCROLL_NUMBER
    *0-0-0/w STRC(72)    r     1 SCROLL_SPEC               *0-0-0/w STRC(900)   r     1 SCROLL_WINDOW

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 VD_$$MON_PRES

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(324)   r     1 RECORD$SET                 0-0-0/w ASTR(90)    r     1 VD$BUFFER
     0-0-0/w ASTR(9)     r     1 VD$TEXTC                   0-0-0/w STRC        r     1 VD$TEXTC_NUMBER
     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:352  


   Procedure VDP$WSCROLL_DOWN requires 266 words for executable code.
   Procedure VDP$WSCROLL_DOWN requires 14 words of local(AUTO) storage.
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:353  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:354  
          MINI XREF LISTING

FPT_DELREC
      2595**DCL      2979<>CALL
FPT_DELREC.V
      2598**DCL      2595--DCLINIT
FPT_DELREC.V.DCB#
      2599**DCL      2931<<ASSIGN
LAST_NUMBER
      2603**DCL      2595--DCLINIT  2596--DCLINIT  2949<<ASSIGN   2950>>IF       2962>>IF
M$DELREC
        88**DCL-ENT  2979--CALL
RECORD$SET.DESC
      2709**DCL      3006<<ASSIGN   3006>>ASSIGN
RECORD$SET.DESC.DATA$
      2739**DCL      2954>>CALL     2954>>CALL     2956<>CALL     2993>>CALL     2993>>CALL     3032<>CALL
      3085<>CALL
RECORD$SET.DESC.KEY
      2721**DCL      2990<<ASSIGN   3029<<ASSIGN   3082<<ASSIGN
RECORD$SET.DESC.KEY.REP#
      2723**DCL      2945>>IF       2989>>IF
RECORD$SET.DESC.KEY.V$
      2723**DCL      2945>>ASSIGN   2945--ASSIGN   2989>>CALL     2989>>CALL     3029<>CALL     3082<>CALL
RECORD$SET.MX_ENTRIES#
      2698**DCL      2967>>IF       3044>>IF
RECORD$SET.N_ENTRIES#
      2698**DCL      2934>>DOINDEX  2967>>IF       2971>>IF       2989>>IF       2989>>CALL     2989>>CALL
      2990>>ASSIGN   2993>>CALL     2993>>CALL     2999<<ASSIGN   2999>>ASSIGN   3005>>DOINDEX  3044>>IF
      3066<<ASSIGN   3066>>ASSIGN   3082>>ASSIGN   3082>>CALL     3085>>CALL
RECORD$SET.SQ_OFFSET#
      2698**DCL      3013<<ASSIGN   3013>>ASSIGN
RECORD_SET_INDEX
      2578**DCL      2934<<DOINDEX  2945>>IF       2945>>ASSIGN   2945>>ASSIGN   2954>>CALL     2954>>CALL
      2956>>CALL     2971>>IF       3005>>DOINDEX  3011>>IF       3029>>ASSIGN   3029>>CALL     3032>>CALL
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:355  
RECORD_SET_KEY$
      2579**DCL      2945<<ASSIGN   2945<<ASSIGN   2949>>ASSIGN
RECORD_SET_SCROLL_INDEX
      2580**DCL      3005<<DOINDEX  3006>>ASSIGN   3006>>ASSIGN
SCROLL_DATA
      2497**DCL        14--PROC     2956<>CALL     3032<>CALL     3050<>CALL     3085<>CALL
SCROLL_DATA.LENGTH#
      2523**DCL      2525--IMP-SIZ  2956>>CALL     3032>>CALL     3050>>CALL     3085>>CALL
SCROLL_KEY
      2450**DCL        14--PROC     2916<>CALL     3029>>ASSIGN   3050<>CALL     3082>>ASSIGN
SCROLL_KEY.REP#
      2454**DCL      2927>>IF       3029>>IF       3082>>IF
SCROLL_KEY.V$
      2454**DCL      2927>>ASSIGN   2927--ASSIGN   3029>>CALL     3029>>CALL     3082>>CALL     3082>>CALL
SCROLL_KEY$
      2581**DCL      2927<<ASSIGN   2927<<ASSIGN   2930>>ASSIGN
SCROLL_NUMBER
      2582**DCL      2930<<ASSIGN   2950>>IF       2962>>IF
SCROLL_SPEC
      2465**DCL        14--PROC     3050<>CALL
SCROLL_WINDOW
      2383**DCL        14--PROC     2916<>CALL     3050<>CALL     3092<>CALL
SCROLL_WINDOW.DCB#
      2426**DCL      2931>>ASSIGN
SCROLL_WINDOW.EOB_DISPLAYED
      2426**DCL      2992<<ASSIGN
SCROLL_WINDOW.RECORD_SET$
      2427**DCL      2672--IMP-PTR  2934>>DOINDEX  2945>>IF       2945>>ASSIGN   2945>>ASSIGN   2954>>CALL
      2954>>CALL     2956>>CALL     2967>>IF       2967>>IF       2971>>IF       2989>>IF       2989>>IF
      2989>>CALL     2989>>CALL     2989>>CALL     2989>>CALL     2990>>ASSIGN   2990>>ASSIGN   2993>>CALL
      2993>>CALL     2993>>CALL     2993>>CALL     2999>>ASSIGN   2999>>ASSIGN   3005>>DOINDEX  3006>>ASSIGN
      3006>>ASSIGN   3013>>ASSIGN   3013>>ASSIGN   3029>>ASSIGN   3029>>CALL     3032>>CALL     3044>>IF
      3044>>IF       3066>>ASSIGN   3066>>ASSIGN   3082>>ASSIGN   3082>>ASSIGN   3082>>CALL     3082>>CALL
      3085>>CALL     3085>>CALL
VD$BUFFER
      2630**DCL      2954<>CALL     2993<>CALL
PL6.E3A0      #004=VDP$WSCROLL_DOWN File=VDP$WINDOW_I_O.:VDA5TSI                 FRI 07/04/97 11:40 Page:356  
VD$BUFFER.LENGTH#
      2656**DCL      2658--IMP-SIZ  2954>>CALL     2993>>CALL
VD$TEXTC.LENGTH#
      2758**DCL      2760--IMP-SIZ
VD$TEXTC_NUMBER.BYTES#
      2777**DCL      2930>>ASSIGN   2949>>ASSIGN
VD$TEXTC_REMOTE
      2804**DCL      2989<>CALL     3029<>CALL     3082<>CALL
VD$TEXTC_REMOTE.LENGTH#
      2833**DCL      2835--IMP-SIZ  2927--ASSIGN   2945--ASSIGN   2989>>CALL     3029>>CALL     3082>>CALL
VDG$MPRES_RETURN
      2907**DCL-ENT  3092--CALL
VDG$MPRES_WSCROLL_DOWN
      2908**DCL-ENT  2916--CALL
VDG$OCOPY
      2910**DCL-ENT  2956--CALL     3029--CALL     3032--CALL     3082--CALL     3085--CALL
VDG$OFREE
      2911**DCL-ENT  2954--CALL     2989--CALL     2993--CALL
VDP$WSCROLL_UP
      2912**DCL-ENT  3050--CALL
VD_$$MON_PRES.V#
      2574**DCL      2914>>IF       3090>>IF

PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:357  
     2499        1        /*M* VDP$WSCROLL_UP:  Scroll a window up.  */
     2500        2        /*T***********************************************************/
     2501        3        /*T*                                                         */
     2502        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2503        5        /*T*                                                         */
     2504        6        /*T***********************************************************/
     2505        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
     2506        8
     2507        9        VDP$WSCROLL_UP: PROC ( SCROLL_WINDOW,
     2508       10              SCROLL_KEY,
     2509       11              SCROLL_SPEC,
     2510       12              SCROLL_DATA,
     2511       13              DELETION_FIRST_KEY,
     2512       14              DELETION_LAST_KEY )
     2513       15              ALTRET;
     2514       16
     2515       17          %INCLUDE VD_MACROS_M;
     2516     2232
     2517     2233            %VD$WINDOW_SPEC ( NAME = SCROLL_WINDOW,
     2518     2234            STCLASS = PARAM );
     2519     2300            %VD$KEY ( NAME = SCROLL_KEY,
     2520     2301            STCLASS = PARAM );
     2521     2315            %VD$SPEC ( NAME = SCROLL_SPEC,
     2522     2316            STCLASS = PARAM );
     2523     2330            %VD$BUFFER ( NAME = SCROLL_DATA,
     2524     2331            STCLASS = PARAM );
     2525     2389            %VD$KEY ( NAME = DELETION_FIRST_KEY,
     2526     2390            STCLASS = PARAM );
     2527     2404            %VD$KEY ( NAME = DELETION_LAST_KEY,
     2528     2405            STCLASS = PARAM );
     2529     2419
     2530     2420            %VD$NUMBER ( NAME = VD_$$MON_PRES,
     2531     2421            STCLASS = SYMREF );
     2532     2466
     2533     2467    1     DCL DELETION_FIRST_INDEX SBIN;
     2534     2468    1     DCL DELETION_LAST_INDEX SBIN;
     2535     2469    1     DCL DELETION_FIRST_KEY$ PTR;
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:358  
     2536     2470    1     DCL DELETION_LAST_KEY$ PTR;
     2537     2471    1     DCL RECORD_SET_INDEX SBIN;
     2538     2472    1     DCL RECORD_SET_KEY$ PTR;
     2539     2473    1     DCL RECORD_SET_SCROLL_INDEX SBIN;
     2540     2474    1     DCL SCROLL_COUNT UBIN;
     2541     2475
     2542     2476          %VD$BUFFER;
     2543     2534          %VD$RECORD_SET ( NAME = RECORD$SET,
     2544     2535                           STCLASS = "BASED ( SCROLL_WINDOW.RECORD_SET$ )" );
     2545     2613          %VD$TEXTC;
     2546     2636          %VD$TEXTC_REMOTE;
     2547     2697          %VD$WINDOW_SPEC;
     2548     2763
     2549     2764    1     DCL VDG$ESCREECH ENTRY (3);
     2550     2765    1     DCL VDG$MPRES_RETURN ENTRY (1);
     2551     2766    1     DCL VDG$MPRES_WSCROLL_UP ENTRY (4);
     2552     2767    1     DCL VDG$OCOPY ENTRY (2) ALTRET;
     2553     2768    1     DCL VDG$OFREE ENTRY (1) ALTRET;
     2554     2769        %EJECT;
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:359  
     2555     2770    1       IF VD_$$MON_PRES.V# > 10
     2556     2771    1       THEN
     2557     2772    1         CALL VDG$MPRES_WSCROLL_UP ( SCROLL_WINDOW,
     2558     2773    1           SCROLL_KEY,
     2559     2774    1           DELETION_FIRST_KEY,
     2560     2775    1           DELETION_LAST_KEY );
     2561     2776
     2562     2777    1       IF ADDR ( SCROLL_KEY ) ~= ADDR ( NIL )
     2563     2778    1       THEN
     2564     2779    1   SHUFFLE_AND_INSERT:
     2565     2780    2         DO;
     2566     2781
     2567     2782    2           IF RECORD$SET.N_ENTRIES# = RECORD$SET.MX_ENTRIES#
     2568     2783    2           THEN
     2569     2784    2   SHUFFLE_EVERYTHING_UP_1:
     2570     2785    3             DO;
     2571     2786                    %CLEARKEY ( KEY = "RECORD$SET.DESC.KEY",
     2572     2787                    INDX = 0 );
     2573     2797    3               SCROLL_WINDOW.BOB_DISPLAYED = %FALSE;
     2574     2798    3               CALL VDG$OFREE ( RECORD$SET.DESC.DATA$ ( 0 ) -> VD$BUFFER )
     2575     2799    4               WHENALTRETURN DO; ALTRETURN; END;
     2576     2800
     2577     2801    4               DO RECORD_SET_SCROLL_INDEX = 1 TO RECORD$SET.N_ENTRIES# - 1;
     2578     2802    4                 RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX - 1 ) =
     2579     2803    4                   RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX );
     2580     2804    4               END;
     2581     2805    3               RECORD$SET.SQ_OFFSET# = RECORD$SET.SQ_OFFSET# + 1;
     2582     2806    3             END SHUFFLE_EVERYTHING_UP_1;
     2583     2807    2           ELSE
     2584     2808    2   EXTEND_LAST_ENTRY:
     2585     2809    3             DO;
     2586     2810    3               RECORD$SET.N_ENTRIES# = RECORD$SET.N_ENTRIES# + 1;
     2587     2811    3             END EXTEND_LAST_ENTRY;
     2588     2812
     2589     2813                %COPYKEY ( FKEY = SCROLL_KEY,
     2590     2814                TKEY = "RECORD$SET.DESC.KEY",
     2591     2815                TINDX = "RECORD$SET.N_ENTRIES# - 1" );
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:360  
     2592     2831    2           CALL VDG$OCOPY ( SCROLL_DATA,
     2593     2832    2             RECORD$SET.DESC.DATA$ ( RECORD$SET.N_ENTRIES# - 1 ) )
     2594     2833    3           WHENALTRETURN DO; ALTRETURN; END;
     2595     2834
     2596     2835    2         END SHUFFLE_AND_INSERT;
     2597     2836    1       ELSE
     2598     2837    1   DELETE_BY_SHUFFLING:
     2599     2838    2         DO;
     2600     2839
     2601     2840                /*  If there's nothing in the RECORD_SET, give up.  */
     2602     2841    2           IF RECORD$SET.N_ENTRIES# = 0
     2603     2842    2           THEN
     2604     2843    2             RETURN;
     2605     2844
     2606     2845                %GETKEY ( KEY = DELETION_FIRST_KEY,
     2607     2846                PTR = DELETION_FIRST_KEY$ );
     2608     2856                %GETKEY ( KEY = DELETION_LAST_KEY,
     2609     2857                PTR = DELETION_LAST_KEY$ );
     2610     2867
     2611     2868                /*
     2612     2869                *   Set the defaults so that, if either or both of
     2613     2870                *       FIND_DELETION_LOWER_BOUND and/or _UPPER_BOUND finds no index,
     2614     2871                *       we'll end up with DELETION_FIRST_INDEX > _LAST_INDEX, and
     2615     2872                *       so will return without doing anything.
     2616     2873                *       (Test case:  DelRange is 5.5 - 5.6, record set is 1.0 - 10.0,
     2617     2874                *       but there are no records in the range 5.5 - 5.6 in the set.)
     2618     2875                */
     2619     2876    2           DELETION_FIRST_INDEX = RECORD$SET.N_ENTRIES#;
     2620     2877    2           DELETION_LAST_INDEX = -1;
     2621     2878
     2622     2879    2   FIND_DELETION_LOWER_BOUND:
     2623     2880    3           DO RECORD_SET_INDEX = 0 TO RECORD$SET.N_ENTRIES# - 1;
     2624     2881
     2625     2882                  %GETKEY ( KEY = "RECORD$SET.DESC.KEY",
     2626     2883                  INDX = RECORD_SET_INDEX,
     2627     2884                  PTR = RECORD_SET_KEY$ );
     2628     2894
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:361  
     2629     2895    3             IF RECORD_SET_KEY$ -> VD$TEXTC.BYTES >=
     2630     2896    3               DELETION_FIRST_KEY$ -> VD$TEXTC.BYTES
     2631     2897    3             THEN
     2632     2898    4               DO;
     2633     2899    4                 DELETION_FIRST_INDEX = RECORD_SET_INDEX;
     2634     2900    4                 EXIT FIND_DELETION_LOWER_BOUND;
     2635     2901    4               END;
     2636     2902
     2637     2903    3           END FIND_DELETION_LOWER_BOUND;
     2638     2904
     2639     2905    2   FIND_DELETION_UPPER_BOUND:
     2640     2906    2           DO RECORD_SET_INDEX = RECORD$SET.N_ENTRIES# - 1
     2641     2907    3             DOWNTO 0;
     2642     2908
     2643     2909                  %GETKEY ( KEY = "RECORD$SET.DESC.KEY",
     2644     2910                  INDX = RECORD_SET_INDEX,
     2645     2911                  PTR = RECORD_SET_KEY$ );
     2646     2921
     2647     2922    3             IF RECORD_SET_KEY$ -> VD$TEXTC.BYTES <=
     2648     2923    3               DELETION_LAST_KEY$ -> VD$TEXTC.BYTES
     2649     2924    3             THEN
     2650     2925    4               DO;
     2651     2926    4                 DELETION_LAST_INDEX = RECORD_SET_INDEX;
     2652     2927    4                 EXIT FIND_DELETION_UPPER_BOUND;
     2653     2928    4               END;
     2654     2929
     2655     2930    3           END FIND_DELETION_UPPER_BOUND;
     2656     2931
     2657     2932                /*  If there was nothing in the RECORD_SET within
     2658     2933                    the deleted range, give up.  */
     2659     2934    2           IF DELETION_FIRST_INDEX > DELETION_LAST_INDEX
     2660     2935    2           THEN
     2661     2936    2             RETURN;
     2662     2937
     2663     2938    2           SCROLL_COUNT = DELETION_LAST_INDEX
     2664     2939    2             - DELETION_FIRST_INDEX
     2665     2940    2             + 1;
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:362  
     2666     2941
     2667     2942    2   DELETE_LOWER_TO_UPPER_BOUND:
     2668     2943    2           DO RECORD_SET_SCROLL_INDEX = DELETION_FIRST_INDEX
     2669     2944    3             TO DELETION_LAST_INDEX;
     2670     2945
     2671     2946                  %CLEARKEY ( KEY = "RECORD$SET.DESC.KEY",
     2672     2947                  INDX = RECORD_SET_SCROLL_INDEX );
     2673     2957    3             CALL VDG$OFREE ( RECORD$SET.DESC.DATA$ ( RECORD_SET_SCROLL_INDEX ) ->
              2957                      VD$BUFFER )
     2674     2958    4             WHENALTRETURN DO; ALTRETURN; END;
     2675     2959
     2676     2960    3           END DELETE_LOWER_TO_UPPER_BOUND;
     2677     2961
     2678     2962    2   SHUFFLE_EVERYTHING_UP_N:
     2679     2963    2           DO RECORD_SET_SCROLL_INDEX = DELETION_LAST_INDEX + 1
     2680     2964    3             TO RECORD$SET.N_ENTRIES# - 1;
     2681     2965
     2682     2966    3             RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX - SCROLL_COUNT ) =
     2683     2967    3               RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX );
     2684     2968    3             RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX ) = %CLEAR;
     2685     2969
     2686     2970    3           END SHUFFLE_EVERYTHING_UP_N;
     2687     2971
     2688     2972    2           IF RECORD$SET.N_ENTRIES# - SCROLL_COUNT < 0
     2689     2973    2           THEN
     2690     2974    2             CALL VDG$ESCREECH;
     2691     2975    2           RECORD$SET.N_ENTRIES# = RECORD$SET.N_ENTRIES# - SCROLL_COUNT;
     2692     2976
     2693     2977    2         END DELETE_BY_SHUFFLING;
     2694     2978
     2695     2979    1       IF VD_$$MON_PRES.V# > 10
     2696     2980    1       THEN
     2697     2981    1         CALL VDG$MPRES_RETURN ( SCROLL_WINDOW );
     2698     2982
     2699     2983    1       RETURN;
     2700     2984
     2701     2985    1   END VDP$WSCROLL_UP;
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:363  
     2702     2986        %EOD;

PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:364  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDP$WSCROLL_UP.

   Procedure VDP$WSCROLL_UP requires 313 words for executable code.
   Procedure VDP$WSCROLL_UP requires 22 words of local(AUTO) storage.

PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:365  

 Object Unit name= VDP$WSCROLL_UP                             File name= VDP$WINDOW_I_O.:VDA5TOU
 UTS= JUL 04 '97 11:41:09.68 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   313    471  VDP$WSCROLL_UP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        6  VDP$WSCROLL_UP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 VDG$MPRES_WSCROLL_UP
 yes     yes           Std       1 VDG$OFREE
         yes           Std       3 VDG$ESCREECH
 yes     yes           Std       2 VDG$OCOPY
         yes           Std       1 VDG$MPRES_RETURN
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:366  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_$$MON_PRES                         B_VECTNIL
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:367  


     2499        1        /*M* VDP$WSCROLL_UP:  Scroll a window up.  */
     2500        2        /*T***********************************************************/
     2501        3        /*T*                                                         */
     2502        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2503        5        /*T*                                                         */
     2504        6        /*T***********************************************************/
     2505        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
     2506        8
     2507        9        VDP$WSCROLL_UP: PROC ( SCROLL_WINDOW,

      9  0 000000   000000 700200 xent  VDP$WSCROLL* TSX0  ! X66_AUTO_N
         0 000001   000026 000006                    ZERO    22,6

     2508       10              SCROLL_KEY,
     2509       11              SCROLL_SPEC,
     2510       12              SCROLL_DATA,
     2511       13              DELETION_FIRST_KEY,
     2512       14              DELETION_LAST_KEY )
     2513       15              ALTRET;
     2514       16
     2515       17          %INCLUDE VD_MACROS_M;
     2516     2232
     2517     2233            %VD$WINDOW_SPEC ( NAME = SCROLL_WINDOW,
     2518     2234            STCLASS = PARAM );
     2519     2300            %VD$KEY ( NAME = SCROLL_KEY,
     2520     2301            STCLASS = PARAM );
     2521     2315            %VD$SPEC ( NAME = SCROLL_SPEC,
     2522     2316            STCLASS = PARAM );
     2523     2330            %VD$BUFFER ( NAME = SCROLL_DATA,
     2524     2331            STCLASS = PARAM );
     2525     2389            %VD$KEY ( NAME = DELETION_FIRST_KEY,
     2526     2390            STCLASS = PARAM );
     2527     2404            %VD$KEY ( NAME = DELETION_LAST_KEY,
     2528     2405            STCLASS = PARAM );
     2529     2419
     2530     2420            %VD$NUMBER ( NAME = VD_$$MON_PRES,
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:368  
     2531     2421            STCLASS = SYMREF );
     2532     2466
     2533     2467    1     DCL DELETION_FIRST_INDEX SBIN;
     2534     2468    1     DCL DELETION_LAST_INDEX SBIN;
     2535     2469    1     DCL DELETION_FIRST_KEY$ PTR;
     2536     2470    1     DCL DELETION_LAST_KEY$ PTR;
     2537     2471    1     DCL RECORD_SET_INDEX SBIN;
     2538     2472    1     DCL RECORD_SET_KEY$ PTR;
     2539     2473    1     DCL RECORD_SET_SCROLL_INDEX SBIN;
     2540     2474    1     DCL SCROLL_COUNT UBIN;
     2541     2475
     2542     2476          %VD$BUFFER;
     2543     2534          %VD$RECORD_SET ( NAME = RECORD$SET,
     2544     2535                           STCLASS = "BASED ( SCROLL_WINDOW.RECORD_SET$ )" );
     2545     2613          %VD$TEXTC;
     2546     2636          %VD$TEXTC_REMOTE;
     2547     2697          %VD$WINDOW_SPEC;
     2548     2763
     2549     2764    1     DCL VDG$ESCREECH ENTRY (3);
     2550     2765    1     DCL VDG$MPRES_RETURN ENTRY (1);
     2551     2766    1     DCL VDG$MPRES_WSCROLL_UP ENTRY (4);
     2552     2767    1     DCL VDG$OCOPY ENTRY (2) ALTRET;
     2553     2768    1     DCL VDG$OFREE ENTRY (1) ALTRET;
     2554     2769        %EJECT;
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:369  
     2555     2770    1       IF VD_$$MON_PRES.V# > 10

   2770  0 000002   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         0 000003   000012 115007                    CMPA    10,DL
         0 000004   000017 604400 0                  TMOZ    s:2777

     2556     2771    1       THEN
     2557     2772    1         CALL VDG$MPRES_WSCROLL_UP ( SCROLL_WINDOW,

   2772  0 000005   200010 236100                    LDQ     @DELETION_LAST_KEY,,AUTO
         0 000006   200007 235100                    LDA     @DELETION_FIRST_KEY,,AUTO
         0 000007   200024 757100                    STAQ    SCROLL_COUNT+4,,AUTO
         0 000010   200004 236100                    LDQ     @SCROLL_KEY,,AUTO
         0 000011   200003 235100                    LDA     @SCROLL_WINDOW,,AUTO
         0 000012   200022 757100                    STAQ    SCROLL_COUNT+2,,AUTO
         0 000013   200022 630500                    EPPR0   SCROLL_COUNT+2,,AUTO
         0 000014   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000015   000000 701000 xent               TSX1    VDG$MPRES_WSCROLL_UP
         0 000016   000000 011000                    NOP     0

     2558     2773    1           SCROLL_KEY,
     2559     2774    1           DELETION_FIRST_KEY,
     2560     2775    1           DELETION_LAST_KEY );
     2561     2776
     2562     2777    1       IF ADDR ( SCROLL_KEY ) ~= ADDR ( NIL )

   2777  0 000017   200004 236100                    LDQ     @SCROLL_KEY,,AUTO
         0 000020   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000021   000161 600000 0                  TZE     DELETE_BY_SHUFFLING

     2563     2778    1       THEN
     2564     2779    1   SHUFFLE_AND_INSERT:
     2565     2780    2         DO;

   2780  0 000022                       SHUFFLE_AND* null
     2566     2781
     2567     2782    2           IF RECORD$SET.N_ENTRIES# = RECORD$SET.MX_ENTRIES#
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:370  

   2782  0 000022   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000023   000016 471500                    LDP1    14,,PR0
         0 000024   100002 720100                    LXL0    2,,PR1
         0 000025   100002 100100                    CMPX0   2,,PR1
         0 000026   000104 601000 0                  TNZ     EXTEND_LAST_ENTRY

     2568     2783    2           THEN
     2569     2784    2   SHUFFLE_EVERYTHING_UP_1:
     2570     2785    3             DO;

   2785  0 000027                       SHUFFLE_EVE* null
     2571     2786                    %CLEARKEY ( KEY = "RECORD$SET.DESC.KEY",
     2572     2787                    INDX = 0 );

   2794  0 000027   100003 721100                    LXL1    3,,PR1
         0 000030   000002 101003                    CMPX1   2,DU
         0 000031   000042 601000 0                  TNZ     s:2795+1

   2794  0 000032   100004 473500                    LDP3    4,,PR1
         0 000033   200022 453500                    STP3    SCROLL_COUNT+2,,AUTO
         0 000034   200022 630500                    EPPR0   SCROLL_COUNT+2,,AUTO
         0 000035   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000036   000000 701000 xent               TSX1    VDG$OFREE
         0 000037   000041 702000 0                  TSX2    s:2795
         0 000040   000042 710000 0                  TRA     s:2795+1

   2795  0 000041   000000 702200 xent               TSX2  ! X66_AALT

   2795  0 000042   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000043   000016 471500                    LDP1    14,,PR0
         0 000044   100003 450100                    STZ     3,,PR1
         0 000045   100004 450100                    STZ     4,,PR1

     2573     2797    3               SCROLL_WINDOW.BOB_DISPLAYED = %FALSE;

   2797  0 000046   000031 236000 xsym               LDQ     B_VECTNIL+25
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:371  
         0 000047   000015 356100                    ANSQ    13,,PR0

     2574     2798    3               CALL VDG$OFREE ( RECORD$SET.DESC.DATA$ ( 0 ) -> VD$BUFFER )

   2798  0 000050   000016 471500                    LDP1    14,,PR0
         0 000051   100007 473500                    LDP3    7,,PR1
         0 000052   200022 453500                    STP3    SCROLL_COUNT+2,,AUTO
         0 000053   200022 630500                    EPPR0   SCROLL_COUNT+2,,AUTO
         0 000054   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000055   000000 701000 xent               TSX1    VDG$OFREE
         0 000056   000060 702000 0                  TSX2    s:2799
         0 000057   000061 710000 0                  TRA     s:2801

     2575     2799    4               WHENALTRETURN DO; ALTRETURN; END;

   2799  0 000060   000000 702200 xent               TSX2  ! X66_AALT

     2576     2800
     2577     2801    4               DO RECORD_SET_SCROLL_INDEX = 1 TO RECORD$SET.N_ENTRIES# - 1;

   2801  0 000061   000001 235007                    LDA     1,DL
         0 000062   200017 755100                    STA     RECORD_SET_SCROLL_INDEX,,AUTO
         0 000063   000074 710000 0                  TRA     s:2804+1

     2578     2802    4                 RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX - 1 ) =

   2802  0 000064   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000065   000016 471500                    LDP1    14,,PR0
         0 000066   200017 236100                    LDQ     RECORD_SET_SCROLL_INDEX,,AUTO
         0 000067   000030 402007                    MPY     24,DL
         0 000070   000106 100506                    MLR     fill='000'O
         0 000071   100003 000030                    ADSC9   3,Q,PR1                  cn=0,n=24
         0 000072   177775 000030                    ADSC9   -3,Q,PR1                 cn=0,n=24

     2579     2803    4                   RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX );
     2580     2804    4               END;

PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:372  
   2804  0 000073   200017 054100                    AOS     RECORD_SET_SCROLL_INDEX,,AUTO
         0 000074   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000075   000016 471500                    LDP1    14,,PR0
         0 000076   100002 236100                    LDQ     2,,PR1
         0 000077   000022 732000                    QRS     18
         0 000100   200017 116100                    CMPQ    RECORD_SET_SCROLL_INDEX,,AUTO
         0 000101   000064 605400 0                  TPNZ    s:2802

     2581     2805    3               RECORD$SET.SQ_OFFSET# = RECORD$SET.SQ_OFFSET# + 1;

   2805  0 000102   100001 054100                    AOS     1,,PR1

     2582     2806    3             END SHUFFLE_EVERYTHING_UP_1;

   2806  0 000103   000107 710000 0                  TRA     s:2828

     2583     2807    2           ELSE
     2584     2808    2   EXTEND_LAST_ENTRY:
     2585     2809    3             DO;

   2809  0 000104                       EXTEND_LAST* null
     2586     2810    3               RECORD$SET.N_ENTRIES# = RECORD$SET.N_ENTRIES# + 1;

   2810  0 000104   100002 221100                    LDX1    2,,PR1
         0 000105   000001 622011                    EAX2    1,X1
         0 000106   100002 742100                    STX2    2,,PR1

     2587     2811    3             END EXTEND_LAST_ENTRY;

     2588     2812
     2589     2813                %COPYKEY ( FKEY = SCROLL_KEY,
     2590     2814                TKEY = "RECORD$SET.DESC.KEY",
     2591     2815                TINDX = "RECORD$SET.N_ENTRIES# - 1" );

   2828  0 000107   000016 471500                    LDP1    14,,PR0
         0 000110   100002 236100                    LDQ     2,,PR1
         0 000111   000022 732000                    QRS     18
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:373  
         0 000112   000006 402007                    MPY     6,DL
         0 000113   000002 736000                    QLS     2
         0 000114   200004 473500                    LDP3    @SCROLL_KEY,,AUTO
         0 000115   000106 100500                    MLR     fill='000'O
         0 000116   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8
         0 000117   177775 000010                    ADSC9   -3,Q,PR1                 cn=0,n=8

   2828  0 000120   300000 720100                    LXL0    0,,PR3
         0 000121   000002 100003                    CMPX0   2,DU
         0 000122   000141 601000 0                  TNZ     s:2831

   2828  0 000123   300001 471500                    LDP1    1,,PR3
         0 000124   000016 474500                    LDP4    14,,PR0
         0 000125   400002 236100                    LDQ     2,,PR4
         0 000126   000022 732000                    QRS     18
         0 000127   000006 402007                    MPY     6,DL
         0 000130   477776 635506                    EPPR5   -2,QL,PR4
         0 000131   200023 455500                    STP5    SCROLL_COUNT+3,,AUTO
         0 000132   200022 451500                    STP1    SCROLL_COUNT+2,,AUTO
         0 000133   200022 630500                    EPPR0   SCROLL_COUNT+2,,AUTO
         0 000134   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000135   000000 701000 xent               TSX1    VDG$OCOPY
         0 000136   000140 702000 0                  TSX2    s:2829
         0 000137   000141 710000 0                  TRA     s:2831

   2829  0 000140   000000 702200 xent               TSX2  ! X66_AALT

     2592     2831    2           CALL VDG$OCOPY ( SCROLL_DATA,

   2831  0 000141   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000142   000016 471500                    LDP1    14,,PR0
         0 000143   100002 236100                    LDQ     2,,PR1
         0 000144   000022 732000                    QRS     18
         0 000145   000006 402007                    MPY     6,DL
         0 000146   100001 633506                    EPPR3   1,QL,PR1
         0 000147   200023 453500                    STP3    SCROLL_COUNT+3,,AUTO
         0 000150   200006 236100                    LDQ     @SCROLL_DATA,,AUTO
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:374  
         0 000151   200022 756100                    STQ     SCROLL_COUNT+2,,AUTO
         0 000152   200022 630500                    EPPR0   SCROLL_COUNT+2,,AUTO
         0 000153   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000154   000000 701000 xent               TSX1    VDG$OCOPY
         0 000155   000157 702000 0                  TSX2    s:2833
         0 000156   000160 710000 0                  TRA     s:2835

     2593     2832    2             RECORD$SET.DESC.DATA$ ( RECORD$SET.N_ENTRIES# - 1 ) )
     2594     2833    3           WHENALTRETURN DO; ALTRETURN; END;

   2833  0 000157   000000 702200 xent               TSX2  ! X66_AALT

     2595     2834
     2596     2835    2         END SHUFFLE_AND_INSERT;

   2835  0 000160   000461 710000 0                  TRA     s:2979

     2597     2836    1       ELSE
     2598     2837    1   DELETE_BY_SHUFFLING:
     2599     2838    2         DO;

   2838  0 000161                       DELETE_BY_S* null
     2600     2839
     2601     2840                /*  If there's nothing in the RECORD_SET, give up.  */
     2602     2841    2           IF RECORD$SET.N_ENTRIES# = 0

   2841  0 000161   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000162   000016 471500                    LDP1    14,,PR0
         0 000163   100002 220100                    LDX0    2,,PR1
         0 000164   000166 601000 0                  TNZ     s:2853

     2603     2842    2           THEN
     2604     2843    2             RETURN;

   2843  0 000165   000000 702200 xent               TSX2  ! X66_ARET

     2605     2844
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:375  
     2606     2845                %GETKEY ( KEY = DELETION_FIRST_KEY,
     2607     2846                PTR = DELETION_FIRST_KEY$ );

   2853  0 000166   200007 473500                    LDP3    @DELETION_FIRST_KEY,,AUTO
         0 000167   300000 721100                    LXL1    0,,PR3
         0 000170   000002 101003                    CMPX1   2,DU
         0 000171   000176 601000 0                  TNZ     s:2853+8

   2853  0 000172   300001 474500                    LDP4    1,,PR3
         0 000173   400002 635500                    EPPR5   2,,PR4
         0 000174   200013 455500                    STP5    DELETION_FIRST_KEY$,,AUTO
         0 000175   000201 710000 0                  TRA     s:2864

   2853  0 000176   200007 236100                    LDQ     @DELETION_FIRST_KEY,,AUTO
         0 000177   000001 036003                    ADLQ    1,DU
         0 000200   200013 756100                    STQ     DELETION_FIRST_KEY$,,AUTO

     2608     2856                %GETKEY ( KEY = DELETION_LAST_KEY,
     2609     2857                PTR = DELETION_LAST_KEY$ );

   2864  0 000201   200010 474500                    LDP4    @DELETION_LAST_KEY,,AUTO
         0 000202   400000 722100                    LXL2    0,,PR4
         0 000203   000002 102003                    CMPX2   2,DU
         0 000204   000211 601000 0                  TNZ     s:2864+8

   2864  0 000205   400001 475500                    LDP5    1,,PR4
         0 000206   500002 636500                    EPPR6   2,,PR5
         0 000207   200014 456500                    STP6    DELETION_LAST_KEY$,,AUTO
         0 000210   000214 710000 0                  TRA     s:2876

   2864  0 000211   200010 236100                    LDQ     @DELETION_LAST_KEY,,AUTO
         0 000212   000001 036003                    ADLQ    1,DU
         0 000213   200014 756100                    STQ     DELETION_LAST_KEY$,,AUTO

     2610     2867
     2611     2868                /*
     2612     2869                *   Set the defaults so that, if either or both of
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:376  
     2613     2870                *       FIND_DELETION_LOWER_BOUND and/or _UPPER_BOUND finds no index,
     2614     2871                *       we'll end up with DELETION_FIRST_INDEX > _LAST_INDEX, and
     2615     2872                *       so will return without doing anything.
     2616     2873                *       (Test case:  DelRange is 5.5 - 5.6, record set is 1.0 - 10.0,
     2617     2874                *       but there are no records in the range 5.5 - 5.6 in the set.)
     2618     2875                */
     2619     2876    2           DELETION_FIRST_INDEX = RECORD$SET.N_ENTRIES#;

   2876  0 000214   100002 236100                    LDQ     2,,PR1
         0 000215   000022 732000                    QRS     18
         0 000216   200011 756100                    STQ     DELETION_FIRST_INDEX,,AUTO

     2620     2877    2           DELETION_LAST_INDEX = -1;

   2877  0 000217   000001 335007                    LCA     1,DL
         0 000220   200012 755100                    STA     DELETION_LAST_INDEX,,AUTO

     2621     2878
     2622     2879    2   FIND_DELETION_LOWER_BOUND:
     2623     2880    3           DO RECORD_SET_INDEX = 0 TO RECORD$SET.N_ENTRIES# - 1;

   2880  0 000221   200015 450100       FIND_DELETI* STZ     RECORD_SET_INDEX,,AUTO
         0 000222   000260 710000 0                  TRA     s:2903+1

     2624     2881
     2625     2882                  %GETKEY ( KEY = "RECORD$SET.DESC.KEY",
     2626     2883                  INDX = RECORD_SET_INDEX,
     2627     2884                  PTR = RECORD_SET_KEY$ );

   2891  0 000223   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000224   000016 471500                    LDP1    14,,PR0
         0 000225   200015 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         0 000226   000006 402007                    MPY     6,DL
         0 000227   100003 720106                    LXL0    3,QL,PR1
         0 000230   000002 100003                    CMPX0   2,DU
         0 000231   000236 601000 0                  TNZ     s:2891+11

PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:377  
   2891  0 000232   100004 473506                    LDP3    4,QL,PR1
         0 000233   300002 634500                    EPPR4   2,,PR3
         0 000234   200016 454500                    STP4    RECORD_SET_KEY$,,AUTO
         0 000235   000240 710000 0                  TRA     s:2895

   2891  0 000236   100004 633506                    EPPR3   4,QL,PR1
         0 000237   200016 453500                    STP3    RECORD_SET_KEY$,,AUTO

     2628     2894
     2629     2895    3             IF RECORD_SET_KEY$ -> VD$TEXTC.BYTES >=

   2895  0 000240   200016 473500                    LDP3    RECORD_SET_KEY$,,AUTO
         0 000241   300000 236100                    LDQ     0,,PR3
         0 000242   000033 772000                    QRL     27
         0 000243   200013 474500                    LDP4    DELETION_FIRST_KEY$,,AUTO
         0 000244   000000 620006                    EAX0    0,QL
         0 000245   400000 236100                    LDQ     0,,PR4
         0 000246   000033 772000                    QRL     27
         0 000247   000000 621006                    EAX1    0,QL
         0 000250   040140 106540                    CMPC    fill='040'O
         0 000251   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         0 000252   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         0 000253   000257 602000 0                  TNC     s:2903

     2630     2896    3               DELETION_FIRST_KEY$ -> VD$TEXTC.BYTES
     2631     2897    3             THEN
     2632     2898    4               DO;

     2633     2899    4                 DELETION_FIRST_INDEX = RECORD_SET_INDEX;

   2899  0 000254   200015 235100                    LDA     RECORD_SET_INDEX,,AUTO
         0 000255   200011 755100                    STA     DELETION_FIRST_INDEX,,AUTO

     2634     2900    4                 EXIT FIND_DELETION_LOWER_BOUND;

   2900  0 000256   000264 710000 0                  TRA     FIND_DELETION_UPPER_BOUND

PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:378  
     2635     2901    4               END;
     2636     2902
     2637     2903    3           END FIND_DELETION_LOWER_BOUND;

   2903  0 000257   200015 054100                    AOS     RECORD_SET_INDEX,,AUTO
         0 000260   100002 236100                    LDQ     2,,PR1
         0 000261   000022 732000                    QRS     18
         0 000262   200015 116100                    CMPQ    RECORD_SET_INDEX,,AUTO
         0 000263   000223 605400 0                  TPNZ    s:2891

     2638     2904
     2639     2905    2   FIND_DELETION_UPPER_BOUND:
     2640     2906    2           DO RECORD_SET_INDEX = RECORD$SET.N_ENTRIES# - 1
     2641     2907    3             DOWNTO 0;

   2907  0 000264   100002 236100       FIND_DELETI* LDQ     2,,PR1
         0 000265   000022 732000                    QRS     18
         0 000266   000001 136007                    SBLQ    1,DL
         0 000267   200015 756100                    STQ     RECORD_SET_INDEX,,AUTO
         0 000270   000327 710000 0                  TRA     s:2930+2

     2642     2908
     2643     2909                  %GETKEY ( KEY = "RECORD$SET.DESC.KEY",
     2644     2910                  INDX = RECORD_SET_INDEX,
     2645     2911                  PTR = RECORD_SET_KEY$ );

   2918  0 000271   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000272   000016 471500                    LDP1    14,,PR0
         0 000273   200015 236100                    LDQ     RECORD_SET_INDEX,,AUTO
         0 000274   000006 402007                    MPY     6,DL
         0 000275   100003 720106                    LXL0    3,QL,PR1
         0 000276   000002 100003                    CMPX0   2,DU
         0 000277   000304 601000 0                  TNZ     s:2918+11

   2918  0 000300   100004 473506                    LDP3    4,QL,PR1
         0 000301   300002 634500                    EPPR4   2,,PR3
         0 000302   200016 454500                    STP4    RECORD_SET_KEY$,,AUTO
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:379  
         0 000303   000306 710000 0                  TRA     s:2922

   2918  0 000304   100004 633506                    EPPR3   4,QL,PR1
         0 000305   200016 453500                    STP3    RECORD_SET_KEY$,,AUTO

     2646     2921
     2647     2922    3             IF RECORD_SET_KEY$ -> VD$TEXTC.BYTES <=

   2922  0 000306   200016 473500                    LDP3    RECORD_SET_KEY$,,AUTO
         0 000307   300000 236100                    LDQ     0,,PR3
         0 000310   000033 772000                    QRL     27
         0 000311   200014 474500                    LDP4    DELETION_LAST_KEY$,,AUTO
         0 000312   000000 620006                    EAX0    0,QL
         0 000313   400000 236100                    LDQ     0,,PR4
         0 000314   000033 772000                    QRL     27
         0 000315   000000 621006                    EAX1    0,QL
         0 000316   040140 106540                    CMPC    fill='040'O
         0 000317   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         0 000320   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         0 000321   000325 602000 0                  TNC     s:2930

     2648     2923    3               DELETION_LAST_KEY$ -> VD$TEXTC.BYTES
     2649     2924    3             THEN
     2650     2925    4               DO;

     2651     2926    4                 DELETION_LAST_INDEX = RECORD_SET_INDEX;

   2926  0 000322   200015 235100                    LDA     RECORD_SET_INDEX,,AUTO
         0 000323   200012 755100                    STA     DELETION_LAST_INDEX,,AUTO

     2652     2927    4                 EXIT FIND_DELETION_UPPER_BOUND;

   2927  0 000324   000331 710000 0                  TRA     s:2934

     2653     2928    4               END;
     2654     2929
     2655     2930    3           END FIND_DELETION_UPPER_BOUND;
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:380  

   2930  0 000325   000001 336007                    LCQ     1,DL
         0 000326   200015 056100                    ASQ     RECORD_SET_INDEX,,AUTO
         0 000327   200015 235100                    LDA     RECORD_SET_INDEX,,AUTO
         0 000330   000271 605000 0                  TPL     s:2918

     2656     2931
     2657     2932                /*  If there was nothing in the RECORD_SET within
     2658     2933                    the deleted range, give up.  */
     2659     2934    2           IF DELETION_FIRST_INDEX > DELETION_LAST_INDEX

   2934  0 000331   200011 236100                    LDQ     DELETION_FIRST_INDEX,,AUTO
         0 000332   200012 116100                    CMPQ    DELETION_LAST_INDEX,,AUTO
         0 000333   000335 604400 0                  TMOZ    s:2938

     2660     2935    2           THEN
     2661     2936    2             RETURN;

   2936  0 000334   000000 702200 xent               TSX2  ! X66_ARET

     2662     2937
     2663     2938    2           SCROLL_COUNT = DELETION_LAST_INDEX

   2938  0 000335   200012 236100                    LDQ     DELETION_LAST_INDEX,,AUTO
         0 000336   200011 136100                    SBLQ    DELETION_FIRST_INDEX,,AUTO
         0 000337   000001 036007                    ADLQ    1,DL
         0 000340   200020 756100                    STQ     SCROLL_COUNT,,AUTO

     2664     2939    2             - DELETION_FIRST_INDEX
     2665     2940    2             + 1;
     2666     2941
     2667     2942    2   DELETE_LOWER_TO_UPPER_BOUND:
     2668     2943    2           DO RECORD_SET_SCROLL_INDEX = DELETION_FIRST_INDEX
     2669     2944    3             TO DELETION_LAST_INDEX;

   2944  0 000341   200011 235100       DELETE_LOWE* LDA     DELETION_FIRST_INDEX,,AUTO
         0 000342   200017 755100                    STA     RECORD_SET_SCROLL_INDEX,,AUTO
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:381  
         0 000343   000403 710000 0                  TRA     s:2960+1

     2670     2945
     2671     2946                  %CLEARKEY ( KEY = "RECORD$SET.DESC.KEY",
     2672     2947                  INDX = RECORD_SET_SCROLL_INDEX );

   2954  0 000344   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000345   000016 471500                    LDP1    14,,PR0
         0 000346   200017 236100                    LDQ     RECORD_SET_SCROLL_INDEX,,AUTO
         0 000347   000006 402007                    MPY     6,DL
         0 000350   100003 720106                    LXL0    3,QL,PR1
         0 000351   000002 100003                    CMPX0   2,DU
         0 000352   000363 601000 0                  TNZ     s:2955+1

   2954  0 000353   100004 473506                    LDP3    4,QL,PR1
         0 000354   200022 453500                    STP3    SCROLL_COUNT+2,,AUTO
         0 000355   200022 630500                    EPPR0   SCROLL_COUNT+2,,AUTO
         0 000356   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000357   000000 701000 xent               TSX1    VDG$OFREE
         0 000360   000362 702000 0                  TSX2    s:2955
         0 000361   000363 710000 0                  TRA     s:2955+1

   2955  0 000362   000000 702200 xent               TSX2  ! X66_AALT

   2955  0 000363   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000364   000016 471500                    LDP1    14,,PR0
         0 000365   200017 236100                    LDQ     RECORD_SET_SCROLL_INDEX,,AUTO
         0 000366   000006 402007                    MPY     6,DL
         0 000367   100003 450106                    STZ     3,QL,PR1
         0 000370   100004 450106                    STZ     4,QL,PR1

     2673     2957    3             CALL VDG$OFREE ( RECORD$SET.DESC.DATA$ ( RECORD_SET_SCROLL_INDEX ) ->
              2957                      VD$BUFFER )

   2957  0 000371   000016 471500                    LDP1    14,,PR0
         0 000372   100007 473506                    LDP3    7,QL,PR1
         0 000373   200022 453500                    STP3    SCROLL_COUNT+2,,AUTO
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:382  
         0 000374   200022 630500                    EPPR0   SCROLL_COUNT+2,,AUTO
         0 000375   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000376   000000 701000 xent               TSX1    VDG$OFREE
         0 000377   000401 702000 0                  TSX2    s:2958
         0 000400   000402 710000 0                  TRA     s:2960

     2674     2958    4             WHENALTRETURN DO; ALTRETURN; END;

   2958  0 000401   000000 702200 xent               TSX2  ! X66_AALT

     2675     2959
     2676     2960    3           END DELETE_LOWER_TO_UPPER_BOUND;

   2960  0 000402   200017 054100                    AOS     RECORD_SET_SCROLL_INDEX,,AUTO
         0 000403   200017 236100                    LDQ     RECORD_SET_SCROLL_INDEX,,AUTO
         0 000404   200012 116100                    CMPQ    DELETION_LAST_INDEX,,AUTO
         0 000405   000344 604400 0                  TMOZ    s:2954

     2677     2961
     2678     2962    2   SHUFFLE_EVERYTHING_UP_N:
     2679     2963    2           DO RECORD_SET_SCROLL_INDEX = DELETION_LAST_INDEX + 1
     2680     2964    3             TO RECORD$SET.N_ENTRIES# - 1;

   2964  0 000406   200012 235100       SHUFFLE_EVE* LDA     DELETION_LAST_INDEX,,AUTO
         0 000407   000001 035007                    ADLA    1,DL
         0 000410   200017 755100                    STA     RECORD_SET_SCROLL_INDEX,,AUTO
         0 000411   000437 710000 0                  TRA     s:2970+1

     2681     2965
     2682     2966    3             RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX - SCROLL_COUNT ) =

   2966  0 000412   200017 236100                    LDQ     RECORD_SET_SCROLL_INDEX,,AUTO
         0 000413   200020 136100                    SBLQ    SCROLL_COUNT,,AUTO
         0 000414   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000415   000016 471500                    LDP1    14,,PR0
         0 000416   200022 756100                    STQ     SCROLL_COUNT+2,,AUTO
         0 000417   200017 236100                    LDQ     RECORD_SET_SCROLL_INDEX,,AUTO
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:383  
         0 000420   000030 402007                    MPY     24,DL
         0 000421   200023 756100                    STQ     SCROLL_COUNT+3,,AUTO
         0 000422   200022 236100                    LDQ     SCROLL_COUNT+2,,AUTO
         0 000423   000030 402007                    MPY     24,DL
         0 000424   200023 235100                    LDA     SCROLL_COUNT+3,,AUTO
         0 000425   000106 100505                    MLR     fill='000'O
         0 000426   100003 000030                    ADSC9   3,A,PR1                  cn=0,n=24
         0 000427   100003 000030                    ADSC9   3,Q,PR1                  cn=0,n=24

     2683     2967    3               RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX );
     2684     2968    3             RECORD$SET.DESC ( RECORD_SET_SCROLL_INDEX ) = %CLEAR;

   2968  0 000430   000016 471500                    LDP1    14,,PR0
         0 000431   200017 236100                    LDQ     RECORD_SET_SCROLL_INDEX,,AUTO
         0 000432   000030 402007                    MPY     24,DL
         0 000433   000106 100400                    MLR     fill='000'O
         0 000434   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000435   100003 000030                    ADSC9   3,Q,PR1                  cn=0,n=24

     2685     2969
     2686     2970    3           END SHUFFLE_EVERYTHING_UP_N;

   2970  0 000436   200017 054100                    AOS     RECORD_SET_SCROLL_INDEX,,AUTO
         0 000437   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000440   000016 471500                    LDP1    14,,PR0
         0 000441   100002 236100                    LDQ     2,,PR1
         0 000442   000022 732000                    QRS     18
         0 000443   200017 116100                    CMPQ    RECORD_SET_SCROLL_INDEX,,AUTO
         0 000444   000412 605400 0                  TPNZ    s:2966

     2687     2971
     2688     2972    2           IF RECORD$SET.N_ENTRIES# - SCROLL_COUNT < 0

   2972  0 000445   200020 136100                    SBLQ    SCROLL_COUNT,,AUTO
         0 000446   000452 605000 0                  TPL     s:2975

     2689     2973    2           THEN
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:384  
     2690     2974    2             CALL VDG$ESCREECH;

   2974  0 000447   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000450   000000 701000 xent               TSX1    VDG$ESCREECH
         0 000451   000000 011000                    NOP     0

     2691     2975    2           RECORD$SET.N_ENTRIES# = RECORD$SET.N_ENTRIES# - SCROLL_COUNT;

   2975  0 000452   200003 470500                    LDP0    @SCROLL_WINDOW,,AUTO
         0 000453   000016 471500                    LDP1    14,,PR0
         0 000454   100002 236100                    LDQ     2,,PR1
         0 000455   000022 732000                    QRS     18
         0 000456   200020 136100                    SBLQ    SCROLL_COUNT,,AUTO
         0 000457   000000 620006                    EAX0    0,QL
         0 000460   100002 740100                    STX0    2,,PR1

     2692     2976
     2693     2977    2         END DELETE_BY_SHUFFLING;

     2694     2978
     2695     2979    1       IF VD_$$MON_PRES.V# > 10

   2979  0 000461   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         0 000462   000012 115007                    CMPA    10,DL
         0 000463   000470 604400 0                  TMOZ    s:2983

     2696     2980    1       THEN
     2697     2981    1         CALL VDG$MPRES_RETURN ( SCROLL_WINDOW );

   2981  0 000464   200003 630500                    EPPR0   @SCROLL_WINDOW,,AUTO
         0 000465   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000466   000000 701000 xent               TSX1    VDG$MPRES_RETURN
         0 000467   000000 011000                    NOP     0

     2698     2982
     2699     2983    1       RETURN;

PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:385  
   2983  0 000470   000000 702200 xent               TSX2  ! X66_ARET
     2700     2984
     2701     2985    1   END VDP$WSCROLL_UP;
     2702     2986        %EOD;

PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:386  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDP$WSCROLL_UP.
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:387  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 @DELETION_FIRST_KEY       10-0-0/w PTR         r     1 @DELETION_LAST_KEY
     6-0-0/w PTR         r     1 @SCROLL_DATA               4-0-0/w PTR         r     1 @SCROLL_KEY
     5-0-0/w PTR         r     1 @SCROLL_SPEC               3-0-0/w PTR         r     1 @SCROLL_WINDOW
    11-0-0/w SBIN        r     1 DELETION_FIRST_INDEX      *0-0-0/w STRC(72)    r     1 DELETION_FIRST_KEY
    13-0-0/w PTR         r     1 DELETION_FIRST_KEY$       12-0-0/w SBIN        r     1 DELETION_LAST_INDEX
    *0-0-0/w STRC(72)    r     1 DELETION_LAST_KEY         14-0-0/w PTR         r     1 DELETION_LAST_KEY$
    15-0-0/w SBIN        r     1 RECORD_SET_INDEX          16-0-0/w PTR         r     1 RECORD_SET_KEY$
    17-0-0/w SBIN        r     1 RECORD_SET_SCROLL_INDEX
    20-0-0/w UBIN        r     1 SCROLL_COUNT              *0-0-0/w ASTR(90)    r     1 SCROLL_DATA
    *0-0-0/w STRC(72)    r     1 SCROLL_KEY                *0-0-0/w STRC(72)    r     1 SCROLL_SPEC
    *0-0-0/w STRC(900)   r     1 SCROLL_WINDOW

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 VD_$$MON_PRES

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(324)   r     1 RECORD$SET                 0-0-0/w ASTR(90)    r     1 VD$BUFFER
     0-0-0/w ASTR(9)     r     1 VD$TEXTC                   0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE


   Procedure VDP$WSCROLL_UP requires 313 words for executable code.
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:388  
   Procedure VDP$WSCROLL_UP requires 22 words of local(AUTO) storage.
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:389  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:390  
          MINI XREF LISTING

DELETION_FIRST_INDEX
      2467**DCL      2876<<ASSIGN   2899<<ASSIGN   2934>>IF       2938>>ASSIGN   2944>>DOINDEX
DELETION_FIRST_KEY
      2398**DCL         9--PROC     2772<>CALL
DELETION_FIRST_KEY.REP#
      2402**DCL      2853>>IF
DELETION_FIRST_KEY.V$
      2402**DCL      2853>>ASSIGN   2853--ASSIGN
DELETION_FIRST_KEY$
      2469**DCL      2853<<ASSIGN   2853<<ASSIGN   2895>>IF       2895>>IF
DELETION_LAST_INDEX
      2468**DCL      2877<<ASSIGN   2926<<ASSIGN   2934>>IF       2938>>ASSIGN   2944>>DOINDEX  2964>>DOINDEX
DELETION_LAST_KEY
      2413**DCL         9--PROC     2772<>CALL
DELETION_LAST_KEY.REP#
      2417**DCL      2864>>IF
DELETION_LAST_KEY.V$
      2417**DCL      2864>>ASSIGN   2864--ASSIGN
DELETION_LAST_KEY$
      2470**DCL      2864<<ASSIGN   2864<<ASSIGN   2922>>IF       2922>>IF
FIND_DELETION_LOWER_BOUND
      2880**LABEL    2900--EXIT
FIND_DELETION_UPPER_BOUND
      2907**LABEL    2927--EXIT
RECORD$SET.DESC
      2580**DCL      2802<<ASSIGN   2802>>ASSIGN   2966<<ASSIGN   2966>>ASSIGN   2968<<ASSIGN
RECORD$SET.DESC.DATA$
      2610**DCL      2798>>CALL     2798>>CALL     2831<>CALL     2957>>CALL     2957>>CALL
RECORD$SET.DESC.KEY
      2592**DCL      2795<<ASSIGN   2828<<ASSIGN   2955<<ASSIGN
RECORD$SET.DESC.KEY.REP#
      2594**DCL      2794>>IF       2891>>IF       2918>>IF       2954>>IF
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:391  
RECORD$SET.DESC.KEY.V$
      2594**DCL      2794>>CALL     2794>>CALL     2828<>CALL     2891>>ASSIGN   2891--ASSIGN   2918>>ASSIGN
      2918--ASSIGN   2954>>CALL     2954>>CALL
RECORD$SET.MX_ENTRIES#
      2569**DCL      2782>>IF
RECORD$SET.N_ENTRIES#
      2569**DCL      2782>>IF       2801>>DOINDEX  2810<<ASSIGN   2810>>ASSIGN   2828>>ASSIGN   2828>>CALL
      2831>>CALL     2841>>IF       2876>>ASSIGN   2880>>DOINDEX  2907>>DOINDEX  2964>>DOINDEX  2972>>IF
      2975<<ASSIGN   2975>>ASSIGN
RECORD$SET.SQ_OFFSET#
      2569**DCL      2805<<ASSIGN   2805>>ASSIGN
RECORD_SET_INDEX
      2471**DCL      2880<<DOINDEX  2891>>IF       2891>>ASSIGN   2891>>ASSIGN   2899>>ASSIGN   2907<<DOINDEX
      2918>>IF       2918>>ASSIGN   2918>>ASSIGN   2926>>ASSIGN
RECORD_SET_KEY$
      2472**DCL      2891<<ASSIGN   2891<<ASSIGN   2895>>IF       2895>>IF       2918<<ASSIGN   2918<<ASSIGN
      2922>>IF       2922>>IF
RECORD_SET_SCROLL_INDEX
      2473**DCL      2801<<DOINDEX  2802>>ASSIGN   2802>>ASSIGN   2944<<DOINDEX  2954>>IF       2954>>CALL
      2954>>CALL     2955>>ASSIGN   2957>>CALL     2957>>CALL     2964<<DOINDEX  2966>>ASSIGN   2966>>ASSIGN
      2968>>ASSIGN
SCROLL_COUNT
      2474**DCL      2938<<ASSIGN   2966>>ASSIGN   2972>>IF       2975>>ASSIGN
SCROLL_DATA
      2356**DCL         9--PROC     2831<>CALL
SCROLL_DATA.LENGTH#
      2382**DCL      2384--IMP-SIZ  2831>>CALL
SCROLL_KEY
      2309**DCL         9--PROC     2772<>CALL     2777--IF       2828>>ASSIGN
SCROLL_KEY.REP#
      2313**DCL      2828>>IF
SCROLL_KEY.V$
      2313**DCL      2828>>CALL     2828>>CALL
SCROLL_SPEC
      2324**DCL         9--PROC
SCROLL_WINDOW
PL6.E3A0      #005=VDP$WSCROLL_UP File=VDP$WINDOW_I_O.:VDA5TSI                   FRI 07/04/97 11:41 Page:392  
      2242**DCL         9--PROC     2772<>CALL     2981<>CALL
SCROLL_WINDOW.BOB_DISPLAYED
      2285**DCL      2797<<ASSIGN
SCROLL_WINDOW.RECORD_SET$
      2286**DCL      2543--IMP-PTR  2782>>IF       2782>>IF       2794>>IF       2794>>CALL     2794>>CALL
      2795>>ASSIGN   2798>>CALL     2798>>CALL     2801>>DOINDEX  2802>>ASSIGN   2802>>ASSIGN   2805>>ASSIGN
      2805>>ASSIGN   2810>>ASSIGN   2810>>ASSIGN   2828>>ASSIGN   2828>>ASSIGN   2828>>CALL     2828>>CALL
      2831>>CALL     2831>>CALL     2841>>IF       2876>>ASSIGN   2880>>DOINDEX  2891>>IF       2891>>ASSIGN
      2891>>ASSIGN   2907>>DOINDEX  2918>>IF       2918>>ASSIGN   2918>>ASSIGN   2954>>IF       2954>>CALL
      2954>>CALL     2955>>ASSIGN   2957>>CALL     2957>>CALL     2964>>DOINDEX  2966>>ASSIGN   2966>>ASSIGN
      2968>>ASSIGN   2972>>IF       2975>>ASSIGN   2975>>ASSIGN
VD$BUFFER
      2501**DCL      2798<>CALL     2957<>CALL
VD$BUFFER.LENGTH#
      2527**DCL      2529--IMP-SIZ  2798>>CALL     2957>>CALL
VD$TEXTC.BYTES
      2631**DCL      2895>>IF       2895>>IF       2922>>IF       2922>>IF
VD$TEXTC.LENGTH#
      2629**DCL      2631--IMP-SIZ  2895>>IF       2895>>IF       2922>>IF       2922>>IF
VD$TEXTC_REMOTE
      2661**DCL      2794<>CALL     2828<>CALL     2954<>CALL
VD$TEXTC_REMOTE.LENGTH#
      2690**DCL      2692--IMP-SIZ  2794>>CALL     2828>>CALL     2853--ASSIGN   2864--ASSIGN   2891--ASSIGN
      2918--ASSIGN   2954>>CALL
VDG$ESCREECH
      2764**DCL-ENT  2974--CALL
VDG$MPRES_RETURN
      2765**DCL-ENT  2981--CALL
VDG$MPRES_WSCROLL_UP
      2766**DCL-ENT  2772--CALL
VDG$OCOPY
      2767**DCL-ENT  2828--CALL     2831--CALL
VDG$OFREE
      2768**DCL-ENT  2794--CALL     2798--CALL     2954--CALL     2957--CALL
VD_$$MON_PRES.V#
      2463**DCL      2770>>IF       2979>>IF

PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:393  
     2703        1        /*M* VDP$WWRITE:  Write (1D Present) a SelectedBlock.  */
     2704        2        /*T***********************************************************/
     2705        3        /*T*                                                         */
     2706        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2707        5        /*T*                                                         */
     2708        6        /*T***********************************************************/
     2709        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
     2710        8
     2711        9        VDP$WWRITE: PROC (SELECTION)
     2712       10              ALTRET;
     2713       11
     2714       12          %INCLUDE VD_MACROS_M;
     2715     2227          %INCLUDE VD_PERR_C;
     2716     2375
     2717     2376            %VD$NUMBER ( NAME = VD_$$MON_PRES,
     2718     2377            STCLASS = SYMREF );
     2719     2422            %VD$NUMBER ( NAME = VD_$SCREEN,
     2720     2423            STCLASS = SYMREF );
     2721     2468
     2722     2469        %VD$OPERAND (NAME=SELECTION, STCLASS=PARAM);
     2723     2483
     2724     2484            %VD$BLOCK_DESC (NAME=SEL$BLOCK_DESC, STCLASS="BASED(SELECTION.EDIT_BLOCK$)");
     2725     2631            %VD$EVAL (NAME=SEL$EVAL, STCLASS="BASED(SELECTION.EVAL$)");
     2726     2876            %VD$LOCATION;
     2727     2904            %VD$STREAM (NAME=SEL$STREAM, STCLASS="BASED(SELECTION.STREAM$)");
     2728     3010            %VD$TEXTC;
     2729     3033            %VD$TEXTC_REMOTE;
     2730     3094
     2731     3095            %VD$LOCATION ( NAME = RREAD_LOCATION,
     2732     3096            STCLASS = AUTO );
     2733     3124            %VD$NODE_DESC ( NAME = RGET_NODE_DESC,
     2734     3125            STCLASS = AUTO );
     2735     3167
     2736     3168    1     DCL EVAL_ENDD_KEY$ PTR;
     2737     3169    1     DCL LOCATION$ PTR;
     2738     3170    1     DCL RECORD_COUNT SBIN;
     2739     3171    1     DCL RELATIVE SBIN;
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:394  
     2740     3172    1     DCL RREAD_SAVED_KEY$ PTR;
     2741     3173    1     DCL STREAM_CURRENT_KEY$ PTR;
     2742     3174    1     DCL RCCL SBIN;
     2743     3175
     2744     3176    1     DCL VDE$RGET ENTRY (3) ALTRET;
     2745     3177    1     DCL VDE$RREAD ENTRY (4) ALTRET;
     2746     3178
     2747     3179    1     DCL VDG$EREPORT_ERROR ENTRY (1);
     2748     3180    1     DCL VDG$MPRES_RETURN ENTRY (1);
     2749     3181    1     DCL VDG$MPRES_WWRITE ENTRY (1);
     2750     3182    1     DCL VDG$WARNMSG ENTRY (4) ALTRET;
     2751     3183    1     DCL VDG$COMPARE_LOCS ENTRY (3) ALTRET;
     2752     3184
     2753     3185    1     DCL VDP$WFORMAT_RECORD ENTRY (2) ALTRET;
     2754     3186        %EJECT;
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:395  
     2755     3187    1       IF VD_$SCREEN.V# >= %MN_SCREEN_EDITING_HEIGHT
     2756     3188    1       THEN
     2757     3189    1         RETURN;
     2758     3190
     2759     3191    1       IF VD_$$MON_PRES.V# > 0
     2760     3192    1       THEN
     2761     3193    1         CALL VDG$MPRES_WWRITE ( SELECTION );
     2762     3194
     2763     3195    1       RREAD_LOCATION = SEL$EVAL.RANGE.START;
     2764     3196    1       LOCATION$ = ADDR ( RREAD_LOCATION );
     2765     3197    1       RELATIVE = 0;
     2766     3198    1       RECORD_COUNT = 0;
     2767     3199
     2768     3200    1       IF SEL$EVAL.RANGE.ENDD.EOF THEN
     2769     3201    1         EVAL_ENDD_KEY$ = ADDR(NIL);
     2770     3202    2       ELSE DO;
     2771     3203                %GETKEY ( KEY = "SEL$EVAL.RANGE.ENDD.KEY",
     2772     3204                INDX = "SEL$BLOCK_DESC.OPTIONS.LEVEL# - 1",
     2773     3205                PTR = EVAL_ENDD_KEY$ );
     2774     3215    2         END;
     2775     3216    1       CALL VDG$COMPARE_LOCS (SEL$EVAL.RANGE.START, SEL$EVAL.RANGE.ENDD, RCCL);
     2776     3217
     2777     3218    1   DISPLAY_SELECTED_BLOCK:
     2778     3219    2       DO WHILE %TRUE;
     2779     3220
     2780     3221    2         CALL VDE$RREAD ( SEL$STREAM,
     2781     3222    2           SEL$BLOCK_DESC.RANGE,
     2782     3223    2           LOCATION$ -> VD$LOCATION,
     2783     3224    2           RELATIVE  /* relative position = forward 0 or 1 */ )
     2784     3225    3         WHENALTRETURN DO; ALTRETURN; END;
     2785     3226
     2786     3227    2         CALL VDE$RGET ( SEL$STREAM,
     2787     3228    2           SEL$BLOCK_DESC.RANGE,
     2788     3229    2           RGET_NODE_DESC )
     2789     3230    3         WHENALTRETURN DO; ALTRETURN; END;
     2790     3231
     2791     3232    2         IF RGET_NODE_DESC.KEY = %CLEAR
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:396  
     2792     3233    2         THEN
     2793     3234    2           EXIT DISPLAY_SELECTED_BLOCK;
     2794     3235
     2795     3236              %GETKEY ( KEY = "SEL$STREAM.CURRENT.KEY",
     2796     3237              INDX = "SEL$BLOCK_DESC.OPTIONS.LEVEL# - 1",
     2797     3238              PTR = STREAM_CURRENT_KEY$ );
     2798     3248    2         IF EVAL_ENDD_KEY$~=ADDR(NIL) THEN
     2799     3249    2           IF STREAM_CURRENT_KEY$ -> VD$TEXTC.BYTES >
     2800     3250    2             EVAL_ENDD_KEY$ -> VD$TEXTC.BYTES
     2801     3251    2             OR ( STREAM_CURRENT_KEY$ -> VD$TEXTC.BYTES =
     2802     3252    2             EVAL_ENDD_KEY$ -> VD$TEXTC.BYTES
     2803     3253    2             AND RCCL ~= %RCCL_EQUAL
     2804     3254    2             AND SEL$EVAL.RANGE.ENDD.POSITION# = 0 )
     2805     3255    2           THEN
     2806     3256    2             EXIT DISPLAY_SELECTED_BLOCK;
     2807     3257
     2808     3258    2         RECORD_COUNT = RECORD_COUNT + 1;
     2809     3259
     2810     3260    2         CALL VDP$WFORMAT_RECORD ( RGET_NODE_DESC )
     2811     3261    3         WHENALTRETURN DO; ALTRETURN; END;
     2812     3262
     2813     3263    2         LOCATION$ = ADDR (NIL);
     2814     3264    2         RELATIVE = 1;
     2815     3265
     2816     3266    2       END DISPLAY_SELECTED_BLOCK;
     2817     3267
     2818     3268    1       IF RECORD_COUNT = 0
     2819     3269    1       THEN
     2820     3270    1   GIVE_NONE_ERROR:
     2821     3271    2         DO;
     2822     3272    2           CALL VDG$WARNMSG (%E$INFO_NONE);
     2823     3273    2           CALL VDG$EREPORT_ERROR;
     2824     3274    2         END GIVE_NONE_ERROR;
     2825     3275
     2826     3276    1       IF VD_$$MON_PRES.V# > 0
     2827     3277    1       THEN
     2828     3278    1         CALL VDG$MPRES_RETURN ( SELECTION );
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:397  
     2829     3279
     2830     3280    1       RETURN;
     2831     3281
     2832     3282    1   END VDP$WWRITE;

PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:398  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDP$WWRITE.

   Procedure VDP$WWRITE requires 163 words for executable code.
   Procedure VDP$WWRITE requires 30 words of local(AUTO) storage.

    No errors detected in file VDP$WINDOW_I_O.:VDA5TSI    .

PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:399  

 Object Unit name= VDP$WWRITE                                 File name= VDP$WINDOW_I_O.:VDA5TOU
 UTS= JUL 04 '97 11:41:19.96 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   163    243  VDP$WWRITE
    1  RoData even  none     2      2  VDP$WWRITE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  VDP$WWRITE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 VDG$MPRES_WWRITE
 yes     yes           Std       3 VDE$RGET
         yes           Std       1 VDG$EREPORT_ERROR
 yes     yes           Std       3 VDG$COMPARE_LOCS
 yes     yes           Std       4 VDE$RREAD
         yes           Std       1 VDG$MPRES_RETURN
 yes     yes           Std       2 VDP$WFORMAT_RECORD
 yes     yes           Std       4 VDG$WARNMSG
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:400  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_$$MON_PRES                         VD_$SCREEN                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:401  


     2703        1        /*M* VDP$WWRITE:  Write (1D Present) a SelectedBlock.  */
     2704        2        /*T***********************************************************/
     2705        3        /*T*                                                         */
     2706        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2707        5        /*T*                                                         */
     2708        6        /*T***********************************************************/
     2709        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
     2710        8
     2711        9        VDP$WWRITE: PROC (SELECTION)

      9  0 000000   000000 700200 xent  VDP$WWRITE   TSX0  ! X66_AUTO_1
         0 000001   000036 000001                    ZERO    30,1

     2712       10              ALTRET;
     2713       11
     2714       12          %INCLUDE VD_MACROS_M;
     2715     2227          %INCLUDE VD_PERR_C;
     2716     2375
     2717     2376            %VD$NUMBER ( NAME = VD_$$MON_PRES,
     2718     2377            STCLASS = SYMREF );
     2719     2422            %VD$NUMBER ( NAME = VD_$SCREEN,
     2720     2423            STCLASS = SYMREF );
     2721     2468
     2722     2469        %VD$OPERAND (NAME=SELECTION, STCLASS=PARAM);
     2723     2483
     2724     2484            %VD$BLOCK_DESC (NAME=SEL$BLOCK_DESC, STCLASS="BASED(SELECTION.EDIT_BLOCK$)");
     2725     2631            %VD$EVAL (NAME=SEL$EVAL, STCLASS="BASED(SELECTION.EVAL$)");
     2726     2876            %VD$LOCATION;
     2727     2904            %VD$STREAM (NAME=SEL$STREAM, STCLASS="BASED(SELECTION.STREAM$)");
     2728     3010            %VD$TEXTC;
     2729     3033            %VD$TEXTC_REMOTE;
     2730     3094
     2731     3095            %VD$LOCATION ( NAME = RREAD_LOCATION,
     2732     3096            STCLASS = AUTO );
     2733     3124            %VD$NODE_DESC ( NAME = RGET_NODE_DESC,
     2734     3125            STCLASS = AUTO );
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:402  
     2735     3167
     2736     3168    1     DCL EVAL_ENDD_KEY$ PTR;
     2737     3169    1     DCL LOCATION$ PTR;
     2738     3170    1     DCL RECORD_COUNT SBIN;
     2739     3171    1     DCL RELATIVE SBIN;
     2740     3172    1     DCL RREAD_SAVED_KEY$ PTR;
     2741     3173    1     DCL STREAM_CURRENT_KEY$ PTR;
     2742     3174    1     DCL RCCL SBIN;
     2743     3175
     2744     3176    1     DCL VDE$RGET ENTRY (3) ALTRET;
     2745     3177    1     DCL VDE$RREAD ENTRY (4) ALTRET;
     2746     3178
     2747     3179    1     DCL VDG$EREPORT_ERROR ENTRY (1);
     2748     3180    1     DCL VDG$MPRES_RETURN ENTRY (1);
     2749     3181    1     DCL VDG$MPRES_WWRITE ENTRY (1);
     2750     3182    1     DCL VDG$WARNMSG ENTRY (4) ALTRET;
     2751     3183    1     DCL VDG$COMPARE_LOCS ENTRY (3) ALTRET;
     2752     3184
     2753     3185    1     DCL VDP$WFORMAT_RECORD ENTRY (2) ALTRET;
     2754     3186        %EJECT;
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:403  
     2755     3187    1       IF VD_$SCREEN.V# >= %MN_SCREEN_EDITING_HEIGHT

   3187  0 000002   000003 235000 xsym               LDA     VD_$SCREEN+3
         0 000003   000003 115007                    CMPA    3,DL
         0 000004   000006 604000 0                  TMI     s:3191

     2756     3188    1       THEN
     2757     3189    1         RETURN;

   3189  0 000005   000000 702200 xent               TSX2  ! X66_ARET

     2758     3190
     2759     3191    1       IF VD_$$MON_PRES.V# > 0

   3191  0 000006   000003 236000 xsym               LDQ     VD_$$MON_PRES+3
         0 000007   000014 604400 0                  TMOZ    s:3195

     2760     3192    1       THEN
     2761     3193    1         CALL VDG$MPRES_WWRITE ( SELECTION );

   3193  0 000010   200003 630500                    EPPR0   @SELECTION,,AUTO
         0 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000012   000000 701000 xent               TSX1    VDG$MPRES_WWRITE
         0 000013   000000 011000                    NOP     0

     2762     3194
     2763     3195    1       RREAD_LOCATION = SEL$EVAL.RANGE.START;

   3195  0 000014   200003 470500                    LDP0    @SELECTION,,AUTO
         0 000015   000003 471500                    LDP1    3,,PR0
         0 000016   000100 100500                    MLR     fill='000'O
         0 000017   100024 000044                    ADSC9   20,,PR1                  cn=0,n=36
         0 000020   200004 000044                    ADSC9   RREAD_LOCATION,,AUTO     cn=0,n=36

     2764     3196    1       LOCATION$ = ADDR ( RREAD_LOCATION );

   3196  0 000021   200004 631500                    EPPR1   RREAD_LOCATION,,AUTO
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:404  
         0 000022   200024 451500                    STP1    LOCATION$,,AUTO

     2765     3197    1       RELATIVE = 0;

   3197  0 000023   200026 450100                    STZ     RELATIVE,,AUTO

     2766     3198    1       RECORD_COUNT = 0;

   3198  0 000024   200025 450100                    STZ     RECORD_COUNT,,AUTO

     2767     3199
     2768     3200    1       IF SEL$EVAL.RANGE.ENDD.EOF THEN

   3200  0 000025   000003 473500                    LDP3    3,,PR0
         0 000026   300045 236100                    LDQ     37,,PR3
         0 000027   400000 316007                    CANQ    -131072,DL
         0 000030   000034 600000 0                  TZE     s:3212

     2769     3201    1         EVAL_ENDD_KEY$ = ADDR(NIL);

   3201  0 000031   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000032   200023 756100                    STQ     EVAL_ENDD_KEY$,,AUTO
         0 000033   000057 710000 0                  TRA     s:3216

     2770     3202    2       ELSE DO;

     2771     3203                %GETKEY ( KEY = "SEL$EVAL.RANGE.ENDD.KEY",
     2772     3204                INDX = "SEL$BLOCK_DESC.OPTIONS.LEVEL# - 1",
     2773     3205                PTR = EVAL_ENDD_KEY$ );

   3212  0 000034   000002 474500                    LDP4    2,,PR0
         0 000035   400026 236100                    LDQ     22,,PR4
         0 000036   000021 732000                    QRS     17
         0 000037   000000 376000 1                  ANQ     0
         0 000040   300033 720106                    LXL0    27,QL,PR3
         0 000041   000002 100003                    CMPX0   2,DU
         0 000042   000052 601000 0                  TNZ     s:3212+14
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:405  

   3212  0 000043   400026 236100                    LDQ     22,,PR4
         0 000044   000021 732000                    QRS     17
         0 000045   000000 376000 1                  ANQ     0
         0 000046   300034 475506                    LDP5    28,QL,PR3
         0 000047   500002 636500                    EPPR6   2,,PR5
         0 000050   200023 456500                    STP6    EVAL_ENDD_KEY$,,AUTO
         0 000051   000057 710000 0                  TRA     s:3216

   3212  0 000052   400026 236100                    LDQ     22,,PR4
         0 000053   000021 732000                    QRS     17
         0 000054   000000 376000 1                  ANQ     0
         0 000055   300034 635506                    EPPR5   28,QL,PR3
         0 000056   200023 455500                    STP5    EVAL_ENDD_KEY$,,AUTO

     2774     3215    2         END;

     2775     3216    1       CALL VDG$COMPARE_LOCS (SEL$EVAL.RANGE.START, SEL$EVAL.RANGE.ENDD, RCCL);

   3216  0 000057   200031 634500                    EPPR4   RCCL,,AUTO
         0 000060   200034 454500                    STP4    RCCL+3,,AUTO
         0 000061   300035 635500                    EPPR5   29,,PR3
         0 000062   200033 455500                    STP5    RCCL+2,,AUTO
         0 000063   300024 636500                    EPPR6   20,,PR3
         0 000064   200032 456500                    STP6    RCCL+1,,AUTO
         0 000065   200032 630500                    EPPR0   RCCL+1,,AUTO
         0 000066   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000067   000000 701000 xent               TSX1    VDG$COMPARE_LOCS
         0 000070   000000 011000                    NOP     0

     2776     3217
     2777     3218    1   DISPLAY_SELECTED_BLOCK:
     2778     3219    2       DO WHILE %TRUE;

   3219  0 000071                       DISPLAY_SEL* null
     2779     3220
     2780     3221    2         CALL VDE$RREAD ( SEL$STREAM,
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:406  

   3221  0 000071   200003 470500                    LDP0    @SELECTION,,AUTO
         0 000072   000000 471500                    LDP1    0,,PR0
         0 000073   000002 473500                    LDP3    2,,PR0
         0 000074   200026 634500                    EPPR4   RELATIVE,,AUTO
         0 000075   200035 454500                    STP4    RCCL+4,,AUTO
         0 000076   200024 236100                    LDQ     LOCATION$,,AUTO
         0 000077   200034 756100                    STQ     RCCL+3,,AUTO
         0 000100   300003 635500                    EPPR5   3,,PR3
         0 000101   200033 455500                    STP5    RCCL+2,,AUTO
         0 000102   200032 451500                    STP1    RCCL+1,,AUTO
         0 000103   200032 630500                    EPPR0   RCCL+1,,AUTO
         0 000104   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000105   000000 701000 xent               TSX1    VDE$RREAD
         0 000106   000110 702000 0                  TSX2    s:3225
         0 000107   000111 710000 0                  TRA     s:3227

     2781     3222    2           SEL$BLOCK_DESC.RANGE,
     2782     3223    2           LOCATION$ -> VD$LOCATION,
     2783     3224    2           RELATIVE  /* relative position = forward 0 or 1 */ )
     2784     3225    3         WHENALTRETURN DO; ALTRETURN; END;

   3225  0 000110   000000 702200 xent               TSX2  ! X66_AALT

     2785     3226
     2786     3227    2         CALL VDE$RGET ( SEL$STREAM,

   3227  0 000111   200003 470500                    LDP0    @SELECTION,,AUTO
         0 000112   000000 471500                    LDP1    0,,PR0
         0 000113   000002 473500                    LDP3    2,,PR0
         0 000114   200015 634500                    EPPR4   RGET_NODE_DESC,,AUTO
         0 000115   200034 454500                    STP4    RCCL+3,,AUTO
         0 000116   300003 635500                    EPPR5   3,,PR3
         0 000117   200033 455500                    STP5    RCCL+2,,AUTO
         0 000120   200032 451500                    STP1    RCCL+1,,AUTO
         0 000121   200032 630500                    EPPR0   RCCL+1,,AUTO
         0 000122   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:407  
         0 000123   000000 701000 xent               TSX1    VDE$RGET
         0 000124   000126 702000 0                  TSX2    s:3230
         0 000125   000127 710000 0                  TRA     s:3232

     2787     3228    2           SEL$BLOCK_DESC.RANGE,
     2788     3229    2           RGET_NODE_DESC )
     2789     3230    3         WHENALTRETURN DO; ALTRETURN; END;

   3230  0 000126   000000 702200 xent               TSX2  ! X66_AALT

     2790     3231
     2791     3232    2         IF RGET_NODE_DESC.KEY = %CLEAR

   3232  0 000127   000000 106500                    CMPC    fill='000'O
         0 000130   200015 000010                    ADSC9   RGET_NODE_DESC,,AUTO     cn=0,n=8
         0 000131   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         0 000132   000223 600000 0                  TZE     s:3268

     2792     3233    2         THEN
     2793     3234    2           EXIT DISPLAY_SELECTED_BLOCK;
     2794     3235
     2795     3236              %GETKEY ( KEY = "SEL$STREAM.CURRENT.KEY",
     2796     3237              INDX = "SEL$BLOCK_DESC.OPTIONS.LEVEL# - 1",
     2797     3238              PTR = STREAM_CURRENT_KEY$ );

   3245  0 000133   200003 470500                    LDP0    @SELECTION,,AUTO
         0 000134   000002 471500                    LDP1    2,,PR0
         0 000135   000000 473500                    LDP3    0,,PR0
         0 000136   100026 236100                    LDQ     22,,PR1
         0 000137   000021 732000                    QRS     17
         0 000140   000000 376000 1                  ANQ     0
         0 000141   300004 720106                    LXL0    4,QL,PR3
         0 000142   000002 100003                    CMPX0   2,DU
         0 000143   000153 601000 0                  TNZ     s:3245+16

   3245  0 000144   100026 236100                    LDQ     22,,PR1
         0 000145   000021 732000                    QRS     17
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:408  
         0 000146   000000 376000 1                  ANQ     0
         0 000147   300005 474506                    LDP4    5,QL,PR3
         0 000150   400002 635500                    EPPR5   2,,PR4
         0 000151   200030 455500                    STP5    STREAM_CURRENT_KEY$,,AUTO
         0 000152   000160 710000 0                  TRA     s:3248

   3245  0 000153   100026 236100                    LDQ     22,,PR1
         0 000154   000021 732000                    QRS     17
         0 000155   000000 376000 1                  ANQ     0
         0 000156   300005 634506                    EPPR4   5,QL,PR3
         0 000157   200030 454500                    STP4    STREAM_CURRENT_KEY$,,AUTO

     2798     3248    2         IF EVAL_ENDD_KEY$~=ADDR(NIL) THEN

   3248  0 000160   200023 236100                    LDQ     EVAL_ENDD_KEY$,,AUTO
         0 000161   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000162   000205 600000 0                  TZE     s:3258

     2799     3249    2           IF STREAM_CURRENT_KEY$ -> VD$TEXTC.BYTES >

   3249  0 000163   200030 474500                    LDP4    STREAM_CURRENT_KEY$,,AUTO
         0 000164   400000 236100                    LDQ     0,,PR4
         0 000165   000033 772000                    QRL     27
         0 000166   200023 475500                    LDP5    EVAL_ENDD_KEY$,,AUTO
         0 000167   000000 620006                    EAX0    0,QL
         0 000170   500000 236100                    LDQ     0,,PR5
         0 000171   000033 772000                    QRL     27
         0 000172   000000 621006                    EAX1    0,QL
         0 000173   040140 106540                    CMPC    fill='040'O
         0 000174   500000 200011                    ADSC9   0,,PR5                   cn=1,n=*X1
         0 000175   400000 200010                    ADSC9   0,,PR4                   cn=1,n=*X0
         0 000176   000223 602000 0                  TNC     s:3268
         0 000177   000205 601000 0                  TNZ     s:3258
         0 000200   200031 235100                    LDA     RCCL,,AUTO
         0 000201   000205 600000 0                  TZE     s:3258
         0 000202   000003 476500                    LDP6    3,,PR0
         0 000203   600045 222100                    LDX2    37,,PR6
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:409  
         0 000204   000223 600000 0                  TZE     s:3268

     2800     3250    2             EVAL_ENDD_KEY$ -> VD$TEXTC.BYTES
     2801     3251    2             OR ( STREAM_CURRENT_KEY$ -> VD$TEXTC.BYTES =
     2802     3252    2             EVAL_ENDD_KEY$ -> VD$TEXTC.BYTES
     2803     3253    2             AND RCCL ~= %RCCL_EQUAL
     2804     3254    2             AND SEL$EVAL.RANGE.ENDD.POSITION# = 0 )
     2805     3255    2           THEN
     2806     3256    2             EXIT DISPLAY_SELECTED_BLOCK;
     2807     3257
     2808     3258    2         RECORD_COUNT = RECORD_COUNT + 1;

   3258  0 000205   200025 054100                    AOS     RECORD_COUNT,,AUTO

     2809     3259
     2810     3260    2         CALL VDP$WFORMAT_RECORD ( RGET_NODE_DESC )

   3260  0 000206   200015 634500                    EPPR4   RGET_NODE_DESC,,AUTO
         0 000207   200032 454500                    STP4    RCCL+1,,AUTO
         0 000210   200032 630500                    EPPR0   RCCL+1,,AUTO
         0 000211   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000212   000000 701000 xent               TSX1    VDP$WFORMAT_RECORD
         0 000213   000215 702000 0                  TSX2    s:3261
         0 000214   000216 710000 0                  TRA     s:3263

     2811     3261    3         WHENALTRETURN DO; ALTRETURN; END;

   3261  0 000215   000000 702200 xent               TSX2  ! X66_AALT

     2812     3262
     2813     3263    2         LOCATION$ = ADDR (NIL);

   3263  0 000216   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000217   200024 756100                    STQ     LOCATION$,,AUTO

     2814     3264    2         RELATIVE = 1;

PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:410  
   3264  0 000220   000001 235007                    LDA     1,DL
         0 000221   200026 755100                    STA     RELATIVE,,AUTO

     2815     3265
     2816     3266    2       END DISPLAY_SELECTED_BLOCK;

   3266  0 000222   000071 710000 0                  TRA     DISPLAY_SELECTED_BLOCK

     2817     3267
     2818     3268    1       IF RECORD_COUNT = 0

   3268  0 000223   200025 235100                    LDA     RECORD_COUNT,,AUTO
         0 000224   000234 601000 0                  TNZ     s:3276

     2819     3269    1       THEN
     2820     3270    1   GIVE_NONE_ERROR:
     2821     3271    2         DO;

   3271  0 000225                       GIVE_NONE_E* null
     2822     3272    2           CALL VDG$WARNMSG (%E$INFO_NONE);

   3272  0 000225   000001 630400 1                  EPPR0   1
         0 000226   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000227   000000 701000 xent               TSX1    VDG$WARNMSG
         0 000230   000000 011000                    NOP     0

     2823     3273    2           CALL VDG$EREPORT_ERROR;

   3273  0 000231   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000232   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         0 000233   000000 011000                    NOP     0

     2824     3274    2         END GIVE_NONE_ERROR;

     2825     3275
     2826     3276    1       IF VD_$$MON_PRES.V# > 0

PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:411  
   3276  0 000234   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         0 000235   000242 604400 0                  TMOZ    s:3280

     2827     3277    1       THEN
     2828     3278    1         CALL VDG$MPRES_RETURN ( SELECTION );

   3278  0 000236   200003 630500                    EPPR0   @SELECTION,,AUTO
         0 000237   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000240   000000 701000 xent               TSX1    VDG$MPRES_RETURN
         0 000241   000000 011000                    NOP     0

     2829     3279
     2830     3280    1       RETURN;

   3280  0 000242   000000 702200 xent               TSX2  ! X66_ARET
     2831     3281
     2832     3282    1   END VDP$WWRITE;

PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:412  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDP$WWRITE.
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:413  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SELECTION                23-0-0/w PTR         r     1 EVAL_ENDD_KEY$
    24-0-0/w PTR         r     1 LOCATION$                 31-0-0/w SBIN        r     1 RCCL
    25-0-0/w SBIN        r     1 RECORD_COUNT              26-0-0/w SBIN        r     1 RELATIVE
    15-0-0/w STRC(216)   r     1 RGET_NODE_DESC             4-0-0/w STRC(324)   r     1 RREAD_LOCATION
    *0-0-0/w STRC(144)   r     1 SELECTION                 30-0-0/w PTR         r     1 STREAM_CURRENT_KEY$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 VD_$$MON_PRES              0-0-0/w STRC(144)   r     1 VD_$SCREEN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(936)   r     1 SEL$BLOCK_DESC             0-0-0/w STRC(2124)  r     1 SEL$EVAL
     0-0-0/w STRC(864)   r     1 SEL$STREAM                 0-0-0/w STRC(324)   r     1 VD$LOCATION
     0-0-0/w ASTR(9)     r     1 VD$TEXTC                   0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE


   Procedure VDP$WWRITE requires 163 words for executable code.
   Procedure VDP$WWRITE requires 30 words of local(AUTO) storage.

    No errors detected in file VDP$WINDOW_I_O.:VDA5TSI    .
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:414  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:415  
          MINI XREF LISTING

DISPLAY_SELECTED_BLOCK
      3219**LABEL    3234--EXIT     3256--EXIT
EVAL_ENDD_KEY$
      3168**DCL      3201<<ASSIGN   3212<<ASSIGN   3212<<ASSIGN   3248>>IF       3249>>IF       3249>>IF
      3249>>IF       3249>>IF
LOCATION$
      3169**DCL      3196<<ASSIGN   3221>>CALL     3263<<ASSIGN
RCCL
      3174**DCL      3216<>CALL     3249>>IF
RECORD_COUNT
      3170**DCL      3198<<ASSIGN   3258<<ASSIGN   3258>>ASSIGN   3268>>IF
RELATIVE
      3171**DCL      3197<<ASSIGN   3221<>CALL     3264<<ASSIGN
RGET_NODE_DESC
      3133**DCL      3227<>CALL     3260<>CALL
RGET_NODE_DESC.KEY
      3147**DCL      3232>>IF
RREAD_LOCATION
      3104**DCL      3195<<ASSIGN   3196--ASSIGN
SEL$BLOCK_DESC.OPTIONS.LEVEL#
      2613**DCL      3212>>IF       3212>>ASSIGN   3212>>ASSIGN   3245>>IF       3245>>ASSIGN   3245>>ASSIGN
SEL$BLOCK_DESC.RANGE
      2542**DCL      3221<>CALL     3227<>CALL
SEL$EVAL.RANGE.ENDD
      2785**DCL      3216<>CALL
SEL$EVAL.RANGE.ENDD.EOF
      2801**DCL      3200>>IF
SEL$EVAL.RANGE.ENDD.KEY.REP#
      2799**DCL      3212>>IF
SEL$EVAL.RANGE.ENDD.KEY.V$
      2799**DCL      3212>>ASSIGN   3212--ASSIGN
SEL$EVAL.RANGE.ENDD.POSITION#
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:416  
      2801**DCL      3249>>IF
SEL$EVAL.RANGE.START
      2757**DCL      3195>>ASSIGN   3216<>CALL
SEL$STREAM
      2912**DCL      3221<>CALL     3227<>CALL
SEL$STREAM.CURRENT.KEY.REP#
      2977**DCL      3245>>IF
SEL$STREAM.CURRENT.KEY.V$
      2977**DCL      3245>>ASSIGN   3245--ASSIGN
SELECTION
      2477**DCL         9--PROC     3193<>CALL     3278<>CALL
SELECTION.EDIT_BLOCK$
      2481**DCL      2492--IMP-PTR  3212>>IF       3212>>ASSIGN   3212>>ASSIGN   3221>>CALL     3227>>CALL
      3245>>IF       3245>>ASSIGN   3245>>ASSIGN
SELECTION.EVAL$
      2481**DCL      2639--IMP-PTR  3195>>ASSIGN   3200>>IF       3212>>IF       3212>>ASSIGN   3212>>ASSIGN
      3216>>CALL     3216>>CALL     3249>>IF
SELECTION.STREAM$
      2481**DCL      2912--IMP-PTR  3221>>CALL     3227>>CALL     3245>>IF       3245>>ASSIGN   3245>>ASSIGN
STREAM_CURRENT_KEY$
      3173**DCL      3245<<ASSIGN   3245<<ASSIGN   3249>>IF       3249>>IF       3249>>IF       3249>>IF
VD$LOCATION
      2884**DCL      3221<>CALL
VD$TEXTC.BYTES
      3028**DCL      3249>>IF       3249>>IF       3249>>IF       3249>>IF
VD$TEXTC.LENGTH#
      3026**DCL      3028--IMP-SIZ  3249>>IF       3249>>IF       3249>>IF       3249>>IF
VD$TEXTC_REMOTE.LENGTH#
      3087**DCL      3089--IMP-SIZ  3212--ASSIGN   3245--ASSIGN
VDE$RGET
      3176**DCL-ENT  3227--CALL
VDE$RREAD
      3177**DCL-ENT  3221--CALL
VDG$COMPARE_LOCS
      3183**DCL-ENT  3216--CALL
VDG$EREPORT_ERROR
PL6.E3A0      #006=VDP$WWRITE File=VDP$WINDOW_I_O.:VDA5TSI                       FRI 07/04/97 11:41 Page:417  
      3179**DCL-ENT  3273--CALL
VDG$MPRES_RETURN
      3180**DCL-ENT  3278--CALL
VDG$MPRES_WWRITE
      3181**DCL-ENT  3193--CALL
VDG$WARNMSG
      3182**DCL-ENT  3272--CALL
VDP$WFORMAT_RECORD
      3185**DCL-ENT  3260--CALL
VD_$$MON_PRES.V#
      2419**DCL      3191>>IF       3276>>IF
VD_$SCREEN.V#
      2465**DCL      3187>>IF
