VERSION A06

PL6.E3A0      #001=ALLOCATE_PAGE File=LR_ALLOCATE.:Z8A6TSI                       SAT 08/09/97 09:25 Page:1    
        1        1        /*M* ALLOCATE_PAGE -- Free page allocation */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9        /*==============*/
       10       10          ALLOCATE_PAGE: PROC(FREEMEM$, FREEMEM);
       11       11        /*==============*/
       12       12
       13       13
       14       14        %EQU PAGE_SIZE = 1024;
       15       15
       16       16
       17       17    1        DCL FREEMEM$ PTR;
       18       18    1        DCL FREEMEM  SBIN WORD;
       19       19    1        DCL VS_BLOCK SBIN WORD  STATIC INIT(0);
       20       20    1        DCL VS_INDEX SBIN WORD  STATIC INIT(0);
       21       21    1        DCL VS_OFFSET SBIN WORD;
       22       22    1        DCL VS_PTR$(0:15) PTR   STATIC INIT(ADDR(NIL)*15);
       23       23    1        DCL I             SBIN WORD ;
       24       24    1        DCL GET_VIRTUAL_SPACE        ENTRY(1) ;
       25       25    1        DCL GET_VIRTUAL_SPACE2       ENTRY(1);
       26       26    1        DCL PAGE(0:%(PAGE_SIZE -1)) BIT(36) UNAL;
       27       27
       28       28    1        DCL VIRTUAL_PAGES SBIN WORD EXT INIT(0);
       29       29    1        DCL FREE_SPACE$       PTR STATIC INIT(ADDR(NIL));
       30       30
       31       31
       32       32    1        IF FREE_SPACE$ = ADDR(NIL) THEN
       33       33    2          DO;
       34       34    2            CALL GET_VIRTUAL_SPACE(VS_PTR$);
       35       35    2          END;
       36       36
       37       37    1          IF VS_BLOCK > 255 THEN
PL6.E3A0      #001=ALLOCATE_PAGE File=LR_ALLOCATE.:Z8A6TSI                       SAT 08/09/97 09:25 Page:2    
       38       38    2            DO;
       39       39    2              VS_BLOCK = 0;
       40       40    2              VS_INDEX = VS_INDEX + 1;
       41       41    2              FREEMEM$ = ADDR(NIL);
       42       42    2              FREEMEM = 0;
       43       43    2              IF VS_INDEX = 8 THEN
       44       44    2                CALL GET_VIRTUAL_SPACE2(VS_PTR$);
       45       45    2            END;
       46       46
       47       47    1          VS_OFFSET = VS_BLOCK * %PAGE_SIZE;
       48       48    1          FREE_SPACE$ = PINCRW(VS_PTR$(VS_INDEX), VS_OFFSET);
       49       49
       50       50    1          IF FREEMEM$ = ADDR(NIL) THEN
       51       51    1            FREEMEM$ = FREE_SPACE$;
       52       52
       53       53    1          VS_BLOCK = VS_BLOCK + 1;
       54       54    1          VIRTUAL_PAGES = VIRTUAL_PAGES + 1;
       55       55
       56       56    1     END ALLOCATE_PAGE;
       57       57        %EOD;

PL6.E3A0      #001=ALLOCATE_PAGE File=LR_ALLOCATE.:Z8A6TSI                       SAT 08/09/97 09:25 Page:3    
      No diagnostics issued in procedure ALLOCATE_PAGE.

   Procedure ALLOCATE_PAGE requires 42 words for executable code.
   Procedure ALLOCATE_PAGE requires 1032 words of local(AUTO) storage.

PL6.E3A0      #001=ALLOCATE_PAGE File=LR_ALLOCATE.:Z8A6TSI                       SAT 08/09/97 09:25 Page:4    

 Object Unit name= ALLOCATE_PAGE                              File name= LR_ALLOCATE.:Z8A6TOU
 UTS= AUG 09 '97 09:25:47.68 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    19     23  ALLOCATE_PAGE
    1  LblCom even  none     1      1  VIRTUAL_PAGES
    2   Proc  even  none    42     52  ALLOCATE_PAGE
    3  RoData even  none     3      3  ALLOCATE_PAGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  ALLOCATE_PAGE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 GET_VIRTUAL_SPACE
         yes           Std       1 GET_VIRTUAL_SPACE2
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=ALLOCATE_PAGE File=LR_ALLOCATE.:Z8A6TSI                       SAT 08/09/97 09:25 Page:5    


        1        1        /*M* ALLOCATE_PAGE -- Free page allocation */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9        /*==============*/
       10       10          ALLOCATE_PAGE: PROC(FREEMEM$, FREEMEM);

     10  2 000000   000000 700200 xent  ALLOCATE_PA* TSX0  ! X66_AUTO_2
         2 000001   002010 000002                    ZERO    1032,2

       11       11        /*==============*/
       12       12
       13       13
       14       14        %EQU PAGE_SIZE = 1024;
       15       15
       16       16
       17       17    1        DCL FREEMEM$ PTR;
       18       18    1        DCL FREEMEM  SBIN WORD;
       19       19    1        DCL VS_BLOCK SBIN WORD  STATIC INIT(0);
       20       20    1        DCL VS_INDEX SBIN WORD  STATIC INIT(0);
       21       21    1        DCL VS_OFFSET SBIN WORD;
       22       22    1        DCL VS_PTR$(0:15) PTR   STATIC INIT(ADDR(NIL)*15);
       23       23    1        DCL I             SBIN WORD ;
       24       24    1        DCL GET_VIRTUAL_SPACE        ENTRY(1) ;
       25       25    1        DCL GET_VIRTUAL_SPACE2       ENTRY(1);
       26       26    1        DCL PAGE(0:%(PAGE_SIZE -1)) BIT(36) UNAL;
       27       27
       28       28    1        DCL VIRTUAL_PAGES SBIN WORD EXT INIT(0);
       29       29    1        DCL FREE_SPACE$       PTR STATIC INIT(ADDR(NIL));
       30       30
       31       31
       32       32    1        IF FREE_SPACE$ = ADDR(NIL) THEN
PL6.E3A0      #001=ALLOCATE_PAGE File=LR_ALLOCATE.:Z8A6TSI                       SAT 08/09/97 09:25 Page:6    

     32  2 000002   000022 236000 0                  LDQ     FREE_SPACE$
         2 000003   000000 116000 3                  CMPQ    0
         2 000004   000011 601000 2                  TNZ     s:37

       33       33    2          DO;

       34       34    2            CALL GET_VIRTUAL_SPACE(VS_PTR$);

     34  2 000005   000002 630400 3                  EPPR0   2
         2 000006   000001 631400 3                  EPPR1   1
         2 000007   000000 701000 xent               TSX1    GET_VIRTUAL_SPACE
         2 000010   000000 011000                    NOP     0

       35       35    2          END;

       36       36
       37       37    1          IF VS_BLOCK > 255 THEN

     37  2 000011   000000 235000 0                  LDA     VS_BLOCK
         2 000012   000377 115007                    CMPA    255,DL
         2 000013   000032 604400 2                  TMOZ    s:47

       38       38    2            DO;

       39       39    2              VS_BLOCK = 0;

     39  2 000014   000000 450000 0                  STZ     VS_BLOCK

       40       40    2              VS_INDEX = VS_INDEX + 1;

     40  2 000015   000001 054000 0                  AOS     VS_INDEX

       41       41    2              FREEMEM$ = ADDR(NIL);

     41  2 000016   000000 236000 3                  LDQ     0
         2 000017   200003 470500                    LDP0    @FREEMEM$,,AUTO
PL6.E3A0      #001=ALLOCATE_PAGE File=LR_ALLOCATE.:Z8A6TSI                       SAT 08/09/97 09:25 Page:7    
         2 000020   000000 756100                    STQ     0,,PR0

       42       42    2              FREEMEM = 0;

     42  2 000021   200004 471500                    LDP1    @FREEMEM,,AUTO
         2 000022   100000 450100                    STZ     0,,PR1

       43       43    2              IF VS_INDEX = 8 THEN

     43  2 000023   000001 235000 0                  LDA     VS_INDEX
         2 000024   000010 115007                    CMPA    8,DL
         2 000025   000032 601000 2                  TNZ     s:47

       44       44    2                CALL GET_VIRTUAL_SPACE2(VS_PTR$);

     44  2 000026   000002 630400 3                  EPPR0   2
         2 000027   000001 631400 3                  EPPR1   1
         2 000030   000000 701000 xent               TSX1    GET_VIRTUAL_SPACE2
         2 000031   000000 011000                    NOP     0

       45       45    2            END;

       46       46
       47       47    1          VS_OFFSET = VS_BLOCK * %PAGE_SIZE;

     47  2 000032   000000 235000 0                  LDA     VS_BLOCK
         2 000033   000012 735000                    ALS     10
         2 000034   200005 755100                    STA     VS_OFFSET,,AUTO

       48       48    1          FREE_SPACE$ = PINCRW(VS_PTR$(VS_INDEX), VS_OFFSET);

     48  2 000035   000001 720000 0                  LXL0    VS_INDEX
         2 000036   000002 470410 0                  LDP0    VS_PTR$,X0
         2 000037   000000 631505                    EPPR1   0,AL,PR0
         2 000040   000022 451400 0                  STP1    FREE_SPACE$

       49       49
PL6.E3A0      #001=ALLOCATE_PAGE File=LR_ALLOCATE.:Z8A6TSI                       SAT 08/09/97 09:25 Page:8    
       50       50    1          IF FREEMEM$ = ADDR(NIL) THEN

     50  2 000041   200003 473500                    LDP3    @FREEMEM$,,AUTO
         2 000042   300000 236100                    LDQ     0,,PR3
         2 000043   000000 116000 3                  CMPQ    0
         2 000044   000047 601000 2                  TNZ     s:53

       51       51    1            FREEMEM$ = FREE_SPACE$;

     51  2 000045   000022 236000 0                  LDQ     FREE_SPACE$
         2 000046   300000 756100                    STQ     0,,PR3

       52       52
       53       53    1          VS_BLOCK = VS_BLOCK + 1;

     53  2 000047   000000 054000 0                  AOS     VS_BLOCK

       54       54    1          VIRTUAL_PAGES = VIRTUAL_PAGES + 1;

     54  2 000050   000000 054000 1                  AOS     VIRTUAL_PAGES

       55       55
       56       56    1     END ALLOCATE_PAGE;

     56  2 000051   000000 702200 xent               TSX2  ! X66_ARET
       57       57        %EOD;

PL6.E3A0      #001=ALLOCATE_PAGE File=LR_ALLOCATE.:Z8A6TSI                       SAT 08/09/97 09:25 Page:9    
      No diagnostics issued in procedure ALLOCATE_PAGE.
PL6.E3A0      #001=ALLOCATE_PAGE File=LR_ALLOCATE.:Z8A6TSI                       SAT 08/09/97 09:25 Page:10   

 **** Variables and constants ****

  ****  Section 000  Data  ALLOCATE_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    22-0-0/w PTR         r     1 FREE_SPACE$                0-0-0/w SBIN        r     1 VS_BLOCK
     1-0-0/w SBIN        r     1 VS_INDEX                   2-0-0/w PTR         r     1 VS_PTR$(0:15)

  ****  Section 001 LblCom VIRTUAL_PAGES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 VIRTUAL_PAGES

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @FREEMEM                   3-0-0/w PTR         r     1 @FREEMEM$
    *0-0-0/w SBIN        r     1 FREEMEM                   *0-0-0/w PTR         r     1 FREEMEM$
     6-0-0/w SBIN              1 I                          7-0-0/b BIT               1 PAGE(0:1023)
     5-0-0/w SBIN        r     1 VS_OFFSET


   Procedure ALLOCATE_PAGE requires 42 words for executable code.
   Procedure ALLOCATE_PAGE requires 1032 words of local(AUTO) storage.

PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:11   
       58        1        /*T***********************************************************/
       59        2        /*T*                                                         */
       60        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       61        4        /*T*                                                         */
       62        5        /*T***********************************************************/
       63        6
       64        7        /*M* GET_VIRTUAL_SPACE -- Get free virtual space */
       65        8
       66        9         /*======================*/
       67       10           GET_VIRTUAL_SPACE: PROC (VS_PTR$);
       68       11         /*======================*/
       69       12
       70       13
       71       14        %EQU MIN_BACKUP_PAGES = 60;
       72       15        %EQU AUTO_STORAGE_PAGES = 12;
       73       16        %EQU F_SEQ_IO_PAGES = 4;
       74       17        %EQU #256K = BITBIN('1000000'O);
       75       18
       76       19        %INCLUDE Z8A_SYS_FILE;
       77     6294        %VLP_GDDL (FPTN = GDDL_RESULTS, STCLASS = AUTO);
       78     6308
       79     6309        %FPT_GDDL (FPTN = GDDL_FPT, STCLASS = AUTO);
       80     6322
       81     6323        %FPT_OPEN (FPTN = FPT_OPEN, STCLASS = AUTO);
       82     6432
       83     6433        %VLP_VIRTUAL (FPTN = VIRTUAL_VLP, STCLASS = AUTO);
       84     6453
       85     6454        %FPT_OPEN (FPTN = FPT_OPEN_CONST, STCLASS = CONSTANT,
       86     6455                   ORG = KEYED,
       87     6456                   ASN = FILE,
       88     6457                   DISP = SCRATCH,
       89     6458                   FUN = CREATE);
       90     6567
       91     6568        %VLP_VIRTUAL (FPTN = VIRTUAL_VLP_CONST, STCLASS = CONSTANT,
       92     6569                      INITIALIZE = YES,
       93     6570                      INITVALUE  = 0,
       94     6571                      PHYSICAL   = 10,
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:12   
       95     6572                      SEGNUM     = VS1,
       96     6573                      SEGSIZE    = 2097152);
       97     6593
       98     6594        %FPT_GDP (RESULTS = VLR_GDS, PAGES = %F_SEQ_IO_PAGES);
       99     6608        %FPT_GDS (RESULTS=VLR_GDS,FREE=YES,SEGSIZE="%(1024*F_SEQ_IO_PAGES)");
      100     6624        %VLR_GDS (LOGSIZE=%#256K,REALSIZE=10240);
      101     6652    1   DCL FREE$     PTR;
      102     6653    1   DCL NEXT$     PTR;
      103     6654
      104     6655    1   DCL 1 VECT             DALIGNED,
      105     6656    1         2  VECTOR_       BIT(72)  UNAL,
      106     6657    1         2  INFO   REDEF VECTOR_ UNAL,
      107     6658    1           3 BOUND_       UBIN (18)  UNAL,
      108     6659    1           3 *            BIT  (54)  UNAL;
      109     6660
      110     6661        %FPT_FDS (FPTN = FPT_FDS, STCLASS = AUTO);
      111     6676
      112     6677
      113     6678    1   DCL BACKUP_PAGES       SBIN WORD STATIC;
      114     6679    1   DCL OBUF               CHAR (120)  EXT;
      115     6680    1   DCL OFFSET             SBIN WORD;
      116     6681    1   DCL I                  SBIN WORD;
      117     6682    1   DCL SIZE               SBIN WORD;
      118     6683    1   DCL M$VIRTUAL1         DCB;
      119     6684    1   DCL M$VIRTUAL2         DCB;
      120     6685    1   DCL M$VIRTUAL3         DCB;
      121     6686    1   DCL VS_PTR_INDEX       SBIN WORD STATIC INIT (-8);
      122     6687    1   DCL VS_PTR$ (0:15)      PTR;
      123     6688    1   DCL Z9AS$SHRINK_PTR       ENTRY (4);
      124     6689    1   DCL DIAG  ENTRY(6);
      125     6690
      126     6691         /* Get real memory size availabe to backup the virtual space */
      127     6692         /* if it is too smmall, issue an error msg and abort         */
      128     6693
      129     6694    1      GDDL_FPT.RESULTS_ = VECTOR (GDDL_RESULTS);
      130     6695
      131     6696    1      CALL M$GDDL (GDDL_FPT) ALTRET (BAD_ERR);
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:13   
      132     6697
      133     6698    1      BACKUP_PAGES = GDDL_RESULTS.AVAIL_PGS# - %AUTO_STORAGE_PAGES -
      134     6699    1                                               %F_SEQ_IO_PAGES ;
      135     6700
      136     6701    1      IF BACKUP_PAGES <= %MIN_BACKUP_PAGES THEN
      137     6702    2        DO;
      138     6703
      139     6704    2          CALL DIAG(15,'ERROR=>Needs more real memory to back up virtual space');
      140     6705    2          CALL M$ERR;
      141     6706    2          RETURN;
      142     6707    2        END;
      143     6708    1      ELSE    /* This is to reserve some pages for Virtual_Space2 */
      144     6709    1        IF BACKUP_PAGES > 600   THEN
      145     6710    1          BACKUP_PAGES = BACKUP_PAGES - 60;
      146     6711    1        ELSE
      147     6712    1          IF BACKUP_PAGES > 300 THEN
      148     6713    1            BACKUP_PAGES = BACKUP_PAGES - 30;
      149     6714    1          ELSE
      150     6715    1              BACKUP_PAGES = BACKUP_PAGES - 12;
      151     6716
      152     6717         /*  Allocate and open the virtual space */
      153     6718
      154     6719    1      FPT_OPEN = FPT_OPEN_CONST;
      155     6720    1      FPT_OPEN.V.DCB# = DCBNUM (M$VIRTUAL1);
      156     6721    1      FPT_OPEN.V_ = VECTOR (FPT_OPEN.V);
      157     6722    1      FPT_OPEN.VIRTUAL_ = VECTOR (VIRTUAL_VLP);
      158     6723    1      VIRTUAL_VLP = VIRTUAL_VLP_CONST;
      159     6724    1      VIRTUAL_VLP.PHYSICAL# = BACKUP_PAGES;
      160     6725    1      GOTO OPEN_VIRTUAL_SPACE;
      161     6726
      162     6727         /*-----------------------*/
      163     6728    1      GET_VIRTUAL_SPACE2:  ENTRY (VS_PTR$);
      164     6729         /*-----------------------*/
      165     6730
      166     6731    1       IF BACKUP_PAGES > 540 THEN
      167     6732    1         BACKUP_PAGES = 60;
      168     6733    1       ELSE
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:14   
      169     6734    1         IF BACKUP_PAGES > 270 THEN
      170     6735    1            BACKUP_PAGES = 30;
      171     6736    1         ELSE
      172     6737    1           BACKUP_PAGES = 12;
      173     6738
      174     6739
      175     6740    1      FPT_OPEN = FPT_OPEN_CONST;
      176     6741    1      FPT_OPEN.V.DCB# = DCBNUM (M$VIRTUAL2);
      177     6742    1      FPT_OPEN.V_ = VECTOR (FPT_OPEN.V);
      178     6743    1      FPT_OPEN.VIRTUAL_ = VECTOR (VIRTUAL_VLP);
      179     6744    1      VIRTUAL_VLP = VIRTUAL_VLP_CONST;
      180     6745    1      VIRTUAL_VLP.PHYSICAL# = BACKUP_PAGES;
      181     6746    1      VIRTUAL_VLP.SEGNUM# = 2;
      182     6747
      183     6748
      184     6749    1     OPEN_VIRTUAL_SPACE:
      185     6750
      186     6751
      187     6752    1      CALL M$OPEN (FPT_OPEN) ALTRET (BAD_ERR);
      188     6753
      189     6754         /* Divide this 2M super segment into eight 256K segments */
      190     6755
      191     6756    1      SIZE = 1048576; /* 4 * 256K    bytes */
      192     6757    1      VS_PTR_INDEX = VS_PTR_INDEX + 8;
      193     6758
      194     6759    2      DO I = 0 TO 7;
      195     6760
      196     6761    2        OFFSET = I * SIZE;
      197     6762
      198     6763    2        CALL Z9AS$SHRINK_PTR (VIRTUAL_VLP.PTR$,
      199     6764    2                              OFFSET,
      200     6765    2                              SIZE,
      201     6766    2                              VS_PTR$(I + VS_PTR_INDEX));
      202     6767    2      END;
      203     6768
      204     6769    1      RETURN;
      205     6770
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:15   
      206     6771    1      BAD_ERR:
      207     6772    1          CALL DIAG(15,'Error encountered on allocating virtual space');
      208     6773    1          CALL M$ERR;
      209     6774    1      RETURN;
      210     6775    1    END GET_VIRTUAL_SPACE;

PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:16   
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure GET_VIRTUAL_SPACE.

   Procedure GET_VIRTUAL_SPACE requires 134 words for executable code.
   Procedure GET_VIRTUAL_SPACE requires 98 words of local(AUTO) storage.

    No errors detected in file LR_ALLOCATE.:Z8A6TSI    .

PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:17   

 Object Unit name= GET_VIRTUAL_SPACE                          File name= LR_ALLOCATE.:Z8A6TOU
 UTS= AUG 09 '97 09:26:11.52 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     96    140  GET_VIRTUAL_SPACE
    2   Data  even  none    18     22  GET_VIRTUAL_SPACE
    3  LblCom even  none    30     36  OBUF
    4   DCB   even  none     0      0  M$VIRTUAL1
    5   DCB   even  none     0      0  M$VIRTUAL2
    6   DCB   even  none     0      0  M$VIRTUAL3
    7   Proc  even  none   134    206  GET_VIRTUAL_SPACE
    8  RoData even  none    10     12  GET_VIRTUAL_SPACE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes      Std        1  GET_VIRTUAL_SPACE
     7     71                  yes      Std        1  GET_VIRTUAL_SPACE2

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       6 DIAG
         yes           Std       4 Z9AS$SHRINK_PTR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:18   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$VIRTUAL1                            M$VIRTUAL2
     M$VIRTUAL3

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:19   


       58        1        /*T***********************************************************/
       59        2        /*T*                                                         */
       60        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       61        4        /*T*                                                         */
       62        5        /*T***********************************************************/
       63        6
       64        7        /*M* GET_VIRTUAL_SPACE -- Get free virtual space */
       65        8
       66        9         /*======================*/
       67       10           GET_VIRTUAL_SPACE: PROC (VS_PTR$);

     10  7 000000   000000 700200 xent  GET_VIRTUAL* TSX0  ! X66_AUTO_1
         7 000001   000142 000001                    ZERO    98,1

       68       11         /*======================*/
       69       12
       70       13
       71       14        %EQU MIN_BACKUP_PAGES = 60;
       72       15        %EQU AUTO_STORAGE_PAGES = 12;
       73       16        %EQU F_SEQ_IO_PAGES = 4;
       74       17        %EQU #256K = BITBIN('1000000'O);
       75       18
       76       19        %INCLUDE Z8A_SYS_FILE;
       77     6294        %VLP_GDDL (FPTN = GDDL_RESULTS, STCLASS = AUTO);
       78     6308
       79     6309        %FPT_GDDL (FPTN = GDDL_FPT, STCLASS = AUTO);
       80     6322
       81     6323        %FPT_OPEN (FPTN = FPT_OPEN, STCLASS = AUTO);
       82     6432
       83     6433        %VLP_VIRTUAL (FPTN = VIRTUAL_VLP, STCLASS = AUTO);
       84     6453
       85     6454        %FPT_OPEN (FPTN = FPT_OPEN_CONST, STCLASS = CONSTANT,
       86     6455                   ORG = KEYED,
       87     6456                   ASN = FILE,
       88     6457                   DISP = SCRATCH,
       89     6458                   FUN = CREATE);
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:20   
       90     6567
       91     6568        %VLP_VIRTUAL (FPTN = VIRTUAL_VLP_CONST, STCLASS = CONSTANT,
       92     6569                      INITIALIZE = YES,
       93     6570                      INITVALUE  = 0,
       94     6571                      PHYSICAL   = 10,
       95     6572                      SEGNUM     = VS1,
       96     6573                      SEGSIZE    = 2097152);
       97     6593
       98     6594        %FPT_GDP (RESULTS = VLR_GDS, PAGES = %F_SEQ_IO_PAGES);
       99     6608        %FPT_GDS (RESULTS=VLR_GDS,FREE=YES,SEGSIZE="%(1024*F_SEQ_IO_PAGES)");
      100     6624        %VLR_GDS (LOGSIZE=%#256K,REALSIZE=10240);
      101     6652    1   DCL FREE$     PTR;
      102     6653    1   DCL NEXT$     PTR;
      103     6654
      104     6655    1   DCL 1 VECT             DALIGNED,
      105     6656    1         2  VECTOR_       BIT(72)  UNAL,
      106     6657    1         2  INFO   REDEF VECTOR_ UNAL,
      107     6658    1           3 BOUND_       UBIN (18)  UNAL,
      108     6659    1           3 *            BIT  (54)  UNAL;
      109     6660
      110     6661        %FPT_FDS (FPTN = FPT_FDS, STCLASS = AUTO);
      111     6676
      112     6677
      113     6678    1   DCL BACKUP_PAGES       SBIN WORD STATIC;
      114     6679    1   DCL OBUF               CHAR (120)  EXT;
      115     6680    1   DCL OFFSET             SBIN WORD;
      116     6681    1   DCL I                  SBIN WORD;
      117     6682    1   DCL SIZE               SBIN WORD;
      118     6683    1   DCL M$VIRTUAL1         DCB;
      119     6684    1   DCL M$VIRTUAL2         DCB;
      120     6685    1   DCL M$VIRTUAL3         DCB;
      121     6686    1   DCL VS_PTR_INDEX       SBIN WORD STATIC INIT (-8);
      122     6687    1   DCL VS_PTR$ (0:15)      PTR;
      123     6688    1   DCL Z9AS$SHRINK_PTR       ENTRY (4);
      124     6689    1   DCL DIAG  ENTRY(6);
      125     6690
      126     6691         /* Get real memory size availabe to backup the virtual space */
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:21   
      127     6692         /* if it is too smmall, issue an error msg and abort         */
      128     6693
      129     6694    1      GDDL_FPT.RESULTS_ = VECTOR (GDDL_RESULTS);

   6694  7 000002   000000 235000 8                  LDA     0
         7 000003   200136 452500                    STP2    SIZE+2,,AUTO
         7 000004   200136 236100                    LDQ     SIZE+2,,AUTO
         7 000005   000004 036003                    ADLQ    4,DU
         7 000006   200010 757100                    STAQ    GDDL_FPT,,AUTO

      130     6695
      131     6696    1      CALL M$GDDL (GDDL_FPT) ALTRET (BAD_ERR);

   6696  7 000007   200010 630500                    EPPR0   GDDL_FPT,,AUTO
         7 000010   430014 713400                    CLIMB   alt,+12300
         7 000011   400000 401760                    pmme    nvectors=1
         7 000012   000177 702000 7                  TSX2    BAD_ERR

      132     6697
      133     6698    1      BACKUP_PAGES = GDDL_RESULTS.AVAIL_PGS# - %AUTO_STORAGE_PAGES -

   6698  7 000013   200006 235100                    LDA     GDDL_RESULTS+2,,AUTO
         7 000014   000020 135007                    SBLA    16,DL
         7 000015   000020 755000 2                  STA     BACKUP_PAGES

      134     6699    1                                               %F_SEQ_IO_PAGES ;
      135     6700
      136     6701    1      IF BACKUP_PAGES <= %MIN_BACKUP_PAGES THEN

   6701  7 000016   000074 115007                    CMPA    60,DL
         7 000017   000027 605400 7                  TPNZ    s:6709

      137     6702    2        DO;

      138     6703
      139     6704    2          CALL DIAG(15,'ERROR=>Needs more real memory to back up virtual space');

PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:22   
   6704  7 000020   000003 630400 8                  EPPR0   3
         7 000021   000001 631400 8                  EPPR1   1
         7 000022   000000 701000 xent               TSX1    DIAG
         7 000023   000000 011000                    NOP     0

      140     6705    2          CALL M$ERR;

   6705  7 000024   000002 713400                    CLIMB   err
         7 000025   000000 401760                    pmme    nvectors=0

      141     6706    2          RETURN;

   6706  7 000026   000000 702200 xent               TSX2  ! X66_ARET

      142     6707    2        END;
      143     6708    1      ELSE    /* This is to reserve some pages for Virtual_Space2 */
      144     6709    1        IF BACKUP_PAGES > 600   THEN

   6709  7 000027   001130 115007                    CMPA    600,DL
         7 000030   000034 604400 7                  TMOZ    s:6712

      145     6710    1          BACKUP_PAGES = BACKUP_PAGES - 60;

   6710  7 000031   000074 336007                    LCQ     60,DL
         7 000032   000020 056000 2                  ASQ     BACKUP_PAGES
         7 000033   000043 710000 7                  TRA     s:6719

      146     6711    1        ELSE
      147     6712    1          IF BACKUP_PAGES > 300 THEN

   6712  7 000034   000454 115007                    CMPA    300,DL
         7 000035   000041 604400 7                  TMOZ    s:6715

      148     6713    1            BACKUP_PAGES = BACKUP_PAGES - 30;

   6713  7 000036   000036 336007                    LCQ     30,DL
         7 000037   000020 056000 2                  ASQ     BACKUP_PAGES
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:23   
         7 000040   000043 710000 7                  TRA     s:6719

      149     6714    1          ELSE
      150     6715    1              BACKUP_PAGES = BACKUP_PAGES - 12;

   6715  7 000041   000014 336007                    LCQ     12,DL
         7 000042   000020 056000 2                  ASQ     BACKUP_PAGES

      151     6716
      152     6717         /*  Allocate and open the virtual space */
      153     6718
      154     6719    1      FPT_OPEN = FPT_OPEN_CONST;

   6719  7 000043   000100 100400                    MLR     fill='000'O
         7 000044   000000 000350 1                  ADSC9   FPT_OPEN_CONST           cn=0,n=232
         7 000045   200012 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      155     6720    1      FPT_OPEN.V.DCB# = DCBNUM (M$VIRTUAL1);

   6720  7 000046   000000 236007 xsym               LDQ     M$VIRTUAL1,DL
         7 000047   000000 620006                    EAX0    0,QL
         7 000050   200056 740100                    STX0    FPT_OPEN+36,,AUTO

      156     6721    1      FPT_OPEN.V_ = VECTOR (FPT_OPEN.V);

   6721  7 000051   000005 235000 8                  LDA     5
         7 000052   200136 452500                    STP2    SIZE+2,,AUTO
         7 000053   200136 236100                    LDQ     SIZE+2,,AUTO
         7 000054   000056 036003                    ADLQ    46,DU
         7 000055   200012 757100                    STAQ    FPT_OPEN,,AUTO

      157     6722    1      FPT_OPEN.VIRTUAL_ = VECTOR (VIRTUAL_VLP);

   6722  7 000056   000006 235000 8                  LDA     6
         7 000057   200136 452500                    STP2    SIZE+2,,AUTO
         7 000060   200136 236100                    LDQ     SIZE+2,,AUTO
         7 000061   000104 036003                    ADLQ    68,DU
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:24   
         7 000062   200016 757100                    STAQ    FPT_OPEN+4,,AUTO

      158     6723    1      VIRTUAL_VLP = VIRTUAL_VLP_CONST;

   6723  7 000063   000100 100400                    MLR     fill='000'O
         7 000064   000072 000060 1                  ADSC9   VIRTUAL_VLP_CONST        cn=0,n=48
         7 000065   200104 000060                    ADSC9   VIRTUAL_VLP,,AUTO        cn=0,n=48

      159     6724    1      VIRTUAL_VLP.PHYSICAL# = BACKUP_PAGES;

   6724  7 000066   000020 721000 2                  LXL1    BACKUP_PAGES
         7 000067   200107 741100                    STX1    VIRTUAL_VLP+3,,AUTO

      160     6725    1      GOTO OPEN_VIRTUAL_SPACE;

   6725  7 000070   000137 710000 7                  TRA     OPEN_VIRTUAL_SPACE

      161     6726
      162     6727         /*-----------------------*/
      163     6728    1      GET_VIRTUAL_SPACE2:  ENTRY (VS_PTR$);

   6728  7 000071   000000 700200 xent  GET_VIRTUAL* TSX0  ! X66_AUTO_1
         7 000072   000142 000001                    ZERO    98,1

      164     6729         /*-----------------------*/
      165     6730
      166     6731    1       IF BACKUP_PAGES > 540 THEN

   6731  7 000073   000020 235000 2                  LDA     BACKUP_PAGES
         7 000074   001034 115007                    CMPA    540,DL
         7 000075   000101 604400 7                  TMOZ    s:6734

      167     6732    1         BACKUP_PAGES = 60;

   6732  7 000076   000074 236007                    LDQ     60,DL
         7 000077   000020 756000 2                  STQ     BACKUP_PAGES
         7 000100   000110 710000 7                  TRA     s:6740
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:25   

      168     6733    1       ELSE
      169     6734    1         IF BACKUP_PAGES > 270 THEN

   6734  7 000101   000416 115007                    CMPA    270,DL
         7 000102   000106 604400 7                  TMOZ    s:6737

      170     6735    1            BACKUP_PAGES = 30;

   6735  7 000103   000036 236007                    LDQ     30,DL
         7 000104   000020 756000 2                  STQ     BACKUP_PAGES
         7 000105   000110 710000 7                  TRA     s:6740

      171     6736    1         ELSE
      172     6737    1           BACKUP_PAGES = 12;

   6737  7 000106   000014 236007                    LDQ     12,DL
         7 000107   000020 756000 2                  STQ     BACKUP_PAGES

      173     6738
      174     6739
      175     6740    1      FPT_OPEN = FPT_OPEN_CONST;

   6740  7 000110   000100 100400                    MLR     fill='000'O
         7 000111   000000 000350 1                  ADSC9   FPT_OPEN_CONST           cn=0,n=232
         7 000112   200012 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      176     6741    1      FPT_OPEN.V.DCB# = DCBNUM (M$VIRTUAL2);

   6741  7 000113   000000 236007 xsym               LDQ     M$VIRTUAL2,DL
         7 000114   000000 620006                    EAX0    0,QL
         7 000115   200056 740100                    STX0    FPT_OPEN+36,,AUTO

      177     6742    1      FPT_OPEN.V_ = VECTOR (FPT_OPEN.V);

   6742  7 000116   000005 235000 8                  LDA     5
         7 000117   200136 452500                    STP2    SIZE+2,,AUTO
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:26   
         7 000120   200136 236100                    LDQ     SIZE+2,,AUTO
         7 000121   000056 036003                    ADLQ    46,DU
         7 000122   200012 757100                    STAQ    FPT_OPEN,,AUTO

      178     6743    1      FPT_OPEN.VIRTUAL_ = VECTOR (VIRTUAL_VLP);

   6743  7 000123   000006 235000 8                  LDA     6
         7 000124   200136 452500                    STP2    SIZE+2,,AUTO
         7 000125   200136 236100                    LDQ     SIZE+2,,AUTO
         7 000126   000104 036003                    ADLQ    68,DU
         7 000127   200016 757100                    STAQ    FPT_OPEN+4,,AUTO

      179     6744    1      VIRTUAL_VLP = VIRTUAL_VLP_CONST;

   6744  7 000130   000100 100400                    MLR     fill='000'O
         7 000131   000072 000060 1                  ADSC9   VIRTUAL_VLP_CONST        cn=0,n=48
         7 000132   200104 000060                    ADSC9   VIRTUAL_VLP,,AUTO        cn=0,n=48

      180     6745    1      VIRTUAL_VLP.PHYSICAL# = BACKUP_PAGES;

   6745  7 000133   000020 721000 2                  LXL1    BACKUP_PAGES
         7 000134   200107 741100                    STX1    VIRTUAL_VLP+3,,AUTO

      181     6746    1      VIRTUAL_VLP.SEGNUM# = 2;

   6746  7 000135   000002 236007                    LDQ     2,DL
         7 000136   200104 552104                    STBQ    VIRTUAL_VLP,'04'O,AUTO

      182     6747
      183     6748
      184     6749    1     OPEN_VIRTUAL_SPACE:
      185     6750
      186     6751
      187     6752    1      CALL M$OPEN (FPT_OPEN) ALTRET (BAD_ERR);

   6752  7 000137   200012 630500       OPEN_VIRTUA* EPPR0   FPT_OPEN,,AUTO
         7 000140   450000 713400                    CLIMB   alt,open
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:27   
         7 000141   410400 401760                    pmme    nvectors=18
         7 000142   000177 702000 7                  TSX2    BAD_ERR

      188     6753
      189     6754         /* Divide this 2M super segment into eight 256K segments */
      190     6755
      191     6756    1      SIZE = 1048576; /* 4 * 256K    bytes */

   6756  7 000143   000004 235003                    LDA     4,DU
         7 000144   200134 755100                    STA     SIZE,,AUTO

      192     6757    1      VS_PTR_INDEX = VS_PTR_INDEX + 8;

   6757  7 000145   000010 236007                    LDQ     8,DL
         7 000146   000021 056000 2                  ASQ     VS_PTR_INDEX

      193     6758
      194     6759    2      DO I = 0 TO 7;

   6759  7 000147   200133 450100                    STZ     I,,AUTO

      195     6760
      196     6761    2        OFFSET = I * SIZE;

   6761  7 000150   200133 236100                    LDQ     I,,AUTO
         7 000151   200134 402100                    MPY     SIZE,,AUTO
         7 000152   200132 756100                    STQ     OFFSET,,AUTO

      197     6762
      198     6763    2        CALL Z9AS$SHRINK_PTR (VIRTUAL_VLP.PTR$,

   6763  7 000153   200133 236100                    LDQ     I,,AUTO
         7 000154   000021 036000 2                  ADLQ    VS_PTR_INDEX
         7 000155   000022 736000                    QLS     18
         7 000156   200003 036100                    ADLQ    @VS_PTR$,,AUTO
         7 000157   200141 756100                    STQ     SIZE+5,,AUTO
         7 000160   200134 630500                    EPPR0   SIZE,,AUTO
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:28   
         7 000161   200140 450500                    STP0    SIZE+4,,AUTO
         7 000162   200132 631500                    EPPR1   OFFSET,,AUTO
         7 000163   200137 451500                    STP1    SIZE+3,,AUTO
         7 000164   200110 633500                    EPPR3   VIRTUAL_VLP+4,,AUTO
         7 000165   200136 453500                    STP3    SIZE+2,,AUTO
         7 000166   200136 630500                    EPPR0   SIZE+2,,AUTO
         7 000167   000007 631400 8                  EPPR1   7
         7 000170   000000 701000 xent               TSX1    Z9AS$SHRINK_PTR
         7 000171   000000 011000                    NOP     0

      199     6764    2                              OFFSET,
      200     6765    2                              SIZE,
      201     6766    2                              VS_PTR$(I + VS_PTR_INDEX));
      202     6767    2      END;

   6767  7 000172   200133 054100                    AOS     I,,AUTO
         7 000173   200133 235100                    LDA     I,,AUTO
         7 000174   000007 115007                    CMPA    7,DL
         7 000175   000150 604400 7                  TMOZ    s:6761

      203     6768
      204     6769    1      RETURN;

   6769  7 000176   000000 702200 xent               TSX2  ! X66_ARET

      205     6770
      206     6771    1      BAD_ERR:
      207     6772    1          CALL DIAG(15,'Error encountered on allocating virtual space');

   6772  7 000177   000010 630400 8     BAD_ERR      EPPR0   8
         7 000200   000001 631400 8                  EPPR1   1
         7 000201   000000 701000 xent               TSX1    DIAG
         7 000202   000000 011000                    NOP     0

      208     6773    1          CALL M$ERR;

   6773  7 000203   000002 713400                    CLIMB   err
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:29   
         7 000204   000000 401760                    pmme    nvectors=0

      209     6774    1      RETURN;

   6774  7 000205   000000 702200 xent               TSX2  ! X66_ARET
      210     6775    1    END GET_VIRTUAL_SPACE;

PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:30   
--  Include file information  --

   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure GET_VIRTUAL_SPACE.
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:31   

 **** Variables and constants ****

  ****  Section 001 RoData GET_VIRTUAL_SPACE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2088)  r     1 FPT_OPEN_CONST            72-0-0/w STRC(432)   r     1 VIRTUAL_VLP_CONST

  ****  Section 002  Data  GET_VIRTUAL_SPACE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    20-0-0/w SBIN        r     1 BACKUP_PAGES               0-0-0/d STRC(216)   r     1 FPT_GDP
     6-0-0/d STRC(216)   r     1 FPT_GDS                   14-0-0/d STRC(144)   r     1 VLR_GDS
    21-0-0/w SBIN        r     1 VS_PTR_INDEX

  ****  Section 003 LblCom OBUF

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(120)         1 OBUF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @VS_PTR$                 124-0-0/d STRC(216)         1 FPT_FDS
    12-0-0/d STRC(2088)  r     1 FPT_OPEN                 120-0-0/w PTR               1 FREE$
    10-0-0/d STRC(72)    r     1 GDDL_FPT                   4-0-0/d STRC(108)   r     1 GDDL_RESULTS
   133-0-0/w SBIN        r     1 I                        121-0-0/w PTR               1 NEXT$
   132-0-0/w SBIN        r     1 OFFSET                   134-0-0/w SBIN        r     1 SIZE
   122-0-0/d STRC(72)          1 VECT                     104-0-0/w STRC(432)   r     1 VIRTUAL_VLP
    *0-0-0/w PTR         r     1 VS_PTR$(0:15)
PL6.E3A0      #002=GET_VIRTUAL_SPACE File=LR_ALLOCATE.:Z8A6TSI                   SAT 08/09/97 09:26 Page:32   

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$UC                       0-0-0N  NULL        r     1 M$VIRTUAL1
     0-0-0N  NULL        r     1 M$VIRTUAL2                 0-0-0N  NULL        r     1 M$VIRTUAL3


   Procedure GET_VIRTUAL_SPACE requires 134 words for executable code.
   Procedure GET_VIRTUAL_SPACE requires 98 words of local(AUTO) storage.

    No errors detected in file LR_ALLOCATE.:Z8A6TSI    .
