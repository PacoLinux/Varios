

14:12 JUL 28 '97 B_MAGIC_C.:E05SI                                          1    
    1      /*M* B_MAJIC_C MACROs to define the MAGIC tables */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* DMC,PLM=4,IND=0,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=2 */
    8
    9
   10
   11
   12
   13      /*D* NAME:         B_MPT
   14           PURPOSE:      To generate the magic pointer table.
   15           DESCRIPTION:  The magic segment is a collection of descriptors
   16                         which provide addressing to data connected with
   17                         PMMEs.  These descriptors are
   18                         created by UDN$MAGIC and are saved across monitor
   19                         PMMEs, and REG.
   20
   21                         This macro changes with MAGICPT in B_BMACROS_C
   22      */
   23      %MACRO B_MPT (FPTN=B_MPT,STCLASS=BASED,LVL=1,LAST=";");
   24
   25       %LSET LISTDIR='0'B;
   26       %LSET LISTEXP='1'B;
   27       %LSET LISTCOM='0'B;
   28       %LSET LISTSUB='1'B;
   29       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   30       %IF (SUBSTR(STR,0,6)='STATIC') OR
   31       (SUBSTR(STR,0,8)='CONSTANT') OR
   32       (SUBSTR(STR,0,3)='EXT');
   33       %LSET INIT=CHARTEXT('INIT');
   34       %ELSE;
   35       %LSET INIT=CHARTEXT('/*');
   36       %LSET MAGICSSSID='0'B;
   37       %LSET MAGICLSSID='0'B;
14:12 JUL 28 '97 B_MAGIC_C.:E05SI                                          2    
   38       %LSET MAGICASSID='0'B;
   39       %LSET MAGICPSSID='0'B;
   40       %LSET MAGICTCBSID='0'B;
   41       %LSET MAGICECCBSID='0'B;
   42       %LSET LSSID='0'B;
   43       %LSET LSREADSID='0'B;
   44       %ENDIF;
   45
   46       %IF LVL=1;
   47      DCL 1 FPTN STCLASS DALIGNED,
   48       %ELSE;
   49          %LVL FPTN DALIGNED,
   50       %ENDIF;
   51          %(LVL+1) SS ALIGNED,
   52          %(LVL+2) * UBIN(24) UNAL %INIT(0)%CHARTEXT('/**/'),
   53          %(LVL+2) * BIT(12) UNAL %INIT(%MAGICSSSID)%CHARTEXT('/**/'),
   54          %(LVL+1) SS$ REDEF SS PTR,
   55                              /* SS$      : magic safe-store pointer */
   56          %(LVL+1) LS ALIGNED,
   57          %(LVL+2) * UBIN(24) UNAL %INIT(0)%CHARTEXT('/**/'),
   58          %(LVL+2) * BIT(12) UNAL %INIT(%MAGICLSSID)%CHARTEXT('/**/'),
   59          %(LVL+1) LS$ REDEF LS PTR,
   60                              /* LS$      : magic linkage segment pointer */
   61          %(LVL+1) AS ALIGNED,
   62          %(LVL+2) * UBIN(24) UNAL %INIT(0)%CHARTEXT('/**/'),
   63          %(LVL+2) * BIT(12) UNAL %INIT(%MAGICASSID)%CHARTEXT('/**/'),
   64          %(LVL+1) AS$ REDEF AS PTR,
   65                              /* AS$      : magic argument segment pointer */
   66          %(LVL+1) PS ALIGNED,
   67          %(LVL+2) * UBIN(24) UNAL %INIT(0)%CHARTEXT('/**/'),
   68          %(LVL+2) * BIT(12) UNAL %INIT(%MAGICPSSID)%CHARTEXT('/**/'),
   69          %(LVL+1) PS$ REDEF PS PTR,
   70                              /* PS$      : magic parameter segment pointer */
   71          %(LVL+1) TCB ALIGNED,
   72          %(LVL+2) * UBIN(24) UNAL %INIT(0)%CHARTEXT('/**/'),
   73          %(LVL+2) * BIT(12) UNAL %INIT(%MAGICTCBSID)%CHARTEXT('/**/'),
   74          %(LVL+1) TCB$ REDEF TCB PTR,
14:12 JUL 28 '97 B_MAGIC_C.:E05SI                                          3    
   75                              /* TCB$     : magic TCB pointer */
   76          %(LVL+1) ECCB ALIGNED,
   77          %(LVL+2) * UBIN(24) UNAL %INIT(0)%CHARTEXT('/**/'),
   78          %(LVL+2) * BIT(12) UNAL %INIT(%MAGICECCBSID)%CHARTEXT('/**/'),
   79          %(LVL+1) ECCB$ REDEF ECCB PTR,
   80                              /* ECCB$    : magic ECCB pointer */
   81          %(LVL+1) SSDESC ALIGNED,
   82          %(LVL+2) * UBIN HALF UNAL %INIT(%((BITBIN(MAGICSSSID)-3072)*2))%CHARTEXT('/**/'),
   83          %(LVL+2) * UBIN(6) UNAL %INIT(0)%CHARTEXT('/**/'),
   84          %(LVL+2) * BIT(12) UNAL %INIT(%LSSID)%CHARTEXT('/**/'),
   85          %(LVL+1) SSDESC$ REDEF SSDESC PTR,
   86                              /* SSDESC$  : pointer to magic SS descriptor. */
   87          %(LVL+1) LSDESC ALIGNED,
   88          %(LVL+2) * UBIN HALF UNAL %INIT(%((BITBIN(MAGICLSSID)-3072)*2))%CHARTEXT('/**/'),
   89          %(LVL+2) * UBIN(6) UNAL %INIT(0)%CHARTEXT('/**/'),
   90          %(LVL+2) * BIT(12) UNAL %INIT(%LSSID)%CHARTEXT('/**/'),
   91          %(LVL+1) LSDESC$ REDEF LSDESC PTR,
   92                              /* LSDESC$  : pointer to magic LS descriptor. */
   93          %(LVL+1) ASDESC ALIGNED,
   94          %(LVL+2) * UBIN HALF UNAL %INIT(%((BITBIN(MAGICASSID)-3072)*2))%CHARTEXT('/**/'),
   95          %(LVL+2) * UBIN(6) UNAL %INIT(0)%CHARTEXT('/**/'),
   96          %(LVL+2) * BIT(12) UNAL %INIT(%LSREADSID)%CHARTEXT('/**/'),
   97          %(LVL+1) ASDESC$ REDEF ASDESC PTR,
   98                              /* ASDESC$  : pointer to magic AS descriptor. */
   99          %(LVL+1) PSDESC ALIGNED,
  100          %(LVL+2) * UBIN HALF UNAL %INIT(%((BITBIN(MAGICPSSID)-3072)*2))%CHARTEXT('/**/'),
  101          %(LVL+2) * UBIN(6) UNAL %INIT(0)%CHARTEXT('/**/'),
  102          %(LVL+2) * BIT(12) UNAL %INIT(%LSREADSID)%CHARTEXT('/**/'),
  103          %(LVL+1) PSDESC$ REDEF PSDESC PTR,
  104                              /* PSDESC$  : pointer to magic PS descriptor. */
  105          %(LVL+1) TCBDESC ALIGNED,
  106          %(LVL+2) * UBIN HALF UNAL %INIT(%((BITBIN(MAGICTCBSID)-3072)*2))%CHARTEXT('/**/'),
  107          %(LVL+2) * UBIN(6) UNAL %INIT(0)%CHARTEXT('/**/'),
  108          %(LVL+2) * BIT(12) UNAL %INIT(%LSSID)%CHARTEXT('/**/'),
  109          %(LVL+1) TCBDESC$ REDEF TCBDESC PTR,
  110                              /* TCBDESC$ : pointer to magic TCB descriptor. */
  111          %(LVL+1) ECCBDESC ALIGNED,
14:12 JUL 28 '97 B_MAGIC_C.:E05SI                                          4    
  112          %(LVL+2) * UBIN HALF UNAL %INIT(%((BITBIN(MAGICECCBSID)-3072)*2))%CHARTEXT('/**/'),
  113          %(LVL+2) * UBIN(6) UNAL %INIT(0)%CHARTEXT('/**/'),
  114          %(LVL+2) * BIT(12) UNAL %INIT(%LSSID)%CHARTEXT('/**/'),
  115          %(LVL+1) ECCBDESC$ REDEF ECCBDESC PTR LAST
  116                              /* ECCBDESC$: pointer to magic ECCB descriptor. */
  117      %MEND;

