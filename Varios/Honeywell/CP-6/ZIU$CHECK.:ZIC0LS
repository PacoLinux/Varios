
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:1    
        1        1        /*M* ZIU$CHECK    IDS UTILITIES        CHECK SET POINTER CHAINS  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8           NAME: ZIU$CHECK
        9        9        PURPOSE: This utility scans entire data base extracting all prior
       10       10                 and next set pointers from every record and summing them.
       11       11                 When complete, the sum of all prior pointers subtracted
       12       12                 from sum of all next pointers should be zero or there is
       13       13                 a broken set chain.
       14       14                                                                         */
       15       15        ZIU$CHECK: PROC ALTRET;
       16       16
       17       17    1   DCL HIGH_PAGE SBIN WORD STATIC SYMDEF ALIGNED;
       18       18    1   DCL HIGH_DATA_PG SBIN WORD STATIC SYMDEF ALIGNED;
       19       19    1   DCL NUM_INV_PGS SBIN WORD STATIC SYMDEF ALIGNED;
       20       20    1   DCL BUF_PTR SBIN WORD STATIC SYMDEF ALIGNED;
       21       21    1   DCL BAD_CHAINS SBIN WORD STATIC ALIGNED;
       22       22    1   DCL INDX SBIN WORD STATIC ALIGNED;
       23       23    1   DCL LOW_DBK UBIN WORD STATIC SYMDEF ALIGNED;
       24       24    1   DCL LPP SBIN WORD STATIC SYMDEF ALIGNED;
       25       25    1   DCL DUMMY_FOUND BIT(1) STATIC SYMDEF ALIGNED INIT('0'B);
       26       26    1   DCL PRIVAL SBIN WORD STATIC SYMDEF ALIGNED;
       27       27    1   DCL NXTVAL SBIN WORD STATIC SYMDEF ALIGNED;
       28       28    1   DCL AC_INDX SBIN WORD STATIC ALIGNED;
       29       29
       30       30    1   DCL EISOWN SBIN WORD STATIC SYMDEF ALIGNED;
       31       31    1   DCL EISPR SBIN WORD STATIC SYMDEF ALIGNED;
       32       32    1   DCL EISNXT SBIN WORD STATIC SYMDEF ALIGNED;
       33       33
       34       34    1   DCL 1 CHKMSG STATIC CALIGNED,
       35       35    1         2 * CHAR(36) CALIGNED INIT
       36       36    1    ('  Set checking in progress for area '),
       37       37    1         2 AREANM CHAR(30) CALIGNED;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:2    
       38       38    1   DCL 1 SKIPMSG STATIC CALIGNED,
       39       39    1         2 * CHAR(0) INIT('  Set checking skipped for indexed area ') CALIGNED,
       40       40    1         2 AREANM CHAR(30) CALIGNED;
       41       41
       42       42
       43       43    1   DCL 1 SETCNT(0:499) STATIC SYMDEF ALIGNED,
       44       44    1         2 PR UBIN WORD ALIGNED INIT(0*500),
       45       45    1         2 NXT UBIN WORD ALIGNED INIT(0*500),
       46       46    1         2 DBK UBIN WORD ALIGNED INIT(0*500);
       47       47
       48       48    1   DCL CLEAR_COUNTERS BIT(1) STATIC ALIGNED;
       49       49
       50       50         %INCLUDE ZI_GLOBAL_DBUTIL;
       51      228         %SYS_FUNC;
       52      320         %MISC_DCLS;
       53      373        %INCLUDE ZI$PG_STRUCTS;
       54      476         %ATBLK_PG;
       55      532        %INCLUDE ZI_DBU_XREF;
       56      699         %XREF_TBLS;
       57      774         %INCLUDE ZI_ERRORS_SUBS;
       58     1294         %INCLUDE CP_6;
       59     1375         %F$DCB;
       60     1432         %INCLUDE CP_6_SUBS;
       61     1972         %INCLUDE ZI$DIR;
       62     2129         %DIR;
       63     2273
       64     2274    1   DCL BUILD_MSTR_TBL ENTRY ALTRET;
       65     2275    1   DCL BUILD_SETXREF ENTRY ALTRET;
       66     2276    1   DCL BUILD_RECXREF ENTRY ALTRET;
       67     2277
       68     2278    1   DCL ZERO_SUP ENTRY(3);
       69     2279    1   DCL TYPE_ERRMSG ENTRY(5);
       70     2280    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
       71     2281    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
       72     2282    1   DCL SYS_FUNC_READ ENTRY ALTRET;
       73     2283    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
       74     2284    1   DCL SYS_FUNC_CHECK ENTRY ALTRET;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:3    
       75     2285
       76     2286    1   DCL CHECK_PAGES ENTRY ALTRET; /* PROCESSING ROUTINE */
       77     2287
       78     2288    1   DCL RB_SAVE SBIN STATIC ALIGNED;
       79     2289    1   DCL RE_SAVE SBIN STATIC ALIGNED;
       80     2290    1   DCL NBUFS SBIN SYMREF ALIGNED; /* NUMBER OF I_O_BUF WE HAVE */
       81     2291
       82     2292        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:4    
       83     2293    1       IF XREF_BUILT = %NO# THEN
       84     2294    2       DO;
       85     2295    2           CALL BUILD_MSTR_TBL ALTRET(ALTRTN);
       86     2296    2           CALL BUILD_SETXREF ALTRET(ALTRTN);
       87     2297    2           CALL BUILD_RECXREF ALTRET(ALTRTN);
       88     2298    2           END;
       89     2299    1       AC_INDX=0; /* SEARCH THE AREA INDEX IN AREA_TABLE */
       90     2300    2       DO WHILE(ZI$DIR.AREA_NM.NAME.TEXT ~= AREA_KEY_XREF.NAME(AC_INDX));
       91     2301    2           AC_INDX = AC_INDX +1;
       92     2302    2           END;
       93     2303    1       IF AREA_KEY_XREF.MAX_KEY(AC_INDX)=0 THEN /* THIS MUST BE INDEX AREA */
       94     2304    2       DO;
       95     2305    2           SKIPMSG.AREANM=ZI$DIR.AREA_NM.NAME.TEXT;
       96     2306    2           DCBSF = DCBNUM(M$LO);
       97     2307    2           BUFSF = VECTOR(SKIPMSG);
       98     2308    2           BUFLNSF = LENGTHC(SKIPMSG);
       99     2309    2           VFCSF = %NO#;
      100     2310    2           CALL SYS_FUNC_WRIT;
      101     2311    2           AREA_KEY_XREF.CHECKED(AC_INDX) = 1; /* MARK CHECKED */
      102     2312    2           RETURN; /* SKIP CHECKING INDEXAREA */
      103     2313    2           END;
      104     2314    1       CHKMSG.AREANM = ZI$DIR.AREA_NM.NAME.TEXT;
      105     2315        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:5    
      106     2316        /*
      107     2317              Open file and get page attributes.
      108     2318        */
      109     2319    1       DCBSF = ZI$DIR.AREA_NM.DCB#;
      110     2320    1       ORGSF = %IDS#;
      111     2321    1       ASNSF = %FILE#;
      112     2322    1       FUNSF = %IN#;
      113     2323    1       ACSSF = %DIRECT#;
      114     2324    1       SHARESF = %ALL#;
      115     2325    1       FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;
      116     2326    1       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);
      117     2327
      118     2328    1       IF DCBADDR(DCBSF)->F$DCB.ORG# ~= %IDS# THEN
      119     2329    2       DO;
      120     2330    2           CALL TYPE_ERRMSG(DBU#CHKIDS,3);
      121     2331    2           CALL SYS_FUNC_CLOS;
      122     2332    2           ALTRETURN;
      123     2333    2           END;
      124     2334
      125     2335    1       CALL GET_ATBLK ALTRET(ALT_CLOSE);
      126     2336
      127     2337    1   /**/ DCBSF = DCBNUM(M$LO);
      128     2338    1       BUFSF = VECTOR(CHKMSG);
      129     2339    1       VFCSF = %NO#;
      130     2340    1       BUFLNSF = 66;
      131     2341    1       CALL SYS_FUNC_WRIT;
      132     2342
      133     2343    1       RB_SAVE = 1; /* START READING FROM PAGE  1 */
      134     2344    1       IF HIGH_DATA_PG > NBUFS THEN
      135     2345    1           RE_SAVE = NBUFS; /* READ A WHOLE BLOCK */
      136     2346    1       ELSE
      137     2347    1           RE_SAVE = HIGH_DATA_PG; /* DB SIZE < BUF SIZE */
      138     2348    1       I_O_SIZE = RE_SAVE; /* NUMBER OF PAGES FOR 1ST READ */
      139     2349    1       BUF_PTR = 0;
      140     2350    1       BUFSF = VECTOR(I_O_BUF);
      141     2351    1       BUFLNSF = I_O_SIZE * 4096;
      142     2352    1       FULLSF = %YES#;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:6    
      143     2353    1       KEYSF = %YES#;
      144     2354    1       KEYVSF.IDSKEY = RB_SAVE;
      145     2355    1       ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;
      146     2356    1       DCBSF = ZI$DIR.AREA_NM.DCB#;
      147     2357    1       WAITSF = %NO#; /* NO WAIT READ */
      148     2358    1       CALL SYS_FUNC_READ ALTRET(ALT_CLOSE);
      149     2359
      150     2360        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:7    
      151     2361        /*
      152     2362              Process  the reading of the data base #BUFS pages at a time.
      153     2363        */
      154     2364    2       DO WHILE(I_O_SIZE>0); /* PROCESS LAST BLOCK READ */
      155     2365
      156     2366    2           RB = RB_SAVE;
      157     2367    2           RE = RE_SAVE; /* WE WILL PROCESS LAST BLOCK READ */
      158     2368    2           BUFSF = VECTOR(I_O_BUF(NBUFS-BUF_PTR));
      159     2369    2           DCBSF = ZI$DIR.AREA_NM.DCB#;
      160     2370    2           CALL SYS_FUNC_CHECK ALTRET(ALT_CLOSE); /* CHECK LAST I-O TYC */
      161     2371    2           RB_SAVE = RE+1; /* NEXT READ START RIGH AFTER LAST RE_SAVE */
      162     2372    2           I_O_SIZE = HIGH_DATA_PG + 1 - RB_SAVE; /* PAGES LEFT TO READ */
      163     2373    2           IF I_O_SIZE > 0 THEN /* IF THERE ARE ANY */
      164     2374    3           DO; /* MORE PAGES TO READ, SO READ THEM AHEAD */
      165     2375    3               IF BREAK_FLAG>0 THEN /* BREAK KEY WAS PRESSED */
      166     2376    3                   GOTO NORMAL_RETURN;
      167     2377    3               IF I_O_SIZE > NBUFS THEN /* CHECK WITH BUFFER SIZE */
      168     2378    3                   I_O_SIZE = NBUFS; /* CANT READ MORE THAN IT */
      169     2379    3               RE_SAVE = RB_SAVE + I_O_SIZE - 1; /* LAST PAGE NUMBER */
      170     2380    3               BUFLNSF = 4096 * I_O_SIZE;
      171     2381    3               FULLSF = %YES#;
      172     2382    3               KEYSF = %YES#;
      173     2383    3               KEYVSF.IDSKEY = RB_SAVE;
      174     2384    3               ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;
      175     2385    3               WAITSF = %NO#; /* PREPARE NEXT READ WITH NO WAIT */
      176     2386    3               CALL SYS_FUNC_READ ALTRET(ALT_CLOSE);
      177     2387    3               END;
      178     2388
      179     2389    2           CALL CHECK_PAGES; /* CHECK A BLOCK OF PAGES */
      180     2390    2           BUF_PTR = NBUFS - BUF_PTR; /* BUFFER SWAPPING */
      181     2391    2           END;
      182     2392    1       AREA_KEY_XREF.CHECKED(AC_INDX)=1; /* SET THIS AREA CHECKED FLAG */
      183     2393    1   NORMAL_RETURN:
      184     2394    1       CALL SYS_FUNC_CLOS; /* Close area (DCBSF does not change ) */
      185     2395    1       RETURN; /* Return to driver - results may be printed by calling
      186     2396         REPORT_CHK from driver (allows mult area check) */
      187     2397        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:8    
      188     2398        /*-------------------------------------------------------------*/
      189     2399        /*         GET INVENTORY  AND  FILE  SIZE  ATTRIBUTES           */
      190     2400        /*--------------------------------------------------------------*/
      191     2401    1   GET_ATBLK: PROC ALTRET;
      192     2402
      193     2403        /*
      194     2404           Evaluate high data page and number of inventory pages according
      195     2405           to attribute block information.
      196     2406        */
      197     2407
      198     2408    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;
      199     2409    2   /**/ BUFSF = VECTOR(I_O_BUF(0));
      200     2410    2   /**/ BUFLNSF = 4096;
      201     2411    2   /**/ FULLSF = %YES#;
      202     2412    2   /**/ ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;
      203     2413    2   /**/ KEYSF = %YES#;
      204     2414    2   /**/ KEYVSF.IDSKEY = 0;
      205     2415    2       CALL SYS_FUNC_READ ALTRET(ALT_ATBLK);
      206     2416    2       ATBLK$ = ADDR(I_O_BUF(0));
      207     2417    2       IF ATBLK_PG.FIR_INV_PGNO = 0 THEN /* NO INVENTORY PAGES */
      208     2418    2           HIGH_DATA_PG = ATBLK_PG.NUM_DBPG;
      209     2419    2       ELSE
      210     2420    2           HIGH_DATA_PG = ATBLK_PG.FIR_INV_PGNO - 1;
      211     2421    2       LOW_DBK = ATBLK_PG.LOW_DBK;
      212     2422    2       LPP = ATBLK_PG.LINE_INFO.LPP;
      213     2423    2       RETURN;
      214     2424        /**/
      215     2425    2   ALT_ATBLK:
      216     2426    2       ALTRETURN;
      217     2427    2   END GET_ATBLK;
      218     2428        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:9    
      219     2429
      220     2430        /*E* ERROR: ZIU-DBU#CHKIDS-C
      221     2431           MESSAGE: %FN is not an integrated IDS file - CHECK/VALIDATE aborted.*/
      222     2432
      223     2433        /*E* ERROR: ZIU-DBU#PGSIZE-C
      224     2434           MESSAGE: Space available error on page# %U1. */
      225     2435
      226     2436        /*E* ERROR: ZIU-DBU#RECERR-C
      227     2437           MESSAGE: Record error on page# %U1.  No such record type at line# %U2.
      228     2438                    Checking skipped on this page.  */
      229     2439
      230     2440        /*E* ERROR: ZIU-DBU#OFFSET-C
      231     2441           MESSAGE: A record on page# %U1 at physical byte offset %U2
      232     2442                    is not in the offset array.  Checking skipped on this page. */
      233     2443
      234     2444        /*E* ERROR: ZIU-DBU#BADCHN-C
      235     2445           MESSAGE: Set "%U1" has bad %U2 pointer(s).     */
      236     2446
      237     2447        /*E* ERROR: ZIU-DBU#DISCONNECTED-C
      238     2448           MESSAGE:   Set "%U1" has disconnected manual members. */
      239     2449
      240     2450        /*E* ERROR: ZIU-DBU#CHKDUMMY-C
      241     2451           MESSAGE:   Warning: Dummy entries in *PA_RECs found
      242     2452                               which are not in CP-6 I-D-S/II format. */
      243     2453
      244     2454        /*E* ERROR: ZIU-DBU#CHK-C
      245     2455           MESSAGE: Check complete: %U1 bad sets found.            */
      246     2456        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:10   
      247     2457        /*
      248     2458           This procedure reports on the results of the check operation.
      249     2459        */
      250     2460    1   REPORT_CHK: ENTRY ALTRET;
      251     2461
      252     2462    1       BAD_CHAINS = 0; /* NUMBER OF BAD CHAINS FOUND SO FAR */
      253     2463    2       DO I = 0 TO NO_SETS-1;
      254     2464    2           PRIVAL = SETCNT.PR(I) - SETCNT.DBK(I);
      255     2465    2           NXTVAL = SETCNT.NXT(I) - SETCNT.DBK(I);
      256     2466    2           IF PRIVAL ~= 0 OR NXTVAL ~= 0 THEN
      257     2467    3           DO; /*   BAD SET SUSPECTED */
      258     2468    3               X = I + NO_RECS; /* INDEX INTO MSTR_REF */
      259     2469    3               ERR_INSERT.TEXT(0)=MSTR_REF.NAME(X);
      260     2470    3               CALL INDEX1(INDX,' ',ERR_INSERT.TEXT(0));
      261     2471    3               ERR_INSERT.CNT(0)=INDX; /* MOVE SET NAME TO MSG %U1 */
      262     2472    3               IF (MSTR_REF.SET.INMODE(X) OR MSTR_REF.SET.RETYPE(X)) AND
      263     2473    3                  PRIVAL = NXTVAL THEN /* DISCONNECTED MEMBER FOUND */
      264     2474    3                   CALL TYPE_ERRMSG(DBU#DISCONNECTED,1); /* WARNING MSG */
      265     2475    3               ELSE
      266     2476    4               DO;
      267     2477    4                   BAD_CHAINS = BAD_CHAINS + 1; /* PURE BAD CHAIN */
      268     2478    4                   IF PRIVAL ~= 0 AND NXTVAL ~=0 THEN
      269     2479    4                       CALL TYPE_ERRMSG(DBU#BADCHN,3,,'prior and next.');
      270     2480    4                   ELSE
      271     2481    4                       IF PRIVAL ~= 0 THEN
      272     2482    4                           CALL TYPE_ERRMSG(DBU#BADCHN,3,,'prior.');
      273     2483    4                       ELSE
      274     2484    4                           CALL TYPE_ERRMSG(DBU#BADCHN,3,,'next.');
      275     2485    4                   END;
      276     2486    3               END;
      277     2487    2           END;
      278     2488
      279     2489    1       IF DUMMY_FOUND THEN
      280     2490    2       DO;
      281     2491    2           DUMMY_FOUND = '0'B; /* RESET FLAG */
      282     2492    2           CALL TYPE_ERRMSG(DBU#CHKDUMMY,1); /* TYPE A WARNING MSG */
      283     2493    2           STEPCC = 2;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:11   
      284     2494    2           END;
      285     2495    1       IF BAD_CHAINS = 0 THEN /* NO BAD CHAINS FOUND */
      286     2496    1           ERR_INSERT.TEXT(0)='No.';
      287     2497    1       ELSE
      288     2498    2       DO;
      289     2499    2           CALL BINCHAR(ERR_INSERT.TEXT(0),BAD_CHAINS);
      290     2500    2           CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);
      291     2501    2           STEPCC = 4; /* SET STEPCC TO REFLECT BAD CHAINS FOUND */
      292     2502    2           END;
      293     2503    1       CALL TYPE_ERRMSG(DBU#CHK,1,ERR_INSERT.TEXT(0));
      294     2504
      295     2505    1       CLEAR_COUNTERS = %YES#;
      296     2506    1       IF ~ ZI$DIR.CHECK_ALL
      297     2507    1       THEN
      298     2508    1           CLEAR_COUNTERS=%YES#;
      299     2509    2       ELSE DO;
      300     2510    3           DO X = 0 TO NO_AREAS-1;
      301     2511    3               IF AREA_KEY_XREF.CHECKED(X) = 0 THEN
      302     2512    3                   CLEAR_COUNTERS = %NO#;
      303     2513    3               END;
      304     2514    2           END;
      305     2515
      306     2516    1       IF CLEAR_COUNTERS = %YES# THEN
      307     2517    2       DO;
      308     2518    2           SETCNT = '0'B; /* INIT ALL DBK,NXT AND PR COUNTERS */
      309     2519    3           DO X = 0 TO NO_AREAS-1;
      310     2520    3               AREA_KEY_XREF.CHECKED(X) = 0;
      311     2521    3               END;
      312     2522    2           END;
      313     2523
      314     2524    1       RETURN;
      315     2525
      316     2526    1   ALT_CLOSE: CALL SYS_FUNC_CLOS; /* ALT AFTER AREA OPENED */
      317     2527
      318     2528    1   ALTRTN: ALTRETURN; /* ALTRETURN BEFORE AREA OPENED */
      319     2529
      320     2530    1   END ZIU$CHECK;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:12   
      321     2531        %EOD;

PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:13   
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$CHECK.

   Procedure ZIU$CHECK requires 419 words for executable code.
   Procedure ZIU$CHECK requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:14   

 Object Unit name= ZIU$CHECK                                  File name= ZIU$CHECK.:ZIC0TOU
 UTS= SEP 05 '97 13:08:11.48 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none  1553   3021  ZIU$CHECK
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$UC
    3  RoData even  UTS      9     11  ZIU$CHECK
    4   Proc  even  none   419    643  ZIU$CHECK
    5  RoData even  none    39     47  ZIU$CHECK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        0  ZIU$CHECK
     4    376          yes     yes      Std        0  REPORT_CHK
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:15   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  HIGH_PAGE                          0      1  HIGH_DATA_PG
    0      2  NUM_INV_PGS                        0      3  BUF_PTR
    0      6  LOW_DBK                            0      7  LPP
    0     10  DUMMY_FOUND                        0     11  PRIVAL
    0     12  NXTVAL                             0     14  EISOWN
    0     15  EISPR                              0     16  EISNXT
    0     62  SETCNT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 BUILD_MSTR_TBL
 yes     yes           Std       0 SYS_FUNC_OPEN
         yes           Std       5 TYPE_ERRMSG
 yes     yes           Std       0 SYS_FUNC_READ
 yes     yes           Std       0 CHECK_PAGES
 yes     yes           Std       0 BUILD_SETXREF
 yes     yes           Std       0 SYS_FUNC_CLOS
 yes     yes           Std       0 SYS_FUNC_CHECK
 yes     yes           Std       0 BUILD_RECXREF
 yes     yes           Std       0 SYS_FUNC_WRIT
         yes           Std       3 ZERO_SUP
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:16   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     BLKLSF                                KEYLSF                                KEYXSF
     DCBSF                                 ORGSF                                 KEYSF
     KEYVSF                                ACSSF                                 NOTIMESF
     FUNSF                                 ASNSF                                 TESTSF
     XTENSIZESF                            DISPSF                                WAITSF
     VFCSF                                 FULLSF                                BKUPSF
     BUFLNSF                               BUFSF                                 SOURCESF
     DESTSF                                DATESF                                TIMESF
     UTSSF                                 DAYSF                                 TSTAMPSF
     ENCRP_SEEDSF                          ERRCODESF                             MSGCODE
     INCL_ERR                              ERR_INSERT                            FIDSF_RD
     ACNT                                  EXISTSF                               SHARESF
     DCBNMSF                               KEYRSF                                NO_KEYSF
     REASGNSF                              CARRY_ATTRIBUTESF                     SUBMESSF
     SPKY_OPNSF                            POSSF                                 ERRFLGSF
     MERGESF                               FSA_FLAG                              RELGSF
     UNUSED                                HELPCODE                              COUNTSF
     INDEXSF                               GAP                                   PSNSF
     ACNTSF                                KEY_SHADWSF                           REC$
     RB                                    RE                                    IE
     IB                                    CNT                                   ICNT
     RCNT                                  SCNT                                  FIRST_SET
     RETCNT                                DMPCNT                                KCNT
     ACNT_IDX                              I                                     J
     K                                     X                                     STEPCC
     I_O_BUF$                              OUT_INDX                              I_O_SIZE
     REC_DATA_LN                           M$LO                                  B$TCB$
     B$ROS$                                B$JIT$                                KEYFID
     I_O_KEY                               RESTART                               BREAK_FLAG
     ICHKSUM                               ITMCNT                                GAP1
     ATBLK$                                TYPE                                  MSTR$
     NXT_MSLOT                             MAX_MSLOT                             MSTR_INDX
     HASHTBL                               HASHINDX                              LOC_MODE
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:17   
     AREA_KEY$                             NO_AREAS                              GLBL_PTR_SZ
     SET_XREF$                             NXT_SSLOT                             MAX_SSLOT
     REC_XREF$                             NXT_RSLOT                             MAX_RSLOT
     NO_RECS                               NO_SETS                               XREF_BUILT
     TYPESET                               TYPEREC                               M$UC
     ZI$DIR                                SCHEMA_ACTIVE                         RECORD_LIST
     SET_LIST                              RETAIN_LIST                           DUMP_FID
     ALTKY                                 INIT_RG                               KEY_RNG
     ITEM_LIST                             NBUFS

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 NULLSID                               ISSID
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:18   


        1        1        /*M* ZIU$CHECK    IDS UTILITIES        CHECK SET POINTER CHAINS  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8           NAME: ZIU$CHECK
        9        9        PURPOSE: This utility scans entire data base extracting all prior
       10       10                 and next set pointers from every record and summing them.
       11       11                 When complete, the sum of all prior pointers subtracted
       12       12                 from sum of all next pointers should be zero or there is
       13       13                 a broken set chain.
       14       14                                                                         */
       15       15        ZIU$CHECK: PROC ALTRET;

     15  4 000000   000000 700200 xent  ZIU$CHECK    TSX0  ! X66_AUTO_0
         4 000001   000012 000000                    ZERO    10,0

       16       16
       17       17    1   DCL HIGH_PAGE SBIN WORD STATIC SYMDEF ALIGNED;
       18       18    1   DCL HIGH_DATA_PG SBIN WORD STATIC SYMDEF ALIGNED;
       19       19    1   DCL NUM_INV_PGS SBIN WORD STATIC SYMDEF ALIGNED;
       20       20    1   DCL BUF_PTR SBIN WORD STATIC SYMDEF ALIGNED;
       21       21    1   DCL BAD_CHAINS SBIN WORD STATIC ALIGNED;
       22       22    1   DCL INDX SBIN WORD STATIC ALIGNED;
       23       23    1   DCL LOW_DBK UBIN WORD STATIC SYMDEF ALIGNED;
       24       24    1   DCL LPP SBIN WORD STATIC SYMDEF ALIGNED;
       25       25    1   DCL DUMMY_FOUND BIT(1) STATIC SYMDEF ALIGNED INIT('0'B);
       26       26    1   DCL PRIVAL SBIN WORD STATIC SYMDEF ALIGNED;
       27       27    1   DCL NXTVAL SBIN WORD STATIC SYMDEF ALIGNED;
       28       28    1   DCL AC_INDX SBIN WORD STATIC ALIGNED;
       29       29
       30       30    1   DCL EISOWN SBIN WORD STATIC SYMDEF ALIGNED;
       31       31    1   DCL EISPR SBIN WORD STATIC SYMDEF ALIGNED;
       32       32    1   DCL EISNXT SBIN WORD STATIC SYMDEF ALIGNED;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:19   
       33       33
       34       34    1   DCL 1 CHKMSG STATIC CALIGNED,
       35       35    1         2 * CHAR(36) CALIGNED INIT
       36       36    1    ('  Set checking in progress for area '),
       37       37    1         2 AREANM CHAR(30) CALIGNED;
       38       38    1   DCL 1 SKIPMSG STATIC CALIGNED,
       39       39    1         2 * CHAR(0) INIT('  Set checking skipped for indexed area ') CALIGNED,
       40       40    1         2 AREANM CHAR(30) CALIGNED;
       41       41
       42       42
       43       43    1   DCL 1 SETCNT(0:499) STATIC SYMDEF ALIGNED,
       44       44    1         2 PR UBIN WORD ALIGNED INIT(0*500),
       45       45    1         2 NXT UBIN WORD ALIGNED INIT(0*500),
       46       46    1         2 DBK UBIN WORD ALIGNED INIT(0*500);
       47       47
       48       48    1   DCL CLEAR_COUNTERS BIT(1) STATIC ALIGNED;
       49       49
       50       50         %INCLUDE ZI_GLOBAL_DBUTIL;
       51      228         %SYS_FUNC;
       52      320         %MISC_DCLS;
       53      373        %INCLUDE ZI$PG_STRUCTS;
       54      476         %ATBLK_PG;
       55      532        %INCLUDE ZI_DBU_XREF;
       56      699         %XREF_TBLS;
       57      774         %INCLUDE ZI_ERRORS_SUBS;
       58     1294         %INCLUDE CP_6;
       59     1375         %F$DCB;
       60     1432         %INCLUDE CP_6_SUBS;
       61     1972         %INCLUDE ZI$DIR;
       62     2129         %DIR;
       63     2273
       64     2274    1   DCL BUILD_MSTR_TBL ENTRY ALTRET;
       65     2275    1   DCL BUILD_SETXREF ENTRY ALTRET;
       66     2276    1   DCL BUILD_RECXREF ENTRY ALTRET;
       67     2277
       68     2278    1   DCL ZERO_SUP ENTRY(3);
       69     2279    1   DCL TYPE_ERRMSG ENTRY(5);
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:20   
       70     2280    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
       71     2281    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
       72     2282    1   DCL SYS_FUNC_READ ENTRY ALTRET;
       73     2283    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
       74     2284    1   DCL SYS_FUNC_CHECK ENTRY ALTRET;
       75     2285
       76     2286    1   DCL CHECK_PAGES ENTRY ALTRET; /* PROCESSING ROUTINE */
       77     2287
       78     2288    1   DCL RB_SAVE SBIN STATIC ALIGNED;
       79     2289    1   DCL RE_SAVE SBIN STATIC ALIGNED;
       80     2290    1   DCL NBUFS SBIN SYMREF ALIGNED; /* NUMBER OF I_O_BUF WE HAVE */
       81     2291
       82     2292        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:21   
       83     2293    1       IF XREF_BUILT = %NO# THEN

   2293  4 000002   000000 234000 xsym               SZN     XREF_BUILT
         4 000003   000015 604000 4                  TMI     s:2299

       84     2294    2       DO;

       85     2295    2           CALL BUILD_MSTR_TBL ALTRET(ALTRTN);

   2295  4 000004   000000 631400 5                  EPPR1   0
         4 000005   000000 701000 xent               TSX1    BUILD_MSTR_TBL
         4 000006   000642 702000 4                  TSX2    ALTRTN

       86     2296    2           CALL BUILD_SETXREF ALTRET(ALTRTN);

   2296  4 000007   000000 631400 5                  EPPR1   0
         4 000010   000000 701000 xent               TSX1    BUILD_SETXREF
         4 000011   000642 702000 4                  TSX2    ALTRTN

       87     2297    2           CALL BUILD_RECXREF ALTRET(ALTRTN);

   2297  4 000012   000000 631400 5                  EPPR1   0
         4 000013   000000 701000 xent               TSX1    BUILD_RECXREF
         4 000014   000642 702000 4                  TSX2    ALTRTN

       88     2298    2           END;

       89     2299    1       AC_INDX=0; /* SEARCH THE AREA INDEX IN AREA_TABLE */

   2299  4 000015   000013 450000 0                  STZ     AC_INDX

       90     2300    2       DO WHILE(ZI$DIR.AREA_NM.NAME.TEXT ~= AREA_KEY_XREF.NAME(AC_INDX));

   2300  4 000016   000013 236000 0                  LDQ     AC_INDX
         4 000017   000050 402007                    MPY     40,DL
         4 000020   000000 470400 xsym               LDP0    AREA_KEY$
         4 000021   040106 106400                    CMPC    fill='040'O
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:22   
         4 000022   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000023   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 000024   000035 600000 4                  TZE     s:2303

       91     2301    2           AC_INDX = AC_INDX +1;

   2301  4 000025   000013 054000 0                  AOS     AC_INDX

       92     2302    2           END;

   2302  4 000026   000013 236000 0                  LDQ     AC_INDX
         4 000027   000050 402007                    MPY     40,DL
         4 000030   000000 470400 xsym               LDP0    AREA_KEY$
         4 000031   040106 106400                    CMPC    fill='040'O
         4 000032   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000033   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 000034   000025 601000 4                  TNZ     s:2301

       93     2303    1       IF AREA_KEY_XREF.MAX_KEY(AC_INDX)=0 THEN /* THIS MUST BE INDEX AREA */

   2303  4 000035   000013 236000 0                  LDQ     AC_INDX
         4 000036   000012 402007                    MPY     10,DL
         4 000037   000000 235106                    LDA     0,QL,PR0
         4 000040   000001 236106                    LDQ     1,QL,PR0
         4 000041   000022 773000                    LRL     18
         4 000042   000000 116003                    CMPQ    0,DU
         4 000043   000074 601000 4                  TNZ     s:2314

       94     2304    2       DO;

       95     2305    2           SKIPMSG.AREANM=ZI$DIR.AREA_NM.NAME.TEXT;

   2305  4 000044   040000 100400                    MLR     fill='040'O
         4 000045   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000046   000052 000036 0                  ADSC9   SKIPMSG+10               cn=0,n=30

       96     2306    2           DCBSF = DCBNUM(M$LO);
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:23   

   2306  4 000047   000000 236007 xsym               LDQ     M$LO,DL
         4 000050   000000 620006                    EAX0    0,QL
         4 000051   000000 740000 xsym               STX0    DCBSF

       97     2307    2           BUFSF = VECTOR(SKIPMSG);

   2307  4 000052   000002 237000 5                  LDAQ    2
         4 000053   000000 755000 xsym               STA     BUFSF
         4 000054   000001 756000 xsym               STQ     BUFSF+1

       98     2308    2           BUFLNSF = LENGTHC(SKIPMSG);

   2308  4 000055   000106 235007                    LDA     70,DL
         4 000056   000000 755000 xsym               STA     BUFLNSF

       99     2309    2           VFCSF = %NO#;

   2309  4 000057   000000 450000 xsym               STZ     VFCSF

      100     2310    2           CALL SYS_FUNC_WRIT;

   2310  4 000060   000000 631400 5                  EPPR1   0
         4 000061   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 000062   000000 011000                    NOP     0

      101     2311    2           AREA_KEY_XREF.CHECKED(AC_INDX) = 1; /* MARK CHECKED */

   2311  4 000063   000013 236000 0                  LDQ     AC_INDX
         4 000064   000012 402007                    MPY     10,DL
         4 000065   000000 470400 xsym               LDP0    AREA_KEY$
         4 000066   000000 620006                    EAX0    0,QL
         4 000067   000011 236106                    LDQ     9,QL,PR0
         4 000070   000001 376000 5                  ANQ     1
         4 000071   000001 276003                    ORQ     1,DU
         4 000072   000011 756110                    STQ     9,X0,PR0

PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:24   
      102     2312    2           RETURN; /* SKIP CHECKING INDEXAREA */

   2312  4 000073   000000 702200 xent               TSX2  ! X66_ARET

      103     2313    2           END;
      104     2314    1       CHKMSG.AREANM = ZI$DIR.AREA_NM.NAME.TEXT;

   2314  4 000074   040000 100400                    MLR     fill='040'O
         4 000075   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000076   000030 000036 0                  ADSC9   CHKMSG+9                 cn=0,n=30

      105     2315        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:25   
      106     2316        /*
      107     2317              Open file and get page attributes.
      108     2318        */
      109     2319    1       DCBSF = ZI$DIR.AREA_NM.DCB#;

   2319  4 000077   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000100   000000 740000 xsym               STX0    DCBSF

      110     2320    1       ORGSF = %IDS#;

   2320  4 000101   000007 235007                    LDA     7,DL
         4 000102   000000 755000 xsym               STA     ORGSF

      111     2321    1       ASNSF = %FILE#;

   2321  4 000103   000001 236007                    LDQ     1,DL
         4 000104   000000 756000 xsym               STQ     ASNSF

      112     2322    1       FUNSF = %IN#;

   2322  4 000105   000002 235007                    LDA     2,DL
         4 000106   000000 755000 xsym               STA     FUNSF

      113     2323    1       ACSSF = %DIRECT#;

   2323  4 000107   000000 755000 xsym               STA     ACSSF

      114     2324    1       SHARESF = %ALL#;

   2324  4 000110   200000 236003                    LDQ     65536,DU
         4 000111   000000 756000 xsym               STQ     SHARESF

      115     2325    1       FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;

   2325  4 000112   040000 100400                    MLR     fill='040'O
         4 000113   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000114   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:26   

      116     2326    1       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);

   2326  4 000115   000000 631400 5                  EPPR1   0
         4 000116   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 000117   000642 702000 4                  TSX2    ALTRTN

      117     2327
      118     2328    1       IF DCBADDR(DCBSF)->F$DCB.ORG# ~= %IDS# THEN

   2328  4 000120   000004 470400 5                  LDP0    4
         4 000121   000000 471500                    LDP1    0,,PR0
         4 000122   000000 220000 xsym               LDX0    DCBSF
         4 000123   100000 473510                    LDP3    0,X0,PR1
         4 000124   300032 236100                    LDQ     26,,PR3
         4 000125   777000 376003                    ANQ     -512,DU
         4 000126   007000 116003                    CMPQ    3584,DU
         4 000127   000140 600000 4                  TZE     s:2335

      119     2329    2       DO;

      120     2330    2           CALL TYPE_ERRMSG(DBU#CHKIDS,3);

   2330  4 000130   000010 630400 5                  EPPR0   8
         4 000131   000005 631400 5                  EPPR1   5
         4 000132   000000 701000 xent               TSX1    TYPE_ERRMSG
         4 000133   000000 011000                    NOP     0

      121     2331    2           CALL SYS_FUNC_CLOS;

   2331  4 000134   000000 631400 5                  EPPR1   0
         4 000135   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000136   000000 011000                    NOP     0

      122     2332    2           ALTRETURN;

   2332  4 000137   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:27   

      123     2333    2           END;
      124     2334
      125     2335    1       CALL GET_ATBLK ALTRET(ALT_CLOSE);

   2335  4 000140   000326 701000 4                  TSX1    GET_ATBLK
         4 000141   000637 702000 4                  TSX2    ALT_CLOSE

      126     2336
      127     2337    1   /**/ DCBSF = DCBNUM(M$LO);

   2337  4 000142   000000 236007 xsym               LDQ     M$LO,DL
         4 000143   000000 620006                    EAX0    0,QL
         4 000144   000000 740000 xsym               STX0    DCBSF

      128     2338    1       BUFSF = VECTOR(CHKMSG);

   2338  4 000145   000012 237000 5                  LDAQ    10
         4 000146   000000 755000 xsym               STA     BUFSF
         4 000147   000001 756000 xsym               STQ     BUFSF+1

      129     2339    1       VFCSF = %NO#;

   2339  4 000150   000000 450000 xsym               STZ     VFCSF

      130     2340    1       BUFLNSF = 66;

   2340  4 000151   000102 235007                    LDA     66,DL
         4 000152   000000 755000 xsym               STA     BUFLNSF

      131     2341    1       CALL SYS_FUNC_WRIT;

   2341  4 000153   000000 631400 5                  EPPR1   0
         4 000154   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 000155   000000 011000                    NOP     0

      132     2342
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:28   
      133     2343    1       RB_SAVE = 1; /* START READING FROM PAGE  1 */

   2343  4 000156   000001 235007                    LDA     1,DL
         4 000157   003017 755000 0                  STA     RB_SAVE

      134     2344    1       IF HIGH_DATA_PG > NBUFS THEN

   2344  4 000160   000001 236000 0                  LDQ     HIGH_DATA_PG
         4 000161   000000 116000 xsym               CMPQ    NBUFS
         4 000162   000166 604400 4                  TMOZ    s:2347

      135     2345    1           RE_SAVE = NBUFS; /* READ A WHOLE BLOCK */

   2345  4 000163   000000 235000 xsym               LDA     NBUFS
         4 000164   003020 755000 0                  STA     RE_SAVE
         4 000165   000167 710000 4                  TRA     s:2348

      136     2346    1       ELSE
      137     2347    1           RE_SAVE = HIGH_DATA_PG; /* DB SIZE < BUF SIZE */

   2347  4 000166   003020 756000 0                  STQ     RE_SAVE

      138     2348    1       I_O_SIZE = RE_SAVE; /* NUMBER OF PAGES FOR 1ST READ */

   2348  4 000167   003020 235000 0                  LDA     RE_SAVE
         4 000170   000000 755000 xsym               STA     I_O_SIZE

      139     2349    1       BUF_PTR = 0;

   2349  4 000171   000003 450000 0                  STZ     BUF_PTR

      140     2350    1       BUFSF = VECTOR(I_O_BUF);

   2350  4 000172   000014 235000 5                  LDA     12
         4 000173   000000 236000 xsym               LDQ     I_O_BUF$
         4 000174   000000 755000 xsym               STA     BUFSF
         4 000175   000001 756000 xsym               STQ     BUFSF+1
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:29   

      141     2351    1       BUFLNSF = I_O_SIZE * 4096;

   2351  4 000176   000000 235000 xsym               LDA     I_O_SIZE
         4 000177   000014 735000                    ALS     12
         4 000200   000000 755000 xsym               STA     BUFLNSF

      142     2352    1       FULLSF = %YES#;

   2352  4 000201   400000 236003                    LDQ     -131072,DU
         4 000202   000000 756000 xsym               STQ     FULLSF

      143     2353    1       KEYSF = %YES#;

   2353  4 000203   000000 756000 xsym               STQ     KEYSF

      144     2354    1       KEYVSF.IDSKEY = RB_SAVE;

   2354  4 000204   000000 100400                    MLR     fill='000'O
         4 000205   003017 000004 0                  ADSC9   RB_SAVE                  cn=0,n=4
         4 000206   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

      145     2355    1       ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;

   2355  4 000207   000027 236000 xsym               LDQ     ZI$DIR+23
         4 000210   000000 756000 xsym               STQ     ENCRP_SEEDSF

      146     2356    1       DCBSF = ZI$DIR.AREA_NM.DCB#;

   2356  4 000211   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000212   000000 740000 xsym               STX0    DCBSF

      147     2357    1       WAITSF = %NO#; /* NO WAIT READ */

   2357  4 000213   000000 450000 xsym               STZ     WAITSF

      148     2358    1       CALL SYS_FUNC_READ ALTRET(ALT_CLOSE);
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:30   

   2358  4 000214   000000 631400 5                  EPPR1   0
         4 000215   000000 701000 xent               TSX1    SYS_FUNC_READ
         4 000216   000637 702000 4                  TSX2    ALT_CLOSE

      149     2359
      150     2360        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:31   
      151     2361        /*
      152     2362              Process  the reading of the data base #BUFS pages at a time.
      153     2363        */
      154     2364    2       DO WHILE(I_O_SIZE>0); /* PROCESS LAST BLOCK READ */

   2364  4 000217   000000 235000 xsym               LDA     I_O_SIZE
         4 000220   000312 604400 4                  TMOZ    s:2392

      155     2365
      156     2366    2           RB = RB_SAVE;

   2366  4 000221   003017 235000 0                  LDA     RB_SAVE
         4 000222   000000 755000 xsym               STA     RB

      157     2367    2           RE = RE_SAVE; /* WE WILL PROCESS LAST BLOCK READ */

   2367  4 000223   003020 236000 0                  LDQ     RE_SAVE
         4 000224   000000 756000 xsym               STQ     RE

      158     2368    2           BUFSF = VECTOR(I_O_BUF(NBUFS-BUF_PTR));

   2368  4 000225   000000 236000 xsym               LDQ     NBUFS
         4 000226   000003 136000 0                  SBLQ    BUF_PTR
         4 000227   000014 235000 5                  LDA     12
         4 000230   000034 736000                    QLS     28
         4 000231   000000 036000 xsym               ADLQ    I_O_BUF$
         4 000232   000000 755000 xsym               STA     BUFSF
         4 000233   000001 756000 xsym               STQ     BUFSF+1

      159     2369    2           DCBSF = ZI$DIR.AREA_NM.DCB#;

   2369  4 000234   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000235   000000 740000 xsym               STX0    DCBSF

      160     2370    2           CALL SYS_FUNC_CHECK ALTRET(ALT_CLOSE); /* CHECK LAST I-O TYC */

   2370  4 000236   000000 631400 5                  EPPR1   0
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:32   
         4 000237   000000 701000 xent               TSX1    SYS_FUNC_CHECK
         4 000240   000637 702000 4                  TSX2    ALT_CLOSE

      161     2371    2           RB_SAVE = RE+1; /* NEXT READ START RIGH AFTER LAST RE_SAVE */

   2371  4 000241   000000 235000 xsym               LDA     RE
         4 000242   000001 035007                    ADLA    1,DL
         4 000243   003017 755000 0                  STA     RB_SAVE

      162     2372    2           I_O_SIZE = HIGH_DATA_PG + 1 - RB_SAVE; /* PAGES LEFT TO READ */

   2372  4 000244   000001 236000 0                  LDQ     HIGH_DATA_PG
         4 000245   003017 136000 0                  SBLQ    RB_SAVE
         4 000246   000001 036007                    ADLQ    1,DL
         4 000247   000000 756000 xsym               STQ     I_O_SIZE

      163     2373    2           IF I_O_SIZE > 0 THEN /* IF THERE ARE ANY */

   2373  4 000250   000302 604400 4                  TMOZ    s:2389

      164     2374    3           DO; /* MORE PAGES TO READ, SO READ THEM AHEAD */

      165     2375    3               IF BREAK_FLAG>0 THEN /* BREAK KEY WAS PRESSED */

   2375  4 000251   000000 235000 xsym               LDA     BREAK_FLAG
         4 000252   000322 605400 4                  TPNZ    NORMAL_RETURN

      166     2376    3                   GOTO NORMAL_RETURN;
      167     2377    3               IF I_O_SIZE > NBUFS THEN /* CHECK WITH BUFFER SIZE */

   2377  4 000253   000000 116000 xsym               CMPQ    NBUFS
         4 000254   000257 604400 4                  TMOZ    s:2379

      168     2378    3                   I_O_SIZE = NBUFS; /* CANT READ MORE THAN IT */

   2378  4 000255   000000 235000 xsym               LDA     NBUFS
         4 000256   000000 755000 xsym               STA     I_O_SIZE
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:33   

      169     2379    3               RE_SAVE = RB_SAVE + I_O_SIZE - 1; /* LAST PAGE NUMBER */

   2379  4 000257   003017 236000 0                  LDQ     RB_SAVE
         4 000260   000000 036000 xsym               ADLQ    I_O_SIZE
         4 000261   000001 136007                    SBLQ    1,DL
         4 000262   003020 756000 0                  STQ     RE_SAVE

      170     2380    3               BUFLNSF = 4096 * I_O_SIZE;

   2380  4 000263   000000 235000 xsym               LDA     I_O_SIZE
         4 000264   000014 735000                    ALS     12
         4 000265   000000 755000 xsym               STA     BUFLNSF

      171     2381    3               FULLSF = %YES#;

   2381  4 000266   400000 236003                    LDQ     -131072,DU
         4 000267   000000 756000 xsym               STQ     FULLSF

      172     2382    3               KEYSF = %YES#;

   2382  4 000270   000000 756000 xsym               STQ     KEYSF

      173     2383    3               KEYVSF.IDSKEY = RB_SAVE;

   2383  4 000271   000000 100400                    MLR     fill='000'O
         4 000272   003017 000004 0                  ADSC9   RB_SAVE                  cn=0,n=4
         4 000273   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

      174     2384    3               ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;

   2384  4 000274   000027 236000 xsym               LDQ     ZI$DIR+23
         4 000275   000000 756000 xsym               STQ     ENCRP_SEEDSF

      175     2385    3               WAITSF = %NO#; /* PREPARE NEXT READ WITH NO WAIT */

   2385  4 000276   000000 450000 xsym               STZ     WAITSF
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:34   

      176     2386    3               CALL SYS_FUNC_READ ALTRET(ALT_CLOSE);

   2386  4 000277   000000 631400 5                  EPPR1   0
         4 000300   000000 701000 xent               TSX1    SYS_FUNC_READ
         4 000301   000637 702000 4                  TSX2    ALT_CLOSE

      177     2387    3               END;

      178     2388
      179     2389    2           CALL CHECK_PAGES; /* CHECK A BLOCK OF PAGES */

   2389  4 000302   000000 631400 5                  EPPR1   0
         4 000303   000000 701000 xent               TSX1    CHECK_PAGES
         4 000304   000000 011000                    NOP     0

      180     2390    2           BUF_PTR = NBUFS - BUF_PTR; /* BUFFER SWAPPING */

   2390  4 000305   000000 236000 xsym               LDQ     NBUFS
         4 000306   000003 136000 0                  SBLQ    BUF_PTR
         4 000307   000003 756000 0                  STQ     BUF_PTR

      181     2391    2           END;

   2391  4 000310   000000 235000 xsym               LDA     I_O_SIZE
         4 000311   000221 605400 4                  TPNZ    s:2366

      182     2392    1       AREA_KEY_XREF.CHECKED(AC_INDX)=1; /* SET THIS AREA CHECKED FLAG */

   2392  4 000312   000013 236000 0                  LDQ     AC_INDX
         4 000313   000012 402007                    MPY     10,DL
         4 000314   000000 470400 xsym               LDP0    AREA_KEY$
         4 000315   000000 620006                    EAX0    0,QL
         4 000316   000011 236106                    LDQ     9,QL,PR0
         4 000317   000001 376000 5                  ANQ     1
         4 000320   000001 276003                    ORQ     1,DU
         4 000321   000011 756110                    STQ     9,X0,PR0
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:35   

      183     2393    1   NORMAL_RETURN:
      184     2394    1       CALL SYS_FUNC_CLOS; /* Close area (DCBSF does not change ) */

   2394  4 000322   000000 631400 5     NORMAL_RETU* EPPR1   0
         4 000323   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000324   000000 011000                    NOP     0

      185     2395    1       RETURN; /* Return to driver - results may be printed by calling

   2395  4 000325   000000 702200 xent               TSX2  ! X66_ARET

      186     2396         REPORT_CHK from driver (allows mult area check) */
      187     2397        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:36   
      188     2398        /*-------------------------------------------------------------*/
      189     2399        /*         GET INVENTORY  AND  FILE  SIZE  ATTRIBUTES           */
      190     2400        /*--------------------------------------------------------------*/
      191     2401    1   GET_ATBLK: PROC ALTRET;

   2401  4 000326   200004 741300       GET_ATBLK    STX1  ! 4,,AUTO

      192     2402
      193     2403        /*
      194     2404           Evaluate high data page and number of inventory pages according
      195     2405           to attribute block information.
      196     2406        */
      197     2407
      198     2408    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;

   2408  4 000327   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000330   000000 740000 xsym               STX0    DCBSF

      199     2409    2   /**/ BUFSF = VECTOR(I_O_BUF(0));

   2409  4 000331   000014 235000 5                  LDA     12
         4 000332   000000 236000 xsym               LDQ     I_O_BUF$
         4 000333   000000 755000 xsym               STA     BUFSF
         4 000334   000001 756000 xsym               STQ     BUFSF+1

      200     2410    2   /**/ BUFLNSF = 4096;

   2410  4 000335   010000 235007                    LDA     4096,DL
         4 000336   000000 755000 xsym               STA     BUFLNSF

      201     2411    2   /**/ FULLSF = %YES#;

   2411  4 000337   400000 236003                    LDQ     -131072,DU
         4 000340   000000 756000 xsym               STQ     FULLSF

      202     2412    2   /**/ ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;

PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:37   
   2412  4 000341   000027 236000 xsym               LDQ     ZI$DIR+23
         4 000342   000000 756000 xsym               STQ     ENCRP_SEEDSF

      203     2413    2   /**/ KEYSF = %YES#;

   2413  4 000343   400000 236003                    LDQ     -131072,DU
         4 000344   000000 756000 xsym               STQ     KEYSF

      204     2414    2   /**/ KEYVSF.IDSKEY = 0;

   2414  4 000345   000000 100400                    MLR     fill='000'O
         4 000346   000000 000004 5                  ADSC9   0                        cn=0,n=4
         4 000347   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

      205     2415    2       CALL SYS_FUNC_READ ALTRET(ALT_ATBLK);

   2415  4 000350   000000 631400 5                  EPPR1   0
         4 000351   000000 701000 xent               TSX1    SYS_FUNC_READ
         4 000352   000374 702000 4                  TSX2    ALT_ATBLK

      206     2416    2       ATBLK$ = ADDR(I_O_BUF(0));

   2416  4 000353   000000 236000 xsym               LDQ     I_O_BUF$
         4 000354   000000 756000 xsym               STQ     ATBLK$

      207     2417    2       IF ATBLK_PG.FIR_INV_PGNO = 0 THEN /* NO INVENTORY PAGES */

   2417  4 000355   000000 470400 xsym               LDP0    ATBLK$
         4 000356   000014 235100                    LDA     12,,PR0
         4 000357   000363 601000 4                  TNZ     s:2420

      208     2418    2           HIGH_DATA_PG = ATBLK_PG.NUM_DBPG;

   2418  4 000360   000005 235100                    LDA     5,,PR0
         4 000361   000001 755000 0                  STA     HIGH_DATA_PG
         4 000362   000365 710000 4                  TRA     s:2421

PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:38   
      209     2419    2       ELSE
      210     2420    2           HIGH_DATA_PG = ATBLK_PG.FIR_INV_PGNO - 1;

   2420  4 000363   000001 135007                    SBLA    1,DL
         4 000364   000001 755000 0                  STA     HIGH_DATA_PG

      211     2421    2       LOW_DBK = ATBLK_PG.LOW_DBK;

   2421  4 000365   000015 235100                    LDA     13,,PR0
         4 000366   000006 755000 0                  STA     LOW_DBK

      212     2422    2       LPP = ATBLK_PG.LINE_INFO.LPP;

   2422  4 000367   000012 236100                    LDQ     10,,PR0
         4 000370   777777 376007                    ANQ     -1,DL
         4 000371   000007 756000 0                  STQ     LPP

      213     2423    2       RETURN;

   2423  4 000372   200004 221300                    LDX1  ! 4,,AUTO
         4 000373   000001 702211                    TSX2  ! 1,X1

      214     2424        /**/
      215     2425    2   ALT_ATBLK:
      216     2426    2       ALTRETURN;

   2426  4 000374   200004 221300       ALT_ATBLK    LDX1  ! 4,,AUTO
         4 000375   000000 702211                    TSX2  ! 0,X1

      217     2427    2   END GET_ATBLK;
      218     2428        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:39   
      219     2429
      220     2430        /*E* ERROR: ZIU-DBU#CHKIDS-C
      221     2431           MESSAGE: %FN is not an integrated IDS file - CHECK/VALIDATE aborted.*/
      222     2432
      223     2433        /*E* ERROR: ZIU-DBU#PGSIZE-C
      224     2434           MESSAGE: Space available error on page# %U1. */
      225     2435
      226     2436        /*E* ERROR: ZIU-DBU#RECERR-C
      227     2437           MESSAGE: Record error on page# %U1.  No such record type at line# %U2.
      228     2438                    Checking skipped on this page.  */
      229     2439
      230     2440        /*E* ERROR: ZIU-DBU#OFFSET-C
      231     2441           MESSAGE: A record on page# %U1 at physical byte offset %U2
      232     2442                    is not in the offset array.  Checking skipped on this page. */
      233     2443
      234     2444        /*E* ERROR: ZIU-DBU#BADCHN-C
      235     2445           MESSAGE: Set "%U1" has bad %U2 pointer(s).     */
      236     2446
      237     2447        /*E* ERROR: ZIU-DBU#DISCONNECTED-C
      238     2448           MESSAGE:   Set "%U1" has disconnected manual members. */
      239     2449
      240     2450        /*E* ERROR: ZIU-DBU#CHKDUMMY-C
      241     2451           MESSAGE:   Warning: Dummy entries in *PA_RECs found
      242     2452                               which are not in CP-6 I-D-S/II format. */
      243     2453
      244     2454        /*E* ERROR: ZIU-DBU#CHK-C
      245     2455           MESSAGE: Check complete: %U1 bad sets found.            */
      246     2456        %EJECT;
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:40   
      247     2457        /*
      248     2458           This procedure reports on the results of the check operation.
      249     2459        */
      250     2460    1   REPORT_CHK: ENTRY ALTRET;

   2460  4 000376   000000 700200 xent  REPORT_CHK   TSX0  ! X66_AUTO_0
         4 000377   000012 000000                    ZERO    10,0

      251     2461
      252     2462    1       BAD_CHAINS = 0; /* NUMBER OF BAD CHAINS FOUND SO FAR */

   2462  4 000400   000004 450000 0                  STZ     BAD_CHAINS

      253     2463    2       DO I = 0 TO NO_SETS-1;

   2463  4 000401   000000 450000 xsym               STZ     I
         4 000402   000526 710000 4                  TRA     s:2487+1

      254     2464    2           PRIVAL = SETCNT.PR(I) - SETCNT.DBK(I);

   2464  4 000403   000000 236000 xsym               LDQ     I
         4 000404   000003 402007                    MPY     3,DL
         4 000405   000000 620006                    EAX0    0,QL
         4 000406   000062 236010 0                  LDQ     SETCNT,X0
         4 000407   000064 136010 0                  SBLQ    SETCNT+2,X0
         4 000410   000011 756000 0                  STQ     PRIVAL

      255     2465    2           NXTVAL = SETCNT.NXT(I) - SETCNT.DBK(I);

   2465  4 000411   000063 236010 0                  LDQ     SETCNT+1,X0
         4 000412   000064 136010 0                  SBLQ    SETCNT+2,X0
         4 000413   000012 756000 0                  STQ     NXTVAL

      256     2466    2           IF PRIVAL ~= 0 OR NXTVAL ~= 0 THEN

   2466  4 000414   000011 235000 0                  LDA     PRIVAL
         4 000415   000420 601000 4                  TNZ     s:2468
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:41   
         4 000416   000000 116003                    CMPQ    0,DU
         4 000417   000525 600000 4                  TZE     s:2487

      257     2467    3           DO; /*   BAD SET SUSPECTED */

      258     2468    3               X = I + NO_RECS; /* INDEX INTO MSTR_REF */

   2468  4 000420   000000 236000 xsym               LDQ     I
         4 000421   000000 036000 xsym               ADLQ    NO_RECS
         4 000422   000000 756000 xsym               STQ     X

      259     2469    3               ERR_INSERT.TEXT(0)=MSTR_REF.NAME(X);

   2469  4 000423   000050 402007                    MPY     40,DL
         4 000424   000000 470400 xsym               LDP0    MSTR$
         4 000425   040000 100506                    MLR     fill='040'O
         4 000426   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 000427   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      260     2470    3               CALL INDEX1(INDX,' ',ERR_INSERT.TEXT(0));

   2470  4 000430   000000 124400                    SCM     mask='000'O
         4 000431   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30
         4 000432   000015 000001 5                  ADSC9   13                       cn=0,n=1
         4 000433   000005 000000 0                  ARG     INDX

      261     2471    3               ERR_INSERT.CNT(0)=INDX; /* MOVE SET NAME TO MSG %U1 */

   2471  4 000434   000005 236000 0                  LDQ     INDX
         4 000435   000033 736000                    QLS     27
         4 000436   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      262     2472    3               IF (MSTR_REF.SET.INMODE(X) OR MSTR_REF.SET.RETYPE(X)) AND

   2472  4 000437   000000 236000 xsym               LDQ     X
         4 000440   000012 402007                    MPY     10,DL
         4 000441   000011 236106                    LDQ     9,QL,PR0
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:42   
         4 000442   000010 316003                    CANQ    8,DU
         4 000443   000451 601000 4                  TNZ     s:2472+10
         4 000444   000000 236000 xsym               LDQ     X
         4 000445   000012 402007                    MPY     10,DL
         4 000446   000011 236106                    LDQ     9,QL,PR0
         4 000447   000004 316003                    CANQ    4,DU
         4 000450   000461 600000 4                  TZE     s:2477
         4 000451   000011 236000 0                  LDQ     PRIVAL
         4 000452   000012 116000 0                  CMPQ    NXTVAL
         4 000453   000461 601000 4                  TNZ     s:2477

      263     2473    3                  PRIVAL = NXTVAL THEN /* DISCONNECTED MEMBER FOUND */
      264     2474    3                   CALL TYPE_ERRMSG(DBU#DISCONNECTED,1); /* WARNING MSG */

   2474  4 000454   000020 630400 5                  EPPR0   16
         4 000455   000005 631400 5                  EPPR1   5
         4 000456   000000 701000 xent               TSX1    TYPE_ERRMSG
         4 000457   000000 011000                    NOP     0
         4 000460   000525 710000 4                  TRA     s:2487

      265     2475    3               ELSE
      266     2476    4               DO;

      267     2477    4                   BAD_CHAINS = BAD_CHAINS + 1; /* PURE BAD CHAIN */

   2477  4 000461   000004 054000 0                  AOS     BAD_CHAINS

      268     2478    4                   IF PRIVAL ~= 0 AND NXTVAL ~=0 THEN

   2478  4 000462   000011 235000 0                  LDA     PRIVAL
         4 000463   000500 600000 4                  TZE     s:2481
         4 000464   000012 236000 0                  LDQ     NXTVAL
         4 000465   000500 600000 4                  TZE     s:2481

      269     2479    4                       CALL TYPE_ERRMSG(DBU#BADCHN,3,,'prior and next.');

   2479  4 000466   000025 236000 5                  LDQ     21
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:43   
         4 000467   000024 235000 5                  LDA     20
         4 000470   200010 757100                    STAQ    8,,AUTO
         4 000471   000026 237000 5                  LDAQ    22
         4 000472   200006 757100                    STAQ    6,,AUTO
         4 000473   200006 630500                    EPPR0   6,,AUTO
         4 000474   000022 631400 5                  EPPR1   18
         4 000475   000000 701000 xent               TSX1    TYPE_ERRMSG
         4 000476   000000 011000                    NOP     0
         4 000477   000525 710000 4                  TRA     s:2487

      270     2480    4                   ELSE
      271     2481    4                       IF PRIVAL ~= 0 THEN

   2481  4 000500   000000 115003                    CMPA    0,DU
         4 000501   000514 600000 4                  TZE     s:2484

      272     2482    4                           CALL TYPE_ERRMSG(DBU#BADCHN,3,,'prior.');

   2482  4 000502   000030 236000 5                  LDQ     24
         4 000503   000024 235000 5                  LDA     20
         4 000504   200010 757100                    STAQ    8,,AUTO
         4 000505   000026 237000 5                  LDAQ    22
         4 000506   200006 757100                    STAQ    6,,AUTO
         4 000507   200006 630500                    EPPR0   6,,AUTO
         4 000510   000022 631400 5                  EPPR1   18
         4 000511   000000 701000 xent               TSX1    TYPE_ERRMSG
         4 000512   000000 011000                    NOP     0
         4 000513   000525 710000 4                  TRA     s:2487

      273     2483    4                       ELSE
      274     2484    4                           CALL TYPE_ERRMSG(DBU#BADCHN,3,,'next.');

   2484  4 000514   000031 236000 5                  LDQ     25
         4 000515   000024 235000 5                  LDA     20
         4 000516   200010 757100                    STAQ    8,,AUTO
         4 000517   000026 237000 5                  LDAQ    22
         4 000520   200006 757100                    STAQ    6,,AUTO
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:44   
         4 000521   200006 630500                    EPPR0   6,,AUTO
         4 000522   000022 631400 5                  EPPR1   18
         4 000523   000000 701000 xent               TSX1    TYPE_ERRMSG
         4 000524   000000 011000                    NOP     0

      275     2485    4                   END;

      276     2486    3               END;

      277     2487    2           END;

   2487  4 000525   000000 054000 xsym               AOS     I
         4 000526   000000 236000 xsym               LDQ     I
         4 000527   000000 116000 xsym               CMPQ    NO_SETS
         4 000530   000403 604000 4                  TMI     s:2464

      278     2488
      279     2489    1       IF DUMMY_FOUND THEN

   2489  4 000531   000010 234000 0                  SZN     DUMMY_FOUND
         4 000532   000542 605000 4                  TPL     s:2495

      280     2490    2       DO;

      281     2491    2           DUMMY_FOUND = '0'B; /* RESET FLAG */

   2491  4 000533   000010 450000 0                  STZ     DUMMY_FOUND

      282     2492    2           CALL TYPE_ERRMSG(DBU#CHKDUMMY,1); /* TYPE A WARNING MSG */

   2492  4 000534   000033 630400 5                  EPPR0   27
         4 000535   000005 631400 5                  EPPR1   5
         4 000536   000000 701000 xent               TSX1    TYPE_ERRMSG
         4 000537   000000 011000                    NOP     0

      283     2493    2           STEPCC = 2;

PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:45   
   2493  4 000540   000002 235007                    LDA     2,DL
         4 000541   000000 755000 xsym               STA     STEPCC

      284     2494    2           END;

      285     2495    1       IF BAD_CHAINS = 0 THEN /* NO BAD CHAINS FOUND */

   2495  4 000542   000004 235000 0                  LDA     BAD_CHAINS
         4 000543   000550 601000 4                  TNZ     s:2499

      286     2496    1           ERR_INSERT.TEXT(0)='No.';

   2496  4 000544   040000 100400                    MLR     fill='040'O
         4 000545   000010 000003 3                  ADSC9   8                        cn=0,n=3
         4 000546   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30
         4 000547   000561 710000 4                  TRA     s:2503

      287     2497    1       ELSE
      288     2498    2       DO;

      289     2499    2           CALL BINCHAR(ERR_INSERT.TEXT(0),BAD_CHAINS);

   2499  4 000550   000000 301400                    BTD
         4 000551   000004 000004 0                  NDSC9   BAD_CHAINS               cn=0,s=lsgnf,sf=0,n=4
         4 000552   000000 230036 xsym               NDSC9   ERR_INSERT               cn=1,s=nosgn,sf=0,n=30

      290     2500    2           CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);

   2500  4 000553   000040 630400 5                  EPPR0   32
         4 000554   000035 631400 5                  EPPR1   29
         4 000555   000000 701000 xent               TSX1    ZERO_SUP
         4 000556   000000 011000                    NOP     0

      291     2501    2           STEPCC = 4; /* SET STEPCC TO REFLECT BAD CHAINS FOUND */

   2501  4 000557   000004 235007                    LDA     4,DL
         4 000560   000000 755000 xsym               STA     STEPCC
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:46   

      292     2502    2           END;

      293     2503    1       CALL TYPE_ERRMSG(DBU#CHK,1,ERR_INSERT.TEXT(0));

   2503  4 000561   000044 630400 5                  EPPR0   36
         4 000562   000035 631400 5                  EPPR1   29
         4 000563   000000 701000 xent               TSX1    TYPE_ERRMSG
         4 000564   000000 011000                    NOP     0

      294     2504
      295     2505    1       CLEAR_COUNTERS = %YES#;

   2505  4 000565   400000 236003                    LDQ     -131072,DU
         4 000566   003016 756000 0                  STQ     CLEAR_COUNTERS

      296     2506    1       IF ~ ZI$DIR.CHECK_ALL

   2506  4 000567   000141 236000 xsym               LDQ     ZI$DIR+97
         4 000570   000022 736000                    QLS     18
         4 000571   400000 376003                    ANQ     -131072,DU
         4 000572   400000 676003                    ERQ     -131072,DU
         4 000573   000577 600000 4                  TZE     s:2510

      297     2507    1       THEN
      298     2508    1           CLEAR_COUNTERS=%YES#;

   2508  4 000574   400000 236003                    LDQ     -131072,DU
         4 000575   003016 756000 0                  STQ     CLEAR_COUNTERS
         4 000576   000614 710000 4                  TRA     s:2516

      299     2509    2       ELSE DO;

      300     2510    3           DO X = 0 TO NO_AREAS-1;

   2510  4 000577   000000 450000 xsym               STZ     X
         4 000600   000611 710000 4                  TRA     s:2513+1
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:47   

      301     2511    3               IF AREA_KEY_XREF.CHECKED(X) = 0 THEN

   2511  4 000601   000000 236000 xsym               LDQ     X
         4 000602   000012 402007                    MPY     10,DL
         4 000603   000000 470400 xsym               LDP0    AREA_KEY$
         4 000604   000011 236106                    LDQ     9,QL,PR0
         4 000605   000777 316003                    CANQ    511,DU
         4 000606   000610 601000 4                  TNZ     s:2513

      302     2512    3                   CLEAR_COUNTERS = %NO#;

   2512  4 000607   003016 450000 0                  STZ     CLEAR_COUNTERS

      303     2513    3               END;

   2513  4 000610   000000 054000 xsym               AOS     X
         4 000611   000000 236000 xsym               LDQ     X
         4 000612   000000 116000 xsym               CMPQ    NO_AREAS
         4 000613   000601 604000 4                  TMI     s:2511

      304     2514    2           END;

      305     2515
      306     2516    1       IF CLEAR_COUNTERS = %YES# THEN

   2516  4 000614   003016 234000 0                  SZN     CLEAR_COUNTERS
         4 000615   000636 605000 4                  TPL     s:2524

      307     2517    2       DO;

      308     2518    2           SETCNT = '0'B; /* INIT ALL DBK,NXT AND PR COUNTERS */

   2518  4 000616   013560 220003                    LDX0    6000,DU
         4 000617   000040 100400                    MLR     fill='000'O
         4 000620   000000 000001 5                  ADSC9   0                        cn=0,n=1
         4 000621   000062 000010 0                  ADSC9   SETCNT                   cn=0,n=*X0
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:48   

      309     2519    3           DO X = 0 TO NO_AREAS-1;

   2519  4 000622   000000 450000 xsym               STZ     X
         4 000623   000633 710000 4                  TRA     s:2521+1

      310     2520    3               AREA_KEY_XREF.CHECKED(X) = 0;

   2520  4 000624   000000 236000 xsym               LDQ     X
         4 000625   000012 402007                    MPY     10,DL
         4 000626   000000 470400 xsym               LDP0    AREA_KEY$
         4 000627   000000 620006                    EAX0    0,QL
         4 000630   000001 236000 5                  LDQ     1
         4 000631   000011 356110                    ANSQ    9,X0,PR0

      311     2521    3               END;

   2521  4 000632   000000 054000 xsym               AOS     X
         4 000633   000000 236000 xsym               LDQ     X
         4 000634   000000 116000 xsym               CMPQ    NO_AREAS
         4 000635   000624 604000 4                  TMI     s:2520

      312     2522    2           END;

      313     2523
      314     2524    1       RETURN;

   2524  4 000636   000000 702200 xent               TSX2  ! X66_ARET

      315     2525
      316     2526    1   ALT_CLOSE: CALL SYS_FUNC_CLOS; /* ALT AFTER AREA OPENED */

   2526  4 000637   000000 631400 5     ALT_CLOSE    EPPR1   0
         4 000640   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000641   000000 011000                    NOP     0

      317     2527
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:49   
      318     2528    1   ALTRTN: ALTRETURN; /* ALTRETURN BEFORE AREA OPENED */

   2528  4 000642   000000 702200 xent  ALTRTN       TSX2  ! X66_AALT

DUMMY_FOUND
 Sect OctLoc
   0     010   0***** ******                                                    ....

CHKMSG
 Sect OctLoc
   0     017   040040 123145   164040 143150   145143 153151   156147 040151      Set checking i
   0     023   156040 160162   157147 162145   163163 040146   157162 040141    n progress for a
   0     027   162145 141040   ****** ******   ****** ******   ****** ******    rea ............
   0     037*  ****** ******                                                    ....

SKIPMSG
 Sect OctLoc
   0     040   040040 123145   164040 143150   145143 153151   156147 040163      Set checking s
   0     044   153151 160160   145144 040146   157162 040151   156144 145170    kipped for index
   0     050   145144 040141   162145 141040   ****** ******   ****** ******    ed area ........
   0     060*  ****** ******   ****** ******                                    ........

SETCNT
 Sect OctLoc
   0     062   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0    3012*  000000 000000   000000 000000   000000 000000   000000 000000    ................

(unnamed)
 Sect OctLoc
   3     000   160162 151157   162040 141156   144040 156145   170164 056040    prior and next.
   3     004   160162 151157   162056 040040   156145 170164   056040 040040    prior.  next.
   3     010   116157 056040                                                    No.

(unnamed)
 Sect OctLoc
   5     000   000000 000000   777000 777777   000021 377640   000040 006000    ............. ..
   5     004   000000 006003   000002 000000   000000 021546   000000 000003    ................
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:50   
   5     010   000006 006000   000007 006000   000020 377640   000017 006000    ................
   5     014   001777 777640   040040 040040   000000 021612   000000 000001    ....    ........
   5     020   000016 006000   000017 006000   000004 000000   000000 021532    ................
   5     024   000000 006014   000000 006000   000023 006000   000007 006000    ................
   5     030   000004 006000   000006 006000   000000 021776   000032 006000    ................
   5     034   000017 006000   000003 000000   000000 000036   400000 000000    ................
   5     040   000000 206000   000036 006000   000037 006000   000000 021534    ................
   5     044   000043 006000   000017 006000   000000 206000                    .#..........
      319     2529
      320     2530    1   END ZIU$CHECK;
      321     2531        %EOD;

PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:51   
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$CHECK.

   Procedure ZIU$CHECK requires 419 words for executable code.
   Procedure ZIU$CHECK requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:52   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:53   
          MINI XREF LISTING

ACSSF
       247**DCL      2323<<ASSIGN
AC_INDX
        28**DCL      2299<<ASSIGN   2300>>DOWHILE  2301<<ASSIGN   2301>>ASSIGN   2303>>IF       2311>>ASSIGN
      2392>>ASSIGN
ALTRTN
      2528**LABEL    2295--CALLALT  2296--CALLALT  2297--CALLALT  2326--CALLALT
ALT_ATBLK IN PROCEDURE GET_ATBLK
      2426**LABEL    2415--CALLALT
ALT_CLOSE
      2526**LABEL    2335--CALLALT  2358--CALLALT  2370--CALLALT  2386--CALLALT
AREA_KEY$
       737**DCL       740--IMP-PTR  2300>>DOWHILE  2303>>IF       2311>>ASSIGN   2392>>ASSIGN   2511>>IF
      2520>>ASSIGN
AREA_KEY_XREF.CHECKED
       745**DCL      2311<<ASSIGN   2392<<ASSIGN   2511>>IF       2520<<ASSIGN
AREA_KEY_XREF.MAX_KEY
       742**DCL      2303>>IF
AREA_KEY_XREF.NAME
       743**DCL      2300>>DOWHILE
ASNSF
       250**DCL      2321<<ASSIGN
ATBLK$
       477**DCL       478--IMP-PTR  2416<<ASSIGN   2417>>IF       2418>>ASSIGN   2420>>ASSIGN   2421>>ASSIGN
      2422>>ASSIGN
ATBLK_PG.AREA_NM
       503**DCL       504--REDEF
ATBLK_PG.FIR_INV_PGNO
       500**DCL      2417>>IF       2420>>ASSIGN
ATBLK_PG.LINE_INFO.LPP
       498**DCL      2422>>ASSIGN
ATBLK_PG.LOW_DBK
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:54   
       501**DCL      2421>>ASSIGN
ATBLK_PG.NUM_DBPG
       485**DCL      2418>>ASSIGN
ATBLK_PG.STATUS
       512**DCL       520--REDEF
BAD_CHAINS
        21**DCL      2462<<ASSIGN   2477<<ASSIGN   2477>>ASSIGN   2495>>IF       2499>>CALLBLT
BREAK_FLAG
       367**DCL      2375>>IF
BUFLNSF
       258**DCL      2308<<ASSIGN   2340<<ASSIGN   2351<<ASSIGN   2380<<ASSIGN   2410<<ASSIGN
BUFSF
       259**DCL      2307<<ASSIGN   2338<<ASSIGN   2350<<ASSIGN   2368<<ASSIGN   2409<<ASSIGN
BUF_PTR
        20**DCL      2349<<ASSIGN   2368>>ASSIGN   2390<<ASSIGN   2390>>ASSIGN
BUILD_MSTR_TBL
      2274**DCL-ENT  2295--CALL
BUILD_RECXREF
      2276**DCL-ENT  2297--CALL
BUILD_SETXREF
      2275**DCL-ENT  2296--CALL
CHECK_PAGES
      2286**DCL-ENT  2389--CALL
CHKMSG
        34**DCL      2338--ASSIGN
CHKMSG.AREANM
        37**DCL      2314<<ASSIGN
CLEAR_COUNTERS
        48**DCL      2505<<ASSIGN   2508<<ASSIGN   2512<<ASSIGN   2516>>IF
COUNTSF
       309**DCL       310--REDEF
DCBSF
       238**DCL      2306<<ASSIGN   2319<<ASSIGN   2328--IF       2337<<ASSIGN   2356<<ASSIGN   2369<<ASSIGN
      2408<<ASSIGN
DUMMY_FOUND
        25**DCL      2489>>IF       2491<<ASSIGN
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:55   
ENCRP_SEEDSF
       267**DCL       268--REDEF    2355<<ASSIGN   2384<<ASSIGN   2412<<ASSIGN
ERRCODESF
       269**DCL       274--REDEF
ERR_INSERT.CNT
       283**DCL      2471<<ASSIGN
ERR_INSERT.TEXT
       284**DCL      2469<<ASSIGN   2470>>CALLBLT  2496<<ASSIGN   2499<<CALLBLT  2500<>CALL     2503<>CALL
F$DCB.ACTPOS
      1408**DCL      1408--REDEF
F$DCB.ARS#
      1382**DCL      1382--REDEF
F$DCB.ATTR
      1401**DCL      1402--REDEF
F$DCB.BORROW
      1416**DCL      1416--REDEF    1416--REDEF    1416--REDEF
F$DCB.DCBNAME.L
      1430**DCL      1430--IMP-SIZ
F$DCB.EOMCHAR#
      1386**DCL      1386--REDEF
F$DCB.FLDID
      1411**DCL      1411--REDEF
F$DCB.FORM$
      1405**DCL      1405--REDEF
F$DCB.FSECT
      1421**DCL      1421--REDEF
F$DCB.FSN#
      1398**DCL      1398--REDEF    1398--REDEF    1399--REDEF
F$DCB.HEADER$
      1404**DCL      1404--REDEF
F$DCB.IXTNSIZE#
      1402**DCL      1402--REDEF
F$DCB.LASTSTA$
      1391**DCL      1391--REDEF
F$DCB.LVL
      1417**DCL      1417--REDEF
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:56   
F$DCB.NAME#.C
      1392**DCL      1392--REDEF
F$DCB.NOEOF
      1414**DCL      1414--REDEF
F$DCB.NRECS#
      1403**DCL      1403--REDEF
F$DCB.NRECX
      1422**DCL      1422--REDEF
F$DCB.OHDR
      1414**DCL      1414--REDEF
F$DCB.ORG#
      1397**DCL      1397--REDEF    2328>>IF
F$DCB.PRECNO
      1420**DCL      1420--REDEF
F$DCB.RCSZ
      1426**DCL      1426--REDEF
F$DCB.RES#
      1393**DCL      1393--REDEF
F$DCB.SETX
      1405**DCL      1405--REDEF
F$DCB.TAB$
      1405**DCL      1405--REDEF
F$DCB.TDA
      1419**DCL      1420--REDEF
F$DCB.WSN#
      1393**DCL      1393--REDEF
FIDSF
       286**DCL      2325<<ASSIGN
FIDSF_RD
       285**DCL       286--REDEF
FULLSF
       256**DCL      2352<<ASSIGN   2381<<ASSIGN   2411<<ASSIGN
FUNSF
       249**DCL      2322<<ASSIGN
GET_ATBLK
      2401**PROC     2335--CALL
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:57   
HELPCODE
       303**DCL       308--REDEF
HIGH_DATA_PG
        18**DCL      2344>>IF       2347>>ASSIGN   2372>>ASSIGN   2418<<ASSIGN   2420<<ASSIGN
I
       341**DCL      2463<<DOINDEX  2464>>ASSIGN   2464>>ASSIGN   2465>>ASSIGN   2465>>ASSIGN   2468>>ASSIGN
ICHKSUM
       368**DCL       369--REDEF
INDX
        22**DCL      2470<<CALLBLT  2471>>ASSIGN
I_O_BUF
       347**DCL      2350--ASSIGN   2368--ASSIGN   2409--ASSIGN   2416--ASSIGN
I_O_BUF$
       346**DCL       347--IMP-PTR  2350>>ASSIGN   2368>>ASSIGN   2409>>ASSIGN   2416>>ASSIGN
I_O_SIZE
       349**DCL      2348<<ASSIGN   2351>>ASSIGN   2364>>DOWHILE  2372<<ASSIGN   2373>>IF       2377>>IF
      2378<<ASSIGN   2379>>ASSIGN   2380>>ASSIGN
KEYSF
       240**DCL      2353<<ASSIGN   2382<<ASSIGN   2413<<ASSIGN
KEYVSF
       241**DCL       246--REDEF
KEYVSF.IDSKEY
       244**DCL      2354<<ASSIGN   2383<<ASSIGN   2414<<ASSIGN
KEYVSF.WD_ONE
       243**DCL       244--REDEF
LOW_DBK
        23**DCL      2421<<ASSIGN
LPP
        24**DCL      2422<<ASSIGN
M$LO
       356**DCL      2306>>ASSIGN   2337>>ASSIGN
MSGCODE
       275**DCL       276--REDEF
MSTR$
       706**DCL       709--IMP-PTR  2469>>ASSIGN   2472>>IF       2472>>IF
MSTR_REF.NAME
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:58   
       714**DCL      2469>>ASSIGN
MSTR_REF.NXTHSH
       712**DCL       713--REDEF
MSTR_REF.PAENT
       718**DCL       719--REDEF
MSTR_REF.PAOFF
       715**DCL       716--REDEF
MSTR_REF.SET.INMODE
       722**DCL      2472>>IF
MSTR_REF.SET.RETYPE
       723**DCL      2472>>IF
NBUFS
      2290**DCL      2344>>IF       2345>>ASSIGN   2368>>ASSIGN   2377>>IF       2378>>ASSIGN   2390>>ASSIGN
NORMAL_RETURN
      2394**LABEL    2376--GOTO
NO_AREAS
       748**DCL      2510>>DOINDEX  2519>>DOINDEX
NO_RECS
       768**DCL      2468>>ASSIGN
NO_SETS
       769**DCL      2463>>DOINDEX
NXTVAL
        27**DCL      2465<<ASSIGN   2466>>IF       2472>>IF       2478>>IF
ORGSF
       239**DCL      2320<<ASSIGN
PRIVAL
        26**DCL      2464<<ASSIGN   2466>>IF       2472>>IF       2478>>IF       2481>>IF
RB
       328**DCL      2366<<ASSIGN
RB_SAVE
      2288**DCL      2343<<ASSIGN   2354>>ASSIGN   2366>>ASSIGN   2371<<ASSIGN   2372>>ASSIGN   2379>>ASSIGN
      2383>>ASSIGN
RE
       329**DCL      2367<<ASSIGN   2371>>ASSIGN
REC$
       327**DCL       350--IMP-PTR
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:59   
REC_DATA_LN
       355**DCL       354--IMP-SIZ
REC_XREF$
       761**DCL       762--IMP-PTR
RE_SAVE
      2289**DCL      2345<<ASSIGN   2347<<ASSIGN   2348>>ASSIGN   2367>>ASSIGN   2379<<ASSIGN
SETCNT
        43**DCL      2518<<ASSIGN
SETCNT.DBK
        46**DCL      2464>>ASSIGN   2465>>ASSIGN
SETCNT.NXT
        45**DCL      2465>>ASSIGN
SETCNT.PR
        44**DCL      2464>>ASSIGN
SET_XREF$
       750**DCL       751--IMP-PTR
SHARESF
       289**DCL      2324<<ASSIGN
SKIPMSG
        38**DCL      2307--ASSIGN   2308--ASSIGN
SKIPMSG.AREANM
        40**DCL      2305<<ASSIGN
STEPCC
       345**DCL      2493<<ASSIGN   2501<<ASSIGN
SYS_FUNC_CHECK
      2284**DCL-ENT  2370--CALL
SYS_FUNC_CLOS
      2281**DCL-ENT  2331--CALL     2394--CALL     2526--CALL
SYS_FUNC_OPEN
      2280**DCL-ENT  2326--CALL
SYS_FUNC_READ
      2282**DCL-ENT  2358--CALL     2386--CALL     2415--CALL
SYS_FUNC_WRIT
      2283**DCL-ENT  2310--CALL     2341--CALL
TYPE_ERRMSG
      2279**DCL-ENT  2330--CALL     2474--CALL     2479--CALL     2482--CALL     2484--CALL     2492--CALL
PL6.E3A0      #001=ZIU$CHECK File=ZIU$CHECK.:ZIC0TSI                             FRI 09/05/97 13:08 Page:60   
      2503--CALL
VFCSF
       255**DCL      2309<<ASSIGN   2339<<ASSIGN
WAITSF
       254**DCL      2357<<ASSIGN   2385<<ASSIGN
X
       344**DCL      2468<<ASSIGN   2469>>ASSIGN   2472>>IF       2472>>IF       2510<<DOINDEX  2511>>IF
      2519<<DOINDEX  2520>>ASSIGN
XREF_BUILT
       770**DCL      2293>>IF
ZERO_SUP
      2278**DCL-ENT  2500--CALL
ZI$DIR.ALTKEY
      2201**DCL      2202--REDEF    2203--REDEF
ZI$DIR.AREAFID
      2167**DCL      2168--REDEF
ZI$DIR.AREA_NM.DCB#
      2234**DCL      2319>>ASSIGN   2356>>ASSIGN   2369>>ASSIGN   2408>>ASSIGN
ZI$DIR.AREA_NM.NAME.TEXT
      2233**DCL      2300>>DOWHILE  2305>>ASSIGN   2314>>ASSIGN   2325>>ASSIGN
ZI$DIR.CHECK_ALL
      2219**DCL      2506>>IF
ZI$DIR.DATE
      2206**DCL      2210--REDEF
ZI$DIR.DEST_SEED
      2162**DCL      2163--REDEF    2164--REDEF
ZI$DIR.ENCP_SEED
      2159**DCL      2160--REDEF    2161--REDEF    2355>>ASSIGN   2384>>ASSIGN   2412>>ASSIGN
ZI$DIR.REPRT_ZERO
      2193**DCL      2194--REDEF
ZI$DIR.SCHFID
      2165**DCL      2166--REDEF
ZI$DIR.TIME
      2211**DCL      2216--REDEF

PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:61   
      322        1        /*T***********************************************************/
      323        2        /*T*                                                         */
      324        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      325        4        /*T*                                                         */
      326        5        /*T***********************************************************/
      327        6        /*
      328        7              TYPE_ERRMSG: CALL SYS_FUNC_MSG, AND SETUP %U1,%U2 AND %U3
      329        8        */
      330        9        TYPE_ERRMSG: PROC(MSG_CODE,MSG_FLAG,U1,U2,U3) AVOID($PR5,$PR6,$PR7);
      331       10
      332       11    1   DCL MSG_CODE SBIN ALIGNED; /* CODE FOR MSG */
      333       12    1   DCL MSG_FLAG SBIN ALIGNED; /* NUMBER OF STARS FOR THE MSG */
      334       13    1   DCL U1 CHAR(30) CALIGNED;
      335       14    1   DCL U2 CHAR(30) CALIGNED;
      336       15    1   DCL U3 CHAR(30) CALIGNED;
      337       16    1   DCL INDX SBIN STATIC ALIGNED; /* LOCAL DATA */
      338       17
      339       18        %INCLUDE ZI_GLOBAL_DBUTIL;
      340      196         %SYS_FUNC;
      341      288         %MISC_DCLS;
      342      341
      343      342    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      344      343
      345      344         /*
      346      345            CHK_SUBMSG: SETUP LENGTH OF SUB MSG
      347      346         */
      348      347    1   CHK_SUBMSG: PROC(II,UX);
      349      348
      350      349    2   DCL II SBIN ALIGNED;
      351      350    2   DCL UX CHAR(30) CALIGNED;
      352      351
      353      352    2       IF ADDR(UX)~=ADDR(NIL) THEN
      354      353    3       DO;
      355      354    3           ERR_INSERT.TEXT(II)=UX;
      356      355    3           CALL INDEX1(INDX,'.',ERR_INSERT.TEXT(II));
      357      356    3           IF INDX > 28 THEN
      358      357    3               CALL INDEX1(INDX,' ',ERR_INSERT.TEXT(II));
PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:62   
      359      358    3           ERR_INSERT.CNT(II)=INDX;
      360      359    3           END;
      361      360    2   END CHK_SUBMSG;
      362      361
      363      362    1       ERRFLGSF = MSG_FLAG;
      364      363    1       ERRCODESF.ERR# = MSG_CODE;
      365      364    1       MSGCODE = ERRCODE_RDEF;
      366      365    1       CALL CHK_SUBMSG(0,U1);
      367      366    1       CALL CHK_SUBMSG(1,U2);
      368      367    1       CALL CHK_SUBMSG(2,U3);
      369      368    1       CALL SYS_FUNC_ERRMSG;
      370      369    1   END TYPE_ERRMSG;
      371      370        %EOD;

PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:63   
--  Include file information  --

   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure TYPE_ERRMSG.

   Procedure TYPE_ERRMSG requires 74 words for executable code.
   Procedure TYPE_ERRMSG requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:64   

 Object Unit name= TYPE_ERRMSG                                File name= ZIU$CHECK.:ZIC0TOU
 UTS= SEP 05 '97 13:08:27.36 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     1      1  TYPE_ERRMSG
    1   DCB   even  none     0      0  M$LO
    2   Proc  even  none    74    112  TYPE_ERRMSG
    3  RoData even  none     9     11  TYPE_ERRMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      XStd       5  TYPE_ERRMSG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           XStd      0 SYS_FUNC_ERRMSG
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_ARET
PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:65   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     BLKLSF                                KEYLSF                                KEYXSF
     DCBSF                                 ORGSF                                 KEYSF
     KEYVSF                                ACSSF                                 NOTIMESF
     FUNSF                                 ASNSF                                 TESTSF
     XTENSIZESF                            DISPSF                                WAITSF
     VFCSF                                 FULLSF                                BKUPSF
     BUFLNSF                               BUFSF                                 SOURCESF
     DESTSF                                DATESF                                TIMESF
     UTSSF                                 DAYSF                                 TSTAMPSF
     ENCRP_SEEDSF                          ERRCODESF                             MSGCODE
     INCL_ERR                              ERR_INSERT                            FIDSF_RD
     ACNT                                  EXISTSF                               SHARESF
     DCBNMSF                               KEYRSF                                NO_KEYSF
     REASGNSF                              CARRY_ATTRIBUTESF                     SUBMESSF
     SPKY_OPNSF                            POSSF                                 ERRFLGSF
     MERGESF                               FSA_FLAG                              RELGSF
     UNUSED                                HELPCODE                              COUNTSF
     INDEXSF                               GAP                                   PSNSF
     ACNTSF                                KEY_SHADWSF                           REC$
     RB                                    RE                                    IE
     IB                                    CNT                                   ICNT
     RCNT                                  SCNT                                  FIRST_SET
     RETCNT                                DMPCNT                                KCNT
     ACNT_IDX                              I                                     J
     K                                     X                                     STEPCC
     I_O_BUF$                              OUT_INDX                              I_O_SIZE
     REC_DATA_LN                           M$LO                                  B$TCB$
     B$ROS$                                B$JIT$                                KEYFID
     I_O_KEY                               RESTART                               BREAK_FLAG
     ICHKSUM                               ITMCNT                                GAP1
PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:66   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:67   


      322        1        /*T***********************************************************/
      323        2        /*T*                                                         */
      324        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      325        4        /*T*                                                         */
      326        5        /*T***********************************************************/
      327        6        /*
      328        7              TYPE_ERRMSG: CALL SYS_FUNC_MSG, AND SETUP %U1,%U2 AND %U3
      329        8        */
      330        9        TYPE_ERRMSG: PROC(MSG_CODE,MSG_FLAG,U1,U2,U3) AVOID($PR5,$PR6,$PR7);

      9  2 000000   000000 700200 xent  TYPE_ERRMSG  TSX0  ! X66_AUTO_5
         2 000001   000014 000005                    ZERO    12,5
         2 000002   000050 710000 2                  TRA     s:362

      331       10
      332       11    1   DCL MSG_CODE SBIN ALIGNED; /* CODE FOR MSG */
      333       12    1   DCL MSG_FLAG SBIN ALIGNED; /* NUMBER OF STARS FOR THE MSG */
      334       13    1   DCL U1 CHAR(30) CALIGNED;
      335       14    1   DCL U2 CHAR(30) CALIGNED;
      336       15    1   DCL U3 CHAR(30) CALIGNED;
      337       16    1   DCL INDX SBIN STATIC ALIGNED; /* LOCAL DATA */
      338       17
      339       18        %INCLUDE ZI_GLOBAL_DBUTIL;
      340      196         %SYS_FUNC;
      341      288         %MISC_DCLS;
      342      341
      343      342    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      344      343
      345      344         /*
      346      345            CHK_SUBMSG: SETUP LENGTH OF SUB MSG
      347      346         */
      348      347    1   CHK_SUBMSG: PROC(II,UX);

    347  2 000003   200010 741300       CHK_SUBMSG   STX1  ! @U3+1,,AUTO

      349      348
PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:68   
      350      349    2   DCL II SBIN ALIGNED;
      351      350    2   DCL UX CHAR(30) CALIGNED;
      352      351
      353      352    2       IF ADDR(UX)~=ADDR(NIL) THEN

    352  2 000004   200012 236100                    LDQ     @UX,,AUTO
         2 000005   000000 116000 3                  CMPQ    0
         2 000006   000047 600000 2                  TZE     s:360

      354      353    3       DO;

      355      354    3           ERR_INSERT.TEXT(II)=UX;

    354  2 000007   200011 470500                    LDP0    @II,,AUTO
         2 000010   000000 235100                    LDA     0,,PR0
         2 000011   000003 735000                    ALS     3
         2 000012   000002 735000                    ALS     2
         2 000013   200012 471500                    LDP1    @UX,,AUTO
         2 000014   040005 100500                    MLR     fill='040'O
         2 000015   100000 000036                    ADSC9   0,,PR1                   cn=0,n=30
         2 000016   000000 200036 xsym               ADSC9   ERR_INSERT,A             cn=1,n=30

      356      355    3           CALL INDEX1(INDX,'.',ERR_INSERT.TEXT(II));

    355  2 000017   000000 235100                    LDA     0,,PR0
         2 000020   000003 735000                    ALS     3
         2 000021   000002 735000                    ALS     2
         2 000022   000000 124405                    SCM     mask='000'O
         2 000023   000000 200036 xsym               ADSC9   ERR_INSERT,A             cn=1,n=30
         2 000024   000001 000001 3                  ADSC9   1                        cn=0,n=1
         2 000025   000000 000000 0                  ARG     INDX

      357      356    3           IF INDX > 28 THEN

    356  2 000026   000000 235000 0                  LDA     INDX
         2 000027   000034 115007                    CMPA    28,DL
         2 000030   000040 604400 2                  TMOZ    s:358
PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:69   

      358      357    3               CALL INDEX1(INDX,' ',ERR_INSERT.TEXT(II));

    357  2 000031   000000 235100                    LDA     0,,PR0
         2 000032   000003 735000                    ALS     3
         2 000033   000002 735000                    ALS     2
         2 000034   000000 124405                    SCM     mask='000'O
         2 000035   000000 200036 xsym               ADSC9   ERR_INSERT,A             cn=1,n=30
         2 000036   000002 000001 3                  ADSC9   2                        cn=0,n=1
         2 000037   000000 000000 0                  ARG     INDX

      359      358    3           ERR_INSERT.CNT(II)=INDX;

    358  2 000040   000000 235100                    LDA     0,,PR0
         2 000041   000003 735000                    ALS     3
         2 000042   000000 236000 0                  LDQ     INDX
         2 000043   000033 736000                    QLS     27
         2 000044   000000 676005 xsym               ERQ     ERR_INSERT,AL
         2 000045   777000 376003                    ANQ     -512,DU
         2 000046   000000 656005 xsym               ERSQ    ERR_INSERT,AL

      360      359    3           END;

      361      360    2   END CHK_SUBMSG;

    360  2 000047   000001 702211                    TSX2  ! 1,X1

      362      361
      363      362    1       ERRFLGSF = MSG_FLAG;

    362  2 000050   200004 470500                    LDP0    @MSG_FLAG,,AUTO
         2 000051   000000 235100                    LDA     0,,PR0
         2 000052   000033 735000                    ALS     27
         2 000053   000000 755000 xsym               STA     ERRFLGSF

      364      363    1       ERRCODESF.ERR# = MSG_CODE;

PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:70   
    363  2 000054   200003 471500                    LDP1    @MSG_CODE,,AUTO
         2 000055   100000 236100                    LDQ     0,,PR1
         2 000056   000003 736000                    QLS     3
         2 000057   000000 676000 xsym               ERQ     ERRCODESF
         2 000060   377770 376007                    ANQ     131064,DL
         2 000061   000000 656000 xsym               ERSQ    ERRCODESF

      365      364    1       MSGCODE = ERRCODE_RDEF;

    364  2 000062   000000 236000 xsym               LDQ     ERRCODESF
         2 000063   000000 756000 xsym               STQ     MSGCODE

      366      365    1       CALL CHK_SUBMSG(0,U1);

    365  2 000064   200005 236100                    LDQ     @U1,,AUTO
         2 000065   200012 756100                    STQ     @II+1,,AUTO
         2 000066   000004 236000 3                  LDQ     4
         2 000067   200011 756100                    STQ     @U3+2,,AUTO
         2 000070   000003 701000 2                  TSX1    CHK_SUBMSG
         2 000071   000000 011000                    NOP     0

      367      366    1       CALL CHK_SUBMSG(1,U2);

    366  2 000072   200006 236100                    LDQ     @U2,,AUTO
         2 000073   200012 756100                    STQ     @II+1,,AUTO
         2 000074   000006 236000 3                  LDQ     6
         2 000075   200011 756100                    STQ     @U3+2,,AUTO
         2 000076   000003 701000 2                  TSX1    CHK_SUBMSG
         2 000077   000000 011000                    NOP     0

      368      367    1       CALL CHK_SUBMSG(2,U3);

    367  2 000100   200007 236100                    LDQ     @U3,,AUTO
         2 000101   200012 756100                    STQ     @II+1,,AUTO
         2 000102   000010 236000 3                  LDQ     8
         2 000103   200011 756100                    STQ     @U3+2,,AUTO
         2 000104   000003 701000 2                  TSX1    CHK_SUBMSG
PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:71   
         2 000105   000000 011000                    NOP     0

      369      368    1       CALL SYS_FUNC_ERRMSG;

    368  2 000106   000003 631400 3                  EPPR1   3
         2 000107   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         2 000110   000000 011000                    NOP     0

      370      369    1   END TYPE_ERRMSG;

    369  2 000111   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   3     000   000000 006014   056040 040040   040040 040040   000000 000000    .....       ....
   3     004   000003 006000   000000 000001   000005 006000   000000 000002    ................
   3     010   000007 006000                                                    ....
      371      370        %EOD;

PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:72   
--  Include file information  --

   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure TYPE_ERRMSG.

   Procedure TYPE_ERRMSG requires 74 words for executable code.
   Procedure TYPE_ERRMSG requires 12 words of local(AUTO) storage.
PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:73   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:74   
          MINI XREF LISTING

CHK_SUBMSG
       347**PROC      365--CALL      366--CALL      367--CALL
COUNTSF
       277**DCL       278--REDEF
ENCRP_SEEDSF
       235**DCL       236--REDEF
ERRCODESF
       237**DCL       242--REDEF
ERRCODESF.ERR#
       240**DCL       363<<ASSIGN
ERRCODE_RDEF
       242**DCL       364>>ASSIGN
ERRFLGSF
       266**DCL       362<<ASSIGN
ERR_INSERT.CNT
       251**DCL       358<<ASSIGN
ERR_INSERT.TEXT
       252**DCL       354<<ASSIGN    355>>CALLBLT   357>>CALLBLT
FIDSF_RD
       253**DCL       254--REDEF
HELPCODE
       271**DCL       276--REDEF
ICHKSUM
       336**DCL       337--REDEF
II IN PROCEDURE CHK_SUBMSG
       349**DCL       347--PROC      354>>ASSIGN    355>>CALLBLT   357>>CALLBLT   358>>ASSIGN
INDX
        16**DCL       355<<CALLBLT   356>>IF        357<<CALLBLT   358>>ASSIGN
I_O_BUF$
       314**DCL       315--IMP-PTR
KEYVSF
       209**DCL       214--REDEF
PL6.E3A0      #002=TYPE_ERRMSG File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:75   
KEYVSF.WD_ONE
       211**DCL       212--REDEF
MSGCODE
       243**DCL       244--REDEF     364<<ASSIGN
MSG_CODE
        11**DCL         9--PROC      363>>ASSIGN
MSG_FLAG
        12**DCL         9--PROC      362>>ASSIGN
REC$
       295**DCL       318--IMP-PTR
REC_DATA_LN
       323**DCL       322--IMP-SIZ
SYS_FUNC_ERRMSG
       342**DCL-ENT   368--CALL
U1
        13**DCL         9--PROC      365<>CALL
U2
        14**DCL         9--PROC      366<>CALL
U3
        15**DCL         9--PROC      367<>CALL
UX IN PROCEDURE CHK_SUBMSG
       350**DCL       347--PROC      352--IF        354>>ASSIGN

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:76   
      372        1        /*T***********************************************************/
      373        2        /*T*                                                         */
      374        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      375        4        /*T*                                                         */
      376        5        /*T***********************************************************/
      377        6        /*
      378        7              CHECK_PAGES: PROCESS A BLOCK OF PAGES. CALLED BY CHECK,DUMP AND LOAD.
      379        8              INPUT:  RB = BEGINING PAGE NUMBER
      380        9                      RE = ENDING PAGE NUMBER
      381       10                      BUF_PTR = INDEX INTO I_O_BUF FOR THE BUFFER ADDRESS
      382       11        */
      383       12        CHECK_PAGES: PROC ALTRET AVOID($PR5,$PR6,$PR7);
      384       13
      385       14    1   DCL NXTVAL SBIN WORD SYMREF ALIGNED;
      386       15    1   DCL PRIVAL SBIN WORD SYMREF ALIGNED;
      387       16    1   DCL HIGH_DATA_PG SBIN WORD SYMREF ALIGNED;
      388       17    1   DCL BUF_PTR SBIN WORD SYMREF ALIGNED;
      389       18    1   DCL DUMMY_FOUND BIT(1) SYMREF ALIGNED;
      390       19
      391       20    1   DCL SET_NUM SBIN WORD STATIC SYMDEF ALIGNED;
      392       21    1   DCL CURR_DBK SBIN WORD STATIC SYMDEF ALIGNED;
      393       22    1   DCL LOCAL_DBK SBIN WORD STATIC SYMDEF ALIGNED;
      394       23    1   DCL CURR_OFFSET SBIN WORD STATIC SYMDEF ALIGNED;
      395       24    1   DCL 1 OFFSET REDEF CURR_OFFSET ALIGNED,
      396       25    1         2 * CHAR(2) CALIGNED,
      397       26    1         2 CHAR2 CHAR(2) CALIGNED;
      398       27    1   DCL OFST_AYSZ SBIN WORD STATIC SYMDEF ALIGNED;
      399       28    1   DCL SP_AVAIL SBIN WORD STATIC SYMDEF ALIGNED;
      400       29    1   DCL OFFSET_ARRAY CHAR(ARRAY_SIZE) BASED CALIGNED;
      401       30    1   DCL SETVAL SBIN WORD STATIC ALIGNED;
      402       31    1   DCL ARRAY_SIZE REDEF SETVAL SBIN WORD ALIGNED;
      403       32    1   DCL ENTRYNO SBIN WORD STATIC ALIGNED;
      404       33    1   DCL LN# REDEF ENTRYNO SBIN WORD ALIGNED; /* USED FOR CURR LINE# */
      405       34    1   DCL NO_ENT SBIN WORD STATIC SYMDEF ALIGNED;
      406       35    1   DCL FIRST_LOWEST SBIN WORD STATIC SYMDEF ALIGNED;
      407       36    1   DCL NO_PTRS SBIN WORD STATIC ALIGNED;
      408       37    1   DCL PTRCNT SBIN WORD STATIC ALIGNED;
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:77   
      409       38    1   DCL NUM_PAGES SBIN WORD STATIC ALIGNED;
      410       39    1   DCL LAST_OFFSET SBIN WORD STATIC ALIGNED;
      411       40    1   DCL PTR_V CHAR(PTR_LEN) BASED CALIGNED;
      412       41
      413       42    1   DCL 1 REC_HEADER STATIC SYMDEF ALIGNED,
      414       43    1         2 TYPE UBIN HALF HALIGNED,
      415       44    1         2 LEN SBIN HALF HALIGNED;
      416       45
      417       46    1   DCL 1 SETCNT(0:499) SYMREF ALIGNED,
      418       47    1         2 PR UBIN WORD ALIGNED ,
      419       48    1         2 NXT UBIN WORD ALIGNED ,
      420       49    1         2 DBK UBIN WORD ALIGNED ;
      421       50    1   DCL Y UBIN STATIC;
      422       51    1   DCL OFFSET$ PTR STATIC;
      423       52
      424       53         %INCLUDE ZI_GLOBAL_DBUTIL;
      425      231         %SYS_FUNC;
      426      323         %MISC_DCLS;
      427      376         %PAREC(STCLASS="STATIC SYMDEF");
      428      403         %INCLUDE ZI$PG_STRUCTS;
      429      506         %DATA_PG;
      430      525         %INCLUDE ZI_DBU_XREF;
      431      692         %XREF_TBLS;
      432      767         %INCLUDE ZI_ERRORS_SUBS;
      433     1287         %INCLUDE CP_6_SUBS;
      434     1827
      435     1828    1   DCL ZERO_SUP ENTRY(3);
      436     1829    1   DCL TYPE_ERRMSG ENTRY(5);
      437     1830
      438     1831    1   DCL B$CHKPAGE ENTRY; /* BMAP TO SETUP INIT VALUES FOR A PAGE */
      439     1832    1   DCL B$CHKREC ENTRY; /* BMAP TO LOAD POINTERS AND ADD THEM TO COUNTER */
      440     1833        %EJECT;
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:78   
      441     1834        /*
      442     1835              PROCESSING STARTS HERE.  NO ALTRETURN POSSIBLE.
      443     1836        */
      444     1837    1       IF RE > HIGH_DATA_PG THEN
      445     1838    1           NUM_PAGES = HIGH_DATA_PG - RB; /* NUMBER OF DATA PAGES TO CHECK */
      446     1839    1       ELSE
      447     1840    1           NUM_PAGES = RE - RB;
      448     1841    2       DO X = 0 TO NUM_PAGES; /* NUM_PAGES = NUM OF PAGES TO CHECK - 1 */
      449     1842    2           CURR_OFFSET = 12;
      450     1843    2           CALL B$CHKPAGE; /* BMAP TO SETUP SOME INIT VALUES, IN ZIU$MRL */
      451     1844    2           Y = OFST_AYSZ-2; /* INDEX TO LAST ENTRY IN ARRAY */
      452     1845         /* OFFSET ARRAY SIZE(OFST_AYSZ) WAS SETUP BY B$CHKPAGE
      453     1846            ALSO, REC$, RECORD HEADER FOR THE 1ST RECORD IN PAGE */
      454     1847    2           LAST_OFFSET = 4084 - OFST_AYSZ - 1;
      455     1848    3           DO WHILE(REC_HEADER.TYPE~=0 AND CURR_OFFSET<LAST_OFFSET);
      456     1849    3               ARRAY_SIZE = OFST_AYSZ;
      457     1850    3               OFFSET$ = PINCRC(DATA$,4096-OFST_AYSZ);
      458     1851    3   SEARCH_OFFSET_ARAY: /* USE INDEX2 FUNCTION, BUT BE VERY CAREFUL */
      459     1852    3               IF OFFSET.CHAR2 = SUBSTR(PINCRC(OFFSET$,Y)->OFFSET_ARRAY,0,2) THEN
      460     1853    3                   LN# = Y;
      461     1854    4               ELSE DO;
      462     1855    4   SEARCH_OFFSET2: ;
      463     1856    4                   CALL INDEX(LN#,OFFSET.CHAR2,OFFSET$->OFFSET_ARRAY);
      464     1857    5                   IF MOD(LN#,2)>0 THEN DO; /* LN# SHOULD NOT BE ODD */
      465     1858    5                       ARRAY_SIZE = ARRAY_SIZE - LN# - 1;
      466     1859    5                       OFFSET$ = PINCRC(DATA$,4096-ARRAY_SIZE);
      467     1860    5                       GOTO SEARCH_OFFSET2;
      468     1861    5                       END;
      469     1862    4                   END;
      470     1863    3               Y = Y - 2;
      471     1864    3               IF LN#=ARRAY_SIZE THEN /* OFFSET NOT FOUND IN ARRAY */
      472     1865    4               DO;
      473     1866    4                   CALL BINCHAR(ERR_INSERT.TEXT(0),RB+X);
      474     1867    4                   CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);
      475     1868    4                   CALL BINCHAR(ERR_INSERT.TEXT(1),CURR_OFFSET);
      476     1869    4                   CALL ZERO_SUP(ERR_INSERT.TEXT(1),30,'1'B);
      477     1870    4                   CALL TYPE_ERRMSG(DBU#OFFSET,3,ERR_INSERT.TEXT(0),ERR_INSERT.TEXT(1))
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:79   
              1870                            ;
      478     1871    4                   GOTO NEXT_PAGE;
      479     1872    4                   END;
      480     1873    3               I = (ARRAY_SIZE-LN#)/2; /* I = LINE NUMBER + 1 */
      481     1874    3               IF REC_HEADER.TYPE > 4000 OR TYPE.MSTRINDX(REC_HEADER.TYPE)<0 THEN
      482     1875    4               DO;
      483     1876    4                   CALL BINCHAR(ERR_INSERT.TEXT(0),RB+X);
      484     1877    4                   CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);
      485     1878    4                   CALL BINCHAR(ERR_INSERT.TEXT(1),I-1);
      486     1879    4                   CALL ZERO_SUP(ERR_INSERT.TEXT(1),30,'1'B);
      487     1880    4                   CALL TYPE_ERRMSG(DBU#RECERR,3,ERR_INSERT.TEXT(0),ERR_INSERT.TEXT(1))
              1880                            ;
      488     1881    4                   GOTO NEXT_PAGE;
      489     1882    4                   END;
      490     1883    3               MSTR_INDX = TYPE.MSTRINDX(REC_HEADER.TYPE);
      491     1884         /*
      492     1885            CALL B$CHKREC TO PROCESS ALL SETS THRU THIS RECORD
      493     1886            AND ADD ALL POINTERS TO THE COUNTERS.
      494     1887         */
      495     1888    3               CALL B$CHKREC; /* ENTDEF IN ZIU$MRL */
      496     1889    3               IF KEY_LEN > 0 THEN /* REC IS A *PA_REC */
      497     1890    3                   CALL PROCESS_PAREC;
      498     1891    3               END; /* RECORD LOOP FOR A PAGE */
      499     1892    2           IF SP_AVAIL~=4084-CURR_OFFSET-OFST_AYSZ THEN
      500     1893    3           DO; /* SPACE AVAIL COUNT IS WRONG */
      501     1894    3               CALL BINCHAR(ERR_INSERT.TEXT(0),RB+X);
      502     1895    3               CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);
      503     1896    3               CALL TYPE_ERRMSG(DBU#PGSIZE,3,ERR_INSERT.TEXT(0));
      504     1897    3               END;
      505     1898    2   NEXT_PAGE: ;
      506     1899    2           END; /* PAGE LOOP */
      507     1900    1       RETURN;
      508     1901        %EJECT;
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:80   
      509     1902        /*
      510     1903                 PROCESSING OF *PA_REC   FOR CHECKING
      511     1904        */
      512     1905    1   PROCESS_PAREC: PROC;
      513     1906
      514     1907    2       PTRCNT = 0;
      515     1908    2       SETVAL = 0; /* INIT TEMP STORAGE FOR POINTERS LOADED */
      516     1909         /* ENTRY$,PTR_LEN AND KEY_LEN ARE SETUP BY B$CHKREC */
      517     1910         /* AS WELL AS  LOWEST_PA AND FIRST_PA. */
      518     1911    3       DO ENTRYNO = 1 TO NO_ENT;
      519     1912    3           IF PA_ENTRY.C = 1 THEN
      520     1913    4           DO; /* HANDLE THE POINTER GROUP */
      521     1914    4               ENTRY$ = PINCRC(ENTRY$,2); /* Bump up to ptr of group offset */
      522     1915    4               PINCRC(ADDR(SETVAL),4-PTR_LEN)->PTR_V=ENTRY$->PTR_V;
      523     1916    4               GROUP$=PINCRC(REC$,SETVAL);
      524     1917    4               NO_PTRS = PA_GROUP.NO_GROUPS;
      525     1918    4               GROUP$ = PINCRW(GROUP$,1);
      526     1919    5               DO J = 1 TO NO_PTRS;
      527     1920    5                   IF J=1 AND ENTRYNO=1 AND FIRST_LOWEST=1 AND
      528     1921    5                      MSTR_REF.SET.OWNER_TYPE(SET_NUM+NO_RECS)=PINCRW(GROUP$,-1)->
              1921                               PA_GROUP.TYPE THEN
      529     1922    5                       DUMMY_FOUND=%YES#;
      530     1923    5                   ELSE
      531     1924    6                   DO;
      532     1925    6                       PINCRC(ADDR(SETVAL),4-PTR_LEN)->PTR_V=GROUP$->PTR_V;
      533     1926    6                       SETCNT.PR(SET_NUM) = SETCNT.PR(SET_NUM) + SETVAL;
      534     1927    6                       SETCNT.NXT(SET_NUM) = SETCNT.NXT(SET_NUM) + SETVAL;
      535     1928    6                       PTRCNT = PTRCNT + 1; /* Keep track of number of ptrs */
      536     1929    6                       GROUP$ = PINCRC(GROUP$,2+PTR_LEN);
      537     1930    6                       END;
      538     1931    5                   END;
      539     1932    4               END;
      540     1933    3           ELSE /* NO POINTER GROUP FOR THIS ENTRY */
      541     1934    3               IF ENTRYNO=1 AND FIRST_LOWEST=1 AND
              1934                        /* 1ST ENTRY IN PA_FIL AND LOWEST LEVEL */
      542     1935    3                  MSTR_REF.SET.OWNER_TYPE(SET_NUM+NO_RECS)=PA_ENTRY.TYPE THEN
      543     1936    4               DO;
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:81   
      544     1937    4                   DUMMY_FOUND=%YES#; /* SET FLAG, WHEN 1ST PTR POINTS TO OWNER */
      545     1938    4                   ENTRY$=PINCRC(ENTRY$,2); /* SKIP THIS ENTRY PTR */
      546     1939    4                   END;
      547     1940    3               ELSE
      548     1941    4               DO;
      549     1942    4                   ENTRY$ = PINCRC(ENTRY$,2); /* BUMP TO ENTRY POINTER */
      550     1943    4                   PINCRC(ADDR(SETVAL),4-PTR_LEN)->PTR_V=ENTRY$->PTR_V;
      551     1944    4                   SETCNT.NXT(SET_NUM) = SETCNT.NXT(SET_NUM) + SETVAL;
      552     1945    4                   SETCNT.PR(SET_NUM) = SETCNT.PR(SET_NUM) + SETVAL;
      553     1946    4                   PTRCNT = PTRCNT+1;
      554     1947    4                   END;
      555     1948    3           ENTRY$ = PINCRC(ENTRY$,KEY_LEN+PTR_LEN); /* Bump up to next entry */
      556     1949    3           END;
      557     1950
      558     1951    2       IF NXTVAL ~= PRIVAL THEN /* IF HIGHEST PA, NEXT=OWNER */
      559     1952    3       DO; /* NOTE: PRIVAL CONTAINS OWNER PTR OF THE RECORD */
      560     1953    3           SETCNT.NXT(SET_NUM) = SETCNT.NXT(SET_NUM) + PRIVAL;
      561     1954    3           SETCNT.PR(SET_NUM) = SETCNT.PR(SET_NUM) + PRIVAL;
      562     1955    3           PTRCNT = PTRCNT + 1; /* ADD THIS DBK TO COUNTER AGAIN */
      563     1956    3           END;
      564     1957    2       SETCNT.DBK(SET_NUM) = SETCNT.DBK(SET_NUM) + PTRCNT*CURR_DBK;
      565     1958    2       RETURN;
      566     1959    2   END PROCESS_PAREC; /* INTERNAL */
      567     1960
      568     1961    1   END CHECK_PAGES; /* EXTERNAL PROC END */

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:82   
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CHECK_PAGES.

   Procedure CHECK_PAGES requires 337 words for executable code.
   Procedure CHECK_PAGES requires 8 words of local(AUTO) storage.

    No errors detected in file ZIU$CHECK.:ZIC0TSI    .

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:83   

 Object Unit name= CHECK_PAGES                                File name= ZIU$CHECK.:ZIC0TOU
 UTS= SEP 05 '97 13:08:30.76 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    21     25  CHECK_PAGES
    1   DCB   even  none     0      0  M$LO
    2   Proc  even  none   337    521  CHECK_PAGES
    3  RoData even  none    28     34  CHECK_PAGES

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      XStd       0  CHECK_PAGES

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  SET_NUM                            0      1  CURR_DBK
    0      2  LOCAL_DBK                          0      3  CURR_OFFSET
    0      4  OFST_AYSZ                          0      5  SP_AVAIL
    0     10  NO_ENT                             0     11  FIRST_LOWEST
    0     16  REC_HEADER                         0     21  ENTRY$
    0     22  GROUP$                             0     23  PTR_LEN
    0     24  KEY_LEN
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:84   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           XStd      0 B$CHKPAGE
         yes           XStd      5 TYPE_ERRMSG
         yes           XStd      3 ZERO_SUP
         yes           XStd      0 B$CHKREC
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NXTVAL                                PRIVAL                                HIGH_DATA_PG
     BUF_PTR                               DUMMY_FOUND                           SETCNT
     BLKLSF                                KEYLSF                                KEYXSF
     DCBSF                                 ORGSF                                 KEYSF
     KEYVSF                                ACSSF                                 NOTIMESF
     FUNSF                                 ASNSF                                 TESTSF
     XTENSIZESF                            DISPSF                                WAITSF
     VFCSF                                 FULLSF                                BKUPSF
     BUFLNSF                               BUFSF                                 SOURCESF
     DESTSF                                DATESF                                TIMESF
     UTSSF                                 DAYSF                                 TSTAMPSF
     ENCRP_SEEDSF                          ERRCODESF                             MSGCODE
     INCL_ERR                              ERR_INSERT                            FIDSF_RD
     ACNT                                  EXISTSF                               SHARESF
     DCBNMSF                               KEYRSF                                NO_KEYSF
     REASGNSF                              CARRY_ATTRIBUTESF                     SUBMESSF
     SPKY_OPNSF                            POSSF                                 ERRFLGSF
     MERGESF                               FSA_FLAG                              RELGSF
     UNUSED                                HELPCODE                              COUNTSF
     INDEXSF                               GAP                                   PSNSF
     ACNTSF                                KEY_SHADWSF                           REC$
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:85   
     RB                                    RE                                    IE
     IB                                    CNT                                   ICNT
     RCNT                                  SCNT                                  FIRST_SET
     RETCNT                                DMPCNT                                KCNT
     ACNT_IDX                              I                                     J
     K                                     X                                     STEPCC
     I_O_BUF$                              OUT_INDX                              I_O_SIZE
     REC_DATA_LN                           M$LO                                  B$TCB$
     B$ROS$                                B$JIT$                                KEYFID
     I_O_KEY                               RESTART                               BREAK_FLAG
     ICHKSUM                               ITMCNT                                GAP1
     DATA$                                 TYPE                                  MSTR$
     NXT_MSLOT                             MAX_MSLOT                             MSTR_INDX
     HASHTBL                               HASHINDX                              LOC_MODE
     AREA_KEY$                             NO_AREAS                              GLBL_PTR_SZ
     SET_XREF$                             NXT_SSLOT                             MAX_SSLOT
     REC_XREF$                             NXT_RSLOT                             MAX_RSLOT
     NO_RECS                               NO_SETS                               XREF_BUILT
     TYPESET                               TYPEREC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:86   


      372        1        /*T***********************************************************/
      373        2        /*T*                                                         */
      374        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      375        4        /*T*                                                         */
      376        5        /*T***********************************************************/
      377        6        /*
      378        7              CHECK_PAGES: PROCESS A BLOCK OF PAGES. CALLED BY CHECK,DUMP AND LOAD.
      379        8              INPUT:  RB = BEGINING PAGE NUMBER
      380        9                      RE = ENDING PAGE NUMBER
      381       10                      BUF_PTR = INDEX INTO I_O_BUF FOR THE BUFFER ADDRESS
      382       11        */
      383       12        CHECK_PAGES: PROC ALTRET AVOID($PR5,$PR6,$PR7);

     12  2 000000   000000 700200 xent  CHECK_PAGES  TSX0  ! X66_AUTO_0
         2 000001   000010 000000                    ZERO    8,0

      384       13
      385       14    1   DCL NXTVAL SBIN WORD SYMREF ALIGNED;
      386       15    1   DCL PRIVAL SBIN WORD SYMREF ALIGNED;
      387       16    1   DCL HIGH_DATA_PG SBIN WORD SYMREF ALIGNED;
      388       17    1   DCL BUF_PTR SBIN WORD SYMREF ALIGNED;
      389       18    1   DCL DUMMY_FOUND BIT(1) SYMREF ALIGNED;
      390       19
      391       20    1   DCL SET_NUM SBIN WORD STATIC SYMDEF ALIGNED;
      392       21    1   DCL CURR_DBK SBIN WORD STATIC SYMDEF ALIGNED;
      393       22    1   DCL LOCAL_DBK SBIN WORD STATIC SYMDEF ALIGNED;
      394       23    1   DCL CURR_OFFSET SBIN WORD STATIC SYMDEF ALIGNED;
      395       24    1   DCL 1 OFFSET REDEF CURR_OFFSET ALIGNED,
      396       25    1         2 * CHAR(2) CALIGNED,
      397       26    1         2 CHAR2 CHAR(2) CALIGNED;
      398       27    1   DCL OFST_AYSZ SBIN WORD STATIC SYMDEF ALIGNED;
      399       28    1   DCL SP_AVAIL SBIN WORD STATIC SYMDEF ALIGNED;
      400       29    1   DCL OFFSET_ARRAY CHAR(ARRAY_SIZE) BASED CALIGNED;
      401       30    1   DCL SETVAL SBIN WORD STATIC ALIGNED;
      402       31    1   DCL ARRAY_SIZE REDEF SETVAL SBIN WORD ALIGNED;
      403       32    1   DCL ENTRYNO SBIN WORD STATIC ALIGNED;
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:87   
      404       33    1   DCL LN# REDEF ENTRYNO SBIN WORD ALIGNED; /* USED FOR CURR LINE# */
      405       34    1   DCL NO_ENT SBIN WORD STATIC SYMDEF ALIGNED;
      406       35    1   DCL FIRST_LOWEST SBIN WORD STATIC SYMDEF ALIGNED;
      407       36    1   DCL NO_PTRS SBIN WORD STATIC ALIGNED;
      408       37    1   DCL PTRCNT SBIN WORD STATIC ALIGNED;
      409       38    1   DCL NUM_PAGES SBIN WORD STATIC ALIGNED;
      410       39    1   DCL LAST_OFFSET SBIN WORD STATIC ALIGNED;
      411       40    1   DCL PTR_V CHAR(PTR_LEN) BASED CALIGNED;
      412       41
      413       42    1   DCL 1 REC_HEADER STATIC SYMDEF ALIGNED,
      414       43    1         2 TYPE UBIN HALF HALIGNED,
      415       44    1         2 LEN SBIN HALF HALIGNED;
      416       45
      417       46    1   DCL 1 SETCNT(0:499) SYMREF ALIGNED,
      418       47    1         2 PR UBIN WORD ALIGNED ,
      419       48    1         2 NXT UBIN WORD ALIGNED ,
      420       49    1         2 DBK UBIN WORD ALIGNED ;
      421       50    1   DCL Y UBIN STATIC;
      422       51    1   DCL OFFSET$ PTR STATIC;
      423       52
      424       53         %INCLUDE ZI_GLOBAL_DBUTIL;
      425      231         %SYS_FUNC;
      426      323         %MISC_DCLS;
      427      376         %PAREC(STCLASS="STATIC SYMDEF");
      428      403         %INCLUDE ZI$PG_STRUCTS;
      429      506         %DATA_PG;
      430      525         %INCLUDE ZI_DBU_XREF;
      431      692         %XREF_TBLS;
      432      767         %INCLUDE ZI_ERRORS_SUBS;
      433     1287         %INCLUDE CP_6_SUBS;
      434     1827
      435     1828    1   DCL ZERO_SUP ENTRY(3);
      436     1829    1   DCL TYPE_ERRMSG ENTRY(5);
      437     1830
      438     1831    1   DCL B$CHKPAGE ENTRY; /* BMAP TO SETUP INIT VALUES FOR A PAGE */
      439     1832    1   DCL B$CHKREC ENTRY; /* BMAP TO LOAD POINTERS AND ADD THEM TO COUNTER */
      440     1833        %EJECT;
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:88   
      441     1834        /*
      442     1835              PROCESSING STARTS HERE.  NO ALTRETURN POSSIBLE.
      443     1836        */
      444     1837    1       IF RE > HIGH_DATA_PG THEN

   1837  2 000002   000000 236000 xsym               LDQ     RE
         2 000003   000006 604000 2                  TMI     s:1838
         2 000004   000000 116000 xsym               CMPQ    HIGH_DATA_PG
         2 000005   000012 604400 2                  TMOZ    s:1840

      445     1838    1           NUM_PAGES = HIGH_DATA_PG - RB; /* NUMBER OF DATA PAGES TO CHECK */

   1838  2 000006   000000 236000 xsym               LDQ     HIGH_DATA_PG
         2 000007   000000 136000 xsym               SBLQ    RB
         2 000010   000014 756000 0                  STQ     NUM_PAGES
         2 000011   000014 710000 2                  TRA     s:1841

      446     1839    1       ELSE
      447     1840    1           NUM_PAGES = RE - RB;

   1840  2 000012   000000 136000 xsym               SBLQ    RB
         2 000013   000014 756000 0                  STQ     NUM_PAGES

      448     1841    2       DO X = 0 TO NUM_PAGES; /* NUM_PAGES = NUM OF PAGES TO CHECK - 1 */

   1841  2 000014   000000 450000 xsym               STZ     X
         2 000015   000255 710000 2                  TRA     NEXT_PAGE+1

      449     1842    2           CURR_OFFSET = 12;

   1842  2 000016   000014 235007                    LDA     12,DL
         2 000017   000003 755000 0                  STA     CURR_OFFSET

      450     1843    2           CALL B$CHKPAGE; /* BMAP TO SETUP SOME INIT VALUES, IN ZIU$MRL */

   1843  2 000020   000000 631400 3                  EPPR1   0
         2 000021   000000 701000 xent               TSX1    B$CHKPAGE
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:89   
         2 000022   000000 011000                    NOP     0

      451     1844    2           Y = OFST_AYSZ-2; /* INDEX TO LAST ENTRY IN ARRAY */

   1844  2 000023   000004 235000 0                  LDA     OFST_AYSZ
         2 000024   000002 135007                    SBLA    2,DL
         2 000025   000017 755000 0                  STA     Y

      452     1845         /* OFFSET ARRAY SIZE(OFST_AYSZ) WAS SETUP BY B$CHKPAGE
      453     1846            ALSO, REC$, RECORD HEADER FOR THE 1ST RECORD IN PAGE */
      454     1847    2           LAST_OFFSET = 4084 - OFST_AYSZ - 1;

   1847  2 000026   007763 236007                    LDQ     4083,DL
         2 000027   000004 136000 0                  SBLQ    OFST_AYSZ
         2 000030   000015 756000 0                  STQ     LAST_OFFSET

      455     1848    3           DO WHILE(REC_HEADER.TYPE~=0 AND CURR_OFFSET<LAST_OFFSET);

   1848  2 000031   000223 710000 2                  TRA     s:1891

      456     1849    3               ARRAY_SIZE = OFST_AYSZ;

   1849  2 000032   000004 235000 0                  LDA     OFST_AYSZ
         2 000033   000006 755000 0                  STA     SETVAL

      457     1850    3               OFFSET$ = PINCRC(DATA$,4096-OFST_AYSZ);

   1850  2 000034   010000 236007                    LDQ     4096,DL
         2 000035   000004 136000 0                  SBLQ    OFST_AYSZ
         2 000036   000020 736000                    QLS     16
         2 000037   000000 036000 xsym               ADLQ    DATA$
         2 000040   000020 756000 0                  STQ     OFFSET$

      458     1851    3   SEARCH_OFFSET_ARAY: /* USE INDEX2 FUNCTION, BUT BE VERY CAREFUL */
      459     1852    3               IF OFFSET.CHAR2 = SUBSTR(PINCRC(OFFSET$,Y)->OFFSET_ARRAY,0,2) THEN

   1852  2 000041   000020 470400 0     SEARCH_OFFS* LDP0    OFFSET$
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:90   
         2 000042   000017 235000 0                  LDA     Y
         2 000043   040105 106400                    CMPC    fill='040'O
         2 000044   000003 400002 0                  ADSC9   CURR_OFFSET              cn=2,n=2
         2 000045   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2
         2 000046   000051 601000 2                  TNZ     SEARCH_OFFSET2

      460     1853    3                   LN# = Y;

   1853  2 000047   000007 755000 0                  STA     ENTRYNO
         2 000050   000100 710000 2                  TRA     s:1863

      461     1854    4               ELSE DO;

      462     1855    4   SEARCH_OFFSET2: ;

   1855  2 000051                       SEARCH_OFFS* null
      463     1856    4                   CALL INDEX(LN#,OFFSET.CHAR2,OFFSET$->OFFSET_ARRAY);

   1856  2 000051   000020 470400 0                  LDP0    OFFSET$
         2 000052   000006 720000 0                  LXL0    SETVAL
         2 000053   000000 120540                    SCD
         2 000054   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000055   000003 400002 0                  ADSC9   CURR_OFFSET              cn=2,n=2
         2 000056   000007 000000 0                  ARG     ENTRYNO
         2 000057   000061 607000 2                  TTF     s:1857
         2 000060   000007 054000 0                  AOS     ENTRYNO

      464     1857    5                   IF MOD(LN#,2)>0 THEN DO; /* LN# SHOULD NOT BE ODD */

   1857  2 000061   000007 236000 0                  LDQ     ENTRYNO
         2 000062   000002 506007                    DIV     2,DL
         2 000063   000044 733000                    LRS     36
         2 000064   000000 116003                    CMPQ    0,DU
         2 000065   000100 604400 2                  TMOZ    s:1863

      465     1858    5                       ARRAY_SIZE = ARRAY_SIZE - LN# - 1;

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:91   
   1858  2 000066   000006 236000 0                  LDQ     SETVAL
         2 000067   000007 136000 0                  SBLQ    ENTRYNO
         2 000070   000001 136007                    SBLQ    1,DL
         2 000071   000006 756000 0                  STQ     SETVAL

      466     1859    5                       OFFSET$ = PINCRC(DATA$,4096-ARRAY_SIZE);

   1859  2 000072   000020 736000                    QLS     16
         2 000073   000001 676000 3                  ERQ     1
         2 000074   000002 036000 3                  ADLQ    2
         2 000075   000000 036000 xsym               ADLQ    DATA$
         2 000076   000020 756000 0                  STQ     OFFSET$

      467     1860    5                       GOTO SEARCH_OFFSET2;

   1860  2 000077   000051 710000 2                  TRA     SEARCH_OFFSET2

      468     1861    5                       END;
      469     1862    4                   END;
      470     1863    3               Y = Y - 2;

   1863  2 000100   000017 235000 0                  LDA     Y
         2 000101   000002 135007                    SBLA    2,DL
         2 000102   000017 755000 0                  STA     Y

      471     1864    3               IF LN#=ARRAY_SIZE THEN /* OFFSET NOT FOUND IN ARRAY */

   1864  2 000103   000007 236000 0                  LDQ     ENTRYNO
         2 000104   000006 116000 0                  CMPQ    SETVAL
         2 000105   000134 601000 2                  TNZ     s:1873

      472     1865    4               DO;

      473     1866    4                   CALL BINCHAR(ERR_INSERT.TEXT(0),RB+X);

   1866  2 000106   000000 236000 xsym               LDQ     RB
         2 000107   000000 036000 xsym               ADLQ    X
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:92   
         2 000110   200006 756100                    STQ     6,,AUTO
         2 000111   000000 301500                    BTD
         2 000112   200006 000004                    NDSC9   6,,AUTO                  cn=0,s=lsgnf,sf=0,n=4
         2 000113   000000 230036 xsym               NDSC9   ERR_INSERT               cn=1,s=nosgn,sf=0,n=30

      474     1867    4                   CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);

   1867  2 000114   000006 630400 3                  EPPR0   6
         2 000115   000003 631400 3                  EPPR1   3
         2 000116   000000 701000 xent               TSX1    ZERO_SUP
         2 000117   000000 011000                    NOP     0

      475     1868    4                   CALL BINCHAR(ERR_INSERT.TEXT(1),CURR_OFFSET);

   1868  2 000120   000000 301400                    BTD
         2 000121   000003 000004 0                  NDSC9   CURR_OFFSET              cn=0,s=lsgnf,sf=0,n=4
         2 000122   000010 230036 xsym               NDSC9   ERR_INSERT+8             cn=1,s=nosgn,sf=0,n=30

      476     1869    4                   CALL ZERO_SUP(ERR_INSERT.TEXT(1),30,'1'B);

   1869  2 000123   000011 630400 3                  EPPR0   9
         2 000124   000003 631400 3                  EPPR1   3
         2 000125   000000 701000 xent               TSX1    ZERO_SUP
         2 000126   000000 011000                    NOP     0

      477     1870    4                  CALL TYPE_ERRMSG(DBU#OFFSET,3,ERR_INSERT.TEXT(0),ERR_INSERT.TEXT(1))
              1870                            ;

   1870  2 000127   000017 630400 3                  EPPR0   15
         2 000130   000014 631400 3                  EPPR1   12
         2 000131   000000 701000 xent               TSX1    TYPE_ERRMSG
         2 000132   000000 011000                    NOP     0

      478     1871    4                   GOTO NEXT_PAGE;

   1871  2 000133   000254 710000 2                  TRA     NEXT_PAGE

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:93   
      479     1872    4                   END;
      480     1873    3               I = (ARRAY_SIZE-LN#)/2; /* I = LINE NUMBER + 1 */

   1873  2 000134   000006 236000 0                  LDQ     SETVAL
         2 000135   000007 136000 0                  SBLQ    ENTRYNO
         2 000136   000002 506007                    DIV     2,DL
         2 000137   000000 756000 xsym               STQ     I

      481     1874    3               IF REC_HEADER.TYPE > 4000 OR TYPE.MSTRINDX(REC_HEADER.TYPE)<0 THEN

   1874  2 000140   000016 220000 0                  LDX0    REC_HEADER
         2 000141   007641 100003                    CMPX0   4001,DU
         2 000142   000155 603000 2                  TRC     s:1876
         2 000143   000016 235000 0                  LDA     REC_HEADER
         2 000144   777777 375003                    ANA     -1,DU
         2 000145   000021 771000                    ARL     17
         2 000146   000100 100405                    MLR     fill='000'O
         2 000147   000000 000002 xsym               ADSC9   TYPE,A                   cn=0,n=2
         2 000150   200006 000004                    ADSC9   6,,AUTO                  cn=0,n=4
         2 000151   200006 236100                    LDQ     6,,AUTO
         2 000152   000022 732000                    QRS     18
         2 000153   000000 116003                    CMPQ    0,DU
         2 000154   000206 605000 2                  TPL     s:1883

      482     1875    4               DO;

      483     1876    4                   CALL BINCHAR(ERR_INSERT.TEXT(0),RB+X);

   1876  2 000155   000000 236000 xsym               LDQ     RB
         2 000156   000000 036000 xsym               ADLQ    X
         2 000157   200006 756100                    STQ     6,,AUTO
         2 000160   000000 301500                    BTD
         2 000161   200006 000004                    NDSC9   6,,AUTO                  cn=0,s=lsgnf,sf=0,n=4
         2 000162   000000 230036 xsym               NDSC9   ERR_INSERT               cn=1,s=nosgn,sf=0,n=30

      484     1877    4                   CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:94   
   1877  2 000163   000006 630400 3                  EPPR0   6
         2 000164   000003 631400 3                  EPPR1   3
         2 000165   000000 701000 xent               TSX1    ZERO_SUP
         2 000166   000000 011000                    NOP     0

      485     1878    4                   CALL BINCHAR(ERR_INSERT.TEXT(1),I-1);

   1878  2 000167   000000 235000 xsym               LDA     I
         2 000170   000001 135007                    SBLA    1,DL
         2 000171   200006 755100                    STA     6,,AUTO
         2 000172   000000 301500                    BTD
         2 000173   200006 000004                    NDSC9   6,,AUTO                  cn=0,s=lsgnf,sf=0,n=4
         2 000174   000010 230036 xsym               NDSC9   ERR_INSERT+8             cn=1,s=nosgn,sf=0,n=30

      486     1879    4                   CALL ZERO_SUP(ERR_INSERT.TEXT(1),30,'1'B);

   1879  2 000175   000011 630400 3                  EPPR0   9
         2 000176   000003 631400 3                  EPPR1   3
         2 000177   000000 701000 xent               TSX1    ZERO_SUP
         2 000200   000000 011000                    NOP     0

      487     1880    4                  CALL TYPE_ERRMSG(DBU#RECERR,3,ERR_INSERT.TEXT(0),ERR_INSERT.TEXT(1))
              1880                            ;

   1880  2 000201   000024 630400 3                  EPPR0   20
         2 000202   000014 631400 3                  EPPR1   12
         2 000203   000000 701000 xent               TSX1    TYPE_ERRMSG
         2 000204   000000 011000                    NOP     0

      488     1881    4                   GOTO NEXT_PAGE;

   1881  2 000205   000254 710000 2                  TRA     NEXT_PAGE

      489     1882    4                   END;
      490     1883    3               MSTR_INDX = TYPE.MSTRINDX(REC_HEADER.TYPE);

   1883  2 000206   000100 100405                    MLR     fill='000'O
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:95   
         2 000207   000000 000002 xsym               ADSC9   TYPE,A                   cn=0,n=2
         2 000210   200006 000004                    ADSC9   6,,AUTO                  cn=0,n=4
         2 000211   200006 236100                    LDQ     6,,AUTO
         2 000212   000022 732000                    QRS     18
         2 000213   000000 756000 xsym               STQ     MSTR_INDX

      491     1884         /*
      492     1885            CALL B$CHKREC TO PROCESS ALL SETS THRU THIS RECORD
      493     1886            AND ADD ALL POINTERS TO THE COUNTERS.
      494     1887         */
      495     1888    3               CALL B$CHKREC; /* ENTDEF IN ZIU$MRL */

   1888  2 000214   000000 631400 3                  EPPR1   0
         2 000215   000000 701000 xent               TSX1    B$CHKREC
         2 000216   000000 011000                    NOP     0

      496     1889    3               IF KEY_LEN > 0 THEN /* REC IS A *PA_REC */

   1889  2 000217   000024 235000 0                  LDA     KEY_LEN
         2 000220   000223 604400 2                  TMOZ    s:1891

      497     1890    3                   CALL PROCESS_PAREC;

   1890  2 000221   000261 701000 2                  TSX1    PROCESS_PAREC
         2 000222   000000 011000                    NOP     0

      498     1891    3               END; /* RECORD LOOP FOR A PAGE */

   1891  2 000223   000016 220000 0                  LDX0    REC_HEADER
         2 000224   000230 600000 2                  TZE     s:1892
         2 000225   000003 236000 0                  LDQ     CURR_OFFSET
         2 000226   000015 116000 0                  CMPQ    LAST_OFFSET
         2 000227   000032 604000 2                  TMI     s:1849

      499     1892    2           IF SP_AVAIL~=4084-CURR_OFFSET-OFST_AYSZ THEN

   1892  2 000230   000003 236000 0                  LDQ     CURR_OFFSET
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:96   
         2 000231   000004 036000 0                  ADLQ    OFST_AYSZ
         2 000232   000001 676000 3                  ERQ     1
         2 000233   007765 036007                    ADLQ    4085,DL
         2 000234   000005 116000 0                  CMPQ    SP_AVAIL
         2 000235   000254 600000 2                  TZE     NEXT_PAGE

      500     1893    3           DO; /* SPACE AVAIL COUNT IS WRONG */

      501     1894    3               CALL BINCHAR(ERR_INSERT.TEXT(0),RB+X);

   1894  2 000236   000000 236000 xsym               LDQ     RB
         2 000237   000000 036000 xsym               ADLQ    X
         2 000240   200006 756100                    STQ     6,,AUTO
         2 000241   000000 301500                    BTD
         2 000242   200006 000004                    NDSC9   6,,AUTO                  cn=0,s=lsgnf,sf=0,n=4
         2 000243   000000 230036 xsym               NDSC9   ERR_INSERT               cn=1,s=nosgn,sf=0,n=30

      502     1895    3               CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);

   1895  2 000244   000006 630400 3                  EPPR0   6
         2 000245   000003 631400 3                  EPPR1   3
         2 000246   000000 701000 xent               TSX1    ZERO_SUP
         2 000247   000000 011000                    NOP     0

      503     1896    3               CALL TYPE_ERRMSG(DBU#PGSIZE,3,ERR_INSERT.TEXT(0));

   1896  2 000250   000031 630400 3                  EPPR0   25
         2 000251   000003 631400 3                  EPPR1   3
         2 000252   000000 701000 xent               TSX1    TYPE_ERRMSG
         2 000253   000000 011000                    NOP     0

      504     1897    3               END;

   1896  2 000254                       NEXT_PAGE    null
      505     1898    2   NEXT_PAGE: ;
      506     1899    2           END; /* PAGE LOOP */

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:97   
   1899  2 000254   000000 054000 xsym               AOS     X
         2 000255   000000 236000 xsym               LDQ     X
         2 000256   000014 116000 0                  CMPQ    NUM_PAGES
         2 000257   000016 604400 2                  TMOZ    s:1842

      507     1900    1       RETURN;

   1900  2 000260   000000 702200 xent               TSX2  ! X66_ARET

      508     1901        %EJECT;
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:98   
      509     1902        /*
      510     1903                 PROCESSING OF *PA_REC   FOR CHECKING
      511     1904        */
      512     1905    1   PROCESS_PAREC: PROC;

   1905  2 000261   200004 741300       PROCESS_PAR* STX1  ! 4,,AUTO

      513     1906
      514     1907    2       PTRCNT = 0;

   1907  2 000262   000013 450000 0                  STZ     PTRCNT

      515     1908    2       SETVAL = 0; /* INIT TEMP STORAGE FOR POINTERS LOADED */

   1908  2 000263   000006 450000 0                  STZ     SETVAL

      516     1909         /* ENTRY$,PTR_LEN AND KEY_LEN ARE SETUP BY B$CHKREC */
      517     1910         /* AS WELL AS  LOWEST_PA AND FIRST_PA. */
      518     1911    3       DO ENTRYNO = 1 TO NO_ENT;

   1911  2 000264   000001 235007                    LDA     1,DL
         2 000265   000007 755000 0                  STA     ENTRYNO
         2 000266   000470 710000 2                  TRA     s:1949+1

      519     1912    3           IF PA_ENTRY.C = 1 THEN

   1912  2 000267   000021 470400 0                  LDP0    ENTRY$
         2 000270   003100 061500                    CSR     bolr='003'O
         2 000271   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         2 000272   200006 000044                    BDSC    6,,AUTO                  by=0,bit=0,n=36
         2 000273   200006 236100                    LDQ     6,,AUTO
         2 000274   000001 116007                    CMPQ    1,DL
         2 000275   000407 601000 2                  TNZ     s:1934

      520     1913    4           DO; /* HANDLE THE POINTER GROUP */

      521     1914    4               ENTRY$ = PINCRC(ENTRY$,2); /* Bump up to ptr of group offset */
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:99   

   1914  2 000276   000021 236000 0                  LDQ     ENTRY$
         2 000277   400000 036007                    ADLQ    -131072,DL
         2 000300   000021 756000 0                  STQ     ENTRY$

      522     1915    4               PINCRC(ADDR(SETVAL),4-PTR_LEN)->PTR_V=ENTRY$->PTR_V;

   1915  2 000301   000023 335000 0                  LCA     PTR_LEN
         2 000302   000021 470400 0                  LDP0    ENTRY$
         2 000303   000023 720000 0                  LXL0    PTR_LEN
         2 000304   040045 100540                    MLR     fill='040'O
         2 000305   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000306   000007 000010 0                  ADSC9   ENTRYNO,A                cn=0,n=*X0

      523     1916    4               GROUP$=PINCRC(REC$,SETVAL);

   1916  2 000307   000006 236000 0                  LDQ     SETVAL
         2 000310   000020 736000                    QLS     16
         2 000311   000000 036000 xsym               ADLQ    REC$
         2 000312   000022 756000 0                  STQ     GROUP$

      524     1917    4               NO_PTRS = PA_GROUP.NO_GROUPS;

   1917  2 000313   000022 470400 0                  LDP0    GROUP$
         2 000314   000000 101500                    MRL     fill='000'O
         2 000315   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 000316   000012 000004 0                  ADSC9   NO_PTRS                  cn=0,n=4

      525     1918    4               GROUP$ = PINCRW(GROUP$,1);

   1918  2 000317   000001 036003                    ADLQ    1,DU
         2 000320   000022 756000 0                  STQ     GROUP$

      526     1919    5               DO J = 1 TO NO_PTRS;

   1919  2 000321   000001 235007                    LDA     1,DL
         2 000322   000000 755000 xsym               STA     J
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:100  
         2 000323   000403 710000 2                  TRA     s:1931+1

      527     1920    5                   IF J=1 AND ENTRYNO=1 AND FIRST_LOWEST=1 AND

   1920  2 000324   000000 235000 xsym               LDA     J
         2 000325   000001 115007                    CMPA    1,DL
         2 000326   000355 601000 2                  TNZ     s:1925
         2 000327   000007 236000 0                  LDQ     ENTRYNO
         2 000330   000001 116007                    CMPQ    1,DL
         2 000331   000355 601000 2                  TNZ     s:1925
         2 000332   000011 235000 0                  LDA     FIRST_LOWEST
         2 000333   000001 115007                    CMPA    1,DL
         2 000334   000355 601000 2                  TNZ     s:1925
         2 000335   000000 236000 0                  LDQ     SET_NUM
         2 000336   000000 036000 xsym               ADLQ    NO_RECS
         2 000337   000022 470400 0                  LDP0    GROUP$
         2 000340   000100 101500                    MRL     fill='000'O
         2 000341   077777 400002                    ADSC9   -1,,PR0                  cn=2,n=2
         2 000342   200006 000004                    ADSC9   6,,AUTO                  cn=0,n=4
         2 000343   000012 402007                    MPY     10,DL
         2 000344   000000 471400 xsym               LDP1    MSTR$
         2 000345   100011 236106                    LDQ     9,QL,PR1
         2 000346   000001 772000                    QRL     1
         2 000347   007777 376007                    ANQ     4095,DL
         2 000350   200006 116100                    CMPQ    6,,AUTO
         2 000351   000355 601000 2                  TNZ     s:1925

      528     1921    5                      MSTR_REF.SET.OWNER_TYPE(SET_NUM+NO_RECS)=PINCRW(GROUP$,-1)->
              1921                               PA_GROUP.TYPE THEN
      529     1922    5                       DUMMY_FOUND=%YES#;

   1922  2 000352   400000 236003                    LDQ     -131072,DU
         2 000353   000000 756000 xsym               STQ     DUMMY_FOUND
         2 000354   000402 710000 2                  TRA     s:1931

      530     1923    5                   ELSE
      531     1924    6                   DO;
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:101  

      532     1925    6                       PINCRC(ADDR(SETVAL),4-PTR_LEN)->PTR_V=GROUP$->PTR_V;

   1925  2 000355   000023 335000 0                  LCA     PTR_LEN
         2 000356   000022 470400 0                  LDP0    GROUP$
         2 000357   000023 720000 0                  LXL0    PTR_LEN
         2 000360   040045 100540                    MLR     fill='040'O
         2 000361   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000362   000007 000010 0                  ADSC9   ENTRYNO,A                cn=0,n=*X0

      533     1926    6                       SETCNT.PR(SET_NUM) = SETCNT.PR(SET_NUM) + SETVAL;

   1926  2 000363   000000 236000 0                  LDQ     SET_NUM
         2 000364   000003 402007                    MPY     3,DL
         2 000365   000000 620006                    EAX0    0,QL
         2 000366   000000 236006 xsym               LDQ     SETCNT,QL
         2 000367   000006 036000 0                  ADLQ    SETVAL
         2 000370   000000 756010 xsym               STQ     SETCNT,X0

      534     1927    6                       SETCNT.NXT(SET_NUM) = SETCNT.NXT(SET_NUM) + SETVAL;

   1927  2 000371   000001 236010 xsym               LDQ     SETCNT+1,X0
         2 000372   000006 036000 0                  ADLQ    SETVAL
         2 000373   000001 756010 xsym               STQ     SETCNT+1,X0

      535     1928    6                       PTRCNT = PTRCNT + 1; /* Keep track of number of ptrs */

   1928  2 000374   000013 054000 0                  AOS     PTRCNT

      536     1929    6                       GROUP$ = PINCRC(GROUP$,2+PTR_LEN);

   1929  2 000375   000023 236000 0                  LDQ     PTR_LEN
         2 000376   000020 736000                    QLS     16
         2 000377   400000 036007                    ADLQ    -131072,DL
         2 000400   000022 036000 0                  ADLQ    GROUP$
         2 000401   000022 756000 0                  STQ     GROUP$

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:102  
      537     1930    6                       END;

      538     1931    5                   END;

   1931  2 000402   000000 054000 xsym               AOS     J
         2 000403   000000 236000 xsym               LDQ     J
         2 000404   000012 116000 0                  CMPQ    NO_PTRS
         2 000405   000324 604400 2                  TMOZ    s:1920

      539     1932    4               END;

   1932  2 000406   000462 710000 2                  TRA     s:1948

      540     1933    3           ELSE /* NO POINTER GROUP FOR THIS ENTRY */
      541     1934    3               IF ENTRYNO=1 AND FIRST_LOWEST=1 AND
              1934                        /* 1ST ENTRY IN PA_FIL AND LOWEST LEVEL */

   1934  2 000407   000007 235000 0                  LDA     ENTRYNO
         2 000410   000001 115007                    CMPA    1,DL
         2 000411   000437 601000 2                  TNZ     s:1942
         2 000412   000011 235000 0                  LDA     FIRST_LOWEST
         2 000413   000001 115007                    CMPA    1,DL
         2 000414   000437 601000 2                  TNZ     s:1942
         2 000415   000000 236000 0                  LDQ     SET_NUM
         2 000416   000000 036000 xsym               ADLQ    NO_RECS
         2 000417   003100 061500                    CSR     bolr='003'O
         2 000420   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12
         2 000421   200006 000044                    BDSC    6,,AUTO                  by=0,bit=0,n=36
         2 000422   000012 402007                    MPY     10,DL
         2 000423   000000 471400 xsym               LDP1    MSTR$
         2 000424   100011 236106                    LDQ     9,QL,PR1
         2 000425   000001 772000                    QRL     1
         2 000426   007777 376007                    ANQ     4095,DL
         2 000427   200006 116100                    CMPQ    6,,AUTO
         2 000430   000437 601000 2                  TNZ     s:1942

      542     1935    3                  MSTR_REF.SET.OWNER_TYPE(SET_NUM+NO_RECS)=PA_ENTRY.TYPE THEN
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:103  
      543     1936    4               DO;

      544     1937    4                   DUMMY_FOUND=%YES#; /* SET FLAG, WHEN 1ST PTR POINTS TO OWNER */

   1937  2 000431   400000 236003                    LDQ     -131072,DU
         2 000432   000000 756000 xsym               STQ     DUMMY_FOUND

      545     1938    4                   ENTRY$=PINCRC(ENTRY$,2); /* SKIP THIS ENTRY PTR */

   1938  2 000433   000021 236000 0                  LDQ     ENTRY$
         2 000434   400000 036007                    ADLQ    -131072,DL
         2 000435   000021 756000 0                  STQ     ENTRY$

      546     1939    4                   END;

   1939  2 000436   000462 710000 2                  TRA     s:1948

      547     1940    3               ELSE
      548     1941    4               DO;

      549     1942    4                   ENTRY$ = PINCRC(ENTRY$,2); /* BUMP TO ENTRY POINTER */

   1942  2 000437   000021 236000 0                  LDQ     ENTRY$
         2 000440   400000 036007                    ADLQ    -131072,DL
         2 000441   000021 756000 0                  STQ     ENTRY$

      550     1943    4                   PINCRC(ADDR(SETVAL),4-PTR_LEN)->PTR_V=ENTRY$->PTR_V;

   1943  2 000442   000023 335000 0                  LCA     PTR_LEN
         2 000443   000021 470400 0                  LDP0    ENTRY$
         2 000444   000023 720000 0                  LXL0    PTR_LEN
         2 000445   040045 100540                    MLR     fill='040'O
         2 000446   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000447   000007 000010 0                  ADSC9   ENTRYNO,A                cn=0,n=*X0

      551     1944    4                   SETCNT.NXT(SET_NUM) = SETCNT.NXT(SET_NUM) + SETVAL;

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:104  
   1944  2 000450   000000 236000 0                  LDQ     SET_NUM
         2 000451   000003 402007                    MPY     3,DL
         2 000452   000000 620006                    EAX0    0,QL
         2 000453   000001 236006 xsym               LDQ     SETCNT+1,QL
         2 000454   000006 036000 0                  ADLQ    SETVAL
         2 000455   000001 756010 xsym               STQ     SETCNT+1,X0

      552     1945    4                   SETCNT.PR(SET_NUM) = SETCNT.PR(SET_NUM) + SETVAL;

   1945  2 000456   000000 236010 xsym               LDQ     SETCNT,X0
         2 000457   000006 036000 0                  ADLQ    SETVAL
         2 000460   000000 756010 xsym               STQ     SETCNT,X0

      553     1946    4                   PTRCNT = PTRCNT+1;

   1946  2 000461   000013 054000 0                  AOS     PTRCNT

      554     1947    4                   END;

      555     1948    3           ENTRY$ = PINCRC(ENTRY$,KEY_LEN+PTR_LEN); /* Bump up to next entry */

   1948  2 000462   000024 236000 0                  LDQ     KEY_LEN
         2 000463   000023 036000 0                  ADLQ    PTR_LEN
         2 000464   000020 736000                    QLS     16
         2 000465   000021 036000 0                  ADLQ    ENTRY$
         2 000466   000021 756000 0                  STQ     ENTRY$

      556     1949    3           END;

   1949  2 000467   000007 054000 0                  AOS     ENTRYNO
         2 000470   000007 236000 0                  LDQ     ENTRYNO
         2 000471   000010 116000 0                  CMPQ    NO_ENT
         2 000472   000267 604400 2                  TMOZ    s:1912

      557     1950
      558     1951    2       IF NXTVAL ~= PRIVAL THEN /* IF HIGHEST PA, NEXT=OWNER */

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:105  
   1951  2 000473   000000 236000 xsym               LDQ     NXTVAL
         2 000474   000000 116000 xsym               CMPQ    PRIVAL
         2 000475   000510 600000 2                  TZE     s:1957

      559     1952    3       DO; /* NOTE: PRIVAL CONTAINS OWNER PTR OF THE RECORD */

      560     1953    3           SETCNT.NXT(SET_NUM) = SETCNT.NXT(SET_NUM) + PRIVAL;

   1953  2 000476   000000 236000 0                  LDQ     SET_NUM
         2 000477   000003 402007                    MPY     3,DL
         2 000500   000000 620006                    EAX0    0,QL
         2 000501   000001 236006 xsym               LDQ     SETCNT+1,QL
         2 000502   000000 036000 xsym               ADLQ    PRIVAL
         2 000503   000001 756010 xsym               STQ     SETCNT+1,X0

      561     1954    3           SETCNT.PR(SET_NUM) = SETCNT.PR(SET_NUM) + PRIVAL;

   1954  2 000504   000000 236010 xsym               LDQ     SETCNT,X0
         2 000505   000000 036000 xsym               ADLQ    PRIVAL
         2 000506   000000 756010 xsym               STQ     SETCNT,X0

      562     1955    3           PTRCNT = PTRCNT + 1; /* ADD THIS DBK TO COUNTER AGAIN */

   1955  2 000507   000013 054000 0                  AOS     PTRCNT

      563     1956    3           END;

      564     1957    2       SETCNT.DBK(SET_NUM) = SETCNT.DBK(SET_NUM) + PTRCNT*CURR_DBK;

   1957  2 000510   000000 236000 0                  LDQ     SET_NUM
         2 000511   000003 402007                    MPY     3,DL
         2 000512   000000 620006                    EAX0    0,QL
         2 000513   000013 236000 0                  LDQ     PTRCNT
         2 000514   000001 402000 0                  MPY     CURR_DBK
         2 000515   000002 036010 xsym               ADLQ    SETCNT+2,X0
         2 000516   000002 756010 xsym               STQ     SETCNT+2,X0

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:106  
      565     1958    2       RETURN;

   1958  2 000517   200004 221300                    LDX1  ! 4,,AUTO
         2 000520   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   3     000   000000 000000   777777 777777   002000 000001   000003 000000    ................
   3     004   000000 000036   400000 000000   000000 206000   000004 006000    ................
   3     010   000005 006000   000010 206000   000004 006000   000005 006000    ................
   3     014   000004 000000   000000 021536   000000 000003   000015 006000    ................
   3     020   000016 006000   000000 206000   000010 206000   000000 021540    ................
   3     024   000023 006000   000016 006000   000000 206000   000010 206000    ................
   3     030   000000 021542   000030 006000   000016 006000   000000 206000    ................
      566     1959    2   END PROCESS_PAREC; /* INTERNAL */
      567     1960
      568     1961    1   END CHECK_PAGES; /* EXTERNAL PROC END */

PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:107  
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CHECK_PAGES.

   Procedure CHECK_PAGES requires 337 words for executable code.
   Procedure CHECK_PAGES requires 8 words of local(AUTO) storage.

    No errors detected in file ZIU$CHECK.:ZIC0TSI    .
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:108  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:109  
          MINI XREF LISTING

AREA_KEY$
       730**DCL       733--IMP-PTR
ARRAY_SIZE
        31**DCL        29--IMP-SIZ  1849<<ASSIGN   1852>>IF       1856>>CALLBLT  1858<<ASSIGN   1858>>ASSIGN
      1859>>ASSIGN   1864>>IF       1873>>ASSIGN
B$CHKPAGE
      1831**DCL-ENT  1843--CALL
B$CHKREC
      1832**DCL-ENT  1888--CALL
COUNTSF
       312**DCL       313--REDEF
CURR_DBK
        21**DCL      1957>>ASSIGN
CURR_OFFSET
        23**DCL        24--REDEF    1842<<ASSIGN   1848>>DOWHILE  1868>>CALLBLT  1892>>IF
DATA$
       507**DCL       508--IMP-PTR  1850>>ASSIGN   1859>>ASSIGN
DATA_PG.ACT_DATA
       520**DCL       521--REDEF     522--REDEF     523--REDEF
DUMMY_FOUND
        18**DCL      1922<<ASSIGN   1937<<ASSIGN
ENCRP_SEEDSF
       270**DCL       271--REDEF
ENTRY$
       398**DCL       389--IMP-PTR  1912>>IF       1914<<ASSIGN   1914>>ASSIGN   1915>>ASSIGN   1934>>IF
      1938<<ASSIGN   1938>>ASSIGN   1942<<ASSIGN   1942>>ASSIGN   1943>>ASSIGN   1948<<ASSIGN   1948>>ASSIGN
ENTRYNO
        32**DCL        33--REDEF    1911<<DOINDEX  1920>>IF       1934>>IF
ERRCODESF
       272**DCL       277--REDEF
ERR_INSERT.TEXT
       287**DCL      1866<<CALLBLT  1867<>CALL     1868<<CALLBLT  1869<>CALL     1870<>CALL     1870<>CALL
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:110  
      1876<<CALLBLT  1877<>CALL     1878<<CALLBLT  1879<>CALL     1880<>CALL     1880<>CALL     1894<<CALLBLT
      1895<>CALL     1896<>CALL
FIDSF_RD
       288**DCL       289--REDEF
FIRST_LOWEST
        35**DCL      1920>>IF       1934>>IF
GROUP$
       399**DCL       394--IMP-PTR  1916<<ASSIGN   1917>>ASSIGN   1918<<ASSIGN   1918>>ASSIGN   1920>>IF
      1925>>ASSIGN   1929<<ASSIGN   1929>>ASSIGN
HELPCODE
       306**DCL       311--REDEF
HIGH_DATA_PG
        16**DCL      1837>>IF       1838>>ASSIGN
I
       344**DCL      1873<<ASSIGN   1878>>CALLBLT
ICHKSUM
       371**DCL       372--REDEF
I_O_BUF$
       349**DCL       350--IMP-PTR
J
       345**DCL      1919<<DOINDEX  1920>>IF
KEYVSF
       244**DCL       249--REDEF
KEYVSF.WD_ONE
       246**DCL       247--REDEF
KEY_LEN
       401**DCL      1889>>IF       1948>>ASSIGN
LAST_OFFSET
        39**DCL      1847<<ASSIGN   1848>>DOWHILE
LN#
        33**DCL      1853<<ASSIGN   1856<<CALLBLT  1857>>IF       1858>>ASSIGN   1864>>IF       1873>>ASSIGN
MSGCODE
       278**DCL       279--REDEF
MSTR$
       699**DCL       702--IMP-PTR  1920>>IF       1934>>IF
MSTR_INDX
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:111  
       725**DCL      1883<<ASSIGN
MSTR_REF.NXTHSH
       705**DCL       706--REDEF
MSTR_REF.PAENT
       711**DCL       712--REDEF
MSTR_REF.PAOFF
       708**DCL       709--REDEF
MSTR_REF.SET.OWNER_TYPE
       721**DCL      1920>>IF       1934>>IF
NEXT_PAGE
      1896**LABEL    1871--GOTO     1881--GOTO
NO_ENT
        34**DCL      1911>>DOINDEX
NO_PTRS
        36**DCL      1917<<ASSIGN   1919>>DOINDEX
NO_RECS
       761**DCL      1920>>IF       1934>>IF
NUM_PAGES
        38**DCL      1838<<ASSIGN   1840<<ASSIGN   1841>>DOINDEX
NXTVAL
        14**DCL      1951>>IF
OFFSET.CHAR2
        26**DCL      1852>>IF       1856>>CALLBLT
OFFSET$
        51**DCL      1850<<ASSIGN   1852>>IF       1856>>CALLBLT  1859<<ASSIGN
OFFSET_ARRAY
        29**DCL      1852>>IF       1856>>CALLBLT
OFST_AYSZ
        27**DCL      1844>>ASSIGN   1847>>ASSIGN   1849>>ASSIGN   1850>>ASSIGN   1892>>IF
PA_ENTRY.C
       390**DCL      1912>>IF
PA_ENTRY.TYPE
       392**DCL      1934>>IF
PA_GROUP.NO_GROUPS
       395**DCL      1917>>ASSIGN
PA_GROUP.TYPE
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:112  
       396**DCL      1920>>IF
PRIVAL
        15**DCL      1951>>IF       1953>>ASSIGN   1954>>ASSIGN
PROCESS_PAREC
      1905**PROC     1890--CALL
PTRCNT
        37**DCL      1907<<ASSIGN   1928<<ASSIGN   1928>>ASSIGN   1946<<ASSIGN   1946>>ASSIGN   1955<<ASSIGN
      1955>>ASSIGN   1957>>ASSIGN
PTR_LEN
       400**DCL        40--IMP-SIZ   393--IMP-SIZ   397--IMP-SIZ  1915>>ASSIGN   1915>>ASSIGN   1915>>ASSIGN
      1925>>ASSIGN   1925>>ASSIGN   1925>>ASSIGN   1929>>ASSIGN   1943>>ASSIGN   1943>>ASSIGN   1943>>ASSIGN
      1948>>ASSIGN
PTR_V
        40**DCL      1915<<ASSIGN   1915>>ASSIGN   1925<<ASSIGN   1925>>ASSIGN   1943<<ASSIGN   1943>>ASSIGN
RB
       331**DCL      1838>>ASSIGN   1840>>ASSIGN   1866>>CALLBLT  1876>>CALLBLT  1894>>CALLBLT
RE
       332**DCL      1837>>IF       1840>>ASSIGN
REC$
       330**DCL       353--IMP-PTR   377--IMP-PTR  1916>>ASSIGN
REC_DATA_LN
       358**DCL       357--IMP-SIZ
REC_HEADER.TYPE
        43**DCL      1848>>DOWHILE  1874>>IF       1874>>IF       1883>>ASSIGN
REC_XREF$
       754**DCL       755--IMP-PTR
SEARCH_OFFSET2
      1855**LABEL    1860--GOTO
SETCNT.DBK
        49**DCL      1957<<ASSIGN   1957>>ASSIGN
SETCNT.NXT
        48**DCL      1927<<ASSIGN   1927>>ASSIGN   1944<<ASSIGN   1944>>ASSIGN   1953<<ASSIGN   1953>>ASSIGN
SETCNT.PR
        47**DCL      1926<<ASSIGN   1926>>ASSIGN   1945<<ASSIGN   1945>>ASSIGN   1954<<ASSIGN   1954>>ASSIGN
SETVAL
        30**DCL        31--REDEF    1908<<ASSIGN   1915--ASSIGN   1916>>ASSIGN   1925--ASSIGN   1926>>ASSIGN
PL6.E3A0      #003=CHECK_PAGES File=ZIU$CHECK.:ZIC0TSI                           FRI 09/05/97 13:08 Page:113  
      1927>>ASSIGN   1943--ASSIGN   1944>>ASSIGN   1945>>ASSIGN
SET_NUM
        20**DCL      1920>>IF       1926>>ASSIGN   1926>>ASSIGN   1927>>ASSIGN   1927>>ASSIGN   1934>>IF
      1944>>ASSIGN   1944>>ASSIGN   1945>>ASSIGN   1945>>ASSIGN   1953>>ASSIGN   1953>>ASSIGN   1954>>ASSIGN
      1954>>ASSIGN   1957>>ASSIGN   1957>>ASSIGN
SET_XREF$
       743**DCL       744--IMP-PTR
SP_AVAIL
        28**DCL      1892>>IF
TYPE.MSTRINDX
       691**DCL      1874>>IF       1883>>ASSIGN
TYPE_ERRMSG
      1829**DCL-ENT  1870--CALL     1880--CALL     1896--CALL
X
       347**DCL      1841<<DOINDEX  1866>>CALLBLT  1876>>CALLBLT  1894>>CALLBLT
Y
        50**DCL      1844<<ASSIGN   1852>>IF       1853>>ASSIGN   1863<<ASSIGN   1863>>ASSIGN
ZERO_SUP
      1828**DCL-ENT  1867--CALL     1869--CALL     1877--CALL     1879--CALL     1895--CALL
