VERSION E05

PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:1    
        1        1        /*M* XUS$CORRECT_SPELLING - Spelling corrector */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME: XUS$CORRECT_SPELLING
       12       12            PURPOSE: Correct the spelling of a user word, if possible.
       13       13            DESCRIPTION:
       14       14                Given a user-entered word and a list of legal words, see
       15       15                if the user-word is a slight misspelling of one of the
       16       16                legal words.  Will match if the user made only one spelling
       17       17                error, and the error is one of these:
       18       18                    o transposition of two adjacent characters
       19       19                    o one character wrong
       20       20                    o one extra character
       21       21                    o one character missing
       22       22                Abbreviations are handled by allowing the user word to
       23       23                be any initial substring of a legal word.  If the caller
       24       24                wants case-insensitivity, s/he should convert both the
       25       25                legal list and the user word to the same alphabetic case
       26       26                (upper or lower) before calling XUS$CORRECT_SPELLING.
       27       27                One-character user-words never find any possible corrections;
       28       28                two-character user-words are only checked for transposition
       29       29                or missing-character errors --
       30       30                the extra-character and wrong-character error checks would
       31       31                match too many of the legal words.
       32       32                The spelling corrector returns a list of the legal words which
       33       33                could match the user-word.
       34       34
       35       35                This code has been converted to PL-6 from the Ada version
       36       36                published in "Spelling Correction in User Interfaces" by
       37       37                Durham, Lamb, and Saxe, in Communications of the ACM,
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:2    
       38       38                v. 26 no. 10 (Oct 1983), pp. 764-773.
       39       39        */
       40       40
       41       41        /*D* NAME: XUS$CORRECT_SPELLING
       42       42            PARAMETERS:
       43       43                N_LEGAL - SBIN containing the number of words in the
       44       44                    legal-word list "LEGAL$".
       45       45                LEGAL$ - An array of N_LEGAL pointers.  Each ptr
       46       46                    points to a textc string containing a legal word.  This
       47       47                    word should be fully spelled out; initial-substring
       48       48                    abbreviations should not have separate entries in
       49       49                    LEGAL$, tho contraction and mnemonic abbreviations
       50       50                    should.
       51       51                USER_WORD - Textc string containing the user-entered word
       52       52                    to be checked against the legal-word list.
       53       53                ABBREV - BIT(1) flag; if set, USER_WORD is matched as
       54       54                    an initial substring of the legal words; if reset,
       55       55                    all of USER_WORD is matched against the legal words.
       56       56                POSSIBLES - An array of N_LEGAL bits.  Uninitialized
       57       57                    at entry.
       58       58            INPUT:
       59       59                None.
       60       60            OUTPUT:
       61       61                Will ALTRETURN if no possible spelling corrections are found.
       62       62                    If at least one possible correction is found, will return
       63       63                    normally.
       64       64                N_LEGAL will contain the number of matches found (i.e., the
       65       65                    number of bits set in POSSIBLES).
       66       66                POSSIBLES(n) will be set if USER_WORD could match the
       67       67                    word pointed-to by LEGAL$(n).
       68       68            DESCRIPTION:
       69       69                Loop thru LEGAL$, checking each entry to see if it
       70       70                    could be a possible spelling correction for USER_WORD.
       71       71                    If so, set the appropriate POSSIBLES bit.
       72       72        */
       73       73
       74       74        XUS$CORRECT_SPELLING: PROC (N_LEGAL, LEGAL$, USER_WORD, ABBREV,
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:3    
       75       75                  POSSIBLES) ALTRET;
       76       76
       77       77    1   DCL N_LEGAL SBIN;
       78       78    1   DCL LEGAL$ (0:0) PTR;
       79       79    1   DCL 1 USER_WORD,
       80       80    1         2 CNT UBIN BYTE CALIGNED,
       81       81    1         2 TXT CHAR(USER_WORD.CNT);
       82       82    1   DCL ABBREV BIT(1) ALIGNED;
       83       83    1   DCL POSSIBLES (0:0) BIT(1) UNAL PARAM;
       84       84
       85       85
       86       86
       87       87    1   DCL MATCH_COUNT SBIN;
       88       88    1   DCL I SBIN;
       89       89
       90       90
       91       91    1   DCL 1 TEXTC BASED,
       92       92    1         2 CNT UBIN BYTE CALIGNED,
       93       93    1         2 TXT CHAR(TEXTC.CNT);
       94       94
       95       95
       96       96
       97       97    1           MATCH_COUNT = 0;
       98       98
       99       99    2           DO I = 0 TO (N_LEGAL - 1);
      100      100    2              CALL POSSIBLE_CORRECTION (LEGAL$ (I) -> TEXTC)
      101      101    3              WHENRETURN DO;
      102      102    3                 POSSIBLES (I) = '1'B;
      103      103    3                 MATCH_COUNT = MATCH_COUNT + 1;
      104      104    3                 END;
      105      105    3              WHENALTRETURN DO;
      106      106    3                 POSSIBLES (I) = '0'B;
      107      107    3                 END;
      108      108    2              END;
      109      109
      110      110    1           N_LEGAL = MATCH_COUNT;
      111      111
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:4    
      112      112    1           IF MATCH_COUNT = 0 THEN
      113      113    1              ALTRETURN;
      114      114    1           RETURN;
      115      115
      116      116        %EJECT;
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:5    
      117      117
      118      118        /*****************************************************************/
      119      119        /*                                                               */
      120      120        /*                      POSSIBLE_CORRECTION                      */
      121      121        /*                                                               */
      122      122        /*****************************************************************/
      123      123
      124      124        /*I* NAME: POSSIBLE_CORRECTION
      125      125            PARAMETERS:
      126      126                LEGAL_WORD - A textc string containing one of the legal
      127      127                    words to check USER_WORD against.
      128      128            INPUT:
      129      129                USER_WORD - Textc string containing the user-entered word.
      130      130            OUTPUT:
      131      131                Will return normally if LEGAL_WORD is a possible correction
      132      132                    for USER_WORD; else will altreturn.
      133      133            DESCRIPTION:
      134      134                Can't be a match if:
      135      135                    The user-word is less than two characters long; or
      136      136                    The user-word is more than one character longer than
      137      137                        the legal word.
      138      138                Find the index of the first different character in the two
      139      139                    words.
      140      140                If the difference is the last char of the user-word, assume
      141      141                    a wrong-char error and return normally.
      142      142                Check for transposed-char; return normally if so.
      143      143                Check for missing-char; return normally if so.
      144      144                If user-word is <= 2 chars long, don't try the remaining
      145      145                    tests:  altreturn.
      146      146                Check for extra-char; return normally if so.
      147      147                Check for wrong-char; return normally if so.
      148      148                If we get to this point, the legal word isn't a possible
      149      149                    single-error correction for the user-word: altreturn.
      150      150        */
      151      151
      152      152    1   POSSIBLE_CORRECTION: PROC (LEGAL_WORD) ALTRET;
      153      153
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:6    
      154      154    2   DCL 1 LEGAL_WORD,
      155      155    2         2 CNT UBIN BYTE CALIGNED,
      156      156    2         2 TXT CHAR(LEGAL_WORD.CNT);
      157      157
      158      158
      159      159    2   DCL I SBIN;
      160      160
      161      161
      162      162
      163      163    2           IF USER_WORD.CNT <= 1
      164      164    2             OR USER_WORD.CNT - 1 > LEGAL_WORD.CNT THEN
      165      165    2              ALTRETURN;
      166      166
      167      167    2           CALL FIRST_DIFFERENCE (I);
      168      168
      169      169    2           IF LEGAL_WORD.CNT > I + 1
      170      170    2             AND USER_WORD.CNT > I + 1
      171      171    2             AND SUBSTR(LEGAL_WORD.TXT, I, 1) = SUBSTR(USER_WORD.TXT, I+1, 1)
      172      172    2             AND SUBSTR(LEGAL_WORD.TXT, I+1, 1) = SUBSTR(USER_WORD.TXT, I, 1)
      173      173    3           THEN DO;
      174      174    3              CALL MATCH_SUBSTRING (I+2, I+2)
      175      175    4              WHENRETURN DO; RETURN; END;  /* Transposition */
      176      176    3              END;
      177      177
      178      178    2           CALL MATCH_SUBSTRING (I+1, I)
      179      179    3           WHENRETURN DO; RETURN; END;     /* Missing char */
      180      180
      181      181    2           IF USER_WORD.CNT <= 2 THEN
      182      182    2              ALTRETURN;
      183      183
      184      184    2           CALL MATCH_SUBSTRING (I, I+1)
      185      185    3           WHENRETURN DO; RETURN; END;     /* Extra char */
      186      186
      187      187
      188      188    2           CALL MATCH_SUBSTRING (I+1, I+1)
      189      189    3           WHENRETURN DO; RETURN; END;     /* Wrong char */
      190      190
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:7    
      191      191    2           ALTRETURN;
      192      192
      193      193
      194      194
      195      195        /*****************************************************************/
      196      196        /*                                                               */
      197      197        /*                       MATCH_SUBSTRING                         */
      198      198        /*                                                               */
      199      199        /*****************************************************************/
      200      200
      201      201        /*I* NAME: MATCH_SUBSTRING
      202      202            PARAMETERS:
      203      203                LEGAL_I - Index into LEGAL_WORD of start of substring to
      204      204                    match.
      205      205                USER_I - Index into USER_WORD of start of substring to
      206      206                    match.
      207      207            INPUT:
      208      208                LEGAL_WORD - Textc containing legal word.
      209      209                USER_WORD - Textc containing user-entered word.
      210      210                ABBREV - Set if initial-substring abbreviation allowed.
      211      211            OUTPUT:
      212      212                Will return normally if the tail of LEGAL_WORD matches
      213      213                    the tail of USER_WORD.
      214      214            DESCRIPTION:
      215      215                Compare the final substring of LEGAL_WORD starting at
      216      216                LEGAL_I, with the final substring of USER_WORD starting at
      217      217                USER_I.  Of these two substrings, if the user-word
      218      218                substring equals the legal-word substring,
      219      219                or if ABBREV is set and the user-word substring is
      220      220                an initial substring of the legal-word substring, then
      221      221                the substrings match:  return normally.  Else altreturn.
      222      222        */
      223      223
      224      224    2   MATCH_SUBSTRING: PROC (LEGAL_I, USER_I) ALTRET;
      225      225
      226      226    3   DCL LEGAL_I SBIN;
      227      227    3   DCL USER_I SBIN;
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:8    
      228      228
      229      229
      230      230
      231      231    3           IF USER_I >= USER_WORD.CNT
      232      232    4             AND (ABBREV OR LEGAL_I >= LEGAL_WORD.CNT) THEN DO;
      233      233                   /*
      234      234                   *  User word tail is empty, and either
      235      235                   *    o Abbreviations are allowed, so always matches; or
      236      236                   *    o Legal word tail is empty, too.
      237      237                   */
      238      238    4              RETURN;
      239      239    4              END;
      240      240
      241      241    3           IF (USER_WORD.CNT - USER_I) > (LEGAL_WORD.CNT - LEGAL_I)
      242      242    3             OR ((NOT ABBREV)
      243      243    3             AND (USER_WORD.CNT - USER_I) < (LEGAL_WORD.CNT - LEGAL_I))
      244      244    4           THEN DO;
      245      245                    /*
      246      246                    * Either user-word tail is longer than legal word tail,
      247      247                    *   or abbreviations not allowed and tails are of
      248      248                    *   unequal length.
      249      249                    */
      250      250    4              ALTRETURN;
      251      251    4              END;
      252      252
      253      253    3           IF SUBSTR(USER_WORD.TXT, USER_I) =
      254      254    3             SUBSTR(LEGAL_WORD.TXT, LEGAL_I, USER_WORD.CNT - USER_I) THEN
      255      255    3              RETURN;  /* Tails match */
      256      256
      257      257    3           ALTRETURN;
      258      258
      259      259    3   END MATCH_SUBSTRING;
      260      260
      261      261
      262      262
      263      263        /*****************************************************************/
      264      264        /*                                                               */
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:9    
      265      265        /*                      FIRST_DIFFERENCE                         */
      266      266        /*                                                               */
      267      267        /*****************************************************************/
      268      268
      269      269        /*I* NAME: FIRST_DIFFERENCE
      270      270            PARAMETERS:
      271      271                DIFF_I - An uninitialized SBIN.
      272      272            INPUT:
      273      273                LEGAL_WORD - Textc containing legal word.
      274      274                USER_WORD - Textc containing user-entered word.
      275      275            OUTPUT:
      276      276                DIFF_I will contain the index into the two words at which
      277      277                    the first difference was found; that is, the
      278      278                    initial substrings of LEGAL_WORD and USER_WORD up to
      279      279                    but not including DIFF_I are equal.
      280      280            DESCRIPTION:
      281      281                Loop thru the words, comparing them char by char.  When
      282      282                we find the first difference, return.
      283      283        */
      284      284
      285      285    2   FIRST_DIFFERENCE: PROC (DIFF_I);
      286      286
      287      287    3   DCL DIFF_I SBIN;
      288      288
      289      289
      290      290    3   DCL I SBIN;
      291      291    3   DCL SHORTER SBIN;
      292      292
      293      293
      294      294
      295      295    3           SHORTER = MINIMUM(LEGAL_WORD.CNT, USER_WORD.CNT);
      296      296
      297      297    4           DO I = 0 TO SHORTER - 1;
      298      298    4              IF SUBSTR(LEGAL_WORD.TXT, I, 1) ~=
      299      299    5                SUBSTR(USER_WORD.TXT, I, 1) THEN DO;
      300      300    5                 DIFF_I = I;
      301      301    5                 RETURN;
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:10   
      302      302    5                 END;
      303      303    4              END;
      304      304
      305      305    3           DIFF_I = SHORTER;
      306      306    3           RETURN;
      307      307
      308      308    3   END FIRST_DIFFERENCE;
      309      309
      310      310    2   END POSSIBLE_CORRECTION;
      311      311
      312      312    1   END XUS$CORRECT_SPELLING;

PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:11   
      No diagnostics issued in procedure XUS$CORRECT_SPELLING.

   Procedure XUS$CORRECT_SPELLING requires 293 words for executable code.
   Procedure XUS$CORRECT_SPELLING requires 32 words of local(AUTO) storage.

    No errors detected in file XUS$CORRECT_SPELLING.:E05TSI    .

PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:12   

 Object Unit name= XUS$CORRECT_SPELLING                       File name= XUS$CORRECT_SPELLING.:E05TOU
 UTS= JUL 30 '97 09:43:54.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   293    445  XUS$CORRECT_SPELLING

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        5  XUS$CORRECT_SPELLING

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_5
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:13   


        1        1        /*M* XUS$CORRECT_SPELLING - Spelling corrector */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME: XUS$CORRECT_SPELLING
       12       12            PURPOSE: Correct the spelling of a user word, if possible.
       13       13            DESCRIPTION:
       14       14                Given a user-entered word and a list of legal words, see
       15       15                if the user-word is a slight misspelling of one of the
       16       16                legal words.  Will match if the user made only one spelling
       17       17                error, and the error is one of these:
       18       18                    o transposition of two adjacent characters
       19       19                    o one character wrong
       20       20                    o one extra character
       21       21                    o one character missing
       22       22                Abbreviations are handled by allowing the user word to
       23       23                be any initial substring of a legal word.  If the caller
       24       24                wants case-insensitivity, s/he should convert both the
       25       25                legal list and the user word to the same alphabetic case
       26       26                (upper or lower) before calling XUS$CORRECT_SPELLING.
       27       27                One-character user-words never find any possible corrections;
       28       28                two-character user-words are only checked for transposition
       29       29                or missing-character errors --
       30       30                the extra-character and wrong-character error checks would
       31       31                match too many of the legal words.
       32       32                The spelling corrector returns a list of the legal words which
       33       33                could match the user-word.
       34       34
       35       35                This code has been converted to PL-6 from the Ada version
       36       36                published in "Spelling Correction in User Interfaces" by
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:14   
       37       37                Durham, Lamb, and Saxe, in Communications of the ACM,
       38       38                v. 26 no. 10 (Oct 1983), pp. 764-773.
       39       39        */
       40       40
       41       41        /*D* NAME: XUS$CORRECT_SPELLING
       42       42            PARAMETERS:
       43       43                N_LEGAL - SBIN containing the number of words in the
       44       44                    legal-word list "LEGAL$".
       45       45                LEGAL$ - An array of N_LEGAL pointers.  Each ptr
       46       46                    points to a textc string containing a legal word.  This
       47       47                    word should be fully spelled out; initial-substring
       48       48                    abbreviations should not have separate entries in
       49       49                    LEGAL$, tho contraction and mnemonic abbreviations
       50       50                    should.
       51       51                USER_WORD - Textc string containing the user-entered word
       52       52                    to be checked against the legal-word list.
       53       53                ABBREV - BIT(1) flag; if set, USER_WORD is matched as
       54       54                    an initial substring of the legal words; if reset,
       55       55                    all of USER_WORD is matched against the legal words.
       56       56                POSSIBLES - An array of N_LEGAL bits.  Uninitialized
       57       57                    at entry.
       58       58            INPUT:
       59       59                None.
       60       60            OUTPUT:
       61       61                Will ALTRETURN if no possible spelling corrections are found.
       62       62                    If at least one possible correction is found, will return
       63       63                    normally.
       64       64                N_LEGAL will contain the number of matches found (i.e., the
       65       65                    number of bits set in POSSIBLES).
       66       66                POSSIBLES(n) will be set if USER_WORD could match the
       67       67                    word pointed-to by LEGAL$(n).
       68       68            DESCRIPTION:
       69       69                Loop thru LEGAL$, checking each entry to see if it
       70       70                    could be a possible spelling correction for USER_WORD.
       71       71                    If so, set the appropriate POSSIBLES bit.
       72       72        */
       73       73
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:15   
       74       74        XUS$CORRECT_SPELLING: PROC (N_LEGAL, LEGAL$, USER_WORD, ABBREV,

     74  0 000000   000000 700200 xent  XUS$CORRECT* TSX0  ! X66_AUTO_5
         0 000001   000040 000005                    ZERO    32,5

       75       75                  POSSIBLES) ALTRET;
       76       76
       77       77    1   DCL N_LEGAL SBIN;
       78       78    1   DCL LEGAL$ (0:0) PTR;
       79       79    1   DCL 1 USER_WORD,
       80       80    1         2 CNT UBIN BYTE CALIGNED,
       81       81    1         2 TXT CHAR(USER_WORD.CNT);
       82       82    1   DCL ABBREV BIT(1) ALIGNED;
       83       83    1   DCL POSSIBLES (0:0) BIT(1) UNAL PARAM;
       84       84
       85       85
       86       86
       87       87    1   DCL MATCH_COUNT SBIN;
       88       88    1   DCL I SBIN;
       89       89
       90       90
       91       91    1   DCL 1 TEXTC BASED,
       92       92    1         2 CNT UBIN BYTE CALIGNED,
       93       93    1         2 TXT CHAR(TEXTC.CNT);
       94       94
       95       95
       96       96
       97       97    1           MATCH_COUNT = 0;

     97  0 000002   200010 450100                    STZ     MATCH_COUNT,,AUTO

       98       98
       99       99    2           DO I = 0 TO (N_LEGAL - 1);

     99  0 000003   200011 450100                    STZ     I,,AUTO
         0 000004   000034 710000 0                  TRA     s:108+1

PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:16   
      100      100    2              CALL POSSIBLE_CORRECTION (LEGAL$ (I) -> TEXTC)

    100  0 000005   200004 470500                    LDP0    @LEGAL$,,AUTO
         0 000006   200011 720100                    LXL0    I,,AUTO
         0 000007   000000 471510                    LDP1    0,X0,PR0
         0 000010   200013 451500                    STP1    I+2,,AUTO
         0 000011   000045 701000 0                  TSX1    POSSIBLE_CORRECTION
         0 000012   000024 702000 0                  TSX2    s:106

      101      101    3              WHENRETURN DO;

      102      102    3                 POSSIBLES (I) = '1'B;

    102  0 000013   200011 235100                    LDA     I,,AUTO
         0 000014   000016 605000 0                  TPL     s:102+3
         0 000015   000044 035003                    ADLA    36,DU
         0 000016   200007 470500                    LDP0    @POSSIBLES,,AUTO
         0 000017   003105 060400                    CSL     bolr='003'O
         0 000020   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         0 000021   000000 000001                    BDSC    0,A,PR0                  by=0,bit=0,n=1

      103      103    3                 MATCH_COUNT = MATCH_COUNT + 1;

    103  0 000022   200010 054100                    AOS     MATCH_COUNT,,AUTO

      104      104    3                 END;

    104  0 000023   000033 710000 0                  TRA     s:108

      105      105    3              WHENALTRETURN DO;

      106      106    3                 POSSIBLES (I) = '0'B;

    106  0 000024   200011 235100                    LDA     I,,AUTO
         0 000025   000027 605000 0                  TPL     s:106+3
         0 000026   000044 035003                    ADLA    36,DU
         0 000027   200007 470500                    LDP0    @POSSIBLES,,AUTO
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:17   
         0 000030   003105 060400                    CSL     bolr='003'O
         0 000031   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         0 000032   000000 000001                    BDSC    0,A,PR0                  by=0,bit=0,n=1

      107      107    3                 END;

      108      108    2              END;

    108  0 000033   200011 054100                    AOS     I,,AUTO
         0 000034   200003 470500                    LDP0    @N_LEGAL,,AUTO
         0 000035   200011 236100                    LDQ     I,,AUTO
         0 000036   000000 116100                    CMPQ    0,,PR0
         0 000037   000005 604000 0                  TMI     s:100

      109      109
      110      110    1           N_LEGAL = MATCH_COUNT;

    110  0 000040   200010 235100                    LDA     MATCH_COUNT,,AUTO
         0 000041   000000 755100                    STA     0,,PR0

      111      111
      112      112    1           IF MATCH_COUNT = 0 THEN

    112  0 000042   000044 601000 0                  TNZ     s:114

      113      113    1              ALTRETURN;

    113  0 000043   000000 702200 xent               TSX2  ! X66_AALT

      114      114    1           RETURN;

    114  0 000044   000000 702200 xent               TSX2  ! X66_ARET

      115      115
      116      116        %EJECT;
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:18   
      117      117
      118      118        /*****************************************************************/
      119      119        /*                                                               */
      120      120        /*                      POSSIBLE_CORRECTION                      */
      121      121        /*                                                               */
      122      122        /*****************************************************************/
      123      123
      124      124        /*I* NAME: POSSIBLE_CORRECTION
      125      125            PARAMETERS:
      126      126                LEGAL_WORD - A textc string containing one of the legal
      127      127                    words to check USER_WORD against.
      128      128            INPUT:
      129      129                USER_WORD - Textc string containing the user-entered word.
      130      130            OUTPUT:
      131      131                Will return normally if LEGAL_WORD is a possible correction
      132      132                    for USER_WORD; else will altreturn.
      133      133            DESCRIPTION:
      134      134                Can't be a match if:
      135      135                    The user-word is less than two characters long; or
      136      136                    The user-word is more than one character longer than
      137      137                        the legal word.
      138      138                Find the index of the first different character in the two
      139      139                    words.
      140      140                If the difference is the last char of the user-word, assume
      141      141                    a wrong-char error and return normally.
      142      142                Check for transposed-char; return normally if so.
      143      143                Check for missing-char; return normally if so.
      144      144                If user-word is <= 2 chars long, don't try the remaining
      145      145                    tests:  altreturn.
      146      146                Check for extra-char; return normally if so.
      147      147                Check for wrong-char; return normally if so.
      148      148                If we get to this point, the legal word isn't a possible
      149      149                    single-error correction for the user-word: altreturn.
      150      150        */
      151      151
      152      152    1   POSSIBLE_CORRECTION: PROC (LEGAL_WORD) ALTRET;

PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:19   
    152  0 000045   200012 741300       POSSIBLE_CO* STX1  ! I+1,,AUTO

      153      153
      154      154    2   DCL 1 LEGAL_WORD,
      155      155    2         2 CNT UBIN BYTE CALIGNED,
      156      156    2         2 TXT CHAR(LEGAL_WORD.CNT);
      157      157
      158      158
      159      159    2   DCL I SBIN;
      160      160
      161      161
      162      162
      163      163    2           IF USER_WORD.CNT <= 1

    163  0 000046   200005 470500                    LDP0    @USER_WORD,,AUTO
         0 000047   000100 101500                    MRL     fill='000'O
         0 000050   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         0 000051   200022 000004                    ADSC9   SHORTER+1,,AUTO          cn=0,n=4
         0 000052   200022 236100                    LDQ     SHORTER+1,,AUTO
         0 000053   000002 116007                    CMPQ    2,DL
         0 000054   000072 604000 0                  TMI     s:165
         0 000055   000100 101500                    MRL     fill='000'O
         0 000056   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         0 000057   200023 000004                    ADSC9   SHORTER+2,,AUTO          cn=0,n=4
         0 000060   200023 236100                    LDQ     SHORTER+2,,AUTO
         0 000061   000001 136007                    SBLQ    1,DL
         0 000062   200024 756100                    STQ     SHORTER+3,,AUTO
         0 000063   200013 471500                    LDP1    @LEGAL_WORD,,AUTO
         0 000064   000100 101500                    MRL     fill='000'O
         0 000065   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000066   200025 000004                    ADSC9   SHORTER+4,,AUTO          cn=0,n=4
         0 000067   200025 236100                    LDQ     SHORTER+4,,AUTO
         0 000070   200024 116100                    CMPQ    SHORTER+3,,AUTO
         0 000071   000073 605000 0                  TPL     s:167

      164      164    2             OR USER_WORD.CNT - 1 > LEGAL_WORD.CNT THEN
      165      165    2              ALTRETURN;
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:20   

    165  0 000072   000000 702211                    TSX2  ! 0,X1

      166      166
      167      167    2           CALL FIRST_DIFFERENCE (I);

    167  0 000073   200014 633500                    EPPR3   I,,AUTO
         0 000074   200017 453500                    STP3    I+3,,AUTO
         0 000075   000366 701000 0                  TSX1    FIRST_DIFFERENCE
         0 000076   000000 011000                    NOP     0

      168      168
      169      169    2           IF LEGAL_WORD.CNT > I + 1

    169  0 000077   200014 235100                    LDA     I,,AUTO
         0 000100   000001 035007                    ADLA    1,DL
         0 000101   200022 755100                    STA     SHORTER+1,,AUTO
         0 000102   200013 470500                    LDP0    @LEGAL_WORD,,AUTO
         0 000103   000100 101500                    MRL     fill='000'O
         0 000104   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         0 000105   200023 000004                    ADSC9   SHORTER+2,,AUTO          cn=0,n=4
         0 000106   200023 236100                    LDQ     SHORTER+2,,AUTO
         0 000107   200022 116100                    CMPQ    SHORTER+1,,AUTO
         0 000110   000165 604400 0                  TMOZ    s:178
         0 000111   200024 755100                    STA     SHORTER+3,,AUTO
         0 000112   200005 471500                    LDP1    @USER_WORD,,AUTO
         0 000113   000100 101500                    MRL     fill='000'O
         0 000114   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000115   200025 000004                    ADSC9   SHORTER+4,,AUTO          cn=0,n=4
         0 000116   200025 236100                    LDQ     SHORTER+4,,AUTO
         0 000117   200024 116100                    CMPQ    SHORTER+3,,AUTO
         0 000120   000165 604400 0                  TMOZ    s:178
         0 000121   000100 101500                    MRL     fill='000'O
         0 000122   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         0 000123   200026 000002                    ADSC9   SHORTER+5,,AUTO          cn=0,n=2
         0 000124   200026 220100                    LDX0    SHORTER+5,,AUTO
         0 000125   000100 101500                    MRL     fill='000'O
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:21   
         0 000126   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000127   200027 000002                    ADSC9   SHORTER+6,,AUTO          cn=0,n=2
         0 000130   200027 221100                    LDX1    SHORTER+6,,AUTO
         0 000131   200014 235100                    LDA     I,,AUTO
         0 000132   040105 106505                    CMPC    fill='040'O
         0 000133   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         0 000134   100000 400001                    ADSC9   0,A,PR1                  cn=2,n=1
         0 000135   000165 601000 0                  TNZ     s:178
         0 000136   000100 101500                    MRL     fill='000'O
         0 000137   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         0 000140   200030 000002                    ADSC9   SHORTER+7,,AUTO          cn=0,n=2
         0 000141   200030 222100                    LDX2    SHORTER+7,,AUTO
         0 000142   000100 101500                    MRL     fill='000'O
         0 000143   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000144   200031 000002                    ADSC9   SHORTER+8,,AUTO          cn=0,n=2
         0 000145   200031 223100                    LDX3    SHORTER+8,,AUTO
         0 000146   040105 106505                    CMPC    fill='040'O
         0 000147   000000 400001                    ADSC9   0,A,PR0                  cn=2,n=1
         0 000150   100000 200001                    ADSC9   0,A,PR1                  cn=1,n=1
         0 000151   000165 601000 0                  TNZ     s:178

      170      170    2             AND USER_WORD.CNT > I + 1
      171      171    2             AND SUBSTR(LEGAL_WORD.TXT, I, 1) = SUBSTR(USER_WORD.TXT, I+1, 1)
      172      172    2             AND SUBSTR(LEGAL_WORD.TXT, I+1, 1) = SUBSTR(USER_WORD.TXT, I, 1)
      173      173    3           THEN DO;

      174      174    3              CALL MATCH_SUBSTRING (I+2, I+2)

    174  0 000152   000002 035007                    ADLA    2,DL
         0 000153   200032 755100                    STA     SHORTER+9,,AUTO
         0 000154   200033 755100                    STA     SHORTER+10,,AUTO
         0 000155   200033 633500                    EPPR3   SHORTER+10,,AUTO
         0 000156   200020 453500                    STP3    @DIFF_I+1,,AUTO
         0 000157   200032 634500                    EPPR4   SHORTER+9,,AUTO
         0 000160   200017 454500                    STP4    I+3,,AUTO
         0 000161   000242 701000 0                  TSX1    MATCH_SUBSTRING
         0 000162   000165 702000 0                  TSX2    s:178
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:22   

      175      175    4              WHENRETURN DO; RETURN; END;  /* Transposition */

    175  0 000163   200012 221300                    LDX1  ! I+1,,AUTO
         0 000164   000001 702211                    TSX2  ! 1,X1

      176      176    3              END;

      177      177
      178      178    2           CALL MATCH_SUBSTRING (I+1, I)

    178  0 000165   200014 235100                    LDA     I,,AUTO
         0 000166   000001 035007                    ADLA    1,DL
         0 000167   200034 755100                    STA     SHORTER+11,,AUTO
         0 000170   200014 630500                    EPPR0   I,,AUTO
         0 000171   200020 450500                    STP0    @DIFF_I+1,,AUTO
         0 000172   200034 631500                    EPPR1   SHORTER+11,,AUTO
         0 000173   200017 451500                    STP1    I+3,,AUTO
         0 000174   000242 701000 0                  TSX1    MATCH_SUBSTRING
         0 000175   000200 702000 0                  TSX2    s:181

      179      179    3           WHENRETURN DO; RETURN; END;     /* Missing char */

    179  0 000176   200012 221300                    LDX1  ! I+1,,AUTO
         0 000177   000001 702211                    TSX2  ! 1,X1

      180      180
      181      181    2           IF USER_WORD.CNT <= 2 THEN

    181  0 000200   200005 470500                    LDP0    @USER_WORD,,AUTO
         0 000201   000100 101500                    MRL     fill='000'O
         0 000202   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         0 000203   200022 000004                    ADSC9   SHORTER+1,,AUTO          cn=0,n=4
         0 000204   200022 236100                    LDQ     SHORTER+1,,AUTO
         0 000205   000003 116007                    CMPQ    3,DL
         0 000206   000211 605000 0                  TPL     s:184

PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:23   
      182      182    2              ALTRETURN;

    182  0 000207   200012 221300                    LDX1  ! I+1,,AUTO
         0 000210   000000 702211                    TSX2  ! 0,X1

      183      183
      184      184    2           CALL MATCH_SUBSTRING (I, I+1)

    184  0 000211   200014 235100                    LDA     I,,AUTO
         0 000212   000001 035007                    ADLA    1,DL
         0 000213   200035 755100                    STA     SHORTER+12,,AUTO
         0 000214   200035 631500                    EPPR1   SHORTER+12,,AUTO
         0 000215   200020 451500                    STP1    @DIFF_I+1,,AUTO
         0 000216   200014 633500                    EPPR3   I,,AUTO
         0 000217   200017 453500                    STP3    I+3,,AUTO
         0 000220   000242 701000 0                  TSX1    MATCH_SUBSTRING
         0 000221   000224 702000 0                  TSX2    s:188

      185      185    3           WHENRETURN DO; RETURN; END;     /* Extra char */

    185  0 000222   200012 221300                    LDX1  ! I+1,,AUTO
         0 000223   000001 702211                    TSX2  ! 1,X1

      186      186
      187      187
      188      188    2           CALL MATCH_SUBSTRING (I+1, I+1)

    188  0 000224   200014 235100                    LDA     I,,AUTO
         0 000225   000001 035007                    ADLA    1,DL
         0 000226   200036 755100                    STA     SHORTER+13,,AUTO
         0 000227   200037 755100                    STA     SHORTER+14,,AUTO
         0 000230   200037 630500                    EPPR0   SHORTER+14,,AUTO
         0 000231   200020 450500                    STP0    @DIFF_I+1,,AUTO
         0 000232   200036 631500                    EPPR1   SHORTER+13,,AUTO
         0 000233   200017 451500                    STP1    I+3,,AUTO
         0 000234   000242 701000 0                  TSX1    MATCH_SUBSTRING
         0 000235   000240 702000 0                  TSX2    s:191
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:24   

      189      189    3           WHENRETURN DO; RETURN; END;     /* Wrong char */

    189  0 000236   200012 221300                    LDX1  ! I+1,,AUTO
         0 000237   000001 702211                    TSX2  ! 1,X1

      190      190
      191      191    2           ALTRETURN;

    191  0 000240   200012 221300                    LDX1  ! I+1,,AUTO
         0 000241   000000 702211                    TSX2  ! 0,X1

      192      192
      193      193
      194      194
      195      195        /*****************************************************************/
      196      196        /*                                                               */
      197      197        /*                       MATCH_SUBSTRING                         */
      198      198        /*                                                               */
      199      199        /*****************************************************************/
      200      200
      201      201        /*I* NAME: MATCH_SUBSTRING
      202      202            PARAMETERS:
      203      203                LEGAL_I - Index into LEGAL_WORD of start of substring to
      204      204                    match.
      205      205                USER_I - Index into USER_WORD of start of substring to
      206      206                    match.
      207      207            INPUT:
      208      208                LEGAL_WORD - Textc containing legal word.
      209      209                USER_WORD - Textc containing user-entered word.
      210      210                ABBREV - Set if initial-substring abbreviation allowed.
      211      211            OUTPUT:
      212      212                Will return normally if the tail of LEGAL_WORD matches
      213      213                    the tail of USER_WORD.
      214      214            DESCRIPTION:
      215      215                Compare the final substring of LEGAL_WORD starting at
      216      216                LEGAL_I, with the final substring of USER_WORD starting at
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:25   
      217      217                USER_I.  Of these two substrings, if the user-word
      218      218                substring equals the legal-word substring,
      219      219                or if ABBREV is set and the user-word substring is
      220      220                an initial substring of the legal-word substring, then
      221      221                the substrings match:  return normally.  Else altreturn.
      222      222        */
      223      223
      224      224    2   MATCH_SUBSTRING: PROC (LEGAL_I, USER_I) ALTRET;

    224  0 000242   200016 741300       MATCH_SUBST* STX1  ! I+2,,AUTO

      225      225
      226      226    3   DCL LEGAL_I SBIN;
      227      227    3   DCL USER_I SBIN;
      228      228
      229      229
      230      230
      231      231    3           IF USER_I >= USER_WORD.CNT

    231  0 000243   200020 470500                    LDP0    @USER_I,,AUTO
         0 000244   200005 471500                    LDP1    @USER_WORD,,AUTO
         0 000245   000100 101500                    MRL     fill='000'O
         0 000246   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000247   200022 000004                    ADSC9   SHORTER+1,,AUTO          cn=0,n=4
         0 000250   200022 236100                    LDQ     SHORTER+1,,AUTO
         0 000251   000000 116100                    CMPQ    0,,PR0
         0 000252   000267 605400 0                  TPNZ    s:241
         0 000253   200006 473500                    LDP3    @ABBREV,,AUTO
         0 000254   300000 234100                    SZN     0,,PR3
         0 000255   000266 604000 0                  TMI     s:238
         0 000256   200017 474500                    LDP4    @LEGAL_I,,AUTO
         0 000257   200013 475500                    LDP5    @LEGAL_WORD,,AUTO
         0 000260   000100 101500                    MRL     fill='000'O
         0 000261   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         0 000262   200023 000004                    ADSC9   SHORTER+2,,AUTO          cn=0,n=4
         0 000263   200023 236100                    LDQ     SHORTER+2,,AUTO
         0 000264   400000 116100                    CMPQ    0,,PR4
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:26   
         0 000265   000267 605400 0                  TPNZ    s:241

      232      232    4             AND (ABBREV OR LEGAL_I >= LEGAL_WORD.CNT) THEN DO;

      233      233                   /*
      234      234                   *  User word tail is empty, and either
      235      235                   *    o Abbreviations are allowed, so always matches; or
      236      236                   *    o Legal word tail is empty, too.
      237      237                   */
      238      238    4              RETURN;

    238  0 000266   000001 702211                    TSX2  ! 1,X1

      239      239    4              END;
      240      240
      241      241    3           IF (USER_WORD.CNT - USER_I) > (LEGAL_WORD.CNT - LEGAL_I)

    241  0 000267   000100 101500                    MRL     fill='000'O
         0 000270   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000271   200022 000004                    ADSC9   SHORTER+1,,AUTO          cn=0,n=4
         0 000272   200022 236100                    LDQ     SHORTER+1,,AUTO
         0 000273   000000 136100                    SBLQ    0,,PR0
         0 000274   200017 473500                    LDP3    @LEGAL_I,,AUTO
         0 000275   200013 474500                    LDP4    @LEGAL_WORD,,AUTO
         0 000276   000100 101500                    MRL     fill='000'O
         0 000277   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         0 000300   200023 000004                    ADSC9   SHORTER+2,,AUTO          cn=0,n=4
         0 000301   200024 756100                    STQ     SHORTER+3,,AUTO
         0 000302   200023 236100                    LDQ     SHORTER+2,,AUTO
         0 000303   300000 136100                    SBLQ    0,,PR3
         0 000304   200024 116100                    CMPQ    SHORTER+3,,AUTO
         0 000305   000326 604000 0                  TMI     s:250
         0 000306   200006 475500                    LDP5    @ABBREV,,AUTO
         0 000307   500000 234100                    SZN     0,,PR5
         0 000310   000327 604000 0                  TMI     s:253
         0 000311   000100 101500                    MRL     fill='000'O
         0 000312   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:27   
         0 000313   200025 000004                    ADSC9   SHORTER+4,,AUTO          cn=0,n=4
         0 000314   200025 236100                    LDQ     SHORTER+4,,AUTO
         0 000315   000000 136100                    SBLQ    0,,PR0
         0 000316   000100 101500                    MRL     fill='000'O
         0 000317   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         0 000320   200026 000004                    ADSC9   SHORTER+5,,AUTO          cn=0,n=4
         0 000321   200027 756100                    STQ     SHORTER+6,,AUTO
         0 000322   200026 236100                    LDQ     SHORTER+5,,AUTO
         0 000323   300000 136100                    SBLQ    0,,PR3
         0 000324   200027 116100                    CMPQ    SHORTER+6,,AUTO
         0 000325   000327 604400 0                  TMOZ    s:253

      242      242    3             OR ((NOT ABBREV)
      243      243    3             AND (USER_WORD.CNT - USER_I) < (LEGAL_WORD.CNT - LEGAL_I))
      244      244    4           THEN DO;

      245      245                    /*
      246      246                    * Either user-word tail is longer than legal word tail,
      247      247                    *   or abbreviations not allowed and tails are of
      248      248                    *   unequal length.
      249      249                    */
      250      250    4              ALTRETURN;

    250  0 000326   000000 702211                    TSX2  ! 0,X1

      251      251    4              END;
      252      252
      253      253    3           IF SUBSTR(USER_WORD.TXT, USER_I) =

    253  0 000327   000100 101500                    MRL     fill='000'O
         0 000330   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000331   200022 000002                    ADSC9   SHORTER+1,,AUTO          cn=0,n=2
         0 000332   200022 220100                    LDX0    SHORTER+1,,AUTO
         0 000333   000000 636010                    EAQ     0,X0
         0 000334   000022 772000                    QRL     18
         0 000335   000000 136100                    SBLQ    0,,PR0
         0 000336   000000 235100                    LDA     0,,PR0
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:28   
         0 000337   000100 101500                    MRL     fill='000'O
         0 000340   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         0 000341   200023 000002                    ADSC9   SHORTER+2,,AUTO          cn=0,n=2
         0 000342   200023 222100                    LDX2    SHORTER+2,,AUTO
         0 000343   000100 101500                    MRL     fill='000'O
         0 000344   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000345   200024 000004                    ADSC9   SHORTER+3,,AUTO          cn=0,n=4
         0 000346   200025 756100                    STQ     SHORTER+4,,AUTO
         0 000347   200024 236100                    LDQ     SHORTER+3,,AUTO
         0 000350   000000 136100                    SBLQ    0,,PR0
         0 000351   200026 755100                    STA     SHORTER+5,,AUTO
         0 000352   300000 235100                    LDA     0,,PR3
         0 000353   200025 723100                    LXL3    SHORTER+4,,AUTO
         0 000354   200027 755100                    STA     SHORTER+6,,AUTO
         0 000355   200026 235100                    LDA     SHORTER+5,,AUTO
         0 000356   000000 624006                    EAX4    0,QL
         0 000357   200027 236100                    LDQ     SHORTER+6,,AUTO
         0 000360   040146 106545                    CMPC    fill='040'O
         0 000361   100000 200013                    ADSC9   0,A,PR1                  cn=1,n=*X3
         0 000362   400000 200014                    ADSC9   0,Q,PR4                  cn=1,n=*X4
         0 000363   000365 601000 0                  TNZ     s:257

      254      254    3             SUBSTR(LEGAL_WORD.TXT, LEGAL_I, USER_WORD.CNT - USER_I) THEN
      255      255    3              RETURN;  /* Tails match */

    255  0 000364   000001 702211                    TSX2  ! 1,X1

      256      256
      257      257    3           ALTRETURN;

    257  0 000365   000000 702211                    TSX2  ! 0,X1

      258      258
      259      259    3   END MATCH_SUBSTRING;
      260      260
      261      261
      262      262
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:29   
      263      263        /*****************************************************************/
      264      264        /*                                                               */
      265      265        /*                      FIRST_DIFFERENCE                         */
      266      266        /*                                                               */
      267      267        /*****************************************************************/
      268      268
      269      269        /*I* NAME: FIRST_DIFFERENCE
      270      270            PARAMETERS:
      271      271                DIFF_I - An uninitialized SBIN.
      272      272            INPUT:
      273      273                LEGAL_WORD - Textc containing legal word.
      274      274                USER_WORD - Textc containing user-entered word.
      275      275            OUTPUT:
      276      276                DIFF_I will contain the index into the two words at which
      277      277                    the first difference was found; that is, the
      278      278                    initial substrings of LEGAL_WORD and USER_WORD up to
      279      279                    but not including DIFF_I are equal.
      280      280            DESCRIPTION:
      281      281                Loop thru the words, comparing them char by char.  When
      282      282                we find the first difference, return.
      283      283        */
      284      284
      285      285    2   FIRST_DIFFERENCE: PROC (DIFF_I);

    285  0 000366   200016 741300       FIRST_DIFFE* STX1  ! I+2,,AUTO

      286      286
      287      287    3   DCL DIFF_I SBIN;
      288      288
      289      289
      290      290    3   DCL I SBIN;
      291      291    3   DCL SHORTER SBIN;
      292      292
      293      293
      294      294
      295      295    3           SHORTER = MINIMUM(LEGAL_WORD.CNT, USER_WORD.CNT);

PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:30   
    295  0 000367   200005 470500                    LDP0    @USER_WORD,,AUTO
         0 000370   000100 101500                    MRL     fill='000'O
         0 000371   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         0 000372   200022 000004                    ADSC9   SHORTER+1,,AUTO          cn=0,n=4
         0 000373   200022 236100                    LDQ     SHORTER+1,,AUTO
         0 000374   200013 471500                    LDP1    @LEGAL_WORD,,AUTO
         0 000375   000100 101500                    MRL     fill='000'O
         0 000376   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000377   200023 000004                    ADSC9   SHORTER+2,,AUTO          cn=0,n=4
         0 000400   200024 756100                    STQ     SHORTER+3,,AUTO
         0 000401   200023 236100                    LDQ     SHORTER+2,,AUTO
         0 000402   200024 116100                    CMPQ    SHORTER+3,,AUTO
         0 000403   000406 602000 0                  TNC     s:295+15
         0 000404   000406 600000 0                  TZE     s:295+15
         0 000405   200024 236100                    LDQ     SHORTER+3,,AUTO
         0 000406   200021 756100                    STQ     SHORTER,,AUTO

      296      296
      297      297    4           DO I = 0 TO SHORTER - 1;

    297  0 000407   200020 450100                    STZ     I,,AUTO
         0 000410   000435 710000 0                  TRA     s:303+1

      298      298    4              IF SUBSTR(LEGAL_WORD.TXT, I, 1) ~=

    298  0 000411   200013 470500                    LDP0    @LEGAL_WORD,,AUTO
         0 000412   000100 101500                    MRL     fill='000'O
         0 000413   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         0 000414   200022 000002                    ADSC9   SHORTER+1,,AUTO          cn=0,n=2
         0 000415   200022 220100                    LDX0    SHORTER+1,,AUTO
         0 000416   200005 471500                    LDP1    @USER_WORD,,AUTO
         0 000417   000100 101500                    MRL     fill='000'O
         0 000420   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         0 000421   200023 000002                    ADSC9   SHORTER+2,,AUTO          cn=0,n=2
         0 000422   200023 221100                    LDX1    SHORTER+2,,AUTO
         0 000423   200020 235100                    LDA     I,,AUTO
         0 000424   040105 106505                    CMPC    fill='040'O
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:31   
         0 000425   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         0 000426   100000 200001                    ADSC9   0,A,PR1                  cn=1,n=1
         0 000427   000434 600000 0                  TZE     s:303

      299      299    5                SUBSTR(USER_WORD.TXT, I, 1) THEN DO;

      300      300    5                 DIFF_I = I;

    300  0 000430   200017 473500                    LDP3    @DIFF_I,,AUTO
         0 000431   300000 755100                    STA     0,,PR3

      301      301    5                 RETURN;

    301  0 000432   200016 221300                    LDX1  ! I+2,,AUTO
         0 000433   000001 702211                    TSX2  ! 1,X1

      302      302    5                 END;
      303      303    4              END;

    303  0 000434   200020 054100                    AOS     I,,AUTO
         0 000435   200020 236100                    LDQ     I,,AUTO
         0 000436   200021 116100                    CMPQ    SHORTER,,AUTO
         0 000437   000411 604000 0                  TMI     s:298

      304      304
      305      305    3           DIFF_I = SHORTER;

    305  0 000440   200017 470500                    LDP0    @DIFF_I,,AUTO
         0 000441   200021 235100                    LDA     SHORTER,,AUTO
         0 000442   000000 755100                    STA     0,,PR0

      306      306    3           RETURN;

    306  0 000443   200016 221300                    LDX1  ! I+2,,AUTO
         0 000444   000001 702211                    TSX2  ! 1,X1
      307      307
      308      308    3   END FIRST_DIFFERENCE;
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:32   
      309      309
      310      310    2   END POSSIBLE_CORRECTION;
      311      311
      312      312    1   END XUS$CORRECT_SPELLING;

PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:33   
      No diagnostics issued in procedure XUS$CORRECT_SPELLING.
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:34   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @ABBREV                   17-0-0/w PTR         r     1 @DIFF_I
     4-0-0/w PTR         r     1 @LEGAL$                   17-0-0/w PTR         r     1 @LEGAL_I
    13-0-0/w PTR         r     1 @LEGAL_WORD                3-0-0/w PTR         r     1 @N_LEGAL
     7-0-0/w PTR         r     1 @POSSIBLES                20-0-0/w PTR         r     1 @USER_I
     5-0-0/w PTR         r     1 @USER_WORD                *0-0-0/w BIT         r     1 ABBREV
    *0-0-0/w SBIN        r     1 DIFF_I                    11-0-0/w SBIN        r     1 I
    14-0-0/w SBIN        r     1 I                         20-0-0/w SBIN        r     1 I
    *0-0-0/w PTR         r     1 LEGAL$(0:0)               *0-0-0/w SBIN        r     1 LEGAL_I
    *0-0-0/c ASTR(9)     r     1 LEGAL_WORD                10-0-0/w SBIN        r     1 MATCH_COUNT
    *0-0-0/w SBIN        r     1 N_LEGAL
    *0-0-0/b BIT         r     1 POSSIBLES(0:0)
    21-0-0/w SBIN        r     1 SHORTER                   *0-0-0/w SBIN        r     1 USER_I
    *0-0-0/c ASTR(9)     r     1 USER_WORD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure XUS$CORRECT_SPELLING requires 293 words for executable code.
   Procedure XUS$CORRECT_SPELLING requires 32 words of local(AUTO) storage.

    No errors detected in file XUS$CORRECT_SPELLING.:E05TSI    .
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:35   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:36   
          MINI XREF LISTING

ABBREV
        82**DCL        74--PROC      231>>IF        241>>IF
DIFF_I IN PROCEDURE FIRST_DIFFERENCE
       287**DCL       285--PROC      300<<ASSIGN    305<<ASSIGN
FIRST_DIFFERENCE IN PROCEDURE POSSIBLE_CORRECTION
       285**PROC      167--CALL
I
        88**DCL        99<<DOINDEX   100>>CALL      100>>CALL      102>>ASSIGN    106>>ASSIGN
I IN PROCEDURE FIRST_DIFFERENCE
       290**DCL       297<<DOINDEX   298>>IF        298>>IF        300>>ASSIGN
I IN PROCEDURE POSSIBLE_CORRECTION
       159**DCL       167<>CALL      169>>IF        169>>IF        169>>IF        169>>IF        169>>IF
       169>>IF        174>>CALL      174>>CALL      178>>CALL      178<>CALL      184<>CALL      184>>CALL
       188>>CALL      188>>CALL
LEGAL$
        78**DCL        74--PROC      100>>CALL      100>>CALL
LEGAL_I IN PROCEDURE MATCH_SUBSTRING
       226**DCL       224--PROC      231>>IF        241>>IF        241>>IF        253>>IF
LEGAL_WORD IN PROCEDURE POSSIBLE_CORRECTION
       154**DCL       152--PROC
LEGAL_WORD.CNT IN PROCEDURE POSSIBLE_CORRECTION
       155**DCL       156--IMP-SIZ   163>>IF        169>>IF        169>>IF        169>>IF        231>>IF
       241>>IF        241>>IF        253>>IF        295>>ASSIGN    298>>IF
LEGAL_WORD.TXT IN PROCEDURE POSSIBLE_CORRECTION
       156**DCL       169>>IF        169>>IF        253>>IF        298>>IF
MATCH_COUNT
        87**DCL        97<<ASSIGN    103<<ASSIGN    103>>ASSIGN    110>>ASSIGN    112>>IF
MATCH_SUBSTRING IN PROCEDURE POSSIBLE_CORRECTION
       224**PROC      174--CALL      178--CALL      184--CALL      188--CALL
N_LEGAL
        77**DCL        74--PROC       99>>DOINDEX   110<<ASSIGN
POSSIBLES
PL6.E3A0      #001=XUS$CORRECT_SPELLING File=XUS$CORRECT_SPELLING.:E05TSI        WED 07/30/97 09:43 Page:37   
        83**DCL        74--PROC      102<<ASSIGN    106<<ASSIGN
POSSIBLE_CORRECTION
       152**PROC      100--CALL
SHORTER IN PROCEDURE FIRST_DIFFERENCE
       291**DCL       295<<ASSIGN    297>>DOINDEX   305>>ASSIGN
TEXTC
        91**DCL       100<>CALL
TEXTC.CNT
        92**DCL        93--IMP-SIZ   100>>CALL
USER_I IN PROCEDURE MATCH_SUBSTRING
       227**DCL       224--PROC      231>>IF        241>>IF        241>>IF        253>>IF        253>>IF
USER_WORD
        79**DCL        74--PROC
USER_WORD.CNT
        80**DCL        81--IMP-SIZ   163>>IF        163>>IF        169>>IF        169>>IF        169>>IF
       181>>IF        231>>IF        241>>IF        241>>IF        253>>IF        253>>IF        295>>ASSIGN
       298>>IF
USER_WORD.TXT
        81**DCL       169>>IF        169>>IF        253>>IF        298>>IF
