VERSION B06

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:1    
        1        1        /*M* VWE$EVOM - Restore a transported file. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*F**
        9        9        *
       10       10        *   NAME:  VWE$EVOM
       11       11        *
       12       12        *   PURPOSE:
       13       13        *       To restore a BEAMed file.
       14       14        *
       15       15        *   DESCRIPTION:
       16       16        *       VWE$EVOM acts as the "catcher" for VWB$BEAM; it decodes the
       17       17        *       transmitted file and restores it as directed.
       18       18        *
       19       19        *   REFERENCE:
       20       20        *       For a description of the transmission packet, see the appropriate
       21       21        *       Architecture File document.
       22       22        *
       23       23        ****/
       24       24
       25       25        /*D**
       26       26        *
       27       27        *   NAME:  VWE$EVOM
       28       28        *
       29       29        *   CALL:
       30       30        *       CALL VWE$EVOM ALTRET...
       31       31        *
       32       32        *   PARAMETERS:
       33       33        *       None.
       34       34        *
       35       35        *   INTERFACE:
       36       36        *       VWE$EVOM calls VWX$MAIL (SCOTTY's version) and VWI$TRANSI.
       37       37        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:2    
       38       38        *   ENVIRONMENT:
       39       39        *       VWE$EVOM expects to find the VW_OPTIONS# block filled in by
       40       40        *       the caller (SCOTTY).  SCOTTY must have also "become" the user
       41       41        *       by verifying the information in the BEAM logon and placing
       42       42        *       it and the user's privileges in the JIT.
       43       43        *
       44       44        *   INPUT:
       45       45        *       Information in VW_OPTIONS#.  The BEAM, MAIL, and OPTS
       46       46        *       records are of interest here.  VW_SCRAMBLE# is set by SCOTTY
       47       47        *       before EVOM is entered.
       48       48        *
       49       49        *   OUTPUT:
       50       50        *       None.
       51       51        *
       52       52        *   DESCRIPTION:
       53       53        *       EVOM is the "catcher" program for a BEAM.  It expects to find
       54       54        *       the decoded information in OPTS and JI opened (input) to a file
       55       55        *       to be restored.  Communication back to the "user" is handled
       56       56        *       via the MAIL subprogram; BREAK is not used.  ALTRET is taken
       57       57        *       if the file cannot be restored; "BUSY" is placed in OPTS
       58       58        *       if the file is busy or the packset isn't mounted.  In the last
       59       59        *       two cases the input file is saved; otherwise, it is closed and
       60       60        *       released.
       61       61        *
       62       62        ****/
       63       63
       64       64        VWE$EVOM: PROC ALTRET;
       65       65
       66       66        /****
       67       67        *
       68       68        *   %INCLUDEs
       69       69        *
       70       70        ****/
       71       71
       72       72        %INCLUDE CP_6;
       73     5631        %INCLUDE CP_6_SUBS;
       74     6171        %INCLUDE B$JIT;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:3    
       75     6774        %INCLUDE FM$FIT;
       76     6995        %INCLUDE B_ERRORS_C;
       77     8122        %INCLUDE VW_MOVE_E;
       78     8200        %INCLUDE VWM_ERRS_E;
       79     8574        %INCLUDE VW_OPTS_M;
       80     9258        %MOVE_OPTIONS;
       81     9761
       82     9762        /****
       83     9763        *
       84     9764        *   FPTs
       85     9765        *
       86     9766        ****/
       87     9767
       88     9768        %FPT_FID(FPTN=FID_OUT,
       89     9769                 ACCT=ACCT_OUT,
       90     9770                 NAME=NAME_OUT,
       91     9771                 PASS=PASS_OUT,
       92     9772                 SN=SN_OUT,
       93     9773                 ASN=OPEN_OUT.V.ASN#,
       94     9774                 RES=OPEN_OUT.V.RES#,
       95     9775                 SACCT=YES,
       96     9776                 SNAME=YES,
       97     9777                 SPASS=YES,
       98     9778                 SSN=YES,
       99     9779                 SRES=YES,
      100     9780                 SWSN=YES,
      101     9781                 RESULTS=VLR_OUT);
      102     9804
      103     9805        %VLP_NAME(FPTN=NAME_OUT,
      104     9806                  LEN=31,
      105     9807                  NAME=' ');
      106     9834
      107     9835        %VLP_ACCT(FPTN=ACCT_OUT,
      108     9836                  ACCT='        ');
      109     9849
      110     9850        %VLP_PASS(FPTN=PASS_OUT,
      111     9851                  PASS='        ');
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:4    
      112     9864
      113     9865        %VLP_SN(FPTN=SN_OUT,
      114     9866                N=6);
      115     9879
      116     9880        %VLR_FID(FPTN=VLR_OUT);
      117     9899
      118     9900        %FPT_UNFID(FPTN=UNFID_OUT,
      119     9901                   ACCT=ACCT_OUT,
      120     9902                   ASN=OPEN_OUT.V.ASN#,
      121     9903                   NAME=NAME_OUT,
      122     9904                   RES=OPEN_OUT.V.RES#,
      123     9905                   SN=SN_OUT);
      124     9923
      125     9924        %FPT_OPEN(FPTN=OPEN_OUT,
      126     9925                  DCB=M$OUT,
      127     9926                  NAME=NAME_OUT,
      128     9927                  ACCT=ACCT_OUT,
      129     9928                  PASS=PASS_OUT,
      130     9929                  WSN=WSN_OUT,
      131     9930                  SN=SN_OUT,
      132     9931                  SCRUB=YES,
      133     9932                  FUN=CREATE,
      134     9933                  ACS=SEQUEN);
      135    10042
      136    10043        %FPT_OPEN(FPTN=OPEN_OUT_TEST,
      137    10044                  DCB=M$OUT,
      138    10045                  NAME=NAME_OUT,
      139    10046                  ACCT=ACCT_OUT,
      140    10047                  PASS=PASS_OUT,
      141    10048                  WSN=WSN_OUT,
      142    10049                  SN=SN_OUT,
      143    10050                  SCRUB=YES,
      144    10051                  FUN=IN,
      145    10052                  TEST=YES,
      146    10053                  FPARAM=OUTBUF);
      147    10162
      148    10163        %VLP_WSN(FPTN=WSN_OUT,
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:5    
      149    10164                 WSN='LOCAL');
      150    10177
      151    10178        %FPT_WRITE(FPTN=WRITE_OUT,
      152    10179                   DCB=M$OUT,
      153    10180                   BUF=OUTBUF);
      154    10211
      155    10212        %FPT_CLOSE(FPTN=CLOSE_OUT,
      156    10213                   DCB=M$OUT,
      157    10214                   DISP=SAVE,
      158    10215                   RELG=YES);
      159    10257
      160    10258        %FPT_READ(FPTN=READ_JI,
      161    10259                  DCB=M$JI);
      162    10298
      163    10299        %FPT_CLOSE(FPTN=CLOSE_JI,
      164    10300                   DCB=M$JI,
      165    10301                   DISP=SAVE);
      166    10343
      167    10344        %B$TCB;
      168    10347
      169    10348        %B$ALT;
      170    10356
      171    10357        %FM$FIT;
      172    10360
      173    10361        %CODE03;
      174    10368
      175    10369        %CODE04;
      176    10377
      177    10378
      178    10379                  %F$DCB(DCBN=DUMMY);
      179    10436
      180    10437        /****
      181    10438        *
      182    10439        *   Local variables
      183    10440        *
      184    10441        ****/
      185    10442
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:6    
      186    10443    1   DCL M$OUT                          DCB;
      187    10444    1   DCL M$JI                           DCB;
      188    10445
      189    10446    1   DCL VWX$MAIL                       ENTRY(5);
      190    10447    1   DCL VWI$TRANSI                     ENTRY(1);
      191    10448
      192    10449    1   DCL I                              SBIN;
      193    10450    1   DCL J                              SBIN;
      194    10451    1   DCL K                              SBIN;
      195    10452    1   DCL L                              SBIN;
      196    10453    1   DCL M                              UBIN;
      197    10454    1   DCL FILEORG                        SBIN;
      198    10455    1   DCL JIIDX                          SBIN;
      199    10456    1   DCL JILIM                          SBIN;
      200    10457    1   DCL OUTLIM                         SBIN;
      201    10458    1   DCL ARS                            SBIN;
      202    10459    1   DCL HOW                            SBIN;
      203    10460    1   DCL ERRDCB                         SBIN;
      204    10461
      205    10462    1   DCL ERRCODE                        SBIN;
      206    10463    1   DCL 1 ERRBITS REDEF ERRCODE,
      207    10464    1         2 FCG                        UNAL BIT(18),
      208    10465    1         2 M                          UNAL BIT(1),
      209    10466    1         2 CODE                       UNAL UBIN(14),
      210    10467    1         2 SEV                        UNAL UBIN(3);
      211    10468
      212    10469    1   DCL JIPTR                          PTR;
      213    10470    1   DCL OUTPTR                         PTR;
      214    10471    1   DCL B$JIT$ SYMREF                  PTR;
      215    10472    1   DCL B$TCB$ SYMREF                  PTR;
      216    10473
      217    10474    1   DCL 1 OUTBUF STATIC,
      218    10475    1         2 C                          CHAR(8192),
      219    10476    1         2 *                          CHAR(8192),
      220    10477    1         2 *                          CHAR(8192),
      221    10478    1         2 *                          CHAR(8192);
      222    10479
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:7    
      223    10480    1   DCL 1 KEYBUF,
      224    10481    1         2 L                          UNAL UBIN BYTE,
      225    10482    1         2 C                          UNAL CHAR(255);
      226    10483
      227    10484    1   DCL FITBUF                         CHAR(4096);
      228    10485    1   DCL JIBUF                          CHAR(80);
      229    10486    1   DCL LOBUF                          CHAR(256);
      230    10487    1   DCL DWORK                          CHAR(8);
      231    10488    1   DCL RANREL                         CHAR(4);
      232    10489
      233    10490    1   DCL 1 U1,
      234    10491    1         2 L UNAL                     UBIN BYTE,
      235    10492    1         2 C UNAL                     CHAR(79);
      236    10493    1   DCL 1 U2,
      237    10494    1         2 L UNAL                     UBIN BYTE,
      238    10495    1         2 C UNAL                     CHAR(79);
      239    10496
      240    10497    1   DCL ITSBIN                         BIT(1);
      241    10498    1   DCL VW_SCRAMBLE# SYMREF            BIT(1);
      242    10499
      243    10500        %EJECT;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:8    
      244    10501        /****
      245    10502        *
      246    10503        *   Initialize FPTs.
      247    10504        *
      248    10505        ****/
      249    10506
      250    10507    1           OUTPTR=DCBADDR(DCBNUM(M$OUT));
      251    10508    1           JIPTR=DCBADDR(DCBNUM(M$JI));
      252    10509    1           OPEN_OUT.IFPARAM_=VECTOR(FITBUF);
      253    10510    1           NAME_OUT.L#=31;
      254    10511    1           SN_OUT.NUM#=6;
      255    10512    1           READ_JI.BUF_.BUF$=ADDR(JIBUF);
      256    10513    1           READ_JI.BUF_.BOUND=79;
      257    10514    1           UNFID_OUT.LEN_=VECTOR(I);
      258    10515
      259    10516        /****
      260    10517        *
      261    10518        *   Set up output file.
      262    10519        *
      263    10520        ****/
      264    10521
      265    10522    1           I=OPTS.OUT.L-ASCBIN('/');
      266    10523    1           IF I<1 OR I>79 THEN
      267    10524    1              GOTO EVOM_BAD_OTL;
      268    10525    1           FID_OUT.TEXTFID_=VECTOR(SUBSTR(OPTS.OUT.FID,0,I));
      269    10526    1           CALL M$FID(FID_OUT) ALTRET(EVOM_BAD_OUT);
      270    10527    1           UNFID_OUT.TEXTFID_=VECTOR(U1.C);
      271    10528    1           CALL M$UNFID(UNFID_OUT);
      272    10529    1           U1.L=I;
      273    10530    1           U2.C=OPTS.OUT.NODE;
      274    10531    1           CALL INDEX(I,' ',OPTS.OUT.NODE);
      275    10532    1           U2.L=I;
      276    10533
      277    10534        /****
      278    10535        *
      279    10536        *   Decode the HOW parameter.
      280    10537        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:9    
      281    10538        ****/
      282    10539
      283    10540    1           HOW=OPTS.OUT.MISC.HOW;
      284    10541    1           IF HOW=%(%HOWINTO#-%HOWTO#) THEN
      285    10542    1              OPEN_OUT.V.EXIST#=%OLDFILE#;
      286    10543    1           ELSE IF HOW=%(%HOWOVER#-%HOWTO#) THEN
      287    10544    1                 OPEN_OUT.V.EXIST#=%NEWFILE#;
      288    10545    1              ELSE
      289    10546    1                 OPEN_OUT.V.EXIST#=%ERROR#;
      290    10547
      291    10548        /****
      292    10549        *
      293    10550        *   Fetch the file's FIT.
      294    10551        *
      295    10552        ****/
      296    10553
      297    10554    1           JIIDX=79;
      298    10555    1           JILIM=0;
      299    10556
      300    10557    1           CALL TAMROF(FITBUF,4096) ALTRET(EVOM_USRERR);
      301    10558    1           I=ADDR(FITBUF)->FM$FIT.CODES.CODE(0);
      302    10559    1           FILEORG=%CONSEC#;
      303    10560    2           DO J=1 TO I;
      304    10561    2              IF ADDR(FITBUF)->FM$FIT.CODES.CODE(J)=3 THEN
      305    10562    2                 FILEORG=PINCRW(ADDR(FITBUF),ADDR(FITBUF)->
      306    10563    2                   FM$FIT.CODES.ITEMX(J))->CODE03.ORG;
      307    10564    2              END;
      308    10565
      309    10566        /****
      310    10567        *
      311    10568        *   If DDNF (don't delete newer files) AND 'OVER' or 'INTO' AND
      312    10569        *   this is really a file AND the file exists AND its last modify
      313    10570        *   date is greater than the date in the MOVEd file THEN skip it.
      314    10571        *
      315    10572        ****/
      316    10573
      317    10574    1           IF OPTS.OUT.MISC.DDNF AND OPEN_OUT.V.EXIST#~=%ERROR# AND
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:10   
      318    10575
      319    10576        /****
      320    10577        *
      321    10578        *   OVER or INTO selected.
      322    10579        *
      323    10580        ****/
      324    10581
      325    10582    2             OPEN_OUT.V.ASN#=%FILE# THEN DO;
      326    10583    2              J=ADDR(FITBUF)->FM$FIT.CODES.CODE(0);
      327    10584
      328    10585        /****
      329    10586        *
      330    10587        *   Locate CODE04 entry in transmitted file.
      331    10588        *
      332    10589        ****/
      333    10590
      334    10591    3              DO I=1 TO J;
      335    10592    4                 IF ADDR(FITBUF)->FM$FIT.CODES.CODE(I)=4 THEN DO;
      336    10593    4                    M=PINCRW(ADDR(FITBUF),ADDR(FITBUF)->FM$FIT.CODES.ITEMX
      337    10594    4                      (I))->CODE04.MODIFY.TIME;
      338    10595
      339    10596        /****
      340    10597        *
      341    10598        *   Open output file input in test mode and get its times.
      342    10599        *
      343    10600        ****/
      344    10601
      345    10602    4                    OPEN_OUT_TEST.V.ASN#=OPEN_OUT.V.ASN#;
      346    10603    4                    OPEN_OUT_TEST.V.RES#=OPEN_OUT.V.RES#;
      347    10604    5                    CALL M$OPEN(OPEN_OUT_TEST) WHENRETURN DO;
      348    10605
      349    10606        /****
      350    10607        *
      351    10608        *   Locate the CODE04 entry.
      352    10609        *
      353    10610        ****/
      354    10611
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:11   
      355    10612    5                       L=ADDR(OUTBUF)->FM$FIT.CODES.CODE(0);
      356    10613    6                       DO K=1 TO L;
      357    10614    6                          IF ADDR(OUTBUF)->FM$FIT.CODES.CODE(K)=4 THEN
      358    10615    6                             IF M<PINCRW(ADDR(OUTBUF),ADDR(OUTBUF)
      359    10616    6                               ->FM$FIT.CODES.ITEMX(K))->CODE04.MODIFY.TIME
      360    10617    7                             THEN DO;
      361    10618    7                                ERRCODE=%E$VWM_NWR;
      362    10619    7                                GOTO EVOM_USRERR;
      363    10620    7                                END;
      364    10621    6                          END;
      365    10622
      366    10623    5                       END /* M$OPEN */;
      367    10624
      368    10625    4                    END /* of CODE04 processing */;
      369    10626
      370    10627    3                 END /* Lookup of transmitted file's FIT */;
      371    10628
      372    10629    2              END /* of DDNF processing */;
      373    10630
      374    10631        /****
      375    10632        *
      376    10633        *   Open the file, supplying appropriate parameters:
      377    10634        *
      378    10635        *   Disk files get opened DIRECT, all others SEQUEN.
      379    10636        *   Paper output gets a WSN, all others none.
      380    10637        *   Alternate keyed files get LOAD=YES, ALTBLD=YES.
      381    10638        *
      382    10639        ****/
      383    10640
      384    10641    1           IF HOW=%(%HOWINTO#-%HOWTO#) AND FILEORG~=%CONSEC# AND FILEORG~=%UR#
      385    10642    1             AND FILEORG~=%TERMINAL# THEN
      386    10643    1              OPEN_OUT.V.ACS#=%DIRECT#;
      387    10644    1           ELSE
      388    10645    1              OPEN_OUT.V.ACS#=%SEQUEN#;
      389    10646
      390    10647    1           IF OPEN_OUT.V.RES#='LP  ' OR OPEN_OUT.V.RES#='CP  ' THEN
      391    10648    1              OPEN_OUT.WSN_=VECTOR(WSN_OUT);
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:12   
      392    10649    1           ELSE
      393    10650    1              OPEN_OUT.WSN_=VECTOR(NIL);
      394    10651
      395    10652    2           IF FILEORG=%INDEXED# THEN DO;
      396    10653    2              OPEN_OUT.V.LOAD#='1'B;
      397    10654    2              CLOSE_OUT.V.ALTBLD#='1'B;
      398    10655    2              END;
      399    10656    2           ELSE DO;
      400    10657    2              OPEN_OUT.V.LOAD#='01'B;
      401    10658    2              CLOSE_OUT.V.ALTBLD#='01'B;
      402    10659    2              END;
      403    10660
      404    10661    1           CALL M$OPEN(OPEN_OUT) ALTRET(EVOM_BAD_ONE);
      405    10662
      406    10663        /****
      407    10664        *
      408    10665        *   Now set up the M$WRITE parameters specific for the file type.
      409    10666        *
      410    10667        ****/
      411    10668
      412    10669    2           DO CASE(FILEORG);
      413    10670
      414    10671        /****
      415    10672        *
      416    10673        *   Consecutive, UR, terminal files.
      417    10674        *
      418    10675        ****/
      419    10676
      420    10677    2            CASE(%CONSEC#,%UR#,%TERMINAL#);
      421    10678    2              WRITE_OUT.KEY_=VECTOR(NIL);
      422    10679    2              WRITE_OUT.V.ONEWKEY#='0'B;
      423    10680    2              WRITE_OUT.V.NOTIME#='0'B;
      424    10681    2              WRITE_OUT.V.FULL#='0'B;
      425    10682
      426    10683        /****
      427    10684        *
      428    10685        *   Keyed files.
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:13   
      429    10686        *
      430    10687        ****/
      431    10688
      432    10689    2            CASE(%KEYED#);
      433    10690    2              WRITE_OUT.KEY_=VECTOR(KEYBUF);
      434    10691    2              WRITE_OUT.V.ONEWKEY#='1'B;
      435    10692    2              WRITE_OUT.V.NOTIME#='0'B;
      436    10693    2              WRITE_OUT.V.FULL#='0'B;
      437    10694
      438    10695        /****
      439    10696        *
      440    10697        *   Random files.
      441    10698        *
      442    10699        ****/
      443    10700
      444    10701    2            CASE(%RANDOM#);
      445    10702    2              WRITE_OUT.KEY_=VECTOR(RANREL);
      446    10703    2              WRITE_OUT.V.ONEWKEY#='1'B;
      447    10704    2              WRITE_OUT.V.NOTIME#='0'B;
      448    10705    2              WRITE_OUT.V.FULL#='0'B;
      449    10706
      450    10707        /****
      451    10708        *
      452    10709        *   Relative files.
      453    10710        *
      454    10711        ****/
      455    10712
      456    10713    2            CASE(%RELATIVE#);
      457    10714    2              WRITE_OUT.KEY_=VECTOR(RANREL);
      458    10715    2              WRITE_OUT.V.ONEWKEY#='1'B;
      459    10716    2              WRITE_OUT.V.NOTIME#='0'B;
      460    10717    2              WRITE_OUT.V.FULL#='0'B;
      461    10718
      462    10719        /****
      463    10720        *
      464    10721        *   Indexed files.
      465    10722        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:14   
      466    10723        ****/
      467    10724
      468    10725    2            CASE(%INDEXED#,%IREL#);
      469    10726    2              WRITE_OUT.KEY_=VECTOR(NIL);
      470    10727    2              WRITE_OUT.V.ONEWKEY#='1'B;
      471    10728    2              WRITE_OUT.V.NOTIME#='0'B;
      472    10729    2              WRITE_OUT.V.FULL#='0'B;
      473    10730
      474    10731        /****
      475    10732        *
      476    10733        *   IDS files.
      477    10734        *
      478    10735        ****/
      479    10736
      480    10737    2            CASE(%IDS#);
      481    10738    2              WRITE_OUT.KEY_=VECTOR(RANREL);
      482    10739    2              WRITE_OUT.V.ONEWKEY#='0'B;
      483    10740    2              WRITE_OUT.V.NOTIME#='1'B;
      484    10741    2              WRITE_OUT.V.FULL#='1'B;
      485    10742
      486    10743        /****
      487    10744        *
      488    10745        *   Everything else is an error.  In particular, ANS tape formats aren't
      489    10746        *   legal, as is block mode access.
      490    10747        *
      491    10748        ****/
      492    10749
      493    10750    2            CASE(ELSE);
      494    10751    2              GOTO EVOM_BAD_ORG;
      495    10752
      496    10753    2            END;
      497    10754
      498    10755        /****
      499    10756        *
      500    10757        *   Restore the file.
      501    10758        *
      502    10759        ****/
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:15   
      503    10760
      504    10761    2           DO WHILE('1'B);
      505    10762    2              CALL TAMROF(OUTBUF,32768) ALTRET(EVOM_BAD_INP);
      506    10763    2              IF FILEORG=%RANDOM# OR FILEORG=%RELATIVE# OR FILEORG=%IDS# THEN
      507    10764    2                 RANREL=KEYBUF.C;
      508    10765    3              IF OUTLIM>0 THEN DO;
      509    10766    3                 WRITE_OUT.BUF_.BOUND=OUTLIM-1;
      510    10767    3                 WRITE_OUT.BUF_.BUF$=ADDR(OUTBUF);
      511    10768    3                 END;
      512    10769    3              ELSE DO;
      513    10770    3                 WRITE_OUT.BUF_.BOUND=0;
      514    10771    3                 WRITE_OUT.BUF_.BUF$=ADDR(NIL);
      515    10772    3                 END;
      516    10773    2              CALL M$WRITE(WRITE_OUT) ALTRET(EVOM_BAD_ONE);
      517    10774    2              END;
      518    10775
      519    10776        /****
      520    10777        *
      521    10778        *   The output FID is too long.
      522    10779        *
      523    10780        ****/
      524    10781
      525    10782    1   EVOM_BAD_OTL:
      526    10783    1           ERRCODE=%E$VWM_OTL;
      527    10784    1           GOTO EVOM_USRERR;
      528    10785
      529    10786        /****
      530    10787        *
      531    10788        *   Output FID isn't legal.
      532    10789        *
      533    10790        ****/
      534    10791
      535    10792    1   EVOM_BAD_OUT:
      536    10793    1           ERRCODE=%E$VWM_OUT;
      537    10794    1           GOTO EVOM_USRERR;
      538    10795
      539    10796        /****
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:16   
      540    10797        *
      541    10798        *   Can't restore files of this organization.
      542    10799        *
      543    10800        ****/
      544    10801
      545    10802    1   EVOM_BAD_ORG:
      546    10803    1           ERRCODE=%E$VWM_ORG;
      547    10804    1           GOTO EVOM_USRERR;
      548    10805
      549    10806        /****
      550    10807        *
      551    10808        *   Error opening or writing the output file.
      552    10809        *
      553    10810        ****/
      554    10811
      555    10812    1   EVOM_BAD_ONE:
      556    10813    1           ERRBITS=B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      557    10814    1           ERRBITS.SEV=0;
      558    10815
      559    10816        /****
      560    10817        *
      561    10818        *   If the output file is simply busy, try later.
      562    10819        *
      563    10820        ****/
      564    10821
      565    10822    1           IF ERRBITS.CODE=%E$FILEBUSY OR ERRBITS.CODE=%E$SETDOWN OR
      566    10823    2             ERRBITS.CODE=%E$NONEWU OR ERRBITS.CODE=%E$XCLSET THEN DO;
      567    10824    2              OPTS.MAILINIT.CMD='BUSY';
      568    10825    2              CLOSE_JI.V.DISP#=%SAVE#;
      569    10826    2              CALL M$CLOSE(CLOSE_JI);
      570    10827    2              ALTRETURN;
      571    10828    2              END;
      572    10829    1           ERRDCB=DCBNUM(M$OUT);
      573    10830    1           GOTO EVOM_SYSERR;
      574    10831
      575    10832        /****
      576    10833        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:17   
      577    10834        *   Handle EOF on the input stream by exiting normally.  Also handle
      578    10835        *   unexpected EOF on the input stream.  This is usually caused by
      579    10836        *   the link going down in mid-transmission.  CP-6 keeps the partial
      580    10837        *   input file on the receiving end instead of deleting it.  Control-Y
      581    10838        *   out of MOVE will also cause this, since MOVE doesn't take exit
      582    10839        *   control to do cleanup.
      583    10840        *
      584    10841        ****/
      585    10842
      586    10843    1   EVOM_BAD_INP:
      587    10844    1           IF JIIDX~=0 OR JILIM~=0 OR SUBSTR(JIBUF,0,4)~=' EOF' THEN
      588    10845    1              GOTO EVOM_USRERR;
      589    10846    1           CLOSE_OUT.V.DISP#=%SAVE#;
      590    10847    1           CALL M$CLOSE(CLOSE_OUT) ALTRET(EVOM_BAD_ONE);
      591    10848    1           CLOSE_JI.V.DISP#=%RELEASE#;
      592    10849    1           CALL M$CLOSE(CLOSE_JI);
      593    10850    1           CALL VWX$MAIL(%E$VWM_SUC,VECTOR(U1),VECTOR(U2));
      594    10851    1           RETURN;
      595    10852
      596    10853        /****
      597    10854        *
      598    10855        *   Generate a user-error code.
      599    10856        *
      600    10857        ****/
      601    10858
      602    10859    1   EVOM_USRERR:
      603    10860    1           CALL VWX$MAIL(ERRCODE);
      604    10861    1           GOTO EVOM_ABORT;
      605    10862
      606    10863        /****
      607    10864        *
      608    10865        *   Generate a system error message, using the appropriate DCB info.
      609    10866        *
      610    10867        ****/
      611    10868
      612    10869    1   EVOM_SYSERR:
      613    10870    1           ERRBITS=B$TCB$->B$TCB.ALT$->B$ALT.ERR;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:18   
      614    10871    1           ERRBITS.SEV=0;
      615    10872    1           CALL VWX$MAIL(ERRCODE,,,,ERRDCB);
      616    10873    1           GOTO EVOM_ABORT;
      617    10874
      618    10875        /****
      619    10876        *
      620    10877        *   Abort this restore process.  If the output file is being extended,
      621    10878        *   don't release it; otherwise trash it.  This will preserve an
      622    10879        *   existing file (if any).
      623    10880        *
      624    10881        ****/
      625    10882
      626    10883    1   EVOM_ABORT:
      627    10884    1           CLOSE_JI.V.DISP#=%RELEASE#;
      628    10885    1           IF JIPTR->DUMMY.FCD# THEN
      629    10886    1              CALL M$CLOSE(CLOSE_JI);
      630    10887    2           IF OUTPTR->DUMMY.FCD# THEN DO;
      631    10888    2              IF OUTPTR->DUMMY.FEXT THEN
      632    10889    2                 CLOSE_OUT.V.DISP#=%SAVE#;
      633    10890    2              ELSE
      634    10891    2                 CLOSE_OUT.V.DISP#=%RELEASE#;
      635    10892    2              CALL M$CLOSE(CLOSE_OUT);
      636    10893    2              END;
      637    10894    1           CALL VWX$MAIL(%E$VWM_FAL,VECTOR(U1),VECTOR(U2));
      638    10895    1           ALTRETURN;
      639    10896
      640    10897        %EJECT;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:19   
      641    10898        /*I**
      642    10899        *
      643    10900        *   NAME:  TAMROF
      644    10901        *
      645    10902        *   PURPOSE:
      646    10903        *       To read and decode a record into the buffer.
      647    10904        *
      648    10905        *   CALL:
      649    10906        *       CALL TAMROF(bfr,siz) ALTRET...
      650    10907        *
      651    10908        *   PARAMETERS:
      652    10909        *       bfr - is the buffer into which data are to be placed.  siz - is the
      653    10910        *       length of bfr.
      654    10911        *
      655    10912        *   DATA:
      656    10913        *       If the file is keyed (examine FILEORG), the "key" of the record
      657    10914        *       is placed in KEYBUF.  The DVBYTE is placed in WRITE_OUT.V.DVBYTE.
      658    10915        *       Global variables JILIM and JIIDX mark the end and current position
      659    10916        *       in the input buffer JIBUF.  ARS will contain the actual size of the
      660    10917        *       record, which may be greater than the siz parameter.
      661    10918        *
      662    10919        *   DESCRIPTION:
      663    10920        *       Unformat a record into BFR of length SIZ.  ALTRET on EOF or
      664    10921        *       if any errors occur.
      665    10922        *
      666    10923        ****/
      667    10924
      668    10925    1   TAMROF: PROC(BFR,SIZ) ALTRET;
      669    10926
      670    10927    2   DCL BFR                            CHAR(SIZ);
      671    10928    2   DCL SIZ                            SBIN;
      672    10929
      673    10930        /****
      674    10931        *
      675    10932        *   If CONT is not set, we must get the record's length bytes.
      676    10933        *
      677    10934        ****/
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:20   
      678    10935
      679    10936    3           IF NOT WRITE_OUT.V.DVBYTE.CONT# THEN DO;
      680    10937    4              IF SIZ>4096 THEN DO;
      681    10938
      682    10939        /****
      683    10940        *
      684    10941        *   Get the file's "key" if it is keyed, random, IDS, or relative.
      685    10942        *
      686    10943        ****/
      687    10944
      688    10945    4                 IF FILEORG=%KEYED# OR FILEORG=%RANDOM# OR FILEORG=%RELATIVE#
      689    10946    5                   OR FILEORG=%IDS# THEN DO;
      690    10947
      691    10948        /****
      692    10949        *
      693    10950        *   Get the length of the key.
      694    10951        *
      695    10952        ****/
      696    10953
      697    10954    5                    CALL GETLEN ALTRET(TAMROF_ABORT);
      698    10955    5                    IF ARS<1 OR ARS>255 THEN
      699    10956    5                       GOTO TAMROF_BAD_SYN;
      700    10957
      701    10958        /****
      702    10959        *
      703    10960        *   Now fetch the key.
      704    10961        *
      705    10962        ****/
      706    10963
      707    10964    5                    KEYBUF.L=ARS;
      708    10965    5                    OUTLIM=ARS;
      709    10966    5                    CALL GETDAT(KEYBUF.C) ALTRET(TAMROF_BAD_SYN);
      710    10967
      711    10968    5                    END /* of key processing */;
      712    10969
      713    10970        /****
      714    10971        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:21   
      715    10972        *   Now fetch the DVBYTE, sent for every record in every organization.
      716    10973        *
      717    10974        ****/
      718    10975
      719    10976    4                 JIIDX=JIIDX+1;
      720    10977    4                 IF JIIDX>=JILIM THEN
      721    10978    4                    CALL FFUTS ALTRET(TAMROF_ABORT);
      722    10979    4                 WRITE_OUT.V.DVBYTE=BINBIT(ASCBIN(SUBSTR(JIBUF,JIIDX,1))-
      723    10980    4                   ASCBIN(' '),8)&'00111000'B;
      724    10981    4                 END;
      725    10982
      726    10983        /****
      727    10984        *
      728    10985        *   Now get the true length of the record into ARS.
      729    10986        *
      730    10987        ****/
      731    10988
      732    10989    3              CALL GETLEN ALTRET(TAMROF_ABORT);
      733    10990    3              END;
      734    10991
      735    10992        /****
      736    10993        *
      737    10994        *   We use a buffer of 32K bytes.  If the records are longer than this,
      738    10995        *   we must do read and write continues.  This only works for disk files
      739    10996        *   and only if they are not compressed.
      740    10997        *
      741    10998        ****/
      742    10999
      743    11000    2           OUTLIM=ARS;
      744    11001    3           IF ARS>SIZ THEN DO;
      745    11002    3              WRITE_OUT.V.DVBYTE.CONT#='1'B;
      746    11003    3              OUTLIM=SIZ;
      747    11004    3              END;
      748    11005    2           ELSE
      749    11006    2              WRITE_OUT.V.DVBYTE.CONT#='0'B;
      750    11007
      751    11008        /****
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:22   
      752    11009        *
      753    11010        *   Read (this portion of) the record.
      754    11011        *
      755    11012        ****/
      756    11013
      757    11014    2           CALL GETDAT(BFR) ALTRET(TAMROF_BAD_SYN);
      758    11015
      759    11016        /****
      760    11017        *
      761    11018        *   Account for this section of the record and return.
      762    11019        *
      763    11020        ****/
      764    11021
      765    11022    2           ARS=ARS-OUTLIM;
      766    11023
      767    11024    2           RETURN;
      768    11025
      769    11026        /****
      770    11027        *
      771    11028        *   A syntax error was encountered in the input stream.  ALTRET.
      772    11029        *
      773    11030        ****/
      774    11031
      775    11032    2   TAMROF_BAD_SYN:
      776    11033    2           ERRCODE=%E$VWM_STX;
      777    11034    2           ALTRETURN;
      778    11035
      779    11036        /****
      780    11037        *
      781    11038        *   A monitor error occurred.  ALTRET.
      782    11039        *
      783    11040        ****/
      784    11041
      785    11042    2   TAMROF_ABORT:
      786    11043    2           ALTRETURN;
      787    11044
      788    11045    2   END;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:23   
      789    11046
      790    11047        %EJECT;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:24   
      791    11048        /*I**
      792    11049        *
      793    11050        *   NAME:  GETLEN
      794    11051        *
      795    11052        *   PURPOSE:
      796    11053        *       Fetch the length token from the input stream.
      797    11054        *
      798    11055        *   CALL:
      799    11056        *       CALL GETLEN ALTRET...
      800    11057        *
      801    11058        *   PARAMETERS:
      802    11059        *       None.
      803    11060        *
      804    11061        *   DATA:
      805    11062        *       JIIDX and JILIM mark the current position and limit in JIBUF.
      806    11063        *       ARS is set to the value of the length token, if valid.  The
      807    11064        *       ITSBIN bit variable is set if the data are encoded in 3-for-2
      808    11065        *       format; otherwise it is cleared.
      809    11066        *
      810    11067        *   DESCRIPTION:
      811    11068        *       Get and reformat a length code and place it in ARS.  ALTRET
      812    11069        *       if an error occurs, such as EOF.
      813    11070        *
      814    11071        ****/
      815    11072
      816    11073    1   GETLEN: PROC ALTRET;
      817    11074
      818    11075    2   DCL CH                             CHAR(1);
      819    11076
      820    11077        /****
      821    11078        *
      822    11079        *   Assume the length is zero and get the next input byte.
      823    11080        *
      824    11081        ****/
      825    11082
      826    11083    2           ARS=0;
      827    11084
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:25   
      828    11085    2           JIIDX=JIIDX+1;
      829    11086    2           IF JIIDX>=JILIM THEN
      830    11087    2              CALL FFUTS ALTRET(GETLEN_ABORT);
      831    11088    2           CH=SUBSTR(JIBUF,JIIDX,1);
      832    11089
      833    11090        /****
      834    11091        *
      835    11092        *   If this isn't a legal length code, ALTRET.
      836    11093        *
      837    11094        ****/
      838    11095
      839    11096    2           IF CH>'`' THEN
      840    11097    2              GOTO GETLEN_BAD_SYN;
      841    11098
      842    11099        /****
      843    11100        *
      844    11101        *   If this is the special zero-length code, just return.
      845    11102        *
      846    11103        ****/
      847    11104
      848    11105    2           IF CH='`' THEN
      849    11106    2              RETURN;
      850    11107
      851    11108        /****
      852    11109        *
      853    11110        *   Check for the E-bit (3-for-2 format encoding of binary data).
      854    11111        *
      855    11112        ****/
      856    11113
      857    11114    3           IF CH>='@' THEN DO;
      858    11115    3              ITSBIN='1'B;
      859    11116    3              CH=BINASC(ASCBIN(CH)-32);
      860    11117    3              END;
      861    11118    2           ELSE
      862    11119    2              ITSBIN='0'B;
      863    11120
      864    11121        /****
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:26   
      865    11122        *
      866    11123        *   Check for four length bytes and collect them.
      867    11124        *
      868    11125        ****/
      869    11126
      870    11127    3           IF CH>='<' THEN DO;
      871    11128    3              ARS=(ASCBIN(CH)-ASCBIN('<'))*262144;
      872    11129
      873    11130    3              JIIDX=JIIDX+1;
      874    11131    3              IF JIIDX>=JILIM THEN
      875    11132    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);
      876    11133    3              CH=SUBSTR(JIBUF,JIIDX,1);
      877    11134    3              IF CH<' ' OR CH>'_' THEN
      878    11135    3                 GOTO GETLEN_BAD_SYN;
      879    11136    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))*4096;
      880    11137
      881    11138    3              JIIDX=JIIDX+1;
      882    11139    3              IF JIIDX>=JILIM THEN
      883    11140    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);
      884    11141    3              CH=SUBSTR(JIBUF,JIIDX,1);
      885    11142    3              IF CH<' ' OR CH>'_' THEN
      886    11143    3                 GOTO GETLEN_BAD_SYN;
      887    11144    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))*64;
      888    11145
      889    11146    3              JIIDX=JIIDX+1;
      890    11147    3              IF JIIDX>=JILIM THEN
      891    11148    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);
      892    11149    3              CH=SUBSTR(JIBUF,JIIDX,1);
      893    11150    3              IF CH<' ' OR CH>'_' THEN
      894    11151    3                 GOTO GETLEN_BAD_SYN;
      895    11152    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))+1;
      896    11153
      897    11154    3              RETURN;
      898    11155    3              END;
      899    11156
      900    11157        /****
      901    11158        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:27   
      902    11159        *   Check for three length bytes and collect them.
      903    11160        *
      904    11161        ****/
      905    11162
      906    11163    3           IF CH>='8' THEN DO;
      907    11164    3              ARS=(ASCBIN(CH)-ASCBIN('8'))*4096;
      908    11165
      909    11166    3              JIIDX=JIIDX+1;
      910    11167    3              IF JIIDX>=JILIM THEN
      911    11168    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);
      912    11169    3              CH=SUBSTR(JIBUF,JIIDX,1);
      913    11170    3              IF CH<' ' OR CH>'_' THEN
      914    11171    3                 GOTO GETLEN_BAD_SYN;
      915    11172    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))*64;
      916    11173
      917    11174    3              JIIDX=JIIDX+1;
      918    11175    3              IF JIIDX>=JILIM THEN
      919    11176    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);
      920    11177    3              CH=SUBSTR(JIBUF,JIIDX,1);
      921    11178    3              IF CH<' ' OR CH>'_' THEN
      922    11179    3                 GOTO GETLEN_BAD_SYN;
      923    11180    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))+1;
      924    11181
      925    11182    3              RETURN;
      926    11183    3              END;
      927    11184
      928    11185        /****
      929    11186        *
      930    11187        *   Check for two length bytes and collect them.
      931    11188        *
      932    11189        ****/
      933    11190
      934    11191    3           IF CH>='0' THEN DO;
      935    11192    3              ARS=(ASCBIN(CH)-ASCBIN('0'))*64;
      936    11193
      937    11194    3              JIIDX=JIIDX+1;
      938    11195    3              IF JIIDX>=JILIM THEN
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:28   
      939    11196    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);
      940    11197    3              CH=SUBSTR(JIBUF,JIIDX,1);
      941    11198    3              IF CH<' ' OR CH>'_' THEN
      942    11199    3                 GOTO GETLEN_BAD_SYN;
      943    11200    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))+1;
      944    11201
      945    11202    3              RETURN;
      946    11203    3              END;
      947    11204
      948    11205        /****
      949    11206        *
      950    11207        *   Check for one length byte.
      951    11208        *
      952    11209        ****/
      953    11210
      954    11211    3           IF CH>=' ' THEN DO;
      955    11212    3              ARS=(ASCBIN(CH)-ASCBIN(' '))+1;
      956    11213    3              RETURN;
      957    11214    3              END;
      958    11215
      959    11216        /****
      960    11217        *
      961    11218        *   Fall through (or branch) here if an illegal length code is detected.
      962    11219        *
      963    11220        ****/
      964    11221
      965    11222    2   GETLEN_BAD_SYN:
      966    11223    2           ERRCODE=%E$VWM_STX;
      967    11224    2           ALTRETURN;
      968    11225
      969    11226        /****
      970    11227        *
      971    11228        *   Hardware error reading bytes.  ALTRET.
      972    11229        *
      973    11230        ****/
      974    11231
      975    11232    2   GETLEN_ABORT:
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:29   
      976    11233    2           ALTRETURN;
      977    11234
      978    11235    2   END;
      979    11236
      980    11237        %EJECT;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:30   
      981    11238        /*I**
      982    11239        *
      983    11240        *   NAME:  GETDAT
      984    11241        *
      985    11242        *   PURPOSE:
      986    11243        *       Read and decode the "data" portion of a record (key or data).
      987    11244        *
      988    11245        *   CALL:
      989    11246        *       CALL GETDAT(bfr) ALTRET...
      990    11247        *
      991    11248        *   PARAMETERS:
      992    11249        *       bfr - is the buffer into which the output is to be placed.
      993    11250        *
      994    11251        *   DATA:
      995    11252        *       The global variable OUTLIM contains the length of bfr.  ITSBIN
      996    11253        *       (if set) specifies translation from 3-for-2 format back into
      997    11254        *       binary mode.  The global symbols JIIDX and JILIM mark the current
      998    11255        *       position and limit of the data in JIBUF.
      999    11256        *
     1000    11257        *   DESCRIPTION:
     1001    11258        *       Fetch a data record into BFR of length OUTLIM.  This may be a
     1002    11259        *       partial record.  ALTRET on any error, such as EOF.
     1003    11260        *
     1004    11261        ****/
     1005    11262
     1006    11263    1   GETDAT: PROC(BFR) ALTRET;
     1007    11264
     1008    11265    2   DCL BFR                            CHAR(OUTLIM);
     1009    11266    2   DCL I                              SBIN;
     1010    11267    2   DCL J                              SBIN;
     1011    11268    2   DCL CH                             CHAR(1);
     1012    11269
     1013    11270        /****
     1014    11271        *
     1015    11272        *   If the record is in binary 3-for-2 format, collect 50% more bytes
     1016    11273        *   and decode them 3x6 into 2x9 bits.
     1017    11274        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:31   
     1018    11275        ****/
     1019    11276
     1020    11277    3           IF ITSBIN THEN DO;
     1021    11278    4              DO I=0 TO OUTLIM-1 BY 2;
     1022    11279
     1023    11280    4                 JIIDX=JIIDX+1;
     1024    11281    4                 IF JIIDX>=JILIM THEN
     1025    11282    4                    CALL FFUTS ALTRET(GETDAT_BAD_SYN);
     1026    11283    4                 CH=SUBSTR(JIBUF,JIIDX,1);
     1027    11284    4                 IF CH<' ' OR CH>'_' THEN
     1028    11285    4                    GOTO GETDAT_BAD_SYN;
     1029    11286    4                 J=4096*(ASCBIN(CH)-ASCBIN(' '));
     1030    11287
     1031    11288    4                 JIIDX=JIIDX+1;
     1032    11289    4                 IF JIIDX>=JILIM THEN
     1033    11290    4                    CALL FFUTS ALTRET(GETDAT_BAD_SYN);
     1034    11291    4                 CH=SUBSTR(JIBUF,JIIDX,1);
     1035    11292    4                 IF CH<' ' OR CH>'_' THEN
     1036    11293    4                    GOTO GETDAT_BAD_SYN;
     1037    11294    4                 J=J+64*(ASCBIN(CH)-ASCBIN(' '));
     1038    11295
     1039    11296    4                 JIIDX=JIIDX+1;
     1040    11297    4                 IF JIIDX>=JILIM THEN
     1041    11298    4                    CALL FFUTS ALTRET(GETDAT_BAD_SYN);
     1042    11299    4                 CH=SUBSTR(JIBUF,JIIDX,1);
     1043    11300    4                 IF CH<' ' OR CH>'_' THEN
     1044    11301    4                    GOTO GETDAT_BAD_SYN;
     1045    11302    4                 J=J+(ASCBIN(CH)-ASCBIN(' '));
     1046    11303
     1047    11304    4                 CALL INSERT(BFR,I,1,BINASC(J/512));
     1048    11305    4                 CALL INSERT(BFR,I+1,1,BINASC(MOD(J,512)));
     1049    11306    4                 END;
     1050    11307    3              END;
     1051    11308
     1052    11309        /****
     1053    11310        *
     1054    11311        *   Otherwise, move the rest of the input buffer bytes (if any) and,
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:32   
     1055    11312        *   if necessary, read more records until the input buffer is full.
     1056    11313        *
     1057    11314        ****/
     1058    11315
     1059    11316    3           ELSE DO;
     1060    11317    3              I=0;
     1061    11318    4              DO WHILE(I<OUTLIM);
     1062    11319    4                 JIIDX=JIIDX+1;
     1063    11320    4                 IF JIIDX>=JILIM THEN
     1064    11321    4                    CALL FFUTS ALTRET(GETDAT_BAD_SYN);
     1065    11322    4                 J=JILIM-JIIDX;
     1066    11323    4                 IF J>OUTLIM-I THEN
     1067    11324    4                    J=OUTLIM-I;
     1068    11325    4                 CALL INSERT(BFR,I,J,SUBSTR(JIBUF,JIIDX,J));
     1069    11326    4                 JIIDX=JIIDX+J-1;
     1070    11327    4                 I=I+J;
     1071    11328    4                 END;
     1072    11329    3              END;
     1073    11330
     1074    11331    2           RETURN;
     1075    11332
     1076    11333        /****
     1077    11334        *
     1078    11335        *   Syntax error in the packet.  ALTRET.
     1079    11336        *
     1080    11337        ****/
     1081    11338
     1082    11339    2   GETDAT_BAD_SYN:
     1083    11340    2           ERRCODE=%E$VWM_STX;
     1084    11341    2           ALTRETURN;
     1085    11342
     1086    11343    2   END;
     1087    11344
     1088    11345        %EJECT;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:33   
     1089    11346        /*I**
     1090    11347        *
     1091    11348        *   NAME:  FFUTS
     1092    11349        *
     1093    11350        *   PURPOSE:
     1094    11351        *       To read the next record from the input file.
     1095    11352        *
     1096    11353        *   CALL:
     1097    11354        *       CALL FFUTS ALTRET...
     1098    11355        *
     1099    11356        *   PARAMETERS:
     1100    11357        *       None.
     1101    11358        *
     1102    11359        *   DATA:
     1103    11360        *       JIBUF is cleared, then read into.  JILIM is set to the value
     1104    11361        *       found in the input record and JIIDX is set to 1.  VW_SCRAMBLE#
     1105    11362        *       (if set) specifies that VWI$TRANSI is to be used to descramble
     1106    11363        *       the input record.  ERRCODE may be set.
     1107    11364        *
     1108    11365        *   DESCRIPTION:
     1109    11366        *       Clear JIBUF and read a record into it; ALTRET on errors or
     1110    11367        *       EOF.  Put length in JILIM (from column 1) and point JIIDX to
     1111    11368        *       column 2.
     1112    11369        *
     1113    11370        ****/
     1114    11371
     1115    11372    1   FFUTS:  PROC ALTRET;
     1116    11373
     1117    11374        /****
     1118    11375        *
     1119    11376        *   We must clear JIBUF to blanks because CP-6 UR handling deletes
     1120    11377        *   trailing blanks prior to transmission, and they may be significant.
     1121    11378        *
     1122    11379        ****/
     1123    11380
     1124    11381    2           JIBUF=' ';
     1125    11382
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:34   
     1126    11383        /****
     1127    11384        *
     1128    11385        *   Read an 80-byte record and check for silliness.
     1129    11386        *
     1130    11387        ****/
     1131    11388
     1132    11389    2           CALL M$READ(READ_JI) ALTRET(FFUTS_EOF);
     1133    11390    2           JILIM=JIPTR->DUMMY.ARS#;
     1134    11391    3           IF JILIM<1 OR JILIM>80 THEN DO;
     1135    11392    3              ERRCODE=%E$VWM_STX;
     1136    11393    3              ALTRETURN;
     1137    11394    3              END;
     1138    11395
     1139    11396        /****
     1140    11397        *
     1141    11398        *   Check for the special EOF code.
     1142    11399        *
     1143    11400        ****/
     1144    11401
     1145    11402    3           IF SUBSTR(JIBUF,0,4)=' EOF' THEN DO;
     1146    11403    3              JIIDX=0;
     1147    11404    3              JILIM=0;
     1148    11405    3              ALTRETURN;
     1149    11406    3              END;
     1150    11407
     1151    11408        /****
     1152    11409        *
     1153    11410        *   If the records are scrambled, unscramble them.
     1154    11411        *
     1155    11412        ****/
     1156    11413
     1157    11414    2           IF VW_SCRAMBLE# THEN
     1158    11415    2              CALL VWI$TRANSI(JIBUF);
     1159    11416
     1160    11417        /****
     1161    11418        *
     1162    11419        *   Compute the true length of the record, based on the length byte in CC 1.
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:35   
     1163    11420        *
     1164    11421        ****/
     1165    11422
     1166    11423    2           JILIM=ASCBIN(SUBSTR(JIBUF,0,1))-ASCBIN('/');
     1167    11424    3           IF JILIM<1 OR JILIM>79 THEN DO;
     1168    11425    3              ERRCODE=%E$VWM_STX;
     1169    11426    3              ALTRETURN;
     1170    11427    3              END;
     1171    11428
     1172    11429        /****
     1173    11430        *
     1174    11431        *   Adjust the limit and reset the index pointer.
     1175    11432        *
     1176    11433        ****/
     1177    11434
     1178    11435    2           JILIM=JILIM+1;
     1179    11436    2           JIIDX=1;
     1180    11437
     1181    11438    2           RETURN;
     1182    11439
     1183    11440        /****
     1184    11441        *
     1185    11442        *   This doesn't look good for the home team.
     1186    11443        *
     1187    11444        ****/
     1188    11445
     1189    11446    2   FFUTS_EOF:
     1190    11447    2           ALTRETURN;
     1191    11448
     1192    11449    2   END;
     1193    11450
     1194    11451    1   END;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:36   
--  Include file information  --

   VW_OPTS_M.:VMB6TOU  is referenced.
   VWM_ERRS_E.:VMB6TOU  is referenced.
   VW_MOVE_E.:VMB6TOU  is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   FM$FIT.:LIB_E05  is referenced.
   B$JIT_C.:LIB_E05  is referenced.
   B$JIT.:LIB_E05  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure VWE$EVOM.

   Procedure VWE$EVOM requires 1011 words for executable code.
   Procedure VWE$EVOM requires 1262 words of local(AUTO) storage.

    No errors detected in file VWE$EVOM.:VMB6TSI    .

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:37   

 Object Unit name= VWE$EVOM                                   File name= VWE$EVOM.:VMB6TOU
 UTS= AUG 20 '97 15:38:49.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none  8474  20432  VWE$EVOM
    2   DCB   even  none     0      0  M$OUT
    3   DCB   even  none     0      0  M$JI
    4  RoData even  UTS      4      4  VWE$EVOM
    5   Proc  even  none  1011   1763  VWE$EVOM
    6  RoData even  none    42     52  VWE$EVOM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes    yes     yes      Std        0  VWE$EVOM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 VWX$MAIL
         yes           Std       1 VWI$TRANSI
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:38   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VW_OPTIONS#                           M$OUT
     M$JI                                  B$JIT$                                B$TCB$
     VW_SCRAMBLE#

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:39   


        1        1        /*M* VWE$EVOM - Restore a transported file. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*F**
        9        9        *
       10       10        *   NAME:  VWE$EVOM
       11       11        *
       12       12        *   PURPOSE:
       13       13        *       To restore a BEAMed file.
       14       14        *
       15       15        *   DESCRIPTION:
       16       16        *       VWE$EVOM acts as the "catcher" for VWB$BEAM; it decodes the
       17       17        *       transmitted file and restores it as directed.
       18       18        *
       19       19        *   REFERENCE:
       20       20        *       For a description of the transmission packet, see the appropriate
       21       21        *       Architecture File document.
       22       22        *
       23       23        ****/
       24       24
       25       25        /*D**
       26       26        *
       27       27        *   NAME:  VWE$EVOM
       28       28        *
       29       29        *   CALL:
       30       30        *       CALL VWE$EVOM ALTRET...
       31       31        *
       32       32        *   PARAMETERS:
       33       33        *       None.
       34       34        *
       35       35        *   INTERFACE:
       36       36        *       VWE$EVOM calls VWX$MAIL (SCOTTY's version) and VWI$TRANSI.
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:40   
       37       37        *
       38       38        *   ENVIRONMENT:
       39       39        *       VWE$EVOM expects to find the VW_OPTIONS# block filled in by
       40       40        *       the caller (SCOTTY).  SCOTTY must have also "become" the user
       41       41        *       by verifying the information in the BEAM logon and placing
       42       42        *       it and the user's privileges in the JIT.
       43       43        *
       44       44        *   INPUT:
       45       45        *       Information in VW_OPTIONS#.  The BEAM, MAIL, and OPTS
       46       46        *       records are of interest here.  VW_SCRAMBLE# is set by SCOTTY
       47       47        *       before EVOM is entered.
       48       48        *
       49       49        *   OUTPUT:
       50       50        *       None.
       51       51        *
       52       52        *   DESCRIPTION:
       53       53        *       EVOM is the "catcher" program for a BEAM.  It expects to find
       54       54        *       the decoded information in OPTS and JI opened (input) to a file
       55       55        *       to be restored.  Communication back to the "user" is handled
       56       56        *       via the MAIL subprogram; BREAK is not used.  ALTRET is taken
       57       57        *       if the file cannot be restored; "BUSY" is placed in OPTS
       58       58        *       if the file is busy or the packset isn't mounted.  In the last
       59       59        *       two cases the input file is saved; otherwise, it is closed and
       60       60        *       released.
       61       61        *
       62       62        ****/
       63       63
       64       64        VWE$EVOM: PROC ALTRET;

     64  5 000000   000000 700200 xent  VWE$EVOM     TSX0  ! X66_AUTO_0
         5 000001   002356 000000                    ZERO    1262,0

       65       65
       66       66        /****
       67       67        *
       68       68        *   %INCLUDEs
       69       69        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:41   
       70       70        ****/
       71       71
       72       72        %INCLUDE CP_6;
       73     5631        %INCLUDE CP_6_SUBS;
       74     6171        %INCLUDE B$JIT;
       75     6774        %INCLUDE FM$FIT;
       76     6995        %INCLUDE B_ERRORS_C;
       77     8122        %INCLUDE VW_MOVE_E;
       78     8200        %INCLUDE VWM_ERRS_E;
       79     8574        %INCLUDE VW_OPTS_M;
       80     9258        %MOVE_OPTIONS;
       81     9761
       82     9762        /****
       83     9763        *
       84     9764        *   FPTs
       85     9765        *
       86     9766        ****/
       87     9767
       88     9768        %FPT_FID(FPTN=FID_OUT,
       89     9769                 ACCT=ACCT_OUT,
       90     9770                 NAME=NAME_OUT,
       91     9771                 PASS=PASS_OUT,
       92     9772                 SN=SN_OUT,
       93     9773                 ASN=OPEN_OUT.V.ASN#,
       94     9774                 RES=OPEN_OUT.V.RES#,
       95     9775                 SACCT=YES,
       96     9776                 SNAME=YES,
       97     9777                 SPASS=YES,
       98     9778                 SSN=YES,
       99     9779                 SRES=YES,
      100     9780                 SWSN=YES,
      101     9781                 RESULTS=VLR_OUT);
      102     9804
      103     9805        %VLP_NAME(FPTN=NAME_OUT,
      104     9806                  LEN=31,
      105     9807                  NAME=' ');
      106     9834
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:42   
      107     9835        %VLP_ACCT(FPTN=ACCT_OUT,
      108     9836                  ACCT='        ');
      109     9849
      110     9850        %VLP_PASS(FPTN=PASS_OUT,
      111     9851                  PASS='        ');
      112     9864
      113     9865        %VLP_SN(FPTN=SN_OUT,
      114     9866                N=6);
      115     9879
      116     9880        %VLR_FID(FPTN=VLR_OUT);
      117     9899
      118     9900        %FPT_UNFID(FPTN=UNFID_OUT,
      119     9901                   ACCT=ACCT_OUT,
      120     9902                   ASN=OPEN_OUT.V.ASN#,
      121     9903                   NAME=NAME_OUT,
      122     9904                   RES=OPEN_OUT.V.RES#,
      123     9905                   SN=SN_OUT);
      124     9923
      125     9924        %FPT_OPEN(FPTN=OPEN_OUT,
      126     9925                  DCB=M$OUT,
      127     9926                  NAME=NAME_OUT,
      128     9927                  ACCT=ACCT_OUT,
      129     9928                  PASS=PASS_OUT,
      130     9929                  WSN=WSN_OUT,
      131     9930                  SN=SN_OUT,
      132     9931                  SCRUB=YES,
      133     9932                  FUN=CREATE,
      134     9933                  ACS=SEQUEN);
      135    10042
      136    10043        %FPT_OPEN(FPTN=OPEN_OUT_TEST,
      137    10044                  DCB=M$OUT,
      138    10045                  NAME=NAME_OUT,
      139    10046                  ACCT=ACCT_OUT,
      140    10047                  PASS=PASS_OUT,
      141    10048                  WSN=WSN_OUT,
      142    10049                  SN=SN_OUT,
      143    10050                  SCRUB=YES,
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:43   
      144    10051                  FUN=IN,
      145    10052                  TEST=YES,
      146    10053                  FPARAM=OUTBUF);
      147    10162
      148    10163        %VLP_WSN(FPTN=WSN_OUT,
      149    10164                 WSN='LOCAL');
      150    10177
      151    10178        %FPT_WRITE(FPTN=WRITE_OUT,
      152    10179                   DCB=M$OUT,
      153    10180                   BUF=OUTBUF);
      154    10211
      155    10212        %FPT_CLOSE(FPTN=CLOSE_OUT,
      156    10213                   DCB=M$OUT,
      157    10214                   DISP=SAVE,
      158    10215                   RELG=YES);
      159    10257
      160    10258        %FPT_READ(FPTN=READ_JI,
      161    10259                  DCB=M$JI);
      162    10298
      163    10299        %FPT_CLOSE(FPTN=CLOSE_JI,
      164    10300                   DCB=M$JI,
      165    10301                   DISP=SAVE);
      166    10343
      167    10344        %B$TCB;
      168    10347
      169    10348        %B$ALT;
      170    10356
      171    10357        %FM$FIT;
      172    10360
      173    10361        %CODE03;
      174    10368
      175    10369        %CODE04;
      176    10377
      177    10378
      178    10379                  %F$DCB(DCBN=DUMMY);
      179    10436
      180    10437        /****
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:44   
      181    10438        *
      182    10439        *   Local variables
      183    10440        *
      184    10441        ****/
      185    10442
      186    10443    1   DCL M$OUT                          DCB;
      187    10444    1   DCL M$JI                           DCB;
      188    10445
      189    10446    1   DCL VWX$MAIL                       ENTRY(5);
      190    10447    1   DCL VWI$TRANSI                     ENTRY(1);
      191    10448
      192    10449    1   DCL I                              SBIN;
      193    10450    1   DCL J                              SBIN;
      194    10451    1   DCL K                              SBIN;
      195    10452    1   DCL L                              SBIN;
      196    10453    1   DCL M                              UBIN;
      197    10454    1   DCL FILEORG                        SBIN;
      198    10455    1   DCL JIIDX                          SBIN;
      199    10456    1   DCL JILIM                          SBIN;
      200    10457    1   DCL OUTLIM                         SBIN;
      201    10458    1   DCL ARS                            SBIN;
      202    10459    1   DCL HOW                            SBIN;
      203    10460    1   DCL ERRDCB                         SBIN;
      204    10461
      205    10462    1   DCL ERRCODE                        SBIN;
      206    10463    1   DCL 1 ERRBITS REDEF ERRCODE,
      207    10464    1         2 FCG                        UNAL BIT(18),
      208    10465    1         2 M                          UNAL BIT(1),
      209    10466    1         2 CODE                       UNAL UBIN(14),
      210    10467    1         2 SEV                        UNAL UBIN(3);
      211    10468
      212    10469    1   DCL JIPTR                          PTR;
      213    10470    1   DCL OUTPTR                         PTR;
      214    10471    1   DCL B$JIT$ SYMREF                  PTR;
      215    10472    1   DCL B$TCB$ SYMREF                  PTR;
      216    10473
      217    10474    1   DCL 1 OUTBUF STATIC,
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:45   
      218    10475    1         2 C                          CHAR(8192),
      219    10476    1         2 *                          CHAR(8192),
      220    10477    1         2 *                          CHAR(8192),
      221    10478    1         2 *                          CHAR(8192);
      222    10479
      223    10480    1   DCL 1 KEYBUF,
      224    10481    1         2 L                          UNAL UBIN BYTE,
      225    10482    1         2 C                          UNAL CHAR(255);
      226    10483
      227    10484    1   DCL FITBUF                         CHAR(4096);
      228    10485    1   DCL JIBUF                          CHAR(80);
      229    10486    1   DCL LOBUF                          CHAR(256);
      230    10487    1   DCL DWORK                          CHAR(8);
      231    10488    1   DCL RANREL                         CHAR(4);
      232    10489
      233    10490    1   DCL 1 U1,
      234    10491    1         2 L UNAL                     UBIN BYTE,
      235    10492    1         2 C UNAL                     CHAR(79);
      236    10493    1   DCL 1 U2,
      237    10494    1         2 L UNAL                     UBIN BYTE,
      238    10495    1         2 C UNAL                     CHAR(79);
      239    10496
      240    10497    1   DCL ITSBIN                         BIT(1);
      241    10498    1   DCL VW_SCRAMBLE# SYMREF            BIT(1);
      242    10499
      243    10500        %EJECT;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:46   
      244    10501        /****
      245    10502        *
      246    10503        *   Initialize FPTs.
      247    10504        *
      248    10505        ****/
      249    10506
      250    10507    1           OUTPTR=DCBADDR(DCBNUM(M$OUT));

  10507  5 000002   000000 236007 xsym               LDQ     M$OUT,DL
         5 000003   000000 470400 6                  LDP0    0
         5 000004   000000 471500                    LDP1    0,,PR0
         5 000005   100000 236106                    LDQ     0,QL,PR1
         5 000006   200021 756100                    STQ     OUTPTR,,AUTO

      251    10508    1           JIPTR=DCBADDR(DCBNUM(M$JI));

  10508  5 000007   000000 236007 xsym               LDQ     M$JI,DL
         5 000010   100000 236106                    LDQ     0,QL,PR1
         5 000011   200020 756100                    STQ     JIPTR,,AUTO

      252    10509    1           OPEN_OUT.IFPARAM_=VECTOR(FITBUF);

  10509  5 000012   000001 235000 6                  LDA     1
         5 000013   202336 452500                    STP2    CH+4,,AUTO
         5 000014   202336 236100                    LDQ     CH+4,,AUTO
         5 000015   000122 036003                    ADLQ    82,DU
         5 000016   000144 757000 1                  STAQ    OPEN_OUT+22

      253    10510    1           NAME_OUT.L#=31;

  10510  5 000017   037000 236003                    LDQ     15872,DU
         5 000020   000030 552040 1                  STBQ    NAME_OUT,'40'O

      254    10511    1           SN_OUT.NUM#=6;

  10511  5 000021   000006 235007                    LDA     6,DL
         5 000022   000044 755000 1                  STA     SN_OUT
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:47   

      255    10512    1           READ_JI.BUF_.BUF$=ADDR(JIBUF);

  10512  5 000023   202122 633500                    EPPR3   JIBUF,,AUTO
         5 000024   000363 453400 1                  STP3    READ_JI+5

      256    10513    1           READ_JI.BUF_.BOUND=79;

  10513  5 000025   000362 236000 1                  LDQ     READ_JI+4
         5 000026   177777 376007                    ANQ     65535,DL
         5 000027   000002 276000 6                  ORQ     2
         5 000030   000362 756000 1                  STQ     READ_JI+4

      257    10514    1           UNFID_OUT.LEN_=VECTOR(I);

  10514  5 000031   777640 235007                    LDA     -96,DL
         5 000032   202336 452500                    STP2    CH+4,,AUTO
         5 000033   202336 236100                    LDQ     CH+4,,AUTO
         5 000034   000003 036003                    ADLQ    3,DU
         5 000035   000112 757000 1                  STAQ    UNFID_OUT+18

      258    10515
      259    10516        /****
      260    10517        *
      261    10518        *   Set up output file.
      262    10519        *
      263    10520        ****/
      264    10521
      265    10522    1           I=OPTS.OUT.L-ASCBIN('/');

  10522  5 000036   000074 236000 xsym               LDQ     VW_OPTIONS#+60
         5 000037   000033 772000                    QRL     27
         5 000040   000057 136007                    SBLQ    47,DL
         5 000041   200003 756100                    STQ     I,,AUTO

      266    10523    1           IF I<1 OR I>79 THEN

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:48   
  10523  5 000042   000535 604400 5                  TMOZ    EVOM_BAD_OTL
         5 000043   000117 116007                    CMPQ    79,DL
         5 000044   000535 605400 5                  TPNZ    EVOM_BAD_OTL

      267    10524    1              GOTO EVOM_BAD_OTL;
      268    10525    1           FID_OUT.TEXTFID_=VECTOR(SUBSTR(OPTS.OUT.FID,0,I));

  10525  5 000045   200003 235100                    LDA     I,,AUTO
         5 000046   000020 735000                    ALS     16
         5 000047   000140 135007                    SBLA    96,DL
         5 000050   000003 236000 6                  LDQ     3
         5 000051   000002 757000 1                  STAQ    FID_OUT+2

      269    10526    1           CALL M$FID(FID_OUT) ALTRET(EVOM_BAD_OUT);

  10526  5 000052   000000 630400 1                  EPPR0   FID_OUT
         5 000053   420001 713400                    CLIMB   alt,+8193
         5 000054   404400 401760                    pmme    nvectors=10
         5 000055   000540 702000 5                  TSX2    EVOM_BAD_OUT

      270    10527    1           UNFID_OUT.TEXTFID_=VECTOR(U1.C);

  10527  5 000056   000004 235000 6                  LDA     4
         5 000057   202336 452500                    STP2    CH+4,,AUTO
         5 000060   202336 236100                    LDQ     CH+4,,AUTO
         5 000061   000005 036000 6                  ADLQ    5
         5 000062   000072 757000 1                  STAQ    UNFID_OUT+2

      271    10528    1           CALL M$UNFID(UNFID_OUT);

  10528  5 000063   000070 630400 1                  EPPR0   UNFID_OUT
         5 000064   020021 713400                    CLIMB   8209
         5 000065   404400 401760                    pmme    nvectors=10

      272    10529    1           U1.L=I;

  10529  5 000066   200003 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:49   
         5 000067   000033 736000                    QLS     27
         5 000070   202251 552140                    STBQ    U1,'40'O,AUTO

      273    10530    1           U2.C=OPTS.OUT.NODE;

  10530  5 000071   040100 100400                    MLR     fill='040'O
         5 000072   000072 000010 xsym               ADSC9   VW_OPTIONS#+58           cn=0,n=8
         5 000073   202275 200117                    ADSC9   U2,,AUTO                 cn=1,n=79

      274    10531    1           CALL INDEX(I,' ',OPTS.OUT.NODE);

  10531  5 000074   000000 124400                    SCM     mask='000'O
         5 000075   000072 000010 xsym               ADSC9   VW_OPTIONS#+58           cn=0,n=8
         5 000076   000006 000001 6                  ADSC9   6                        cn=0,n=1
         5 000077   200003 000100                    ARG     I,,AUTO

      275    10532    1           U2.L=I;

  10532  5 000100   200003 236100                    LDQ     I,,AUTO
         5 000101   000033 736000                    QLS     27
         5 000102   202275 552140                    STBQ    U2,'40'O,AUTO

      276    10533
      277    10534        /****
      278    10535        *
      279    10536        *   Decode the HOW parameter.
      280    10537        *
      281    10538        ****/
      282    10539
      283    10540    1           HOW=OPTS.OUT.MISC.HOW;

  10540  5 000103   000071 236000 xsym               LDQ     VW_OPTIONS#+57
         5 000104   000003 376007                    ANQ     3,DL
         5 000105   200015 756100                    STQ     HOW,,AUTO

      284    10541    1           IF HOW=%(%HOWINTO#-%HOWTO#) THEN

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:50   
  10541  5 000106   000002 116007                    CMPQ    2,DL
         5 000107   000115 601000 5                  TNZ     s:10543

      285    10542    1              OPEN_OUT.V.EXIST#=%OLDFILE#;

  10542  5 000110   000162 236000 1                  LDQ     OPEN_OUT+36
         5 000111   000007 376000 6                  ANQ     7
         5 000112   000400 276007                    ORQ     256,DL
         5 000113   000162 756000 1                  STQ     OPEN_OUT+36
         5 000114   000126 710000 5                  TRA     s:10554

      286    10543    1           ELSE IF HOW=%(%HOWOVER#-%HOWTO#) THEN

  10543  5 000115   000003 116007                    CMPQ    3,DL
         5 000116   000122 601000 5                  TNZ     s:10546

      287    10544    1                 OPEN_OUT.V.EXIST#=%NEWFILE#;

  10544  5 000117   000600 236007                    LDQ     384,DL
         5 000120   000162 256000 1                  ORSQ    OPEN_OUT+36
         5 000121   000126 710000 5                  TRA     s:10554

      288    10545    1              ELSE
      289    10546    1                 OPEN_OUT.V.EXIST#=%ERROR#;

  10546  5 000122   000162 236000 1                  LDQ     OPEN_OUT+36
         5 000123   000007 376000 6                  ANQ     7
         5 000124   000200 276007                    ORQ     128,DL
         5 000125   000162 756000 1                  STQ     OPEN_OUT+36

      290    10547
      291    10548        /****
      292    10549        *
      293    10550        *   Fetch the file's FIT.
      294    10551        *
      295    10552        ****/
      296    10553
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:51   
      297    10554    1           JIIDX=79;

  10554  5 000126   000117 235007                    LDA     79,DL
         5 000127   200011 755100                    STA     JIIDX,,AUTO

      298    10555    1           JILIM=0;

  10555  5 000130   200012 450100                    STZ     JILIM,,AUTO

      299    10556
      300    10557    1           CALL TAMROF(FITBUF,4096) ALTRET(EVOM_USRERR);

  10557  5 000131   000011 236000 6                  LDQ     9
         5 000132   202324 756100                    STQ     @BFR+1,,AUTO
         5 000133   200122 630500                    EPPR0   FITBUF,,AUTO
         5 000134   202323 450500                    STP0    ITSBIN+2,,AUTO
         5 000135   000766 701000 5                  TSX1    TAMROF
         5 000136   000654 702000 5                  TSX2    EVOM_USRERR

      301    10558    1           I=ADDR(FITBUF)->FM$FIT.CODES.CODE(0);

  10558  5 000137   200122 236100                    LDQ     FITBUF,,AUTO
         5 000140   000037 772000                    QRL     31
         5 000141   200003 756100                    STQ     I,,AUTO

      302    10559    1           FILEORG=%CONSEC#;

  10559  5 000142   000001 235007                    LDA     1,DL
         5 000143   200010 755100                    STA     FILEORG,,AUTO

      303    10560    2           DO J=1 TO I;

  10560  5 000144   200004 755100                    STA     J,,AUTO
         5 000145   000161 710000 5                  TRA     s:10564+1

      304    10561    2              IF ADDR(FITBUF)->FM$FIT.CODES.CODE(J)=3 THEN

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:52   
  10561  5 000146   200004 720100                    LXL0    J,,AUTO
         5 000147   200122 236110                    LDQ     FITBUF,X0,AUTO
         5 000150   760000 376003                    ANQ     -8192,DU
         5 000151   060000 116003                    CMPQ    24576,DU
         5 000152   000160 601000 5                  TNZ     s:10564

      305    10562    2                 FILEORG=PINCRW(ADDR(FITBUF),ADDR(FITBUF)->

  10562  5 000153   200122 721110                    LXL1    FITBUF,X0,AUTO
         5 000154   001777 361003                    ANX1    1023,DU
         5 000155   200122 236111                    LDQ     FITBUF,X1,AUTO
         5 000156   000033 772000                    QRL     27
         5 000157   200010 756100                    STQ     FILEORG,,AUTO

      306    10563    2                   FM$FIT.CODES.ITEMX(J))->CODE03.ORG;
      307    10564    2              END;

  10564  5 000160   200004 054100                    AOS     J,,AUTO
         5 000161   200004 236100                    LDQ     J,,AUTO
         5 000162   200003 116100                    CMPQ    I,,AUTO
         5 000163   000146 604400 5                  TMOZ    s:10561

      308    10565
      309    10566        /****
      310    10567        *
      311    10568        *   If DDNF (don't delete newer files) AND 'OVER' or 'INTO' AND
      312    10569        *   this is really a file AND the file exists AND its last modify
      313    10570        *   date is greater than the date in the MOVEd file THEN skip it.
      314    10571        *
      315    10572        ****/
      316    10573
      317    10574    1           IF OPTS.OUT.MISC.DDNF AND OPEN_OUT.V.EXIST#~=%ERROR# AND

  10574  5 000164   000071 236000 xsym               LDQ     VW_OPTIONS#+57
         5 000165   000100 316007                    CANQ    64,DL
         5 000166   000261 600000 5                  TZE     s:10641
         5 000167   000162 236000 1                  LDQ     OPEN_OUT+36
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:53   
         5 000170   000600 376007                    ANQ     384,DL
         5 000171   000200 116007                    CMPQ    128,DL
         5 000172   000261 600000 5                  TZE     s:10641
         5 000173   000163 236000 1                  LDQ     OPEN_OUT+37
         5 000174   000777 376007                    ANQ     511,DL
         5 000175   000001 116007                    CMPQ    1,DL
         5 000176   000261 601000 5                  TNZ     s:10641

      318    10575
      319    10576        /****
      320    10577        *
      321    10578        *   OVER or INTO selected.
      322    10579        *
      323    10580        ****/
      324    10581
      325    10582    2             OPEN_OUT.V.ASN#=%FILE# THEN DO;

      326    10583    2              J=ADDR(FITBUF)->FM$FIT.CODES.CODE(0);

  10583  5 000177   200122 236100                    LDQ     FITBUF,,AUTO
         5 000200   000037 772000                    QRL     31
         5 000201   200004 756100                    STQ     J,,AUTO

      327    10584
      328    10585        /****
      329    10586        *
      330    10587        *   Locate CODE04 entry in transmitted file.
      331    10588        *
      332    10589        ****/
      333    10590
      334    10591    3              DO I=1 TO J;

  10591  5 000202   000001 235007                    LDA     1,DL
         5 000203   200003 755100                    STA     I,,AUTO
         5 000204   000256 710000 5                  TRA     s:10627+1

      335    10592    4                 IF ADDR(FITBUF)->FM$FIT.CODES.CODE(I)=4 THEN DO;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:54   

  10592  5 000205   200003 720100                    LXL0    I,,AUTO
         5 000206   200122 236110                    LDQ     FITBUF,X0,AUTO
         5 000207   760000 376003                    ANQ     -8192,DU
         5 000210   100000 116003                    CMPQ    32768,DU
         5 000211   000255 601000 5                  TNZ     s:10627

      336    10593    4                    M=PINCRW(ADDR(FITBUF),ADDR(FITBUF)->FM$FIT.CODES.ITEMX

  10593  5 000212   200122 721110                    LXL1    FITBUF,X0,AUTO
         5 000213   001777 361003                    ANX1    1023,DU
         5 000214   200123 235111                    LDA     FITBUF+1,X1,AUTO
         5 000215   200007 755100                    STA     M,,AUTO

      337    10594    4                      (I))->CODE04.MODIFY.TIME;
      338    10595
      339    10596        /****
      340    10597        *
      341    10598        *   Open output file input in test mode and get its times.
      342    10599        *
      343    10600        ****/
      344    10601
      345    10602    4                    OPEN_OUT_TEST.V.ASN#=OPEN_OUT.V.ASN#;

  10602  5 000216   000163 236000 1                  LDQ     OPEN_OUT+37
         5 000217   000255 552004 1                  STBQ    OPEN_OUT_TEST+37,'04'O

      346    10603    4                    OPEN_OUT_TEST.V.RES#=OPEN_OUT.V.RES#;

  10603  5 000220   000166 236000 1                  LDQ     OPEN_OUT+40
         5 000221   000260 756000 1                  STQ     OPEN_OUT_TEST+40

      347    10604    5                    CALL M$OPEN(OPEN_OUT_TEST) WHENRETURN DO;

  10604  5 000222   000210 630400 1                  EPPR0   OPEN_OUT_TEST
         5 000223   450000 713400                    CLIMB   alt,open
         5 000224   410400 401760                    pmme    nvectors=18
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:55   
         5 000225   000255 702000 5                  TSX2    s:10627

      348    10605
      349    10606        /****
      350    10607        *
      351    10608        *   Locate the CODE04 entry.
      352    10609        *
      353    10610        ****/
      354    10611
      355    10612    5                       L=ADDR(OUTBUF)->FM$FIT.CODES.CODE(0);

  10612  5 000226   000432 236000 1                  LDQ     OUTBUF
         5 000227   000037 772000                    QRL     31
         5 000230   200006 756100                    STQ     L,,AUTO

      356    10613    6                       DO K=1 TO L;

  10613  5 000231   000001 235007                    LDA     1,DL
         5 000232   200005 755100                    STA     K,,AUTO
         5 000233   000252 710000 5                  TRA     s:10621+1

      357    10614    6                          IF ADDR(OUTBUF)->FM$FIT.CODES.CODE(K)=4 THEN

  10614  5 000234   200005 720100                    LXL0    K,,AUTO
         5 000235   000432 236010 1                  LDQ     OUTBUF,X0
         5 000236   760000 376003                    ANQ     -8192,DU
         5 000237   100000 116003                    CMPQ    32768,DU
         5 000240   000251 601000 5                  TNZ     s:10621

      358    10615    6                             IF M<PINCRW(ADDR(OUTBUF),ADDR(OUTBUF)

  10615  5 000241   000432 721010 1                  LXL1    OUTBUF,X0
         5 000242   001777 361003                    ANX1    1023,DU
         5 000243   200007 236100                    LDQ     M,,AUTO
         5 000244   000433 116011 1                  CMPQ    OUTBUF+1,X1
         5 000245   000251 603000 5                  TRC     s:10621

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:56   
      359    10616    6                               ->FM$FIT.CODES.ITEMX(K))->CODE04.MODIFY.TIME
      360    10617    7                             THEN DO;

      361    10618    7                                ERRCODE=%E$VWM_NWR;

  10618  5 000246   000012 235000 6                  LDA     10
         5 000247   200017 755100                    STA     ERRCODE,,AUTO

      362    10619    7                                GOTO EVOM_USRERR;

  10619  5 000250   000654 710000 5                  TRA     EVOM_USRERR

      363    10620    7                                END;
      364    10621    6                          END;

  10621  5 000251   200005 054100                    AOS     K,,AUTO
         5 000252   200005 236100                    LDQ     K,,AUTO
         5 000253   200006 116100                    CMPQ    L,,AUTO
         5 000254   000234 604400 5                  TMOZ    s:10614

      365    10622
      366    10623    5                       END /* M$OPEN */;

      367    10624
      368    10625    4                    END /* of CODE04 processing */;

      369    10626
      370    10627    3                 END /* Lookup of transmitted file's FIT */;

  10627  5 000255   200003 054100                    AOS     I,,AUTO
         5 000256   200003 236100                    LDQ     I,,AUTO
         5 000257   200004 116100                    CMPQ    J,,AUTO
         5 000260   000205 604400 5                  TMOZ    s:10592

      371    10628
      372    10629    2              END /* of DDNF processing */;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:57   
      373    10630
      374    10631        /****
      375    10632        *
      376    10633        *   Open the file, supplying appropriate parameters:
      377    10634        *
      378    10635        *   Disk files get opened DIRECT, all others SEQUEN.
      379    10636        *   Paper output gets a WSN, all others none.
      380    10637        *   Alternate keyed files get LOAD=YES, ALTBLD=YES.
      381    10638        *
      382    10639        ****/
      383    10640
      384    10641    1           IF HOW=%(%HOWINTO#-%HOWTO#) AND FILEORG~=%CONSEC# AND FILEORG~=%UR#

  10641  5 000261   200015 235100                    LDA     HOW,,AUTO
         5 000262   000002 115007                    CMPA    2,DL
         5 000263   000276 601000 5                  TNZ     s:10645
         5 000264   200010 236100                    LDQ     FILEORG,,AUTO
         5 000265   000001 116007                    CMPQ    1,DL
         5 000266   000276 600000 5                  TZE     s:10645
         5 000267   000004 116007                    CMPQ    4,DL
         5 000270   000276 600000 5                  TZE     s:10645
         5 000271   000010 116007                    CMPQ    8,DL
         5 000272   000276 600000 5                  TZE     s:10645

      385    10642    1             AND FILEORG~=%TERMINAL# THEN
      386    10643    1              OPEN_OUT.V.ACS#=%DIRECT#;

  10643  5 000273   000002 236007                    LDQ     2,DL
         5 000274   000164 552004 1                  STBQ    OPEN_OUT+38,'04'O
         5 000275   000300 710000 5                  TRA     s:10647

      387    10644    1           ELSE
      388    10645    1              OPEN_OUT.V.ACS#=%SEQUEN#;

  10645  5 000276   000001 236007                    LDQ     1,DL
         5 000277   000164 552004 1                  STBQ    OPEN_OUT+38,'04'O

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:58   
      389    10646
      390    10647    1           IF OPEN_OUT.V.RES#='LP  ' OR OPEN_OUT.V.RES#='CP  ' THEN

  10647  5 000300   000166 236000 1                  LDQ     OPEN_OUT+40
         5 000301   000000 116000 4                  CMPQ    0
         5 000302   000305 600000 5                  TZE     s:10648
         5 000303   000001 116000 4                  CMPQ    1
         5 000304   000310 601000 5                  TNZ     s:10650

      391    10648    1              OPEN_OUT.WSN_=VECTOR(WSN_OUT);

  10648  5 000305   000014 237000 6                  LDAQ    12
         5 000306   000150 757000 1                  STAQ    OPEN_OUT+26
         5 000307   000312 710000 5                  TRA     s:10652

      392    10649    1           ELSE
      393    10650    1              OPEN_OUT.WSN_=VECTOR(NIL);

  10650  5 000310   000016 237000 6                  LDAQ    14
         5 000311   000150 757000 1                  STAQ    OPEN_OUT+26

      394    10651
      395    10652    2           IF FILEORG=%INDEXED# THEN DO;

  10652  5 000312   200010 235100                    LDA     FILEORG,,AUTO
         5 000313   000006 115007                    CMPA    6,DL
         5 000314   000326 601000 5                  TNZ     s:10657

      396    10653    2              OPEN_OUT.V.LOAD#='1'B;

  10653  5 000315   000165 236000 1                  LDQ     OPEN_OUT+39
         5 000316   000013 376000 6                  ANQ     11
         5 000317   001000 276007                    ORQ     512,DL
         5 000320   000165 756000 1                  STQ     OPEN_OUT+39

      397    10654    2              CLOSE_OUT.V.ALTBLD#='1'B;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:59   
  10654  5 000321   000354 236000 1                  LDQ     CLOSE_OUT+28
         5 000322   000020 376000 6                  ANQ     16
         5 000323   000040 276003                    ORQ     32,DU
         5 000324   000354 756000 1                  STQ     CLOSE_OUT+28

      398    10655    2              END;

  10655  5 000325   000336 710000 5                  TRA     s:10661

      399    10656    2           ELSE DO;

      400    10657    2              OPEN_OUT.V.LOAD#='01'B;

  10657  5 000326   000165 236000 1                  LDQ     OPEN_OUT+39
         5 000327   000013 376000 6                  ANQ     11
         5 000330   000400 276007                    ORQ     256,DL
         5 000331   000165 756000 1                  STQ     OPEN_OUT+39

      401    10658    2              CLOSE_OUT.V.ALTBLD#='01'B;

  10658  5 000332   000354 236000 1                  LDQ     CLOSE_OUT+28
         5 000333   000020 376000 6                  ANQ     16
         5 000334   000020 276003                    ORQ     16,DU
         5 000335   000354 756000 1                  STQ     CLOSE_OUT+28

      402    10659    2              END;

      403    10660
      404    10661    1           CALL M$OPEN(OPEN_OUT) ALTRET(EVOM_BAD_ONE);

  10661  5 000336   000116 630400 1                  EPPR0   OPEN_OUT
         5 000337   450000 713400                    CLIMB   alt,open
         5 000340   410400 401760                    pmme    nvectors=18
         5 000341   000546 702000 5                  TSX2    EVOM_BAD_ONE

      405    10662
      406    10663        /****
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:60   
      407    10664        *
      408    10665        *   Now set up the M$WRITE parameters specific for the file type.
      409    10666        *
      410    10667        ****/
      411    10668
      412    10669    2           DO CASE(FILEORG);

  10669  5 000342   200010 235100                    LDA     FILEORG,,AUTO
         5 000343   000016 115007                    CMPA    14,DL
         5 000344   000346 602005 5                  TNC     s:10669+4,AL
         5 000345   000466 710000 5                  TRA     s:10751
         5 000346   000466 710000 5                  TRA     s:10751
         5 000347   000364 710000 5                  TRA     s:10678
         5 000350   000375 710000 5                  TRA     s:10690
         5 000351   000411 710000 5                  TRA     s:10702
         5 000352   000364 710000 5                  TRA     s:10678
         5 000353   000425 710000 5                  TRA     s:10714
         5 000354   000441 710000 5                  TRA     s:10726
         5 000355   000452 710000 5                  TRA     s:10738
         5 000356   000364 710000 5                  TRA     s:10678
         5 000357   000466 710000 5                  TRA     s:10751
         5 000360   000466 710000 5                  TRA     s:10751
         5 000361   000466 710000 5                  TRA     s:10751
         5 000362   000466 710000 5                  TRA     s:10751
         5 000363   000441 710000 5                  TRA     s:10726

      413    10670
      414    10671        /****
      415    10672        *
      416    10673        *   Consecutive, UR, terminal files.
      417    10674        *
      418    10675        ****/
      419    10676
      420    10677    2            CASE(%CONSEC#,%UR#,%TERMINAL#);

      421    10678    2              WRITE_OUT.KEY_=VECTOR(NIL);

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:61   
  10678  5 000364   000016 237000 6                  LDAQ    14
         5 000365   000306 757000 1                  STAQ    WRITE_OUT+2

      422    10679    2              WRITE_OUT.V.ONEWKEY#='0'B;

  10679  5 000366   000021 236000 6                  LDQ     17
         5 000367   000314 356000 1                  ANSQ    WRITE_OUT+8

      423    10680    2              WRITE_OUT.V.NOTIME#='0'B;

  10680  5 000370   000022 236000 6                  LDQ     18
         5 000371   000314 356000 1                  ANSQ    WRITE_OUT+8

      424    10681    2              WRITE_OUT.V.FULL#='0'B;

  10681  5 000372   000023 236000 6                  LDQ     19
         5 000373   000314 356000 1                  ANSQ    WRITE_OUT+8
         5 000374   000467 710000 5                  TRA     s:10762

      425    10682
      426    10683        /****
      427    10684        *
      428    10685        *   Keyed files.
      429    10686        *
      430    10687        ****/
      431    10688
      432    10689    2            CASE(%KEYED#);

      433    10690    2              WRITE_OUT.KEY_=VECTOR(KEYBUF);

  10690  5 000375   000024 235000 6                  LDA     20
         5 000376   202336 452500                    STP2    CH+4,,AUTO
         5 000377   202336 236100                    LDQ     CH+4,,AUTO
         5 000400   000022 036003                    ADLQ    18,DU
         5 000401   000306 757000 1                  STAQ    WRITE_OUT+2

      434    10691    2              WRITE_OUT.V.ONEWKEY#='1'B;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:62   

  10691  5 000402   000400 236007                    LDQ     256,DL
         5 000403   000314 256000 1                  ORSQ    WRITE_OUT+8

      435    10692    2              WRITE_OUT.V.NOTIME#='0'B;

  10692  5 000404   000022 236000 6                  LDQ     18
         5 000405   000314 356000 1                  ANSQ    WRITE_OUT+8

      436    10693    2              WRITE_OUT.V.FULL#='0'B;

  10693  5 000406   000023 236000 6                  LDQ     19
         5 000407   000314 356000 1                  ANSQ    WRITE_OUT+8
         5 000410   000467 710000 5                  TRA     s:10762

      437    10694
      438    10695        /****
      439    10696        *
      440    10697        *   Random files.
      441    10698        *
      442    10699        ****/
      443    10700
      444    10701    2            CASE(%RANDOM#);

      445    10702    2              WRITE_OUT.KEY_=VECTOR(RANREL);

  10702  5 000411   777640 235007                    LDA     -96,DL
         5 000412   202336 452500                    STP2    CH+4,,AUTO
         5 000413   202336 236100                    LDQ     CH+4,,AUTO
         5 000414   002250 036003                    ADLQ    1192,DU
         5 000415   000306 757000 1                  STAQ    WRITE_OUT+2

      446    10703    2              WRITE_OUT.V.ONEWKEY#='1'B;

  10703  5 000416   000400 236007                    LDQ     256,DL
         5 000417   000314 256000 1                  ORSQ    WRITE_OUT+8

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:63   
      447    10704    2              WRITE_OUT.V.NOTIME#='0'B;

  10704  5 000420   000022 236000 6                  LDQ     18
         5 000421   000314 356000 1                  ANSQ    WRITE_OUT+8

      448    10705    2              WRITE_OUT.V.FULL#='0'B;

  10705  5 000422   000023 236000 6                  LDQ     19
         5 000423   000314 356000 1                  ANSQ    WRITE_OUT+8
         5 000424   000467 710000 5                  TRA     s:10762

      449    10706
      450    10707        /****
      451    10708        *
      452    10709        *   Relative files.
      453    10710        *
      454    10711        ****/
      455    10712
      456    10713    2            CASE(%RELATIVE#);

      457    10714    2              WRITE_OUT.KEY_=VECTOR(RANREL);

  10714  5 000425   777640 235007                    LDA     -96,DL
         5 000426   202336 452500                    STP2    CH+4,,AUTO
         5 000427   202336 236100                    LDQ     CH+4,,AUTO
         5 000430   002250 036003                    ADLQ    1192,DU
         5 000431   000306 757000 1                  STAQ    WRITE_OUT+2

      458    10715    2              WRITE_OUT.V.ONEWKEY#='1'B;

  10715  5 000432   000400 236007                    LDQ     256,DL
         5 000433   000314 256000 1                  ORSQ    WRITE_OUT+8

      459    10716    2              WRITE_OUT.V.NOTIME#='0'B;

  10716  5 000434   000022 236000 6                  LDQ     18
         5 000435   000314 356000 1                  ANSQ    WRITE_OUT+8
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:64   

      460    10717    2              WRITE_OUT.V.FULL#='0'B;

  10717  5 000436   000023 236000 6                  LDQ     19
         5 000437   000314 356000 1                  ANSQ    WRITE_OUT+8
         5 000440   000467 710000 5                  TRA     s:10762

      461    10718
      462    10719        /****
      463    10720        *
      464    10721        *   Indexed files.
      465    10722        *
      466    10723        ****/
      467    10724
      468    10725    2            CASE(%INDEXED#,%IREL#);

      469    10726    2              WRITE_OUT.KEY_=VECTOR(NIL);

  10726  5 000441   000016 237000 6                  LDAQ    14
         5 000442   000306 757000 1                  STAQ    WRITE_OUT+2

      470    10727    2              WRITE_OUT.V.ONEWKEY#='1'B;

  10727  5 000443   000400 236007                    LDQ     256,DL
         5 000444   000314 256000 1                  ORSQ    WRITE_OUT+8

      471    10728    2              WRITE_OUT.V.NOTIME#='0'B;

  10728  5 000445   000022 236000 6                  LDQ     18
         5 000446   000314 356000 1                  ANSQ    WRITE_OUT+8

      472    10729    2              WRITE_OUT.V.FULL#='0'B;

  10729  5 000447   000023 236000 6                  LDQ     19
         5 000450   000314 356000 1                  ANSQ    WRITE_OUT+8
         5 000451   000467 710000 5                  TRA     s:10762

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:65   
      473    10730
      474    10731        /****
      475    10732        *
      476    10733        *   IDS files.
      477    10734        *
      478    10735        ****/
      479    10736
      480    10737    2            CASE(%IDS#);

      481    10738    2              WRITE_OUT.KEY_=VECTOR(RANREL);

  10738  5 000452   777640 235007                    LDA     -96,DL
         5 000453   202336 452500                    STP2    CH+4,,AUTO
         5 000454   202336 236100                    LDQ     CH+4,,AUTO
         5 000455   002250 036003                    ADLQ    1192,DU
         5 000456   000306 757000 1                  STAQ    WRITE_OUT+2

      482    10739    2              WRITE_OUT.V.ONEWKEY#='0'B;

  10739  5 000457   000021 236000 6                  LDQ     17
         5 000460   000314 356000 1                  ANSQ    WRITE_OUT+8

      483    10740    2              WRITE_OUT.V.NOTIME#='1'B;

  10740  5 000461   000040 236007                    LDQ     32,DL
         5 000462   000314 256000 1                  ORSQ    WRITE_OUT+8

      484    10741    2              WRITE_OUT.V.FULL#='1'B;

  10741  5 000463   010000 236007                    LDQ     4096,DL
         5 000464   000314 256000 1                  ORSQ    WRITE_OUT+8
         5 000465   000467 710000 5                  TRA     s:10762

      485    10742
      486    10743        /****
      487    10744        *
      488    10745        *   Everything else is an error.  In particular, ANS tape formats aren't
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:66   
      489    10746        *   legal, as is block mode access.
      490    10747        *
      491    10748        ****/
      492    10749
      493    10750    2            CASE(ELSE);

      494    10751    2              GOTO EVOM_BAD_ORG;

  10751  5 000466   000543 710000 5                  TRA     EVOM_BAD_ORG

      495    10752
      496    10753    2            END;

      497    10754
      498    10755        /****
      499    10756        *
      500    10757        *   Restore the file.
      501    10758        *
      502    10759        ****/
      503    10760
      504    10761    2           DO WHILE('1'B);

      505    10762    2              CALL TAMROF(OUTBUF,32768) ALTRET(EVOM_BAD_INP);

  10762  5 000467   000026 236000 6                  LDQ     22
         5 000470   202324 756100                    STQ     @BFR+1,,AUTO
         5 000471   000027 236000 6                  LDQ     23
         5 000472   202323 756100                    STQ     ITSBIN+2,,AUTO
         5 000473   000766 701000 5                  TSX1    TAMROF
         5 000474   000601 702000 5                  TSX2    EVOM_BAD_INP

      506    10763    2              IF FILEORG=%RANDOM# OR FILEORG=%RELATIVE# OR FILEORG=%IDS# THEN

  10763  5 000475   200010 235100                    LDA     FILEORG,,AUTO
         5 000476   000003 115007                    CMPA    3,DL
         5 000477   000504 600000 5                  TZE     s:10764
         5 000500   000005 115007                    CMPA    5,DL
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:67   
         5 000501   000504 600000 5                  TZE     s:10764
         5 000502   000007 115007                    CMPA    7,DL
         5 000503   000511 601000 5                  TNZ     s:10765

      507    10764    2                 RANREL=KEYBUF.C;

  10764  5 000504   200022 235100                    LDA     KEYBUF,,AUTO
         5 000505   200023 236100                    LDQ     KEYBUF+1,,AUTO
         5 000506   000033 773000                    LRL     27
         5 000507   000030 376000 6                  ANQ     24
         5 000510   202250 756100                    STQ     RANREL,,AUTO

      508    10765    3              IF OUTLIM>0 THEN DO;

  10765  5 000511   200013 235100                    LDA     OUTLIM,,AUTO
         5 000512   000524 604400 5                  TMOZ    s:10770

      509    10766    3                 WRITE_OUT.BUF_.BOUND=OUTLIM-1;

  10766  5 000513   200013 236100                    LDQ     OUTLIM,,AUTO
         5 000514   000001 136007                    SBLQ    1,DL
         5 000515   000020 736000                    QLS     16
         5 000516   000310 676000 1                  ERQ     WRITE_OUT+4
         5 000517   000031 376000 6                  ANQ     25
         5 000520   000310 656000 1                  ERSQ    WRITE_OUT+4

      510    10767    3                 WRITE_OUT.BUF_.BUF$=ADDR(OUTBUF);

  10767  5 000521   000027 236000 6                  LDQ     23
         5 000522   000311 756000 1                  STQ     WRITE_OUT+5

      511    10768    3                 END;

  10768  5 000523   000530 710000 5                  TRA     s:10773

      512    10769    3              ELSE DO;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:68   
      513    10770    3                 WRITE_OUT.BUF_.BOUND=0;

  10770  5 000524   177777 236007                    LDQ     65535,DL
         5 000525   000310 356000 1                  ANSQ    WRITE_OUT+4

      514    10771    3                 WRITE_OUT.BUF_.BUF$=ADDR(NIL);

  10771  5 000526   000017 236000 6                  LDQ     15
         5 000527   000311 756000 1                  STQ     WRITE_OUT+5

      515    10772    3                 END;

      516    10773    2              CALL M$WRITE(WRITE_OUT) ALTRET(EVOM_BAD_ONE);

  10773  5 000530   000304 630400 1                  EPPR0   WRITE_OUT
         5 000531   440001 713400                    CLIMB   alt,write
         5 000532   401400 401760                    pmme    nvectors=4
         5 000533   000546 702000 5                  TSX2    EVOM_BAD_ONE

      517    10774    2              END;

  10774  5 000534   000467 710000 5                  TRA     s:10762

      518    10775
      519    10776        /****
      520    10777        *
      521    10778        *   The output FID is too long.
      522    10779        *
      523    10780        ****/
      524    10781
      525    10782    1   EVOM_BAD_OTL:
      526    10783    1           ERRCODE=%E$VWM_OTL;

  10783  5 000535   000032 235000 6     EVOM_BAD_OTL LDA     26
         5 000536   200017 755100                    STA     ERRCODE,,AUTO

      527    10784    1           GOTO EVOM_USRERR;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:69   

  10784  5 000537   000654 710000 5                  TRA     EVOM_USRERR

      528    10785
      529    10786        /****
      530    10787        *
      531    10788        *   Output FID isn't legal.
      532    10789        *
      533    10790        ****/
      534    10791
      535    10792    1   EVOM_BAD_OUT:
      536    10793    1           ERRCODE=%E$VWM_OUT;

  10793  5 000540   000033 235000 6     EVOM_BAD_OUT LDA     27
         5 000541   200017 755100                    STA     ERRCODE,,AUTO

      537    10794    1           GOTO EVOM_USRERR;

  10794  5 000542   000654 710000 5                  TRA     EVOM_USRERR

      538    10795
      539    10796        /****
      540    10797        *
      541    10798        *   Can't restore files of this organization.
      542    10799        *
      543    10800        ****/
      544    10801
      545    10802    1   EVOM_BAD_ORG:
      546    10803    1           ERRCODE=%E$VWM_ORG;

  10803  5 000543   000034 236000 6     EVOM_BAD_ORG LDQ     28
         5 000544   200017 756100                    STQ     ERRCODE,,AUTO

      547    10804    1           GOTO EVOM_USRERR;

  10804  5 000545   000654 710000 5                  TRA     EVOM_USRERR

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:70   
      548    10805
      549    10806        /****
      550    10807        *
      551    10808        *   Error opening or writing the output file.
      552    10809        *
      553    10810        ****/
      554    10811
      555    10812    1   EVOM_BAD_ONE:
      556    10813    1           ERRBITS=B$TCB$->B$TCB.ALT$->B$ALT.ERR;

  10813  5 000546   000000 470400 xsym  EVOM_BAD_ONE LDP0    B$TCB$
         5 000547   000000 471500                    LDP1    0,,PR0
         5 000550   100102 236100                    LDQ     66,,PR1
         5 000551   200017 756100                    STQ     ERRCODE,,AUTO

      557    10814    1           ERRBITS.SEV=0;

  10814  5 000552   000035 236000 6                  LDQ     29
         5 000553   200017 356100                    ANSQ    ERRCODE,,AUTO

      558    10815
      559    10816        /****
      560    10817        *
      561    10818        *   If the output file is simply busy, try later.
      562    10819        *
      563    10820        ****/
      564    10821
      565    10822    1           IF ERRBITS.CODE=%E$FILEBUSY OR ERRBITS.CODE=%E$SETDOWN OR

  10822  5 000554   200017 236100                    LDQ     ERRCODE,,AUTO
         5 000555   377770 376007                    ANQ     131064,DL
         5 000556   001550 116007                    CMPQ    872,DL
         5 000557   000566 600000 5                  TZE     s:10824
         5 000560   002200 116007                    CMPQ    1152,DL
         5 000561   000566 600000 5                  TZE     s:10824
         5 000562   001520 116007                    CMPQ    848,DL
         5 000563   000566 600000 5                  TZE     s:10824
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:71   
         5 000564   002170 116007                    CMPQ    1144,DL
         5 000565   000576 601000 5                  TNZ     s:10829

      566    10823    2             ERRBITS.CODE=%E$NONEWU OR ERRBITS.CODE=%E$XCLSET THEN DO;

      567    10824    2              OPTS.MAILINIT.CMD='BUSY';

  10824  5 000566   000002 236000 4                  LDQ     2
         5 000567   000240 756000 xsym               STQ     VW_OPTIONS#+160

      568    10825    2              CLOSE_JI.V.DISP#=%SAVE#;

  10825  5 000570   000002 236007                    LDQ     2,DL
         5 000571   000426 552004 1                  STBQ    CLOSE_JI+26,'04'O

      569    10826    2              CALL M$CLOSE(CLOSE_JI);

  10826  5 000572   000374 630400 1                  EPPR0   CLOSE_JI
         5 000573   050001 713400                    CLIMB   close
         5 000574   406000 401760                    pmme    nvectors=13

      570    10827    2              ALTRETURN;

  10827  5 000575   000000 702200 xent               TSX2  ! X66_AALT

      571    10828    2              END;
      572    10829    1           ERRDCB=DCBNUM(M$OUT);

  10829  5 000576   000000 236007 xsym               LDQ     M$OUT,DL
         5 000577   200016 756100                    STQ     ERRDCB,,AUTO

      573    10830    1           GOTO EVOM_SYSERR;

  10830  5 000600   000663 710000 5                  TRA     EVOM_SYSERR

      574    10831
      575    10832        /****
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:72   
      576    10833        *
      577    10834        *   Handle EOF on the input stream by exiting normally.  Also handle
      578    10835        *   unexpected EOF on the input stream.  This is usually caused by
      579    10836        *   the link going down in mid-transmission.  CP-6 keeps the partial
      580    10837        *   input file on the receiving end instead of deleting it.  Control-Y
      581    10838        *   out of MOVE will also cause this, since MOVE doesn't take exit
      582    10839        *   control to do cleanup.
      583    10840        *
      584    10841        ****/
      585    10842
      586    10843    1   EVOM_BAD_INP:
      587    10844    1           IF JIIDX~=0 OR JILIM~=0 OR SUBSTR(JIBUF,0,4)~=' EOF' THEN

  10844  5 000601   200011 235100       EVOM_BAD_INP LDA     JIIDX,,AUTO
         5 000602   000654 601000 5                  TNZ     EVOM_USRERR
         5 000603   200012 236100                    LDQ     JILIM,,AUTO
         5 000604   000654 601000 5                  TNZ     EVOM_USRERR
         5 000605   202122 236100                    LDQ     JIBUF,,AUTO
         5 000606   000003 116000 4                  CMPQ    3
         5 000607   000654 601000 5                  TNZ     EVOM_USRERR

      588    10845    1              GOTO EVOM_USRERR;
      589    10846    1           CLOSE_OUT.V.DISP#=%SAVE#;

  10846  5 000610   000002 236007                    LDQ     2,DL
         5 000611   000352 552004 1                  STBQ    CLOSE_OUT+26,'04'O

      590    10847    1           CALL M$CLOSE(CLOSE_OUT) ALTRET(EVOM_BAD_ONE);

  10847  5 000612   000320 630400 1                  EPPR0   CLOSE_OUT
         5 000613   450001 713400                    CLIMB   alt,close
         5 000614   406000 401760                    pmme    nvectors=13
         5 000615   000546 702000 5                  TSX2    EVOM_BAD_ONE

      591    10848    1           CLOSE_JI.V.DISP#=%RELEASE#;

  10848  5 000616   000001 236007                    LDQ     1,DL
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:73   
         5 000617   000426 552004 1                  STBQ    CLOSE_JI+26,'04'O

      592    10849    1           CALL M$CLOSE(CLOSE_JI);

  10849  5 000620   000374 630400 1                  EPPR0   CLOSE_JI
         5 000621   050001 713400                    CLIMB   close
         5 000622   406000 401760                    pmme    nvectors=13

      593    10850    1           CALL VWX$MAIL(%E$VWM_SUC,VECTOR(U1),VECTOR(U2));

  10850  5 000623   000036 235000 6                  LDA     30
         5 000624   202336 452500                    STP2    CH+4,,AUTO
         5 000625   202336 236100                    LDQ     CH+4,,AUTO
         5 000626   002251 036003                    ADLQ    1193,DU
         5 000627   202340 757100                    STAQ    CH+6,,AUTO
         5 000630   000036 235000 6                  LDA     30
         5 000631   202342 452500                    STP2    CH+8,,AUTO
         5 000632   202342 236100                    LDQ     CH+8,,AUTO
         5 000633   002275 036003                    ADLQ    1213,DU
         5 000634   202346 757100                    STAQ    CH+12,,AUTO
         5 000635   202340 237100                    LDAQ    CH+6,,AUTO
         5 000636   202344 757100                    STAQ    CH+10,,AUTO
         5 000637   202346 237100                    LDAQ    CH+12,,AUTO
         5 000640   202350 757100                    STAQ    CH+14,,AUTO
         5 000641   202350 630500                    EPPR0   CH+14,,AUTO
         5 000642   202354 450500                    STP0    CH+18,,AUTO
         5 000643   202344 631500                    EPPR1   CH+10,,AUTO
         5 000644   202353 451500                    STP1    CH+17,,AUTO
         5 000645   000041 236000 6                  LDQ     33
         5 000646   202352 756100                    STQ     CH+16,,AUTO
         5 000647   202352 630500                    EPPR0   CH+16,,AUTO
         5 000650   000037 631400 6                  EPPR1   31
         5 000651   000000 701000 xent               TSX1    VWX$MAIL
         5 000652   000000 011000                    NOP     0

      594    10851    1           RETURN;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:74   
  10851  5 000653   000000 702200 xent               TSX2  ! X66_ARET

      595    10852
      596    10853        /****
      597    10854        *
      598    10855        *   Generate a user-error code.
      599    10856        *
      600    10857        ****/
      601    10858
      602    10859    1   EVOM_USRERR:
      603    10860    1           CALL VWX$MAIL(ERRCODE);

  10860  5 000654   200017 630500       EVOM_USRERR  EPPR0   ERRCODE,,AUTO
         5 000655   202336 450500                    STP0    CH+4,,AUTO
         5 000656   202336 630500                    EPPR0   CH+4,,AUTO
         5 000657   000042 631400 6                  EPPR1   34
         5 000660   000000 701000 xent               TSX1    VWX$MAIL
         5 000661   000000 011000                    NOP     0

      604    10861    1           GOTO EVOM_ABORT;

  10861  5 000662   000706 710000 5                  TRA     EVOM_ABORT

      605    10862
      606    10863        /****
      607    10864        *
      608    10865        *   Generate a system error message, using the appropriate DCB info.
      609    10866        *
      610    10867        ****/
      611    10868
      612    10869    1   EVOM_SYSERR:
      613    10870    1           ERRBITS=B$TCB$->B$TCB.ALT$->B$ALT.ERR;

  10870  5 000663   000000 471500       EVOM_SYSERR  LDP1    0,,PR0
         5 000664   100102 236100                    LDQ     66,,PR1
         5 000665   200017 756100                    STQ     ERRCODE,,AUTO

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:75   
      614    10871    1           ERRBITS.SEV=0;

  10871  5 000666   000035 236000 6                  LDQ     29
         5 000667   200017 356100                    ANSQ    ERRCODE,,AUTO

      615    10872    1           CALL VWX$MAIL(ERRCODE,,,,ERRDCB);

  10872  5 000670   200016 631500                    EPPR1   ERRDCB,,AUTO
         5 000671   202342 451500                    STP1    CH+8,,AUTO
         5 000672   000017 236000 6                  LDQ     15
         5 000673   000017 235000 6                  LDA     15
         5 000674   202340 757100                    STAQ    CH+6,,AUTO
         5 000675   000017 236000 6                  LDQ     15
         5 000676   202337 756100                    STQ     CH+5,,AUTO
         5 000677   200017 633500                    EPPR3   ERRCODE,,AUTO
         5 000700   202336 453500                    STP3    CH+4,,AUTO
         5 000701   202336 630500                    EPPR0   CH+4,,AUTO
         5 000702   000043 631400 6                  EPPR1   35
         5 000703   000000 701000 xent               TSX1    VWX$MAIL
         5 000704   000000 011000                    NOP     0

      616    10873    1           GOTO EVOM_ABORT;

  10873  5 000705   000706 710000 5                  TRA     EVOM_ABORT

      617    10874
      618    10875        /****
      619    10876        *
      620    10877        *   Abort this restore process.  If the output file is being extended,
      621    10878        *   don't release it; otherwise trash it.  This will preserve an
      622    10879        *   existing file (if any).
      623    10880        *
      624    10881        ****/
      625    10882
      626    10883    1   EVOM_ABORT:
      627    10884    1           CLOSE_JI.V.DISP#=%RELEASE#;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:76   
  10884  5 000706   000001 236007       EVOM_ABORT   LDQ     1,DL
         5 000707   000426 552004 1                  STBQ    CLOSE_JI+26,'04'O

      628    10885    1           IF JIPTR->DUMMY.FCD# THEN

  10885  5 000710   200020 470500                    LDP0    JIPTR,,AUTO
         5 000711   000031 236100                    LDQ     25,,PR0
         5 000712   020000 316007                    CANQ    8192,DL
         5 000713   000717 600000 5                  TZE     s:10887

      629    10886    1              CALL M$CLOSE(CLOSE_JI);

  10886  5 000714   000374 630400 1                  EPPR0   CLOSE_JI
         5 000715   050001 713400                    CLIMB   close
         5 000716   406000 401760                    pmme    nvectors=13

      630    10887    2           IF OUTPTR->DUMMY.FCD# THEN DO;

  10887  5 000717   200021 470500                    LDP0    OUTPTR,,AUTO
         5 000720   000031 236100                    LDQ     25,,PR0
         5 000721   020000 316007                    CANQ    8192,DL
         5 000722   000735 600000 5                  TZE     s:10894

      631    10888    2              IF OUTPTR->DUMMY.FEXT THEN

  10888  5 000723   000064 234100                    SZN     52,,PR0
         5 000724   000730 605000 5                  TPL     s:10891

      632    10889    2                 CLOSE_OUT.V.DISP#=%SAVE#;

  10889  5 000725   000002 236007                    LDQ     2,DL
         5 000726   000352 552004 1                  STBQ    CLOSE_OUT+26,'04'O
         5 000727   000732 710000 5                  TRA     s:10892

      633    10890    2              ELSE
      634    10891    2                 CLOSE_OUT.V.DISP#=%RELEASE#;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:77   
  10891  5 000730   000001 236007                    LDQ     1,DL
         5 000731   000352 552004 1                  STBQ    CLOSE_OUT+26,'04'O

      635    10892    2              CALL M$CLOSE(CLOSE_OUT);

  10892  5 000732   000320 630400 1                  EPPR0   CLOSE_OUT
         5 000733   050001 713400                    CLIMB   close
         5 000734   406000 401760                    pmme    nvectors=13

      636    10893    2              END;

      637    10894    1           CALL VWX$MAIL(%E$VWM_FAL,VECTOR(U1),VECTOR(U2));

  10894  5 000735   000036 235000 6                  LDA     30
         5 000736   202336 452500                    STP2    CH+4,,AUTO
         5 000737   202336 236100                    LDQ     CH+4,,AUTO
         5 000740   002251 036003                    ADLQ    1193,DU
         5 000741   202340 757100                    STAQ    CH+6,,AUTO
         5 000742   000036 235000 6                  LDA     30
         5 000743   202342 452500                    STP2    CH+8,,AUTO
         5 000744   202342 236100                    LDQ     CH+8,,AUTO
         5 000745   002275 036003                    ADLQ    1213,DU
         5 000746   202346 757100                    STAQ    CH+12,,AUTO
         5 000747   202340 237100                    LDAQ    CH+6,,AUTO
         5 000750   202344 757100                    STAQ    CH+10,,AUTO
         5 000751   202346 237100                    LDAQ    CH+12,,AUTO
         5 000752   202350 757100                    STAQ    CH+14,,AUTO
         5 000753   202350 630500                    EPPR0   CH+14,,AUTO
         5 000754   202354 450500                    STP0    CH+18,,AUTO
         5 000755   202344 631500                    EPPR1   CH+10,,AUTO
         5 000756   202353 451500                    STP1    CH+17,,AUTO
         5 000757   000045 236000 6                  LDQ     37
         5 000760   202352 756100                    STQ     CH+16,,AUTO
         5 000761   202352 630500                    EPPR0   CH+16,,AUTO
         5 000762   000037 631400 6                  EPPR1   31
         5 000763   000000 701000 xent               TSX1    VWX$MAIL
         5 000764   000000 011000                    NOP     0
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:78   

      638    10895    1           ALTRETURN;

  10895  5 000765   000000 702200 xent               TSX2  ! X66_AALT

      639    10896
      640    10897        %EJECT;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:79   
      641    10898        /*I**
      642    10899        *
      643    10900        *   NAME:  TAMROF
      644    10901        *
      645    10902        *   PURPOSE:
      646    10903        *       To read and decode a record into the buffer.
      647    10904        *
      648    10905        *   CALL:
      649    10906        *       CALL TAMROF(bfr,siz) ALTRET...
      650    10907        *
      651    10908        *   PARAMETERS:
      652    10909        *       bfr - is the buffer into which data are to be placed.  siz - is the
      653    10910        *       length of bfr.
      654    10911        *
      655    10912        *   DATA:
      656    10913        *       If the file is keyed (examine FILEORG), the "key" of the record
      657    10914        *       is placed in KEYBUF.  The DVBYTE is placed in WRITE_OUT.V.DVBYTE.
      658    10915        *       Global variables JILIM and JIIDX mark the end and current position
      659    10916        *       in the input buffer JIBUF.  ARS will contain the actual size of the
      660    10917        *       record, which may be greater than the siz parameter.
      661    10918        *
      662    10919        *   DESCRIPTION:
      663    10920        *       Unformat a record into BFR of length SIZ.  ALTRET on EOF or
      664    10921        *       if any errors occur.
      665    10922        *
      666    10923        ****/
      667    10924
      668    10925    1   TAMROF: PROC(BFR,SIZ) ALTRET;

  10925  5 000766   202322 741300       TAMROF       STX1  ! ITSBIN+1,,AUTO

      669    10926
      670    10927    2   DCL BFR                            CHAR(SIZ);
      671    10928    2   DCL SIZ                            SBIN;
      672    10929
      673    10930        /****
      674    10931        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:80   
      675    10932        *   If CONT is not set, we must get the record's length bytes.
      676    10933        *
      677    10934        ****/
      678    10935
      679    10936    3           IF NOT WRITE_OUT.V.DVBYTE.CONT# THEN DO;

  10936  5 000767   000317 430000 1                  FSZN    WRITE_OUT+11
         5 000770   001052 604000 5                  TMI     s:11000

      680    10937    4              IF SIZ>4096 THEN DO;

  10937  5 000771   202324 470500                    LDP0    @SIZ,,AUTO
         5 000772   000000 235100                    LDA     0,,PR0
         5 000773   010000 115007                    CMPA    4096,DL
         5 000774   001050 604400 5                  TMOZ    s:10989

      681    10938
      682    10939        /****
      683    10940        *
      684    10941        *   Get the file's "key" if it is keyed, random, IDS, or relative.
      685    10942        *
      686    10943        ****/
      687    10944
      688    10945    4                 IF FILEORG=%KEYED# OR FILEORG=%RANDOM# OR FILEORG=%RELATIVE#

  10945  5 000775   200010 236100                    LDQ     FILEORG,,AUTO
         5 000776   000002 116007                    CMPQ    2,DL
         5 000777   001006 600000 5                  TZE     s:10954
         5 001000   000003 116007                    CMPQ    3,DL
         5 001001   001006 600000 5                  TZE     s:10954
         5 001002   000005 116007                    CMPQ    5,DL
         5 001003   001006 600000 5                  TZE     s:10954
         5 001004   000007 116007                    CMPQ    7,DL
         5 001005   001026 601000 5                  TNZ     s:10976

      689    10946    5                   OR FILEORG=%IDS# THEN DO;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:81   
      690    10947
      691    10948        /****
      692    10949        *
      693    10950        *   Get the length of the key.
      694    10951        *
      695    10952        ****/
      696    10953
      697    10954    5                    CALL GETLEN ALTRET(TAMROF_ABORT);

  10954  5 001006   001106 701000 5                  TSX1    GETLEN
         5 001007   001104 702000 5                  TSX2    TAMROF_ABORT

      698    10955    5                    IF ARS<1 OR ARS>255 THEN

  10955  5 001010   200014 235100                    LDA     ARS,,AUTO
         5 001011   001100 604400 5                  TMOZ    TAMROF_BAD_SYN
         5 001012   000377 115007                    CMPA    255,DL
         5 001013   001100 605400 5                  TPNZ    TAMROF_BAD_SYN

      699    10956    5                       GOTO TAMROF_BAD_SYN;
      700    10957
      701    10958        /****
      702    10959        *
      703    10960        *   Now fetch the key.
      704    10961        *
      705    10962        ****/
      706    10963
      707    10964    5                    KEYBUF.L=ARS;

  10964  5 001014   200014 236100                    LDQ     ARS,,AUTO
         5 001015   000033 736000                    QLS     27
         5 001016   200022 552140                    STBQ    KEYBUF,'40'O,AUTO

      708    10965    5                    OUTLIM=ARS;

  10965  5 001017   200013 755100                    STA     OUTLIM,,AUTO

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:82   
      709    10966    5                    CALL GETDAT(KEYBUF.C) ALTRET(TAMROF_BAD_SYN);

  10966  5 001020   202336 452500                    STP2    CH+4,,AUTO
         5 001021   202336 236100                    LDQ     CH+4,,AUTO
         5 001022   000046 036000 6                  ADLQ    38
         5 001023   202327 756100                    STQ     @SIZ+3,,AUTO
         5 001024   001457 701000 5                  TSX1    GETDAT
         5 001025   001100 702000 5                  TSX2    TAMROF_BAD_SYN

      710    10967
      711    10968    5                    END /* of key processing */;

      712    10969
      713    10970        /****
      714    10971        *
      715    10972        *   Now fetch the DVBYTE, sent for every record in every organization.
      716    10973        *
      717    10974        ****/
      718    10975
      719    10976    4                 JIIDX=JIIDX+1;

  10976  5 001026   200011 054100                    AOS     JIIDX,,AUTO

      720    10977    4                 IF JIIDX>=JILIM THEN

  10977  5 001027   200011 236100                    LDQ     JIIDX,,AUTO
         5 001030   200012 116100                    CMPQ    JILIM,,AUTO
         5 001031   001034 604000 5                  TMI     s:10979

      721    10978    4                    CALL FFUTS ALTRET(TAMROF_ABORT);

  10978  5 001032   001700 701000 5                  TSX1    FFUTS
         5 001033   001104 702000 5                  TSX2    TAMROF_ABORT

      722    10979    4                 WRITE_OUT.V.DVBYTE=BINBIT(ASCBIN(SUBSTR(JIBUF,JIIDX,1))-

  10979  5 001034   200011 235100                    LDA     JIIDX,,AUTO
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:83   
         5 001035   000100 101505                    MRL     fill='000'O
         5 001036   202122 000001                    ADSC9   JIBUF,A,AUTO             cn=0,n=1
         5 001037   202336 000004                    ADSC9   CH+4,,AUTO               cn=0,n=4
         5 001040   202336 236100                    LDQ     CH+4,,AUTO
         5 001041   000040 136007                    SBLQ    32,DL
         5 001042   000034 736000                    QLS     28
         5 001043   000022 772000                    QRL     18
         5 001044   000000 620006                    EAX0    0,QL
         5 001045   160000 360003                    ANX0    57344,DU
         5 001046   000000 636010                    EAQ     0,X0
         5 001047   000317 552040 1                  STBQ    WRITE_OUT+11,'40'O

      723    10980    4                   ASCBIN(' '),8)&'00111000'B;
      724    10981    4                 END;

      725    10982
      726    10983        /****
      727    10984        *
      728    10985        *   Now get the true length of the record into ARS.
      729    10986        *
      730    10987        ****/
      731    10988
      732    10989    3              CALL GETLEN ALTRET(TAMROF_ABORT);

  10989  5 001050   001106 701000 5                  TSX1    GETLEN
         5 001051   001104 702000 5                  TSX2    TAMROF_ABORT

      733    10990    3              END;

      734    10991
      735    10992        /****
      736    10993        *
      737    10994        *   We use a buffer of 32K bytes.  If the records are longer than this,
      738    10995        *   we must do read and write continues.  This only works for disk files
      739    10996        *   and only if they are not compressed.
      740    10997        *
      741    10998        ****/
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:84   
      742    10999
      743    11000    2           OUTLIM=ARS;

  11000  5 001052   200014 235100                    LDA     ARS,,AUTO
         5 001053   200013 755100                    STA     OUTLIM,,AUTO

      744    11001    3           IF ARS>SIZ THEN DO;

  11001  5 001054   202324 470500                    LDP0    @SIZ,,AUTO
         5 001055   200014 236100                    LDQ     ARS,,AUTO
         5 001056   000000 116100                    CMPQ    0,,PR0
         5 001057   001065 604400 5                  TMOZ    s:11006

      745    11002    3              WRITE_OUT.V.DVBYTE.CONT#='1'B;

  11002  5 001060   001000 236003                    LDQ     512,DU
         5 001061   000317 256000 1                  ORSQ    WRITE_OUT+11

      746    11003    3              OUTLIM=SIZ;

  11003  5 001062   000000 235100                    LDA     0,,PR0
         5 001063   200013 755100                    STA     OUTLIM,,AUTO

      747    11004    3              END;

  11004  5 001064   001067 710000 5                  TRA     s:11014

      748    11005    2           ELSE
      749    11006    2              WRITE_OUT.V.DVBYTE.CONT#='0'B;

  11006  5 001065   000047 236000 6                  LDQ     39
         5 001066   000317 356000 1                  ANSQ    WRITE_OUT+11

      750    11007
      751    11008        /****
      752    11009        *
      753    11010        *   Read (this portion of) the record.
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:85   
      754    11011        *
      755    11012        ****/
      756    11013
      757    11014    2           CALL GETDAT(BFR) ALTRET(TAMROF_BAD_SYN);

  11014  5 001067   202323 236100                    LDQ     @BFR,,AUTO
         5 001070   202327 756100                    STQ     @SIZ+3,,AUTO
         5 001071   001457 701000 5                  TSX1    GETDAT
         5 001072   001100 702000 5                  TSX2    TAMROF_BAD_SYN

      758    11015
      759    11016        /****
      760    11017        *
      761    11018        *   Account for this section of the record and return.
      762    11019        *
      763    11020        ****/
      764    11021
      765    11022    2           ARS=ARS-OUTLIM;

  11022  5 001073   200014 236100                    LDQ     ARS,,AUTO
         5 001074   200013 136100                    SBLQ    OUTLIM,,AUTO
         5 001075   200014 756100                    STQ     ARS,,AUTO

      766    11023
      767    11024    2           RETURN;

  11024  5 001076   202322 221300                    LDX1  ! ITSBIN+1,,AUTO
         5 001077   000001 702211                    TSX2  ! 1,X1

      768    11025
      769    11026        /****
      770    11027        *
      771    11028        *   A syntax error was encountered in the input stream.  ALTRET.
      772    11029        *
      773    11030        ****/
      774    11031
      775    11032    2   TAMROF_BAD_SYN:
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:86   
      776    11033    2           ERRCODE=%E$VWM_STX;

  11033  5 001100   000050 235000 6     TAMROF_BAD_* LDA     40
         5 001101   200017 755100                    STA     ERRCODE,,AUTO

      777    11034    2           ALTRETURN;

  11034  5 001102   202322 221300                    LDX1  ! ITSBIN+1,,AUTO
         5 001103   000000 702211                    TSX2  ! 0,X1

      778    11035
      779    11036        /****
      780    11037        *
      781    11038        *   A monitor error occurred.  ALTRET.
      782    11039        *
      783    11040        ****/
      784    11041
      785    11042    2   TAMROF_ABORT:
      786    11043    2           ALTRETURN;

  11043  5 001104   202322 221300       TAMROF_ABORT LDX1  ! ITSBIN+1,,AUTO
         5 001105   000000 702211                    TSX2  ! 0,X1

      787    11044
      788    11045    2   END;
      789    11046
      790    11047        %EJECT;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:87   
      791    11048        /*I**
      792    11049        *
      793    11050        *   NAME:  GETLEN
      794    11051        *
      795    11052        *   PURPOSE:
      796    11053        *       Fetch the length token from the input stream.
      797    11054        *
      798    11055        *   CALL:
      799    11056        *       CALL GETLEN ALTRET...
      800    11057        *
      801    11058        *   PARAMETERS:
      802    11059        *       None.
      803    11060        *
      804    11061        *   DATA:
      805    11062        *       JIIDX and JILIM mark the current position and limit in JIBUF.
      806    11063        *       ARS is set to the value of the length token, if valid.  The
      807    11064        *       ITSBIN bit variable is set if the data are encoded in 3-for-2
      808    11065        *       format; otherwise it is cleared.
      809    11066        *
      810    11067        *   DESCRIPTION:
      811    11068        *       Get and reformat a length code and place it in ARS.  ALTRET
      812    11069        *       if an error occurs, such as EOF.
      813    11070        *
      814    11071        ****/
      815    11072
      816    11073    1   GETLEN: PROC ALTRET;

  11073  5 001106   202326 741300       GETLEN       STX1  ! @SIZ+2,,AUTO

      817    11074
      818    11075    2   DCL CH                             CHAR(1);
      819    11076
      820    11077        /****
      821    11078        *
      822    11079        *   Assume the length is zero and get the next input byte.
      823    11080        *
      824    11081        ****/
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:88   
      825    11082
      826    11083    2           ARS=0;

  11083  5 001107   200014 450100                    STZ     ARS,,AUTO

      827    11084
      828    11085    2           JIIDX=JIIDX+1;

  11085  5 001110   200011 054100                    AOS     JIIDX,,AUTO

      829    11086    2           IF JIIDX>=JILIM THEN

  11086  5 001111   200011 236100                    LDQ     JIIDX,,AUTO
         5 001112   200012 116100                    CMPQ    JILIM,,AUTO
         5 001113   001116 604000 5                  TMI     s:11088

      830    11087    2              CALL FFUTS ALTRET(GETLEN_ABORT);

  11087  5 001114   001700 701000 5                  TSX1    FFUTS
         5 001115   001455 702000 5                  TSX2    GETLEN_ABORT

      831    11088    2           CH=SUBSTR(JIBUF,JIIDX,1);

  11088  5 001116   200011 235100                    LDA     JIIDX,,AUTO
         5 001117   040100 100505                    MLR     fill='040'O
         5 001120   202122 000001                    ADSC9   JIBUF,A,AUTO             cn=0,n=1
         5 001121   202327 000001                    ADSC9   CH,,AUTO                 cn=0,n=1

      832    11089
      833    11090        /****
      834    11091        *
      835    11092        *   If this isn't a legal length code, ALTRET.
      836    11093        *
      837    11094        ****/
      838    11095
      839    11096    2           IF CH>'`' THEN

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:89   
  11096  5 001122   202327 236100                    LDQ     CH,,AUTO
         5 001123   777000 376003                    ANQ     -512,DU
         5 001124   140000 116003                    CMPQ    49152,DU
         5 001125   001127 600000 5                  TZE     s:11105
         5 001126   001451 603000 5                  TRC     GETLEN_BAD_SYN

      840    11097    2              GOTO GETLEN_BAD_SYN;
      841    11098
      842    11099        /****
      843    11100        *
      844    11101        *   If this is the special zero-length code, just return.
      845    11102        *
      846    11103        ****/
      847    11104
      848    11105    2           IF CH='`' THEN

  11105  5 001127   202327 236100                    LDQ     CH,,AUTO
         5 001130   777000 376003                    ANQ     -512,DU
         5 001131   140000 116003                    CMPQ    49152,DU
         5 001132   001135 601000 5                  TNZ     s:11114

      849    11106    2              RETURN;

  11106  5 001133   202326 221300                    LDX1  ! @SIZ+2,,AUTO
         5 001134   000001 702211                    TSX2  ! 1,X1

      850    11107
      851    11108        /****
      852    11109        *
      853    11110        *   Check for the E-bit (3-for-2 format encoding of binary data).
      854    11111        *
      855    11112        ****/
      856    11113
      857    11114    3           IF CH>='@' THEN DO;

  11114  5 001135   202327 236100                    LDQ     CH,,AUTO
         5 001136   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:90   
         5 001137   100000 116003                    CMPQ    32768,DU
         5 001140   001152 602000 5                  TNC     s:11119

      858    11115    3              ITSBIN='1'B;

  11115  5 001141   400000 236003                    LDQ     -131072,DU
         5 001142   202321 756100                    STQ     ITSBIN,,AUTO

      859    11116    3              CH=BINASC(ASCBIN(CH)-32);

  11116  5 001143   202327 236100                    LDQ     CH,,AUTO
         5 001144   000033 772000                    QRL     27
         5 001145   000040 136007                    SBLQ    32,DL
         5 001146   000033 736000                    QLS     27
         5 001147   000051 276000 6                  ORQ     41
         5 001150   202327 756100                    STQ     CH,,AUTO

      860    11117    3              END;

  11117  5 001151   001153 710000 5                  TRA     s:11127

      861    11118    2           ELSE
      862    11119    2              ITSBIN='0'B;

  11119  5 001152   202321 450100                    STZ     ITSBIN,,AUTO

      863    11120
      864    11121        /****
      865    11122        *
      866    11123        *   Check for four length bytes and collect them.
      867    11124        *
      868    11125        ****/
      869    11126
      870    11127    3           IF CH>='<' THEN DO;

  11127  5 001153   202327 236100                    LDQ     CH,,AUTO
         5 001154   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:91   
         5 001155   074000 116003                    CMPQ    30720,DU
         5 001156   001300 602000 5                  TNC     s:11163

      871    11128    3              ARS=(ASCBIN(CH)-ASCBIN('<'))*262144;

  11128  5 001157   202327 236100                    LDQ     CH,,AUTO
         5 001160   000033 772000                    QRL     27
         5 001161   000022 736000                    QLS     18
         5 001162   000074 136003                    SBLQ    60,DU
         5 001163   200014 756100                    STQ     ARS,,AUTO

      872    11129
      873    11130    3              JIIDX=JIIDX+1;

  11130  5 001164   200011 054100                    AOS     JIIDX,,AUTO

      874    11131    3              IF JIIDX>=JILIM THEN

  11131  5 001165   200011 236100                    LDQ     JIIDX,,AUTO
         5 001166   200012 116100                    CMPQ    JILIM,,AUTO
         5 001167   001172 604000 5                  TMI     s:11133

      875    11132    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);

  11132  5 001170   001700 701000 5                  TSX1    FFUTS
         5 001171   001451 702000 5                  TSX2    GETLEN_BAD_SYN

      876    11133    3              CH=SUBSTR(JIBUF,JIIDX,1);

  11133  5 001172   200011 235100                    LDA     JIIDX,,AUTO
         5 001173   040100 100505                    MLR     fill='040'O
         5 001174   202122 000001                    ADSC9   JIBUF,A,AUTO             cn=0,n=1
         5 001175   202327 000001                    ADSC9   CH,,AUTO                 cn=0,n=1

      877    11134    3              IF CH<' ' OR CH>'_' THEN

  11134  5 001176   202327 236100                    LDQ     CH,,AUTO
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:92   
         5 001177   777000 376003                    ANQ     -512,DU
         5 001200   040000 116003                    CMPQ    16384,DU
         5 001201   001451 602000 5                  TNC     GETLEN_BAD_SYN
         5 001202   202327 236100                    LDQ     CH,,AUTO
         5 001203   777000 376003                    ANQ     -512,DU
         5 001204   137000 116003                    CMPQ    48640,DU
         5 001205   001207 600000 5                  TZE     s:11136
         5 001206   001451 603000 5                  TRC     GETLEN_BAD_SYN

      878    11135    3                 GOTO GETLEN_BAD_SYN;
      879    11136    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))*4096;

  11136  5 001207   202327 236100                    LDQ     CH,,AUTO
         5 001210   000033 772000                    QRL     27
         5 001211   000014 736000                    QLS     12
         5 001212   200014 036100                    ADLQ    ARS,,AUTO
         5 001213   400000 136007                    SBLQ    -131072,DL
         5 001214   200014 756100                    STQ     ARS,,AUTO

      880    11137
      881    11138    3              JIIDX=JIIDX+1;

  11138  5 001215   200011 054100                    AOS     JIIDX,,AUTO

      882    11139    3              IF JIIDX>=JILIM THEN

  11139  5 001216   200011 236100                    LDQ     JIIDX,,AUTO
         5 001217   200012 116100                    CMPQ    JILIM,,AUTO
         5 001220   001223 604000 5                  TMI     s:11141

      883    11140    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);

  11140  5 001221   001700 701000 5                  TSX1    FFUTS
         5 001222   001451 702000 5                  TSX2    GETLEN_BAD_SYN

      884    11141    3              CH=SUBSTR(JIBUF,JIIDX,1);

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:93   
  11141  5 001223   200011 235100                    LDA     JIIDX,,AUTO
         5 001224   040100 100505                    MLR     fill='040'O
         5 001225   202122 000001                    ADSC9   JIBUF,A,AUTO             cn=0,n=1
         5 001226   202327 000001                    ADSC9   CH,,AUTO                 cn=0,n=1

      885    11142    3              IF CH<' ' OR CH>'_' THEN

  11142  5 001227   202327 236100                    LDQ     CH,,AUTO
         5 001230   777000 376003                    ANQ     -512,DU
         5 001231   040000 116003                    CMPQ    16384,DU
         5 001232   001451 602000 5                  TNC     GETLEN_BAD_SYN
         5 001233   202327 236100                    LDQ     CH,,AUTO
         5 001234   777000 376003                    ANQ     -512,DU
         5 001235   137000 116003                    CMPQ    48640,DU
         5 001236   001240 600000 5                  TZE     s:11144
         5 001237   001451 603000 5                  TRC     GETLEN_BAD_SYN

      886    11143    3                 GOTO GETLEN_BAD_SYN;
      887    11144    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))*64;

  11144  5 001240   202327 236100                    LDQ     CH,,AUTO
         5 001241   000033 772000                    QRL     27
         5 001242   000006 736000                    QLS     6
         5 001243   200014 036100                    ADLQ    ARS,,AUTO
         5 001244   004000 136007                    SBLQ    2048,DL
         5 001245   200014 756100                    STQ     ARS,,AUTO

      888    11145
      889    11146    3              JIIDX=JIIDX+1;

  11146  5 001246   200011 054100                    AOS     JIIDX,,AUTO

      890    11147    3              IF JIIDX>=JILIM THEN

  11147  5 001247   200011 236100                    LDQ     JIIDX,,AUTO
         5 001250   200012 116100                    CMPQ    JILIM,,AUTO
         5 001251   001254 604000 5                  TMI     s:11149
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:94   

      891    11148    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);

  11148  5 001252   001700 701000 5                  TSX1    FFUTS
         5 001253   001451 702000 5                  TSX2    GETLEN_BAD_SYN

      892    11149    3              CH=SUBSTR(JIBUF,JIIDX,1);

  11149  5 001254   200011 235100                    LDA     JIIDX,,AUTO
         5 001255   040100 100505                    MLR     fill='040'O
         5 001256   202122 000001                    ADSC9   JIBUF,A,AUTO             cn=0,n=1
         5 001257   202327 000001                    ADSC9   CH,,AUTO                 cn=0,n=1

      893    11150    3              IF CH<' ' OR CH>'_' THEN

  11150  5 001260   202327 236100                    LDQ     CH,,AUTO
         5 001261   777000 376003                    ANQ     -512,DU
         5 001262   040000 116003                    CMPQ    16384,DU
         5 001263   001451 602000 5                  TNC     GETLEN_BAD_SYN
         5 001264   202327 236100                    LDQ     CH,,AUTO
         5 001265   777000 376003                    ANQ     -512,DU
         5 001266   137000 116003                    CMPQ    48640,DU
         5 001267   001271 600000 5                  TZE     s:11152
         5 001270   001451 603000 5                  TRC     GETLEN_BAD_SYN

      894    11151    3                 GOTO GETLEN_BAD_SYN;
      895    11152    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))+1;

  11152  5 001271   202327 236100                    LDQ     CH,,AUTO
         5 001272   000033 772000                    QRL     27
         5 001273   200014 036100                    ADLQ    ARS,,AUTO
         5 001274   000037 136007                    SBLQ    31,DL
         5 001275   200014 756100                    STQ     ARS,,AUTO

      896    11153
      897    11154    3              RETURN;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:95   
  11154  5 001276   202326 221300                    LDX1  ! @SIZ+2,,AUTO
         5 001277   000001 702211                    TSX2  ! 1,X1

      898    11155    3              END;
      899    11156
      900    11157        /****
      901    11158        *
      902    11159        *   Check for three length bytes and collect them.
      903    11160        *
      904    11161        ****/
      905    11162
      906    11163    3           IF CH>='8' THEN DO;

  11163  5 001300   202327 236100                    LDQ     CH,,AUTO
         5 001301   777000 376003                    ANQ     -512,DU
         5 001302   070000 116003                    CMPQ    28672,DU
         5 001303   001374 602000 5                  TNC     s:11191

      907    11164    3              ARS=(ASCBIN(CH)-ASCBIN('8'))*4096;

  11164  5 001304   202327 236100                    LDQ     CH,,AUTO
         5 001305   000033 772000                    QRL     27
         5 001306   000014 736000                    QLS     12
         5 001307   700000 136007                    SBLQ    -32768,DL
         5 001310   200014 756100                    STQ     ARS,,AUTO

      908    11165
      909    11166    3              JIIDX=JIIDX+1;

  11166  5 001311   200011 054100                    AOS     JIIDX,,AUTO

      910    11167    3              IF JIIDX>=JILIM THEN

  11167  5 001312   200011 236100                    LDQ     JIIDX,,AUTO
         5 001313   200012 116100                    CMPQ    JILIM,,AUTO
         5 001314   001317 604000 5                  TMI     s:11169

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:96   
      911    11168    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);

  11168  5 001315   001700 701000 5                  TSX1    FFUTS
         5 001316   001451 702000 5                  TSX2    GETLEN_BAD_SYN

      912    11169    3              CH=SUBSTR(JIBUF,JIIDX,1);

  11169  5 001317   200011 235100                    LDA     JIIDX,,AUTO
         5 001320   040100 100505                    MLR     fill='040'O
         5 001321   202122 000001                    ADSC9   JIBUF,A,AUTO             cn=0,n=1
         5 001322   202327 000001                    ADSC9   CH,,AUTO                 cn=0,n=1

      913    11170    3              IF CH<' ' OR CH>'_' THEN

  11170  5 001323   202327 236100                    LDQ     CH,,AUTO
         5 001324   777000 376003                    ANQ     -512,DU
         5 001325   040000 116003                    CMPQ    16384,DU
         5 001326   001451 602000 5                  TNC     GETLEN_BAD_SYN
         5 001327   202327 236100                    LDQ     CH,,AUTO
         5 001330   777000 376003                    ANQ     -512,DU
         5 001331   137000 116003                    CMPQ    48640,DU
         5 001332   001334 600000 5                  TZE     s:11172
         5 001333   001451 603000 5                  TRC     GETLEN_BAD_SYN

      914    11171    3                 GOTO GETLEN_BAD_SYN;
      915    11172    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))*64;

  11172  5 001334   202327 236100                    LDQ     CH,,AUTO
         5 001335   000033 772000                    QRL     27
         5 001336   000006 736000                    QLS     6
         5 001337   200014 036100                    ADLQ    ARS,,AUTO
         5 001340   004000 136007                    SBLQ    2048,DL
         5 001341   200014 756100                    STQ     ARS,,AUTO

      916    11173
      917    11174    3              JIIDX=JIIDX+1;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:97   
  11174  5 001342   200011 054100                    AOS     JIIDX,,AUTO

      918    11175    3              IF JIIDX>=JILIM THEN

  11175  5 001343   200011 236100                    LDQ     JIIDX,,AUTO
         5 001344   200012 116100                    CMPQ    JILIM,,AUTO
         5 001345   001350 604000 5                  TMI     s:11177

      919    11176    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);

  11176  5 001346   001700 701000 5                  TSX1    FFUTS
         5 001347   001451 702000 5                  TSX2    GETLEN_BAD_SYN

      920    11177    3              CH=SUBSTR(JIBUF,JIIDX,1);

  11177  5 001350   200011 235100                    LDA     JIIDX,,AUTO
         5 001351   040100 100505                    MLR     fill='040'O
         5 001352   202122 000001                    ADSC9   JIBUF,A,AUTO             cn=0,n=1
         5 001353   202327 000001                    ADSC9   CH,,AUTO                 cn=0,n=1

      921    11178    3              IF CH<' ' OR CH>'_' THEN

  11178  5 001354   202327 236100                    LDQ     CH,,AUTO
         5 001355   777000 376003                    ANQ     -512,DU
         5 001356   040000 116003                    CMPQ    16384,DU
         5 001357   001451 602000 5                  TNC     GETLEN_BAD_SYN
         5 001360   202327 236100                    LDQ     CH,,AUTO
         5 001361   777000 376003                    ANQ     -512,DU
         5 001362   137000 116003                    CMPQ    48640,DU
         5 001363   001365 600000 5                  TZE     s:11180
         5 001364   001451 603000 5                  TRC     GETLEN_BAD_SYN

      922    11179    3                 GOTO GETLEN_BAD_SYN;
      923    11180    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))+1;

  11180  5 001365   202327 236100                    LDQ     CH,,AUTO
         5 001366   000033 772000                    QRL     27
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:98   
         5 001367   200014 036100                    ADLQ    ARS,,AUTO
         5 001370   000037 136007                    SBLQ    31,DL
         5 001371   200014 756100                    STQ     ARS,,AUTO

      924    11181
      925    11182    3              RETURN;

  11182  5 001372   202326 221300                    LDX1  ! @SIZ+2,,AUTO
         5 001373   000001 702211                    TSX2  ! 1,X1

      926    11183    3              END;
      927    11184
      928    11185        /****
      929    11186        *
      930    11187        *   Check for two length bytes and collect them.
      931    11188        *
      932    11189        ****/
      933    11190
      934    11191    3           IF CH>='0' THEN DO;

  11191  5 001374   202327 236100                    LDQ     CH,,AUTO
         5 001375   777000 376003                    ANQ     -512,DU
         5 001376   060000 116003                    CMPQ    24576,DU
         5 001377   001437 602000 5                  TNC     s:11211

      935    11192    3              ARS=(ASCBIN(CH)-ASCBIN('0'))*64;

  11192  5 001400   202327 236100                    LDQ     CH,,AUTO
         5 001401   000033 772000                    QRL     27
         5 001402   000006 736000                    QLS     6
         5 001403   006000 136007                    SBLQ    3072,DL
         5 001404   200014 756100                    STQ     ARS,,AUTO

      936    11193
      937    11194    3              JIIDX=JIIDX+1;

  11194  5 001405   200011 054100                    AOS     JIIDX,,AUTO
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:99   

      938    11195    3              IF JIIDX>=JILIM THEN

  11195  5 001406   200011 236100                    LDQ     JIIDX,,AUTO
         5 001407   200012 116100                    CMPQ    JILIM,,AUTO
         5 001410   001413 604000 5                  TMI     s:11197

      939    11196    3                 CALL FFUTS ALTRET(GETLEN_BAD_SYN);

  11196  5 001411   001700 701000 5                  TSX1    FFUTS
         5 001412   001451 702000 5                  TSX2    GETLEN_BAD_SYN

      940    11197    3              CH=SUBSTR(JIBUF,JIIDX,1);

  11197  5 001413   200011 235100                    LDA     JIIDX,,AUTO
         5 001414   040100 100505                    MLR     fill='040'O
         5 001415   202122 000001                    ADSC9   JIBUF,A,AUTO             cn=0,n=1
         5 001416   202327 000001                    ADSC9   CH,,AUTO                 cn=0,n=1

      941    11198    3              IF CH<' ' OR CH>'_' THEN

  11198  5 001417   202327 236100                    LDQ     CH,,AUTO
         5 001420   777000 376003                    ANQ     -512,DU
         5 001421   040000 116003                    CMPQ    16384,DU
         5 001422   001451 602000 5                  TNC     GETLEN_BAD_SYN
         5 001423   202327 236100                    LDQ     CH,,AUTO
         5 001424   777000 376003                    ANQ     -512,DU
         5 001425   137000 116003                    CMPQ    48640,DU
         5 001426   001430 600000 5                  TZE     s:11200
         5 001427   001451 603000 5                  TRC     GETLEN_BAD_SYN

      942    11199    3                 GOTO GETLEN_BAD_SYN;
      943    11200    3              ARS=ARS+(ASCBIN(CH)-ASCBIN(' '))+1;

  11200  5 001430   202327 236100                    LDQ     CH,,AUTO
         5 001431   000033 772000                    QRL     27
         5 001432   200014 036100                    ADLQ    ARS,,AUTO
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:100  
         5 001433   000037 136007                    SBLQ    31,DL
         5 001434   200014 756100                    STQ     ARS,,AUTO

      944    11201
      945    11202    3              RETURN;

  11202  5 001435   202326 221300                    LDX1  ! @SIZ+2,,AUTO
         5 001436   000001 702211                    TSX2  ! 1,X1

      946    11203    3              END;
      947    11204
      948    11205        /****
      949    11206        *
      950    11207        *   Check for one length byte.
      951    11208        *
      952    11209        ****/
      953    11210
      954    11211    3           IF CH>=' ' THEN DO;

  11211  5 001437   202327 236100                    LDQ     CH,,AUTO
         5 001440   777000 376003                    ANQ     -512,DU
         5 001441   040000 116003                    CMPQ    16384,DU
         5 001442   001451 602000 5                  TNC     GETLEN_BAD_SYN

      955    11212    3              ARS=(ASCBIN(CH)-ASCBIN(' '))+1;

  11212  5 001443   202327 236100                    LDQ     CH,,AUTO
         5 001444   000033 772000                    QRL     27
         5 001445   000037 136007                    SBLQ    31,DL
         5 001446   200014 756100                    STQ     ARS,,AUTO

      956    11213    3              RETURN;

  11213  5 001447   202326 221300                    LDX1  ! @SIZ+2,,AUTO
         5 001450   000001 702211                    TSX2  ! 1,X1

      957    11214    3              END;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:101  
      958    11215
      959    11216        /****
      960    11217        *
      961    11218        *   Fall through (or branch) here if an illegal length code is detected.
      962    11219        *
      963    11220        ****/
      964    11221
      965    11222    2   GETLEN_BAD_SYN:
      966    11223    2           ERRCODE=%E$VWM_STX;

  11223  5 001451   000050 235000 6     GETLEN_BAD_* LDA     40
         5 001452   200017 755100                    STA     ERRCODE,,AUTO

      967    11224    2           ALTRETURN;

  11224  5 001453   202326 221300                    LDX1  ! @SIZ+2,,AUTO
         5 001454   000000 702211                    TSX2  ! 0,X1

      968    11225
      969    11226        /****
      970    11227        *
      971    11228        *   Hardware error reading bytes.  ALTRET.
      972    11229        *
      973    11230        ****/
      974    11231
      975    11232    2   GETLEN_ABORT:
      976    11233    2           ALTRETURN;

  11233  5 001455   202326 221300       GETLEN_ABORT LDX1  ! @SIZ+2,,AUTO
         5 001456   000000 702211                    TSX2  ! 0,X1

      977    11234
      978    11235    2   END;
      979    11236
      980    11237        %EJECT;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:102  
      981    11238        /*I**
      982    11239        *
      983    11240        *   NAME:  GETDAT
      984    11241        *
      985    11242        *   PURPOSE:
      986    11243        *       Read and decode the "data" portion of a record (key or data).
      987    11244        *
      988    11245        *   CALL:
      989    11246        *       CALL GETDAT(bfr) ALTRET...
      990    11247        *
      991    11248        *   PARAMETERS:
      992    11249        *       bfr - is the buffer into which the output is to be placed.
      993    11250        *
      994    11251        *   DATA:
      995    11252        *       The global variable OUTLIM contains the length of bfr.  ITSBIN
      996    11253        *       (if set) specifies translation from 3-for-2 format back into
      997    11254        *       binary mode.  The global symbols JIIDX and JILIM mark the current
      998    11255        *       position and limit of the data in JIBUF.
      999    11256        *
     1000    11257        *   DESCRIPTION:
     1001    11258        *       Fetch a data record into BFR of length OUTLIM.  This may be a
     1002    11259        *       partial record.  ALTRET on any error, such as EOF.
     1003    11260        *
     1004    11261        ****/
     1005    11262
     1006    11263    1   GETDAT: PROC(BFR) ALTRET;

  11263  5 001457   202326 741300       GETDAT       STX1  ! @SIZ+2,,AUTO

     1007    11264
     1008    11265    2   DCL BFR                            CHAR(OUTLIM);
     1009    11266    2   DCL I                              SBIN;
     1010    11267    2   DCL J                              SBIN;
     1011    11268    2   DCL CH                             CHAR(1);
     1012    11269
     1013    11270        /****
     1014    11271        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:103  
     1015    11272        *   If the record is in binary 3-for-2 format, collect 50% more bytes
     1016    11273        *   and decode them 3x6 into 2x9 bits.
     1017    11274        *
     1018    11275        ****/
     1019    11276
     1020    11277    3           IF ITSBIN THEN DO;

  11277  5 001460   202321 234100                    SZN     ITSBIN,,AUTO
         5 001461   001626 605000 5                  TPL     s:11317

     1021    11278    4              DO I=0 TO OUTLIM-1 BY 2;

  11278  5 001462   202330 450100                    STZ     I,,AUTO
         5 001463   001622 710000 5                  TRA     s:11306+2

     1022    11279
     1023    11280    4                 JIIDX=JIIDX+1;

  11280  5 001464   200011 054100                    AOS     JIIDX,,AUTO

     1024    11281    4                 IF JIIDX>=JILIM THEN

  11281  5 001465   200011 236100                    LDQ     JIIDX,,AUTO
         5 001466   200012 116100                    CMPQ    JILIM,,AUTO
         5 001467   001472 604000 5                  TMI     s:11283

     1025    11282    4                    CALL FFUTS ALTRET(GETDAT_BAD_SYN);

  11282  5 001470   001700 701000 5                  TSX1    FFUTS
         5 001471   001674 702000 5                  TSX2    GETDAT_BAD_SYN

     1026    11283    4                 CH=SUBSTR(JIBUF,JIIDX,1);

  11283  5 001472   200011 235100                    LDA     JIIDX,,AUTO
         5 001473   040100 100505                    MLR     fill='040'O
         5 001474   202122 000001                    ADSC9   JIBUF,A,AUTO             cn=0,n=1
         5 001475   202332 000001                    ADSC9   CH,,AUTO                 cn=0,n=1
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:104  

     1027    11284    4                 IF CH<' ' OR CH>'_' THEN

  11284  5 001476   202332 236100                    LDQ     CH,,AUTO
         5 001477   777000 376003                    ANQ     -512,DU
         5 001500   040000 116003                    CMPQ    16384,DU
         5 001501   001674 602000 5                  TNC     GETDAT_BAD_SYN
         5 001502   202332 236100                    LDQ     CH,,AUTO
         5 001503   777000 376003                    ANQ     -512,DU
         5 001504   137000 116003                    CMPQ    48640,DU
         5 001505   001507 600000 5                  TZE     s:11286
         5 001506   001674 603000 5                  TRC     GETDAT_BAD_SYN

     1028    11285    4                    GOTO GETDAT_BAD_SYN;
     1029    11286    4                 J=4096*(ASCBIN(CH)-ASCBIN(' '));

  11286  5 001507   202332 236100                    LDQ     CH,,AUTO
         5 001510   000033 772000                    QRL     27
         5 001511   000014 736000                    QLS     12
         5 001512   400000 136007                    SBLQ    -131072,DL
         5 001513   202331 756100                    STQ     J,,AUTO

     1030    11287
     1031    11288    4                 JIIDX=JIIDX+1;

  11288  5 001514   200011 054100                    AOS     JIIDX,,AUTO

     1032    11289    4                 IF JIIDX>=JILIM THEN

  11289  5 001515   200011 236100                    LDQ     JIIDX,,AUTO
         5 001516   200012 116100                    CMPQ    JILIM,,AUTO
         5 001517   001522 604000 5                  TMI     s:11291

     1033    11290    4                    CALL FFUTS ALTRET(GETDAT_BAD_SYN);

  11290  5 001520   001700 701000 5                  TSX1    FFUTS
         5 001521   001674 702000 5                  TSX2    GETDAT_BAD_SYN
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:105  

     1034    11291    4                 CH=SUBSTR(JIBUF,JIIDX,1);

  11291  5 001522   200011 235100                    LDA     JIIDX,,AUTO
         5 001523   040100 100505                    MLR     fill='040'O
         5 001524   202122 000001                    ADSC9   JIBUF,A,AUTO             cn=0,n=1
         5 001525   202332 000001                    ADSC9   CH,,AUTO                 cn=0,n=1

     1035    11292    4                 IF CH<' ' OR CH>'_' THEN

  11292  5 001526   202332 236100                    LDQ     CH,,AUTO
         5 001527   777000 376003                    ANQ     -512,DU
         5 001530   040000 116003                    CMPQ    16384,DU
         5 001531   001674 602000 5                  TNC     GETDAT_BAD_SYN
         5 001532   202332 236100                    LDQ     CH,,AUTO
         5 001533   777000 376003                    ANQ     -512,DU
         5 001534   137000 116003                    CMPQ    48640,DU
         5 001535   001537 600000 5                  TZE     s:11294
         5 001536   001674 603000 5                  TRC     GETDAT_BAD_SYN

     1036    11293    4                    GOTO GETDAT_BAD_SYN;
     1037    11294    4                 J=J+64*(ASCBIN(CH)-ASCBIN(' '));

  11294  5 001537   202332 236100                    LDQ     CH,,AUTO
         5 001540   000033 772000                    QRL     27
         5 001541   000006 736000                    QLS     6
         5 001542   202331 036100                    ADLQ    J,,AUTO
         5 001543   004000 136007                    SBLQ    2048,DL
         5 001544   202331 756100                    STQ     J,,AUTO

     1038    11295
     1039    11296    4                 JIIDX=JIIDX+1;

  11296  5 001545   200011 054100                    AOS     JIIDX,,AUTO

     1040    11297    4                 IF JIIDX>=JILIM THEN

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:106  
  11297  5 001546   200011 236100                    LDQ     JIIDX,,AUTO
         5 001547   200012 116100                    CMPQ    JILIM,,AUTO
         5 001550   001553 604000 5                  TMI     s:11299

     1041    11298    4                    CALL FFUTS ALTRET(GETDAT_BAD_SYN);

  11298  5 001551   001700 701000 5                  TSX1    FFUTS
         5 001552   001674 702000 5                  TSX2    GETDAT_BAD_SYN

     1042    11299    4                 CH=SUBSTR(JIBUF,JIIDX,1);

  11299  5 001553   200011 235100                    LDA     JIIDX,,AUTO
         5 001554   040100 100505                    MLR     fill='040'O
         5 001555   202122 000001                    ADSC9   JIBUF,A,AUTO             cn=0,n=1
         5 001556   202332 000001                    ADSC9   CH,,AUTO                 cn=0,n=1

     1043    11300    4                 IF CH<' ' OR CH>'_' THEN

  11300  5 001557   202332 236100                    LDQ     CH,,AUTO
         5 001560   777000 376003                    ANQ     -512,DU
         5 001561   040000 116003                    CMPQ    16384,DU
         5 001562   001674 602000 5                  TNC     GETDAT_BAD_SYN
         5 001563   202332 236100                    LDQ     CH,,AUTO
         5 001564   777000 376003                    ANQ     -512,DU
         5 001565   137000 116003                    CMPQ    48640,DU
         5 001566   001570 600000 5                  TZE     s:11302
         5 001567   001674 603000 5                  TRC     GETDAT_BAD_SYN

     1044    11301    4                    GOTO GETDAT_BAD_SYN;
     1045    11302    4                 J=J+(ASCBIN(CH)-ASCBIN(' '));

  11302  5 001570   202332 236100                    LDQ     CH,,AUTO
         5 001571   000033 772000                    QRL     27
         5 001572   202331 036100                    ADLQ    J,,AUTO
         5 001573   000040 136007                    SBLQ    32,DL
         5 001574   202331 756100                    STQ     J,,AUTO

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:107  
     1046    11303
     1047    11304    4                 CALL INSERT(BFR,I,1,BINASC(J/512));

  11304  5 001575   001000 506007                    DIV     512,DL
         5 001576   000033 736000                    QLS     27
         5 001577   000051 276000 6                  ORQ     41
         5 001600   202336 756100                    STQ     CH+4,,AUTO
         5 001601   202327 470500                    LDP0    @BFR,,AUTO
         5 001602   202330 235100                    LDA     I,,AUTO
         5 001603   040105 100500                    MLR     fill='040'O
         5 001604   202336 000004                    ADSC9   CH+4,,AUTO               cn=0,n=4
         5 001605   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

     1048    11305    4                 CALL INSERT(BFR,I+1,1,BINASC(MOD(J,512)));

  11305  5 001606   202331 236100                    LDQ     J,,AUTO
         5 001607   001000 506007                    DIV     512,DL
         5 001610   000044 733000                    LRS     36
         5 001611   000033 736000                    QLS     27
         5 001612   000051 276000 6                  ORQ     41
         5 001613   202336 756100                    STQ     CH+4,,AUTO
         5 001614   202330 235100                    LDA     I,,AUTO
         5 001615   040105 100500                    MLR     fill='040'O
         5 001616   202336 000004                    ADSC9   CH+4,,AUTO               cn=0,n=4
         5 001617   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1

     1049    11306    4                 END;

  11306  5 001620   000002 236007                    LDQ     2,DL
         5 001621   202330 056100                    ASQ     I,,AUTO
         5 001622   202330 236100                    LDQ     I,,AUTO
         5 001623   200013 116100                    CMPQ    OUTLIM,,AUTO
         5 001624   001464 604000 5                  TMI     s:11280

     1050    11307    3              END;

  11307  5 001625   001672 710000 5                  TRA     s:11331
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:108  

     1051    11308
     1052    11309        /****
     1053    11310        *
     1054    11311        *   Otherwise, move the rest of the input buffer bytes (if any) and,
     1055    11312        *   if necessary, read more records until the input buffer is full.
     1056    11313        *
     1057    11314        ****/
     1058    11315
     1059    11316    3           ELSE DO;

     1060    11317    3              I=0;

  11317  5 001626   202330 450100                    STZ     I,,AUTO

     1061    11318    4              DO WHILE(I<OUTLIM);

  11318  5 001627   202330 236100                    LDQ     I,,AUTO
         5 001630   200013 116100                    CMPQ    OUTLIM,,AUTO
         5 001631   001672 605000 5                  TPL     s:11331

     1062    11319    4                 JIIDX=JIIDX+1;

  11319  5 001632   200011 054100                    AOS     JIIDX,,AUTO

     1063    11320    4                 IF JIIDX>=JILIM THEN

  11320  5 001633   200011 236100                    LDQ     JIIDX,,AUTO
         5 001634   200012 116100                    CMPQ    JILIM,,AUTO
         5 001635   001640 604000 5                  TMI     s:11322

     1064    11321    4                    CALL FFUTS ALTRET(GETDAT_BAD_SYN);

  11321  5 001636   001700 701000 5                  TSX1    FFUTS
         5 001637   001674 702000 5                  TSX2    GETDAT_BAD_SYN

     1065    11322    4                 J=JILIM-JIIDX;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:109  

  11322  5 001640   200012 236100                    LDQ     JILIM,,AUTO
         5 001641   200011 136100                    SBLQ    JIIDX,,AUTO
         5 001642   202331 756100                    STQ     J,,AUTO

     1066    11323    4                 IF J>OUTLIM-I THEN

  11323  5 001643   200013 236100                    LDQ     OUTLIM,,AUTO
         5 001644   202330 136100                    SBLQ    I,,AUTO
         5 001645   202331 116100                    CMPQ    J,,AUTO
         5 001646   001652 605000 5                  TPL     s:11325

     1067    11324    4                    J=OUTLIM-I;

  11324  5 001647   200013 236100                    LDQ     OUTLIM,,AUTO
         5 001650   202330 136100                    SBLQ    I,,AUTO
         5 001651   202331 756100                    STQ     J,,AUTO

     1068    11325    4                 CALL INSERT(BFR,I,J,SUBSTR(JIBUF,JIIDX,J));

  11325  5 001652   202331 720100                    LXL0    J,,AUTO
         5 001653   200011 235100                    LDA     JIIDX,,AUTO
         5 001654   202327 470500                    LDP0    @BFR,,AUTO
         5 001655   202330 236100                    LDQ     I,,AUTO
         5 001656   040146 100545                    MLR     fill='040'O
         5 001657   202122 000010                    ADSC9   JIBUF,A,AUTO             cn=0,n=*X0
         5 001660   000000 000010                    ADSC9   0,Q,PR0                  cn=0,n=*X0

     1069    11326    4                 JIIDX=JIIDX+J-1;

  11326  5 001661   200011 236100                    LDQ     JIIDX,,AUTO
         5 001662   202331 036100                    ADLQ    J,,AUTO
         5 001663   000001 136007                    SBLQ    1,DL
         5 001664   200011 756100                    STQ     JIIDX,,AUTO

     1070    11327    4                 I=I+J;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:110  
  11327  5 001665   202330 236100                    LDQ     I,,AUTO
         5 001666   202331 036100                    ADLQ    J,,AUTO
         5 001667   202330 756100                    STQ     I,,AUTO

     1071    11328    4                 END;

  11328  5 001670   200013 116100                    CMPQ    OUTLIM,,AUTO
         5 001671   001632 604000 5                  TMI     s:11319

     1072    11329    3              END;

     1073    11330
     1074    11331    2           RETURN;

  11331  5 001672   202326 221300                    LDX1  ! @SIZ+2,,AUTO
         5 001673   000001 702211                    TSX2  ! 1,X1

     1075    11332
     1076    11333        /****
     1077    11334        *
     1078    11335        *   Syntax error in the packet.  ALTRET.
     1079    11336        *
     1080    11337        ****/
     1081    11338
     1082    11339    2   GETDAT_BAD_SYN:
     1083    11340    2           ERRCODE=%E$VWM_STX;

  11340  5 001674   000050 235000 6     GETDAT_BAD_* LDA     40
         5 001675   200017 755100                    STA     ERRCODE,,AUTO

     1084    11341    2           ALTRETURN;

  11341  5 001676   202326 221300                    LDX1  ! @SIZ+2,,AUTO
         5 001677   000000 702211                    TSX2  ! 0,X1

     1085    11342
     1086    11343    2   END;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:111  
     1087    11344
     1088    11345        %EJECT;
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:112  
     1089    11346        /*I**
     1090    11347        *
     1091    11348        *   NAME:  FFUTS
     1092    11349        *
     1093    11350        *   PURPOSE:
     1094    11351        *       To read the next record from the input file.
     1095    11352        *
     1096    11353        *   CALL:
     1097    11354        *       CALL FFUTS ALTRET...
     1098    11355        *
     1099    11356        *   PARAMETERS:
     1100    11357        *       None.
     1101    11358        *
     1102    11359        *   DATA:
     1103    11360        *       JIBUF is cleared, then read into.  JILIM is set to the value
     1104    11361        *       found in the input record and JIIDX is set to 1.  VW_SCRAMBLE#
     1105    11362        *       (if set) specifies that VWI$TRANSI is to be used to descramble
     1106    11363        *       the input record.  ERRCODE may be set.
     1107    11364        *
     1108    11365        *   DESCRIPTION:
     1109    11366        *       Clear JIBUF and read a record into it; ALTRET on errors or
     1110    11367        *       EOF.  Put length in JILIM (from column 1) and point JIIDX to
     1111    11368        *       column 2.
     1112    11369        *
     1113    11370        ****/
     1114    11371
     1115    11372    1   FFUTS:  PROC ALTRET;

  11372  5 001700   202334 741300       FFUTS        STX1  ! CH+2,,AUTO

     1116    11373
     1117    11374        /****
     1118    11375        *
     1119    11376        *   We must clear JIBUF to blanks because CP-6 UR handling deletes
     1120    11377        *   trailing blanks prior to transmission, and they may be significant.
     1121    11378        *
     1122    11379        ****/
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:113  
     1123    11380
     1124    11381    2           JIBUF=' ';

  11381  5 001701   040100 100400                    MLR     fill='040'O
         5 001702   000006 000001 6                  ADSC9   6                        cn=0,n=1
         5 001703   202122 000120                    ADSC9   JIBUF,,AUTO              cn=0,n=80

     1125    11382
     1126    11383        /****
     1127    11384        *
     1128    11385        *   Read an 80-byte record and check for silliness.
     1129    11386        *
     1130    11387        ****/
     1131    11388
     1132    11389    2           CALL M$READ(READ_JI) ALTRET(FFUTS_EOF);

  11389  5 001704   000356 630400 1                  EPPR0   READ_JI
         5 001705   440000 713400                    CLIMB   alt,read
         5 001706   401400 401760                    pmme    nvectors=4
         5 001707   001761 702000 5                  TSX2    FFUTS_EOF

     1133    11390    2           JILIM=JIPTR->DUMMY.ARS#;

  11390  5 001710   200020 470500                    LDP0    JIPTR,,AUTO
         5 001711   000000 235100                    LDA     0,,PR0
         5 001712   200012 755100                    STA     JILIM,,AUTO

     1134    11391    3           IF JILIM<1 OR JILIM>80 THEN DO;

  11391  5 001713   001716 604400 5                  TMOZ    s:11392
         5 001714   000120 115007                    CMPA    80,DL
         5 001715   001722 604400 5                  TMOZ    s:11402

     1135    11392    3              ERRCODE=%E$VWM_STX;

  11392  5 001716   000050 236000 6                  LDQ     40
         5 001717   200017 756100                    STQ     ERRCODE,,AUTO
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:114  

     1136    11393    3              ALTRETURN;

  11393  5 001720   202334 221300                    LDX1  ! CH+2,,AUTO
         5 001721   000000 702211                    TSX2  ! 0,X1

     1137    11394    3              END;
     1138    11395
     1139    11396        /****
     1140    11397        *
     1141    11398        *   Check for the special EOF code.
     1142    11399        *
     1143    11400        ****/
     1144    11401
     1145    11402    3           IF SUBSTR(JIBUF,0,4)=' EOF' THEN DO;

  11402  5 001722   202122 236100                    LDQ     JIBUF,,AUTO
         5 001723   000003 116000 4                  CMPQ    3
         5 001724   001731 601000 5                  TNZ     s:11414

     1146    11403    3              JIIDX=0;

  11403  5 001725   200011 450100                    STZ     JIIDX,,AUTO

     1147    11404    3              JILIM=0;

  11404  5 001726   200012 450100                    STZ     JILIM,,AUTO

     1148    11405    3              ALTRETURN;

  11405  5 001727   202334 221300                    LDX1  ! CH+2,,AUTO
         5 001730   000000 702211                    TSX2  ! 0,X1

     1149    11406    3              END;
     1150    11407
     1151    11408        /****
     1152    11409        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:115  
     1153    11410        *   If the records are scrambled, unscramble them.
     1154    11411        *
     1155    11412        ****/
     1156    11413
     1157    11414    2           IF VW_SCRAMBLE# THEN

  11414  5 001731   000000 234000 xsym               SZN     VW_SCRAMBLE#
         5 001732   001741 605000 5                  TPL     s:11423

     1158    11415    2              CALL VWI$TRANSI(JIBUF);

  11415  5 001733   202122 631500                    EPPR1   JIBUF,,AUTO
         5 001734   202336 451500                    STP1    CH+4,,AUTO
         5 001735   202336 630500                    EPPR0   CH+4,,AUTO
         5 001736   000042 631400 6                  EPPR1   34
         5 001737   000000 701000 xent               TSX1    VWI$TRANSI
         5 001740   000000 011000                    NOP     0

     1159    11416
     1160    11417        /****
     1161    11418        *
     1162    11419        *   Compute the true length of the record, based on the length byte in CC 1.
     1163    11420        *
     1164    11421        ****/
     1165    11422
     1166    11423    2           JILIM=ASCBIN(SUBSTR(JIBUF,0,1))-ASCBIN('/');

  11423  5 001741   202122 236100                    LDQ     JIBUF,,AUTO
         5 001742   000033 772000                    QRL     27
         5 001743   000057 136007                    SBLQ    47,DL
         5 001744   200012 756100                    STQ     JILIM,,AUTO

     1167    11424    3           IF JILIM<1 OR JILIM>79 THEN DO;

  11424  5 001745   001750 604400 5                  TMOZ    s:11425
         5 001746   000117 116007                    CMPQ    79,DL
         5 001747   001754 604400 5                  TMOZ    s:11435
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:116  

     1168    11425    3              ERRCODE=%E$VWM_STX;

  11425  5 001750   000050 235000 6                  LDA     40
         5 001751   200017 755100                    STA     ERRCODE,,AUTO

     1169    11426    3              ALTRETURN;

  11426  5 001752   202334 221300                    LDX1  ! CH+2,,AUTO
         5 001753   000000 702211                    TSX2  ! 0,X1

     1170    11427    3              END;
     1171    11428
     1172    11429        /****
     1173    11430        *
     1174    11431        *   Adjust the limit and reset the index pointer.
     1175    11432        *
     1176    11433        ****/
     1177    11434
     1178    11435    2           JILIM=JILIM+1;

  11435  5 001754   200012 054100                    AOS     JILIM,,AUTO

     1179    11436    2           JIIDX=1;

  11436  5 001755   000001 235007                    LDA     1,DL
         5 001756   200011 755100                    STA     JIIDX,,AUTO

     1180    11437
     1181    11438    2           RETURN;

  11438  5 001757   202334 221300                    LDX1  ! CH+2,,AUTO
         5 001760   000001 702211                    TSX2  ! 1,X1

     1182    11439
     1183    11440        /****
     1184    11441        *
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:117  
     1185    11442        *   This doesn't look good for the home team.
     1186    11443        *
     1187    11444        ****/
     1188    11445
     1189    11446    2   FFUTS_EOF:
     1190    11447    2           ALTRETURN;

  11447  5 001761   202334 221300       FFUTS_EOF    LDX1  ! CH+2,,AUTO
         5 001762   000000 702211                    TSX2  ! 0,X1

FID_OUT
 Sect OctLoc
   1     000   000003 777640   000024 006000   000000 177640   000000 006014    ................
   1     004   000007 777640   000030 006000   000001 777640   000040 006000    ............. ..
   1     010   000001 777640   000042 006000   000011 777640   000044 006000    .....".......$..
   1     014   000000 177640   000000 006014   000000 177640   000163 606000    .............s..
   1     020   000000 777640   000166 006000   000011 777640   000056 006000    .....v..........
   1     024   777000 000000   000000 000000   000000 000000   ****** ******    ................

NAME_OUT
 Sect OctLoc
   1     030   001040 040040   040040 040040   040040 040040   040040 040040    .
   1     034   040040 040040   040040 040040   040040 040040   040040 040040

ACCT_OUT
 Sect OctLoc
   1     040   040040 040040   040040 040040

PASS_OUT
 Sect OctLoc
   1     042   040040 040040   040040 040040

SN_OUT
 Sect OctLoc
   1     044   000000 000006   040040 040040   040040 040040   040040 040040    ....
   1     050   040040 040040   040040 040040   040040 040040   040040 040040
   1     054   040040 040040   040040 040040
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:118  

VLR_OUT
 Sect OctLoc
   1     056   ****** ******   ****** ******   ****** ******   ****** ******    ................

UNFID_OUT
 Sect OctLoc
   1     070   000001 777640   000114 006000   000000 177640   000000 006014    .....L..........
   1     074   000007 777640   000030 006000   000001 777640   000040 006000    ............. ..
   1     100   000000 177640   000000 006014   000011 777640   000044 006000    .............$..
   1     104   000000 177640   000000 006014   000000 177640   000163 606000    .............s..
   1     110   000000 777640   000166 006000   000000 177640   000000 006014    .....v..........
   1     114   000000 000000   0***** ******                                    ........

OPEN_OUT
 Sect OctLoc
   1     116   000025 777640   000162 006000   000011 777640   000044 006000    .....r.......$..
   1     122   000000 177640   000000 006014   000007 777640   000030 006000    ................
   1     126   000001 777640   000042 006000   000000 177640   000000 006014    ....."..........
   1     132   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     142*  000001 777640   000040 006000   000000 177640   000000 006014    ..... ..........
   1     146   000000 177640   000000 006014   000001 777640   000302 006000    ................
   1     152   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     162*  000000 400042   000000 003000   252525 000001   000040 252520    ..."......... ..
   1     166   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   1     172   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     176   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   1     202   040040 040040   000000 000000   000000 000000   000000 000000        ............
   1     206   000000 000000   ****** ******                                    ........

OPEN_OUT_TEST
 Sect OctLoc
   1     210   000025 777640   000254 006000   000011 777640   000044 006000    .............$..
   1     214   000000 177640   000000 006014   000007 777640   000030 006000    ................
   1     220   000001 777640   000042 006000   000000 177640   000000 006014    ....."..........
   1     224   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     234*  000001 777640   000040 006000   000000 177640   000000 006014    ..... ..........
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:119  
   1     240   017777 777640   000432 006000   000001 777640   000302 006000    ................
   1     244   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     254*  000000 420042   000000 002000   252525 000000   000040 252520    ..."......... ..
   1     260   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   1     264   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     270   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   1     274   040040 040040   000000 000000   000000 000000   000000 000000        ............
   1     300   000000 000000   ****** ******                                    ........

WSN_OUT
 Sect OctLoc
   1     302   114117 103101   114040 040040                                    LOCAL

WRITE_OUT
 Sect OctLoc
   1     304   000003 777640   000314 006000   000000 177640   000000 006014    ................
   1     310   017777 777640   000432 006000   000000 177640   000000 006014    ................
   1     314   000000 400400   000000 000000   000000 000000   000000 000000    ................

CLOSE_OUT
 Sect OctLoc
   1     320   000003 777640   000352 006000   000000 177640   000000 006014    ................
   1     324   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     350*  000000 177640   000000 006014   000000 200002   000000 000040    ...............
   1     354   000220 000000   000000 000000                                    ........

READ_JI
 Sect OctLoc
   1     356   000005 777640   000366 006000   000000 177640   000000 006014    ................
   1     362   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     366   000000 400000   000000 000000   000000 000000   000000 000000    ................
   1     372   000000 000000   000000 000000                                    ........

CLOSE_JI
 Sect OctLoc
   1     374   000003 777640   000426 006000   000000 177640   000000 006014    ................
   1     400   000000 177640   000000 006014   000000 177640   000000 006014    ................
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:120  
   1     424*  000000 177640   000000 006014   000000 000002   000000 000040    ...............
   1     430   000220 000000   000000 000000                                    ........

OUTBUF
 Sect OctLoc
   1     432   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   1    2251   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   4     000   114120 040040   103120 040040   102125 123131   040105 117106    LP  CP  BUSY EOF

(unnamed)
 Sect OctLoc
   6     000   000000 006003   001777 777640   000023 600000   000074 206000    .............<..
   6     004   000023 577640   002251 200000   040040 040040   777777 777177    ........    ....
   6     010   000000 010000   000010 006000   262715 000630   777777 776377    ................
   6     014   000001 777640   000302 006000   000000 177640   000000 006014    ................
   6     020   777717 777777   777777 777377   777777 777737   777777 767777    ................
   6     024   000077 777640   000000 100000   000025 006000   000432 006000    .?....@.........
   6     030   777777 777777   777777 600000   262715 000060   262715 000020    ...........0....
   6     034   262715 000120   777777 777770   000023 777640   000003 000000    ...P............
   6     040   262715 000550   000040 006000   000001 000000   000005 000000    ..... ..........
   6     044   262715 000560   000044 006000   000022 200000   776777 777777    .....$..........
   6     050   262715 000570   000040 040040                                    .....
     1191    11448
     1192    11449    2   END;
     1193    11450
     1194    11451    1   END;

PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:121  
--  Include file information  --

   VW_OPTS_M.:VMB6TOU  is referenced.
   VWM_ERRS_E.:VMB6TOU  is referenced.
   VW_MOVE_E.:VMB6TOU  is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   FM$FIT.:LIB_E05  is referenced.
   B$JIT_C.:LIB_E05  is referenced.
   B$JIT.:LIB_E05  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure VWE$EVOM.
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:122  

 **** Variables and constants ****

  ****  Section 001  Data  VWE$EVOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    40-0-0/c STRC(72)    r     1 ACCT_OUT                 374-0-0/d STRC(1080)  r     1 CLOSE_JI
   320-0-0/d STRC(1080)  r     1 CLOSE_OUT                  0-0-0/d STRC(864)   r     1 FID_OUT
    30-0-0/c STRC(288)   r     1 NAME_OUT                 116-0-0/d STRC(2088)  r     1 OPEN_OUT
   210-0-0/d STRC(2088)  r     1 OPEN_OUT_TEST            432-0-0/c STRC(32768) r     1 OUTBUF
    42-0-0/c STRC(72)    r     1 PASS_OUT                 356-0-0/d STRC(504)   r     1 READ_JI
    44-0-0/d STRC(360)   r     1 SN_OUT                    70-0-0/d STRC(792)   r     1 UNFID_OUT
    56-0-0/d STRC(324)   r     1 VLR_OUT                  304-0-0/d STRC(432)   r     1 WRITE_OUT
   302-0-0/c STRC(72)    r     1 WSN_OUT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  2323-0-0/w PTR         r     1 @BFR                    2327-0-0/w PTR         r     1 @BFR
  2324-0-0/w PTR         r     1 @SIZ                      14-0-0/w SBIN        r     1 ARS
    *0-0-0/c ACHR        r     1 BFR                       *0-0-0/c ACHR        r     1 BFR
  2327-0-0/c CHAR        r     1 CH                      2332-0-0/c CHAR        r     1 CH
  2246-0-0/c CHAR(8)           1 DWORK                     17-0-0/w STRC        r     1 ERRBITS
    17-0-0/w SBIN        r     1 ERRCODE                   16-0-0/w SBIN        r     1 ERRDCB
    10-0-0/w SBIN        r     1 FILEORG                  122-0-0/c CHAR(4096)  r     1 FITBUF
    15-0-0/w SBIN        r     1 HOW                        3-0-0/w SBIN        r     1 I
  2330-0-0/w SBIN        r     1 I                       2321-0-0/b BIT         r     1 ITSBIN
     4-0-0/w SBIN        r     1 J                       2331-0-0/w SBIN        r     1 J
  2122-0-0/c CHAR(80)    r     1 JIBUF                     11-0-0/w SBIN        r     1 JIIDX
    12-0-0/w SBIN        r     1 JILIM                     20-0-0/w PTR         r     1 JIPTR
     5-0-0/w SBIN        r     1 K                         22-0-0/c STRC(2304)  r     1 KEYBUF
     6-0-0/w SBIN        r     1 L                       2146-0-0/c CHAR(256)         1 LOBUF
     7-0-0/w UBIN        r     1 M                         13-0-0/w SBIN        r     1 OUTLIM
    21-0-0/w PTR         r     1 OUTPTR                  2250-0-0/c CHAR(4)     r     1 RANREL
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:123  
    *0-0-0/w SBIN        r     1 SIZ                     2251-0-0/c STRC(720)   r     1 U1
  2275-0-0/c STRC(720)   r     1 U2

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/c CHAR(80)          1 CARD(0:24)                 0-0-0/c STRC(18000) r     1 OPTS
     0-0-0/c CHAR(2000)  r     1 VW_OPTIONS#                0-0-0/b BIT         r     1 VW_SCRAMBLE#

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)        1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w STRC(324)   r     1 CODE03
     0-0-0/w STRC(396)   r     1 CODE04                     0-0-0/d ASTR(3528)  r     1 DUMMY
     0-0-0/w STRC(1116)  r     1 FM$FIT                     0-0-0N  NULL        r     1 M$JI
     0-0-0N  NULL        r     1 M$OUT                      0-0-0N  NULL        r     1 M$UC
     0-0-0/c STRC(720)         1 OPTSCHAR                   0-0-0/c STRC(720)         1 OPTSDATE
     0-0-0/c STRC(720)         1 OPTSRECS


   Procedure VWE$EVOM requires 1011 words for executable code.
   Procedure VWE$EVOM requires 1262 words of local(AUTO) storage.

    No errors detected in file VWE$EVOM.:VMB6TSI    .
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:124  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:125  
          MINI XREF LISTING

ACCT_OUT
      9847**DCL      9793--DCLINIT  9917--DCLINIT 10003--DCLINIT 10123--DCLINIT
ARS
     10458**DCL     10955>>IF      10955>>IF      10964>>ASSIGN  10965>>ASSIGN  11000>>ASSIGN  11001>>IF
     11022<<ASSIGN  11022>>ASSIGN  11083<<ASSIGN  11128<<ASSIGN  11136<<ASSIGN  11136>>ASSIGN  11144<<ASSIGN
     11144>>ASSIGN  11152<<ASSIGN  11152>>ASSIGN  11164<<ASSIGN  11172<<ASSIGN  11172>>ASSIGN  11180<<ASSIGN
     11180>>ASSIGN  11192<<ASSIGN  11200<<ASSIGN  11200>>ASSIGN  11212<<ASSIGN
B$ALT.CODE
     10350**DCL     10350--REDEF   10351--REDEF   10351--REDEF
B$ALT.ERR
     10351**DCL     10813>>ASSIGN  10870>>ASSIGN
B$ALT.ERR.ERR#
     10352**DCL     10352--REDEF
B$ALT.EVID
     10351**DCL     10351--REDEF   10351--REDEF
B$JIT.CPFLAGS1.SLEAZE
      6592**DCL      6592--REDEF
B$JIT.ERR.MID
      6499**DCL      6499--REDEF
B$JIT.JRESPEAK
      6660**DCL      6661--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      6769**DCL      6769--REDEF    6770--REDEF
B$JIT.PNR
      6673**DCL      6673--REDEF
B$JIT.TSLINE
      6767**DCL      6768--REDEF
B$JIT$
     10471**DCL      6493--IMP-PTR
B$TCB.ALT$
     10345**DCL     10813>>ASSIGN  10870>>ASSIGN
B$TCB$
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:126  
     10472**DCL     10813>>ASSIGN  10870>>ASSIGN
BFR IN PROCEDURE GETDAT
     11265**DCL     11263--PROC    11304<<CALLBLT 11305<<CALLBLT 11325<<CALLBLT
BFR IN PROCEDURE TAMROF
     10927**DCL     10925--PROC    11014<>CALL
CH IN PROCEDURE GETDAT
     11268**DCL     11283<<ASSIGN  11284>>IF      11284>>IF      11286>>ASSIGN  11291<<ASSIGN  11292>>IF
     11292>>IF      11294>>ASSIGN  11299<<ASSIGN  11300>>IF      11300>>IF      11302>>ASSIGN
CH IN PROCEDURE GETLEN
     11075**DCL     11088<<ASSIGN  11096>>IF      11105>>IF      11114>>IF      11116<<ASSIGN  11116>>ASSIGN
     11127>>IF      11128>>ASSIGN  11133<<ASSIGN  11134>>IF      11134>>IF      11136>>ASSIGN  11141<<ASSIGN
     11142>>IF      11142>>IF      11144>>ASSIGN  11149<<ASSIGN  11150>>IF      11150>>IF      11152>>ASSIGN
     11163>>IF      11164>>ASSIGN  11169<<ASSIGN  11170>>IF      11170>>IF      11172>>ASSIGN  11177<<ASSIGN
     11178>>IF      11178>>IF      11180>>ASSIGN  11191>>IF      11192>>ASSIGN  11197<<ASSIGN  11198>>IF
     11198>>IF      11200>>ASSIGN  11211>>IF      11212>>ASSIGN
CLOSE_JI
     10324**DCL     10826<>CALL    10849<>CALL    10886<>CALL
CLOSE_JI.SN_
     10324**DCL     10324--REDEF
CLOSE_JI.UTL_
     10325**DCL     10325--REDEF
CLOSE_JI.V
     10329**DCL     10324--DCLINIT
CLOSE_JI.V.DISP#
     10333**DCL     10825<<ASSIGN  10848<<ASSIGN  10884<<ASSIGN
CLOSE_JI.V.EXPIRE#
     10339**DCL     10339--REDEF
CLOSE_JI.V.TYPE#
     10337**DCL     10337--REDEF
CLOSE_JI.V.XTNSIZE#
     10334**DCL     10334--REDEF   10336--REDEF
CLOSE_OUT
     10238**DCL     10847<>CALL    10892<>CALL
CLOSE_OUT.SN_
     10238**DCL     10238--REDEF
CLOSE_OUT.UTL_
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:127  
     10239**DCL     10239--REDEF
CLOSE_OUT.V
     10243**DCL     10238--DCLINIT
CLOSE_OUT.V.ALTBLD#
     10252**DCL     10654<<ASSIGN  10658<<ASSIGN
CLOSE_OUT.V.DISP#
     10247**DCL     10846<<ASSIGN  10889<<ASSIGN  10891<<ASSIGN
CLOSE_OUT.V.EXPIRE#
     10253**DCL     10253--REDEF
CLOSE_OUT.V.TYPE#
     10251**DCL     10251--REDEF
CLOSE_OUT.V.XTNSIZE#
     10248**DCL     10248--REDEF   10250--REDEF
CODE03.ORG
     10362**DCL     10562>>ASSIGN
CODE04.MODIFY.TIME
     10374**DCL     10593>>ASSIGN  10615>>IF
DUMMY.ACTPOS
     10412**DCL     10412--REDEF
DUMMY.ARS#
     10386**DCL     10386--REDEF   11390>>ASSIGN
DUMMY.ATTR
     10405**DCL     10406--REDEF
DUMMY.BORROW
     10420**DCL     10420--REDEF   10420--REDEF   10420--REDEF
DUMMY.DCBNAME.L
     10434**DCL     10434--IMP-SIZ
DUMMY.EOMCHAR#
     10390**DCL     10390--REDEF
DUMMY.FCD#
     10399**DCL     10885>>IF      10887>>IF
DUMMY.FEXT
     10416**DCL     10888>>IF
DUMMY.FLDID
     10415**DCL     10415--REDEF
DUMMY.FORM$
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:128  
     10409**DCL     10409--REDEF
DUMMY.FSECT
     10425**DCL     10425--REDEF
DUMMY.FSN#
     10402**DCL     10402--REDEF   10402--REDEF   10403--REDEF
DUMMY.HEADER$
     10408**DCL     10408--REDEF
DUMMY.IXTNSIZE#
     10406**DCL     10406--REDEF
DUMMY.LASTSTA$
     10395**DCL     10395--REDEF
DUMMY.LVL
     10421**DCL     10421--REDEF
DUMMY.NAME#.C
     10396**DCL     10396--REDEF
DUMMY.NOEOF
     10418**DCL     10418--REDEF
DUMMY.NRECS#
     10407**DCL     10407--REDEF
DUMMY.NRECX
     10426**DCL     10426--REDEF
DUMMY.OHDR
     10418**DCL     10418--REDEF
DUMMY.ORG#
     10401**DCL     10401--REDEF
DUMMY.PRECNO
     10424**DCL     10424--REDEF
DUMMY.RCSZ
     10430**DCL     10430--REDEF
DUMMY.RES#
     10397**DCL     10397--REDEF
DUMMY.SETX
     10409**DCL     10409--REDEF
DUMMY.TAB$
     10409**DCL     10409--REDEF
DUMMY.TDA
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:129  
     10423**DCL     10424--REDEF
DUMMY.WSN#
     10397**DCL     10397--REDEF
ERRBITS
     10463**DCL     10813<<ASSIGN  10870<<ASSIGN
ERRBITS.CODE
     10466**DCL     10822>>IF      10822>>IF      10822>>IF      10822>>IF
ERRBITS.SEV
     10467**DCL     10814<<ASSIGN  10871<<ASSIGN
ERRCODE
     10462**DCL     10463--REDEF   10618<<ASSIGN  10783<<ASSIGN  10793<<ASSIGN  10803<<ASSIGN  10860<>CALL
     10872<>CALL    11033<<ASSIGN  11223<<ASSIGN  11340<<ASSIGN  11392<<ASSIGN  11425<<ASSIGN
ERRDCB
     10460**DCL     10829<<ASSIGN  10872<>CALL
EVOM_ABORT
     10884**LABEL   10861--GOTO    10873--GOTO
EVOM_BAD_INP
     10844**LABEL   10762--CALLALT
EVOM_BAD_ONE
     10813**LABEL   10661--CALLALT 10773--CALLALT 10847--CALLALT
EVOM_BAD_ORG
     10803**LABEL   10751--GOTO
EVOM_BAD_OTL
     10783**LABEL   10524--GOTO
EVOM_BAD_OUT
     10793**LABEL   10526--CALLALT
EVOM_SYSERR
     10870**LABEL   10830--GOTO
EVOM_USRERR
     10860**LABEL   10557--CALLALT 10619--GOTO    10784--GOTO    10794--GOTO    10804--GOTO    10845--GOTO
FFUTS
     11372**PROC    10978--CALL    11087--CALL    11132--CALL    11140--CALL    11148--CALL    11168--CALL
     11176--CALL    11196--CALL    11282--CALL    11290--CALL    11298--CALL    11321--CALL
FFUTS_EOF IN PROCEDURE FFUTS
     11447**LABEL   11389--CALLALT
FID_OUT
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:130  
      9792**DCL     10526<>CALL
FID_OUT.TEXTFID_
      9792**DCL     10525<<ASSIGN
FID_OUT.V
      9796**DCL      9792--DCLINIT
FILEORG
     10454**DCL     10559<<ASSIGN  10562<<ASSIGN  10641>>IF      10641>>IF      10641>>IF      10652>>IF
     10669>>DOCASE  10763>>IF      10763>>IF      10763>>IF      10945>>IF      10945>>IF      10945>>IF
     10945>>IF
FITBUF
     10484**DCL     10509--ASSIGN  10557<>CALL    10558--ASSIGN  10561--IF      10562--ASSIGN  10562--ASSIGN
     10583--ASSIGN  10592--IF      10593--ASSIGN  10593--ASSIGN
FM$FIT.CODES.CODE
     10358**DCL     10558>>ASSIGN  10561>>IF      10583>>ASSIGN  10592>>IF      10612>>ASSIGN  10614>>IF
FM$FIT.CODES.ITEMX
     10358**DCL     10562>>ASSIGN  10593>>ASSIGN  10615>>IF
GETDAT
     11263**PROC    10966--CALL    11014--CALL
GETDAT_BAD_SYN IN PROCEDURE GETDAT
     11340**LABEL   11282--CALLALT 11285--GOTO    11290--CALLALT 11293--GOTO    11298--CALLALT 11301--GOTO
     11321--CALLALT
GETLEN
     11073**PROC    10954--CALL    10989--CALL
GETLEN_ABORT IN PROCEDURE GETLEN
     11233**LABEL   11087--CALLALT
GETLEN_BAD_SYN IN PROCEDURE GETLEN
     11223**LABEL   11097--GOTO    11132--CALLALT 11135--GOTO    11140--CALLALT 11143--GOTO    11148--CALLALT
     11151--GOTO    11168--CALLALT 11171--GOTO    11176--CALLALT 11179--GOTO    11196--CALLALT 11199--GOTO
HOW
     10459**DCL     10540<<ASSIGN  10541>>IF      10543>>IF      10641>>IF
I
     10449**DCL     10514--ASSIGN  10522<<ASSIGN  10523>>IF      10523>>IF      10525>>ASSIGN  10529>>ASSIGN
     10531<<CALLBLT 10532>>ASSIGN  10558<<ASSIGN  10560>>DOINDEX 10591<<DOINDEX 10592>>IF      10593>>ASSIGN
I IN PROCEDURE GETDAT
     11266**DCL     11278<<DOINDEX 11304>>CALLBLT 11305>>CALLBLT 11317<<ASSIGN  11318>>DOWHILE 11323>>IF
     11324>>ASSIGN  11325>>CALLBLT 11327<<ASSIGN  11327>>ASSIGN
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:131  
ITSBIN
     10497**DCL     11115<<ASSIGN  11119<<ASSIGN  11277>>IF
J
     10450**DCL     10560<<DOINDEX 10561>>IF      10562>>ASSIGN  10583<<ASSIGN  10591>>DOINDEX
J IN PROCEDURE GETDAT
     11267**DCL     11286<<ASSIGN  11294<<ASSIGN  11294>>ASSIGN  11302<<ASSIGN  11302>>ASSIGN  11304>>CALLBLT
     11305>>CALLBLT 11322<<ASSIGN  11323>>IF      11324<<ASSIGN  11325>>CALLBLT 11325>>CALLBLT 11326>>ASSIGN
     11327>>ASSIGN
JIBUF
     10485**DCL     10512--ASSIGN  10844>>IF      10979>>ASSIGN  11088>>ASSIGN  11133>>ASSIGN  11141>>ASSIGN
     11149>>ASSIGN  11169>>ASSIGN  11177>>ASSIGN  11197>>ASSIGN  11283>>ASSIGN  11291>>ASSIGN  11299>>ASSIGN
     11325>>CALLBLT 11381<<ASSIGN  11402>>IF      11415<>CALL    11423>>ASSIGN
JIIDX
     10455**DCL     10554<<ASSIGN  10844>>IF      10976<<ASSIGN  10976>>ASSIGN  10977>>IF      10979>>ASSIGN
     11085<<ASSIGN  11085>>ASSIGN  11086>>IF      11088>>ASSIGN  11130<<ASSIGN  11130>>ASSIGN  11131>>IF
     11133>>ASSIGN  11138<<ASSIGN  11138>>ASSIGN  11139>>IF      11141>>ASSIGN  11146<<ASSIGN  11146>>ASSIGN
     11147>>IF      11149>>ASSIGN  11166<<ASSIGN  11166>>ASSIGN  11167>>IF      11169>>ASSIGN  11174<<ASSIGN
     11174>>ASSIGN  11175>>IF      11177>>ASSIGN  11194<<ASSIGN  11194>>ASSIGN  11195>>IF      11197>>ASSIGN
     11280<<ASSIGN  11280>>ASSIGN  11281>>IF      11283>>ASSIGN  11288<<ASSIGN  11288>>ASSIGN  11289>>IF
     11291>>ASSIGN  11296<<ASSIGN  11296>>ASSIGN  11297>>IF      11299>>ASSIGN  11319<<ASSIGN  11319>>ASSIGN
     11320>>IF      11322>>ASSIGN  11325>>CALLBLT 11326<<ASSIGN  11326>>ASSIGN  11403<<ASSIGN  11436<<ASSIGN
JILIM
     10456**DCL     10555<<ASSIGN  10844>>IF      10977>>IF      11086>>IF      11131>>IF      11139>>IF
     11147>>IF      11167>>IF      11175>>IF      11195>>IF      11281>>IF      11289>>IF      11297>>IF
     11320>>IF      11322>>ASSIGN  11390<<ASSIGN  11391>>IF      11391>>IF      11404<<ASSIGN  11423<<ASSIGN
     11424>>IF      11424>>IF      11435<<ASSIGN  11435>>ASSIGN
JIPTR
     10469**DCL     10508<<ASSIGN  10885>>IF      11390>>ASSIGN
K
     10451**DCL     10613<<DOINDEX 10614>>IF      10615>>IF
KEYBUF
     10480**DCL     10690--ASSIGN
KEYBUF.C
     10482**DCL     10764>>ASSIGN  10966<>CALL
KEYBUF.L
     10481**DCL     10964<<ASSIGN
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:132  
L
     10452**DCL     10612<<ASSIGN  10613>>DOINDEX
M
     10453**DCL     10593<<ASSIGN  10615>>IF
M$CLOSE
      5559**DCL-ENT 10826--CALL    10847--CALL    10849--CALL    10886--CALL    10892--CALL
M$FID
      5622**DCL-ENT 10526--CALL
M$JI
     10444**DCL     10508--ASSIGN
M$OPEN
      5559**DCL-ENT 10604--CALL    10661--CALL
M$OUT
     10443**DCL     10507--ASSIGN  10829>>ASSIGN
M$READ
      5560**DCL-ENT 11389--CALL
M$UNFID
      5622**DCL-ENT 10528--CALL
M$WRITE
      5560**DCL-ENT 10773--CALL
NAME_OUT
      9832**DCL      9793--DCLINIT  9917--DCLINIT  9999--DCLINIT 10119--DCLINIT
NAME_OUT.L#
      9832**DCL     10510<<ASSIGN
OPEN_OUT
      9998**DCL     10661<>CALL
OPEN_OUT.ACSVEH_
     10000**DCL     10001--REDEF
OPEN_OUT.ALTKEYS_
     10006**DCL     10007--REDEF   10007--REDEF
OPEN_OUT.HDR_
     10005**DCL     10006--REDEF
OPEN_OUT.IFPARAM_
     10003**DCL     10509<<ASSIGN
OPEN_OUT.TAB_
     10004**DCL     10005--REDEF
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:133  
OPEN_OUT.UHL_
      9998**DCL      9999--REDEF    9999--REDEF
OPEN_OUT.V
     10007**DCL      9998--DCLINIT
OPEN_OUT.V.ACS#
     10018**DCL     10643<<ASSIGN  10645<<ASSIGN
OPEN_OUT.V.ASN#
     10017**DCL      9795--DCLINIT  9919--DCLINIT 10574>>IF      10602>>ASSIGN
OPEN_OUT.V.EXIST#
     10011**DCL     10542<<ASSIGN  10544<<ASSIGN  10546<<ASSIGN  10574>>IF
OPEN_OUT.V.FSN#
     10038**DCL     10038--REDEF   10038--REDEF
OPEN_OUT.V.LOAD#
     10021**DCL     10653<<ASSIGN  10657<<ASSIGN
OPEN_OUT.V.RES#
     10022**DCL      9795--DCLINIT  9919--DCLINIT 10603>>ASSIGN  10647>>IF      10647>>IF
OPEN_OUT.WSN_
     10004**DCL     10004--REDEF   10648<<ASSIGN  10650<<ASSIGN
OPEN_OUT_TEST
     10118**DCL     10604<>CALL
OPEN_OUT_TEST.ACSVEH_
     10120**DCL     10121--REDEF
OPEN_OUT_TEST.ALTKEYS_
     10126**DCL     10127--REDEF   10127--REDEF
OPEN_OUT_TEST.HDR_
     10125**DCL     10126--REDEF
OPEN_OUT_TEST.TAB_
     10124**DCL     10125--REDEF
OPEN_OUT_TEST.UHL_
     10118**DCL     10119--REDEF   10119--REDEF
OPEN_OUT_TEST.V
     10127**DCL     10118--DCLINIT
OPEN_OUT_TEST.V.ASN#
     10137**DCL     10602<<ASSIGN
OPEN_OUT_TEST.V.FSN#
     10158**DCL     10158--REDEF   10158--REDEF
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:134  
OPEN_OUT_TEST.V.RES#
     10142**DCL     10603<<ASSIGN
OPEN_OUT_TEST.WSN_
     10124**DCL     10124--REDEF
OPTS.MAILINIT.CMD
      9583**DCL     10824<<ASSIGN
OPTS.OUT.FID
      9485**DCL     10525--ASSIGN
OPTS.OUT.L
      9479**DCL     10522>>ASSIGN
OPTS.OUT.MISC.DDNF
      9438**DCL     10574>>IF
OPTS.OUT.MISC.HOW
      9462**DCL     10540>>ASSIGN
OPTS.OUT.NODE
      9469**DCL     10530>>ASSIGN  10531>>CALLBLT
OUTBUF
     10474**DCL     10123--DCLINIT 10198--DCLINIT 10199--DCLINIT 10612--ASSIGN  10614--IF      10615--IF
     10615--IF      10762<>CALL    10767--ASSIGN
OUTLIM
     10457**DCL     10765>>IF      10766>>ASSIGN  10965<<ASSIGN  11000<<ASSIGN  11003<<ASSIGN  11022>>ASSIGN
     11265--IMP-SIZ 11278>>DOINDEX 11304>>CALLBLT 11305>>CALLBLT 11318>>DOWHILE 11323>>IF      11324>>ASSIGN
     11325>>CALLBLT
OUTPTR
     10470**DCL     10507<<ASSIGN  10887>>IF      10888>>IF
PASS_OUT
      9862**DCL      9794--DCLINIT 10000--DCLINIT 10120--DCLINIT
RANREL
     10488**DCL     10702--ASSIGN  10714--ASSIGN  10738--ASSIGN  10764<<ASSIGN
READ_JI
     10276**DCL     11389<>CALL
READ_JI.BUF_.BOUND
     10278**DCL     10513<<ASSIGN
READ_JI.BUF_.BUF$
     10279**DCL     10512<<ASSIGN
READ_JI.STATION_
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:135  
     10279**DCL     10280--REDEF
READ_JI.V
     10280**DCL     10276--DCLINIT
READ_JI.V.DVBYTE.REREAD#
     10291**DCL     10291--REDEF
READ_JI.V.INDX#
     10289**DCL     10289--REDEF
SIZ IN PROCEDURE TAMROF
     10928**DCL     10925--PROC    10927--IMP-SIZ 10937>>IF      11001>>IF      11003>>ASSIGN  11014>>CALL
SN_OUT
      9877**DCL      9794--DCLINIT  9918--DCLINIT  9998--DCLINIT 10118--DCLINIT
SN_OUT.NUM#
      9877**DCL     10511<<ASSIGN
TAMROF
     10925**PROC    10557--CALL    10762--CALL
TAMROF_ABORT IN PROCEDURE TAMROF
     11043**LABEL   10954--CALLALT 10978--CALLALT 10989--CALLALT
TAMROF_BAD_SYN IN PROCEDURE TAMROF
     11033**LABEL   10956--GOTO    10966--CALLALT 11014--CALLALT
U1
     10490**DCL     10850--CALL    10894--CALL
U1.C
     10492**DCL     10527--ASSIGN
U1.L
     10491**DCL     10529<<ASSIGN
U2
     10493**DCL     10850--CALL    10894--CALL
U2.C
     10495**DCL     10530<<ASSIGN
U2.L
     10494**DCL     10532<<ASSIGN
UNFID_OUT
      9916**DCL     10528<>CALL
UNFID_OUT.LEN_
      9919**DCL     10514<<ASSIGN
UNFID_OUT.TEXTFID_
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:136  
      9916**DCL     10527<<ASSIGN
UNFID_OUT.V
      9920**DCL      9916--DCLINIT
VLR_OUT
      9891**DCL      9796--DCLINIT
VWI$TRANSI
     10447**DCL-ENT 11415--CALL
VWX$MAIL
     10446**DCL-ENT 10850--CALL    10860--CALL    10872--CALL    10894--CALL
VW_OPTIONS#
      9264**DCL      9270--REDEF    9633--REDEF
VW_SCRAMBLE#
     10498**DCL     11414>>IF
WRITE_OUT
     10197**DCL     10773<>CALL
WRITE_OUT.BUF_.BOUND
     10197**DCL     10766<<ASSIGN  10770<<ASSIGN
WRITE_OUT.BUF_.BUF$
     10199**DCL     10767<<ASSIGN  10771<<ASSIGN
WRITE_OUT.KEY_
     10197**DCL     10678<<ASSIGN  10690<<ASSIGN  10702<<ASSIGN  10714<<ASSIGN  10726<<ASSIGN  10738<<ASSIGN
WRITE_OUT.STATION_
     10199**DCL     10199--REDEF
WRITE_OUT.V
     10200**DCL     10197--DCLINIT
WRITE_OUT.V.DVBYTE
     10205**DCL     10979<<ASSIGN
WRITE_OUT.V.DVBYTE.CONT#
     10208**DCL     10936>>IF      11002<<ASSIGN  11006<<ASSIGN
WRITE_OUT.V.DVBYTE.VFC#
     10206**DCL     10206--REDEF
WRITE_OUT.V.FULL#
     10202**DCL     10681<<ASSIGN  10693<<ASSIGN  10705<<ASSIGN  10717<<ASSIGN  10729<<ASSIGN  10741<<ASSIGN
WRITE_OUT.V.NOTIME#
     10203**DCL     10680<<ASSIGN  10692<<ASSIGN  10704<<ASSIGN  10716<<ASSIGN  10728<<ASSIGN  10740<<ASSIGN
WRITE_OUT.V.ONEWKEY#
PL6.E3A0      #001=VWE$EVOM File=VWE$EVOM.:VMB6TSI                               WED 08/20/97 15:38 Page:137  
     10202**DCL     10679<<ASSIGN  10691<<ASSIGN  10703<<ASSIGN  10715<<ASSIGN  10727<<ASSIGN  10739<<ASSIGN
WSN_OUT
     10175**DCL     10004--DCLINIT 10124--DCLINIT 10648--ASSIGN
