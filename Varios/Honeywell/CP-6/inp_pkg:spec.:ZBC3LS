

10:57 AUG 20 '97 zbm$input$inp_pkg:spec.:ZBC3TSI                           1    
    1      /*  This is the specification of the generic part of the input package.
    2       It can be instantiated by #defining or not #defining
    3       INP_TYPE, INP_VAR, INP_READ_IN_ONE, and INP_NPUSHBACK.
    4       INP_TYPE is the type of the variable INP_VAR, which contains
    5       all values the user wants to save when an InsertFile is done,
    6       and restored when an input stream is continued after a suspend.
    7       For instance, line numbers and position within a line might
    8       be interesting.
    9       Not defining INP_TYPE has the effect that the instantiation is
   10       done without saving and restoring INP_VAR.
   11       Defining INP_READ_IN_ONE has the effect that files will be read
   12       completely with one "read". Only use this if you have lots of
   13       memory. Not defining it causes files to be read in blocks, with
   14       a suitable blocksize.
   15       INP_NPUSHBACK is the number of PushBacks that are guaranteed
   16       to work. Its default value is 1.
   17      */
   18
   19      /* INPUT PRIMITIVES */
   20
   21      #define   LoadChar(dest) ((dest = *_ipp++) || (dest = loadbuf()))
   22      #define   PushBack()  (--_ipp)
   23
   24      /*  EOF may be defined as -1 in most programs but the character -1 may
   25       be expanded to the int -1 which causes troubles at the indexing in
   26       the class or boolean arrays.
   27      */
   28      #define   EOI   (0200)
   29
   30      extern char *_ipp;
   31
   32      /*  int InsertFile(filename, table, result)
   33          char *filename;
   34          char **table;
   35          char **result;
   36
   37       This function suspends input from the current input stream. The next
10:57 AUG 20 '97 zbm$input$inp_pkg:spec.:ZBC3TSI                           2    
   38       characters are obtained from the file indicated by "filename". This file
   39       will be looked for in the directories, mentioned in the null-terminated
   40       list indicated by "table". It returns 1 if it succeeds, 0 if it fails.
   41       "result" will contain the full path if InsertFile returns 1.
   42      */
   43      extern int InsertFile();
   44
   45      /*  int InsertText(text, length)
   46          char *text;
   47          int length;
   48       This funtion suspends input from the current input stream. The next
   49       input characters are obtained from the string indicated by "text",
   50       whose length is indicated by "length".
   51       It returns 1 if it succeeds, 0 if it fails.
   52      */
   53      extern int InsertText();
   54

