VERSION A06

PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8DA$STORAGE_ALLOCATION: PROC (QUAL$);
        7        7
        8        8        /*M* Z8DA$STORAGE_ALLOCATION             */
        9        9
       10       10        /*P*
       11       11               NAME:  Z8DA$STORAGE_ALLOCATION
       12       12             AUTHOR:  Greg Myers
       13       13            PURPOSE:  To calculate storage offsets for all subordinate
       14       14                      levels of 01 structures and the span of arrays.
       15       15        */
       16       16
       17       17        /*D*
       18       18               NAME:  Z8DA$STORAGE_ALLOCATION
       19       19               CALL:  CALL Z8DA$STORAGE_ALLOCATION;
       20       20          INTERFACE:  This routine calls  Z8DC$SIZE_CALC (QUAL$,MAX_BOUND);
       21       21                                          Z8DS$SPAN__CALC (QUAL$->QLT.SON);
       22       22
       23       23              INPUT:  The Qualifier Links Table is accessed.
       24       24             OUTPUT:  These variables are initialized for Z8DC$SIZE_CALC:
       25       25                            O1COM.NEXT_SA
       26       26                            O1COM.NEXT_BYTE
       27       27                            O1COM.NEXT_HALF_BYTE
       28       28                            O1COM.NEXT_CHAR
       29       29                            O1COM.LAST_ITEM_GBCD
       30       30            SCRATCH:  O1COM.NEXT_SA
       31       31                      O1COM.NEXT_BYTE
       32       32                      O1COM.NEXT_HALF_BYTE
       33       33                      O1COM.NEXT_CHAR
       34       34                      O1COM.LAST_ITEM_GBCD
       35       35
       36       36        DESCRIPTION:  This procedure is a loop that steps through the 01's
       37       37                      and 77's by using the QLT.BROTHER pointer.  If the item
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:2    
       38       38                      is an 01 and has a son, Z8DC$SIZE_CALC and Z8DS$SPAN__CALC
       39       39                      are called to calculate the offsets and spans within each
       40       40                      structure.  If the item is the User Work Area for DML the
       41       41                      offsets and spans are already set and Z8DC$SIZE_CALC and
       42       42                      Z8DS$SPAN__CALC are not called.
       43       43        */
       44       44        %EJECT ;
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:3    
       45       45
       46       46
       47       47        %EQU PHASE = 1 ;
       48       48        %INCLUDE Z8A_DEFC ;
       49      116        %INCLUDE Z8A_SUPP_MAC ;
       50     2516        %INCLUDE Z8A_QLT ;
       51     2622        %INCLUDE Z8A_ST ;
       52     6281        %INCLUDE Z8A_DNT;
       53     6502        %INCLUDE Z8A_TYPES;
       54     6676        %INCLUDE Z8A_LTS ;
       55     8753        %INCLUDE Z8A_COMCOM ;
       56     9403        %INCLUDE Z8A_ERR_NUMS;
       57    10167        %INCLUDE Z8E_MACROS ;
       58    10842        %INCLUDE Z8E_STACKS;
       59    13108        %INCLUDE Z8E_O1COM ;
       60    13869
       61    13870        /*B*
       62    13871               QUAL$ -- This pointer is used to step through the QLT accessing
       63    13872                        the 01's and 77's.
       64    13873        */
       65    13874
       66    13875        /*B*
       67    13876            MAX_BOUND -- In Z8DA$STORAGE_ALLOCATION it is used as a dummy variable
       68    13877                         to call Z8DC$SIZE_CALC
       69    13878        */
       70    13879
       71    13880    1   DCL   QUAL$          PTR ;
       72    13881    1   DCL   MAX_BOUND      UBIN WORD STATIC ;
       73    13882    1   DCL   ST$$           PTR ;
       74    13883
       75    13884    1   DCL   Z8DO$QUALIFY_TERMINAL_NO_ERROR ENTRY (2) ALTRET ;
       76    13885    1   DCL   Z8DC$SIZE_CALC ENTRY (2) ; /* Size Calculation */
       77    13886    1   DCL   Z8DQ$QUALIFY_DEPENDING  ENTRY (1);
       78    13887    1   DCL   Z8DS$SPAN__CALC ENTRY (1) ; /* Span Calculation */
       79    13888    1   DCL   Z8DD$DOCUMENT  ENTRY ;
       80    13889    1   DCL   Z8ED$DISPOSE_ABSSYN_TREE ENTRY (1);
       81    13890    1   DCL   Z8DQ$QUALIFY_KEYS       ENTRY;
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:4    
       82    13891    1   DCL   Z8AE$ERROR              ENTRY (12);
       83    13892    1   DCL   Z8DQ$GROUP_VALUE        ENTRY;
       84    13893    1   DCL   Z8DI$IO_WRAPUP          ENTRY;
       85    13894    1   DCL   Z8DQ$BLOCK              ENTRY;
       86    13895    1   DCL   DUMMY          EPTR STATIC INIT (ENTADDR(Z8DD$DOCUMENT)) ;
             13895            /* Dummy variable to get Z8DD in link */
       87    13896
       88    13897        %EJECT;
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:5    
       89    13898    1   VERIFY_UNIQUE_INDEXES: PROC;
       90    13899
       91    13900    2        DCL QLT$$         PTR;
       92    13901    2        DCL ST$$          PTR;
       93    13902
       94    13903
       95    13904    2        QLT$$ = O1COM.INDEX_HEAD$;
       96    13905
       97    13906    3        DO WHILE (QLT$$ ~= ADDR(NIL));
       98    13907    3          IF  QLT$$ -> QLT.ST$ -> ST.TYPE = %TYX
       99    13908    3          AND QLT$$ -> QLT.DNT$ -> DNT.ST$ -> ST.NEXT ~= ADDR(NIL) THEN
      100    13909    4            DO;
      101    13910    4              ST$$ = QLT$$ -> QLT.DNT$ -> DNT.ST$ -> ST.NEXT;
      102    13911
      103    13912    5              DO WHILE (ST$$ ~= ADDR(NIL));
      104    13913    5              IF  QLT$$ -> QLT.DNT$ -> DNT.ST$ -> SCALAR.PROC$ = ST$$ -> SCALAR.PROC$
      105    13914    5              AND NOT QLT$$ -> QLT.DNT$ -> DNT.B.ERROR_VARIABLE THEN
      106    13915    6                DO;
      107    13916    6                  CALL Z8AE$ERROR (%E$INDEX_MUST_BE_UNIQUE,
      108    13917    6                                   BINBIT (QLT$$ -> QLT.ST$ -> ST.LINE_NO, 36),
      109    13918    6                                   0);
      110    13919    6                  QLT$$ -> QLT.DNT$ -> DNT.B.ERROR_VARIABLE = TRUE;
      111    13920    6                END; /* Then Do */
      112    13921
      113    13922    5              ST$$ = ST$$ -> ST.NEXT;
      114    13923    5            END; /* Do While ST$$ */
      115    13924    4          END; /* If Then Do */
      116    13925
      117    13926    3          QLT$$ = QLT$$ -> QLT.BROTHER -> QLT.BROTHER;
      118    13927    3        END; /* While */
      119    13928
      120    13929    2   END VERIFY_UNIQUE_INDEXES;
      121    13930        %EJECT;
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:6    
      122    13931    1          IF O1COM.OCCURS_DEPENDING$ ~= ADDR(NIL) THEN
      123    13932    1            CALL Z8DQ$QUALIFY_DEPENDING (O1COM.OCCURS_DEPENDING$);
      124    13933
      125    13934    1          IF O1COM.COLLATING_SEQ$ ~= ADDR(NIL) THEN
      126    13935    2            DO;
      127    13936    2   CHECK_COLLATING_SEQ:
      128    13937    3                DO;
      129    13938    3                  CALL Z8DO$QUALIFY_TERMINAL_NO_ERROR (O1COM.COLLATING_SEQ$, ST$$)
      130    13939    4                    WHENRETURN DO; /* It is defined in containing program */
      131    13940    4                      IF ST$$ -> ST.ID = %ALPHABET THEN
      132    13941    5                        DO;
      133    13942    5                          O1COM.CURRENT_PROC$ -> PROC_.PROC_SUPP$ -> PROC_SUPP.
             13942                                   COLLATING_SEQ$ = ST$$;
      134    13943    5                          CALL Z8ED$DISPOSE_ABSSYN_TREE (O1COM.COLLATING_SEQ$);
      135    13944    5                          EXIT CHECK_COLLATING_SEQ;
      136    13945    5                        END;
      137    13946    4                    END;
      138    13947                       %CONDITIONAL_ERROR (@LX_ITEM$ = O1COM.COLLATING_SEQ$,
      139    13948                                           @ERROR#   = %E$ALPHABET_NOT_DEFINED,
      140    13949                                           @PLUG1    =
             13949                                               O1COM.COLLATING_SEQ$ -> LX_TERMINAL.DNT$,
      141    13950                                           @LINE     =
             13950                                               O1COM.COLLATING_SEQ$ -> LX_TERMINAL.LINE,
      142    13951                                           @COLUMN   =
             13951                                               O1COM.COLLATING_SEQ$ -> LX_TERMINAL.COLUMN);
      143    13981    3                END; /* CHECK_COLLATING_SEQ */
      144    13982
      145    13983    2              CALL Z8ED$DISPOSE_ABSSYN_TREE (O1COM.COLLATING_SEQ$);
      146    13984    2            END;
      147    13985
      148    13986    1          IF O1COM.INDEX_HEAD$ ~= ADDR(NIL) THEN
      149    13987    2            DO;
      150    13988    2              CALL VERIFY_UNIQUE_INDEXES ;
      151    13989
      152    13990    2              IF COMCOM.PREV_QLT$ ~= ADDR(NIL) THEN
      153    13991    2                COMCOM.PREV_QLT$ -> QLT.BROTHER = O1COM.INDEX_HEAD$;
      154    13992
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:7    
      155    13993    2              COMCOM.PREV_QLT$ = O1COM.INDEX_TAIL$;
      156    13994
      157    13995    2              O1COM.INDEX_TAIL$ = ADDR(NIL);
      158    13996    2              O1COM.INDEX_HEAD$ = ADDR(NIL);
      159    13997    2            END;
      160    13998
      161    13999    2          DO WHILE (QUAL$ ~= ADDR(NIL)) ;
      162    14000
      163    14001
      164    14002    2            IF ( QUAL$->QLT.SON = ADDR(NIL) )      OR
      165    14003    2                      ( QUAL$->QLT.ST$->SCALAR.B.DML_UWA = %TRUE ) THEN
      166    14004    2              ; /*PHASE 2 WILL DO STORAGE ALLOCATION OF "01"S */
      167    14005    2            ELSE  /* A son exists. */
      168    14006    3              DO ;
      169    14007    3                O1COM.NEXT_SA = 0 ;
      170    14008    3                O1COM.NEXT_BYTE = 0 ;
      171    14009    3                O1COM.NEXT_HALF_BYTE = 0 ;
      172    14010    3                O1COM.NEXT_CHAR = 0 ;
      173    14011    3                O1COM.LAST_ITEM_GBCD = FALSE ;
      174    14012    3                CALL Z8DC$SIZE_CALC (QUAL$, MAX_BOUND) ;
      175    14013    3                CALL Z8DS$SPAN__CALC (QUAL$->QLT.SON) ;
      176    14014    3              END ;
      177    14015
      178    14016    2            QUAL$ = QUAL$->QLT.BROTHER ;
      179    14017
      180    14018    2          END ;
      181    14019
      182    14020    1          IF O1COM.KEYS$ ~= ADDR(NIL) THEN
      183    14021    1            CALL Z8DQ$QUALIFY_KEYS;
      184    14022
      185    14023    1          IF O1COM.VALUE$ ~= ADDR(NIL) THEN
      186    14024    1            CALL Z8DQ$GROUP_VALUE;
      187    14025
      188    14026    1          IF COMCOM.FILE_LTS_CHAIN$ ~= ADDR(NIL) THEN
      189    14027    1            CALL Z8DI$IO_WRAPUP;
      190    14028
      191    14029    1          IF O1COM.BLOCK$ ~= ADDR(NIL) THEN
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:8    
      192    14030    1            CALL Z8DQ$BLOCK;
      193    14031
      194    14032    1   END Z8DA$STORAGE_ALLOCATION ;

PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:9    
--  Include file information  --

   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_NEW_ILL.:Z8A6TOU  is referenced.
   Z8E_MACROS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DA$STORAGE_ALLOCATION.

   Procedure Z8DA$STORAGE_ALLOCATION requires 195 words for executable code.
   Procedure Z8DA$STORAGE_ALLOCATION requires 16 words of local(AUTO) storage.

    No errors detected in file Z8DA.:Z8A6TSI    .

PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:10   

 Object Unit name= Z8DA$STORAGE_ALLOCATION                    File name= Z8DA.:Z8A6TOU
 UTS= AUG 09 '97 11:00:57.68 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  QLT$
    2  LblCom even  none     1      1  PREV_01_QLT$
    3  LblCom even  none     5      5  QLT_
    4  LblCom even  none     1      1  ST$
    5  LblCom even  none     5      5  ST_
    6  LblCom even  none     1      1  DNT$
    7  LblCom even  none     5      5  DNT_
    8  LblCom even  none     1      1  DNT_BUCKET_NUMBER
    9  LblCom even  none     1      1  DNT_OF_1$
   10  LblCom even  none     1      1  LTS$
   11  LblCom even  none     5      5  LTS_
   12  LblCom even  none    90    132  LEX_SYMBOL
   13  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
   14  LblCom even  none    90    132  TEMP_LEX_SYMBOL
   15  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
   16   Data  even  none     2      2  Z8DA$STORAGE_ALLOCATION
   17   Proc  even  none   195    303  Z8DA$STORAGE_ALLOCATION
   18  RoData even  none    15     17  Z8DA$STORAGE_ALLOCATION

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes            yes      Std        1  Z8DA$STORAGE_ALLOCATION
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:11   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 Z8DD$DOCUMENT
 yes     yes           Std       2 Z8DO$QUALIFY_TERMINAL_NO_ERROR
         yes           Std      12 Z8AE$ERROR
         yes           Std       0 Z8DI$IO_WRAPUP
         yes           Std       1 Z8DS$SPAN__CALC
         yes           Std       2 Z8DC$SIZE_CALC
         yes           Std       0 Z8DQ$QUALIFY_KEYS
         yes           Std       1 Z8DQ$QUALIFY_DEPENDING
         yes           Std       1 Z8ED$DISPOSE_ABSSYN_TREE
         yes           Std       0 Z8DQ$BLOCK
         yes           Std       0 Z8DQ$GROUP_VALUE
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    LTS_STEP                              COMCOM                                O1COM
     HIER_STK_PTR                          HIER_STK                              PAGE_FORMAT
     REP_STK_PTR                           REP_STK

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:12   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8DA$STORAGE_ALLOCATION: PROC (QUAL$);

      6 17 000000   000000 700200 xent  Z8DA$STORAG* TSX0  ! X66_AUTO_1
        17 000001   000020 000001                    ZERO    16,1
        17 000002   000073 710000 17                 TRA     s:13931

        7        7
        8        8        /*M* Z8DA$STORAGE_ALLOCATION             */
        9        9
       10       10        /*P*
       11       11               NAME:  Z8DA$STORAGE_ALLOCATION
       12       12             AUTHOR:  Greg Myers
       13       13            PURPOSE:  To calculate storage offsets for all subordinate
       14       14                      levels of 01 structures and the span of arrays.
       15       15        */
       16       16
       17       17        /*D*
       18       18               NAME:  Z8DA$STORAGE_ALLOCATION
       19       19               CALL:  CALL Z8DA$STORAGE_ALLOCATION;
       20       20          INTERFACE:  This routine calls  Z8DC$SIZE_CALC (QUAL$,MAX_BOUND);
       21       21                                          Z8DS$SPAN__CALC (QUAL$->QLT.SON);
       22       22
       23       23              INPUT:  The Qualifier Links Table is accessed.
       24       24             OUTPUT:  These variables are initialized for Z8DC$SIZE_CALC:
       25       25                            O1COM.NEXT_SA
       26       26                            O1COM.NEXT_BYTE
       27       27                            O1COM.NEXT_HALF_BYTE
       28       28                            O1COM.NEXT_CHAR
       29       29                            O1COM.LAST_ITEM_GBCD
       30       30            SCRATCH:  O1COM.NEXT_SA
       31       31                      O1COM.NEXT_BYTE
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:13   
       32       32                      O1COM.NEXT_HALF_BYTE
       33       33                      O1COM.NEXT_CHAR
       34       34                      O1COM.LAST_ITEM_GBCD
       35       35
       36       36        DESCRIPTION:  This procedure is a loop that steps through the 01's
       37       37                      and 77's by using the QLT.BROTHER pointer.  If the item
       38       38                      is an 01 and has a son, Z8DC$SIZE_CALC and Z8DS$SPAN__CALC
       39       39                      are called to calculate the offsets and spans within each
       40       40                      structure.  If the item is the User Work Area for DML the
       41       41                      offsets and spans are already set and Z8DC$SIZE_CALC and
       42       42                      Z8DS$SPAN__CALC are not called.
       43       43        */
       44       44        %EJECT ;
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:14   
       45       45
       46       46
       47       47        %EQU PHASE = 1 ;
       48       48        %INCLUDE Z8A_DEFC ;
       49      116        %INCLUDE Z8A_SUPP_MAC ;
       50     2516        %INCLUDE Z8A_QLT ;
       51     2622        %INCLUDE Z8A_ST ;
       52     6281        %INCLUDE Z8A_DNT;
       53     6502        %INCLUDE Z8A_TYPES;
       54     6676        %INCLUDE Z8A_LTS ;
       55     8753        %INCLUDE Z8A_COMCOM ;
       56     9403        %INCLUDE Z8A_ERR_NUMS;
       57    10167        %INCLUDE Z8E_MACROS ;
       58    10842        %INCLUDE Z8E_STACKS;
       59    13108        %INCLUDE Z8E_O1COM ;
       60    13869
       61    13870        /*B*
       62    13871               QUAL$ -- This pointer is used to step through the QLT accessing
       63    13872                        the 01's and 77's.
       64    13873        */
       65    13874
       66    13875        /*B*
       67    13876            MAX_BOUND -- In Z8DA$STORAGE_ALLOCATION it is used as a dummy variable
       68    13877                         to call Z8DC$SIZE_CALC
       69    13878        */
       70    13879
       71    13880    1   DCL   QUAL$          PTR ;
       72    13881    1   DCL   MAX_BOUND      UBIN WORD STATIC ;
       73    13882    1   DCL   ST$$           PTR ;
       74    13883
       75    13884    1   DCL   Z8DO$QUALIFY_TERMINAL_NO_ERROR ENTRY (2) ALTRET ;
       76    13885    1   DCL   Z8DC$SIZE_CALC ENTRY (2) ; /* Size Calculation */
       77    13886    1   DCL   Z8DQ$QUALIFY_DEPENDING  ENTRY (1);
       78    13887    1   DCL   Z8DS$SPAN__CALC ENTRY (1) ; /* Span Calculation */
       79    13888    1   DCL   Z8DD$DOCUMENT  ENTRY ;
       80    13889    1   DCL   Z8ED$DISPOSE_ABSSYN_TREE ENTRY (1);
       81    13890    1   DCL   Z8DQ$QUALIFY_KEYS       ENTRY;
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:15   
       82    13891    1   DCL   Z8AE$ERROR              ENTRY (12);
       83    13892    1   DCL   Z8DQ$GROUP_VALUE        ENTRY;
       84    13893    1   DCL   Z8DI$IO_WRAPUP          ENTRY;
       85    13894    1   DCL   Z8DQ$BLOCK              ENTRY;
       86    13895    1   DCL   DUMMY          EPTR STATIC INIT (ENTADDR(Z8DD$DOCUMENT)) ;
             13895            /* Dummy variable to get Z8DD in link */
       87    13896
       88    13897        %EJECT;
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:16   
       89    13898    1   VERIFY_UNIQUE_INDEXES: PROC;

  13898 17 000003   200006 741300       VERIFY_UNIQ* STX1  ! ST$$+2,,AUTO

       90    13899
       91    13900    2        DCL QLT$$         PTR;
       92    13901    2        DCL ST$$          PTR;
       93    13902
       94    13903
       95    13904    2        QLT$$ = O1COM.INDEX_HEAD$;

  13904 17 000004   000036 236000 xsym               LDQ     O1COM+30
        17 000005   200007 756100                    STQ     QLT$$,,AUTO

       96    13905
       97    13906    3        DO WHILE (QLT$$ ~= ADDR(NIL));

  13906 17 000006   000067 710000 17                 TRA     s:13927

       98    13907    3          IF  QLT$$ -> QLT.ST$ -> ST.TYPE = %TYX

  13907 17 000007   200007 470500                    LDP0    QLT$$,,AUTO
        17 000010   000004 471500                    LDP1    4,,PR0
        17 000011   100002 220100                    LDX0    2,,PR1
        17 000012   000011 100003                    CMPX0   9,DU
        17 000013   000064 601000 17                 TNZ     s:13926
        17 000014   000005 473500                    LDP3    5,,PR0
        17 000015   300001 474500                    LDP4    1,,PR3
        17 000016   400004 236100                    LDQ     4,,PR4
        17 000017   000000 116000 18                 CMPQ    0
        17 000020   000064 600000 17                 TZE     s:13926

       99    13908    3          AND QLT$$ -> QLT.DNT$ -> DNT.ST$ -> ST.NEXT ~= ADDR(NIL) THEN
      100    13909    4            DO;

      101    13910    4              ST$$ = QLT$$ -> QLT.DNT$ -> DNT.ST$ -> ST.NEXT;

PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:17   
  13910 17 000021   200010 756100                    STQ     ST$$,,AUTO

      102    13911
      103    13912    5              DO WHILE (ST$$ ~= ADDR(NIL));

  13912 17 000022   000062 710000 17                 TRA     s:13923

      104    13913    5              IF  QLT$$ -> QLT.DNT$ -> DNT.ST$ -> SCALAR.PROC$ = ST$$ -> SCALAR.PROC$

  13913 17 000023   200007 470500                    LDP0    QLT$$,,AUTO
        17 000024   000005 471500                    LDP1    5,,PR0
        17 000025   100001 473500                    LDP3    1,,PR1
        17 000026   200010 474500                    LDP4    ST$$,,AUTO
        17 000027   300011 236100                    LDQ     9,,PR3
        17 000030   400011 116100                    CMPQ    9,,PR4
        17 000031   000057 601000 17                 TNZ     s:13922
        17 000032   100003 236100                    LDQ     3,,PR1
        17 000033   000100 316003                    CANQ    64,DU
        17 000034   000057 601000 17                 TNZ     s:13922

      105    13914    5              AND NOT QLT$$ -> QLT.DNT$ -> DNT.B.ERROR_VARIABLE THEN
      106    13915    6                DO;

      107    13916    6                  CALL Z8AE$ERROR (%E$INDEX_MUST_BE_UNIQUE,

  13916 17 000035   000004 475500                    LDP5    4,,PR0
        17 000036   500002 236100                    LDQ     2,,PR5
        17 000037   777777 376007                    ANQ     -1,DL
        17 000040   200012 756100                    STQ     ST$$+2,,AUTO
        17 000041   000004 236000 18                 LDQ     4
        17 000042   200016 756100                    STQ     ST$$+6,,AUTO
        17 000043   200012 631500                    EPPR1   ST$$+2,,AUTO
        17 000044   200015 451500                    STP1    ST$$+5,,AUTO
        17 000045   000005 236000 18                 LDQ     5
        17 000046   200014 756100                    STQ     ST$$+4,,AUTO
        17 000047   200014 630500                    EPPR0   ST$$+4,,AUTO
        17 000050   000001 631400 18                 EPPR1   1
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:18   
        17 000051   000000 701000 xent               TSX1    Z8AE$ERROR
        17 000052   000000 011000                    NOP     0

      108    13917    6                                   BINBIT (QLT$$ -> QLT.ST$ -> ST.LINE_NO, 36),
      109    13918    6                                   0);
      110    13919    6                  QLT$$ -> QLT.DNT$ -> DNT.B.ERROR_VARIABLE = TRUE;

  13919 17 000053   200007 470500                    LDP0    QLT$$,,AUTO
        17 000054   000005 471500                    LDP1    5,,PR0
        17 000055   000100 236003                    LDQ     64,DU
        17 000056   100003 256100                    ORSQ    3,,PR1

      111    13920    6                END; /* Then Do */

      112    13921
      113    13922    5              ST$$ = ST$$ -> ST.NEXT;

  13922 17 000057   200010 471500                    LDP1    ST$$,,AUTO
        17 000060   100004 236100                    LDQ     4,,PR1
        17 000061   200010 756100                    STQ     ST$$,,AUTO

      114    13923    5            END; /* Do While ST$$ */

  13923 17 000062   000000 116000 18                 CMPQ    0
        17 000063   000023 601000 17                 TNZ     s:13913

      115    13924    4          END; /* If Then Do */

      116    13925
      117    13926    3          QLT$$ = QLT$$ -> QLT.BROTHER -> QLT.BROTHER;

  13926 17 000064   000002 471500                    LDP1    2,,PR0
        17 000065   100002 236100                    LDQ     2,,PR1
        17 000066   200007 756100                    STQ     QLT$$,,AUTO

      118    13927    3        END; /* While */

PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:19   
  13927 17 000067   000000 116000 18                 CMPQ    0
        17 000070   000007 601000 17                 TNZ     s:13907

      119    13928
      120    13929    2   END VERIFY_UNIQUE_INDEXES;

  13929 17 000071   200006 221300                    LDX1  ! ST$$+2,,AUTO
        17 000072   000001 702211                    TSX2  ! 1,X1

      121    13930        %EJECT;
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:20   
      122    13931    1          IF O1COM.OCCURS_DEPENDING$ ~= ADDR(NIL) THEN

  13931 17 000073   000034 236000 xsym               LDQ     O1COM+28
        17 000074   000000 116000 18                 CMPQ    0
        17 000075   000102 600000 17                 TZE     s:13934

      123    13932    1            CALL Z8DQ$QUALIFY_DEPENDING (O1COM.OCCURS_DEPENDING$);

  13932 17 000076   000007 630400 18                 EPPR0   7
        17 000077   000006 631400 18                 EPPR1   6
        17 000100   000000 701000 xent               TSX1    Z8DQ$QUALIFY_DEPENDING
        17 000101   000000 011000                    NOP     0

      124    13933
      125    13934    1          IF O1COM.COLLATING_SEQ$ ~= ADDR(NIL) THEN

  13934 17 000102   000044 236000 xsym               LDQ     O1COM+36
        17 000103   000000 116000 18                 CMPQ    0
        17 000104   000163 600000 17                 TZE     s:13986

      126    13935    2            DO;

      127    13936    2   CHECK_COLLATING_SEQ:
      128    13937    3                DO;

  13937 17 000105                       CHECK_COLLA* null
      129    13938    3                  CALL Z8DO$QUALIFY_TERMINAL_NO_ERROR (O1COM.COLLATING_SEQ$, ST$$)

  13938 17 000105   200004 630500                    EPPR0   ST$$,,AUTO
        17 000106   200013 450500                    STP0    ST$$+3,,AUTO
        17 000107   000011 236000 18                 LDQ     9
        17 000110   200012 756100                    STQ     ST$$+2,,AUTO
        17 000111   200012 630500                    EPPR0   ST$$+2,,AUTO
        17 000112   000010 631400 18                 EPPR1   8
        17 000113   000000 701000 xent               TSX1    Z8DO$QUALIFY_TERMINAL_NO_ERROR
        17 000114   000132 702000 17                 TSX2    s:13961

PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:21   
      130    13939    4                    WHENRETURN DO; /* It is defined in containing program */

      131    13940    4                      IF ST$$ -> ST.ID = %ALPHABET THEN

  13940 17 000115   200004 470500                    LDP0    ST$$,,AUTO
        17 000116   000000 220100                    LDX0    0,,PR0
        17 000117   000763 100003                    CMPX0   499,DU
        17 000120   000132 601000 17                 TNZ     s:13961

      132    13941    5                        DO;

      133    13942    5                          O1COM.CURRENT_PROC$ -> PROC_.PROC_SUPP$ -> PROC_SUPP.
             13942                                   COLLATING_SEQ$ = ST$$;

  13942 17 000121   000057 471400 xsym               LDP1    O1COM+47
        17 000122   100001 473500                    LDP3    1,,PR1
        17 000123   200004 236100                    LDQ     ST$$,,AUTO
        17 000124   300002 756100                    STQ     2,,PR3

      134    13943    5                          CALL Z8ED$DISPOSE_ABSSYN_TREE (O1COM.COLLATING_SEQ$);

  13943 17 000125   000011 630400 18                 EPPR0   9
        17 000126   000006 631400 18                 EPPR1   6
        17 000127   000000 701000 xent               TSX1    Z8ED$DISPOSE_ABSSYN_TREE
        17 000130   000000 011000                    NOP     0

      135    13944    5                          EXIT CHECK_COLLATING_SEQ;

  13944 17 000131   000157 710000 17                 TRA     s:13983

      136    13945    5                        END;
      137    13946    4                    END;
      138    13947                       %CONDITIONAL_ERROR (@LX_ITEM$ = O1COM.COLLATING_SEQ$,
      139    13948                                           @ERROR#   = %E$ALPHABET_NOT_DEFINED,
      140    13949                                           @PLUG1    =
             13949                                               O1COM.COLLATING_SEQ$ -> LX_TERMINAL.DNT$,
      141    13950                                           @LINE     =
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:22   
             13950                                               O1COM.COLLATING_SEQ$ -> LX_TERMINAL.LINE,
      142    13951                                           @COLUMN   =
             13951                                               O1COM.COLLATING_SEQ$ -> LX_TERMINAL.COLUMN);

  13961 17 000132   000044 470400 xsym               LDP0    O1COM+36
        17 000133   000000 236100                    LDQ     0,,PR0
        17 000134   400000 316007                    CANQ    -131072,DL
        17 000135   000157 601000 17                 TNZ     s:13983

  13963 17 000136   000044 236000 xsym               LDQ     O1COM+36
        17 000137   000002 036003                    ADLQ    2,DU
        17 000140   200015 756100                    STQ     ST$$+5,,AUTO
        17 000141   000044 236000 xsym               LDQ     O1COM+36
        17 000142   000006 036003                    ADLQ    6,DU
        17 000143   200014 756100                    STQ     ST$$+4,,AUTO
        17 000144   000044 236000 xsym               LDQ     O1COM+36
        17 000145   000005 036003                    ADLQ    5,DU
        17 000146   000014 235000 18                 LDA     12
        17 000147   200012 757100                    STAQ    ST$$+2,,AUTO
        17 000150   200012 630500                    EPPR0   ST$$+2,,AUTO
        17 000151   000012 631400 18                 EPPR1   10
        17 000152   000000 701000 xent               TSX1    Z8AE$ERROR
        17 000153   000000 011000                    NOP     0

  13972 17 000154   000044 470400 xsym               LDP0    O1COM+36
        17 000155   400000 236007                    LDQ     -131072,DL
        17 000156   000000 256100                    ORSQ    0,,PR0

      143    13981    3                END; /* CHECK_COLLATING_SEQ */

      144    13982
      145    13983    2              CALL Z8ED$DISPOSE_ABSSYN_TREE (O1COM.COLLATING_SEQ$);

  13983 17 000157   000011 630400 18                 EPPR0   9
        17 000160   000006 631400 18                 EPPR1   6
        17 000161   000000 701000 xent               TSX1    Z8ED$DISPOSE_ABSSYN_TREE
        17 000162   000000 011000                    NOP     0
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:23   

      146    13984    2            END;

      147    13985
      148    13986    1          IF O1COM.INDEX_HEAD$ ~= ADDR(NIL) THEN

  13986 17 000163   000036 236000 xsym               LDQ     O1COM+30
        17 000164   000000 116000 18                 CMPQ    0
        17 000165   000203 600000 17                 TZE     s:13999

      149    13987    2            DO;

      150    13988    2              CALL VERIFY_UNIQUE_INDEXES ;

  13988 17 000166   000003 701000 17                 TSX1    VERIFY_UNIQUE_INDEXES
        17 000167   000000 011000                    NOP     0

      151    13989
      152    13990    2              IF COMCOM.PREV_QLT$ ~= ADDR(NIL) THEN

  13990 17 000170   000424 236000 xsym               LDQ     COMCOM+276
        17 000171   000000 116000 18                 CMPQ    0
        17 000172   000176 600000 17                 TZE     s:13993

      153    13991    2                COMCOM.PREV_QLT$ -> QLT.BROTHER = O1COM.INDEX_HEAD$;

  13991 17 000173   000036 236000 xsym               LDQ     O1COM+30
        17 000174   000424 470400 xsym               LDP0    COMCOM+276
        17 000175   000002 756100                    STQ     2,,PR0

      154    13992
      155    13993    2              COMCOM.PREV_QLT$ = O1COM.INDEX_TAIL$;

  13993 17 000176   000037 236000 xsym               LDQ     O1COM+31
        17 000177   000424 756000 xsym               STQ     COMCOM+276

      156    13994
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:24   
      157    13995    2              O1COM.INDEX_TAIL$ = ADDR(NIL);

  13995 17 000200   000000 236000 18                 LDQ     0
        17 000201   000037 756000 xsym               STQ     O1COM+31

      158    13996    2              O1COM.INDEX_HEAD$ = ADDR(NIL);

  13996 17 000202   000036 756000 xsym               STQ     O1COM+30

      159    13997    2            END;

      160    13998
      161    13999    2          DO WHILE (QUAL$ ~= ADDR(NIL)) ;

  13999 17 000203   000246 710000 17                 TRA     s:14018

      162    14000
      163    14001
      164    14002    2            IF ( QUAL$->QLT.SON = ADDR(NIL) )      OR

  14002 17 000204   200003 470500                    LDP0    @QUAL$,,AUTO
        17 000205   000000 471500                    LDP1    0,,PR0
        17 000206   100003 236100                    LDQ     3,,PR1
        17 000207   000000 116000 18                 CMPQ    0
        17 000210   000242 600000 17                 TZE     s:14016
        17 000211   100004 473500                    LDP3    4,,PR1
        17 000212   300003 236100                    LDQ     3,,PR3
        17 000213   200000 316007                    CANQ    65536,DL
        17 000214   000242 601000 17                 TNZ     s:14016

      165    14003    2                      ( QUAL$->QLT.ST$->SCALAR.B.DML_UWA = %TRUE ) THEN
      166    14004    2              ; /*PHASE 2 WILL DO STORAGE ALLOCATION OF "01"S */
      167    14005    2            ELSE  /* A son exists. */
      168    14006    3              DO ;

      169    14007    3                O1COM.NEXT_SA = 0 ;

PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:25   
  14007 17 000215   000001 450000 xsym               STZ     O1COM+1

      170    14008    3                O1COM.NEXT_BYTE = 0 ;

  14008 17 000216   000002 450000 xsym               STZ     O1COM+2

      171    14009    3                O1COM.NEXT_HALF_BYTE = 0 ;

  14009 17 000217   000003 450000 xsym               STZ     O1COM+3

      172    14010    3                O1COM.NEXT_CHAR = 0 ;

  14010 17 000220   001336 450000 xsym               STZ     O1COM+734

      173    14011    3                O1COM.LAST_ITEM_GBCD = FALSE ;

  14011 17 000221   000015 236000 18                 LDQ     13
        17 000222   001337 356000 xsym               ANSQ    O1COM+735

      174    14012    3                CALL Z8DC$SIZE_CALC (QUAL$, MAX_BOUND) ;

  14012 17 000223   000016 236000 18                 LDQ     14
        17 000224   200003 235100                    LDA     @QUAL$,,AUTO
        17 000225   200012 757100                    STAQ    ST$$+2,,AUTO
        17 000226   200012 630500                    EPPR0   ST$$+2,,AUTO
        17 000227   000010 631400 18                 EPPR1   8
        17 000230   000000 701000 xent               TSX1    Z8DC$SIZE_CALC
        17 000231   000000 011000                    NOP     0

      175    14013    3                CALL Z8DS$SPAN__CALC (QUAL$->QLT.SON) ;

  14013 17 000232   200003 470500                    LDP0    @QUAL$,,AUTO
        17 000233   000000 471500                    LDP1    0,,PR0
        17 000234   100003 633500                    EPPR3   3,,PR1
        17 000235   200012 453500                    STP3    ST$$+2,,AUTO
        17 000236   200012 630500                    EPPR0   ST$$+2,,AUTO
        17 000237   000006 631400 18                 EPPR1   6
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:26   
        17 000240   000000 701000 xent               TSX1    Z8DS$SPAN__CALC
        17 000241   000000 011000                    NOP     0

      176    14014    3              END ;

      177    14015
      178    14016    2            QUAL$ = QUAL$->QLT.BROTHER ;

  14016 17 000242   200003 470500                    LDP0    @QUAL$,,AUTO
        17 000243   000000 471500                    LDP1    0,,PR0
        17 000244   100002 236100                    LDQ     2,,PR1
        17 000245   000000 756100                    STQ     0,,PR0

      179    14017
      180    14018    2          END ;

  14018 17 000246   200003 470500                    LDP0    @QUAL$,,AUTO
        17 000247   000000 236100                    LDQ     0,,PR0
        17 000250   000000 116000 18                 CMPQ    0
        17 000251   000204 601000 17                 TNZ     s:14002

      181    14019
      182    14020    1          IF O1COM.KEYS$ ~= ADDR(NIL) THEN

  14020 17 000252   000040 236000 xsym               LDQ     O1COM+32
        17 000253   000000 116000 18                 CMPQ    0
        17 000254   000260 600000 17                 TZE     s:14023

      183    14021    1            CALL Z8DQ$QUALIFY_KEYS;

  14021 17 000255   000003 631400 18                 EPPR1   3
        17 000256   000000 701000 xent               TSX1    Z8DQ$QUALIFY_KEYS
        17 000257   000000 011000                    NOP     0

      184    14022
      185    14023    1          IF O1COM.VALUE$ ~= ADDR(NIL) THEN

PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:27   
  14023 17 000260   000043 236000 xsym               LDQ     O1COM+35
        17 000261   000000 116000 18                 CMPQ    0
        17 000262   000266 600000 17                 TZE     s:14026

      186    14024    1            CALL Z8DQ$GROUP_VALUE;

  14024 17 000263   000003 631400 18                 EPPR1   3
        17 000264   000000 701000 xent               TSX1    Z8DQ$GROUP_VALUE
        17 000265   000000 011000                    NOP     0

      187    14025
      188    14026    1          IF COMCOM.FILE_LTS_CHAIN$ ~= ADDR(NIL) THEN

  14026 17 000266   000434 236000 xsym               LDQ     COMCOM+284
        17 000267   000000 116000 18                 CMPQ    0
        17 000270   000274 600000 17                 TZE     s:14029

      189    14027    1            CALL Z8DI$IO_WRAPUP;

  14027 17 000271   000003 631400 18                 EPPR1   3
        17 000272   000000 701000 xent               TSX1    Z8DI$IO_WRAPUP
        17 000273   000000 011000                    NOP     0

      190    14028
      191    14029    1          IF O1COM.BLOCK$ ~= ADDR(NIL) THEN

  14029 17 000274   000060 236000 xsym               LDQ     O1COM+48
        17 000275   000000 116000 18                 CMPQ    0
        17 000276   000302 600000 17                 TZE     s:14032

      192    14030    1            CALL Z8DQ$BLOCK;

  14030 17 000277   000003 631400 18                 EPPR1   3
        17 000300   000000 701000 xent               TSX1    Z8DQ$BLOCK
        17 000301   000000 011000                    NOP     0

      193    14031
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:28   
      194    14032    1   END Z8DA$STORAGE_ALLOCATION ;

  14032 17 000302   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:29   
--  Include file information  --

   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_NEW_ILL.:Z8A6TOU  is referenced.
   Z8E_MACROS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DA$STORAGE_ALLOCATION.
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:30   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 QLT$

  ****  Section 002 LblCom PREV_01_QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 PREV_01_QLT$

  ****  Section 003 LblCom QLT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 QLT_

  ****  Section 004 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:31   
  ****  Section 005 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 006 LblCom DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DNT$

  ****  Section 007 LblCom DNT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 DNT_

  ****  Section 008 LblCom DNT_BUCKET_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 DNT_BUCKET_NUMBER

  ****  Section 009 LblCom DNT_OF_1$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 DNT_OF_1$

  ****  Section 010 LblCom LTS$

PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:32   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LONG_ITEM$                 0-0-0/w PTR         r     1 LTS$

  ****  Section 011 LblCom LTS_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 LTS_

  ****  Section 012 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 013 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 014 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 015 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:33   

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Section 016  Data  Z8DA$STORAGE_ALLOCATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w EPTR        r     1 DUMMY                      0-0-0/w UBIN        r     1 MAX_BOUND

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @QUAL$                     7-0-0/w PTR         r     1 QLT$$
    *0-0-0/w PTR         r     1 QUAL$                      4-0-0/w PTR         r     1 ST$$
    10-0-0/w PTR         r     1 ST$$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM
     0-0-0/w STRC(180)         1 HIER_STK(0:50)
     0-0-0/w SBIN              1 HIER_STK_PTR
     0-0-0/w UBIN              1 LTS_STEP(0:37)
     0-0-0/d STRC(11580) r     1 O1COM                      0-0-0/w STRC(144)         1 PAGE_FORMAT
     0-0-0/w STRC(153)         1 REP_STK(0:50)              0-0-0/w SBIN              1 REP_STK_PTR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:34   
     0-0-0/w STRC(144)         1 ALTER_LTS                  0-0-0/w STRC(3672)        1 ALT_KEY
     0-0-0/w STRC(36864)       1 ARGLIST                    0-0-0/w STRC(396)         1 ARRAY
     0-0-0/w STRC(180)         1 ARRAY_PRESET_LTS           0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BASE_LTS                   0-0-0/w STRC(288)         1 BINARY_OP
     0-0-0/w STRC(396)         1 BLOCK                      0-0-0/w STRC(144)         1 BT
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
     0-0-0/w STRC(288)         1 CD_LTS                     0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(396)         1 CLASS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(396)         1 CONDITION                  0-0-0/w STRC(396)         1 CONST
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(540)         1 CONTROL_NAME_LTS
     0-0-0/w STRC(1872)        1 COPY_FILE                  0-0-0/w STRC(396)         1 DB
     0-0-0/w STRC(396)         1 DCB_                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(108)         1 DEPENDING_SIZE
     0-0-0/w STRC(5472)        1 DIMS                       0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w STRC(216)         1 DML_REC
     0-0-0/w ASTR(180)   r     1 DNT                        0-0-0/w STRC(73836)       1 EVALUATE
     0-0-0/w STRC(396)         1 FD                         0-0-0/w STRC(1692)        1 FILE_LTS
     0-0-0/w STRC(288)         1 ILS_LIST                   0-0-0/w STRC(108)         1 INDEXES
     0-0-0/w STRC(360)         1 INIT_LTS                   0-0-0/w STRC(288)         1 INSPECT_1_STMT
     0-0-0/w STRC(288)         1 INSPECT_2_STMT             0-0-0/w STRC(288)         1 INSPECT_4_STMT
     0-0-0/w STRC(396)         1 INTDEF                     0-0-0/w STRC(180)         1 IO_RESTORE_CHAIN
     0-0-0/w STRC(144)         1 KEY                        0-0-0/w STRC(396)         1 LABEL
     0-0-0/w STRC(288)         1 LA_ITEM                    0-0-0/w STRC(36864)       1 LCNST
     0-0-0/w STRC(72)          1 LONG                       0-0-0/w STRC              1 LTS
     0-0-0/w STRC(360)         1 LTSS                       0-0-0/w STRC(36936)       1 LTS_PTR_ARRAY
     0-0-0/w STRC(504)         1 LX_CD_INPUT                0-0-0/w STRC(324)         1 LX_CD_I_O
     0-0-0/w STRC(396)         1 LX_CD_OUTPUT               0-0-0/w STRC(288)         1 LX_ETT_ITEM
     0-0-0/w STRC(288)   r     1 LX_ITEM                    0-0-0/w STRC(288)         1 LX_LARGE
     0-0-0/w STRC(288)         1 LX_LIST                    0-0-0/w STRC(1224)        1 LX_REC_DECL
     0-0-0/w STRC(864)         1 LX_REPORT_REC              0-0-0/w STRC(288)   r     1 LX_TERMINAL
     0-0-0/w STRC(396)         1 MNEMONIC                   0-0-0/w STRC(288)         1 MULTIPLY_STMT
     0-0-0/w STRC(144)         1 NEL                        0-0-0/w STRC(216)         1 OPEN_LTS
     0-0-0/w STRC(36864)       1 PAGE                       0-0-0/w STRC(396)         1 PARA
PL6.E3A0      #001=Z8DA$STORAGE_ALLOCATION File=Z8DA.:Z8A6TSI                    SAT 08/09/97 11:00 Page:35   
     0-0-0/w STRC(144)         1 PRIME                      0-0-0/w STRC(396)   r     1 PROC_
     0-0-0/w STRC(396)         1 PROC_DEF                   0-0-0/w STRC(900)   r     1 PROC_SUPP
     0-0-0/w STRC(216)   r     1 QLT                        0-0-0/w STRC(396)         1 RD
     0-0-0/w STRC(288)         1 READ_STMT                  0-0-0/w STRC(216)         1 REF
     0-0-0/w STRC(108)         1 RENAMES                    0-0-0/w STRC(720)         1 REPORT_01_LTS
     0-0-0/w STRC(432)         1 REPORT_ELEM_LTS            0-0-0/w STRC(252)         1 REPORT_GRP_LTS
     0-0-0/w STRC(1332)        1 REPORT_LTS                 0-0-0/w STRC(288)         1 REWRITE_STMT
     0-0-0/w STRC(144)         1 RVA_LTS                    0-0-0/w STRC(396)   r     1 SCALAR
     0-0-0/w STRC(396)         1 SD                         0-0-0/w STRC(396)         1 SECTION
     0-0-0/w STRC(396)         1 SEGMENT                    0-0-0/w STRC(360)         1 SEGMENT_LTS
     0-0-0/w STRC(396)   r     1 ST                         0-0-0/w STRC(288)         1 START_STMT
     0-0-0/w STRC(252)         1 STRING_STMT                0-0-0/w STRC(288)         1 SUBTRACT_STMT
     0-0-0/w STRC(252)         1 SUM_LTS                    0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/w STRC(288)         1 UNARY_OP                   0-0-0/w STRC(288)         1 UNSTRING_STMT
     0-0-0/d STRC(612)         1 USE                        0-0-0/w STRC(252)         1 USE_SUPP
     0-0-0/w STRC(396)         1 VARIABLE                   0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8DA$STORAGE_ALLOCATION requires 195 words for executable code.
   Procedure Z8DA$STORAGE_ALLOCATION requires 16 words of local(AUTO) storage.

    No errors detected in file Z8DA.:Z8A6TSI    .
