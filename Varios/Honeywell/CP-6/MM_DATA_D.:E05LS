VERSION E05

PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:1    
        1        1        /*M* Definitions for all data owned by Memory Management.          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        MM_DATA: PROC;
        8        8        /**/
        9        9        /* THIS MODULE DEFINES THE MOTITOR LOCATIONS AND TABLES NECESSARY */
       10       10        /* TO MEMORY MANAGEMENT IN ALLOCATION OF PHYSICAL MEMORY.         */
       11       11        /* RELATED DATA ITEMS WILL BE FOUND IN THE JIT, JOB STEP,  USER   */
       12       12        /* TABLE, AND ROLLIN/ROLLOUT DATA MODULES.                        */
       13       13        /**/
       14       14        %INCLUDE M_INFO_C;
       15      154        %INCLUDE MM$SYSGEN;                     /* MM Configuration-dependent data    */
       16      179        %INCLUDE B_STRINGS_C;                   /* System-wide string substitutions   */
       17      308        %INCLUDE MM_MACRO_M;
       18      394        /* In post-Q systems this lock will control all accesses to :      */
       19      395        /*      MM_FPPH, MM_FPPT, MM_FPPC  and all references into the     */
       20      396        /*      physical page usage table.                                 */
       21      397    1   DCL MM_LOCK BIT(72) STATIC SYMDEF DALIGNED INIT('1'B);
       22      398
       23      399        /*   MM_CGLOCK is used to control access to the comgroup working
       24      400             space quarter.
       25      401              */
       26      402    1   DCL MM_CGLOCK BIT(72) STATIC SYMDEF DALIGNED INIT('1'B);
       27      403
       28      404        /**/
       29      405        %EJECT;
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:2    
       30      406        /*The following data should all be accessed bypassing cache. This can
       31      407        be done running with the IS bypass mode or, preferably using the based
       32      408        structure MM$BYP.item which is based on a bypass PTR defined in
       33      409        MMA$NSA. *** IF ANY CHANGES ARE MADE TO THESE DCLS, UPDATE MM$BYP ALSO *** */
       34      410        /* Various heads, tails, and counts */
       35      411    1   DCL MM_FPPH STATIC SYMDEF SBIN INIT(0); /* Head of free page chain            */
       36      412    1   DCL MM_FPPT STATIC SYMDEF SBIN INIT(0); /* Tail of free page chain            */
       37      413    1   DCL MM_FPPC STATIC SYMDEF SBIN INIT(0); /* Free page chain count              */
       38      414        /**/
       39      415    1   DCL MM_SPPH STATIC SYMDEF SBIN INIT(0); /* Head of stolen page chain          */
       40      416    1   DCL MM_SPPT STATIC SYMDEF SBIN INIT(0); /* Tail of stolen page chain          */
       41      417    1   DCL MM_SPPC STATIC SYMDEF SBIN INIT(0); /* Stolen page chain count            */
       42      418        /**/
       43      419    1   DCL MM_BPPH STATIC SYMDEF SBIN INIT(0); /* Head of 'bad' page chain           */
       44      420    1   DCL MM_BPPT STATIC SYMDEF SBIN INIT(0); /* Tail of 'bad' page chain           */
       45      421    1   DCL MM_BPPC STATIC SYMDEF SBIN INIT(0); /* Count for 'bad' page chain         */
       46      422        /**/
       47      423    1   DCL MM_SUSPECTS STATIC SYMDEF SBIN INIT(0); /* # of suspected bad pgs         */
       48      424    1   DCL MM_IN_TEST STATIC SYMDEF SBIN INIT(0); /* # of 'bad' pgs being tested     */
       49      425    1   DCL MM_IOCC STATIC SYMDEF SBIN INIT(0); /* # OF PGS USED BY I/O CACHE         */
       50      426        /**/
       51      427    1   DCL MM_AUTO STATIC SYMDEF SBIN INIT(0); /* PAGES USED BY UNUSED AUTO PROC     */
       52      428    1   DCL MM_AUTOINUSE STATIC SYMDEF SBIN INIT(0); /* PAGE BY IN USE AUTO           */
       53      429    1   DCL MM_SHAREDS STATIC SYMDEF SBIN INIT(0); /* PAGES USED BY UNUSED DS         */
       54      430    1   DCL MM_SHAREDSUSE STATIC SYMDEF SBIN INIT(0); /* PAGES USED BY USED DS        */
       55      431        /* *** IF ANY CHANGES ARE MADE TO MM$BYP, UPDATE THE ABOVE DCLS ALSO *** */
       56      432    1   DCL MM_BYP$ PTR SYMREF READONLY;
       57      433    1   DCL 1 MM$BYP BASED (MM_BYP$),
       58      434    1         2 FPPH SBIN,
       59      435    1         2 FPPT SBIN,
       60      436    1         2 FPPC SBIN,
       61      437    1         2 SPPH SBIN,
       62      438    1         2 SPPT SBIN,
       63      439    1         2 SPPC SBIN,
       64      440    1         2 BPPH SBIN,
       65      441    1         2 BPPT SBIN,
       66      442    1         2 BPPC SBIN,
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:3    
       67      443    1         2 SUSPECTS SBIN,
       68      444    1         2 IN_TEST SBIN,
       69      445    1         2 IOCC SBIN,
       70      446    1         2 AUTOP SBIN,
       71      447    1         2 AUTOINUSE SBIN,
       72      448    1         2 SHAREDS SBIN,
       73      449    1         2 SHAREDSUSE SBIN;
       74      450    1   DCL MM_PCORE STATIC SYMDEF SBIN INIT(0); /* Max physical pg # in system       */
       75      451    1   DCL MM_GAPSZ STATIC SYMDEF SBIN INIT(0); /* Size of gap if REAL is not contig */
       76      452        /* Number of physical pages is MM_PCORE - MM_GAPSZ */
       77      453        %EJECT;
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:4    
       78      454        /* Data relating to various limits and held back amounts of memory */
       79      455        /**/
       80      456    1   DCL MM_RSVP STATIC SYMDEF SBIN INIT(%RSVPGS); /* # of pages guaranteed for    */
       81      457                                                /* stealing                           */
       82      458    1   DCL MM_STLM STATIC SYMDEF SBIN INIT(%STLMPGS); /* Max. # of stealable pages   */
       83      459    1   DCL MM_RDS(0:7) STATIC SYMDEF SBIN INIT(%RDS1PGS, /* # of pages reserved for  */
       84      460                                                /* monitor data segment #1            */
       85      461    1                                       0,        /* # of pages reserved for      */
       86      462                                                /* monitor data segment #2            */
       87      463    1                                 %RDS3PGS, /* # of pages reserved for            */
       88      464                                                /* monitor data segment #3            */
       89      465    1                                       0,        /* # of pages reserved for      */
       90      466                                                /* monitor data segment #4            */
       91      467    1                                       0,        /* # of pages reserved for      */
       92      468                                                /* monitor data segment # 5           */
       93      469    1                                       0,        /* # of pages reserved for      */
       94      470                                                /* monitor data segment #6            */
       95      471    1                                       0,        /* # of pages reserved for      */
       96      472                                                /* monitor data segment # 7           */
       97      473    1                                %RDS8PGS); /* # of pages reserved for            */
       98      474                                                /* monitor data segment # 8           */
       99      475    1   DCL MM_DSMAX(0:7) UBIN BYTE STATIC SYMDEF UNAL INIT(%RDS1PGS,
      100      476    1                                                       %RDS2PGS,
      101      477    1                                                       %RDS3PGS,
      102      478    1                                                       %RDS4PGS,
      103      479    1                                                       %RDS5PGS,
      104      480    1                                                       %RDS6PGS,
      105      481    1                                                       %RDS7PGS,
      106      482    1                                                       %RDS8PGS);
      107      483    1   DCL MM_HELD STATIC SYMDEF UBIN INIT(%HELDPGS); /* Total # of pages reserved for */
      108      484                                                /* monitor data segments AND I/O      */
      109      485                                                /* CACHE.                             */
      110      486        /**/
      111      487        %EJECT;
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:5    
      112      488        /* Various random data... */
      113      489        /**/
      114      490    1   DCL MM_AARD UBIN STATIC SYMDEF INIT(0); /* AARDVARK size in pages         */
      115      491    1   DCL MM_XDEL UBIN STATIC SYMDEF INIT(0); /* XDELTA size (incl schema) in pages */
      116      492    1   DCL MM_CHKFLG STATIC SYMDEF BIT(1) INIT(%FALSE); /* FLAG FOR PAGE CHAIN       */
      117      493                                                /* verification                       */
      118      494    1   DCL MM_SEGLO(0:%HIFIXEDSID) STATIC SYMDEF SBIN
      119      495    1                             INIT(%ISEGLO, /* LOW SEGMENT PAGES FOR              */
      120      496    1                                   %JITPG, /* FIRST 4 SEG'S - THOSE              */
      121      497    1                                 %FMSEGLO, /* HAVING FIXED BASES &               */
      122      498    1                                %ROSEGLO); /* ALWAYS PRESENT.                    */
      123      499    1   DCL MM_SEGHI(0:%HIFIXEDSID) STATIC SYMDEF SBIN /* SAME THING FOR HI PAGES      */
      124      500    1                              INIT(%ISEGHI,
      125      501    1                                   %JITEND,
      126      502    1                                   %FMSEGHI,
      127      503    1                                   %ROSEGHI);
      128      504    1   DCL MM_PWSQPGS(0:2) UBIN(18) STATIC SYMDEF UNAL INIT(1*3); /* # OF PAGES ..*/
      129      505                                                /* USED BY EACH SPCL SHARED WSQ       */
      130      506    1   DCL MM_NCWSQ SBIN STATIC SYMDEF INIT(0); /* # OF DEFINED CWSQ'S               */
      131      507    1   DCL MM_NCQPGS SBIN STATIC SYMDEF INIT(0); /* TOTAL # OF CQ PAGES              */
      132      508
      133      509        /* MM_FPMC - constant definition of a free page */
      134      510    1   DCL 1 MM_FPMC STATIC SYMDEF,
      135      511    1         2 RPN UBIN(18) UNAL INIT (%FPMC),
      136      512    1         2 * UBIN(18) UNAL INIT(0);
      137      513        /* This item contains the page TIGR sets up for SCT page tables */
      138      514    1   DCL MM_SCTDFT UBIN WORD STATIC SYMDEF INIT(0);
      139      515        %EJECT;
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:6    
      140      516        /*
      141      517                 CCC    OOO   M   M   GGG   RRRR    OOO   U   U  PPPP
      142      518                C   C  O O O  MM MM  G   G  R   R  O O O  U   U  P   P
      143      519                C      O O O  M M M  G      R   R  O O O  U   U  P   P
      144      520                C      O  OO  M   M  G      RRRR   O  OO  U   U  PPPP
      145      521                C      O   O  M   M  G  GG  R R    O   O  U   U  P
      146      522                C   C  O   O  M   M  G   G  R  R   O   O  U   U  P
      147      523                 CCC    OOO   M   M   GGG   R   R   OOO    UUU   P
      148      524
      149      525        */
      150      526    1   DCL MM_CGQMAP_PGS UBIN WORD STATIC SYMDEF INIT(0);
      151      527                           /* MM_CGQMAP_PGS : Number of pages in the comgroup
      152      528                                              page table. */
      153      529    1   DCL MM_CGQRES_PGS UBIN WORD STATIC SYMDEF INIT(2);
      154      530                           /* MM_CGQRES_PGS : Number of pages to be reserved
      155      531                                              in the comgroup virtual space
      156      532                                              for mapping comgroup context
      157      533                                              blocks and descriptor segment
      158      534                                              blocks (and also the comgroup
      159      535                                              log data).  This space is reserved
      160      536                                              right after the comgroup buffer
      161      537                                              transfer area (currently 2 pages
      162      538                                              and represented by the EQU
      163      539                                              %CGQ_BUF_PGS).  Thus the context
      164      540                                              area starts at page number
      165      541                                              %CGQ_BUF_PGS and would normally
      166      542                                              end at %CGQ_BUF_PGS+MM_CGQRES_PGS.
      167      543                                              However, the comgroup page table
      168      544                                              chunks must start on a boundary
      169      545                                              of %CGQ_CHUNK_SIZE, so the end
      170      546                                              of the context area is calculated
      171      547                                              and stored in MM_CGQCXT_END. */
      172      548    1   DCL MM_CGQCXT_END UBIN WORD STATIC SYMDEF INIT(0);
      173      549                           /* MM_CGQCXT_END : Last page number in the comgroup
      174      550                                              page table of the comgroup context
      175      551                                              area. */
      176      552    1   DCL MM_CGQPHS UBIN WORD STATIC SYMDEF INIT(0);
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:7    
      177      553                           /* MM_CGQPHS     : Page number in the comgroup
      178      554                                              virtual space of the first page
      179      555                                              acquirable on behalf of a comgroup
      180      556                                              (i.e. offset into the page table
      181      557                                              of the first page table chunk). */
      182      558    1   DCL MM_CGQPHE UBIN WORD STATIC SYMDEF INIT(0);
      183      559                           /* MM_CGQPHE     : Page number in the comgroup
      184      560                                              virtual space of the last page
      185      561                                              acquirable on behalf of a comgroup. */
      186      562        %MM$CGQD (FPTN=MM_CGQD,STCLASS="STATIC SYMDEF");
      187      621                           /* MM_CGQD       : Structure containing static
      188      622                                              items that must be accessed with
      189      623                                              cache bypass.  The bypass pointer
      190      624                                              to this structure is called
      191      625                                              MM_CGQD$, and is defined in the
      192      626                                              module MMA$NSA. */
      193      627    1   DCL 1 MM_CGTCNT STATIC SYMDEF ALIGNED,
      194      628    1         2 DSBS SBIN WORD INIT(0),
      195      629    1         2 PT   SBIN WORD INIT(0);
      196      630                           /* MM_CGTCNT     : Counters for the number of times
      197      631                                              various truncations have occurred.
      198      632                                              PT ---> MMQ$TRUNCPT (truncate
      199      633                                                      page table for pages)
      200      634                                              DSBS -> KQM$TRUNCDSBS (truncate
      201      635                                                      comgroups for their
      202      636                                                      page table chunks). */
      203      637        /**/
      204      638    1   DCL MM_SPTRNC STATIC SYMDEF SBIN INIT(0);/*Autoshare trunc's*/
      205      639    1   DCL MM_IOTRNC STATIC SYMDEF SBIN INIT(0);/*I/O cache trunc's*/
      206      640        %EJECT;
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:8    
      207      641        /* The based format of the physical page usage table entries.      */
      208      642        /* The actual table is built by AARDVARK in real.  B$PPUT$ ref-    */
      209      643        /* erences this table.                                             */
      210      644    1   DCL 1 MM$PPUT(0:0) BASED ALIGNED,
      211      645    1         2 SUSPECT BIT(1) UNAL,            /* PAGE SUSPECTED OF BEING BAD        */
      212      646    1         2 BAD BIT(1) UNAL,                /* PAGE IS BAD & REMOVED FROM USE     */
      213      647    1         2 IN_TEST BIT(1) UNAL,            /* BAD PAGE WHICH IS BEING TESTED     */
      214      648    1         2 FREE BIT(1) UNAL,               /* THIS IS A FREE PAGE                */
      215      649    1         2 USER BIT(1) UNAL,               /* PAGE BELONGS TO USER               */
      216      650    1         2 IO BIT(1) UNAL,                 /* PAGE BELONGS TO IO                 */
      217      651    1         2 PRC BIT(1) UNAL,                /* PAGE BELONGS TO PROCESSOR          */
      218      652    1         2 STOLEN BIT(1) UNAL,             /* Page is stolen, or if USER# = 511,
      219      653                                                   the page does not exist (e.g. it
      220      654                                                   is in an RPM gap.)                 */
      221      655    1         2 COMM BIT(1) UNAL,
      222      656    1         2 USER# UBIN(9) CALIGNED,
      223      657    1         2 PNUM REDEF USER# UBIN(9) CALIGNED,
      224      658    1         2 PPNO UBIN(18) HALIGNED;    /* PHYSICAL PAGE NUMBER OF NXT IN CHAIN    */
      225      659        /*  PPUT structure used for virtual arrays       */
      226      660    1   DCL 1 MM$VPPUT(0:0) BASED ALIGNED,
      227      661    1         2 SUSPECT BIT(1) UNAL,            /* PAGE SUSPECTED OF BEING BAD        */
      228      662    1         2 BAD BIT(1) UNAL,                /* PAGE IS BAD & REMOVED FROM USE     */
      229      663    1         2 IN_TEST BIT(1) UNAL,            /* BAD PAGE WHICH IS BEING TESTED     */
      230      664    1         2 FREE BIT(1) UNAL,               /* THIS IS A FREE PAGE                */
      231      665    1         2 USER BIT(1) UNAL,               /* PAGE BELONGS TO USER               */
      232      666    1         2 IO BIT(1) UNAL,                 /* PAGE BELONGS TO IO                 */
      233      667    1         2 PRC BIT(1) UNAL,               /* PAGE BELONGS TO PROCESSOR          */
      234      668    1         2 STOLEN BIT(1) UNAL,
      235      669    1         2 COMM BIT(1) UNAL,
      236      670    1         2 PPNO UBIN(27) UNAL;        /* Use for virtual page chain in virt arrays  */
      237      671
      238      672        /* Based description of the Virtual Control Block that is pointed
      239      673           to from the DCB associcated with a given virtual area. Contains
      240      674           control information for the area */
      241      675    1   DCL 1 MM$VCB BASED,      /* Must match VLP_VIRTUAL */
      242      676    1         2 INITIALIZE BIT(1) UNAL,         /* Page should be initilized          */
      243      677    1         2 NOFILE BIT(1) UNAL,             /* No file specified                  */
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:9    
      244      678    1         2 WRITE BIT(1) UNAL,              /* User has write access              */
      245      679    1         2 CREATE BIT(1) UNAL,             /* File is being created              */
      246      680    1         2 T,                              /* Similar to the T field in WSPTD    */
      247      681    1           3 FRAGMENTED BIT(1) UNAL,         /* Fragemented page table             */
      248      682    1           3 SECTION BIT(1) UNAL,         /* Section page table used            */
      249      683    1         2 * BIT(3) UNAL,
      250      684    1         2 WSQ UBIN(9) CALIGNED,           /* WSQ for this area */
      251      685    1         2 DCB# UBIN(9) CALIGNED,
      252      686    1         2 SEGNUM UBIN(9) CALIGNED,         /* SEGNUM for this area                  */
      253      687    1         2 INITVALUE UBIN WORD ALIGNED,    /* Initialization value               */
      254      688    1         2 MAXVP# SBIN ALIGNED,            /* Maximum legal virtual page         */
      255      689    1         2 PPMAX UBIN HALF HALIGNED,       /* Physical pages maximum             */
      256      690    1         2 PPMIN UBIN HALF HALIGNED,       /* Physical pages minimum             */
      257      691    1         2 PTR$ PTR ALIGNED,               /* Pointer to virtual area */
      258      692    1         2 WSPTD ALIGNED,                  /* WSPTD value for the LVA            */
      259      693    1            3 BLKNO UBIN HALF UNAL,        /* Mod 64 or 1024 address of PT       */
      260      694    1            3 Q BIT (2),                   /* WSQ access control                 */
      261      695    1            3 P BIT (1),                   /* Page Table Present                 */
      262      696    1            3 T BIT (2),                   /* Type of PT (0 = dense, 2 = frag    */
      263      697    1            3 * BIT (1),
      264      698    1            3 NBLKS UBIN (12) UNAL,        /* Number of 64 word blocks           */
      265      699    1         2 HEAD SBIN ALIGNED,              /* Head of page chain                 */
      266      700    1         2 TAIL SBIN ALIGNED,              /* Tail of page chain                 */
      267      701    1         2 MAXVP_WRITTEN SBIN,             /* Maximun VP written                 */
      268      702    1         2 PPC UBIN HALF HALIGNED,         /* Physical pages current             */
      269      703    1         2 NPGTSECT SBIN HALF HALIGNED,   /* Pg# used for the section */
      270      704    1         2 NPGTPGS SBIN,                   /* Number of pages needed for PT      */
      271      705    1         2 UPGT# SBIN HALF UNAL,           /* Page tables in use (section)       */
      272      706    1         2 * UBIN HALF UNAL;                /* Spare        */
      273      707        %MACRO MM$VIRTUAL_STATS (STCLASS=BASED);
      274      708
      275      709        /*
      276      710             MM$VIRTUAL_STATS - Contains the statistics for the virtual
      277      711                                array.  Pointed to by DCB.LASTSTA$
      278      712          */
      279      713        DCL 1 MM$VIRTUAL_STATS STCLASS,
      280      714             2 READS# UBIN WORD,  /* Number of file reads */
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:10   
      281      715             2 WRITES# UBIN WORD, /* Number of file writes */
      282      716             2 FAULTS# UBIN WORD, /* Number of faults */
      283      717             2 MAXPGS# UBIN WORD,  /* Maximum number of pages used */
      284      718             2 TRUNCS# UBIN WORD,  /* Number of truncates */
      285      719             2 * (0:2) UBIN WORD;
      286      720        %MEND;
      287      721        /*
      288      722        Some macros which are useful in dealing with page tables and linkage
      289      723        segments.
      290      724        */
      291      725    1   DCL MM_PTPTRS$ (0:%B_CWSQMAX) PTR SYMREF READONLY;
      292      726    1   DCL MM_LSPTRS$ (0:%USERWSQ) PTR SYMREF READONLY;
      293      727
      294      728    1   DCL 1 MM$DESC(0:0) BASED DALIGNED,
      295      729    1         2 BOUND UBIN(20) UNAL,           /* BOUND FIELD OF DESCRIPTOR               */
      296      730    1        2 SUPER REDEF BOUND,            /* SUPER DESCRIPTOR */
      297      731    1             3 BASE UBIN(10) UNAL,
      298      732    1             3 BOUND UBIN(10) UNAL,
      299      733    1         2 FLGS BIT(9) UNAL,              /* DESCRIPTOR FLAGS                        */
      300      734    1         2 FLGS1 REDEF FLGS,
      301      735    1           3 * BIT(7),
      302      736    1           3 NOTEMPTY BIT(1),
      303      737    1           3 * BIT(1),
      304      738    1         2 WSR UBIN(3) UNAL,              /* WORKING SPACE REGISTER NUMBER           */
      305      739    1         2 TYP UBIN(4) UNAL,              /* DESCRIPTOR TYPE FIELD                   */
      306      740    1         2 BASE SBIN WORD;                /* BASE OF DESCRIPTOR                      */
      307      741    1   DCL 1 MM$SDESC(0:0) BASED DALIGNED,
      308      742    1         2 BASE UBIN(10) UNAL,            /* BASE OF SUPER DESCRIPTOR */
      309      743    1         2 BOUND UBIN(10) UNAL,           /* BOUND OF SUPER DESCRIPTOR */
      310      744    1         2 FLGS BIT(3) UNAL,              /* DESCRIPTOR FLAGS                        */
      311      745    1         2 WSN UBIN(9) UNAL,               /* WORKING SPACE NUMBER           */
      312      746    1         2 TYP UBIN(4) UNAL,              /* DESCRIPTOR TYPE FIELD                   */
      313      747    1         2 LOC SBIN WORD;                 /* LOC OF SUPER DESCRIPTOR                */
      314      748        /*
      315      749        The following macros require that SEGID be specified as BIT(12), WSQ
      316      750        as any UBIN or SBIN, P$ as PTR, AC, SC, and FLG as BIT values of at least
      317      751        the necessary size, and DBASE and DBOUND as SBIN or UBIN.
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:11   
      318      752
      319      753        Given wsq, return ptr to page table.
      320      754        */
      321      755        %MACRO FINDMAP (WSQ=WSQ,P$=P$);
      322      756                P$=MM_PTPTRS$(WSQ);
      323      757        %MEND;
      324      758        /*
      325      759        Given wsq, return ptr to linkage segment.
      326      760        */
      327      761        %MACRO FINDLS (WSQ=WSQ,P$=P$);
      328      762                P$=MM_LSPTRS$(WSQ);
      329      763        %MEND;
      330      764        /*
      331      765        Map ppno into vpno slot in specified page table. B$UPT$ is default.
      332      766        */
      333      767        %MACRO MAP (P$=B$UPT$,VPNO=VPNO,PPNO=PPNO);
      334      768        IF HW_WSQ0PT THEN
      335      769           P$->B$MAP.RPN(VPNO)=B$WSQ0PT$->B$MAP.RPN(PPNO);
      336      770        ELSE
      337      771           P$->B$MAP.RPN(VPNO)=PPNO;
      338      772        %MEND;
      339      773        /*
      340      774        Set access controls for vpno in page table. B$UPT$ is default.
      341      775        */
      342      776        %MACRO SAC (P$=B$UPT$,VPNO=VPNO,AC=AC);
      343      777        P$->B$MAP.CTRL(VPNO)=AC;
      344      778        %MEND;
      345      779        /*
      346      780        Set software control bits for vpno in page table. B$UPT$ is default.
      347      781        */
      348      782        %MACRO SSC (P$=B$UPT$,VPNO=VPNO,SC=SC);
      349      783        P$->B$MAP.SCTRL(VPNO)=SC;
      350      784        %MEND;
      351      785        /*
      352      786        Return base of descriptor in linkage segment. B$ULS$ is default.
      353      787        */
      354      788        %MACRO GETDBASE (LS$=B$ULS$,SEGID=SEGID,DBASE=DBASE);
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:12   
      355      789        DBASE=LS$->MM$DESC.BASE(BITBIN((SEGID)&'1777'O));
      356      790        %MEND;
      357      791        /*
      358      792        Return bound of descriptor in linkage segment. B$ULS$ is default.
      359      793        */
      360      794        %MACRO GETDBOUND (LS$=B$ULS$,SEGID=SEGID,DBOUND=DBOUND);
      361      795        DBOUND=LS$->MM$DESC.BOUND(BITBIN((SEGID)&'1777'O));
      362      796        %MEND;
      363      797        /*
      364      798        Check if descriptor is null.
      365      799        */
      366      800        %MACRO NOTNULL (LS$=B$ULS$,SEGID=SEGID);
      367      801           LS$->MM$DESC.FLGS1.NOTEMPTY(BITBIN((SEGID)&'1777'O))
      368      802        %MEND;
      369      803        /*
      370      804        Set descriptor null.
      371      805        */
      372      806        %MACRO SETNULL (LS$=B$ULS$,SEGID=SEGID);
      373      807        LS$->MM$DESC.FLGS1.NOTEMPTY(BITBIN((SEGID)&'1777'O))='0'B;
      374      808        LS$->MM$DESC.BOUND(BITBIN((SEGID)&'1777'O))=0;
      375      809        %MEND;
      376      810        /*
      377      811        Set descriptor not null.
      378      812        */
      379      813        %MACRO SETNOTNULL (LS$=B$ULS$,SEGID=SEGID);
      380      814        LS$->MM$DESC.FLGS1.NOTEMPTY(BITBIN((SEGID)&'1777'O))='1'B;
      381      815        %MEND;
      382      816        /*
      383      817        Or specified descriptor flags into specified descriptor.
      384      818        */
      385      819        %MACRO SETFLG (LS$=B$ULS$,SEGID=SEGID,FLG=FLG);
      386      820        LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O))=LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O)
               820        )|(FLG);
      387      821        %MEND;
      388      822        /*
      389      823        And specified descriptor flags out of specified descriptor.
      390      824        */
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:13   
      391      825        %MACRO RSETFLG (LS$=B$ULS$,SEGID=SEGID,FLG=FLG);
      392      826        LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O))=LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O)
               826        )&~(FLG);
      393      827        %MEND;
      394      828        /*
      395      829        Return descriptor flags.
      396      830        */
      397      831        %MACRO GETFLG (LS$=B$ULS$,SEGID=SEGID,FLG=FLG);
      398      832        FLG=LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O));
      399      833        %MEND;
      400      834        /*
      401      835        Put base of descriptor in linkage segment. B$ULS$ is default.
      402      836        */
      403      837        %MACRO SETDBASE (LS$=B$ULS$,SEGID=SEGID,DBASE=DBASE);
      404      838        LS$->MM$DESC.BASE(BITBIN((SEGID)&'1777'O))=DBASE;
      405      839        %MEND;
      406      840        /*
      407      841        Put bound of descriptor in linkage segment. B$ULS$ is default.
      408      842        */
      409      843        %MACRO SETDBOUND (LS$=B$ULS$,SEGID=SEGID,DBOUND=DBOUND);
      410      844        LS$->MM$DESC.BOUND(BITBIN((SEGID)&'1777'O))=DBOUND;
      411      845        %MEND;
      412      846
      413      847    1   END MM_DATA;

PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:14   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure MM_DATA.

   No code generated for procedure MM_DATA .
   Procedure MM_DATA requires 4 words of local(AUTO) storage.

    No errors detected in file MM_DATA_D.:E05TSI    .

PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:15   

 Object Unit name= MM_DATA                                    File name= MM_DATA_D.:E05TOU
 UTS= JUL 30 '97 03:25:11.08 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    69    105  MM_DATA
    1   Proc  even  none     0      0  MM_DATA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes     ~proc       0  MM_DATA

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  MM_LOCK                            0      2  MM_CGLOCK
    0      4  MM_FPPH                            0      5  MM_FPPT
    0      6  MM_FPPC                            0      7  MM_SPPH
    0     10  MM_SPPT                            0     11  MM_SPPC
    0     12  MM_BPPH                            0     13  MM_BPPT
    0     14  MM_BPPC                            0     15  MM_SUSPECTS
    0     16  MM_IN_TEST                         0     17  MM_IOCC
    0     20  MM_AUTO                            0     21  MM_AUTOINUSE
    0     22  MM_SHAREDS                         0     23  MM_SHAREDSUSE
    0     24  MM_PCORE                           0     25  MM_GAPSZ
    0     26  MM_RSVP                            0     27  MM_STLM
    0     30  MM_RDS                             0     40  MM_DSMAX
    0     42  MM_HELD                            0     43  MM_AARD
    0     44  MM_XDEL                            0     45  MM_CHKFLG
    0     46  MM_SEGLO                           0     52  MM_SEGHI
    0     56  MM_PWSQPGS                         0     60  MM_NCWSQ
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:16   
    0     61  MM_NCQPGS                          0     62  MM_FPMC
    0     63  MM_SCTDFT                          0     64  MM_CGQMAP_PGS
    0     65  MM_CGQRES_PGS                      0     66  MM_CGQCXT_END
    0     67  MM_CGQPHS                          0     70  MM_CGQPHE
    0     71  MM_CGQD                            0    101  MM_CGTCNT
    0    103  MM_SPTRNC                          0    104  MM_IOTRNC

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    MM_BYP$
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:17   


(unnamed)
 Sect OctLoc
   0     000   400000 000000   000000 000000   400000 000000   000000 000000    ................
   0     004   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     024*  000000 000000   000000 000000   000000 000017   000000 000036    ................
   0     030   000000 000004   000000 000000   000000 000001   000000 000000    ................
   0     034   000000 000000   000000 000000   000000 000000   000000 000001    ................
   0     040   004024 001000   000000 001001   000000 000062   000000 000000    ...........2....
   0     044   000000 000000   0***** ******   000000 000100   000000 000013    ...........@....
   0     050   000000 000020   000000 000057   000000 000477   000000 000014    ......./........
   0     054   000000 000056   000000 000074   000001 000001   000001 ******    .......<........
   0     060   000000 000000   000000 000000   777777 000000   000000 000000    ................
   0     064   000000 000000   000000 000002   000000 000000   000000 000000    ................
   0     070   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     104*  000000 000000                                                    ....
        1        1        /*M* Definitions for all data owned by Memory Management.          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        MM_DATA: PROC;
        8        8        /**/
        9        9        /* THIS MODULE DEFINES THE MOTITOR LOCATIONS AND TABLES NECESSARY */
       10       10        /* TO MEMORY MANAGEMENT IN ALLOCATION OF PHYSICAL MEMORY.         */
       11       11        /* RELATED DATA ITEMS WILL BE FOUND IN THE JIT, JOB STEP,  USER   */
       12       12        /* TABLE, AND ROLLIN/ROLLOUT DATA MODULES.                        */
       13       13        /**/
       14       14        %INCLUDE M_INFO_C;
       15      154        %INCLUDE MM$SYSGEN;                     /* MM Configuration-dependent data    */
       16      179        %INCLUDE B_STRINGS_C;                   /* System-wide string substitutions   */
       17      308        %INCLUDE MM_MACRO_M;
       18      394        /* In post-Q systems this lock will control all accesses to :      */
       19      395        /*      MM_FPPH, MM_FPPT, MM_FPPC  and all references into the     */
       20      396        /*      physical page usage table.                                 */
       21      397    1   DCL MM_LOCK BIT(72) STATIC SYMDEF DALIGNED INIT('1'B);
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:18   
       22      398
       23      399        /*   MM_CGLOCK is used to control access to the comgroup working
       24      400             space quarter.
       25      401              */
       26      402    1   DCL MM_CGLOCK BIT(72) STATIC SYMDEF DALIGNED INIT('1'B);
       27      403
       28      404        /**/
       29      405        %EJECT;
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:19   
       30      406        /*The following data should all be accessed bypassing cache. This can
       31      407        be done running with the IS bypass mode or, preferably using the based
       32      408        structure MM$BYP.item which is based on a bypass PTR defined in
       33      409        MMA$NSA. *** IF ANY CHANGES ARE MADE TO THESE DCLS, UPDATE MM$BYP ALSO *** */
       34      410        /* Various heads, tails, and counts */
       35      411    1   DCL MM_FPPH STATIC SYMDEF SBIN INIT(0); /* Head of free page chain            */
       36      412    1   DCL MM_FPPT STATIC SYMDEF SBIN INIT(0); /* Tail of free page chain            */
       37      413    1   DCL MM_FPPC STATIC SYMDEF SBIN INIT(0); /* Free page chain count              */
       38      414        /**/
       39      415    1   DCL MM_SPPH STATIC SYMDEF SBIN INIT(0); /* Head of stolen page chain          */
       40      416    1   DCL MM_SPPT STATIC SYMDEF SBIN INIT(0); /* Tail of stolen page chain          */
       41      417    1   DCL MM_SPPC STATIC SYMDEF SBIN INIT(0); /* Stolen page chain count            */
       42      418        /**/
       43      419    1   DCL MM_BPPH STATIC SYMDEF SBIN INIT(0); /* Head of 'bad' page chain           */
       44      420    1   DCL MM_BPPT STATIC SYMDEF SBIN INIT(0); /* Tail of 'bad' page chain           */
       45      421    1   DCL MM_BPPC STATIC SYMDEF SBIN INIT(0); /* Count for 'bad' page chain         */
       46      422        /**/
       47      423    1   DCL MM_SUSPECTS STATIC SYMDEF SBIN INIT(0); /* # of suspected bad pgs         */
       48      424    1   DCL MM_IN_TEST STATIC SYMDEF SBIN INIT(0); /* # of 'bad' pgs being tested     */
       49      425    1   DCL MM_IOCC STATIC SYMDEF SBIN INIT(0); /* # OF PGS USED BY I/O CACHE         */
       50      426        /**/
       51      427    1   DCL MM_AUTO STATIC SYMDEF SBIN INIT(0); /* PAGES USED BY UNUSED AUTO PROC     */
       52      428    1   DCL MM_AUTOINUSE STATIC SYMDEF SBIN INIT(0); /* PAGE BY IN USE AUTO           */
       53      429    1   DCL MM_SHAREDS STATIC SYMDEF SBIN INIT(0); /* PAGES USED BY UNUSED DS         */
       54      430    1   DCL MM_SHAREDSUSE STATIC SYMDEF SBIN INIT(0); /* PAGES USED BY USED DS        */
       55      431        /* *** IF ANY CHANGES ARE MADE TO MM$BYP, UPDATE THE ABOVE DCLS ALSO *** */
       56      432    1   DCL MM_BYP$ PTR SYMREF READONLY;
       57      433    1   DCL 1 MM$BYP BASED (MM_BYP$),
       58      434    1         2 FPPH SBIN,
       59      435    1         2 FPPT SBIN,
       60      436    1         2 FPPC SBIN,
       61      437    1         2 SPPH SBIN,
       62      438    1         2 SPPT SBIN,
       63      439    1         2 SPPC SBIN,
       64      440    1         2 BPPH SBIN,
       65      441    1         2 BPPT SBIN,
       66      442    1         2 BPPC SBIN,
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:20   
       67      443    1         2 SUSPECTS SBIN,
       68      444    1         2 IN_TEST SBIN,
       69      445    1         2 IOCC SBIN,
       70      446    1         2 AUTOP SBIN,
       71      447    1         2 AUTOINUSE SBIN,
       72      448    1         2 SHAREDS SBIN,
       73      449    1         2 SHAREDSUSE SBIN;
       74      450    1   DCL MM_PCORE STATIC SYMDEF SBIN INIT(0); /* Max physical pg # in system       */
       75      451    1   DCL MM_GAPSZ STATIC SYMDEF SBIN INIT(0); /* Size of gap if REAL is not contig */
       76      452        /* Number of physical pages is MM_PCORE - MM_GAPSZ */
       77      453        %EJECT;
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:21   
       78      454        /* Data relating to various limits and held back amounts of memory */
       79      455        /**/
       80      456    1   DCL MM_RSVP STATIC SYMDEF SBIN INIT(%RSVPGS); /* # of pages guaranteed for    */
       81      457                                                /* stealing                           */
       82      458    1   DCL MM_STLM STATIC SYMDEF SBIN INIT(%STLMPGS); /* Max. # of stealable pages   */
       83      459    1   DCL MM_RDS(0:7) STATIC SYMDEF SBIN INIT(%RDS1PGS, /* # of pages reserved for  */
       84      460                                                /* monitor data segment #1            */
       85      461    1                                       0,        /* # of pages reserved for      */
       86      462                                                /* monitor data segment #2            */
       87      463    1                                 %RDS3PGS, /* # of pages reserved for            */
       88      464                                                /* monitor data segment #3            */
       89      465    1                                       0,        /* # of pages reserved for      */
       90      466                                                /* monitor data segment #4            */
       91      467    1                                       0,        /* # of pages reserved for      */
       92      468                                                /* monitor data segment # 5           */
       93      469    1                                       0,        /* # of pages reserved for      */
       94      470                                                /* monitor data segment #6            */
       95      471    1                                       0,        /* # of pages reserved for      */
       96      472                                                /* monitor data segment # 7           */
       97      473    1                                %RDS8PGS); /* # of pages reserved for            */
       98      474                                                /* monitor data segment # 8           */
       99      475    1   DCL MM_DSMAX(0:7) UBIN BYTE STATIC SYMDEF UNAL INIT(%RDS1PGS,
      100      476    1                                                       %RDS2PGS,
      101      477    1                                                       %RDS3PGS,
      102      478    1                                                       %RDS4PGS,
      103      479    1                                                       %RDS5PGS,
      104      480    1                                                       %RDS6PGS,
      105      481    1                                                       %RDS7PGS,
      106      482    1                                                       %RDS8PGS);
      107      483    1   DCL MM_HELD STATIC SYMDEF UBIN INIT(%HELDPGS); /* Total # of pages reserved for */
      108      484                                                /* monitor data segments AND I/O      */
      109      485                                                /* CACHE.                             */
      110      486        /**/
      111      487        %EJECT;
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:22   
      112      488        /* Various random data... */
      113      489        /**/
      114      490    1   DCL MM_AARD UBIN STATIC SYMDEF INIT(0); /* AARDVARK size in pages         */
      115      491    1   DCL MM_XDEL UBIN STATIC SYMDEF INIT(0); /* XDELTA size (incl schema) in pages */
      116      492    1   DCL MM_CHKFLG STATIC SYMDEF BIT(1) INIT(%FALSE); /* FLAG FOR PAGE CHAIN       */
      117      493                                                /* verification                       */
      118      494    1   DCL MM_SEGLO(0:%HIFIXEDSID) STATIC SYMDEF SBIN
      119      495    1                             INIT(%ISEGLO, /* LOW SEGMENT PAGES FOR              */
      120      496    1                                   %JITPG, /* FIRST 4 SEG'S - THOSE              */
      121      497    1                                 %FMSEGLO, /* HAVING FIXED BASES &               */
      122      498    1                                %ROSEGLO); /* ALWAYS PRESENT.                    */
      123      499    1   DCL MM_SEGHI(0:%HIFIXEDSID) STATIC SYMDEF SBIN /* SAME THING FOR HI PAGES      */
      124      500    1                              INIT(%ISEGHI,
      125      501    1                                   %JITEND,
      126      502    1                                   %FMSEGHI,
      127      503    1                                   %ROSEGHI);
      128      504    1   DCL MM_PWSQPGS(0:2) UBIN(18) STATIC SYMDEF UNAL INIT(1*3); /* # OF PAGES ..*/
      129      505                                                /* USED BY EACH SPCL SHARED WSQ       */
      130      506    1   DCL MM_NCWSQ SBIN STATIC SYMDEF INIT(0); /* # OF DEFINED CWSQ'S               */
      131      507    1   DCL MM_NCQPGS SBIN STATIC SYMDEF INIT(0); /* TOTAL # OF CQ PAGES              */
      132      508
      133      509        /* MM_FPMC - constant definition of a free page */
      134      510    1   DCL 1 MM_FPMC STATIC SYMDEF,
      135      511    1         2 RPN UBIN(18) UNAL INIT (%FPMC),
      136      512    1         2 * UBIN(18) UNAL INIT(0);
      137      513        /* This item contains the page TIGR sets up for SCT page tables */
      138      514    1   DCL MM_SCTDFT UBIN WORD STATIC SYMDEF INIT(0);
      139      515        %EJECT;
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:23   
      140      516        /*
      141      517                 CCC    OOO   M   M   GGG   RRRR    OOO   U   U  PPPP
      142      518                C   C  O O O  MM MM  G   G  R   R  O O O  U   U  P   P
      143      519                C      O O O  M M M  G      R   R  O O O  U   U  P   P
      144      520                C      O  OO  M   M  G      RRRR   O  OO  U   U  PPPP
      145      521                C      O   O  M   M  G  GG  R R    O   O  U   U  P
      146      522                C   C  O   O  M   M  G   G  R  R   O   O  U   U  P
      147      523                 CCC    OOO   M   M   GGG   R   R   OOO    UUU   P
      148      524
      149      525        */
      150      526    1   DCL MM_CGQMAP_PGS UBIN WORD STATIC SYMDEF INIT(0);
      151      527                           /* MM_CGQMAP_PGS : Number of pages in the comgroup
      152      528                                              page table. */
      153      529    1   DCL MM_CGQRES_PGS UBIN WORD STATIC SYMDEF INIT(2);
      154      530                           /* MM_CGQRES_PGS : Number of pages to be reserved
      155      531                                              in the comgroup virtual space
      156      532                                              for mapping comgroup context
      157      533                                              blocks and descriptor segment
      158      534                                              blocks (and also the comgroup
      159      535                                              log data).  This space is reserved
      160      536                                              right after the comgroup buffer
      161      537                                              transfer area (currently 2 pages
      162      538                                              and represented by the EQU
      163      539                                              %CGQ_BUF_PGS).  Thus the context
      164      540                                              area starts at page number
      165      541                                              %CGQ_BUF_PGS and would normally
      166      542                                              end at %CGQ_BUF_PGS+MM_CGQRES_PGS.
      167      543                                              However, the comgroup page table
      168      544                                              chunks must start on a boundary
      169      545                                              of %CGQ_CHUNK_SIZE, so the end
      170      546                                              of the context area is calculated
      171      547                                              and stored in MM_CGQCXT_END. */
      172      548    1   DCL MM_CGQCXT_END UBIN WORD STATIC SYMDEF INIT(0);
      173      549                           /* MM_CGQCXT_END : Last page number in the comgroup
      174      550                                              page table of the comgroup context
      175      551                                              area. */
      176      552    1   DCL MM_CGQPHS UBIN WORD STATIC SYMDEF INIT(0);
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:24   
      177      553                           /* MM_CGQPHS     : Page number in the comgroup
      178      554                                              virtual space of the first page
      179      555                                              acquirable on behalf of a comgroup
      180      556                                              (i.e. offset into the page table
      181      557                                              of the first page table chunk). */
      182      558    1   DCL MM_CGQPHE UBIN WORD STATIC SYMDEF INIT(0);
      183      559                           /* MM_CGQPHE     : Page number in the comgroup
      184      560                                              virtual space of the last page
      185      561                                              acquirable on behalf of a comgroup. */
      186      562        %MM$CGQD (FPTN=MM_CGQD,STCLASS="STATIC SYMDEF");
      187      621                           /* MM_CGQD       : Structure containing static
      188      622                                              items that must be accessed with
      189      623                                              cache bypass.  The bypass pointer
      190      624                                              to this structure is called
      191      625                                              MM_CGQD$, and is defined in the
      192      626                                              module MMA$NSA. */
      193      627    1   DCL 1 MM_CGTCNT STATIC SYMDEF ALIGNED,
      194      628    1         2 DSBS SBIN WORD INIT(0),
      195      629    1         2 PT   SBIN WORD INIT(0);
      196      630                           /* MM_CGTCNT     : Counters for the number of times
      197      631                                              various truncations have occurred.
      198      632                                              PT ---> MMQ$TRUNCPT (truncate
      199      633                                                      page table for pages)
      200      634                                              DSBS -> KQM$TRUNCDSBS (truncate
      201      635                                                      comgroups for their
      202      636                                                      page table chunks). */
      203      637        /**/
      204      638    1   DCL MM_SPTRNC STATIC SYMDEF SBIN INIT(0);/*Autoshare trunc's*/
      205      639    1   DCL MM_IOTRNC STATIC SYMDEF SBIN INIT(0);/*I/O cache trunc's*/
      206      640        %EJECT;
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:25   
      207      641        /* The based format of the physical page usage table entries.      */
      208      642        /* The actual table is built by AARDVARK in real.  B$PPUT$ ref-    */
      209      643        /* erences this table.                                             */
      210      644    1   DCL 1 MM$PPUT(0:0) BASED ALIGNED,
      211      645    1         2 SUSPECT BIT(1) UNAL,            /* PAGE SUSPECTED OF BEING BAD        */
      212      646    1         2 BAD BIT(1) UNAL,                /* PAGE IS BAD & REMOVED FROM USE     */
      213      647    1         2 IN_TEST BIT(1) UNAL,            /* BAD PAGE WHICH IS BEING TESTED     */
      214      648    1         2 FREE BIT(1) UNAL,               /* THIS IS A FREE PAGE                */
      215      649    1         2 USER BIT(1) UNAL,               /* PAGE BELONGS TO USER               */
      216      650    1         2 IO BIT(1) UNAL,                 /* PAGE BELONGS TO IO                 */
      217      651    1         2 PRC BIT(1) UNAL,                /* PAGE BELONGS TO PROCESSOR          */
      218      652    1         2 STOLEN BIT(1) UNAL,             /* Page is stolen, or if USER# = 511,
      219      653                                                   the page does not exist (e.g. it
      220      654                                                   is in an RPM gap.)                 */
      221      655    1         2 COMM BIT(1) UNAL,
      222      656    1         2 USER# UBIN(9) CALIGNED,
      223      657    1         2 PNUM REDEF USER# UBIN(9) CALIGNED,
      224      658    1         2 PPNO UBIN(18) HALIGNED;    /* PHYSICAL PAGE NUMBER OF NXT IN CHAIN    */
      225      659        /*  PPUT structure used for virtual arrays       */
      226      660    1   DCL 1 MM$VPPUT(0:0) BASED ALIGNED,
      227      661    1         2 SUSPECT BIT(1) UNAL,            /* PAGE SUSPECTED OF BEING BAD        */
      228      662    1         2 BAD BIT(1) UNAL,                /* PAGE IS BAD & REMOVED FROM USE     */
      229      663    1         2 IN_TEST BIT(1) UNAL,            /* BAD PAGE WHICH IS BEING TESTED     */
      230      664    1         2 FREE BIT(1) UNAL,               /* THIS IS A FREE PAGE                */
      231      665    1         2 USER BIT(1) UNAL,               /* PAGE BELONGS TO USER               */
      232      666    1         2 IO BIT(1) UNAL,                 /* PAGE BELONGS TO IO                 */
      233      667    1         2 PRC BIT(1) UNAL,               /* PAGE BELONGS TO PROCESSOR          */
      234      668    1         2 STOLEN BIT(1) UNAL,
      235      669    1         2 COMM BIT(1) UNAL,
      236      670    1         2 PPNO UBIN(27) UNAL;        /* Use for virtual page chain in virt arrays  */
      237      671
      238      672        /* Based description of the Virtual Control Block that is pointed
      239      673           to from the DCB associcated with a given virtual area. Contains
      240      674           control information for the area */
      241      675    1   DCL 1 MM$VCB BASED,      /* Must match VLP_VIRTUAL */
      242      676    1         2 INITIALIZE BIT(1) UNAL,         /* Page should be initilized          */
      243      677    1         2 NOFILE BIT(1) UNAL,             /* No file specified                  */
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:26   
      244      678    1         2 WRITE BIT(1) UNAL,              /* User has write access              */
      245      679    1         2 CREATE BIT(1) UNAL,             /* File is being created              */
      246      680    1         2 T,                              /* Similar to the T field in WSPTD    */
      247      681    1           3 FRAGMENTED BIT(1) UNAL,         /* Fragemented page table             */
      248      682    1           3 SECTION BIT(1) UNAL,         /* Section page table used            */
      249      683    1         2 * BIT(3) UNAL,
      250      684    1         2 WSQ UBIN(9) CALIGNED,           /* WSQ for this area */
      251      685    1         2 DCB# UBIN(9) CALIGNED,
      252      686    1         2 SEGNUM UBIN(9) CALIGNED,         /* SEGNUM for this area                 */
      253      687    1         2 INITVALUE UBIN WORD ALIGNED,    /* Initialization value               */
      254      688    1         2 MAXVP# SBIN ALIGNED,            /* Maximum legal virtual page         */
      255      689    1         2 PPMAX UBIN HALF HALIGNED,       /* Physical pages maximum             */
      256      690    1         2 PPMIN UBIN HALF HALIGNED,       /* Physical pages minimum             */
      257      691    1         2 PTR$ PTR ALIGNED,               /* Pointer to virtual area */
      258      692    1         2 WSPTD ALIGNED,                  /* WSPTD value for the LVA            */
      259      693    1            3 BLKNO UBIN HALF UNAL,        /* Mod 64 or 1024 address of PT       */
      260      694    1            3 Q BIT (2),                   /* WSQ access control                 */
      261      695    1            3 P BIT (1),                   /* Page Table Present                 */
      262      696    1            3 T BIT (2),                   /* Type of PT (0 = dense, 2 = frag    */
      263      697    1            3 * BIT (1),
      264      698    1            3 NBLKS UBIN (12) UNAL,        /* Number of 64 word blocks           */
      265      699    1         2 HEAD SBIN ALIGNED,              /* Head of page chain                 */
      266      700    1         2 TAIL SBIN ALIGNED,              /* Tail of page chain                 */
      267      701    1         2 MAXVP_WRITTEN SBIN,             /* Maximun VP written                 */
      268      702    1         2 PPC UBIN HALF HALIGNED,         /* Physical pages current             */
      269      703    1         2 NPGTSECT SBIN HALF HALIGNED,   /* Pg# used for the section */
      270      704    1         2 NPGTPGS SBIN,                   /* Number of pages needed for PT      */
      271      705    1         2 UPGT# SBIN HALF UNAL,           /* Page tables in use (section)       */
      272      706    1         2 * UBIN HALF UNAL;                /* Spare        */
      273      707        %MACRO MM$VIRTUAL_STATS (STCLASS=BASED);
      274      708
      275      709        /*
      276      710             MM$VIRTUAL_STATS - Contains the statistics for the virtual
      277      711                                array.  Pointed to by DCB.LASTSTA$
      278      712          */
      279      713        DCL 1 MM$VIRTUAL_STATS STCLASS,
      280      714             2 READS# UBIN WORD,  /* Number of file reads */
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:27   
      281      715             2 WRITES# UBIN WORD, /* Number of file writes */
      282      716             2 FAULTS# UBIN WORD, /* Number of faults */
      283      717             2 MAXPGS# UBIN WORD,  /* Maximum number of pages used */
      284      718             2 TRUNCS# UBIN WORD,  /* Number of truncates */
      285      719             2 * (0:2) UBIN WORD;
      286      720        %MEND;
      287      721        /*
      288      722        Some macros which are useful in dealing with page tables and linkage
      289      723        segments.
      290      724        */
      291      725    1   DCL MM_PTPTRS$ (0:%B_CWSQMAX) PTR SYMREF READONLY;
      292      726    1   DCL MM_LSPTRS$ (0:%USERWSQ) PTR SYMREF READONLY;
      293      727
      294      728    1   DCL 1 MM$DESC(0:0) BASED DALIGNED,
      295      729    1         2 BOUND UBIN(20) UNAL,           /* BOUND FIELD OF DESCRIPTOR              */
      296      730    1        2 SUPER REDEF BOUND,            /* SUPER DESCRIPTOR */
      297      731    1             3 BASE UBIN(10) UNAL,
      298      732    1             3 BOUND UBIN(10) UNAL,
      299      733    1         2 FLGS BIT(9) UNAL,              /* DESCRIPTOR FLAGS                       */
      300      734    1         2 FLGS1 REDEF FLGS,
      301      735    1           3 * BIT(7),
      302      736    1           3 NOTEMPTY BIT(1),
      303      737    1           3 * BIT(1),
      304      738    1         2 WSR UBIN(3) UNAL,              /* WORKING SPACE REGISTER NUMBER          */
      305      739    1         2 TYP UBIN(4) UNAL,              /* DESCRIPTOR TYPE FIELD                  */
      306      740    1         2 BASE SBIN WORD;                /* BASE OF DESCRIPTOR                     */
      307      741    1   DCL 1 MM$SDESC(0:0) BASED DALIGNED,
      308      742    1         2 BASE UBIN(10) UNAL,            /* BASE OF SUPER DESCRIPTOR */
      309      743    1         2 BOUND UBIN(10) UNAL,           /* BOUND OF SUPER DESCRIPTOR */
      310      744    1         2 FLGS BIT(3) UNAL,              /* DESCRIPTOR FLAGS                       */
      311      745    1         2 WSN UBIN(9) UNAL,               /* WORKING SPACE NUMBER           */
      312      746    1         2 TYP UBIN(4) UNAL,              /* DESCRIPTOR TYPE FIELD                  */
      313      747    1         2 LOC SBIN WORD;                 /* LOC OF SUPER DESCRIPTOR                */
      314      748        /*
      315      749        The following macros require that SEGID be specified as BIT(12), WSQ
      316      750        as any UBIN or SBIN, P$ as PTR, AC, SC, and FLG as BIT values of at least
      317      751        the necessary size, and DBASE and DBOUND as SBIN or UBIN.
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:28   
      318      752
      319      753        Given wsq, return ptr to page table.
      320      754        */
      321      755        %MACRO FINDMAP (WSQ=WSQ,P$=P$);
      322      756                P$=MM_PTPTRS$(WSQ);
      323      757        %MEND;
      324      758        /*
      325      759        Given wsq, return ptr to linkage segment.
      326      760        */
      327      761        %MACRO FINDLS (WSQ=WSQ,P$=P$);
      328      762                P$=MM_LSPTRS$(WSQ);
      329      763        %MEND;
      330      764        /*
      331      765        Map ppno into vpno slot in specified page table. B$UPT$ is default.
      332      766        */
      333      767        %MACRO MAP (P$=B$UPT$,VPNO=VPNO,PPNO=PPNO);
      334      768        IF HW_WSQ0PT THEN
      335      769           P$->B$MAP.RPN(VPNO)=B$WSQ0PT$->B$MAP.RPN(PPNO);
      336      770        ELSE
      337      771           P$->B$MAP.RPN(VPNO)=PPNO;
      338      772        %MEND;
      339      773        /*
      340      774        Set access controls for vpno in page table. B$UPT$ is default.
      341      775        */
      342      776        %MACRO SAC (P$=B$UPT$,VPNO=VPNO,AC=AC);
      343      777        P$->B$MAP.CTRL(VPNO)=AC;
      344      778        %MEND;
      345      779        /*
      346      780        Set software control bits for vpno in page table. B$UPT$ is default.
      347      781        */
      348      782        %MACRO SSC (P$=B$UPT$,VPNO=VPNO,SC=SC);
      349      783        P$->B$MAP.SCTRL(VPNO)=SC;
      350      784        %MEND;
      351      785        /*
      352      786        Return base of descriptor in linkage segment. B$ULS$ is default.
      353      787        */
      354      788        %MACRO GETDBASE (LS$=B$ULS$,SEGID=SEGID,DBASE=DBASE);
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:29   
      355      789        DBASE=LS$->MM$DESC.BASE(BITBIN((SEGID)&'1777'O));
      356      790        %MEND;
      357      791        /*
      358      792        Return bound of descriptor in linkage segment. B$ULS$ is default.
      359      793        */
      360      794        %MACRO GETDBOUND (LS$=B$ULS$,SEGID=SEGID,DBOUND=DBOUND);
      361      795        DBOUND=LS$->MM$DESC.BOUND(BITBIN((SEGID)&'1777'O));
      362      796        %MEND;
      363      797        /*
      364      798        Check if descriptor is null.
      365      799        */
      366      800        %MACRO NOTNULL (LS$=B$ULS$,SEGID=SEGID);
      367      801           LS$->MM$DESC.FLGS1.NOTEMPTY(BITBIN((SEGID)&'1777'O))
      368      802        %MEND;
      369      803        /*
      370      804        Set descriptor null.
      371      805        */
      372      806        %MACRO SETNULL (LS$=B$ULS$,SEGID=SEGID);
      373      807        LS$->MM$DESC.FLGS1.NOTEMPTY(BITBIN((SEGID)&'1777'O))='0'B;
      374      808        LS$->MM$DESC.BOUND(BITBIN((SEGID)&'1777'O))=0;
      375      809        %MEND;
      376      810        /*
      377      811        Set descriptor not null.
      378      812        */
      379      813        %MACRO SETNOTNULL (LS$=B$ULS$,SEGID=SEGID);
      380      814        LS$->MM$DESC.FLGS1.NOTEMPTY(BITBIN((SEGID)&'1777'O))='1'B;
      381      815        %MEND;
      382      816        /*
      383      817        Or specified descriptor flags into specified descriptor.
      384      818        */
      385      819        %MACRO SETFLG (LS$=B$ULS$,SEGID=SEGID,FLG=FLG);
      386      820       LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O))=LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O)
               820        )|(FLG);
      387      821        %MEND;
      388      822        /*
      389      823        And specified descriptor flags out of specified descriptor.
      390      824        */
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:30   
      391      825        %MACRO RSETFLG (LS$=B$ULS$,SEGID=SEGID,FLG=FLG);
      392      826       LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O))=LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O)
               826        )&~(FLG);
      393      827        %MEND;
      394      828        /*
      395      829        Return descriptor flags.
      396      830        */
      397      831        %MACRO GETFLG (LS$=B$ULS$,SEGID=SEGID,FLG=FLG);
      398      832        FLG=LS$->MM$DESC.FLGS(BITBIN((SEGID)&'1777'O));
      399      833        %MEND;
      400      834        /*
      401      835        Put base of descriptor in linkage segment. B$ULS$ is default.
      402      836        */
      403      837        %MACRO SETDBASE (LS$=B$ULS$,SEGID=SEGID,DBASE=DBASE);
      404      838        LS$->MM$DESC.BASE(BITBIN((SEGID)&'1777'O))=DBASE;
      405      839        %MEND;
      406      840        /*
      407      841        Put bound of descriptor in linkage segment. B$ULS$ is default.
      408      842        */
      409      843        %MACRO SETDBOUND (LS$=B$ULS$,SEGID=SEGID,DBOUND=DBOUND);
      410      844        LS$->MM$DESC.BOUND(BITBIN((SEGID)&'1777'O))=DBOUND;
      411      845        %MEND;
      412      846
      413      847    1   END MM_DATA;

PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:31   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure MM_DATA.
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:32   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 MM_BYP$


   No code generated for procedure MM_DATA .
   Procedure MM_DATA requires 4 words of local(AUTO) storage.

    No errors detected in file MM_DATA_D.:E05TSI    .
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:33   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=MM_DATA File=MM_DATA_D.:E05TSI                                WED 07/30/97 03:25 Page:34   
          MINI XREF LISTING

MM$DESC.BOUND
       729**DCL       730--REDEF
MM$DESC.FLGS
       733**DCL       734--REDEF
MM$PPUT.USER#
       656**DCL       657--REDEF
MM_BYP$
       432**DCL       433--IMP-PTR
