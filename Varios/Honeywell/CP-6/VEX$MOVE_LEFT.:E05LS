VERSION E05

PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:1    
        1        1        /*M*    VEX$MOVE_LEFT - MOVE A PORTITION OF A EDIT RECORD TO THE LEFT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$MOVE_LEFT: PROC(CLMN,MOVE#);
        9        9        /**/
       10       10        /*F*     NAME:     VEX$MOVE_LEFT
       11       11                 PURPOSE:  TO SHIFT THE RIGHT HAND PORTION OF A RECORD TO THE
       12       12                           LEFT BY A GIVEN AMOUNT.         */
       13       13        /**/
       14       14        /*D*     NAME:     VEX$MOVE_LEFT
       15       15                 PARAMETERS: CLMN - THE COLUMN TO BE SHIFTED LEFT
       16       16                           MOVE# - THE NUMBER OF COLUMN POSITIONS TO BE MOVED
       17       17                 DESCRIPTION: A CHECK IS MADE AND IF MOVE# IS LARGER THAN
       18       18                           CLMN THEN DATA WILL BE LOST OFF OF THE LEFT OF THE RECORD
       19       19                           AND THE USER IS INFORMED OF THE 'UNDERFLOW'. THE TEXT
       20       20                           BETWEEN CLMN AND THE END OF THE RECORD (REC_SIZE) IN
       21       21                           REC_BUF IS THEN MOVED LEFT BY MOVE# POSITIONS. IF
       22       22                           'RP ON' THEN THE HOLE IS BLANK FILLED ELSE REC_SIZE
       23       23                           IS ADJUSTED TO SHORTEN THE RECORD. VEX$MOVE_LEFT
       24       24                           ALWAYS RETURNS NORMALLY                 */
       25       25        /**/
       26       26        /**/
       27       27        /**********************************************************************/
       28       28        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       29       29        /**********************************************************************/
       30       30    1   DCL CLMN UBIN(36);
       31       31    1   DCL MOVE# UBIN(36);
       32       32        /*****************************************************************/
       33       33        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       34       34        /*****************************************************************/
       35       35    1   DCL ML_CLMN UBIN(36);
       36       36        /*****************************************************************/
       37       37        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:2    
       38       38        /*****************************************************************/
       39       39        %INCLUDE VE_SUBS_C;
       40      233        %INCLUDE VE_PERR_C;
       41      450        /**/
       42      451        %INCLUDE VE_FLAGS_R;
       43      502        /**/
       44      503    1   DCL REC_BUF CHAR(PC_RECSIZE#) SYMREF;
       45      504    1   DCL REC_SIZE UBIN(36) SYMREF;
       46      505    1   DCL BLANKS CHAR(4)   SYMREF;
       47      506    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       48      507        /*****************************************************************************/
       49      508        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       50      509        /*****************************************************************************/
       51      510        /**/
       52      511    1        ML_CLMN = CLMN;
       53      512    2        IF (MOVE# > ML_CLMN) THEN DO;
       54      513    3           IF (~FLAGS.UNDRFLOWMSG) THEN DO;
       55      514    3              CALL VEX$ERROR(E$E_UNDRFLOW,2);
       56      515    3              FLAGS.UNDRFLOWMSG = TRUE;
       57      516    3              END;
       58      517        /**/
       59      518        /*E*     ERROR:    VEE-E$E_UNDRFLOW-0
       60      519                 DESCRIPTION: Characters have been shifted off of the left
       61      520                           edge of the record.
       62      521        */
       63      522    2           ML_CLMN = MOVE#;
       64      523    2           END;
       65      524        /**/
       66      525    1        IF (ML_CLMN > REC_SIZE) THEN REC_SIZE = ML_CLMN;
       67      526        /**/
       68      527    1        CALL INSERT(REC_BUF,ML_CLMN-MOVE#,REC_SIZE-ML_CLMN,
       69      528    1           SUBSTR(REC_BUF,ML_CLMN,REC_SIZE-ML_CLMN));
       70      529    1        CALL INSERT(REC_BUF,REC_SIZE-MOVE#,MOVE#,BLANKS);
       71      530    1        REC_SIZE = REC_SIZE - MOVE#;
       72      531    1        IF (REC_SIZE = 0) THEN REC_SIZE = 1; /* KEEP ONE BLANK                */
       73      532    1        RETURN;
       74      533    1   END;
PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:3    

PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:4    
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$MOVE_LEFT.

   Procedure VEX$MOVE_LEFT requires 55 words for executable code.
   Procedure VEX$MOVE_LEFT requires 8 words of local(AUTO) storage.

    No errors detected in file VEX$MOVE_LEFT.:E05TSI    .

PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:5    

 Object Unit name= VEX$MOVE_LEFT                              File name= VEX$MOVE_LEFT.:E05TOU
 UTS= JUL 30 '97 07:13:34.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    55     67  VEX$MOVE_LEFT
    1  RoData even  none     3      3  VEX$MOVE_LEFT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  VEX$MOVE_LEFT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VEX$ERROR
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FLAGS                                 REC_BUF                               REC_SIZE
     BLANKS                                B_VECTNIL
PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:6    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:7    


        1        1        /*M*    VEX$MOVE_LEFT - MOVE A PORTITION OF A EDIT RECORD TO THE LEFT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$MOVE_LEFT: PROC(CLMN,MOVE#);

      8  0 000000   000000 700200 xent  VEX$MOVE_LE* TSX0  ! X66_AUTO_2
         0 000001   000010 000002                    ZERO    8,2

        9        9        /**/
       10       10        /*F*     NAME:     VEX$MOVE_LEFT
       11       11                 PURPOSE:  TO SHIFT THE RIGHT HAND PORTION OF A RECORD TO THE
       12       12                           LEFT BY A GIVEN AMOUNT.         */
       13       13        /**/
       14       14        /*D*     NAME:     VEX$MOVE_LEFT
       15       15                 PARAMETERS: CLMN - THE COLUMN TO BE SHIFTED LEFT
       16       16                           MOVE# - THE NUMBER OF COLUMN POSITIONS TO BE MOVED
       17       17                 DESCRIPTION: A CHECK IS MADE AND IF MOVE# IS LARGER THAN
       18       18                           CLMN THEN DATA WILL BE LOST OFF OF THE LEFT OF THE RECORD
       19       19                           AND THE USER IS INFORMED OF THE 'UNDERFLOW'. THE TEXT
       20       20                           BETWEEN CLMN AND THE END OF THE RECORD (REC_SIZE) IN
       21       21                           REC_BUF IS THEN MOVED LEFT BY MOVE# POSITIONS. IF
       22       22                           'RP ON' THEN THE HOLE IS BLANK FILLED ELSE REC_SIZE
       23       23                           IS ADJUSTED TO SHORTEN THE RECORD. VEX$MOVE_LEFT
       24       24                           ALWAYS RETURNS NORMALLY                 */
       25       25        /**/
       26       26        /**/
       27       27        /**********************************************************************/
       28       28        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       29       29        /**********************************************************************/
       30       30    1   DCL CLMN UBIN(36);
       31       31    1   DCL MOVE# UBIN(36);
       32       32        /*****************************************************************/
PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:8    
       33       33        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       34       34        /*****************************************************************/
       35       35    1   DCL ML_CLMN UBIN(36);
       36       36        /*****************************************************************/
       37       37        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       38       38        /*****************************************************************/
       39       39        %INCLUDE VE_SUBS_C;
       40      233        %INCLUDE VE_PERR_C;
       41      450        /**/
       42      451        %INCLUDE VE_FLAGS_R;
       43      502        /**/
       44      503    1   DCL REC_BUF CHAR(PC_RECSIZE#) SYMREF;
       45      504    1   DCL REC_SIZE UBIN(36) SYMREF;
       46      505    1   DCL BLANKS CHAR(4)   SYMREF;
       47      506    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       48      507        /*****************************************************************************/
       49      508        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       50      509        /*****************************************************************************/
       51      510        /**/
       52      511    1        ML_CLMN = CLMN;

    511  0 000002   200003 470500                    LDP0    @CLMN,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   200005 755100                    STA     ML_CLMN,,AUTO

       53      512    2        IF (MOVE# > ML_CLMN) THEN DO;

    512  0 000005   200004 471500                    LDP1    @MOVE#,,AUTO
         0 000006   200005 236100                    LDQ     ML_CLMN,,AUTO
         0 000007   100000 116100                    CMPQ    0,,PR1
         0 000010   000027 603000 0                  TRC     s:525

       54      513    3           IF (~FLAGS.UNDRFLOWMSG) THEN DO;

    513  0 000011   000000 236000 xsym               LDQ     FLAGS
         0 000012   000024 736000                    QLS     20
         0 000013   400000 376003                    ANQ     -131072,DU
PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:9    
         0 000014   400000 676003                    ERQ     -131072,DU
         0 000015   000024 600000 0                  TZE     s:522

       55      514    3              CALL VEX$ERROR(E$E_UNDRFLOW,2);

    514  0 000016   000001 630400 1                  EPPR0   1
         0 000017   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000020   000000 701000 xent               TSX1    VEX$ERROR
         0 000021   000000 011000                    NOP     0

       56      515    3              FLAGS.UNDRFLOWMSG = TRUE;

    515  0 000022   100000 236007                    LDQ     32768,DL
         0 000023   000000 256000 xsym               ORSQ    FLAGS

       57      516    3              END;

       58      517        /**/
       59      518        /*E*     ERROR:    VEE-E$E_UNDRFLOW-0
       60      519                 DESCRIPTION: Characters have been shifted off of the left
       61      520                           edge of the record.
       62      521        */
       63      522    2           ML_CLMN = MOVE#;

    522  0 000024   200004 470500                    LDP0    @MOVE#,,AUTO
         0 000025   000000 235100                    LDA     0,,PR0
         0 000026   200005 755100                    STA     ML_CLMN,,AUTO

       64      523    2           END;

       65      524        /**/
       66      525    1        IF (ML_CLMN > REC_SIZE) THEN REC_SIZE = ML_CLMN;

    525  0 000027   000000 236000 xsym               LDQ     REC_SIZE
         0 000030   200005 116100                    CMPQ    ML_CLMN,,AUTO
         0 000031   000033 603000 0                  TRC     s:527

PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:10   
    525  0 000032   000000 755000 xsym               STA     REC_SIZE

       67      526        /**/
       68      527    1        CALL INSERT(REC_BUF,ML_CLMN-MOVE#,REC_SIZE-ML_CLMN,

    527  0 000033   200004 470500                    LDP0    @MOVE#,,AUTO
         0 000034   200005 236100                    LDQ     ML_CLMN,,AUTO
         0 000035   000000 136100                    SBLQ    0,,PR0
         0 000036   200006 756100                    STQ     ML_CLMN+1,,AUTO
         0 000037   000000 236000 xsym               LDQ     REC_SIZE
         0 000040   200005 136100                    SBLQ    ML_CLMN,,AUTO
         0 000041   200007 756100                    STQ     ML_CLMN+2,,AUTO
         0 000042   000000 236000 xsym               LDQ     REC_SIZE
         0 000043   200005 136100                    SBLQ    ML_CLMN,,AUTO
         0 000044   000000 620006                    EAX0    0,QL
         0 000045   200007 721100                    LXL1    ML_CLMN+2,,AUTO
         0 000046   200006 236100                    LDQ     ML_CLMN+1,,AUTO
         0 000047   040046 100445                    MLR     fill='040'O
         0 000050   000000 000010 xsym               ADSC9   REC_BUF,A                cn=0,n=*X0
         0 000051   000000 000011 xsym               ADSC9   REC_BUF,Q                cn=0,n=*X1

       69      528    1           SUBSTR(REC_BUF,ML_CLMN,REC_SIZE-ML_CLMN));
       70      529    1        CALL INSERT(REC_BUF,REC_SIZE-MOVE#,MOVE#,BLANKS);

    529  0 000052   000000 236000 xsym               LDQ     REC_SIZE
         0 000053   000000 136100                    SBLQ    0,,PR0
         0 000054   000000 720100                    LXL0    0,,PR0
         0 000055   040046 100400                    MLR     fill='040'O
         0 000056   000000 000004 xsym               ADSC9   BLANKS                   cn=0,n=4
         0 000057   000000 000010 xsym               ADSC9   REC_BUF,Q                cn=0,n=*X0

       71      530    1        REC_SIZE = REC_SIZE - MOVE#;

    530  0 000060   000000 236000 xsym               LDQ     REC_SIZE
         0 000061   000000 136100                    SBLQ    0,,PR0
         0 000062   000000 756000 xsym               STQ     REC_SIZE

PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:11   
       72      531    1        IF (REC_SIZE = 0) THEN REC_SIZE = 1; /* KEEP ONE BLANK                */

    531  0 000063   000066 601000 0                  TNZ     s:532

    531  0 000064   000001 235007                    LDA     1,DL
         0 000065   000000 755000 xsym               STA     REC_SIZE

       73      532    1        RETURN;

    532  0 000066   000000 702200 xent               TSX2  ! X66_ARET
       74      533    1   END;

PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:12   
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$MOVE_LEFT.
PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:13   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CLMN                      4-0-0/w PTR         r     1 @MOVE#
    *0-0-0/w UBIN        r     1 CLMN                       5-0-0/w UBIN        r     1 ML_CLMN
    *0-0-0/w UBIN        r     1 MOVE#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)     r     1 BLANKS                     0-0-0/b STRC(72)    r     1 FLAGS
     0-0-0/c CHAR(1024)  r     1 REC_BUF                    0-0-0/w UBIN        r     1 REC_SIZE


   Procedure VEX$MOVE_LEFT requires 55 words for executable code.
   Procedure VEX$MOVE_LEFT requires 8 words of local(AUTO) storage.

    No errors detected in file VEX$MOVE_LEFT.:E05TSI    .
PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:14   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VEX$MOVE_LEFT File=VEX$MOVE_LEFT.:E05TSI                      WED 07/30/97 07:13 Page:15   
          MINI XREF LISTING

BLANKS
       505**DCL       529>>CALLBLT
CLMN
        30**DCL         8--PROC      511>>ASSIGN
FLAGS.UNDRFLOWMSG
       480**DCL       513>>IF        515<<ASSIGN
ML_CLMN
        35**DCL       511<<ASSIGN    512>>IF        522<<ASSIGN    525>>IF        525>>ASSIGN    527>>CALLBLT
       527>>CALLBLT   527>>CALLBLT   527>>CALLBLT
MOVE#
        31**DCL         8--PROC      512>>IF        522>>ASSIGN    527>>CALLBLT   529>>CALLBLT   529>>CALLBLT
       530>>ASSIGN
REC_BUF
       503**DCL       527<<CALLBLT   527>>CALLBLT   529<<CALLBLT
REC_SIZE
       504**DCL       525>>IF        525<<ASSIGN    527>>CALLBLT   527>>CALLBLT   529>>CALLBLT   530<<ASSIGN
       530>>ASSIGN    531>>IF        531<<ASSIGN
VEX$ERROR
       506**DCL-ENT   514--CALL
