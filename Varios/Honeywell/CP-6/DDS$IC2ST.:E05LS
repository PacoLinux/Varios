VERSION E05

PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:1    
        1        1        /*M* DDS$IC2ST Finds executable statment given IC */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$IC2ST
        9        9             PURPOSE: To find the executable statement associated with a given IC.
       10       10             DESCRIPTION: Searches the executable statements table for the first
       11       11             statement that is located at the given IC address. When the specified
       12       12             statement is found RETURNs, else ALTRETURNs. */
       13       13        /*D* NAME: DDS$IC2ST
       14       14             CALL: CALL DDS$IC2ST( IC, ENTRY$ ) ALTRET( cant find );
       15       15             INTERFACE: Schema access data.
       16       16             ENVIRONMENT: Delta, scanner active.
       17       17             INPUT: IC - IS address.
       18       18             OUTPUT: ENTRY$ - Entry into executable statements table.
       19       19             SCRATCH: Local auto only.
       20       20             DESCRIPTION: Searches the executable statements table for the first
       21       21             statement that is located at the given IC address. When the specified
       22       22             statement is found RETURNs, else ALTRETURNs. */
       23       23                                                /**/
       24       24        DDS$IC2ST: PROC( IC, ENTRY$ ) ALTRET;
       25       25                                                /**/
       26       26    1   DCL IC SBIN;
       27       27    1   DCL ENTRY$ PTR;
       28       28    1   DCL EXST$ PTR;
       29       29    1   DCL EXSTART SBIN;
       30       30    1   DCL EXSTEND SBIN;
       31       31    1   DCL IX SBIN;
       32       32        /*D* EXSTART, EXSTEND, & IX must be SBIN */
       33       33    1   DCL TIC SBIN;
       34       34    1   DCL CLB$ PTR;
       35       35        %INCLUDE B$OBJECT_C;                    /* Object language structures */
       36     3465        %B$EXST(STCLASS="BASED(EXST$)");
       37     3572        %B$LOGBLK;
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:2    
       38     3603        %B$STTYPESUBS;
       39     3672        %INCLUDE XUH_MACRO_C;
       40     3756        %INCLUDE DD_SD_M;                       /* "STATIC DATA " */
       41     5092        %S_D;
       42     6410    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       43     6411    1   DCL DDF$N_EXST ENTRY(1) ALTRET;
       44     6412                                                /**/
       45     6413    1        IF ( NOT S_D.QSCH.OK ) OR ( NOT S_D.SCHEMA ) OR ( S_D.EXST$ = ADDR( NIL ) )
       46     6414    1        THEN GOTO ALTRT;
       47     6415    1        TIC = IC;
       48     6416    1        CLB$ = PINCRW( S_D.LB$, S_D.QSCH.LB# * SIZEW( B$LOGBLK ) );
       49     6417    1        EXSTART = CLB$ -> B$LOGBLK.STOFFST / SIZEW( B$EXST );
       50     6418    1        EXSTEND = CLB$ -> B$LOGBLK.STSIZE + EXSTART - 1;
       51     6419    1        CALL DDF$EXST_#( EXSTART, EXST$ ) ALTRET( ALTRT );
       52     6420    2        DO IX = EXSTART TO EXSTEND;
       53     6421    2             IF ( B$EXST.ISADDR = TIC ) AND ( B$EXST.STTYPE ~= %S@MISC )
       54     6422    3             THEN DO;                      /* Got it */
       55     6423    3                  ENTRY$ = EXST$;
       56     6424    3                  RETURN;
       57     6425    3                END;
       58     6426    2             ELSE IF ( B$EXST.ISADDR > TIC ) THEN GOTO ALTRT;
       59     6427    2             CALL DDF$N_EXST( EXST$ ) ALTRET( ALTRT );
       60     6428    2           END;                            /* Do IX */
       61     6429                                                /**/
       62     6430    1   ALTRT: ALTRETURN;
       63     6431                                                /**/
       64     6432    1   END DDS$IC2ST;

PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:3    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$IC2ST.

   Procedure DDS$IC2ST requires 67 words for executable code.
   Procedure DDS$IC2ST requires 14 words of local(AUTO) storage.

    No errors detected in file DDS$IC2ST.:E05TSI    .

PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:4    

 Object Unit name= DDS$IC2ST                                  File name= DDS$IC2ST.:E05TOU
 UTS= JUL 29 '97 14:16:20.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    67    103  DDS$IC2ST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDS$IC2ST

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDF$EXST_#
 yes     yes           Std       1 DDF$N_EXST
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:5    


        1        1        /*M* DDS$IC2ST Finds executable statment given IC */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$IC2ST
        9        9             PURPOSE: To find the executable statement associated with a given IC.
       10       10             DESCRIPTION: Searches the executable statements table for the first
       11       11             statement that is located at the given IC address. When the specified
       12       12             statement is found RETURNs, else ALTRETURNs. */
       13       13        /*D* NAME: DDS$IC2ST
       14       14             CALL: CALL DDS$IC2ST( IC, ENTRY$ ) ALTRET( cant find );
       15       15             INTERFACE: Schema access data.
       16       16             ENVIRONMENT: Delta, scanner active.
       17       17             INPUT: IC - IS address.
       18       18             OUTPUT: ENTRY$ - Entry into executable statements table.
       19       19             SCRATCH: Local auto only.
       20       20             DESCRIPTION: Searches the executable statements table for the first
       21       21             statement that is located at the given IC address. When the specified
       22       22             statement is found RETURNs, else ALTRETURNs. */
       23       23                                                /**/
       24       24        DDS$IC2ST: PROC( IC, ENTRY$ ) ALTRET;

     24  0 000000   000000 700200 xent  DDS$IC2ST    TSX0  ! X66_AUTO_2
         0 000001   000016 000002                    ZERO    14,2

       25       25                                                /**/
       26       26    1   DCL IC SBIN;
       27       27    1   DCL ENTRY$ PTR;
       28       28    1   DCL EXST$ PTR;
       29       29    1   DCL EXSTART SBIN;
       30       30    1   DCL EXSTEND SBIN;
       31       31    1   DCL IX SBIN;
       32       32        /*D* EXSTART, EXSTEND, & IX must be SBIN */
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:6    
       33       33    1   DCL TIC SBIN;
       34       34    1   DCL CLB$ PTR;
       35       35        %INCLUDE B$OBJECT_C;                    /* Object language structures */
       36     3465        %B$EXST(STCLASS="BASED(EXST$)");
       37     3572        %B$LOGBLK;
       38     3603        %B$STTYPESUBS;
       39     3672        %INCLUDE XUH_MACRO_C;
       40     3756        %INCLUDE DD_SD_M;                       /* "STATIC DATA " */
       41     5092        %S_D;
       42     6410    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       43     6411    1   DCL DDF$N_EXST ENTRY(1) ALTRET;
       44     6412                                                /**/
       45     6413    1        IF ( NOT S_D.QSCH.OK ) OR ( NOT S_D.SCHEMA ) OR ( S_D.EXST$ = ADDR( NIL ) )

   6413  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   000733 234100                    SZN     475,,PR0
         0 000004   000102 605000 0                  TPL     ALTRT
         0 000005   000052 234100                    SZN     42,,PR0
         0 000006   000102 605000 0                  TPL     ALTRT
         0 000007   001010 236100                    LDQ     520,,PR0
         0 000010   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000011   000102 600000 0                  TZE     ALTRT

       46     6414    1        THEN GOTO ALTRT;
       47     6415    1        TIC = IC;

   6415  0 000012   200003 471500                    LDP1    @IC,,AUTO
         0 000013   100000 235100                    LDA     0,,PR1
         0 000014   200011 755100                    STA     TIC,,AUTO

       48     6416    1        CLB$ = PINCRW( S_D.LB$, S_D.QSCH.LB# * SIZEW( B$LOGBLK ) );

   6416  0 000015   000740 720100                    LXL0    480,,PR0
         0 000016   001037 473500                    LDP3    543,,PR0
         0 000017   000000 635010                    EAA     0,X0
         0 000020   000020 771000                    ARL     16
         0 000021   300000 634505                    EPPR4   0,AL,PR3
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:7    
         0 000022   200012 454500                    STP4    CLB$,,AUTO

       49     6417    1        EXSTART = CLB$ -> B$LOGBLK.STOFFST / SIZEW( B$EXST );

   6417  0 000023   400002 236100                    LDQ     2,,PR4
         0 000024   000022 772000                    QRL     18
         0 000025   000003 506007                    DIV     3,DL
         0 000026   200006 756100                    STQ     EXSTART,,AUTO

       50     6418    1        EXSTEND = CLB$ -> B$LOGBLK.STSIZE + EXSTART - 1;

   6418  0 000027   400002 236100                    LDQ     2,,PR4
         0 000030   777777 376007                    ANQ     -1,DL
         0 000031   200006 036100                    ADLQ    EXSTART,,AUTO
         0 000032   000001 136007                    SBLQ    1,DL
         0 000033   200007 756100                    STQ     EXSTEND,,AUTO

       51     6419    1        CALL DDF$EXST_#( EXSTART, EXST$ ) ALTRET( ALTRT );

   6419  0 000034   200005 635500                    EPPR5   EXST$,,AUTO
         0 000035   200015 455500                    STP5    CLB$+3,,AUTO
         0 000036   200006 636500                    EPPR6   EXSTART,,AUTO
         0 000037   200014 456500                    STP6    CLB$+2,,AUTO
         0 000040   200014 630500                    EPPR0   CLB$+2,,AUTO
         0 000041   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000042   000000 701000 xent               TSX1    DDF$EXST_#
         0 000043   000102 702000 0                  TSX2    ALTRT

       52     6420    2        DO IX = EXSTART TO EXSTEND;

   6420  0 000044   200006 235100                    LDA     EXSTART,,AUTO
         0 000045   200010 755100                    STA     IX,,AUTO
         0 000046   000077 710000 0                  TRA     s:6428+1

       53     6421    2             IF ( B$EXST.ISADDR = TIC ) AND ( B$EXST.STTYPE ~= %S@MISC )

   6421  0 000047   200005 470500                    LDP0    EXST$,,AUTO
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:8    
         0 000050   000000 236100                    LDQ     0,,PR0
         0 000051   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000052   200011 116100                    CMPQ    TIC,,AUTO
         0 000053   000064 601000 0                  TNZ     s:6426
         0 000054   000002 236100                    LDQ     2,,PR0
         0 000055   000177 376003                    ANQ     127,DU
         0 000056   000150 116003                    CMPQ    104,DU
         0 000057   000064 600000 0                  TZE     s:6426

       54     6422    3             THEN DO;                      /* Got it */

       55     6423    3                  ENTRY$ = EXST$;

   6423  0 000060   200005 236100                    LDQ     EXST$,,AUTO
         0 000061   200004 471500                    LDP1    @ENTRY$,,AUTO
         0 000062   100000 756100                    STQ     0,,PR1

       56     6424    3                  RETURN;

   6424  0 000063   000000 702200 xent               TSX2  ! X66_ARET

       57     6425    3                END;
       58     6426    2             ELSE IF ( B$EXST.ISADDR > TIC ) THEN GOTO ALTRT;

   6426  0 000064   000000 236100                    LDQ     0,,PR0
         0 000065   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000066   200011 116100                    CMPQ    TIC,,AUTO
         0 000067   000102 605400 0                  TPNZ    ALTRT

       59     6427    2             CALL DDF$N_EXST( EXST$ ) ALTRET( ALTRT );

   6427  0 000070   200005 631500                    EPPR1   EXST$,,AUTO
         0 000071   200014 451500                    STP1    CLB$+2,,AUTO
         0 000072   200014 630500                    EPPR0   CLB$+2,,AUTO
         0 000073   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000074   000000 701000 xent               TSX1    DDF$N_EXST
         0 000075   000102 702000 0                  TSX2    ALTRT
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:9    

       60     6428    2           END;                            /* Do IX */

   6428  0 000076   200010 054100                    AOS     IX,,AUTO
         0 000077   200010 236100                    LDQ     IX,,AUTO
         0 000100   200007 116100                    CMPQ    EXSTEND,,AUTO
         0 000101   000047 604400 0                  TMOZ    s:6421

       61     6429                                                /**/
       62     6430    1   ALTRT: ALTRETURN;

   6430  0 000102   000000 702200 xent  ALTRT        TSX2  ! X66_AALT
       63     6431                                                /**/
       64     6432    1   END DDS$IC2ST;

PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:10   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$IC2ST.

   Procedure DDS$IC2ST requires 67 words for executable code.
   Procedure DDS$IC2ST requires 14 words of local(AUTO) storage.

    No errors detected in file DDS$IC2ST.:E05TSI    .
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:11   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:12   
          MINI XREF LISTING

ALTRT
      6430**LABEL    6414--GOTO     6419--CALLALT  6426--GOTO     6427--CALLALT
B$EXST
      3466**DCL      6417--ASSIGN
B$EXST.ISADDR
      3481**DCL      6421>>IF       6426>>IF
B$EXST.OU
      3475**DCL      3481--REDEF
B$EXST.STTYPE
      3499**DCL      6421>>IF
B$LOGBLK
      3573**DCL      6416--ASSIGN
B$LOGBLK.STOFFST
      3588**DCL      6417>>ASSIGN
B$LOGBLK.STSIZE
      3592**DCL      6418>>ASSIGN
CLB$
        34**DCL      6416<<ASSIGN   6417>>ASSIGN   6418>>ASSIGN
DDF$EXST_#
      6410**DCL-ENT  6419--CALL
DDF$N_EXST
      6411**DCL-ENT  6427--CALL
ENTRY$
        27**DCL        24--PROC     6423<<ASSIGN
EXST$
        28**DCL      3466--IMP-PTR  6419<>CALL     6421>>IF       6421>>IF       6423>>ASSIGN   6426>>IF
      6427<>CALL
EXSTART
        29**DCL      6417<<ASSIGN   6418>>ASSIGN   6419<>CALL     6420>>DOINDEX
EXSTEND
        30**DCL      6418<<ASSIGN   6420>>DOINDEX
IC
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:13   
        26**DCL        24--PROC     6415>>ASSIGN
IX
        31**DCL      6420<<DOINDEX
S_D.CURRENT_CHANNEL
      6044**DCL      6046--REDEF
S_D.DEBUGA
      5196**DCL      5198--REDEF
S_D.EIS
      6154**DCL      6183--REDEF
S_D.EXST$
      5500**DCL      6413>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
      6087**DCL      6088--REDEF    6102--REDEF
S_D.JDE
      5701**DCL      5702--REDEF
S_D.L$.VALUE
      5254**DCL      5260--REDEF    5268--REDEF    5271--REDEF    5274--REDEF    5277--REDEF
S_D.L$.VALUE.L
      5255**DCL      5256--REDEF    5257--REDEF
S_D.L6_MESSAGE_BUF
      6108**DCL      6110--REDEF
S_D.LB$
      5534**DCL      6416>>ASSIGN
S_D.OUTPUT
      6074**DCL      6076--REDEF
S_D.QSCH.LB#
      5410**DCL      6416>>ASSIGN
S_D.QSCH.OK
      5400**DCL      6413>>IF
S_D.REMOTE_MSG.FNCC
      6093**DCL      6094--REDEF
S_D.REMOTE_MSG.STXC
      6089**DCL      6090--REDEF
S_D.REMOTE_MSG.SUBFNCC
      6097**DCL      6098--REDEF
S_D.SCHEMA
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:14   
      5194**DCL      6413>>IF
S_D.SV
      5153**DCL      5174--REDEF
S_D$
      6405**DCL      5101--IMP-PTR  6413>>IF       6413>>IF       6413>>IF       6416>>ASSIGN   6416>>ASSIGN
TIC
        33**DCL      6415<<ASSIGN   6421>>IF       6426>>IF
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:15   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$IC2ST File=DDS$IC2ST.:E05TSI                              TUE 07/29/97 14:16 Page:16   
              MINI UREF LISTING

DDS$IC2ST      24**PROC
