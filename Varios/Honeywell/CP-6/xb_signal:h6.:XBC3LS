

11:12 JAN 06 '95 xb_signal_i6.:XBC3TSI                                     1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      /* The following values represent what the C compiler passes to the signal
    7         routine for these predefined signal handlers.  The awkward thing is that
    8         these values are full word pointers, not entry pointers. */
    9
   10      %SUB SIG_DFL = "ADDR(NIL)";
   11      %SUB SIG_ERR = "PINCRW (ADDR(NIL), 1)";
   12      %SUB SIG_IGN = "PINCRW (ADDR(NIL), 2)";
   13
   14      /* signal types */
   15
   16      %EQU SIGNONE   = -1; /* value in CURRENT_SIGNAL field when we are not
   17                              handling a signal */
   18      %EQU SIGABRT   = 1;
   19      %EQU SIGFPE    = 2;
   20      %EQU SIGILL    = 3;
   21      %EQU SIGINT    = 4;
   22      %EQU SIGSEGV   = 5;
   23      %EQU SIGTERM   = 6;
   24      %EQU SIGHUP    = 7;
   25      %EQU SIGALRM   = 8;
   26      %EQU SIGUSR1   = 9;
   27      %EQU SIGUSR2   = 10;
   28      %EQU LAST_SIGNAL = 10;
   29
   30      DCL 1 XB$ENV SYMREF ALIGNED,
   31            2 CURRENT_SIGNAL                           SBIN,
   32            2 EXCEPTION_NAME,
   33              3 SIZE                                   SBIN WORD ALIGNED,
   34              3 STRING                                 CHAR(80),
   35            2 ERROR_CODE                               ALIGNED,
   36              3 FCG                                    BIT(12) UNAL,
   37              3 MID                                    BIT(6) UNAL,
11:12 JAN 06 '95 xb_signal_i6.:XBC3TSI                                     2    
   38              3 MON                                    BIT(1) UNAL,
   39              3 ERR#                                   UBIN(14) UNAL,
   40              3 SEV                                    BIT(3) UNAL,
   41            2 DCB_NUMBER                               UBIN WORD ALIGNED,
   42            2 EXCEPTION_LOCATION                       UBIN(18) ALIGNED,
   43            2 SIGNAL_HANDLER (0:%LAST_SIGNAL)          EPTR,
   44            2 SIGNAL_RETURN_RESULT (0:%LAST_SIGNAL)    PTR,
   45            2 SIGNAL_SV_MASK       (0:%LAST_SIGNAL)  BIT(36),
   46            2 SIGNAL_SV_FLAGS      (0:%LAST_SIGNAL)  SBIN,
   47            2 SIGNAL_MASK          (0:35)    BIT(1) UNAL,
   48            2 SIGNAL_WAIT          (0:35)    BIT(1) UNAL;
   49
   50      /*    We need a mask that only allows certain signals to be masked
   51            Note that even though the array for SIGNAL_MASK and SIGNAL_WAIT
   52            are 36 bits long only 0-%LAST_SIGNAL-1 are used.              */
   53
   54      %EQU  BLOCKABLE_SIGNALS    =  '100101111100000000000000000000000000'B;
   55      %EQU  SV_RESETHAND         =  1;
   56
   57      DCL 1 SIGVEC   BASED,
   58            2  SV_HANDLER        EPTR,
   59            2  SV_HANDLER_AS_PTR REDEF SV_HANDLER  PTR,
   60            2  SV_MASK           BIT(36),
   61            2  SV_FLAGS          SBIN;

