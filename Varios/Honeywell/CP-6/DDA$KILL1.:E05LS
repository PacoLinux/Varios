VERSION E05

PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:1    
        1        1        /*M* DDA$KILL1 - Remove stored command from FIXCOM & VARCOM */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDA$KILL1
        9        9             PURPOSE: TO DELETE THE SPECIFIED STORED COMMAND
       10       10             DESCRIPTION: THE STORED COMMAND TO BE DELETED IS PASSED
       11       11             IN "S_D.KILL1". THE COMMAND'S SIZE IS DETERMINED.
       12       12             ALL STORED COMMANDS THAT FOLLOW THE ONE TO BE DELETED ARE PACKED
       13       13             OVER THE COMMAND TO BE DELETED. THE FIRST ATTACHMENT INDEX (FAI) OF
       14       14             EACH COMMAND THAT FOLLOWED THE DELETED COMMAND IS UPDATED TO REFLECT
       15       15             THE PRIOR PACKING. THE DELETED COMMAND'S ENTRY IN FIXCOM IS CLEARED.
       16       16             THE POINTER TO THE NEXT AVAILABLE FREE SPACE IN VARCOM IS
       17       17             UPDATED TO REFLECT THE SPACE JUST OBTAINED. S_D.FIXLAST IS
       18       18             SET TO REFLECT THE NEW LAST COMMAND. */
       19       19        /*D* NAME: DDA$KILL1
       20       20             CALL: CALL DDA$KILL1
       21       21             INTERFACE:
       22       22             ENVIRONMENT:
       23       23             INPUT: S_D.KILL1 - ID OF COMMAND TO BE DELETED.
       24       24             OUTPUT:
       25       25             SCRATCH:
       26       26             DESCRIPTION: THE STORED COMMAND TO BE DELETED IS PASSED
       27       27             IN "S_D.KILL1". THE COMMAND'S SIZE IS DETERMINED.
       28       28             ALL STORED COMMANDS THAT FOLLOW THE ONE TO BE DELETED ARE PACKED
       29       29             OVER THE COMMAND TO BE DELETED. THE FIRST ATTACHMENT INDEX (FAI) OF
       30       30             EACH COMMAND THAT FOLLOWED THE DELETED COMMAND IS UPDATED TO REFLECT
       31       31             THE PRIOR PACKING. THE DELETED COMMAND'S ENTRY IN FIXCOM IS CLEARED.
       32       32             THE POINTER TO THE NEXT AVAILABLE FREE SPACE IN VARCOM IS
       33       33             UPDATED TO REFLECT THE SPACE JUST OBTAINED. S_D.FIXLAST IS
       34       34             SET TO REFLECT THE NEW LAST COMMAND. */
       35       35                                                /**/
       36       36        DDA$KILL1: PROC;
       37       37                                                /**/
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:2    
       38       38    1   DCL KILL$ PTR;                          /* ADDR OF KILLED FIXCOM ENTRY */
       39       39    1   DCL DELFAI UBIN;                        /* KILLED .FAI */
       40       40    1   DCL DELTAL UBIN;                        /* KILLED .TAL */
       41       41    1   DCL ST$ PTR;                            /* TEMP ENTRY IN FIXCOM */
       42       42    1   DCL EN$ PTR;                            /* TEMP ENTRY IN FIXCOM */
       43       43    1   DCL CHARVAR CHAR(CVSIZE) BASED ALIGNED; /* FOR GARBAGE COLLECTION MOVE */
       44       44    1   DCL CVSIZE UBIN;                        /* FOR GARBAGE COLLECTION MOVE */
       45       45    1   DCL FATT$ PTR;
       46       46        %INCLUDE DD$BASED;
       47     1349        %FIXCOM (NAME=FXCM);
       48     1365        %INCLUDE XUH_MACRO_C;
       49     1449        %INCLUDE DD_SD_M;
       50     2785        %S_D;
       51     4103        %INCLUDE DD_SUBS_C;
       52     4374        %INCLUDE B$OBJECT_C;
       53     7804        %B$TREE_TABLE(NODE_NAME="B$TREE_NODE(0:0)");
       54     7862        %AT_FIRST;
       55     7890        %WHEN_FIRST (NAME=WHEN, STCLASS="BASED(FATT$)");
       56     7927        %INCLUDE CP_6;
       57     8008        %FPT_SSC (FPTN=FPT_SSC, STCLASS=CONSTANT,
       58     8009                  FLAGS="'0'B");
       59     8025        %FPT_SSC (FPTN=FPT$SSC, STCLASS=AUTO);
       60     8041    1   DCL DDT$TRACEOFF ENTRY;
       61     8042    1   DCL DUE$ERRMSG ENTRY;
       62     8043    1        IF S_D.FIXCOM.CMD(S_D.KILL1) = C_ONCALLS
       63     8044    2        THEN DO;       /* Must be done here since DDS$SCAN doesn't call kill */
       64     8045    2             CALL DDT$TRACEOFF;
       65     8046    2             S_D.TR$INFO = '0'B;
       66     8047    2             S_D.T$T = '0'B;
       67     8048    2           END;
       68     8049    1        IF S_D.FIXCOM.CMD(S_D.KILL1) = C_WHEN
       69     8050    2        THEN DO;
       70     8051    2             FATT$ = PINCRW(S_D.VARCOM$,S_D.FIXCOM.FAI(S_D.KILL1));
       71     8052    3             IF S_D.OVERLAID THEN DO;
       72     8053    3                  IF S_D.B$TREE$->B$TREE_NODE.FLGS.NOW_IN(FATT$->AT_FIRST.NODE)
       73     8054    3                  THEN S_D.FIXCOM.NOT_IN(S_D.KILL1) = '0'B;
       74     8055    4                  ELSE DO;
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:3    
       75     8056    4                       S_D.FIXCOM.NOT_IN(S_D.KILL1) = '1'B;
       76     8057    4                       GOTO ENDREST;       /* NOT IN, NOTHING ELSE TO DO */
       77     8058    4                     END;
       78     8059    3                END;
       79     8060    2             IF S_D.FIXCOM.INACTIVE(S_D.KILL1) THEN GOTO ENDREST;
       80     8061    2             FPT$SSC = FPT_SSC;
       81     8062    2             FPT$SSC.V.VPNO# = WHEN.START_PAGE;
       82     8063    2             FPT$SSC.V_ = VECTOR(FPT$SSC.V);
       83     8064    2             FPT$SSC.V.NUMPGS# = 1+ WHEN.END_PAGE - WHEN.START_PAGE;
       84     8065    2             CALL M$SSC (FPT$SSC) ALTRET(OOPS);
       85     8066    2           END;
       86     8067    1   ENDREST: ;
       87     8068                                                /* INITIALIZATION */
       88     8069    1        KILL$ = ADDR( S_D.FIXCOM( S_D.KILL1 ) );
       89     8070    1        DELFAI = KILL$ -> FXCM.FAI;
       90     8071    1        DELTAL = KILL$ -> FXCM.TAL;
       91     8072    1        ST$ = ADDR( S_D.FIXCOM( 1 ) );
       92     8073    1        EN$ = ADDR( S_D.FIXCOM( S_D.FIXLAST ) );
       93     8074                                                /* CLEANUP FIXCOM INDEX POINTERS
       94     8075                                                    & GET NEW S_D.FIXLAST */
       95     8076    2        DO WHILE ( ST$ <= EN$ );
       96     8077    2             IF ( ST$ -> FXCM.CMD ~= 0 )
       97     8078    3             THEN DO;
       98     8079    3                  S_D.FIXLAST = POFFW( ST$, ADDR( S_D.FIXCOM ) ) / SIZEW( FXCM );
       99     8080    3                  IF ( ST$ -> FXCM.FAI > DELFAI )
      100     8081    3                  THEN ST$ -> FXCM.FAI = ST$ -> FXCM.FAI - DELTAL;
      101     8082    3                END;
      102     8083    2             ST$ = PINCRW( ST$, SIZEW( FXCM ) );
      103     8084    2           END;
      104     8085                                                /* MOVE THE WHOLE MAGILLA UP */
      105     8086    1        CVSIZE = POFFC( S_D.VARNEXT$, PINCRW( S_D.VARCOM$, DELFAI + DELTAL ) );
      106     8087    1        PINCRW( S_D.VARCOM$, DELFAI ) -> CHARVAR = PINCRW( S_D.VARCOM$, DELFAI + DELTAL
              8087                 ) -> CHARVAR;
      107     8088                                                /* FINAL CLEANUP */
      108     8089    1        KILL$ -> FXCM = '0'B;
      109     8090    1        S_D.VARNEXT$ = PINCRW( S_D.VARNEXT$, -DELTAL );
      110     8091                                                /* Check for suicide kill */
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:4    
      111     8092    1        IF S_D.IXFIX = S_D.KILL1
      112     8093    2        THEN DO;
      113     8094    2             S_D.FAULTCMD$ = ADDR(NIL);
      114     8095    2             S_D.ENTRYCMD$ = ADDR(NIL);
      115     8096    2           END;
      116     8097                                                /**/
      117     8098    1        RETURN;
      118     8099    1   OOPS: ;
      119     8100    1        CALL DUE$ERRMSG;
      120     8101    1        RETURN;
      121     8102                                                /**/
      122     8103    1   END DDA$KILL1;

PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:5    
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDA$KILL1.

   Procedure DDA$KILL1 requires 180 words for executable code.
   Procedure DDA$KILL1 requires 16 words of local(AUTO) storage.

    No errors detected in file DDA$KILL1.:E05TSI    .

PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:6    

 Object Unit name= DDA$KILL1                                  File name= DDA$KILL1.:E05TOU
 UTS= JUL 29 '97 13:32:49.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      4      4  DDA$KILL1
    2   Proc  even  none   180    264  DDA$KILL1
    3  RoData even  none     2      2  DDA$KILL1

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  DDA$KILL1

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 DDT$TRACEOFF
         yes           Std       0 DUE$ERRMSG
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  M$UC                                  B_VECTNIL
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:7    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:8    


        1        1        /*M* DDA$KILL1 - Remove stored command from FIXCOM & VARCOM */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDA$KILL1
        9        9             PURPOSE: TO DELETE THE SPECIFIED STORED COMMAND
       10       10             DESCRIPTION: THE STORED COMMAND TO BE DELETED IS PASSED
       11       11             IN "S_D.KILL1". THE COMMAND'S SIZE IS DETERMINED.
       12       12             ALL STORED COMMANDS THAT FOLLOW THE ONE TO BE DELETED ARE PACKED
       13       13             OVER THE COMMAND TO BE DELETED. THE FIRST ATTACHMENT INDEX (FAI) OF
       14       14             EACH COMMAND THAT FOLLOWED THE DELETED COMMAND IS UPDATED TO REFLECT
       15       15             THE PRIOR PACKING. THE DELETED COMMAND'S ENTRY IN FIXCOM IS CLEARED.
       16       16             THE POINTER TO THE NEXT AVAILABLE FREE SPACE IN VARCOM IS
       17       17             UPDATED TO REFLECT THE SPACE JUST OBTAINED. S_D.FIXLAST IS
       18       18             SET TO REFLECT THE NEW LAST COMMAND. */
       19       19        /*D* NAME: DDA$KILL1
       20       20             CALL: CALL DDA$KILL1
       21       21             INTERFACE:
       22       22             ENVIRONMENT:
       23       23             INPUT: S_D.KILL1 - ID OF COMMAND TO BE DELETED.
       24       24             OUTPUT:
       25       25             SCRATCH:
       26       26             DESCRIPTION: THE STORED COMMAND TO BE DELETED IS PASSED
       27       27             IN "S_D.KILL1". THE COMMAND'S SIZE IS DETERMINED.
       28       28             ALL STORED COMMANDS THAT FOLLOW THE ONE TO BE DELETED ARE PACKED
       29       29             OVER THE COMMAND TO BE DELETED. THE FIRST ATTACHMENT INDEX (FAI) OF
       30       30             EACH COMMAND THAT FOLLOWED THE DELETED COMMAND IS UPDATED TO REFLECT
       31       31             THE PRIOR PACKING. THE DELETED COMMAND'S ENTRY IN FIXCOM IS CLEARED.
       32       32             THE POINTER TO THE NEXT AVAILABLE FREE SPACE IN VARCOM IS
       33       33             UPDATED TO REFLECT THE SPACE JUST OBTAINED. S_D.FIXLAST IS
       34       34             SET TO REFLECT THE NEW LAST COMMAND. */
       35       35                                                /**/
       36       36        DDA$KILL1: PROC;
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:9    

     36  2 000000   000000 700200 xent  DDA$KILL1    TSX0  ! X66_AUTO_0
         2 000001   000020 000000                    ZERO    16,0

       37       37                                                /**/
       38       38    1   DCL KILL$ PTR;                          /* ADDR OF KILLED FIXCOM ENTRY */
       39       39    1   DCL DELFAI UBIN;                        /* KILLED .FAI */
       40       40    1   DCL DELTAL UBIN;                        /* KILLED .TAL */
       41       41    1   DCL ST$ PTR;                            /* TEMP ENTRY IN FIXCOM */
       42       42    1   DCL EN$ PTR;                            /* TEMP ENTRY IN FIXCOM */
       43       43    1   DCL CHARVAR CHAR(CVSIZE) BASED ALIGNED; /* FOR GARBAGE COLLECTION MOVE */
       44       44    1   DCL CVSIZE UBIN;                        /* FOR GARBAGE COLLECTION MOVE */
       45       45    1   DCL FATT$ PTR;
       46       46        %INCLUDE DD$BASED;
       47     1349        %FIXCOM (NAME=FXCM);
       48     1365        %INCLUDE XUH_MACRO_C;
       49     1449        %INCLUDE DD_SD_M;
       50     2785        %S_D;
       51     4103        %INCLUDE DD_SUBS_C;
       52     4374        %INCLUDE B$OBJECT_C;
       53     7804        %B$TREE_TABLE(NODE_NAME="B$TREE_NODE(0:0)");
       54     7862        %AT_FIRST;
       55     7890        %WHEN_FIRST (NAME=WHEN, STCLASS="BASED(FATT$)");
       56     7927        %INCLUDE CP_6;
       57     8008        %FPT_SSC (FPTN=FPT_SSC, STCLASS=CONSTANT,
       58     8009                  FLAGS="'0'B");
       59     8025        %FPT_SSC (FPTN=FPT$SSC, STCLASS=AUTO);
       60     8041    1   DCL DDT$TRACEOFF ENTRY;
       61     8042    1   DCL DUE$ERRMSG ENTRY;
       62     8043    1        IF S_D.FIXCOM.CMD(S_D.KILL1) = C_ONCALLS

   8043  2 000002   000000 470400 xsym               LDP0    S_D$
         2 000003   000063 236100                    LDQ     51,,PR0
         2 000004   000003 402007                    MPY     3,DL
         2 000005   000001 736000                    QLS     1
         2 000006   001212 236106                    LDQ     650,QL,PR0
         2 000007   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:10   
         2 000010   065000 116003                    CMPQ    27136,DU
         2 000011   000024 601000 2                  TNZ     s:8049

       63     8044    2        THEN DO;       /* Must be done here since DDS$SCAN doesn't call kill */

       64     8045    2             CALL DDT$TRACEOFF;

   8045  2 000012   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000013   000000 701000 xent               TSX1    DDT$TRACEOFF
         2 000014   000000 011000                    NOP     0

       65     8046    2             S_D.TR$INFO = '0'B;

   8046  2 000015   000000 470400 xsym               LDP0    S_D$
         2 000016   000100 100400                    MLR     fill='000'O
         2 000017   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000020   004627 000074                    ADSC9   2455,,PR0                cn=0,n=60

       66     8047    2             S_D.T$T = '0'B;

   8047  2 000021   000100 100400                    MLR     fill='000'O
         2 000022   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000023   004707 000034                    ADSC9   2503,,PR0                cn=0,n=28

       67     8048    2           END;

       68     8049    1        IF S_D.FIXCOM.CMD(S_D.KILL1) = C_WHEN

   8049  2 000024   000063 236100                    LDQ     51,,PR0
         2 000025   000003 402007                    MPY     3,DL
         2 000026   000001 736000                    QLS     1
         2 000027   001212 236106                    LDQ     650,QL,PR0
         2 000030   777000 376003                    ANQ     -512,DU
         2 000031   103000 116003                    CMPQ    34304,DU
         2 000032   000124 601000 2                  TNZ     ENDREST

       69     8050    2        THEN DO;
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:11   

       70     8051    2             FATT$ = PINCRW(S_D.VARCOM$,S_D.FIXCOM.FAI(S_D.KILL1));

   8051  2 000033   000063 236100                    LDQ     51,,PR0
         2 000034   000003 402007                    MPY     3,DL
         2 000035   000001 736000                    QLS     1
         2 000036   001214 720106                    LXL0    652,QL,PR0
         2 000037   004622 471500                    LDP1    2450,,PR0
         2 000040   100000 633510                    EPPR3   0,X0,PR1
         2 000041   200011 453500                    STP3    FATT$,,AUTO

       71     8052    3             IF S_D.OVERLAID THEN DO;

   8052  2 000042   004764 234100                    SZN     2548,,PR0
         2 000043   000070 605000 2                  TPL     s:8060

       72     8053    3                  IF S_D.B$TREE$->B$TREE_NODE.FLGS.NOW_IN(FATT$->AT_FIRST.NODE)

   8053  2 000044   004767 474500                    LDP4    2551,,PR0
         2 000045   300003 236100                    LDQ     3,,PR3
         2 000046   000022 772000                    QRL     18
         2 000047   000006 402007                    MPY     6,DL
         2 000050   400001 234106                    SZN     1,QL,PR4
         2 000051   000061 605000 2                  TPL     s:8056

       73     8054    3                  THEN S_D.FIXCOM.NOT_IN(S_D.KILL1) = '0'B;

   8054  2 000052   000063 236100                    LDQ     51,,PR0
         2 000053   000003 402007                    MPY     3,DL
         2 000054   000001 736000                    QLS     1
         2 000055   000000 620006                    EAX0    0,QL
         2 000056   000000 236000 3                  LDQ     0
         2 000057   001212 356110                    ANSQ    650,X0,PR0
         2 000060   000070 710000 2                  TRA     s:8060

       74     8055    4                  ELSE DO;

PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:12   
       75     8056    4                       S_D.FIXCOM.NOT_IN(S_D.KILL1) = '1'B;

   8056  2 000061   000063 236100                    LDQ     51,,PR0
         2 000062   000003 402007                    MPY     3,DL
         2 000063   000001 736000                    QLS     1
         2 000064   000000 620006                    EAX0    0,QL
         2 000065   000100 236003                    LDQ     64,DU
         2 000066   001212 256110                    ORSQ    650,X0,PR0

       76     8057    4                       GOTO ENDREST;       /* NOT IN, NOTHING ELSE TO DO */

   8057  2 000067   000124 710000 2                  TRA     ENDREST

       77     8058    4                     END;
       78     8059    3                END;
       79     8060    2             IF S_D.FIXCOM.INACTIVE(S_D.KILL1) THEN GOTO ENDREST;

   8060  2 000070   000063 236100                    LDQ     51,,PR0
         2 000071   000003 402007                    MPY     3,DL
         2 000072   000001 736000                    QLS     1
         2 000073   001212 236106                    LDQ     650,QL,PR0
         2 000074   000400 316003                    CANQ    256,DU
         2 000075   000124 601000 2                  TNZ     ENDREST

       80     8061    2             FPT$SSC = FPT_SSC;

   8061  2 000076   000100 100400                    MLR     fill='000'O
         2 000077   000000 000020 1                  ADSC9   FPT_SSC                  cn=0,n=16
         2 000100   200012 000020                    ADSC9   FPT$SSC,,AUTO            cn=0,n=16

       81     8062    2             FPT$SSC.V.VPNO# = WHEN.START_PAGE;

   8062  2 000101   300020 220100                    LDX0    16,,PR3
         2 000102   200015 440100                    SXL0    FPT$SSC+3,,AUTO

       82     8063    2             FPT$SSC.V_ = VECTOR(FPT$SSC.V);

PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:13   
   8063  2 000103   000001 235000 3                  LDA     1
         2 000104   200016 452500                    STP2    FPT$SSC+4,,AUTO
         2 000105   200016 236100                    LDQ     FPT$SSC+4,,AUTO
         2 000106   000014 036003                    ADLQ    12,DU
         2 000107   200012 757100                    STAQ    FPT$SSC,,AUTO

       83     8064    2             FPT$SSC.V.NUMPGS# = 1+ WHEN.END_PAGE - WHEN.START_PAGE;

   8064  2 000110   300020 236100                    LDQ     16,,PR3
         2 000111   000022 772000                    QRL     18
         2 000112   200016 756100                    STQ     FPT$SSC+4,,AUTO
         2 000113   300020 236100                    LDQ     16,,PR3
         2 000114   777777 376007                    ANQ     -1,DL
         2 000115   200016 136100                    SBLQ    FPT$SSC+4,,AUTO
         2 000116   000001 621006                    EAX1    1,QL
         2 000117   200015 741100                    STX1    FPT$SSC+3,,AUTO

       84     8065    2             CALL M$SSC (FPT$SSC) ALTRET(OOPS);

   8065  2 000120   200012 630500                    EPPR0   FPT$SSC,,AUTO
         2 000121   430013 713400                    CLIMB   alt,+12299
         2 000122   400000 401760                    pmme    nvectors=1
         2 000123   000260 702000 2                  TSX2    OOPS

       85     8066    2           END;

   8065  2 000124                       ENDREST      null
       86     8067    1   ENDREST: ;
       87     8068                                                /* INITIALIZATION */
       88     8069    1        KILL$ = ADDR( S_D.FIXCOM( S_D.KILL1 ) );

   8069  2 000124   000000 470400 xsym               LDP0    S_D$
         2 000125   000063 236100                    LDQ     51,,PR0
         2 000126   000003 402007                    MPY     3,DL
         2 000127   000023 736000                    QLS     19
         2 000130   001212 036003                    ADLQ    650,DU
         2 000131   000000 036000 xsym               ADLQ    S_D$
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:14   
         2 000132   200003 756100                    STQ     KILL$,,AUTO

       89     8070    1        DELFAI = KILL$ -> FXCM.FAI;

   8070  2 000133   200003 471500                    LDP1    KILL$,,AUTO
         2 000134   100002 236100                    LDQ     2,,PR1
         2 000135   777777 376007                    ANQ     -1,DL
         2 000136   200004 756100                    STQ     DELFAI,,AUTO

       90     8071    1        DELTAL = KILL$ -> FXCM.TAL;

   8071  2 000137   100000 236100                    LDQ     0,,PR1
         2 000140   777777 376007                    ANQ     -1,DL
         2 000141   200005 756100                    STQ     DELTAL,,AUTO

       91     8072    1        ST$ = ADDR( S_D.FIXCOM( 1 ) );

   8072  2 000142   000000 236000 xsym               LDQ     S_D$
         2 000143   001220 036003                    ADLQ    656,DU
         2 000144   200006 756100                    STQ     ST$,,AUTO

       92     8073    1        EN$ = ADDR( S_D.FIXCOM( S_D.FIXLAST ) );

   8073  2 000145   000047 236100                    LDQ     39,,PR0
         2 000146   000003 402007                    MPY     3,DL
         2 000147   000023 736000                    QLS     19
         2 000150   001212 036003                    ADLQ    650,DU
         2 000151   000000 036000 xsym               ADLQ    S_D$
         2 000152   200007 756100                    STQ     EN$,,AUTO

       93     8074                                                /* CLEANUP FIXCOM INDEX POINTERS
       94     8075                                                    & GET NEW S_D.FIXLAST */
       95     8076    2        DO WHILE ( ST$ <= EN$ );

   8076  2 000153   200006 116100                    CMPQ    ST$,,AUTO
         2 000154   000211 602000 2                  TNC     s:8086

PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:15   
       96     8077    2             IF ( ST$ -> FXCM.CMD ~= 0 )

   8077  2 000155   200006 470500                    LDP0    ST$,,AUTO
         2 000156   000000 236100                    LDQ     0,,PR0
         2 000157   777000 316003                    CANQ    -512,DU
         2 000160   000203 600000 2                  TZE     s:8083

       97     8078    3             THEN DO;

       98     8079    3                  S_D.FIXLAST = POFFW( ST$, ADDR( S_D.FIXCOM ) ) / SIZEW( FXCM );

   8079  2 000161   000000 236000 xsym               LDQ     S_D$
         2 000162   001212 036003                    ADLQ    650,DU
         2 000163   000022 772000                    QRL     18
         2 000164   200016 756100                    STQ     FPT$SSC+4,,AUTO
         2 000165   200006 236100                    LDQ     ST$,,AUTO
         2 000166   000022 772000                    QRL     18
         2 000167   200016 136100                    SBLQ    FPT$SSC+4,,AUTO
         2 000170   000006 506007                    DIV     6,DL
         2 000171   000000 471400 xsym               LDP1    S_D$
         2 000172   100047 756100                    STQ     39,,PR1

       99     8080    3                  IF ( ST$ -> FXCM.FAI > DELFAI )

   8080  2 000173   000002 236100                    LDQ     2,,PR0
         2 000174   777777 376007                    ANQ     -1,DL
         2 000175   200004 116100                    CMPQ    DELFAI,,AUTO
         2 000176   000203 602000 2                  TNC     s:8083
         2 000177   000203 600000 2                  TZE     s:8083

      100     8081    3                  THEN ST$ -> FXCM.FAI = ST$ -> FXCM.FAI - DELTAL;

   8081  2 000200   200005 136100                    SBLQ    DELTAL,,AUTO
         2 000201   000000 620006                    EAX0    0,QL
         2 000202   000002 440100                    SXL0    2,,PR0

      101     8082    3                END;
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:16   

      102     8083    2             ST$ = PINCRW( ST$, SIZEW( FXCM ) );

   8083  2 000203   200006 236100                    LDQ     ST$,,AUTO
         2 000204   000006 036003                    ADLQ    6,DU
         2 000205   200006 756100                    STQ     ST$,,AUTO

      103     8084    2           END;

   8084  2 000206   200007 116100                    CMPQ    EN$,,AUTO
         2 000207   000155 602000 2                  TNC     s:8077
         2 000210   000155 600000 2                  TZE     s:8077

      104     8085                                                /* MOVE THE WHOLE MAGILLA UP */
      105     8086    1        CVSIZE = POFFC( S_D.VARNEXT$, PINCRW( S_D.VARCOM$, DELFAI + DELTAL ) );

   8086  2 000211   200004 236100                    LDQ     DELFAI,,AUTO
         2 000212   200005 036100                    ADLQ    DELTAL,,AUTO
         2 000213   000000 470400 xsym               LDP0    S_D$
         2 000214   004622 471500                    LDP1    2450,,PR0
         2 000215   100000 633506                    EPPR3   0,QL,PR1
         2 000216   200016 453500                    STP3    FPT$SSC+4,,AUTO
         2 000217   200016 236100                    LDQ     FPT$SSC+4,,AUTO
         2 000220   000020 772000                    QRL     16
         2 000221   200017 756100                    STQ     FPT$SSC+5,,AUTO
         2 000222   000033 236100                    LDQ     27,,PR0
         2 000223   000020 772000                    QRL     16
         2 000224   200017 136100                    SBLQ    FPT$SSC+5,,AUTO
         2 000225   200010 756100                    STQ     CVSIZE,,AUTO

      106     8087    1       PINCRW( S_D.VARCOM$, DELFAI ) -> CHARVAR = PINCRW( S_D.VARCOM$, DELFAI + DELTAL
              8087                 ) -> CHARVAR;

   8087  2 000226   200004 236100                    LDQ     DELFAI,,AUTO
         2 000227   200005 036100                    ADLQ    DELTAL,,AUTO
         2 000230   000002 736000                    QLS     2
         2 000231   200004 235100                    LDA     DELFAI,,AUTO
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:17   
         2 000232   000002 735000                    ALS     2
         2 000233   200010 720100                    LXL0    CVSIZE,,AUTO
         2 000234   040145 100546                    MLR     fill='040'O
         2 000235   100000 000010                    ADSC9   0,Q,PR1                  cn=0,n=*X0
         2 000236   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0

      107     8088                                                /* FINAL CLEANUP */
      108     8089    1        KILL$ -> FXCM = '0'B;

   8089  2 000237   200003 471500                    LDP1    KILL$,,AUTO
         2 000240   000100 100400                    MLR     fill='000'O
         2 000241   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000242   100000 000030                    ADSC9   0,,PR1                   cn=0,n=24

      109     8090    1        S_D.VARNEXT$ = PINCRW( S_D.VARNEXT$, -DELTAL );

   8090  2 000243   000033 473500                    LDP3    27,,PR0
         2 000244   200005 721100                    LXL1    DELTAL,,AUTO
         2 000245   777777 621011                    EAX1    -1,X1
         2 000246   777777 661003                    ERX1    -1,DU
         2 000247   300000 634511                    EPPR4   0,X1,PR3
         2 000250   000033 454500                    STP4    27,,PR0

      110     8091                                                /* Check for suicide kill */
      111     8092    1        IF S_D.IXFIX = S_D.KILL1

   8092  2 000251   000015 236100                    LDQ     13,,PR0
         2 000252   000063 116100                    CMPQ    51,,PR0
         2 000253   000257 601000 2                  TNZ     s:8098

      112     8093    2        THEN DO;

      113     8094    2             S_D.FAULTCMD$ = ADDR(NIL);

   8094  2 000254   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000255   000004 756100                    STQ     4,,PR0

PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:18   
      114     8095    2             S_D.ENTRYCMD$ = ADDR(NIL);

   8095  2 000256   005203 756100                    STQ     2691,,PR0

      115     8096    2           END;

      116     8097                                                /**/
      117     8098    1        RETURN;

   8098  2 000257   000000 702200 xent               TSX2  ! X66_ARET

   8092  2 000260                       OOPS         null
      118     8099    1   OOPS: ;
      119     8100    1        CALL DUE$ERRMSG;

   8100  2 000260   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000261   000000 701000 xent               TSX1    DUE$ERRMSG
         2 000262   000000 011000                    NOP     0

      120     8101    1        RETURN;

   8101  2 000263   000000 702200 xent               TSX2  ! X66_ARET

FPT_SSC
 Sect OctLoc
   1     000   000001 777640   000002 006000   000000 000000   000000 000000    ................

(unnamed)
 Sect OctLoc
   3     000   777677 777777   000001 777640                                    ........
      121     8102                                                /**/
      122     8103    1   END DDA$KILL1;

PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:19   
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDA$KILL1.

   Procedure DDA$KILL1 requires 180 words for executable code.
   Procedure DDA$KILL1 requires 16 words of local(AUTO) storage.

    No errors detected in file DDA$KILL1.:E05TSI    .
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:20   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:21   
          MINI XREF LISTING

AT_FIRST.NODE
      7878**DCL      8053>>IF
AT_FIRST.UNUSED
      7867**DCL      7868--REDEF    7872--REDEF
B$TREE_NODE.FLGS.NOW_IN
      7827**DCL      8053>>IF
CHARVAR
        43**DCL      8087<<ASSIGN   8087>>ASSIGN
CVSIZE
        44**DCL        43--IMP-SIZ  8086<<ASSIGN   8087>>ASSIGN   8087>>ASSIGN
DDT$TRACEOFF
      8041**DCL-ENT  8045--CALL
DELFAI
        39**DCL      8070<<ASSIGN   8080>>IF       8086>>ASSIGN   8087>>ASSIGN   8087>>ASSIGN
DELTAL
        40**DCL      8071<<ASSIGN   8081>>ASSIGN   8086>>ASSIGN   8087>>ASSIGN   8090>>ASSIGN
DUE$ERRMSG
      8042**DCL-ENT  8100--CALL
EN$
        42**DCL      8073<<ASSIGN   8076>>DOWHILE
ENDREST
      8065**LABEL    8057--GOTO     8060--GOTO
FATT$
        45**DCL      7891--IMP-PTR  8051<<ASSIGN   8053>>IF       8062>>ASSIGN   8064>>ASSIGN   8064>>ASSIGN
FPT$SSC
      8036**DCL      8061<<ASSIGN   8065<>CALL
FPT$SSC.V
      8036**DCL      8063--ASSIGN
FPT$SSC.V.NUMPGS#
      8038**DCL      8064<<ASSIGN
FPT$SSC.V.VPNO#
      8038**DCL      8062<<ASSIGN
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:22   
FPT$SSC.V_
      8036**DCL      8063<<ASSIGN
FPT_SSC
      8020**DCL      8061>>ASSIGN
FPT_SSC.V
      8020**DCL      8020--DCLINIT
FXCM
      1350**DCL      8079--ASSIGN   8083--ASSIGN   8089<<ASSIGN
FXCM.CMD
      1351**DCL      8077>>IF
FXCM.FAI
      1361**DCL      8070>>ASSIGN   8080>>IF       8081<<ASSIGN   8081>>ASSIGN
FXCM.TAL
      1358**DCL      8071>>ASSIGN
KILL$
        38**DCL      8069<<ASSIGN   8070>>ASSIGN   8071>>ASSIGN   8089>>ASSIGN
M$SSC
      7975**DCL-ENT  8065--CALL
OOPS
      8092**LABEL    8065--CALLALT
ST$
        41**DCL      8072<<ASSIGN   8076>>DOWHILE  8077>>IF       8079>>ASSIGN   8080>>IF       8081>>ASSIGN
      8081>>ASSIGN   8083<<ASSIGN   8083>>ASSIGN
S_D.B$TREE$
      3457**DCL      8053>>IF
S_D.CURRENT_CHANNEL
      3737**DCL      3739--REDEF
S_D.DEBUGA
      2889**DCL      2891--REDEF
S_D.EIS
      3847**DCL      3876--REDEF
S_D.ENTRYCMD$
      3589**DCL      8095<<ASSIGN
S_D.FAULTCMD$
      2804**DCL      8094<<ASSIGN
S_D.FIXCOM
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:23   
      3243**DCL      8069--ASSIGN   8072--ASSIGN   8073--ASSIGN   8079--ASSIGN
S_D.FIXCOM.CMD
      3245**DCL      8043>>IF       8049>>IF
S_D.FIXCOM.FAI
      3255**DCL      8051>>ASSIGN
S_D.FIXCOM.INACTIVE
      3246**DCL      8060>>IF
S_D.FIXCOM.NOT_IN
      3248**DCL      8054<<ASSIGN   8056<<ASSIGN
S_D.FIXLAST
      2881**DCL      8073>>ASSIGN   8079<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      3780**DCL      3781--REDEF    3795--REDEF
S_D.IXFIX
      2822**DCL      8092>>IF
S_D.JDE
      3394**DCL      3395--REDEF
S_D.KILL1
      2907**DCL      8043>>IF       8049>>IF       8051>>ASSIGN   8054>>ASSIGN   8056>>ASSIGN   8060>>IF
      8069>>ASSIGN   8092>>IF
S_D.L$.VALUE
      2947**DCL      2953--REDEF    2961--REDEF    2964--REDEF    2967--REDEF    2970--REDEF
S_D.L$.VALUE.L
      2948**DCL      2949--REDEF    2950--REDEF
S_D.L6_MESSAGE_BUF
      3801**DCL      3803--REDEF
S_D.OUTPUT
      3767**DCL      3769--REDEF
S_D.OVERLAID
      3451**DCL      8052>>IF
S_D.REMOTE_MSG.FNCC
      3786**DCL      3787--REDEF
S_D.REMOTE_MSG.STXC
      3782**DCL      3783--REDEF
S_D.REMOTE_MSG.SUBFNCC
      3790**DCL      3791--REDEF
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:24   
S_D.SV
      2846**DCL      2867--REDEF
S_D.T$T
      3348**DCL      8047<<ASSIGN
S_D.TR$INFO
      3269**DCL      8046<<ASSIGN
S_D.VARCOM$
      3258**DCL      8051>>ASSIGN   8086>>ASSIGN   8087>>ASSIGN   8087>>ASSIGN
S_D.VARNEXT$
      2844**DCL      8086>>ASSIGN   8090<<ASSIGN   8090>>ASSIGN
S_D$
      4098**DCL      2794--IMP-PTR  8043>>IF       8043>>IF       8046>>ASSIGN   8047>>ASSIGN   8049>>IF
      8049>>IF       8051>>ASSIGN   8051>>ASSIGN   8051>>ASSIGN   8052>>IF       8053>>IF       8054>>ASSIGN
      8054>>ASSIGN   8056>>ASSIGN   8056>>ASSIGN   8060>>IF       8060>>IF       8069>>ASSIGN   8069>>ASSIGN
      8072>>ASSIGN   8073>>ASSIGN   8073>>ASSIGN   8079>>ASSIGN   8079>>ASSIGN   8086>>ASSIGN   8086>>ASSIGN
      8087>>ASSIGN   8087>>ASSIGN   8090>>ASSIGN   8090>>ASSIGN   8092>>IF       8092>>IF       8094>>ASSIGN
      8095>>ASSIGN
WHEN.END_PAGE
      7925**DCL      8064>>ASSIGN
WHEN.START_PAGE
      7924**DCL      8062>>ASSIGN   8064>>ASSIGN
WHEN.U.APT
      7897**DCL      7898--REDEF
WHEN.UNUSED
      7895**DCL      7896--REDEF
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:25   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:26   
              MINI UREF LISTING

B$TREE_HEADER    7805**DCL
DDA$KILL1      36**PROC
M$ACCT    7953**DCL-ENT
M$ACTIVATE    7956**DCL-ENT
M$ALIB    7949**DCL-ENT
M$ASUSER    7951**DCL-ENT
M$ATTACH    7958**DCL-ENT
M$BADPP    7976**DCL-ENT
M$CGCTL    7957**DCL-ENT
M$CGINFO    7957**DCL-ENT
M$CHECK    7938**DCL-ENT
M$CHGUNIT    7996**DCL-ENT
M$CLOSE    7936**DCL-ENT
M$CLRSTK    7994**DCL-ENT
M$CMDVAR    8005**DCL-ENT
M$CONFIG    7966**DCL-ENT
M$CORRES    7941**DCL-ENT
M$CPEXIT    7950**DCL-ENT
M$CVM    7974**DCL-ENT
M$CVOL    7939**DCL-ENT
M$DCLFLD    7966**DCL-ENT
M$DEACTIVATE    7956**DCL-ENT
M$DELREC    7938**DCL-ENT
M$DEQ    8003**DCL-ENT
M$DETACH    7958**DCL-ENT
M$DEVICE    7940**DCL-ENT
M$DISPLAY    8003**DCL-ENT
M$DISPRES    7943**DCL-ENT
M$DLIB    7949**DCL-ENT
M$DRIBBLE    7966**DCL-ENT
M$DRTN    7994**DCL-ENT
M$DSUSER    7951**DCL-ENT
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:27   
M$ENQ    8002**DCL-ENT
M$EOM    7961**DCL-ENT
M$ERASE    7967**DCL-ENT
M$ERR    7948**DCL-ENT
M$ERRMSG    7999**DCL-ENT
M$EVENT    7991**DCL-ENT
M$EXHUME    8000**DCL-ENT
M$EXIT    7948**DCL-ENT
M$EXTEND    7940**DCL-ENT
M$FDP    7972**DCL-ENT
M$FDS    7971**DCL-ENT
M$FEBOOT    7964**DCL-ENT
M$FECTL    7965**DCL-ENT
M$FEDUMP    7964**DCL-ENT
M$FID    7999**DCL-ENT
M$FINDPROC    7953**DCL-ENT
M$FSUSER    7951**DCL-ENT
M$FVP    7973**DCL-ENT
M$FWCG    7957**DCL-ENT
M$GBPL    7977**DCL-ENT
M$GDDL    7973**DCL-ENT
M$GDP    7972**DCL-ENT
M$GDS    7971**DCL-ENT
M$GETDCB    7942**DCL-ENT
M$GETMOUSE    7982**DCL-ENT
M$GETPM    7983**DCL-ENT
M$GJOB    8001**DCL-ENT
M$GLINEATTR    7961**DCL-ENT
M$GOODPP    7976**DCL-ENT
M$GPLATEN    7969**DCL-ENT
M$GPROMPT    7968**DCL-ENT
M$GTRMATTR    7962**DCL-ENT
M$GTRMCTL    7960**DCL-ENT
M$GTRMTAB    7963**DCL-ENT
M$GVP    7972**DCL-ENT
M$HELP    7999**DCL-ENT
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:28   
M$INT    7991**DCL-ENT
M$INTRTN    7952**DCL-ENT
M$IOQ    7987**DCL-ENT
M$JOBSTATS    8001**DCL-ENT
M$KEYIN    7941**DCL-ENT
M$LDEV    7936**DCL-ENT
M$LDTRC    7949**DCL-ENT
M$LIMIT    7942**DCL-ENT
M$LINES    7941**DCL-ENT
M$LINK    7948**DCL-ENT
M$MADMUCK    7944**DCL-ENT
M$MAKUSER    7975**DCL-ENT
M$MBS    7943**DCL-ENT
M$MDFFLD    7967**DCL-ENT
M$MERC    7992**DCL-ENT
M$MERCS    7993**DCL-ENT
M$MIRROR    7987**DCL-ENT
M$MONINFO    8004**DCL-ENT
M$MPL    7977**DCL-ENT
M$NODEINFO    7968**DCL-ENT
M$NXTUSR    8002**DCL-ENT
M$OCMSG    8000**DCL-ENT
M$OLAY    7948**DCL-ENT
M$OPEN    7936**DCL-ENT
M$PAS    7977**DCL-ENT
M$PATHCON    8000**DCL-ENT
M$PDS    7971**DCL-ENT
M$PFIL    7938**DCL-ENT
M$PLATEN    7962**DCL-ENT
M$PRECORD    7940**DCL-ENT
M$PROCNAME    7953**DCL-ENT
M$PROFILE    7964**DCL-ENT
M$PROMPT    7960**DCL-ENT
M$RACST    7944**DCL-ENT
M$RDSYSLOG    7985**DCL-ENT
M$READ    7937**DCL-ENT
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:29   
M$RELDCB    7942**DCL-ENT
M$RELRES    7943**DCL-ENT
M$RELSTARF    7945**DCL-ENT
M$REM    7945**DCL-ENT
M$RENV    7992**DCL-ENT
M$REQUIRE    7944**DCL-ENT
M$RETRY    7993**DCL-ENT
M$RETRYS    7993**DCL-ENT
M$REW    7939**DCL-ENT
M$RLSFLD    7967**DCL-ENT
M$RPRIV    7995**DCL-ENT
M$RSPP    7974**DCL-ENT
M$RSWITCH    7996**DCL-ENT
M$RUE    8002**DCL-ENT
M$SAD    7975**DCL-ENT
M$SAVE    7951**DCL-ENT
M$SCON    7952**DCL-ENT
M$SCREECH    7950**DCL-ENT
M$SENV    7992**DCL-ENT
M$SETFMA    7936**DCL-ENT
M$SETFP    7965**DCL-ENT
M$SINPUT    7963**DCL-ENT
M$SLCFLD    7968**DCL-ENT
M$SMOUSE    7982**DCL-ENT
M$SMPRT    7974**DCL-ENT
M$SPRIV    7995**DCL-ENT
M$SSWITCH    7995**DCL-ENT
M$STATE    8004**DCL-ENT
M$STD    7976**DCL-ENT
M$STIMER    7990**DCL-ENT
M$STLPP    7973**DCL-ENT
M$STRAP    7990**DCL-ENT
M$STRMATTR    7962**DCL-ENT
M$STRMCTL    7960**DCL-ENT
M$STRMTAB    7963**DCL-ENT
M$SYMBIO    8001**DCL-ENT
PL6.E3A0      #001=DDA$KILL1 File=DDA$KILL1.:E05TSI                              TUE 07/29/97 13:32 Page:30   
M$SYSCON    7987**DCL-ENT
M$SYSID    8005**DCL-ENT
M$TDCLOSE    7986**DCL-ENT
M$TDIO    7986**DCL-ENT
M$TDOPEN    7985**DCL-ENT
M$TDREQCPU    7986**DCL-ENT
M$TEMPWROC    7980**DCL-ENT
M$TIME    8003**DCL-ENT
M$TRAP    7990**DCL-ENT
M$TRMISC    7965**DCL-ENT
M$TRMPRG    7961**DCL-ENT
M$TRTN    7994**DCL-ENT
M$TRUNC    7937**DCL-ENT
M$TTIMER    7990**DCL-ENT
M$UC    7960**DCL
M$UMPL    7977**DCL-ENT
M$UNFID    7999**DCL-ENT
M$UNLATCH    7956**DCL-ENT
M$UNSHARE    7953**DCL-ENT
M$USRFIELD    7996**DCL-ENT
M$VIRTUAL    7971**DCL-ENT
M$WAIT    7994**DCL-ENT
M$WEOF    7939**DCL-ENT
M$WRITE    7937**DCL-ENT
M$WRSYSLOG    7985**DCL-ENT
M$XCON    7991**DCL-ENT
M$XCONRTN    7952**DCL-ENT
M$XEQTIME    8004**DCL-ENT
M$XFLUSH    7945**DCL-ENT
M$XMOUSE    7982**DCL-ENT
M$XXX    7948**DCL-ENT
M$YC    7950**DCL-ENT
