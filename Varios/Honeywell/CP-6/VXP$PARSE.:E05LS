VERSION E05

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:1    
        1        1        /*M* VXP$PARSE - Processes the command parse tree. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,PLM=6,IND=4,SDI=2,CTI=8,DCI=4,CSU=2,ECU=2,ENI=4,
        8        8              THI=0,DTI=0,IAD=0,CCC                          */
        9        9        %MACRO CHK_DUP_OPT(
       10       10              STRUCT=STRUCT,
       11       11              STRUCT_NAME$=STRUCT_NAME$,
       12       12              ERROR="GOTO SKIP_OPTION;");
       13       13              IF STRUCT THEN DO;
       14       14                  CALL VXP$DUP_OPT( STRUCT_NAME$ );
       15       15                  ERROR
       16       16                  END;
       17       17              ELSE STRUCT = @TRUE_B;
       18       18        %MEND;
       19       19        VXP$PARSE: PROC( START_SYMBOL$, TYPE );
       20       20
       21       21
       22       22        /*
       23       23                          Include files
       24       24        */
       25       25        %INCLUDE VX_INC_C;
       26    10741        %INCLUDE XU_SUBS_C;
       27    10833        %INCLUDE XU_PERR_C;
       28    11024        %INCLUDE VX_PSUBS_C;
       29    11202        %INCLUDE B$JIT;
       30    11492        %VX$NODE;

             11504    1   /*******************************************************************************
             11505    1   *                                                                              *
             11506    1   *                          VX$NODE                                                 *
             11507    1   *                                                                              *
             11508    1   *******************************************************************************/

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:2    
             11524    1   DCL 1 VX$NODE      ALIGNED    BASED,
             11525    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             11526    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             11527    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             11528    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             11529    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             11530                              to list of file nodes for this node            */
             11531    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             11532    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             11532                  /* Head pointer to shared library list */
             11533    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             11533                  /* Head pointer to list of shared libraries
             11534                                          which have been mapped to included libraries */
             11535    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             11536    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             11537    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             11538    1         2 ADDR_START REDEF  ADDR_START_A,
             11539    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             11540    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             11541    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             11542    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             11543    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             11544    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             11545    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             11546    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             11547    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             11548    1         2 START_PAGE# REDEF START_PAGE#_A,
             11549    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             11550    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             11551    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             11552    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             11553    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             11554    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             11555    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             11556    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             11557    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11557                  /* Starting pointer for common sections for this node */
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:3    
             11558    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11558                  /* Stopping pointer for common sections for this node */
             11559    1         2 L_START,
             11560    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11561    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             11562    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             11563    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11564    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11565    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11566    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11567    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             11568    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             11569    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11570    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             11571    1         2 L_STOP,
             11572    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11573    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             11574    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             11575    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11576    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11577    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11578    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11579    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             11580    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             11581    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11582    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             11583    1         2 L_SIZE,
             11584    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11585    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11586    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11587    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11588    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             11589    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11590    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11591    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11592    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11593    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:4    
             11594    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             11595    1         2 L_PREV_SIZE,
             11596    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11597    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11598    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11599    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11600    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             11601    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11602    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11603    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11604    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11605    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             11606    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             11607    1         2 BIT_MAP                ALIGNED,
             11608    1           3 DATA                  ALIGNED,
             11609    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11610    1           3 RPROC                 ALIGNED,
             11611    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11612    1           3 ROS                   ALIGNED,
             11613    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11614    1         2 L_SC_START,
             11615    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11616    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             11617    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11618    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11619    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             11620    1         2 L_SC_STOP,
             11621    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11622    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             11623    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11624    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11625    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             11626    1         2 PROMOTE_HEAD,
             11627    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11628    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11629    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             11630    1         2 PROMOTE_TAIL,
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:5    
             11631    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11632    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11633    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             11634    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             11635    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             11636    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             11637    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             11638    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       31    11642        %VX$SC;

             11655    1   /*******************************************************************************
             11656    1   *                                                                              *
             11657    1   *                          VX$SC                                                 *
             11658    1   *                                                                              *
             11659    1   *******************************************************************************/

             11664    1   DCL 1 VX$SC BASED ALIGNED,
             11665    1         2 SEG UBIN(3) UNAL,
             11666                /*K*  SEG - The segment number of this section */
             11667    1         2 TYPE UBIN(6) UNAL,
             11668                /*K*  TYPE -
             11669                      Type code      Section type
             11670                      ---------      ------------
             11671                          0          Data control section with write access.
             11672                          1          Procedure control section.
             11673                          2          Unlabeled common, name pointer must be zero.
             11674                          3          Labeled common, with mandatory name pointer.
             11675                                     This is for labeled common which must be
             11676                                     in the root.
             11677                          4          Labeled common, with mandatory name pointer.
             11678                                     This is for labeled common which need not
             11679                                     be in the root.
             11680                          5          DCB, word 1 is name pointer.
             11681                          6          Data control section with read only access,
             11682                                     word 1 = 0 or name pointer.      */
             11683    1         2 EMPTY BIT(1) UNAL,
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:6    
             11684                /*K*  EMPTY is the empty bit.  This bit is set if the control
             11685                      section is of size zero.  */
             11686    1         2 ATTR UNAL,
             11687    1           3 INT  UBIN(2) UNAL,
             11688                  /*K*  INT is the Section initialization.  */
             11689    1           3 SEGMENT BIT(1) UNAL,
             11690                  /*K* SEGMENT is set if the Section is defined in a data
             11691                       segment.  */
             11692    1           3 ALL BIT(1) UNAL,
             11693                  /*K*  ALL is set if the Section is allocated.  */
             11694    1           3 PRE_DCB BIT(1) UNAL,
             11695                  /*K*  PRE_DCB is set if a Pre_defined DCB.  */
             11696    1           3 MES_INIT BIT(1) UNAL,
             11697    1           3 ALIGN UBIN(2) UNAL,
             11698                  /*K*  ALIGN is the Section alignment.  */
             11699    1         2 ADDRESS UBIN HALF UNAL,
             11700                /*K*  ADDRESS is the address within the Instruction Segment of
             11701                      the entry point of the external procedure.  */
             11702    1         2 NAME_DISP SBIN HALF UNAL,
             11703                /*K*  NAME_DISP is the Name index.  */
             11704    1         2 SIZE UBIN HALF UNAL,
             11705                /*K*  SIZE is the size, in words, of the section.  */
             11706    1         2 NODE# UBIN HALF UNAL,
             11707                /*K*  NODE# is the Node number of section.  */
             11708    1         2 COM_LINK UBIN HALF UNAL;
             11709                /*K*  COM_LINK is used internally by linker to link common sections */

             11719    1   /*******************************************************************************
             11720    1   *                                                                              *
             11721    1   *                          VX$SECT                                                 *
             11722    1   *                                                                              *
             11723    1   *******************************************************************************/

             11728    1   DCL 1 VX$SECT BASED ALIGNED,
             11729    1         2 TYPE UBIN BYTE UNAL,
             11730                /*K*  TYPE -
             11731                      Type code      Section type
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:7    
             11732                      ---------      ------------
             11733                          0          Data control section with write access.
             11734                          1          Procedure control section.
             11735                          2          Unlabeled common, name pointer must be zero.
             11736                          3          Labeled common, with mandatory name pointer.
             11737                                     This is for labeled common which must be
             11738                                     in the root.
             11739                          4          Labeled common, with mandatory name pointer.
             11740                                     This is for labeled common which need not
             11741                                     be in the root.
             11742                          5          DCB, word 1 is name pointer.
             11743                          6          Data control section with read only access,
             11744                                     word 1 = 0 or name pointer.
             11745                          7          Constant labeled common, with mandatory name pointer.
             11746                                     This is for labeled common which must be
             11747                                     in the root.
             11748                          8          Constant labeled common, with mandatory name pointer.
             11749                                     This is for labeled common which need not
             11750                                     be in the root.                        */
             11751    1         2 * BIT(1),
             11752                /*K*  * is reserved for future use and must be zero. */
             11753    1         2 INITZERO BIT(1),
             11754                /*K*  INITZERO - if 1, initialize with zero.  */
             11755    1         2 INITUTS BIT(1),
             11756                /*K*  INITUTS - if 1, initialize with UTS.  */
             11757    1         2 SEGMENT BIT(1),
             11758                /*K*  SEGMENT - if 1, specifies that this section is
             11759                                to be placed in the segment specified by
             11760                                SEG_NPOINTER.  */
             11761    1         2 * BIT(3),
             11762                /*K*  * is reserved for future use and must be zero. */
             11763    1         2 BOUND UBIN(2) UNAL,
             11764                /*K*  BOUND - bits 6-7 - defines starting location.
             11765                              00 - starts on even word
             11766                              01 - starts on odd word
             11767                              10 - starts on multiple of 8
             11768                              11 - starts on page boundary     */
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:8    
             11769    1         2 SIZE UBIN HALF UNAL,
             11770                /*K*  SIZE is the size, in words, of the section.  */
             11771    1         2 NPOINTER SBIN HALF UNAL,
             11772                /*K*  NPOINTER is the word displacement into the name record
             11773                      (TYPE 1) locating the name of this section.  If the
             11774                      field is negative, the section has no name.  */
             11775    1         2 MBZ UBIN HALF UNAL,
             11776                /*K*  MBZ is reserved for future expansion and must be zero. */
             11777    1         2 SEG_NPOINTER REDEF MBZ SBIN HALF UNAL,
             11778                /*K*  SEG_NPOINTER locates a name in the Definition Names
             11779                      Section.  The name must be a valid segment name
             11780                      recognized by the linker.  */
             11781    1         2 G66 REDEF MBZ,
             11782                /*K*  G66 is not used on CP-6. */
             11783    1           3 * BIT(9),
             11784    1           3 NSAB BIT(9);
       32    11787        %VX$LST;

             11800    1   /*******************************************************************************
             11801    1   *                                                                              *
             11802    1   *                          VX$LST                                                 *
             11803    1   *                                                                              *
             11804    1   *******************************************************************************/

             11809    1   DCL 1 VX$LST                          ALIGNED BASED,
             11810    1         2 LINK$        PTR,               /* Link to next item                  */
             11811    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             11812    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             11813    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             11814    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             11815    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             11816    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             11817    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             11818    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             11819    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             11820    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             11821    1         2 P,
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:9    
             11822    1           3 NAME_       ALIGNED,
             11823    1             4 BOUND      UBIN(20)  UNAL,
             11824    1             4 FLAGSV     UBIN(11)  UNAL,
             11825    1             4 *          BIT(5)    UNAL,
             11826    1             4 NAME$      PTR,
             11827    1           3 ACCT_       ALIGNED,
             11828    1             4 BOUND      UBIN(20)  UNAL,
             11829    1             4 FLAGSV     UBIN(11)  UNAL,
             11830    1             4 *          BIT(5)    UNAL,
             11831    1             4 ACCT$      PTR,
             11832    1           3 PASS_       ALIGNED,
             11833    1             4 BOUND      UBIN(20)  UNAL,
             11834    1             4 FLAGSV     UBIN(11)  UNAL,
             11835    1             4 *          BIT(5)    UNAL,
             11836    1             4 PASS$      PTR,
             11837    1           3 SN_         ALIGNED,
             11838    1             4 BOUND      UBIN(20)  UNAL,
             11839    1             4 FLAGSV     UBIN(11)  UNAL,
             11840    1             4 *          BIT(5)    UNAL,
             11841    1             4 SN$        PTR,
             11842    1           3 WSN_        ALIGNED,
             11843    1             4 BOUND      UBIN(20)  UNAL,
             11844    1             4 FLAGSV     UBIN(11)  UNAL,
             11845    1             4 *          BIT(5)    UNAL,
             11846    1             4 WSN$       PTR,
             11847    1           3 B           ALIGNED,
             11848    1             4 RES        BIT(1)    UNAL,
             11849    1             4 ASN        BIT(1)    UNAL,
             11850    1             4 ACCT       BIT(1)    UNAL,
             11851    1             4 *          BIT(33)   UNAL,
             11852    1           3 RES         CHAR(4)   ALIGNED,
             11853    1           3 ASN         UBIN(36)  ALIGNED;
       33    11856        %VX$VECTOR_LST;

             11869    1   /*******************************************************************************
             11870    1   *                                                                              *
             11871    1   *                          VX$VECTOR_LST                                           *
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:10   
             11872    1   *                                                                              *
             11873    1   *******************************************************************************/

             11877    1   DCL 1 VX$VECTOR_LST ALIGNED BASED,
             11878    1         2 SIZEW1 UBIN HALF UNAL,
             11879    1         2 SIZEW2 UBIN HALF UNAL;
       34    11881        %T$C;

             11893    1   /*******************************************************************************
             11894    1   *                                                                              *
             11895    1   *                          T$C                                                 *
             11896    1   *                                                                              *
             11897    1   *******************************************************************************/

             11902    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             11903    1         2 COUNT        UBIN( 9) UNAL,
             11904    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             11905    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             11906    1         2 COUNT        UBIN( 9) UNAL,
             11907    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       35    11910        %SET LISTMAC='1'B;
       36    11911        %SET LISTEXP='1'B;
       37    11912        %SET LISTSUB='1'B;
       38    11913        %BANNER(ARG=B$DNAME);
             11914        %LSET LISTDIR='0'B;

             11921    1   /*******************************************************************************
             11922    1   *                                                                              *
             11923    1   *                          B$DNAME                                                 *
             11924    1   *                                                                              *
             11925    1   *******************************************************************************/

       39    11929        %B$DNAME( NAME=B$DNAME, STCLASS=BASED );
             11930            %LSET STR='BASED        ';
             11931            %IF
             11932                '0'B;
             11934            %ELSE;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:11   
             11935                %LSET INIT=/*;
             11936            %ENDIF;
             11937    1   DCL 1 B$DNAME BASED ALIGNED,
             11938    1         2 COUNT UBIN HALF UNAL /*(SIZEC(' ')) /**/,
             11939                /*K*  COUNT is the number of characters in the name */
             11940            %IF
             11941                '0'B;
             11944            %ELSE;
             11945    1         2 TEXT CHAR(B$DNAME.COUNT) UNAL;
             11946            %ENDIF;
       40    11948        %P;
             11949        %LSET LISTDIR='0'B;

             11956    1   /*******************************************************************************
             11957    1   *                                                                              *
             11958    1   *                          PARAMETERS                                              *
             11959    1   *                                                                              *
             11960    1   *******************************************************************************/

       41    11964    1   DCL START_SYMBOL$   PTR;
       42    11965    1   DCL TYPE            UBIN(36)  ALIGNED;
       43    11966        %EJECT;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:12   
       44    11967        %PARSE$OUT( NAME=O$B, STCLASS="BASED");
             11968        /*F*  NAME:     PARSE$OUT
             11969              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             11970                  "alternative", "reducing alternative", or "koncat" node in
             11971                  the user's parse tree.
             11972        */
             11973    1   DCL 1 O$B BASED ALIGNED,
             11974    1         2 TEMP BIT(1) UNAL,
             11975    1         2 * BIT (11) UNAL,
             11976    1         2 NDTYPE UBIN (6) UNAL,
             11977        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             11978                  block corresponds.  See the XU_SUBS_C file for the
             11979                  %EQU symbols whose values may appear in this field.
             11980        */
             11981    1         2 CODE UBIN HALF HALIGNED,
             11982        /*K* CODE - Contains the numeric "node code" specified by the user when
             11983                  the corresponding parse-node was defined.
             11984        */
             11985    1         2 NSUBLKS UBIN HALF HALIGNED,
             11986        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             11987                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             11988        */
             11989    1         2 SCRITCH UBIN HALF HALIGNED,
             11990        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             11991                  initializes this field to zero when the PARSE$OUT structure
             11992                  is allocated, and never sets or examines it thereafter.
             11993                  The name of this field may be changed when the PARSE$OUT macro
             11994                  is invoked by the user (say "SCRITCH=yourname"), and its data
             11995                  type may also be changed (say "SCRMODE=pl6datatype" and
             11996                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             11997                  and be UNALIGNED, CALIGNED, or HALIGNED.
             11998        */
             11999    1         2 CPOS UBIN WORD,
             12000        /*K* CPOS - "character position" of this block.  This field will contain
             12001                  a character index (starting at 0) into the original parse
             12002                  string;  the index identifies the first character of the
             12003                  string which was accepted by this node (or by any of its
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:13   
             12004                  sub-nodes).
             12005        */
             12006    1         2 SUBLK$(0:0) PTR UNAL;
             12007        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             12008                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             12009                  OUT$BLK structure, or to an OUT$SYM structure.
             12010        */
       45    12012        %P$LIT ( NAME=P$LIT, STCLASS="BASED", LEN="P$LIT.COUNT" );
             12013        /*F*  NAME:     P$LIT
             12014              FUNCTION: a structure used to describe "literal" parse nodes, as
             12015                  built by PARTRGE and interrogated by X$PARSE.  The P$LIT
             12016                  structure is a sort of "overlay" of P$NODE;  these structures
             12017                  have many sub-fields in common (TYPE, P_F, S_F, O_F,
             12018                  OPT, RPEAT, SKBL, and RTEXT).  Documentation for these
             12019                  common sub-fields may be found under the P$NODE structure.
             12020        */
             12021        %IF '1'B;
             12022    1   DCL 1 P$LIT BASED ALIGNED,
             12023        %ELSE;
             12025        %ENDIF;
             12026    1         2 TYPE UBIN(3) UNAL,
             12027        /*K* TYPE - identifies the type of this P$LIT node.  This field always
             12028                  contains the value %TYPE_LITERAL# as found in XU_SUBS_C.
             12029        */
             12030    1         2 P_F BIT(1) UNAL,
             12031    1         2 S_F BIT(1) UNAL,
             12032    1         2 F_F BIT(1) UNAL,
             12033    1         2 O_F BIT(1) UNAL,
             12034    1         2 OPT BIT(1) UNAL,
             12035    1         2 RPEAT BIT(1) UNAL,
             12036    1         2 SKBL BIT(1) UNAL,
             12037    1         2 RTEXT BIT(1) UNAL,
             12038    1         2 UPRLOWR BIT(1) UNAL,
             12039        /*K* UPRLOWR - specifies that this node is to be compared to the input
             12040                  string in a case-insensitive fashion;  upper- and lower-case
             12041                  characters are considered equivalent.  This option is normally
             12042                  set for all 'literal' nodes;  it is reset if the first character
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:14   
             12043                  of a literal node is an '=' character, which indicates that
             12044                  the literal text must be matched '=ExactLy'.
             12045        */
             12046    1         2 ABREV UBIN (8) UNAL,
             12047        /*K* ABREV - an integer field which contains either 0, or the minimum
             12048                  length of an acceptable abbreviation of this literal.
             12049                  For example:  the PARTRGE literal 'ABCDEF' has an ABREV of 0;
             12050                  the literal 'ABC/DEF' has an ABREV of 3.
             12051        */
             12052    1         2 CODE UBIN (16) UNAL,
             12053    1         2 COUNT UBIN BYTE CALIGNED,
             12054        /*K* COUNT - the number of characters in this literal.
             12055        */
             12056    1         2 TEXT CHAR(P$LIT.COUNT)
             12057        /*K* TEXT - a CHAR variable which contains the text of this literal.
             12058        */
             12059        %IF '1'B;
             12060    1         ;
             12061        %ELSE;
             12063        %ENDIF;
       46    12065        %S;
             12066        %LSET LISTDIR='0'B;

             12073    1   /*******************************************************************************
             12074    1   *                                                                              *
             12075    1   *                          SBIN                                                 *
             12076    1   *                                                                              *
             12077    1   *******************************************************************************/

       47    12081        %INDEX;
             12082    1   DCL I          UBIN(36) ALIGNED AUTO;
             12083    1   DCL SI REDEF I SBIN WORD ALIGNED;
             12084    1   DCL J          UBIN(36) ALIGNED AUTO;
             12085    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             12086    1   DCL K          UBIN(36) ALIGNED AUTO;
             12087    1   DCL SK REDEF K SBIN WORD ALIGNED;
             12088    1   DCL L          UBIN(36) ALIGNED AUTO;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:15   
             12089    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       48    12091        %E;
             12092        %LSET LISTDIR='0'B;

             12099    1   /*******************************************************************************
             12100    1   *                                                                              *
             12101    1   *                          ENTRY                                                 *
             12102    1   *                                                                              *
             12103    1   *******************************************************************************/

       49    12107    1   DCL VXP$PAR         ENTRY(5)       ALTRET;
       50    12108    1   DCL X$PARSE ENTRY(1) ALTRET;
       51    12109    1   DCL VXA$GET         ENTRY(3);
       52    12110    1   DCL VXF$FREE        ENTRY(3);
       53    12111    1   DCL VXF$CLOSE       ENTRY(3);
       54    12112    1   DCL VXF$OPEN_LO     ENTRY ALTRET;
       55    12113    1   DCL VXR$READ        ENTRY(2);
       56    12114    1   DCL VXW$WRITE       ENTRY(3);
       57    12115    1   DCL VXD$C2B         ENTRY(3);
       58    12116    1   DCL VXA$ND          ENTRY(2);
       59    12117    1   DCL VXD$FLST        ENTRY(6);
       60    12118    1   DCL VXD$ALST        ENTRY(3);
       61    12119    1   DCL VXS$LST         ENTRY(6) ALTRET;
       62    12120    1   DCL VXP$TREE        ENTRY(7);
       63    12121    1   DCL VXE$ERROR          ENTRY(4);
       64    12122    1   DCL VXU$INIT_VECTOR   ENTRY;
       65    12123        %U;
             12124        %LSET LISTDIR='0'B;

             12131    1   /*******************************************************************************
             12132    1   *                                                                              *
             12133    1   *                          UBIN                                                 *
             12134    1   *                                                                              *
             12135    1   *******************************************************************************/

       66    12139    1   DCL CHAR_COUNT      UBIN(36) ALIGNED    AUTO;
       67    12140    1   DCL PWORK_SIZE      UBIN(36) ALIGNED    AUTO;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:16   
       68    12141    1   DCL SIZE            UBIN(36) ALIGNED    AUTO;
       69    12142    1   DCL STOP            UBIN(36) ALIGNED    AUTO;
       70    12143    1   DCL OPT_STOP        UBIN(36) ALIGNED    AUTO;
       71    12144    1   DCL ITEM_STOP       UBIN(36) ALIGNED    AUTO;
       72    12145    1   DCL KON_STOP        UBIN(36) ALIGNED    AUTO;
       73    12146    1   DCL CTEMP           UBIN(36) ALIGNED    AUTO;
       74    12147    1   DCL BASE            UBIN(36) ALIGNED    AUTO;
       75    12148    1   DCL SIZEW1          UBIN(36) ALIGNED    AUTO;
       76    12149    1   DCL OPTION_LIST_INCLUDED UBIN STATIC    SYMDEF;
       77    12150    1   DCL SIZEW2          UBIN(36) ALIGNED    AUTO;
       78    12151        %PTR;
             12152        %LSET LISTDIR='0'B;

             12159    1   /*******************************************************************************
             12160    1   *                                                                              *
             12161    1   *                          PTR                                                 *
             12162    1   *                                                                              *
             12163    1   *******************************************************************************/

       79    12167        %POINTER;
             12168    1   DCL P$         PTR       ALIGNED AUTO;
             12169    1   DCL Q$         PTR       ALIGNED AUTO;
             12170    1   DCL R$         PTR       ALIGNED AUTO;
       80    12172    1   DCL HEAD$           PTR  ALIGNED   AUTO;
       81    12173    1   DCL TAIL$           PTR  ALIGNED   AUTO;
       82    12174    1   DCL DUMMY$          PTR  ALIGNED        AUTO;
       83    12175    1   DCL PWORK$          PTR  ALIGNED        AUTO;
       84    12176    1   DCL START$          PTR  ALIGNED        AUTO;
       85    12177    1   DCL LEVEL1$         PTR  ALIGNED        AUTO;
       86    12178    1   DCL LEVEL2$         PTR  ALIGNED        AUTO;
       87    12179    1   DCL LEVEL3$         PTR  ALIGNED        AUTO;
       88    12180    1   DCL CURR$           PTR  ALIGNED   AUTO;
       89    12181    1   DCL NODE$           PTR  ALIGNED   AUTO;
       90    12182    1   DCL TEXT$           PTR  ALIGNED   AUTO;
       91    12183    1   DCL PREV$           PTR  ALIGNED   AUTO;
       92    12184    1   DCL NAME1$          PTR  ALIGNED   AUTO;
       93    12185    1   DCL NAME2$          PTR  ALIGNED   AUTO;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:17   
       94    12186    1   DCL LIST$           PTR  ALIGNED   AUTO;
       95    12187        /**/
       96    12188        /**/
       97    12189    1   DCL  SYMBOLIC_DCB   BIT(1);
       98    12190        /**/
       99    12191        /**/
      100    12192    1   DCL 1 STAR_G         ALIGNED   CONSTANT,
      101    12193    1         2 COUNT        UBIN(9)   UNAL INIT(2),
      102    12194    1         2 CHARS        CHAR(2)   UNAL INIT('*G');
      103    12195        %SET LISTMAC='0'B;
      104    12196        %SET LISTSUB='0'B;
      105    12197        %SET LISTDIR='0'B;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:18   
      107    12199    1         PWORK_SIZE = @PAGE_SIZE;          /* Set initial space request */
      108    12200    1         CALL VXP$PAR( TYPE,
      109    12201    1                 START_SYMBOL$,
      110    12202    1                 START$,
      111    12203    1                 CHAR_COUNT,
      112    12204    1                 PWORK_SIZE   )              ALTRET(PARSE_ERROR);
      113    12205    1         CALL VXA$ND( VX_ROOT$, ADDR(NIL) ); /* Set up the root */
      114    12206    1         VX_CURR$ = VX_ROOT$;
      115    12207    1         Q$ = VX_P_PCB_MAIN.OUT$ -> O$B.SUBLK$(0); /* Get pointer to command type */
      116    12208    2         DO CASE( Q$ -> O$B.CODE - 1 );    /* Jump on map or linking command */
      117    12209    2           CASE(0);                        /* Map command */
      118    12210    2             VX_COMMAND = 0;               /* Set command type */
      119    12211    2             STOP = Q$ -> O$B.NSUBLKS - 1;
      120    12212    2             CALL VXS$LST( VX_RUF$, Q$->O$B.SUBLK$(0)->O$B.SUBLK$(0)->O$B.SUBLK$(0),
      121    12213    2                     @RF, 0, ADDR(NIL), 0 ); /*Set the run file */
      122    12214    3             DO L = 1 TO STOP;
      123    12215    3                 R$ = Q$ -> O$B.SUBLK$(L);
      124    12216    4                 DO CASE(R$ -> O$B.CODE);
      125    12217    4                   CASE( @C_ALT_ON_OVER_INTO );
      126    12218    4                     VX_ON_OVER = R$ -> O$B.SUBLK$(0) -> O$B.CODE;
             12218                              /* Set targeting preposition */
      127    12219    4                     VX_GOT_ON_OVER = @YES; /* Set hit on/over/into */
      128    12220
      129    12221    4                   CASE ( @C_LO_FILE );
      130    12222    4                     CALL VXF$CLOSE ( ADDR(NIL), @LO, @SAVE ); /* Close M$LO */
      131    12223    4                     CALL VXS$LST (VX_LOF$, R$->O$B.SUBLK$(0)->O$B.SUBLK$(0),
      132    12224    4                             @LO, 0, ADDR(NIL), -9 ); /* Set lo file */
      133    12225    4                     CALL VXF$OPEN_LO;     /* Open M$LO again */
      134    12226
      135    12227    4                   CASE(ELSE);             /* Set map options */
      136    12228    4                     VX_O.MAP_A( R$ -> O$B.CODE - 1 ) = 1; /* Set hit on keyword */
      137    12229    4                   END;                    /* End do CASE(R$->O$B.CODE */
      138    12230    3                 END;                      /* End do l = 1 to stop */

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:19   
      140    12232    2           CASE(1);                        /* Linking command */
      141    12233    2             STOP = Q$ -> O$B.NSUBLKS - 1; /* Get number of sublks */
      142    12234    3             DO I = 0 TO STOP;             /* By components */
      143    12235    3                 LEVEL1$ = Q$ -> O$B.SUBLK$(I);
      144    12236    4                 DO CASE( LEVEL1$ -> O$B.CODE - 1 );
      145    12237    4                   CASE(0);                /* Command keyword */
      146    12238    4                     VX_COMMAND = LEVEL1$ -> O$B.SUBLK$(0) -> O$B.CODE;
             12238                              /* Set key word type */

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:20   
      148    12240    4                   CASE(1);                /* OPT_FID_LIST    */
      149    12241    4                     VX_COUNT_FID = @YES;  /* Request fid count */
      150    12242    4                     VX_FID_COUNT = 0;     /* Init counter */
      151    12243    4                     OPTION_LIST_INCLUDED = @NO;  /* Assume option list
      152    12244                                                       is not included right
      153    12245                                                        after OU_FID_LIST */
      154    12246    4                     CALL VXP$TREE( HEAD$,
      155    12247    4                             TAIL$,
      156    12248    4                             @OF,
      157    12249    4                             @OF_ALL,
      158    12250    4                             VX_CURR$,
      159    12251    4                             ADDR(NIL),
      160    12252    4                             LEVEL1$ );
      161    12253    4                     VX_CURR$ -> VX$NODE.HEAD$ = HEAD$;
      162    12254    4                     VX_CURR$ -> VX$NODE.TAIL$ = TAIL$;
      163    12255    4                     VX_COUNT_FID = @NO;   /* Reset switch */
      164    12256    5                     IF (OPTION_LIST_INCLUDED = @YES) THEN DO;
      165    12257    5                         R$ = Q$->O$B.SUBLK$(I);
      166    12258    5                         LEVEL1$ = Q$->O$B.SUBLK$(I)->O$B.SUBLK$(R$->O$B.NSUBLKS-1);
      167    12259    5                         GOTO OPT_OPTIONS;
      168    12260    5                         END;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:21   
      170    12262    4                   CASE(2);                /* OPT_ON_OVER     */
      171    12263    4                     VX_ON_OVER = LEVEL1$ -> O$B.SUBLK$(0) -> O$B.CODE;
             12263                              /* Set targeting preposition */

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:22   
      173    12265    4                   CASE(3);                /* OPT_RUN_FILE    */
      174    12266    4                     TEXT$ = LEVEL1$ -> O$B.SUBLK$(0) -> O$B.SUBLK$(0);
      175    12267    4                     VX_RU_NAME$ = TEXT$;
      176    12268    5                     IF VX_GOT_ON_OVER = @NO THEN DO;
      177    12269    5                         CALL VXS$LST( VX_RUF$, TEXT$, @RF, 0, ADDR(NIL), 0 );
      178    12270    5                         VX_GOT_ON_OVER = @YES; /* Set hit for on/over run file*/
      179    12271    5                         VX_ON_OVER_RUF = VX_ON_OVER;
             12271                                  /* Set targeting preposition for run file */
      180    12272    5                         END;
      181    12273    5                     ELSE DO;
      182    12274        /*E*  ERROR:      VXP-E$DUP_RUF_VX-0
      183    12275              MESSAGE: The run unit file was previously specified.
      184    12276                       %U1 is ignored.
      185    12277        */
      186    12278    5                         VX_EFIELD1.COUNT = TEXT$ -> T$C.COUNT;
      187    12279    5                         VX_EFIELD1.CHARS = TEXT$ -> T$C.CHARS;
      188    12280                              %SCREAM(ERR#=E$DUP_RUF_VX,
      189    12281                              LEVEL=@E$W_VX,
      190    12282                              MID="'P'");
      191    12285    5                         END;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:23   
      193    12287    4                   CASE(5);                /* OPT_LO_FILE    */
      194    12288    4                     TEXT$ = LEVEL1$ -> O$B.SUBLK$(0) -> O$B.SUBLK$(0);
      195    12289    5                     IF VX_LOF$ = ADDR(NIL) THEN DO;
      196    12290    5                         CALL VXF$CLOSE( VX_LOF$, @LO, @SAVE );
      197    12291    5                         CALL VXS$LST( VX_LOF$, TEXT$, @LO, 0, ADDR(NIL), -9 );
      198    12292    5                         CALL VXF$OPEN_LO;
      199    12293    5                         END;
      200    12294    5                     ELSE DO;
      201    12295        /*E*  ERROR:      VXP-E$DUP_LOF_VX-0
      202    12296              MESSAGE: The listing output file was previously specified.
      203    12297                       %U1 is ignored.
      204    12298        */
      205    12299    5                         VX_EFIELD1.COUNT = TEXT$ -> T$C.COUNT;
      206    12300    5                         VX_EFIELD1.CHARS = TEXT$ -> T$C.CHARS;
      207    12301                              %SCREAM(ERR#=E$DUP_LOF_VX,
      208    12302                              LEVEL=@E$W_VX,
      209    12303                              MID="'P'");
      210    12306    5                         END;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:24   
      212    12308    4                   CASE(4);                /* OPT_OPTIONS     */
      213    12309    4   OPT_OPTIONS:      OPT_STOP = LEVEL1$ -> O$B.NSUBLKS - 1;
      214    12310    5                     DO J = 0 TO OPT_STOP; /* For all types of options */
      215    12311    5                         LEVEL2$ = LEVEL1$ -> O$B.SUBLK$(J);
      216    12312    6                         DO CASE( LEVEL2$ -> O$B.CODE-1 );
      217    12313    6                           CASE(0);        /* KEY_WORD_ONLY */
      218    12314    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;
             12314                                      /* Compute index */
      219    12315                                  %CHK_DUP_OPT(
      220    12316                                  STRUCT="VX_OD.SIN_A(L)",
      221    12317                                  STRUCT_NAME$="VX_ON.SIN_A(L)");
      222    12324    6                             VX_O.SIN_A(L) = 1; /* Set hit       */
      223    12325    6                           CASE(1);        /* 1_NUM_ARG_DEC */
      224    12326    6                             BASE = 10;    /* Set base      */
      225    12327    6                             GOTO CASE_2;
      226    12328    6                           CASE(2);        /* 1_NUM_ARG_OCT */
      227    12329    6                             BASE = 8;     /* Set base      */
      228    12330    6   CASE_2:                   ;
      229    12331    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;
      230    12332                                  %CHK_DUP_OPT(
      231    12333                                  STRUCT="VX_OD.NUM_A(L)",
      232    12334                                  STRUCT_NAME$="VX_ON.NUM_A(L)");
      233    12341    6                             R$ = LEVEL2$ -> O$B.SUBLK$(1) -> O$B.SUBLK$(0);
      234    12342    6                             CALL VXD$C2B( VX_O.NUM_A(L), R$ -> T$C, BASE );
      235    12343    6                           CASE(3);        /* Map           */
      236    12344    6                             IF LEVEL2$ -> O$B.NSUBLKS = 0 THEN
      237    12345    6                                 VX_O.MAP_A(0) = 1; /* Map by name */
      238    12346    7                             ELSE DO;
      239    12347    7                                 ITEM_STOP = LEVEL2$ -> O$B.NSUBLKS -1 ;
      240    12348    8                                 DO L = 0 TO ITEM_STOP;
      241    12349    8                                     R$ = LEVEL2$ -> O$B.SUBLK$(L);
      242    12350    8                                     K = R$ -> O$B.CODE - 1;
      243    12351                                          %CHK_DUP_OPT(
      244    12352                                          STRUCT="VX_OD.MAP_A(K)",
      245    12353                                          ERROR="GOTO SKIP_MAP_OPTION;",
      246    12354                                          STRUCT_NAME$="VX_ON.MAP_A(K)");
      247    12361    8                                     VX_O.MAP_A(K) = 1;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:25   
      248    12362    8   SKIP_MAP_OPTION:
      249    12363    8                                     END;
      250    12364    7                                 END;
      251    12365    6                           CASE(4);        /* Privileges    */
      252    12366    6                             ITEM_STOP = LEVEL2$ -> O$B.NSUBLKS - 1 ;
      253    12367    7                             DO L = 0 TO ITEM_STOP;
      254    12368    7                                 R$ = LEVEL2$ -> O$B.SUBLK$(L);
      255    12369    7                                 K = R$ -> O$B.CODE - 1;
      256    12370                                      %CHK_DUP_OPT(
      257    12371                                      STRUCT="VX_OD.PRIV_A(K)",
      258    12372                                      ERROR="GOTO SKIP_PRIV_OPTION;",
      259    12373                                      STRUCT_NAME$="VX_ON.PRIV_A(K)");
      260    12380    7                                 VX_RU_HEAD.PRIV = VX_RU_HEAD.PRIV | VX_O.PRIV_A(K);
      261    12381    7   SKIP_PRIV_OPTION:
      262    12382    7                                 END;
      263    12383    6                           CASE(5);        /* N_FID_ARG     */
      264    12384    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;
      265    12385                                  %CHK_DUP_OPT(
      266    12386                                  STRUCT="VX_OD.FIDN_A$(L)",
      267    12387                                  STRUCT_NAME$="VX_ON.FIDN_A$(L)");
      268    12394    6                             CALL VXD$FLST( VX_O.FIDN_A$(L),
      269    12395    6                                     TAIL$,
      270    12396    6                                     LEVEL2$ -> O$B.SUBLK$(1),
      271    12397    6                                     @LF,
      272    12398    6                                     @LF_ULIB,
      273    12399    6                                     ADDR(NIL) );
      274    12400    6                           CASE(6);        /* 1_FID_ARG     */
      275    12401    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;
      276    12402                                  %CHK_DUP_OPT(
      277    12403                                  STRUCT="VX_OD.FID_A$(L)",
      278    12404                                  STRUCT_NAME$="VX_ON.FID_A$(L)");
      279    12411    6                             CALL VXS$LST(     VX_O.FID_A$(L),
      280    12412    6                                     LEVEL2$->O$B.SUBLK$(1)->O$B.SUBLK$(0)->O$B.SUBLK$(
             12412                                              0),
      281    12413    6                                     @LF,
      282    12414    6                                     L+1,
      283    12415    6                                     ADDR(NIL),
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:26   
      284    12416    6                                     0 );
      285    12417    6                           CASE( 7 );      /* Dcb equiv */
      286    12418    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;
      287    12419    7                             IF VX_OD.NODCB_A(L) THEN DO;
      288    12420        /*E*  ERROR: VXP-E$OPT_CONFLICT_VX-0
      289    12421              MESSAGE: %U1 option in conflict with %U2 option.
      290    12422                       %U1 option ignored.
      291    12423        */
      292    12424    7                                 VX_EFIELD1.COUNT = VX_ON.DCB_MATCH_A$(L) -> P$LIT.
             12424                                          COUNT;
      293    12425    7                                 VX_EFIELD1.CHARS = VX_ON.DCB_MATCH_A$(L) -> P$LIT.TEXT
             12425                                          ;
      294    12426    7                                 VX_EFIELD2.COUNT = VX_ON.NODCB_A$(L) -> P$LIT.COUNT;
      295    12427    7                                 VX_EFIELD2.CHARS = VX_ON.NODCB_A$(L) -> P$LIT.TEXT;
      296    12428                                      %SCREAM( ERR#=E$OPT_CONFLICT_VX, LEVEL=@E$W_VX, MID=
             12428                                          "'P'");
      297    12431    7                                 GOTO SKIP_OPTION;
      298    12432    7                                 END;
      299    12433                                  %CHK_DUP_OPT(
      300    12434                                  STRUCT="VX_OD.DCB_MATCH_A$(L)",
      301    12435                                  STRUCT_NAME$="VX_ON.DCB_MATCH_A$(L)");
      302    12442    6                             TAIL$ = LEVEL2$ -> O$B.SUBLK$(1) -> O$B.SUBLK$(0);
      303    12443    6                             R$ = VX_PRE_DCB_START$;
      304    12444    7                             DO WHILE( R$ <= VX_PRE_DCB_STOP$ );
      305    12445    7                                 IF PINCRW( VX_PRE_DCB_NAME$, R$ -> VX$SC.NAME_DISP )
             12445                                          -> B$DNAME.TEXT
      306    12446    7                                         =
      307    12447    8                                         TAIL$ -> T$C.CHARS THEN DO;
      308    12448        /*E*  ERROR: VXP-E$DCB_CONFLICT_VX-0
      309    12449              MESSAGE: %U1 option may not be applied to %U2.
      310    12450              DESCRIPTION: Self-explanatory.
      311    12451        */
      312    12452    8                                     VX_EFIELD1.COUNT = 10;
      313    12453    8                                     K = POFFW( R$, VX_PRE_DCB_START$ ) / SIZEW(VX$SC);
      314    12454    8                                     VX_EFIELD1.CHARS = VX_DCB_OPTION_TEXT(K);
      315    12455    8                                     VX_EFIELD2.COUNT = TAIL$ -> T$C.COUNT;
      316    12456    8                                     VX_EFIELD2.CHARS = TAIL$ -> T$C.CHARS;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:27   
      317    12457                                          %SCREAM(
      318    12458                                          ERR#=E$DCB_CONFLICT_VX,
      319    12459                                          LEVEL=@E$W_VX,
      320    12460                                          MID="'P'");
      321    12463    8                                     GOTO SKIP_OPTION;
      322    12464    8                                     END;  /* If */
      323    12465    7                                 R$ = PINCRW( R$, SIZEW( VX$SC ) );
      324    12466    7                                 END;      /* Do while */
      325    12467    6                             SYMBOLIC_DCB = ( LEVEL2$ -> O$B.SUBLK$(1) -> O$B.CODE
      326    12468    6                                     = @C_SYMBOL );
      327    12469    6                             IF SYMBOLIC_DCB THEN
      328    12470    6                                 K = TAIL$ -> T$C.COUNT;
      329    12471    6                             ELSE
      330    12472    6                                 K = TAIL$ -> T$C.COUNT + 2;
      331    12473    7                             IF K > 31 THEN DO;
      332    12474        /*E*  ERROR: VXP-E$DCB_TOO_LONG_VX-0
      333    12475              MESSAGE: DCB name too long for %U1 option: "%U2".
      334    12476                       A DCB name can be at most 31 characters long. %U1 option ignored.
      335    12477              DESCRIPTION: Self-explanatory.
      336    12478        */
      337    12479    7                                 VX_EFIELD1.COUNT = VX_ON.DCB_MATCH_A$(L) -> P$LIT.
             12479                                          COUNT;
      338    12480    7                                 VX_EFIELD1.CHARS = VX_ON.DCB_MATCH_A$(L) -> P$LIT.TEXT
             12480                                          ;
      339    12481    7                                 VX_EFIELD2 = TAIL$ -> T$C;
      340    12482                                      %SCREAM(ERR#=E$DCB_TOO_LONG_VX,LEVEL=@E$W_VX,MID="'P'"
             12482                                          );
      341    12485    7                                 GOTO SKIP_OPTION;
      342    12486    7                                 END;
      343    12487    6                             K = ( K + 5 ) / 4;
      344    12488                                  %ALLOCATE( PTR$ = R$, TYPE=@GDP, SIZE=K );
      345    12495    7                             IF SYMBOLIC_DCB THEN DO;
      346    12496    7                                 R$ -> B$DNAME.COUNT = TAIL$ -> T$C.COUNT;
      347    12497    7                                 R$ -> B$DNAME.TEXT = TAIL$ -> T$C.CHARS;
      348    12498    7                                 END;
      349    12499    7                             ELSE DO;
      350    12500    7                                 R$ -> B$DNAME.COUNT = TAIL$ -> T$C.COUNT + 2;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:28   
      351    12501    7                                 CALL CONCAT( R$ -> B$DNAME.TEXT,
      352    12502    7                                         'F$', TAIL$ -> T$C.CHARS );
      353    12503    7                                 END;
      354    12504    7                             DO K = 0 TO SIZEW( VX_O.DCB_MATCH_A$ ) - 1;
      355    12505    8                                 IF VX_O.DCB_MATCH_A$(K) ~= ADDR(NIL) THEN DO;
      356    12506    8                                     IF VX_O.DCB_MATCH_A$(K) -> B$DNAME.TEXT
      357    12507    8                                             = R$ -> B$DNAME.TEXT
      358    12508    8                                     THEN VX_O.DCB_MATCH_A$(K) = ADDR(NIL);
      359    12509    8                                     END;
      360    12510    7                                 END; /* Do k = 0 to sizew( VX_O.MATCH_A$ ) - 1; */
      361    12511    6                             VX_O.DCB_MATCH_A$(L) = R$;
      362    12512    6                           CASE(8);        /* INCLUDE_OPTION*/
      363    12513    6                             ITEM_STOP = LEVEL2$ -> O$B.NSUBLKS - 1;
      364    12514                                  %CHK_DUP_OPT(
      365    12515                                  STRUCT="VX_OD.INCLUDE_A$(0)",
      366    12516                                  STRUCT_NAME$="VX_ON.INCLUDE_A$(0)");
      367    12523    7                             DO L = 0 TO ITEM_STOP BY 3;
      368    12524    7                                 NODE$ = LEVEL2$ -> O$B.SUBLK$(L) -> O$B.SUBLK$(0);
      369    12525    7                                 CURR$ = VX_ROOT$;
      370    12526    7   NEXT:
      371    12527    7                                 IF CURR$ -> VX$NODE.HEAD$ -> VX$LST.P.NAME_.NAME$ ->
             12527                                          T$C.CHARS
      372    12528    7                                         =
      373    12529    8                                         NODE$ -> T$C.CHARS THEN DO;
      374    12530    8                                     CALL VXS$LST( TAIL$,
      375    12531    8                                             LEVEL2$ -> O$B.SUBLK$(L+1) -> O$B.SUBLK$(0
             12531                                                      ),
      376    12532    8                                             @OF,
      377    12533    8                                             @OF_LIST,
      378    12534    8                                             LEVEL2$ -> O$B.SUBLK$(L+2) -> O$B.SUBLK$(0
             12534                                                      ) -> O$B.SUBLK$(0),
      379    12535    8                                             -10 );
      380    12536    8                                     CURR$ -> VX$NODE.TAIL$ -> VX$LST.LINK$ = TAIL$;
      381    12537    8                                     CURR$ -> VX$NODE.TAIL$ = TAIL$;
      382    12538    8                                     GOTO LEAVE;
      383    12539    8                                     END;  /* If ... */
      384    12540        /**/
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:29   
      385    12541    8                                 IF CURR$ -> VX$NODE.SON$ ~= ADDR(NIL) THEN DO;
      386    12542    8                                     CURR$ = CURR$ -> VX$NODE.SON$;
      387    12543    8                                     END;
      388    12544    8                                 ELSE DO;
      389    12545    8   CLIMB:
      390    12546    9                                     IF CURR$ -> VX$NODE.BROTHER$ ~= ADDR(NIL) THEN DO;
      391    12547    9                                         CURR$ = CURR$ -> VX$NODE.BROTHER$;
      392    12548    9                                         END;
      393    12549    9                                     ELSE DO;
      394    12550    9                                         CURR$ = CURR$ -> VX$NODE.FATHER$;
      395    12551   10                                         IF CURR$ = ADDR(NIL) THEN DO;
      396    12552        /*E*  ERROR: VXP-E$CANT_FIND_NODE_INCLUDE_VX-0
      397    12553              MESSAGE: Cannot find node name %U1 for INCLUDE option.
      398    12554              DESCRIPTION: Self-explanatory.
      399    12555        */
      400    12556   10                                             VX_EFIELD1.COUNT = NODE$ -> T$C.COUNT;
      401    12557   10                                             VX_EFIELD1.CHARS = NODE$ -> T$C.CHARS;
      402    12558                                                  %SCREAM(
      403    12559                                                  ERR#=E$CANT_FIND_NODE_INCLUDE_VX,
      404    12560                                                  MID="'P'",
      405    12561                                                  LEVEL=@E$W_VX);
      406    12564        /*E*  ERROR: VXP-E$CANT_FIND_NODE_INCLUDE_C_VX-0
      407    12565              MESSAGE: Skipping inclusion of %U2 in file %U3 for node %U1.
      408    12566              DESCRIPTION: Self-explanatory.
      409    12567        */
      410    12568   10                                             NODE$          = LEVEL2$-> O$B.SUBLK$(L+2)
             12568                                                      -> O$B.SUBLK$(0);
      411    12569   10                                             VX_EFIELD2.COUNT = NODE$ -> T$C.COUNT;
      412    12570   10                                             VX_EFIELD2.CHARS = NODE$ -> T$C.CHARS;
      413    12571   10                                             NODE$ = LEVEL2$ -> O$B.SUBLK$(L+1) -> O$B.
             12571                                                      SUBLK$(0);
      414    12572   10                                             VX_EFIELD3.COUNT = NODE$ -> T$C.COUNT;
      415    12573   10                                             VX_EFIELD3.CHARS = NODE$ -> T$C.CHARS;
      416    12574                                                  %SCREAM(
      417    12575                                                  ERR#=E$CANT_FIND_NODE_INCLUDE_C_VX,
      418    12576                                                  MID="'P'",
      419    12577                                                  LEVEL=@E$W_VX);
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:30   
      420    12580   10                                             GOTO LEAVE;
      421    12581   10                                             END; /* If CURR$ = addr(nil) then do; */
      422    12582    9                                         ELSE GOTO CLIMB;
      423    12583    9                                         END;
      424    12584    8                                     END;
      425    12585    7                                 GOTO NEXT;
      426    12586    7   LEAVE:
      427    12587    7                                 END;      /* Do L=0 to ITEM_STOP by 3 */
      428    12588    6                           CASE(9);        /* N_ACCT_ARG */
      429    12589    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;
      430    12590                                  %CHK_DUP_OPT(
      431    12591                                  STRUCT="VX_OD.ACCTN_A$(L)",
      432    12592                                  STRUCT_NAME$="VX_ON.ACCTN_A$(L)" );
      433    12599    6                             CALL VXD$ALST( VX_O.ACCTN_A$(L),
      434    12600    6                                     LEVEL2$ -> O$B.SUBLK$(1),
      435    12601    6                                     L );
      436    12602    6                           CASE(10);       /* N_VECTOR_OPTION */
      437    12603                                  %CHK_DUP_OPT(
      438    12604                                  STRUCT="VX_OD.VECTOR_A$(0)",
      439    12605                                  STRUCT_NAME$="VX_ON.VECTOR_.VECTOR$" );
      440    12612    6                             CALL VXU$INIT_VECTOR;
      441    12613    6                             ITEM_STOP = LEVEL2$ -> O$B.NSUBLKS - 1;
      442    12614    7                             DO L = 0 TO ITEM_STOP;
      443    12615    7                                 LEVEL3$ = LEVEL2$ -> O$B.SUBLK$(L);
      444    12616    7                                 K = LEVEL3$ -> O$B.CODE;
      445    12617                                      %CHK_DUP_OPT(
      446    12618                                      STRUCT="VX_OD.VECTOR_A$(K)",
      447    12619                                      ERROR="GOTO SKIP_VECTOR_OPTION;",
      448    12620                                      STRUCT_NAME$="VX_ON.VECTOR_A$(K)" );
      449    12627    8                                 DO CASE( K );
      450    12628    8                                   CASE( @C_VECTOR_RUN_FILE );
      451    12629    8                                     CALL VXS$LST( VX_O.VECTOR_.RF$,
      452    12630    8                                             LEVEL3$->O$B.SUBLK$(0)->O$B.SUBLK$(0)->O$B
             12630                                                      .SUBLK$(0), @RF,
      453    12631    8                                             0, ADDR(NIL), 0 );
      454    12632    8                                   CASE( @C_VECTOR_ENTRY_LIST );
      455    12633    8                                     VX_O.VECTOR_.LIST_SIZE = LEVEL3$ -> O$B.NSUBLKS;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:31   
      456    12634    9                                     DO K = 0 TO VX_O.VECTOR_.LIST_SIZE - 1;
      457    12635    9                                         R$ = LEVEL3$ -> O$B.SUBLK$(K);
      458    12636   10                                         IF R$->O$B.CODE = @C_EMPTY THEN DO;
      459    12637   10                                             NAME1$ = R$->O$B.SUBLK$(0)->O$B.SUBLK$(0);
      460    12638   10                                             CALL VXD$C2B( SIZEW2, NAME1$->T$C, 10 );
      461    12639                                                  %ALLOCATE( PTR$=LIST$,TYPE=@GDP,SIZE=1);
      462    12646   10                                             IF VX_O.VECTOR_.LIST$ = ADDR(NIL)
      463    12647   10                                             THEN VX_O.VECTOR_.LIST$ = LIST$;
      464    12648   10                                             LIST$->VX$VECTOR_LST.SIZEW1 = 0;
      465    12649   10                                             LIST$->VX$VECTOR_LST.SIZEW2 = SIZEW2;
      466    12650   10                                             END;
      467    12651   10                                         ELSE DO;
      468    12652   11                                             IF R$->O$B.CODE = @C_ENTRY_NAME THEN DO;
      469    12653   11                                                 NAME1$ = R$->O$B.SUBLK$(0)->O$B.SUBLK$
             12653                                                          (0);
      470    12654   11                                                 SIZEW1 = (NAME1$->T$C.COUNT + 5) / 4;
      471    12655   11                                                 SIZEW2 = 0;
      472    12656   11                                                 END;
      473    12657   11                                             ELSE DO;
      474    12658   11                                                 NAME1$ = R$->O$B.SUBLK$(0)->O$B.SUBLK$
             12658                                                          (0)
      475    12659   11                                                         -> O$B.SUBLK$(0);
      476    12660   11                                                 SIZEW1 = (NAME1$->T$C.COUNT + 5) / 4;
      477    12661   11                                                 NAME2$ = R$->O$B.SUBLK$(1)->O$B.SUBLK$
             12661                                                          (0)
      478    12662   11                                                         -> O$B.SUBLK$(0);
      479    12663   11                                                 SIZEW2 = (NAME2$->T$C.COUNT + 5) / 4;
      480    12664   11                                                 END;
      481    12665   10                                             SIZE = SIZEW1 + SIZEW2 + 1;
      482    12666                                                  %ALLOCATE( PTR$=LIST$, TYPE=@GDP, SIZE=
             12666                                                      SIZE );
      483    12673   10                                             IF VX_O.VECTOR_.LIST$ = ADDR(NIL)
      484    12674   10                                             THEN VX_O.VECTOR_.LIST$ = LIST$;
      485    12675   10                                             LIST$->VX$VECTOR_LST.SIZEW1 = SIZEW1;
      486    12676   10                                             LIST$->VX$VECTOR_LST.SIZEW2 = SIZEW2;
      487    12677   10                                             TEXT$ = PINCRW( LIST$, 1 );
      488    12678   10                                             TEXT$->B$DNAME.COUNT = NAME1$->T$C.COUNT;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:32   
      489    12679   10                                             TEXT$->B$DNAME.TEXT = NAME1$->T$C.CHARS;
      490    12680   11                                             IF SIZEW2 > 0 THEN DO;
      491    12681   11                                                 TEXT$ = PINCRW( TEXT$, SIZEW1 );
      492    12682   11                                                 TEXT$->B$DNAME.COUNT = NAME2$->T$C.
             12682                                                          COUNT;
      493    12683   11                                                 TEXT$->B$DNAME.TEXT = NAME2$->T$C.
             12683                                                          CHARS;
      494    12684   11                                                 END;
      495    12685   10                                             END;
      496    12686    9                                         END;
      497    12687    8                                   CASE( @C_REMOVE_ENTDEF );
      498    12688    8                                     VX_O.VECTOR_.REMOVE_ENTDEF = 1;
      499    12689    8                                   CASE( @C_REMOVE_SYMDEF );
      500    12690    8                                     VX_O.VECTOR_.REMOVE_SYMDEF = 1;
      501    12691    8                                   CASE( @C_VECTOR_DATA );
      502    12692    8                                     R$ = LEVEL3$->O$B.SUBLK$(0)->O$B.SUBLK$(0);
      503    12693    8                                     CALL VXD$C2B( VX_O.VECTOR_.DATA, R$->T$C, 10);
      504    12694    8                                   END;
      505    12695    7   SKIP_VECTOR_OPTION:
      506    12696    7                                 END;
      507    12697    6                           CASE(11);       /* N_NODCB_OPTION */
      508    12698    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;
      509    12699    7                             IF VX_OD.DCB_MATCH_A$(L) THEN DO;
      510    12700    7                                 VX_EFIELD2.COUNT = VX_ON.DCB_MATCH_A$(L) -> P$LIT.
             12700                                          COUNT;
      511    12701    7                                 VX_EFIELD2.CHARS = VX_ON.DCB_MATCH_A$(L) -> P$LIT.TEXT
             12701                                          ;
      512    12702    7                                 VX_EFIELD1.COUNT = VX_ON.NODCB_A$(L) -> P$LIT.COUNT;
      513    12703    7                                 VX_EFIELD1.CHARS = VX_ON.NODCB_A$(L) -> P$LIT.TEXT;
      514    12704                                      %SCREAM( ERR#=E$OPT_CONFLICT_VX, LEVEL=@E$W_VX, MID=
             12704                                          "'P'");
      515    12707    7                                 GOTO SKIP_OPTION;
      516    12708    7                                 END;
      517    12709                                  %CHK_DUP_OPT(
      518    12710                                  STRUCT="VX_OD.NODCB_A(L)",
      519    12711                                  STRUCT_NAME$="VX_ON.NODCB_A$(L)" );
      520    12718    6                             VX_O.NODCB_A(L) = 1;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:33   
      521    12719    6                           CASE(12);       /* N_SLOCK_OPTION */
      522    12720    6                             VX_EFIELD1.COUNT = VX_ON.SLOCK$ -> P$LIT.COUNT;
      523    12721    6                             VX_EFIELD1.CHARS = VX_ON.SLOCK$ -> P$LIT.TEXT;
      524    12722    7                             IF VX_OD.WLOCK THEN DO;
      525    12723    7                                 VX_EFIELD2.COUNT = VX_ON.WLOCK$ -> P$LIT.COUNT;
      526    12724    7                                 VX_EFIELD2.CHARS = VX_ON.WLOCK$ -> P$LIT.TEXT;
      527    12725                                      %SCREAM( ERR#=E$OPT_CONFLICT_VX,LEVEL=@E$W_VX,MID=
             12725                                          "'P'");
      528    12728    7                                 GOTO SKIP_OPTION;
      529    12729    7                                 END;
      530    12730                                  %CHK_DUP_OPT(
      531    12731                                  STRUCT="VX_OD.SLOCK",
      532    12732                                  STRUCT_NAME$="VX_ON.SLOCK$" );
      533    12739    6                             GOTO BUILD_LOCK;
      534    12740    6                           CASE(13);       /* N_WLOCK_OPTION */
      535    12741    6                             VX_EFIELD1.COUNT = VX_ON.WLOCK$ -> P$LIT.COUNT;
      536    12742    6                             VX_EFIELD1.CHARS = VX_ON.WLOCK$ -> P$LIT.TEXT;
      537    12743    7                             IF VX_OD.SLOCK THEN DO;
      538    12744    7                                 VX_EFIELD2.COUNT = VX_ON.SLOCK$ -> P$LIT.COUNT;
      539    12745    7                                 VX_EFIELD2.CHARS = VX_ON.SLOCK$ -> P$LIT.TEXT;
      540    12746                                      %SCREAM( ERR#=E$OPT_CONFLICT_VX,LEVEL=@E$W_VX,MID=
             12746                                          "'P'");
      541    12749    7                                 GOTO SKIP_OPTION;
      542    12750    7                                 END;
      543    12751                                  %CHK_DUP_OPT(
      544    12752                                  STRUCT="VX_OD.WLOCK",
      545    12753                                  STRUCT_NAME$="VX_ON.WLOCK$" );
      546    12760    6   BUILD_LOCK:
      547    12761    6                             ITEM_STOP = LEVEL2$ -> O$B.NSUBLKS - 1;
      548    12762    7                             DO L = 0 TO ITEM_STOP;
      549    12763    7                                 R$ = LEVEL2$ -> O$B.SUBLK$(L) -> O$B.SUBLK$(0) ;
      550    12764    7                                 CALL VXD$C2B( BASE, R$ -> T$C, 10 );
      551    12765    8                                 IF BASE < 1 OR BASE > 72 THEN DO;
      552    12766        /*E*  ERROR: VXP-E$ILLEGAL_LOCK_VAL_VX-0
      553    12767              MESSAGE: Illegal %U1 value ignored: %U2.
      554    12768        */
      555    12769    8                                     VX_EFIELD2 = R$ -> T$C;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:34   
      556    12770                                          %SCREAM( ERR#=E$ILLEGAL_LOCK_VAL_VX,
      557    12771                                          LEVEL=@E$W_VX, MID="'P'" );
      558    12774    8                                     END;
      559    12775    7                                 ELSE
      560    12776    7                                     VX_O.LOCK(BASE-1) = '1'B;
      561    12777    7                                 END;
      562    12778    6                           CASE(15);       /* Pseudo resourse */
      563    12779                                  %CHK_DUP_OPT
      564    12780                                          (STRUCT="VX_OD.PSEUDO",
      565    12781                                          STRUCT_NAME$="VX_ON.PSEUDO$");
      566    12788    6                             R$=LEVEL2$->O$B.SUBLK$(0);
      567    12789    6                             VX_RU_HEAD.PSEUDO_TEXT=R$->O$B.SUBLK$(0)->T$C.CHARS;
      568    12790    6                             VX_RU_HEAD.PSEUDO_COUNT = 1;
      569    12791    6                             VX_O.PSEUDO.TEXT = VX_RU_HEAD.PSEUDO_TEXT;
      570    12792    6                             IF LEVEL2$->O$B.NSUBLKS = 2
      571    12793    6                             THEN
      572    12794    7                             DO;
      573    12795    7                                 CALL CHARBIN(ITEM_STOP,LEVEL2$->O$B.SUBLK$(1)->O$B.
             12795                                          SUBLK$(0)->T$C.CHARS);
      574    12796    7                                 IF ITEM_STOP > 511
      575    12797    7                                 THEN
      576    12798    7                                     ITEM_STOP = 511;
      577    12799    7                                 VX_RU_HEAD.PSEUDO_COUNT = ITEM_STOP;
      578    12800    7                                 VX_O.PSEUDO.COUNT = ITEM_STOP;
      579    12801    7                                 END;
      580    12802    6                           CASE(14);       /* N_VERSION_OPTION */
      581    12803                                  %CHK_DUP_OPT(STRUCT="VX_OD.VERSION",STRUCT_NAME$=
             12803                                      "VX_ON.VERSION$");
      582    12810    6                             R$ = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.SUBLK$(0);
      583    12811    6                             VX_O.VERSION.COUNT = R$ -> T$C.COUNT;
      584    12812    6                             VX_O.VERSION.TEXT  = R$ -> T$C.CHARS;
      585    12813    6                           END;            /* Do case( LEVEL2$ -> O$B.CODE - 1 ) */
      586    12814    5   SKIP_OPTION:
      587    12815    5                         END;              /* Do j = 0 to OPT_STOP   */
      588    12816    4                   END;                    /* Do case( LEVEL1$ -> O$B.CODE - 1 ) */
      589    12817    3                 END;                      /* Do case( Q$ -> O$B.CODE - 1 ) */
      590    12818        /**/
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:35   
      591    12819    3             IF VX_FID_COUNT <= 0 THEN DO;
      592    12820    3                 CALL VXS$LST( Q$,
      593    12821    3                         ADDR( STAR_G ),
      594    12822    3                         @OF,
      595    12823    3                         @OF_ALL,
      596    12824    3                         ADDR(NIL),
      597    12825    3                         0 );
      598    12826    3                 VX_ROOT$ -> VX$NODE.HEAD$ = Q$;
      599    12827    3                 VX_ROOT$ -> VX$NODE.TAIL$ = Q$;
      600    12828    3                 END;
      601    12829
      602    12830    2             IF VX_ROOT$->VX$NODE.SON$ ~= ADDR(NIL) AND NOT VX_OD.NUM.BREF
      603    12831    3                     AND NOT VX_OD.SIN.NOBREF THEN DO;
      604    12832    3                 VX_OD.NUM.BREF = '1'B;
      605    12833    3                 VX_O.NUM.BREF = VX_NUM_UNIQUE_BREFS; /* Set bref default */
      606    12834    3                 VX_BREF_DEFAULT_SET = '1'B;
      607    12835    3                 END;
      608    12836
      609    12837        /**/
      610    12838        /**/
      611    12839    2           END;                            /* Do case( Q$ -> O$B.CODE - 1 ); */
      612    12840    1         CALL VXF$FREE( @DS3, PWORK_SIZE, @NO ); /* Give back the work area */
      613    12841    1         RETURN;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:36   
      615    12843    1   PARSE_ERROR:;
      616    12844    1   VXP$DUP_OPT:
      617    12845    1         PROC( NAME$ );
      618    12846        %P;

             12854    1   /*******************************************************************************
             12855    1   *                                                                              *
             12856    1   *                          PARAMETERS                                              *
             12857    1   *                                                                              *
             12858    1   *******************************************************************************/

      619    12862    2   DCL NAME$           PTR;
      620    12863        /**/
      621    12864        /**/
      622    12865        /**/
      623    12866        /*E*  ERROR: VXP-E$DUP_OPT_VX-0
      624    12867              MESSAGE: Duplicate %U1 option ignored. First occurrence taken.
      625    12868              DESCRIPTION: Self-explanatory.
      626    12869        */
      627    12870    2         VX_EFIELD1.COUNT = NAME$ -> P$LIT.COUNT;
      628    12871    2         VX_EFIELD1.CHARS = NAME$ -> P$LIT.TEXT;
      629    12872              %SCREAM(
      630    12873              ERR#=E$DUP_OPT_VX,
      631    12874              MID="'P'",
      632    12875              LEVEL=@E$W_VX);
      633    12878    2         RETURN;
      634    12879    2   END VXP$DUP_OPT;
      635    12880
      636    12881
      637    12882    1   END VXP$PARSE;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:37   
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   VX_PSUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXP$PARSE.

   Procedure VXP$PARSE requires 1522 words for executable code.
   Procedure VXP$PARSE requires 50 words of local(AUTO) storage.

    No errors detected in file VXP$PARSE.:E05TSI    .

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:38   

 Object Unit name= VXP$PARSE                                  File name= VXP$PARSE.:E05TOU
 UTS= JUL 30 '97 08:33:27.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2   Data  even  none     1      1  VXP$PARSE
    3  RoData even  UTS      2      2  VXP$PARSE
    4   Proc  even  none  1522   2762  VXP$PARSE
    5  RoData even  none    80    120  VXP$PARSE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        2  VXP$PARSE

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2      0  OPTION_LIST_INCLUDED
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:39   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       5 VXP$PAR
         yes           Std       2 VXA$ND
         yes           Std       7 VXP$TREE
         yes           Std       3 VXD$ALST
         yes           Std       3 VXA$GET
 yes     yes           Std       6 VXS$LST
         yes           Std       3 VXF$CLOSE
 yes     yes           Std       0 VXF$OPEN_LO
         yes           Std       4 VXE$ERROR
         yes           Std       3 VXD$C2B
         yes           Std       0 VXU$INIT_VECTOR
         yes           Std       3 VXF$FREE
         yes           Std       6 VXD$FLST
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:40   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_PRE_DCB_NAME$                      VX_PRE_DCB_START$
     VX_PRE_DCB_STOP$                      VX_P_PCB_MAIN                         VX_RU_NAME$
     B$JIT$                                VX_RU_HEAD                            VX_OU_HEAD
     VX_COMMAND                            VX_ON_OVER                            VX_ON_OVER_RUF
     VX_COUNT_FID                          VX_FID_COUNT                          VX_GOT_ON_OVER
     VX_NUM_UNIQUE_BREFS                   VX_BREF_DEFAULT_SET                   VX_ROOT$
     VX_RUF$                               VX_LOF$                               VX_CURR$
     VX_ERRORS                             VX_M_FREE                             VX_M_ALL
     VX_M_BASE_PTR                         VX_O                                  VX_OD
     VX_ON                                 VX_EFIELD1                            VX_EFIELD2
     VX_EFIELD3                            VX_DCB_OPTION_TEXT                    B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:41   


        1        1        /*M* VXP$PARSE - Processes the command parse tree. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,PLM=6,IND=4,SDI=2,CTI=8,DCI=4,CSU=2,ECU=2,ENI=4,
        8        8              THI=0,DTI=0,IAD=0,CCC                          */
        9        9        %MACRO CHK_DUP_OPT(
       10       10              STRUCT=STRUCT,
       11       11              STRUCT_NAME$=STRUCT_NAME$,
       12       12              ERROR="GOTO SKIP_OPTION;");
       13       13              IF STRUCT THEN DO;
       14       14                  CALL VXP$DUP_OPT( STRUCT_NAME$ );
       15       15                  ERROR
       16       16                  END;
       17       17              ELSE STRUCT = @TRUE_B;
       18       18        %MEND;
       19       19        VXP$PARSE: PROC( START_SYMBOL$, TYPE );

     19  4 000000   000000 700200 xent  VXP$PARSE    TSX0  ! X66_AUTO_2
         4 000001   000062 000002                    ZERO    50,2

       20       20
       21       21
       22       22        /*
       23       23                          Include files
       24       24        */
       25       25        %INCLUDE VX_INC_C;
       26    10741        %INCLUDE XU_SUBS_C;
       27    10833        %INCLUDE XU_PERR_C;
       28    11024        %INCLUDE VX_PSUBS_C;
       29    11202        %INCLUDE B$JIT;
       30    11492        %VX$NODE;

             11504    1   /*******************************************************************************
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:42   
             11505    1   *                                                                              *
             11506    1   *                          VX$NODE                                                *
             11507    1   *                                                                              *
             11508    1   *******************************************************************************/

             11524    1   DCL 1 VX$NODE      ALIGNED    BASED,
             11525    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             11526    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             11527    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             11528    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             11529    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             11530                              to list of file nodes for this node            */
             11531    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             11532    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             11532                  /* Head pointer to shared library list */
             11533    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             11533                  /* Head pointer to list of shared libraries
             11534                                          which have been mapped to included libraries */
             11535    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             11536    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             11537    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             11538    1         2 ADDR_START REDEF  ADDR_START_A,
             11539    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             11540    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             11541    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             11542    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             11543    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             11544    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             11545    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             11546    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             11547    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             11548    1         2 START_PAGE# REDEF START_PAGE#_A,
             11549    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             11550    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             11551    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             11552    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             11553    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:43   
             11554    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             11555    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             11556    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             11557    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11557                  /* Starting pointer for common sections for this node */
             11558    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11558                  /* Stopping pointer for common sections for this node */
             11559    1         2 L_START,
             11560    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11561    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             11562    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             11563    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11564    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11565    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11566    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11567    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             11568    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             11569    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11570    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             11571    1         2 L_STOP,
             11572    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11573    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             11574    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             11575    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11576    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11577    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11578    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11579    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             11580    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             11581    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11582    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             11583    1         2 L_SIZE,
             11584    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11585    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11586    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11587    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11588    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:44   
             11589    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11590    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11591    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11592    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11593    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             11594    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             11595    1         2 L_PREV_SIZE,
             11596    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11597    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11598    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11599    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11600    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             11601    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11602    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11603    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11604    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11605    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             11606    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             11607    1         2 BIT_MAP                ALIGNED,
             11608    1           3 DATA                  ALIGNED,
             11609    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11610    1           3 RPROC                 ALIGNED,
             11611    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11612    1           3 ROS                   ALIGNED,
             11613    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11614    1         2 L_SC_START,
             11615    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11616    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             11617    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11618    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11619    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             11620    1         2 L_SC_STOP,
             11621    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11622    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             11623    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11624    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11625    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:45   
             11626    1         2 PROMOTE_HEAD,
             11627    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11628    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11629    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             11630    1         2 PROMOTE_TAIL,
             11631    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11632    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11633    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             11634    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             11635    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             11636    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             11637    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             11638    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       31    11642        %VX$SC;

             11655    1   /*******************************************************************************
             11656    1   *                                                                              *
             11657    1   *                          VX$SC                                                 *
             11658    1   *                                                                              *
             11659    1   *******************************************************************************/

             11664    1   DCL 1 VX$SC BASED ALIGNED,
             11665    1         2 SEG UBIN(3) UNAL,
             11666                /*K*  SEG - The segment number of this section */
             11667    1         2 TYPE UBIN(6) UNAL,
             11668                /*K*  TYPE -
             11669                      Type code      Section type
             11670                      ---------      ------------
             11671                          0          Data control section with write access.
             11672                          1          Procedure control section.
             11673                          2          Unlabeled common, name pointer must be zero.
             11674                          3          Labeled common, with mandatory name pointer.
             11675                                     This is for labeled common which must be
             11676                                     in the root.
             11677                          4          Labeled common, with mandatory name pointer.
             11678                                     This is for labeled common which need not
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:46   
             11679                                     be in the root.
             11680                          5          DCB, word 1 is name pointer.
             11681                          6          Data control section with read only access,
             11682                                     word 1 = 0 or name pointer.      */
             11683    1         2 EMPTY BIT(1) UNAL,
             11684                /*K*  EMPTY is the empty bit.  This bit is set if the control
             11685                      section is of size zero.  */
             11686    1         2 ATTR UNAL,
             11687    1           3 INT  UBIN(2) UNAL,
             11688                  /*K*  INT is the Section initialization.  */
             11689    1           3 SEGMENT BIT(1) UNAL,
             11690                  /*K* SEGMENT is set if the Section is defined in a data
             11691                       segment.  */
             11692    1           3 ALL BIT(1) UNAL,
             11693                  /*K*  ALL is set if the Section is allocated.  */
             11694    1           3 PRE_DCB BIT(1) UNAL,
             11695                  /*K*  PRE_DCB is set if a Pre_defined DCB.  */
             11696    1           3 MES_INIT BIT(1) UNAL,
             11697    1           3 ALIGN UBIN(2) UNAL,
             11698                  /*K*  ALIGN is the Section alignment.  */
             11699    1         2 ADDRESS UBIN HALF UNAL,
             11700                /*K*  ADDRESS is the address within the Instruction Segment of
             11701                      the entry point of the external procedure.  */
             11702    1         2 NAME_DISP SBIN HALF UNAL,
             11703                /*K*  NAME_DISP is the Name index.  */
             11704    1         2 SIZE UBIN HALF UNAL,
             11705                /*K*  SIZE is the size, in words, of the section.  */
             11706    1         2 NODE# UBIN HALF UNAL,
             11707                /*K*  NODE# is the Node number of section.  */
             11708    1         2 COM_LINK UBIN HALF UNAL;
             11709                /*K*  COM_LINK is used internally by linker to link common sections */

             11719    1   /*******************************************************************************
             11720    1   *                                                                              *
             11721    1   *                          VX$SECT                                                *
             11722    1   *                                                                              *
             11723    1   *******************************************************************************/
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:47   

             11728    1   DCL 1 VX$SECT BASED ALIGNED,
             11729    1         2 TYPE UBIN BYTE UNAL,
             11730                /*K*  TYPE -
             11731                      Type code      Section type
             11732                      ---------      ------------
             11733                          0          Data control section with write access.
             11734                          1          Procedure control section.
             11735                          2          Unlabeled common, name pointer must be zero.
             11736                          3          Labeled common, with mandatory name pointer.
             11737                                     This is for labeled common which must be
             11738                                     in the root.
             11739                          4          Labeled common, with mandatory name pointer.
             11740                                     This is for labeled common which need not
             11741                                     be in the root.
             11742                          5          DCB, word 1 is name pointer.
             11743                          6          Data control section with read only access,
             11744                                     word 1 = 0 or name pointer.
             11745                          7          Constant labeled common, with mandatory name pointer.
             11746                                     This is for labeled common which must be
             11747                                     in the root.
             11748                          8          Constant labeled common, with mandatory name pointer.
             11749                                     This is for labeled common which need not
             11750                                     be in the root.                        */
             11751    1         2 * BIT(1),
             11752                /*K*  * is reserved for future use and must be zero. */
             11753    1         2 INITZERO BIT(1),
             11754                /*K*  INITZERO - if 1, initialize with zero.  */
             11755    1         2 INITUTS BIT(1),
             11756                /*K*  INITUTS - if 1, initialize with UTS.  */
             11757    1         2 SEGMENT BIT(1),
             11758                /*K*  SEGMENT - if 1, specifies that this section is
             11759                                to be placed in the segment specified by
             11760                                SEG_NPOINTER.  */
             11761    1         2 * BIT(3),
             11762                /*K*  * is reserved for future use and must be zero. */
             11763    1         2 BOUND UBIN(2) UNAL,
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:48   
             11764                /*K*  BOUND - bits 6-7 - defines starting location.
             11765                              00 - starts on even word
             11766                              01 - starts on odd word
             11767                              10 - starts on multiple of 8
             11768                              11 - starts on page boundary     */
             11769    1         2 SIZE UBIN HALF UNAL,
             11770                /*K*  SIZE is the size, in words, of the section.  */
             11771    1         2 NPOINTER SBIN HALF UNAL,
             11772                /*K*  NPOINTER is the word displacement into the name record
             11773                      (TYPE 1) locating the name of this section.  If the
             11774                      field is negative, the section has no name.  */
             11775    1         2 MBZ UBIN HALF UNAL,
             11776                /*K*  MBZ is reserved for future expansion and must be zero. */
             11777    1         2 SEG_NPOINTER REDEF MBZ SBIN HALF UNAL,
             11778                /*K*  SEG_NPOINTER locates a name in the Definition Names
             11779                      Section.  The name must be a valid segment name
             11780                      recognized by the linker.  */
             11781    1         2 G66 REDEF MBZ,
             11782                /*K*  G66 is not used on CP-6. */
             11783    1           3 * BIT(9),
             11784    1           3 NSAB BIT(9);
       32    11787        %VX$LST;

             11800    1   /*******************************************************************************
             11801    1   *                                                                              *
             11802    1   *                          VX$LST                                                 *
             11803    1   *                                                                              *
             11804    1   *******************************************************************************/

             11809    1   DCL 1 VX$LST                          ALIGNED BASED,
             11810    1         2 LINK$        PTR,               /* Link to next item                  */
             11811    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             11812    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             11813    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             11814    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             11815    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             11816    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:49   
             11817    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             11818    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             11819    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             11820    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             11821    1         2 P,
             11822    1           3 NAME_       ALIGNED,
             11823    1             4 BOUND      UBIN(20)  UNAL,
             11824    1             4 FLAGSV     UBIN(11)  UNAL,
             11825    1             4 *          BIT(5)    UNAL,
             11826    1             4 NAME$      PTR,
             11827    1           3 ACCT_       ALIGNED,
             11828    1             4 BOUND      UBIN(20)  UNAL,
             11829    1             4 FLAGSV     UBIN(11)  UNAL,
             11830    1             4 *          BIT(5)    UNAL,
             11831    1             4 ACCT$      PTR,
             11832    1           3 PASS_       ALIGNED,
             11833    1             4 BOUND      UBIN(20)  UNAL,
             11834    1             4 FLAGSV     UBIN(11)  UNAL,
             11835    1             4 *          BIT(5)    UNAL,
             11836    1             4 PASS$      PTR,
             11837    1           3 SN_         ALIGNED,
             11838    1             4 BOUND      UBIN(20)  UNAL,
             11839    1             4 FLAGSV     UBIN(11)  UNAL,
             11840    1             4 *          BIT(5)    UNAL,
             11841    1             4 SN$        PTR,
             11842    1           3 WSN_        ALIGNED,
             11843    1             4 BOUND      UBIN(20)  UNAL,
             11844    1             4 FLAGSV     UBIN(11)  UNAL,
             11845    1             4 *          BIT(5)    UNAL,
             11846    1             4 WSN$       PTR,
             11847    1           3 B           ALIGNED,
             11848    1             4 RES        BIT(1)    UNAL,
             11849    1             4 ASN        BIT(1)    UNAL,
             11850    1             4 ACCT       BIT(1)    UNAL,
             11851    1             4 *          BIT(33)   UNAL,
             11852    1           3 RES         CHAR(4)   ALIGNED,
             11853    1           3 ASN         UBIN(36)  ALIGNED;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:50   
       33    11856        %VX$VECTOR_LST;

             11869    1   /*******************************************************************************
             11870    1   *                                                                              *
             11871    1   *                          VX$VECTOR_LST                                          *
             11872    1   *                                                                              *
             11873    1   *******************************************************************************/

             11877    1   DCL 1 VX$VECTOR_LST ALIGNED BASED,
             11878    1         2 SIZEW1 UBIN HALF UNAL,
             11879    1         2 SIZEW2 UBIN HALF UNAL;
       34    11881        %T$C;

             11893    1   /*******************************************************************************
             11894    1   *                                                                              *
             11895    1   *                          T$C                                                 *
             11896    1   *                                                                              *
             11897    1   *******************************************************************************/

             11902    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             11903    1         2 COUNT        UBIN( 9) UNAL,
             11904    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             11905    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             11906    1         2 COUNT        UBIN( 9) UNAL,
             11907    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       35    11910        %SET LISTMAC='1'B;
       36    11911        %SET LISTEXP='1'B;
       37    11912        %SET LISTSUB='1'B;
       38    11913        %BANNER(ARG=B$DNAME);
             11914        %LSET LISTDIR='0'B;

             11921    1   /*******************************************************************************
             11922    1   *                                                                              *
             11923    1   *                          B$DNAME                                                *
             11924    1   *                                                                              *
             11925    1   *******************************************************************************/

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:51   
       39    11929        %B$DNAME( NAME=B$DNAME, STCLASS=BASED );
             11930            %LSET STR='BASED        ';
             11931            %IF
             11932                '0'B;
             11934            %ELSE;
             11935                %LSET INIT=/*;
             11936            %ENDIF;
             11937    1   DCL 1 B$DNAME BASED ALIGNED,
             11938    1         2 COUNT UBIN HALF UNAL /*(SIZEC(' ')) /**/,
             11939                /*K*  COUNT is the number of characters in the name */
             11940            %IF
             11941                '0'B;
             11944            %ELSE;
             11945    1         2 TEXT CHAR(B$DNAME.COUNT) UNAL;
             11946            %ENDIF;
       40    11948        %P;
             11949        %LSET LISTDIR='0'B;

             11956    1   /*******************************************************************************
             11957    1   *                                                                              *
             11958    1   *                          PARAMETERS                                             *
             11959    1   *                                                                              *
             11960    1   *******************************************************************************/

       41    11964    1   DCL START_SYMBOL$   PTR;
       42    11965    1   DCL TYPE            UBIN(36)  ALIGNED;
       43    11966        %EJECT;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:52   
       44    11967        %PARSE$OUT( NAME=O$B, STCLASS="BASED");
             11968        /*F*  NAME:     PARSE$OUT
             11969              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             11970                  "alternative", "reducing alternative", or "koncat" node in
             11971                  the user's parse tree.
             11972        */
             11973    1   DCL 1 O$B BASED ALIGNED,
             11974    1         2 TEMP BIT(1) UNAL,
             11975    1         2 * BIT (11) UNAL,
             11976    1         2 NDTYPE UBIN (6) UNAL,
             11977        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             11978                  block corresponds.  See the XU_SUBS_C file for the
             11979                  %EQU symbols whose values may appear in this field.
             11980        */
             11981    1         2 CODE UBIN HALF HALIGNED,
             11982        /*K* CODE - Contains the numeric "node code" specified by the user when
             11983                  the corresponding parse-node was defined.
             11984        */
             11985    1         2 NSUBLKS UBIN HALF HALIGNED,
             11986        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             11987                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             11988        */
             11989    1         2 SCRITCH UBIN HALF HALIGNED,
             11990        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             11991                  initializes this field to zero when the PARSE$OUT structure
             11992                  is allocated, and never sets or examines it thereafter.
             11993                  The name of this field may be changed when the PARSE$OUT macro
             11994                  is invoked by the user (say "SCRITCH=yourname"), and its data
             11995                  type may also be changed (say "SCRMODE=pl6datatype" and
             11996                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             11997                  and be UNALIGNED, CALIGNED, or HALIGNED.
             11998        */
             11999    1         2 CPOS UBIN WORD,
             12000        /*K* CPOS - "character position" of this block.  This field will contain
             12001                  a character index (starting at 0) into the original parse
             12002                  string;  the index identifies the first character of the
             12003                  string which was accepted by this node (or by any of its
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:53   
             12004                  sub-nodes).
             12005        */
             12006    1         2 SUBLK$(0:0) PTR UNAL;
             12007        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             12008                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             12009                  OUT$BLK structure, or to an OUT$SYM structure.
             12010        */
       45    12012        %P$LIT ( NAME=P$LIT, STCLASS="BASED", LEN="P$LIT.COUNT" );
             12013        /*F*  NAME:     P$LIT
             12014              FUNCTION: a structure used to describe "literal" parse nodes, as
             12015                  built by PARTRGE and interrogated by X$PARSE.  The P$LIT
             12016                  structure is a sort of "overlay" of P$NODE;  these structures
             12017                  have many sub-fields in common (TYPE, P_F, S_F, O_F,
             12018                  OPT, RPEAT, SKBL, and RTEXT).  Documentation for these
             12019                  common sub-fields may be found under the P$NODE structure.
             12020        */
             12021        %IF '1'B;
             12022    1   DCL 1 P$LIT BASED ALIGNED,
             12023        %ELSE;
             12025        %ENDIF;
             12026    1         2 TYPE UBIN(3) UNAL,
             12027        /*K* TYPE - identifies the type of this P$LIT node.  This field always
             12028                  contains the value %TYPE_LITERAL# as found in XU_SUBS_C.
             12029        */
             12030    1         2 P_F BIT(1) UNAL,
             12031    1         2 S_F BIT(1) UNAL,
             12032    1         2 F_F BIT(1) UNAL,
             12033    1         2 O_F BIT(1) UNAL,
             12034    1         2 OPT BIT(1) UNAL,
             12035    1         2 RPEAT BIT(1) UNAL,
             12036    1         2 SKBL BIT(1) UNAL,
             12037    1         2 RTEXT BIT(1) UNAL,
             12038    1         2 UPRLOWR BIT(1) UNAL,
             12039        /*K* UPRLOWR - specifies that this node is to be compared to the input
             12040                  string in a case-insensitive fashion;  upper- and lower-case
             12041                  characters are considered equivalent.  This option is normally
             12042                  set for all 'literal' nodes;  it is reset if the first character
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:54   
             12043                  of a literal node is an '=' character, which indicates that
             12044                  the literal text must be matched '=ExactLy'.
             12045        */
             12046    1         2 ABREV UBIN (8) UNAL,
             12047        /*K* ABREV - an integer field which contains either 0, or the minimum
             12048                  length of an acceptable abbreviation of this literal.
             12049                  For example:  the PARTRGE literal 'ABCDEF' has an ABREV of 0;
             12050                  the literal 'ABC/DEF' has an ABREV of 3.
             12051        */
             12052    1         2 CODE UBIN (16) UNAL,
             12053    1         2 COUNT UBIN BYTE CALIGNED,
             12054        /*K* COUNT - the number of characters in this literal.
             12055        */
             12056    1         2 TEXT CHAR(P$LIT.COUNT)
             12057        /*K* TEXT - a CHAR variable which contains the text of this literal.
             12058        */
             12059        %IF '1'B;
             12060    1         ;
             12061        %ELSE;
             12063        %ENDIF;
       46    12065        %S;
             12066        %LSET LISTDIR='0'B;

             12073    1   /*******************************************************************************
             12074    1   *                                                                              *
             12075    1   *                          SBIN                                                 *
             12076    1   *                                                                              *
             12077    1   *******************************************************************************/

       47    12081        %INDEX;
             12082    1   DCL I          UBIN(36) ALIGNED AUTO;
             12083    1   DCL SI REDEF I SBIN WORD ALIGNED;
             12084    1   DCL J          UBIN(36) ALIGNED AUTO;
             12085    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             12086    1   DCL K          UBIN(36) ALIGNED AUTO;
             12087    1   DCL SK REDEF K SBIN WORD ALIGNED;
             12088    1   DCL L          UBIN(36) ALIGNED AUTO;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:55   
             12089    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       48    12091        %E;
             12092        %LSET LISTDIR='0'B;

             12099    1   /*******************************************************************************
             12100    1   *                                                                              *
             12101    1   *                          ENTRY                                                 *
             12102    1   *                                                                              *
             12103    1   *******************************************************************************/

       49    12107    1   DCL VXP$PAR         ENTRY(5)       ALTRET;
       50    12108    1   DCL X$PARSE ENTRY(1) ALTRET;
       51    12109    1   DCL VXA$GET         ENTRY(3);
       52    12110    1   DCL VXF$FREE        ENTRY(3);
       53    12111    1   DCL VXF$CLOSE       ENTRY(3);
       54    12112    1   DCL VXF$OPEN_LO     ENTRY ALTRET;
       55    12113    1   DCL VXR$READ        ENTRY(2);
       56    12114    1   DCL VXW$WRITE       ENTRY(3);
       57    12115    1   DCL VXD$C2B         ENTRY(3);
       58    12116    1   DCL VXA$ND          ENTRY(2);
       59    12117    1   DCL VXD$FLST        ENTRY(6);
       60    12118    1   DCL VXD$ALST        ENTRY(3);
       61    12119    1   DCL VXS$LST         ENTRY(6) ALTRET;
       62    12120    1   DCL VXP$TREE        ENTRY(7);
       63    12121    1   DCL VXE$ERROR          ENTRY(4);
       64    12122    1   DCL VXU$INIT_VECTOR   ENTRY;
       65    12123        %U;
             12124        %LSET LISTDIR='0'B;

             12131    1   /*******************************************************************************
             12132    1   *                                                                              *
             12133    1   *                          UBIN                                                 *
             12134    1   *                                                                              *
             12135    1   *******************************************************************************/

       66    12139    1   DCL CHAR_COUNT      UBIN(36) ALIGNED    AUTO;
       67    12140    1   DCL PWORK_SIZE      UBIN(36) ALIGNED    AUTO;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:56   
       68    12141    1   DCL SIZE            UBIN(36) ALIGNED    AUTO;
       69    12142    1   DCL STOP            UBIN(36) ALIGNED    AUTO;
       70    12143    1   DCL OPT_STOP        UBIN(36) ALIGNED    AUTO;
       71    12144    1   DCL ITEM_STOP       UBIN(36) ALIGNED    AUTO;
       72    12145    1   DCL KON_STOP        UBIN(36) ALIGNED    AUTO;
       73    12146    1   DCL CTEMP           UBIN(36) ALIGNED    AUTO;
       74    12147    1   DCL BASE            UBIN(36) ALIGNED    AUTO;
       75    12148    1   DCL SIZEW1          UBIN(36) ALIGNED    AUTO;
       76    12149    1   DCL OPTION_LIST_INCLUDED UBIN STATIC    SYMDEF;
       77    12150    1   DCL SIZEW2          UBIN(36) ALIGNED    AUTO;
       78    12151        %PTR;
             12152        %LSET LISTDIR='0'B;

             12159    1   /*******************************************************************************
             12160    1   *                                                                              *
             12161    1   *                          PTR                                                 *
             12162    1   *                                                                              *
             12163    1   *******************************************************************************/

       79    12167        %POINTER;
             12168    1   DCL P$         PTR       ALIGNED AUTO;
             12169    1   DCL Q$         PTR       ALIGNED AUTO;
             12170    1   DCL R$         PTR       ALIGNED AUTO;
       80    12172    1   DCL HEAD$           PTR  ALIGNED   AUTO;
       81    12173    1   DCL TAIL$           PTR  ALIGNED   AUTO;
       82    12174    1   DCL DUMMY$          PTR  ALIGNED        AUTO;
       83    12175    1   DCL PWORK$          PTR  ALIGNED        AUTO;
       84    12176    1   DCL START$          PTR  ALIGNED        AUTO;
       85    12177    1   DCL LEVEL1$         PTR  ALIGNED        AUTO;
       86    12178    1   DCL LEVEL2$         PTR  ALIGNED        AUTO;
       87    12179    1   DCL LEVEL3$         PTR  ALIGNED        AUTO;
       88    12180    1   DCL CURR$           PTR  ALIGNED   AUTO;
       89    12181    1   DCL NODE$           PTR  ALIGNED   AUTO;
       90    12182    1   DCL TEXT$           PTR  ALIGNED   AUTO;
       91    12183    1   DCL PREV$           PTR  ALIGNED   AUTO;
       92    12184    1   DCL NAME1$          PTR  ALIGNED   AUTO;
       93    12185    1   DCL NAME2$          PTR  ALIGNED   AUTO;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:57   
       94    12186    1   DCL LIST$           PTR  ALIGNED   AUTO;
       95    12187        /**/
       96    12188        /**/
       97    12189    1   DCL  SYMBOLIC_DCB   BIT(1);
       98    12190        /**/
       99    12191        /**/
      100    12192    1   DCL 1 STAR_G         ALIGNED   CONSTANT,
      101    12193    1         2 COUNT        UBIN(9)   UNAL INIT(2),
      102    12194    1         2 CHARS        CHAR(2)   UNAL INIT('*G');
      103    12195        %SET LISTMAC='0'B;
      104    12196        %SET LISTSUB='0'B;
      105    12197        %SET LISTDIR='0'B;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:58   
      107    12199    1         PWORK_SIZE = @PAGE_SIZE;          /* Set initial space request */

  12199  4 000002   002000 235007                    LDA     1024,DL
         4 000003   200012 755100                    STA     PWORK_SIZE,,AUTO

      108    12200    1         CALL VXP$PAR( TYPE,

  12200  4 000004   200012 630500                    EPPR0   PWORK_SIZE,,AUTO
         4 000005   200056 450500                    STP0    @NAME$+5,,AUTO
         4 000006   200011 631500                    EPPR1   CHAR_COUNT,,AUTO
         4 000007   200055 451500                    STP1    @NAME$+4,,AUTO
         4 000010   200033 633500                    EPPR3   START$,,AUTO
         4 000011   200054 453500                    STP3    @NAME$+3,,AUTO
         4 000012   200003 236100                    LDQ     @START_SYMBOL$,,AUTO
         4 000013   200004 235100                    LDA     @TYPE,,AUTO
         4 000014   200052 757100                    STAQ    @NAME$+1,,AUTO
         4 000015   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 000016   000023 631400 xsym               EPPR1   B_VECTNIL+19
         4 000017   000000 701000 xent               TSX1    VXP$PAR
         4 000020   002736 702000 4                  TSX2    PARSE_ERROR

      109    12201    1                 START_SYMBOL$,
      110    12202    1                 START$,
      111    12203    1                 CHAR_COUNT,
      112    12204    1                 PWORK_SIZE   )              ALTRET(PARSE_ERROR);
      113    12205    1         CALL VXA$ND( VX_ROOT$, ADDR(NIL) ); /* Set up the root */

  12205  4 000021   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000022   200052 756100                    STQ     @NAME$+1,,AUTO
         4 000023   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 000024   200055 450500                    STP0    @NAME$+4,,AUTO
         4 000025   000000 236000 5                  LDQ     0
         4 000026   200054 756100                    STQ     @NAME$+3,,AUTO
         4 000027   200054 630500                    EPPR0   @NAME$+3,,AUTO
         4 000030   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000031   000000 701000 xent               TSX1    VXA$ND
         4 000032   000000 011000                    NOP     0
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:59   

      114    12206    1         VX_CURR$ = VX_ROOT$;

  12206  4 000033   000000 236000 xsym               LDQ     VX_ROOT$
         4 000034   000000 756000 xsym               STQ     VX_CURR$

      115    12207    1         Q$ = VX_P_PCB_MAIN.OUT$ -> O$B.SUBLK$(0); /* Get pointer to command type */

  12207  4 000035   000003 470400 xsym               LDP0    VX_P_PCB_MAIN+3
         4 000036   000003 236100                    LDQ     3,,PR0
         4 000037   200025 756100                    STQ     Q$,,AUTO

      116    12208    2         DO CASE( Q$ -> O$B.CODE - 1 );    /* Jump on map or linking command */

  12208  4 000040   200025 471500                    LDP1    Q$,,AUTO
         4 000041   100000 236100                    LDQ     0,,PR1
         4 000042   777777 376007                    ANQ     -1,DL
         4 000043   000001 136007                    SBLQ    1,DL
         4 000044   000002 116007                    CMPQ    2,DL
         4 000045   000047 602006 4                  TNC     s:12208+7,QL
         4 000046   002723 710000 4                  TRA     s:12840
         4 000047   000051 710000 4                  TRA     s:12210
         4 000050   000201 710000 4                  TRA     s:12233

      117    12209    2           CASE(0);                        /* Map command */

      118    12210    2             VX_COMMAND = 0;               /* Set command type */

  12210  4 000051   000000 450000 xsym               STZ     VX_COMMAND

      119    12211    2             STOP = Q$ -> O$B.NSUBLKS - 1;

  12211  4 000052   100001 236100                    LDQ     1,,PR1
         4 000053   000022 772000                    QRL     18
         4 000054   000001 136007                    SBLQ    1,DL
         4 000055   200014 756100                    STQ     STOP,,AUTO

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:60   
      120    12212    2             CALL VXS$LST( VX_RUF$, Q$->O$B.SUBLK$(0)->O$B.SUBLK$(0)->O$B.SUBLK$(0),

  12212  4 000056   100003 473500                    LDP3    3,,PR1
         4 000057   300003 474500                    LDP4    3,,PR3
         4 000060   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000061   200052 756100                    STQ     @NAME$+1,,AUTO
         4 000062   000001 236000 5                  LDQ     1
         4 000063   200061 756100                    STQ     @NAME$+8,,AUTO
         4 000064   200052 633500                    EPPR3   @NAME$+1,,AUTO
         4 000065   200060 453500                    STP3    @NAME$+7,,AUTO
         4 000066   000002 237000 5                  LDAQ    2
         4 000067   200056 757100                    STAQ    @NAME$+5,,AUTO
         4 000070   400003 635500                    EPPR5   3,,PR4
         4 000071   200055 455500                    STP5    @NAME$+4,,AUTO
         4 000072   000004 236000 5                  LDQ     4
         4 000073   200054 756100                    STQ     @NAME$+3,,AUTO
         4 000074   200054 630500                    EPPR0   @NAME$+3,,AUTO
         4 000075   000024 631400 xsym               EPPR1   B_VECTNIL+20
         4 000076   000000 701000 xent               TSX1    VXS$LST
         4 000077   000000 011000                    NOP     0

      121    12213    2                     @RF, 0, ADDR(NIL), 0 ); /*Set the run file */
      122    12214    3             DO L = 1 TO STOP;

  12214  4 000100   000001 235007                    LDA     1,DL
         4 000101   200010 755100                    STA     L,,AUTO
         4 000102   000175 710000 4                  TRA     s:12230+3

      123    12215    3                 R$ = Q$ -> O$B.SUBLK$(L);

  12215  4 000103   200025 470500                    LDP0    Q$,,AUTO
         4 000104   200010 720100                    LXL0    L,,AUTO
         4 000105   000003 236110                    LDQ     3,X0,PR0
         4 000106   200026 756100                    STQ     R$,,AUTO

      124    12216    4                 DO CASE(R$ -> O$B.CODE);

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:61   
  12216  4 000107   200026 471500                    LDP1    R$,,AUTO
         4 000110   100000 236100                    LDQ     0,,PR1
         4 000111   777777 376007                    ANQ     -1,DL
         4 000112   000006 136007                    SBLQ    6,DL
         4 000113   000002 116007                    CMPQ    2,DL
         4 000114   000116 602006 4                  TNC     s:12216+7,QL
         4 000115   000167 710000 4                  TRA     s:12228
         4 000116   000127 710000 4                  TRA     s:12222
         4 000117   000120 710000 4                  TRA     s:12218

      125    12217    4                   CASE( @C_ALT_ON_OVER_INTO );

      126    12218    4                     VX_ON_OVER = R$ -> O$B.SUBLK$(0) -> O$B.CODE;
             12218                              /* Set targeting preposition */

  12218  4 000120   100003 473500                    LDP3    3,,PR1
         4 000121   300000 236100                    LDQ     0,,PR3
         4 000122   777777 376007                    ANQ     -1,DL
         4 000123   000000 756000 xsym               STQ     VX_ON_OVER

      127    12219    4                     VX_GOT_ON_OVER = @YES; /* Set hit on/over/into */

  12219  4 000124   000001 235007                    LDA     1,DL
         4 000125   000000 755000 xsym               STA     VX_GOT_ON_OVER
         4 000126   000172 710000 4                  TRA     s:12230

      128    12220
      129    12221    4                   CASE ( @C_LO_FILE );

      130    12222    4                     CALL VXF$CLOSE ( ADDR(NIL), @LO, @SAVE ); /* Close M$LO */

  12222  4 000127   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000130   200052 756100                    STQ     @NAME$+1,,AUTO
         4 000131   000006 237000 5                  LDAQ    6
         4 000132   200054 757100                    STAQ    @NAME$+3,,AUTO
         4 000133   200052 633500                    EPPR3   @NAME$+1,,AUTO
         4 000134   200053 453500                    STP3    @NAME$+2,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:62   
         4 000135   200053 630500                    EPPR0   @NAME$+2,,AUTO
         4 000136   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000137   000000 701000 xent               TSX1    VXF$CLOSE
         4 000140   000000 011000                    NOP     0

      131    12223    4                     CALL VXS$LST (VX_LOF$, R$->O$B.SUBLK$(0)->O$B.SUBLK$(0),

  12223  4 000141   200026 470500                    LDP0    R$,,AUTO
         4 000142   000003 471500                    LDP1    3,,PR0
         4 000143   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000144   200052 756100                    STQ     @NAME$+1,,AUTO
         4 000145   000011 236000 5                  LDQ     9
         4 000146   200061 756100                    STQ     @NAME$+8,,AUTO
         4 000147   200052 633500                    EPPR3   @NAME$+1,,AUTO
         4 000150   200060 453500                    STP3    @NAME$+7,,AUTO
         4 000151   000012 237000 5                  LDAQ    10
         4 000152   200056 757100                    STAQ    @NAME$+5,,AUTO
         4 000153   100003 634500                    EPPR4   3,,PR1
         4 000154   200055 454500                    STP4    @NAME$+4,,AUTO
         4 000155   000014 236000 5                  LDQ     12
         4 000156   200054 756100                    STQ     @NAME$+3,,AUTO
         4 000157   200054 630500                    EPPR0   @NAME$+3,,AUTO
         4 000160   000024 631400 xsym               EPPR1   B_VECTNIL+20
         4 000161   000000 701000 xent               TSX1    VXS$LST
         4 000162   000000 011000                    NOP     0

      132    12224    4                             @LO, 0, ADDR(NIL), -9 ); /* Set lo file */
      133    12225    4                     CALL VXF$OPEN_LO;     /* Open M$LO again */

  12225  4 000163   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000164   000000 701000 xent               TSX1    VXF$OPEN_LO
         4 000165   000000 011000                    NOP     0
         4 000166   000172 710000 4                  TRA     s:12230

      134    12226
      135    12227    4                   CASE(ELSE);             /* Set map options */

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:63   
      136    12228    4                     VX_O.MAP_A( R$ -> O$B.CODE - 1 ) = 1; /* Set hit on keyword */

  12228  4 000167   100000 721100                    LXL1    0,,PR1
         4 000170   000001 235007                    LDA     1,DL
         4 000171   000115 755011 xsym               STA     VX_O+77,X1

      137    12229    4                   END;                    /* End do CASE(R$->O$B.CODE */

      138    12230    3                 END;                      /* End do l = 1 to stop */

  12230  4 000172   200010 235100                    LDA     L,,AUTO
         4 000173   000001 035007                    ADLA    1,DL
         4 000174   200010 755100                    STA     L,,AUTO
         4 000175   200014 236100                    LDQ     STOP,,AUTO
         4 000176   200010 116100                    CMPQ    L,,AUTO
         4 000177   000103 603000 4                  TRC     s:12215
         4 000200   002723 710000 4                  TRA     s:12840


PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:64   
      140    12232    2           CASE(1);                        /* Linking command */

      141    12233    2             STOP = Q$ -> O$B.NSUBLKS - 1; /* Get number of sublks */

  12233  4 000201   100001 236100                    LDQ     1,,PR1
         4 000202   000022 772000                    QRL     18
         4 000203   000001 136007                    SBLQ    1,DL
         4 000204   200014 756100                    STQ     STOP,,AUTO

      142    12234    3             DO I = 0 TO STOP;             /* By components */

  12234  4 000205   200005 450100                    STZ     I,,AUTO
         4 000206   002650 710000 4                  TRA     s:12817+3

      143    12235    3                 LEVEL1$ = Q$ -> O$B.SUBLK$(I);

  12235  4 000207   200025 470500                    LDP0    Q$,,AUTO
         4 000210   200005 720100                    LXL0    I,,AUTO
         4 000211   000003 236110                    LDQ     3,X0,PR0
         4 000212   200034 756100                    STQ     LEVEL1$,,AUTO

      144    12236    4                 DO CASE( LEVEL1$ -> O$B.CODE - 1 );

  12236  4 000213   200034 471500                    LDP1    LEVEL1$,,AUTO
         4 000214   100000 236100                    LDQ     0,,PR1
         4 000215   777777 376007                    ANQ     -1,DL
         4 000216   000001 136007                    SBLQ    1,DL
         4 000217   000006 116007                    CMPQ    6,DL
         4 000220   000222 602006 4                  TNC     s:12236+7,QL
         4 000221   002645 710000 4                  TRA     s:12817
         4 000222   000230 710000 4                  TRA     s:12238
         4 000223   000235 710000 4                  TRA     s:12241
         4 000224   000306 710000 4                  TRA     s:12263
         4 000225   000313 710000 4                  TRA     s:12266
         4 000226   000440 710000 4                  TRA     OPT_OPTIONS
         4 000227   000364 710000 4                  TRA     s:12288

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:65   
      145    12237    4                   CASE(0);                /* Command keyword */

      146    12238    4                     VX_COMMAND = LEVEL1$ -> O$B.SUBLK$(0) -> O$B.CODE;
             12238                              /* Set key word type */

  12238  4 000230   100003 473500                    LDP3    3,,PR1
         4 000231   300000 236100                    LDQ     0,,PR3
         4 000232   777777 376007                    ANQ     -1,DL
         4 000233   000000 756000 xsym               STQ     VX_COMMAND
         4 000234   002645 710000 4                  TRA     s:12817


PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:66   
      148    12240    4                   CASE(1);                /* OPT_FID_LIST    */

      149    12241    4                     VX_COUNT_FID = @YES;  /* Request fid count */

  12241  4 000235   000001 235007                    LDA     1,DL
         4 000236   000000 755000 xsym               STA     VX_COUNT_FID

      150    12242    4                     VX_FID_COUNT = 0;     /* Init counter */

  12242  4 000237   000000 450000 xsym               STZ     VX_FID_COUNT

      151    12243    4                     OPTION_LIST_INCLUDED = @NO;  /* Assume option list

  12243  4 000240   000000 450000 2                  STZ     OPTION_LIST_INCLUDED

      152    12244                                                       is not included right
      153    12245                                                        after OU_FID_LIST */
      154    12246    4                     CALL VXP$TREE( HEAD$,

  12246  4 000241   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000242   200052 756100                    STQ     @NAME$+1,,AUTO
         4 000243   200034 633500                    EPPR3   LEVEL1$,,AUTO
         4 000244   200061 453500                    STP3    @NAME$+8,,AUTO
         4 000245   200052 634500                    EPPR4   @NAME$+1,,AUTO
         4 000246   200060 454500                    STP4    @NAME$+7,,AUTO
         4 000247   000016 237000 5                  LDAQ    14
         4 000250   200056 757100                    STAQ    @NAME$+5,,AUTO
         4 000251   000001 236000 5                  LDQ     1
         4 000252   200055 756100                    STQ     @NAME$+4,,AUTO
         4 000253   200030 635500                    EPPR5   TAIL$,,AUTO
         4 000254   200054 455500                    STP5    @NAME$+3,,AUTO
         4 000255   200027 636500                    EPPR6   HEAD$,,AUTO
         4 000256   200053 456500                    STP6    @NAME$+2,,AUTO
         4 000257   200053 630500                    EPPR0   @NAME$+2,,AUTO
         4 000260   000025 631400 xsym               EPPR1   B_VECTNIL+21
         4 000261   000000 701000 xent               TSX1    VXP$TREE
         4 000262   000000 011000                    NOP     0
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:67   

      155    12247    4                             TAIL$,
      156    12248    4                             @OF,
      157    12249    4                             @OF_ALL,
      158    12250    4                             VX_CURR$,
      159    12251    4                             ADDR(NIL),
      160    12252    4                             LEVEL1$ );
      161    12253    4                     VX_CURR$ -> VX$NODE.HEAD$ = HEAD$;

  12253  4 000263   200027 236100                    LDQ     HEAD$,,AUTO
         4 000264   000000 470400 xsym               LDP0    VX_CURR$
         4 000265   000004 756100                    STQ     4,,PR0

      162    12254    4                     VX_CURR$ -> VX$NODE.TAIL$ = TAIL$;

  12254  4 000266   200030 236100                    LDQ     TAIL$,,AUTO
         4 000267   000005 756100                    STQ     5,,PR0

      163    12255    4                     VX_COUNT_FID = @NO;   /* Reset switch */

  12255  4 000270   000000 450000 xsym               STZ     VX_COUNT_FID

      164    12256    5                     IF (OPTION_LIST_INCLUDED = @YES) THEN DO;

  12256  4 000271   000000 235000 2                  LDA     OPTION_LIST_INCLUDED
         4 000272   000001 115007                    CMPA    1,DL
         4 000273   002645 601000 4                  TNZ     s:12817

      165    12257    5                         R$ = Q$->O$B.SUBLK$(I);

  12257  4 000274   200025 471500                    LDP1    Q$,,AUTO
         4 000275   200005 720100                    LXL0    I,,AUTO
         4 000276   100003 236110                    LDQ     3,X0,PR1
         4 000277   200026 756100                    STQ     R$,,AUTO

      166    12258    5                         LEVEL1$ = Q$->O$B.SUBLK$(I)->O$B.SUBLK$(R$->O$B.NSUBLKS-1);

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:68   
  12258  4 000300   100003 473510                    LDP3    3,X0,PR1
         4 000301   200026 474500                    LDP4    R$,,AUTO
         4 000302   400001 221100                    LDX1    1,,PR4
         4 000303   300002 236111                    LDQ     2,X1,PR3
         4 000304   200034 756100                    STQ     LEVEL1$,,AUTO

      167    12259    5                         GOTO OPT_OPTIONS;

  12259  4 000305   000440 710000 4                  TRA     OPT_OPTIONS

      168    12260    5                         END;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:69   
      170    12262    4                   CASE(2);                /* OPT_ON_OVER     */

      171    12263    4                     VX_ON_OVER = LEVEL1$ -> O$B.SUBLK$(0) -> O$B.CODE;
             12263                              /* Set targeting preposition */

  12263  4 000306   100003 473500                    LDP3    3,,PR1
         4 000307   300000 236100                    LDQ     0,,PR3
         4 000310   777777 376007                    ANQ     -1,DL
         4 000311   000000 756000 xsym               STQ     VX_ON_OVER
         4 000312   002645 710000 4                  TRA     s:12817


PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:70   
      173    12265    4                   CASE(3);                /* OPT_RUN_FILE    */

      174    12266    4                     TEXT$ = LEVEL1$ -> O$B.SUBLK$(0) -> O$B.SUBLK$(0);

  12266  4 000313   100003 473500                    LDP3    3,,PR1
         4 000314   300003 236100                    LDQ     3,,PR3
         4 000315   200041 756100                    STQ     TEXT$,,AUTO

      175    12267    4                     VX_RU_NAME$ = TEXT$;

  12267  4 000316   000000 756000 xsym               STQ     VX_RU_NAME$

      176    12268    5                     IF VX_GOT_ON_OVER = @NO THEN DO;

  12268  4 000317   000000 235000 xsym               LDA     VX_GOT_ON_OVER
         4 000320   000346 601000 4                  TNZ     s:12278

      177    12269    5                         CALL VXS$LST( VX_RUF$, TEXT$, @RF, 0, ADDR(NIL), 0 );

  12269  4 000321   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000322   200052 756100                    STQ     @NAME$+1,,AUTO
         4 000323   000001 236000 5                  LDQ     1
         4 000324   200061 756100                    STQ     @NAME$+8,,AUTO
         4 000325   200052 633500                    EPPR3   @NAME$+1,,AUTO
         4 000326   200060 453500                    STP3    @NAME$+7,,AUTO
         4 000327   000002 237000 5                  LDAQ    2
         4 000330   200056 757100                    STAQ    @NAME$+5,,AUTO
         4 000331   200041 634500                    EPPR4   TEXT$,,AUTO
         4 000332   200055 454500                    STP4    @NAME$+4,,AUTO
         4 000333   000004 236000 5                  LDQ     4
         4 000334   200054 756100                    STQ     @NAME$+3,,AUTO
         4 000335   200054 630500                    EPPR0   @NAME$+3,,AUTO
         4 000336   000024 631400 xsym               EPPR1   B_VECTNIL+20
         4 000337   000000 701000 xent               TSX1    VXS$LST
         4 000340   000000 011000                    NOP     0

      178    12270    5                         VX_GOT_ON_OVER = @YES; /* Set hit for on/over run file*/
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:71   

  12270  4 000341   000001 235007                    LDA     1,DL
         4 000342   000000 755000 xsym               STA     VX_GOT_ON_OVER

      179    12271    5                         VX_ON_OVER_RUF = VX_ON_OVER;
             12271                                  /* Set targeting preposition for run file */

  12271  4 000343   000000 236000 xsym               LDQ     VX_ON_OVER
         4 000344   000000 756000 xsym               STQ     VX_ON_OVER_RUF

      180    12272    5                         END;

  12272  4 000345   002645 710000 4                  TRA     s:12817

      181    12273    5                     ELSE DO;

      182    12274        /*E*  ERROR:      VXP-E$DUP_RUF_VX-0
      183    12275              MESSAGE: The run unit file was previously specified.
      184    12276                       %U1 is ignored.
      185    12277        */
      186    12278    5                         VX_EFIELD1.COUNT = TEXT$ -> T$C.COUNT;

  12278  4 000346   200041 473500                    LDP3    TEXT$,,AUTO
         4 000347   300000 236100                    LDQ     0,,PR3
         4 000350   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      187    12279    5                         VX_EFIELD1.CHARS = TEXT$ -> T$C.CHARS;

  12279  4 000351   300000 236100                    LDQ     0,,PR3
         4 000352   000033 772000                    QRL     27
         4 000353   000000 621006                    EAX1    0,QL
         4 000354   040000 100540                    MLR     fill='040'O
         4 000355   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         4 000356   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      188    12280                              %SCREAM(ERR#=E$DUP_RUF_VX,
      189    12281                              LEVEL=@E$W_VX,
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:72   
      190    12282                              MID="'P'");

  12283  4 000357   000022 630400 5                  EPPR0   18
         4 000360   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 000361   000000 701000 xent               TSX1    VXE$ERROR
         4 000362   000000 011000                    NOP     0

      191    12285    5                         END;

  12285  4 000363   002645 710000 4                  TRA     s:12817


PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:73   
      193    12287    4                   CASE(5);                /* OPT_LO_FILE    */

      194    12288    4                     TEXT$ = LEVEL1$ -> O$B.SUBLK$(0) -> O$B.SUBLK$(0);

  12288  4 000364   100003 473500                    LDP3    3,,PR1
         4 000365   300003 236100                    LDQ     3,,PR3
         4 000366   200041 756100                    STQ     TEXT$,,AUTO

      195    12289    5                     IF VX_LOF$ = ADDR(NIL) THEN DO;

  12289  4 000367   000000 236000 xsym               LDQ     VX_LOF$
         4 000370   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000371   000422 601000 4                  TNZ     s:12299

      196    12290    5                         CALL VXF$CLOSE( VX_LOF$, @LO, @SAVE );

  12290  4 000372   000005 630400 5                  EPPR0   5
         4 000373   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000374   000000 701000 xent               TSX1    VXF$CLOSE
         4 000375   000000 011000                    NOP     0

      197    12291    5                         CALL VXS$LST( VX_LOF$, TEXT$, @LO, 0, ADDR(NIL), -9 );

  12291  4 000376   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000377   200052 756100                    STQ     @NAME$+1,,AUTO
         4 000400   000011 236000 5                  LDQ     9
         4 000401   200061 756100                    STQ     @NAME$+8,,AUTO
         4 000402   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 000403   200060 450500                    STP0    @NAME$+7,,AUTO
         4 000404   000012 237000 5                  LDAQ    10
         4 000405   200056 757100                    STAQ    @NAME$+5,,AUTO
         4 000406   200041 631500                    EPPR1   TEXT$,,AUTO
         4 000407   200055 451500                    STP1    @NAME$+4,,AUTO
         4 000410   000005 236000 5                  LDQ     5
         4 000411   200054 756100                    STQ     @NAME$+3,,AUTO
         4 000412   200054 630500                    EPPR0   @NAME$+3,,AUTO
         4 000413   000024 631400 xsym               EPPR1   B_VECTNIL+20
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:74   
         4 000414   000000 701000 xent               TSX1    VXS$LST
         4 000415   000000 011000                    NOP     0

      198    12292    5                         CALL VXF$OPEN_LO;

  12292  4 000416   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000417   000000 701000 xent               TSX1    VXF$OPEN_LO
         4 000420   000000 011000                    NOP     0

      199    12293    5                         END;

  12293  4 000421   002645 710000 4                  TRA     s:12817

      200    12294    5                     ELSE DO;

      201    12295        /*E*  ERROR:      VXP-E$DUP_LOF_VX-0
      202    12296              MESSAGE: The listing output file was previously specified.
      203    12297                       %U1 is ignored.
      204    12298        */
      205    12299    5                         VX_EFIELD1.COUNT = TEXT$ -> T$C.COUNT;

  12299  4 000422   200041 473500                    LDP3    TEXT$,,AUTO
         4 000423   300000 236100                    LDQ     0,,PR3
         4 000424   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      206    12300    5                         VX_EFIELD1.CHARS = TEXT$ -> T$C.CHARS;

  12300  4 000425   300000 236100                    LDQ     0,,PR3
         4 000426   000033 772000                    QRL     27
         4 000427   000000 621006                    EAX1    0,QL
         4 000430   040000 100540                    MLR     fill='040'O
         4 000431   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         4 000432   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      207    12301                              %SCREAM(ERR#=E$DUP_LOF_VX,
      208    12302                              LEVEL=@E$W_VX,
      209    12303                              MID="'P'");
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:75   

  12304  4 000433   000027 630400 5                  EPPR0   23
         4 000434   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 000435   000000 701000 xent               TSX1    VXE$ERROR
         4 000436   000000 011000                    NOP     0

      210    12306    5                         END;

  12306  4 000437   002645 710000 4                  TRA     s:12817


PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:76   
      212    12308    4                   CASE(4);                /* OPT_OPTIONS     */

      213    12309    4   OPT_OPTIONS:      OPT_STOP = LEVEL1$ -> O$B.NSUBLKS - 1;

  12309  4 000440   200034 470500       OPT_OPTIONS  LDP0    LEVEL1$,,AUTO
         4 000441   000001 236100                    LDQ     1,,PR0
         4 000442   000022 772000                    QRL     18
         4 000443   000001 136007                    SBLQ    1,DL
         4 000444   200015 756100                    STQ     OPT_STOP,,AUTO

      214    12310    5                     DO J = 0 TO OPT_STOP; /* For all types of options */

  12310  4 000445   200006 450100                    STZ     J,,AUTO
         4 000446   002642 710000 4                  TRA     SKIP_OPTION+3

      215    12311    5                         LEVEL2$ = LEVEL1$ -> O$B.SUBLK$(J);

  12311  4 000447   200034 470500                    LDP0    LEVEL1$,,AUTO
         4 000450   200006 720100                    LXL0    J,,AUTO
         4 000451   000003 236110                    LDQ     3,X0,PR0
         4 000452   200035 756100                    STQ     LEVEL2$,,AUTO

      216    12312    6                         DO CASE( LEVEL2$ -> O$B.CODE-1 );

  12312  4 000453   200035 471500                    LDP1    LEVEL2$,,AUTO
         4 000454   100000 236100                    LDQ     0,,PR1
         4 000455   777777 376007                    ANQ     -1,DL
         4 000456   000001 136007                    SBLQ    1,DL
         4 000457   000020 116007                    CMPQ    16,DL
         4 000460   000462 602006 4                  TNC     s:12312+7,QL
         4 000461   002637 710000 4                  TRA     SKIP_OPTION
         4 000462   000502 710000 4                  TRA     s:12314
         4 000463   000526 710000 4                  TRA     s:12326
         4 000464   000531 710000 4                  TRA     s:12329
         4 000465   000572 710000 4                  TRA     s:12344
         4 000466   000643 710000 4                  TRA     s:12366
         4 000467   000711 710000 4                  TRA     s:12384
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:77   
         4 000470   000757 710000 4                  TRA     s:12401
         4 000471   001030 710000 4                  TRA     s:12418
         4 000472   001410 710000 4                  TRA     s:12513
         4 000473   001612 710000 4                  TRA     s:12589
         4 000474   001650 710000 4                  TRA     s:12606
         4 000475   002261 710000 4                  TRA     s:12698
         4 000476   002342 710000 4                  TRA     s:12720
         4 000477   002406 710000 4                  TRA     s:12741
         4 000500   002611 710000 4                  TRA     s:12804
         4 000501   002530 710000 4                  TRA     s:12782

      217    12313    6                           CASE(0);        /* KEY_WORD_ONLY */

      218    12314    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;
             12314                                      /* Compute index */

  12314  4 000502   100003 473500                    LDP3    3,,PR1
         4 000503   300000 236100                    LDQ     0,,PR3
         4 000504   777777 376007                    ANQ     -1,DL
         4 000505   000001 136007                    SBLQ    1,DL
         4 000506   200010 756100                    STQ     L,,AUTO

      219    12315                                  %CHK_DUP_OPT(
      220    12316                                  STRUCT="VX_OD.SIN_A(L)",
      221    12317                                  STRUCT_NAME$="VX_ON.SIN_A(L)");

  12318  4 000507   000000 066406                    CMPB    filb='0'B
         4 000510   000000 000001 xsym               BDSC    VX_OD,Q                  by=0,bit=0,n=1
         4 000511   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 000512   000520 600000 4                  TZE     s:12322

  12319  4 000513   000000 633406 xsym               EPPR3   VX_ON,QL
         4 000514   200051 453500                    STP3    SYMBOLIC_DCB+3,,AUTO
         4 000515   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 000516   000000 011000                    NOP     0

  12320  4 000517   002637 710000 4                  TRA     SKIP_OPTION
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:78   

  12322  4 000520   003006 060400                    CSL     bolr='003'O
         4 000521   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 000522   000000 000001 xsym               BDSC    VX_OD,Q                  by=0,bit=0,n=1

      222    12324    6                             VX_O.SIN_A(L) = 1; /* Set hit       */

  12324  4 000523   000001 235007                    LDA     1,DL
         4 000524   000000 755006 xsym               STA     VX_O,QL
         4 000525   002637 710000 4                  TRA     SKIP_OPTION

      223    12325    6                           CASE(1);        /* 1_NUM_ARG_DEC */

      224    12326    6                             BASE = 10;    /* Set base      */

  12326  4 000526   000012 235007                    LDA     10,DL
         4 000527   200021 755100                    STA     BASE,,AUTO

      225    12327    6                             GOTO CASE_2;

  12327  4 000530   000533 710000 4                  TRA     CASE_2

      226    12328    6                           CASE(2);        /* 1_NUM_ARG_OCT */

      227    12329    6                             BASE = 8;     /* Set base      */

  12329  4 000531   000010 235007                    LDA     8,DL
         4 000532   200021 755100                    STA     BASE,,AUTO

  12329  4 000533                       CASE_2       null
      228    12330    6   CASE_2:                   ;
      229    12331    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;

  12331  4 000533   100003 473500                    LDP3    3,,PR1
         4 000534   300000 236100                    LDQ     0,,PR3
         4 000535   777777 376007                    ANQ     -1,DL
         4 000536   000001 136007                    SBLQ    1,DL
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:79   
         4 000537   200010 756100                    STQ     L,,AUTO

      230    12332                                  %CHK_DUP_OPT(
      231    12333                                  STRUCT="VX_OD.NUM_A(L)",
      232    12334                                  STRUCT_NAME$="VX_ON.NUM_A(L)");

  12335  4 000540   000000 066406                    CMPB    filb='0'B
         4 000541   000000 620001 xsym               BDSC    VX_OD,Q                  by=3,bit=2,n=1
         4 000542   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 000543   000551 600000 4                  TZE     s:12339

  12336  4 000544   000035 633406 xsym               EPPR3   VX_ON+29,QL
         4 000545   200051 453500                    STP3    SYMBOLIC_DCB+3,,AUTO
         4 000546   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 000547   000000 011000                    NOP     0

  12337  4 000550   002637 710000 4                  TRA     SKIP_OPTION

  12339  4 000551   003006 060400                    CSL     bolr='003'O
         4 000552   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 000553   000000 620001 xsym               BDSC    VX_OD,Q                  by=3,bit=2,n=1

      233    12341    6                             R$ = LEVEL2$ -> O$B.SUBLK$(1) -> O$B.SUBLK$(0);

  12341  4 000554   100004 473500                    LDP3    4,,PR1
         4 000555   300003 236100                    LDQ     3,,PR3
         4 000556   200026 756100                    STQ     R$,,AUTO

      234    12342    6                             CALL VXD$C2B( VX_O.NUM_A(L), R$ -> T$C, BASE );

  12342  4 000557   200021 633500                    EPPR3   BASE,,AUTO
         4 000560   200054 453500                    STP3    @NAME$+3,,AUTO
         4 000561   200053 756100                    STQ     @NAME$+2,,AUTO
         4 000562   200010 721100                    LXL1    L,,AUTO
         4 000563   000035 634411 xsym               EPPR4   VX_O+29,X1
         4 000564   200052 454500                    STP4    @NAME$+1,,AUTO
         4 000565   200052 630500                    EPPR0   @NAME$+1,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:80   
         4 000566   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000567   000000 701000 xent               TSX1    VXD$C2B
         4 000570   000000 011000                    NOP     0
         4 000571   002637 710000 4                  TRA     SKIP_OPTION

      235    12343    6                           CASE(3);        /* Map           */

      236    12344    6                             IF LEVEL2$ -> O$B.NSUBLKS = 0 THEN

  12344  4 000572   100001 221100                    LDX1    1,,PR1
         4 000573   000577 601000 4                  TNZ     s:12347

      237    12345    6                                 VX_O.MAP_A(0) = 1; /* Map by name */

  12345  4 000574   000001 235007                    LDA     1,DL
         4 000575   000116 755000 xsym               STA     VX_O+78
         4 000576   002637 710000 4                  TRA     SKIP_OPTION

      238    12346    7                             ELSE DO;

      239    12347    7                                 ITEM_STOP = LEVEL2$ -> O$B.NSUBLKS -1 ;

  12347  4 000577   100001 236100                    LDQ     1,,PR1
         4 000600   000022 772000                    QRL     18
         4 000601   000001 136007                    SBLQ    1,DL
         4 000602   200016 756100                    STQ     ITEM_STOP,,AUTO

      240    12348    8                                 DO L = 0 TO ITEM_STOP;

  12348  4 000603   200010 450100                    STZ     L,,AUTO
         4 000604   000637 710000 4                  TRA     SKIP_MAP_OPTION+3

      241    12349    8                                     R$ = LEVEL2$ -> O$B.SUBLK$(L);

  12349  4 000605   200035 470500                    LDP0    LEVEL2$,,AUTO
         4 000606   200010 720100                    LXL0    L,,AUTO
         4 000607   000003 236110                    LDQ     3,X0,PR0
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:81   
         4 000610   200026 756100                    STQ     R$,,AUTO

      242    12350    8                                     K = R$ -> O$B.CODE - 1;

  12350  4 000611   200026 471500                    LDP1    R$,,AUTO
         4 000612   100000 236100                    LDQ     0,,PR1
         4 000613   777777 376007                    ANQ     -1,DL
         4 000614   000001 136007                    SBLQ    1,DL
         4 000615   200007 756100                    STQ     K,,AUTO

      243    12351                                          %CHK_DUP_OPT(
      244    12352                                          STRUCT="VX_OD.MAP_A(K)",
      245    12353                                          ERROR="GOTO SKIP_MAP_OPTION;",
      246    12354                                          STRUCT_NAME$="VX_ON.MAP_A(K)");

  12355  4 000616   000000 066406                    CMPB    filb='0'B
         4 000617   000002 060001 xsym               BDSC    VX_OD+2,Q                by=0,bit=6,n=1
         4 000620   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 000621   000627 600000 4                  TZE     s:12359

  12356  4 000622   000116 633406 xsym               EPPR3   VX_ON+78,QL
         4 000623   200051 453500                    STP3    SYMBOLIC_DCB+3,,AUTO
         4 000624   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 000625   000000 011000                    NOP     0

  12357  4 000626   000634 710000 4                  TRA     SKIP_MAP_OPTION

  12359  4 000627   003006 060400                    CSL     bolr='003'O
         4 000630   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 000631   000002 060001 xsym               BDSC    VX_OD+2,Q                by=0,bit=6,n=1

      247    12361    8                                     VX_O.MAP_A(K) = 1;

  12361  4 000632   000001 235007                    LDA     1,DL
         4 000633   000116 755006 xsym               STA     VX_O+78,QL

      248    12362    8   SKIP_MAP_OPTION:
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:82   
      249    12363    8                                     END;

  12363  4 000634   200010 235100       SKIP_MAP_OP* LDA     L,,AUTO
         4 000635   000001 035007                    ADLA    1,DL
         4 000636   200010 755100                    STA     L,,AUTO
         4 000637   200016 236100                    LDQ     ITEM_STOP,,AUTO
         4 000640   200010 116100                    CMPQ    L,,AUTO
         4 000641   000605 603000 4                  TRC     s:12349

      250    12364    7                                 END;

  12364  4 000642   002637 710000 4                  TRA     SKIP_OPTION

      251    12365    6                           CASE(4);        /* Privileges    */

      252    12366    6                             ITEM_STOP = LEVEL2$ -> O$B.NSUBLKS - 1 ;

  12366  4 000643   100001 236100                    LDQ     1,,PR1
         4 000644   000022 772000                    QRL     18
         4 000645   000001 136007                    SBLQ    1,DL
         4 000646   200016 756100                    STQ     ITEM_STOP,,AUTO

      253    12367    7                             DO L = 0 TO ITEM_STOP;

  12367  4 000647   200010 450100                    STZ     L,,AUTO
         4 000650   000705 710000 4                  TRA     SKIP_PRIV_OPTION+3

      254    12368    7                                 R$ = LEVEL2$ -> O$B.SUBLK$(L);

  12368  4 000651   200035 470500                    LDP0    LEVEL2$,,AUTO
         4 000652   200010 720100                    LXL0    L,,AUTO
         4 000653   000003 236110                    LDQ     3,X0,PR0
         4 000654   200026 756100                    STQ     R$,,AUTO

      255    12369    7                                 K = R$ -> O$B.CODE - 1;

  12369  4 000655   200026 471500                    LDP1    R$,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:83   
         4 000656   100000 236100                    LDQ     0,,PR1
         4 000657   777777 376007                    ANQ     -1,DL
         4 000660   000001 136007                    SBLQ    1,DL
         4 000661   200007 756100                    STQ     K,,AUTO

      256    12370                                      %CHK_DUP_OPT(
      257    12371                                      STRUCT="VX_OD.PRIV_A(K)",
      258    12372                                      ERROR="GOTO SKIP_PRIV_OPTION;",
      259    12373                                      STRUCT_NAME$="VX_ON.PRIV_A(K)");

  12374  4 000662   000000 066406                    CMPB    filb='0'B
         4 000663   000001 060001 xsym               BDSC    VX_OD+1,Q                by=0,bit=6,n=1
         4 000664   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 000665   000673 600000 4                  TZE     s:12378

  12375  4 000666   000052 633406 xsym               EPPR3   VX_ON+42,QL
         4 000667   200051 453500                    STP3    SYMBOLIC_DCB+3,,AUTO
         4 000670   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 000671   000000 011000                    NOP     0

  12376  4 000672   000702 710000 4                  TRA     SKIP_PRIV_OPTION

  12378  4 000673   003006 060400                    CSL     bolr='003'O
         4 000674   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 000675   000001 060001 xsym               BDSC    VX_OD+1,Q                by=0,bit=6,n=1

      260    12380    7                                 VX_RU_HEAD.PRIV = VX_RU_HEAD.PRIV | VX_O.PRIV_A(K);

  12380  4 000676   000000 621006                    EAX1    0,QL
         4 000677   000000 236000 xsym               LDQ     VX_RU_HEAD
         4 000700   000052 276011 xsym               ORQ     VX_O+42,X1
         4 000701   000000 756000 xsym               STQ     VX_RU_HEAD

      261    12381    7   SKIP_PRIV_OPTION:
      262    12382    7                                 END;

  12382  4 000702   200010 235100       SKIP_PRIV_O* LDA     L,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:84   
         4 000703   000001 035007                    ADLA    1,DL
         4 000704   200010 755100                    STA     L,,AUTO
         4 000705   200016 236100                    LDQ     ITEM_STOP,,AUTO
         4 000706   200010 116100                    CMPQ    L,,AUTO
         4 000707   000651 603000 4                  TRC     s:12368
         4 000710   002637 710000 4                  TRA     SKIP_OPTION

      263    12383    6                           CASE(5);        /* N_FID_ARG     */

      264    12384    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;

  12384  4 000711   100003 473500                    LDP3    3,,PR1
         4 000712   300000 236100                    LDQ     0,,PR3
         4 000713   777777 376007                    ANQ     -1,DL
         4 000714   000001 136007                    SBLQ    1,DL
         4 000715   200010 756100                    STQ     L,,AUTO

      265    12385                                  %CHK_DUP_OPT(
      266    12386                                  STRUCT="VX_OD.FIDN_A$(L)",
      267    12387                                  STRUCT_NAME$="VX_ON.FIDN_A$(L)");

  12388  4 000716   000000 066406                    CMPB    filb='0'B
         4 000717   000002 270001 xsym               BDSC    VX_OD+2,Q                by=1,bit=7,n=1
         4 000720   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 000721   000727 600000 4                  TZE     s:12392

  12389  4 000722   000130 633406 xsym               EPPR3   VX_ON+88,QL
         4 000723   200051 453500                    STP3    SYMBOLIC_DCB+3,,AUTO
         4 000724   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 000725   000000 011000                    NOP     0

  12390  4 000726   002637 710000 4                  TRA     SKIP_OPTION

  12392  4 000727   003006 060400                    CSL     bolr='003'O
         4 000730   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 000731   000002 270001 xsym               BDSC    VX_OD+2,Q                by=1,bit=7,n=1

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:85   
      268    12394    6                             CALL VXD$FLST( VX_O.FIDN_A$(L),

  12394  4 000732   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000733   200052 756100                    STQ     @NAME$+1,,AUTO
         4 000734   200052 633500                    EPPR3   @NAME$+1,,AUTO
         4 000735   200061 453500                    STP3    @NAME$+8,,AUTO
         4 000736   000001 236000 5                  LDQ     1
         4 000737   200060 756100                    STQ     @NAME$+7,,AUTO
         4 000740   000007 236000 5                  LDQ     7
         4 000741   200057 756100                    STQ     @NAME$+6,,AUTO
         4 000742   200035 236100                    LDQ     LEVEL2$,,AUTO
         4 000743   000004 036003                    ADLQ    4,DU
         4 000744   200056 756100                    STQ     @NAME$+5,,AUTO
         4 000745   200030 634500                    EPPR4   TAIL$,,AUTO
         4 000746   200055 454500                    STP4    @NAME$+4,,AUTO
         4 000747   200010 721100                    LXL1    L,,AUTO
         4 000750   000130 635411 xsym               EPPR5   VX_O+88,X1
         4 000751   200054 455500                    STP5    @NAME$+3,,AUTO
         4 000752   200054 630500                    EPPR0   @NAME$+3,,AUTO
         4 000753   000024 631400 xsym               EPPR1   B_VECTNIL+20
         4 000754   000000 701000 xent               TSX1    VXD$FLST
         4 000755   000000 011000                    NOP     0
         4 000756   002637 710000 4                  TRA     SKIP_OPTION

      269    12395    6                                     TAIL$,
      270    12396    6                                     LEVEL2$ -> O$B.SUBLK$(1),
      271    12397    6                                     @LF,
      272    12398    6                                     @LF_ULIB,
      273    12399    6                                     ADDR(NIL) );
      274    12400    6                           CASE(6);        /* 1_FID_ARG     */

      275    12401    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;

  12401  4 000757   100003 473500                    LDP3    3,,PR1
         4 000760   300000 236100                    LDQ     0,,PR3
         4 000761   777777 376007                    ANQ     -1,DL
         4 000762   000001 136007                    SBLQ    1,DL
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:86   
         4 000763   200010 756100                    STQ     L,,AUTO

      276    12402                                  %CHK_DUP_OPT(
      277    12403                                  STRUCT="VX_OD.FID_A$(L)",
      278    12404                                  STRUCT_NAME$="VX_ON.FID_A$(L)");

  12405  4 000764   000000 066406                    CMPB    filb='0'B
         4 000765   000002 210001 xsym               BDSC    VX_OD+2,Q                by=1,bit=1,n=1
         4 000766   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 000767   000775 600000 4                  TZE     s:12409

  12406  4 000770   000122 633406 xsym               EPPR3   VX_ON+82,QL
         4 000771   200051 453500                    STP3    SYMBOLIC_DCB+3,,AUTO
         4 000772   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 000773   000000 011000                    NOP     0

  12407  4 000774   002637 710000 4                  TRA     SKIP_OPTION

  12409  4 000775   003006 060400                    CSL     bolr='003'O
         4 000776   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 000777   000002 210001 xsym               BDSC    VX_OD+2,Q                by=1,bit=1,n=1

      279    12411    6                             CALL VXS$LST(     VX_O.FID_A$(L),

  12411  4 001000   100004 473500                    LDP3    4,,PR1
         4 001001   300003 474500                    LDP4    3,,PR3
         4 001002   000001 036007                    ADLQ    1,DL
         4 001003   200052 756100                    STQ     @NAME$+1,,AUTO
         4 001004   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 001005   200053 756100                    STQ     @NAME$+2,,AUTO
         4 001006   000001 236000 5                  LDQ     1
         4 001007   200061 756100                    STQ     @NAME$+8,,AUTO
         4 001010   200053 633500                    EPPR3   @NAME$+2,,AUTO
         4 001011   200060 453500                    STP3    @NAME$+7,,AUTO
         4 001012   200052 635500                    EPPR5   @NAME$+1,,AUTO
         4 001013   200057 455500                    STP5    @NAME$+6,,AUTO
         4 001014   000007 236000 5                  LDQ     7
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:87   
         4 001015   200056 756100                    STQ     @NAME$+5,,AUTO
         4 001016   400003 636500                    EPPR6   3,,PR4
         4 001017   200055 456500                    STP6    @NAME$+4,,AUTO
         4 001020   200010 721100                    LXL1    L,,AUTO
         4 001021   000122 634411 xsym               EPPR4   VX_O+82,X1
         4 001022   200054 454500                    STP4    @NAME$+3,,AUTO
         4 001023   200054 630500                    EPPR0   @NAME$+3,,AUTO
         4 001024   000024 631400 xsym               EPPR1   B_VECTNIL+20
         4 001025   000000 701000 xent               TSX1    VXS$LST
         4 001026   000000 011000                    NOP     0
         4 001027   002637 710000 4                  TRA     SKIP_OPTION

      280    12412    6                                    LEVEL2$->O$B.SUBLK$(1)->O$B.SUBLK$(0)->O$B.SUBLK$(
             12412                                              0),
      281    12413    6                                     @LF,
      282    12414    6                                     L+1,
      283    12415    6                                     ADDR(NIL),
      284    12416    6                                     0 );
      285    12417    6                           CASE( 7 );      /* Dcb equiv */

      286    12418    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;

  12418  4 001030   100003 473500                    LDP3    3,,PR1
         4 001031   300000 236100                    LDQ     0,,PR3
         4 001032   777777 376007                    ANQ     -1,DL
         4 001033   000001 136007                    SBLQ    1,DL
         4 001034   200010 756100                    STQ     L,,AUTO

      287    12419    7                             IF VX_OD.NODCB_A(L) THEN DO;

  12419  4 001035   000000 066406                    CMPB    filb='0'B
         4 001036   000003 000001 xsym               BDSC    VX_OD+3,Q                by=0,bit=0,n=1
         4 001037   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 001040   001072 600000 4                  TZE     s:12436

      288    12420        /*E*  ERROR: VXP-E$OPT_CONFLICT_VX-0
      289    12421              MESSAGE: %U1 option in conflict with %U2 option.
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:88   
      290    12422                       %U1 option ignored.
      291    12423        */
      292    12424    7                                 VX_EFIELD1.COUNT = VX_ON.DCB_MATCH_A$(L) -> P$LIT.
             12424                                          COUNT;

  12424  4 001041   000141 473406 xsym               LDP3    VX_ON+97,QL
         4 001042   300001 236100                    LDQ     1,,PR3
         4 001043   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      293    12425    7                                VX_EFIELD1.CHARS = VX_ON.DCB_MATCH_A$(L) -> P$LIT.TEXT
             12425                                          ;

  12425  4 001044   200010 721100                    LXL1    L,,AUTO
         4 001045   000141 473411 xsym               LDP3    VX_ON+97,X1
         4 001046   300001 236100                    LDQ     1,,PR3
         4 001047   000033 772000                    QRL     27
         4 001050   000000 622006                    EAX2    0,QL
         4 001051   040000 100540                    MLR     fill='040'O
         4 001052   300001 200012                    ADSC9   1,,PR3                   cn=1,n=*X2
         4 001053   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      294    12426    7                                 VX_EFIELD2.COUNT = VX_ON.NODCB_A$(L) -> P$LIT.COUNT;

  12426  4 001054   000154 474411 xsym               LDP4    VX_ON+108,X1
         4 001055   400001 236100                    LDQ     1,,PR4
         4 001056   000000 552040 xsym               STBQ    VX_EFIELD2,'40'O

      295    12427    7                                 VX_EFIELD2.CHARS = VX_ON.NODCB_A$(L) -> P$LIT.TEXT;

  12427  4 001057   400001 236100                    LDQ     1,,PR4
         4 001060   000033 772000                    QRL     27
         4 001061   000000 622006                    EAX2    0,QL
         4 001062   040000 100540                    MLR     fill='040'O
         4 001063   400001 200012                    ADSC9   1,,PR4                   cn=1,n=*X2
         4 001064   000000 200117 xsym               ADSC9   VX_EFIELD2               cn=1,n=79

      296    12428                                      %SCREAM( ERR#=E$OPT_CONFLICT_VX, LEVEL=@E$W_VX, MID=
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:89   
             12428                                          "'P'");

  12429  4 001065   000034 630400 5                  EPPR0   28
         4 001066   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 001067   000000 701000 xent               TSX1    VXE$ERROR
         4 001070   000000 011000                    NOP     0

      297    12431    7                                 GOTO SKIP_OPTION;

  12431  4 001071   002637 710000 4                  TRA     SKIP_OPTION

      298    12432    7                                 END;
      299    12433                                  %CHK_DUP_OPT(
      300    12434                                  STRUCT="VX_OD.DCB_MATCH_A$(L)",
      301    12435                                  STRUCT_NAME$="VX_ON.DCB_MATCH_A$(L)");

  12436  4 001072   000000 066406                    CMPB    filb='0'B
         4 001073   000002 470001 xsym               BDSC    VX_OD+2,Q                by=2,bit=7,n=1
         4 001074   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 001075   001103 600000 4                  TZE     s:12440

  12437  4 001076   000141 633406 xsym               EPPR3   VX_ON+97,QL
         4 001077   200051 453500                    STP3    SYMBOLIC_DCB+3,,AUTO
         4 001100   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 001101   000000 011000                    NOP     0

  12438  4 001102   002637 710000 4                  TRA     SKIP_OPTION

  12440  4 001103   003006 060400                    CSL     bolr='003'O
         4 001104   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 001105   000002 470001 xsym               BDSC    VX_OD+2,Q                by=2,bit=7,n=1

      302    12442    6                             TAIL$ = LEVEL2$ -> O$B.SUBLK$(1) -> O$B.SUBLK$(0);

  12442  4 001106   100004 473500                    LDP3    4,,PR1
         4 001107   300003 236100                    LDQ     3,,PR3
         4 001110   200030 756100                    STQ     TAIL$,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:90   

      303    12443    6                             R$ = VX_PRE_DCB_START$;

  12443  4 001111   000000 236000 xsym               LDQ     VX_PRE_DCB_START$
         4 001112   200026 756100                    STQ     R$,,AUTO

      304    12444    7                             DO WHILE( R$ <= VX_PRE_DCB_STOP$ );

  12444  4 001113   000000 116000 xsym               CMPQ    VX_PRE_DCB_STOP$
         4 001114   001116 600000 4                  TZE     s:12445
         4 001115   001175 603000 4                  TRC     s:12467

      305    12445    7                                 IF PINCRW( VX_PRE_DCB_NAME$, R$ -> VX$SC.NAME_DISP )
             12445                                          -> B$DNAME.TEXT

  12445  4 001116   200026 470500                    LDP0    R$,,AUTO
         4 001117   000001 220100                    LDX0    1,,PR0
         4 001120   000000 471400 xsym               LDP1    VX_PRE_DCB_NAME$
         4 001121   100000 221110                    LDX1    0,X0,PR1
         4 001122   200030 473500                    LDP3    TAIL$,,AUTO
         4 001123   300000 236100                    LDQ     0,,PR3
         4 001124   000033 772000                    QRL     27
         4 001125   000000 635010                    EAA     0,X0
         4 001126   000020 731000                    ARS     16
         4 001127   000000 622006                    EAX2    0,QL
         4 001130   040140 106545                    CMPC    fill='040'O
         4 001131   100000 400011                    ADSC9   0,A,PR1                  cn=2,n=*X1
         4 001132   300000 200012                    ADSC9   0,,PR3                   cn=1,n=*X2
         4 001133   001167 601000 4                  TNZ     s:12465

      306    12446    7                                         =
      307    12447    8                                         TAIL$ -> T$C.CHARS THEN DO;

      308    12448        /*E*  ERROR: VXP-E$DCB_CONFLICT_VX-0
      309    12449              MESSAGE: %U1 option may not be applied to %U2.
      310    12450              DESCRIPTION: Self-explanatory.
      311    12451        */
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:91   
      312    12452    8                                     VX_EFIELD1.COUNT = 10;

  12452  4 001134   012000 236003                    LDQ     5120,DU
         4 001135   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      313    12453    8                                    K = POFFW( R$, VX_PRE_DCB_START$ ) / SIZEW(VX$SC);

  12453  4 001136   000000 235000 xsym               LDA     VX_PRE_DCB_START$
         4 001137   000022 771000                    ARL     18
         4 001140   200052 755100                    STA     @NAME$+1,,AUTO
         4 001141   200026 236100                    LDQ     R$,,AUTO
         4 001142   000022 772000                    QRL     18
         4 001143   200052 136100                    SBLQ    @NAME$+1,,AUTO
         4 001144   000003 506007                    DIV     3,DL
         4 001145   200007 756100                    STQ     K,,AUTO

      314    12454    8                                     VX_EFIELD1.CHARS = VX_DCB_OPTION_TEXT(K);

  12454  4 001146   000014 402007                    MPY     12,DL
         4 001147   040000 100406                    MLR     fill='040'O
         4 001150   000000 000012 xsym               ADSC9   VX_DCB_OPTION_TEXT,Q     cn=0,n=10
         4 001151   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      315    12455    8                                     VX_EFIELD2.COUNT = TAIL$ -> T$C.COUNT;

  12455  4 001152   300000 236100                    LDQ     0,,PR3
         4 001153   000000 552040 xsym               STBQ    VX_EFIELD2,'40'O

      316    12456    8                                     VX_EFIELD2.CHARS = TAIL$ -> T$C.CHARS;

  12456  4 001154   300000 236100                    LDQ     0,,PR3
         4 001155   000033 772000                    QRL     27
         4 001156   000000 620006                    EAX0    0,QL
         4 001157   040000 100540                    MLR     fill='040'O
         4 001160   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 001161   000000 200117 xsym               ADSC9   VX_EFIELD2               cn=1,n=79

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:92   
      317    12457                                          %SCREAM(
      318    12458                                          ERR#=E$DCB_CONFLICT_VX,
      319    12459                                          LEVEL=@E$W_VX,
      320    12460                                          MID="'P'");

  12461  4 001162   000041 630400 5                  EPPR0   33
         4 001163   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 001164   000000 701000 xent               TSX1    VXE$ERROR
         4 001165   000000 011000                    NOP     0

      321    12463    8                                     GOTO SKIP_OPTION;

  12463  4 001166   002637 710000 4                  TRA     SKIP_OPTION

      322    12464    8                                     END;  /* If */
      323    12465    7                                 R$ = PINCRW( R$, SIZEW( VX$SC ) );

  12465  4 001167   200026 236100                    LDQ     R$,,AUTO
         4 001170   000003 036003                    ADLQ    3,DU
         4 001171   200026 756100                    STQ     R$,,AUTO

      324    12466    7                                 END;      /* Do while */

  12466  4 001172   000000 116000 xsym               CMPQ    VX_PRE_DCB_STOP$
         4 001173   001116 602000 4                  TNC     s:12445
         4 001174   001116 600000 4                  TZE     s:12445

      325    12467    6                             SYMBOLIC_DCB = ( LEVEL2$ -> O$B.SUBLK$(1) -> O$B.CODE

  12467  4 001175   200035 470500                    LDP0    LEVEL2$,,AUTO
         4 001176   000004 471500                    LDP1    4,,PR0
         4 001177   400000 220003                    LDX0    -131072,DU
         4 001200   100000 721100                    LXL1    0,,PR1
         4 001201   000010 101003                    CMPX1   8,DU
         4 001202   001204 600000 4                  TZE     s:12467+7
         4 001203   000000 220003                    LDX0    0,DU
         4 001204   000000 636010                    EAQ     0,X0
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:93   
         4 001205   200046 756100                    STQ     SYMBOLIC_DCB,,AUTO

      326    12468    6                                     = @C_SYMBOL );
      327    12469    6                             IF SYMBOLIC_DCB THEN

  12469  4 001206   200046 234100                    SZN     SYMBOLIC_DCB,,AUTO
         4 001207   001215 605000 4                  TPL     s:12472

      328    12470    6                                 K = TAIL$ -> T$C.COUNT;

  12470  4 001210   200030 473500                    LDP3    TAIL$,,AUTO
         4 001211   300000 236100                    LDQ     0,,PR3
         4 001212   000033 772000                    QRL     27
         4 001213   200007 756100                    STQ     K,,AUTO
         4 001214   001222 710000 4                  TRA     s:12473

      329    12471    6                             ELSE
      330    12472    6                                 K = TAIL$ -> T$C.COUNT + 2;

  12472  4 001215   200030 473500                    LDP3    TAIL$,,AUTO
         4 001216   300000 236100                    LDQ     0,,PR3
         4 001217   000033 772000                    QRL     27
         4 001220   000002 036007                    ADLQ    2,DL
         4 001221   200007 756100                    STQ     K,,AUTO

      331    12473    7                             IF K > 31 THEN DO;

  12473  4 001222   000040 116007                    CMPQ    32,DL
         4 001223   001251 602000 4                  TNC     s:12487

      332    12474        /*E*  ERROR: VXP-E$DCB_TOO_LONG_VX-0
      333    12475              MESSAGE: DCB name too long for %U1 option: "%U2".
      334    12476                       A DCB name can be at most 31 characters long. %U1 option ignored.
      335    12477              DESCRIPTION: Self-explanatory.
      336    12478        */
      337    12479    7                                 VX_EFIELD1.COUNT = VX_ON.DCB_MATCH_A$(L) -> P$LIT.
             12479                                          COUNT;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:94   

  12479  4 001224   200010 720100                    LXL0    L,,AUTO
         4 001225   000141 471410 xsym               LDP1    VX_ON+97,X0
         4 001226   100001 236100                    LDQ     1,,PR1
         4 001227   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      338    12480    7                                VX_EFIELD1.CHARS = VX_ON.DCB_MATCH_A$(L) -> P$LIT.TEXT
             12480                                          ;

  12480  4 001230   100001 236100                    LDQ     1,,PR1
         4 001231   000033 772000                    QRL     27
         4 001232   000000 621006                    EAX1    0,QL
         4 001233   040000 100540                    MLR     fill='040'O
         4 001234   100001 200011                    ADSC9   1,,PR1                   cn=1,n=*X1
         4 001235   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      339    12481    7                                 VX_EFIELD2 = TAIL$ -> T$C;

  12481  4 001236   300000 236100                    LDQ     0,,PR3
         4 001237   000033 772000                    QRL     27
         4 001240   000001 621006                    EAX1    1,QL
         4 001241   000000 100540                    MLR     fill='000'O
         4 001242   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         4 001243   000000 000120 xsym               ADSC9   VX_EFIELD2               cn=0,n=80

      340    12482                                     %SCREAM(ERR#=E$DCB_TOO_LONG_VX,LEVEL=@E$W_VX,MID="'P'"
             12482                                          );

  12483  4 001244   000046 630400 5                  EPPR0   38
         4 001245   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 001246   000000 701000 xent               TSX1    VXE$ERROR
         4 001247   000000 011000                    NOP     0

      341    12485    7                                 GOTO SKIP_OPTION;

  12485  4 001250   002637 710000 4                  TRA     SKIP_OPTION

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:95   
      342    12486    7                                 END;
      343    12487    6                             K = ( K + 5 ) / 4;

  12487  4 001251   000005 036007                    ADLQ    5,DL
         4 001252   000002 772000                    QRL     2
         4 001253   200007 756100                    STQ     K,,AUTO

      344    12488                                  %ALLOCATE( PTR$ = R$, TYPE=@GDP, SIZE=K );

  12489  4 001254   000010 236000 xsym               LDQ     VX_M_ALL+8
         4 001255   000010 136000 xsym               SBLQ    VX_M_FREE+8
         4 001256   001271 604000 4                  TMI     s:12493
         4 001257   200007 116100                    CMPQ    K,,AUTO
         4 001260   001271 602000 4                  TNC     s:12493

  12490  4 001261   000010 236000 xsym               LDQ     VX_M_FREE+8
         4 001262   000022 736000                    QLS     18
         4 001263   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
         4 001264   200026 756100                    STQ     R$,,AUTO

  12491  4 001265   000010 236000 xsym               LDQ     VX_M_FREE+8
         4 001266   200007 036100                    ADLQ    K,,AUTO
         4 001267   000010 756000 xsym               STQ     VX_M_FREE+8

  12492  4 001270   001303 710000 4                  TRA     s:12495

  12493  4 001271   200007 631500                    EPPR1   K,,AUTO
         4 001272   200054 451500                    STP1    @NAME$+3,,AUTO
         4 001273   000052 236000 5                  LDQ     42
         4 001274   200053 756100                    STQ     @NAME$+2,,AUTO
         4 001275   200026 634500                    EPPR4   R$,,AUTO
         4 001276   200052 454500                    STP4    @NAME$+1,,AUTO
         4 001277   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 001300   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 001301   000000 701000 xent               TSX1    VXA$GET
         4 001302   000000 011000                    NOP     0

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:96   
      345    12495    7                             IF SYMBOLIC_DCB THEN DO;

  12495  4 001303   200046 234100                    SZN     SYMBOLIC_DCB,,AUTO
         4 001304   001325 605000 4                  TPL     s:12500

      346    12496    7                                 R$ -> B$DNAME.COUNT = TAIL$ -> T$C.COUNT;

  12496  4 001305   200030 470500                    LDP0    TAIL$,,AUTO
         4 001306   000000 236100                    LDQ     0,,PR0
         4 001307   000033 772000                    QRL     27
         4 001310   000000 620006                    EAX0    0,QL
         4 001311   200026 471500                    LDP1    R$,,AUTO
         4 001312   100000 740100                    STX0    0,,PR1

      347    12497    7                                 R$ -> B$DNAME.TEXT = TAIL$ -> T$C.CHARS;

  12497  4 001313   200026 470500                    LDP0    R$,,AUTO
         4 001314   000000 220100                    LDX0    0,,PR0
         4 001315   200030 471500                    LDP1    TAIL$,,AUTO
         4 001316   100000 236100                    LDQ     0,,PR1
         4 001317   000033 772000                    QRL     27
         4 001320   000000 621006                    EAX1    0,QL
         4 001321   040140 100540                    MLR     fill='040'O
         4 001322   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1
         4 001323   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0

      348    12498    7                                 END;

  12498  4 001324   001356 710000 4                  TRA     s:12504

      349    12499    7                             ELSE DO;

      350    12500    7                                 R$ -> B$DNAME.COUNT = TAIL$ -> T$C.COUNT + 2;

  12500  4 001325   200030 470500                    LDP0    TAIL$,,AUTO
         4 001326   000000 236100                    LDQ     0,,PR0
         4 001327   000033 772000                    QRL     27
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:97   
         4 001330   000002 620006                    EAX0    2,QL
         4 001331   200026 471500                    LDP1    R$,,AUTO
         4 001332   100000 740100                    STX0    0,,PR1

      351    12501    7                                 CALL CONCAT( R$ -> B$DNAME.TEXT,

  12501  4 001333   200026 470500                    LDP0    R$,,AUTO
         4 001334   000000 220100                    LDX0    0,,PR0
         4 001335   200030 471500                    LDP1    TAIL$,,AUTO
         4 001336   100000 236100                    LDQ     0,,PR1
         4 001337   000033 772000                    QRL     27
         4 001340   040140 100400                    MLR     fill='040'O
         4 001341   000001 000002 3                  ADSC9   STAR_G+1                 cn=0,n=2
         4 001342   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         4 001343   000000 621006                    EAX1    0,QL
         4 001344   000000 636010                    EAQ     0,X0
         4 001345   000022 772000                    QRL     18
         4 001346   000003 116007                    CMPQ    3,DL
         4 001347   001356 602000 4                  TNC     s:12504
         4 001350   777776 622010                    EAX2    -2,X0
         4 001351   200030 470500                    LDP0    TAIL$,,AUTO
         4 001352   200026 471500                    LDP1    R$,,AUTO
         4 001353   040140 100540                    MLR     fill='040'O
         4 001354   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
         4 001355   100001 000012                    ADSC9   1,,PR1                   cn=0,n=*X2

      352    12502    7                                         'F$', TAIL$ -> T$C.CHARS );
      353    12503    7                                 END;

      354    12504    7                             DO K = 0 TO SIZEW( VX_O.DCB_MATCH_A$ ) - 1;

  12504  4 001356   200007 450100                    STZ     K,,AUTO
         4 001357   001401 710000 4                  TRA     s:12510+3

      355    12505    8                                 IF VX_O.DCB_MATCH_A$(K) ~= ADDR(NIL) THEN DO;

  12505  4 001360   200007 720100                    LXL0    K,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:98   
         4 001361   000141 236010 xsym               LDQ     VX_O+97,X0
         4 001362   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 001363   001376 600000 4                  TZE     s:12510

      356    12506    8                                     IF VX_O.DCB_MATCH_A$(K) -> B$DNAME.TEXT

  12506  4 001364   000141 470410 xsym               LDP0    VX_O+97,X0
         4 001365   000000 221100                    LDX1    0,,PR0
         4 001366   200026 471500                    LDP1    R$,,AUTO
         4 001367   100000 222100                    LDX2    0,,PR1
         4 001370   040140 106540                    CMPC    fill='040'O
         4 001371   000000 400011                    ADSC9   0,,PR0                   cn=2,n=*X1
         4 001372   100000 400012                    ADSC9   0,,PR1                   cn=2,n=*X2
         4 001373   001376 601000 4                  TNZ     s:12510

      357    12507    8                                             = R$ -> B$DNAME.TEXT
      358    12508    8                                     THEN VX_O.DCB_MATCH_A$(K) = ADDR(NIL);

  12508  4 001374   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 001375   000141 756010 xsym               STQ     VX_O+97,X0

      359    12509    8                                     END;

      360    12510    7                                 END; /* Do k = 0 to sizew( VX_O.MATCH_A$ ) - 1; */

  12510  4 001376   200007 235100                    LDA     K,,AUTO
         4 001377   000001 035007                    ADLA    1,DL
         4 001400   200007 755100                    STA     K,,AUTO
         4 001401   200007 235100                    LDA     K,,AUTO
         4 001402   000004 115007                    CMPA    4,DL
         4 001403   001360 602000 4                  TNC     s:12505

      361    12511    6                             VX_O.DCB_MATCH_A$(L) = R$;

  12511  4 001404   200026 236100                    LDQ     R$,,AUTO
         4 001405   200010 720100                    LXL0    L,,AUTO
         4 001406   000141 756010 xsym               STQ     VX_O+97,X0
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:99   
         4 001407   002637 710000 4                  TRA     SKIP_OPTION

      362    12512    6                           CASE(8);        /* INCLUDE_OPTION*/

      363    12513    6                             ITEM_STOP = LEVEL2$ -> O$B.NSUBLKS - 1;

  12513  4 001410   100001 236100                    LDQ     1,,PR1
         4 001411   000022 772000                    QRL     18
         4 001412   000001 136007                    SBLQ    1,DL
         4 001413   200016 756100                    STQ     ITEM_STOP,,AUTO

      364    12514                                  %CHK_DUP_OPT(
      365    12515                                  STRUCT="VX_OD.INCLUDE_A$(0)",
      366    12516                                  STRUCT_NAME$="VX_ON.INCLUDE_A$(0)");

  12517  4 001414   000002 236000 xsym               LDQ     VX_OD+2
         4 001415   004000 316007                    CANQ    2048,DL
         4 001416   001424 600000 4                  TZE     s:12521

  12518  4 001417   000053 236000 5                  LDQ     43
         4 001420   200051 756100                    STQ     SYMBOLIC_DCB+3,,AUTO
         4 001421   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 001422   000000 011000                    NOP     0

  12519  4 001423   002637 710000 4                  TRA     SKIP_OPTION

  12521  4 001424   004000 236007                    LDQ     2048,DL
         4 001425   000002 256000 xsym               ORSQ    VX_OD+2

      367    12523    7                             DO L = 0 TO ITEM_STOP BY 3;

  12523  4 001426   200010 450100                    STZ     L,,AUTO
         4 001427   001606 710000 4                  TRA     LEAVE+3

      368    12524    7                                 NODE$ = LEVEL2$ -> O$B.SUBLK$(L) -> O$B.SUBLK$(0);

  12524  4 001430   200035 470500                    LDP0    LEVEL2$,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:100  
         4 001431   200010 720100                    LXL0    L,,AUTO
         4 001432   000003 471510                    LDP1    3,X0,PR0
         4 001433   100003 236100                    LDQ     3,,PR1
         4 001434   200040 756100                    STQ     NODE$,,AUTO

      369    12525    7                                 CURR$ = VX_ROOT$;

  12525  4 001435   000000 236000 xsym               LDQ     VX_ROOT$
         4 001436   200037 756100                    STQ     CURR$,,AUTO

      370    12526    7   NEXT:
      371    12527    7                                 IF CURR$ -> VX$NODE.HEAD$ -> VX$LST.P.NAME_.NAME$ ->
             12527                                          T$C.CHARS

  12527  4 001437   200037 470500       NEXT         LDP0    CURR$,,AUTO
         4 001440   000004 471500                    LDP1    4,,PR0
         4 001441   100006 473500                    LDP3    6,,PR1
         4 001442   300000 236100                    LDQ     0,,PR3
         4 001443   000033 772000                    QRL     27
         4 001444   200040 474500                    LDP4    NODE$,,AUTO
         4 001445   000000 620006                    EAX0    0,QL
         4 001446   400000 236100                    LDQ     0,,PR4
         4 001447   000033 772000                    QRL     27
         4 001450   000000 621006                    EAX1    0,QL
         4 001451   040140 106540                    CMPC    fill='040'O
         4 001452   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 001453   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         4 001454   001507 601000 4                  TNZ     s:12541

      372    12528    7                                         =
      373    12529    8                                         NODE$ -> T$C.CHARS THEN DO;

      374    12530    8                                     CALL VXS$LST( TAIL$,
      375    12531    8                                            LEVEL2$ -> O$B.SUBLK$(L+1) -> O$B.SUBLK$(0
             12531                                                      ),
      376    12532    8                                             @OF,
      377    12533    8                                             @OF_LIST,
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:101  
      378    12534    8                                            LEVEL2$ -> O$B.SUBLK$(L+2) -> O$B.SUBLK$(0
             12534                                                      ) -> O$B.SUBLK$(0),
      379    12535    8                                             -10 );

  12535  4 001455   200035 475500                    LDP5    LEVEL2$,,AUTO
         4 001456   200010 722100                    LXL2    L,,AUTO
         4 001457   500004 476512                    LDP6    4,X2,PR5
         4 001460   500005 477512                    LDP7    5,X2,PR5
         4 001461   700003 470500                    LDP0    3,,PR7
         4 001462   000055 236000 5                  LDQ     45
         4 001463   200057 756100                    STQ     @NAME$+6,,AUTO
         4 001464   000003 631500                    EPPR1   3,,PR0
         4 001465   200056 451500                    STP1    @NAME$+5,,AUTO
         4 001466   000056 237000 5                  LDAQ    46
         4 001467   200054 757100                    STAQ    @NAME$+3,,AUTO
         4 001470   600003 630500                    EPPR0   3,,PR6
         4 001471   200053 450500                    STP0    @NAME$+2,,AUTO
         4 001472   200030 633500                    EPPR3   TAIL$,,AUTO
         4 001473   200052 453500                    STP3    @NAME$+1,,AUTO
         4 001474   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 001475   000024 631400 xsym               EPPR1   B_VECTNIL+20
         4 001476   000000 701000 xent               TSX1    VXS$LST
         4 001477   000000 011000                    NOP     0

      380    12536    8                                     CURR$ -> VX$NODE.TAIL$ -> VX$LST.LINK$ = TAIL$;

  12536  4 001500   200037 470500                    LDP0    CURR$,,AUTO
         4 001501   000005 471500                    LDP1    5,,PR0
         4 001502   200030 236100                    LDQ     TAIL$,,AUTO
         4 001503   100000 756100                    STQ     0,,PR1

      381    12537    8                                     CURR$ -> VX$NODE.TAIL$ = TAIL$;

  12537  4 001504   200030 236100                    LDQ     TAIL$,,AUTO
         4 001505   000005 756100                    STQ     5,,PR0

      382    12538    8                                     GOTO LEAVE;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:102  

  12538  4 001506   001603 710000 4                  TRA     LEAVE

      383    12539    8                                     END;  /* If ... */
      384    12540        /**/
      385    12541    8                                 IF CURR$ -> VX$NODE.SON$ ~= ADDR(NIL) THEN DO;

  12541  4 001507   000000 236100                    LDQ     0,,PR0
         4 001510   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 001511   001514 600000 4                  TZE     CLIMB

      386    12542    8                                     CURR$ = CURR$ -> VX$NODE.SON$;

  12542  4 001512   200037 756100                    STQ     CURR$,,AUTO

      387    12543    8                                     END;

  12543  4 001513   001602 710000 4                  TRA     s:12585

      388    12544    8                                 ELSE DO;

      389    12545    8   CLIMB:
      390    12546    9                                    IF CURR$ -> VX$NODE.BROTHER$ ~= ADDR(NIL) THEN DO;

  12546  4 001514   200037 470500       CLIMB        LDP0    CURR$,,AUTO
         4 001515   000001 236100                    LDQ     1,,PR0
         4 001516   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 001517   001522 600000 4                  TZE     s:12550

      391    12547    9                                         CURR$ = CURR$ -> VX$NODE.BROTHER$;

  12547  4 001520   200037 756100                    STQ     CURR$,,AUTO

      392    12548    9                                         END;

  12548  4 001521   001602 710000 4                  TRA     s:12585

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:103  
      393    12549    9                                     ELSE DO;

      394    12550    9                                         CURR$ = CURR$ -> VX$NODE.FATHER$;

  12550  4 001522   000002 236100                    LDQ     2,,PR0
         4 001523   200037 756100                    STQ     CURR$,,AUTO

      395    12551   10                                         IF CURR$ = ADDR(NIL) THEN DO;

  12551  4 001524   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 001525   001514 601000 4                  TNZ     CLIMB

      396    12552        /*E*  ERROR: VXP-E$CANT_FIND_NODE_INCLUDE_VX-0
      397    12553              MESSAGE: Cannot find node name %U1 for INCLUDE option.
      398    12554              DESCRIPTION: Self-explanatory.
      399    12555        */
      400    12556   10                                             VX_EFIELD1.COUNT = NODE$ -> T$C.COUNT;

  12556  4 001526   200040 470500                    LDP0    NODE$,,AUTO
         4 001527   000000 236100                    LDQ     0,,PR0
         4 001530   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      401    12557   10                                             VX_EFIELD1.CHARS = NODE$ -> T$C.CHARS;

  12557  4 001531   000000 236100                    LDQ     0,,PR0
         4 001532   000033 772000                    QRL     27
         4 001533   000000 620006                    EAX0    0,QL
         4 001534   040000 100540                    MLR     fill='040'O
         4 001535   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         4 001536   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      402    12558                                                  %SCREAM(
      403    12559                                                  ERR#=E$CANT_FIND_NODE_INCLUDE_VX,
      404    12560                                                  MID="'P'",
      405    12561                                                  LEVEL=@E$W_VX);

  12562  4 001537   000061 630400 5                  EPPR0   49
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:104  
         4 001540   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 001541   000000 701000 xent               TSX1    VXE$ERROR
         4 001542   000000 011000                    NOP     0

      406    12564        /*E*  ERROR: VXP-E$CANT_FIND_NODE_INCLUDE_C_VX-0
      407    12565              MESSAGE: Skipping inclusion of %U2 in file %U3 for node %U1.
      408    12566              DESCRIPTION: Self-explanatory.
      409    12567        */
      410    12568   10                                             NODE$         = LEVEL2$-> O$B.SUBLK$(L+2)
             12568                                                      -> O$B.SUBLK$(0);

  12568  4 001543   200035 470500                    LDP0    LEVEL2$,,AUTO
         4 001544   200010 720100                    LXL0    L,,AUTO
         4 001545   000005 471510                    LDP1    5,X0,PR0
         4 001546   100003 236100                    LDQ     3,,PR1
         4 001547   200040 756100                    STQ     NODE$,,AUTO

      411    12569   10                                             VX_EFIELD2.COUNT = NODE$ -> T$C.COUNT;

  12569  4 001550   200040 473500                    LDP3    NODE$,,AUTO
         4 001551   300000 236100                    LDQ     0,,PR3
         4 001552   000000 552040 xsym               STBQ    VX_EFIELD2,'40'O

      412    12570   10                                             VX_EFIELD2.CHARS = NODE$ -> T$C.CHARS;

  12570  4 001553   300000 236100                    LDQ     0,,PR3
         4 001554   000033 772000                    QRL     27
         4 001555   000000 621006                    EAX1    0,QL
         4 001556   040000 100540                    MLR     fill='040'O
         4 001557   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         4 001560   000000 200117 xsym               ADSC9   VX_EFIELD2               cn=1,n=79

      413    12571   10                                            NODE$ = LEVEL2$ -> O$B.SUBLK$(L+1) -> O$B.
             12571                                                      SUBLK$(0);

  12571  4 001561   000004 471510                    LDP1    4,X0,PR0
         4 001562   100003 236100                    LDQ     3,,PR1
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:105  
         4 001563   200040 756100                    STQ     NODE$,,AUTO

      414    12572   10                                             VX_EFIELD3.COUNT = NODE$ -> T$C.COUNT;

  12572  4 001564   200040 473500                    LDP3    NODE$,,AUTO
         4 001565   300000 236100                    LDQ     0,,PR3
         4 001566   000000 552040 xsym               STBQ    VX_EFIELD3,'40'O

      415    12573   10                                             VX_EFIELD3.CHARS = NODE$ -> T$C.CHARS;

  12573  4 001567   300000 236100                    LDQ     0,,PR3
         4 001570   000033 772000                    QRL     27
         4 001571   000000 621006                    EAX1    0,QL
         4 001572   040000 100540                    MLR     fill='040'O
         4 001573   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         4 001574   000000 200117 xsym               ADSC9   VX_EFIELD3               cn=1,n=79

      416    12574                                                  %SCREAM(
      417    12575                                                  ERR#=E$CANT_FIND_NODE_INCLUDE_C_VX,
      418    12576                                                  MID="'P'",
      419    12577                                                  LEVEL=@E$W_VX);

  12578  4 001575   000066 630400 5                  EPPR0   54
         4 001576   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 001577   000000 701000 xent               TSX1    VXE$ERROR
         4 001600   000000 011000                    NOP     0

      420    12580   10                                             GOTO LEAVE;

  12580  4 001601   001603 710000 4                  TRA     LEAVE

      421    12581   10                                             END; /* If CURR$ = addr(nil) then do; */
      422    12582    9                                         ELSE GOTO CLIMB;
      423    12583    9                                         END;
      424    12584    8                                     END;
      425    12585    7                                 GOTO NEXT;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:106  
  12585  4 001602   001437 710000 4                  TRA     NEXT

      426    12586    7   LEAVE:
      427    12587    7                                 END;      /* Do L=0 to ITEM_STOP by 3 */

  12587  4 001603   200010 235100       LEAVE        LDA     L,,AUTO
         4 001604   000003 035007                    ADLA    3,DL
         4 001605   200010 755100                    STA     L,,AUTO
         4 001606   200016 236100                    LDQ     ITEM_STOP,,AUTO
         4 001607   200010 116100                    CMPQ    L,,AUTO
         4 001610   001430 603000 4                  TRC     s:12524
         4 001611   002637 710000 4                  TRA     SKIP_OPTION

      428    12588    6                           CASE(9);        /* N_ACCT_ARG */

      429    12589    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;

  12589  4 001612   100003 473500                    LDP3    3,,PR1
         4 001613   300000 236100                    LDQ     0,,PR3
         4 001614   777777 376007                    ANQ     -1,DL
         4 001615   000001 136007                    SBLQ    1,DL
         4 001616   200010 756100                    STQ     L,,AUTO

      430    12590                                  %CHK_DUP_OPT(
      431    12591                                  STRUCT="VX_OD.ACCTN_A$(L)",
      432    12592                                  STRUCT_NAME$="VX_ON.ACCTN_A$(L)" );

  12593  4 001617   000000 066406                    CMPB    filb='0'B
         4 001620   000002 420001 xsym               BDSC    VX_OD+2,Q                by=2,bit=2,n=1
         4 001621   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 001622   001630 600000 4                  TZE     s:12597

  12594  4 001623   000134 633406 xsym               EPPR3   VX_ON+92,QL
         4 001624   200051 453500                    STP3    SYMBOLIC_DCB+3,,AUTO
         4 001625   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 001626   000000 011000                    NOP     0

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:107  
  12595  4 001627   002637 710000 4                  TRA     SKIP_OPTION

  12597  4 001630   003006 060400                    CSL     bolr='003'O
         4 001631   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 001632   000002 420001 xsym               BDSC    VX_OD+2,Q                by=2,bit=2,n=1

      433    12599    6                             CALL VXD$ALST( VX_O.ACCTN_A$(L),

  12599  4 001633   200010 633500                    EPPR3   L,,AUTO
         4 001634   200054 453500                    STP3    @NAME$+3,,AUTO
         4 001635   200035 236100                    LDQ     LEVEL2$,,AUTO
         4 001636   000004 036003                    ADLQ    4,DU
         4 001637   200053 756100                    STQ     @NAME$+2,,AUTO
         4 001640   200010 721100                    LXL1    L,,AUTO
         4 001641   000134 634411 xsym               EPPR4   VX_O+92,X1
         4 001642   200052 454500                    STP4    @NAME$+1,,AUTO
         4 001643   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 001644   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 001645   000000 701000 xent               TSX1    VXD$ALST
         4 001646   000000 011000                    NOP     0
         4 001647   002637 710000 4                  TRA     SKIP_OPTION

      434    12600    6                                     LEVEL2$ -> O$B.SUBLK$(1),
      435    12601    6                                     L );
      436    12602    6                           CASE(10);       /* N_VECTOR_OPTION */

      437    12603                                  %CHK_DUP_OPT(
      438    12604                                  STRUCT="VX_OD.VECTOR_A$(0)",
      439    12605                                  STRUCT_NAME$="VX_ON.VECTOR_.VECTOR$" );

  12606  4 001650   000002 236000 xsym               LDQ     VX_OD+2
         4 001651   000100 316007                    CANQ    64,DL
         4 001652   001660 600000 4                  TZE     s:12610

  12607  4 001653   000072 236000 5                  LDQ     58
         4 001654   200051 756100                    STQ     SYMBOLIC_DCB+3,,AUTO
         4 001655   002737 701000 4                  TSX1    VXP$DUP_OPT
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:108  
         4 001656   000000 011000                    NOP     0

  12608  4 001657   002637 710000 4                  TRA     SKIP_OPTION

  12610  4 001660   000100 236007                    LDQ     64,DL
         4 001661   000002 256000 xsym               ORSQ    VX_OD+2

      440    12612    6                             CALL VXU$INIT_VECTOR;

  12612  4 001662   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001663   000000 701000 xent               TSX1    VXU$INIT_VECTOR
         4 001664   000000 011000                    NOP     0

      441    12613    6                             ITEM_STOP = LEVEL2$ -> O$B.NSUBLKS - 1;

  12613  4 001665   200035 470500                    LDP0    LEVEL2$,,AUTO
         4 001666   000001 236100                    LDQ     1,,PR0
         4 001667   000022 772000                    QRL     18
         4 001670   000001 136007                    SBLQ    1,DL
         4 001671   200016 756100                    STQ     ITEM_STOP,,AUTO

      442    12614    7                             DO L = 0 TO ITEM_STOP;

  12614  4 001672   200010 450100                    STZ     L,,AUTO
         4 001673   002255 710000 4                  TRA     SKIP_VECTOR_OPTION+3

      443    12615    7                                 LEVEL3$ = LEVEL2$ -> O$B.SUBLK$(L);

  12615  4 001674   200035 470500                    LDP0    LEVEL2$,,AUTO
         4 001675   200010 720100                    LXL0    L,,AUTO
         4 001676   000003 236110                    LDQ     3,X0,PR0
         4 001677   200036 756100                    STQ     LEVEL3$,,AUTO

      444    12616    7                                 K = LEVEL3$ -> O$B.CODE;

  12616  4 001700   200036 471500                    LDP1    LEVEL3$,,AUTO
         4 001701   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:109  
         4 001702   777777 376007                    ANQ     -1,DL
         4 001703   200007 756100                    STQ     K,,AUTO

      445    12617                                      %CHK_DUP_OPT(
      446    12618                                      STRUCT="VX_OD.VECTOR_A$(K)",
      447    12619                                      ERROR="GOTO SKIP_VECTOR_OPTION;",
      448    12620                                      STRUCT_NAME$="VX_ON.VECTOR_A$(K)" );

  12621  4 001704   000000 066406                    CMPB    filb='0'B
         4 001705   000002 620001 xsym               BDSC    VX_OD+2,Q                by=3,bit=2,n=1
         4 001706   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 001707   001715 600000 4                  TZE     s:12625

  12622  4 001710   000145 633406 xsym               EPPR3   VX_ON+101,QL
         4 001711   200051 453500                    STP3    SYMBOLIC_DCB+3,,AUTO
         4 001712   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 001713   000000 011000                    NOP     0

  12623  4 001714   002252 710000 4                  TRA     SKIP_VECTOR_OPTION

  12625  4 001715   003006 060400                    CSL     bolr='003'O
         4 001716   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 001717   000002 620001 xsym               BDSC    VX_OD+2,Q                by=3,bit=2,n=1

      449    12627    8                                 DO CASE( K );

  12627  4 001720   000006 116007                    CMPQ    6,DL
         4 001721   001723 602006 4                  TNC     s:12627+3,QL
         4 001722   002252 710000 4                  TRA     SKIP_VECTOR_OPTION
         4 001723   002252 710000 4                  TRA     SKIP_VECTOR_OPTION
         4 001724   001731 710000 4                  TRA     s:12629
         4 001725   001754 710000 4                  TRA     s:12633
         4 001726   002230 710000 4                  TRA     s:12688
         4 001727   002233 710000 4                  TRA     s:12690
         4 001730   002236 710000 4                  TRA     s:12692

      450    12628    8                                   CASE( @C_VECTOR_RUN_FILE );
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:110  

      451    12629    8                                     CALL VXS$LST( VX_O.VECTOR_.RF$,

  12629  4 001731   100003 473500                    LDP3    3,,PR1
         4 001732   300003 474500                    LDP4    3,,PR3
         4 001733   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 001734   200052 756100                    STQ     @NAME$+1,,AUTO
         4 001735   000001 236000 5                  LDQ     1
         4 001736   200061 756100                    STQ     @NAME$+8,,AUTO
         4 001737   200052 633500                    EPPR3   @NAME$+1,,AUTO
         4 001740   200060 453500                    STP3    @NAME$+7,,AUTO
         4 001741   000002 237000 5                  LDAQ    2
         4 001742   200056 757100                    STAQ    @NAME$+5,,AUTO
         4 001743   400003 635500                    EPPR5   3,,PR4
         4 001744   200055 455500                    STP5    @NAME$+4,,AUTO
         4 001745   000073 236000 5                  LDQ     59
         4 001746   200054 756100                    STQ     @NAME$+3,,AUTO
         4 001747   200054 630500                    EPPR0   @NAME$+3,,AUTO
         4 001750   000024 631400 xsym               EPPR1   B_VECTNIL+20
         4 001751   000000 701000 xent               TSX1    VXS$LST
         4 001752   000000 011000                    NOP     0
         4 001753   002252 710000 4                  TRA     SKIP_VECTOR_OPTION

      452    12630    8                                            LEVEL3$->O$B.SUBLK$(0)->O$B.SUBLK$(0)->O$B
             12630                                                      .SUBLK$(0), @RF,
      453    12631    8                                             0, ADDR(NIL), 0 );
      454    12632    8                                   CASE( @C_VECTOR_ENTRY_LIST );

      455    12633    8                                     VX_O.VECTOR_.LIST_SIZE = LEVEL3$ -> O$B.NSUBLKS;

  12633  4 001754   100001 236100                    LDQ     1,,PR1
         4 001755   000022 772000                    QRL     18
         4 001756   000156 756000 xsym               STQ     VX_O+110

      456    12634    9                                     DO K = 0 TO VX_O.VECTOR_.LIST_SIZE - 1;

  12634  4 001757   200007 450100                    STZ     K,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:111  
         4 001760   002224 710000 4                  TRA     s:12686+3

      457    12635    9                                         R$ = LEVEL3$ -> O$B.SUBLK$(K);

  12635  4 001761   200036 470500                    LDP0    LEVEL3$,,AUTO
         4 001762   200007 720100                    LXL0    K,,AUTO
         4 001763   000003 236110                    LDQ     3,X0,PR0
         4 001764   200026 756100                    STQ     R$,,AUTO

      458    12636   10                                         IF R$->O$B.CODE = @C_EMPTY THEN DO;

  12636  4 001765   200026 471500                    LDP1    R$,,AUTO
         4 001766   100000 721100                    LXL1    0,,PR1
         4 001767   000010 101003                    CMPX1   8,DU
         4 001770   002045 601000 4                  TNZ     s:12652

      459    12637   10                                            NAME1$ = R$->O$B.SUBLK$(0)->O$B.SUBLK$(0);

  12637  4 001771   100003 473500                    LDP3    3,,PR1
         4 001772   300003 236100                    LDQ     3,,PR3
         4 001773   200043 756100                    STQ     NAME1$,,AUTO

      460    12638   10                                             CALL VXD$C2B( SIZEW2, NAME1$->T$C, 10 );

  12638  4 001774   000074 236000 5                  LDQ     60
         4 001775   200054 756100                    STQ     @NAME$+3,,AUTO
         4 001776   200043 236100                    LDQ     NAME1$,,AUTO
         4 001777   200053 756100                    STQ     @NAME$+2,,AUTO
         4 002000   200023 633500                    EPPR3   SIZEW2,,AUTO
         4 002001   200052 453500                    STP3    @NAME$+1,,AUTO
         4 002002   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 002003   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 002004   000000 701000 xent               TSX1    VXD$C2B
         4 002005   000000 011000                    NOP     0

      461    12639                                                  %ALLOCATE( PTR$=LIST$,TYPE=@GDP,SIZE=1);

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:112  
  12640  4 002006   000010 236000 xsym               LDQ     VX_M_ALL+8
         4 002007   000010 136000 xsym               SBLQ    VX_M_FREE+8
         4 002010   002017 604400 4                  TMOZ    s:12644

  12641  4 002011   000010 236000 xsym               LDQ     VX_M_FREE+8
         4 002012   000022 736000                    QLS     18
         4 002013   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
         4 002014   200045 756100                    STQ     LIST$,,AUTO

  12642  4 002015   000010 054000 xsym               AOS     VX_M_FREE+8

  12643  4 002016   002031 710000 4                  TRA     s:12646

  12644  4 002017   000002 236000 5                  LDQ     2
         4 002020   200054 756100                    STQ     @NAME$+3,,AUTO
         4 002021   000052 236000 5                  LDQ     42
         4 002022   200053 756100                    STQ     @NAME$+2,,AUTO
         4 002023   200045 630500                    EPPR0   LIST$,,AUTO
         4 002024   200052 450500                    STP0    @NAME$+1,,AUTO
         4 002025   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 002026   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 002027   000000 701000 xent               TSX1    VXA$GET
         4 002030   000000 011000                    NOP     0

      462    12646   10                                             IF VX_O.VECTOR_.LIST$ = ADDR(NIL)

  12646  4 002031   000157 236000 xsym               LDQ     VX_O+111
         4 002032   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 002033   002036 601000 4                  TNZ     s:12648

      463    12647   10                                             THEN VX_O.VECTOR_.LIST$ = LIST$;

  12647  4 002034   200045 236100                    LDQ     LIST$,,AUTO
         4 002035   000157 756000 xsym               STQ     VX_O+111

      464    12648   10                                             LIST$->VX$VECTOR_LST.SIZEW1 = 0;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:113  
  12648  4 002036   000000 220003                    LDX0    0,DU
         4 002037   200045 470500                    LDP0    LIST$,,AUTO
         4 002040   000000 740100                    STX0    0,,PR0

      465    12649   10                                             LIST$->VX$VECTOR_LST.SIZEW2 = SIZEW2;

  12649  4 002041   200023 721100                    LXL1    SIZEW2,,AUTO
         4 002042   200045 470500                    LDP0    LIST$,,AUTO
         4 002043   000000 441100                    SXL1    0,,PR0

      466    12650   10                                             END;

  12650  4 002044   002221 710000 4                  TRA     s:12686

      467    12651   10                                         ELSE DO;

      468    12652   11                                             IF R$->O$B.CODE = @C_ENTRY_NAME THEN DO;

  12652  4 002045   000006 101003                    CMPX1   6,DU
         4 002046   002062 601000 4                  TNZ     s:12658

      469    12653   11                                                NAME1$ = R$->O$B.SUBLK$(0)->O$B.SUBLK$
             12653                                                          (0);

  12653  4 002047   100003 473500                    LDP3    3,,PR1
         4 002050   300003 236100                    LDQ     3,,PR3
         4 002051   200043 756100                    STQ     NAME1$,,AUTO

      470    12654   11                                                 SIZEW1 = (NAME1$->T$C.COUNT + 5) / 4;

  12654  4 002052   200043 474500                    LDP4    NAME1$,,AUTO
         4 002053   400000 236100                    LDQ     0,,PR4
         4 002054   000033 772000                    QRL     27
         4 002055   000005 036007                    ADLQ    5,DL
         4 002056   000002 772000                    QRL     2
         4 002057   200022 756100                    STQ     SIZEW1,,AUTO

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:114  
      471    12655   11                                                 SIZEW2 = 0;

  12655  4 002060   200023 450100                    STZ     SIZEW2,,AUTO

      472    12656   11                                                 END;

  12656  4 002061   002106 710000 4                  TRA     s:12665

      473    12657   11                                             ELSE DO;

      474    12658   11                                                NAME1$ = R$->O$B.SUBLK$(0)->O$B.SUBLK$
             12658                                                          (0)

  12658  4 002062   100003 473500                    LDP3    3,,PR1
         4 002063   300003 474500                    LDP4    3,,PR3
         4 002064   400003 236100                    LDQ     3,,PR4
         4 002065   200043 756100                    STQ     NAME1$,,AUTO

      475    12659   11                                                         -> O$B.SUBLK$(0);
      476    12660   11                                                 SIZEW1 = (NAME1$->T$C.COUNT + 5) / 4;

  12660  4 002066   200043 475500                    LDP5    NAME1$,,AUTO
         4 002067   500000 236100                    LDQ     0,,PR5
         4 002070   000033 772000                    QRL     27
         4 002071   000005 036007                    ADLQ    5,DL
         4 002072   000002 772000                    QRL     2
         4 002073   200022 756100                    STQ     SIZEW1,,AUTO

      477    12661   11                                                NAME2$ = R$->O$B.SUBLK$(1)->O$B.SUBLK$
             12661                                                          (0)

  12661  4 002074   100004 476500                    LDP6    4,,PR1
         4 002075   600003 477500                    LDP7    3,,PR6
         4 002076   700003 236100                    LDQ     3,,PR7
         4 002077   200044 756100                    STQ     NAME2$,,AUTO

      478    12662   11                                                         -> O$B.SUBLK$(0);
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:115  
      479    12663   11                                                 SIZEW2 = (NAME2$->T$C.COUNT + 5) / 4;

  12663  4 002100   200044 470500                    LDP0    NAME2$,,AUTO
         4 002101   000000 236100                    LDQ     0,,PR0
         4 002102   000033 772000                    QRL     27
         4 002103   000005 036007                    ADLQ    5,DL
         4 002104   000002 772000                    QRL     2
         4 002105   200023 756100                    STQ     SIZEW2,,AUTO

      480    12664   11                                                 END;

      481    12665   10                                             SIZE = SIZEW1 + SIZEW2 + 1;

  12665  4 002106   200022 236100                    LDQ     SIZEW1,,AUTO
         4 002107   200023 036100                    ADLQ    SIZEW2,,AUTO
         4 002110   000001 036007                    ADLQ    1,DL
         4 002111   200013 756100                    STQ     SIZE,,AUTO

      482    12666                                                  %ALLOCATE( PTR$=LIST$, TYPE=@GDP, SIZE=
             12666                                                      SIZE );

  12667  4 002112   000010 236000 xsym               LDQ     VX_M_ALL+8
         4 002113   000010 136000 xsym               SBLQ    VX_M_FREE+8
         4 002114   002127 604000 4                  TMI     s:12671
         4 002115   200013 116100                    CMPQ    SIZE,,AUTO
         4 002116   002127 602000 4                  TNC     s:12671

  12668  4 002117   000010 236000 xsym               LDQ     VX_M_FREE+8
         4 002120   000022 736000                    QLS     18
         4 002121   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
         4 002122   200045 756100                    STQ     LIST$,,AUTO

  12669  4 002123   000010 236000 xsym               LDQ     VX_M_FREE+8
         4 002124   200013 036100                    ADLQ    SIZE,,AUTO
         4 002125   000010 756000 xsym               STQ     VX_M_FREE+8

  12670  4 002126   002141 710000 4                  TRA     s:12673
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:116  

  12671  4 002127   200013 630500                    EPPR0   SIZE,,AUTO
         4 002130   200054 450500                    STP0    @NAME$+3,,AUTO
         4 002131   000052 236000 5                  LDQ     42
         4 002132   200053 756100                    STQ     @NAME$+2,,AUTO
         4 002133   200045 633500                    EPPR3   LIST$,,AUTO
         4 002134   200052 453500                    STP3    @NAME$+1,,AUTO
         4 002135   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 002136   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 002137   000000 701000 xent               TSX1    VXA$GET
         4 002140   000000 011000                    NOP     0

      483    12673   10                                             IF VX_O.VECTOR_.LIST$ = ADDR(NIL)

  12673  4 002141   000157 236000 xsym               LDQ     VX_O+111
         4 002142   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 002143   002146 601000 4                  TNZ     s:12675

      484    12674   10                                             THEN VX_O.VECTOR_.LIST$ = LIST$;

  12674  4 002144   200045 236100                    LDQ     LIST$,,AUTO
         4 002145   000157 756000 xsym               STQ     VX_O+111

      485    12675   10                                             LIST$->VX$VECTOR_LST.SIZEW1 = SIZEW1;

  12675  4 002146   200022 720100                    LXL0    SIZEW1,,AUTO
         4 002147   200045 470500                    LDP0    LIST$,,AUTO
         4 002150   000000 740100                    STX0    0,,PR0

      486    12676   10                                             LIST$->VX$VECTOR_LST.SIZEW2 = SIZEW2;

  12676  4 002151   200023 721100                    LXL1    SIZEW2,,AUTO
         4 002152   200045 470500                    LDP0    LIST$,,AUTO
         4 002153   000000 441100                    SXL1    0,,PR0

      487    12677   10                                             TEXT$ = PINCRW( LIST$, 1 );

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:117  
  12677  4 002154   200045 236100                    LDQ     LIST$,,AUTO
         4 002155   000001 036003                    ADLQ    1,DU
         4 002156   200041 756100                    STQ     TEXT$,,AUTO

      488    12678   10                                             TEXT$->B$DNAME.COUNT = NAME1$->T$C.COUNT;

  12678  4 002157   200043 470500                    LDP0    NAME1$,,AUTO
         4 002160   000000 236100                    LDQ     0,,PR0
         4 002161   000033 772000                    QRL     27
         4 002162   000000 621006                    EAX1    0,QL
         4 002163   200041 471500                    LDP1    TEXT$,,AUTO
         4 002164   100000 741100                    STX1    0,,PR1

      489    12679   10                                             TEXT$->B$DNAME.TEXT = NAME1$->T$C.CHARS;

  12679  4 002165   200041 471500                    LDP1    TEXT$,,AUTO
         4 002166   100000 221100                    LDX1    0,,PR1
         4 002167   000000 236100                    LDQ     0,,PR0
         4 002170   000033 772000                    QRL     27
         4 002171   000000 622006                    EAX2    0,QL
         4 002172   040140 100540                    MLR     fill='040'O
         4 002173   000000 200012                    ADSC9   0,,PR0                   cn=1,n=*X2
         4 002174   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1

      490    12680   11                                             IF SIZEW2 > 0 THEN DO;

  12680  4 002175   200023 235100                    LDA     SIZEW2,,AUTO
         4 002176   002221 600000 4                  TZE     s:12686

      491    12681   11                                                 TEXT$ = PINCRW( TEXT$, SIZEW1 );

  12681  4 002177   200022 236100                    LDQ     SIZEW1,,AUTO
         4 002200   000022 736000                    QLS     18
         4 002201   200041 036100                    ADLQ    TEXT$,,AUTO
         4 002202   200041 756100                    STQ     TEXT$,,AUTO

      492    12682   11                                                 TEXT$->B$DNAME.COUNT = NAME2$->T$C.
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:118  
             12682                                                          COUNT;

  12682  4 002203   200044 471500                    LDP1    NAME2$,,AUTO
         4 002204   100000 236100                    LDQ     0,,PR1
         4 002205   000033 772000                    QRL     27
         4 002206   000000 621006                    EAX1    0,QL
         4 002207   200041 473500                    LDP3    TEXT$,,AUTO
         4 002210   300000 741100                    STX1    0,,PR3

      493    12683   11                                                 TEXT$->B$DNAME.TEXT = NAME2$->T$C.
             12683                                                          CHARS;

  12683  4 002211   200041 473500                    LDP3    TEXT$,,AUTO
         4 002212   300000 221100                    LDX1    0,,PR3
         4 002213   100000 236100                    LDQ     0,,PR1
         4 002214   000033 772000                    QRL     27
         4 002215   000000 622006                    EAX2    0,QL
         4 002216   040140 100540                    MLR     fill='040'O
         4 002217   100000 200012                    ADSC9   0,,PR1                   cn=1,n=*X2
         4 002220   300000 400011                    ADSC9   0,,PR3                   cn=2,n=*X1

      494    12684   11                                                 END;

      495    12685   10                                             END;

      496    12686    9                                         END;

  12686  4 002221   200007 235100                    LDA     K,,AUTO
         4 002222   000001 035007                    ADLA    1,DL
         4 002223   200007 755100                    STA     K,,AUTO
         4 002224   200007 236100                    LDQ     K,,AUTO
         4 002225   000156 116000 xsym               CMPQ    VX_O+110
         4 002226   001761 602000 4                  TNC     s:12635
         4 002227   002252 710000 4                  TRA     SKIP_VECTOR_OPTION

      497    12687    8                                   CASE( @C_REMOVE_ENTDEF );

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:119  
      498    12688    8                                     VX_O.VECTOR_.REMOVE_ENTDEF = 1;

  12688  4 002230   000001 235007                    LDA     1,DL
         4 002231   000160 755000 xsym               STA     VX_O+112
         4 002232   002252 710000 4                  TRA     SKIP_VECTOR_OPTION

      499    12689    8                                   CASE( @C_REMOVE_SYMDEF );

      500    12690    8                                     VX_O.VECTOR_.REMOVE_SYMDEF = 1;

  12690  4 002233   000001 235007                    LDA     1,DL
         4 002234   000161 755000 xsym               STA     VX_O+113
         4 002235   002252 710000 4                  TRA     SKIP_VECTOR_OPTION

      501    12691    8                                   CASE( @C_VECTOR_DATA );

      502    12692    8                                     R$ = LEVEL3$->O$B.SUBLK$(0)->O$B.SUBLK$(0);

  12692  4 002236   100003 473500                    LDP3    3,,PR1
         4 002237   300003 236100                    LDQ     3,,PR3
         4 002240   200026 756100                    STQ     R$,,AUTO

      503    12693    8                                     CALL VXD$C2B( VX_O.VECTOR_.DATA, R$->T$C, 10);

  12693  4 002241   000074 236000 5                  LDQ     60
         4 002242   200054 756100                    STQ     @NAME$+3,,AUTO
         4 002243   200026 236100                    LDQ     R$,,AUTO
         4 002244   000075 235000 5                  LDA     61
         4 002245   200052 757100                    STAQ    @NAME$+1,,AUTO
         4 002246   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 002247   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 002250   000000 701000 xent               TSX1    VXD$C2B
         4 002251   000000 011000                    NOP     0

      504    12694    8                                   END;

      505    12695    7   SKIP_VECTOR_OPTION:
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:120  
      506    12696    7                                 END;

  12696  4 002252   200010 235100       SKIP_VECTOR* LDA     L,,AUTO
         4 002253   000001 035007                    ADLA    1,DL
         4 002254   200010 755100                    STA     L,,AUTO
         4 002255   200016 236100                    LDQ     ITEM_STOP,,AUTO
         4 002256   200010 116100                    CMPQ    L,,AUTO
         4 002257   001674 603000 4                  TRC     s:12615
         4 002260   002637 710000 4                  TRA     SKIP_OPTION

      507    12697    6                           CASE(11);       /* N_NODCB_OPTION */

      508    12698    6                             L = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.CODE - 1;

  12698  4 002261   100003 473500                    LDP3    3,,PR1
         4 002262   300000 236100                    LDQ     0,,PR3
         4 002263   777777 376007                    ANQ     -1,DL
         4 002264   000001 136007                    SBLQ    1,DL
         4 002265   200010 756100                    STQ     L,,AUTO

      509    12699    7                             IF VX_OD.DCB_MATCH_A$(L) THEN DO;

  12699  4 002266   000000 066406                    CMPB    filb='0'B
         4 002267   000002 470001 xsym               BDSC    VX_OD+2,Q                by=2,bit=7,n=1
         4 002270   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 002271   002323 600000 4                  TZE     s:12712

      510    12700    7                                 VX_EFIELD2.COUNT = VX_ON.DCB_MATCH_A$(L) -> P$LIT.
             12700                                          COUNT;

  12700  4 002272   000141 473406 xsym               LDP3    VX_ON+97,QL
         4 002273   300001 236100                    LDQ     1,,PR3
         4 002274   000000 552040 xsym               STBQ    VX_EFIELD2,'40'O

      511    12701    7                                VX_EFIELD2.CHARS = VX_ON.DCB_MATCH_A$(L) -> P$LIT.TEXT
             12701                                          ;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:121  
  12701  4 002275   200010 721100                    LXL1    L,,AUTO
         4 002276   000141 473411 xsym               LDP3    VX_ON+97,X1
         4 002277   300001 236100                    LDQ     1,,PR3
         4 002300   000033 772000                    QRL     27
         4 002301   000000 622006                    EAX2    0,QL
         4 002302   040000 100540                    MLR     fill='040'O
         4 002303   300001 200012                    ADSC9   1,,PR3                   cn=1,n=*X2
         4 002304   000000 200117 xsym               ADSC9   VX_EFIELD2               cn=1,n=79

      512    12702    7                                 VX_EFIELD1.COUNT = VX_ON.NODCB_A$(L) -> P$LIT.COUNT;

  12702  4 002305   000154 474411 xsym               LDP4    VX_ON+108,X1
         4 002306   400001 236100                    LDQ     1,,PR4
         4 002307   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      513    12703    7                                 VX_EFIELD1.CHARS = VX_ON.NODCB_A$(L) -> P$LIT.TEXT;

  12703  4 002310   400001 236100                    LDQ     1,,PR4
         4 002311   000033 772000                    QRL     27
         4 002312   000000 622006                    EAX2    0,QL
         4 002313   040000 100540                    MLR     fill='040'O
         4 002314   400001 200012                    ADSC9   1,,PR4                   cn=1,n=*X2
         4 002315   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      514    12704                                      %SCREAM( ERR#=E$OPT_CONFLICT_VX, LEVEL=@E$W_VX, MID=
             12704                                          "'P'");

  12705  4 002316   000034 630400 5                  EPPR0   28
         4 002317   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 002320   000000 701000 xent               TSX1    VXE$ERROR
         4 002321   000000 011000                    NOP     0

      515    12707    7                                 GOTO SKIP_OPTION;

  12707  4 002322   002637 710000 4                  TRA     SKIP_OPTION

      516    12708    7                                 END;
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:122  
      517    12709                                  %CHK_DUP_OPT(
      518    12710                                  STRUCT="VX_OD.NODCB_A(L)",
      519    12711                                  STRUCT_NAME$="VX_ON.NODCB_A$(L)" );

  12712  4 002323   000000 066406                    CMPB    filb='0'B
         4 002324   000003 000001 xsym               BDSC    VX_OD+3,Q                by=0,bit=0,n=1
         4 002325   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 002326   002334 600000 4                  TZE     s:12716

  12713  4 002327   000154 633406 xsym               EPPR3   VX_ON+108,QL
         4 002330   200051 453500                    STP3    SYMBOLIC_DCB+3,,AUTO
         4 002331   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 002332   000000 011000                    NOP     0

  12714  4 002333   002637 710000 4                  TRA     SKIP_OPTION

  12716  4 002334   003006 060400                    CSL     bolr='003'O
         4 002335   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 002336   000003 000001 xsym               BDSC    VX_OD+3,Q                by=0,bit=0,n=1

      520    12718    6                             VX_O.NODCB_A(L) = 1;

  12718  4 002337   000001 235007                    LDA     1,DL
         4 002340   000164 755006 xsym               STA     VX_O+116,QL
         4 002341   002637 710000 4                  TRA     SKIP_OPTION

      521    12719    6                           CASE(12);       /* N_SLOCK_OPTION */

      522    12720    6                             VX_EFIELD1.COUNT = VX_ON.SLOCK$ -> P$LIT.COUNT;

  12720  4 002342   000160 473400 xsym               LDP3    VX_ON+112
         4 002343   300001 236100                    LDQ     1,,PR3
         4 002344   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      523    12721    6                             VX_EFIELD1.CHARS = VX_ON.SLOCK$ -> P$LIT.TEXT;

  12721  4 002345   300001 236100                    LDQ     1,,PR3
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:123  
         4 002346   000033 772000                    QRL     27
         4 002347   000000 621006                    EAX1    0,QL
         4 002350   040000 100540                    MLR     fill='040'O
         4 002351   300001 200011                    ADSC9   1,,PR3                   cn=1,n=*X1
         4 002352   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      524    12722    7                             IF VX_OD.WLOCK THEN DO;

  12722  4 002353   000003 236000 xsym               LDQ     VX_OD+3
         4 002354   010000 316003                    CANQ    4096,DU
         4 002355   002374 600000 4                  TZE     s:12733

      525    12723    7                                 VX_EFIELD2.COUNT = VX_ON.WLOCK$ -> P$LIT.COUNT;

  12723  4 002356   000161 474400 xsym               LDP4    VX_ON+113
         4 002357   400001 236100                    LDQ     1,,PR4
         4 002360   000000 552040 xsym               STBQ    VX_EFIELD2,'40'O

      526    12724    7                                 VX_EFIELD2.CHARS = VX_ON.WLOCK$ -> P$LIT.TEXT;

  12724  4 002361   400001 236100                    LDQ     1,,PR4
         4 002362   000033 772000                    QRL     27
         4 002363   000000 621006                    EAX1    0,QL
         4 002364   040000 100540                    MLR     fill='040'O
         4 002365   400001 200011                    ADSC9   1,,PR4                   cn=1,n=*X1
         4 002366   000000 200117 xsym               ADSC9   VX_EFIELD2               cn=1,n=79

      527    12725                                      %SCREAM( ERR#=E$OPT_CONFLICT_VX,LEVEL=@E$W_VX,MID=
             12725                                          "'P'");

  12726  4 002367   000034 630400 5                  EPPR0   28
         4 002370   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 002371   000000 701000 xent               TSX1    VXE$ERROR
         4 002372   000000 011000                    NOP     0

      528    12728    7                                 GOTO SKIP_OPTION;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:124  
  12728  4 002373   002637 710000 4                  TRA     SKIP_OPTION

      529    12729    7                                 END;
      530    12730                                  %CHK_DUP_OPT(
      531    12731                                  STRUCT="VX_OD.SLOCK",
      532    12732                                  STRUCT_NAME$="VX_ON.SLOCK$" );

  12733  4 002374   020000 316003                    CANQ    8192,DU
         4 002375   002403 600000 4                  TZE     s:12737

  12734  4 002376   000076 236000 5                  LDQ     62
         4 002377   200051 756100                    STQ     SYMBOLIC_DCB+3,,AUTO
         4 002400   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 002401   000000 011000                    NOP     0

  12735  4 002402   002637 710000 4                  TRA     SKIP_OPTION

  12737  4 002403   020000 236003                    LDQ     8192,DU
         4 002404   000003 256000 xsym               ORSQ    VX_OD+3

      533    12739    6                             GOTO BUILD_LOCK;

  12739  4 002405   002451 710000 4                  TRA     BUILD_LOCK

      534    12740    6                           CASE(13);       /* N_WLOCK_OPTION */

      535    12741    6                             VX_EFIELD1.COUNT = VX_ON.WLOCK$ -> P$LIT.COUNT;

  12741  4 002406   000161 473400 xsym               LDP3    VX_ON+113
         4 002407   300001 236100                    LDQ     1,,PR3
         4 002410   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      536    12742    6                             VX_EFIELD1.CHARS = VX_ON.WLOCK$ -> P$LIT.TEXT;

  12742  4 002411   300001 236100                    LDQ     1,,PR3
         4 002412   000033 772000                    QRL     27
         4 002413   000000 621006                    EAX1    0,QL
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:125  
         4 002414   040000 100540                    MLR     fill='040'O
         4 002415   300001 200011                    ADSC9   1,,PR3                   cn=1,n=*X1
         4 002416   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      537    12743    7                             IF VX_OD.SLOCK THEN DO;

  12743  4 002417   000003 236000 xsym               LDQ     VX_OD+3
         4 002420   020000 316003                    CANQ    8192,DU
         4 002421   002440 600000 4                  TZE     s:12754

      538    12744    7                                 VX_EFIELD2.COUNT = VX_ON.SLOCK$ -> P$LIT.COUNT;

  12744  4 002422   000160 474400 xsym               LDP4    VX_ON+112
         4 002423   400001 236100                    LDQ     1,,PR4
         4 002424   000000 552040 xsym               STBQ    VX_EFIELD2,'40'O

      539    12745    7                                 VX_EFIELD2.CHARS = VX_ON.SLOCK$ -> P$LIT.TEXT;

  12745  4 002425   400001 236100                    LDQ     1,,PR4
         4 002426   000033 772000                    QRL     27
         4 002427   000000 621006                    EAX1    0,QL
         4 002430   040000 100540                    MLR     fill='040'O
         4 002431   400001 200011                    ADSC9   1,,PR4                   cn=1,n=*X1
         4 002432   000000 200117 xsym               ADSC9   VX_EFIELD2               cn=1,n=79

      540    12746                                      %SCREAM( ERR#=E$OPT_CONFLICT_VX,LEVEL=@E$W_VX,MID=
             12746                                          "'P'");

  12747  4 002433   000034 630400 5                  EPPR0   28
         4 002434   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 002435   000000 701000 xent               TSX1    VXE$ERROR
         4 002436   000000 011000                    NOP     0

      541    12749    7                                 GOTO SKIP_OPTION;

  12749  4 002437   002637 710000 4                  TRA     SKIP_OPTION

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:126  
      542    12750    7                                 END;
      543    12751                                  %CHK_DUP_OPT(
      544    12752                                  STRUCT="VX_OD.WLOCK",
      545    12753                                  STRUCT_NAME$="VX_ON.WLOCK$" );

  12754  4 002440   010000 316003                    CANQ    4096,DU
         4 002441   002447 600000 4                  TZE     s:12758

  12755  4 002442   000077 236000 5                  LDQ     63
         4 002443   200051 756100                    STQ     SYMBOLIC_DCB+3,,AUTO
         4 002444   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 002445   000000 011000                    NOP     0

  12756  4 002446   002637 710000 4                  TRA     SKIP_OPTION

  12758  4 002447   010000 236003                    LDQ     4096,DU
         4 002450   000003 256000 xsym               ORSQ    VX_OD+3

      546    12760    6   BUILD_LOCK:
      547    12761    6                             ITEM_STOP = LEVEL2$ -> O$B.NSUBLKS - 1;

  12761  4 002451   100001 236100       BUILD_LOCK   LDQ     1,,PR1
         4 002452   000022 772000                    QRL     18
         4 002453   000001 136007                    SBLQ    1,DL
         4 002454   200016 756100                    STQ     ITEM_STOP,,AUTO

      548    12762    7                             DO L = 0 TO ITEM_STOP;

  12762  4 002455   200010 450100                    STZ     L,,AUTO
         4 002456   002524 710000 4                  TRA     s:12777+3

      549    12763    7                                 R$ = LEVEL2$ -> O$B.SUBLK$(L) -> O$B.SUBLK$(0) ;

  12763  4 002457   200035 470500                    LDP0    LEVEL2$,,AUTO
         4 002460   200010 720100                    LXL0    L,,AUTO
         4 002461   000003 471510                    LDP1    3,X0,PR0
         4 002462   100003 236100                    LDQ     3,,PR1
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:127  
         4 002463   200026 756100                    STQ     R$,,AUTO

      550    12764    7                                 CALL VXD$C2B( BASE, R$ -> T$C, 10 );

  12764  4 002464   000074 236000 5                  LDQ     60
         4 002465   200054 756100                    STQ     @NAME$+3,,AUTO
         4 002466   200026 236100                    LDQ     R$,,AUTO
         4 002467   200053 756100                    STQ     @NAME$+2,,AUTO
         4 002470   200021 631500                    EPPR1   BASE,,AUTO
         4 002471   200052 451500                    STP1    @NAME$+1,,AUTO
         4 002472   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 002473   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 002474   000000 701000 xent               TSX1    VXD$C2B
         4 002475   000000 011000                    NOP     0

      551    12765    8                                 IF BASE < 1 OR BASE > 72 THEN DO;

  12765  4 002476   200021 235100                    LDA     BASE,,AUTO
         4 002477   002502 600000 4                  TZE     s:12769
         4 002500   000111 115007                    CMPA    73,DL
         4 002501   002516 602000 4                  TNC     s:12776

      552    12766        /*E*  ERROR: VXP-E$ILLEGAL_LOCK_VAL_VX-0
      553    12767              MESSAGE: Illegal %U1 value ignored: %U2.
      554    12768        */
      555    12769    8                                     VX_EFIELD2 = R$ -> T$C;

  12769  4 002502   200026 470500                    LDP0    R$,,AUTO
         4 002503   000000 236100                    LDQ     0,,PR0
         4 002504   000033 772000                    QRL     27
         4 002505   000001 620006                    EAX0    1,QL
         4 002506   000000 100540                    MLR     fill='000'O
         4 002507   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         4 002510   000000 000120 xsym               ADSC9   VX_EFIELD2               cn=0,n=80

      556    12770                                          %SCREAM( ERR#=E$ILLEGAL_LOCK_VAL_VX,
      557    12771                                          LEVEL=@E$W_VX, MID="'P'" );
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:128  

  12772  4 002511   000101 630400 5                  EPPR0   65
         4 002512   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 002513   000000 701000 xent               TSX1    VXE$ERROR
         4 002514   000000 011000                    NOP     0

      558    12774    8                                     END;

  12774  4 002515   002521 710000 4                  TRA     s:12777

      559    12775    7                                 ELSE
      560    12776    7                                     VX_O.LOCK(BASE-1) = '1'B;

  12776  4 002516   003005 060400                    CSL     bolr='003'O
         4 002517   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 002520   000167 700001 xsym               BDSC    VX_O+119,A               by=3,bit=8,n=1

      561    12777    7                                 END;

  12777  4 002521   200010 235100                    LDA     L,,AUTO
         4 002522   000001 035007                    ADLA    1,DL
         4 002523   200010 755100                    STA     L,,AUTO
         4 002524   200016 236100                    LDQ     ITEM_STOP,,AUTO
         4 002525   200010 116100                    CMPQ    L,,AUTO
         4 002526   002457 603000 4                  TRC     s:12763
         4 002527   002637 710000 4                  TRA     SKIP_OPTION

      562    12778    6                           CASE(15);       /* Pseudo resourse */

      563    12779                                  %CHK_DUP_OPT
      564    12780                                          (STRUCT="VX_OD.PSEUDO",
      565    12781                                          STRUCT_NAME$="VX_ON.PSEUDO$");

  12782  4 002530   000003 236000 xsym               LDQ     VX_OD+3
         4 002531   002000 316003                    CANQ    1024,DU
         4 002532   002540 600000 4                  TZE     s:12786

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:129  
  12783  4 002533   000105 236000 5                  LDQ     69
         4 002534   200051 756100                    STQ     SYMBOLIC_DCB+3,,AUTO
         4 002535   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 002536   000000 011000                    NOP     0

  12784  4 002537   002637 710000 4                  TRA     SKIP_OPTION

  12786  4 002540   002000 236003                    LDQ     1024,DU
         4 002541   000003 256000 xsym               ORSQ    VX_OD+3

      566    12788    6                             R$=LEVEL2$->O$B.SUBLK$(0);

  12788  4 002542   100003 236100                    LDQ     3,,PR1
         4 002543   200026 756100                    STQ     R$,,AUTO

      567    12789    6                             VX_RU_HEAD.PSEUDO_TEXT=R$->O$B.SUBLK$(0)->T$C.CHARS;

  12789  4 002544   200026 473500                    LDP3    R$,,AUTO
         4 002545   300003 474500                    LDP4    3,,PR3
         4 002546   400000 236100                    LDQ     0,,PR4
         4 002547   000033 772000                    QRL     27
         4 002550   000000 621006                    EAX1    0,QL
         4 002551   040000 100540                    MLR     fill='040'O
         4 002552   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         4 002553   000024 000010 xsym               ADSC9   VX_RU_HEAD+20            cn=0,n=8

      568    12790    6                             VX_RU_HEAD.PSEUDO_COUNT = 1;

  12790  4 002554   001000 236003                    LDQ     512,DU
         4 002555   000023 552040 xsym               STBQ    VX_RU_HEAD+19,'40'O

      569    12791    6                             VX_O.PSEUDO.TEXT = VX_RU_HEAD.PSEUDO_TEXT;

  12791  4 002556   040000 100400                    MLR     fill='040'O
         4 002557   000024 000010 xsym               ADSC9   VX_RU_HEAD+20            cn=0,n=8
         4 002560   000174 200010 xsym               ADSC9   VX_O+124                 cn=1,n=8

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:130  
      570    12792    6                             IF LEVEL2$->O$B.NSUBLKS = 2

  12792  4 002561   100001 221100                    LDX1    1,,PR1
         4 002562   000002 101003                    CMPX1   2,DU
         4 002563   002637 601000 4                  TNZ     SKIP_OPTION

      571    12793    6                             THEN
      572    12794    7                             DO;

      573    12795    7                                 CALL CHARBIN(ITEM_STOP,LEVEL2$->O$B.SUBLK$(1)->O$B.
             12795                                          SUBLK$(0)->T$C.CHARS);

  12795  4 002564   100004 474500                    LDP4    4,,PR1
         4 002565   400003 475500                    LDP5    3,,PR4
         4 002566   500000 236100                    LDQ     0,,PR5
         4 002567   000033 772000                    QRL     27
         4 002570   000000 622006                    EAX2    0,QL
         4 002571   000100 305540                    DTB
         4 002572   500000 230012                    NDSC9   0,,PR5                   cn=1,s=nosgn,sf=0,n=*X2
         4 002573   200052 000010                    NDSC9   @NAME$+1,,AUTO           cn=0,s=lsgnf,sf=0,n=8
         4 002574   200053 235100                    LDA     @NAME$+2,,AUTO
         4 002575   200016 755100                    STA     ITEM_STOP,,AUTO

      574    12796    7                                 IF ITEM_STOP > 511

  12796  4 002576   001000 115007                    CMPA    512,DL
         4 002577   002602 602000 4                  TNC     s:12799

      575    12797    7                                 THEN
      576    12798    7                                     ITEM_STOP = 511;

  12798  4 002600   000777 236007                    LDQ     511,DL
         4 002601   200016 756100                    STQ     ITEM_STOP,,AUTO

      577    12799    7                                 VX_RU_HEAD.PSEUDO_COUNT = ITEM_STOP;

  12799  4 002602   200016 236100                    LDQ     ITEM_STOP,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:131  
         4 002603   000033 736000                    QLS     27
         4 002604   000023 552040 xsym               STBQ    VX_RU_HEAD+19,'40'O

      578    12800    7                                 VX_O.PSEUDO.COUNT = ITEM_STOP;

  12800  4 002605   200016 236100                    LDQ     ITEM_STOP,,AUTO
         4 002606   000033 736000                    QLS     27
         4 002607   000174 552040 xsym               STBQ    VX_O+124,'40'O

      579    12801    7                                 END;

  12801  4 002610   002637 710000 4                  TRA     SKIP_OPTION

      580    12802    6                           CASE(14);       /* N_VERSION_OPTION */

      581    12803                                  %CHK_DUP_OPT(STRUCT="VX_OD.VERSION",STRUCT_NAME$=
             12803                                      "VX_ON.VERSION$");

  12804  4 002611   000003 236000 xsym               LDQ     VX_OD+3
         4 002612   004000 316003                    CANQ    2048,DU
         4 002613   002621 600000 4                  TZE     s:12808

  12805  4 002614   000106 236000 5                  LDQ     70
         4 002615   200051 756100                    STQ     SYMBOLIC_DCB+3,,AUTO
         4 002616   002737 701000 4                  TSX1    VXP$DUP_OPT
         4 002617   000000 011000                    NOP     0

  12806  4 002620   002637 710000 4                  TRA     SKIP_OPTION

  12808  4 002621   004000 236003                    LDQ     2048,DU
         4 002622   000003 256000 xsym               ORSQ    VX_OD+3

      582    12810    6                             R$ = LEVEL2$ -> O$B.SUBLK$(0) -> O$B.SUBLK$(0);

  12810  4 002623   100003 473500                    LDP3    3,,PR1
         4 002624   300003 236100                    LDQ     3,,PR3
         4 002625   200026 756100                    STQ     R$,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:132  

      583    12811    6                             VX_O.VERSION.COUNT = R$ -> T$C.COUNT;

  12811  4 002626   200026 473500                    LDP3    R$,,AUTO
         4 002627   300000 236100                    LDQ     0,,PR3
         4 002630   000172 552040 xsym               STBQ    VX_O+122,'40'O

      584    12812    6                             VX_O.VERSION.TEXT  = R$ -> T$C.CHARS;

  12812  4 002631   300000 236100                    LDQ     0,,PR3
         4 002632   000033 772000                    QRL     27
         4 002633   000000 621006                    EAX1    0,QL
         4 002634   040000 100540                    MLR     fill='040'O
         4 002635   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         4 002636   000172 200006 xsym               ADSC9   VX_O+122                 cn=1,n=6

      585    12813    6                           END;            /* Do case( LEVEL2$ -> O$B.CODE - 1 ) */

      586    12814    5   SKIP_OPTION:
      587    12815    5                         END;              /* Do j = 0 to OPT_STOP   */

  12815  4 002637   200006 235100       SKIP_OPTION  LDA     J,,AUTO
         4 002640   000001 035007                    ADLA    1,DL
         4 002641   200006 755100                    STA     J,,AUTO
         4 002642   200015 236100                    LDQ     OPT_STOP,,AUTO
         4 002643   200006 116100                    CMPQ    J,,AUTO
         4 002644   000447 603000 4                  TRC     s:12311

      588    12816    4                   END;                    /* Do case( LEVEL1$ -> O$B.CODE - 1 ) */

      589    12817    3                 END;                      /* Do case( Q$ -> O$B.CODE - 1 ) */

  12817  4 002645   200005 235100                    LDA     I,,AUTO
         4 002646   000001 035007                    ADLA    1,DL
         4 002647   200005 755100                    STA     I,,AUTO
         4 002650   200014 236100                    LDQ     STOP,,AUTO
         4 002651   200005 116100                    CMPQ    I,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:133  
         4 002652   000207 603000 4                  TRC     s:12235

      590    12818        /**/
      591    12819    3             IF VX_FID_COUNT <= 0 THEN DO;

  12819  4 002653   000000 235000 xsym               LDA     VX_FID_COUNT
         4 002654   002704 601000 4                  TNZ     s:12830

      592    12820    3                 CALL VXS$LST( Q$,

  12820  4 002655   000107 236000 5                  LDQ     71
         4 002656   200052 756100                    STQ     @NAME$+1,,AUTO
         4 002657   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 002660   200053 756100                    STQ     @NAME$+2,,AUTO
         4 002661   000001 236000 5                  LDQ     1
         4 002662   200061 756100                    STQ     @NAME$+8,,AUTO
         4 002663   200053 630500                    EPPR0   @NAME$+2,,AUTO
         4 002664   200060 450500                    STP0    @NAME$+7,,AUTO
         4 002665   000110 237000 5                  LDAQ    72
         4 002666   200056 757100                    STAQ    @NAME$+5,,AUTO
         4 002667   200052 631500                    EPPR1   @NAME$+1,,AUTO
         4 002670   200055 451500                    STP1    @NAME$+4,,AUTO
         4 002671   200025 633500                    EPPR3   Q$,,AUTO
         4 002672   200054 453500                    STP3    @NAME$+3,,AUTO
         4 002673   200054 630500                    EPPR0   @NAME$+3,,AUTO
         4 002674   000024 631400 xsym               EPPR1   B_VECTNIL+20
         4 002675   000000 701000 xent               TSX1    VXS$LST
         4 002676   000000 011000                    NOP     0

      593    12821    3                         ADDR( STAR_G ),
      594    12822    3                         @OF,
      595    12823    3                         @OF_ALL,
      596    12824    3                         ADDR(NIL),
      597    12825    3                         0 );
      598    12826    3                 VX_ROOT$ -> VX$NODE.HEAD$ = Q$;

  12826  4 002677   200025 236100                    LDQ     Q$,,AUTO
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:134  
         4 002700   000000 470400 xsym               LDP0    VX_ROOT$
         4 002701   000004 756100                    STQ     4,,PR0

      599    12827    3                 VX_ROOT$ -> VX$NODE.TAIL$ = Q$;

  12827  4 002702   200025 236100                    LDQ     Q$,,AUTO
         4 002703   000005 756100                    STQ     5,,PR0

      600    12828    3                 END;

      601    12829
      602    12830    2             IF VX_ROOT$->VX$NODE.SON$ ~= ADDR(NIL) AND NOT VX_OD.NUM.BREF

  12830  4 002704   000000 470400 xsym               LDP0    VX_ROOT$
         4 002705   000000 236100                    LDQ     0,,PR0
         4 002706   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 002707   002723 600000 4                  TZE     s:12840
         4 002710   000000 236000 xsym               LDQ     VX_OD
         4 002711   000100 316007                    CANQ    64,DL
         4 002712   002723 601000 4                  TNZ     s:12840
         4 002713   100000 316003                    CANQ    32768,DU
         4 002714   002723 601000 4                  TNZ     s:12840

      603    12831    3                     AND NOT VX_OD.SIN.NOBREF THEN DO;

      604    12832    3                 VX_OD.NUM.BREF = '1'B;

  12832  4 002715   000100 236007                    LDQ     64,DL
         4 002716   000000 256000 xsym               ORSQ    VX_OD

      605    12833    3                 VX_O.NUM.BREF = VX_NUM_UNIQUE_BREFS; /* Set bref default */

  12833  4 002717   000000 235000 xsym               LDA     VX_NUM_UNIQUE_BREFS
         4 002720   000035 755000 xsym               STA     VX_O+29

      606    12834    3                 VX_BREF_DEFAULT_SET = '1'B;

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:135  
  12834  4 002721   400000 236003                    LDQ     -131072,DU
         4 002722   000000 756000 xsym               STQ     VX_BREF_DEFAULT_SET

      607    12835    3                 END;

      608    12836
      609    12837        /**/
      610    12838        /**/
      611    12839    2           END;                            /* Do case( Q$ -> O$B.CODE - 1 ); */

      612    12840    1         CALL VXF$FREE( @DS3, PWORK_SIZE, @NO ); /* Give back the work area */

  12840  4 002723   000001 236000 5                  LDQ     1
         4 002724   200054 756100                    STQ     @NAME$+3,,AUTO
         4 002725   200012 630500                    EPPR0   PWORK_SIZE,,AUTO
         4 002726   200053 450500                    STP0    @NAME$+2,,AUTO
         4 002727   000112 236000 5                  LDQ     74
         4 002730   200052 756100                    STQ     @NAME$+1,,AUTO
         4 002731   200052 630500                    EPPR0   @NAME$+1,,AUTO
         4 002732   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 002733   000000 701000 xent               TSX1    VXF$FREE
         4 002734   000000 011000                    NOP     0

      613    12841    1         RETURN;

  12841  4 002735   000000 702200 xent               TSX2  ! X66_ARET

  12841  4 002736   002761 710000 4     PARSE_ERROR  TRA     s:12882


PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:136  
      615    12843    1   PARSE_ERROR:;
      616    12844    1   VXP$DUP_OPT:

  12844  4 002737   200050 741300       VXP$DUP_OPT  STX1  ! SYMBOLIC_DCB+2,,AUTO

      617    12845    1         PROC( NAME$ );
      618    12846        %P;

             12854    1   /*******************************************************************************
             12855    1   *                                                                              *
             12856    1   *                          PARAMETERS                                             *
             12857    1   *                                                                              *
             12858    1   *******************************************************************************/

      619    12862    2   DCL NAME$           PTR;
      620    12863        /**/
      621    12864        /**/
      622    12865        /**/
      623    12866        /*E*  ERROR: VXP-E$DUP_OPT_VX-0
      624    12867              MESSAGE: Duplicate %U1 option ignored. First occurrence taken.
      625    12868              DESCRIPTION: Self-explanatory.
      626    12869        */
      627    12870    2         VX_EFIELD1.COUNT = NAME$ -> P$LIT.COUNT;

  12870  4 002740   200051 470500                    LDP0    @NAME$,,AUTO
         4 002741   000000 471500                    LDP1    0,,PR0
         4 002742   100001 236100                    LDQ     1,,PR1
         4 002743   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      628    12871    2         VX_EFIELD1.CHARS = NAME$ -> P$LIT.TEXT;

  12871  4 002744   000000 471500                    LDP1    0,,PR0
         4 002745   100001 236100                    LDQ     1,,PR1
         4 002746   000033 772000                    QRL     27
         4 002747   000000 620006                    EAX0    0,QL
         4 002750   040000 100540                    MLR     fill='040'O
         4 002751   100001 200010                    ADSC9   1,,PR1                   cn=1,n=*X0
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:137  
         4 002752   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      629    12872              %SCREAM(
      630    12873              ERR#=E$DUP_OPT_VX,
      631    12874              MID="'P'",
      632    12875              LEVEL=@E$W_VX);

  12876  4 002753   000114 630400 5                  EPPR0   76
         4 002754   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 002755   000000 701000 xent               TSX1    VXE$ERROR
         4 002756   000000 011000                    NOP     0

      633    12878    2         RETURN;

  12878  4 002757   200050 221300                    LDX1  ! SYMBOLIC_DCB+2,,AUTO
         4 002760   000001 702211                    TSX2  ! 1,X1

      634    12879    2   END VXP$DUP_OPT;
      635    12880
      636    12881
      637    12882    1   END VXP$PARSE;

  12882  4 002761   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:138  
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   VX_PSUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXP$PARSE.
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:139  

 **** Variables and constants ****

  ****  Section 002  Data  VXP$PARSE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 OPTION_LIST_INCLUDED

  ****  Section 003 RoData VXP$PARSE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(27)    r     1 STAR_G

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    51-0-0/w PTR         r     1 @NAME$                     3-0-0/w PTR         r     1 @START_SYMBOL$
     4-0-0/w PTR         r     1 @TYPE                     21-0-0/w UBIN        r     1 BASE
    11-0-0/w UBIN        r     1 CHAR_COUNT                37-0-0/w PTR         r     1 CURR$
    27-0-0/w PTR         r     1 HEAD$                      5-0-0/w UBIN        r     1 I
    16-0-0/w UBIN        r     1 ITEM_STOP                  6-0-0/w UBIN        r     1 J
     7-0-0/w UBIN        r     1 K                         10-0-0/w UBIN        r     1 L
    34-0-0/w PTR         r     1 LEVEL1$                   35-0-0/w PTR         r     1 LEVEL2$
    36-0-0/w PTR         r     1 LEVEL3$                   45-0-0/w PTR         r     1 LIST$
    *0-0-0/w PTR         r     1 NAME$                     43-0-0/w PTR         r     1 NAME1$
    44-0-0/w PTR         r     1 NAME2$                    40-0-0/w PTR         r     1 NODE$
    15-0-0/w UBIN        r     1 OPT_STOP                  12-0-0/w UBIN        r     1 PWORK_SIZE
    25-0-0/w PTR         r     1 Q$                        26-0-0/w PTR         r     1 R$
    13-0-0/w UBIN        r     1 SIZE                      22-0-0/w UBIN        r     1 SIZEW1
    23-0-0/w UBIN        r     1 SIZEW2                    33-0-0/w PTR         r     1 START$
    *0-0-0/w PTR         r     1 START_SYMBOL$             14-0-0/w UBIN        r     1 STOP
    46-0-0/b BIT         r     1 SYMBOLIC_DCB              30-0-0/w PTR         r     1 TAIL$
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:140  
    41-0-0/w PTR         r     1 TEXT$                     *0-0-0/w UBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/b BIT         r     1 VX_BREF_DEFAULT_SET
     0-0-0/w UBIN        r     1 VX_COMMAND                 0-0-0/w UBIN        r     1 VX_COUNT_FID
     0-0-0/w PTR         r     1 VX_CURR$
     0-0-0/w CHAR(10)    r     1 VX_DCB_OPTION_TEXT(0:3)
     0-0-0/w STRC(720)   r     1 VX_EFIELD1                 0-0-0/w STRC(720)   r     1 VX_EFIELD2
     0-0-0/w STRC(720)   r     1 VX_EFIELD3                 0-0-0/w UBIN        r     1 VX_FID_COUNT
     0-0-0/w UBIN        r     1 VX_GOT_ON_OVER             0-0-0/w PTR         r     1 VX_LOF$
     0-0-0/w SBIN        r     1 VX_M_ALL(0:8)
     0-0-0/w PTR         r     1 VX_M_BASE_PTR(0:8)
     0-0-0/w SBIN        r     1 VX_M_FREE(0:8)
     0-0-0/w UBIN        r     1 VX_NUM_UNIQUE_BREFS        0-0-0/w STRC(4572)  r     1 VX_O
     0-0-0/b STRC(116)   r     1 VX_OD                      0-0-0/w STRC(4176)  r     1 VX_ON
     0-0-0/w UBIN        r     1 VX_ON_OVER                 0-0-0/w UBIN        r     1 VX_ON_OVER_RUF
     0-0-0/w PTR         r     1 VX_PRE_DCB_NAME$           0-0-0/w PTR         r     1 VX_PRE_DCB_START$
     0-0-0/w PTR         r     1 VX_PRE_DCB_STOP$           0-0-0/w STRC(504)   r     1 VX_P_PCB_MAIN
     0-0-0/w PTR         r     1 VX_ROOT$                   0-0-0/w PTR         r     1 VX_RUF$
     0-0-0/w STRC(1440)  r     1 VX_RU_HEAD                 0-0-0/w PTR         r     1 VX_RU_NAME$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(18)    r     1 B$DNAME                    0-0-0/w STRC(144)   r     1 O$B
     0-0-0/w ASTR(45)    r     1 P$LIT                      0-0-0/w ASTR(9)     r     1 T$C
     0-0-0/c ASTR(9)     r     1 T$C_UNAL                   0-0-0/w STRC(648)   r     1 VX$LST
     0-0-0/w STRC(3672)  r     1 VX$NODE                    0-0-0/w STRC(108)   r     1 VX$SC
     0-0-0/w STRC        r     1 VX$VECTOR_LST

PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:141  

   Procedure VXP$PARSE requires 1522 words for executable code.
   Procedure VXP$PARSE requires 50 words of local(AUTO) storage.

    No errors detected in file VXP$PARSE.:E05TSI    .
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:142  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:143  
          MINI XREF LISTING

B$DNAME.COUNT
     11938**DCL     11945--IMP-SIZ 12445>>IF      12496<<ASSIGN  12497>>ASSIGN  12500<<ASSIGN  12501>>CALLBLT
     12506>>IF      12506>>IF      12678<<ASSIGN  12679>>ASSIGN  12682<<ASSIGN  12683>>ASSIGN
B$DNAME.TEXT
     11945**DCL     12445>>IF      12497<<ASSIGN  12501<<CALLBLT 12506>>IF      12506>>IF      12679<<ASSIGN
     12683<<ASSIGN
B$JIT.CPFLAGS1.SLEAZE
     11310**DCL     11310--REDEF
B$JIT.ERR.MID
     11217**DCL     11217--REDEF
B$JIT.JRESPEAK
     11378**DCL     11379--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
     11487**DCL     11487--REDEF   11488--REDEF
B$JIT.PNR
     11391**DCL     11391--REDEF
B$JIT.TSLINE
     11485**DCL     11486--REDEF
B$JIT$
      8925**DCL     11211--IMP-PTR
BASE
     12147**DCL     12326<<ASSIGN  12329<<ASSIGN  12342<>CALL    12764<>CALL    12765>>IF      12765>>IF
     12776>>ASSIGN
BUILD_LOCK
     12761**LABEL   12739--GOTO
CASE_2
     12329**LABEL   12327--GOTO
CHAR_COUNT
     12139**DCL     12200<>CALL
CLIMB
     12546**LABEL   12582--GOTO
CURR$
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:144  
     12180**DCL     12525<<ASSIGN  12527>>IF      12527>>IF      12536>>ASSIGN  12537>>ASSIGN  12541>>IF
     12542<<ASSIGN  12542>>ASSIGN  12546>>IF      12547<<ASSIGN  12547>>ASSIGN  12550<<ASSIGN  12550>>ASSIGN
     12551>>IF
HEAD$
     12172**DCL     12246<>CALL    12253>>ASSIGN
I
     12082**DCL     12083--REDEF   12234<<DOINDEX 12235>>ASSIGN  12257>>ASSIGN  12258>>ASSIGN
ITEM_STOP
     12144**DCL     12347<<ASSIGN  12348>>DOINDEX 12366<<ASSIGN  12367>>DOINDEX 12513<<ASSIGN  12523>>DOINDEX
     12613<<ASSIGN  12614>>DOINDEX 12761<<ASSIGN  12762>>DOINDEX 12795<<CALLBLT 12796>>IF      12798<<ASSIGN
     12799>>ASSIGN  12800>>ASSIGN
J
     12084**DCL     12085--REDEF   12310<<DOINDEX 12311>>ASSIGN
K
     12086**DCL     12087--REDEF   12350<<ASSIGN  12355>>IF      12356>>CALL    12359>>ASSIGN  12361>>ASSIGN
     12369<<ASSIGN  12374>>IF      12375>>CALL    12378>>ASSIGN  12380>>ASSIGN  12453<<ASSIGN  12454>>ASSIGN
     12470<<ASSIGN  12472<<ASSIGN  12473>>IF      12487<<ASSIGN  12487>>ASSIGN  12489>>IF      12491>>ASSIGN
     12493<>CALL    12504<<DOINDEX 12505>>IF      12506>>IF      12506>>IF      12508>>ASSIGN  12616<<ASSIGN
     12621>>IF      12622>>CALL    12625>>ASSIGN  12627>>DOCASE  12634<<DOINDEX 12635>>ASSIGN
L
     12088**DCL     12089--REDEF   12214<<DOINDEX 12215>>ASSIGN  12314<<ASSIGN  12318>>IF      12319>>CALL
     12322>>ASSIGN  12324>>ASSIGN  12331<<ASSIGN  12335>>IF      12336>>CALL    12339>>ASSIGN  12342>>CALL
     12348<<DOINDEX 12349>>ASSIGN  12367<<DOINDEX 12368>>ASSIGN  12384<<ASSIGN  12388>>IF      12389>>CALL
     12392>>ASSIGN  12394>>CALL    12401<<ASSIGN  12405>>IF      12406>>CALL    12409>>ASSIGN  12411>>CALL
     12411>>CALL    12418<<ASSIGN  12419>>IF      12424>>ASSIGN  12425>>ASSIGN  12425>>ASSIGN  12426>>ASSIGN
     12427>>ASSIGN  12427>>ASSIGN  12436>>IF      12437>>CALL    12440>>ASSIGN  12479>>ASSIGN  12480>>ASSIGN
     12480>>ASSIGN  12511>>ASSIGN  12523<<DOINDEX 12524>>ASSIGN  12535>>CALL    12535>>CALL    12568>>ASSIGN
     12571>>ASSIGN  12589<<ASSIGN  12593>>IF      12594>>CALL    12597>>ASSIGN  12599>>CALL    12599<>CALL
     12614<<DOINDEX 12615>>ASSIGN  12698<<ASSIGN  12699>>IF      12700>>ASSIGN  12701>>ASSIGN  12701>>ASSIGN
     12702>>ASSIGN  12703>>ASSIGN  12703>>ASSIGN  12712>>IF      12713>>CALL    12716>>ASSIGN  12718>>ASSIGN
     12762<<DOINDEX 12763>>ASSIGN
LEAVE
     12587**LABEL   12538--GOTO    12580--GOTO
LEVEL1$
     12177**DCL     12235<<ASSIGN  12236>>DOCASE  12238>>ASSIGN  12246<>CALL    12258<<ASSIGN  12263>>ASSIGN
     12266>>ASSIGN  12288>>ASSIGN  12309>>ASSIGN  12311>>ASSIGN
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:145  
LEVEL2$
     12178**DCL     12311<<ASSIGN  12312>>DOCASE  12314>>ASSIGN  12331>>ASSIGN  12341>>ASSIGN  12344>>IF
     12347>>ASSIGN  12349>>ASSIGN  12366>>ASSIGN  12368>>ASSIGN  12384>>ASSIGN  12394>>CALL    12401>>ASSIGN
     12411>>CALL    12418>>ASSIGN  12442>>ASSIGN  12467>>ASSIGN  12513>>ASSIGN  12524>>ASSIGN  12535>>CALL
     12535>>CALL    12568>>ASSIGN  12571>>ASSIGN  12589>>ASSIGN  12599>>CALL    12613>>ASSIGN  12615>>ASSIGN
     12698>>ASSIGN  12761>>ASSIGN  12763>>ASSIGN  12788>>ASSIGN  12792>>IF      12795>>CALLBLT 12795>>CALLBLT
     12810>>ASSIGN
LEVEL3$
     12179**DCL     12615<<ASSIGN  12616>>ASSIGN  12629>>CALL    12633>>ASSIGN  12635>>ASSIGN  12692>>ASSIGN
LIST$
     12186**DCL     12641<<ASSIGN  12644<>CALL    12647>>ASSIGN  12648>>ASSIGN  12649>>ASSIGN  12668<<ASSIGN
     12671<>CALL    12674>>ASSIGN  12675>>ASSIGN  12676>>ASSIGN  12677>>ASSIGN
NAME$ IN PROCEDURE VXP$DUP_OPT
     12862**DCL     12845--PROC    12870>>ASSIGN  12871>>ASSIGN  12871>>ASSIGN
NAME1$
     12184**DCL     12637<<ASSIGN  12638>>CALL    12638>>CALL    12653<<ASSIGN  12654>>ASSIGN  12658<<ASSIGN
     12660>>ASSIGN  12678>>ASSIGN  12679>>ASSIGN  12679>>ASSIGN
NAME2$
     12185**DCL     12661<<ASSIGN  12663>>ASSIGN  12682>>ASSIGN  12683>>ASSIGN  12683>>ASSIGN
NEXT
     12527**LABEL   12585--GOTO
NODE$
     12181**DCL     12524<<ASSIGN  12527>>IF      12527>>IF      12556>>ASSIGN  12557>>ASSIGN  12557>>ASSIGN
     12568<<ASSIGN  12569>>ASSIGN  12570>>ASSIGN  12570>>ASSIGN  12571<<ASSIGN  12572>>ASSIGN  12573>>ASSIGN
     12573>>ASSIGN
O$B.CODE
     11981**DCL     12208>>DOCASE  12216>>DOCASE  12218>>ASSIGN  12228>>ASSIGN  12236>>DOCASE  12238>>ASSIGN
     12263>>ASSIGN  12312>>DOCASE  12314>>ASSIGN  12331>>ASSIGN  12350>>ASSIGN  12369>>ASSIGN  12384>>ASSIGN
     12401>>ASSIGN  12418>>ASSIGN  12467>>ASSIGN  12589>>ASSIGN  12616>>ASSIGN  12636>>IF      12652>>IF
     12698>>ASSIGN
O$B.NSUBLKS
     11985**DCL     12211>>ASSIGN  12233>>ASSIGN  12258>>ASSIGN  12309>>ASSIGN  12344>>IF      12347>>ASSIGN
     12366>>ASSIGN  12513>>ASSIGN  12613>>ASSIGN  12633>>ASSIGN  12761>>ASSIGN  12792>>IF
O$B.SUBLK$
     12006**DCL     12207>>ASSIGN  12212>>CALL    12212>>CALL    12212<>CALL    12215>>ASSIGN  12218>>ASSIGN
     12223>>CALL    12223<>CALL    12235>>ASSIGN  12238>>ASSIGN  12257>>ASSIGN  12258>>ASSIGN  12258>>ASSIGN
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:146  
     12263>>ASSIGN  12266>>ASSIGN  12266>>ASSIGN  12288>>ASSIGN  12288>>ASSIGN  12311>>ASSIGN  12314>>ASSIGN
     12331>>ASSIGN  12341>>ASSIGN  12341>>ASSIGN  12349>>ASSIGN  12368>>ASSIGN  12384>>ASSIGN  12394<>CALL
     12401>>ASSIGN  12411>>CALL    12411>>CALL    12411<>CALL    12418>>ASSIGN  12442>>ASSIGN  12442>>ASSIGN
     12467>>ASSIGN  12524>>ASSIGN  12524>>ASSIGN  12535>>CALL    12535<>CALL    12535>>CALL    12535>>CALL
     12535<>CALL    12568>>ASSIGN  12568>>ASSIGN  12571>>ASSIGN  12571>>ASSIGN  12589>>ASSIGN  12599<>CALL
     12615>>ASSIGN  12629>>CALL    12629>>CALL    12629<>CALL    12635>>ASSIGN  12637>>ASSIGN  12637>>ASSIGN
     12653>>ASSIGN  12653>>ASSIGN  12658>>ASSIGN  12658>>ASSIGN  12658>>ASSIGN  12661>>ASSIGN  12661>>ASSIGN
     12661>>ASSIGN  12692>>ASSIGN  12692>>ASSIGN  12698>>ASSIGN  12763>>ASSIGN  12763>>ASSIGN  12788>>ASSIGN
     12789>>ASSIGN  12789>>ASSIGN  12795>>CALLBLT 12795>>CALLBLT 12795>>CALLBLT 12795>>CALLBLT 12810>>ASSIGN
     12810>>ASSIGN
OPTION_LIST_INCLUDED
     12149**DCL     12243<<ASSIGN  12256>>IF
OPT_OPTIONS
     12309**LABEL   12259--GOTO
OPT_STOP
     12143**DCL     12309<<ASSIGN  12310>>DOINDEX
P$LIT.COUNT
     12053**DCL     12056--IMP-SIZ 12424>>ASSIGN  12425>>ASSIGN  12426>>ASSIGN  12427>>ASSIGN  12479>>ASSIGN
     12480>>ASSIGN  12700>>ASSIGN  12701>>ASSIGN  12702>>ASSIGN  12703>>ASSIGN  12720>>ASSIGN  12721>>ASSIGN
     12723>>ASSIGN  12724>>ASSIGN  12741>>ASSIGN  12742>>ASSIGN  12744>>ASSIGN  12745>>ASSIGN  12870>>ASSIGN
     12871>>ASSIGN
P$LIT.TEXT
     12056**DCL     12425>>ASSIGN  12427>>ASSIGN  12480>>ASSIGN  12701>>ASSIGN  12703>>ASSIGN  12721>>ASSIGN
     12724>>ASSIGN  12742>>ASSIGN  12745>>ASSIGN  12871>>ASSIGN
PARSE_ERROR
     12841**LABEL   12200--CALLALT
PWORK_SIZE
     12140**DCL     12199<<ASSIGN  12200<>CALL    12840<>CALL
Q$
     12169**DCL     12207<<ASSIGN  12208>>DOCASE  12211>>ASSIGN  12212>>CALL    12215>>ASSIGN  12233>>ASSIGN
     12235>>ASSIGN  12257>>ASSIGN  12258>>ASSIGN  12820<>CALL    12826>>ASSIGN  12827>>ASSIGN
R$
     12170**DCL     12215<<ASSIGN  12216>>DOCASE  12218>>ASSIGN  12223>>CALL    12228>>ASSIGN  12257<<ASSIGN
     12258>>ASSIGN  12341<<ASSIGN  12342>>CALL    12342>>CALL    12349<<ASSIGN  12350>>ASSIGN  12368<<ASSIGN
     12369>>ASSIGN  12443<<ASSIGN  12444>>DOWHILE 12445>>IF      12445>>IF      12453>>ASSIGN  12465<<ASSIGN
     12465>>ASSIGN  12490<<ASSIGN  12493<>CALL    12496>>ASSIGN  12497>>ASSIGN  12497>>ASSIGN  12500>>ASSIGN
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:147  
     12501>>CALLBLT 12501>>CALLBLT 12506>>IF      12506>>IF      12511>>ASSIGN  12635<<ASSIGN  12636>>IF
     12637>>ASSIGN  12652>>IF      12653>>ASSIGN  12658>>ASSIGN  12661>>ASSIGN  12692<<ASSIGN  12693>>CALL
     12693>>CALL    12763<<ASSIGN  12764>>CALL    12764>>CALL    12769>>ASSIGN  12769>>ASSIGN  12788<<ASSIGN
     12789>>ASSIGN  12789>>ASSIGN  12810<<ASSIGN  12811>>ASSIGN  12812>>ASSIGN  12812>>ASSIGN
SIZE
     12141**DCL     12665<<ASSIGN  12667>>IF      12669>>ASSIGN  12671<>CALL
SIZEW1
     12148**DCL     12654<<ASSIGN  12660<<ASSIGN  12665>>ASSIGN  12675>>ASSIGN  12681>>ASSIGN
SIZEW2
     12150**DCL     12638<>CALL    12649>>ASSIGN  12655<<ASSIGN  12663<<ASSIGN  12665>>ASSIGN  12676>>ASSIGN
     12680>>IF
SKIP_MAP_OPTION
     12363**LABEL   12357--GOTO
SKIP_OPTION
     12815**LABEL   12320--GOTO    12337--GOTO    12390--GOTO    12407--GOTO    12431--GOTO    12438--GOTO
     12463--GOTO    12485--GOTO    12519--GOTO    12595--GOTO    12608--GOTO    12707--GOTO    12714--GOTO
     12728--GOTO    12735--GOTO    12749--GOTO    12756--GOTO    12784--GOTO    12806--GOTO
SKIP_PRIV_OPTION
     12382**LABEL   12376--GOTO
SKIP_VECTOR_OPTION
     12696**LABEL   12623--GOTO
START$
     12176**DCL     12200<>CALL
START_SYMBOL$
     11964**DCL        19--PROC    12200<>CALL
STAR_G
     12192**DCL     12820--CALL
STOP
     12142**DCL     12211<<ASSIGN  12214>>DOINDEX 12233<<ASSIGN  12234>>DOINDEX
SYMBOLIC_DCB
     12189**DCL     12467<<ASSIGN  12469>>IF      12495>>IF
T$C
     11902**DCL     12342<>CALL    12481>>ASSIGN  12638<>CALL    12693<>CALL    12764<>CALL    12769>>ASSIGN
T$C.CHARS
     11904**DCL     12279>>ASSIGN  12300>>ASSIGN  12445>>IF      12456>>ASSIGN  12497>>ASSIGN  12501>>CALLBLT
     12527>>IF      12527>>IF      12557>>ASSIGN  12570>>ASSIGN  12573>>ASSIGN  12679>>ASSIGN  12683>>ASSIGN
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:148  
     12789>>ASSIGN  12795>>CALLBLT 12812>>ASSIGN
T$C.COUNT
     11903**DCL     11904--IMP-SIZ 12278>>ASSIGN  12279>>ASSIGN  12299>>ASSIGN  12300>>ASSIGN  12342>>CALL
     12445>>IF      12455>>ASSIGN  12456>>ASSIGN  12470>>ASSIGN  12472>>ASSIGN  12481>>ASSIGN  12496>>ASSIGN
     12497>>ASSIGN  12500>>ASSIGN  12501>>CALLBLT 12527>>IF      12527>>IF      12556>>ASSIGN  12557>>ASSIGN
     12569>>ASSIGN  12570>>ASSIGN  12572>>ASSIGN  12573>>ASSIGN  12638>>CALL    12654>>ASSIGN  12660>>ASSIGN
     12663>>ASSIGN  12678>>ASSIGN  12679>>ASSIGN  12682>>ASSIGN  12683>>ASSIGN  12693>>CALL    12764>>CALL
     12769>>ASSIGN  12789>>ASSIGN  12795>>CALLBLT 12811>>ASSIGN  12812>>ASSIGN
T$C_UNAL.COUNT
     11906**DCL     11907--IMP-SIZ
TAIL$
     12173**DCL     12246<>CALL    12254>>ASSIGN  12394<>CALL    12442<<ASSIGN  12445>>IF      12445>>IF
     12455>>ASSIGN  12456>>ASSIGN  12456>>ASSIGN  12470>>ASSIGN  12472>>ASSIGN  12481>>ASSIGN  12481>>ASSIGN
     12496>>ASSIGN  12497>>ASSIGN  12497>>ASSIGN  12500>>ASSIGN  12501>>CALLBLT 12501>>CALLBLT 12535<>CALL
     12536>>ASSIGN  12537>>ASSIGN
TEXT$
     12182**DCL     12266<<ASSIGN  12267>>ASSIGN  12269<>CALL    12278>>ASSIGN  12279>>ASSIGN  12279>>ASSIGN
     12288<<ASSIGN  12291<>CALL    12299>>ASSIGN  12300>>ASSIGN  12300>>ASSIGN  12677<<ASSIGN  12678>>ASSIGN
     12679>>ASSIGN  12679>>ASSIGN  12681<<ASSIGN  12681>>ASSIGN  12682>>ASSIGN  12683>>ASSIGN  12683>>ASSIGN
TYPE
     11965**DCL        19--PROC    12200<>CALL
VX$LST.LINK$
     11810**DCL     12536<<ASSIGN
VX$LST.OBJECT_NAME$
     11813**DCL     11814--REDEF
VX$LST.P.NAME_.NAME$
     11826**DCL     12527>>IF      12527>>IF
VX$LST.SC_HEAD$
     11815**DCL     11816--REDEF
VX$LST.SC_TAIL$
     11817**DCL     11818--REDEF
VX$NODE.ADDR_START_A
     11537**DCL     11538--REDEF
VX$NODE.ADDR_STOP_A
     11542**DCL     11543--REDEF
VX$NODE.BROTHER$
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:149  
     11526**DCL     12546>>IF      12547>>ASSIGN
VX$NODE.FATHER$
     11527**DCL     12550>>ASSIGN
VX$NODE.HEAD$
     11529**DCL     12253<<ASSIGN  12527>>IF      12527>>IF      12826<<ASSIGN
VX$NODE.L_PREV_SIZE
     11595**DCL     11606--REDEF
VX$NODE.L_SC_START
     11614**DCL     11619--REDEF
VX$NODE.L_SC_STOP
     11620**DCL     11625--REDEF
VX$NODE.L_SIZE
     11583**DCL     11594--REDEF
VX$NODE.L_START
     11559**DCL     11570--REDEF
VX$NODE.L_STOP
     11571**DCL     11582--REDEF
VX$NODE.PROMOTE_HEAD
     11626**DCL     11629--REDEF
VX$NODE.PROMOTE_TAIL
     11630**DCL     11633--REDEF
VX$NODE.SON$
     11525**DCL     12541>>IF      12542>>ASSIGN  12830>>IF
VX$NODE.START_PAGE#_A
     11547**DCL     11548--REDEF
VX$NODE.STOP_PAGE#_A
     11552**DCL     11553--REDEF
VX$NODE.TAIL$
     11531**DCL     12254<<ASSIGN  12536>>ASSIGN  12537<<ASSIGN  12827<<ASSIGN
VX$SC
     11664**DCL     12453--ASSIGN  12465--ASSIGN
VX$SC.NAME_DISP
     11702**DCL     12445>>IF      12445>>IF
VX$SECT.MBZ
     11775**DCL     11777--REDEF   11781--REDEF
VX$VECTOR_LST.SIZEW1
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:150  
     11878**DCL     12648<<ASSIGN  12675<<ASSIGN
VX$VECTOR_LST.SIZEW2
     11879**DCL     12649<<ASSIGN  12676<<ASSIGN
VXA$GET
     12109**DCL-ENT 12493--CALL    12644--CALL    12671--CALL
VXA$ND
     12116**DCL-ENT 12205--CALL
VXD$ALST
     12118**DCL-ENT 12599--CALL
VXD$C2B
     12115**DCL-ENT 12342--CALL    12638--CALL    12693--CALL    12764--CALL
VXD$FLST
     12117**DCL-ENT 12394--CALL
VXE$ERROR
     12121**DCL-ENT 12283--CALL    12304--CALL    12429--CALL    12461--CALL    12483--CALL    12562--CALL
     12578--CALL    12705--CALL    12726--CALL    12747--CALL    12772--CALL    12876--CALL
VXF$CLOSE
     12111**DCL-ENT 12222--CALL    12290--CALL
VXF$FREE
     12110**DCL-ENT 12840--CALL
VXF$OPEN_LO
     12112**DCL-ENT 12225--CALL    12292--CALL
VXP$DUP_OPT
     12845**PROC    12319--CALL    12336--CALL    12356--CALL    12375--CALL    12389--CALL    12406--CALL
     12437--CALL    12518--CALL    12594--CALL    12607--CALL    12622--CALL    12713--CALL    12734--CALL
     12755--CALL    12783--CALL    12805--CALL
VXP$PAR
     12107**DCL-ENT 12200--CALL
VXP$TREE
     12120**DCL-ENT 12246--CALL
VXS$LST
     12119**DCL-ENT 12212--CALL    12223--CALL    12269--CALL    12291--CALL    12411--CALL    12535--CALL
     12629--CALL    12820--CALL
VXU$INIT_VECTOR
     12122**DCL-ENT 12612--CALL
VX_BIAS.A
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:151  
      9591**DCL      9592--REDEF
VX_BREF_DEFAULT_SET
      9554**DCL     12834<<ASSIGN
VX_CBUF.CHARS_A
      9525**DCL      9526--REDEF
VX_COMMAND
      9534**DCL     12210<<ASSIGN  12238<<ASSIGN
VX_CONST_DCB.ACTPOS
     10707**DCL     10707--REDEF
VX_CONST_DCB.ARS#
     10666**DCL     10666--REDEF
VX_CONST_DCB.ATTR#
     10696**DCL     10696--REDEF   10698--REDEF
VX_CONST_DCB.BORROW
     10718**DCL     10718--REDEF   10718--REDEF   10718--REDEF
VX_CONST_DCB.EOMCHAR#
     10673**DCL     10674--REDEF
VX_CONST_DCB.FLDID
     10710**DCL     10711--REDEF
VX_CONST_DCB.FORM$
     10702**DCL     10702--REDEF
VX_CONST_DCB.FSECT
     10725**DCL     10725--REDEF
VX_CONST_DCB.FSN#
     10692**DCL     10692--REDEF   10692--REDEF   10693--REDEF
VX_CONST_DCB.HEADER$
     10701**DCL     10702--REDEF
VX_CONST_DCB.IXTNSIZE#
     10698**DCL     10699--REDEF
VX_CONST_DCB.LASTSTA$
     10682**DCL     10682--REDEF
VX_CONST_DCB.LVL
     10719**DCL     10719--REDEF
VX_CONST_DCB.NAME#.C
     10682**DCL     10683--REDEF
VX_CONST_DCB.NOEOF
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:152  
     10714**DCL     10714--REDEF
VX_CONST_DCB.NRECS#
     10699**DCL     10699--REDEF
VX_CONST_DCB.NRECX
     10726**DCL     10726--REDEF
VX_CONST_DCB.OHDR
     10715**DCL     10715--REDEF
VX_CONST_DCB.ORG#
     10690**DCL     10691--REDEF
VX_CONST_DCB.PRECNO
     10723**DCL     10723--REDEF
VX_CONST_DCB.RCSZ
     10731**DCL     10731--REDEF
VX_CONST_DCB.RES#
     10684**DCL     10684--REDEF
VX_CONST_DCB.SETX
     10703**DCL     10703--REDEF
VX_CONST_DCB.TAB$
     10702**DCL     10702--REDEF
VX_CONST_DCB.TDA
     10722**DCL     10723--REDEF
VX_CONST_DCB.WSN#
     10684**DCL     10685--REDEF
VX_COUNT_FID
      9544**DCL     12241<<ASSIGN  12255<<ASSIGN
VX_CURR$
      9560**DCL     12206<<ASSIGN  12246<>CALL    12253>>ASSIGN  12254>>ASSIGN
VX_DCB_OPTION_TEXT
     10501**DCL     12454>>ASSIGN
VX_EBUF.CHARS_A
     10114**DCL     10115--REDEF
VX_EFIELD1.CHARS
     10123**DCL     10124--REDEF   12279<<ASSIGN  12300<<ASSIGN  12425<<ASSIGN  12454<<ASSIGN  12480<<ASSIGN
     12557<<ASSIGN  12703<<ASSIGN  12721<<ASSIGN  12742<<ASSIGN  12871<<ASSIGN
VX_EFIELD1.COUNT
     10122**DCL     12278<<ASSIGN  12299<<ASSIGN  12424<<ASSIGN  12452<<ASSIGN  12479<<ASSIGN  12556<<ASSIGN
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:153  
     12702<<ASSIGN  12720<<ASSIGN  12741<<ASSIGN  12870<<ASSIGN
VX_EFIELD2
     10125**DCL     12481<<ASSIGN  12769<<ASSIGN
VX_EFIELD2.CHARS
     10127**DCL     10128--REDEF   12427<<ASSIGN  12456<<ASSIGN  12570<<ASSIGN  12701<<ASSIGN  12724<<ASSIGN
     12745<<ASSIGN
VX_EFIELD2.COUNT
     10126**DCL     12426<<ASSIGN  12455<<ASSIGN  12569<<ASSIGN  12700<<ASSIGN  12723<<ASSIGN  12744<<ASSIGN
VX_EFIELD3.CHARS
     10131**DCL     10132--REDEF   12573<<ASSIGN
VX_EFIELD3.COUNT
     10130**DCL     12572<<ASSIGN
VX_EI_KEY_BUF.KEY
     10507**DCL     10508--REDEF
VX_ERRORS
      9568**DCL      9579--REDEF
VX_ERRORS.CONFLICT_A
      9574**DCL      9575--REDEF
VX_ERRORS.UNSAT_A
      9570**DCL      9571--REDEF
VX_FID_COUNT
      9545**DCL     12242<<ASSIGN  12819>>IF
VX_GOT_ON_OVER
      9547**DCL     12219<<ASSIGN  12268>>IF      12270<<ASSIGN
VX_IMAGE_DATA.CPAGE#_A
      8705**DCL      8706--REDEF
VX_IMAGE_DATA.NODE_A$
      8717**DCL      8718--REDEF
VX_IMAGE_DATA.START_A$
      8709**DCL      8710--REDEF
VX_IMAGE_DATA.STOP_A$
      8713**DCL      8714--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8774**DCL      8775--REDEF
VX_IMAGE_DS3.NODE_A$
      8786**DCL      8787--REDEF
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:154  
VX_IMAGE_DS3.START_A$
      8778**DCL      8779--REDEF
VX_IMAGE_DS3.STOP_A$
      8782**DCL      8783--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8797**DCL      8798--REDEF
VX_IMAGE_DS4.NODE_A$
      8809**DCL      8810--REDEF
VX_IMAGE_DS4.START_A$
      8801**DCL      8802--REDEF
VX_IMAGE_DS4.STOP_A$
      8805**DCL      8806--REDEF
VX_IMAGE_DS5.CPAGE#_A
      8820**DCL      8821--REDEF
VX_IMAGE_DS5.NODE_A$
      8832**DCL      8833--REDEF
VX_IMAGE_DS5.START_A$
      8824**DCL      8825--REDEF
VX_IMAGE_DS5.STOP_A$
      8828**DCL      8829--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8843**DCL      8844--REDEF
VX_IMAGE_DS6.NODE_A$
      8855**DCL      8856--REDEF
VX_IMAGE_DS6.START_A$
      8847**DCL      8848--REDEF
VX_IMAGE_DS6.STOP_A$
      8851**DCL      8852--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8866**DCL      8867--REDEF
VX_IMAGE_DS7.NODE_A$
      8878**DCL      8879--REDEF
VX_IMAGE_DS7.START_A$
      8870**DCL      8871--REDEF
VX_IMAGE_DS7.STOP_A$
      8874**DCL      8875--REDEF
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:155  
VX_IMAGE_DS8.CPAGE#_A
      8889**DCL      8890--REDEF
VX_IMAGE_DS8.NODE_A$
      8901**DCL      8902--REDEF
VX_IMAGE_DS8.START_A$
      8893**DCL      8894--REDEF
VX_IMAGE_DS8.STOP_A$
      8897**DCL      8898--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8728**DCL      8729--REDEF
VX_IMAGE_PROC.NODE_A$
      8740**DCL      8741--REDEF
VX_IMAGE_PROC.START_A$
      8732**DCL      8733--REDEF
VX_IMAGE_PROC.STOP_A$
      8736**DCL      8737--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8751**DCL      8752--REDEF
VX_IMAGE_ROS.NODE_A$
      8763**DCL      8764--REDEF
VX_IMAGE_ROS.START_A$
      8755**DCL      8756--REDEF
VX_IMAGE_ROS.STOP_A$
      8759**DCL      8760--REDEF
VX_LOF$
      9559**DCL     12223<>CALL    12289>>IF      12290<>CALL    12291<>CALL
VX_M_ALL
      9602**DCL     12489>>IF      12640>>IF      12667>>IF
VX_M_BASE_PTR
      9604**DCL     12490>>ASSIGN  12641>>ASSIGN  12668>>ASSIGN
VX_M_FREE
      9600**DCL     12489>>IF      12490>>ASSIGN  12491<<ASSIGN  12491>>ASSIGN  12640>>IF      12641>>ASSIGN
     12642<<ASSIGN  12642>>ASSIGN  12667>>IF      12668>>ASSIGN  12669<<ASSIGN  12669>>ASSIGN
VX_M_VECTOR.F
      8556**DCL      8560--REDEF
VX_M_VECTOR_DP.F
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:156  
      8591**DCL      8595--REDEF
VX_NUM_UNIQUE_BREFS
      9552**DCL     12833>>ASSIGN
VX_O.ACCTN_A$
      9720**DCL      9721--REDEF   12599<>CALL
VX_O.DCB_MATCH_A$
      9729**DCL      9730--REDEF   12504--DOINDEX 12505>>IF      12506>>IF      12506>>IF      12508<<ASSIGN
     12511<<ASSIGN
VX_O.DCB_MATCH_HIT_A
      9735**DCL      9736--REDEF
VX_O.FIDN_A$
      9714**DCL      9715--REDEF   12394<>CALL
VX_O.FID_A$
      9706**DCL      9707--REDEF   12411<>CALL
VX_O.INCLUDE_A$
      9726**DCL      9727--REDEF
VX_O.LOCK
      9763**DCL     12776<<ASSIGN
VX_O.MAP_A
      9700**DCL      9701--REDEF   12228<<ASSIGN  12345<<ASSIGN  12361<<ASSIGN
VX_O.NODCB_A
      9757**DCL      9758--REDEF   12718<<ASSIGN
VX_O.NUM.BREF
      9648**DCL     12833<<ASSIGN
VX_O.NUM_A
      9645**DCL      9647--REDEF   12342<>CALL
VX_O.OPT_A
      9745**DCL      9746--REDEF
VX_O.PRIV_A
      9661**DCL      9663--REDEF   12380>>ASSIGN
VX_O.PSEUDO.COUNT
      9768**DCL     12800<<ASSIGN
VX_O.PSEUDO.TEXT
      9769**DCL     12791<<ASSIGN
VX_O.SIN_A
      9614**DCL      9615--REDEF   12324<<ASSIGN
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:157  
VX_O.TCB_A
      9741**DCL      9742--REDEF
VX_O.VECTOR_.DATA
      9755**DCL     12693<>CALL
VX_O.VECTOR_.LIST$
      9752**DCL     12646>>IF      12647<<ASSIGN  12673>>IF      12674<<ASSIGN
VX_O.VECTOR_.LIST_SIZE
      9751**DCL     12633<<ASSIGN  12634>>DOINDEX
VX_O.VECTOR_.REMOVE_ENTDEF
      9753**DCL     12688<<ASSIGN
VX_O.VECTOR_.REMOVE_SYMDEF
      9754**DCL     12690<<ASSIGN
VX_O.VECTOR_.RF$
      9750**DCL     12629<>CALL
VX_O.VERSION.COUNT
      9765**DCL     12811<<ASSIGN
VX_O.VERSION.TEXT
      9766**DCL     12812<<ASSIGN
VX_OD.ACCTN_A$
      9918**DCL      9919--REDEF   12593>>IF      12597<<ASSIGN
VX_OD.DCB_MATCH_A$
      9927**DCL      9928--REDEF   12436>>IF      12440<<ASSIGN  12699>>IF
VX_OD.FIDN_A$
      9912**DCL      9913--REDEF   12388>>IF      12392<<ASSIGN
VX_OD.FID_A$
      9904**DCL      9905--REDEF   12405>>IF      12409<<ASSIGN
VX_OD.INCLUDE_A$
      9924**DCL      9925--REDEF   12517>>IF      12521<<ASSIGN
VX_OD.MAP_A
      9898**DCL      9899--REDEF   12355>>IF      12359<<ASSIGN
VX_OD.NODCB_A
      9942**DCL      9943--REDEF   12419>>IF      12712>>IF      12716<<ASSIGN
VX_OD.NUM.BREF
      9847**DCL     12830>>IF      12832<<ASSIGN
VX_OD.NUM_A
      9845**DCL      9846--REDEF   12335>>IF      12339<<ASSIGN
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:158  
VX_OD.PRIV_A
      9860**DCL      9861--REDEF   12374>>IF      12378<<ASSIGN
VX_OD.PSEUDO
      9951**DCL     12782>>IF      12786<<ASSIGN
VX_OD.SIN.NOBREF
      9818**DCL     12830>>IF
VX_OD.SIN_A
      9814**DCL      9815--REDEF   12318>>IF      12322<<ASSIGN
VX_OD.SLOCK
      9948**DCL     12733>>IF      12737<<ASSIGN  12743>>IF
VX_OD.VECTOR_A$
      9933**DCL      9934--REDEF   12606>>IF      12610<<ASSIGN  12621>>IF      12625<<ASSIGN
VX_OD.VERSION
      9950**DCL     12804>>IF      12808<<ASSIGN
VX_OD.WLOCK
      9949**DCL     12722>>IF      12754>>IF      12758<<ASSIGN
VX_OL.MAX_A
      9789**DCL      9791--REDEF
VX_OL.MIN_A
      9774**DCL      9775--REDEF
VX_ON.ACCTN_A$
     10063**DCL     10065--REDEF   12594<>CALL
VX_ON.DCB_MATCH_A$
     10074**DCL     10076--REDEF   12424>>ASSIGN  12425>>ASSIGN  12425>>ASSIGN  12437<>CALL    12479>>ASSIGN
     12480>>ASSIGN  12480>>ASSIGN  12700>>ASSIGN  12701>>ASSIGN  12701>>ASSIGN
VX_ON.FIDN_A$
     10056**DCL     10058--REDEF   12389<>CALL
VX_ON.FID_A$
     10047**DCL     10049--REDEF   12406<>CALL
VX_ON.INCLUDE_A$
     10070**DCL     10072--REDEF   12518<>CALL
VX_ON.MAP_A
     10040**DCL     10042--REDEF   12356<>CALL
VX_ON.NODCB_A$
     10090**DCL     10091--REDEF   12426>>ASSIGN  12427>>ASSIGN  12427>>ASSIGN  12702>>ASSIGN  12703>>ASSIGN
     12703>>ASSIGN  12713<>CALL
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:159  
VX_ON.NUM_A
      9985**DCL      9987--REDEF   12336<>CALL
VX_ON.PRIV_A
     10001**DCL     10003--REDEF   12375<>CALL
VX_ON.PSEUDO$
     10099**DCL     12783<>CALL
VX_ON.SIN_A
      9953**DCL      9955--REDEF   12319<>CALL
VX_ON.SLOCK$
     10096**DCL     12720>>ASSIGN  12721>>ASSIGN  12721>>ASSIGN  12734<>CALL    12744>>ASSIGN  12745>>ASSIGN
     12745>>ASSIGN
VX_ON.VECTOR_.VECTOR$
     10083**DCL     12607<>CALL
VX_ON.VECTOR_A$
     10081**DCL     10082--REDEF   12622<>CALL
VX_ON.VERSION$
     10098**DCL     12805<>CALL
VX_ON.WLOCK$
     10097**DCL     12723>>ASSIGN  12724>>ASSIGN  12724>>ASSIGN  12741>>ASSIGN  12742>>ASSIGN  12742>>ASSIGN
     12755<>CALL
VX_ON_OVER
      9535**DCL     12218<<ASSIGN  12263<<ASSIGN  12271>>ASSIGN
VX_ON_OVER_RUF
      9536**DCL     12271<<ASSIGN
VX_OUHEAD.VERSION
      9400**DCL      9402--REDEF
VX_OU_HEAD
      9343**DCL      9382--REDEF
VX_OU_HEAD.REC_A
      9355**DCL      9358--REDEF
VX_O_KEY_BUF.FORM0
      8604**DCL      8607--REDEF    8614--REDEF
VX_O_KEY_BUF_L.FORM0
      8627**DCL      8630--REDEF    8637--REDEF
VX_PASS2_REF.OU.L_START
     10293**DCL     10298--REDEF
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:160  
VX_PASS2_REF.OU.L_STOP
     10299**DCL     10304--REDEF
VX_PASS2_REF.OU.MAX
     10287**DCL     10292--REDEF
VX_PASS2_REF.OU.SIZE
     10305**DCL     10310--REDEF
VX_PASS2_REF.SAT.COUNT
     10332**DCL     10338--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10339**DCL     10345--REDEF
VX_PASS2_REF.SAT.L_START
     10318**DCL     10324--REDEF
VX_PASS2_REF.SAT.L_STOP
     10325**DCL     10331--REDEF
VX_PASS2_REF.SAT.MAX
     10312**DCL     10317--REDEF
VX_PASS2_REF.UNSAT.L_START
     10380**DCL     10385--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10386**DCL     10391--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10392**DCL     10397--REDEF
VX_PASS2_REF.UNSAT.MAX
     10374**DCL     10379--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10404**DCL     10409--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10398**DCL     10403--REDEF
VX_PHRASE.PHRASE
      9806**DCL      9808--REDEF
VX_PRE_DCB_NAME$
      8295**DCL     12445>>IF      12445>>IF
VX_PRE_DCB_START$
      8296**DCL     12443>>ASSIGN  12453>>ASSIGN
VX_PRE_DCB_STOP$
      8297**DCL     12444>>DOWHILE
PL6.E3A0      #001=VXP$PARSE File=VXP$PARSE.:E05TSI                              WED 07/30/97 08:33 Page:161  
VX_PROGRAM_BIAS.A
      9584**DCL      9585--REDEF
VX_P_PCB_MAIN.OUT$
      8331**DCL     12207>>ASSIGN
VX_ROOT$
      9557**DCL     12205<>CALL    12206>>ASSIGN  12525>>ASSIGN  12826>>ASSIGN  12827>>ASSIGN  12830>>IF
VX_RUF$
      9558**DCL     12212<>CALL    12269<>CALL
VX_RU_HEAD.PRIV
      8936**DCL     12380<<ASSIGN  12380>>ASSIGN
VX_RU_HEAD.PSEUDO_COUNT
      9094**DCL     12790<<ASSIGN  12799<<ASSIGN
VX_RU_HEAD.PSEUDO_TEXT
      9102**DCL     12789<<ASSIGN  12791>>ASSIGN
VX_RU_NAME$
      8910**DCL     12267<<ASSIGN
VX_R_KEY_BUF.FORM0
      8653**DCL      8657--REDEF    8663--REDEF
VX_SD.A
      8281**DCL      8282--REDEF
VX_SPC.B$.MINE
     10475**DCL     10481--REDEF
VX_SPC.B$.NAME
     10454**DCL     10460--REDEF
VX_SPC.B$.SKIP
     10468**DCL     10474--REDEF
VX_SPC.B$.VALUE
     10461**DCL     10467--REDEF
VX_SPC.SEG.NAME
     10423**DCL     10429--REDEF
VX_SPC.SEG.VALUE
     10430**DCL     10436--REDEF
VX_TSX0_OVERLAY.H
     10198**DCL     10201--REDEF
