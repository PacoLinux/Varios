VERSION A02

PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:1    
        1        1        /*M* FUS$SECCHK - Security check code for NFS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*  NAME: FUS$SECCHK
        8        8              Purpose:
        9        9                    Check the security access for an NFS user.
       10       10        */
       11       11        FUS$SECCHK: PROC( PARM) ALTRET;
       12       12
       13       13        %INCLUDE CP_6;
       14       94        %INCLUDE FU_NFS_M;
       15      609        %INCLUDE FU_NFSSUBS_C;
       16      704        %INCLUDE XSL_SOCKET_M;
       17     1452    1       DCL PARM CHAR(PARMBIN);
       18     1453    1       DCL PARMBIN REDEF PARM UBIN;
       19     1454            %FU$UCTX( NAME=PUCTX, STCLASS=REDEF PARM);
       20     1507            %FU$RQSCTX( NAME=RQSCTX, STCLASS=REDEF PARM);
       21     1596
       22     1597    1   DCL UCTX$ PTR;
       23     1598
       24     1599        %M$DCB( DCBN=F$NFSSEC, ASN=FILE, NAME=':nfssec', ACCT=':SYS');
       25     1673        %FPT_READ( FPTN=SECREAD, BUF=SECREC, KEY=SECKEY, KEYS=YES, DCB=F$NFSSEC);
       26     1712        %FPT_READ( FPTN=SMREAD, KEY=SMKEY, KEYS=YES, DCB=F$NFSSEC);
       27     1751        %FU$SECREC( NAME=SECREC, STCLASS=STATIC);
       28     1774        %FU$NFSSECKEY( NAME=SECKEY, STCLASS=STATIC);
       29     1795        %FU$SMKEY( NAME=SMKEY, STCLASS=STATIC);
       30     1815
       31     1816        %FU$HCTX( NAME=HCTX, STCLASS="BASED(PUCTX.HCTX$)");
       32     1839        %FU$UCTX( NAME=UCTX, STCLASS="BASED(UCTX$)");
       33     1892    1   DCL 1 MREPLY BASED ALIGNED,
       34     1893    1      2 STATUS UBIN,
       35     1894           %FU$FHANDLE( NAME=FHANDLE, LVL=2);
       36     1915        %EQU MREPLY=CHARTEXT('ADDR(RQSCTX.REPLYHDR.RESULTS)->MREPLY');
       37     1916        %EQU NEG# = BITBIN('000000377361'O);
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:2    
       38     1917
       39     1918        /*F*  NAME: FUS$LOOKUP
       40     1919              Purpose:
       41     1920                    To verify if the UCTX user exists in the :nfssec file, and if he
       42     1921                    does, to fill in the PUCTX.USER access information.
       43     1922        */
       44     1923        /*D*  NAME: FUS$LOOKUP
       45     1924              Inputs:
       46     1925                    PUCTX - the UCTX of the user to verify for NFS access.
       47     1926              Outputs:
       48     1927                    PUCTX.USER - the NFS security access that this user has.
       49     1928              Altreturn:
       50     1929                    If the user does not exist in :nfssec, or we're told to REJECT him.
       51     1930              Algorithm:
       52     1931                    Try to find the user for every permutation of UID,GID,HOST with
       53     1932                    wildcarded access.  If he's found, return if he is not to be
       54     1933                    REJECTed, otherwise ALTRET.
       55     1934        */
       56     1935    1   FUS$LOOKUP: ENTRY( PARM) ALTRET;
       57     1936
       58     1937                                              /* look for combination:   UID GID HOST */
       59     1938    1      SECKEY.UID = PUCTX.USER.UID;
       60     1939    1      SECKEY.GID = PUCTX.USER.GID;
       61     1940    1      SECKEY.NAME = HCTX.NAME.T;
       62     1941    1      SECKEY.L = HCTX.NAME.L+5;
       63     1942    2      CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;     /* UID GID HOST */
       64     1943    1      SECKEY.GID = 256;
       65     1944    1      IF PUCTX.USER.GID < %NEG# THEN
       66     1945    2       CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;    /* UID   ? HOST */
       67     1946    1      SECKEY.UID = 256;
       68     1947    1      SECKEY.GID = PUCTX.USER.GID;
       69     1948    1      IF PUCTX.USER.UID < %NEG# THEN
       70     1949    2       CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;    /*   ? GID HOST */
       71     1950    1      SECKEY.GID = 256;
       72     1951    1      IF PUCTX.USER.UID < %NEG#
       73     1952    1        AND PUCTX.USER.GID < %NEG# THEN
       74     1953    2       CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;    /*   ?   ? HOST */
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:3    
       75     1954    1      SECKEY.L = 5;
       76     1955    1      SECKEY.UID = PUCTX.USER.UID;
       77     1956    1      SECKEY.GID = PUCTX.USER.GID;
       78     1957    2      CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;     /* UID GID    ? */
       79     1958    1      SECKEY.GID = 256;
       80     1959    1      IF PUCTX.USER.GID < %NEG# THEN
       81     1960    2       CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;    /* UID   ?    ? */
       82     1961    1      SECKEY.UID = 256;
       83     1962    1      SECKEY.GID = PUCTX.USER.GID;
       84     1963    1      IF PUCTX.USER.UID < %NEG# THEN
       85     1964    2       CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;    /*   ? GID    ? */
       86     1965    1      SECKEY.GID = 256;
       87     1966    1      IF PUCTX.USER.UID < %NEG#
       88     1967    1        AND PUCTX.USER.GID < %NEG# THEN
       89     1968    2      CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;     /*   ?   ?    ? */
       90     1969    1      PUCTX.USER.REJECT = '1'B;
       91     1970    1      ALTRETURN;
       92     1971
       93     1972    1   FOUND:
       94     1973    1      SECREC.UID = PUCTX.USER.UID;  /* USER found, fill in PUCTX.USER info */
       95     1974    1      SECREC.GID = PUCTX.USER.GID;
       96     1975    1      PUCTX.USER = SECREC;
       97     1976    1      IF SECREC.REJECT THEN ALTRETURN;
       98     1977    1      RETURN;
       99     1978
      100     1979        %EJECT;
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:4    
      101     1980        /*F*  NAME: FUS$CHKMOUNT
      102     1981              Purpose:
      103     1982                    If this user is attempting a mount, verify that what he's trying to
      104     1983                    mount lines up with his TOPLVL (how much he can mount).
      105     1984        */
      106     1985        /*D*  NAME: FUS$CHKMOUNT
      107     1986              Inputs:
      108     1987                    RQSCTX - contains the mounting information and user information.
      109     1988              Outputs:
      110     1989                    RQSCTX.REPLYHDR.RESULTS - the results of the check, not changed if
      111     1990                      everything checks out, otherwise set with an error code.
      112     1991              Altreturn:
      113     1992                    If this user isn't trying to mount, or is trying to mount something
      114     1993                    that he's not allowed to mount.
      115     1994        */
      116     1995    1   FUS$CHKMOUNT: ENTRY( PARM) ALTRET;
      117     1996
      118     1997    1      UCTX$ = RQSCTX.UCTX$;
      119     1998    1      IF UCTX.USER.MOUNT
      120     1999    2      THEN IF UCTX.USER.SMKEY=0 THEN DO;
      121     2000    2         IF UCTX.USER.TOPLVL = %TOPLVL_ALL
      122     2001    2           OR %MREPLY.FHANDLE.ACCTLNG ~= 0 AND UCTX.USER.TOPLVL ~= %TOPLVL_NONE
      123     2002    2           OR %MREPLY.FHANDLE.PSNLNG ~= 0 AND UCTX.USER.TOPLVL < %TOPLVL_NONE
      124     2003    2           OR %MREPLY.FHANDLE.STAMP = 515 AND UCTX.USER.TOPLVL = %TOPLVL_MAD
      125     2004    2         THEN RETURN;
      126     2005    2         END;
      127     2006    2      ELSE DO;
      128     2007              /* READ THE "SMKEY" RECORD, LOOK UP WHAT HE'S TRYING TO DO */
      129     2008              /* RETURN IF OK */
      130     2009    2         END;
      131     2010    1      %MREPLY.STATUS = %NFSERR_ACCES;
      132     2011    1      RQSCTX.LEN = LENGTHC( MREPLY);
      133     2012    1      ALTRETURN;
      134     2013
      135     2014    1   END FUS$SECCHK;

PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:5    
--  Include file information  --

   XSL_SOCKET_M.:LIBRARY  is referenced.
   FU_NFSSUBS_C.:FUA2TOU  is referenced.
   FU_NFS_M.:FUA2TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUS$SECCHK.

   Procedure FUS$SECCHK requires 170 words for executable code.
   Procedure FUS$SECCHK requires 6 words of local(AUTO) storage.

    No errors detected in file FUS$SECCHK.:FUA2TSI    .

PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:6    

 Object Unit name= FUS$SECCHK                                 File name= FUS$SECCHK.:FUA2TOU
 UTS= NOV 21 '97 11:36:08.96 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none    98    142  F$NFSSEC
    2   Data  even  none   101    145  FUS$SECCHK
    3   Proc  even  none   170    252  FUS$SECCHK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  FUS$SECCHK
     3      3          yes     yes      Std        1  FUS$LOOKUP
     3    202          yes     yes      Std        1  FUS$CHKMOUNT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  F$NFSSEC                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:8    


        1        1        /*M* FUS$SECCHK - Security check code for NFS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*  NAME: FUS$SECCHK
        8        8              Purpose:
        9        9                    Check the security access for an NFS user.
       10       10        */
       11       11        FUS$SECCHK: PROC( PARM) ALTRET;

     11  3 000000   000000 700200 xent  FUS$SECCHK   TSX0  ! X66_AUTO_1
         3 000001   000006 000001                    ZERO    6,1
         3 000002   000005 710000 3                  TRA     s:1938

       12       12
       13       13        %INCLUDE CP_6;
       14       94        %INCLUDE FU_NFS_M;
       15      609        %INCLUDE FU_NFSSUBS_C;
       16      704        %INCLUDE XSL_SOCKET_M;
       17     1452    1       DCL PARM CHAR(PARMBIN);
       18     1453    1       DCL PARMBIN REDEF PARM UBIN;
       19     1454            %FU$UCTX( NAME=PUCTX, STCLASS=REDEF PARM);
       20     1507            %FU$RQSCTX( NAME=RQSCTX, STCLASS=REDEF PARM);
       21     1596
       22     1597    1   DCL UCTX$ PTR;
       23     1598
       24     1599        %M$DCB( DCBN=F$NFSSEC, ASN=FILE, NAME=':nfssec', ACCT=':SYS');
       25     1673        %FPT_READ( FPTN=SECREAD, BUF=SECREC, KEY=SECKEY, KEYS=YES, DCB=F$NFSSEC);
       26     1712        %FPT_READ( FPTN=SMREAD, KEY=SMKEY, KEYS=YES, DCB=F$NFSSEC);
       27     1751        %FU$SECREC( NAME=SECREC, STCLASS=STATIC);
       28     1774        %FU$NFSSECKEY( NAME=SECKEY, STCLASS=STATIC);
       29     1795        %FU$SMKEY( NAME=SMKEY, STCLASS=STATIC);
       30     1815
       31     1816        %FU$HCTX( NAME=HCTX, STCLASS="BASED(PUCTX.HCTX$)");
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:9    
       32     1839        %FU$UCTX( NAME=UCTX, STCLASS="BASED(UCTX$)");
       33     1892    1   DCL 1 MREPLY BASED ALIGNED,
       34     1893    1      2 STATUS UBIN,
       35     1894           %FU$FHANDLE( NAME=FHANDLE, LVL=2);
       36     1915        %EQU MREPLY=CHARTEXT('ADDR(RQSCTX.REPLYHDR.RESULTS)->MREPLY');
       37     1916        %EQU NEG# = BITBIN('000000377361'O);
       38     1917
       39     1918        /*F*  NAME: FUS$LOOKUP
       40     1919              Purpose:
       41     1920                    To verify if the UCTX user exists in the :nfssec file, and if he
       42     1921                    does, to fill in the PUCTX.USER access information.
       43     1922        */
       44     1923        /*D*  NAME: FUS$LOOKUP
       45     1924              Inputs:
       46     1925                    PUCTX - the UCTX of the user to verify for NFS access.
       47     1926              Outputs:
       48     1927                    PUCTX.USER - the NFS security access that this user has.
       49     1928              Altreturn:
       50     1929                    If the user does not exist in :nfssec, or we're told to REJECT him.
       51     1930              Algorithm:
       52     1931                    Try to find the user for every permutation of UID,GID,HOST with
       53     1932                    wildcarded access.  If he's found, return if he is not to be
       54     1933                    REJECTed, otherwise ALTRET.
       55     1934        */
       56     1935    1   FUS$LOOKUP: ENTRY( PARM) ALTRET;

   1935  3 000003   000000 700200 xent  FUS$LOOKUP   TSX0  ! X66_AUTO_1
         3 000004   000006 000001                    ZERO    6,1

       57     1936
       58     1937                                              /* look for combination:   UID GID HOST */
       59     1938    1      SECKEY.UID = PUCTX.USER.UID;

   1938  3 000005   200003 470500                    LDP0    @PARM,,AUTO
         3 000006   000004 720100                    LXL0    4,,PR0
         3 000007   000044 440000 2                  SXL0    SECKEY

PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:10   
       60     1939    1      SECKEY.GID = PUCTX.USER.GID;

   1939  3 000010   000005 721100                    LXL1    5,,PR0
         3 000011   000045 741000 2                  STX1    SECKEY+1

       61     1940    1      SECKEY.NAME = HCTX.NAME.T;

   1940  3 000012   000001 471500                    LDP1    1,,PR0
         3 000013   100030 722100                    LXL2    24,,PR1
         3 000014   040000 100540                    MLR     fill='040'O
         3 000015   100031 000012                    ADSC9   25,,PR1                  cn=0,n=*X2
         3 000016   000045 400371 2                  ADSC9   SECKEY+1                 cn=2,n=249

       62     1941    1      SECKEY.L = HCTX.NAME.L+5;

   1941  3 000017   000001 471500                    LDP1    1,,PR0
         3 000020   100030 236100                    LDQ     24,,PR1
         3 000021   000005 036007                    ADLQ    5,DL
         3 000022   000033 736000                    QLS     27
         3 000023   000044 552040 2                  STBQ    SECKEY,'40'O

       63     1942    2      CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;     /* UID GID HOST */

   1942  3 000024   000000 630400 2                  EPPR0   SECREAD
         3 000025   440000 713400                    CLIMB   alt,read
         3 000026   401400 401760                    pmme    nvectors=4
         3 000027   000031 702000 3                  TSX2    s:1943

   1942  3 000030   000165 710000 3                  TRA     FOUND

       64     1943    1      SECKEY.GID = 256;

   1943  3 000031   000400 220003                    LDX0    256,DU
         3 000032   000045 740000 2                  STX0    SECKEY+1

       65     1944    1      IF PUCTX.USER.GID < %NEG# THEN

PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:11   
   1944  3 000033   200003 470500                    LDP0    @PARM,,AUTO
         3 000034   000005 235100                    LDA     5,,PR0
         3 000035   377361 115007                    CMPA    130801,DL
         3 000036   000044 603000 3                  TRC     s:1946

       66     1945    2       CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;    /* UID   ? HOST */

   1945  3 000037   000000 630400 2                  EPPR0   SECREAD
         3 000040   440000 713400                    CLIMB   alt,read
         3 000041   401400 401760                    pmme    nvectors=4
         3 000042   000044 702000 3                  TSX2    s:1946

   1945  3 000043   000165 710000 3                  TRA     FOUND

       67     1946    1      SECKEY.UID = 256;

   1946  3 000044   000400 220003                    LDX0    256,DU
         3 000045   000044 440000 2                  SXL0    SECKEY

       68     1947    1      SECKEY.GID = PUCTX.USER.GID;

   1947  3 000046   200003 470500                    LDP0    @PARM,,AUTO
         3 000047   000005 721100                    LXL1    5,,PR0
         3 000050   000045 741000 2                  STX1    SECKEY+1

       69     1948    1      IF PUCTX.USER.UID < %NEG# THEN

   1948  3 000051   000004 235100                    LDA     4,,PR0
         3 000052   377361 115007                    CMPA    130801,DL
         3 000053   000061 603000 3                  TRC     s:1950

       70     1949    2       CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;    /*   ? GID HOST */

   1949  3 000054   000000 630400 2                  EPPR0   SECREAD
         3 000055   440000 713400                    CLIMB   alt,read
         3 000056   401400 401760                    pmme    nvectors=4
         3 000057   000061 702000 3                  TSX2    s:1950
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:12   

   1949  3 000060   000165 710000 3                  TRA     FOUND

       71     1950    1      SECKEY.GID = 256;

   1950  3 000061   000400 220003                    LDX0    256,DU
         3 000062   000045 740000 2                  STX0    SECKEY+1

       72     1951    1      IF PUCTX.USER.UID < %NEG#

   1951  3 000063   200003 470500                    LDP0    @PARM,,AUTO
         3 000064   000004 235100                    LDA     4,,PR0
         3 000065   377361 115007                    CMPA    130801,DL
         3 000066   000077 603000 3                  TRC     s:1954
         3 000067   000005 235100                    LDA     5,,PR0
         3 000070   377361 115007                    CMPA    130801,DL
         3 000071   000077 603000 3                  TRC     s:1954

       73     1952    1        AND PUCTX.USER.GID < %NEG# THEN
       74     1953    2       CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;    /*   ?   ? HOST */

   1953  3 000072   000000 630400 2                  EPPR0   SECREAD
         3 000073   440000 713400                    CLIMB   alt,read
         3 000074   401400 401760                    pmme    nvectors=4
         3 000075   000077 702000 3                  TSX2    s:1954

   1953  3 000076   000165 710000 3                  TRA     FOUND

       75     1954    1      SECKEY.L = 5;

   1954  3 000077   005000 236003                    LDQ     2560,DU
         3 000100   000044 552040 2                  STBQ    SECKEY,'40'O

       76     1955    1      SECKEY.UID = PUCTX.USER.UID;

   1955  3 000101   200003 470500                    LDP0    @PARM,,AUTO
         3 000102   000004 720100                    LXL0    4,,PR0
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:13   
         3 000103   000044 440000 2                  SXL0    SECKEY

       77     1956    1      SECKEY.GID = PUCTX.USER.GID;

   1956  3 000104   000005 721100                    LXL1    5,,PR0
         3 000105   000045 741000 2                  STX1    SECKEY+1

       78     1957    2      CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;     /* UID GID    ? */

   1957  3 000106   000000 630400 2                  EPPR0   SECREAD
         3 000107   440000 713400                    CLIMB   alt,read
         3 000110   401400 401760                    pmme    nvectors=4
         3 000111   000113 702000 3                  TSX2    s:1958

   1957  3 000112   000165 710000 3                  TRA     FOUND

       79     1958    1      SECKEY.GID = 256;

   1958  3 000113   000400 220003                    LDX0    256,DU
         3 000114   000045 740000 2                  STX0    SECKEY+1

       80     1959    1      IF PUCTX.USER.GID < %NEG# THEN

   1959  3 000115   200003 470500                    LDP0    @PARM,,AUTO
         3 000116   000005 235100                    LDA     5,,PR0
         3 000117   377361 115007                    CMPA    130801,DL
         3 000120   000126 603000 3                  TRC     s:1961

       81     1960    2       CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;    /* UID   ?    ? */

   1960  3 000121   000000 630400 2                  EPPR0   SECREAD
         3 000122   440000 713400                    CLIMB   alt,read
         3 000123   401400 401760                    pmme    nvectors=4
         3 000124   000126 702000 3                  TSX2    s:1961

   1960  3 000125   000165 710000 3                  TRA     FOUND

PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:14   
       82     1961    1      SECKEY.UID = 256;

   1961  3 000126   000400 220003                    LDX0    256,DU
         3 000127   000044 440000 2                  SXL0    SECKEY

       83     1962    1      SECKEY.GID = PUCTX.USER.GID;

   1962  3 000130   200003 470500                    LDP0    @PARM,,AUTO
         3 000131   000005 721100                    LXL1    5,,PR0
         3 000132   000045 741000 2                  STX1    SECKEY+1

       84     1963    1      IF PUCTX.USER.UID < %NEG# THEN

   1963  3 000133   000004 235100                    LDA     4,,PR0
         3 000134   377361 115007                    CMPA    130801,DL
         3 000135   000143 603000 3                  TRC     s:1965

       85     1964    2       CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;    /*   ? GID    ? */

   1964  3 000136   000000 630400 2                  EPPR0   SECREAD
         3 000137   440000 713400                    CLIMB   alt,read
         3 000140   401400 401760                    pmme    nvectors=4
         3 000141   000143 702000 3                  TSX2    s:1965

   1964  3 000142   000165 710000 3                  TRA     FOUND

       86     1965    1      SECKEY.GID = 256;

   1965  3 000143   000400 220003                    LDX0    256,DU
         3 000144   000045 740000 2                  STX0    SECKEY+1

       87     1966    1      IF PUCTX.USER.UID < %NEG#

   1966  3 000145   200003 470500                    LDP0    @PARM,,AUTO
         3 000146   000004 235100                    LDA     4,,PR0
         3 000147   377361 115007                    CMPA    130801,DL
         3 000150   000161 603000 3                  TRC     s:1969
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:15   
         3 000151   000005 235100                    LDA     5,,PR0
         3 000152   377361 115007                    CMPA    130801,DL
         3 000153   000161 603000 3                  TRC     s:1969

       88     1967    1        AND PUCTX.USER.GID < %NEG# THEN
       89     1968    2      CALL M$READ( SECREAD) WHENRETURN DO; GOTO FOUND; END;     /*   ?   ?    ? */

   1968  3 000154   000000 630400 2                  EPPR0   SECREAD
         3 000155   440000 713400                    CLIMB   alt,read
         3 000156   401400 401760                    pmme    nvectors=4
         3 000157   000161 702000 3                  TSX2    s:1969

   1968  3 000160   000165 710000 3                  TRA     FOUND

       90     1969    1      PUCTX.USER.REJECT = '1'B;

   1969  3 000161   200003 470500                    LDP0    @PARM,,AUTO
         3 000162   002000 236003                    LDQ     1024,DU
         3 000163   000013 256100                    ORSQ    11,,PR0

       91     1970    1      ALTRETURN;

   1970  3 000164   000000 702200 xent               TSX2  ! X66_AALT

       92     1971
       93     1972    1   FOUND:
       94     1973    1      SECREC.UID = PUCTX.USER.UID;  /* USER found, fill in PUCTX.USER info */

   1973  3 000165   200003 470500       FOUND        LDP0    @PARM,,AUTO
         3 000166   000004 235100                    LDA     4,,PR0
         3 000167   000034 755000 2                  STA     SECREC

       95     1974    1      SECREC.GID = PUCTX.USER.GID;

   1974  3 000170   000005 235100                    LDA     5,,PR0
         3 000171   000035 755000 2                  STA     SECREC+1

PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:16   
       96     1975    1      PUCTX.USER = SECREC;

   1975  3 000172   000100 100400                    MLR     fill='000'O
         3 000173   000034 000040 2                  ADSC9   SECREC                   cn=0,n=32
         3 000174   000004 000040                    ADSC9   4,,PR0                   cn=0,n=32

       97     1976    1      IF SECREC.REJECT THEN ALTRETURN;

   1976  3 000175   000043 236000 2                  LDQ     SECREC+7
         3 000176   002000 316003                    CANQ    1024,DU
         3 000177   000201 600000 3                  TZE     s:1977

   1976  3 000200   000000 702200 xent               TSX2  ! X66_AALT

       98     1977    1      RETURN;

   1977  3 000201   000000 702200 xent               TSX2  ! X66_ARET

       99     1978
      100     1979        %EJECT;
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:17   
      101     1980        /*F*  NAME: FUS$CHKMOUNT
      102     1981              Purpose:
      103     1982                    If this user is attempting a mount, verify that what he's trying to
      104     1983                    mount lines up with his TOPLVL (how much he can mount).
      105     1984        */
      106     1985        /*D*  NAME: FUS$CHKMOUNT
      107     1986              Inputs:
      108     1987                    RQSCTX - contains the mounting information and user information.
      109     1988              Outputs:
      110     1989                    RQSCTX.REPLYHDR.RESULTS - the results of the check, not changed if
      111     1990                      everything checks out, otherwise set with an error code.
      112     1991              Altreturn:
      113     1992                    If this user isn't trying to mount, or is trying to mount something
      114     1993                    that he's not allowed to mount.
      115     1994        */
      116     1995    1   FUS$CHKMOUNT: ENTRY( PARM) ALTRET;

   1995  3 000202   000000 700200 xent  FUS$CHKMOUNT TSX0  ! X66_AUTO_1
         3 000203   000006 000001                    ZERO    6,1

      117     1996
      118     1997    1      UCTX$ = RQSCTX.UCTX$;

   1997  3 000204   200003 470500                    LDP0    @PARM,,AUTO
         3 000205   000004 236100                    LDQ     4,,PR0
         3 000206   200004 756100                    STQ     UCTX$,,AUTO

      119     1998    1      IF UCTX.USER.MOUNT

   1998  3 000207   200004 471500                    LDP1    UCTX$,,AUTO
         3 000210   100013 236100                    LDQ     11,,PR1
         3 000211   040000 316003                    CANQ    16384,DU
         3 000212   000245 600000 3                  TZE     s:2010

      120     1999    2      THEN IF UCTX.USER.SMKEY=0 THEN DO;

   1999  3 000213   100013 720100                    LXL0    11,,PR1
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:18   
         3 000214   000245 601000 3                  TNZ     s:2010

      121     2000    2         IF UCTX.USER.TOPLVL = %TOPLVL_ALL

   2000  3 000215   014000 316003                    CANQ    6144,DU
         3 000216   000244 600000 3                  TZE     s:2004
         3 000217   000024 236100                    LDQ     20,,PR0
         3 000220   017000 316007                    CANQ    7680,DL
         3 000221   000226 600000 3                  TZE     s:2000+9
         3 000222   100013 236100                    LDQ     11,,PR1
         3 000223   014000 376003                    ANQ     6144,DU
         3 000224   014000 116003                    CMPQ    6144,DU
         3 000225   000244 601000 3                  TNZ     s:2004
         3 000226   000024 236100                    LDQ     20,,PR0
         3 000227   160000 316007                    CANQ    57344,DL
         3 000230   000235 600000 3                  TZE     s:2000+16
         3 000231   100013 236100                    LDQ     11,,PR1
         3 000232   014000 376003                    ANQ     6144,DU
         3 000233   014000 116003                    CMPQ    6144,DU
         3 000234   000244 602000 3                  TNC     s:2004
         3 000235   000024 221100                    LDX1    20,,PR0
         3 000236   001003 101003                    CMPX1   515,DU
         3 000237   000245 601000 3                  TNZ     s:2010
         3 000240   100013 236100                    LDQ     11,,PR1
         3 000241   014000 376003                    ANQ     6144,DU
         3 000242   004000 116003                    CMPQ    2048,DU
         3 000243   000245 601000 3                  TNZ     s:2010

      122     2001    2           OR %MREPLY.FHANDLE.ACCTLNG ~= 0 AND UCTX.USER.TOPLVL ~= %TOPLVL_NONE
      123     2002    2           OR %MREPLY.FHANDLE.PSNLNG ~= 0 AND UCTX.USER.TOPLVL < %TOPLVL_NONE
      124     2003    2           OR %MREPLY.FHANDLE.STAMP = 515 AND UCTX.USER.TOPLVL = %TOPLVL_MAD
      125     2004    2         THEN RETURN;

   2004  3 000244   000000 702200 xent               TSX2  ! X66_ARET

      126     2005    2         END;
      127     2006    2      ELSE DO;
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:19   

      128     2007              /* READ THE "SMKEY" RECORD, LOOK UP WHAT HE'S TRYING TO DO */
      129     2008              /* RETURN IF OK */
      130     2009    2         END;

      131     2010    1      %MREPLY.STATUS = %NFSERR_ACCES;

   2010  3 000245   000015 235007                    LDA     13,DL
         3 000246   000023 755100                    STA     19,,PR0

      132     2011    1      RQSCTX.LEN = LENGTHC( MREPLY);

   2011  3 000247   000044 236007                    LDQ     36,DL
         3 000250   000002 756100                    STQ     2,,PR0

      133     2012    1      ALTRETURN;

   2012  3 000251   000000 702200 xent               TSX2  ! X66_AALT
      134     2013
      135     2014    1   END FUS$SECCHK;

PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:20   
--  Include file information  --

   XSL_SOCKET_M.:LIBRARY  is referenced.
   FU_NFSSUBS_C.:FUA2TOU  is referenced.
   FU_NFS_M.:FUA2TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUS$SECCHK.
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:21   

 **** Variables and constants ****

  ****  Section 002  Data  FUS$SECCHK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    44-0-0/w STRC(2295)  r     1 SECKEY                     0-0-0/d STRC(504)   r     1 SECREAD
    34-0-0/w STRC(288)   r     1 SECREC                   144-0-0/w STRC        r     1 SMKEY
    16-0-0/d STRC(504)   r     1 SMREAD

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PARM                     *0-0-0/w ACHR        r     1 PARM
    *0-0-0/w UBIN        r     1 PARMBIN                   *0-0-0/w STRC(1296)  r     1 PUCTX
    *0-0-0/w STRC(74556) r     1 RQSCTX                     4-0-0/w PTR         r     1 UCTX$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$NFSSEC                   0-0-0/w ASTR(900)   r     1 HCTX
     0-0-0/w STRC(324)   r     1 MREPLY                     0-0-0/w STRC(1296)  r     1 UCTX


   Procedure FUS$SECCHK requires 170 words for executable code.
   Procedure FUS$SECCHK requires 6 words of local(AUTO) storage.

    No errors detected in file FUS$SECCHK.:FUA2TSI    .
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:22   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:23   
          MINI XREF LISTING

F$NFSSEC.ACTPOS
      1641**DCL      1641--REDEF
F$NFSSEC.ARS#
      1600**DCL      1600--REDEF
F$NFSSEC.ATTR#
      1630**DCL      1630--REDEF    1632--REDEF
F$NFSSEC.BORROW
      1652**DCL      1652--REDEF    1652--REDEF    1652--REDEF
F$NFSSEC.DCBNAME.L
      1671**DCL      1671--IMP-SIZ
F$NFSSEC.EOMCHAR#
      1607**DCL      1608--REDEF
F$NFSSEC.FLDID
      1644**DCL      1645--REDEF
F$NFSSEC.FORM$
      1636**DCL      1636--REDEF
F$NFSSEC.FSECT
      1659**DCL      1659--REDEF
F$NFSSEC.FSN#
      1626**DCL      1626--REDEF    1626--REDEF    1627--REDEF
F$NFSSEC.HEADER$
      1635**DCL      1636--REDEF
F$NFSSEC.IXTNSIZE#
      1632**DCL      1633--REDEF
F$NFSSEC.LASTSTA$
      1616**DCL      1616--REDEF
F$NFSSEC.LVL
      1653**DCL      1653--REDEF
F$NFSSEC.NAME#.C
      1616**DCL      1617--REDEF
F$NFSSEC.NOEOF
      1648**DCL      1648--REDEF
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:24   
F$NFSSEC.NRECS#
      1633**DCL      1633--REDEF
F$NFSSEC.NRECX
      1660**DCL      1660--REDEF
F$NFSSEC.OHDR
      1649**DCL      1649--REDEF
F$NFSSEC.ORG#
      1624**DCL      1625--REDEF
F$NFSSEC.PRECNO
      1657**DCL      1657--REDEF
F$NFSSEC.RCSZ
      1665**DCL      1665--REDEF
F$NFSSEC.RES#
      1618**DCL      1618--REDEF
F$NFSSEC.SETX
      1637**DCL      1637--REDEF
F$NFSSEC.TAB$
      1636**DCL      1636--REDEF
F$NFSSEC.TDA
      1656**DCL      1657--REDEF
F$NFSSEC.WSN#
      1618**DCL      1619--REDEF
FOUND
      1973**LABEL    1942--GOTO     1945--GOTO     1949--GOTO     1953--GOTO     1957--GOTO     1960--GOTO
      1964--GOTO     1968--GOTO
HCTX.NAME.L
      1836**DCL      1837--IMP-SIZ  1940>>ASSIGN   1941>>ASSIGN
HCTX.NAME.T
      1837**DCL      1940>>ASSIGN
M$READ
        23**DCL-ENT  1942--CALL     1945--CALL     1949--CALL     1953--CALL     1957--CALL     1960--CALL
      1964--CALL     1968--CALL
MREPLY
      1892**DCL      2011--ASSIGN
MREPLY.FHANDLE.ACCTLNG
      1913**DCL      2000>>IF
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:25   
MREPLY.FHANDLE.PSNLNG
      1912**DCL      2000>>IF
MREPLY.FHANDLE.STAMP
      1912**DCL      2000>>IF
MREPLY.STATUS
      1893**DCL      2010<<ASSIGN
PARM
      1452**DCL        11--PROC     1453--REDEF    1469--REDEF    1521--REDEF    1935--ENTRY    1995--ENTRY
PARMBIN
      1453**DCL      1452--IMP-SIZ
PUCTX.FFLG#
      1499**DCL      1499--REDEF
PUCTX.FILEPOS
      1503**DCL      1504--REDEF
PUCTX.FILEPOS.FOFFSET
      1503**DCL      1504--REDEF
PUCTX.HCTX$
      1473**DCL      1830--IMP-PTR  1940>>ASSIGN   1940>>ASSIGN   1941>>ASSIGN
PUCTX.USER
      1492**DCL      1975<<ASSIGN
PUCTX.USER.GID
      1494**DCL      1939>>ASSIGN   1944>>IF       1947>>ASSIGN   1951>>IF       1956>>ASSIGN   1959>>IF
      1962>>ASSIGN   1966>>IF       1974>>ASSIGN
PUCTX.USER.REJECT
      1496**DCL      1969<<ASSIGN
PUCTX.USER.UID
      1494**DCL      1938>>ASSIGN   1948>>IF       1951>>IF       1955>>ASSIGN   1963>>IF       1966>>IF
      1973>>ASSIGN
RQSCTX.CALLHDR
      1582**DCL      1587--REDEF
RQSCTX.CALLHDR.AUTH_CRED
      1584**DCL      1586--REDEF
RQSCTX.CALLHDR.XID
      1582**DCL      1582--REDEF
RQSCTX.LEN
      1525**DCL      2011<<ASSIGN
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:26   
RQSCTX.REPLYHDR.AUTH_VERF_HID
      1591**DCL      1591--REDEF    1591--REDEF
RQSCTX.REPLYHDR.PVERS_HIGH
      1593**DCL      1593--REDEF
RQSCTX.REPLYHDR.PVERS_LOW
      1592**DCL      1592--REDEF    1593--REDEF
RQSCTX.REPLYHDR.REJECT_STAT
      1588**DCL      1588--REDEF    1589--REDEF
RQSCTX.REPLYHDR.RESULTS
      1592**DCL      2000--IF       2000--IF       2000--IF       2010--ASSIGN
RQSCTX.REPLYHDR.VERS_HIGH
      1590**DCL      1590--REDEF    1590--REDEF
RQSCTX.REPLYHDR.VERS_LOW
      1589**DCL      1589--REDEF    1590--REDEF
RQSCTX.UCTX$
      1526**DCL      1997>>ASSIGN
SECKEY
      1788**DCL      1690--DCLINIT  1691--DCLINIT
SECKEY.GID
      1792**DCL      1939<<ASSIGN   1943<<ASSIGN   1947<<ASSIGN   1950<<ASSIGN   1956<<ASSIGN   1958<<ASSIGN
      1962<<ASSIGN   1965<<ASSIGN
SECKEY.L
      1792**DCL      1941<<ASSIGN   1954<<ASSIGN
SECKEY.NAME
      1793**DCL      1940<<ASSIGN
SECKEY.UID
      1792**DCL      1938<<ASSIGN   1946<<ASSIGN   1955<<ASSIGN   1961<<ASSIGN
SECREAD
      1690**DCL      1942<>CALL     1945<>CALL     1949<>CALL     1953<>CALL     1957<>CALL     1960<>CALL
      1964<>CALL     1968<>CALL
SECREAD.STATION_
      1693**DCL      1694--REDEF
SECREAD.V
      1694**DCL      1690--DCLINIT
SECREAD.V.DVBYTE.REREAD#
      1705**DCL      1705--REDEF
PL6.E3A0      #001=FUS$SECCHK File=FUS$SECCHK.:FUA2TSI                           FRI 11/21/97 11:36 Page:27   
SECREAD.V.INDX#
      1703**DCL      1703--REDEF
SECREC
      1765**DCL      1692--DCLINIT  1693--DCLINIT  1975>>ASSIGN
SECREC.GID
      1769**DCL      1974<<ASSIGN
SECREC.REJECT
      1771**DCL      1976>>IF
SECREC.UID
      1769**DCL      1973<<ASSIGN
SMKEY
      1809**DCL      1729--DCLINIT  1730--DCLINIT
SMREAD.STATION_
      1732**DCL      1733--REDEF
SMREAD.V
      1733**DCL      1729--DCLINIT
SMREAD.V.DVBYTE.REREAD#
      1744**DCL      1744--REDEF
SMREAD.V.INDX#
      1742**DCL      1742--REDEF
UCTX.FFLG#
      1884**DCL      1884--REDEF
UCTX.FILEPOS
      1888**DCL      1889--REDEF
UCTX.FILEPOS.FOFFSET
      1888**DCL      1889--REDEF
UCTX.USER.MOUNT
      1881**DCL      1998>>IF
UCTX.USER.SMKEY
      1882**DCL      1999>>IF
UCTX.USER.TOPLVL
      1881**DCL      2000>>IF       2000>>IF       2000>>IF       2000>>IF
UCTX$
      1597**DCL      1854--IMP-PTR  1997<<ASSIGN   1998>>IF       1999>>IF       2000>>IF       2000>>IF
      2000>>IF       2000>>IF
