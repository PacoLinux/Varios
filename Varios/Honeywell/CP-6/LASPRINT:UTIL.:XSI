%
%     this routine gets the underlining metrics from a font dictionary, scaled
%     to the current coordinate system.  If the current font has no such metrics
%     defined, we return zero for both the position and the thickness.
%
%     fontdict getulmetrics ==> ulpos ulthk
%
 
/getulmetrics
{
   dup  %copy the font dict
   begin
      /FontInfo known not  %any FontInfo dict?
      {  0 0                     %no FontInfo -- return zeros
      }
      {  FontInfo /UnderlinePosition known not  %underline info present?
         {  0 0                  %no Underline info -- return Zeros
         }
         {  FontInfo begin     %FontInfo present; grab & convert ul metrics
               UnderlinePosition    %ulpos in font coords
               FontMatrix 3 get mul neg %scale into user coords (-y direction)
               UnderlineThickness   %ulthk in font coords
               FontMatrix 3 get mul %scale into user coords (y direction)
            end
         } ifelse %underlining info present
      } ifelse %FontInfo present
   end
} bind def
 
%
%     Routine to show text underlined.  It expects the underline thickness
%     to be in ulthk, and the underline position to be in ulpos (somewhere
%     in the dictionary stack).
%
%        (string) ushow ==>
%
/ushow
{  gsave
      currentpoint translate          % set origin to current point
      show                            % show the string
      /ulpos where                    % has everything been set up??
      {  pop                            % yep; draw the underline
         ulpos                          % calculate how far down to drop
         /ulfdg where                   % what fudge value?
         {  pop ulthk ulfdg mul add       % move line off ulpos by fudge pct
         }
         {  ulthk .5 mul add              % default fudge percent is .5
         } ifelse
         neg dup                        %    make it go -y & save
         0 exch rmoveto                 % drop down to underline position
         ulthk setlinewidth             % set underline thickness
         0 exch lineto stroke           % draw line back to begining of text
      } if
   grestore
} bind def %ushow
 
%
%     Routine to show text centered and underlined.  It expects the underline
%     thickness to be in ulthk, and the underline position to be in ulpos
%     somewhere in the dictionary stack).
%
%        (string) cushow ==>
%
 
/cushow
{  dup stringwidth pop 2 div %==> str w/2
   neg 0                     %==> str -w/2 0
   rmoveto                   %move to (x-w/2,y)
   ushow                     %show the string underlined . . .
} bind def
/cshow
{  dup stringwidth pop 2 div %==> str w/2
   neg 0                     %==> str -w/2 0
   rmoveto                   %move to (x-w/2,y)
   show
} bind def
 
%
%     Routine to show text right-justified and underlined.  It expects the
%     underline thickness to be in ulthk, and the underline position to be in
%     ulpos somewhere in the dictionary stack).
%
%        (string) cushow ==>
%
 
/rushow      %str rshow ==>  <shows str right justified at current point>
{  dup stringwidth pop    %==> str w
   neg 0                  %==> str -w 0
   rmoveto                %move to (x-w,y)
   ushow                  %show the string w/ underline . . .
} bind def
