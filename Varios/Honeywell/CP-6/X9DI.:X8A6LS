
     DIRECTORY AND SEGMENT LIST  (OBJECT UNIT NAME '')

      * SYMDEF *        GLOBAL NAME               SEGMENT  OFFSET      ACCESS ATTRIBUTES
     1  X9DI   'X9DI'                              .X9DI       0          R  W  E  L  U

      * SYMREF *        GLOBAL NAME                                    ACCESS ATTRIBUTES
     2  X9DD   'X9DD'                                                     R  W  E  L  U
     3  X8ER   'X8ER$ERROR'                                               R  W  E  L  U

      * SECTION *          SIZE          KIND
     4  .X9DI               240           CODE
     5  .X9DI.              224           DATA


     PROGRAM BREAK         464

                                      1 *M*  X9DI  -- DECIMAL TO INTEGER EXPONENTIATION
                                      2 *T***********************************************************
                                      3 *T*                                                         *
                                      4 *T* COPYRIGHT (C) BULL HN INFORMATION SYSTEMS INC., 1997    *
                                      5 *T*                                                         *
                                      6 *T***********************************************************
                        000000        7        SECT    .X9DI,CODE
                                      8 *P*
                                      9 *P*
                                     10 *P*     NAME       : X9DI
                                     11 *P*     AUTHOR     : JIM B. BEHM
                                     12 *P*     PURPOSE    : COMPUTES EXPONENTIATION OF A DECIMAL BASE TO
                                     13 *P*                  INTEGER EXPONENT IN A HIGHLY OPTIMIZED FASHION.
                                     14 *P*
                                     15 *P*
                                     16 *D*
                                     17 *D*
                                     18 *D*     NAME       : X9DI
                                     19 *D*     CALL       :   . . .
                                     20 *D*                  EPPRO    NEWARG
                                     21 *D*                  EPPR4    DECGUY
                                     22 *D*                  STP4     NEWARG
                                     23 *D*                  EPPR4    INTGUY
                                     24 *D*                  STP4     NEWARG+1
                                     25 *D*                  EPPR4    DECRES
                                     26 *D*                  STP4     NEWARG+2
                                     27 *D*                  EPPR4    DESCRP
                                     28 *D*                  STP4     NEWARG+3
                                     29 *D*                  EPPR1    NUMARG
                                     30 *D*                  TSX1     X9DI
                                     31 *D*                    . . .
                                     32 *D*           NEWARG BSS      4
                                     33 *D*           DESCRP BSS      1
                                     34 *D*           NUMARG VFD      18/4,18/0
                                     35 *D*                    . . .
                                     36 *D*     INTERFACE  : 1.) X9DD - FOR EXPONENTS >= 8192 EXDD IS
                                     37 *D*                      CALLED FOR THE LOGARITHM METHOD WHICH IS

                                     38 *D*                      QUICKER FOR LARGE NUMBERS.
                                     39 *D*     INPUT      : 1.) DECIMAL BASE
                                     40 *D*                  2.) INTEGER EXPONENT
                                     41 *D*                  3.) DECIMAL DESCRIPTOR
                                     42 *D*     OUTPUT     : DECIMAL RESULT
                                     43 *D*     SCRATCH    : NONE
                                     44 *D*     REFERENCE  : X8LC$DOCUMENT, J. R. WILSON FOR THE ALGORITHM.
                                     45 *D*
                                     46 *D*
                                     47 *V*
                                     48 *V*
                                     49 *V*                    GENERAL_ALGORITHM
                                     50 *V*
                                     51 *V*     THE GENERAL ALGORITHM IS :
                                     52 *V*
                                     53 *V*                1.) TEST FOR SPECIAL CASES.
                                     54 *V*
                                     55 *V*                    A.) EXPONENT OF ZERO
                                     56 *V*                    B.) EXPONENT OF ONE
                                     57 *V*
                                     58 *V*                2.) IF EXPONENT IS >= 8192 THEN CALL X9DD
                                     59 *V*
                                     60 *V*                3.) COMPUTE PARTIAL SUMS:
                                     61 *V*
                                     62 *V*                    BASE, BASE ** 2, BASE ** 4, BASE ** 8 ETC
                                     63 *V*                    UNTIL THE NEXT EXPONENT OF THE PARTIAL SUM
                                     64 *V*                    GREATER THAN THE INPUT EXPONENT.
                                     65 *V*
                                     66 *V*                    NOTE : EACH PARTIAL SUM IS COMPUTED BY SQUARING
                                     67 *V*                           THE PREVIOUS PARTIAL SUM.
                                     68 *V*
                                     69 *V*                4.) TAKE THE LARGEST PARTIAL SUM AND PUT IT IN
                                     70 *V*                    THE ANSWER, SUBTRACT THE EXPONENT USED IN
                                     71 *V*                    COMPUTING THE PARTIAL SUM FROM THE INPUT
                                     72 *V*                    EXPONENT, REPEAT USING THHE NEXT SMALLEST
                                     73 *V*                    PARTIAL SUM UNTIL THE EXPONENT IS ZERO,
                                     74 *V*                    AFTER EACH ITERATION MULTIPLYING THE PREVIOUS

                                     75 *V*                    ANSWER BY THE NEXT PARTIAL SUM.
                                     76 *V*
                                     77 *V*
                        000000       78        ENTDEF  X9DI
                        000000       79        ENTREF  X9DD
                        000000       80        ENTREF  (X8ER,X8ER$ERROR)
                                     81 *
                        000000       82 X9DI   NULL
                                     83 *
      000000 000000 7530 00 010NN    84        SREG    REG
      000001 000220 4574 00 010NN    85        STP7    PR7     SAVE THE POINTERS USED IN THE ROUTINE
      000002 000221 4564 00 010NN    86        STP6    PR6
      000003 000222 4554 00 010NN    87        STP5    PR5
      000004 000223 4544 00 010NN    88        STP4    PR4
      000005 000000 2250 03          89        LDX5    =0,DU   CLEAR NEGATIVE EXPONENT FLAG.
      000006 000000 4775 00          90        LDP7    0,,0    GET THE BASE
      000007 000002 4755 00          91        LDP5    2,,0    LOCATE THE ANSWER AND STORE ITS ADDR IN PR5
      000010 000003 2201 00          92        LDX0    3,,0
      000011 000001 4765 00          93        LDP6    1,,0    GET THE EXPONENT
      000012 600000 2351 00          94        LDA     0,,6    SET INDICATOR REGISTER FROM EXPONENT
      000013 000020 6050 00 010NN    95        TPL     BUILD
      000014 000000 5310 00          96        NEG             NEGATE THE NEGATIVE EXPONENT.
      000015 000200 7550 00 010NN    97        STA     EXPABS  STORE EXPONENT IN A TEMP.
      000016 000200 6364 00 010NN    98        EPPR6   EXPABS
      000017 000001 2250 03          99        LDX5    =1,DU   SET NEGATIVE EXPONENT FLAG.

                                    101 *V*
                                    102 *V*
                                    103 *V*                    BUILD_DESCRIPTORS
                                    104 *V*
                                    105 *V*      THE DESCRIPTORS AS RECEIVED BY THE ROUTINE ARE THE LOWER
                                    106 *V*      PORTION ONLY.  IN PR7 WE HAVE THE ADDR OF THE BASE, AND
                                    107 *V*      PR5 WE HAVE THE ADDR OF THE ANSWER.  THE PR'S ARE PUT IN
                                    108 *V*      THE UPPER PORTION OF THE DESCRIPTOR TO ACCESS THEM.
                                    109 *V*
                                    110 *V*
      000020 000000 2350 10         111 BUILD  LDA     0,0
      000021 077777 3750 07         112        ANA     =O077777,DL
      000022 700000 2750 03         113        ORA     =O700000,DU
      000023 000205 7550 00 010NN   114        STA     BASDES
      000024 000001 2350 10         115        LDA     1,0
      000025 077777 3750 07         116        ANA     =O077777,DL
      000026 500000 2750 03         117        ORA     =O500000,DU
      000027 000204 7550 00 010NN   118        STA     ANSDES
      000030 000204 7240 00 010NN   119        LXL4    ANSDES
      000031 000203 4440 00 010NN   120        SXL4    MNUS8
      000032 000202 4440 00 010NN   121        SXL4    PAREQU
      000033 000201 4440 00 010NN   122        SXL4    ANSWER
      000034 600000 2351 00         123        LDA     0,,6
      000035 000000 1150 07         124        CMPA    =0,DL          IS EXPONENT ZERO
      000036 000043 6010 00 010NN   125        TNZ     NXTEST         NO, NOT ZERO
                                    126 *V*
                                    127 *V*
                                    128 *V*                    POWER_IS_ZERO
                                    129 *V*
                                    130 *V*     IF THE POWER IS ZERO THEN THE ANSWER WILL BE ONE AND THE
                                    131 *V*     EXPONENTIATION WILL BE DONE.
                                    132 *V*
                                    133 *V*
                                    134 *                             IF EXPONENT IS ZERO THEN THE ANSWER
                                    135 *                             IS ONE.
      000037 000320 3004 00         136        MVN     (0,0,0),(AR,0,ID),RD
      000040 000206 0300 01 010NN   137        NDSC9   ONE,0,1,NS

      000041 000204 000000  010NN   138        ZERO    ANSDES
      000042 000165 7100 00 010NN   139        TRA     EXIT
                                    140 *
                        000043      141 NXTEST NULL
                                    142 *
      000043 000001 1150 07         143        CMPA    =1,DL          IS EXPONENT ONE
      000044 000060 6010 00 010NN   144        TNZ     NT1OR0         NO, NOT ONE
      000045 000000 1050 03         145        CMPX5   0,DU           IS EXPONENT NEGATIVE ONE
      000046 000053 6010 00 010NN   146        TNZ     NEG1           YES
                                    147 *V*
                                    148 *V*
                                    149 *V*                    POWER_IS_ONE
                                    150 *V*
                                    151 *V*     IF THE POWER IS ONE THEN THE ANSWER IS THE BASE.  THE
                                    152 *V*     EXPONENTIATION IS DONE.
                                    153 *V*
                                    154 *V*
                                    155 *
                                    156 *                             IF THE EXPONENT IS ONE THEN THE ANSWER
                                    157 *                             IS THE BASE.
                                    158 *
      000047 000320 3005 20         159        MVN     (AR,0,ID),(AR,0,ID),RD
      000050 000205 000000  010NN   160        ZERO    BASDES
      000051 000204 000000  010NN   161        ZERO    ANSDES
      000052 000165 7100 00 010NN   162        TRA     EXIT
                                    163 *
                                    164 *V*                   POWER_IS_NEGATIVE_ONE
                                    165 *V*
                                    166 *V*    IF THE POWER IS NEGATIVE ONE THEN THE ANSWER IS ONE
                                    167 *V*    DIVIDED BY THE BASE.
                                    168 *V*
      000053 120000 2275 20         169 NEG1   DV3D    (AR,0,ID,),,(AR,0,ID,)
      000054 000205 000000  010NN   170        ZERO    BASDES
      000055 000206 0300 01 010NN   171        NDSC9   ONE,0,1,NS
      000056 000204 000000  010NN   172        ZERO    ANSDES
      000057 000165 7100 00 010NN   173        TRA     EXIT
                                    174 *

                                    175 *                             THIS TEST IS FOR >= 1K
                                    176 *                             IF TRUE IT WILL GO TO A LOGARITHM
                                    177 *                             ALGORITHM, WHICH IS FASTER FOR LARGE
                                    178 *                             NUMBERS.
                                    179 *
                        000060      180 NT1OR0 NULL
                                    181 *
      000060 020000 1150 07         182        CMPA    =8192,DL       IS EXPONENT GREATER THAN 8K
                                    183 *V*
                                    184 *V*
                                    185 *V*                    POWER_GTR_8K
                                    186 *V*
                                    187 *V*     IF THE POWER IS GREATER THAN 8K THEN IT WOULD BE JUST
                                    188 *V*     AS EFFICIENT TO CALL X9DD FOR THESE CASES.  THE CALLING
                                    189 *V*     SEQUENCE MUST BE ADJUSTED TO INCLUDE A DESCRIPTOR FOR
                                    190 *V*     THE POWER.
                                    191 *V*
                                    192 *V*
      000061 000106 6040 00 010NN   193        TMI     ALLOK
      000062 000217 7550 00 010NN   194        STA     EXPONT
      000063 000210 4574 00 010NN   195        STP7    NEWARG
      000064 000170 6344 00 010NN   196        EPPR4   TMPEXP
      000065 000211 4544 00 010NN   197        STP4    NEWARG+1
      000066 000212 4554 00 010NN   198        STP5    NEWARG+2
      000067 000214 6344 00 010NN   199        EPPR4   DSCLST
      000070 000213 4544 00 010NN   200        STP4    NEWARG+3
      000071 400000 3014 00         201        BTD     (0,0,0),(0,0,0),RD
      000072 000217 0000 04 010NN   202        NDSC9   EXPONT,0,4
      000073 000170 0700 13 010NN   203        NDSC4   TMPEXP,0,11,NS
      000074 000000 2350 10         204        LDA     0,0
      000075 000214 7550 00 010NN   205        STA     DSCLST
      000076 000207 2350 00 010NN   206        LDA     NEWEXP
      000077 000215 7550 00 010NN   207        STA     DSCLST+1
      000100 000001 2350 10         208        LDA     1,0
      000101 000216 7550 00 010NN   209        STA     DSCLST+2
      000102 000210 6304 00 010NN   210        EPPR0   NEWARG
      000103 000000 7100 00 020NN   211        TRA     X9DD

      000104 000000 0110 07         212        NOP     0,DL
      000105 000165 7100 00 010NN   213        TRA     EXIT
                                    214 *
                                    215 *
                        000106      216 ALLOK  NULL
                                    217 *
                                    218 *V*
                                    219 *V*
                                    220 *V*                    INITIALIZE
                                    221 *V*
                                    222 *V*     THE INDEXES TO THE PARTIAL RESULTS AND TO THE TABLES
                                    223 *V*     FOR THE BOUNDRIES FOR COMPARISONS.  THE INDEXES FOR
                                    224 *V*     THE PARTIAL RESULTS SHOULD BE INCREMENTED BY 64 AFTER
                                    225 *V*      EACH ADDITION TO IT TO HAVE ENOUGH SPACE FOR A POSSIBLE
                                    226 *V*     63 DIGITS.
                                    227 *V*
                                    228 *V*
      000106 000217 7550 00 010NN   229        STA     EXPONT
      000107 000000 2220 03         230        LDX2    0,DU
      000110 000000 2230 03         231        LDX3    0,DU
      000111 000233 3005 20         232        MVN     (AR,0,ID),(0,0,ID,X3),RD
      000112 000205 000000  010NN   233        ZERO    BASDES
      000113 000202 0000 00 010NN   234        ARG     PAREQU
      000114 000100 0630 03         235        ADX3    64,DU
      000115 000001 0620 03         236        ADX2    1,DU

                                    238 *
                        000116      239 EXPINC NULL
                                    240 *
                                    241 *V*
                                    242 *V*
                                    243 *V*                    COMPUTE_PARTIAL_RESULTS
                                    244 *V*
                                    245 *V*     COMPUTE THE PARTIAL RESULTS FROM THE BASE.  KEEP ON
                                    246 *V*     COMUPUTING UNTIL THE EXPONENT IS LESS THAN THE EQUIV-
                                    247 *V*     ALENT EXPONENT OF THE BOUND TABLE ( EXPBND ), EG.
                                    248 *V*
                                    249 *V*             PARTIAL RESULTS         EXPBND
                                    250 *V*             ---------------         ------
                                    251 *V*
                                    252 *V*   4 ** 7 =   PR(1) = 4                1     = BASE ** EXPBND(1)
                                    253 *V*                      16               2        "         "   2
                                    254 *V*                      256              4        "         "   3
                                    255 *V*                      65536            8         "         "   4
                                    256 *V*
                                    257 *V*     WE WOULD STOP BUILDING THE PR TABLE WHEN THE EXPBND WAS
                                    258 *V*     GREATER THAN THE EXPONENT  =  8  >  7  =.  THE COMPUT-
                                    259 *V*     ATIONS COME LATER TO GET THE ANSWER.
                                    260 *V*
                                    261 *V*
      000116 033233 2264 33         262        MP3D    (0,0,ID,X3),(0,0,ID,X3),(0,0,ID,X3),RD
      000117 000203 0000 00 010NN   263        ARG     MNUS8
      000120 000203 0000 00 010NN   264        ARG     MNUS8
      000121 000202 0000 00 010NN   265        ARG     PAREQU
      000122 000100 0630 03         266        ADX3    64,DU
      000123 000001 0620 03         267        ADX2    1,DU
      000124 000016 1020 03         268        CMPX2   =14,DU         IS X2 OUT OF THE RANGE( OUT OF BOUNDS
                                    269 *                             OF EXPBND )
      000125 000131 6000 00 010NN   270        TZE     X2EXIT
      000126 000174 2350 12 010NN   271        LDA     EXPBND,2
      000127 000217 1150 00 010NN   272        CMPA    EXPONT         COMPARE THE EXPONT TO THIS ITERATIONS
                                    273 *                             BOUNDRY - EXPBND <= EXPONT ?
      000130 000116 6044 00 010NN   274        TMOZ    EXPINC

                                    275 *
                                    276 *
                                    277 *                             NOW THE MULTIPLE( PARTIAL RESULTS )
                                    278 *                             TABLE IS BUILT SO JUST DECREMENT X2
                                    279 *                             TEST, AND GO AGAIN.
                                    280 *
                        000131      281 X2EXIT NULL
                                    282 *
                                    283 *V*
                                    284 *V*
                                    285 *V*                    DECREMENT_COUNTERS
                                    286 *V*
                                    287 *V*     THE COUNTERS ARE NOW AT ONE GREATER THAN WE NEED SO WE
                                    288 *V*     SUBTRACT THE NEEDED AMOUNT FOR EACH TABLE.
                                    289 *V*
                                    290 *V*
      000131 000001 1620 03         291        SBX2    1,DU
      000132 000100 1630 03         292        SBX3    64,DU
      000133 000220 3004 00         293        MVN     (0,0,0),(0,0,ID),RD
      000134 000206 0300 01 010NN   294        NDSC9   ONE,0,1,NS
      000135 000201 0000 00 010NN   295        ARG     ANSWER

                                    297 *
                        000136      298 COMPUT NULL
                                    299 *
                                    300 *V*
                                    301 *V*
                                    302 *V*                    COMPUTE_ANSWER
                                    303 *V*
                                    304 *V*     THE ANSWER IS COMPUTED BY COMPARING THE EXPONENT TO
                                    305 *V*     THE EXPONENT BOUND CURRENTLY OBTAINED BY THE OFFSET.
                                    306 *V*     IF THE EXPONENT IS LARGER THAN THE EXPONENT BOUND THEN
                                    307 *V*     WE USE THAT CURRENT PARTIAL RESULT AND MULTIPLY IT BY
                                    308 *V*     THE CURRENT ANSWER AND REPLACING IN THE CURRENT ANSWER.
                                    309 *V*     IF THE EXPONENT IS LESS THAN THE EXPONENT BOUND THEN GO
                                    310 *V*     AND SUBTRACT THE INDEXES TO GET ONE LESS ENTRY IN THE
                                    311 *V*     EXPBND TABLE OR THE NEXT LESS.  THEN REPEAT THIS PROCESS
                                    312 *V*     AND SUBTRACT THE EXPBND EXPONENT FROM THE EXPONENT EACH
                                    313 *V*     TIME OR UNTIL THE EXPONENT IS ZERO.
                                    314 *V*
                                    315 *V*
      000136 000217 2350 00 010NN   316        LDA     EXPONT
      000137 000154 6000 00 010NN   317        TZE     DONE
      000140 000174 1150 12 010NN   318        CMPA    EXPBND,2
      000141 000150 6044 00 010NN   319        TMOZ    SUBX2
      000142 000220 2064 33         320        MP2D    (0,0,ID,X3),(0,0,ID),RD
      000143 000202 0000 00 010NN   321        ARG     PAREQU
      000144 000201 0000 00 010NN   322        ARG     ANSWER
      000145 000217 2350 00 010NN   323        LDA     EXPONT
      000146 000212 1750 12 010NN   324        SBA     EXPSUB,2
      000147 000217 7550 00 010NN   325        STA     EXPONT
                                    326 *
                        000150      327 SUBX2  NULL
                                    328 *
      000150 000001 1620 03         329        SBX2    1,DU
      000151 000100 1630 03         330        SBX3    64,DU
      000152 000000 1020 03         331        CMPX2   =0,DU          WHEN X0 IS LESS THAN ZERO WE ARE DONE
      000153 000136 6050 00 010NN   332        TPL     COMPUT
                                    333 *

                                    334 *
                        000154      335 DONE   NULL
      000154 000320 3004 20         336        MVN     (0,0,ID),(AR,0,ID),RD
      000155 000201 0000 00 010NN   337        ARG     ANSWER
      000156 000204 000000  010NN   338        ZERO    ANSDES
      000157 000000 1050 03         339        CMPX5   =0,DU
      000160 000165 6000 00 010NN   340        TZE     EXIT
                                    341 *
                                    342 *      IT WAS A NEGATIVE EXPONENT SO THE IS 1/X
                                    343 *
      000161 120000 2275 20         344        DV3D    (AR,0,ID),(0,0,0),(AR,0,ID)
      000162 000204 000000  010NN   345        ZERO    ANSDES
      000163 000206 0300 01 010NN   346        NDSC9   ONE,0,1,NS,0
      000164 000204 000000  010NN   347        ZERO    ANSDES
                                    348 *
                        000165      349 EXIT   NULL
                                    350 *
      000165 000000 0730 00 010NN   351        LREG    REG
      000166 000220 4774 00 010NN   352        LDP7    PR7
      000167 000221 4764 00 010NN   353        LDP6    PR6
      000170 000222 4754 00 010NN   354        LDP5    PR5
      000171 000223 4744 00 010NN   355        LDP4    PR4
                                    356 *
      000172 000001 7100 11         357        TRA     1,1            NORMAL RETURN
                                    358 *
                                    359 *
                                    360 *              CONSTANTS AND TABLES
                                    361 *
                                    362 *
      000173 000000011007
                        000174      363        EVEN
      000174 000000000000           364 EXPBND DEC     0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191
      000175 000000000001
      000176 000000000003
      000177 000000000007
      000200 000000000017
      000201 000000000037

      000202 000000000077
      000203 000000000177
      000204 000000000377
      000205 000000000777
      000206 000000001777
      000207 000000003777
      000210 000000007777
      000211 000000017777
                        000212      365        EVEN
      000212 000000000000           366 EXPSUB DEC     0,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192
      000213 000000000002
      000214 000000000004
      000215 000000000010
      000216 000000000020
      000217 000000000040
      000220 000000000100
      000221 000000000200
      000222 000000000400
      000223 000000001000
      000224 000000002000
      000225 000000004000
      000226 000000010000
      000227 000000020000
                        000000      367        SECT    .X9DI.,DATA
                                    368 *
                                    369 *
                                    370 *              TEMPS, ETC...
                                    371 *
                                    372 *
                        000000      373        EIGHT
                        000000      374 REG    BSS     8
                        000010      375        EVEN
                        000010      376 PAREXP BSS     112
                        000170      377 TMPEXP BSS     8
                        000200      378 EXPABS BSS     1
      000201 000170 000000  010NN   379 ANSWER ZERO    TMPEXP,**
      000202 000010 000000  010NN   380 PAREQU ZERO    PAREXP,**

      000203 000000 000000  010NN   381 MNUS8  ZERO    PAREXP-8,**
                        000204      382 ANSDES BSS     1
                        000205      383 BASDES BSS     1
      000206 061000000000           384 ONE    EDEC    1A1
      000207 000000 0700 13         385 NEWEXP NDSC4   0,0,11,NS
                        000210      386 NEWARG BSS     4
                        000214      387 DSCLST BSS     3
                        000217      388 EXPONT BSS     1
                        000220      389 PR7    BSS     1
                        000221      390 PR6    BSS     1
                        000222      391 PR5    BSS     1
                        000223      392 PR4    BSS     1
                        000003      393 NS     EQU     3
                        000001      394 RD     EQU     1
                        000001      395 ID     EQU     1
                        000001      396 AR     EQU     1
                        000003      397 X3     EQU     3
                                    398 *
                                    399        END
 GMAP6 VERSION/ASSEMBLY DATES  JNPA NO TTL/2(_00]      JNPB NO TTL/2(_00]      JNPC NO TTL/2(_00]
 THERE WERE    NO  WARNING FLAGS IN THE ABOVE ASSEMBLY

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
   106   ALLOK    REL   .X9DI    216  193T  216
   204   ANSDES   REL   .X9DI.   382  118W  119R  138   161   172   338   345   347   382
   201   ANSWER   REL   .X9DI.   379  122W  295   322   337   379
     1   AR       ABS            396  136   159   169   232   336   344   396
   205   BASDES   REL   .X9DI.   383  114W  160   170   233   383
    20   BUILD    REL   .X9DI    111   95T  111
   136   COMPUT   REL   .X9DI    298  298   332T
   154   DONE     REL   .X9DI    335  317T  335
   214   DSCLST   REL   .X9DI.   387  199   205W  207W  209W  387
   165   EXIT     REL   .X9DI    349  139T  162T  173T  213T  340T  349
   200   EXPABS   REL   .X9DI.   378   97W   98   378
   174   EXPBND   REL   .X9DI    364  271R  318R  364
   116   EXPINC   REL   .X9DI    239  239   274T
   217   EXPONT   REL   .X9DI.   388  194W  202D  229W  272R  316R  323R  325W  388
   212   EXPSUB   REL   .X9DI    366  324R  366
     1   ID       ABS            395  136   159   169   232   262   293   320   336   344   395
  6000   .X9DI    SEC   SECT       7    7
  6001   .X9DI.   SEC   SECT     367  367
   203   MNUS8    REL   .X9DI.   381  120W  263   264   381
    53   NEG1     REL   .X9DI    169  146T  169
   210   NEWARG   REL   .X9DI.   386  195W  197W  198W  200W  210   386
   207   NEWEXP   REL   .X9DI.   385  206R  385
     3   NS       ABS            393  137   171   203   294   346   385   393
    60   NT1OR0   REL   .X9DI    180  144T  180
    43   NXTEST   REL   .X9DI    141  125T  141
   206   ONE      REL   .X9DI.   384  137D  171D  294D  346D  384
   202   PAREQU   REL   .X9DI.   380  121W  234   265   321   380
    10   PAREXP   REL   .X9DI.   376  376   380   381
   223   PR4      REL   .X9DI.   392   88W  355R  392
   222   PR5      REL   .X9DI.   391   87W  354R  391
   221   PR6      REL   .X9DI.   390   86W  353R  390
   220   PR7      REL   .X9DI.   389   85W  352R  389
     1   RD       ABS            394  136   159   201   232   262   293   320   336   394
     0   REG      REL   .X9DI.   374   84W  351R  374
   150   SUBX2    REL   .X9DI    327  319T  327

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
   170   TMPEXP   REL   .X9DI.   377  196   203D  377   379
   131   X2EXIT   REL   .X9DI    281  270T  281
     3   X3       ABS            397  232   262   320   397
NO VAL   X8ER     EXT   SYMREF         80
NO VAL   X9DD     EXT   SYMREF         79   211T
     0   X9DI     REL   .X9DI     82   78    82
