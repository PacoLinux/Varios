VERSION A01

PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:1    
        1        1        /*M* XSD$SUBS - Subroutines for the directory server */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*DMR,PLM=5,IND=3,CTI=2,SDI=5,MCL=10,CSI=1,DTI=2,DCI=3,ECI=0,AND */
        8        8
        9        9
       10       10        XSD$READ: PROC(XSD$SERVICE) ALTRET;
       11       11
       12       12
       13       13
       14       14        %INCLUDE CP_6;
       15     5573        %INCLUDE K_ADDRESS_M;
       16     6076        %INCLUDE XSD_SUBS_C;
       17     6411        %INCLUDE XSD_MACRO_M;
       18     7520        %INCLUDE XSD_PERR_C;
       19     7542        %INCLUDE XSC_COMMON_M;
       20     8195        %INCLUDE FM$FIT;
       21     8416        %INCLUDE FM_FIELD_C;
       22     8457
       23     8458    1   DCL XSD$LOCFIELD ENTRY(4) ALTRET;
       24     8459    1   DCL XSS$BUFPTR ENTRY(2) ALTRET;
       25     8460    1   DCL XSS$BLKPTR ENTRY(2) ALTRET;
       26     8461    1   DCL XSS$GETMEM ENTRY(3) ALTRET;
       27     8462    1   DCL XSS$RELMEM ENTRY(1) ALTRET;
       28     8463    1   DCL XSD$DSDATA ENTRY CONV(5);           /* so LEMUR lib works */
       29     8464    1   DCL XSD$TABLE ENTRY CONV(5);            /* so LEMUR lib works */
       30     8465
       31     8466        %XSC$ADDRESS(NAME=ADDRESS,STCLASS="BASED(ATTR$)");
       32     8749    1   DCL ALT BIT(1);
       33     8750    1   DCL ATTR$ PTR;
       34     8751
       35     8752        %B$ALT;
       36     8760        %B$TCB(STCLASS="BASED(B$TCB$)");
       37     8763    1   DCL B$JIT$ PTR SYMREF;
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:2    
       38     8764    1   DCL B$TCB$ PTR SYMREF;
       39     8765    1   DCL B$ROSEG$ PTR SYMREF;
       40     8766    1   DCL BUF$ PTR;
       41     8767    1   DCL BUFX SBIN HALF HALIGNED;
       42     8768    1   DCL BUFFER CHAR(SIZE) BASED(BUF$);
       43     8769
       44     8770    1   DCL CHR1 CHAR(1) CALIGNED BASED;
       45     8771    1   DCL CHR2 CHAR(2) CALIGNED BASED;
       46     8772    1   DCL CHR3 CHAR(3) CALIGNED BASED;
       47     8773    1   DCL CHR4 CHAR(4) CALIGNED BASED;
       48     8774        %CODE18(BASED="BASED(CODE18$)");
       49     8778        %CODE19(BASED="BASED(CODE19$)");
       50     8781        %CODE20(BASED="BASED(CODE21$)");
       51     8786    1   DCL CODE18$ PTR SYMREF;
       52     8787    1   DCL CODE19$ PTR SYMREF;
       53     8788    1   DCL CODE21$ PTR SYMREF;
       54     8789
       55     8790        %VLP_ERRCODE(FPTN=E_NOMEM,STCLASS=SYMREF);
       56     8835        %VLP_ERRCODE(FPTN=E_BADATTRIBUTE,STCLASS=SYMREF);
       57     8880        %VLP_ERRCODE(FPTN=E_INVATTRLIST,FCG=XS,MID=D,MON='0'B,STCLASS="CONSTANT SYMDEF",
       58     8881                      ERR#=%E$INVATTRLIST);
       59     8926        %F$DCB(STCLASS="BASED");
       60     8983    1   DCL FIELD$ PTR;
       61     8984        %FM$FIELD_START(STCLASS="BASED(FIELD$)");
       62     9006
       63     9007    1   DCL I UBIN;
       64     9008        %FPT_READ(FPTN=IRELREAD,DCB=M$DIB,KEYS=YES,KEYR=YES,
       65     9009                  ID=YES,IDBUF=VLP_ID);
       66     9048        %FPT_READ(FPTN=IRELREAD_IDS,DCB=M$DIB,KEYS=YES,KEYR=NO,
       67     9049                  ID=YES,IDS=YES,IDBUF=VLP_ID);
       68     9088        %FPT_PRECORD(FPTN=IRELPRECORD,DCB=M$DIB,IDALL=YES,IDBUF=VLR_ID,
       69     9089                     KEYS=YES);
       70     9110
       71     9111    1   DCL KEYS(0:%(%XSD_KEYX_MAXKEYX-1)) BIT(1);
       72     9112
       73     9113    1   DCL J UBIN;
       74     9114
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:3    
       75     9115    1   DCL M$DIB DCB;
       76     9116
       77     9117    1   DCL SIZE UBIN;
       78     9118    1   DCL STARTX UBIN;
       79     9119
       80     9120    1   DCL 1 TEXTC CALIGNED BASED,
       81     9121    1            2 L UBIN(9) CALIGNED,
       82     9122    1            2 T CHAR(TEXTC.L) CALIGNED;
       83     9123    1   DCL 1 TEXTH CALIGNED BASED,
       84     9124    1            2 L UBIN(18) CALIGNED,
       85     9125    1            2 T CHAR(TEXTH.L) CALIGNED;
       86     9126
       87     9127
       88     9128        %VLP_ID;
       89     9141        %VLR_ID(N=200,STCLASS="SYMREF");        /* what should we do about this */
       90     9154
       91     9155    1   DCL XSD_ATTRKEYX(0:%(%XSD_AT_MAXATTR-1)) UBIN BYTE CALIGNED SYMREF;
       92     9156    1   DCL XSD$ATTR_TBL$(0:%XSD_AT_MAXATTR) PTR SYMREF;
       93     9157        %XSD_ATTRIBUTE(NAME=XSD$ATTRIBUTE,STCLASS="BASED(ATTR$)");
       94     9392        %XSD_SERVICE(NAME=XSD$SERVICE,STCLASS="");
       95     9557        %XSD_DIBKEY(STCLASS="BASED(BUF$)");
       96     9593        %XSD_DIBBUF(STCLASS="BASED(BUF$)");
       97     9658        %XSD_DIBKEY(NAME=XSD_DIBKEY_C,STCLASS="CONSTANT SYMDEF");
       98     9694    1   DCL XSD_DS_OPENDIB UBIN SYMREF;
       99     9695
      100     9696        /* get buffer to read data into */
      101     9697    1        SIZE = XSD_DS_OPENDIB;
      102     9698    1        BUFX = -1;
      103     9699    1        ALT = '0'B;
      104     9700    2        CALL XSS$GETMEM(BUFX,BUF$,XSD_DS_OPENDIB) WHENALTRETURN DO;
      105     9701    2             XSD$SERVICE.ERRCODE = E_NOMEM;
      106     9702    2             ALTRETURN;
      107     9703    2          END;
      108     9704
      109     9705    1        IRELREAD.KEY_ = VECTOR(BUFFER);
      110     9706    1        IRELREAD.BUF_ = VECTOR(BUFFER);
      111     9707    1        IRELREAD_IDS.KEY_ = VECTOR(BUFFER);
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:4    
      112     9708    1        IRELREAD_IDS.BUF_ = VECTOR(BUFFER);
      113     9709    1        IRELPRECORD.KEY_ = VECTOR(BUFFER);
      114     9710
      115     9711
      116     9712    1        XSD_DIBKEY = XSD_DIBKEY_C;
      117     9713    1        KEYS = '0'B;
      118     9714    1        I = 0;
      119     9715        /*
      120     9716             loop thru the attributes specified on the service call.
      121     9717             check for bound errors and build a key structure.
      122     9718        */
      123     9719    2        DO WHILE I <= XSD$SERVICE.ATTR#;
      124     9720    3           IF XSD$SERVICE.ATTRIBUTE.TYPE(I) > %XSD_AT_MAXATTR THEN DO;
      125     9721    3                XSD$SERVICE.ERRCODE = E_BADATTRIBUTE;
      126     9722    3                XSD$SERVICE.ATTR# = I;
      127     9723    3                GOTO RELMEMALT;
      128     9724    3             END;
      129     9725
      130     9726    2           ATTR$ = XSD$ATTR_TBL$(XSD$SERVICE.ATTRIBUTE.TYPE(I));
      131     9727    2           IF XSD$ATTRIBUTE.FLAGS.RANGE AND
      132     9728    2             (XSD$SERVICE.ATTRIBUTE.VALUE$(I)->TEXTH.L > XSD$ATTRIBUTE.UPPERBOUND OR
      133     9729    3             XSD$SERVICE.ATTRIBUTE.VALUE$(I)->TEXTH.L < XSD$ATTRIBUTE.LOWERBOUND) THEN
              9729                      DO;
      134     9730    3                XSD$SERVICE.ERRCODE = E_BADATTRIBUTE;
      135     9731    3                XSD$SERVICE.ATTR# = I;     /* index value of bad attribute */
      136     9732    3                GOTO RELMEMALT;
      137     9733    3             END;
      138     9734
      139     9735    3           DO CASE(XSD_ATTRKEYX(XSD$SERVICE.ATTRIBUTE.TYPE(I)));
      140     9736    3            CASE(%XSD_KEYX_ALIASOBJNAME);
      141     9737    3              ADDR(XSD_DIBKEY.ALIASOBJNAME)->CHR1 = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9737                       TEXTH.T;
      142     9738    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.ALIASOBJNAME);
      143     9739    3            CASE(%XSD_KEYX_KNOWINFO);
      144     9740    3              ADDR(XSD_DIBKEY.KNOWINFO)->CHR1 = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->TEXTH.
              9740                       T;
      145     9741    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.KNOWINFO);
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:5    
      146     9742    3            CASE(%XSD_KEYX_COMMONNAME);
      147     9743    3              ADDR(XSD_DIBKEY.COMMONNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9743                       TEXTC.L;
      148     9744    3              ADDR(XSD_DIBKEY.COMMONNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9744                       TEXTC.T;
      149     9745    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.COMMONNAME);
      150     9746    3            CASE(%XSD_KEYX_SURNAME);
      151     9747    3              ADDR(XSD_DIBKEY.SURNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9747                       TEXTC.L;
      152     9748    3              ADDR(XSD_DIBKEY.SURNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9748                       TEXTC.T;
      153     9749    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.SURNAME);
      154     9750    3            CASE(%XSD_KEYX_SERIAL#);
      155     9751    3              ADDR(XSD_DIBKEY.SERIAL#)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9751                       TEXTC.L;
      156     9752    3              ADDR(XSD_DIBKEY.SERIAL#)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9752                       TEXTC.T;
      157     9753    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.SERIAL#);
      158     9754    3            CASE(%XSD_KEYX_COUNTRYNAME);
      159     9755    3              ADDR(XSD_DIBKEY.COUNTRYNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9755                       TEXTC.L;
      160     9756    3              ADDR(XSD_DIBKEY.COUNTRYNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9756                       TEXTC.T;
      161     9757    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.COUNTRYNAME);
      162     9758    3            CASE(%XSD_KEYX_LOCALITYNAME);
      163     9759    3              ADDR(XSD_DIBKEY.LOCALITYNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)
              9759                       ->TEXTC.L;
      164     9760    3              ADDR(XSD_DIBKEY.LOCALITYNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)
              9760                       ->TEXTC.T;
      165     9761    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.LOCALITYNAME);
      166     9762    3            CASE(%XSD_KEYX_STATENAME);
      167     9763    3              ADDR(XSD_DIBKEY.STATENAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9763                       TEXTC.L;
      168     9764    3              ADDR(XSD_DIBKEY.STATENAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9764                       TEXTC.T;
      169     9765    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.STATENAME);
      170     9766    3            CASE(%XSD_KEYX_STREETADDR);
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:6    
      171     9767    3              ADDR(XSD_DIBKEY.STREETADDR)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9767                       TEXTC.L;
      172     9768    3              ADDR(XSD_DIBKEY.STREETADDR)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9768                       TEXTC.T;
      173     9769    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.STREETADDR);
      174     9770    3            CASE(%XSD_KEYX_ORGNAME);
      175     9771    3              ADDR(XSD_DIBKEY.ORGNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9771                       TEXTC.L;
      176     9772    3              ADDR(XSD_DIBKEY.ORGNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9772                       TEXTC.T;
      177     9773    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.ORGNAME);
      178     9774    3            CASE(%XSD_KEYX_ORGUNITNAME);
      179     9775    3              ADDR(XSD_DIBKEY.ORGUNITNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9775                       TEXTC.L;
      180     9776    3              ADDR(XSD_DIBKEY.ORGUNITNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9776                       TEXTC.T;
      181     9777    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.ORGUNITNAME);
      182     9778    3            CASE(%XSD_KEYX_TITLE);
      183     9779    3              ADDR(XSD_DIBKEY.TITLE)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->TEXTC.
              9779                       L;
      184     9780    3              ADDR(XSD_DIBKEY.TITLE)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->TEXTC.
              9780                       T;
      185     9781    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.TITLE);
      186     9782    3            CASE(%XSD_KEYX_BUSINESSCAT);
      187     9783    3              ADDR(XSD_DIBKEY.BUSINESSCAT)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9783                       TEXTC.L;
      188     9784    3              ADDR(XSD_DIBKEY.BUSINESSCAT)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9784                       TEXTC.T;
      189     9785    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.BUSINESSCAT);
      190     9786    3            CASE(%XSD_KEYX_OBJECTCLASS);
      191     9787    3              ADDR(XSD_DIBKEY.OBJECTCLASS)->CHR1 = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9787                       TEXTH.T;
      192     9788    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.OBJECTCLASS);
      193     9789    3            CASE(ELSE);
      194     9790    3           END;                            /* case i */
      195     9791        /* if the attribute is a key too, then try to do a precord */
      196     9792    3           IF XSD_ATTRKEYX(XSD$SERVICE.ATTRIBUTE.TYPE(I)) <= %XSD_KEYX_MAXKEYX THEN DO;
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:7    
      197     9793    3                KEYS(XSD_ATTRKEYX(XSD$SERVICE.ATTRIBUTE.TYPE(I))) = '1'B;
      198     9794    3                IRELPRECORD.V.INDX# = XSD_ATTRKEYX(XSD$SERVICE.ATTRIBUTE.TYPE(I));
      199     9795    4                CALL M$PRECORD(IRELPRECORD) WHENRETURN DO;
      200     9796    4                     GOTO FOUNDONE;
      201     9797    4                  END;                     /* return on precord */
      202     9798    3             END;
      203     9799    2           I = I + 1;
      204     9800    2        END;                               /* do while i < attr# */
      205     9801
      206     9802    2        IF KEYS = '0'B THEN DO;
      207     9803    2             XSD$SERVICE.ERRCODE = E_INVATTRLIST;
      208     9804    2             GOTO RELMEMALT;
      209     9805    2          END;
      210     9806
      211     9807    1   FOUNDONE:;
      212     9808    2        DO I = 0 TO VLR_ID.COUNT# - 1;
      213     9809    2           VLP_ID.ID# = VLR_ID.ID#(I);
      214     9810    2           IRELREAD_IDS.KEY_ = IRELPRECORD.KEY_;
      215     9811    2           IRELREAD_IDS.V.INDX# = IRELPRECORD.V.INDX#;
      216     9812    3           CALL M$READ(IRELREAD_IDS) WHENRETURN DO;
      217     9813    3                STARTX = DCBADDR(DCBNUM(M$DIB))->F$DCB.STARTX;
      218     9814    3                J = 0;
      219     9815    4                DO WHILE J <= XSD$SERVICE.ATTR#;
      220     9816    5                   IF XSD$SERVICE.ATTRIBUTE.TYPE(J) > %XSD_AT_MAXATTR THEN DO;
      221     9817    5                        XSD$SERVICE.ERRCODE = E_BADATTRIBUTE;
      222     9818    5                        XSD$SERVICE.ATTR# = J;
      223     9819    5                        GOTO RELMEMALT;
      224     9820    5                     END;
      225     9821
      226     9822    4                   ATTR$ = XSD$ATTR_TBL$(XSD$SERVICE.ATTRIBUTE.TYPE(J));
      227     9823    4                   IF XSD$ATTRIBUTE.FLAGS.RANGE AND
      228     9824    4                     (XSD$SERVICE.ATTRIBUTE.VALUE$(J)->TEXTH.L > XSD$ATTRIBUTE.
              9824                              UPPERBOUND OR
      229     9825    5                     XSD$SERVICE.ATTRIBUTE.VALUE$(J)->TEXTH.L < XSD$ATTRIBUTE.
              9825                              LOWERBOUND) THEN DO;
      230     9826    5                        XSD$SERVICE.ERRCODE = E_BADATTRIBUTE;
      231     9827    5                        XSD$SERVICE.ATTR# = J; /* index value of bad attribute */
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:8    
      232     9828    5                     END;
      233     9829    5                   DO CASE(XSD$SERVICE.ATTRIBUTE.TYPE(J));
      234     9830    5                    CASE(%XSD_AT_OBJECTCLASS);
      235     9831    5                    CASE(%XSD_AT_ALIASOBJNAME);
      236     9832    5                    CASE(%XSD_AT_KNOWINFO);
      237     9833    5                    CASE(%XSD_AT_COMMONNAME);
      238     9834    5                      FIELD$= PINCRB(ADDR(XSD_DIBBUF),
      239     9835    5                        PINCRW(B$ROSEG$,STARTX)->FM$FIELD_START.OFFSET(%
              9835                                 XSD_RECX_COMMONNAME));
      240     9836    5                      IF XSD$SERVICE.ATTRIBUTE.VALUE$(J)->TEXTC.L ~= FIELD$->TEXTC.L OR
      241     9837    5                        XSD$SERVICE.ATTRIBUTE.VALUE$(J)->TEXTC.T ~= FIELD$->TEXTC.T
              9837                                 THEN
      242     9838    5                         GOTO NEXTREAD;
      243     9839    5                    CASE(%XSD_AT_SURNAME);
      244     9840    5                    CASE(%XSD_AT_SERIAL#);
      245     9841    5                    CASE(%XSD_AT_COUNTRYNAME);
      246     9842    5                    CASE(%XSD_AT_LOCALITYNAME);
      247     9843    5                    CASE(%XSD_AT_STATENAME);
      248     9844    5                    CASE(%XSD_AT_STREETADDR);
      249     9845    5                    CASE(%XSD_AT_ORGNAME);
      250     9846    5                    CASE(%XSD_AT_ORGUNITNAME);
      251     9847    5                    CASE(%XSD_AT_TITLE);
      252     9848    5                    CASE(%XSD_AT_DESC);
      253     9849    5                    CASE(%XSD_AT_SEARCHGUIDE);
      254     9850    5                    CASE(%XSD_AT_BUSINESSCAT);
      255     9851    5                    CASE(%XSD_AT_POSTALADDR);
      256     9852    5                    CASE(%XSD_AT_POSTALCODE);
      257     9853    5                    CASE(%XSD_AT_POBOX);
      258     9854    5                    CASE(%XSD_AT_PDON);
      259     9855    5                    CASE(%XSD_AT_TELEPHONE#);
      260     9856    5                    CASE(%XSD_AT_TELEX#);
      261     9857    5                    CASE(%XSD_AT_TELTEXTERMID);
      262     9858    5                    CASE(%XSD_AT_FAXTELEPHONE#);
      263     9859    5                    CASE(%XSD_AT_X121ADDR);
      264     9860    5                    CASE(%XSD_AT_INTISDN#);
      265     9861    5                    CASE(%XSD_AT_REGADDR);
      266     9862    5                    CASE(%XSD_AT_DESTIND);
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:9    
      267     9863    5                    CASE(%XSD_AT_PDM);
      268     9864    5                    CASE(%XSD_AT_PRESADDR);
      269     9865    5                    CASE(%XSD_AT_SAC);
      270     9866    5                    CASE(%XSD_AT_MEMBER);
      271     9867    5                    CASE(%XSD_AT_OWNER);
      272     9868    5                    CASE(%XSD_AT_ROLEOCCUPANT);
      273     9869    5                    CASE(%XSD_AT_SEEALSO);
      274     9870    5                    CASE(%XSD_AT_USERPASS);
      275     9871    5                    CASE(%XSD_AT_USERCERT);
      276     9872    5                    CASE(%XSD_AT_CACERT);
      277     9873    5                    CASE(%XSD_AT_ARL);
      278     9874    5                    CASE(%XSD_AT_CRL);
      279     9875    5                    CASE(%XSD_AT_CROSSCERT);
      280     9876    5                   END;                    /*  do case */
      281     9877    4                   J = J + 1;
      282     9878    4                END;                       /* do while j */
      283     9879             /*
      284     9880                found the perfect match.  fill in the result field and return to the
      285     9881                user
      286     9882             */
      287     9883    3                ATTR$ = VBASE(XSD$SERVICE.RESULT_);
      288     9884    3                CALL XSD$LOCFIELD(XSD_DIBBUF,J,%XSD_RECX_PSELECTOR,LENGTHC(XSD_DIBBUF))
              9884                         ;
      289     9885    3                ADDRESS.PSAP = PINCRC(ADDR(XSD_DIBBUF),J)->TEXTC;
      290     9886    3                CALL XSD$LOCFIELD(XSD_DIBBUF,J,%XSD_RECX_SSELECTOR,LENGTHC(XSD_DIBBUF))
              9886                         ;
      291     9887    3                ADDRESS.SSAP = PINCRC(ADDR(XSD_DIBBUF),J)->TEXTC;
      292     9888    3                CALL XSD$LOCFIELD(XSD_DIBBUF,J,%XSD_RECX_TSELECTOR,LENGTHC(XSD_DIBBUF))
              9888                         ;
      293     9889    3                ADDRESS.TSAP.LEN = PINCRC(ADDR(XSD_DIBBUF),J)->TEXTC.L;
      294     9890    3                ADDRESS.TSAP.TSAP = PINCRC(ADDR(XSD_DIBBUF),J)->TEXTC.T;
      295     9891    3                CALL XSD$LOCFIELD(XSD_DIBBUF,J,%XSD_RECX_NSAP,LENGTHC(XSD_DIBBUF));
      296     9892    3                ADDRESS.NSAP = PINCRC(ADDR(XSD_DIBBUF),J)->TEXTC;
      297     9893
      298     9894    3                GOTO RELMEM;
      299     9895    3             END;                          /* return m$read */
      300     9896    3           WHENALTRETURN DO;               /* m$read(irelread_ids)*/
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:10   
      301     9897             /* what gives? */
      302     9898    3             END;                          /* whenaltreturn(irelread_ids)*/
      303     9899    2   NEXTREAD:;
      304     9900    2        END;                               /* do i to vlr_id.count# */
      305     9901
      306     9902    1   RELMEMALT:;                             /* release memory and altreturn */
      307     9903    1        ALT = '1'B;
      308     9904    1   RELMEM:;                                /* release memory and return */
      309     9905    1        CALL XSS$RELMEM(BUFX);
      310     9906    1        IF ALT THEN ALTRETURN;
      311     9907    1   END XSD$READ;
      312     9908        %EOD;

PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:11   
--  Include file information  --

   FM_FIELD_C.:LIB_E05  is referenced.
   FM$FIT.:LIB_E05  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   XSD_PERR_C.:XSA1TOU  is referenced.
   XSD_MACRO_M.:XSA1TOU  is referenced.
   XSD_SUBS_C.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSD$READ.

   Procedure XSD$READ requires 675 words for executable code.
   Procedure XSD$READ requires 18 words of local(AUTO) storage.

PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:12   

 Object Unit name= XSD$READ                                   File name= XSD$SUBS.:XSA1TOU
 UTS= OCT 01 '97 11:55:49.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    234    352  XSD$READ
    2   Data  even  none    40     50  XSD$READ
    3   DCB   even  none     0      0  M$DIB
    4   Proc  even  none   675   1243  XSD$READ
    5  RoData even  none    33     41  XSD$READ

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        1  XSD$READ

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  E_INVATTRLIST                      1      1  XSD_DIBKEY_C
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:13   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XSD$DSDATA
 yes     yes           Std       3 XSS$GETMEM
         yes          ~proc      0 XSD$TABLE
 yes     yes           Std       4 XSD$LOCFIELD
 yes     yes           Std       1 XSS$RELMEM
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                B$ROSEG$
     CODE18$                               CODE19$                               CODE21$
     E_NOMEM                               E_BADATTRIBUTE                        M$DIB
     VLR_ID                                XSD_ATTRKEYX                          XSD$ATTR_TBL$
     XSD_DS_OPENDIB

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:14   


        1        1        /*M* XSD$SUBS - Subroutines for the directory server */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*DMR,PLM=5,IND=3,CTI=2,SDI=5,MCL=10,CSI=1,DTI=2,DCI=3,ECI=0,AND */
        8        8
        9        9
       10       10        XSD$READ: PROC(XSD$SERVICE) ALTRET;

     10  4 000000   000000 700200 xent  XSD$READ     TSX0  ! X66_AUTO_1
         4 000001   000022 000001                    ZERO    18,1

       11       11
       12       12
       13       13
       14       14        %INCLUDE CP_6;
       15     5573        %INCLUDE K_ADDRESS_M;
       16     6076        %INCLUDE XSD_SUBS_C;
       17     6411        %INCLUDE XSD_MACRO_M;
       18     7520        %INCLUDE XSD_PERR_C;
       19     7542        %INCLUDE XSC_COMMON_M;
       20     8195        %INCLUDE FM$FIT;
       21     8416        %INCLUDE FM_FIELD_C;
       22     8457
       23     8458    1   DCL XSD$LOCFIELD ENTRY(4) ALTRET;
       24     8459    1   DCL XSS$BUFPTR ENTRY(2) ALTRET;
       25     8460    1   DCL XSS$BLKPTR ENTRY(2) ALTRET;
       26     8461    1   DCL XSS$GETMEM ENTRY(3) ALTRET;
       27     8462    1   DCL XSS$RELMEM ENTRY(1) ALTRET;
       28     8463    1   DCL XSD$DSDATA ENTRY CONV(5);           /* so LEMUR lib works */
       29     8464    1   DCL XSD$TABLE ENTRY CONV(5);            /* so LEMUR lib works */
       30     8465
       31     8466        %XSC$ADDRESS(NAME=ADDRESS,STCLASS="BASED(ATTR$)");
       32     8749    1   DCL ALT BIT(1);
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:15   
       33     8750    1   DCL ATTR$ PTR;
       34     8751
       35     8752        %B$ALT;
       36     8760        %B$TCB(STCLASS="BASED(B$TCB$)");
       37     8763    1   DCL B$JIT$ PTR SYMREF;
       38     8764    1   DCL B$TCB$ PTR SYMREF;
       39     8765    1   DCL B$ROSEG$ PTR SYMREF;
       40     8766    1   DCL BUF$ PTR;
       41     8767    1   DCL BUFX SBIN HALF HALIGNED;
       42     8768    1   DCL BUFFER CHAR(SIZE) BASED(BUF$);
       43     8769
       44     8770    1   DCL CHR1 CHAR(1) CALIGNED BASED;
       45     8771    1   DCL CHR2 CHAR(2) CALIGNED BASED;
       46     8772    1   DCL CHR3 CHAR(3) CALIGNED BASED;
       47     8773    1   DCL CHR4 CHAR(4) CALIGNED BASED;
       48     8774        %CODE18(BASED="BASED(CODE18$)");
       49     8778        %CODE19(BASED="BASED(CODE19$)");
       50     8781        %CODE20(BASED="BASED(CODE21$)");
       51     8786    1   DCL CODE18$ PTR SYMREF;
       52     8787    1   DCL CODE19$ PTR SYMREF;
       53     8788    1   DCL CODE21$ PTR SYMREF;
       54     8789
       55     8790        %VLP_ERRCODE(FPTN=E_NOMEM,STCLASS=SYMREF);
       56     8835        %VLP_ERRCODE(FPTN=E_BADATTRIBUTE,STCLASS=SYMREF);
       57     8880        %VLP_ERRCODE(FPTN=E_INVATTRLIST,FCG=XS,MID=D,MON='0'B,STCLASS="CONSTANT SYMDEF",
       58     8881                      ERR#=%E$INVATTRLIST);
       59     8926        %F$DCB(STCLASS="BASED");
       60     8983    1   DCL FIELD$ PTR;
       61     8984        %FM$FIELD_START(STCLASS="BASED(FIELD$)");
       62     9006
       63     9007    1   DCL I UBIN;
       64     9008        %FPT_READ(FPTN=IRELREAD,DCB=M$DIB,KEYS=YES,KEYR=YES,
       65     9009                  ID=YES,IDBUF=VLP_ID);
       66     9048        %FPT_READ(FPTN=IRELREAD_IDS,DCB=M$DIB,KEYS=YES,KEYR=NO,
       67     9049                  ID=YES,IDS=YES,IDBUF=VLP_ID);
       68     9088        %FPT_PRECORD(FPTN=IRELPRECORD,DCB=M$DIB,IDALL=YES,IDBUF=VLR_ID,
       69     9089                     KEYS=YES);
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:16   
       70     9110
       71     9111    1   DCL KEYS(0:%(%XSD_KEYX_MAXKEYX-1)) BIT(1);
       72     9112
       73     9113    1   DCL J UBIN;
       74     9114
       75     9115    1   DCL M$DIB DCB;
       76     9116
       77     9117    1   DCL SIZE UBIN;
       78     9118    1   DCL STARTX UBIN;
       79     9119
       80     9120    1   DCL 1 TEXTC CALIGNED BASED,
       81     9121    1            2 L UBIN(9) CALIGNED,
       82     9122    1            2 T CHAR(TEXTC.L) CALIGNED;
       83     9123    1   DCL 1 TEXTH CALIGNED BASED,
       84     9124    1            2 L UBIN(18) CALIGNED,
       85     9125    1            2 T CHAR(TEXTH.L) CALIGNED;
       86     9126
       87     9127
       88     9128        %VLP_ID;
       89     9141        %VLR_ID(N=200,STCLASS="SYMREF");        /* what should we do about this */
       90     9154
       91     9155    1   DCL XSD_ATTRKEYX(0:%(%XSD_AT_MAXATTR-1)) UBIN BYTE CALIGNED SYMREF;
       92     9156    1   DCL XSD$ATTR_TBL$(0:%XSD_AT_MAXATTR) PTR SYMREF;
       93     9157        %XSD_ATTRIBUTE(NAME=XSD$ATTRIBUTE,STCLASS="BASED(ATTR$)");
       94     9392        %XSD_SERVICE(NAME=XSD$SERVICE,STCLASS="");
       95     9557        %XSD_DIBKEY(STCLASS="BASED(BUF$)");
       96     9593        %XSD_DIBBUF(STCLASS="BASED(BUF$)");
       97     9658        %XSD_DIBKEY(NAME=XSD_DIBKEY_C,STCLASS="CONSTANT SYMDEF");
       98     9694    1   DCL XSD_DS_OPENDIB UBIN SYMREF;
       99     9695
      100     9696        /* get buffer to read data into */
      101     9697    1        SIZE = XSD_DS_OPENDIB;

   9697  4 000002   000000 235000 xsym               LDA     XSD_DS_OPENDIB
         4 000003   200014 755100                    STA     SIZE,,AUTO

      102     9698    1        BUFX = -1;
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:17   

   9698  4 000004   777777 220003                    LDX0    -1,DU
         4 000005   200007 740100                    STX0    BUFX,,AUTO

      103     9699    1        ALT = '0'B;

   9699  4 000006   200004 450100                    STZ     ALT,,AUTO

      104     9700    2        CALL XSS$GETMEM(BUFX,BUF$,XSD_DS_OPENDIB) WHENALTRETURN DO;

   9700  4 000007   000001 236000 5                  LDQ     1
         4 000010   200020 756100                    STQ     STARTX+3,,AUTO
         4 000011   200006 630500                    EPPR0   BUF$,,AUTO
         4 000012   200017 450500                    STP0    STARTX+2,,AUTO
         4 000013   200007 631500                    EPPR1   BUFX,,AUTO
         4 000014   200016 451500                    STP1    STARTX+1,,AUTO
         4 000015   200016 630500                    EPPR0   STARTX+1,,AUTO
         4 000016   000000 631400 5                  EPPR1   0
         4 000017   000000 701000 xent               TSX1    XSS$GETMEM
         4 000020   000022 702000 4                  TSX2    s:9701
         4 000021   000026 710000 4                  TRA     s:9705

      105     9701    2             XSD$SERVICE.ERRCODE = E_NOMEM;

   9701  4 000022   000000 236000 xsym               LDQ     E_NOMEM
         4 000023   200003 470500                    LDP0    @XSD$SERVICE,,AUTO
         4 000024   000003 756100                    STQ     3,,PR0

      106     9702    2             ALTRETURN;

   9702  4 000025   000000 702200 xent               TSX2  ! X66_AALT

      107     9703    2          END;
      108     9704
      109     9705    1        IRELREAD.KEY_ = VECTOR(BUFFER);

   9705  4 000026   200014 235100                    LDA     SIZE,,AUTO
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:18   
         4 000027   000020 735000                    ALS     16
         4 000030   000140 135007                    SBLA    96,DL
         4 000031   200006 236100                    LDQ     BUF$,,AUTO
         4 000032   000002 757000 2                  STAQ    IRELREAD+2

      110     9706    1        IRELREAD.BUF_ = VECTOR(BUFFER);

   9706  4 000033   200014 235100                    LDA     SIZE,,AUTO
         4 000034   000020 735000                    ALS     16
         4 000035   000140 135007                    SBLA    96,DL
         4 000036   200006 236100                    LDQ     BUF$,,AUTO
         4 000037   000004 757000 2                  STAQ    IRELREAD+4

      111     9707    1        IRELREAD_IDS.KEY_ = VECTOR(BUFFER);

   9707  4 000040   200014 235100                    LDA     SIZE,,AUTO
         4 000041   000020 735000                    ALS     16
         4 000042   000140 135007                    SBLA    96,DL
         4 000043   200006 236100                    LDQ     BUF$,,AUTO
         4 000044   000020 757000 2                  STAQ    IRELREAD_IDS+2

      112     9708    1        IRELREAD_IDS.BUF_ = VECTOR(BUFFER);

   9708  4 000045   200014 235100                    LDA     SIZE,,AUTO
         4 000046   000020 735000                    ALS     16
         4 000047   000140 135007                    SBLA    96,DL
         4 000050   200006 236100                    LDQ     BUF$,,AUTO
         4 000051   000022 757000 2                  STAQ    IRELREAD_IDS+4

      113     9709    1        IRELPRECORD.KEY_ = VECTOR(BUFFER);

   9709  4 000052   200014 235100                    LDA     SIZE,,AUTO
         4 000053   000020 735000                    ALS     16
         4 000054   000140 135007                    SBLA    96,DL
         4 000055   200006 236100                    LDQ     BUF$,,AUTO
         4 000056   000036 757000 2                  STAQ    IRELPRECORD+2

PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:19   
      114     9710
      115     9711
      116     9712    1        XSD_DIBKEY = XSD_DIBKEY_C;

   9712  4 000057   200006 470500                    LDP0    BUF$,,AUTO
         4 000060   000100 100400                    MLR     fill='000'O
         4 000061   000001 001644 1                  ADSC9   XSD_DIBKEY_C             cn=0,n=932
         4 000062   000000 001644                    ADSC9   0,,PR0                   cn=0,n=932

      117     9713    1        KEYS = '0'B;

   9713  4 000063   000002 236000 5                  LDQ     2
         4 000064   200012 356100                    ANSQ    KEYS,,AUTO

      118     9714    1        I = 0;

   9714  4 000065   200011 450100                    STZ     I,,AUTO

      119     9715        /*
      120     9716             loop thru the attributes specified on the service call.
      121     9717             check for bound errors and build a key structure.
      122     9718        */
      123     9719    2        DO WHILE I <= XSD$SERVICE.ATTR#;

   9719  4 000066   200003 470500                    LDP0    @XSD$SERVICE,,AUTO
         4 000067   000005 236100                    LDQ     5,,PR0
         4 000070   200011 116100                    CMPQ    I,,AUTO
         4 000071   000700 602000 4                  TNC     s:9802

      124     9720    3           IF XSD$SERVICE.ATTRIBUTE.TYPE(I) > %XSD_AT_MAXATTR THEN DO;

   9720  4 000072   200011 235100                    LDA     I,,AUTO
         4 000073   000001 735000                    ALS     1
         4 000074   200003 470500                    LDP0    @XSD$SERVICE,,AUTO
         4 000075   000013 235105                    LDA     11,AL,PR0
         4 000076   000052 115007                    CMPA    42,DL
         4 000077   000105 602000 4                  TNC     s:9726
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:20   

      125     9721    3                XSD$SERVICE.ERRCODE = E_BADATTRIBUTE;

   9721  4 000100   000000 236000 xsym               LDQ     E_BADATTRIBUTE
         4 000101   000003 756100                    STQ     3,,PR0

      126     9722    3                XSD$SERVICE.ATTR# = I;

   9722  4 000102   200011 235100                    LDA     I,,AUTO
         4 000103   000005 755100                    STA     5,,PR0

      127     9723    3                GOTO RELMEMALT;

   9723  4 000104   001227 710000 4                  TRA     RELMEMALT

      128     9724    3             END;
      129     9725
      130     9726    2           ATTR$ = XSD$ATTR_TBL$(XSD$SERVICE.ATTRIBUTE.TYPE(I));

   9726  4 000105   200011 235100                    LDA     I,,AUTO
         4 000106   000001 735000                    ALS     1
         4 000107   000013 720105                    LXL0    11,AL,PR0
         4 000110   000000 236010 xsym               LDQ     XSD$ATTR_TBL$,X0
         4 000111   200005 756100                    STQ     ATTR$,,AUTO

      131     9727    2           IF XSD$ATTRIBUTE.FLAGS.RANGE AND

   9727  4 000112   200005 471500                    LDP1    ATTR$,,AUTO
         4 000113   100004 236100                    LDQ     4,,PR1
         4 000114   200000 316003                    CANQ    65536,DU
         4 000115   000141 600000 4                  TZE     s:9735
         4 000116   000014 473505                    LDP3    12,AL,PR0
         4 000117   000100 101500                    MRL     fill='000'O
         4 000120   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         4 000121   200016 000004                    ADSC9   STARTX+1,,AUTO           cn=0,n=4
         4 000122   200016 236100                    LDQ     STARTX+1,,AUTO
         4 000123   100006 116100                    CMPQ    6,,PR1
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:21   
         4 000124   000134 605400 4                  TPNZ    s:9730
         4 000125   000014 473505                    LDP3    12,AL,PR0
         4 000126   000100 101500                    MRL     fill='000'O
         4 000127   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         4 000130   200017 000004                    ADSC9   STARTX+2,,AUTO           cn=0,n=4
         4 000131   200017 236100                    LDQ     STARTX+2,,AUTO
         4 000132   100005 116100                    CMPQ    5,,PR1
         4 000133   000141 605000 4                  TPL     s:9735

      132     9728    2             (XSD$SERVICE.ATTRIBUTE.VALUE$(I)->TEXTH.L > XSD$ATTRIBUTE.UPPERBOUND OR
      133     9729    3             XSD$SERVICE.ATTRIBUTE.VALUE$(I)->TEXTH.L < XSD$ATTRIBUTE.LOWERBOUND) THEN
              9729                      DO;

      134     9730    3                XSD$SERVICE.ERRCODE = E_BADATTRIBUTE;

   9730  4 000134   000000 236000 xsym               LDQ     E_BADATTRIBUTE
         4 000135   000003 756100                    STQ     3,,PR0

      135     9731    3                XSD$SERVICE.ATTR# = I;     /* index value of bad attribute */

   9731  4 000136   200011 235100                    LDA     I,,AUTO
         4 000137   000005 755100                    STA     5,,PR0

      136     9732    3                GOTO RELMEMALT;

   9732  4 000140   001227 710000 4                  TRA     RELMEMALT

      137     9733    3             END;
      138     9734
      139     9735    3           DO CASE(XSD_ATTRKEYX(XSD$SERVICE.ATTRIBUTE.TYPE(I)));

   9735  4 000141   000013 235105                    LDA     11,AL,PR0
         4 000142   000100 101405                    MRL     fill='000'O
         4 000143   000000 000001 xsym               ADSC9   XSD_ATTRKEYX,A           cn=0,n=1
         4 000144   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 000145   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000146   000020 100003                    CMPX0   16,DU
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:22   
         4 000147   000151 602010 4                  TNC     s:9735+8,X0
         4 000150   000633 710000 4                  TRA     s:9792
         4 000151   000633 710000 4                  TRA     s:9792
         4 000152   000633 710000 4                  TRA     s:9792
         4 000153   000171 710000 4                  TRA     s:9737
         4 000154   000211 710000 4                  TRA     s:9740
         4 000155   000231 710000 4                  TRA     s:9743
         4 000156   000260 710000 4                  TRA     s:9747
         4 000157   000306 710000 4                  TRA     s:9751
         4 000160   000334 710000 4                  TRA     s:9755
         4 000161   000362 710000 4                  TRA     s:9759
         4 000162   000410 710000 4                  TRA     s:9763
         4 000163   000436 710000 4                  TRA     s:9767
         4 000164   000464 710000 4                  TRA     s:9771
         4 000165   000512 710000 4                  TRA     s:9775
         4 000166   000540 710000 4                  TRA     s:9779
         4 000167   000566 710000 4                  TRA     s:9783
         4 000170   000614 710000 4                  TRA     s:9787

      140     9736    3            CASE(%XSD_KEYX_ALIASOBJNAME);

      141     9737    3              ADDR(XSD_DIBKEY.ALIASOBJNAME)->CHR1 = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9737                       TEXTH.T;

   9737  4 000171   200011 235100                    LDA     I,,AUTO
         4 000172   000001 735000                    ALS     1
         4 000173   000014 473505                    LDP3    12,AL,PR0
         4 000174   000100 100500                    MLR     fill='000'O
         4 000175   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         4 000176   200016 000004                    ADSC9   STARTX+1,,AUTO           cn=0,n=4
         4 000177   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000200   200006 474500                    LDP4    BUF$,,AUTO
         4 000201   040100 100540                    MLR     fill='040'O
         4 000202   300000 400010                    ADSC9   0,,PR3                   cn=2,n=*X0
         4 000203   400000 200001                    ADSC9   0,,PR4                   cn=1,n=1

      142     9738    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.ALIASOBJNAME);
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:23   

   9738  4 000204   177640 235007                    LDA     65440,DL
         4 000205   200006 236100                    LDQ     BUF$,,AUTO
         4 000206   200000 036007                    ADLQ    65536,DL
         4 000207   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000210   000633 710000 4                  TRA     s:9792

      143     9739    3            CASE(%XSD_KEYX_KNOWINFO);

      144     9740    3             ADDR(XSD_DIBKEY.KNOWINFO)->CHR1 = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->TEXTH.
              9740                       T;

   9740  4 000211   200011 235100                    LDA     I,,AUTO
         4 000212   000001 735000                    ALS     1
         4 000213   000014 473505                    LDP3    12,AL,PR0
         4 000214   000100 100500                    MLR     fill='000'O
         4 000215   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         4 000216   200016 000004                    ADSC9   STARTX+1,,AUTO           cn=0,n=4
         4 000217   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000220   200006 474500                    LDP4    BUF$,,AUTO
         4 000221   040100 100540                    MLR     fill='040'O
         4 000222   300000 400010                    ADSC9   0,,PR3                   cn=2,n=*X0
         4 000223   400000 400001                    ADSC9   0,,PR4                   cn=2,n=1

      145     9741    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.KNOWINFO);

   9741  4 000224   177640 235007                    LDA     65440,DL
         4 000225   200006 236100                    LDQ     BUF$,,AUTO
         4 000226   400000 036007                    ADLQ    -131072,DL
         4 000227   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000230   000633 710000 4                  TRA     s:9792

      146     9742    3            CASE(%XSD_KEYX_COMMONNAME);

      147     9743    3              ADDR(XSD_DIBKEY.COMMONNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9743                       TEXTC.L;

PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:24   
   9743  4 000231   200011 235100                    LDA     I,,AUTO
         4 000232   000001 735000                    ALS     1
         4 000233   000014 473505                    LDP3    12,AL,PR0
         4 000234   200006 474500                    LDP4    BUF$,,AUTO
         4 000235   000100 100500                    MLR     fill='000'O
         4 000236   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000237   400000 600001                    ADSC9   0,,PR4                   cn=3,n=1

      148     9744    3              ADDR(XSD_DIBKEY.COMMONNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9744                       TEXTC.T;

   9744  4 000240   200006 473500                    LDP3    BUF$,,AUTO
         4 000241   300000 721100                    LXL1    0,,PR3
         4 000242   000777 361003                    ANX1    511,DU
         4 000243   000014 474505                    LDP4    12,AL,PR0
         4 000244   000100 101500                    MRL     fill='000'O
         4 000245   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         4 000246   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 000247   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000250   040140 100540                    MLR     fill='040'O
         4 000251   400000 200010                    ADSC9   0,,PR4                   cn=1,n=*X0
         4 000252   300001 000011                    ADSC9   1,,PR3                   cn=0,n=*X1

      149     9745    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.COMMONNAME);

   9745  4 000253   000003 235000 5                  LDA     3
         4 000254   200006 236100                    LDQ     BUF$,,AUTO
         4 000255   600000 036007                    ADLQ    -65536,DL
         4 000256   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000257   000633 710000 4                  TRA     s:9792

      150     9746    3            CASE(%XSD_KEYX_SURNAME);

      151     9747    3              ADDR(XSD_DIBKEY.SURNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9747                       TEXTC.L;

   9747  4 000260   200011 235100                    LDA     I,,AUTO
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:25   
         4 000261   000001 735000                    ALS     1
         4 000262   000014 473505                    LDP3    12,AL,PR0
         4 000263   200006 474500                    LDP4    BUF$,,AUTO
         4 000264   000100 100500                    MLR     fill='000'O
         4 000265   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000266   400020 600001                    ADSC9   16,,PR4                  cn=3,n=1

      152     9748    3              ADDR(XSD_DIBKEY.SURNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9748                       TEXTC.T;

   9748  4 000267   400020 721100                    LXL1    16,,PR4
         4 000270   000777 361003                    ANX1    511,DU
         4 000271   000014 473505                    LDP3    12,AL,PR0
         4 000272   000100 101500                    MRL     fill='000'O
         4 000273   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000274   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 000275   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000276   040140 100540                    MLR     fill='040'O
         4 000277   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 000300   400021 000011                    ADSC9   17,,PR4                  cn=0,n=*X1

      153     9749    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.SURNAME);

   9749  4 000301   000003 235000 5                  LDA     3
         4 000302   200006 236100                    LDQ     BUF$,,AUTO
         4 000303   000004 036000 5                  ADLQ    4
         4 000304   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000305   000633 710000 4                  TRA     s:9792

      154     9750    3            CASE(%XSD_KEYX_SERIAL#);

      155     9751    3              ADDR(XSD_DIBKEY.SERIAL#)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9751                       TEXTC.L;

   9751  4 000306   200011 235100                    LDA     I,,AUTO
         4 000307   000001 735000                    ALS     1
         4 000310   000014 473505                    LDP3    12,AL,PR0
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:26   
         4 000311   200006 474500                    LDP4    BUF$,,AUTO
         4 000312   000100 100500                    MLR     fill='000'O
         4 000313   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000314   400040 600001                    ADSC9   32,,PR4                  cn=3,n=1

      156     9752    3              ADDR(XSD_DIBKEY.SERIAL#)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9752                       TEXTC.T;

   9752  4 000315   400040 721100                    LXL1    32,,PR4
         4 000316   000777 361003                    ANX1    511,DU
         4 000317   000014 473505                    LDP3    12,AL,PR0
         4 000320   000100 101500                    MRL     fill='000'O
         4 000321   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000322   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 000323   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000324   040140 100540                    MLR     fill='040'O
         4 000325   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 000326   400041 000011                    ADSC9   33,,PR4                  cn=0,n=*X1

      157     9753    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.SERIAL#);

   9753  4 000327   000003 235000 5                  LDA     3
         4 000330   200006 236100                    LDQ     BUF$,,AUTO
         4 000331   000005 036000 5                  ADLQ    5
         4 000332   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000333   000633 710000 4                  TRA     s:9792

      158     9754    3            CASE(%XSD_KEYX_COUNTRYNAME);

      159     9755    3             ADDR(XSD_DIBKEY.COUNTRYNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9755                       TEXTC.L;

   9755  4 000334   200011 235100                    LDA     I,,AUTO
         4 000335   000001 735000                    ALS     1
         4 000336   000014 473505                    LDP3    12,AL,PR0
         4 000337   200006 474500                    LDP4    BUF$,,AUTO
         4 000340   000100 100500                    MLR     fill='000'O
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:27   
         4 000341   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000342   400060 600001                    ADSC9   48,,PR4                  cn=3,n=1

      160     9756    3             ADDR(XSD_DIBKEY.COUNTRYNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9756                       TEXTC.T;

   9756  4 000343   400060 721100                    LXL1    48,,PR4
         4 000344   000777 361003                    ANX1    511,DU
         4 000345   000014 473505                    LDP3    12,AL,PR0
         4 000346   000100 101500                    MRL     fill='000'O
         4 000347   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000350   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 000351   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000352   040140 100540                    MLR     fill='040'O
         4 000353   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 000354   400061 000011                    ADSC9   49,,PR4                  cn=0,n=*X1

      161     9757    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.COUNTRYNAME);

   9757  4 000355   377640 235007                    LDA     130976,DL
         4 000356   200006 236100                    LDQ     BUF$,,AUTO
         4 000357   000006 036000 5                  ADLQ    6
         4 000360   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000361   000633 710000 4                  TRA     s:9792

      162     9758    3            CASE(%XSD_KEYX_LOCALITYNAME);

      163     9759    3              ADDR(XSD_DIBKEY.LOCALITYNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)
              9759                       ->TEXTC.L;

   9759  4 000362   200011 235100                    LDA     I,,AUTO
         4 000363   000001 735000                    ALS     1
         4 000364   000014 473505                    LDP3    12,AL,PR0
         4 000365   200006 474500                    LDP4    BUF$,,AUTO
         4 000366   000100 100500                    MLR     fill='000'O
         4 000367   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000370   400061 200001                    ADSC9   49,,PR4                  cn=1,n=1
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:28   

      164     9760    3              ADDR(XSD_DIBKEY.LOCALITYNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)
              9760                       ->TEXTC.T;

   9760  4 000371   400061 221100                    LDX1    49,,PR4
         4 000372   000777 361003                    ANX1    511,DU
         4 000373   000014 473505                    LDP3    12,AL,PR0
         4 000374   000100 101500                    MRL     fill='000'O
         4 000375   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000376   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 000377   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000400   040140 100540                    MLR     fill='040'O
         4 000401   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 000402   400061 400011                    ADSC9   49,,PR4                  cn=2,n=*X1

      165     9761    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.LOCALITYNAME);

   9761  4 000403   000007 235000 5                  LDA     7
         4 000404   200006 236100                    LDQ     BUF$,,AUTO
         4 000405   000010 036000 5                  ADLQ    8
         4 000406   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000407   000633 710000 4                  TRA     s:9792

      166     9762    3            CASE(%XSD_KEYX_STATENAME);

      167     9763    3              ADDR(XSD_DIBKEY.STATENAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9763                       TEXTC.L;

   9763  4 000410   200011 235100                    LDA     I,,AUTO
         4 000411   000001 735000                    ALS     1
         4 000412   000014 473505                    LDP3    12,AL,PR0
         4 000413   200006 474500                    LDP4    BUF$,,AUTO
         4 000414   000100 100500                    MLR     fill='000'O
         4 000415   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000416   400121 200001                    ADSC9   81,,PR4                  cn=1,n=1

      168     9764    3              ADDR(XSD_DIBKEY.STATENAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:29   
              9764                       TEXTC.T;

   9764  4 000417   400121 221100                    LDX1    81,,PR4
         4 000420   000777 361003                    ANX1    511,DU
         4 000421   000014 473505                    LDP3    12,AL,PR0
         4 000422   000100 101500                    MRL     fill='000'O
         4 000423   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000424   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 000425   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000426   040140 100540                    MLR     fill='040'O
         4 000427   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 000430   400121 400011                    ADSC9   81,,PR4                  cn=2,n=*X1

      169     9765    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.STATENAME);

   9765  4 000431   000007 235000 5                  LDA     7
         4 000432   200006 236100                    LDQ     BUF$,,AUTO
         4 000433   000011 036000 5                  ADLQ    9
         4 000434   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000435   000633 710000 4                  TRA     s:9792

      170     9766    3            CASE(%XSD_KEYX_STREETADDR);

      171     9767    3              ADDR(XSD_DIBKEY.STREETADDR)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9767                       TEXTC.L;

   9767  4 000436   200011 235100                    LDA     I,,AUTO
         4 000437   000001 735000                    ALS     1
         4 000440   000014 473505                    LDP3    12,AL,PR0
         4 000441   200006 474500                    LDP4    BUF$,,AUTO
         4 000442   000100 100500                    MLR     fill='000'O
         4 000443   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000444   400161 200001                    ADSC9   113,,PR4                 cn=1,n=1

      172     9768    3              ADDR(XSD_DIBKEY.STREETADDR)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9768                       TEXTC.T;

PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:30   
   9768  4 000445   400161 221100                    LDX1    113,,PR4
         4 000446   000777 361003                    ANX1    511,DU
         4 000447   000014 473505                    LDP3    12,AL,PR0
         4 000450   000100 101500                    MRL     fill='000'O
         4 000451   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000452   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 000453   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000454   040140 100540                    MLR     fill='040'O
         4 000455   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 000456   400161 400011                    ADSC9   113,,PR4                 cn=2,n=*X1

      173     9769    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.STREETADDR);

   9769  4 000457   000007 235000 5                  LDA     7
         4 000460   200006 236100                    LDQ     BUF$,,AUTO
         4 000461   000012 036000 5                  ADLQ    10
         4 000462   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000463   000633 710000 4                  TRA     s:9792

      174     9770    3            CASE(%XSD_KEYX_ORGNAME);

      175     9771    3              ADDR(XSD_DIBKEY.ORGNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9771                       TEXTC.L;

   9771  4 000464   200011 235100                    LDA     I,,AUTO
         4 000465   000001 735000                    ALS     1
         4 000466   000014 473505                    LDP3    12,AL,PR0
         4 000467   200006 474500                    LDP4    BUF$,,AUTO
         4 000470   000100 100500                    MLR     fill='000'O
         4 000471   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000472   400221 200001                    ADSC9   145,,PR4                 cn=1,n=1

      176     9772    3              ADDR(XSD_DIBKEY.ORGNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9772                       TEXTC.T;

   9772  4 000473   400221 221100                    LDX1    145,,PR4
         4 000474   000777 361003                    ANX1    511,DU
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:31   
         4 000475   000014 473505                    LDP3    12,AL,PR0
         4 000476   000100 101500                    MRL     fill='000'O
         4 000477   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000500   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 000501   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000502   040140 100540                    MLR     fill='040'O
         4 000503   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 000504   400221 400011                    ADSC9   145,,PR4                 cn=2,n=*X1

      177     9773    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.ORGNAME);

   9773  4 000505   000003 235000 5                  LDA     3
         4 000506   200006 236100                    LDQ     BUF$,,AUTO
         4 000507   000013 036000 5                  ADLQ    11
         4 000510   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000511   000633 710000 4                  TRA     s:9792

      178     9774    3            CASE(%XSD_KEYX_ORGUNITNAME);

      179     9775    3             ADDR(XSD_DIBKEY.ORGUNITNAME)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9775                       TEXTC.L;

   9775  4 000512   200011 235100                    LDA     I,,AUTO
         4 000513   000001 735000                    ALS     1
         4 000514   000014 473505                    LDP3    12,AL,PR0
         4 000515   200006 474500                    LDP4    BUF$,,AUTO
         4 000516   000100 100500                    MLR     fill='000'O
         4 000517   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000520   400241 200001                    ADSC9   161,,PR4                 cn=1,n=1

      180     9776    3             ADDR(XSD_DIBKEY.ORGUNITNAME)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9776                       TEXTC.T;

   9776  4 000521   400241 221100                    LDX1    161,,PR4
         4 000522   000777 361003                    ANX1    511,DU
         4 000523   000014 473505                    LDP3    12,AL,PR0
         4 000524   000100 101500                    MRL     fill='000'O
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:32   
         4 000525   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000526   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 000527   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000530   040140 100540                    MLR     fill='040'O
         4 000531   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 000532   400241 400011                    ADSC9   161,,PR4                 cn=2,n=*X1

      181     9777    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.ORGUNITNAME);

   9777  4 000533   000003 235000 5                  LDA     3
         4 000534   200006 236100                    LDQ     BUF$,,AUTO
         4 000535   000014 036000 5                  ADLQ    12
         4 000536   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000537   000633 710000 4                  TRA     s:9792

      182     9778    3            CASE(%XSD_KEYX_TITLE);

      183     9779    3             ADDR(XSD_DIBKEY.TITLE)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->TEXTC.
              9779                       L;

   9779  4 000540   200011 235100                    LDA     I,,AUTO
         4 000541   000001 735000                    ALS     1
         4 000542   000014 473505                    LDP3    12,AL,PR0
         4 000543   200006 474500                    LDP4    BUF$,,AUTO
         4 000544   000100 100500                    MLR     fill='000'O
         4 000545   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000546   400261 200001                    ADSC9   177,,PR4                 cn=1,n=1

      184     9780    3             ADDR(XSD_DIBKEY.TITLE)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->TEXTC.
              9780                       T;

   9780  4 000547   400261 221100                    LDX1    177,,PR4
         4 000550   000777 361003                    ANX1    511,DU
         4 000551   000014 473505                    LDP3    12,AL,PR0
         4 000552   000100 101500                    MRL     fill='000'O
         4 000553   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000554   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:33   
         4 000555   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000556   040140 100540                    MLR     fill='040'O
         4 000557   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 000560   400261 400011                    ADSC9   177,,PR4                 cn=2,n=*X1

      185     9781    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.TITLE);

   9781  4 000561   000003 235000 5                  LDA     3
         4 000562   200006 236100                    LDQ     BUF$,,AUTO
         4 000563   000015 036000 5                  ADLQ    13
         4 000564   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000565   000633 710000 4                  TRA     s:9792

      186     9782    3            CASE(%XSD_KEYX_BUSINESSCAT);

      187     9783    3             ADDR(XSD_DIBKEY.BUSINESSCAT)->TEXTC.L = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9783                       TEXTC.L;

   9783  4 000566   200011 235100                    LDA     I,,AUTO
         4 000567   000001 735000                    ALS     1
         4 000570   000014 473505                    LDP3    12,AL,PR0
         4 000571   200006 474500                    LDP4    BUF$,,AUTO
         4 000572   000100 100500                    MLR     fill='000'O
         4 000573   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000574   400301 200001                    ADSC9   193,,PR4                 cn=1,n=1

      188     9784    3             ADDR(XSD_DIBKEY.BUSINESSCAT)->TEXTC.T = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9784                       TEXTC.T;

   9784  4 000575   400301 221100                    LDX1    193,,PR4
         4 000576   000777 361003                    ANX1    511,DU
         4 000577   000014 473505                    LDP3    12,AL,PR0
         4 000600   000100 101500                    MRL     fill='000'O
         4 000601   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         4 000602   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 000603   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000604   040140 100540                    MLR     fill='040'O
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:34   
         4 000605   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         4 000606   400301 400011                    ADSC9   193,,PR4                 cn=2,n=*X1

      189     9785    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.BUSINESSCAT);

   9785  4 000607   000007 235000 5                  LDA     7
         4 000610   200006 236100                    LDQ     BUF$,,AUTO
         4 000611   000016 036000 5                  ADLQ    14
         4 000612   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000613   000633 710000 4                  TRA     s:9792

      190     9786    3            CASE(%XSD_KEYX_OBJECTCLASS);

      191     9787    3              ADDR(XSD_DIBKEY.OBJECTCLASS)->CHR1 = XSD$SERVICE.ATTRIBUTE.VALUE$(I)->
              9787                       TEXTH.T;

   9787  4 000614   200011 235100                    LDA     I,,AUTO
         4 000615   000001 735000                    ALS     1
         4 000616   000014 473505                    LDP3    12,AL,PR0
         4 000617   000100 100500                    MLR     fill='000'O
         4 000620   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         4 000621   200016 000004                    ADSC9   STARTX+1,,AUTO           cn=0,n=4
         4 000622   200016 220100                    LDX0    STARTX+1,,AUTO
         4 000623   200006 474500                    LDP4    BUF$,,AUTO
         4 000624   040100 100540                    MLR     fill='040'O
         4 000625   300000 400010                    ADSC9   0,,PR3                   cn=2,n=*X0
         4 000626   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1

      192     9788    3              IRELPRECORD.KEY_ = VECTOR(XSD_DIBKEY.OBJECTCLASS);

   9788  4 000627   177640 235007                    LDA     65440,DL
         4 000630   200006 236100                    LDQ     BUF$,,AUTO
         4 000631   000036 757000 2                  STAQ    IRELPRECORD+2
         4 000632   000633 710000 4                  TRA     s:9792

      193     9789    3            CASE(ELSE);

PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:35   
      194     9790    3           END;                            /* case i */

      195     9791        /* if the attribute is a key too, then try to do a precord */
      196     9792    3          IF XSD_ATTRKEYX(XSD$SERVICE.ATTRIBUTE.TYPE(I)) <= %XSD_KEYX_MAXKEYX THEN DO;

   9792  4 000633   200011 235100                    LDA     I,,AUTO
         4 000634   000001 735000                    ALS     1
         4 000635   000013 235105                    LDA     11,AL,PR0
         4 000636   000100 101405                    MRL     fill='000'O
         4 000637   000000 000001 xsym               ADSC9   XSD_ATTRKEYX,A           cn=0,n=1
         4 000640   200016 000004                    ADSC9   STARTX+1,,AUTO           cn=0,n=4
         4 000641   200016 236100                    LDQ     STARTX+1,,AUTO
         4 000642   000020 116007                    CMPQ    16,DL
         4 000643   000671 605000 4                  TPL     s:9799

      197     9793    3                KEYS(XSD_ATTRKEYX(XSD$SERVICE.ATTRIBUTE.TYPE(I))) = '1'B;

   9793  4 000644   200011 235100                    LDA     I,,AUTO
         4 000645   000001 735000                    ALS     1
         4 000646   000013 235105                    LDA     11,AL,PR0
         4 000647   000100 101405                    MRL     fill='000'O
         4 000650   000000 000001 xsym               ADSC9   XSD_ATTRKEYX,A           cn=0,n=1
         4 000651   200016 000004                    ADSC9   STARTX+1,,AUTO           cn=0,n=4
         4 000652   200016 236100                    LDQ     STARTX+1,,AUTO
         4 000653   003106 060400                    CSL     bolr='003'O
         4 000654   000017 000001 5                  BDSC    15                       by=0,bit=0,n=1
         4 000655   200012 000001                    BDSC    KEYS,Q,AUTO              by=0,bit=0,n=1

      198     9794    3                IRELPRECORD.V.INDX# = XSD_ATTRKEYX(XSD$SERVICE.ATTRIBUTE.TYPE(I));

   9794  4 000656   200011 235100                    LDA     I,,AUTO
         4 000657   000001 735000                    ALS     1
         4 000660   000013 235105                    LDA     11,AL,PR0
         4 000661   000000 100405                    MLR     fill='000'O
         4 000662   000000 000001 xsym               ADSC9   XSD_ATTRKEYX,A           cn=0,n=1
         4 000663   000042 600001 2                  ADSC9   IRELPRECORD+6            cn=3,n=1

PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:36   
      199     9795    4                CALL M$PRECORD(IRELPRECORD) WHENRETURN DO;

   9795  4 000664   000034 630400 2                  EPPR0   IRELPRECORD
         4 000665   440003 713400                    CLIMB   alt,+16387
         4 000666   401000 401760                    pmme    nvectors=3
         4 000667   000671 702000 4                  TSX2    s:9799

      200     9796    4                     GOTO FOUNDONE;

   9796  4 000670   000706 710000 4                  TRA     FOUNDONE

      201     9797    4                  END;                     /* return on precord */
      202     9798    3             END;

      203     9799    2           I = I + 1;

   9799  4 000671   200011 235100                    LDA     I,,AUTO
         4 000672   000001 035007                    ADLA    1,DL
         4 000673   200011 755100                    STA     I,,AUTO

      204     9800    2        END;                               /* do while i < attr# */

   9800  4 000674   200003 470500                    LDP0    @XSD$SERVICE,,AUTO
         4 000675   000005 236100                    LDQ     5,,PR0
         4 000676   200011 116100                    CMPQ    I,,AUTO
         4 000677   000072 603000 4                  TRC     s:9720

      205     9801
      206     9802    2        IF KEYS = '0'B THEN DO;

   9802  4 000700   200012 236100                    LDQ     KEYS,,AUTO
         4 000701   777770 316003                    CANQ    -8,DU
         4 000702   000706 601000 4                  TNZ     FOUNDONE

      207     9803    2             XSD$SERVICE.ERRCODE = E_INVATTRLIST;

   9803  4 000703   000000 236000 1                  LDQ     E_INVATTRLIST
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:37   
         4 000704   000003 756100                    STQ     3,,PR0

      208     9804    2             GOTO RELMEMALT;

   9804  4 000705   001227 710000 4                  TRA     RELMEMALT

   9802  4 000706                       FOUNDONE     null
      209     9805    2          END;
      210     9806
      211     9807    1   FOUNDONE:;
      212     9808    2        DO I = 0 TO VLR_ID.COUNT# - 1;

   9808  4 000706   200011 450100                    STZ     I,,AUTO
         4 000707   001224 710000 4                  TRA     NEXTREAD+3

      213     9809    2           VLP_ID.ID# = VLR_ID.ID#(I);

   9809  4 000710   200011 720100                    LXL0    I,,AUTO
         4 000711   000001 235010 xsym               LDA     VLR_ID+1,X0
         4 000712   000047 755000 2                  STA     VLP_ID+1

      214     9810    2           IRELREAD_IDS.KEY_ = IRELPRECORD.KEY_;

   9810  4 000713   000036 237000 2                  LDAQ    IRELPRECORD+2
         4 000714   000020 757000 2                  STAQ    IRELREAD_IDS+2

      215     9811    2           IRELREAD_IDS.V.INDX# = IRELPRECORD.V.INDX#;

   9811  4 000715   000042 236000 2                  LDQ     IRELPRECORD+6
         4 000716   000026 552004 2                  STBQ    IRELREAD_IDS+8,'04'O

      216     9812    3           CALL M$READ(IRELREAD_IDS) WHENRETURN DO;

   9812  4 000717   000016 630400 2                  EPPR0   IRELREAD_IDS
         4 000720   440000 713400                    CLIMB   alt,read
         4 000721   401400 401760                    pmme    nvectors=4
         4 000722   001221 702000 4                  TSX2    NEXTREAD
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:38   

      217     9813    3                STARTX = DCBADDR(DCBNUM(M$DIB))->F$DCB.STARTX;

   9813  4 000723   000000 236007 xsym               LDQ     M$DIB,DL
         4 000724   000020 470400 5                  LDP0    16
         4 000725   000000 471500                    LDP1    0,,PR0
         4 000726   100000 473506                    LDP3    0,QL,PR1
         4 000727   300057 236100                    LDQ     47,,PR3
         4 000730   000022 772000                    QRL     18
         4 000731   200015 756100                    STQ     STARTX,,AUTO

      218     9814    3                J = 0;

   9814  4 000732   200013 450100                    STZ     J,,AUTO

      219     9815    4                DO WHILE J <= XSD$SERVICE.ATTR#;

   9815  4 000733   200003 473500                    LDP3    @XSD$SERVICE,,AUTO
         4 000734   300005 236100                    LDQ     5,,PR3
         4 000735   200013 116100                    CMPQ    J,,AUTO
         4 000736   001067 602000 4                  TNC     s:9883

      220     9816    5                   IF XSD$SERVICE.ATTRIBUTE.TYPE(J) > %XSD_AT_MAXATTR THEN DO;

   9816  4 000737   200013 235100                    LDA     J,,AUTO
         4 000740   000001 735000                    ALS     1
         4 000741   200003 470500                    LDP0    @XSD$SERVICE,,AUTO
         4 000742   000013 235105                    LDA     11,AL,PR0
         4 000743   000052 115007                    CMPA    42,DL
         4 000744   000752 602000 4                  TNC     s:9822

      221     9817    5                        XSD$SERVICE.ERRCODE = E_BADATTRIBUTE;

   9817  4 000745   000000 236000 xsym               LDQ     E_BADATTRIBUTE
         4 000746   000003 756100                    STQ     3,,PR0

      222     9818    5                        XSD$SERVICE.ATTR# = J;
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:39   

   9818  4 000747   200013 235100                    LDA     J,,AUTO
         4 000750   000005 755100                    STA     5,,PR0

      223     9819    5                        GOTO RELMEMALT;

   9819  4 000751   001227 710000 4                  TRA     RELMEMALT

      224     9820    5                     END;
      225     9821
      226     9822    4                   ATTR$ = XSD$ATTR_TBL$(XSD$SERVICE.ATTRIBUTE.TYPE(J));

   9822  4 000752   200013 235100                    LDA     J,,AUTO
         4 000753   000001 735000                    ALS     1
         4 000754   000013 720105                    LXL0    11,AL,PR0
         4 000755   000000 236010 xsym               LDQ     XSD$ATTR_TBL$,X0
         4 000756   200005 756100                    STQ     ATTR$,,AUTO

      227     9823    4                   IF XSD$ATTRIBUTE.FLAGS.RANGE AND

   9823  4 000757   200005 471500                    LDP1    ATTR$,,AUTO
         4 000760   100004 236100                    LDQ     4,,PR1
         4 000761   200000 316003                    CANQ    65536,DU
         4 000762   001005 600000 4                  TZE     s:9829
         4 000763   000014 473505                    LDP3    12,AL,PR0
         4 000764   000100 101500                    MRL     fill='000'O
         4 000765   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         4 000766   200016 000004                    ADSC9   STARTX+1,,AUTO           cn=0,n=4
         4 000767   200016 236100                    LDQ     STARTX+1,,AUTO
         4 000770   100006 116100                    CMPQ    6,,PR1
         4 000771   001001 605400 4                  TPNZ    s:9826
         4 000772   000014 473505                    LDP3    12,AL,PR0
         4 000773   000100 101500                    MRL     fill='000'O
         4 000774   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         4 000775   200017 000004                    ADSC9   STARTX+2,,AUTO           cn=0,n=4
         4 000776   200017 236100                    LDQ     STARTX+2,,AUTO
         4 000777   100005 116100                    CMPQ    5,,PR1
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:40   
         4 001000   001005 605000 4                  TPL     s:9829

      228     9824    4                     (XSD$SERVICE.ATTRIBUTE.VALUE$(J)->TEXTH.L > XSD$ATTRIBUTE.
              9824                              UPPERBOUND OR
      229     9825    5                     XSD$SERVICE.ATTRIBUTE.VALUE$(J)->TEXTH.L < XSD$ATTRIBUTE.
              9825                              LOWERBOUND) THEN DO;

      230     9826    5                        XSD$SERVICE.ERRCODE = E_BADATTRIBUTE;

   9826  4 001001   000000 236000 xsym               LDQ     E_BADATTRIBUTE
         4 001002   000003 756100                    STQ     3,,PR0

      231     9827    5                        XSD$SERVICE.ATTR# = J; /* index value of bad attribute */

   9827  4 001003   200013 235100                    LDA     J,,AUTO
         4 001004   000005 755100                    STA     5,,PR0

      232     9828    5                     END;

      233     9829    5                   DO CASE(XSD$SERVICE.ATTRIBUTE.TYPE(J));

   9829  4 001005   200013 235100                    LDA     J,,AUTO
         4 001006   000001 735000                    ALS     1
         4 001007   000013 235105                    LDA     11,AL,PR0
         4 001010   000004 115007                    CMPA    4,DL
         4 001011   001013 602005 4                  TNC     s:9829+6,AL
         4 001012   001061 710000 4                  TRA     s:9877
         4 001013   001061 710000 4                  TRA     s:9877
         4 001014   001061 710000 4                  TRA     s:9877
         4 001015   001061 710000 4                  TRA     s:9877
         4 001016   001017 710000 4                  TRA     s:9834

      234     9830    5                    CASE(%XSD_AT_OBJECTCLASS);

      235     9831    5                    CASE(%XSD_AT_ALIASOBJNAME);

      236     9832    5                    CASE(%XSD_AT_KNOWINFO);
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:41   

      237     9833    5                    CASE(%XSD_AT_COMMONNAME);

      238     9834    5                      FIELD$= PINCRB(ADDR(XSD_DIBBUF),

   9834  4 001017   000000 473400 xsym               LDP3    B$ROSEG$
         4 001020   200015 720100                    LXL0    STARTX,,AUTO
         4 001021   300004 236110                    LDQ     4,X0,PR3
         4 001022   200006 474500                    LDP4    BUF$,,AUTO
         4 001023   001025 605000 4                  TPL     s:9834+6
         4 001024   000044 036003                    ADLQ    36,DU
         4 001025   400000 503506                    ABD     0,QL,PR4
         4 001026   200010 454500                    STP4    FIELD$,,AUTO

      239     9835    5                        PINCRW(B$ROSEG$,STARTX)->FM$FIELD_START.OFFSET(%
              9835                                 XSD_RECX_COMMONNAME));
      240     9836    5                     IF XSD$SERVICE.ATTRIBUTE.VALUE$(J)->TEXTC.L ~= FIELD$->TEXTC.L OR

   9836  4 001027   200013 235100                    LDA     J,,AUTO
         4 001030   000001 735000                    ALS     1
         4 001031   000014 475505                    LDP5    12,AL,PR0
         4 001032   000100 101500                    MRL     fill='000'O
         4 001033   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         4 001034   200016 000004                    ADSC9   STARTX+1,,AUTO           cn=0,n=4
         4 001035   000100 101500                    MRL     fill='000'O
         4 001036   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         4 001037   200017 000004                    ADSC9   STARTX+2,,AUTO           cn=0,n=4
         4 001040   200017 236100                    LDQ     STARTX+2,,AUTO
         4 001041   200016 116100                    CMPQ    STARTX+1,,AUTO
         4 001042   001221 601000 4                  TNZ     NEXTREAD
         4 001043   000014 475505                    LDP5    12,AL,PR0
         4 001044   000100 101500                    MRL     fill='000'O
         4 001045   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         4 001046   200020 000002                    ADSC9   STARTX+3,,AUTO           cn=0,n=2
         4 001047   200020 221100                    LDX1    STARTX+3,,AUTO
         4 001050   000100 101500                    MRL     fill='000'O
         4 001051   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:42   
         4 001052   200021 000002                    ADSC9   STARTX+4,,AUTO           cn=0,n=2
         4 001053   200021 222100                    LDX2    STARTX+4,,AUTO
         4 001054   040140 106540                    CMPC    fill='040'O
         4 001055   500000 200011                    ADSC9   0,,PR5                   cn=1,n=*X1
         4 001056   400000 200012                    ADSC9   0,,PR4                   cn=1,n=*X2
         4 001057   001221 601000 4                  TNZ     NEXTREAD
         4 001060   001061 710000 4                  TRA     s:9877

      241     9837    5                        XSD$SERVICE.ATTRIBUTE.VALUE$(J)->TEXTC.T ~= FIELD$->TEXTC.T
              9837                                 THEN
      242     9838    5                         GOTO NEXTREAD;
      243     9839    5                    CASE(%XSD_AT_SURNAME);

      244     9840    5                    CASE(%XSD_AT_SERIAL#);

      245     9841    5                    CASE(%XSD_AT_COUNTRYNAME);

      246     9842    5                    CASE(%XSD_AT_LOCALITYNAME);

      247     9843    5                    CASE(%XSD_AT_STATENAME);

      248     9844    5                    CASE(%XSD_AT_STREETADDR);

      249     9845    5                    CASE(%XSD_AT_ORGNAME);

      250     9846    5                    CASE(%XSD_AT_ORGUNITNAME);

      251     9847    5                    CASE(%XSD_AT_TITLE);

      252     9848    5                    CASE(%XSD_AT_DESC);

      253     9849    5                    CASE(%XSD_AT_SEARCHGUIDE);

      254     9850    5                    CASE(%XSD_AT_BUSINESSCAT);

      255     9851    5                    CASE(%XSD_AT_POSTALADDR);

PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:43   
      256     9852    5                    CASE(%XSD_AT_POSTALCODE);

      257     9853    5                    CASE(%XSD_AT_POBOX);

      258     9854    5                    CASE(%XSD_AT_PDON);

      259     9855    5                    CASE(%XSD_AT_TELEPHONE#);

      260     9856    5                    CASE(%XSD_AT_TELEX#);

      261     9857    5                    CASE(%XSD_AT_TELTEXTERMID);

      262     9858    5                    CASE(%XSD_AT_FAXTELEPHONE#);

      263     9859    5                    CASE(%XSD_AT_X121ADDR);

      264     9860    5                    CASE(%XSD_AT_INTISDN#);

      265     9861    5                    CASE(%XSD_AT_REGADDR);

      266     9862    5                    CASE(%XSD_AT_DESTIND);

      267     9863    5                    CASE(%XSD_AT_PDM);

      268     9864    5                    CASE(%XSD_AT_PRESADDR);

      269     9865    5                    CASE(%XSD_AT_SAC);

      270     9866    5                    CASE(%XSD_AT_MEMBER);

      271     9867    5                    CASE(%XSD_AT_OWNER);

      272     9868    5                    CASE(%XSD_AT_ROLEOCCUPANT);

      273     9869    5                    CASE(%XSD_AT_SEEALSO);

      274     9870    5                    CASE(%XSD_AT_USERPASS);
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:44   

      275     9871    5                    CASE(%XSD_AT_USERCERT);

      276     9872    5                    CASE(%XSD_AT_CACERT);

      277     9873    5                    CASE(%XSD_AT_ARL);

      278     9874    5                    CASE(%XSD_AT_CRL);

      279     9875    5                    CASE(%XSD_AT_CROSSCERT);

      280     9876    5                   END;                    /*  do case */

      281     9877    4                   J = J + 1;

   9877  4 001061   200013 235100                    LDA     J,,AUTO
         4 001062   000001 035007                    ADLA    1,DL
         4 001063   200013 755100                    STA     J,,AUTO

      282     9878    4                END;                       /* do while j */

   9878  4 001064   000005 236100                    LDQ     5,,PR0
         4 001065   200013 116100                    CMPQ    J,,AUTO
         4 001066   000737 603000 4                  TRC     s:9816

      283     9879             /*
      284     9880                found the perfect match.  fill in the result field and return to the
      285     9881                user
      286     9882             */
      287     9883    3                ATTR$ = VBASE(XSD$SERVICE.RESULT_);

   9883  4 001067   200003 470500                    LDP0    @XSD$SERVICE,,AUTO
         4 001070   000007 236100                    LDQ     7,,PR0
         4 001071   200005 756100                    STQ     ATTR$,,AUTO

      288     9884    3               CALL XSD$LOCFIELD(XSD_DIBBUF,J,%XSD_RECX_PSELECTOR,LENGTHC(XSD_DIBBUF))
              9884                         ;
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:45   

   9884  4 001072   000026 237000 5                  LDAQ    22
         4 001073   200020 757100                    STAQ    STARTX+3,,AUTO
         4 001074   200013 631500                    EPPR1   J,,AUTO
         4 001075   200017 451500                    STP1    STARTX+2,,AUTO
         4 001076   200006 236100                    LDQ     BUF$,,AUTO
         4 001077   200016 756100                    STQ     STARTX+1,,AUTO
         4 001100   200016 630500                    EPPR0   STARTX+1,,AUTO
         4 001101   000022 631400 5                  EPPR1   18
         4 001102   000000 701000 xent               TSX1    XSD$LOCFIELD
         4 001103   000000 011000                    NOP     0

      289     9885    3                ADDRESS.PSAP = PINCRC(ADDR(XSD_DIBBUF),J)->TEXTC;

   9885  4 001104   200006 470500                    LDP0    BUF$,,AUTO
         4 001105   200013 235100                    LDA     J,,AUTO
         4 001106   000100 101505                    MRL     fill='000'O
         4 001107   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         4 001110   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 001111   200016 220100                    LDX0    STARTX+1,,AUTO
         4 001112   000001 621010                    EAX1    1,X0
         4 001113   200005 471500                    LDP1    ATTR$,,AUTO
         4 001114   000100 100545                    MLR     fill='000'O
         4 001115   000000 000011                    ADSC9   0,A,PR0                  cn=0,n=*X1
         4 001116   100000 000341                    ADSC9   0,,PR1                   cn=0,n=225

      290     9886    3               CALL XSD$LOCFIELD(XSD_DIBBUF,J,%XSD_RECX_SSELECTOR,LENGTHC(XSD_DIBBUF))
              9886                         ;

   9886  4 001117   000030 237000 5                  LDAQ    24
         4 001120   200020 757100                    STAQ    STARTX+3,,AUTO
         4 001121   200013 630500                    EPPR0   J,,AUTO
         4 001122   200017 450500                    STP0    STARTX+2,,AUTO
         4 001123   200006 236100                    LDQ     BUF$,,AUTO
         4 001124   200016 756100                    STQ     STARTX+1,,AUTO
         4 001125   200016 630500                    EPPR0   STARTX+1,,AUTO
         4 001126   000022 631400 5                  EPPR1   18
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:46   
         4 001127   000000 701000 xent               TSX1    XSD$LOCFIELD
         4 001130   000000 011000                    NOP     0

      291     9887    3                ADDRESS.SSAP = PINCRC(ADDR(XSD_DIBBUF),J)->TEXTC;

   9887  4 001131   200006 470500                    LDP0    BUF$,,AUTO
         4 001132   200013 235100                    LDA     J,,AUTO
         4 001133   000100 101505                    MRL     fill='000'O
         4 001134   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         4 001135   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 001136   200016 220100                    LDX0    STARTX+1,,AUTO
         4 001137   000001 621010                    EAX1    1,X0
         4 001140   200005 471500                    LDP1    ATTR$,,AUTO
         4 001141   000100 100545                    MLR     fill='000'O
         4 001142   000000 000011                    ADSC9   0,A,PR0                  cn=0,n=*X1
         4 001143   100070 200021                    ADSC9   56,,PR1                  cn=1,n=17

      292     9888    3               CALL XSD$LOCFIELD(XSD_DIBBUF,J,%XSD_RECX_TSELECTOR,LENGTHC(XSD_DIBBUF))
              9888                         ;

   9888  4 001144   000034 237000 5                  LDAQ    28
         4 001145   200020 757100                    STAQ    STARTX+3,,AUTO
         4 001146   200013 633500                    EPPR3   J,,AUTO
         4 001147   200017 453500                    STP3    STARTX+2,,AUTO
         4 001150   200006 236100                    LDQ     BUF$,,AUTO
         4 001151   200016 756100                    STQ     STARTX+1,,AUTO
         4 001152   200016 630500                    EPPR0   STARTX+1,,AUTO
         4 001153   000022 631400 5                  EPPR1   18
         4 001154   000000 701000 xent               TSX1    XSD$LOCFIELD
         4 001155   000000 011000                    NOP     0

      293     9889    3                ADDRESS.TSAP.LEN = PINCRC(ADDR(XSD_DIBBUF),J)->TEXTC.L;

   9889  4 001156   200006 470500                    LDP0    BUF$,,AUTO
         4 001157   200013 235100                    LDA     J,,AUTO
         4 001160   200005 471500                    LDP1    ATTR$,,AUTO
         4 001161   000100 101505                    MRL     fill='000'O
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:47   
         4 001162   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         4 001163   100075 000002                    ADSC9   61,,PR1                  cn=0,n=2

      294     9890    3                ADDRESS.TSAP.TSAP = PINCRC(ADDR(XSD_DIBBUF),J)->TEXTC.T;

   9890  4 001164   000100 101505                    MRL     fill='000'O
         4 001165   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         4 001166   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 001167   200016 220100                    LDX0    STARTX+1,,AUTO
         4 001170   040100 100545                    MLR     fill='040'O
         4 001171   000000 200010                    ADSC9   0,A,PR0                  cn=1,n=*X0
         4 001172   100075 400040                    ADSC9   61,,PR1                  cn=2,n=32

      295     9891    3                CALL XSD$LOCFIELD(XSD_DIBBUF,J,%XSD_RECX_NSAP,LENGTHC(XSD_DIBBUF));

   9891  4 001173   000036 237000 5                  LDAQ    30
         4 001174   200020 757100                    STAQ    STARTX+3,,AUTO
         4 001175   200013 633500                    EPPR3   J,,AUTO
         4 001176   200017 453500                    STP3    STARTX+2,,AUTO
         4 001177   200006 236100                    LDQ     BUF$,,AUTO
         4 001200   200016 756100                    STQ     STARTX+1,,AUTO
         4 001201   200016 630500                    EPPR0   STARTX+1,,AUTO
         4 001202   000022 631400 5                  EPPR1   18
         4 001203   000000 701000 xent               TSX1    XSD$LOCFIELD
         4 001204   000000 011000                    NOP     0

      296     9892    3                ADDRESS.NSAP = PINCRC(ADDR(XSD_DIBBUF),J)->TEXTC;

   9892  4 001205   200006 470500                    LDP0    BUF$,,AUTO
         4 001206   200013 235100                    LDA     J,,AUTO
         4 001207   000100 101505                    MRL     fill='000'O
         4 001210   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         4 001211   200016 000002                    ADSC9   STARTX+1,,AUTO           cn=0,n=2
         4 001212   200016 220100                    LDX0    STARTX+1,,AUTO
         4 001213   000001 621010                    EAX1    1,X0
         4 001214   200005 471500                    LDP1    ATTR$,,AUTO
         4 001215   000100 100545                    MLR     fill='000'O
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:48   
         4 001216   000000 000011                    ADSC9   0,A,PR0                  cn=0,n=*X1
         4 001217   100106 000026                    ADSC9   70,,PR1                  cn=0,n=22

      297     9893
      298     9894    3                GOTO RELMEM;

   9894  4 001220   001231 710000 4                  TRA     RELMEM

      299     9895    3             END;                          /* return m$read */
      300     9896    3           WHENALTRETURN DO;               /* m$read(irelread_ids)*/

      301     9897             /* what gives? */
      302     9898    3             END;                          /* whenaltreturn(irelread_ids)*/

   9890  4 001221                       NEXTREAD     null
      303     9899    2   NEXTREAD:;
      304     9900    2        END;                               /* do i to vlr_id.count# */

   9900  4 001221   200011 235100                    LDA     I,,AUTO
         4 001222   000001 035007                    ADLA    1,DL
         4 001223   200011 755100                    STA     I,,AUTO
         4 001224   200011 236100                    LDQ     I,,AUTO
         4 001225   000000 116000 xsym               CMPQ    VLR_ID
         4 001226   000710 602000 4                  TNC     s:9809

   9892  4 001227                       RELMEMALT    null
      305     9901
      306     9902    1   RELMEMALT:;                             /* release memory and altreturn */
      307     9903    1        ALT = '1'B;

   9903  4 001227   400000 236003                    LDQ     -131072,DU
         4 001230   200004 756100                    STQ     ALT,,AUTO

   9903  4 001231                       RELMEM       null
      308     9904    1   RELMEM:;                                /* release memory and return */
      309     9905    1        CALL XSS$RELMEM(BUFX);

PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:49   
   9905  4 001231   200007 630500                    EPPR0   BUFX,,AUTO
         4 001232   200016 450500                    STP0    STARTX+1,,AUTO
         4 001233   200016 630500                    EPPR0   STARTX+1,,AUTO
         4 001234   000040 631400 5                  EPPR1   32
         4 001235   000000 701000 xent               TSX1    XSS$RELMEM
         4 001236   000000 011000                    NOP     0

      310     9906    1        IF ALT THEN ALTRETURN;

   9906  4 001237   200004 234100                    SZN     ALT,,AUTO
         4 001240   001242 605000 4                  TPL     s:9907

   9906  4 001241   000000 702200 xent               TSX2  ! X66_AALT

      311     9907    1   END XSD$READ;

   9907  4 001242   000000 702200 xent               TSX2  ! X66_ARET

E_INVATTRLIST
 Sect OctLoc
   1     000   302304 000160                                                    ...p

XSD_DIBKEY_C
 Sect OctLoc
   1     001   000000 000040   040040 040040   040040 040040   040040 040040    ...
   1     005   040040 040040   040040 040040   040040 040040   040040 040040
   1     351*  040040 040040

IRELREAD
 Sect OctLoc
   2     000   000005 777640   000010 006000   000000 177640   000000 006014    ................
   2     004   000000 177640   000000 006014   000001 777640   000046 006000    .............&..
   2     010   000000 740000   000000 000000   000000 000000   000000 000000    ................
   2     014   000000 000000   000000 000000                                    ........

IRELREAD_IDS
 Sect OctLoc
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:50   
   2     016   000005 777640   000026 006000   000000 177640   000000 006014    ................
   2     022   000000 177640   000000 006014   000001 777640   000046 006000    .............&..
   2     026   000000 644000   000000 000000   000000 000000   000000 000000    ................
   2     032   000000 000000   000000 000000                                    ........

IRELPRECORD
 Sect OctLoc
   2     034   000003 777640   000042 006000   000000 177640   000000 006014    ....."..........
   2     040   000311 777640   000000 006000   000000 401000   000000 000000    ................
   2     044   000000 000000   0***** ******                                    ........

VLP_ID
 Sect OctLoc
   2     046   000000 000001   000000 000000                                    ........

(unnamed)
 Sect OctLoc
   5     000   000003 000000   000000 006000   000007 777777   000017 777640    ................
   5     004   000020 600000   000040 600000   000060 600000   000037 777640    ..... ...0......
   5     010   000061 200000   000121 200000   000161 200000   000221 200000    .1...Q...q......
   5     014   000241 200000   000261 200000   000301 200000   400000 000000    ................
   5     020   000000 006003   000000 006014   000004 000000   000000 000050    ...............(
   5     024   000000 001654   000000 000051   000023 006000   000024 006000    .......)........
   5     030   000025 006000   000024 006000   000000 000052   000000 000053    ...........*...+
   5     034   000032 006000   000024 006000   000033 006000   000024 006000    ................
   5     040   000001 000000                                                    ....
      312     9908        %EOD;

PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:51   
--  Include file information  --

   FM_FIELD_C.:LIB_E05  is referenced.
   FM$FIT.:LIB_E05  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   XSD_PERR_C.:XSA1TOU  is referenced.
   XSD_MACRO_M.:XSA1TOU  is referenced.
   XSD_SUBS_C.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSD$READ.
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:52   

 **** Variables and constants ****

  ****  Section 001 RoData XSD$READ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_INVATTRLIST              1-0-0/w STRC(8388)  r     1 XSD_DIBKEY_C

  ****  Section 002  Data  XSD$READ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    34-0-0/d STRC(360)   r     1 IRELPRECORD                0-0-0/d STRC(504)   r     1 IRELREAD
    16-0-0/d STRC(504)   r     1 IRELREAD_IDS              46-0-0/d STRC(72)    r     1 VLP_ID

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @XSD$SERVICE               4-0-0/b BIT         r     1 ALT
     5-0-0/w PTR         r     1 ATTR$                      6-0-0/w PTR         r     1 BUF$
     7-0-0/h SBIN(18)    r     1 BUFX                      10-0-0/w PTR         r     1 FIELD$
    11-0-0/w UBIN        r     1 I                         13-0-0/w UBIN        r     1 J
    12-0-0/b BIT         r     1 KEYS(0:14)                14-0-0/w UBIN        r     1 SIZE
    15-0-0/w UBIN        r     1 STARTX                    *0-0-0/d STRC(468)   r     1 XSD$SERVICE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$ROSEG$                   0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 CODE18$                    0-0-0/w PTR         r     1 CODE19$
     0-0-0/w PTR         r     1 CODE21$                    0-0-0/w STRC        r     1 E_BADATTRIBUTE
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:53   
     0-0-0/w STRC        r     1 E_NOMEM                    0-0-0/d STRC(7236)  r     1 VLR_ID
     0-0-0/w PTR         r     1 XSD$ATTR_TBL$(0:41)
     0-0-0/c UBIN(9)     r     1 XSD_ATTRKEYX(0:40)
     0-0-0/w UBIN        r     1 XSD_DS_OPENDIB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2718)  r     1 ADDRESS                    0-0-0/c ACHR        r     1 BUFFER
     0-0-0/c CHAR        r     1 CHR1                       0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(72)    r     1 FM$FIELD_START             0-0-0N  NULL        r     1 M$DIB
     0-0-0/c ASTR(9)     r     1 TEXTC                      0-0-0/c ASTR(18)    r     1 TEXTH
     0-0-0/w STRC(2628)  r     1 XSD$ATTRIBUTE              0-0-0/w STRC(8460)  r     1 XSD_DIBBUF
     0-0-0/w STRC(8388)  r     1 XSD_DIBKEY


   Procedure XSD$READ requires 675 words for executable code.
   Procedure XSD$READ requires 18 words of local(AUTO) storage.
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:54   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:55   
          MINI XREF LISTING

ADDRESS.NSAP
      8714**DCL      9892<<ASSIGN
ADDRESS.NSAP.ADDRESS_N
      8744**DCL      8745--REDEF
ADDRESS.PSAP
      8520**DCL      9885<<ASSIGN
ADDRESS.SSAP
      8583**DCL      9887<<ASSIGN
ADDRESS.TSAP.LEN
      8642**DCL      9889<<ASSIGN
ADDRESS.TSAP.TSAP
      8650**DCL      9890<<ASSIGN
ALT
      8749**DCL      9699<<ASSIGN   9903<<ASSIGN   9906>>IF
ATTR$
      8750**DCL      8483--IMP-PTR  9173--IMP-PTR  9726<<ASSIGN   9727>>IF       9727>>IF       9727>>IF
      9822<<ASSIGN   9823>>IF       9823>>IF       9823>>IF       9883<<ASSIGN   9885>>ASSIGN   9887>>ASSIGN
      9889>>ASSIGN   9890>>ASSIGN   9892>>ASSIGN
B$ALT.CODE
      8754**DCL      8754--REDEF    8755--REDEF    8755--REDEF
B$ALT.ERR.ERR#
      8756**DCL      8756--REDEF
B$ALT.EVID
      8755**DCL      8755--REDEF    8755--REDEF
B$ROSEG$
      8765**DCL      9834>>ASSIGN
B$TCB$
      8764**DCL      8761--IMP-PTR
BUF$
      8766**DCL      8768--IMP-PTR  9573--IMP-PTR  9609--IMP-PTR  9700<>CALL     9705>>ASSIGN   9706>>ASSIGN
      9707>>ASSIGN   9708>>ASSIGN   9709>>ASSIGN   9712>>ASSIGN   9737>>ASSIGN   9738>>ASSIGN   9740>>ASSIGN
      9741>>ASSIGN   9743>>ASSIGN   9744>>ASSIGN   9744>>ASSIGN   9745>>ASSIGN   9747>>ASSIGN   9748>>ASSIGN
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:56   
      9748>>ASSIGN   9749>>ASSIGN   9751>>ASSIGN   9752>>ASSIGN   9752>>ASSIGN   9753>>ASSIGN   9755>>ASSIGN
      9756>>ASSIGN   9756>>ASSIGN   9757>>ASSIGN   9759>>ASSIGN   9760>>ASSIGN   9760>>ASSIGN   9761>>ASSIGN
      9763>>ASSIGN   9764>>ASSIGN   9764>>ASSIGN   9765>>ASSIGN   9767>>ASSIGN   9768>>ASSIGN   9768>>ASSIGN
      9769>>ASSIGN   9771>>ASSIGN   9772>>ASSIGN   9772>>ASSIGN   9773>>ASSIGN   9775>>ASSIGN   9776>>ASSIGN
      9776>>ASSIGN   9777>>ASSIGN   9779>>ASSIGN   9780>>ASSIGN   9780>>ASSIGN   9781>>ASSIGN   9783>>ASSIGN
      9784>>ASSIGN   9784>>ASSIGN   9785>>ASSIGN   9787>>ASSIGN   9788>>ASSIGN   9834>>ASSIGN   9884>>CALL
      9885>>ASSIGN   9885>>ASSIGN   9886>>CALL     9887>>ASSIGN   9887>>ASSIGN   9888>>CALL     9889>>ASSIGN
      9890>>ASSIGN   9890>>ASSIGN   9891>>CALL     9892>>ASSIGN   9892>>ASSIGN
BUFFER
      8768**DCL      9705--ASSIGN   9706--ASSIGN   9707--ASSIGN   9708--ASSIGN   9709--ASSIGN
BUFX
      8767**DCL      9698<<ASSIGN   9700<>CALL     9905<>CALL
CHR1
      8770**DCL      9737<<ASSIGN   9740<<ASSIGN   9787<<ASSIGN
CODE18.DECFIELD
      8775**DCL      8776--REDEF
CODE18$
      8786**DCL      8775--IMP-PTR
CODE19$
      8787**DCL      8779--IMP-PTR
CODE21$
      8788**DCL      8782--IMP-PTR
E_BADATTRIBUTE
      8847**DCL      9721>>ASSIGN   9730>>ASSIGN   9817>>ASSIGN   9826>>ASSIGN
E_INVATTRLIST
      8893**DCL      9803>>ASSIGN
E_NOMEM
      8802**DCL      9701>>ASSIGN
F$DCB.ACTPOS
      8959**DCL      8959--REDEF
F$DCB.ARS#
      8933**DCL      8933--REDEF
F$DCB.ATTR
      8952**DCL      8953--REDEF
F$DCB.BORROW
      8967**DCL      8967--REDEF    8967--REDEF    8967--REDEF
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:57   
F$DCB.DCBNAME.L
      8981**DCL      8981--IMP-SIZ
F$DCB.EOMCHAR#
      8937**DCL      8937--REDEF
F$DCB.FLDID
      8962**DCL      8962--REDEF
F$DCB.FORM$
      8956**DCL      8956--REDEF
F$DCB.FSECT
      8972**DCL      8972--REDEF
F$DCB.FSN#
      8949**DCL      8949--REDEF    8949--REDEF    8950--REDEF
F$DCB.HEADER$
      8955**DCL      8955--REDEF
F$DCB.IXTNSIZE#
      8953**DCL      8953--REDEF
F$DCB.LASTSTA$
      8942**DCL      8942--REDEF
F$DCB.LVL
      8968**DCL      8968--REDEF
F$DCB.NAME#.C
      8943**DCL      8943--REDEF
F$DCB.NOEOF
      8965**DCL      8965--REDEF
F$DCB.NRECS#
      8954**DCL      8954--REDEF
F$DCB.NRECX
      8973**DCL      8973--REDEF
F$DCB.OHDR
      8965**DCL      8965--REDEF
F$DCB.ORG#
      8948**DCL      8948--REDEF
F$DCB.PRECNO
      8971**DCL      8971--REDEF
F$DCB.RCSZ
      8977**DCL      8977--REDEF
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:58   
F$DCB.RES#
      8944**DCL      8944--REDEF
F$DCB.SETX
      8956**DCL      8956--REDEF
F$DCB.STARTX
      8959**DCL      9813>>ASSIGN
F$DCB.TAB$
      8956**DCL      8956--REDEF
F$DCB.TDA
      8970**DCL      8971--REDEF
F$DCB.WSN#
      8944**DCL      8944--REDEF
FIELD$
      8983**DCL      8997--IMP-PTR  9834<<ASSIGN   9836>>IF       9836>>IF       9836>>IF
FM$FIELD_START.OFFSET
      9000**DCL      9834>>ASSIGN
FOUNDONE
      9802**LABEL    9796--GOTO
I
      9007**DCL      9714<<ASSIGN   9719>>DOWHILE  9720>>IF       9722>>ASSIGN   9726>>ASSIGN   9727>>IF
      9727>>IF       9731>>ASSIGN   9735>>DOCASE   9737>>ASSIGN   9737>>ASSIGN   9740>>ASSIGN   9740>>ASSIGN
      9743>>ASSIGN   9744>>ASSIGN   9744>>ASSIGN   9747>>ASSIGN   9748>>ASSIGN   9748>>ASSIGN   9751>>ASSIGN
      9752>>ASSIGN   9752>>ASSIGN   9755>>ASSIGN   9756>>ASSIGN   9756>>ASSIGN   9759>>ASSIGN   9760>>ASSIGN
      9760>>ASSIGN   9763>>ASSIGN   9764>>ASSIGN   9764>>ASSIGN   9767>>ASSIGN   9768>>ASSIGN   9768>>ASSIGN
      9771>>ASSIGN   9772>>ASSIGN   9772>>ASSIGN   9775>>ASSIGN   9776>>ASSIGN   9776>>ASSIGN   9779>>ASSIGN
      9780>>ASSIGN   9780>>ASSIGN   9783>>ASSIGN   9784>>ASSIGN   9784>>ASSIGN   9787>>ASSIGN   9787>>ASSIGN
      9792>>IF       9793>>ASSIGN   9794>>ASSIGN   9799<<ASSIGN   9799>>ASSIGN   9808<<DOINDEX  9809>>ASSIGN
IRELPRECORD
      9100**DCL      9795<>CALL
IRELPRECORD.KEY_
      9100**DCL      9709<<ASSIGN   9738<<ASSIGN   9741<<ASSIGN   9745<<ASSIGN   9749<<ASSIGN   9753<<ASSIGN
      9757<<ASSIGN   9761<<ASSIGN   9765<<ASSIGN   9769<<ASSIGN   9773<<ASSIGN   9777<<ASSIGN   9781<<ASSIGN
      9785<<ASSIGN   9788<<ASSIGN   9810>>ASSIGN
IRELPRECORD.V
      9102**DCL      9100--DCLINIT
IRELPRECORD.V.INDX#
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:59   
      9105**DCL      9794<<ASSIGN   9811>>ASSIGN
IRELREAD.BUF_
      9028**DCL      9706<<ASSIGN
IRELREAD.KEY_
      9026**DCL      9705<<ASSIGN
IRELREAD.STATION_
      9029**DCL      9030--REDEF
IRELREAD.V
      9030**DCL      9026--DCLINIT
IRELREAD.V.DVBYTE.REREAD#
      9041**DCL      9041--REDEF
IRELREAD.V.INDX#
      9039**DCL      9039--REDEF
IRELREAD_IDS
      9066**DCL      9812<>CALL
IRELREAD_IDS.BUF_
      9068**DCL      9708<<ASSIGN
IRELREAD_IDS.KEY_
      9066**DCL      9707<<ASSIGN   9810<<ASSIGN
IRELREAD_IDS.STATION_
      9069**DCL      9070--REDEF
IRELREAD_IDS.V
      9070**DCL      9066--DCLINIT
IRELREAD_IDS.V.DVBYTE.REREAD#
      9081**DCL      9081--REDEF
IRELREAD_IDS.V.INDX#
      9079**DCL      9079--REDEF    9811<<ASSIGN
J
      9113**DCL      9814<<ASSIGN   9815>>DOWHILE  9816>>IF       9818>>ASSIGN   9822>>ASSIGN   9823>>IF
      9823>>IF       9827>>ASSIGN   9829>>DOCASE   9836>>IF       9836>>IF       9836>>IF       9877<<ASSIGN
      9877>>ASSIGN   9884<>CALL     9885>>ASSIGN   9885>>ASSIGN   9886<>CALL     9887>>ASSIGN   9887>>ASSIGN
      9888<>CALL     9889>>ASSIGN   9890>>ASSIGN   9890>>ASSIGN   9891<>CALL     9892>>ASSIGN   9892>>ASSIGN
KEYS
      9111**DCL      9713<<ASSIGN   9793<<ASSIGN   9802>>IF
M$DIB
      9115**DCL      9813--ASSIGN
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:60   
M$PRECORD
      5505**DCL-ENT  9795--CALL
M$READ
      5502**DCL-ENT  9812--CALL
NEXTREAD
      9890**LABEL    9838--GOTO
RELMEM
      9903**LABEL    9894--GOTO
RELMEMALT
      9892**LABEL    9723--GOTO     9732--GOTO     9804--GOTO     9819--GOTO
SIZE
      9117**DCL      8768--IMP-SIZ  9697<<ASSIGN   9705>>ASSIGN   9706>>ASSIGN   9707>>ASSIGN   9708>>ASSIGN
      9709>>ASSIGN
STARTX
      9118**DCL      9813<<ASSIGN   9834>>ASSIGN
TEXTC
      9120**DCL      9885>>ASSIGN   9887>>ASSIGN   9892>>ASSIGN
TEXTC.L
      9121**DCL      9122--IMP-SIZ  9743<<ASSIGN   9743>>ASSIGN   9744>>ASSIGN   9744>>ASSIGN   9747<<ASSIGN
      9747>>ASSIGN   9748>>ASSIGN   9748>>ASSIGN   9751<<ASSIGN   9751>>ASSIGN   9752>>ASSIGN   9752>>ASSIGN
      9755<<ASSIGN   9755>>ASSIGN   9756>>ASSIGN   9756>>ASSIGN   9759<<ASSIGN   9759>>ASSIGN   9760>>ASSIGN
      9760>>ASSIGN   9763<<ASSIGN   9763>>ASSIGN   9764>>ASSIGN   9764>>ASSIGN   9767<<ASSIGN   9767>>ASSIGN
      9768>>ASSIGN   9768>>ASSIGN   9771<<ASSIGN   9771>>ASSIGN   9772>>ASSIGN   9772>>ASSIGN   9775<<ASSIGN
      9775>>ASSIGN   9776>>ASSIGN   9776>>ASSIGN   9779<<ASSIGN   9779>>ASSIGN   9780>>ASSIGN   9780>>ASSIGN
      9783<<ASSIGN   9783>>ASSIGN   9784>>ASSIGN   9784>>ASSIGN   9836>>IF       9836>>IF       9836>>IF
      9836>>IF       9885>>ASSIGN   9887>>ASSIGN   9889>>ASSIGN   9890>>ASSIGN   9892>>ASSIGN
TEXTC.T
      9122**DCL      9744<<ASSIGN   9744>>ASSIGN   9748<<ASSIGN   9748>>ASSIGN   9752<<ASSIGN   9752>>ASSIGN
      9756<<ASSIGN   9756>>ASSIGN   9760<<ASSIGN   9760>>ASSIGN   9764<<ASSIGN   9764>>ASSIGN   9768<<ASSIGN
      9768>>ASSIGN   9772<<ASSIGN   9772>>ASSIGN   9776<<ASSIGN   9776>>ASSIGN   9780<<ASSIGN   9780>>ASSIGN
      9784<<ASSIGN   9784>>ASSIGN   9836>>IF       9836>>IF       9890>>ASSIGN
TEXTH.L
      9124**DCL      9125--IMP-SIZ  9727>>IF       9727>>IF       9737>>ASSIGN   9740>>ASSIGN   9787>>ASSIGN
      9823>>IF       9823>>IF
TEXTH.T
      9125**DCL      9737>>ASSIGN   9740>>ASSIGN   9787>>ASSIGN
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:61   
VLP_ID
      9139**DCL      9029--DCLINIT  9069--DCLINIT
VLP_ID.ID#
      9139**DCL      9809<<ASSIGN
VLR_ID
      9152**DCL      9102--DCLINIT
VLR_ID.COUNT#
      9152**DCL      9808>>DOINDEX
VLR_ID.ID#
      9152**DCL      9809>>ASSIGN
XSD$ATTRIBUTE.ATTRSYNTAX
      9339**DCL      9352--REDEF
XSD$ATTRIBUTE.FLAGS.RANGE
      9382**DCL      9727>>IF       9823>>IF
XSD$ATTRIBUTE.LOWERBOUND
      9385**DCL      9727>>IF       9823>>IF
XSD$ATTRIBUTE.UPPERBOUND
      9386**DCL      9727>>IF       9823>>IF
XSD$ATTR_TBL$
      9156**DCL      9726>>ASSIGN   9822>>ASSIGN
XSD$LOCFIELD
      8458**DCL-ENT  9884--CALL     9886--CALL     9888--CALL     9891--CALL
XSD$SERVICE
      9413**DCL        10--PROC
XSD$SERVICE.ATTR#
      9522**DCL      9719>>DOWHILE  9722<<ASSIGN   9731<<ASSIGN   9815>>DOWHILE  9818<<ASSIGN   9827<<ASSIGN
XSD$SERVICE.ATTRIBUTE.TYPE
      9550**DCL      9720>>IF       9726>>ASSIGN   9735>>DOCASE   9792>>IF       9793>>ASSIGN   9794>>ASSIGN
      9816>>IF       9822>>ASSIGN   9829>>DOCASE
XSD$SERVICE.ATTRIBUTE.VALUE$
      9553**DCL      9727>>IF       9727>>IF       9737>>ASSIGN   9737>>ASSIGN   9740>>ASSIGN   9740>>ASSIGN
      9743>>ASSIGN   9744>>ASSIGN   9744>>ASSIGN   9747>>ASSIGN   9748>>ASSIGN   9748>>ASSIGN   9751>>ASSIGN
      9752>>ASSIGN   9752>>ASSIGN   9755>>ASSIGN   9756>>ASSIGN   9756>>ASSIGN   9759>>ASSIGN   9760>>ASSIGN
      9760>>ASSIGN   9763>>ASSIGN   9764>>ASSIGN   9764>>ASSIGN   9767>>ASSIGN   9768>>ASSIGN   9768>>ASSIGN
      9771>>ASSIGN   9772>>ASSIGN   9772>>ASSIGN   9775>>ASSIGN   9776>>ASSIGN   9776>>ASSIGN   9779>>ASSIGN
      9780>>ASSIGN   9780>>ASSIGN   9783>>ASSIGN   9784>>ASSIGN   9784>>ASSIGN   9787>>ASSIGN   9787>>ASSIGN
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:62   
      9823>>IF       9823>>IF       9836>>IF       9836>>IF       9836>>IF
XSD$SERVICE.ERRCODE
      9482**DCL      9513--REDEF    9514--REDEF    9701<<ASSIGN   9721<<ASSIGN   9730<<ASSIGN   9803<<ASSIGN
      9817<<ASSIGN   9826<<ASSIGN
XSD$SERVICE.RESULT_
      9525**DCL      9883>>ASSIGN
XSD$SERVICE.UENTADDR$
      9529**DCL      9533--REDEF    9536--REDEF
XSD_ATTRKEYX
      9155**DCL      9735>>DOCASE   9792>>IF       9793>>ASSIGN   9794>>ASSIGN
XSD_DIBBUF
      9609**DCL      9834--ASSIGN   9884<>CALL     9884--CALL     9885--ASSIGN   9885--ASSIGN   9886<>CALL
      9886--CALL     9887--ASSIGN   9887--ASSIGN   9888<>CALL     9888--CALL     9889--ASSIGN   9890--ASSIGN
      9890--ASSIGN   9891<>CALL     9891--CALL     9892--ASSIGN   9892--ASSIGN
XSD_DIBKEY
      9573**DCL      9712<<ASSIGN
XSD_DIBKEY.ALIASOBJNAME
      9578**DCL      9737--ASSIGN   9738--ASSIGN
XSD_DIBKEY.BUSINESSCAT
      9590**DCL      9783--ASSIGN   9784--ASSIGN   9784--ASSIGN   9785--ASSIGN
XSD_DIBKEY.COMMONNAME
      9580**DCL      9743--ASSIGN   9744--ASSIGN   9744--ASSIGN   9745--ASSIGN
XSD_DIBKEY.COUNTRYNAME
      9583**DCL      9755--ASSIGN   9756--ASSIGN   9756--ASSIGN   9757--ASSIGN
XSD_DIBKEY.KNOWINFO
      9579**DCL      9740--ASSIGN   9741--ASSIGN
XSD_DIBKEY.LOCALITYNAME
      9584**DCL      9759--ASSIGN   9760--ASSIGN   9760--ASSIGN   9761--ASSIGN
XSD_DIBKEY.OBJECTCLASS
      9577**DCL      9787--ASSIGN   9788--ASSIGN
XSD_DIBKEY.ORGNAME
      9587**DCL      9771--ASSIGN   9772--ASSIGN   9772--ASSIGN   9773--ASSIGN
XSD_DIBKEY.ORGUNITNAME
      9588**DCL      9775--ASSIGN   9776--ASSIGN   9776--ASSIGN   9777--ASSIGN
XSD_DIBKEY.SERIAL#
      9582**DCL      9751--ASSIGN   9752--ASSIGN   9752--ASSIGN   9753--ASSIGN
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:63   
XSD_DIBKEY.STATENAME
      9585**DCL      9763--ASSIGN   9764--ASSIGN   9764--ASSIGN   9765--ASSIGN
XSD_DIBKEY.STREETADDR
      9586**DCL      9767--ASSIGN   9768--ASSIGN   9768--ASSIGN   9769--ASSIGN
XSD_DIBKEY.SURNAME
      9581**DCL      9747--ASSIGN   9748--ASSIGN   9748--ASSIGN   9749--ASSIGN
XSD_DIBKEY.TITLE
      9589**DCL      9779--ASSIGN   9780--ASSIGN   9780--ASSIGN   9781--ASSIGN
XSD_DIBKEY_C
      9674**DCL      9712>>ASSIGN
XSD_DS_OPENDIB
      9694**DCL      9697>>ASSIGN   9700<>CALL
XSS$GETMEM
      8461**DCL-ENT  9700--CALL
XSS$RELMEM
      8462**DCL-ENT  9905--CALL
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:64   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:65   
              MINI UREF LISTING

B$JIT$    8763**DCL
B$TCB    8761**DCL
CHR2    8771**DCL
CHR3    8772**DCL
CHR4    8773**DCL
CODE19    8779**DCL
CODE20    8782**DCL
M$ACCT    5518**DCL-ENT
M$ACTIVATE    5521**DCL-ENT
M$ALIB    5514**DCL-ENT
M$ASUSER    5516**DCL-ENT
M$ATTACH    5523**DCL-ENT
M$BADPP    5541**DCL-ENT
M$CGCTL    5522**DCL-ENT
M$CGINFO    5522**DCL-ENT
M$CHECK    5503**DCL-ENT
M$CHGUNIT    5561**DCL-ENT
M$CLOSE    5501**DCL-ENT
M$CLRSTK    5559**DCL-ENT
M$CMDVAR    5570**DCL-ENT
M$CONFIG    5531**DCL-ENT
M$CORRES    5506**DCL-ENT
M$CPEXIT    5515**DCL-ENT
M$CVM    5539**DCL-ENT
M$CVOL    5504**DCL-ENT
M$DCLFLD    5531**DCL-ENT
M$DEACTIVATE    5521**DCL-ENT
M$DELREC    5503**DCL-ENT
M$DEQ    5568**DCL-ENT
M$DETACH    5523**DCL-ENT
M$DEVICE    5505**DCL-ENT
M$DISPLAY    5568**DCL-ENT
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:66   
M$DISPRES    5508**DCL-ENT
M$DLIB    5514**DCL-ENT
M$DRIBBLE    5531**DCL-ENT
M$DRTN    5559**DCL-ENT
M$DSUSER    5516**DCL-ENT
M$ENQ    5567**DCL-ENT
M$EOM    5526**DCL-ENT
M$ERASE    5532**DCL-ENT
M$ERR    5513**DCL-ENT
M$ERRMSG    5564**DCL-ENT
M$EVENT    5556**DCL-ENT
M$EXHUME    5565**DCL-ENT
M$EXIT    5513**DCL-ENT
M$EXTEND    5505**DCL-ENT
M$FDP    5537**DCL-ENT
M$FDS    5536**DCL-ENT
M$FEBOOT    5529**DCL-ENT
M$FECTL    5530**DCL-ENT
M$FEDUMP    5529**DCL-ENT
M$FID    5564**DCL-ENT
M$FINDPROC    5518**DCL-ENT
M$FSUSER    5516**DCL-ENT
M$FVP    5538**DCL-ENT
M$FWCG    5522**DCL-ENT
M$GBPL    5542**DCL-ENT
M$GDDL    5538**DCL-ENT
M$GDP    5537**DCL-ENT
M$GDS    5536**DCL-ENT
M$GETDCB    5507**DCL-ENT
M$GETMOUSE    5547**DCL-ENT
M$GETPM    5548**DCL-ENT
M$GJOB    5566**DCL-ENT
M$GLINEATTR    5526**DCL-ENT
M$GOODPP    5541**DCL-ENT
M$GPLATEN    5534**DCL-ENT
M$GPROMPT    5533**DCL-ENT
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:67   
M$GTRMATTR    5527**DCL-ENT
M$GTRMCTL    5525**DCL-ENT
M$GTRMTAB    5528**DCL-ENT
M$GVP    5537**DCL-ENT
M$HELP    5564**DCL-ENT
M$INT    5556**DCL-ENT
M$INTRTN    5517**DCL-ENT
M$IOQ    5552**DCL-ENT
M$JOBSTATS    5566**DCL-ENT
M$KEYIN    5506**DCL-ENT
M$LDEV    5501**DCL-ENT
M$LDTRC    5514**DCL-ENT
M$LIMIT    5507**DCL-ENT
M$LINES    5506**DCL-ENT
M$LINK    5513**DCL-ENT
M$MADMUCK    5509**DCL-ENT
M$MAKUSER    5540**DCL-ENT
M$MBS    5508**DCL-ENT
M$MDFFLD    5532**DCL-ENT
M$MERC    5557**DCL-ENT
M$MERCS    5558**DCL-ENT
M$MIRROR    5552**DCL-ENT
M$MONINFO    5569**DCL-ENT
M$MPL    5542**DCL-ENT
M$NODEINFO    5533**DCL-ENT
M$NXTUSR    5567**DCL-ENT
M$OCMSG    5565**DCL-ENT
M$OLAY    5513**DCL-ENT
M$OPEN    5501**DCL-ENT
M$PAS    5542**DCL-ENT
M$PATHCON    5565**DCL-ENT
M$PDS    5536**DCL-ENT
M$PFIL    5503**DCL-ENT
M$PLATEN    5527**DCL-ENT
M$PROCNAME    5518**DCL-ENT
M$PROFILE    5529**DCL-ENT
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:68   
M$PROMPT    5525**DCL-ENT
M$RACST    5509**DCL-ENT
M$RDSYSLOG    5550**DCL-ENT
M$RELDCB    5507**DCL-ENT
M$RELRES    5508**DCL-ENT
M$RELSTARF    5510**DCL-ENT
M$REM    5510**DCL-ENT
M$RENV    5557**DCL-ENT
M$REQUIRE    5509**DCL-ENT
M$RETRY    5558**DCL-ENT
M$RETRYS    5558**DCL-ENT
M$REW    5504**DCL-ENT
M$RLSFLD    5532**DCL-ENT
M$RPRIV    5560**DCL-ENT
M$RSPP    5539**DCL-ENT
M$RSWITCH    5561**DCL-ENT
M$RUE    5567**DCL-ENT
M$SAD    5540**DCL-ENT
M$SAVE    5516**DCL-ENT
M$SCON    5517**DCL-ENT
M$SCREECH    5515**DCL-ENT
M$SENV    5557**DCL-ENT
M$SETFMA    5501**DCL-ENT
M$SETFP    5530**DCL-ENT
M$SINPUT    5528**DCL-ENT
M$SLCFLD    5533**DCL-ENT
M$SMOUSE    5547**DCL-ENT
M$SMPRT    5539**DCL-ENT
M$SPRIV    5560**DCL-ENT
M$SSC    5540**DCL-ENT
M$SSWITCH    5560**DCL-ENT
M$STATE    5569**DCL-ENT
M$STD    5541**DCL-ENT
M$STIMER    5555**DCL-ENT
M$STLPP    5538**DCL-ENT
M$STRAP    5555**DCL-ENT
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:69   
M$STRMATTR    5527**DCL-ENT
M$STRMCTL    5525**DCL-ENT
M$STRMTAB    5528**DCL-ENT
M$SYMBIO    5566**DCL-ENT
M$SYSCON    5552**DCL-ENT
M$SYSID    5570**DCL-ENT
M$TDCLOSE    5551**DCL-ENT
M$TDIO    5551**DCL-ENT
M$TDOPEN    5550**DCL-ENT
M$TDREQCPU    5551**DCL-ENT
M$TEMPWROC    5545**DCL-ENT
M$TIME    5568**DCL-ENT
M$TRAP    5555**DCL-ENT
M$TRMISC    5530**DCL-ENT
M$TRMPRG    5526**DCL-ENT
M$TRTN    5559**DCL-ENT
M$TRUNC    5502**DCL-ENT
M$TTIMER    5555**DCL-ENT
M$UC    5525**DCL
M$UMPL    5542**DCL-ENT
M$UNFID    5564**DCL-ENT
M$UNLATCH    5521**DCL-ENT
M$UNSHARE    5518**DCL-ENT
M$USRFIELD    5561**DCL-ENT
M$VIRTUAL    5536**DCL-ENT
M$WAIT    5559**DCL-ENT
M$WEOF    5504**DCL-ENT
M$WRITE    5502**DCL-ENT
M$WRSYSLOG    5550**DCL-ENT
M$XCON    5556**DCL-ENT
M$XCONRTN    5517**DCL-ENT
M$XEQTIME    5569**DCL-ENT
M$XFLUSH    5510**DCL-ENT
M$XMOUSE    5547**DCL-ENT
M$XXX    5513**DCL-ENT
M$YC    5515**DCL-ENT
PL6.E3A0      #001=XSD$READ File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:55 Page:70   
XSD$DSDATA    8463**DCL-ENT
XSD$READ      10**PROC
XSD$TABLE    8464**DCL-ENT
XSS$BLKPTR    8460**DCL-ENT
XSS$BUFPTR    8459**DCL-ENT

PL6.E3A0      #002=XSD$SEARCH File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:71   
      313        1        /*T***********************************************************/
      314        2        /*T*                                                         */
      315        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      316        4        /*T*                                                         */
      317        5        /*T***********************************************************/
      318        6        XSD$SEARCH: PROC(PARM1) ALTRET;
      319        7    1   DCL PARM1 UBIN;
      320        8    1   DCL PARM2 UBIN;
      321        9    1   DCL PARM3 UBIN;
      322       10    1        PARM1 = PARM1 + 1;
      323       11    1   END XSD$SEARCH;
      324       12        %EOD;

PL6.E3A0      #002=XSD$SEARCH File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:72   
      No diagnostics issued in procedure XSD$SEARCH.

   Procedure XSD$SEARCH requires 7 words for executable code.
   Procedure XSD$SEARCH requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=XSD$SEARCH File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:73   

 Object Unit name= XSD$SEARCH                                 File name= XSD$SUBS.:XSA1TOU
 UTS= OCT 01 '97 11:56:15.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none     7      7  XSD$SEARCH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  XSD$SEARCH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
PL6.E3A0      #002=XSD$SEARCH File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:74   


      313        1        /*T***********************************************************/
      314        2        /*T*                                                         */
      315        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      316        4        /*T*                                                         */
      317        5        /*T***********************************************************/
      318        6        XSD$SEARCH: PROC(PARM1) ALTRET;

      6  0 000000   000000 700200 xent  XSD$SEARCH   TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

      319        7    1   DCL PARM1 UBIN;
      320        8    1   DCL PARM2 UBIN;
      321        9    1   DCL PARM3 UBIN;
      322       10    1        PARM1 = PARM1 + 1;

     10  0 000002   200003 470500                    LDP0    @PARM1,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000001 035007                    ADLA    1,DL
         0 000005   000000 755100                    STA     0,,PR0

      323       11    1   END XSD$SEARCH;

     11  0 000006   000000 702200 xent               TSX2  ! X66_ARET
      324       12        %EOD;

PL6.E3A0      #002=XSD$SEARCH File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:75   
      No diagnostics issued in procedure XSD$SEARCH.
PL6.E3A0      #002=XSD$SEARCH File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:76   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PARM1                    *0-0-0/w UBIN        r     1 PARM1


   Procedure XSD$SEARCH requires 7 words for executable code.
   Procedure XSD$SEARCH requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=XSD$SEARCH File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:77   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSD$SEARCH File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:78   
          MINI XREF LISTING

PARM1
         7**DCL         6--PROC       10<<ASSIGN     10>>ASSIGN
PL6.E3A0      #002=XSD$SEARCH File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:79   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSD$SEARCH File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:80   
              MINI UREF LISTING

PARM2       8**DCL
PARM3       9**DCL
XSD$SEARCH       6**PROC

PL6.E3A0      #003=XSD$MODIFY File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:81   
      325        1        /*T***********************************************************/
      326        2        /*T*                                                         */
      327        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      328        4        /*T*                                                         */
      329        5        /*T***********************************************************/
      330        6        XSD$MODIFY: PROC(PARM1) ALTRET;
      331        7    1   DCL PARM1 UBIN;
      332        8    1   DCL PARM2 UBIN;
      333        9    1   DCL PARM3 UBIN;
      334       10    1        PARM1 = PARM1 + 1;
      335       11    1   END XSD$MODIFY;
      336       12        %EOD;

PL6.E3A0      #003=XSD$MODIFY File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:82   
      No diagnostics issued in procedure XSD$MODIFY.

   Procedure XSD$MODIFY requires 7 words for executable code.
   Procedure XSD$MODIFY requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=XSD$MODIFY File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:83   

 Object Unit name= XSD$MODIFY                                 File name= XSD$SUBS.:XSA1TOU
 UTS= OCT 01 '97 11:56:16.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none     7      7  XSD$MODIFY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  XSD$MODIFY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
PL6.E3A0      #003=XSD$MODIFY File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:84   


      325        1        /*T***********************************************************/
      326        2        /*T*                                                         */
      327        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      328        4        /*T*                                                         */
      329        5        /*T***********************************************************/
      330        6        XSD$MODIFY: PROC(PARM1) ALTRET;

      6  0 000000   000000 700200 xent  XSD$MODIFY   TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

      331        7    1   DCL PARM1 UBIN;
      332        8    1   DCL PARM2 UBIN;
      333        9    1   DCL PARM3 UBIN;
      334       10    1        PARM1 = PARM1 + 1;

     10  0 000002   200003 470500                    LDP0    @PARM1,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000001 035007                    ADLA    1,DL
         0 000005   000000 755100                    STA     0,,PR0

      335       11    1   END XSD$MODIFY;

     11  0 000006   000000 702200 xent               TSX2  ! X66_ARET
      336       12        %EOD;

PL6.E3A0      #003=XSD$MODIFY File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:85   
      No diagnostics issued in procedure XSD$MODIFY.
PL6.E3A0      #003=XSD$MODIFY File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:86   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PARM1                    *0-0-0/w UBIN        r     1 PARM1


   Procedure XSD$MODIFY requires 7 words for executable code.
   Procedure XSD$MODIFY requires 6 words of local(AUTO) storage.
PL6.E3A0      #003=XSD$MODIFY File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:87   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XSD$MODIFY File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:88   
          MINI XREF LISTING

PARM1
         7**DCL         6--PROC       10<<ASSIGN     10>>ASSIGN
PL6.E3A0      #003=XSD$MODIFY File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:89   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XSD$MODIFY File=XSD$SUBS.:XSA1TSI                             WED 10/01/97 11:56 Page:90   
              MINI UREF LISTING

PARM2       8**DCL
PARM3       9**DCL
XSD$MODIFY       6**PROC

PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:91   
      337        1        /*T***********************************************************/
      338        2        /*T*                                                         */
      339        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      340        4        /*T*                                                         */
      341        5        /*T***********************************************************/
      342        6
      343        7        %EJECT;
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:92   
      344        8
      345        9        XSD$RECV: PROC(PARM) ALTRET;
      346       10
      347       11        %INCLUDE CP_6;
      348     5570        %INCLUDE K_ADDRESS_M;
      349     6073        %INCLUDE XSC_ACSE_E;
      350     6151        %INCLUDE XSC_ACSE_M;
      351     6460        %INCLUDE XSC_COMMON_M;
      352     7113        %INCLUDE XSD_MACRO_M;
      353     8222        %INCLUDE XSD_ERRORS_E;
      354     8236        %INCLUDE XSD_PERR_C;
      355     8258        %INCLUDE XSD_SUBS_C;
      356     8593        %INCLUDE XSP_ASN1_M;
      357     8939
      358     8940    1   DCL FOI$SNAP ENTRY(4) ALTRET OPTIONAL;
      359     8941    1   DCL XSC$ACSE ENTRY(1) ALTRET;
      360     8942    1   DCL XSD$BIND ENTRY(6) ALTRET;
      361     8943    1   DCL XSD$BINDERR ENTRY(6) ALTRET;
      362     8944    1   DCL XSD$ERR ENTRY(4) ALTRET;
      363     8945    1   DCL XSD$READ ENTRY(1) ALTRET;
      364     8946    1   DCL XSS$GETMEM ENTRY(3) ALTRET;
      365     8947    1   DCL XSS$RELMEM ENTRY(1) ALTRET;
      366     8948    1   DCL XSS$BUFPTR ENTRY(2) ALTRET;
      367     8949    1   DCL XSD$DSDATA ENTRY CONV(5);           /* so LEMUR lib works */
      368     8950
      369     8951
      370     8952    1   DCL BINDTO$ PTR;
      371     8953    1   DCL BINDFROM$ PTR;
      372     8954    1   DCL B$PTR$(0:0) PTR BASED;
      373     8955    1   DCL BUF$ PTR;
      374     8956    1   DCL BUFFER CHAR(SIZE) BASED(BUF$);
      375     8957
      376     8958    1   DCL CCID UBIN BYTE;
      377     8959    1   DCL CONTEXT$ PTR;
      378     8960    1   DCL CONTEXTX UBIN HALF HALIGNED;
      379     8961    1   DCL CONTEXTXS REDEF CONTEXTX SBIN HALF HALIGNED;
      380     8962
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:93   
      381     8963        %VLP_ERRCODE(FPTN=E_NOMEM,STCLASS=SYMREF);
      382     9008        %VLP_ERRCODE(FPTN=E_BUFFERERR,STCLASS="STATIC SYMDEF",FCG=XS,MID=D,ERR#=%E$BUFFERERR
              9008            );
      383     9053    1   DCL ERROR UBIN;
      384     9054
      385     9055    1   DCL PROBLEM UBIN;
      386     9056    1   DCL PARM$ PTR;
      387     9057    1   DCL PARM UBIN;
      388     9058
      389     9059    1   DCL SIZE UBIN;
      390     9060
      391     9061    1   DCL 1  B$TEXTH BASED,
      392     9062    1            2 L UBIN(18) CALIGNED,
      393     9063    1            2 T CHAR(B$TEXTH.L);
      394     9064
      395     9065        %XSC$ADDRESS(NAME=XSC@ADDRESS,STCLASS=AUTO);
      396     9348        %XSC$ASSOCIATE(FPTN=XSC$AASCIND,STCLASS="BASED(PARM$)");
      397     9423        %XSC$ASSOCIATE(FPTN=XSC@AASCRSP_NAK,STCLASS=AUTO);
      398     9498        %XSC$ASSOCIATE(FPTN=XSC@AASCRSP,STCLASS=AUTO);
      399     9573        %XSC$GENERIC(STCLASS="BASED(PARM$)");
      400     9632        %XSD_BIND(NAME=XSD$BINDFROM,STCLASS="BASED(BINDFROM$)");
      401     9854        %XSD_BIND(NAME=XSD$BINDTO,STCLASS="BASED(BINDTO$)");
      402    10076        %XSD_CONTEXT(NAME=XSD$CONTEXT,STCLASS="BASED(CONTEXT$)");
      403    10131        %XSD_TEXTH(NAME=XSD_IDASDUA,STCLASS=SYMREF);
      404    10171        %XSP_ASN1_FPT(FPTN=XSP$ASN1_FPT,STCLASS=BASED);
      405    10191        %XSD_SERVICE(NAME=XSD@SERVICE,STCLASS=AUTO,ATTR#=1);
      406    10356        %XSD_SERVICE(NAME=XSD_SERVICE_C,STCLASS=CONSTANT,ATTR#=1,FNC=%XSD_FNC_READ,
      407    10357                     SUBC=%XSD_SUBC_READ);
      408    10522    1   DCL XSD_CONTEXTXS SBIN SYMREF;
      409    10523
      410    10524        /* bop */
      411    10525
      412    10526    1        PARM$ = ADDR(PARM);
      413    10527    1        CCID = XSC$GENERIC.CCID;
      414    10528
      415    10529    2        DO CASE(XSC$GENERIC.FNC);
      416    10530    2         CASE(%XSC_FNC_AASCREQ#);
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:94   
      417    10531             /* not very likely */
      418    10532
      419    10533    2         CASE(%XSC_FNC_AASCIND#);          /* someone is knocking at our door */
      420    10534    3           CALL XSS$GETMEM(CONTEXTXS,CONTEXT$,LENGTHC(XSD$CONTEXT)) WHENALTRETURN DO;
      421    10535    3                CALL XSD$ERR(E_NOMEM);     /* no more memory for connections */
      422    10536    3                GOTO ERR;
      423    10537    3             END;
      424    10538
      425    10539    3           CALL XSS$GETMEM(XSD$CONTEXT.BUFX,BUF$,1024) WHENALTRETURN DO;
      426    10540    3                CALL XSD$ERR(E_NOMEM);
      427    10541    3                GOTO ERR;
      428    10542    3             END;
      429    10543
      430    10544    3           CALL XSS$GETMEM(XSD$CONTEXT.BINDTOX,BINDTO$,SIZEC(XSD$BINDTO)) WHENALTRETURN
             10544                    DO;
      431    10545    3                CALL XSD$ERR(E_NOMEM);
      432    10546    3                GOTO ERR;
      433    10547    3             END;
      434    10548
      435    10549    3           CALL XSS$GETMEM(XSD$CONTEXT.BINDFROMX,BINDFROM$,SIZEC(XSD$BINDTO))
             10549                    WHENALTRETURN DO;
      436    10550    3                CALL XSD$ERR(E_NOMEM);
      437    10551    3                GOTO ERR;
      438    10552    3             END;
      439    10553
      440    10554    3           CALL XSS$GETMEM(XSD$CONTEXT.BUFX,BUF$,1024) WHENALTRETURN DO;
      441    10555    3                CALL XSD$ERR(E_NOMEM);
      442    10556    3                GOTO ERR;
      443    10557    3             END;
      444    10558        /*
      445    10559             get memory for context and associated blocks.
      446    10560             decode the bind pdu.
      447    10561             is the pdu valid?
      448    10562                yes - validate the user by reading the entry in the directory.
      449    10563                no  - send binderr.
      450    10564                      send aascrsp result=perm.
      451    10565                      dump all memory for this connection.
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:95   
      452    10566                      return and wait for the next message.
      453    10567        */
      454    10568    2           SIZE = XSC$AASCIND.DATA$->XSP$ASN1_FPT.NXTX;
      455    10569    2           IF XSC$AASCIND.CTXT$->B$PTR$(XSC$AASCIND.DATA$->XSP$ASN1_FPT.CTXTID)->
             10569                    B$TEXTH ~=
      456    10570    3             XSD_IDASDUA THEN DO;
      457    10571    3                GOTO BINDERR;
      458    10572    3             END;
      459    10573
      460    10574    2           CALL XSD$BIND(XSD@SERVICE,XSD$BINDTO,XSD$BINDFROM,
      461    10575    2             XSC$AASCIND.DATA$->XSP$ASN1_FPT.BUF$->BUFFER,
      462    10576    2             XSC$AASCIND.DATA$->XSP$ASN1_FPT.NXTX,'0'B)
      463    10577    3           WHENRETURN DO;
      464    10578    3                XSD@SERVICE = XSD_SERVICE_C;
      465    10579    3                XSD@SERVICE.ATTRIBUTE.TYPE(0) = %XSD_AT_COMMONNAME;
      466    10580    3                XSD@SERVICE.ATTRIBUTE.VALUE$(0) = ADDR(XSD$BINDFROM.COMMONNAME);
      467    10581    3                XSD@SERVICE.RESULT_ = VECTOR(XSC@ADDRESS);
      468    10582    4                CALL XSD$READ(XSD@SERVICE) WHENALTRETURN DO;
      469    10583    4   BINDERR:          ;
      470    10584    4                     ERROR = %XSD_ERR_SECURITY;
      471    10585    4                     PROBLEM = %XSD_PROB_INAPPAUTH;
      472    10586    4                     SIZE = 1024;
      473    10587    5                     CALL XSD$BINDERR(XSD@SERVICE,ERROR,PROBLEM,BUFFER,SIZE,'1'B)
             10587                              WHENALTRETURN DO;
      474    10588    5                          CALL XSD$ERR(XSD@SERVICE.ERRCODE);
             10588                                   /* this better not happen */
      475    10589    5                          GOTO ERR;
      476    10590    5                       END;
      477    10591    4                     XSC@AASCRSP_NAK = XSC$AASCIND; /* sets up data$ too */
      478    10592    4                     XSC@AASCRSP_NAK.FNC = %XSC_FNC_AASCRSP#;
      479    10593    4                     XSC@AASCRSP_NAK.RESULT = %XSC_RSLT_PERMREJECT#;
      480    10594    5                     CALL XSC$ACSE(XSC@AASCRSP_NAK) WHENALTRETURN DO;
      481    10595    5                          CALL XSD$ERR(XSC@AASCRSP_NAK.ERROR);
      482    10596    5                       END;
      483    10597    4                     GOTO ERR;
      484    10598    4                  END;                     /* whenaltreturn xsd$read */
      485    10599        /*
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:96   
      486    10600                   user is valid.
      487    10601                   are we who the user thinks we are.
      488    10602                      yes - send the aascrsp_ok to the remote end.
      489    10603                            set the state to waitservice request.
      490    10604                            set the dsabit according to the value in IMPL$.
      491    10605                            add current context to list of contexts
      492    10606                            wait for incoming events
      493    10607                      no  - send a service error to remote
      494    10608                            disconnect
      495    10609        */
      496    10610
      497    10611    3                XSD@SERVICE.ATTRIBUTE.VALUE$(0) = ADDR(XSD$BINDTO.COMMONNAME);
      498    10612    3                CALL XSD$READ(XSD@SERVICE) ALTRET(BINDERR);
      499    10613        /*
      500    10614                   reencode the pdu, but switch the to and from fields.
      501    10615        */
      502    10616    3                SIZE = 1024;
      503    10617    3                CALL XSD$BIND(XSD@SERVICE,XSD$BINDFROM,XSD$BINDTO,BUFFER,SIZE,'1'B)
             10617                         ALTRET(CANTENCODE);
      504    10618    3                XSC@AASCRSP.FNC = %XSC_FNC_AASCRSP#;
      505    10619    3                XSC@AASCRSP.RESULT = %XSC_RSLT_ACCEPTED#;
      506    10620    3                XSC@AASCRSP.DATA$ = XSC$AASCIND.DATA$;
      507    10621    4                CALL XSC$ACSE(XSC@AASCRSP) WHENALTRETURN DO;
      508    10622    4                     CALL XSD$ERR(XSC@AASCRSP.ERROR);
      509    10623    4                     GOTO ERR;
      510    10624    4                  END;
      511    10625    3             END;
      512    10626    3           WHENALTRETURN DO;
      513    10627    3   CANTENCODE:  ;
      514    10628    3                CALL XSD$ERR(XSD@SERVICE.ERRCODE);
      515    10629    3                GOTO ERR;
      516    10630    3             END;
      517    10631
      518    10632    2           XSD$CONTEXT.STATE = %XSD_ST_WAITSERVICEREQ;
      519    10633    3           DO INHIBIT;
      520    10634    3              IF XSD_CONTEXTXS = -1 THEN
      521    10635    3                 XSD_CONTEXTXS = CONTEXTXS;
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:97   
      522    10636    4              ELSE DO;
      523    10637    5                   CALL XSS$BUFPTR(XSD_CONTEXTXS,CONTEXT$) WHENALTRETURN DO;
      524    10638    5   BADBUF:              ;
      525    10639    5                        CALL FOI$SNAP(E_BUFFERERR,'XS','D');
      526    10640    5                        RETURN;
      527    10641    5                     END;                  /*    whenaltreturn */
      528    10642    5                   DO WHILE XSD$CONTEXT.NEXTXS ~= -1;
      529    10643    5                      CALL XSS$BUFPTR(XSD$CONTEXT.NEXTXS,CONTEXT$) ALTRET(BADBUF);
      530    10644
      531    10645    5                   END;
      532    10646    4                END;
      533    10647    3           END;                            /* do inhibit */
      534    10648    2         CASE(%XSC_FNC_AASCRSP#);
      535    10649    2         CASE(%XSC_FNC_AASCCNF#);
      536    10650
      537    10651    2         CASE(%XSC_FNC_ARELREQ#);
      538    10652    2         CASE(%XSC_FNC_ARELIND#);
      539    10653    2         CASE(%XSC_FNC_ARELRSP#);
      540    10654    2         CASE(%XSC_FNC_ARELCNF#);
      541    10655
      542    10656    2         CASE(%XSC_FNC_AUABREQ#);
      543    10657    2         CASE(%XSC_FNC_AUABIND#);
      544    10658
      545    10659    2         CASE(%XSC_FNC_APABIND#);
      546    10660    2        END;                               /* case on fnc */
      547    10661
      548    10662    2        DO WHILE '0'B;
      549    10663    2   ERR:    ;
      550    10664    2           CALL FOI$SNAP(%E$NOMEM,'XS','D');
      551    10665    2   ERR_NOSNAP:;
      552    10666    3           IF CONTEXTXS ~= -1 THEN DO;
      553    10667    3                IF XSD$CONTEXT.BUFXS ~= -1 THEN
      554    10668    3                   CALL XSS$RELMEM(XSD$CONTEXT.BUFX);
      555    10669    3                IF XSD$CONTEXT.BINDTOXS ~= -1 THEN
      556    10670    3                   CALL XSS$RELMEM(XSD$CONTEXT.BINDTOX);
      557    10671    3                IF XSD$CONTEXT.BINDFROMXS ~= -1 THEN
      558    10672    3                   CALL XSS$RELMEM(XSD$CONTEXT.BINDFROMX);
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:98   
      559    10673    3                IF XSD$CONTEXT.BUFXS ~= -1 THEN
      560    10674    3                   CALL XSS$RELMEM(XSD$CONTEXT.BUFX);
      561    10675    3             END;
      562    10676    2        END;
      563    10677    1   END XSD$RECV;
      564    10678        %EOD;

PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:99   
--  Include file information  --

   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSD_SUBS_C.:XSA1TOU  is referenced.
   XSD_PERR_C.:XSA1TOU  is referenced.
   XSD_ERRORS_E.:XSA1TOU  is referenced.
   XSD_MACRO_M.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSD$RECV.

   Procedure XSD$RECV requires 354 words for executable code.
   Procedure XSD$RECV requires 138 words of local(AUTO) storage.

PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:100  

 Object Unit name= XSD$RECV                                   File name= XSD$SUBS.:XSA1TOU
 UTS= OCT 01 '97 11:56:18.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none     1      1  XSD$RECV
    2  RoData even  UTS     15     17  XSD$RECV
    3   Proc  even  none   354    542  XSD$RECV
    4  RoData even  none    29     35  XSD$RECV

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  XSD$RECV

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  E_BUFFERERR
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:101  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XSD$DSDATA
 yes     yes           Std       3 XSS$GETMEM
 yes     yes           Std       6 XSD$BINDERR
 yes     yes           Std       2 XSS$BUFPTR
 yes     yes           Std       4 XSD$ERR
 yes     yes           Std       1 XSC$ACSE
 yes     yes           Std       6 XSD$BIND
 yes     yes           Std       1 XSD$READ
 yes     yes           Std       1 XSS$RELMEM
 yes     yes    yes    Std       4 FOI$SNAP
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  E_NOMEM                               XSD_IDASDUA
     XSD_CONTEXTXS

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:102  


      337        1        /*T***********************************************************/
      338        2        /*T*                                                         */
      339        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      340        4        /*T*                                                         */
      341        5        /*T***********************************************************/
      342        6
      343        7        %EJECT;
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:103  
      344        8
      345        9        XSD$RECV: PROC(PARM) ALTRET;

      9  3 000000   000000 700200 xent  XSD$RECV     TSX0  ! X66_AUTO_1
         3 000001   000212 000001                    ZERO    138,1

      346       10
      347       11        %INCLUDE CP_6;
      348     5570        %INCLUDE K_ADDRESS_M;
      349     6073        %INCLUDE XSC_ACSE_E;
      350     6151        %INCLUDE XSC_ACSE_M;
      351     6460        %INCLUDE XSC_COMMON_M;
      352     7113        %INCLUDE XSD_MACRO_M;
      353     8222        %INCLUDE XSD_ERRORS_E;
      354     8236        %INCLUDE XSD_PERR_C;
      355     8258        %INCLUDE XSD_SUBS_C;
      356     8593        %INCLUDE XSP_ASN1_M;
      357     8939
      358     8940    1   DCL FOI$SNAP ENTRY(4) ALTRET OPTIONAL;
      359     8941    1   DCL XSC$ACSE ENTRY(1) ALTRET;
      360     8942    1   DCL XSD$BIND ENTRY(6) ALTRET;
      361     8943    1   DCL XSD$BINDERR ENTRY(6) ALTRET;
      362     8944    1   DCL XSD$ERR ENTRY(4) ALTRET;
      363     8945    1   DCL XSD$READ ENTRY(1) ALTRET;
      364     8946    1   DCL XSS$GETMEM ENTRY(3) ALTRET;
      365     8947    1   DCL XSS$RELMEM ENTRY(1) ALTRET;
      366     8948    1   DCL XSS$BUFPTR ENTRY(2) ALTRET;
      367     8949    1   DCL XSD$DSDATA ENTRY CONV(5);           /* so LEMUR lib works */
      368     8950
      369     8951
      370     8952    1   DCL BINDTO$ PTR;
      371     8953    1   DCL BINDFROM$ PTR;
      372     8954    1   DCL B$PTR$(0:0) PTR BASED;
      373     8955    1   DCL BUF$ PTR;
      374     8956    1   DCL BUFFER CHAR(SIZE) BASED(BUF$);
      375     8957
      376     8958    1   DCL CCID UBIN BYTE;
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:104  
      377     8959    1   DCL CONTEXT$ PTR;
      378     8960    1   DCL CONTEXTX UBIN HALF HALIGNED;
      379     8961    1   DCL CONTEXTXS REDEF CONTEXTX SBIN HALF HALIGNED;
      380     8962
      381     8963        %VLP_ERRCODE(FPTN=E_NOMEM,STCLASS=SYMREF);
      382     9008       %VLP_ERRCODE(FPTN=E_BUFFERERR,STCLASS="STATIC SYMDEF",FCG=XS,MID=D,ERR#=%E$BUFFERERR
              9008            );
      383     9053    1   DCL ERROR UBIN;
      384     9054
      385     9055    1   DCL PROBLEM UBIN;
      386     9056    1   DCL PARM$ PTR;
      387     9057    1   DCL PARM UBIN;
      388     9058
      389     9059    1   DCL SIZE UBIN;
      390     9060
      391     9061    1   DCL 1  B$TEXTH BASED,
      392     9062    1            2 L UBIN(18) CALIGNED,
      393     9063    1            2 T CHAR(B$TEXTH.L);
      394     9064
      395     9065        %XSC$ADDRESS(NAME=XSC@ADDRESS,STCLASS=AUTO);
      396     9348        %XSC$ASSOCIATE(FPTN=XSC$AASCIND,STCLASS="BASED(PARM$)");
      397     9423        %XSC$ASSOCIATE(FPTN=XSC@AASCRSP_NAK,STCLASS=AUTO);
      398     9498        %XSC$ASSOCIATE(FPTN=XSC@AASCRSP,STCLASS=AUTO);
      399     9573        %XSC$GENERIC(STCLASS="BASED(PARM$)");
      400     9632        %XSD_BIND(NAME=XSD$BINDFROM,STCLASS="BASED(BINDFROM$)");
      401     9854        %XSD_BIND(NAME=XSD$BINDTO,STCLASS="BASED(BINDTO$)");
      402    10076        %XSD_CONTEXT(NAME=XSD$CONTEXT,STCLASS="BASED(CONTEXT$)");
      403    10131        %XSD_TEXTH(NAME=XSD_IDASDUA,STCLASS=SYMREF);
      404    10171        %XSP_ASN1_FPT(FPTN=XSP$ASN1_FPT,STCLASS=BASED);
      405    10191        %XSD_SERVICE(NAME=XSD@SERVICE,STCLASS=AUTO,ATTR#=1);
      406    10356        %XSD_SERVICE(NAME=XSD_SERVICE_C,STCLASS=CONSTANT,ATTR#=1,FNC=%XSD_FNC_READ,
      407    10357                     SUBC=%XSD_SUBC_READ);
      408    10522    1   DCL XSD_CONTEXTXS SBIN SYMREF;
      409    10523
      410    10524        /* bop */
      411    10525
      412    10526    1        PARM$ = ADDR(PARM);
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:105  

  10526  3 000002   200003 236100                    LDQ     @PARM,,AUTO
         3 000003   200014 756100                    STQ     PARM$,,AUTO

      413    10527    1        CCID = XSC$GENERIC.CCID;

  10527  3 000004   200014 470500                    LDP0    PARM$,,AUTO
         3 000005   000000 236100                    LDQ     0,,PR0
         3 000006   000022 772000                    QRL     18
         3 000007   000777 376007                    ANQ     511,DL
         3 000010   000033 736000                    QLS     27
         3 000011   200007 756100                    STQ     CCID,,AUTO

      414    10528
      415    10529    2        DO CASE(XSC$GENERIC.FNC);

  10529  3 000012   000000 236100                    LDQ     0,,PR0
         3 000013   000033 772000                    QRL     27
         3 000014   000003 116007                    CMPQ    3,DL
         3 000015   000017 602006 3                  TNC     s:10529+5,QL
         3 000016   000455 710000 3                  TRA     s:10662
         3 000017   000455 710000 3                  TRA     s:10662
         3 000020   000455 710000 3                  TRA     s:10662
         3 000021   000022 710000 3                  TRA     s:10534

      416    10530    2         CASE(%XSC_FNC_AASCREQ#);

      417    10531             /* not very likely */
      418    10532
      419    10533    2         CASE(%XSC_FNC_AASCIND#);          /* someone is knocking at our door */

      420    10534    3           CALL XSS$GETMEM(CONTEXTXS,CONTEXT$,LENGTHC(XSD$CONTEXT)) WHENALTRETURN DO;

  10534  3 000022   000003 236000 4                  LDQ     3
         3 000023   200206 756100                    STQ     XSD@SERVICE+16,,AUTO
         3 000024   200010 631500                    EPPR1   CONTEXT$,,AUTO
         3 000025   200205 451500                    STP1    XSD@SERVICE+15,,AUTO
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:106  
         3 000026   200011 633500                    EPPR3   CONTEXTX,,AUTO
         3 000027   200204 453500                    STP3    XSD@SERVICE+14,,AUTO
         3 000030   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000031   000001 631400 4                  EPPR1   1
         3 000032   000000 701000 xent               TSX1    XSS$GETMEM
         3 000033   000035 702000 3                  TSX2    s:10535
         3 000034   000042 710000 3                  TRA     s:10539

      421    10535    3                CALL XSD$ERR(E_NOMEM);     /* no more memory for connections */

  10535  3 000035   000005 630400 4                  EPPR0   5
         3 000036   000004 631400 4                  EPPR1   4
         3 000037   000000 701000 xent               TSX1    XSD$ERR
         3 000040   000000 011000                    NOP     0

      422    10536    3                GOTO ERR;

  10536  3 000041   000456 710000 3                  TRA     ERR

      423    10537    3             END;
      424    10538
      425    10539    3           CALL XSS$GETMEM(XSD$CONTEXT.BUFX,BUF$,1024) WHENALTRETURN DO;

  10539  3 000042   000007 236000 4                  LDQ     7
         3 000043   200206 756100                    STQ     XSD@SERVICE+16,,AUTO
         3 000044   200006 630500                    EPPR0   BUF$,,AUTO
         3 000045   200205 450500                    STP0    XSD@SERVICE+15,,AUTO
         3 000046   200010 236100                    LDQ     CONTEXT$,,AUTO
         3 000047   000010 036000 4                  ADLQ    8
         3 000050   200204 756100                    STQ     XSD@SERVICE+14,,AUTO
         3 000051   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000052   000001 631400 4                  EPPR1   1
         3 000053   000000 701000 xent               TSX1    XSS$GETMEM
         3 000054   000056 702000 3                  TSX2    s:10540
         3 000055   000063 710000 3                  TRA     s:10544

      426    10540    3                CALL XSD$ERR(E_NOMEM);
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:107  

  10540  3 000056   000005 630400 4                  EPPR0   5
         3 000057   000004 631400 4                  EPPR1   4
         3 000060   000000 701000 xent               TSX1    XSD$ERR
         3 000061   000000 011000                    NOP     0

      427    10541    3                GOTO ERR;

  10541  3 000062   000456 710000 3                  TRA     ERR

      428    10542    3             END;
      429    10543
      430    10544    3          CALL XSS$GETMEM(XSD$CONTEXT.BINDTOX,BINDTO$,SIZEC(XSD$BINDTO)) WHENALTRETURN
             10544                    DO;

  10544  3 000063   000012 236000 4                  LDQ     10
         3 000064   200206 756100                    STQ     XSD@SERVICE+16,,AUTO
         3 000065   200004 630500                    EPPR0   BINDTO$,,AUTO
         3 000066   200205 450500                    STP0    XSD@SERVICE+15,,AUTO
         3 000067   200010 236100                    LDQ     CONTEXT$,,AUTO
         3 000070   000013 036000 4                  ADLQ    11
         3 000071   200204 756100                    STQ     XSD@SERVICE+14,,AUTO
         3 000072   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000073   000001 631400 4                  EPPR1   1
         3 000074   000000 701000 xent               TSX1    XSS$GETMEM
         3 000075   000077 702000 3                  TSX2    s:10545
         3 000076   000104 710000 3                  TRA     s:10549

      431    10545    3                CALL XSD$ERR(E_NOMEM);

  10545  3 000077   000005 630400 4                  EPPR0   5
         3 000100   000004 631400 4                  EPPR1   4
         3 000101   000000 701000 xent               TSX1    XSD$ERR
         3 000102   000000 011000                    NOP     0

      432    10546    3                GOTO ERR;

PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:108  
  10546  3 000103   000456 710000 3                  TRA     ERR

      433    10547    3             END;
      434    10548
      435    10549    3           CALL XSS$GETMEM(XSD$CONTEXT.BINDFROMX,BINDFROM$,SIZEC(XSD$BINDTO))
             10549                    WHENALTRETURN DO;

  10549  3 000104   000012 236000 4                  LDQ     10
         3 000105   200206 756100                    STQ     XSD@SERVICE+16,,AUTO
         3 000106   200005 630500                    EPPR0   BINDFROM$,,AUTO
         3 000107   200205 450500                    STP0    XSD@SERVICE+15,,AUTO
         3 000110   200010 236100                    LDQ     CONTEXT$,,AUTO
         3 000111   000002 036003                    ADLQ    2,DU
         3 000112   200204 756100                    STQ     XSD@SERVICE+14,,AUTO
         3 000113   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000114   000001 631400 4                  EPPR1   1
         3 000115   000000 701000 xent               TSX1    XSS$GETMEM
         3 000116   000120 702000 3                  TSX2    s:10550
         3 000117   000125 710000 3                  TRA     s:10554

      436    10550    3                CALL XSD$ERR(E_NOMEM);

  10550  3 000120   000005 630400 4                  EPPR0   5
         3 000121   000004 631400 4                  EPPR1   4
         3 000122   000000 701000 xent               TSX1    XSD$ERR
         3 000123   000000 011000                    NOP     0

      437    10551    3                GOTO ERR;

  10551  3 000124   000456 710000 3                  TRA     ERR

      438    10552    3             END;
      439    10553
      440    10554    3           CALL XSS$GETMEM(XSD$CONTEXT.BUFX,BUF$,1024) WHENALTRETURN DO;

  10554  3 000125   000007 236000 4                  LDQ     7
         3 000126   200206 756100                    STQ     XSD@SERVICE+16,,AUTO
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:109  
         3 000127   200006 630500                    EPPR0   BUF$,,AUTO
         3 000130   200205 450500                    STP0    XSD@SERVICE+15,,AUTO
         3 000131   200010 236100                    LDQ     CONTEXT$,,AUTO
         3 000132   000010 036000 4                  ADLQ    8
         3 000133   200204 756100                    STQ     XSD@SERVICE+14,,AUTO
         3 000134   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000135   000001 631400 4                  EPPR1   1
         3 000136   000000 701000 xent               TSX1    XSS$GETMEM
         3 000137   000141 702000 3                  TSX2    s:10555
         3 000140   000146 710000 3                  TRA     s:10568

      441    10555    3                CALL XSD$ERR(E_NOMEM);

  10555  3 000141   000005 630400 4                  EPPR0   5
         3 000142   000004 631400 4                  EPPR1   4
         3 000143   000000 701000 xent               TSX1    XSD$ERR
         3 000144   000000 011000                    NOP     0

      442    10556    3                GOTO ERR;

  10556  3 000145   000456 710000 3                  TRA     ERR

      443    10557    3             END;
      444    10558        /*
      445    10559             get memory for context and associated blocks.
      446    10560             decode the bind pdu.
      447    10561             is the pdu valid?
      448    10562                yes - validate the user by reading the entry in the directory.
      449    10563                no  - send binderr.
      450    10564                      send aascrsp result=perm.
      451    10565                      dump all memory for this connection.
      452    10566                      return and wait for the next message.
      453    10567        */
      454    10568    2           SIZE = XSC$AASCIND.DATA$->XSP$ASN1_FPT.NXTX;

  10568  3 000146   200014 470500                    LDP0    PARM$,,AUTO
         3 000147   000002 471500                    LDP1    2,,PR0
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:110  
         3 000150   100014 235100                    LDA     12,,PR1
         3 000151   200015 755100                    STA     SIZE,,AUTO

      455    10569    2           IF XSC$AASCIND.CTXT$->B$PTR$(XSC$AASCIND.DATA$->XSP$ASN1_FPT.CTXTID)->
             10569                    B$TEXTH ~=

  10569  3 000152   000002 471500                    LDP1    2,,PR0
         3 000153   000015 473500                    LDP3    13,,PR0
         3 000154   100005 720100                    LXL0    5,,PR1
         3 000155   100005 721100                    LXL1    5,,PR1
         3 000156   300000 474511                    LDP4    0,X1,PR3
         3 000157   300000 475510                    LDP5    0,X0,PR3
         3 000160   000100 100500                    MLR     fill='000'O
         3 000161   400000 000002                    ADSC9   0,,PR4                   cn=0,n=2
         3 000162   200204 000004                    ADSC9   XSD@SERVICE+14,,AUTO     cn=0,n=4
         3 000163   200204 220100                    LDX0    XSD@SERVICE+14,,AUTO
         3 000164   000002 621010                    EAX1    2,X0
         3 000165   000000 106540                    CMPC    fill='000'O
         3 000166   500000 000011                    ADSC9   0,,PR5                   cn=0,n=*X1
         3 000167   000000 000003 xsym               ADSC9   XSD_IDASDUA              cn=0,n=3
         3 000170   000172 600000 3                  TZE     s:10574

      456    10570    3             XSD_IDASDUA THEN DO;

      457    10571    3                GOTO BINDERR;

  10571  3 000171   000236 710000 3                  TRA     BINDERR

      458    10572    3             END;
      459    10573
      460    10574    2           CALL XSD$BIND(XSD@SERVICE,XSD$BINDTO,XSD$BINDFROM,

  10574  3 000172   000002 471500                    LDP1    2,,PR0
         3 000173   100001 473500                    LDP3    1,,PR1
         3 000174   000016 236000 4                  LDQ     14
         3 000175   200211 756100                    STQ     XSD@SERVICE+19,,AUTO
         3 000176   100014 634500                    EPPR4   12,,PR1
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:111  
         3 000177   200210 454500                    STP4    XSD@SERVICE+18,,AUTO
         3 000200   200207 453500                    STP3    XSD@SERVICE+17,,AUTO
         3 000201   200005 236100                    LDQ     BINDFROM$,,AUTO
         3 000202   200206 756100                    STQ     XSD@SERVICE+16,,AUTO
         3 000203   200004 236100                    LDQ     BINDTO$,,AUTO
         3 000204   200205 756100                    STQ     XSD@SERVICE+15,,AUTO
         3 000205   200166 631500                    EPPR1   XSD@SERVICE,,AUTO
         3 000206   200204 451500                    STP1    XSD@SERVICE+14,,AUTO
         3 000207   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000210   000014 631400 4                  EPPR1   12
         3 000211   000000 701000 xent               TSX1    XSD$BIND
         3 000212   000400 702000 3                  TSX2    CANTENCODE

      461    10575    2             XSC$AASCIND.DATA$->XSP$ASN1_FPT.BUF$->BUFFER,
      462    10576    2             XSC$AASCIND.DATA$->XSP$ASN1_FPT.NXTX,'0'B)
      463    10577    3           WHENRETURN DO;

      464    10578    3                XSD@SERVICE = XSD_SERVICE_C;

  10578  3 000213   000100 100400                    MLR     fill='000'O
         3 000214   000000 000064 2                  ADSC9   XSD_SERVICE_C            cn=0,n=52
         3 000215   200166 000064                    ADSC9   XSD@SERVICE,,AUTO        cn=0,n=52

      465    10579    3                XSD@SERVICE.ATTRIBUTE.TYPE(0) = %XSD_AT_COMMONNAME;

  10579  3 000216   000003 235007                    LDA     3,DL
         3 000217   200201 755100                    STA     XSD@SERVICE+11,,AUTO

      466    10580    3                XSD@SERVICE.ATTRIBUTE.VALUE$(0) = ADDR(XSD$BINDFROM.COMMONNAME);

  10580  3 000220   200005 236100                    LDQ     BINDFROM$,,AUTO
         3 000221   200202 756100                    STQ     XSD@SERVICE+12,,AUTO

      467    10581    3                XSD@SERVICE.RESULT_ = VECTOR(XSC@ADDRESS);

  10581  3 000222   000017 235000 4                  LDA     15
         3 000223   200204 452500                    STP2    XSD@SERVICE+14,,AUTO
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:112  
         3 000224   200204 236100                    LDQ     XSD@SERVICE+14,,AUTO
         3 000225   000016 036003                    ADLQ    14,DU
         3 000226   200174 757100                    STAQ    XSD@SERVICE+6,,AUTO

      468    10582    4                CALL XSD$READ(XSD@SERVICE) WHENALTRETURN DO;

  10582  3 000227   200166 630500                    EPPR0   XSD@SERVICE,,AUTO
         3 000230   200204 450500                    STP0    XSD@SERVICE+14,,AUTO
         3 000231   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000232   000004 631400 4                  EPPR1   4
         3 000233   000000 701000 xent               TSX1    XSD$READ
         3 000234   000236 702000 3                  TSX2    BINDERR
         3 000235   000321 710000 3                  TRA     s:10611

      469    10583    4   BINDERR:          ;

  10583  3 000236                       BINDERR      null
      470    10584    4                     ERROR = %XSD_ERR_SECURITY;

  10584  3 000236   000001 235007                    LDA     1,DL
         3 000237   200012 755100                    STA     ERROR,,AUTO

      471    10585    4                     PROBLEM = %XSD_PROB_INAPPAUTH;

  10585  3 000240   200013 755100                    STA     PROBLEM,,AUTO

      472    10586    4                     SIZE = 1024;

  10586  3 000241   002000 236007                    LDQ     1024,DL
         3 000242   200015 756100                    STQ     SIZE,,AUTO

      473    10587    5                     CALL XSD$BINDERR(XSD@SERVICE,ERROR,PROBLEM,BUFFER,SIZE,'1'B)
             10587                              WHENALTRETURN DO;

  10587  3 000243   000021 236000 4                  LDQ     17
         3 000244   200211 756100                    STQ     XSD@SERVICE+19,,AUTO
         3 000245   200015 630500                    EPPR0   SIZE,,AUTO
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:113  
         3 000246   200210 450500                    STP0    XSD@SERVICE+18,,AUTO
         3 000247   200006 236100                    LDQ     BUF$,,AUTO
         3 000250   200207 756100                    STQ     XSD@SERVICE+17,,AUTO
         3 000251   200013 631500                    EPPR1   PROBLEM,,AUTO
         3 000252   200206 451500                    STP1    XSD@SERVICE+16,,AUTO
         3 000253   200012 633500                    EPPR3   ERROR,,AUTO
         3 000254   200205 453500                    STP3    XSD@SERVICE+15,,AUTO
         3 000255   200166 634500                    EPPR4   XSD@SERVICE,,AUTO
         3 000256   200204 454500                    STP4    XSD@SERVICE+14,,AUTO
         3 000257   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000260   000014 631400 4                  EPPR1   12
         3 000261   000000 701000 xent               TSX1    XSD$BINDERR
         3 000262   000264 702000 3                  TSX2    s:10588
         3 000263   000273 710000 3                  TRA     s:10591

      474    10588    5                          CALL XSD$ERR(XSD@SERVICE.ERRCODE);
             10588                                   /* this better not happen */

  10588  3 000264   200171 630500                    EPPR0   XSD@SERVICE+3,,AUTO
         3 000265   200204 450500                    STP0    XSD@SERVICE+14,,AUTO
         3 000266   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000267   000004 631400 4                  EPPR1   4
         3 000270   000000 701000 xent               TSX1    XSD$ERR
         3 000271   000000 011000                    NOP     0

      475    10589    5                          GOTO ERR;

  10589  3 000272   000456 710000 3                  TRA     ERR

      476    10590    5                       END;
      477    10591    4                     XSC@AASCRSP_NAK = XSC$AASCIND; /* sets up data$ too */

  10591  3 000273   200014 470500                    LDP0    PARM$,,AUTO
         3 000274   000100 100500                    MLR     fill='000'O
         3 000275   000000 000070                    ADSC9   0,,PR0                   cn=0,n=56
         3 000276   200132 000070                    ADSC9   XSC@AASCRSP_NAK,,AUTO    cn=0,n=56

PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:114  
      478    10592    4                     XSC@AASCRSP_NAK.FNC = %XSC_FNC_AASCRSP#;

  10592  3 000277   003000 236003                    LDQ     1536,DU
         3 000300   200132 552140                    STBQ    XSC@AASCRSP_NAK,'40'O,AUTO

      479    10593    4                     XSC@AASCRSP_NAK.RESULT = %XSC_RSLT_PERMREJECT#;

  10593  3 000301   000001 236007                    LDQ     1,DL
         3 000302   200132 552104                    STBQ    XSC@AASCRSP_NAK,'04'O,AUTO

      480    10594    5                     CALL XSC$ACSE(XSC@AASCRSP_NAK) WHENALTRETURN DO;

  10594  3 000303   200132 631500                    EPPR1   XSC@AASCRSP_NAK,,AUTO
         3 000304   200204 451500                    STP1    XSD@SERVICE+14,,AUTO
         3 000305   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000306   000004 631400 4                  EPPR1   4
         3 000307   000000 701000 xent               TSX1    XSC$ACSE
         3 000310   000312 702000 3                  TSX2    s:10595
         3 000311   000320 710000 3                  TRA     s:10597

      481    10595    5                          CALL XSD$ERR(XSC@AASCRSP_NAK.ERROR);

  10595  3 000312   200133 630500                    EPPR0   XSC@AASCRSP_NAK+1,,AUTO
         3 000313   200204 450500                    STP0    XSD@SERVICE+14,,AUTO
         3 000314   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000315   000004 631400 4                  EPPR1   4
         3 000316   000000 701000 xent               TSX1    XSD$ERR
         3 000317   000000 011000                    NOP     0

      482    10596    5                       END;

      483    10597    4                     GOTO ERR;

  10597  3 000320   000456 710000 3                  TRA     ERR

      484    10598    4                  END;                     /* whenaltreturn xsd$read */
      485    10599        /*
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:115  
      486    10600                   user is valid.
      487    10601                   are we who the user thinks we are.
      488    10602                      yes - send the aascrsp_ok to the remote end.
      489    10603                            set the state to waitservice request.
      490    10604                            set the dsabit according to the value in IMPL$.
      491    10605                            add current context to list of contexts
      492    10606                            wait for incoming events
      493    10607                      no  - send a service error to remote
      494    10608                            disconnect
      495    10609        */
      496    10610
      497    10611    3                XSD@SERVICE.ATTRIBUTE.VALUE$(0) = ADDR(XSD$BINDTO.COMMONNAME);

  10611  3 000321   200004 236100                    LDQ     BINDTO$,,AUTO
         3 000322   200202 756100                    STQ     XSD@SERVICE+12,,AUTO

      498    10612    3                CALL XSD$READ(XSD@SERVICE) ALTRET(BINDERR);

  10612  3 000323   200166 630500                    EPPR0   XSD@SERVICE,,AUTO
         3 000324   200204 450500                    STP0    XSD@SERVICE+14,,AUTO
         3 000325   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000326   000004 631400 4                  EPPR1   4
         3 000327   000000 701000 xent               TSX1    XSD$READ
         3 000330   000236 702000 3                  TSX2    BINDERR

      499    10613        /*
      500    10614                   reencode the pdu, but switch the to and from fields.
      501    10615        */
      502    10616    3                SIZE = 1024;

  10616  3 000331   002000 235007                    LDA     1024,DL
         3 000332   200015 755100                    STA     SIZE,,AUTO

      503    10617    3                CALL XSD$BIND(XSD@SERVICE,XSD$BINDFROM,XSD$BINDTO,BUFFER,SIZE,'1'B)
             10617                         ALTRET(CANTENCODE);

  10617  3 000333   000021 236000 4                  LDQ     17
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:116  
         3 000334   200211 756100                    STQ     XSD@SERVICE+19,,AUTO
         3 000335   200015 630500                    EPPR0   SIZE,,AUTO
         3 000336   200210 450500                    STP0    XSD@SERVICE+18,,AUTO
         3 000337   200006 236100                    LDQ     BUF$,,AUTO
         3 000340   200004 235100                    LDA     BINDTO$,,AUTO
         3 000341   200206 757100                    STAQ    XSD@SERVICE+16,,AUTO
         3 000342   200005 236100                    LDQ     BINDFROM$,,AUTO
         3 000343   200205 756100                    STQ     XSD@SERVICE+15,,AUTO
         3 000344   200166 631500                    EPPR1   XSD@SERVICE,,AUTO
         3 000345   200204 451500                    STP1    XSD@SERVICE+14,,AUTO
         3 000346   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000347   000014 631400 4                  EPPR1   12
         3 000350   000000 701000 xent               TSX1    XSD$BIND
         3 000351   000400 702000 3                  TSX2    CANTENCODE

      504    10618    3                XSC@AASCRSP.FNC = %XSC_FNC_AASCRSP#;

  10618  3 000352   003000 236003                    LDQ     1536,DU
         3 000353   200150 552140                    STBQ    XSC@AASCRSP,'40'O,AUTO

      505    10619    3                XSC@AASCRSP.RESULT = %XSC_RSLT_ACCEPTED#;

  10619  3 000354   000000 236003                    LDQ     0,DU
         3 000355   200150 552104                    STBQ    XSC@AASCRSP,'04'O,AUTO

      506    10620    3                XSC@AASCRSP.DATA$ = XSC$AASCIND.DATA$;

  10620  3 000356   200014 470500                    LDP0    PARM$,,AUTO
         3 000357   000002 236100                    LDQ     2,,PR0
         3 000360   200152 756100                    STQ     XSC@AASCRSP+2,,AUTO

      507    10621    4                CALL XSC$ACSE(XSC@AASCRSP) WHENALTRETURN DO;

  10621  3 000361   200150 631500                    EPPR1   XSC@AASCRSP,,AUTO
         3 000362   200204 451500                    STP1    XSD@SERVICE+14,,AUTO
         3 000363   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000364   000004 631400 4                  EPPR1   4
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:117  
         3 000365   000000 701000 xent               TSX1    XSC$ACSE
         3 000366   000370 702000 3                  TSX2    s:10622
         3 000367   000377 710000 3                  TRA     s:10625

      508    10622    4                     CALL XSD$ERR(XSC@AASCRSP.ERROR);

  10622  3 000370   200151 630500                    EPPR0   XSC@AASCRSP+1,,AUTO
         3 000371   200204 450500                    STP0    XSD@SERVICE+14,,AUTO
         3 000372   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000373   000004 631400 4                  EPPR1   4
         3 000374   000000 701000 xent               TSX1    XSD$ERR
         3 000375   000000 011000                    NOP     0

      509    10623    4                     GOTO ERR;

  10623  3 000376   000456 710000 3                  TRA     ERR

      510    10624    4                  END;
      511    10625    3             END;

  10625  3 000377   000407 710000 3                  TRA     s:10632

      512    10626    3           WHENALTRETURN DO;

  10620  3 000400                       CANTENCODE   null
      513    10627    3   CANTENCODE:  ;
      514    10628    3                CALL XSD$ERR(XSD@SERVICE.ERRCODE);

  10628  3 000400   200171 630500                    EPPR0   XSD@SERVICE+3,,AUTO
         3 000401   200204 450500                    STP0    XSD@SERVICE+14,,AUTO
         3 000402   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000403   000004 631400 4                  EPPR1   4
         3 000404   000000 701000 xent               TSX1    XSD$ERR
         3 000405   000000 011000                    NOP     0

      515    10629    3                GOTO ERR;

PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:118  
  10629  3 000406   000456 710000 3                  TRA     ERR

      516    10630    3             END;
      517    10631
      518    10632    2           XSD$CONTEXT.STATE = %XSD_ST_WAITSERVICEREQ;

  10632  3 000407   000005 235007                    LDA     5,DL
         3 000410   200010 470500                    LDP0    CONTEXT$,,AUTO
         3 000411   000003 755100                    STA     3,,PR0

      519    10633    3           DO INHIBIT;

      520    10634    3              IF XSD_CONTEXTXS = -1 THEN

  10634  3 000412   000000 236200 xsym               LDQ   ! XSD_CONTEXTXS
         3 000413   000022 116200 4                  CMPQ  ! 18
         3 000414   000421 601200 3                  TNZ   ! s:10637

      521    10635    3                 XSD_CONTEXTXS = CONTEXTXS;

  10635  3 000415   200011 235300                    LDA   ! CONTEXTX,,AUTO
         3 000416   000022 731200                    ARS   ! 18
         3 000417   000000 755200 xsym               STA   ! XSD_CONTEXTXS
         3 000420   000454 710200 3                  TRA   ! s:10647

      522    10636    4              ELSE DO;

      523    10637    5                   CALL XSS$BUFPTR(XSD_CONTEXTXS,CONTEXT$) WHENALTRETURN DO;

  10637  3 000421   200010 630700                    EPPR0 ! CONTEXT$,,AUTO
         3 000422   200205 450700                    STP0  ! XSD@SERVICE+15,,AUTO
         3 000423   000024 236200 4                  LDQ   ! 20
         3 000424   200204 756300                    STQ   ! XSD@SERVICE+14,,AUTO
         3 000425   200204 630700                    EPPR0 ! XSD@SERVICE+14,,AUTO
         3 000426   000023 631600 4                  EPPR1 ! 19
         3 000427   000000 701200 xent               TSX1  ! XSS$BUFPTR
         3 000430   000432 702200 3                  TSX2  ! BADBUF
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:119  
         3 000431   000437 710200 3                  TRA   ! s:10642

  10637  3 000432                       BADBUF       null
      524    10638    5   BADBUF:              ;
      525    10639    5                        CALL FOI$SNAP(E_BUFFERERR,'XS','D');

  10639  3 000432   000026 630600 4                  EPPR0 ! 22
         3 000433   000001 631600 4                  EPPR1 ! 1
         3 000434   000000 701200 xent               TSX1  ! FOI$SNAP
         3 000435   000000 011200                    NOP   ! 0

      526    10640    5                        RETURN;

  10640  3 000436   000000 702200 xent               TSX2  ! X66_ARET

      527    10641    5                     END;                  /*    whenaltreturn */
      528    10642    5                   DO WHILE XSD$CONTEXT.NEXTXS ~= -1;

  10642  3 000437   000450 710200 3                  TRA   ! s:10645

      529    10643    5                      CALL XSS$BUFPTR(XSD$CONTEXT.NEXTXS,CONTEXT$) ALTRET(BADBUF);

  10643  3 000440   200010 630700                    EPPR0 ! CONTEXT$,,AUTO
         3 000441   200205 450700                    STP0  ! XSD@SERVICE+15,,AUTO
         3 000442   200010 236300                    LDQ   ! CONTEXT$,,AUTO
         3 000443   200204 756300                    STQ   ! XSD@SERVICE+14,,AUTO
         3 000444   200204 630700                    EPPR0 ! XSD@SERVICE+14,,AUTO
         3 000445   000023 631600 4                  EPPR1 ! 19
         3 000446   000000 701200 xent               TSX1  ! XSS$BUFPTR
         3 000447   000432 702200 3                  TSX2  ! BADBUF

      530    10644
      531    10645    5                   END;

  10645  3 000450   200010 470700                    LDP0  ! CONTEXT$,,AUTO
         3 000451   000000 220300                    LDX0  ! 0,,PR0
         3 000452   777777 100203                    CMPX0 ! -1,DU
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:120  
         3 000453   000440 601200 3                  TNZ   ! s:10643

      532    10646    4                END;

      533    10647    3           END;                            /* do inhibit */

  10647  3 000454   000455 710000 3                  TRA     s:10662

      534    10648    2         CASE(%XSC_FNC_AASCRSP#);

      535    10649    2         CASE(%XSC_FNC_AASCCNF#);

      536    10650
      537    10651    2         CASE(%XSC_FNC_ARELREQ#);

      538    10652    2         CASE(%XSC_FNC_ARELIND#);

      539    10653    2         CASE(%XSC_FNC_ARELRSP#);

      540    10654    2         CASE(%XSC_FNC_ARELCNF#);

      541    10655
      542    10656    2         CASE(%XSC_FNC_AUABREQ#);

      543    10657    2         CASE(%XSC_FNC_AUABIND#);

      544    10658
      545    10659    2         CASE(%XSC_FNC_APABIND#);

      546    10660    2        END;                               /* case on fnc */

      547    10661
      548    10662    2        DO WHILE '0'B;

  10662  3 000455   000541 710000 3                  TRA     s:10677

  10654  3 000456                       ERR          null
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:121  
      549    10663    2   ERR:    ;
      550    10664    2           CALL FOI$SNAP(%E$NOMEM,'XS','D');

  10664  3 000456   000032 630400 4                  EPPR0   26
         3 000457   000001 631400 4                  EPPR1   1
         3 000460   000000 701000 xent               TSX1    FOI$SNAP
         3 000461   000000 011000                    NOP     0

  10654  3 000462                       ERR_NOSNAP   null
      551    10665    2   ERR_NOSNAP:;
      552    10666    3           IF CONTEXTXS ~= -1 THEN DO;

  10666  3 000462   200011 220100                    LDX0    CONTEXTX,,AUTO
         3 000463   777777 100003                    CMPX0   -1,DU
         3 000464   000541 600000 3                  TZE     s:10677

      553    10667    3                IF XSD$CONTEXT.BUFXS ~= -1 THEN

  10667  3 000465   200010 470500                    LDP0    CONTEXT$,,AUTO
         3 000466   000002 721100                    LXL1    2,,PR0
         3 000467   777777 101003                    CMPX1   -1,DU
         3 000470   000500 600000 3                  TZE     s:10669

      554    10668    3                   CALL XSS$RELMEM(XSD$CONTEXT.BUFX);

  10668  3 000471   200010 236100                    LDQ     CONTEXT$,,AUTO
         3 000472   000010 036000 4                  ADLQ    8
         3 000473   200204 756100                    STQ     XSD@SERVICE+14,,AUTO
         3 000474   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000475   000004 631400 4                  EPPR1   4
         3 000476   000000 701000 xent               TSX1    XSS$RELMEM
         3 000477   000000 011000                    NOP     0

      555    10669    3                IF XSD$CONTEXT.BINDTOXS ~= -1 THEN

  10669  3 000500   200010 470500                    LDP0    CONTEXT$,,AUTO
         3 000501   000001 720100                    LXL0    1,,PR0
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:122  
         3 000502   777777 100003                    CMPX0   -1,DU
         3 000503   000513 600000 3                  TZE     s:10671

      556    10670    3                   CALL XSS$RELMEM(XSD$CONTEXT.BINDTOX);

  10670  3 000504   200010 236100                    LDQ     CONTEXT$,,AUTO
         3 000505   000013 036000 4                  ADLQ    11
         3 000506   200204 756100                    STQ     XSD@SERVICE+14,,AUTO
         3 000507   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000510   000004 631400 4                  EPPR1   4
         3 000511   000000 701000 xent               TSX1    XSS$RELMEM
         3 000512   000000 011000                    NOP     0

      557    10671    3                IF XSD$CONTEXT.BINDFROMXS ~= -1 THEN

  10671  3 000513   200010 470500                    LDP0    CONTEXT$,,AUTO
         3 000514   000002 220100                    LDX0    2,,PR0
         3 000515   777777 100003                    CMPX0   -1,DU
         3 000516   000526 600000 3                  TZE     s:10673

      558    10672    3                   CALL XSS$RELMEM(XSD$CONTEXT.BINDFROMX);

  10672  3 000517   200010 236100                    LDQ     CONTEXT$,,AUTO
         3 000520   000002 036003                    ADLQ    2,DU
         3 000521   200204 756100                    STQ     XSD@SERVICE+14,,AUTO
         3 000522   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000523   000004 631400 4                  EPPR1   4
         3 000524   000000 701000 xent               TSX1    XSS$RELMEM
         3 000525   000000 011000                    NOP     0

      559    10673    3                IF XSD$CONTEXT.BUFXS ~= -1 THEN

  10673  3 000526   200010 470500                    LDP0    CONTEXT$,,AUTO
         3 000527   000002 720100                    LXL0    2,,PR0
         3 000530   777777 100003                    CMPX0   -1,DU
         3 000531   000541 600000 3                  TZE     s:10677

PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:123  
      560    10674    3                   CALL XSS$RELMEM(XSD$CONTEXT.BUFX);

  10674  3 000532   200010 236100                    LDQ     CONTEXT$,,AUTO
         3 000533   000010 036000 4                  ADLQ    8
         3 000534   200204 756100                    STQ     XSD@SERVICE+14,,AUTO
         3 000535   200204 630500                    EPPR0   XSD@SERVICE+14,,AUTO
         3 000536   000004 631400 4                  EPPR1   4
         3 000537   000000 701000 xent               TSX1    XSS$RELMEM
         3 000540   000000 011000                    NOP     0

      561    10675    3             END;

      562    10676    2        END;

      563    10677    1   END XSD$RECV;

  10677  3 000541   000000 702200 xent               TSX2  ! X66_ARET

E_BUFFERERR
 Sect OctLoc
   1     000   302304 000170                                                    ...x

XSD_SERVICE_C
 Sect OctLoc
   2     000   001001 000000   000000 000000   020000 000000   000000 000000    ................
   2     004   000000 006014   000000 000000   000000 177640   000000 006014    ................
   2     010   000000 000000   000000 006014   000000 006014   ****** ******    ................
   2     014   ****** ******                                                    ....

(unnamed)
 Sect OctLoc
   2     015   ****** ******   130123 040040                                    ....XS

(unnamed)
 Sect OctLoc
   4     000   000000 006014   000003 000000   000000 000034   000002 006000    ................
   4     004   000001 000000   000000 006000   000000 002000   000006 006000    ................
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:124  
   4     010   000002 400000   000000 004101   000011 006000   000001 400000    .......A........
   4     014   000006 000000   000000 000000   000015 006000   000113 777640    .............K..
   4     020   400000 000000   000020 006000   777777 777777   000002 000000    ................
   4     024   000000 006000   104040 040040   000000 006000   000016 006000    ....D   ........
   4     030   000025 006000   000000 000010   000031 006000   000016 006000    ................
   4     034   000025 006000                                                    ....
      564    10678        %EOD;

PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:125  
--  Include file information  --

   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSD_SUBS_C.:XSA1TOU  is referenced.
   XSD_PERR_C.:XSA1TOU  is referenced.
   XSD_ERRORS_E.:XSA1TOU  is referenced.
   XSD_MACRO_M.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSD$RECV.
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:126  

 **** Variables and constants ****

  ****  Section 001  Data  XSD$RECV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_BUFFERERR

  ****  Section 002 RoData XSD$RECV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(468)   r     1 XSD_SERVICE_C

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PARM                      5-0-0/w PTR         r     1 BINDFROM$
     4-0-0/w PTR         r     1 BINDTO$                    6-0-0/w PTR         r     1 BUF$
     7-0-0/w UBIN(9)     r     1 CCID                      10-0-0/w PTR         r     1 CONTEXT$
    11-0-0/h UBIN(18)    r     1 CONTEXTX                  11-0-0/h SBIN(18)    r     1 CONTEXTXS
    12-0-0/w UBIN        r     1 ERROR                     *0-0-0/w UBIN        r     1 PARM
    14-0-0/w PTR         r     1 PARM$                     13-0-0/w UBIN        r     1 PROBLEM
    15-0-0/w UBIN        r     1 SIZE                     150-0-0/w STRC(504)   r     1 XSC@AASCRSP
   132-0-0/w STRC(504)   r     1 XSC@AASCRSP_NAK           16-0-0/w STRC(2718)  r     1 XSC@ADDRESS
   166-0-0/d STRC(468)   r     1 XSD@SERVICE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_NOMEM                    0-0-0/w SBIN        r     1 XSD_CONTEXTXS
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:127  
     0-0-0/c STRC(27)    r     1 XSD_IDASDUA

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$PTR$(0:0)                0-0-0/c ASTR(18)    r     1 B$TEXTH
     0-0-0/c ACHR        r     1 BUFFER                     0-0-0/w STRC(504)   r     1 XSC$AASCIND
     0-0-0/w STRC(504)   r     1 XSC$GENERIC                0-0-0/c STRC(19017) r     1 XSD$BINDFROM
     0-0-0/c STRC(19017) r     1 XSD$BINDTO                 0-0-0/w STRC(252)   r     1 XSD$CONTEXT
     0-0-0/w STRC(504)   r     1 XSP$ASN1_FPT


   Procedure XSD$RECV requires 354 words for executable code.
   Procedure XSD$RECV requires 138 words of local(AUTO) storage.
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:128  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:129  
          MINI XREF LISTING

B$PTR$
      8954**DCL     10569>>IF      10569>>IF
B$TEXTH
      9061**DCL     10569>>IF
B$TEXTH.L
      9062**DCL      9063--IMP-SIZ 10569>>IF
BADBUF
     10637**LABEL   10643--CALLALT
BINDERR
     10583**LABEL   10571--GOTO    10612--CALLALT
BINDFROM$
      8953**DCL      9648--IMP-PTR 10549<>CALL    10574>>CALL    10580>>ASSIGN  10617>>CALL
BINDTO$
      8952**DCL      9870--IMP-PTR 10544<>CALL    10574>>CALL    10611>>ASSIGN  10617>>CALL
BUF$
      8955**DCL      8956--IMP-PTR 10539<>CALL    10554<>CALL    10587>>CALL    10617>>CALL
BUFFER
      8956**DCL     10574<>CALL    10587<>CALL    10617<>CALL
CANTENCODE
     10620**LABEL   10617--CALLALT
CCID
      8958**DCL     10527<<ASSIGN
CONTEXT$
      8959**DCL     10092--IMP-PTR 10534<>CALL    10539>>CALL    10544>>CALL    10549>>CALL    10554>>CALL
     10632>>ASSIGN  10637<>CALL    10642>>DOWHILE 10643>>CALL    10643<>CALL    10667>>IF      10668>>CALL
     10669>>IF      10670>>CALL    10671>>IF      10672>>CALL    10673>>IF      10674>>CALL
CONTEXTX
      8960**DCL      8961--REDEF
CONTEXTXS
      8961**DCL     10534<>CALL    10635>>ASSIGN  10666>>IF
ERR
     10654**LABEL   10536--GOTO    10541--GOTO    10546--GOTO    10551--GOTO    10556--GOTO    10589--GOTO
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:130  
     10597--GOTO    10623--GOTO    10629--GOTO
ERROR
      9053**DCL     10584<<ASSIGN  10587<>CALL
E_BUFFERERR
      9020**DCL     10639<>CALL
E_NOMEM
      8975**DCL     10535<>CALL    10540<>CALL    10545<>CALL    10550<>CALL    10555<>CALL
FOI$SNAP
      8940**DCL-ENT 10639--CALL    10664--CALL
PARM
      9057**DCL         9--PROC    10526--ASSIGN
PARM$
      9056**DCL      9365--IMP-PTR  9590--IMP-PTR 10526<<ASSIGN  10527>>ASSIGN  10529>>DOCASE  10568>>ASSIGN
     10569>>IF      10569>>IF      10569>>IF      10569>>IF      10574>>CALL    10574>>CALL    10591>>ASSIGN
     10620>>ASSIGN
PROBLEM
      9055**DCL     10585<<ASSIGN  10587<>CALL
SIZE
      9059**DCL      8956--IMP-SIZ 10568<<ASSIGN  10574>>CALL    10586<<ASSIGN  10587>>CALL    10587<>CALL
     10616<<ASSIGN  10617>>CALL    10617<>CALL
XSC$AASCIND
      9365**DCL     10591>>ASSIGN
XSC$AASCIND.CTXT$
      9421**DCL     10569>>IF      10569>>IF
XSC$AASCIND.DATA$
      9410**DCL     10568>>ASSIGN  10569>>IF      10569>>IF      10574>>CALL    10574>>CALL    10620>>ASSIGN
XSC$AASCIND.ERRDEF
      9380**DCL      9400--REDEF
XSC$ACSE
      8941**DCL-ENT 10594--CALL    10621--CALL
XSC$GENERIC.CCID
      9597**DCL     10527>>ASSIGN
XSC$GENERIC.ERRDEF
      9599**DCL      9619--REDEF
XSC$GENERIC.FNC
      9596**DCL     10529>>DOCASE
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:131  
XSC@AASCRSP
      9515**DCL     10621<>CALL
XSC@AASCRSP.DATA$
      9560**DCL     10620<<ASSIGN
XSC@AASCRSP.ERRDEF
      9530**DCL      9550--REDEF
XSC@AASCRSP.ERROR
      9550**DCL     10622<>CALL
XSC@AASCRSP.FNC
      9526**DCL     10618<<ASSIGN
XSC@AASCRSP.RESULT
      9529**DCL     10619<<ASSIGN
XSC@AASCRSP_NAK
      9440**DCL     10591<<ASSIGN  10594<>CALL
XSC@AASCRSP_NAK.ERRDEF
      9455**DCL      9475--REDEF
XSC@AASCRSP_NAK.ERROR
      9475**DCL     10595<>CALL
XSC@AASCRSP_NAK.FNC
      9451**DCL     10592<<ASSIGN
XSC@AASCRSP_NAK.RESULT
      9454**DCL     10593<<ASSIGN
XSC@ADDRESS
      9082**DCL     10581--ASSIGN
XSC@ADDRESS.NSAP.ADDRESS_N
      9343**DCL      9344--REDEF
XSD$BIND
      8942**DCL-ENT 10574--CALL    10617--CALL
XSD$BINDERR
      8943**DCL-ENT 10587--CALL
XSD$BINDFROM
      9648**DCL     10574<>CALL    10617<>CALL
XSD$BINDFROM.COMMONNAME
      9671**DCL     10580--ASSIGN
XSD$BINDTO
      9870**DCL     10544--CALL    10549--CALL    10574<>CALL    10617<>CALL
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:132  
XSD$BINDTO.COMMONNAME
      9893**DCL     10611--ASSIGN
XSD$CONTEXT
     10092**DCL     10534--CALL
XSD$CONTEXT.BINDFROMX
     10114**DCL     10549<>CALL    10672<>CALL
XSD$CONTEXT.BINDFROMXS
     10113**DCL     10114--REDEF   10671>>IF
XSD$CONTEXT.BINDTOX
     10110**DCL     10544<>CALL    10670<>CALL
XSD$CONTEXT.BINDTOXS
     10109**DCL     10110--REDEF   10669>>IF
XSD$CONTEXT.BUFX
     10118**DCL     10539<>CALL    10554<>CALL    10668<>CALL    10674<>CALL
XSD$CONTEXT.BUFXS
     10117**DCL     10118--REDEF   10667>>IF      10673>>IF
XSD$CONTEXT.NEXTXS
     10097**DCL     10098--REDEF   10642>>DOWHILE 10643<>CALL
XSD$CONTEXT.PRIORXS
     10100**DCL     10101--REDEF
XSD$CONTEXT.SERVICEXS
     10103**DCL     10104--REDEF
XSD$CONTEXT.STATE
     10120**DCL     10632<<ASSIGN
XSD$ERR
      8944**DCL-ENT 10535--CALL    10540--CALL    10545--CALL    10550--CALL    10555--CALL    10588--CALL
     10595--CALL    10622--CALL    10628--CALL
XSD$READ
      8945**DCL-ENT 10582--CALL    10612--CALL
XSD@SERVICE
     10212**DCL     10574<>CALL    10578<<ASSIGN  10582<>CALL    10587<>CALL    10612<>CALL    10617<>CALL
XSD@SERVICE.ATTRIBUTE.TYPE
     10349**DCL     10579<<ASSIGN
XSD@SERVICE.ATTRIBUTE.VALUE$
     10352**DCL     10580<<ASSIGN  10611<<ASSIGN
XSD@SERVICE.ERRCODE
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:133  
     10281**DCL     10312--REDEF   10313--REDEF   10588<>CALL    10628<>CALL
XSD@SERVICE.RESULT_
     10324**DCL     10581<<ASSIGN
XSD@SERVICE.UENTADDR$
     10328**DCL     10332--REDEF   10335--REDEF
XSD_CONTEXTXS
     10522**DCL     10634>>IF      10635<<ASSIGN  10637<>CALL
XSD_IDASDUA
     10147**DCL     10569>>IF
XSD_SERVICE_C
     10378**DCL     10578>>ASSIGN
XSD_SERVICE_C.ERRCODE
     10447**DCL     10478--REDEF   10479--REDEF
XSD_SERVICE_C.UENTADDR$
     10494**DCL     10498--REDEF   10501--REDEF
XSP$ASN1_FPT.BUF$
     10185**DCL     10574>>CALL
XSP$ASN1_FPT.C0
     10187**DCL     10187--REDEF
XSP$ASN1_FPT.CTXTID
     10186**DCL     10569>>IF      10569>>IF
XSP$ASN1_FPT.DAT$
     10189**DCL     10189--REDEF
XSP$ASN1_FPT.N0
     10188**DCL     10188--REDEF
XSP$ASN1_FPT.NXTX
     10188**DCL     10568>>ASSIGN  10574<>CALL
XSP$ASN1_FPT.R0
     10186**DCL     10187--REDEF
XSS$BUFPTR
      8948**DCL-ENT 10637--CALL    10643--CALL
XSS$GETMEM
      8946**DCL-ENT 10534--CALL    10539--CALL    10544--CALL    10549--CALL    10554--CALL
XSS$RELMEM
      8947**DCL-ENT 10668--CALL    10670--CALL    10672--CALL    10674--CALL
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:134  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:135  
              MINI UREF LISTING

ERR_NOSNAP   10654**LABEL
M$ACCT    5515**DCL-ENT
M$ACTIVATE    5518**DCL-ENT
M$ALIB    5511**DCL-ENT
M$ASUSER    5513**DCL-ENT
M$ATTACH    5520**DCL-ENT
M$BADPP    5538**DCL-ENT
M$CGCTL    5519**DCL-ENT
M$CGINFO    5519**DCL-ENT
M$CHECK    5500**DCL-ENT
M$CHGUNIT    5558**DCL-ENT
M$CLOSE    5498**DCL-ENT
M$CLRSTK    5556**DCL-ENT
M$CMDVAR    5567**DCL-ENT
M$CONFIG    5528**DCL-ENT
M$CORRES    5503**DCL-ENT
M$CPEXIT    5512**DCL-ENT
M$CVM    5536**DCL-ENT
M$CVOL    5501**DCL-ENT
M$DCLFLD    5528**DCL-ENT
M$DEACTIVATE    5518**DCL-ENT
M$DELREC    5500**DCL-ENT
M$DEQ    5565**DCL-ENT
M$DETACH    5520**DCL-ENT
M$DEVICE    5502**DCL-ENT
M$DISPLAY    5565**DCL-ENT
M$DISPRES    5505**DCL-ENT
M$DLIB    5511**DCL-ENT
M$DRIBBLE    5528**DCL-ENT
M$DRTN    5556**DCL-ENT
M$DSUSER    5513**DCL-ENT
M$ENQ    5564**DCL-ENT
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:136  
M$EOM    5523**DCL-ENT
M$ERASE    5529**DCL-ENT
M$ERR    5510**DCL-ENT
M$ERRMSG    5561**DCL-ENT
M$EVENT    5553**DCL-ENT
M$EXHUME    5562**DCL-ENT
M$EXIT    5510**DCL-ENT
M$EXTEND    5502**DCL-ENT
M$FDP    5534**DCL-ENT
M$FDS    5533**DCL-ENT
M$FEBOOT    5526**DCL-ENT
M$FECTL    5527**DCL-ENT
M$FEDUMP    5526**DCL-ENT
M$FID    5561**DCL-ENT
M$FINDPROC    5515**DCL-ENT
M$FSUSER    5513**DCL-ENT
M$FVP    5535**DCL-ENT
M$FWCG    5519**DCL-ENT
M$GBPL    5539**DCL-ENT
M$GDDL    5535**DCL-ENT
M$GDP    5534**DCL-ENT
M$GDS    5533**DCL-ENT
M$GETDCB    5504**DCL-ENT
M$GETMOUSE    5544**DCL-ENT
M$GETPM    5545**DCL-ENT
M$GJOB    5563**DCL-ENT
M$GLINEATTR    5523**DCL-ENT
M$GOODPP    5538**DCL-ENT
M$GPLATEN    5531**DCL-ENT
M$GPROMPT    5530**DCL-ENT
M$GTRMATTR    5524**DCL-ENT
M$GTRMCTL    5522**DCL-ENT
M$GTRMTAB    5525**DCL-ENT
M$GVP    5534**DCL-ENT
M$HELP    5561**DCL-ENT
M$INT    5553**DCL-ENT
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:137  
M$INTRTN    5514**DCL-ENT
M$IOQ    5549**DCL-ENT
M$JOBSTATS    5563**DCL-ENT
M$KEYIN    5503**DCL-ENT
M$LDEV    5498**DCL-ENT
M$LDTRC    5511**DCL-ENT
M$LIMIT    5504**DCL-ENT
M$LINES    5503**DCL-ENT
M$LINK    5510**DCL-ENT
M$MADMUCK    5506**DCL-ENT
M$MAKUSER    5537**DCL-ENT
M$MBS    5505**DCL-ENT
M$MDFFLD    5529**DCL-ENT
M$MERC    5554**DCL-ENT
M$MERCS    5555**DCL-ENT
M$MIRROR    5549**DCL-ENT
M$MONINFO    5566**DCL-ENT
M$MPL    5539**DCL-ENT
M$NODEINFO    5530**DCL-ENT
M$NXTUSR    5564**DCL-ENT
M$OCMSG    5562**DCL-ENT
M$OLAY    5510**DCL-ENT
M$OPEN    5498**DCL-ENT
M$PAS    5539**DCL-ENT
M$PATHCON    5562**DCL-ENT
M$PDS    5533**DCL-ENT
M$PFIL    5500**DCL-ENT
M$PLATEN    5524**DCL-ENT
M$PRECORD    5502**DCL-ENT
M$PROCNAME    5515**DCL-ENT
M$PROFILE    5526**DCL-ENT
M$PROMPT    5522**DCL-ENT
M$RACST    5506**DCL-ENT
M$RDSYSLOG    5547**DCL-ENT
M$READ    5499**DCL-ENT
M$RELDCB    5504**DCL-ENT
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:138  
M$RELRES    5505**DCL-ENT
M$RELSTARF    5507**DCL-ENT
M$REM    5507**DCL-ENT
M$RENV    5554**DCL-ENT
M$REQUIRE    5506**DCL-ENT
M$RETRY    5555**DCL-ENT
M$RETRYS    5555**DCL-ENT
M$REW    5501**DCL-ENT
M$RLSFLD    5529**DCL-ENT
M$RPRIV    5557**DCL-ENT
M$RSPP    5536**DCL-ENT
M$RSWITCH    5558**DCL-ENT
M$RUE    5564**DCL-ENT
M$SAD    5537**DCL-ENT
M$SAVE    5513**DCL-ENT
M$SCON    5514**DCL-ENT
M$SCREECH    5512**DCL-ENT
M$SENV    5554**DCL-ENT
M$SETFMA    5498**DCL-ENT
M$SETFP    5527**DCL-ENT
M$SINPUT    5525**DCL-ENT
M$SLCFLD    5530**DCL-ENT
M$SMOUSE    5544**DCL-ENT
M$SMPRT    5536**DCL-ENT
M$SPRIV    5557**DCL-ENT
M$SSC    5537**DCL-ENT
M$SSWITCH    5557**DCL-ENT
M$STATE    5566**DCL-ENT
M$STD    5538**DCL-ENT
M$STIMER    5552**DCL-ENT
M$STLPP    5535**DCL-ENT
M$STRAP    5552**DCL-ENT
M$STRMATTR    5524**DCL-ENT
M$STRMCTL    5522**DCL-ENT
M$STRMTAB    5525**DCL-ENT
M$SYMBIO    5563**DCL-ENT
PL6.E3A0      #004=XSD$RECV File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:139  
M$SYSCON    5549**DCL-ENT
M$SYSID    5567**DCL-ENT
M$TDCLOSE    5548**DCL-ENT
M$TDIO    5548**DCL-ENT
M$TDOPEN    5547**DCL-ENT
M$TDREQCPU    5548**DCL-ENT
M$TEMPWROC    5542**DCL-ENT
M$TIME    5565**DCL-ENT
M$TRAP    5552**DCL-ENT
M$TRMISC    5527**DCL-ENT
M$TRMPRG    5523**DCL-ENT
M$TRTN    5556**DCL-ENT
M$TRUNC    5499**DCL-ENT
M$TTIMER    5552**DCL-ENT
M$UC    5522**DCL
M$UMPL    5539**DCL-ENT
M$UNFID    5561**DCL-ENT
M$UNLATCH    5518**DCL-ENT
M$UNSHARE    5515**DCL-ENT
M$USRFIELD    5558**DCL-ENT
M$VIRTUAL    5533**DCL-ENT
M$WAIT    5556**DCL-ENT
M$WEOF    5501**DCL-ENT
M$WRITE    5499**DCL-ENT
M$WRSYSLOG    5547**DCL-ENT
M$XCON    5553**DCL-ENT
M$XCONRTN    5514**DCL-ENT
M$XEQTIME    5566**DCL-ENT
M$XFLUSH    5507**DCL-ENT
M$XMOUSE    5544**DCL-ENT
M$XXX    5510**DCL-ENT
M$YC    5512**DCL-ENT
XSD$DSDATA    8949**DCL-ENT
XSD$RECV       9**PROC

PL6.E3A0      #005=XSD$SEND File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:140  
      565        1        /*T***********************************************************/
      566        2        /*T*                                                         */
      567        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      568        4        /*T*                                                         */
      569        5        /*T***********************************************************/
      570        6        XSD$SEND: PROC(PARM) ALTRET;
      571        7    1   DCL PARM UBIN;
      572        8    1        PARM = PARM + 1;
      573        9    1   END XSD$SEND;
      574       10        %EOD;

PL6.E3A0      #005=XSD$SEND File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:141  
      No diagnostics issued in procedure XSD$SEND.

   Procedure XSD$SEND requires 7 words for executable code.
   Procedure XSD$SEND requires 4 words of local(AUTO) storage.

PL6.E3A0      #005=XSD$SEND File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:142  

 Object Unit name= XSD$SEND                                   File name= XSD$SUBS.:XSA1TOU
 UTS= OCT 01 '97 11:56:37.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none     7      7  XSD$SEND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  XSD$SEND

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
PL6.E3A0      #005=XSD$SEND File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:143  


      565        1        /*T***********************************************************/
      566        2        /*T*                                                         */
      567        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      568        4        /*T*                                                         */
      569        5        /*T***********************************************************/
      570        6        XSD$SEND: PROC(PARM) ALTRET;

      6  0 000000   000000 700200 xent  XSD$SEND     TSX0  ! X66_AUTO_1
         0 000001   000004 000001                    ZERO    4,1

      571        7    1   DCL PARM UBIN;
      572        8    1        PARM = PARM + 1;

      8  0 000002   200003 470500                    LDP0    @PARM,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000001 035007                    ADLA    1,DL
         0 000005   000000 755100                    STA     0,,PR0

      573        9    1   END XSD$SEND;

      9  0 000006   000000 702200 xent               TSX2  ! X66_ARET
      574       10        %EOD;

PL6.E3A0      #005=XSD$SEND File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:144  
      No diagnostics issued in procedure XSD$SEND.
PL6.E3A0      #005=XSD$SEND File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:145  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PARM                     *0-0-0/w UBIN        r     1 PARM


   Procedure XSD$SEND requires 7 words for executable code.
   Procedure XSD$SEND requires 4 words of local(AUTO) storage.
PL6.E3A0      #005=XSD$SEND File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:146  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=XSD$SEND File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:147  
          MINI XREF LISTING

PARM
         7**DCL         6--PROC        8<<ASSIGN      8>>ASSIGN
PL6.E3A0      #005=XSD$SEND File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:148  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #005=XSD$SEND File=XSD$SUBS.:XSA1TSI                               WED 10/01/97 11:56 Page:149  
              MINI UREF LISTING

XSD$SEND       6**PROC

PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:150  
      575        1        /*T***********************************************************/
      576        2        /*T*                                                         */
      577        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      578        4        /*T*                                                         */
      579        5        /*T***********************************************************/
      580        6        %EJECT;
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:151  
      581        7
      582        8        XSD$ERR: PROC(ERR,F1,F2,F3) ALTRET;
      583        9        /* PARAMS */
      584       10    1   DCL ERR UBIN WORD;
      585       11    1   DCL F1 VECTOR DALIGNED;
      586       12    1   DCL F2 VECTOR DALIGNED;
      587       13    1   DCL F3 VECTOR DALIGNED;
      588       14        /**/
      589       15        /* INCLUDES */
      590       16        %INCLUDE CP_6;
      591     5575        /**/
      592     5576        /* MACROS */
      593     5577        %B$TCB;
      594     5580        %B$ALT;
      595     5588        /**/
      596     5589        /* ENTRY DCLS */
      597     5590    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
      598     5591        /**/
      599     5592        /* SYMREFS */
      600     5593    1   DCL B$TCB$ PTR SYMREF;
      601     5594        /**/
      602     5595    1   DCL DCB# UBIN;
      603     5596        %VLP_ERRCODE(FPTN=ERRCODE);
      604     5641        %EJECT;
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:152  
      605     5642    2        IF ERR = 0 THEN DO;
      606     5643    2             ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      607     5644    2             ERRCODE.SEV = 0;
      608     5645    2             DCB# = B$TCB$->B$TCB.ALT$->B$ALT.DCB#;
      609     5646    2             CALL XUR$ERRMSG(ERRCODE,DCB#);
      610     5647    2          END;                             /* IF CODE = 0 */
      611     5648    2        ELSE DO;
      612     5649    2             CALL XUR$ERRMSG(ERR,,,F1,F2,F3) WHENALTRETURN
      613     5650    3               DO;
      614     5651                /*N* what should we do when altreturn*/
      615     5652    3               END;
      616     5653    2          END;                             /* ELSE */
      617     5654    1        RETURN;
      618     5655    1   END XSD$ERR;
      619     5656        %EOD;

PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:153  
--  Include file information  --

   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSD$ERR.

   Procedure XSD$ERR requires 38 words for executable code.
   Procedure XSD$ERR requires 14 words of local(AUTO) storage.

PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:154  

 Object Unit name= XSD$ERR                                    File name= XSD$SUBS.:XSA1TOU
 UTS= OCT 01 '97 11:56:39.08 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none     1      1  XSD$ERR
    2   Proc  even  none    38     46  XSD$ERR
    3  RoData even  none     5      5  XSD$ERR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        4  XSD$ERR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       7 XUR$ERRMSG
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:155  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:156  


      575        1        /*T***********************************************************/
      576        2        /*T*                                                         */
      577        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      578        4        /*T*                                                         */
      579        5        /*T***********************************************************/
      580        6        %EJECT;
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:157  
      581        7
      582        8        XSD$ERR: PROC(ERR,F1,F2,F3) ALTRET;

      8  2 000000   000000 700200 xent  XSD$ERR      TSX0  ! X66_AUTO_4
         2 000001   000016 000004                    ZERO    14,4

      583        9        /* PARAMS */
      584       10    1   DCL ERR UBIN WORD;
      585       11    1   DCL F1 VECTOR DALIGNED;
      586       12    1   DCL F2 VECTOR DALIGNED;
      587       13    1   DCL F3 VECTOR DALIGNED;
      588       14        /**/
      589       15        /* INCLUDES */
      590       16        %INCLUDE CP_6;
      591     5575        /**/
      592     5576        /* MACROS */
      593     5577        %B$TCB;
      594     5580        %B$ALT;
      595     5588        /**/
      596     5589        /* ENTRY DCLS */
      597     5590    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
      598     5591        /**/
      599     5592        /* SYMREFS */
      600     5593    1   DCL B$TCB$ PTR SYMREF;
      601     5594        /**/
      602     5595    1   DCL DCB# UBIN;
      603     5596        %VLP_ERRCODE(FPTN=ERRCODE);
      604     5641        %EJECT;
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:158  
      605     5642    2        IF ERR = 0 THEN DO;

   5642  2 000002   200003 470500                    LDP0    @ERR,,AUTO
         2 000003   000000 235100                    LDA     0,,PR0
         2 000004   000027 601000 2                  TNZ     s:5649

      606     5643    2             ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   5643  2 000005   000000 471400 xsym               LDP1    B$TCB$
         2 000006   100000 473500                    LDP3    0,,PR1
         2 000007   300102 236100                    LDQ     66,,PR3
         2 000010   000000 756000 1                  STQ     ERRCODE

      607     5644    2             ERRCODE.SEV = 0;

   5644  2 000011   000000 236000 3                  LDQ     0
         2 000012   000000 356000 1                  ANSQ    ERRCODE

      608     5645    2             DCB# = B$TCB$->B$TCB.ALT$->B$ALT.DCB#;

   5645  2 000013   100000 473500                    LDP3    0,,PR1
         2 000014   300101 235100                    LDA     65,,PR3
         2 000015   200007 755100                    STA     DCB#,,AUTO

      609     5646    2             CALL XUR$ERRMSG(ERRCODE,DCB#);

   5646  2 000016   200007 633500                    EPPR3   DCB#,,AUTO
         2 000017   200011 453500                    STP3    DCB#+2,,AUTO
         2 000020   000002 236000 3                  LDQ     2
         2 000021   200010 756100                    STQ     DCB#+1,,AUTO
         2 000022   200010 630500                    EPPR0   DCB#+1,,AUTO
         2 000023   000001 631400 3                  EPPR1   1
         2 000024   000000 701000 xent               TSX1    XUR$ERRMSG
         2 000025   000000 011000                    NOP     0

      610     5647    2          END;                             /* IF CODE = 0 */

PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:159  
   5647  2 000026   000045 710000 2                  TRA     s:5654

      611     5648    2        ELSE DO;

      612     5649    2             CALL XUR$ERRMSG(ERR,,,F1,F2,F3) WHENALTRETURN

   5649  2 000027   200006 236100                    LDQ     @F3,,AUTO
         2 000030   200005 235100                    LDA     @F2,,AUTO
         2 000031   200014 757100                    STAQ    DCB#+5,,AUTO
         2 000032   200004 236100                    LDQ     @F1,,AUTO
         2 000033   000004 235000 3                  LDA     4
         2 000034   200012 757100                    STAQ    DCB#+3,,AUTO
         2 000035   000004 236000 3                  LDQ     4
         2 000036   200003 235100                    LDA     @ERR,,AUTO
         2 000037   200010 757100                    STAQ    DCB#+1,,AUTO
         2 000040   200010 630500                    EPPR0   DCB#+1,,AUTO
         2 000041   000003 631400 3                  EPPR1   3
         2 000042   000000 701000 xent               TSX1    XUR$ERRMSG
         2 000043   000045 702000 2                  TSX2    s:5654
         2 000044   000045 710000 2                  TRA     s:5654

      613     5650    3               DO;

      614     5651                /*N* what should we do when altreturn*/
      615     5652    3               END;

      616     5653    2          END;                             /* ELSE */

      617     5654    1        RETURN;

   5654  2 000045   000000 702200 xent               TSX2  ! X66_ARET

ERRCODE
 Sect OctLoc
   1     000   000000 000000                                                    ....

(unnamed)
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:160  
 Sect OctLoc
   3     000   777777 777770   000002 000000   000000 006000   000006 000000    ................
   3     004   000000 006014                                                    ....
      618     5655    1   END XSD$ERR;
      619     5656        %EOD;

PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:161  
--  Include file information  --

   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSD$ERR.
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:162  

 **** Variables and constants ****

  ****  Section 001  Data  XSD$ERR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 ERRCODE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ERR                       4-0-0/w PTR         r     1 @F1
     5-0-0/w PTR         r     1 @F2                        6-0-0/w PTR         r     1 @F3
     7-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 ERR
    *0-0-0/d VECT        r     1 F1                        *0-0-0/d VECT        r     1 F2
    *0-0-0/d VECT        r     1 F3

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB


   Procedure XSD$ERR requires 38 words for executable code.
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:163  
   Procedure XSD$ERR requires 14 words of local(AUTO) storage.
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:164  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:165  
          MINI XREF LISTING

B$ALT.CODE
      5582**DCL      5582--REDEF    5583--REDEF    5583--REDEF
B$ALT.DCB#
      5583**DCL      5645>>ASSIGN
B$ALT.ERR
      5583**DCL      5643>>ASSIGN
B$ALT.ERR.ERR#
      5584**DCL      5584--REDEF
B$ALT.EVID
      5583**DCL      5583--REDEF    5583--REDEF
B$TCB.ALT$
      5578**DCL      5643>>ASSIGN   5645>>ASSIGN
B$TCB$
      5593**DCL      5643>>ASSIGN   5645>>ASSIGN
DCB#
      5595**DCL      5645<<ASSIGN   5646<>CALL
ERR
        10**DCL         8--PROC     5642>>IF       5649<>CALL
ERRCODE
      5608**DCL      5643<<ASSIGN   5646<>CALL
ERRCODE.SEV
      5638**DCL      5644<<ASSIGN
F1
        11**DCL         8--PROC     5649<>CALL
F2
        12**DCL         8--PROC     5649<>CALL
F3
        13**DCL         8--PROC     5649<>CALL
XUR$ERRMSG
      5590**DCL-ENT  5646--CALL     5649--CALL
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:166  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:167  
              MINI UREF LISTING

M$ACCT    5520**DCL-ENT
M$ACTIVATE    5523**DCL-ENT
M$ALIB    5516**DCL-ENT
M$ASUSER    5518**DCL-ENT
M$ATTACH    5525**DCL-ENT
M$BADPP    5543**DCL-ENT
M$CGCTL    5524**DCL-ENT
M$CGINFO    5524**DCL-ENT
M$CHECK    5505**DCL-ENT
M$CHGUNIT    5563**DCL-ENT
M$CLOSE    5503**DCL-ENT
M$CLRSTK    5561**DCL-ENT
M$CMDVAR    5572**DCL-ENT
M$CONFIG    5533**DCL-ENT
M$CORRES    5508**DCL-ENT
M$CPEXIT    5517**DCL-ENT
M$CVM    5541**DCL-ENT
M$CVOL    5506**DCL-ENT
M$DCLFLD    5533**DCL-ENT
M$DEACTIVATE    5523**DCL-ENT
M$DELREC    5505**DCL-ENT
M$DEQ    5570**DCL-ENT
M$DETACH    5525**DCL-ENT
M$DEVICE    5507**DCL-ENT
M$DISPLAY    5570**DCL-ENT
M$DISPRES    5510**DCL-ENT
M$DLIB    5516**DCL-ENT
M$DRIBBLE    5533**DCL-ENT
M$DRTN    5561**DCL-ENT
M$DSUSER    5518**DCL-ENT
M$ENQ    5569**DCL-ENT
M$EOM    5528**DCL-ENT
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:168  
M$ERASE    5534**DCL-ENT
M$ERR    5515**DCL-ENT
M$ERRMSG    5566**DCL-ENT
M$EVENT    5558**DCL-ENT
M$EXHUME    5567**DCL-ENT
M$EXIT    5515**DCL-ENT
M$EXTEND    5507**DCL-ENT
M$FDP    5539**DCL-ENT
M$FDS    5538**DCL-ENT
M$FEBOOT    5531**DCL-ENT
M$FECTL    5532**DCL-ENT
M$FEDUMP    5531**DCL-ENT
M$FID    5566**DCL-ENT
M$FINDPROC    5520**DCL-ENT
M$FSUSER    5518**DCL-ENT
M$FVP    5540**DCL-ENT
M$FWCG    5524**DCL-ENT
M$GBPL    5544**DCL-ENT
M$GDDL    5540**DCL-ENT
M$GDP    5539**DCL-ENT
M$GDS    5538**DCL-ENT
M$GETDCB    5509**DCL-ENT
M$GETMOUSE    5549**DCL-ENT
M$GETPM    5550**DCL-ENT
M$GJOB    5568**DCL-ENT
M$GLINEATTR    5528**DCL-ENT
M$GOODPP    5543**DCL-ENT
M$GPLATEN    5536**DCL-ENT
M$GPROMPT    5535**DCL-ENT
M$GTRMATTR    5529**DCL-ENT
M$GTRMCTL    5527**DCL-ENT
M$GTRMTAB    5530**DCL-ENT
M$GVP    5539**DCL-ENT
M$HELP    5566**DCL-ENT
M$INT    5558**DCL-ENT
M$INTRTN    5519**DCL-ENT
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:169  
M$IOQ    5554**DCL-ENT
M$JOBSTATS    5568**DCL-ENT
M$KEYIN    5508**DCL-ENT
M$LDEV    5503**DCL-ENT
M$LDTRC    5516**DCL-ENT
M$LIMIT    5509**DCL-ENT
M$LINES    5508**DCL-ENT
M$LINK    5515**DCL-ENT
M$MADMUCK    5511**DCL-ENT
M$MAKUSER    5542**DCL-ENT
M$MBS    5510**DCL-ENT
M$MDFFLD    5534**DCL-ENT
M$MERC    5559**DCL-ENT
M$MERCS    5560**DCL-ENT
M$MIRROR    5554**DCL-ENT
M$MONINFO    5571**DCL-ENT
M$MPL    5544**DCL-ENT
M$NODEINFO    5535**DCL-ENT
M$NXTUSR    5569**DCL-ENT
M$OCMSG    5567**DCL-ENT
M$OLAY    5515**DCL-ENT
M$OPEN    5503**DCL-ENT
M$PAS    5544**DCL-ENT
M$PATHCON    5567**DCL-ENT
M$PDS    5538**DCL-ENT
M$PFIL    5505**DCL-ENT
M$PLATEN    5529**DCL-ENT
M$PRECORD    5507**DCL-ENT
M$PROCNAME    5520**DCL-ENT
M$PROFILE    5531**DCL-ENT
M$PROMPT    5527**DCL-ENT
M$RACST    5511**DCL-ENT
M$RDSYSLOG    5552**DCL-ENT
M$READ    5504**DCL-ENT
M$RELDCB    5509**DCL-ENT
M$RELRES    5510**DCL-ENT
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:170  
M$RELSTARF    5512**DCL-ENT
M$REM    5512**DCL-ENT
M$RENV    5559**DCL-ENT
M$REQUIRE    5511**DCL-ENT
M$RETRY    5560**DCL-ENT
M$RETRYS    5560**DCL-ENT
M$REW    5506**DCL-ENT
M$RLSFLD    5534**DCL-ENT
M$RPRIV    5562**DCL-ENT
M$RSPP    5541**DCL-ENT
M$RSWITCH    5563**DCL-ENT
M$RUE    5569**DCL-ENT
M$SAD    5542**DCL-ENT
M$SAVE    5518**DCL-ENT
M$SCON    5519**DCL-ENT
M$SCREECH    5517**DCL-ENT
M$SENV    5559**DCL-ENT
M$SETFMA    5503**DCL-ENT
M$SETFP    5532**DCL-ENT
M$SINPUT    5530**DCL-ENT
M$SLCFLD    5535**DCL-ENT
M$SMOUSE    5549**DCL-ENT
M$SMPRT    5541**DCL-ENT
M$SPRIV    5562**DCL-ENT
M$SSC    5542**DCL-ENT
M$SSWITCH    5562**DCL-ENT
M$STATE    5571**DCL-ENT
M$STD    5543**DCL-ENT
M$STIMER    5557**DCL-ENT
M$STLPP    5540**DCL-ENT
M$STRAP    5557**DCL-ENT
M$STRMATTR    5529**DCL-ENT
M$STRMCTL    5527**DCL-ENT
M$STRMTAB    5530**DCL-ENT
M$SYMBIO    5568**DCL-ENT
M$SYSCON    5554**DCL-ENT
PL6.E3A0      #006=XSD$ERR File=XSD$SUBS.:XSA1TSI                                WED 10/01/97 11:56 Page:171  
M$SYSID    5572**DCL-ENT
M$TDCLOSE    5553**DCL-ENT
M$TDIO    5553**DCL-ENT
M$TDOPEN    5552**DCL-ENT
M$TDREQCPU    5553**DCL-ENT
M$TEMPWROC    5547**DCL-ENT
M$TIME    5570**DCL-ENT
M$TRAP    5557**DCL-ENT
M$TRMISC    5532**DCL-ENT
M$TRMPRG    5528**DCL-ENT
M$TRTN    5561**DCL-ENT
M$TRUNC    5504**DCL-ENT
M$TTIMER    5557**DCL-ENT
M$UC    5527**DCL
M$UMPL    5544**DCL-ENT
M$UNFID    5566**DCL-ENT
M$UNLATCH    5523**DCL-ENT
M$UNSHARE    5520**DCL-ENT
M$USRFIELD    5563**DCL-ENT
M$VIRTUAL    5538**DCL-ENT
M$WAIT    5561**DCL-ENT
M$WEOF    5506**DCL-ENT
M$WRITE    5504**DCL-ENT
M$WRSYSLOG    5552**DCL-ENT
M$XCON    5558**DCL-ENT
M$XCONRTN    5519**DCL-ENT
M$XEQTIME    5571**DCL-ENT
M$XFLUSH    5512**DCL-ENT
M$XMOUSE    5549**DCL-ENT
M$XXX    5515**DCL-ENT
M$YC    5517**DCL-ENT
XSD$ERR       8**PROC

PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:172  
      620        1        /*T***********************************************************/
      621        2        /*T*                                                         */
      622        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      623        4        /*T*                                                         */
      624        5        /*T***********************************************************/
      625        6        %EJECT;
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:173  
      626        7        XSD$LOCFIELD: PROC(BUF,BUFX,RECX,SIZE) ALTRET;
      627        8
      628        9    1   DCL BUF CHAR(SIZE);
      629       10    1   DCL BUFX UBIN;
      630       11    1   DCL RECX UBIN;
      631       12    1   DCL SIZE UBIN;
      632       13
      633       14        %INCLUDE CP_6;
      634     5573        %INCLUDE XSD_SUBS_C;
      635     5908        %INCLUDE FM_FIELD_C;
      636     5949        %INCLUDE FM$FIT;
      637     6170        %INCLUDE XSD_MACRO_M;
      638     7279        %INCLUDE B$OBJECT_C;
      639    10709
      640    10710    1   DCL B$ROSEG$ PTR SYMREF;
      641    10711    1   DCL CODE18$ PTR SYMREF;
      642    10712
      643    10713        %XSD_DIBBUF(STCLASS="BASED(BUF$)");
      644    10778        %F$DCB;
      645    10835        %FM$FIELD_START(STCLASS="BASED");
      646    10857        %VREBL_DATATYPES;
      647    10932        %CODE18(BASED="BASED(CODE18$)");
      648    10936
      649    10937    1   DCL 1 TEXTC CALIGNED BASED,
      650    10938    1            2 L UBIN(9) UNAL,
      651    10939    1            2 T CHAR(TEXTC.L) UNAL;
      652    10940    1   DCL 1 TEXTH CALIGNED BASED,
      653    10941    1            2 L UBIN(18) UNAL,
      654    10942    1            2 T CHAR(TEXTH.L) UNAL;
      655    10943
      656    10944    1   DCL BUF$ PTR;
      657    10945    1   DCL TBUF$ PTR;
      658    10946    1   DCL I UBIN;
      659    10947    1   DCL K UBIN;
      660    10948    1   DCL STARTX UBIN;
      661    10949    1   DCL M$DIB DCB;
      662    10950
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:174  
      663    10951
      664    10952
      665    10953    1        IF RECX > %XSD_RECX_MAXRECX THEN ALTRETURN;
      666    10954    1        BUF$ = ADDR(BUF);
      667    10955    2        IF RECX <= %XSD_RECX_UNIQUE THEN DO;
      668    10956    2             STARTX = DCBADDR(DCBNUM(M$DIB))->F$DCB.STARTX;
      669    10957    2             TBUF$ = PINCRB(ADDR(BUF),PINCRW(B$ROSEG$,STARTX)->FM$FIELD_START.OFFSET(
             10957                      RECX));
      670    10958    2             BUFX = POFFC(ADDR(BUF),TBUF$);
      671    10959    2             RETURN;
      672    10960    2          END;
      673    10961    2        ELSE DO;
      674    10962    2             TBUF$ = PINCRC(ADDR(BUF),LENGTHC(XSD_DIBBUF.KEY));
             10962                      /* get past the fixed part*/
      675    10963    2             I = %XSD_RECX_UNIQUE+1;
      676    10964    3             DO WHILE I < RECX;
      677    10965    4                DO CASE(CODE18.FIELD.TYPE(I));
      678    10966    4                 CASE(%UBIN_DATATYPE);
      679    10967    4                   TBUF$ = PINCRC(TBUF$,(CODE18.FIELD.LEN(I)+8)/9);
      680    10968    4                   I = I + 1;
      681    10969    4                 CASE(%CHAR_DATATYPE);
      682    10970    4                   TBUF$ = PINCRC(TBUF$,CODE18.FIELD.LEN(I));
      683    10971    4                   I = I + 1;
      684    10972    4                 CASE(%LIST_DATATYPE);
      685    10973    5                   IF CODE18.FIELD.TYPE(I+1) = %CHAR_DATATYPE THEN DO;
      686    10974    6                        DO K = 0 TO CODE18.FIELD.LEN(I) -1;
      687    10975    6                           TBUF$ = PINCRC(TBUF$,CODE18.FIELD.LEN(I+1));
      688    10976    6                        END;
      689    10977    5                     END;
      690    10978    5                   ELSE DO;
      691    10979    6                        DO K = 0 TO CODE18.FIELD.LEN(I)-1;
      692    10980    6                           TBUF$ = PINCRC(TBUF$,(CODE18.FIELD.LEN(I+1)+8)/9);
      693    10981    6                        END;
      694    10982    5                     END;
      695    10983    4                   I = I + 2;
      696    10984    4                 CASE(%TEXTH_DATATYPE);
      697    10985    4                   TBUF$ = PINCRC(TBUF$,TBUF$->TEXTH.L+2);
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:175  
      698    10986    4                   I = I + 1;
      699    10987    4                 CASE(%TEXTC_DATATYPE);
      700    10988    4                   TBUF$ = PINCRC(TBUF$,TBUF$->TEXTC.L+1);
      701    10989    4                   I = I + 1;
      702    10990    4                 CASE(ELSE);
      703    10991    4                   CALL M$XXX;
      704    10992    4                END;                       /* case field.type(i)*/
      705    10993    3             END;                          /* while i < recx */
      706    10994    2             BUFX = POFFC(TBUF$,ADDR(BUF));
      707    10995    2          END;
      708    10996    1   END XSD$LOCFIELD;

PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:176  
--  Include file information  --

   B$OBJECT_C.:LIB_E05  is referenced.
   XSD_MACRO_M.:XSA1TOU  is referenced.
   FM$FIT.:LIB_E05  is referenced.
   FM_FIELD_C.:LIB_E05  is referenced.
   XSD_SUBS_C.:XSA1TOU  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSD$LOCFIELD.

   Procedure XSD$LOCFIELD requires 223 words for executable code.
   Procedure XSD$LOCFIELD requires 14 words of local(AUTO) storage.

    No errors detected in file XSD$SUBS.:XSA1TSI    .

PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:177  

 Object Unit name= XSD$LOCFIELD                               File name= XSD$SUBS.:XSA1TOU
 UTS= OCT 01 '97 11:56:48.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$DIB
    2   Proc  even  none   223    337  XSD$LOCFIELD
    3  RoData even  none     2      2  XSD$LOCFIELD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        4  XSD$LOCFIELD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$ROSEG$                              CODE18$
     M$DIB
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:178  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 NULLSID
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:179  


      620        1        /*T***********************************************************/
      621        2        /*T*                                                         */
      622        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      623        4        /*T*                                                         */
      624        5        /*T***********************************************************/
      625        6        %EJECT;
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:180  
      626        7        XSD$LOCFIELD: PROC(BUF,BUFX,RECX,SIZE) ALTRET;

      7  2 000000   000000 700200 xent  XSD$LOCFIELD TSX0  ! X66_AUTO_4
         2 000001   000016 000004                    ZERO    14,4

      627        8
      628        9    1   DCL BUF CHAR(SIZE);
      629       10    1   DCL BUFX UBIN;
      630       11    1   DCL RECX UBIN;
      631       12    1   DCL SIZE UBIN;
      632       13
      633       14        %INCLUDE CP_6;
      634     5573        %INCLUDE XSD_SUBS_C;
      635     5908        %INCLUDE FM_FIELD_C;
      636     5949        %INCLUDE FM$FIT;
      637     6170        %INCLUDE XSD_MACRO_M;
      638     7279        %INCLUDE B$OBJECT_C;
      639    10709
      640    10710    1   DCL B$ROSEG$ PTR SYMREF;
      641    10711    1   DCL CODE18$ PTR SYMREF;
      642    10712
      643    10713        %XSD_DIBBUF(STCLASS="BASED(BUF$)");
      644    10778        %F$DCB;
      645    10835        %FM$FIELD_START(STCLASS="BASED");
      646    10857        %VREBL_DATATYPES;
      647    10932        %CODE18(BASED="BASED(CODE18$)");
      648    10936
      649    10937    1   DCL 1 TEXTC CALIGNED BASED,
      650    10938    1            2 L UBIN(9) UNAL,
      651    10939    1            2 T CHAR(TEXTC.L) UNAL;
      652    10940    1   DCL 1 TEXTH CALIGNED BASED,
      653    10941    1            2 L UBIN(18) UNAL,
      654    10942    1            2 T CHAR(TEXTH.L) UNAL;
      655    10943
      656    10944    1   DCL BUF$ PTR;
      657    10945    1   DCL TBUF$ PTR;
      658    10946    1   DCL I UBIN;
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:181  
      659    10947    1   DCL K UBIN;
      660    10948    1   DCL STARTX UBIN;
      661    10949    1   DCL M$DIB DCB;
      662    10950
      663    10951
      664    10952
      665    10953    1        IF RECX > %XSD_RECX_MAXRECX THEN ALTRETURN;

  10953  2 000002   200005 470500                    LDP0    @RECX,,AUTO
         2 000003   000000 235100                    LDA     0,,PR0
         2 000004   000061 115007                    CMPA    49,DL
         2 000005   000007 602000 2                  TNC     s:10954

  10953  2 000006   000000 702200 xent               TSX2  ! X66_AALT

      666    10954    1        BUF$ = ADDR(BUF);

  10954  2 000007   200003 236100                    LDQ     @BUF,,AUTO
         2 000010   200007 756100                    STQ     BUF$,,AUTO

      667    10955    2        IF RECX <= %XSD_RECX_UNIQUE THEN DO;

  10955  2 000011   000017 115007                    CMPA    15,DL
         2 000012   000045 603000 2                  TRC     s:10962

      668    10956    2             STARTX = DCBADDR(DCBNUM(M$DIB))->F$DCB.STARTX;

  10956  2 000013   000000 236007 xsym               LDQ     M$DIB,DL
         2 000014   000000 471400 3                  LDP1    0
         2 000015   100000 473500                    LDP3    0,,PR1
         2 000016   300000 474506                    LDP4    0,QL,PR3
         2 000017   400057 236100                    LDQ     47,,PR4
         2 000020   000022 772000                    QRL     18
         2 000021   200013 756100                    STQ     STARTX,,AUTO

      669    10957    2             TBUF$ = PINCRB(ADDR(BUF),PINCRW(B$ROSEG$,STARTX)->FM$FIELD_START.OFFSET(
             10957                      RECX));
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:182  

  10957  2 000022   000000 036100                    ADLQ    0,,PR0
         2 000023   000000 474400 xsym               LDP4    B$ROSEG$
         2 000024   400001 236106                    LDQ     1,QL,PR4
         2 000025   200003 475500                    LDP5    @BUF,,AUTO
         2 000026   000030 605000 2                  TPL     s:10957+6
         2 000027   000044 036003                    ADLQ    36,DU
         2 000030   500000 503506                    ABD     0,QL,PR5
         2 000031   200010 455500                    STP5    TBUF$,,AUTO

      670    10958    2             BUFX = POFFC(ADDR(BUF),TBUF$);

  10958  2 000032   200003 236100                    LDQ     @BUF,,AUTO
         2 000033   000020 772000                    QRL     16
         2 000034   200014 756100                    STQ     STARTX+1,,AUTO
         2 000035   200010 236100                    LDQ     TBUF$,,AUTO
         2 000036   000020 772000                    QRL     16
         2 000037   200015 756100                    STQ     STARTX+2,,AUTO
         2 000040   200014 236100                    LDQ     STARTX+1,,AUTO
         2 000041   200015 136100                    SBLQ    STARTX+2,,AUTO
         2 000042   200004 476500                    LDP6    @BUFX,,AUTO
         2 000043   600000 756100                    STQ     0,,PR6

      671    10959    2             RETURN;

  10959  2 000044   000000 702200 xent               TSX2  ! X66_ARET

      672    10960    2          END;
      673    10961    2        ELSE DO;

      674    10962    2             TBUF$ = PINCRC(ADDR(BUF),LENGTHC(XSD_DIBBUF.KEY));
             10962                      /* get past the fixed part*/

  10962  2 000045   000351 036003                    ADLQ    233,DU
         2 000046   200010 756100                    STQ     TBUF$,,AUTO

      675    10963    2             I = %XSD_RECX_UNIQUE+1;
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:183  

  10963  2 000047   000017 235007                    LDA     15,DL
         2 000050   200011 755100                    STA     I,,AUTO

      676    10964    3             DO WHILE I < RECX;

  10964  2 000051   200011 236100                    LDQ     I,,AUTO
         2 000052   000000 116100                    CMPQ    0,,PR0
         2 000053   000326 603000 2                  TRC     s:10994

      677    10965    4                DO CASE(CODE18.FIELD.TYPE(I));

  10965  2 000054   200011 236100                    LDQ     I,,AUTO
         2 000055   000003 402007                    MPY     3,DL
         2 000056   000000 470400 xsym               LDP0    CODE18$
         2 000057   000100 101506                    MRL     fill='000'O
         2 000060   000001 020001                    ADSC6   1,Q,PR0                  cn=0,n=1
         2 000061   200014 020006                    ADSC6   STARTX+1,,AUTO           cn=0,n=6
         2 000062   200014 236100                    LDQ     STARTX+1,,AUTO
         2 000063   000025 136007                    SBLQ    21,DL
         2 000064   000044 116007                    CMPQ    36,DL
         2 000065   000067 602006 2                  TNC     s:10965+11,QL
         2 000066   000320 710000 2                  TRA     s:10991
         2 000067   000152 710000 2                  TRA     s:10970
         2 000070   000303 710000 2                  TRA     s:10988
         2 000071   000320 710000 2                  TRA     s:10991
         2 000072   000133 710000 2                  TRA     s:10967
         2 000073   000320 710000 2                  TRA     s:10991
         2 000074   000320 710000 2                  TRA     s:10991
         2 000075   000320 710000 2                  TRA     s:10991
         2 000076   000320 710000 2                  TRA     s:10991
         2 000077   000320 710000 2                  TRA     s:10991
         2 000100   000320 710000 2                  TRA     s:10991
         2 000101   000320 710000 2                  TRA     s:10991
         2 000102   000320 710000 2                  TRA     s:10991
         2 000103   000320 710000 2                  TRA     s:10991
         2 000104   000320 710000 2                  TRA     s:10991
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:184  
         2 000105   000320 710000 2                  TRA     s:10991
         2 000106   000320 710000 2                  TRA     s:10991
         2 000107   000320 710000 2                  TRA     s:10991
         2 000110   000320 710000 2                  TRA     s:10991
         2 000111   000320 710000 2                  TRA     s:10991
         2 000112   000320 710000 2                  TRA     s:10991
         2 000113   000320 710000 2                  TRA     s:10991
         2 000114   000320 710000 2                  TRA     s:10991
         2 000115   000320 710000 2                  TRA     s:10991
         2 000116   000320 710000 2                  TRA     s:10991
         2 000117   000320 710000 2                  TRA     s:10991
         2 000120   000320 710000 2                  TRA     s:10991
         2 000121   000167 710000 2                  TRA     s:10973
         2 000122   000320 710000 2                  TRA     s:10991
         2 000123   000320 710000 2                  TRA     s:10991
         2 000124   000320 710000 2                  TRA     s:10991
         2 000125   000320 710000 2                  TRA     s:10991
         2 000126   000320 710000 2                  TRA     s:10991
         2 000127   000320 710000 2                  TRA     s:10991
         2 000130   000320 710000 2                  TRA     s:10991
         2 000131   000320 710000 2                  TRA     s:10991
         2 000132   000266 710000 2                  TRA     s:10985

      678    10966    4                 CASE(%UBIN_DATATYPE);

      679    10967    4                   TBUF$ = PINCRC(TBUF$,(CODE18.FIELD.LEN(I)+8)/9);

  10967  2 000133   200011 236100                    LDQ     I,,AUTO
         2 000134   000003 402007                    MPY     3,DL
         2 000135   000100 101506                    MRL     fill='000'O
         2 000136   000001 120002                    ADSC6   1,Q,PR0                  cn=1,n=2
         2 000137   200014 020006                    ADSC6   STARTX+1,,AUTO           cn=0,n=6
         2 000140   200014 236100                    LDQ     STARTX+1,,AUTO
         2 000141   000010 036007                    ADLQ    8,DL
         2 000142   000011 506007                    DIV     9,DL
         2 000143   000020 736000                    QLS     16
         2 000144   200010 036100                    ADLQ    TBUF$,,AUTO
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:185  
         2 000145   200010 756100                    STQ     TBUF$,,AUTO

      680    10968    4                   I = I + 1;

  10968  2 000146   200011 235100                    LDA     I,,AUTO
         2 000147   000001 035007                    ADLA    1,DL
         2 000150   200011 755100                    STA     I,,AUTO
         2 000151   000322 710000 2                  TRA     s:10993

      681    10969    4                 CASE(%CHAR_DATATYPE);

      682    10970    4                   TBUF$ = PINCRC(TBUF$,CODE18.FIELD.LEN(I));

  10970  2 000152   200011 236100                    LDQ     I,,AUTO
         2 000153   000003 402007                    MPY     3,DL
         2 000154   000100 101506                    MRL     fill='000'O
         2 000155   000001 120002                    ADSC6   1,Q,PR0                  cn=1,n=2
         2 000156   200014 020006                    ADSC6   STARTX+1,,AUTO           cn=0,n=6
         2 000157   200014 236100                    LDQ     STARTX+1,,AUTO
         2 000160   000020 736000                    QLS     16
         2 000161   200010 036100                    ADLQ    TBUF$,,AUTO
         2 000162   200010 756100                    STQ     TBUF$,,AUTO

      683    10971    4                   I = I + 1;

  10971  2 000163   200011 235100                    LDA     I,,AUTO
         2 000164   000001 035007                    ADLA    1,DL
         2 000165   200011 755100                    STA     I,,AUTO
         2 000166   000322 710000 2                  TRA     s:10993

      684    10972    4                 CASE(%LIST_DATATYPE);

      685    10973    5                   IF CODE18.FIELD.TYPE(I+1) = %CHAR_DATATYPE THEN DO;

  10973  2 000167   200011 236100                    LDQ     I,,AUTO
         2 000170   000003 402007                    MPY     3,DL
         2 000171   000100 101506                    MRL     fill='000'O
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:186  
         2 000172   000001 320001                    ADSC6   1,Q,PR0                  cn=3,n=1
         2 000173   200014 020006                    ADSC6   STARTX+1,,AUTO           cn=0,n=6
         2 000174   200014 236100                    LDQ     STARTX+1,,AUTO
         2 000175   000025 116007                    CMPQ    21,DL
         2 000176   000230 601000 2                  TNZ     s:10979

      686    10974    6                        DO K = 0 TO CODE18.FIELD.LEN(I) -1;

  10974  2 000177   200012 450100                    STZ     K,,AUTO
         2 000200   000216 710000 2                  TRA     s:10976+3

      687    10975    6                           TBUF$ = PINCRC(TBUF$,CODE18.FIELD.LEN(I+1));

  10975  2 000201   200011 236100                    LDQ     I,,AUTO
         2 000202   000003 402007                    MPY     3,DL
         2 000203   000000 470400 xsym               LDP0    CODE18$
         2 000204   000100 101506                    MRL     fill='000'O
         2 000205   000001 420002                    ADSC6   1,Q,PR0                  cn=4,n=2
         2 000206   200014 020006                    ADSC6   STARTX+1,,AUTO           cn=0,n=6
         2 000207   200014 236100                    LDQ     STARTX+1,,AUTO
         2 000210   000020 736000                    QLS     16
         2 000211   200010 036100                    ADLQ    TBUF$,,AUTO
         2 000212   200010 756100                    STQ     TBUF$,,AUTO

      688    10976    6                        END;

  10976  2 000213   200012 235100                    LDA     K,,AUTO
         2 000214   000001 035007                    ADLA    1,DL
         2 000215   200012 755100                    STA     K,,AUTO
         2 000216   200011 236100                    LDQ     I,,AUTO
         2 000217   000003 402007                    MPY     3,DL
         2 000220   000100 101506                    MRL     fill='000'O
         2 000221   000001 120002                    ADSC6   1,Q,PR0                  cn=1,n=2
         2 000222   200014 020006                    ADSC6   STARTX+1,,AUTO           cn=0,n=6
         2 000223   200014 236100                    LDQ     STARTX+1,,AUTO
         2 000224   200012 116100                    CMPQ    K,,AUTO
         2 000225   000227 600000 2                  TZE     s:10977
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:187  
         2 000226   000201 603000 2                  TRC     s:10975

      689    10977    5                     END;

  10977  2 000227   000262 710000 2                  TRA     s:10983

      690    10978    5                   ELSE DO;

      691    10979    6                        DO K = 0 TO CODE18.FIELD.LEN(I)-1;

  10979  2 000230   200012 450100                    STZ     K,,AUTO
         2 000231   000251 710000 2                  TRA     s:10981+3

      692    10980    6                           TBUF$ = PINCRC(TBUF$,(CODE18.FIELD.LEN(I+1)+8)/9);

  10980  2 000232   200011 236100                    LDQ     I,,AUTO
         2 000233   000003 402007                    MPY     3,DL
         2 000234   000000 470400 xsym               LDP0    CODE18$
         2 000235   000100 101506                    MRL     fill='000'O
         2 000236   000001 420002                    ADSC6   1,Q,PR0                  cn=4,n=2
         2 000237   200014 020006                    ADSC6   STARTX+1,,AUTO           cn=0,n=6
         2 000240   200014 236100                    LDQ     STARTX+1,,AUTO
         2 000241   000010 036007                    ADLQ    8,DL
         2 000242   000011 506007                    DIV     9,DL
         2 000243   000020 736000                    QLS     16
         2 000244   200010 036100                    ADLQ    TBUF$,,AUTO
         2 000245   200010 756100                    STQ     TBUF$,,AUTO

      693    10981    6                        END;

  10981  2 000246   200012 235100                    LDA     K,,AUTO
         2 000247   000001 035007                    ADLA    1,DL
         2 000250   200012 755100                    STA     K,,AUTO
         2 000251   200011 236100                    LDQ     I,,AUTO
         2 000252   000003 402007                    MPY     3,DL
         2 000253   000100 101506                    MRL     fill='000'O
         2 000254   000001 120002                    ADSC6   1,Q,PR0                  cn=1,n=2
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:188  
         2 000255   200014 020006                    ADSC6   STARTX+1,,AUTO           cn=0,n=6
         2 000256   200014 236100                    LDQ     STARTX+1,,AUTO
         2 000257   200012 116100                    CMPQ    K,,AUTO
         2 000260   000262 600000 2                  TZE     s:10983
         2 000261   000232 603000 2                  TRC     s:10980

      694    10982    5                     END;

      695    10983    4                   I = I + 2;

  10983  2 000262   200011 235100                    LDA     I,,AUTO
         2 000263   000002 035007                    ADLA    2,DL
         2 000264   200011 755100                    STA     I,,AUTO
         2 000265   000322 710000 2                  TRA     s:10993

      696    10984    4                 CASE(%TEXTH_DATATYPE);

      697    10985    4                   TBUF$ = PINCRC(TBUF$,TBUF$->TEXTH.L+2);

  10985  2 000266   200010 471500                    LDP1    TBUF$,,AUTO
         2 000267   000100 101500                    MRL     fill='000'O
         2 000270   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         2 000271   200014 000004                    ADSC9   STARTX+1,,AUTO           cn=0,n=4
         2 000272   200014 236100                    LDQ     STARTX+1,,AUTO
         2 000273   000020 736000                    QLS     16
         2 000274   400000 036007                    ADLQ    -131072,DL
         2 000275   200010 036100                    ADLQ    TBUF$,,AUTO
         2 000276   200010 756100                    STQ     TBUF$,,AUTO

      698    10986    4                   I = I + 1;

  10986  2 000277   200011 235100                    LDA     I,,AUTO
         2 000300   000001 035007                    ADLA    1,DL
         2 000301   200011 755100                    STA     I,,AUTO
         2 000302   000322 710000 2                  TRA     s:10993

      699    10987    4                 CASE(%TEXTC_DATATYPE);
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:189  

      700    10988    4                   TBUF$ = PINCRC(TBUF$,TBUF$->TEXTC.L+1);

  10988  2 000303   200010 471500                    LDP1    TBUF$,,AUTO
         2 000304   000100 101500                    MRL     fill='000'O
         2 000305   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000306   200014 000004                    ADSC9   STARTX+1,,AUTO           cn=0,n=4
         2 000307   200014 236100                    LDQ     STARTX+1,,AUTO
         2 000310   000020 736000                    QLS     16
         2 000311   200000 036007                    ADLQ    65536,DL
         2 000312   200010 036100                    ADLQ    TBUF$,,AUTO
         2 000313   200010 756100                    STQ     TBUF$,,AUTO

      701    10989    4                   I = I + 1;

  10989  2 000314   200011 235100                    LDA     I,,AUTO
         2 000315   000001 035007                    ADLA    1,DL
         2 000316   200011 755100                    STA     I,,AUTO
         2 000317   000322 710000 2                  TRA     s:10993

      702    10990    4                 CASE(ELSE);

      703    10991    4                   CALL M$XXX;

  10991  2 000320   000003 713400                    CLIMB   3
         2 000321   000000 401760                    pmme    nvectors=0

      704    10992    4                END;                       /* case field.type(i)*/

      705    10993    3             END;                          /* while i < recx */

  10993  2 000322   200005 470500                    LDP0    @RECX,,AUTO
         2 000323   200011 236100                    LDQ     I,,AUTO
         2 000324   000000 116100                    CMPQ    0,,PR0
         2 000325   000054 602000 2                  TNC     s:10965

      706    10994    2             BUFX = POFFC(TBUF$,ADDR(BUF));
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:190  

  10994  2 000326   200003 236100                    LDQ     @BUF,,AUTO
         2 000327   000020 772000                    QRL     16
         2 000330   200014 756100                    STQ     STARTX+1,,AUTO
         2 000331   200010 236100                    LDQ     TBUF$,,AUTO
         2 000332   000020 772000                    QRL     16
         2 000333   200014 136100                    SBLQ    STARTX+1,,AUTO
         2 000334   200004 471500                    LDP1    @BUFX,,AUTO
         2 000335   100000 756100                    STQ     0,,PR1

      707    10995    2          END;

      708    10996    1   END XSD$LOCFIELD;

  10996  2 000336   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   3     000   000000 006003   000000 006014                                    ........

PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:191  
--  Include file information  --

   B$OBJECT_C.:LIB_E05  is referenced.
   XSD_MACRO_M.:XSA1TOU  is referenced.
   FM$FIT.:LIB_E05  is referenced.
   FM_FIELD_C.:LIB_E05  is referenced.
   XSD_SUBS_C.:XSA1TOU  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSD$LOCFIELD.
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:192  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUF                       4-0-0/w PTR         r     1 @BUFX
     5-0-0/w PTR         r     1 @RECX                      6-0-0/w PTR         r     1 @SIZE
    *0-0-0/c ACHR        r     1 BUF                        7-0-0/w PTR         r     1 BUF$
    *0-0-0/w UBIN        r     1 BUFX                      11-0-0/w UBIN        r     1 I
    12-0-0/w UBIN        r     1 K                         *0-0-0/w UBIN        r     1 RECX
    *0-0-0/w UBIN        r     1 SIZE                      13-0-0/w UBIN        r     1 STARTX
    10-0-0/w PTR         r     1 TBUF$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$ROSEG$                   0-0-0/w PTR         r     1 CODE18$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(54)    r     1 CODE18                     0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(72)    r     1 FM$FIELD_START             0-0-0N  NULL        r     1 M$DIB
     0-0-0/c ASTR(9)     r     1 TEXTC                      0-0-0/c ASTR(18)    r     1 TEXTH
     0-0-0/w STRC(8460)  r     1 XSD_DIBBUF


   Procedure XSD$LOCFIELD requires 223 words for executable code.
   Procedure XSD$LOCFIELD requires 14 words of local(AUTO) storage.
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:193  

    No errors detected in file XSD$SUBS.:XSA1TSI    .
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:194  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:195  
          MINI XREF LISTING

B$ROSEG$
     10710**DCL     10957>>ASSIGN
BUF
         9**DCL         7--PROC    10954--ASSIGN  10957--ASSIGN  10958--ASSIGN  10962--ASSIGN  10994--ASSIGN
BUF$
     10944**DCL     10729--IMP-PTR 10954<<ASSIGN
BUFX
        10**DCL         7--PROC    10958<<ASSIGN  10994<<ASSIGN
CODE18.DECFIELD
     10933**DCL     10934--REDEF
CODE18.FIELD.LEN
     10934**DCL     10967>>ASSIGN  10970>>ASSIGN  10974>>DOINDEX 10975>>ASSIGN  10979>>DOINDEX 10980>>ASSIGN
CODE18.FIELD.TYPE
     10934**DCL     10965>>DOCASE  10973>>IF
CODE18$
     10711**DCL     10933--IMP-PTR 10965>>DOCASE  10967>>ASSIGN  10970>>ASSIGN  10973>>IF      10974>>DOINDEX
     10975>>ASSIGN  10979>>DOINDEX 10980>>ASSIGN
F$DCB.ACTPOS
     10811**DCL     10811--REDEF
F$DCB.ARS#
     10785**DCL     10785--REDEF
F$DCB.ATTR
     10804**DCL     10805--REDEF
F$DCB.BORROW
     10819**DCL     10819--REDEF   10819--REDEF   10819--REDEF
F$DCB.DCBNAME.L
     10833**DCL     10833--IMP-SIZ
F$DCB.EOMCHAR#
     10789**DCL     10789--REDEF
F$DCB.FLDID
     10814**DCL     10814--REDEF
F$DCB.FORM$
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:196  
     10808**DCL     10808--REDEF
F$DCB.FSECT
     10824**DCL     10824--REDEF
F$DCB.FSN#
     10801**DCL     10801--REDEF   10801--REDEF   10802--REDEF
F$DCB.HEADER$
     10807**DCL     10807--REDEF
F$DCB.IXTNSIZE#
     10805**DCL     10805--REDEF
F$DCB.LASTSTA$
     10794**DCL     10794--REDEF
F$DCB.LVL
     10820**DCL     10820--REDEF
F$DCB.NAME#.C
     10795**DCL     10795--REDEF
F$DCB.NOEOF
     10817**DCL     10817--REDEF
F$DCB.NRECS#
     10806**DCL     10806--REDEF
F$DCB.NRECX
     10825**DCL     10825--REDEF
F$DCB.OHDR
     10817**DCL     10817--REDEF
F$DCB.ORG#
     10800**DCL     10800--REDEF
F$DCB.PRECNO
     10823**DCL     10823--REDEF
F$DCB.RCSZ
     10829**DCL     10829--REDEF
F$DCB.RES#
     10796**DCL     10796--REDEF
F$DCB.SETX
     10808**DCL     10808--REDEF
F$DCB.STARTX
     10811**DCL     10956>>ASSIGN
F$DCB.TAB$
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:197  
     10808**DCL     10808--REDEF
F$DCB.TDA
     10822**DCL     10823--REDEF
F$DCB.WSN#
     10796**DCL     10796--REDEF
FM$FIELD_START.OFFSET
     10851**DCL     10957>>ASSIGN
I
     10946**DCL     10963<<ASSIGN  10964>>DOWHILE 10965>>DOCASE  10967>>ASSIGN  10968<<ASSIGN  10968>>ASSIGN
     10970>>ASSIGN  10971<<ASSIGN  10971>>ASSIGN  10973>>IF      10974>>DOINDEX 10975>>ASSIGN  10979>>DOINDEX
     10980>>ASSIGN  10983<<ASSIGN  10983>>ASSIGN  10986<<ASSIGN  10986>>ASSIGN  10989<<ASSIGN  10989>>ASSIGN
K
     10947**DCL     10974<<DOINDEX 10979<<DOINDEX
M$DIB
     10949**DCL     10956--ASSIGN
M$XXX
      5513**DCL-ENT 10991--CALL
RECX
        11**DCL         7--PROC    10953>>IF      10955>>IF      10957>>ASSIGN  10964>>DOWHILE
SIZE
        12**DCL         7--PROC        9--IMP-SIZ
STARTX
     10948**DCL     10956<<ASSIGN  10957>>ASSIGN
TBUF$
     10945**DCL     10957<<ASSIGN  10958>>ASSIGN  10962<<ASSIGN  10967<<ASSIGN  10967>>ASSIGN  10970<<ASSIGN
     10970>>ASSIGN  10975<<ASSIGN  10975>>ASSIGN  10980<<ASSIGN  10980>>ASSIGN  10985<<ASSIGN  10985>>ASSIGN
     10985>>ASSIGN  10988<<ASSIGN  10988>>ASSIGN  10988>>ASSIGN  10994>>ASSIGN
TEXTC.L
     10938**DCL     10939--IMP-SIZ 10988>>ASSIGN
TEXTH.L
     10941**DCL     10942--IMP-SIZ 10985>>ASSIGN
XSD_DIBBUF.KEY
     10751**DCL     10962--ASSIGN
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:198  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:199  
              MINI UREF LISTING

M$ACCT    5518**DCL-ENT
M$ACTIVATE    5521**DCL-ENT
M$ALIB    5514**DCL-ENT
M$ASUSER    5516**DCL-ENT
M$ATTACH    5523**DCL-ENT
M$BADPP    5541**DCL-ENT
M$CGCTL    5522**DCL-ENT
M$CGINFO    5522**DCL-ENT
M$CHECK    5503**DCL-ENT
M$CHGUNIT    5561**DCL-ENT
M$CLOSE    5501**DCL-ENT
M$CLRSTK    5559**DCL-ENT
M$CMDVAR    5570**DCL-ENT
M$CONFIG    5531**DCL-ENT
M$CORRES    5506**DCL-ENT
M$CPEXIT    5515**DCL-ENT
M$CVM    5539**DCL-ENT
M$CVOL    5504**DCL-ENT
M$DCLFLD    5531**DCL-ENT
M$DEACTIVATE    5521**DCL-ENT
M$DELREC    5503**DCL-ENT
M$DEQ    5568**DCL-ENT
M$DETACH    5523**DCL-ENT
M$DEVICE    5505**DCL-ENT
M$DISPLAY    5568**DCL-ENT
M$DISPRES    5508**DCL-ENT
M$DLIB    5514**DCL-ENT
M$DRIBBLE    5531**DCL-ENT
M$DRTN    5559**DCL-ENT
M$DSUSER    5516**DCL-ENT
M$ENQ    5567**DCL-ENT
M$EOM    5526**DCL-ENT
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:200  
M$ERASE    5532**DCL-ENT
M$ERR    5513**DCL-ENT
M$ERRMSG    5564**DCL-ENT
M$EVENT    5556**DCL-ENT
M$EXHUME    5565**DCL-ENT
M$EXIT    5513**DCL-ENT
M$EXTEND    5505**DCL-ENT
M$FDP    5537**DCL-ENT
M$FDS    5536**DCL-ENT
M$FEBOOT    5529**DCL-ENT
M$FECTL    5530**DCL-ENT
M$FEDUMP    5529**DCL-ENT
M$FID    5564**DCL-ENT
M$FINDPROC    5518**DCL-ENT
M$FSUSER    5516**DCL-ENT
M$FVP    5538**DCL-ENT
M$FWCG    5522**DCL-ENT
M$GBPL    5542**DCL-ENT
M$GDDL    5538**DCL-ENT
M$GDP    5537**DCL-ENT
M$GDS    5536**DCL-ENT
M$GETDCB    5507**DCL-ENT
M$GETMOUSE    5547**DCL-ENT
M$GETPM    5548**DCL-ENT
M$GJOB    5566**DCL-ENT
M$GLINEATTR    5526**DCL-ENT
M$GOODPP    5541**DCL-ENT
M$GPLATEN    5534**DCL-ENT
M$GPROMPT    5533**DCL-ENT
M$GTRMATTR    5527**DCL-ENT
M$GTRMCTL    5525**DCL-ENT
M$GTRMTAB    5528**DCL-ENT
M$GVP    5537**DCL-ENT
M$HELP    5564**DCL-ENT
M$INT    5556**DCL-ENT
M$INTRTN    5517**DCL-ENT
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:201  
M$IOQ    5552**DCL-ENT
M$JOBSTATS    5566**DCL-ENT
M$KEYIN    5506**DCL-ENT
M$LDEV    5501**DCL-ENT
M$LDTRC    5514**DCL-ENT
M$LIMIT    5507**DCL-ENT
M$LINES    5506**DCL-ENT
M$LINK    5513**DCL-ENT
M$MADMUCK    5509**DCL-ENT
M$MAKUSER    5540**DCL-ENT
M$MBS    5508**DCL-ENT
M$MDFFLD    5532**DCL-ENT
M$MERC    5557**DCL-ENT
M$MERCS    5558**DCL-ENT
M$MIRROR    5552**DCL-ENT
M$MONINFO    5569**DCL-ENT
M$MPL    5542**DCL-ENT
M$NODEINFO    5533**DCL-ENT
M$NXTUSR    5567**DCL-ENT
M$OCMSG    5565**DCL-ENT
M$OLAY    5513**DCL-ENT
M$OPEN    5501**DCL-ENT
M$PAS    5542**DCL-ENT
M$PATHCON    5565**DCL-ENT
M$PDS    5536**DCL-ENT
M$PFIL    5503**DCL-ENT
M$PLATEN    5527**DCL-ENT
M$PRECORD    5505**DCL-ENT
M$PROCNAME    5518**DCL-ENT
M$PROFILE    5529**DCL-ENT
M$PROMPT    5525**DCL-ENT
M$RACST    5509**DCL-ENT
M$RDSYSLOG    5550**DCL-ENT
M$READ    5502**DCL-ENT
M$RELDCB    5507**DCL-ENT
M$RELRES    5508**DCL-ENT
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:202  
M$RELSTARF    5510**DCL-ENT
M$REM    5510**DCL-ENT
M$RENV    5557**DCL-ENT
M$REQUIRE    5509**DCL-ENT
M$RETRY    5558**DCL-ENT
M$RETRYS    5558**DCL-ENT
M$REW    5504**DCL-ENT
M$RLSFLD    5532**DCL-ENT
M$RPRIV    5560**DCL-ENT
M$RSPP    5539**DCL-ENT
M$RSWITCH    5561**DCL-ENT
M$RUE    5567**DCL-ENT
M$SAD    5540**DCL-ENT
M$SAVE    5516**DCL-ENT
M$SCON    5517**DCL-ENT
M$SCREECH    5515**DCL-ENT
M$SENV    5557**DCL-ENT
M$SETFMA    5501**DCL-ENT
M$SETFP    5530**DCL-ENT
M$SINPUT    5528**DCL-ENT
M$SLCFLD    5533**DCL-ENT
M$SMOUSE    5547**DCL-ENT
M$SMPRT    5539**DCL-ENT
M$SPRIV    5560**DCL-ENT
M$SSC    5540**DCL-ENT
M$SSWITCH    5560**DCL-ENT
M$STATE    5569**DCL-ENT
M$STD    5541**DCL-ENT
M$STIMER    5555**DCL-ENT
M$STLPP    5538**DCL-ENT
M$STRAP    5555**DCL-ENT
M$STRMATTR    5527**DCL-ENT
M$STRMCTL    5525**DCL-ENT
M$STRMTAB    5528**DCL-ENT
M$SYMBIO    5566**DCL-ENT
M$SYSCON    5552**DCL-ENT
PL6.E3A0      #007=XSD$LOCFIELD File=XSD$SUBS.:XSA1TSI                           WED 10/01/97 11:56 Page:203  
M$SYSID    5570**DCL-ENT
M$TDCLOSE    5551**DCL-ENT
M$TDIO    5551**DCL-ENT
M$TDOPEN    5550**DCL-ENT
M$TDREQCPU    5551**DCL-ENT
M$TEMPWROC    5545**DCL-ENT
M$TIME    5568**DCL-ENT
M$TRAP    5555**DCL-ENT
M$TRMISC    5530**DCL-ENT
M$TRMPRG    5526**DCL-ENT
M$TRTN    5559**DCL-ENT
M$TRUNC    5502**DCL-ENT
M$TTIMER    5555**DCL-ENT
M$UC    5525**DCL
M$UMPL    5542**DCL-ENT
M$UNFID    5564**DCL-ENT
M$UNLATCH    5521**DCL-ENT
M$UNSHARE    5518**DCL-ENT
M$USRFIELD    5561**DCL-ENT
M$VIRTUAL    5536**DCL-ENT
M$WAIT    5559**DCL-ENT
M$WEOF    5504**DCL-ENT
M$WRITE    5502**DCL-ENT
M$WRSYSLOG    5550**DCL-ENT
M$XCON    5556**DCL-ENT
M$XCONRTN    5517**DCL-ENT
M$XEQTIME    5569**DCL-ENT
M$XFLUSH    5510**DCL-ENT
M$XMOUSE    5547**DCL-ENT
M$YC    5515**DCL-ENT
XSD$LOCFIELD       7**PROC
