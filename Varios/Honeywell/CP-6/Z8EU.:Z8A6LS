VERSION A06

PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8EU$NEW_TEMP_FROM_ETT : PROC ( EXPR_ETT$,
        7        7                                        RETURN_PTR$);
        8        8
        9        9        /* Generate a new temporary to hold the results from
       10       10           evaluation of an ETT.
       11       11           A LX_ETT_ITEM for the temporary identifier is completed.
       12       12        */
       13       13
       14       14    1   DCL EXPR_ETT$ PTR;           /* To the ETT */
       15       15    1   DCL RETURN_PTR$ PTR;         /* To space for the LX_ETT_ITEM */
       16       16
       17       17    1   DCL TEMP_ST$ PTR;
       18       18
       19       19        %EQU PHASE = 1;
       20       20        %INCLUDE Z8A_DEFC;
       21       88        %INCLUDE Z8A_SUPP_MAC;
       22     2488        %INCLUDE Z8A_ETT;
       23     2789        %INCLUDE Z8A_ST;
       24     6448        %INCLUDE Z8A_LTS;
       25     8525        %INCLUDE Z8A_TYPES;
       26     8699        %INCLUDE Z8E_STACKS;
       27    10965
       28    10966    1   DCL ST$$ PTR;
       29    10967    1   DCL 1 TYPE_DESC,
       30    10968              %TYPE_DESC;
       31    11002
       32    11003    1   DCL Z8EU$NEW_TEMP_FROM_DESC ENTRY(2);
       33    11004    1   DCL Z8AU$TYPE_DESCRIPTOR ENTRY(2);
       34    11005
       35    11006
       36    11007    1       CALL Z8AU$TYPE_DESCRIPTOR (EXPR_ETT$,
       37    11008    1                                  TYPE_DESC);
PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:2    
       38    11009
       39    11010    1       CALL Z8EU$NEW_TEMP_FROM_DESC ( TYPE_DESC,
       40    11011    1                                         RETURN_PTR$);
       41    11012
       42    11013    2       IF EXPR_ETT$ -> ETT.ID = %SIZ OR EXPR_ETT$ -> ETT.ID = %REFMOD THEN DO;
       43    11014    2         CALL Z8AU$TYPE_DESCRIPTOR (EXPR_ETT$ -> ETT.LOP,
       44    11015    2                                    TYPE_DESC);
       45    11016    3         IF TYPE_DESC.SIZ$ ~= ADDR(NIL) THEN DO; /* Will still need max length */
       46    11017                %FISH (TRIAD = TYPE_DESC.SIZ$, RTN = ST$$);
       47    11025    4           IF ST$$ -> ST.ID = %CONST THEN DO;
       48    11026    4             RETURN_PTR$ -> LX_ETT_ITEM.ETT$ -> ETT.LOP -> ETT.LOP ->
       49    11027    4                 SCALAR.B.LENGTH_4096 = TRUE;
       50    11028                  %NEW_LONG (@POINTER =
             11028                      RETURN_PTR$ -> LX_ETT_ITEM.ETT$ -> ETT.LOP -> ETT.LOP -> SCALAR.LTS$,
       51    11029                             @LENGTH = ST$$ -> CONST.CONSTI.WORD1);
       52    11121    4           END;
       53    11122    3         END;
       54    11123    2       END;
       55    11124
       56    11125    1   RETURN;
       57    11126
       58    11127
       59    11128    1   END Z8EU$NEW_TEMP_FROM_ETT;
       60    11129        %EOD;

PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:3    
--  Include file information  --

   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$NEW_TEMP_FROM_ETT.

   Procedure Z8EU$NEW_TEMP_FROM_ETT requires 96 words for executable code.
   Procedure Z8EU$NEW_TEMP_FROM_ETT requires 14 words of local(AUTO) storage.

PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:4    

 Object Unit name= Z8EU$NEW_TEMP_FROM_ETT                     File name= Z8EU.:Z8A6TOU
 UTS= AUG 09 '97 12:49:21.92 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ETT$
    2  LblCom even  none     1      1  HEAD_ETT$
    3  LblCom even  none   512   1000  ETT_BUCKETS
    4  LblCom even  none     5      5  ETT_
    5  LblCom even  none     1      1  ST$
    6  LblCom even  none     5      5  ST_
    7  LblCom even  none     1      1  LTS$
    8  LblCom even  none     5      5  LTS_
    9  LblCom even  none    90    132  LEX_SYMBOL
   10  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
   11  LblCom even  none    90    132  TEMP_LEX_SYMBOL
   12  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
   13   Proc  even  none    96    140  Z8EU$NEW_TEMP_FROM_ETT
   14  RoData even  none     4      4  Z8EU$NEW_TEMP_FROM_ETT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    13      0   yes            yes      Std        2  Z8EU$NEW_TEMP_FROM_ETT
PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:5    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 Z8AU$TYPE_DESCRIPTOR
         yes           Std       2 Z8EU$NEW_TEMP_FROM_DESC
         yes           Std       1 Z8AR$RESERVER
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    LTS_STEP

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:6    


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8EU$NEW_TEMP_FROM_ETT : PROC ( EXPR_ETT$,

      6 13 000000   000000 700200 xent  Z8EU$NEW_TE* TSX0  ! X66_AUTO_2
        13 000001   000016 000002                    ZERO    14,2

        7        7                                        RETURN_PTR$);
        8        8
        9        9        /* Generate a new temporary to hold the results from
       10       10           evaluation of an ETT.
       11       11           A LX_ETT_ITEM for the temporary identifier is completed.
       12       12        */
       13       13
       14       14    1   DCL EXPR_ETT$ PTR;           /* To the ETT */
       15       15    1   DCL RETURN_PTR$ PTR;         /* To space for the LX_ETT_ITEM */
       16       16
       17       17    1   DCL TEMP_ST$ PTR;
       18       18
       19       19        %EQU PHASE = 1;
       20       20        %INCLUDE Z8A_DEFC;
       21       88        %INCLUDE Z8A_SUPP_MAC;
       22     2488        %INCLUDE Z8A_ETT;
       23     2789        %INCLUDE Z8A_ST;
       24     6448        %INCLUDE Z8A_LTS;
       25     8525        %INCLUDE Z8A_TYPES;
       26     8699        %INCLUDE Z8E_STACKS;
       27    10965
       28    10966    1   DCL ST$$ PTR;
       29    10967    1   DCL 1 TYPE_DESC,
       30    10968              %TYPE_DESC;
       31    11002
       32    11003    1   DCL Z8EU$NEW_TEMP_FROM_DESC ENTRY(2);
PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:7    
       33    11004    1   DCL Z8AU$TYPE_DESCRIPTOR ENTRY(2);
       34    11005
       35    11006
       36    11007    1       CALL Z8AU$TYPE_DESCRIPTOR (EXPR_ETT$,

  11007 13 000002   200007 630500                    EPPR0   TYPE_DESC,,AUTO
        13 000003   200015 450500                    STP0    TYPE_DESC+6,,AUTO
        13 000004   200003 236100                    LDQ     @EXPR_ETT$,,AUTO
        13 000005   200014 756100                    STQ     TYPE_DESC+5,,AUTO
        13 000006   200014 630500                    EPPR0   TYPE_DESC+5,,AUTO
        13 000007   000000 631400 14                 EPPR1   0
        13 000010   000000 701000 xent               TSX1    Z8AU$TYPE_DESCRIPTOR
        13 000011   000000 011000                    NOP     0

       37    11008    1                                  TYPE_DESC);
       38    11009
       39    11010    1       CALL Z8EU$NEW_TEMP_FROM_DESC ( TYPE_DESC,

  11010 13 000012   200004 236100                    LDQ     @RETURN_PTR$,,AUTO
        13 000013   200015 756100                    STQ     TYPE_DESC+6,,AUTO
        13 000014   200007 630500                    EPPR0   TYPE_DESC,,AUTO
        13 000015   200014 450500                    STP0    TYPE_DESC+5,,AUTO
        13 000016   200014 630500                    EPPR0   TYPE_DESC+5,,AUTO
        13 000017   000000 631400 14                 EPPR1   0
        13 000020   000000 701000 xent               TSX1    Z8EU$NEW_TEMP_FROM_DESC
        13 000021   000000 011000                    NOP     0

       40    11011    1                                         RETURN_PTR$);
       41    11012
       42    11013    2       IF EXPR_ETT$ -> ETT.ID = %SIZ OR EXPR_ETT$ -> ETT.ID = %REFMOD THEN DO;

  11013 13 000022   200003 470500                    LDP0    @EXPR_ETT$,,AUTO
        13 000023   000000 471500                    LDP1    0,,PR0
        13 000024   100000 220100                    LDX0    0,,PR1
        13 000025   000004 100003                    CMPX0   4,DU
        13 000026   000031 600000 13                 TZE     s:11014
        13 000027   000012 100003                    CMPX0   10,DU
PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:8    
        13 000030   000137 601000 13                 TNZ     s:11125

       43    11014    2         CALL Z8AU$TYPE_DESCRIPTOR (EXPR_ETT$ -> ETT.LOP,

  11014 13 000031   200007 633500                    EPPR3   TYPE_DESC,,AUTO
        13 000032   200015 453500                    STP3    TYPE_DESC+6,,AUTO
        13 000033   100001 634500                    EPPR4   1,,PR1
        13 000034   200014 454500                    STP4    TYPE_DESC+5,,AUTO
        13 000035   200014 630500                    EPPR0   TYPE_DESC+5,,AUTO
        13 000036   000000 631400 14                 EPPR1   0
        13 000037   000000 701000 xent               TSX1    Z8AU$TYPE_DESCRIPTOR
        13 000040   000000 011000                    NOP     0

       44    11015    2                                    TYPE_DESC);
       45    11016    3         IF TYPE_DESC.SIZ$ ~= ADDR(NIL) THEN DO; /* Will still need max length */

  11016 13 000041   200011 236100                    LDQ     TYPE_DESC+2,,AUTO
        13 000042   000001 116000 14                 CMPQ    1
        13 000043   000137 600000 13                 TZE     s:11125

       46    11017                %FISH (TRIAD = TYPE_DESC.SIZ$, RTN = ST$$);

  11019 13 000044   200006 756100                    STQ     ST$$,,AUTO

  11020 13 000045   200006 470500                    LDP0    ST$$,,AUTO
        13 000046   000000 220100                    LDX0    0,,PR0
        13 000047   000751 100003                    CMPX0   489,DU
        13 000050   000060 603000 13                 TRC     s:11025

  11021 13 000051   200006 470500                    LDP0    ST$$,,AUTO
        13 000052   000001 236100                    LDQ     1,,PR0
        13 000053   200006 756100                    STQ     ST$$,,AUTO

  11022 13 000054   200006 470500                    LDP0    ST$$,,AUTO
        13 000055   000000 220100                    LDX0    0,,PR0
        13 000056   000751 100003                    CMPX0   489,DU
        13 000057   000051 602000 13                 TNC     s:11021
PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:9    

       47    11025    4           IF ST$$ -> ST.ID = %CONST THEN DO;

  11025 13 000060   000767 100003                    CMPX0   503,DU
        13 000061   000137 601000 13                 TNZ     s:11125

       48    11026    4             RETURN_PTR$ -> LX_ETT_ITEM.ETT$ -> ETT.LOP -> ETT.LOP ->

  11026 13 000062   200004 471500                    LDP1    @RETURN_PTR$,,AUTO
        13 000063   100000 473500                    LDP3    0,,PR1
        13 000064   300001 474500                    LDP4    1,,PR3
        13 000065   400001 475500                    LDP5    1,,PR4
        13 000066   500001 476500                    LDP6    1,,PR5
        13 000067   004000 236003                    LDQ     2048,DU
        13 000070   600003 256100                    ORSQ    3,,PR6

       49    11027    4                 SCALAR.B.LENGTH_4096 = TRUE;
       50    11028                  %NEW_LONG (@POINTER =
             11028                      RETURN_PTR$ -> LX_ETT_ITEM.ETT$ -> ETT.LOP -> ETT.LOP -> SCALAR.LTS$,
       51    11029                             @LENGTH = ST$$ -> CONST.CONSTI.WORD1);

  11108 13 000071   000002 236000 8                  LDQ     LTS_+2
        13 000072   000002 036007                    ADLQ    2,DL
        13 000073   000003 116000 8                  CMPQ    LTS_+3
        13 000074   000105 604000 13                 TMI     s:11110

  11109 13 000075   000003 236000 14                 LDQ     3
        13 000076   200014 756100                    STQ     TYPE_DESC+5,,AUTO
        13 000077   200014 633500                    EPPR3   TYPE_DESC+5,,AUTO
        13 000100   200015 453500                    STP3    TYPE_DESC+6,,AUTO
        13 000101   200015 630500                    EPPR0   TYPE_DESC+6,,AUTO
        13 000102   000002 631400 14                 EPPR1   2
        13 000103   000000 701000 xent               TSX1    Z8AR$RESERVER
        13 000104   000000 011000                    NOP     0

  11110 13 000105   200004 470500                    LDP0    @RETURN_PTR$,,AUTO
        13 000106   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:10   
        13 000107   100001 473500                    LDP3    1,,PR1
        13 000110   300001 474500                    LDP4    1,,PR3
        13 000111   400001 475500                    LDP5    1,,PR4
        13 000112   000002 236000 8                  LDQ     LTS_+2
        13 000113   000022 736000                    QLS     18
        13 000114   000001 036000 8                  ADLQ    LTS_+1
        13 000115   500005 756100                    STQ     5,,PR5

  11111 13 000116   000002 236007                    LDQ     2,DL
        13 000117   000002 056000 8                  ASQ     LTS_+2

  11112 13 000120   000000 471500                    LDP1    0,,PR0
        13 000121   100001 473500                    LDP3    1,,PR1
        13 000122   300001 474500                    LDP4    1,,PR3
        13 000123   400001 475500                    LDP5    1,,PR4
        13 000124   500005 476500                    LDP6    5,,PR5
        13 000125   001110 220003                    LDX0    584,DU
        13 000126   600000 740100                    STX0    0,,PR6

  11118 13 000127   000000 471500                    LDP1    0,,PR0
        13 000130   100001 473500                    LDP3    1,,PR1
        13 000131   300001 474500                    LDP4    1,,PR3
        13 000132   400001 475500                    LDP5    1,,PR4
        13 000133   500005 476500                    LDP6    5,,PR5
        13 000134   200006 477500                    LDP7    ST$$,,AUTO
        13 000135   700010 235100                    LDA     8,,PR7
        13 000136   600001 755100                    STA     1,,PR6

       52    11121    4           END;

       53    11122    3         END;

       54    11123    2       END;

       55    11124
       56    11125    1   RETURN;

PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:11   
  11125 13 000137   000000 702200 xent               TSX2  ! X66_ARET
       57    11126
       58    11127
       59    11128    1   END Z8EU$NEW_TEMP_FROM_ETT;
       60    11129        %EOD;

PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:12   
--  Include file information  --

   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$NEW_TEMP_FROM_ETT.
PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:13   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ETT$

  ****  Section 002 LblCom HEAD_ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAD_ETT$

  ****  Section 003 LblCom ETT_BUCKETS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ETT_BUCKETS(0:511)

  ****  Section 004 LblCom ETT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ETT_

PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:14   
  ****  Section 005 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 006 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 007 LblCom LTS$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LONG_ITEM$                 0-0-0/w PTR         r     1 LTS$

  ****  Section 008 LblCom LTS_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 LTS_

  ****  Section 009 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 010 LblCom CURRENT_LEX_SYMBOL$

PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:15   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 011 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 012 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @EXPR_ETT$                 4-0-0/w PTR         r     1 @RETURN_PTR$
    *0-0-0/w PTR         r     1 EXPR_ETT$                 *0-0-0/w PTR         r     1 RETURN_PTR$
     6-0-0/w PTR         r     1 ST$$                       5-0-0/w PTR               1 TEMP_ST$
     7-0-0/w STRC(144)   r     1 TYPE_DESC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTS_STEP(0:37)

  ****  BASED and DCB variables  ****
PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:16   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(144)         1 ALTER_LTS                  0-0-0/w STRC(3672)        1 ALT_KEY
     0-0-0/w STRC(36864)       1 ARGLIST                    0-0-0/w STRC(396)         1 ARRAY
     0-0-0/w STRC(180)         1 ARRAY_PRESET_LTS           0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BASE_LTS                   0-0-0/w STRC(288)         1 BINARY_OP
     0-0-0/w STRC(396)         1 BLOCK                      0-0-0/w STRC(144)         1 BT
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
     0-0-0/w STRC(288)         1 CD_LTS                     0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(396)         1 CLASS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(396)         1 CONDITION                  0-0-0/w STRC(396)   r     1 CONST
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(540)         1 CONTROL_NAME_LTS
     0-0-0/w STRC(1872)        1 COPY_FILE                  0-0-0/w STRC(396)         1 DB
     0-0-0/w STRC(396)         1 DCB_                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(108)         1 DEPENDING_SIZE
     0-0-0/w STRC(5472)        1 DIMS                       0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w STRC(216)         1 DML_REC
     0-0-0/w STRC(180)   r     1 ETT                        0-0-0/w STRC(73836)       1 EVALUATE
     0-0-0/w STRC(396)         1 FD                         0-0-0/w STRC(1692)        1 FILE_LTS
     0-0-0/w STRC(288)         1 ILS_LIST                   0-0-0/w STRC(108)         1 INDEXES
     0-0-0/w STRC(360)         1 INIT_LTS                   0-0-0/w STRC(288)         1 INSPECT_1_STMT
     0-0-0/w STRC(288)         1 INSPECT_2_STMT             0-0-0/w STRC(288)         1 INSPECT_4_STMT
     0-0-0/w STRC(396)         1 INTDEF                     0-0-0/w STRC(180)         1 IO_RESTORE_CHAIN
     0-0-0/w STRC(144)         1 KEY                        0-0-0/w STRC(396)         1 LABEL
     0-0-0/w STRC(288)         1 LA_ITEM                    0-0-0/w STRC(36864)       1 LCNST
     0-0-0/w STRC(72)    r     1 LONG                       0-0-0/w STRC        r     1 LTS
     0-0-0/w STRC(360)         1 LTSS                       0-0-0/w STRC(36936)       1 LTS_PTR_ARRAY
     0-0-0/w STRC(504)         1 LX_CD_INPUT                0-0-0/w STRC(324)         1 LX_CD_I_O
     0-0-0/w STRC(396)         1 LX_CD_OUTPUT               0-0-0/w STRC(288)   r     1 LX_ETT_ITEM
     0-0-0/w STRC(288)         1 LX_ITEM                    0-0-0/w STRC(288)         1 LX_LARGE
PL6.E3A0      #001=Z8EU$NEW_TEMP_FROM_ETT File=Z8EU.:Z8A6TSI                     SAT 08/09/97 12:49 Page:17   
     0-0-0/w STRC(288)         1 LX_LIST                    0-0-0/w STRC(1224)        1 LX_REC_DECL
     0-0-0/w STRC(864)         1 LX_REPORT_REC              0-0-0/w STRC(288)         1 LX_TERMINAL
     0-0-0/w STRC(396)         1 MNEMONIC                   0-0-0/w STRC(288)         1 MULTIPLY_STMT
     0-0-0/w STRC(144)         1 NEL                        0-0-0/w STRC(216)         1 OPEN_LTS
     0-0-0/w STRC(36864)       1 PAGE                       0-0-0/w STRC(396)         1 PARA
     0-0-0/w STRC(144)         1 PRIME                      0-0-0/w STRC(396)         1 PROC_
     0-0-0/w STRC(396)         1 PROC_DEF                   0-0-0/w STRC(900)         1 PROC_SUPP
     0-0-0/w STRC(396)         1 RD                         0-0-0/w STRC(288)         1 READ_STMT
     0-0-0/w STRC(216)         1 REF                        0-0-0/w STRC(108)         1 RENAMES
     0-0-0/w STRC(720)         1 REPORT_01_LTS              0-0-0/w STRC(432)         1 REPORT_ELEM_LTS
     0-0-0/w STRC(252)         1 REPORT_GRP_LTS             0-0-0/w STRC(1332)        1 REPORT_LTS
     0-0-0/w STRC(288)         1 REWRITE_STMT               0-0-0/w STRC(144)         1 RVA_LTS
     0-0-0/w STRC(396)   r     1 SCALAR                     0-0-0/w STRC(396)         1 SD
     0-0-0/w STRC(396)         1 SECTION                    0-0-0/w STRC(396)         1 SEGMENT
     0-0-0/w STRC(360)         1 SEGMENT_LTS                0-0-0/w STRC(396)   r     1 ST
     0-0-0/w STRC(288)         1 START_STMT                 0-0-0/w STRC(252)         1 STRING_STMT
     0-0-0/w STRC(288)         1 SUBTRACT_STMT              0-0-0/w STRC(252)         1 SUM_LTS
     0-0-0/w STRC(396)         1 SWITCH                     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR
     0-0-0/w STRC(396)         1 SYMDEF_                    0-0-0/w STRC(396)         1 SYMREF_
     0-0-0/w STRC(396)         1 TEMP                       0-0-0/w STRC(288)         1 UNARY_OP
     0-0-0/w STRC(288)         1 UNSTRING_STMT              0-0-0/d STRC(612)         1 USE
     0-0-0/w STRC(252)         1 USE_SUPP                   0-0-0/w STRC(396)         1 VARIABLE
     0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8EU$NEW_TEMP_FROM_ETT requires 96 words for executable code.
   Procedure Z8EU$NEW_TEMP_FROM_ETT requires 14 words of local(AUTO) storage.

PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:18   
       61        1        /*T***********************************************************/
       62        2        /*T*                                                         */
       63        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       64        4        /*T*                                                         */
       65        5        /*T***********************************************************/
       66        6        Z8EU$NEW_TEMP_FROM_DESC : PROC ( TYPE_DESC,
       67        7                                        RETURN_PTR$);
       68        8
       69        9        /* Generate a new temporary to hold the results from
       70       10           evaluation of an ETT.
       71       11           A LX_ETT_ITEM for the temporary identifier is completed.
       72       12        */
       73       13
       74       14    1   DCL RETURN_PTR$ PTR;         /* To space for the LX_ETT_ITEM */
       75       15
       76       16    1   DCL TEMP_ST$ PTR;
       77       17
       78       18        %EQU PHASE = 1;
       79       19        %INCLUDE Z8A_DEFC;
       80       87        %INCLUDE Z8A_SUPP_MAC;
       81     2487        %INCLUDE Z8A_ETT;
       82     2788        %INCLUDE Z8A_ST;
       83     6447        %INCLUDE Z8A_TYPES;
       84     6621        %INCLUDE Z8A_COMCOM;
       85     7271        %INCLUDE Z8E_STACKS;
       86     9537
       87     9538    1   DCL 1 TYPE_DESC ALIGNED,
       88     9539              %TYPE_DESC;
       89     9573
       90     9574    1   DCL Z8AT$CREATE_TEMPORARY ENTRY (2);
       91     9575    1   DCL Z8AS$SR_ETT ENTRY (1);
       92     9576    1   DCL Z8AF$FORME ENTRY(4);
       93     9577    1   DCL Z8AF$NEW_BASE ENTRY(3);
       94     9578
       95     9579    1     GET_TEMP : PROC;
       96     9580
       97     9581            /* Pooling of temps may be done later, but right
PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:19   
       98     9582               now get a new temp
       99     9583            */
      100     9584    2       CALL Z8AT$CREATE_TEMPORARY (%SCALAR,
      101     9585    2                                   TEMP_ST$);
      102     9586    2       TEMP_ST$ -> SCALAR.TYPE = TYPE_DESC.TYPE;
      103     9587    2       TEMP_ST$ -> SCALAR.DESCL = TYPE_DESC.DESC.DESCL;
      104     9588    2       TEMP_ST$ -> SCALAR.NDSC.CN = 0;
      105     9589
      106     9590    2     END GET_TEMP;
      107     9591
      108     9592        %INIT_LX_ETT_ITEM (@POINTER = RETURN_PTR$);
      109     9614
      110     9615    1   CALL GET_TEMP;
      111     9616
      112     9617    1   RETURN_PTR$ -> LX_ETT_ITEM.TYPE = TYPE_DESC.TYPE;
      113     9618
      114     9619    1   CALL Z8AF$NEW_BASE ( TEMP_ST$,
      115     9620    1                        ADDR(NIL),
      116     9621    1                        RETURN_PTR$ -> LX_ETT_ITEM.ETT$);
      117     9622
      118     9623    1   IF TYPE_DESC.SIZ$ ~= ADDR(NIL) THEN
      119     9624    1     CALL Z8AF$FORME (%SIZ,
      120     9625    1                      RETURN_PTR$ -> LX_ETT_ITEM.ETT$,
      121     9626    1                      TYPE_DESC.SIZ$,
      122     9627    1                      RETURN_PTR$ -> LX_ETT_ITEM.ETT$);
      123     9628
      124     9629    1   RETURN;
      125     9630
      126     9631
      127     9632    1   END Z8EU$NEW_TEMP_FROM_DESC;
      128     9633        %EOD;

PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:20   
--  Include file information  --

   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$NEW_TEMP_FROM_DESC.

   Procedure Z8EU$NEW_TEMP_FROM_DESC requires 88 words for executable code.
   Procedure Z8EU$NEW_TEMP_FROM_DESC requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:21   

 Object Unit name= Z8EU$NEW_TEMP_FROM_DESC                    File name= Z8EU.:Z8A6TOU
 UTS= AUG 09 '97 12:50:58.20 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ETT$
    2  LblCom even  none     1      1  HEAD_ETT$
    3  LblCom even  none   512   1000  ETT_BUCKETS
    4  LblCom even  none     5      5  ETT_
    5  LblCom even  none     1      1  ST$
    6  LblCom even  none     5      5  ST_
    7  LblCom even  none    90    132  LEX_SYMBOL
    8  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
    9  LblCom even  none    90    132  TEMP_LEX_SYMBOL
   10  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
   11   Proc  even  none    88    130  Z8EU$NEW_TEMP_FROM_DESC
   12  RoData even  none     9     11  Z8EU$NEW_TEMP_FROM_DESC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    11      0   yes            yes      Std        2  Z8EU$NEW_TEMP_FROM_DESC
PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:22   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 Z8AF$NEW_BASE
         yes           Std       4 Z8AF$FORME
         yes           Std       2 Z8AT$CREATE_TEMPORARY
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:23   


       61        1        /*T***********************************************************/
       62        2        /*T*                                                         */
       63        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       64        4        /*T*                                                         */
       65        5        /*T***********************************************************/
       66        6        Z8EU$NEW_TEMP_FROM_DESC : PROC ( TYPE_DESC,

      6 11 000000   000000 700200 xent  Z8EU$NEW_TE* TSX0  ! X66_AUTO_2
        11 000001   000014 000002                    ZERO    12,2
        11 000002   000030 710000 11                 TRA     s:9594

       67        7                                        RETURN_PTR$);
       68        8
       69        9        /* Generate a new temporary to hold the results from
       70       10           evaluation of an ETT.
       71       11           A LX_ETT_ITEM for the temporary identifier is completed.
       72       12        */
       73       13
       74       14    1   DCL RETURN_PTR$ PTR;         /* To space for the LX_ETT_ITEM */
       75       15
       76       16    1   DCL TEMP_ST$ PTR;
       77       17
       78       18        %EQU PHASE = 1;
       79       19        %INCLUDE Z8A_DEFC;
       80       87        %INCLUDE Z8A_SUPP_MAC;
       81     2487        %INCLUDE Z8A_ETT;
       82     2788        %INCLUDE Z8A_ST;
       83     6447        %INCLUDE Z8A_TYPES;
       84     6621        %INCLUDE Z8A_COMCOM;
       85     7271        %INCLUDE Z8E_STACKS;
       86     9537
       87     9538    1   DCL 1 TYPE_DESC ALIGNED,
       88     9539              %TYPE_DESC;
       89     9573
       90     9574    1   DCL Z8AT$CREATE_TEMPORARY ENTRY (2);
       91     9575    1   DCL Z8AS$SR_ETT ENTRY (1);
PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:24   
       92     9576    1   DCL Z8AF$FORME ENTRY(4);
       93     9577    1   DCL Z8AF$NEW_BASE ENTRY(3);
       94     9578
       95     9579    1     GET_TEMP : PROC;

   9579 11 000003   200006 741300       GET_TEMP     STX1  ! TEMP_ST$+1,,AUTO

       96     9580
       97     9581            /* Pooling of temps may be done later, but right
       98     9582               now get a new temp
       99     9583            */
      100     9584    2       CALL Z8AT$CREATE_TEMPORARY (%SCALAR,

   9584 11 000004   200005 630500                    EPPR0   TEMP_ST$,,AUTO
        11 000005   200011 450500                    STP0    TEMP_ST$+4,,AUTO
        11 000006   000002 236000 12                 LDQ     2
        11 000007   200010 756100                    STQ     TEMP_ST$+3,,AUTO
        11 000010   200010 630500                    EPPR0   TEMP_ST$+3,,AUTO
        11 000011   000000 631400 12                 EPPR1   0
        11 000012   000000 701000 xent               TSX1    Z8AT$CREATE_TEMPORARY
        11 000013   000000 011000                    NOP     0

      101     9585    2                                   TEMP_ST$);
      102     9586    2       TEMP_ST$ -> SCALAR.TYPE = TYPE_DESC.TYPE;

   9586 11 000014   200003 470500                    LDP0    @TYPE_DESC,,AUTO
        11 000015   000000 720100                    LXL0    0,,PR0
        11 000016   200005 471500                    LDP1    TEMP_ST$,,AUTO
        11 000017   100002 740100                    STX0    2,,PR1

      103     9587    2       TEMP_ST$ -> SCALAR.DESCL = TYPE_DESC.DESC.DESCL;

   9587 11 000020   000001 720100                    LXL0    1,,PR0
        11 000021   200005 471500                    LDP1    TEMP_ST$,,AUTO
        11 000022   100001 440100                    SXL0    1,,PR1

      104     9588    2       TEMP_ST$ -> SCALAR.NDSC.CN = 0;
PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:25   

   9588 11 000023   200005 471500                    LDP1    TEMP_ST$,,AUTO
        11 000024   000003 236000 12                 LDQ     3
        11 000025   100001 356100                    ANSQ    1,,PR1

      105     9589
      106     9590    2     END GET_TEMP;

   9590 11 000026   200006 221300                    LDX1  ! TEMP_ST$+1,,AUTO
        11 000027   000001 702211                    TSX2  ! 1,X1

      107     9591
      108     9592        %INIT_LX_ETT_ITEM (@POINTER = RETURN_PTR$);

   9594 11 000030   200004 470500                    LDP0    @RETURN_PTR$,,AUTO
        11 000031   000000 471500                    LDP1    0,,PR0
        11 000032   000004 220003                    LDX0    4,DU
        11 000033   100000 740100                    STX0    0,,PR1

   9595 11 000034   000000 471500                    LDP1    0,,PR0
        11 000035   000000 221003                    LDX1    0,DU
        11 000036   100000 441100                    SXL1    0,,PR1

   9596 11 000037   000000 471500                    LDP1    0,,PR0
        11 000040   000015 235007                    LDA     13,DL
        11 000041   100004 755100                    STA     4,,PR1

   9597 11 000042   000000 471500                    LDP1    0,,PR0
        11 000043   000004 236000 12                 LDQ     4
        11 000044   100007 756100                    STQ     7,,PR1

   9598 11 000045   000000 471500                    LDP1    0,,PR0
        11 000046   100001 756100                    STQ     1,,PR1

   9599 11 000047   000000 471500                    LDP1    0,,PR0
        11 000050   000004 236000 12                 LDQ     4
        11 000051   100002 756100                    STQ     2,,PR1
PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:26   

   9601 11 000052   000000 471500                    LDP1    0,,PR0
        11 000053   000133 236000 xsym               LDQ     COMCOM+91
        11 000054   100005 756100                    STQ     5,,PR1

   9602 11 000055   000000 471500                    LDP1    0,,PR0
        11 000056   000134 236000 xsym               LDQ     COMCOM+92
        11 000057   100006 756100                    STQ     6,,PR1

      109     9614
      110     9615    1   CALL GET_TEMP;

   9615 11 000060   000003 701000 11                 TSX1    GET_TEMP
        11 000061   000000 011000                    NOP     0

      111     9616
      112     9617    1   RETURN_PTR$ -> LX_ETT_ITEM.TYPE = TYPE_DESC.TYPE;

   9617 11 000062   200004 470500                    LDP0    @RETURN_PTR$,,AUTO
        11 000063   000000 471500                    LDP1    0,,PR0
        11 000064   200003 473500                    LDP3    @TYPE_DESC,,AUTO
        11 000065   300000 235100                    LDA     0,,PR3
        11 000066   100004 755100                    STA     4,,PR1

      113     9618
      114     9619    1   CALL Z8AF$NEW_BASE ( TEMP_ST$,

   9619 11 000067   000000 471500                    LDP1    0,,PR0
        11 000070   000004 236000 12                 LDQ     4
        11 000071   200010 756100                    STQ     TEMP_ST$+3,,AUTO
        11 000072   100001 634500                    EPPR4   1,,PR1
        11 000073   200013 454500                    STP4    TEMP_ST$+6,,AUTO
        11 000074   200010 631500                    EPPR1   TEMP_ST$+3,,AUTO
        11 000075   200012 451500                    STP1    TEMP_ST$+5,,AUTO
        11 000076   200005 635500                    EPPR5   TEMP_ST$,,AUTO
        11 000077   200011 455500                    STP5    TEMP_ST$+4,,AUTO
        11 000100   200011 630500                    EPPR0   TEMP_ST$+4,,AUTO
PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:27   
        11 000101   000005 631400 12                 EPPR1   5
        11 000102   000000 701000 xent               TSX1    Z8AF$NEW_BASE
        11 000103   000000 011000                    NOP     0

      115     9620    1                        ADDR(NIL),
      116     9621    1                        RETURN_PTR$ -> LX_ETT_ITEM.ETT$);
      117     9622
      118     9623    1   IF TYPE_DESC.SIZ$ ~= ADDR(NIL) THEN

   9623 11 000104   200003 470500                    LDP0    @TYPE_DESC,,AUTO
        11 000105   000002 236100                    LDQ     2,,PR0
        11 000106   000004 116000 12                 CMPQ    4
        11 000107   000127 600000 11                 TZE     s:9629

      119     9624    1     CALL Z8AF$FORME (%SIZ,

   9624 11 000110   200004 471500                    LDP1    @RETURN_PTR$,,AUTO
        11 000111   100000 473500                    LDP3    0,,PR1
        11 000112   300001 634500                    EPPR4   1,,PR3
        11 000113   200013 454500                    STP4    TEMP_ST$+6,,AUTO
        11 000114   200003 236100                    LDQ     @TYPE_DESC,,AUTO
        11 000115   000002 036003                    ADLQ    2,DU
        11 000116   200012 756100                    STQ     TEMP_ST$+5,,AUTO
        11 000117   300001 635500                    EPPR5   1,,PR3
        11 000120   200011 455500                    STP5    TEMP_ST$+4,,AUTO
        11 000121   000010 236000 12                 LDQ     8
        11 000122   200010 756100                    STQ     TEMP_ST$+3,,AUTO
        11 000123   200010 630500                    EPPR0   TEMP_ST$+3,,AUTO
        11 000124   000006 631400 12                 EPPR1   6
        11 000125   000000 701000 xent               TSX1    Z8AF$FORME
        11 000126   000000 011000                    NOP     0

      120     9625    1                      RETURN_PTR$ -> LX_ETT_ITEM.ETT$,
      121     9626    1                      TYPE_DESC.SIZ$,
      122     9627    1                      RETURN_PTR$ -> LX_ETT_ITEM.ETT$);
      123     9628
      124     9629    1   RETURN;
PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:28   

   9629 11 000127   000000 702200 xent               TSX2  ! X66_ARET
      125     9630
      126     9631
      127     9632    1   END Z8EU$NEW_TEMP_FROM_DESC;
      128     9633        %EOD;

PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:29   
--  Include file information  --

   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$NEW_TEMP_FROM_DESC.
PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:30   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ETT$

  ****  Section 002 LblCom HEAD_ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAD_ETT$

  ****  Section 003 LblCom ETT_BUCKETS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ETT_BUCKETS(0:511)

  ****  Section 004 LblCom ETT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ETT_

PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:31   
  ****  Section 005 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 006 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 007 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 008 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 009 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 010 LblCom TEMP_LEX_SYMBOL2

PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:32   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @RETURN_PTR$               3-0-0/w PTR         r     1 @TYPE_DESC
    *0-0-0/w PTR         r     1 RETURN_PTR$                5-0-0/w PTR         r     1 TEMP_ST$
    *0-0-0/w STRC(144)   r     1 TYPE_DESC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(396)         1 ARRAY                      0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BINARY_OP                  0-0-0/w STRC(396)         1 BLOCK
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(396)         1 CLASS
     0-0-0/w STRC(288)         1 COMPUTE_STMT               0-0-0/w STRC(396)         1 CONDITION
     0-0-0/w STRC(396)         1 CONST                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(396)         1 DB                         0-0-0/w STRC(396)         1 DCB_
     0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER         0-0-0/w STRC(252)         1 DEFERED_ID_TREE
     0-0-0/w STRC(288)         1 DEFERED_QUAL_ID            0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
PL6.E3A0      #002=Z8EU$NEW_TEMP_FROM_DESC File=Z8EU.:Z8A6TSI                    SAT 08/09/97 12:50 Page:33   
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w STRC(180)         1 ETT
     0-0-0/w STRC(396)         1 FD                         0-0-0/w STRC(288)         1 ILS_LIST
     0-0-0/w STRC(288)         1 INSPECT_1_STMT             0-0-0/w STRC(288)         1 INSPECT_2_STMT
     0-0-0/w STRC(288)         1 INSPECT_4_STMT             0-0-0/w STRC(396)         1 INTDEF
     0-0-0/w STRC(396)         1 LABEL                      0-0-0/w STRC(288)         1 LA_ITEM
     0-0-0/w STRC(504)         1 LX_CD_INPUT                0-0-0/w STRC(324)         1 LX_CD_I_O
     0-0-0/w STRC(396)         1 LX_CD_OUTPUT               0-0-0/w STRC(288)   r     1 LX_ETT_ITEM
     0-0-0/w STRC(288)         1 LX_ITEM                    0-0-0/w STRC(288)         1 LX_LARGE
     0-0-0/w STRC(288)         1 LX_LIST                    0-0-0/w STRC(1224)        1 LX_REC_DECL
     0-0-0/w STRC(864)         1 LX_REPORT_REC              0-0-0/w STRC(288)         1 LX_TERMINAL
     0-0-0/w STRC(396)         1 MNEMONIC                   0-0-0/w STRC(288)         1 MULTIPLY_STMT
     0-0-0/w STRC(36864)       1 PAGE                       0-0-0/w STRC(396)         1 PARA
     0-0-0/w STRC(396)         1 PROC_                      0-0-0/w STRC(396)         1 PROC_DEF
     0-0-0/w STRC(396)         1 RD                         0-0-0/w STRC(288)         1 READ_STMT
     0-0-0/w STRC(288)         1 REWRITE_STMT               0-0-0/w STRC(396)   r     1 SCALAR
     0-0-0/w STRC(396)         1 SD                         0-0-0/w STRC(396)         1 SECTION
     0-0-0/w STRC(396)         1 SEGMENT                    0-0-0/w STRC(396)         1 ST
     0-0-0/w STRC(288)         1 START_STMT                 0-0-0/w STRC(252)         1 STRING_STMT
     0-0-0/w STRC(288)         1 SUBTRACT_STMT              0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/w STRC(288)         1 UNARY_OP                   0-0-0/w STRC(288)         1 UNSTRING_STMT
     0-0-0/w STRC(396)         1 VARIABLE                   0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8EU$NEW_TEMP_FROM_DESC requires 88 words for executable code.
   Procedure Z8EU$NEW_TEMP_FROM_DESC requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=Z8EU$DISPOSE_TEMP File=Z8EU.:Z8A6TSI                          SAT 08/09/97 12:52 Page:34   
      129        1        /*T***********************************************************/
      130        2        /*T*                                                         */
      131        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      132        4        /*T*                                                         */
      133        5        /*T***********************************************************/
      134        6        Z8EU$DISPOSE_TEMP : PROC (POINTER$);
      135        7
      136        8        /* Dispose a temp that is referred to bY a base ETT
      137        9           This temp may be reused at a later time
      138       10        */
      139       11
      140       12    1   DCL POINTER$ PTR;
      141       13
      142       14
      143       15        %EQU PHASE = 1;
      144       16        %INCLUDE Z8A_DEFC;
      145       84        %INCLUDE Z8A_SUPP_MAC;
      146     2484        %INCLUDE Z8A_ETT;
      147     2785        %INCLUDE Z8A_ST;
      148     6444
      149     6445    1   DCL TEMP_ST$ PTR;
      150     6446
      151     6447
      152     6448          %FISH (TRIAD = POINTER$,
      153     6449                 RTN = TEMP_ST$);
      154     6457    1     POINTER$ = TEMP_ST$;
      155     6458
      156     6459
      157     6460        /* We are not doing pooling at the moment, so just
      158     6461           drop the temp.
      159     6462        */
      160     6463
      161     6464    1     RETURN;
      162     6465
      163     6466    1   END Z8EU$DISPOSE_TEMP;
      164     6467        %EOD;

PL6.E3A0      #003=Z8EU$DISPOSE_TEMP File=Z8EU.:Z8A6TSI                          SAT 08/09/97 12:52 Page:35   
--  Include file information  --

   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$DISPOSE_TEMP.

   Procedure Z8EU$DISPOSE_TEMP requires 19 words for executable code.
   Procedure Z8EU$DISPOSE_TEMP requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=Z8EU$DISPOSE_TEMP File=Z8EU.:Z8A6TSI                          SAT 08/09/97 12:52 Page:36   

 Object Unit name= Z8EU$DISPOSE_TEMP                          File name= Z8EU.:Z8A6TOU
 UTS= AUG 09 '97 12:52:19.92 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ETT$
    2  LblCom even  none     1      1  HEAD_ETT$
    3  LblCom even  none   512   1000  ETT_BUCKETS
    4  LblCom even  none     5      5  ETT_
    5  LblCom even  none     1      1  ST$
    6  LblCom even  none     5      5  ST_
    7   Proc  even  none    19     23  Z8EU$DISPOSE_TEMP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes      Std        1  Z8EU$DISPOSE_TEMP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
PL6.E3A0      #003=Z8EU$DISPOSE_TEMP File=Z8EU.:Z8A6TSI                          SAT 08/09/97 12:52 Page:37   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #003=Z8EU$DISPOSE_TEMP File=Z8EU.:Z8A6TSI                          SAT 08/09/97 12:52 Page:38   


      129        1        /*T***********************************************************/
      130        2        /*T*                                                         */
      131        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      132        4        /*T*                                                         */
      133        5        /*T***********************************************************/
      134        6        Z8EU$DISPOSE_TEMP : PROC (POINTER$);

      6  7 000000   000000 700200 xent  Z8EU$DISPOS* TSX0  ! X66_AUTO_1
         7 000001   000006 000001                    ZERO    6,1

      135        7
      136        8        /* Dispose a temp that is referred to bY a base ETT
      137        9           This temp may be reused at a later time
      138       10        */
      139       11
      140       12    1   DCL POINTER$ PTR;
      141       13
      142       14
      143       15        %EQU PHASE = 1;
      144       16        %INCLUDE Z8A_DEFC;
      145       84        %INCLUDE Z8A_SUPP_MAC;
      146     2484        %INCLUDE Z8A_ETT;
      147     2785        %INCLUDE Z8A_ST;
      148     6444
      149     6445    1   DCL TEMP_ST$ PTR;
      150     6446
      151     6447
      152     6448          %FISH (TRIAD = POINTER$,
      153     6449                 RTN = TEMP_ST$);

   6451  7 000002   200003 470500                    LDP0    @POINTER$,,AUTO
         7 000003   000000 236100                    LDQ     0,,PR0
         7 000004   200004 756100                    STQ     TEMP_ST$,,AUTO

   6452  7 000005   200004 471500                    LDP1    TEMP_ST$,,AUTO
         7 000006   100000 220100                    LDX0    0,,PR1
PL6.E3A0      #003=Z8EU$DISPOSE_TEMP File=Z8EU.:Z8A6TSI                          SAT 08/09/97 12:52 Page:39   
         7 000007   000751 100003                    CMPX0   489,DU
         7 000010   000020 603000 7                  TRC     s:6457

   6453  7 000011   200004 470500                    LDP0    TEMP_ST$,,AUTO
         7 000012   000001 236100                    LDQ     1,,PR0
         7 000013   200004 756100                    STQ     TEMP_ST$,,AUTO

   6454  7 000014   200004 470500                    LDP0    TEMP_ST$,,AUTO
         7 000015   000000 220100                    LDX0    0,,PR0
         7 000016   000751 100003                    CMPX0   489,DU
         7 000017   000011 602000 7                  TNC     s:6453

      154     6457    1     POINTER$ = TEMP_ST$;

   6457  7 000020   200003 470500                    LDP0    @POINTER$,,AUTO
         7 000021   000000 756100                    STQ     0,,PR0

      155     6458
      156     6459
      157     6460        /* We are not doing pooling at the moment, so just
      158     6461           drop the temp.
      159     6462        */
      160     6463
      161     6464    1     RETURN;

   6464  7 000022   000000 702200 xent               TSX2  ! X66_ARET
      162     6465
      163     6466    1   END Z8EU$DISPOSE_TEMP;
      164     6467        %EOD;

PL6.E3A0      #003=Z8EU$DISPOSE_TEMP File=Z8EU.:Z8A6TSI                          SAT 08/09/97 12:52 Page:40   
--  Include file information  --

   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$DISPOSE_TEMP.
PL6.E3A0      #003=Z8EU$DISPOSE_TEMP File=Z8EU.:Z8A6TSI                          SAT 08/09/97 12:52 Page:41   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ETT$

  ****  Section 002 LblCom HEAD_ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAD_ETT$

  ****  Section 003 LblCom ETT_BUCKETS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ETT_BUCKETS(0:511)

  ****  Section 004 LblCom ETT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ETT_

PL6.E3A0      #003=Z8EU$DISPOSE_TEMP File=Z8EU.:Z8A6TSI                          SAT 08/09/97 12:52 Page:42   
  ****  Section 005 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 006 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @POINTER$                 *0-0-0/w PTR         r     1 POINTER$
     4-0-0/w PTR         r     1 TEMP_ST$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(396)         1 ALPHABET                   0-0-0/w STRC(396)         1 ARRAY
     0-0-0/w STRC(396)         1 BLOCK                      0-0-0/w STRC(396)         1 CD
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(396)         1 CLASS
     0-0-0/w STRC(396)         1 CONDITION                  0-0-0/w STRC(396)         1 CONST
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(396)         1 DB
     0-0-0/w STRC(396)         1 DCB_                       0-0-0/w STRC(396)         1 DML_ITEM
     0-0-0/w STRC(180)   r     1 ETT                        0-0-0/w STRC(396)         1 FD
     0-0-0/w STRC(396)         1 INTDEF                     0-0-0/w STRC(396)         1 LABEL
     0-0-0/w STRC(396)         1 MNEMONIC                   0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(396)         1 PARA                       0-0-0/w STRC(396)         1 PROC_
PL6.E3A0      #003=Z8EU$DISPOSE_TEMP File=Z8EU.:Z8A6TSI                          SAT 08/09/97 12:52 Page:43   
     0-0-0/w STRC(396)         1 PROC_DEF                   0-0-0/w STRC(396)         1 RD
     0-0-0/w STRC(396)         1 SCALAR                     0-0-0/w STRC(396)         1 SD
     0-0-0/w STRC(396)         1 SECTION                    0-0-0/w STRC(396)         1 SEGMENT
     0-0-0/w STRC(396)         1 ST                         0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/w STRC(396)         1 VARIABLE


   Procedure Z8EU$DISPOSE_TEMP requires 19 words for executable code.
   Procedure Z8EU$DISPOSE_TEMP requires 6 words of local(AUTO) storage.

PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:44   
      165        1        /*T***********************************************************/
      166        2        /*T*                                                         */
      167        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      168        4        /*T*                                                         */
      169        5        /*T***********************************************************/
      170        6        Z8EU$CORRES : PROC (REC_ST$,
      171        7                            SEND_ST$,
      172        8                            CORRES_LIST$);
      173        9
      174       10    1     DCL REC_ST$ PTR;
      175       11    1     DCL SEND_ST$ PTR;
      176       12    1     DCL CORRES_LIST$ PTR;
      177       13
      178       14        %EQU PHASE = 1;
      179       15        %INCLUDE Z8A_DEFC;
      180       83        %INCLUDE Z8A_SUPP_MAC;
      181     2483        %INCLUDE Z8A_ERR_NUMS;
      182     3247        %INCLUDE Z8A_ETT;
      183     3548        %INCLUDE Z8A_DNT;
      184     3769        %INCLUDE Z8A_TYPES;
      185     3943        %INCLUDE Z8A_ST;
      186     7602        %INCLUDE Z8A_COMCOM;
      187     8252        %INCLUDE Z8A_SRCH;
      188     8301        %INCLUDE Z8A_QLT;
      189     8407        %INCLUDE Z8E_STACKS;
      190    10673        %INCLUDE Z8E_ABSSYN;
      191    10879        %INCLUDE Z8E_HEAP;
      192    10935
      193    10936    1   DCL Z8AE$ERROR ENTRY(12);
      194    10937    1   DCL Z8AS$SR_ETT ENTRY(1);
      195    10938
      196    10939    1     DCL CORRES_CANDIDATE BOOLEAN;
      197    10940
      198    10941    1     DCL REC_QLT$ PTR;
      199    10942    1     DCL SEND_QLT$ PTR;
      200    10943        %EJECT;
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:45   
      201    10944    1   CHECK_CORRES_CANDIDATE : PROC (ST$,
      202    10945    1                                  IS_CANDIDATE);
      203    10946
      204    10947    2     DCL ST$ PTR;
      205    10948    2     DCL IS_CANDIDATE BIT(1) ALIGNED;
      206    10949
      207    10950    2   IS_CANDIDATE = TRUE;
      208    10951
      209    10952    2   IF ST$ -> SCALAR.QLT$ -> QLT.LEVEL_NO = 66
      210    10953    2       OR ST$ -> SCALAR.QLT$ -> QLT.LEVEL_NO = 77
      211    10954    2       OR ST$ -> SCALAR.QLT$ -> QLT.LEVEL_NO = 88
      212    10955    2       OR ST$ -> SCALAR.B.REDEF_SUB
      213    10956    2       OR ST$ -> SCALAR.QLT$ -> QLT.B.RENAMES
      214    10957    2       OR ST$ -> SCALAR.QLT$ -> QLT.B.OCCURS
      215    10958    2       OR ST$ -> SCALAR.TYPE = %TYP
      216    10959    2       OR ST$ -> SCALAR.TYPE = %TYY
      217    10960    2       OR ST$ -> SCALAR.TYPE = %TYX
      218    10961    2       OR ST$ -> SCALAR.DNT$ -> DNT.TEXT.NAME = 'FILLER' THEN
      219    10962    2     IS_CANDIDATE = FALSE;
      220    10963
      221    10964    2   END CHECK_CORRES_CANDIDATE;
      222    10965
      223    10966        %EJECT;
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:46   
      224    10967    1   ADD_TO_CORRES_LIST : PROC (RST$,
      225    10968    1                       SST$);
      226    10969
      227    10970    2     DCL RST$ PTR;
      228    10971    2     DCL SST$ PTR;
      229    10972
      230    10973    2     DCL CORRES_ITEM$ PTR;
      231    10974    2     DCL CORRES_ST$ PTR;
      232    10975    2     DCL R_LX_ETT_ITEM$ PTR;
      233    10976    2     DCL S_LX_ETT_ITEM$ PTR;
      234    10977
      235    10978    2   CORRES_ITEM$ = CORRES_LIST$ -> LX_LIST.HEAD$;
      236    10979
      237    10980    3   DO WHILE CORRES_ITEM$ ~= ADDR(NIL);
      238    10981
      239    10982          %FISH (TRIAD = CORRES_ITEM$ -> LX_LIST.HEAD$ -> LX_ETT_ITEM.ETT$,
      240    10983                 RTN = CORRES_ST$);
      241    10991
      242    10992    3     IF CORRES_ST$ = RST$ THEN
      243    10993    3       CALL Z8AE$ERROR (%E$AMBIGUOUS_CORRES_REF);
      244    10994
      245    10995    3     CORRES_ITEM$ = CORRES_ITEM$ -> LX_LIST.LINK;
      246    10996
      247    10997    3   END;  /* do while */
      248    10998
      249    10999        /* Add items to list */
      250    11000
      251    11001        %NEW (@TEMPLATE = LX_ETT_ITEM,
      252    11002              @POINTER = R_LX_ETT_ITEM$);
      253    11012
      254    11013        %INIT_LX_ETT_ITEM (@POINTER = R_LX_ETT_ITEM$,
      255    11014                           @TYPE = "RST$ -> SCALAR.TYPE");
      256    11036
      257    11037        %SRCH_ETT (@ID = %BASE,
      258    11038                   @LOP = RST$,
      259    11039                   @ROP = "ADDR(NIL)",
      260    11040                   @ETT$ = "R_LX_ETT_ITEM$ -> LX_ETT_ITEM.ETT$");
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:47   
      261    11055
      262    11056        %NEW (@TEMPLATE = LX_ETT_ITEM,
      263    11057              @POINTER = S_LX_ETT_ITEM$);
      264    11067
      265    11068        %INIT_LX_ETT_ITEM (@POINTER = S_LX_ETT_ITEM$,
      266    11069                           @TYPE = "SST$ -> SCALAR.TYPE");
      267    11091
      268    11092        %SRCH_ETT (@ID = %BASE,
      269    11093                   @LOP = SST$,
      270    11094                   @ROP = "ADDR(NIL)",
      271    11095                   @ETT$ = "S_LX_ETT_ITEM$ -> LX_ETT_ITEM.ETT$");
      272    11110
      273    11111        %NEW (@TEMPLATE = LX_LIST,
      274    11112              @POINTER = CORRES_ITEM$);
      275    11122
      276    11123        %INIT_LX_LIST (@POINTER = CORRES_ITEM$);
      277    11133
      278    11134        %ADD_LX_ITEM_TO_LIST_HEAD (@FROM$ = R_LX_ETT_ITEM$,
      279    11135                                   @LIST$ = CORRES_ITEM$);
      280    11144
      281    11145        %ADD_LX_ITEM_TO_LIST_TAIL (@FROM$ = S_LX_ETT_ITEM$,
      282    11146                                   @LIST$ = CORRES_ITEM$);
      283    11162
      284    11163        %ADD_LX_ITEM_TO_LIST_TAIL (@FROM$ = CORRES_ITEM$,
      285    11164                                   @LIST$ = CORRES_LIST$);
      286    11180
      287    11181    2   END ADD_TO_CORRES_LIST;
      288    11182
      289    11183        %EJECT;
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:48   
      290    11184         /* Main body of Z8EU$CORRES */
      291    11185
      292    11186    1   REC_QLT$ = REC_ST$ -> SCALAR.QLT$ -> QLT.SON;
      293    11187
      294    11188    2   DO WHILE REC_QLT$ ~= ADDR(NIL);
      295    11189
      296    11190    2     CALL CHECK_CORRES_CANDIDATE (REC_QLT$ -> QLT.ST$,
      297    11191    2                                  CORRES_CANDIDATE);
      298    11192
      299    11193    2     IF CORRES_CANDIDATE THEN
      300    11194    3       DO;
      301    11195    3         SEND_QLT$ = SEND_ST$ -> SCALAR.QLT$ -> QLT.SON;
      302    11196
      303    11197    4         DO WHILE SEND_QLT$ ~= ADDR(NIL);
      304    11198
      305    11199    4           CALL CHECK_CORRES_CANDIDATE (SEND_QLT$ -> QLT.ST$,
      306    11200    4                                        CORRES_CANDIDATE);
      307    11201
      308    11202    4           IF CORRES_CANDIDATE
      309    11203    4                AND REC_QLT$ -> QLT.ST$ -> SCALAR.DNT$ -> DNT.TEXT.NAME
      310    11204    4                       = SEND_QLT$ -> QLT.ST$ -> SCALAR.DNT$ -> DNT.TEXT.NAME THEN
      311    11205    5             DO;
      312    11206    5               IF REC_QLT$ -> QLT.ST$ -> SCALAR.B.ELEMENTARY
      313    11207    5                    OR SEND_QLT$ -> QLT.ST$ -> SCALAR.B.ELEMENTARY THEN
      314    11208    5                 CALL ADD_TO_CORRES_LIST ( REC_QLT$ -> QLT.ST$,
      315    11209    5                                           SEND_QLT$ -> QLT.ST$);
      316    11210    5               ELSE
      317    11211    5                 CALL Z8EU$CORRES (REC_QLT$ -> QLT.ST$,
      318    11212    5                                   SEND_QLT$ -> QLT.ST$,
      319    11213    5                                   CORRES_LIST$);
      320    11214    5             END;
      321    11215    4          SEND_QLT$ = SEND_QLT$ -> QLT.BROTHER;
      322    11216    4        END; /* do while SEND_QLT$ */
      323    11217    3      END;
      324    11218    2     REC_QLT$ = REC_QLT$ -> QLT.BROTHER;
      325    11219
      326    11220    2   END;  /* DO WHILE */
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:49   
      327    11221
      328    11222    1   END Z8EU$CORRES;
      329    11223        %EOD;

PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:50   
--  Include file information  --

   Z8E_HEAP.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_ABSSYN.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_SRCH.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$CORRES.

   Procedure Z8EU$CORRES requires 329 words for executable code.
   Procedure Z8EU$CORRES requires 22 words of local(AUTO) storage.

PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:51   

 Object Unit name= Z8EU$CORRES                                File name= Z8EU.:Z8A6TOU
 UTS= AUG 09 '97 12:53:12.44 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ETT$
    2  LblCom even  none     1      1  HEAD_ETT$
    3  LblCom even  none   512   1000  ETT_BUCKETS
    4  LblCom even  none     5      5  ETT_
    5  LblCom even  none     1      1  DNT$
    6  LblCom even  none     5      5  DNT_
    7  LblCom even  none     1      1  DNT_BUCKET_NUMBER
    8  LblCom even  none     1      1  DNT_OF_1$
    9  LblCom even  none     1      1  ST$
   10  LblCom even  none     5      5  ST_
   11  LblCom even  none     3      3  SRCH
   12  LblCom even  none     1      1  QLT$
   13  LblCom even  none     1      1  PREV_01_QLT$
   14  LblCom even  none     5      5  QLT_
   15  LblCom even  none    90    132  LEX_SYMBOL
   16  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
   17  LblCom even  none    90    132  TEMP_LEX_SYMBOL
   18  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
   19  LblCom even  none     8     10  TEMP_LX_NODE
   20  LblCom even  none     1      1  HEAP$
   21  RoData even  UTS      2      2  Z8EU$CORRES
   22   Proc  even  none   329    511  Z8EU$CORRES
   23  RoData even  none     8     10  Z8EU$CORRES
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:52   

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    22      0   yes            yes      Std        3  Z8EU$CORRES

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std      12 Z8AE$ERROR
         yes           Std       2 Z8ED$NEW_HEAP
         yes           Std       1 Z8AS$SR_ETT
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:53   


      165        1        /*T***********************************************************/
      166        2        /*T*                                                         */
      167        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      168        4        /*T*                                                         */
      169        5        /*T***********************************************************/
      170        6        Z8EU$CORRES : PROC (REC_ST$,

      6 22 000000   000000 700200 xent  Z8EU$CORRES  TSX0  ! X66_AUTO_3
        22 000001   000026 000003                    ZERO    22,3
        22 000002   000371 710000 22                 TRA     s:11186

      171        7                            SEND_ST$,
      172        8                            CORRES_LIST$);
      173        9
      174       10    1     DCL REC_ST$ PTR;
      175       11    1     DCL SEND_ST$ PTR;
      176       12    1     DCL CORRES_LIST$ PTR;
      177       13
      178       14        %EQU PHASE = 1;
      179       15        %INCLUDE Z8A_DEFC;
      180       83        %INCLUDE Z8A_SUPP_MAC;
      181     2483        %INCLUDE Z8A_ERR_NUMS;
      182     3247        %INCLUDE Z8A_ETT;
      183     3548        %INCLUDE Z8A_DNT;
      184     3769        %INCLUDE Z8A_TYPES;
      185     3943        %INCLUDE Z8A_ST;
      186     7602        %INCLUDE Z8A_COMCOM;
      187     8252        %INCLUDE Z8A_SRCH;
      188     8301        %INCLUDE Z8A_QLT;
      189     8407        %INCLUDE Z8E_STACKS;
      190    10673        %INCLUDE Z8E_ABSSYN;
      191    10879        %INCLUDE Z8E_HEAP;
      192    10935
      193    10936    1   DCL Z8AE$ERROR ENTRY(12);
      194    10937    1   DCL Z8AS$SR_ETT ENTRY(1);
      195    10938
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:54   
      196    10939    1     DCL CORRES_CANDIDATE BOOLEAN;
      197    10940
      198    10941    1     DCL REC_QLT$ PTR;
      199    10942    1     DCL SEND_QLT$ PTR;
      200    10943        %EJECT;
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:55   
      201    10944    1   CHECK_CORRES_CANDIDATE : PROC (ST$,

  10944 22 000003   200012 741300       CHECK_CORRE* STX1  ! SEND_QLT$+2,,AUTO

      202    10945    1                                  IS_CANDIDATE);
      203    10946
      204    10947    2     DCL ST$ PTR;
      205    10948    2     DCL IS_CANDIDATE BIT(1) ALIGNED;
      206    10949
      207    10950    2   IS_CANDIDATE = TRUE;

  10950 22 000004   400000 236003                    LDQ     -131072,DU
        22 000005   200014 470500                    LDP0    @IS_CANDIDATE,,AUTO
        22 000006   000000 756100                    STQ     0,,PR0

      208    10951
      209    10952    2   IF ST$ -> SCALAR.QLT$ -> QLT.LEVEL_NO = 66

  10952 22 000007   200013 471500                    LDP1    @ST$,,AUTO
        22 000010   100000 473500                    LDP3    0,,PR1
        22 000011   300007 474500                    LDP4    7,,PR3
        22 000012   400000 236100                    LDQ     0,,PR4
        22 000013   000777 376007                    ANQ     511,DL
        22 000014   000102 116007                    CMPQ    66,DL
        22 000015   000046 600000 22                 TZE     s:10962
        22 000016   000115 116007                    CMPQ    77,DL
        22 000017   000046 600000 22                 TZE     s:10962
        22 000020   000130 116007                    CMPQ    88,DL
        22 000021   000046 600000 22                 TZE     s:10962
        22 000022   300003 430100                    FSZN    3,,PR3
        22 000023   000046 604000 22                 TMI     s:10962
        22 000024   400000 236100                    LDQ     0,,PR4
        22 000025   040000 316007                    CANQ    16384,DL
        22 000026   000046 601000 22                 TNZ     s:10962
        22 000027   400000 316007                    CANQ    -131072,DL
        22 000030   000046 601000 22                 TNZ     s:10962
        22 000031   300002 220100                    LDX0    2,,PR3
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:56   
        22 000032   000022 100003                    CMPX0   18,DU
        22 000033   000046 600000 22                 TZE     s:10962
        22 000034   000012 100003                    CMPX0   10,DU
        22 000035   000046 600000 22                 TZE     s:10962
        22 000036   000011 100003                    CMPX0   9,DU
        22 000037   000046 600000 22                 TZE     s:10962
        22 000040   300006 475500                    LDP5    6,,PR3
        22 000041   500004 221100                    LDX1    4,,PR5
        22 000042   040000 106540                    CMPC    fill='040'O
        22 000043   500004 400011                    ADSC9   4,,PR5                   cn=2,n=*X1
        22 000044   000000 000006 21                 ADSC9   0                        cn=0,n=6
        22 000045   000047 601000 22                 TNZ     s:10964

      210    10953    2       OR ST$ -> SCALAR.QLT$ -> QLT.LEVEL_NO = 77
      211    10954    2       OR ST$ -> SCALAR.QLT$ -> QLT.LEVEL_NO = 88
      212    10955    2       OR ST$ -> SCALAR.B.REDEF_SUB
      213    10956    2       OR ST$ -> SCALAR.QLT$ -> QLT.B.RENAMES
      214    10957    2       OR ST$ -> SCALAR.QLT$ -> QLT.B.OCCURS
      215    10958    2       OR ST$ -> SCALAR.TYPE = %TYP
      216    10959    2       OR ST$ -> SCALAR.TYPE = %TYY
      217    10960    2       OR ST$ -> SCALAR.TYPE = %TYX
      218    10961    2       OR ST$ -> SCALAR.DNT$ -> DNT.TEXT.NAME = 'FILLER' THEN
      219    10962    2     IS_CANDIDATE = FALSE;

  10962 22 000046   000000 450100                    STZ     0,,PR0

      220    10963
      221    10964    2   END CHECK_CORRES_CANDIDATE;

  10964 22 000047   200012 221300                    LDX1  ! SEND_QLT$+2,,AUTO
        22 000050   000001 702211                    TSX2  ! 1,X1

      222    10965
      223    10966        %EJECT;
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:57   
      224    10967    1   ADD_TO_CORRES_LIST : PROC (RST$,

  10967 22 000051   200012 741300       ADD_TO_CORR* STX1  ! SEND_QLT$+2,,AUTO

      225    10968    1                       SST$);
      226    10969
      227    10970    2     DCL RST$ PTR;
      228    10971    2     DCL SST$ PTR;
      229    10972
      230    10973    2     DCL CORRES_ITEM$ PTR;
      231    10974    2     DCL CORRES_ST$ PTR;
      232    10975    2     DCL R_LX_ETT_ITEM$ PTR;
      233    10976    2     DCL S_LX_ETT_ITEM$ PTR;
      234    10977
      235    10978    2   CORRES_ITEM$ = CORRES_LIST$ -> LX_LIST.HEAD$;

  10978 22 000052   200005 470500                    LDP0    @CORRES_LIST$,,AUTO
        22 000053   000000 471500                    LDP1    0,,PR0
        22 000054   100004 236100                    LDQ     4,,PR1
        22 000055   200015 756100                    STQ     CORRES_ITEM$,,AUTO

      236    10979
      237    10980    3   DO WHILE CORRES_ITEM$ ~= ADDR(NIL);

  10980 22 000056   000110 710000 22                 TRA     s:10997

      238    10981
      239    10982          %FISH (TRIAD = CORRES_ITEM$ -> LX_LIST.HEAD$ -> LX_ETT_ITEM.ETT$,
      240    10983                 RTN = CORRES_ST$);

  10985 22 000057   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000060   000004 471500                    LDP1    4,,PR0
        22 000061   100001 236100                    LDQ     1,,PR1
        22 000062   200016 756100                    STQ     CORRES_ST$,,AUTO

  10986 22 000063   200016 473500                    LDP3    CORRES_ST$,,AUTO
        22 000064   300000 220100                    LDX0    0,,PR3
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:58   
        22 000065   000751 100003                    CMPX0   489,DU
        22 000066   000076 603000 22                 TRC     s:10992

  10987 22 000067   200016 470500                    LDP0    CORRES_ST$,,AUTO
        22 000070   000001 236100                    LDQ     1,,PR0
        22 000071   200016 756100                    STQ     CORRES_ST$,,AUTO

  10988 22 000072   200016 470500                    LDP0    CORRES_ST$,,AUTO
        22 000073   000000 220100                    LDX0    0,,PR0
        22 000074   000751 100003                    CMPX0   489,DU
        22 000075   000067 602000 22                 TNC     s:10987

      241    10991
      242    10992    3     IF CORRES_ST$ = RST$ THEN

  10992 22 000076   200013 470500                    LDP0    @RST$,,AUTO
        22 000077   000000 116100                    CMPQ    0,,PR0
        22 000100   000105 601000 22                 TNZ     s:10995

      243    10993    3       CALL Z8AE$ERROR (%E$AMBIGUOUS_CORRES_REF);

  10993 22 000101   000002 630400 23                 EPPR0   2
        22 000102   000000 631400 23                 EPPR1   0
        22 000103   000000 701000 xent               TSX1    Z8AE$ERROR
        22 000104   000000 011000                    NOP     0

      244    10994
      245    10995    3     CORRES_ITEM$ = CORRES_ITEM$ -> LX_LIST.LINK;

  10995 22 000105   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000106   000007 236100                    LDQ     7,,PR0
        22 000107   200015 756100                    STQ     CORRES_ITEM$,,AUTO

      246    10996
      247    10997    3   END;  /* do while */

  10997 22 000110   000003 116000 23                 CMPQ    3
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:59   
        22 000111   000057 601000 22                 TNZ     s:10985

      248    10998
      249    10999        /* Add items to list */
      250    11000
      251    11001        %NEW (@TEMPLATE = LX_ETT_ITEM,
      252    11002              @POINTER = R_LX_ETT_ITEM$);

  11008 22 000112   000006 236000 23                 LDQ     6
        22 000113   200023 756100                    STQ     S_LX_ETT_ITEM$+3,,AUTO
        22 000114   200017 630500                    EPPR0   R_LX_ETT_ITEM$,,AUTO
        22 000115   200022 450500                    STP0    S_LX_ETT_ITEM$+2,,AUTO
        22 000116   200022 630500                    EPPR0   S_LX_ETT_ITEM$+2,,AUTO
        22 000117   000004 631400 23                 EPPR1   4
        22 000120   000000 701000 xent               TSX1    Z8ED$NEW_HEAP
        22 000121   000000 011000                    NOP     0

      253    11012
      254    11013        %INIT_LX_ETT_ITEM (@POINTER = R_LX_ETT_ITEM$,
      255    11014                           @TYPE = "RST$ -> SCALAR.TYPE");

  11016 22 000122   000004 220003                    LDX0    4,DU
        22 000123   200017 470500                    LDP0    R_LX_ETT_ITEM$,,AUTO
        22 000124   000000 740100                    STX0    0,,PR0

  11017 22 000125   000000 221003                    LDX1    0,DU
        22 000126   200017 470500                    LDP0    R_LX_ETT_ITEM$,,AUTO
        22 000127   000000 441100                    SXL1    0,,PR0

  11018 22 000130   200013 470500                    LDP0    @RST$,,AUTO
        22 000131   000000 471500                    LDP1    0,,PR0
        22 000132   100002 236100                    LDQ     2,,PR1
        22 000133   000022 772000                    QRL     18
        22 000134   200017 473500                    LDP3    R_LX_ETT_ITEM$,,AUTO
        22 000135   300004 756100                    STQ     4,,PR3

  11019 22 000136   000003 236000 23                 LDQ     3
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:60   
        22 000137   200017 471500                    LDP1    R_LX_ETT_ITEM$,,AUTO
        22 000140   100007 756100                    STQ     7,,PR1

  11020 22 000141   200017 471500                    LDP1    R_LX_ETT_ITEM$,,AUTO
        22 000142   100001 756100                    STQ     1,,PR1

  11021 22 000143   000003 236000 23                 LDQ     3
        22 000144   200017 471500                    LDP1    R_LX_ETT_ITEM$,,AUTO
        22 000145   100002 756100                    STQ     2,,PR1

  11023 22 000146   000133 235000 xsym               LDA     COMCOM+91
        22 000147   200017 471500                    LDP1    R_LX_ETT_ITEM$,,AUTO
        22 000150   100005 755100                    STA     5,,PR1

  11024 22 000151   000134 235000 xsym               LDA     COMCOM+92
        22 000152   200017 471500                    LDP1    R_LX_ETT_ITEM$,,AUTO
        22 000153   100006 755100                    STA     6,,PR1

      256    11036
      257    11037        %SRCH_ETT (@ID = %BASE,
      258    11038                   @LOP = RST$,
      259    11039                   @ROP = "ADDR(NIL)",
      260    11040                   @ETT$ = "R_LX_ETT_ITEM$ -> LX_ETT_ITEM.ETT$");

  11042 22 000154   000001 235007                    LDA     1,DL
        22 000155   000000 755000 11                 STA     SRCH

  11043 22 000156   000000 236100                    LDQ     0,,PR0
        22 000157   000001 756000 11                 STQ     SRCH+1

  11045 22 000160   000003 236000 23                 LDQ     3
        22 000161   000002 756000 11                 STQ     SRCH+2

  11052 22 000162   200017 236100                    LDQ     R_LX_ETT_ITEM$,,AUTO
        22 000163   000001 036003                    ADLQ    1,DU
        22 000164   200022 756100                    STQ     S_LX_ETT_ITEM$+2,,AUTO
        22 000165   200022 630500                    EPPR0   S_LX_ETT_ITEM$+2,,AUTO
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:61   
        22 000166   000000 631400 23                 EPPR1   0
        22 000167   000000 701000 xent               TSX1    Z8AS$SR_ETT
        22 000170   000000 011000                    NOP     0

      261    11055
      262    11056        %NEW (@TEMPLATE = LX_ETT_ITEM,
      263    11057              @POINTER = S_LX_ETT_ITEM$);

  11063 22 000171   000006 236000 23                 LDQ     6
        22 000172   200023 756100                    STQ     S_LX_ETT_ITEM$+3,,AUTO
        22 000173   200020 630500                    EPPR0   S_LX_ETT_ITEM$,,AUTO
        22 000174   200022 450500                    STP0    S_LX_ETT_ITEM$+2,,AUTO
        22 000175   200022 630500                    EPPR0   S_LX_ETT_ITEM$+2,,AUTO
        22 000176   000004 631400 23                 EPPR1   4
        22 000177   000000 701000 xent               TSX1    Z8ED$NEW_HEAP
        22 000200   000000 011000                    NOP     0

      264    11067
      265    11068        %INIT_LX_ETT_ITEM (@POINTER = S_LX_ETT_ITEM$,
      266    11069                           @TYPE = "SST$ -> SCALAR.TYPE");

  11071 22 000201   000004 220003                    LDX0    4,DU
        22 000202   200020 470500                    LDP0    S_LX_ETT_ITEM$,,AUTO
        22 000203   000000 740100                    STX0    0,,PR0

  11072 22 000204   000000 221003                    LDX1    0,DU
        22 000205   200020 470500                    LDP0    S_LX_ETT_ITEM$,,AUTO
        22 000206   000000 441100                    SXL1    0,,PR0

  11073 22 000207   200014 470500                    LDP0    @SST$,,AUTO
        22 000210   000000 471500                    LDP1    0,,PR0
        22 000211   100002 236100                    LDQ     2,,PR1
        22 000212   000022 772000                    QRL     18
        22 000213   200020 473500                    LDP3    S_LX_ETT_ITEM$,,AUTO
        22 000214   300004 756100                    STQ     4,,PR3

  11074 22 000215   000003 236000 23                 LDQ     3
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:62   
        22 000216   200020 471500                    LDP1    S_LX_ETT_ITEM$,,AUTO
        22 000217   100007 756100                    STQ     7,,PR1

  11075 22 000220   200020 471500                    LDP1    S_LX_ETT_ITEM$,,AUTO
        22 000221   100001 756100                    STQ     1,,PR1

  11076 22 000222   000003 236000 23                 LDQ     3
        22 000223   200020 471500                    LDP1    S_LX_ETT_ITEM$,,AUTO
        22 000224   100002 756100                    STQ     2,,PR1

  11078 22 000225   000133 235000 xsym               LDA     COMCOM+91
        22 000226   200020 471500                    LDP1    S_LX_ETT_ITEM$,,AUTO
        22 000227   100005 755100                    STA     5,,PR1

  11079 22 000230   000134 235000 xsym               LDA     COMCOM+92
        22 000231   200020 471500                    LDP1    S_LX_ETT_ITEM$,,AUTO
        22 000232   100006 755100                    STA     6,,PR1

      267    11091
      268    11092        %SRCH_ETT (@ID = %BASE,
      269    11093                   @LOP = SST$,
      270    11094                   @ROP = "ADDR(NIL)",
      271    11095                   @ETT$ = "S_LX_ETT_ITEM$ -> LX_ETT_ITEM.ETT$");

  11097 22 000233   000001 235007                    LDA     1,DL
        22 000234   000000 755000 11                 STA     SRCH

  11098 22 000235   000000 236100                    LDQ     0,,PR0
        22 000236   000001 756000 11                 STQ     SRCH+1

  11100 22 000237   000003 236000 23                 LDQ     3
        22 000240   000002 756000 11                 STQ     SRCH+2

  11107 22 000241   200020 236100                    LDQ     S_LX_ETT_ITEM$,,AUTO
        22 000242   000001 036003                    ADLQ    1,DU
        22 000243   200022 756100                    STQ     S_LX_ETT_ITEM$+2,,AUTO
        22 000244   200022 630500                    EPPR0   S_LX_ETT_ITEM$+2,,AUTO
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:63   
        22 000245   000000 631400 23                 EPPR1   0
        22 000246   000000 701000 xent               TSX1    Z8AS$SR_ETT
        22 000247   000000 011000                    NOP     0

      272    11110
      273    11111        %NEW (@TEMPLATE = LX_LIST,
      274    11112              @POINTER = CORRES_ITEM$);

  11118 22 000250   000006 236000 23                 LDQ     6
        22 000251   200023 756100                    STQ     S_LX_ETT_ITEM$+3,,AUTO
        22 000252   200015 630500                    EPPR0   CORRES_ITEM$,,AUTO
        22 000253   200022 450500                    STP0    S_LX_ETT_ITEM$+2,,AUTO
        22 000254   200022 630500                    EPPR0   S_LX_ETT_ITEM$+2,,AUTO
        22 000255   000004 631400 23                 EPPR1   4
        22 000256   000000 701000 xent               TSX1    Z8ED$NEW_HEAP
        22 000257   000000 011000                    NOP     0

      275    11122
      276    11123        %INIT_LX_LIST (@POINTER = CORRES_ITEM$);

  11125 22 000260   000002 220003                    LDX0    2,DU
        22 000261   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000262   000000 740100                    STX0    0,,PR0

  11126 22 000263   000000 221003                    LDX1    0,DU
        22 000264   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000265   000000 441100                    SXL1    0,,PR0

  11127 22 000266   000003 236000 23                 LDQ     3
        22 000267   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000270   000001 756100                    STQ     1,,PR0

  11128 22 000271   000003 236000 23                 LDQ     3
        22 000272   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000273   000004 756100                    STQ     4,,PR0

  11129 22 000274   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:64   
        22 000275   000007 756100                    STQ     7,,PR0

  11130 22 000276   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000277   000002 450100                    STZ     2,,PR0

      277    11133
      278    11134        %ADD_LX_ITEM_TO_LIST_HEAD (@FROM$ = R_LX_ETT_ITEM$,
      279    11135                                   @LIST$ = CORRES_ITEM$);

  11137 22 000300   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000301   000004 236100                    LDQ     4,,PR0
        22 000302   200017 471500                    LDP1    R_LX_ETT_ITEM$,,AUTO
        22 000303   100007 756100                    STQ     7,,PR1

  11138 22 000304   200017 236100                    LDQ     R_LX_ETT_ITEM$,,AUTO
        22 000305   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000306   000004 756100                    STQ     4,,PR0

  11139 22 000307   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000310   000002 235100                    LDA     2,,PR0
        22 000311   000314 601000 22                 TNZ     s:11141

  11140 22 000312   200017 236100                    LDQ     R_LX_ETT_ITEM$,,AUTO
        22 000313   000001 756100                    STQ     1,,PR0

  11141 22 000314   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000315   000002 054100                    AOS     2,,PR0

      280    11144
      281    11145        %ADD_LX_ITEM_TO_LIST_TAIL (@FROM$ = S_LX_ETT_ITEM$,
      282    11146                                   @LIST$ = CORRES_ITEM$);

  11148 22 000316   000003 236000 23                 LDQ     3
        22 000317   200020 470500                    LDP0    S_LX_ETT_ITEM$,,AUTO
        22 000320   000007 756100                    STQ     7,,PR0

  11149 22 000321   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:65   
        22 000322   000002 235100                    LDA     2,,PR0
        22 000323   000332 601000 22                 TNZ     s:11156

  11151 22 000324   200020 236100                    LDQ     S_LX_ETT_ITEM$,,AUTO
        22 000325   000004 756100                    STQ     4,,PR0

  11152 22 000326   200020 236100                    LDQ     S_LX_ETT_ITEM$,,AUTO
        22 000327   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000330   000001 756100                    STQ     1,,PR0

  11153 22 000331   000340 710000 22                 TRA     s:11159

  11156 22 000332   000001 471500                    LDP1    1,,PR0
        22 000333   200020 236100                    LDQ     S_LX_ETT_ITEM$,,AUTO
        22 000334   100007 756100                    STQ     7,,PR1

  11157 22 000335   200020 236100                    LDQ     S_LX_ETT_ITEM$,,AUTO
        22 000336   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000337   000001 756100                    STQ     1,,PR0

  11159 22 000340   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000341   000002 054100                    AOS     2,,PR0

      283    11162
      284    11163        %ADD_LX_ITEM_TO_LIST_TAIL (@FROM$ = CORRES_ITEM$,
      285    11164                                   @LIST$ = CORRES_LIST$);

  11166 22 000342   000003 236000 23                 LDQ     3
        22 000343   200015 470500                    LDP0    CORRES_ITEM$,,AUTO
        22 000344   000007 756100                    STQ     7,,PR0

  11167 22 000345   200005 470500                    LDP0    @CORRES_LIST$,,AUTO
        22 000346   000000 471500                    LDP1    0,,PR0
        22 000347   100002 235100                    LDA     2,,PR1
        22 000350   000357 601000 22                 TNZ     s:11174

  11169 22 000351   200015 236100                    LDQ     CORRES_ITEM$,,AUTO
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:66   
        22 000352   100004 756100                    STQ     4,,PR1

  11170 22 000353   000000 471500                    LDP1    0,,PR0
        22 000354   200015 236100                    LDQ     CORRES_ITEM$,,AUTO
        22 000355   100001 756100                    STQ     1,,PR1

  11171 22 000356   000365 710000 22                 TRA     s:11177

  11174 22 000357   100001 473500                    LDP3    1,,PR1
        22 000360   200015 236100                    LDQ     CORRES_ITEM$,,AUTO
        22 000361   300007 756100                    STQ     7,,PR3

  11175 22 000362   000000 471500                    LDP1    0,,PR0
        22 000363   200015 236100                    LDQ     CORRES_ITEM$,,AUTO
        22 000364   100001 756100                    STQ     1,,PR1

  11177 22 000365   000000 471500                    LDP1    0,,PR0
        22 000366   100002 054100                    AOS     2,,PR1

      286    11180
      287    11181    2   END ADD_TO_CORRES_LIST;

  11181 22 000367   200012 221300                    LDX1  ! SEND_QLT$+2,,AUTO
        22 000370   000001 702211                    TSX2  ! 1,X1

      288    11182
      289    11183        %EJECT;
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:67   
      290    11184         /* Main body of Z8EU$CORRES */
      291    11185
      292    11186    1   REC_QLT$ = REC_ST$ -> SCALAR.QLT$ -> QLT.SON;

  11186 22 000371   200003 470500                    LDP0    @REC_ST$,,AUTO
        22 000372   000000 471500                    LDP1    0,,PR0
        22 000373   100007 473500                    LDP3    7,,PR1
        22 000374   300003 236100                    LDQ     3,,PR3
        22 000375   200007 756100                    STQ     REC_QLT$,,AUTO

      293    11187
      294    11188    2   DO WHILE REC_QLT$ ~= ADDR(NIL);

  11188 22 000376   000506 710000 22                 TRA     s:11220

      295    11189
      296    11190    2     CALL CHECK_CORRES_CANDIDATE (REC_QLT$ -> QLT.ST$,

  11190 22 000377   200006 630500                    EPPR0   CORRES_CANDIDATE,,AUTO
        22 000400   200014 450500                    STP0    @RST$+1,,AUTO
        22 000401   200007 236100                    LDQ     REC_QLT$,,AUTO
        22 000402   000004 036003                    ADLQ    4,DU
        22 000403   200013 756100                    STQ     SEND_QLT$+3,,AUTO
        22 000404   000003 701000 22                 TSX1    CHECK_CORRES_CANDIDATE
        22 000405   000000 011000                    NOP     0

      297    11191    2                                  CORRES_CANDIDATE);
      298    11192
      299    11193    2     IF CORRES_CANDIDATE THEN

  11193 22 000406   200006 234100                    SZN     CORRES_CANDIDATE,,AUTO
        22 000407   000503 605000 22                 TPL     s:11218

      300    11194    3       DO;

      301    11195    3         SEND_QLT$ = SEND_ST$ -> SCALAR.QLT$ -> QLT.SON;

PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:68   
  11195 22 000410   200004 470500                    LDP0    @SEND_ST$,,AUTO
        22 000411   000000 471500                    LDP1    0,,PR0
        22 000412   100007 473500                    LDP3    7,,PR1
        22 000413   300003 236100                    LDQ     3,,PR3
        22 000414   200010 756100                    STQ     SEND_QLT$,,AUTO

      302    11196
      303    11197    4         DO WHILE SEND_QLT$ ~= ADDR(NIL);

  11197 22 000415   000501 710000 22                 TRA     s:11216

      304    11198
      305    11199    4           CALL CHECK_CORRES_CANDIDATE (SEND_QLT$ -> QLT.ST$,

  11199 22 000416   200006 630500                    EPPR0   CORRES_CANDIDATE,,AUTO
        22 000417   200014 450500                    STP0    @RST$+1,,AUTO
        22 000420   200010 236100                    LDQ     SEND_QLT$,,AUTO
        22 000421   000004 036003                    ADLQ    4,DU
        22 000422   200013 756100                    STQ     SEND_QLT$+3,,AUTO
        22 000423   000003 701000 22                 TSX1    CHECK_CORRES_CANDIDATE
        22 000424   000000 011000                    NOP     0

      306    11200    4                                        CORRES_CANDIDATE);
      307    11201
      308    11202    4           IF CORRES_CANDIDATE

  11202 22 000425   200006 234100                    SZN     CORRES_CANDIDATE,,AUTO
        22 000426   000476 605000 22                 TPL     s:11215
        22 000427   200007 470500                    LDP0    REC_QLT$,,AUTO
        22 000430   000004 471500                    LDP1    4,,PR0
        22 000431   100006 473500                    LDP3    6,,PR1
        22 000432   300004 220100                    LDX0    4,,PR3
        22 000433   200010 474500                    LDP4    SEND_QLT$,,AUTO
        22 000434   400004 475500                    LDP5    4,,PR4
        22 000435   500006 476500                    LDP6    6,,PR5
        22 000436   600004 221100                    LDX1    4,,PR6
        22 000437   040140 106540                    CMPC    fill='040'O
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:69   
        22 000440   300004 400010                    ADSC9   4,,PR3                   cn=2,n=*X0
        22 000441   600004 400011                    ADSC9   4,,PR6                   cn=2,n=*X1
        22 000442   000476 601000 22                 TNZ     s:11215

      309    11203    4                AND REC_QLT$ -> QLT.ST$ -> SCALAR.DNT$ -> DNT.TEXT.NAME
      310    11204    4                       = SEND_QLT$ -> QLT.ST$ -> SCALAR.DNT$ -> DNT.TEXT.NAME THEN
      311    11205    5             DO;

      312    11206    5               IF REC_QLT$ -> QLT.ST$ -> SCALAR.B.ELEMENTARY

  11206 22 000443   100003 236100                    LDQ     3,,PR1
        22 000444   010000 316003                    CANQ    4096,DU
        22 000445   000451 601000 22                 TNZ     s:11208
        22 000446   500003 236100                    LDQ     3,,PR5
        22 000447   010000 316003                    CANQ    4096,DU
        22 000450   000462 600000 22                 TZE     s:11211

      313    11207    5                    OR SEND_QLT$ -> QLT.ST$ -> SCALAR.B.ELEMENTARY THEN
      314    11208    5                 CALL ADD_TO_CORRES_LIST ( REC_QLT$ -> QLT.ST$,

  11208 22 000451   200010 236100                    LDQ     SEND_QLT$,,AUTO
        22 000452   000004 036003                    ADLQ    4,DU
        22 000453   200014 756100                    STQ     @RST$+1,,AUTO
        22 000454   200007 236100                    LDQ     REC_QLT$,,AUTO
        22 000455   000004 036003                    ADLQ    4,DU
        22 000456   200013 756100                    STQ     SEND_QLT$+3,,AUTO
        22 000457   000051 701000 22                 TSX1    ADD_TO_CORRES_LIST
        22 000460   000000 011000                    NOP     0
        22 000461   000476 710000 22                 TRA     s:11215

      315    11209    5                                           SEND_QLT$ -> QLT.ST$);
      316    11210    5               ELSE
      317    11211    5                 CALL Z8EU$CORRES (REC_QLT$ -> QLT.ST$,

  11211 22 000462   200005 236100                    LDQ     @CORRES_LIST$,,AUTO
        22 000463   200024 756100                    STQ     S_LX_ETT_ITEM$+4,,AUTO
        22 000464   200010 236100                    LDQ     SEND_QLT$,,AUTO
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:70   
        22 000465   000004 036003                    ADLQ    4,DU
        22 000466   200023 756100                    STQ     S_LX_ETT_ITEM$+3,,AUTO
        22 000467   200007 236100                    LDQ     REC_QLT$,,AUTO
        22 000470   000004 036003                    ADLQ    4,DU
        22 000471   200022 756100                    STQ     S_LX_ETT_ITEM$+2,,AUTO
        22 000472   200022 630500                    EPPR0   S_LX_ETT_ITEM$+2,,AUTO
        22 000473   000007 631400 23                 EPPR1   7
        22 000474   000000 701000 22                 TSX1    s:6
        22 000475   000000 011000                    NOP     0

      318    11212    5                                   SEND_QLT$ -> QLT.ST$,
      319    11213    5                                   CORRES_LIST$);
      320    11214    5             END;

      321    11215    4          SEND_QLT$ = SEND_QLT$ -> QLT.BROTHER;

  11215 22 000476   200010 470500                    LDP0    SEND_QLT$,,AUTO
        22 000477   000002 236100                    LDQ     2,,PR0
        22 000500   200010 756100                    STQ     SEND_QLT$,,AUTO

      322    11216    4        END; /* do while SEND_QLT$ */

  11216 22 000501   000003 116000 23                 CMPQ    3
        22 000502   000416 601000 22                 TNZ     s:11199

      323    11217    3      END;

      324    11218    2     REC_QLT$ = REC_QLT$ -> QLT.BROTHER;

  11218 22 000503   200007 470500                    LDP0    REC_QLT$,,AUTO
        22 000504   000002 236100                    LDQ     2,,PR0
        22 000505   200007 756100                    STQ     REC_QLT$,,AUTO

      325    11219
      326    11220    2   END;  /* DO WHILE */

  11220 22 000506   000003 116000 23                 CMPQ    3
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:71   
        22 000507   000377 601000 22                 TNZ     s:11190

      327    11221
      328    11222    1   END Z8EU$CORRES;

  11222 22 000510   000000 702200 xent               TSX2  ! X66_ARET
      329    11223        %EOD;

PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:72   
--  Include file information  --

   Z8E_HEAP.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_ABSSYN.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_SRCH.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$CORRES.
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:73   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ETT$

  ****  Section 002 LblCom HEAD_ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAD_ETT$

  ****  Section 003 LblCom ETT_BUCKETS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ETT_BUCKETS(0:511)

  ****  Section 004 LblCom ETT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ETT_

PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:74   
  ****  Section 005 LblCom DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DNT$

  ****  Section 006 LblCom DNT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 DNT_

  ****  Section 007 LblCom DNT_BUCKET_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 DNT_BUCKET_NUMBER

  ****  Section 008 LblCom DNT_OF_1$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 DNT_OF_1$

  ****  Section 009 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 010 LblCom ST_

PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:75   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 011 LblCom SRCH

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)   r     1 SRCH

  ****  Section 012 LblCom QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 QLT$

  ****  Section 013 LblCom PREV_01_QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 PREV_01_QLT$

  ****  Section 014 LblCom QLT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 QLT_

  ****  Section 015 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:76   

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 016 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 017 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 018 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Section 019 LblCom TEMP_LX_NODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(288)         1 TEMP_LX_NODE

  ****  Section 020 LblCom HEAP$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAP$
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:77   

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @CORRES_LIST$             14-0-0/w PTR         r     1 @IS_CANDIDATE
     3-0-0/w PTR         r     1 @REC_ST$                  13-0-0/w PTR         r     1 @RST$
     4-0-0/w PTR         r     1 @SEND_ST$                 14-0-0/w PTR         r     1 @SST$
    13-0-0/w PTR         r     1 @ST$                       6-0-0/b BIT         r     1 CORRES_CANDIDATE
    15-0-0/w PTR         r     1 CORRES_ITEM$              *0-0-0/w PTR         r     1 CORRES_LIST$
    16-0-0/w PTR         r     1 CORRES_ST$                *0-0-0/w BIT         r     1 IS_CANDIDATE
     7-0-0/w PTR         r     1 REC_QLT$                  *0-0-0/w PTR         r     1 REC_ST$
    *0-0-0/w PTR         r     1 RST$                      17-0-0/w PTR         r     1 R_LX_ETT_ITEM$
    10-0-0/w PTR         r     1 SEND_QLT$                 *0-0-0/w PTR         r     1 SEND_ST$
    *0-0-0/w PTR         r     1 SST$                      *0-0-0/w PTR         r     1 ST$
    20-0-0/w PTR         r     1 S_LX_ETT_ITEM$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(396)         1 ARRAY                      0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BINARY_OP                  0-0-0/w STRC(396)         1 BLOCK
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(396)         1 CLASS
     0-0-0/w STRC(288)         1 COMPUTE_STMT               0-0-0/w STRC(396)         1 CONDITION
PL6.E3A0      #004=Z8EU$CORRES File=Z8EU.:Z8A6TSI                                SAT 08/09/97 12:53 Page:78   
     0-0-0/w STRC(396)         1 CONST                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(396)         1 DB                         0-0-0/w STRC(396)         1 DCB_
     0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER         0-0-0/w STRC(252)         1 DEFERED_ID_TREE
     0-0-0/w STRC(288)         1 DEFERED_QUAL_ID            0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w ASTR(180)   r     1 DNT
     0-0-0/w STRC(180)   r     1 ETT                        0-0-0/w STRC(396)         1 FD
     0-0-0/w STRC(288)         1 ILS_LIST                   0-0-0/w STRC(288)         1 INSPECT_1_STMT
     0-0-0/w STRC(288)         1 INSPECT_2_STMT             0-0-0/w STRC(288)         1 INSPECT_4_STMT
     0-0-0/w STRC(396)         1 INTDEF                     0-0-0/w STRC(396)         1 LABEL
     0-0-0/w STRC(288)         1 LA_ITEM                    0-0-0/w STRC(504)         1 LX_CD_INPUT
     0-0-0/w STRC(324)         1 LX_CD_I_O                  0-0-0/w STRC(396)         1 LX_CD_OUTPUT
     0-0-0/w STRC(288)   r     1 LX_ETT_ITEM                0-0-0/w STRC(288)   r     1 LX_ITEM
     0-0-0/w STRC(288)         1 LX_LARGE                   0-0-0/w STRC(288)   r     1 LX_LIST
     0-0-0/w STRC(1224)        1 LX_REC_DECL                0-0-0/w STRC(864)         1 LX_REPORT_REC
     0-0-0/w STRC(288)         1 LX_TERMINAL                0-0-0/w STRC(396)         1 MNEMONIC
     0-0-0/w STRC(288)         1 MULTIPLY_STMT              0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(396)         1 PARA                       0-0-0/w STRC(396)         1 PROC_
     0-0-0/w STRC(396)         1 PROC_DEF                   0-0-0/w STRC(216)   r     1 QLT
     0-0-0/w STRC(396)         1 RD                         0-0-0/w STRC(288)         1 READ_STMT
     0-0-0/w STRC(288)         1 REWRITE_STMT               0-0-0/w STRC(396)   r     1 SCALAR
     0-0-0/w STRC(396)         1 SD                         0-0-0/w STRC(396)         1 SECTION
     0-0-0/w STRC(396)         1 SEGMENT                    0-0-0/w STRC(396)         1 ST
     0-0-0/w STRC(288)         1 START_STMT                 0-0-0/w STRC(252)         1 STRING_STMT
     0-0-0/w STRC(288)         1 SUBTRACT_STMT              0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/w STRC(288)         1 UNARY_OP                   0-0-0/w STRC(288)         1 UNSTRING_STMT
     0-0-0/w STRC(396)         1 VARIABLE                   0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8EU$CORRES requires 329 words for executable code.
   Procedure Z8EU$CORRES requires 22 words of local(AUTO) storage.

PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:79   
      330        1        /*T***********************************************************/
      331        2        /*T*                                                         */
      332        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      333        4        /*T*                                                         */
      334        5        /*T***********************************************************/
      335        6        Z8EU$DELETE_LIST_ITEM : PROC ( LIST$,
      336        7                                ITEM$);
      337        8
      338        9    1     DCL LIST$ PTR;
      339       10    1     DCL ITEM$ PTR;
      340       11
      341       12        %EQU PHASE = 1;
      342       13        %INCLUDE Z8A_DEFC;
      343       81        %INCLUDE Z8A_SUPP_MAC;
      344     2481        %INCLUDE Z8E_STACKS;
      345     4747
      346     4748    1   DCL PREV_ITEM$ PTR;
      347     4749
      348     4750
      349     4751    1   IF LIST$ -> LX_LIST.COUNT > 0 THEN
      350     4752    2     DO;
      351     4753    2       IF LIST$ -> LX_LIST.HEAD$ = ITEM$ THEN
      352     4754    3         DO;
      353     4755    3           LIST$ -> LX_LIST.COUNT = LIST$ -> LX_LIST.COUNT - 1;
      354     4756    3           IF LIST$ -> LX_LIST.COUNT = 0 THEN
      355     4757    3             LIST$ -> LX_LIST.TAIL$ = ADDR(NIL);
      356     4758    3           LIST$ -> LX_LIST.HEAD$ = ITEM$ -> LX_ITEM.LINK;
      357     4759    3           ITEM$ -> LX_ITEM.LINK = ADDR(NIL);
      358     4760    3         END;
      359     4761    2       ELSE
      360     4762    3         DO;
      361     4763    3           PREV_ITEM$ = LIST$ -> LX_LIST.HEAD$;
      362     4764    3          LOOK_FOR_ITEM:
      363     4765    4           DO UNTIL PREV_ITEM$ = ADDR(NIL);
      364     4766
      365     4767    4             IF PREV_ITEM$ -> LX_ITEM.LINK = ITEM$ THEN
      366     4768    5               DO;
PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:80   
      367     4769    5                 PREV_ITEM$ -> LX_ITEM.LINK = ITEM$ -> LX_ITEM.LINK;
      368     4770    5                 LIST$ -> LX_LIST.COUNT = LIST$ -> LX_LIST.COUNT - 1;
      369     4771    5                 IF LIST$ -> LX_LIST.TAIL$ = ITEM$ THEN
      370     4772    5                   LIST$ -> LX_LIST.TAIL$ = PREV_ITEM$;
      371     4773    5                 ITEM$ -> LX_ITEM.LINK = ADDR(NIL);
      372     4774    5                 EXIT LOOK_FOR_ITEM;
      373     4775    5               END;
      374     4776    4             ELSE
      375     4777    4               PREV_ITEM$ = PREV_ITEM$ -> LX_ITEM.LINK;
      376     4778    4            END;
      377     4779    3          END;
      378     4780    2     END;
      379     4781
      380     4782    1   END Z8EU$DELETE_LIST_ITEM;
      381     4783        %EOD;

PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:81   
--  Include file information  --

   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$DELETE_LIST_ITEM.

   Procedure Z8EU$DELETE_LIST_ITEM requires 52 words for executable code.
   Procedure Z8EU$DELETE_LIST_ITEM requires 6 words of local(AUTO) storage.

PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:82   

 Object Unit name= Z8EU$DELETE_LIST_ITEM                      File name= Z8EU.:Z8A6TOU
 UTS= AUG 09 '97 12:54:53.40 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none    90    132  LEX_SYMBOL
    2  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
    3  LblCom even  none    90    132  TEMP_LEX_SYMBOL
    4  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
    5   Proc  even  none    52     64  Z8EU$DELETE_LIST_ITEM
    6  RoData even  none     1      1  Z8EU$DELETE_LIST_ITEM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        2  Z8EU$DELETE_LIST_ITEM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:83   


      330        1        /*T***********************************************************/
      331        2        /*T*                                                         */
      332        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      333        4        /*T*                                                         */
      334        5        /*T***********************************************************/
      335        6        Z8EU$DELETE_LIST_ITEM : PROC ( LIST$,

      6  5 000000   000000 700200 xent  Z8EU$DELETE* TSX0  ! X66_AUTO_2
         5 000001   000006 000002                    ZERO    6,2

      336        7                                ITEM$);
      337        8
      338        9    1     DCL LIST$ PTR;
      339       10    1     DCL ITEM$ PTR;
      340       11
      341       12        %EQU PHASE = 1;
      342       13        %INCLUDE Z8A_DEFC;
      343       81        %INCLUDE Z8A_SUPP_MAC;
      344     2481        %INCLUDE Z8E_STACKS;
      345     4747
      346     4748    1   DCL PREV_ITEM$ PTR;
      347     4749
      348     4750
      349     4751    1   IF LIST$ -> LX_LIST.COUNT > 0 THEN

   4751  5 000002   200003 470500                    LDP0    @LIST$,,AUTO
         5 000003   000000 471500                    LDP1    0,,PR0
         5 000004   100002 235100                    LDA     2,,PR1
         5 000005   000063 604400 5                  TMOZ    s:4782

      350     4752    2     DO;

      351     4753    2       IF LIST$ -> LX_LIST.HEAD$ = ITEM$ THEN

   4753  5 000006   200004 473500                    LDP3    @ITEM$,,AUTO
         5 000007   100004 236100                    LDQ     4,,PR1
PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:84   
         5 000010   300000 116100                    CMPQ    0,,PR3
         5 000011   000031 601000 5                  TNZ     s:4763

      352     4754    3         DO;

      353     4755    3           LIST$ -> LX_LIST.COUNT = LIST$ -> LX_LIST.COUNT - 1;

   4755  5 000012   000001 336007                    LCQ     1,DL
         5 000013   100002 056100                    ASQ     2,,PR1

      354     4756    3           IF LIST$ -> LX_LIST.COUNT = 0 THEN

   4756  5 000014   000000 471500                    LDP1    0,,PR0
         5 000015   100002 235100                    LDA     2,,PR1
         5 000016   000021 601000 5                  TNZ     s:4758

      355     4757    3             LIST$ -> LX_LIST.TAIL$ = ADDR(NIL);

   4757  5 000017   000000 236000 6                  LDQ     0
         5 000020   100001 756100                    STQ     1,,PR1

      356     4758    3           LIST$ -> LX_LIST.HEAD$ = ITEM$ -> LX_ITEM.LINK;

   4758  5 000021   000000 471500                    LDP1    0,,PR0
         5 000022   300000 474500                    LDP4    0,,PR3
         5 000023   400007 236100                    LDQ     7,,PR4
         5 000024   100004 756100                    STQ     4,,PR1

      357     4759    3           ITEM$ -> LX_ITEM.LINK = ADDR(NIL);

   4759  5 000025   300000 471500                    LDP1    0,,PR3
         5 000026   000000 236000 6                  LDQ     0
         5 000027   100007 756100                    STQ     7,,PR1

      358     4760    3         END;

   4760  5 000030   000063 710000 5                  TRA     s:4782
PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:85   

      359     4761    2       ELSE
      360     4762    3         DO;

      361     4763    3           PREV_ITEM$ = LIST$ -> LX_LIST.HEAD$;

   4763  5 000031   200005 756100                    STQ     PREV_ITEM$,,AUTO

      362     4764    3          LOOK_FOR_ITEM:
      363     4765    4           DO UNTIL PREV_ITEM$ = ADDR(NIL);

   4765  5 000032                       LOOK_FOR_IT* null
      364     4766
      365     4767    4             IF PREV_ITEM$ -> LX_ITEM.LINK = ITEM$ THEN

   4767  5 000032   200005 470500                    LDP0    PREV_ITEM$,,AUTO
         5 000033   200004 471500                    LDP1    @ITEM$,,AUTO
         5 000034   000007 236100                    LDQ     7,,PR0
         5 000035   100000 116100                    CMPQ    0,,PR1
         5 000036   000060 601000 5                  TNZ     s:4777

      366     4768    5               DO;

      367     4769    5                 PREV_ITEM$ -> LX_ITEM.LINK = ITEM$ -> LX_ITEM.LINK;

   4769  5 000037   100000 473500                    LDP3    0,,PR1
         5 000040   300007 236100                    LDQ     7,,PR3
         5 000041   000007 756100                    STQ     7,,PR0

      368     4770    5                 LIST$ -> LX_LIST.COUNT = LIST$ -> LX_LIST.COUNT - 1;

   4770  5 000042   200003 473500                    LDP3    @LIST$,,AUTO
         5 000043   300000 474500                    LDP4    0,,PR3
         5 000044   000001 336007                    LCQ     1,DL
         5 000045   400002 056100                    ASQ     2,,PR4

      369     4771    5                 IF LIST$ -> LX_LIST.TAIL$ = ITEM$ THEN
PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:86   

   4771  5 000046   300000 474500                    LDP4    0,,PR3
         5 000047   400001 236100                    LDQ     1,,PR4
         5 000050   100000 116100                    CMPQ    0,,PR1
         5 000051   000054 601000 5                  TNZ     s:4773

      370     4772    5                   LIST$ -> LX_LIST.TAIL$ = PREV_ITEM$;

   4772  5 000052   200005 236100                    LDQ     PREV_ITEM$,,AUTO
         5 000053   400001 756100                    STQ     1,,PR4

      371     4773    5                 ITEM$ -> LX_ITEM.LINK = ADDR(NIL);

   4773  5 000054   100000 474500                    LDP4    0,,PR1
         5 000055   000000 236000 6                  LDQ     0
         5 000056   400007 756100                    STQ     7,,PR4

      372     4774    5                 EXIT LOOK_FOR_ITEM;

   4774  5 000057   000063 710000 5                  TRA     s:4782

      373     4775    5               END;
      374     4776    4             ELSE
      375     4777    4               PREV_ITEM$ = PREV_ITEM$ -> LX_ITEM.LINK;

   4777  5 000060   200005 756100                    STQ     PREV_ITEM$,,AUTO

      376     4778    4            END;

   4778  5 000061   000000 116000 6                  CMPQ    0
         5 000062   000032 601000 5                  TNZ     LOOK_FOR_ITEM

      377     4779    3          END;

      378     4780    2     END;

      379     4781
PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:87   
      380     4782    1   END Z8EU$DELETE_LIST_ITEM;

   4782  5 000063   000000 702200 xent               TSX2  ! X66_ARET
      381     4783        %EOD;

PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:88   
--  Include file information  --

   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$DELETE_LIST_ITEM.
PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:89   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 002 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 003 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 004 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:90   
  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ITEM$                     3-0-0/w PTR         r     1 @LIST$
    *0-0-0/w PTR         r     1 ITEM$                     *0-0-0/w PTR         r     1 LIST$
     5-0-0/w PTR         r     1 PREV_ITEM$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BINARY_OP                  0-0-0/w STRC(288)         1 CALL_STMT
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(288)         1 ILS_LIST                   0-0-0/w STRC(288)         1 INSPECT_1_STMT
     0-0-0/w STRC(288)         1 INSPECT_2_STMT             0-0-0/w STRC(288)         1 INSPECT_4_STMT
     0-0-0/w STRC(288)         1 LA_ITEM                    0-0-0/w STRC(504)         1 LX_CD_INPUT
     0-0-0/w STRC(324)         1 LX_CD_I_O                  0-0-0/w STRC(396)         1 LX_CD_OUTPUT
     0-0-0/w STRC(288)         1 LX_ETT_ITEM                0-0-0/w STRC(288)   r     1 LX_ITEM
     0-0-0/w STRC(288)         1 LX_LARGE                   0-0-0/w STRC(288)   r     1 LX_LIST
     0-0-0/w STRC(1224)        1 LX_REC_DECL                0-0-0/w STRC(864)         1 LX_REPORT_REC
     0-0-0/w STRC(288)         1 LX_TERMINAL                0-0-0/w STRC(288)         1 MULTIPLY_STMT
     0-0-0/w STRC(36864)       1 PAGE                       0-0-0/w STRC(288)         1 READ_STMT
     0-0-0/w STRC(288)         1 REWRITE_STMT               0-0-0/w STRC(288)         1 START_STMT
     0-0-0/w STRC(252)         1 STRING_STMT                0-0-0/w STRC(288)         1 SUBTRACT_STMT
     0-0-0/w STRC(288)         1 UNARY_OP                   0-0-0/w STRC(288)         1 UNSTRING_STMT
     0-0-0/w STRC(288)         1 WRITE_STMT

PL6.E3A0      #005=Z8EU$DELETE_LIST_ITEM File=Z8EU.:Z8A6TSI                      SAT 08/09/97 12:54 Page:91   

   Procedure Z8EU$DELETE_LIST_ITEM requires 52 words for executable code.
   Procedure Z8EU$DELETE_LIST_ITEM requires 6 words of local(AUTO) storage.

PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:92   
      382        1        /*T***********************************************************/
      383        2        /*T*                                                         */
      384        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      385        4        /*T*                                                         */
      386        5        /*T***********************************************************/
      387        6
      388        7        Z8EU$CREATE_IDENTIFIER_FROM_ST: PROC (IDENT_ST$, LX_ETT_ITEM$, LINE, COLUMN);
      389        8
      390        9    1       DCL Z8AF$NEW_BASE         ENTRY(3);
      391       10    1     DCL IDENT_ST$ PTR;
      392       11    1     DCL LX_ETT_ITEM$ PTR;
      393       12    1     DCL LINE SBIN WORD;
      394       13    1     DCL COLUMN SBIN WORD;
      395       14
      396       15        %EQU PHASE = 1;
      397       16        %INCLUDE Z8A_DEFC;
      398       84        %INCLUDE Z8A_SUPP_MAC;
      399     2484        %INCLUDE Z8A_COMCOM;
      400     3134        %INCLUDE Z8A_SRCH;
      401     3183        %INCLUDE Z8A_ETT;
      402     3484        %INCLUDE Z8E_STACKS;
      403     5750        %INCLUDE Z8A_TYPES;
      404     5924        %INCLUDE Z8A_ST;
      405     9583
      406     9584    1   DCL Z8AS$SR_ETT ENTRY(1);
      407     9585
      408     9586
      409     9587        %INIT_LX_ETT_ITEM (@POINTER = LX_ETT_ITEM$,
      410     9588                           @TYPE = "IDENT_ST$ -> SCALAR.TYPE");
      411     9610
      412     9611    1   IF ADDR(LINE) ~= ADDR(NIL) THEN
      413     9612    1     LX_ETT_ITEM$ -> LX_ETT_ITEM.LINE = LINE;
      414     9613
      415     9614    1   IF ADDR(COLUMN) ~= ADDR(NIL) THEN
      416     9615    1     LX_ETT_ITEM$ -> LX_ETT_ITEM.COLUMN = COLUMN;
      417     9616
      418     9617    1   CALL Z8AF$NEW_BASE (IDENT_ST$,       /* LOP */      /*#26938*/
PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:93   
      419     9618    1                       ADDR(NIL),       /* ROP */
      420     9619    1                       LX_ETT_ITEM$ -> LX_ETT_ITEM.ETT$);
      421     9620
      422     9621    1   END Z8EU$CREATE_IDENTIFIER_FROM_ST;
      423     9622        %EOD;

PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:94   
--  Include file information  --

   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_SRCH.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$CREATE_IDENTIFIER_FROM_ST.

   Procedure Z8EU$CREATE_IDENTIFIER_FROM_ST requires 56 words for executable code.
   Procedure Z8EU$CREATE_IDENTIFIER_FROM_ST requires 12 words of local(AUTO) storage.

PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:95   

 Object Unit name= Z8EU$CREATE_IDENTIFIER_FROM_ST             File name= Z8EU.:Z8A6TOU
 UTS= AUG 09 '97 12:55:26.12 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     3      3  SRCH
    2  LblCom even  none     1      1  ETT$
    3  LblCom even  none     1      1  HEAD_ETT$
    4  LblCom even  none   512   1000  ETT_BUCKETS
    5  LblCom even  none     5      5  ETT_
    6  LblCom even  none    90    132  LEX_SYMBOL
    7  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
    8  LblCom even  none    90    132  TEMP_LEX_SYMBOL
    9  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
   10  LblCom even  none     1      1  ST$
   11  LblCom even  none     5      5  ST_
   12   Proc  even  none    56     70  Z8EU$CREATE_IDENTIFIER_FROM_ST
   13  RoData even  none     2      2  Z8EU$CREATE_IDENTIFIER_FROM_ST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        4  Z8EU$CREATE_IDENTIFIER_FROM_ST
PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:96   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 Z8AF$NEW_BASE
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:97   


      382        1        /*T***********************************************************/
      383        2        /*T*                                                         */
      384        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      385        4        /*T*                                                         */
      386        5        /*T***********************************************************/
      387        6
      388        7        Z8EU$CREATE_IDENTIFIER_FROM_ST: PROC (IDENT_ST$, LX_ETT_ITEM$, LINE, COLUMN);

      7 12 000000   000000 700200 xent  Z8EU$CREATE* TSX0  ! X66_AUTO_4
        12 000001   000014 000004                    ZERO    12,4

      389        8
      390        9    1       DCL Z8AF$NEW_BASE         ENTRY(3);
      391       10    1     DCL IDENT_ST$ PTR;
      392       11    1     DCL LX_ETT_ITEM$ PTR;
      393       12    1     DCL LINE SBIN WORD;
      394       13    1     DCL COLUMN SBIN WORD;
      395       14
      396       15        %EQU PHASE = 1;
      397       16        %INCLUDE Z8A_DEFC;
      398       84        %INCLUDE Z8A_SUPP_MAC;
      399     2484        %INCLUDE Z8A_COMCOM;
      400     3134        %INCLUDE Z8A_SRCH;
      401     3183        %INCLUDE Z8A_ETT;
      402     3484        %INCLUDE Z8E_STACKS;
      403     5750        %INCLUDE Z8A_TYPES;
      404     5924        %INCLUDE Z8A_ST;
      405     9583
      406     9584    1   DCL Z8AS$SR_ETT ENTRY(1);
      407     9585
      408     9586
      409     9587        %INIT_LX_ETT_ITEM (@POINTER = LX_ETT_ITEM$,
      410     9588                           @TYPE = "IDENT_ST$ -> SCALAR.TYPE");

   9590 12 000002   200004 470500                    LDP0    @LX_ETT_ITEM$,,AUTO
        12 000003   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:98   
        12 000004   000004 220003                    LDX0    4,DU
        12 000005   100000 740100                    STX0    0,,PR1

   9591 12 000006   000000 471500                    LDP1    0,,PR0
        12 000007   000000 221003                    LDX1    0,DU
        12 000010   100000 441100                    SXL1    0,,PR1

   9592 12 000011   000000 471500                    LDP1    0,,PR0
        12 000012   200003 473500                    LDP3    @IDENT_ST$,,AUTO
        12 000013   300000 474500                    LDP4    0,,PR3
        12 000014   400002 236100                    LDQ     2,,PR4
        12 000015   000022 772000                    QRL     18
        12 000016   100004 756100                    STQ     4,,PR1

   9593 12 000017   000000 471500                    LDP1    0,,PR0
        12 000020   000000 236000 13                 LDQ     0
        12 000021   100007 756100                    STQ     7,,PR1

   9594 12 000022   000000 471500                    LDP1    0,,PR0
        12 000023   100001 756100                    STQ     1,,PR1

   9595 12 000024   000000 471500                    LDP1    0,,PR0
        12 000025   100002 756100                    STQ     2,,PR1

   9597 12 000026   000000 471500                    LDP1    0,,PR0
        12 000027   000133 235000 xsym               LDA     COMCOM+91
        12 000030   100005 755100                    STA     5,,PR1

   9598 12 000031   000000 471500                    LDP1    0,,PR0
        12 000032   000134 235000 xsym               LDA     COMCOM+92
        12 000033   100006 755100                    STA     6,,PR1

      411     9610
      412     9611    1   IF ADDR(LINE) ~= ADDR(NIL) THEN

   9611 12 000034   200005 236100                    LDQ     @LINE,,AUTO
        12 000035   000000 116000 13                 CMPQ    0
PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:99   
        12 000036   000043 600000 12                 TZE     s:9614

      413     9612    1     LX_ETT_ITEM$ -> LX_ETT_ITEM.LINE = LINE;

   9612 12 000037   000000 471500                    LDP1    0,,PR0
        12 000040   200005 474500                    LDP4    @LINE,,AUTO
        12 000041   400000 235100                    LDA     0,,PR4
        12 000042   100005 755100                    STA     5,,PR1

      414     9613
      415     9614    1   IF ADDR(COLUMN) ~= ADDR(NIL) THEN

   9614 12 000043   200006 236100                    LDQ     @COLUMN,,AUTO
        12 000044   000000 116000 13                 CMPQ    0
        12 000045   000052 600000 12                 TZE     s:9617

      416     9615    1     LX_ETT_ITEM$ -> LX_ETT_ITEM.COLUMN = COLUMN;

   9615 12 000046   000000 471500                    LDP1    0,,PR0
        12 000047   200006 474500                    LDP4    @COLUMN,,AUTO
        12 000050   400000 235100                    LDA     0,,PR4
        12 000051   100006 755100                    STA     6,,PR1

      417     9616
      418     9617    1   CALL Z8AF$NEW_BASE (IDENT_ST$,       /* LOP */      /*#26938*/

   9617 12 000052   000000 471500                    LDP1    0,,PR0
        12 000053   000000 236000 13                 LDQ     0
        12 000054   200010 756100                    STQ     @COLUMN+2,,AUTO
        12 000055   100001 634500                    EPPR4   1,,PR1
        12 000056   200013 454500                    STP4    @COLUMN+5,,AUTO
        12 000057   200010 631500                    EPPR1   @COLUMN+2,,AUTO
        12 000060   200012 451500                    STP1    @COLUMN+4,,AUTO
        12 000061   200003 236100                    LDQ     @IDENT_ST$,,AUTO
        12 000062   200011 756100                    STQ     @COLUMN+3,,AUTO
        12 000063   200011 630500                    EPPR0   @COLUMN+3,,AUTO
        12 000064   000001 631400 13                 EPPR1   1
PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:100  
        12 000065   000000 701000 xent               TSX1    Z8AF$NEW_BASE
        12 000066   000000 011000                    NOP     0

      419     9618    1                       ADDR(NIL),       /* ROP */
      420     9619    1                       LX_ETT_ITEM$ -> LX_ETT_ITEM.ETT$);
      421     9620
      422     9621    1   END Z8EU$CREATE_IDENTIFIER_FROM_ST;

   9621 12 000067   000000 702200 xent               TSX2  ! X66_ARET
      423     9622        %EOD;

PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:101  
--  Include file information  --

   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_SRCH.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$CREATE_IDENTIFIER_FROM_ST.
PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:102  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom SRCH

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)         1 SRCH

  ****  Section 002 LblCom ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ETT$

  ****  Section 003 LblCom HEAD_ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAD_ETT$

  ****  Section 004 LblCom ETT_BUCKETS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ETT_BUCKETS(0:511)

PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:103  
  ****  Section 005 LblCom ETT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ETT_

  ****  Section 006 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 007 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 008 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 009 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Section 010 LblCom ST$

PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:104  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 011 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @COLUMN                    3-0-0/w PTR         r     1 @IDENT_ST$
     5-0-0/w PTR         r     1 @LINE                      4-0-0/w PTR         r     1 @LX_ETT_ITEM$
    *0-0-0/w SBIN        r     1 COLUMN                    *0-0-0/w PTR         r     1 IDENT_ST$
    *0-0-0/w SBIN        r     1 LINE                      *0-0-0/w PTR         r     1 LX_ETT_ITEM$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(396)         1 ARRAY                      0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:105  
     0-0-0/w STRC(288)         1 BINARY_OP                  0-0-0/w STRC(396)         1 BLOCK
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(396)         1 CLASS
     0-0-0/w STRC(288)         1 COMPUTE_STMT               0-0-0/w STRC(396)         1 CONDITION
     0-0-0/w STRC(396)         1 CONST                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(396)         1 DB                         0-0-0/w STRC(396)         1 DCB_
     0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER         0-0-0/w STRC(252)         1 DEFERED_ID_TREE
     0-0-0/w STRC(288)         1 DEFERED_QUAL_ID            0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w STRC(180)         1 ETT
     0-0-0/w STRC(396)         1 FD                         0-0-0/w STRC(288)         1 ILS_LIST
     0-0-0/w STRC(288)         1 INSPECT_1_STMT             0-0-0/w STRC(288)         1 INSPECT_2_STMT
     0-0-0/w STRC(288)         1 INSPECT_4_STMT             0-0-0/w STRC(396)         1 INTDEF
     0-0-0/w STRC(396)         1 LABEL                      0-0-0/w STRC(288)         1 LA_ITEM
     0-0-0/w STRC(504)         1 LX_CD_INPUT                0-0-0/w STRC(324)         1 LX_CD_I_O
     0-0-0/w STRC(396)         1 LX_CD_OUTPUT               0-0-0/w STRC(288)   r     1 LX_ETT_ITEM
     0-0-0/w STRC(288)         1 LX_ITEM                    0-0-0/w STRC(288)         1 LX_LARGE
     0-0-0/w STRC(288)         1 LX_LIST                    0-0-0/w STRC(1224)        1 LX_REC_DECL
     0-0-0/w STRC(864)         1 LX_REPORT_REC              0-0-0/w STRC(288)         1 LX_TERMINAL
     0-0-0/w STRC(396)         1 MNEMONIC                   0-0-0/w STRC(288)         1 MULTIPLY_STMT
     0-0-0/w STRC(36864)       1 PAGE                       0-0-0/w STRC(396)         1 PARA
     0-0-0/w STRC(396)         1 PROC_                      0-0-0/w STRC(396)         1 PROC_DEF
     0-0-0/w STRC(396)         1 RD                         0-0-0/w STRC(288)         1 READ_STMT
     0-0-0/w STRC(288)         1 REWRITE_STMT               0-0-0/w STRC(396)   r     1 SCALAR
     0-0-0/w STRC(396)         1 SD                         0-0-0/w STRC(396)         1 SECTION
     0-0-0/w STRC(396)         1 SEGMENT                    0-0-0/w STRC(396)         1 ST
     0-0-0/w STRC(288)         1 START_STMT                 0-0-0/w STRC(252)         1 STRING_STMT
     0-0-0/w STRC(288)         1 SUBTRACT_STMT              0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/w STRC(288)         1 UNARY_OP                   0-0-0/w STRC(288)         1 UNSTRING_STMT
     0-0-0/w STRC(396)         1 VARIABLE                   0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8EU$CREATE_IDENTIFIER_FROM_ST requires 56 words for executable code.
PL6.E3A0      #006=Z8EU$CREATE_IDENTIFIER_FROM_ST File=Z8EU.:Z8A6TSI             SAT 08/09/97 12:55 Page:106  
   Procedure Z8EU$CREATE_IDENTIFIER_FROM_ST requires 12 words of local(AUTO) storage.

PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:107  
      424        1        /*T***********************************************************/
      425        2        /*T*                                                         */
      426        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      427        4        /*T*                                                         */
      428        5        /*T***********************************************************/
      429        6        Z8EU$DUP_ABSSYN_TREE : PROC (ORIG_TREE$,
      430        7                                     DUP_TREE$);
      431        8
      432        9    1     DCL ORIG_TREE$ PTR;
      433       10    1     DCL DUP_TREE$  PTR;
      434       11
      435       12        %EQU PHASE = 1;
      436       13        %INCLUDE Z8A_DEFC;
      437       81        %INCLUDE Z8A_SUPP_MAC;
      438     2481        %INCLUDE Z8E_HEAP;
      439     2537        %INCLUDE Z8E_STACKS;
      440     4803        %INCLUDE Z8E_ABSSYN;
      441     5009        %INCLUDE Z8A_ERR_NUMS;
      442     5773
      443     5774    1   DCL Z8AE$ERROR ENTRY(12);
      444     5775
      445     5776    1   DCL LINK$ PTR;
      446     5777
      447     5778
      448     5779
      449     5780          %NEW_COPY_LX_ITEM (@FROM$ = ORIG_TREE$,
      450     5781                             @TO$ = DUP_TREE$);
      451     5793
      452     5794    2     DO CASE (ORIG_TREE$ -> LX_ITEM.ID);
      453     5795
      454     5796    2       CASE (%LX_TERMINAL, %LX_ETT_ITEM);
      455     5797
      456     5798    2         IF ORIG_TREE$ -> LX_ITEM.LINK ~= ADDR(NIL) THEN
      457     5799    2           CALL Z8EU$DUP_ABSSYN_TREE ( ORIG_TREE$ -> LX_ITEM.LINK,
      458     5800    2                                       DUP_TREE$  -> LX_ITEM.LINK);
      459     5801
      460     5802    2       CASE(%BINARY_OP);
PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:108  
      461     5803
      462     5804    2         IF ORIG_TREE$ -> BINARY_OP.LOP$ ~= ADDR(NIL) THEN
      463     5805    2           CALL Z8EU$DUP_ABSSYN_TREE (ORIG_TREE$ -> BINARY_OP.LOP$,
      464     5806    2                                      DUP_TREE$  -> BINARY_OP.LOP$);
      465     5807    2         IF ORIG_TREE$ -> BINARY_OP.ROP$ ~= ADDR(NIL) THEN
      466     5808    2           CALL Z8EU$DUP_ABSSYN_TREE (ORIG_TREE$ -> BINARY_OP.ROP$,
      467     5809    2                                      DUP_TREE$  -> BINARY_OP.ROP$);
      468     5810    2         IF ORIG_TREE$ -> BINARY_OP.LINK ~= ADDR(NIL) THEN
      469     5811    2           CALL Z8EU$DUP_ABSSYN_TREE (ORIG_TREE$ -> BINARY_OP.LINK,
      470     5812    2                                      DUP_TREE$  -> BINARY_OP.LINK);
      471     5813
      472     5814    2       CASE (%UNARY_OP);
      473     5815
      474     5816    2         IF ORIG_TREE$ -> UNARY_OP.LOP$ ~= ADDR(NIL) THEN
      475     5817    2           CALL Z8EU$DUP_ABSSYN_TREE (ORIG_TREE$ -> UNARY_OP.LOP$,
      476     5818    2                                      DUP_TREE$  -> UNARY_OP.LOP$);
      477     5819
      478     5820    2       CASE(%LX_LIST);
      479     5821
      480     5822    2         IF ORIG_TREE$ -> LX_LIST.COUNT > 0 THEN
      481     5823    3           DO;
      482     5824    3             CALL Z8EU$DUP_ABSSYN_TREE (ORIG_TREE$ -> LX_LIST.HEAD$,
      483     5825    3                                        DUP_TREE$ -> LX_LIST.HEAD$);
      484     5826    3             LINK$ = DUP_TREE$ -> LX_LIST.HEAD$;
      485     5827    4             DO WHILE LINK$ -> LX_ITEM.LINK ~= ADDR(NIL);
      486     5828    4               LINK$ = LINK$ -> LX_ITEM.LINK;
      487     5829    4             END;
      488     5830    3             DUP_TREE$ -> LX_LIST.TAIL$ = LINK$;
      489     5831    3           END;
      490     5832
      491     5833    2       CASE(ELSE);
      492     5834
      493     5835    2         CALL Z8AE$ERROR (%E$UNEXPECTED_CASE);
      494     5836    2     END;
      495     5837
      496     5838
      497     5839    1   END Z8EU$DUP_ABSSYN_TREE;
PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:109  
      498     5840        %EOD;

PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:110  
--  Include file information  --

   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   Z8E_ABSSYN.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_HEAP.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$DUP_ABSSYN_TREE.

   Procedure Z8EU$DUP_ABSSYN_TREE requires 133 words for executable code.
   Procedure Z8EU$DUP_ABSSYN_TREE requires 8 words of local(AUTO) storage.

PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:111  

 Object Unit name= Z8EU$DUP_ABSSYN_TREE                       File name= Z8EU.:Z8A6TOU
 UTS= AUG 09 '97 12:56:50.84 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  HEAP$
    2  LblCom even  none    90    132  LEX_SYMBOL
    3  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
    4  LblCom even  none    90    132  TEMP_LEX_SYMBOL
    5  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
    6  LblCom even  none     8     10  TEMP_LX_NODE
    7   Proc  even  none   133    205  Z8EU$DUP_ABSSYN_TREE
    8  RoData even  none     7      7  Z8EU$DUP_ABSSYN_TREE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes      Std        2  Z8EU$DUP_ABSSYN_TREE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 Z8ED$NEW_HEAP
         yes           Std      12 Z8AE$ERROR
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:112  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:113  


      424        1        /*T***********************************************************/
      425        2        /*T*                                                         */
      426        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      427        4        /*T*                                                         */
      428        5        /*T***********************************************************/
      429        6        Z8EU$DUP_ABSSYN_TREE : PROC (ORIG_TREE$,

      6  7 000000   000000 700200 xent  Z8EU$DUP_AB* TSX0  ! X66_AUTO_2
         7 000001   000010 000002                    ZERO    8,2

      430        7                                     DUP_TREE$);
      431        8
      432        9    1     DCL ORIG_TREE$ PTR;
      433       10    1     DCL DUP_TREE$  PTR;
      434       11
      435       12        %EQU PHASE = 1;
      436       13        %INCLUDE Z8A_DEFC;
      437       81        %INCLUDE Z8A_SUPP_MAC;
      438     2481        %INCLUDE Z8E_HEAP;
      439     2537        %INCLUDE Z8E_STACKS;
      440     4803        %INCLUDE Z8E_ABSSYN;
      441     5009        %INCLUDE Z8A_ERR_NUMS;
      442     5773
      443     5774    1   DCL Z8AE$ERROR ENTRY(12);
      444     5775
      445     5776    1   DCL LINK$ PTR;
      446     5777
      447     5778
      448     5779
      449     5780          %NEW_COPY_LX_ITEM (@FROM$ = ORIG_TREE$,
      450     5781                             @TO$ = DUP_TREE$);

   5786  7 000002   000002 236000 8                  LDQ     2
         7 000003   200004 235100                    LDA     @DUP_TREE$,,AUTO
         7 000004   200006 757100                    STAQ    LINK$+1,,AUTO
         7 000005   200006 630500                    EPPR0   LINK$+1,,AUTO
PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:114  
         7 000006   000000 631400 8                  EPPR1   0
         7 000007   000000 701000 xent               TSX1    Z8ED$NEW_HEAP
         7 000010   000000 011000                    NOP     0

   5789  7 000011   200004 470500                    LDP0    @DUP_TREE$,,AUTO
         7 000012   000000 471500                    LDP1    0,,PR0
         7 000013   200003 473500                    LDP3    @ORIG_TREE$,,AUTO
         7 000014   300000 474500                    LDP4    0,,PR3
         7 000015   000100 100500                    MLR     fill='000'O
         7 000016   400000 000040                    ADSC9   0,,PR4                   cn=0,n=32
         7 000017   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32

   5790  7 000020   000000 471500                    LDP1    0,,PR0
         7 000021   000003 236000 8                  LDQ     3
         7 000022   100007 756100                    STQ     7,,PR1

      451     5793
      452     5794    2     DO CASE (ORIG_TREE$ -> LX_ITEM.ID);

   5794  7 000023   300000 471500                    LDP1    0,,PR3
         7 000024   100000 220100                    LDX0    0,,PR1
         7 000025   000007 100003                    CMPX0   7,DU
         7 000026   000030 602010 7                  TNC     s:5794+5,X0
         7 000027   000200 710000 7                  TRA     s:5835
         7 000030   000037 710000 7                  TRA     s:5798
         7 000031   000200 710000 7                  TRA     s:5835
         7 000032   000144 710000 7                  TRA     s:5822
         7 000033   000200 710000 7                  TRA     s:5835
         7 000034   000037 710000 7                  TRA     s:5798
         7 000035   000054 710000 7                  TRA     s:5804
         7 000036   000127 710000 7                  TRA     s:5816

      453     5795
      454     5796    2       CASE (%LX_TERMINAL, %LX_ETT_ITEM);

      455     5797
      456     5798    2         IF ORIG_TREE$ -> LX_ITEM.LINK ~= ADDR(NIL) THEN
PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:115  

   5798  7 000037   100007 236100                    LDQ     7,,PR1
         7 000040   000003 116000 8                  CMPQ    3
         7 000041   000204 600000 7                  TZE     s:5839

      457     5799    2           CALL Z8EU$DUP_ABSSYN_TREE ( ORIG_TREE$ -> LX_ITEM.LINK,

   5799  7 000042   000000 474500                    LDP4    0,,PR0
         7 000043   400007 635500                    EPPR5   7,,PR4
         7 000044   200007 455500                    STP5    LINK$+2,,AUTO
         7 000045   100007 634500                    EPPR4   7,,PR1
         7 000046   200006 454500                    STP4    LINK$+1,,AUTO
         7 000047   200006 630500                    EPPR0   LINK$+1,,AUTO
         7 000050   000000 631400 8                  EPPR1   0
         7 000051   000000 701000 7                  TSX1    s:6
         7 000052   000000 011000                    NOP     0
         7 000053   000204 710000 7                  TRA     s:5839

      458     5800    2                                       DUP_TREE$  -> LX_ITEM.LINK);
      459     5801
      460     5802    2       CASE(%BINARY_OP);

      461     5803
      462     5804    2         IF ORIG_TREE$ -> BINARY_OP.LOP$ ~= ADDR(NIL) THEN

   5804  7 000054   100001 236100                    LDQ     1,,PR1
         7 000055   000003 116000 8                  CMPQ    3
         7 000056   000070 600000 7                  TZE     s:5807

      463     5805    2           CALL Z8EU$DUP_ABSSYN_TREE (ORIG_TREE$ -> BINARY_OP.LOP$,

   5805  7 000057   000000 474500                    LDP4    0,,PR0
         7 000060   400001 635500                    EPPR5   1,,PR4
         7 000061   200007 455500                    STP5    LINK$+2,,AUTO
         7 000062   100001 634500                    EPPR4   1,,PR1
         7 000063   200006 454500                    STP4    LINK$+1,,AUTO
         7 000064   200006 630500                    EPPR0   LINK$+1,,AUTO
PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:116  
         7 000065   000000 631400 8                  EPPR1   0
         7 000066   000000 701000 7                  TSX1    s:6
         7 000067   000000 011000                    NOP     0

      464     5806    2                                      DUP_TREE$  -> BINARY_OP.LOP$);
      465     5807    2         IF ORIG_TREE$ -> BINARY_OP.ROP$ ~= ADDR(NIL) THEN

   5807  7 000070   200003 470500                    LDP0    @ORIG_TREE$,,AUTO
         7 000071   000000 471500                    LDP1    0,,PR0
         7 000072   100002 236100                    LDQ     2,,PR1
         7 000073   000003 116000 8                  CMPQ    3
         7 000074   000107 600000 7                  TZE     s:5810

      466     5808    2           CALL Z8EU$DUP_ABSSYN_TREE (ORIG_TREE$ -> BINARY_OP.ROP$,

   5808  7 000075   200004 473500                    LDP3    @DUP_TREE$,,AUTO
         7 000076   300000 474500                    LDP4    0,,PR3
         7 000077   400002 635500                    EPPR5   2,,PR4
         7 000100   200007 455500                    STP5    LINK$+2,,AUTO
         7 000101   100002 634500                    EPPR4   2,,PR1
         7 000102   200006 454500                    STP4    LINK$+1,,AUTO
         7 000103   200006 630500                    EPPR0   LINK$+1,,AUTO
         7 000104   000000 631400 8                  EPPR1   0
         7 000105   000000 701000 7                  TSX1    s:6
         7 000106   000000 011000                    NOP     0

      467     5809    2                                      DUP_TREE$  -> BINARY_OP.ROP$);
      468     5810    2         IF ORIG_TREE$ -> BINARY_OP.LINK ~= ADDR(NIL) THEN

   5810  7 000107   200003 470500                    LDP0    @ORIG_TREE$,,AUTO
         7 000110   000000 471500                    LDP1    0,,PR0
         7 000111   100007 236100                    LDQ     7,,PR1
         7 000112   000003 116000 8                  CMPQ    3
         7 000113   000204 600000 7                  TZE     s:5839

      469     5811    2           CALL Z8EU$DUP_ABSSYN_TREE (ORIG_TREE$ -> BINARY_OP.LINK,

PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:117  
   5811  7 000114   200004 473500                    LDP3    @DUP_TREE$,,AUTO
         7 000115   300000 474500                    LDP4    0,,PR3
         7 000116   400007 635500                    EPPR5   7,,PR4
         7 000117   200007 455500                    STP5    LINK$+2,,AUTO
         7 000120   100007 634500                    EPPR4   7,,PR1
         7 000121   200006 454500                    STP4    LINK$+1,,AUTO
         7 000122   200006 630500                    EPPR0   LINK$+1,,AUTO
         7 000123   000000 631400 8                  EPPR1   0
         7 000124   000000 701000 7                  TSX1    s:6
         7 000125   000000 011000                    NOP     0
         7 000126   000204 710000 7                  TRA     s:5839

      470     5812    2                                      DUP_TREE$  -> BINARY_OP.LINK);
      471     5813
      472     5814    2       CASE (%UNARY_OP);

      473     5815
      474     5816    2         IF ORIG_TREE$ -> UNARY_OP.LOP$ ~= ADDR(NIL) THEN

   5816  7 000127   100001 236100                    LDQ     1,,PR1
         7 000130   000003 116000 8                  CMPQ    3
         7 000131   000204 600000 7                  TZE     s:5839

      475     5817    2           CALL Z8EU$DUP_ABSSYN_TREE (ORIG_TREE$ -> UNARY_OP.LOP$,

   5817  7 000132   000000 474500                    LDP4    0,,PR0
         7 000133   400001 635500                    EPPR5   1,,PR4
         7 000134   200007 455500                    STP5    LINK$+2,,AUTO
         7 000135   100001 634500                    EPPR4   1,,PR1
         7 000136   200006 454500                    STP4    LINK$+1,,AUTO
         7 000137   200006 630500                    EPPR0   LINK$+1,,AUTO
         7 000140   000000 631400 8                  EPPR1   0
         7 000141   000000 701000 7                  TSX1    s:6
         7 000142   000000 011000                    NOP     0
         7 000143   000204 710000 7                  TRA     s:5839

      476     5818    2                                      DUP_TREE$  -> UNARY_OP.LOP$);
PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:118  
      477     5819
      478     5820    2       CASE(%LX_LIST);

      479     5821
      480     5822    2         IF ORIG_TREE$ -> LX_LIST.COUNT > 0 THEN

   5822  7 000144   100002 235100                    LDA     2,,PR1
         7 000145   000204 604400 7                  TMOZ    s:5839

      481     5823    3           DO;

      482     5824    3             CALL Z8EU$DUP_ABSSYN_TREE (ORIG_TREE$ -> LX_LIST.HEAD$,

   5824  7 000146   000000 474500                    LDP4    0,,PR0
         7 000147   400004 635500                    EPPR5   4,,PR4
         7 000150   200007 455500                    STP5    LINK$+2,,AUTO
         7 000151   100004 634500                    EPPR4   4,,PR1
         7 000152   200006 454500                    STP4    LINK$+1,,AUTO
         7 000153   200006 630500                    EPPR0   LINK$+1,,AUTO
         7 000154   000000 631400 8                  EPPR1   0
         7 000155   000000 701000 7                  TSX1    s:6
         7 000156   000000 011000                    NOP     0

      483     5825    3                                        DUP_TREE$ -> LX_LIST.HEAD$);
      484     5826    3             LINK$ = DUP_TREE$ -> LX_LIST.HEAD$;

   5826  7 000157   200004 470500                    LDP0    @DUP_TREE$,,AUTO
         7 000160   000000 471500                    LDP1    0,,PR0
         7 000161   100004 236100                    LDQ     4,,PR1
         7 000162   200005 756100                    STQ     LINK$,,AUTO

      485     5827    4             DO WHILE LINK$ -> LX_ITEM.LINK ~= ADDR(NIL);

   5827  7 000163   000167 710000 7                  TRA     s:5829

      486     5828    4               LINK$ = LINK$ -> LX_ITEM.LINK;

PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:119  
   5828  7 000164   200005 470500                    LDP0    LINK$,,AUTO
         7 000165   000007 236100                    LDQ     7,,PR0
         7 000166   200005 756100                    STQ     LINK$,,AUTO

      487     5829    4             END;

   5829  7 000167   200005 470500                    LDP0    LINK$,,AUTO
         7 000170   000007 236100                    LDQ     7,,PR0
         7 000171   000003 116000 8                  CMPQ    3
         7 000172   000164 601000 7                  TNZ     s:5828

      488     5830    3             DUP_TREE$ -> LX_LIST.TAIL$ = LINK$;

   5830  7 000173   200004 471500                    LDP1    @DUP_TREE$,,AUTO
         7 000174   100000 473500                    LDP3    0,,PR1
         7 000175   200005 236100                    LDQ     LINK$,,AUTO
         7 000176   300001 756100                    STQ     1,,PR3

      489     5831    3           END;

   5831  7 000177   000204 710000 7                  TRA     s:5839

      490     5832
      491     5833    2       CASE(ELSE);

      492     5834
      493     5835    2         CALL Z8AE$ERROR (%E$UNEXPECTED_CASE);

   5835  7 000200   000006 630400 8                  EPPR0   6
         7 000201   000004 631400 8                  EPPR1   4
         7 000202   000000 701000 xent               TSX1    Z8AE$ERROR
         7 000203   000000 011000                    NOP     0

      494     5836    2     END;

      495     5837
      496     5838
PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:120  
      497     5839    1   END Z8EU$DUP_ABSSYN_TREE;

   5839  7 000204   000000 702200 xent               TSX2  ! X66_ARET
      498     5840        %EOD;

PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:121  
--  Include file information  --

   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   Z8E_ABSSYN.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_HEAP.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$DUP_ABSSYN_TREE.
PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:122  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom HEAP$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAP$

  ****  Section 002 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 003 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 004 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:123  
  ****  Section 005 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Section 006 LblCom TEMP_LX_NODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(288)         1 TEMP_LX_NODE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @DUP_TREE$                 3-0-0/w PTR         r     1 @ORIG_TREE$
    *0-0-0/w PTR         r     1 DUP_TREE$                  5-0-0/w PTR         r     1 LINK$
    *0-0-0/w PTR         r     1 ORIG_TREE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)   r     1 BINARY_OP                  0-0-0/w STRC(288)         1 CALL_STMT
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
PL6.E3A0      #007=Z8EU$DUP_ABSSYN_TREE File=Z8EU.:Z8A6TSI                       SAT 08/09/97 12:56 Page:124  
     0-0-0/w STRC(288)         1 ILS_LIST                   0-0-0/w STRC(288)         1 INSPECT_1_STMT
     0-0-0/w STRC(288)         1 INSPECT_2_STMT             0-0-0/w STRC(288)         1 INSPECT_4_STMT
     0-0-0/w STRC(288)         1 LA_ITEM                    0-0-0/w STRC(504)         1 LX_CD_INPUT
     0-0-0/w STRC(324)         1 LX_CD_I_O                  0-0-0/w STRC(396)         1 LX_CD_OUTPUT
     0-0-0/w STRC(288)         1 LX_ETT_ITEM                0-0-0/w STRC(288)   r     1 LX_ITEM
     0-0-0/w STRC(288)         1 LX_LARGE                   0-0-0/w STRC(288)   r     1 LX_LIST
     0-0-0/w STRC(1224)        1 LX_REC_DECL                0-0-0/w STRC(864)         1 LX_REPORT_REC
     0-0-0/w STRC(288)         1 LX_TERMINAL                0-0-0/w STRC(288)         1 MULTIPLY_STMT
     0-0-0/w STRC(36864)       1 PAGE                       0-0-0/w STRC(288)         1 READ_STMT
     0-0-0/w STRC(288)         1 REWRITE_STMT               0-0-0/w STRC(288)         1 START_STMT
     0-0-0/w STRC(252)         1 STRING_STMT                0-0-0/w STRC(288)         1 SUBTRACT_STMT
     0-0-0/w STRC(288)   r     1 UNARY_OP                   0-0-0/w STRC(288)         1 UNSTRING_STMT
     0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8EU$DUP_ABSSYN_TREE requires 133 words for executable code.
   Procedure Z8EU$DUP_ABSSYN_TREE requires 8 words of local(AUTO) storage.

PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:125  
      499        1        /*T***********************************************************/
      500        2        /*T*                                                         */
      501        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      502        4        /*T*                                                         */
      503        5        /*T***********************************************************/
      504        6        Z8EU$GET_INITIALIZE_ITEMS : PROC (IDENT_ST$,
      505        7                                          LIST$);
      506        8
      507        9    1     DCL IDENT_ST$ PTR;
      508       10    1     DCL LIST$ PTR;
      509       11    1     DCL SON$ PTR;
      510       12
      511       13        /* Return references to all elementary items, excluding
      512       14           INDEX, FILLER, and subordinate REDEFINES
      513       15        */
      514       16
      515       17        %EQU PHASE = 1;
      516       18        %INCLUDE Z8A_DEFC;
      517       86        %INCLUDE Z8A_SUPP_MAC;
      518     2486        %INCLUDE Z8A_QLT;
      519     2592        %INCLUDE Z8A_DNT;
      520     2813        %INCLUDE Z8A_TYPES;
      521     2987        %INCLUDE Z8A_ST;
      522     6646        %INCLUDE Z8E_STACKS;
      523     8912        %INCLUDE Z8E_ABSSYN;
      524     9118        %INCLUDE Z8E_HEAP;
      525     9174
      526     9175    1   DCL Z8EU$CREATE_IDENTIFIER_FROM_ST ENTRY (4);
      527     9176
      528     9177    1   DCL LX_ETT_ITEM$ PTR;
      529     9178
      530     9179
      531     9180    2   DO CASE (IDENT_ST$ -> ST.ID);
      532     9181
      533     9182    2     CASE(%SCALAR, %ARRAY);
      534     9183
      535     9184    2       IF IDENT_ST$ -> VARIABLE.B.ELEMENTARY THEN
PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:126  
      536     9185    3         DO;
      537     9186    3           IF IDENT_ST$ -> VARIABLE.DNT$ -> DNT.TEXT.NAME ~= 'FILLER'
      538     9187    3               AND IDENT_ST$ -> VARIABLE.TYPE ~= %TYX
      539     9188    3               AND IDENT_ST$ -> VARIABLE.TYPE ~= %TYY   THEN
      540     9189    4             DO;
      541     9190                    %NEW (@TEMPLATE = LX_ETT_ITEM,
      542     9191                          @POINTER = LX_ETT_ITEM$);
      543     9201
      544     9202    4               CALL Z8EU$CREATE_IDENTIFIER_FROM_ST (IDENT_ST$,
      545     9203    4                                                    LX_ETT_ITEM$);
      546     9204
      547     9205                    %ADD_LX_ITEM_TO_LIST_TAIL (@FROM$ = LX_ETT_ITEM$,
      548     9206                                               @LIST$ = LIST$);
      549     9222    4             END;
      550     9223
      551     9224    3         END;
      552     9225    2       ELSE
      553     9226    3           DO;
      554     9227    3             SON$ = IDENT_ST$ -> VARIABLE.QLT$ -> QLT.SON ;
      555     9228    4               DO WHILE SON$ ~= ADDR(NIL);
      556     9229    4                 IF NOT SON$ -> QLT.ST$ -> VARIABLE.B.REDEF_SUB AND
      557     9230    4                     NOT SON$ -> QLT.B.RENAMES THEN
      558     9231    4                   CALL Z8EU$GET_INITIALIZE_ITEMS (SON$ -> QLT.ST$,
      559     9232    4                                                   LIST$);
      560     9233    4                 SON$ = SON$ -> QLT.BROTHER;
      561     9234    4               END;
      562     9235    3           END;
      563     9236    2   END;  /* do case */
      564     9237
      565     9238    1   END Z8EU$GET_INITIALIZE_ITEMS;
      566     9239        %EOD;

PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:127  
--  Include file information  --

   Z8E_HEAP.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_ABSSYN.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$GET_INITIALIZE_ITEMS.

   Procedure Z8EU$GET_INITIALIZE_ITEMS requires 89 words for executable code.
   Procedure Z8EU$GET_INITIALIZE_ITEMS requires 10 words of local(AUTO) storage.

PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:128  

 Object Unit name= Z8EU$GET_INITIALIZE_ITEMS                  File name= Z8EU.:Z8A6TOU
 UTS= AUG 09 '97 12:57:38.28 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  QLT$
    2  LblCom even  none     1      1  PREV_01_QLT$
    3  LblCom even  none     5      5  QLT_
    4  LblCom even  none     1      1  DNT$
    5  LblCom even  none     5      5  DNT_
    6  LblCom even  none     1      1  DNT_BUCKET_NUMBER
    7  LblCom even  none     1      1  DNT_OF_1$
    8  LblCom even  none     1      1  ST$
    9  LblCom even  none     5      5  ST_
   10  LblCom even  none    90    132  LEX_SYMBOL
   11  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
   12  LblCom even  none    90    132  TEMP_LEX_SYMBOL
   13  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
   14  LblCom even  none     8     10  TEMP_LX_NODE
   15  LblCom even  none     1      1  HEAP$
   16  RoData even  UTS      2      2  Z8EU$GET_INITIALIZE_ITEMS
   17   Proc  even  none    89    131  Z8EU$GET_INITIALIZE_ITEMS
   18  RoData even  none     4      4  Z8EU$GET_INITIALIZE_ITEMS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes            yes      Std        2  Z8EU$GET_INITIALIZE_ITEMS
PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:129  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 Z8ED$NEW_HEAP
         yes           Std       4 Z8EU$CREATE_IDENTIFIER_FROM_ST
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:130  


      499        1        /*T***********************************************************/
      500        2        /*T*                                                         */
      501        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      502        4        /*T*                                                         */
      503        5        /*T***********************************************************/
      504        6        Z8EU$GET_INITIALIZE_ITEMS : PROC (IDENT_ST$,

      6 17 000000   000000 700200 xent  Z8EU$GET_IN* TSX0  ! X66_AUTO_2
        17 000001   000012 000002                    ZERO    10,2

      505        7                                          LIST$);
      506        8
      507        9    1     DCL IDENT_ST$ PTR;
      508       10    1     DCL LIST$ PTR;
      509       11    1     DCL SON$ PTR;
      510       12
      511       13        /* Return references to all elementary items, excluding
      512       14           INDEX, FILLER, and subordinate REDEFINES
      513       15        */
      514       16
      515       17        %EQU PHASE = 1;
      516       18        %INCLUDE Z8A_DEFC;
      517       86        %INCLUDE Z8A_SUPP_MAC;
      518     2486        %INCLUDE Z8A_QLT;
      519     2592        %INCLUDE Z8A_DNT;
      520     2813        %INCLUDE Z8A_TYPES;
      521     2987        %INCLUDE Z8A_ST;
      522     6646        %INCLUDE Z8E_STACKS;
      523     8912        %INCLUDE Z8E_ABSSYN;
      524     9118        %INCLUDE Z8E_HEAP;
      525     9174
      526     9175    1   DCL Z8EU$CREATE_IDENTIFIER_FROM_ST ENTRY (4);
      527     9176
      528     9177    1   DCL LX_ETT_ITEM$ PTR;
      529     9178
      530     9179
PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:131  
      531     9180    2   DO CASE (IDENT_ST$ -> ST.ID);

   9180 17 000002   200003 470500                    LDP0    @IDENT_ST$,,AUTO
        17 000003   000000 471500                    LDP1    0,,PR0
        17 000004   100000 236100                    LDQ     0,,PR1
        17 000005   000022 772000                    QRL     18
        17 000006   000765 136007                    SBLQ    501,DL
        17 000007   000002 116007                    CMPQ    2,DL
        17 000010   000012 602006 17                 TNC     s:9180+8,QL
        17 000011   000130 710000 17                 TRA     s:9238
        17 000012   000014 710000 17                 TRA     s:9184
        17 000013   000014 710000 17                 TRA     s:9184

      532     9181
      533     9182    2     CASE(%SCALAR, %ARRAY);

      534     9183
      535     9184    2       IF IDENT_ST$ -> VARIABLE.B.ELEMENTARY THEN

   9184 17 000014   100003 236100                    LDQ     3,,PR1
        17 000015   010000 316003                    CANQ    4096,DU
        17 000016   000077 600000 17                 TZE     s:9227

      536     9185    3         DO;

      537     9186    3           IF IDENT_ST$ -> VARIABLE.DNT$ -> DNT.TEXT.NAME ~= 'FILLER'

   9186 17 000017   100006 473500                    LDP3    6,,PR1
        17 000020   300004 220100                    LDX0    4,,PR3
        17 000021   040000 106540                    CMPC    fill='040'O
        17 000022   300004 400010                    ADSC9   4,,PR3                   cn=2,n=*X0
        17 000023   000000 000006 16                 ADSC9   0                        cn=0,n=6
        17 000024   000130 600000 17                 TZE     s:9238
        17 000025   100002 221100                    LDX1    2,,PR1
        17 000026   000011 101003                    CMPX1   9,DU
        17 000027   000130 600000 17                 TZE     s:9238
        17 000030   000012 101003                    CMPX1   10,DU
PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:132  
        17 000031   000130 600000 17                 TZE     s:9238

      538     9187    3               AND IDENT_ST$ -> VARIABLE.TYPE ~= %TYX
      539     9188    3               AND IDENT_ST$ -> VARIABLE.TYPE ~= %TYY   THEN
      540     9189    4             DO;

      541     9190                    %NEW (@TEMPLATE = LX_ETT_ITEM,
      542     9191                          @POINTER = LX_ETT_ITEM$);

   9197 17 000032   000003 236000 18                 LDQ     3
        17 000033   200011 756100                    STQ     LX_ETT_ITEM$+3,,AUTO
        17 000034   200006 631500                    EPPR1   LX_ETT_ITEM$,,AUTO
        17 000035   200010 451500                    STP1    LX_ETT_ITEM$+2,,AUTO
        17 000036   200010 630500                    EPPR0   LX_ETT_ITEM$+2,,AUTO
        17 000037   000001 631400 18                 EPPR1   1
        17 000040   000000 701000 xent               TSX1    Z8ED$NEW_HEAP
        17 000041   000000 011000                    NOP     0

      543     9201
      544     9202    4               CALL Z8EU$CREATE_IDENTIFIER_FROM_ST (IDENT_ST$,

   9202 17 000042   200006 630500                    EPPR0   LX_ETT_ITEM$,,AUTO
        17 000043   200011 450500                    STP0    LX_ETT_ITEM$+3,,AUTO
        17 000044   200003 236100                    LDQ     @IDENT_ST$,,AUTO
        17 000045   200010 756100                    STQ     LX_ETT_ITEM$+2,,AUTO
        17 000046   200010 630500                    EPPR0   LX_ETT_ITEM$+2,,AUTO
        17 000047   000001 631400 18                 EPPR1   1
        17 000050   000000 701000 xent               TSX1    Z8EU$CREATE_IDENTIFIER_FROM_ST
        17 000051   000000 011000                    NOP     0

      545     9203    4                                                    LX_ETT_ITEM$);
      546     9204
      547     9205                    %ADD_LX_ITEM_TO_LIST_TAIL (@FROM$ = LX_ETT_ITEM$,
      548     9206                                               @LIST$ = LIST$);

   9208 17 000052   000000 236000 18                 LDQ     0
        17 000053   200006 470500                    LDP0    LX_ETT_ITEM$,,AUTO
PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:133  
        17 000054   000007 756100                    STQ     7,,PR0

   9209 17 000055   200004 471500                    LDP1    @LIST$,,AUTO
        17 000056   100000 473500                    LDP3    0,,PR1
        17 000057   300002 235100                    LDA     2,,PR3
        17 000060   000067 601000 17                 TNZ     s:9216

   9211 17 000061   200006 236100                    LDQ     LX_ETT_ITEM$,,AUTO
        17 000062   300004 756100                    STQ     4,,PR3

   9212 17 000063   100000 470500                    LDP0    0,,PR1
        17 000064   200006 236100                    LDQ     LX_ETT_ITEM$,,AUTO
        17 000065   000001 756100                    STQ     1,,PR0

   9213 17 000066   000074 710000 17                 TRA     s:9219

   9216 17 000067   300001 474500                    LDP4    1,,PR3
        17 000070   200006 236100                    LDQ     LX_ETT_ITEM$,,AUTO
        17 000071   400007 756100                    STQ     7,,PR4

   9217 17 000072   100000 473500                    LDP3    0,,PR1
        17 000073   300001 756100                    STQ     1,,PR3

   9219 17 000074   100000 470500                    LDP0    0,,PR1
        17 000075   000002 054100                    AOS     2,,PR0

      549     9222    4             END;

      550     9223
      551     9224    3         END;

   9224 17 000076   000130 710000 17                 TRA     s:9238

      552     9225    2       ELSE
      553     9226    3           DO;

      554     9227    3             SON$ = IDENT_ST$ -> VARIABLE.QLT$ -> QLT.SON ;
PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:134  

   9227 17 000077   100007 473500                    LDP3    7,,PR1
        17 000100   300003 236100                    LDQ     3,,PR3
        17 000101   200005 756100                    STQ     SON$,,AUTO

      555     9228    4               DO WHILE SON$ ~= ADDR(NIL);

   9228 17 000102   000126 710000 17                 TRA     s:9234

      556     9229    4                 IF NOT SON$ -> QLT.ST$ -> VARIABLE.B.REDEF_SUB AND

   9229 17 000103   200005 470500                    LDP0    SON$,,AUTO
        17 000104   000004 471500                    LDP1    4,,PR0
        17 000105   100003 430100                    FSZN    3,,PR1
        17 000106   000123 604000 17                 TMI     s:9233
        17 000107   000000 236100                    LDQ     0,,PR0
        17 000110   040000 316007                    CANQ    16384,DL
        17 000111   000123 601000 17                 TNZ     s:9233

      557     9230    4                     NOT SON$ -> QLT.B.RENAMES THEN
      558     9231    4                   CALL Z8EU$GET_INITIALIZE_ITEMS (SON$ -> QLT.ST$,

   9231 17 000112   200004 236100                    LDQ     @LIST$,,AUTO
        17 000113   200011 756100                    STQ     LX_ETT_ITEM$+3,,AUTO
        17 000114   200005 236100                    LDQ     SON$,,AUTO
        17 000115   000004 036003                    ADLQ    4,DU
        17 000116   200010 756100                    STQ     LX_ETT_ITEM$+2,,AUTO
        17 000117   200010 630500                    EPPR0   LX_ETT_ITEM$+2,,AUTO
        17 000120   000001 631400 18                 EPPR1   1
        17 000121   000000 701000 17                 TSX1    s:6
        17 000122   000000 011000                    NOP     0

      559     9232    4                                                   LIST$);
      560     9233    4                 SON$ = SON$ -> QLT.BROTHER;

   9233 17 000123   200005 470500                    LDP0    SON$,,AUTO
        17 000124   000002 236100                    LDQ     2,,PR0
PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:135  
        17 000125   200005 756100                    STQ     SON$,,AUTO

      561     9234    4               END;

   9234 17 000126   000000 116000 18                 CMPQ    0
        17 000127   000103 601000 17                 TNZ     s:9229

      562     9235    3           END;

      563     9236    2   END;  /* do case */

      564     9237
      565     9238    1   END Z8EU$GET_INITIALIZE_ITEMS;

   9238 17 000130   000000 702200 xent               TSX2  ! X66_ARET
      566     9239        %EOD;

PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:136  
--  Include file information  --

   Z8E_HEAP.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_ABSSYN.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$GET_INITIALIZE_ITEMS.
PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:137  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 QLT$

  ****  Section 002 LblCom PREV_01_QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 PREV_01_QLT$

  ****  Section 003 LblCom QLT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 QLT_

  ****  Section 004 LblCom DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DNT$

PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:138  
  ****  Section 005 LblCom DNT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 DNT_

  ****  Section 006 LblCom DNT_BUCKET_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 DNT_BUCKET_NUMBER

  ****  Section 007 LblCom DNT_OF_1$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 DNT_OF_1$

  ****  Section 008 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 009 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 010 LblCom LEX_SYMBOL

PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:139  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 011 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 012 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 013 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Section 014 LblCom TEMP_LX_NODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(288)         1 TEMP_LX_NODE

  ****  Section 015 LblCom HEAP$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:140  

     0-0-0/w PTR               1 HEAP$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @IDENT_ST$                 4-0-0/w PTR         r     1 @LIST$
    *0-0-0/w PTR         r     1 IDENT_ST$                 *0-0-0/w PTR         r     1 LIST$
     6-0-0/w PTR         r     1 LX_ETT_ITEM$               5-0-0/w PTR         r     1 SON$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(396)         1 ARRAY                      0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BINARY_OP                  0-0-0/w STRC(396)         1 BLOCK
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(396)         1 CLASS
     0-0-0/w STRC(288)         1 COMPUTE_STMT               0-0-0/w STRC(396)         1 CONDITION
     0-0-0/w STRC(396)         1 CONST                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(396)         1 DB                         0-0-0/w STRC(396)         1 DCB_
     0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER         0-0-0/w STRC(252)         1 DEFERED_ID_TREE
     0-0-0/w STRC(288)         1 DEFERED_QUAL_ID            0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w ASTR(180)   r     1 DNT
     0-0-0/w STRC(396)         1 FD                         0-0-0/w STRC(288)         1 ILS_LIST
     0-0-0/w STRC(288)         1 INSPECT_1_STMT             0-0-0/w STRC(288)         1 INSPECT_2_STMT
     0-0-0/w STRC(288)         1 INSPECT_4_STMT             0-0-0/w STRC(396)         1 INTDEF
     0-0-0/w STRC(396)         1 LABEL                      0-0-0/w STRC(288)         1 LA_ITEM
     0-0-0/w STRC(504)         1 LX_CD_INPUT                0-0-0/w STRC(324)         1 LX_CD_I_O
     0-0-0/w STRC(396)         1 LX_CD_OUTPUT               0-0-0/w STRC(288)   r     1 LX_ETT_ITEM
PL6.E3A0      #008=Z8EU$GET_INITIALIZE_ITEMS File=Z8EU.:Z8A6TSI                  SAT 08/09/97 12:57 Page:141  
     0-0-0/w STRC(288)   r     1 LX_ITEM                    0-0-0/w STRC(288)         1 LX_LARGE
     0-0-0/w STRC(288)   r     1 LX_LIST                    0-0-0/w STRC(1224)        1 LX_REC_DECL
     0-0-0/w STRC(864)         1 LX_REPORT_REC              0-0-0/w STRC(288)         1 LX_TERMINAL
     0-0-0/w STRC(396)         1 MNEMONIC                   0-0-0/w STRC(288)         1 MULTIPLY_STMT
     0-0-0/w STRC(36864)       1 PAGE                       0-0-0/w STRC(396)         1 PARA
     0-0-0/w STRC(396)         1 PROC_                      0-0-0/w STRC(396)         1 PROC_DEF
     0-0-0/w STRC(216)   r     1 QLT                        0-0-0/w STRC(396)         1 RD
     0-0-0/w STRC(288)         1 READ_STMT                  0-0-0/w STRC(288)         1 REWRITE_STMT
     0-0-0/w STRC(396)         1 SCALAR                     0-0-0/w STRC(396)         1 SD
     0-0-0/w STRC(396)         1 SECTION                    0-0-0/w STRC(396)         1 SEGMENT
     0-0-0/w STRC(396)   r     1 ST                         0-0-0/w STRC(288)         1 START_STMT
     0-0-0/w STRC(252)         1 STRING_STMT                0-0-0/w STRC(288)         1 SUBTRACT_STMT
     0-0-0/w STRC(396)         1 SWITCH                     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR
     0-0-0/w STRC(396)         1 SYMDEF_                    0-0-0/w STRC(396)         1 SYMREF_
     0-0-0/w STRC(396)         1 TEMP                       0-0-0/w STRC(288)         1 UNARY_OP
     0-0-0/w STRC(288)         1 UNSTRING_STMT              0-0-0/w STRC(396)   r     1 VARIABLE
     0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8EU$GET_INITIALIZE_ITEMS requires 89 words for executable code.
   Procedure Z8EU$GET_INITIALIZE_ITEMS requires 10 words of local(AUTO) storage.

PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:142  
      567        1        /*T***********************************************************/
      568        2        /*T*                                                         */
      569        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      570        4        /*T*                                                         */
      571        5        /*T***********************************************************/
      572        6        Z8EU$DETERMINE_EXPR_TYPE : PROC (EXPR$,
      573        7                                         EXPR_TYPE);
      574        8
      575        9    1     DCL EXPR$ PTR;
      576       10    1     DCL EXPR_TYPE SBIN WORD;
      577       11
      578       12        %EQU PHASE=1;
      579       13        %INCLUDE Z8A_DEFC;
      580       81        %INCLUDE Z8A_SUPP_MAC;
      581     2481        %INCLUDE Z8E_STACKS;
      582     4747        %INCLUDE Z8E_WINDOW;
      583     6817        %INCLUDE Z8A_ERR_NUMS;
      584     7581
      585     7582    1   DCL Z8AE$ERROR ENTRY(12);
      586     7583
      587     7584    2   DO CASE(EXPR$ -> LX_ITEM.ID);
      588     7585
      589     7586    2     CASE(%LX_TERMINAL);
      590     7587
      591     7588    3       DO CASE(EXPR$ -> LX_TERMINAL.SYMBOL);
      592     7589
      593     7590    3         CASE(%RSV_WRD_ANY);
      594     7591
      595     7592    3           EXPR_TYPE = %EXPR_TYPE_ANY;
      596     7593
      597     7594    3         CASE(%RSV_WRD_TRUE);
      598     7595
      599     7596    3           EXPR_TYPE = %EXPR_TYPE_TRUE;
      600     7597
      601     7598    3         CASE(%RSV_WRD_FALSE);
      602     7599
      603     7600    3           EXPR_TYPE = %EXPR_TYPE_FALSE;
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:143  
      604     7601
      605     7602    3         CASE(ELSE);
      606     7603
      607     7604    3           EXPR_TYPE = %EXPR_TYPE_EXPR;
      608     7605    3       END;
      609     7606
      610     7607    2     CASE(%BINARY_OP);
      611     7608
      612     7609    3       DO CASE(EXPR$ -> BINARY_OP.OP);
      613     7610
      614     7611    3         CASE(
      615     7612                   %SET_OF_RELATIONAL_OPS;
      616     7623    3             );
      617     7624
      618     7625    3           EXPR_TYPE = %EXPR_TYPE_COND;
      619     7626
      620     7627    3         CASE(ELSE);
      621     7628
      622     7629    3           EXPR_TYPE = %EXPR_TYPE_EXPR;
      623     7630
      624     7631    3       END;
      625     7632
      626     7633    2     CASE(%UNARY_OP);
      627     7634
      628     7635    3       DO CASE(EXPR$ -> UNARY_OP.OP);
      629     7636
      630     7637    3         CASE(
      631     7638                   %SET_OF_UNARY_ARITH;
      632     7642    3             );
      633     7643
      634     7644    3           EXPR_TYPE = %EXPR_TYPE_EXPR;
      635     7645
      636     7646    3         CASE(%OP_NOT);
      637     7647
      638     7648    3           CALL Z8EU$DETERMINE_EXPR_TYPE (EXPR$ -> UNARY_OP.LOP$,
      639     7649    3                                          EXPR_TYPE);
      640     7650
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:144  
      641     7651    3         CASE(ELSE);
      642     7652
      643     7653    3           EXPR_TYPE = %EXPR_TYPE_COND;
      644     7654    3       END;
      645     7655
      646     7656    2     CASE(%LX_ETT_ITEM);
      647     7657
      648     7658    2       EXPR_TYPE = %EXPR_TYPE_EXPR;
      649     7659
      650     7660    2     CASE(ELSE);
      651     7661
      652     7662    2       CALL Z8AE$ERROR (%E$UNEXPECTED_CASE);
      653     7663    2   END;
      654     7664
      655     7665    1   END Z8EU$DETERMINE_EXPR_TYPE;
      656     7666        %EOD;

PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:145  
--  Include file information  --

   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   Z8E_WINDOW.:Z8A6TOU  is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$DETERMINE_EXPR_TYPE.

   Procedure Z8EU$DETERMINE_EXPR_TYPE requires 522 words for executable code.
   Procedure Z8EU$DETERMINE_EXPR_TYPE requires 8 words of local(AUTO) storage.

PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:146  

 Object Unit name= Z8EU$DETERMINE_EXPR_TYPE                   File name= Z8EU.:Z8A6TOU
 UTS= AUG 09 '97 12:58:52.64 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none    90    132  LEX_SYMBOL
    2  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
    3  LblCom even  none    90    132  TEMP_LEX_SYMBOL
    4  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
    5   Proc  even  none   522   1012  Z8EU$DETERMINE_EXPR_TYPE
    6  RoData even  none     4      4  Z8EU$DETERMINE_EXPR_TYPE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        2  Z8EU$DETERMINE_EXPR_TYPE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std      12 Z8AE$ERROR
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:147  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:148  


      567        1        /*T***********************************************************/
      568        2        /*T*                                                         */
      569        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      570        4        /*T*                                                         */
      571        5        /*T***********************************************************/
      572        6        Z8EU$DETERMINE_EXPR_TYPE : PROC (EXPR$,

      6  5 000000   000000 700200 xent  Z8EU$DETERM* TSX0  ! X66_AUTO_2
         5 000001   000010 000002                    ZERO    8,2

      573        7                                         EXPR_TYPE);
      574        8
      575        9    1     DCL EXPR$ PTR;
      576       10    1     DCL EXPR_TYPE SBIN WORD;
      577       11
      578       12        %EQU PHASE=1;
      579       13        %INCLUDE Z8A_DEFC;
      580       81        %INCLUDE Z8A_SUPP_MAC;
      581     2481        %INCLUDE Z8E_STACKS;
      582     4747        %INCLUDE Z8E_WINDOW;
      583     6817        %INCLUDE Z8A_ERR_NUMS;
      584     7581
      585     7582    1   DCL Z8AE$ERROR ENTRY(12);
      586     7583
      587     7584    2   DO CASE(EXPR$ -> LX_ITEM.ID);

   7584  5 000002   200003 470500                    LDP0    @EXPR$,,AUTO
         5 000003   000000 471500                    LDP1    0,,PR0
         5 000004   100000 220100                    LDX0    0,,PR1
         5 000005   000007 100003                    CMPX0   7,DU
         5 000006   000010 602010 5                  TNC     s:7584+6,X0
         5 000007   001005 710000 5                  TRA     s:7662
         5 000010   000017 710000 5                  TRA     s:7588
         5 000011   001005 710000 5                  TRA     s:7662
         5 000012   001005 710000 5                  TRA     s:7662
         5 000013   001005 710000 5                  TRA     s:7662
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:149  
         5 000014   001001 710000 5                  TRA     s:7658
         5 000015   000707 710000 5                  TRA     s:7609
         5 000016   000751 710000 5                  TRA     s:7635

      588     7585
      589     7586    2     CASE(%LX_TERMINAL);

      590     7587
      591     7588    3       DO CASE(EXPR$ -> LX_TERMINAL.SYMBOL);

   7588  5 000017   100003 235100                    LDA     3,,PR1
         5 000020   000062 135007                    SBLA    50,DL
         5 000021   000644 115007                    CMPA    420,DL
         5 000022   000024 602005 5                  TNC     s:7588+5,AL
         5 000023   000703 710000 5                  TRA     s:7604
         5 000024   000670 710000 5                  TRA     s:7592
         5 000025   000703 710000 5                  TRA     s:7604
         5 000026   000703 710000 5                  TRA     s:7604
         5 000027   000703 710000 5                  TRA     s:7604
         5 000030   000703 710000 5                  TRA     s:7604
         5 000031   000703 710000 5                  TRA     s:7604
         5 000032   000703 710000 5                  TRA     s:7604
         5 000033   000703 710000 5                  TRA     s:7604
         5 000034   000703 710000 5                  TRA     s:7604
         5 000035   000703 710000 5                  TRA     s:7604
         5 000036   000703 710000 5                  TRA     s:7604
         5 000037   000703 710000 5                  TRA     s:7604
         5 000040   000703 710000 5                  TRA     s:7604
         5 000041   000703 710000 5                  TRA     s:7604
         5 000042   000703 710000 5                  TRA     s:7604
         5 000043   000703 710000 5                  TRA     s:7604
         5 000044   000703 710000 5                  TRA     s:7604
         5 000045   000703 710000 5                  TRA     s:7604
         5 000046   000703 710000 5                  TRA     s:7604
         5 000047   000703 710000 5                  TRA     s:7604
         5 000050   000703 710000 5                  TRA     s:7604
         5 000051   000703 710000 5                  TRA     s:7604
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:150  
         5 000052   000703 710000 5                  TRA     s:7604
         5 000053   000703 710000 5                  TRA     s:7604
         5 000054   000703 710000 5                  TRA     s:7604
         5 000055   000703 710000 5                  TRA     s:7604
         5 000056   000703 710000 5                  TRA     s:7604
         5 000057   000703 710000 5                  TRA     s:7604
         5 000060   000703 710000 5                  TRA     s:7604
         5 000061   000703 710000 5                  TRA     s:7604
         5 000062   000703 710000 5                  TRA     s:7604
         5 000063   000703 710000 5                  TRA     s:7604
         5 000064   000703 710000 5                  TRA     s:7604
         5 000065   000703 710000 5                  TRA     s:7604
         5 000066   000703 710000 5                  TRA     s:7604
         5 000067   000703 710000 5                  TRA     s:7604
         5 000070   000703 710000 5                  TRA     s:7604
         5 000071   000703 710000 5                  TRA     s:7604
         5 000072   000703 710000 5                  TRA     s:7604
         5 000073   000703 710000 5                  TRA     s:7604
         5 000074   000703 710000 5                  TRA     s:7604
         5 000075   000703 710000 5                  TRA     s:7604
         5 000076   000703 710000 5                  TRA     s:7604
         5 000077   000703 710000 5                  TRA     s:7604
         5 000100   000703 710000 5                  TRA     s:7604
         5 000101   000703 710000 5                  TRA     s:7604
         5 000102   000703 710000 5                  TRA     s:7604
         5 000103   000703 710000 5                  TRA     s:7604
         5 000104   000703 710000 5                  TRA     s:7604
         5 000105   000703 710000 5                  TRA     s:7604
         5 000106   000703 710000 5                  TRA     s:7604
         5 000107   000703 710000 5                  TRA     s:7604
         5 000110   000703 710000 5                  TRA     s:7604
         5 000111   000703 710000 5                  TRA     s:7604
         5 000112   000703 710000 5                  TRA     s:7604
         5 000113   000703 710000 5                  TRA     s:7604
         5 000114   000703 710000 5                  TRA     s:7604
         5 000115   000703 710000 5                  TRA     s:7604
         5 000116   000703 710000 5                  TRA     s:7604
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:151  
         5 000117   000703 710000 5                  TRA     s:7604
         5 000120   000703 710000 5                  TRA     s:7604
         5 000121   000703 710000 5                  TRA     s:7604
         5 000122   000703 710000 5                  TRA     s:7604
         5 000123   000703 710000 5                  TRA     s:7604
         5 000124   000703 710000 5                  TRA     s:7604
         5 000125   000703 710000 5                  TRA     s:7604
         5 000126   000703 710000 5                  TRA     s:7604
         5 000127   000703 710000 5                  TRA     s:7604
         5 000130   000703 710000 5                  TRA     s:7604
         5 000131   000703 710000 5                  TRA     s:7604
         5 000132   000703 710000 5                  TRA     s:7604
         5 000133   000703 710000 5                  TRA     s:7604
         5 000134   000703 710000 5                  TRA     s:7604
         5 000135   000703 710000 5                  TRA     s:7604
         5 000136   000703 710000 5                  TRA     s:7604
         5 000137   000703 710000 5                  TRA     s:7604
         5 000140   000703 710000 5                  TRA     s:7604
         5 000141   000703 710000 5                  TRA     s:7604
         5 000142   000703 710000 5                  TRA     s:7604
         5 000143   000703 710000 5                  TRA     s:7604
         5 000144   000703 710000 5                  TRA     s:7604
         5 000145   000703 710000 5                  TRA     s:7604
         5 000146   000703 710000 5                  TRA     s:7604
         5 000147   000703 710000 5                  TRA     s:7604
         5 000150   000703 710000 5                  TRA     s:7604
         5 000151   000703 710000 5                  TRA     s:7604
         5 000152   000703 710000 5                  TRA     s:7604
         5 000153   000703 710000 5                  TRA     s:7604
         5 000154   000703 710000 5                  TRA     s:7604
         5 000155   000703 710000 5                  TRA     s:7604
         5 000156   000703 710000 5                  TRA     s:7604
         5 000157   000703 710000 5                  TRA     s:7604
         5 000160   000703 710000 5                  TRA     s:7604
         5 000161   000703 710000 5                  TRA     s:7604
         5 000162   000703 710000 5                  TRA     s:7604
         5 000163   000703 710000 5                  TRA     s:7604
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:152  
         5 000164   000703 710000 5                  TRA     s:7604
         5 000165   000703 710000 5                  TRA     s:7604
         5 000166   000703 710000 5                  TRA     s:7604
         5 000167   000703 710000 5                  TRA     s:7604
         5 000170   000703 710000 5                  TRA     s:7604
         5 000171   000703 710000 5                  TRA     s:7604
         5 000172   000703 710000 5                  TRA     s:7604
         5 000173   000703 710000 5                  TRA     s:7604
         5 000174   000703 710000 5                  TRA     s:7604
         5 000175   000703 710000 5                  TRA     s:7604
         5 000176   000703 710000 5                  TRA     s:7604
         5 000177   000703 710000 5                  TRA     s:7604
         5 000200   000703 710000 5                  TRA     s:7604
         5 000201   000703 710000 5                  TRA     s:7604
         5 000202   000703 710000 5                  TRA     s:7604
         5 000203   000703 710000 5                  TRA     s:7604
         5 000204   000703 710000 5                  TRA     s:7604
         5 000205   000703 710000 5                  TRA     s:7604
         5 000206   000703 710000 5                  TRA     s:7604
         5 000207   000703 710000 5                  TRA     s:7604
         5 000210   000703 710000 5                  TRA     s:7604
         5 000211   000703 710000 5                  TRA     s:7604
         5 000212   000703 710000 5                  TRA     s:7604
         5 000213   000703 710000 5                  TRA     s:7604
         5 000214   000703 710000 5                  TRA     s:7604
         5 000215   000703 710000 5                  TRA     s:7604
         5 000216   000703 710000 5                  TRA     s:7604
         5 000217   000703 710000 5                  TRA     s:7604
         5 000220   000703 710000 5                  TRA     s:7604
         5 000221   000703 710000 5                  TRA     s:7604
         5 000222   000703 710000 5                  TRA     s:7604
         5 000223   000703 710000 5                  TRA     s:7604
         5 000224   000703 710000 5                  TRA     s:7604
         5 000225   000703 710000 5                  TRA     s:7604
         5 000226   000703 710000 5                  TRA     s:7604
         5 000227   000703 710000 5                  TRA     s:7604
         5 000230   000703 710000 5                  TRA     s:7604
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:153  
         5 000231   000703 710000 5                  TRA     s:7604
         5 000232   000703 710000 5                  TRA     s:7604
         5 000233   000703 710000 5                  TRA     s:7604
         5 000234   000703 710000 5                  TRA     s:7604
         5 000235   000703 710000 5                  TRA     s:7604
         5 000236   000703 710000 5                  TRA     s:7604
         5 000237   000703 710000 5                  TRA     s:7604
         5 000240   000703 710000 5                  TRA     s:7604
         5 000241   000703 710000 5                  TRA     s:7604
         5 000242   000703 710000 5                  TRA     s:7604
         5 000243   000703 710000 5                  TRA     s:7604
         5 000244   000703 710000 5                  TRA     s:7604
         5 000245   000703 710000 5                  TRA     s:7604
         5 000246   000703 710000 5                  TRA     s:7604
         5 000247   000703 710000 5                  TRA     s:7604
         5 000250   000703 710000 5                  TRA     s:7604
         5 000251   000703 710000 5                  TRA     s:7604
         5 000252   000703 710000 5                  TRA     s:7604
         5 000253   000703 710000 5                  TRA     s:7604
         5 000254   000677 710000 5                  TRA     s:7600
         5 000255   000703 710000 5                  TRA     s:7604
         5 000256   000703 710000 5                  TRA     s:7604
         5 000257   000703 710000 5                  TRA     s:7604
         5 000260   000703 710000 5                  TRA     s:7604
         5 000261   000703 710000 5                  TRA     s:7604
         5 000262   000703 710000 5                  TRA     s:7604
         5 000263   000703 710000 5                  TRA     s:7604
         5 000264   000703 710000 5                  TRA     s:7604
         5 000265   000703 710000 5                  TRA     s:7604
         5 000266   000703 710000 5                  TRA     s:7604
         5 000267   000703 710000 5                  TRA     s:7604
         5 000270   000703 710000 5                  TRA     s:7604
         5 000271   000703 710000 5                  TRA     s:7604
         5 000272   000703 710000 5                  TRA     s:7604
         5 000273   000703 710000 5                  TRA     s:7604
         5 000274   000703 710000 5                  TRA     s:7604
         5 000275   000703 710000 5                  TRA     s:7604
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:154  
         5 000276   000703 710000 5                  TRA     s:7604
         5 000277   000703 710000 5                  TRA     s:7604
         5 000300   000703 710000 5                  TRA     s:7604
         5 000301   000703 710000 5                  TRA     s:7604
         5 000302   000703 710000 5                  TRA     s:7604
         5 000303   000703 710000 5                  TRA     s:7604
         5 000304   000703 710000 5                  TRA     s:7604
         5 000305   000703 710000 5                  TRA     s:7604
         5 000306   000703 710000 5                  TRA     s:7604
         5 000307   000703 710000 5                  TRA     s:7604
         5 000310   000703 710000 5                  TRA     s:7604
         5 000311   000703 710000 5                  TRA     s:7604
         5 000312   000703 710000 5                  TRA     s:7604
         5 000313   000703 710000 5                  TRA     s:7604
         5 000314   000703 710000 5                  TRA     s:7604
         5 000315   000703 710000 5                  TRA     s:7604
         5 000316   000703 710000 5                  TRA     s:7604
         5 000317   000703 710000 5                  TRA     s:7604
         5 000320   000703 710000 5                  TRA     s:7604
         5 000321   000703 710000 5                  TRA     s:7604
         5 000322   000703 710000 5                  TRA     s:7604
         5 000323   000703 710000 5                  TRA     s:7604
         5 000324   000703 710000 5                  TRA     s:7604
         5 000325   000703 710000 5                  TRA     s:7604
         5 000326   000703 710000 5                  TRA     s:7604
         5 000327   000703 710000 5                  TRA     s:7604
         5 000330   000703 710000 5                  TRA     s:7604
         5 000331   000703 710000 5                  TRA     s:7604
         5 000332   000703 710000 5                  TRA     s:7604
         5 000333   000703 710000 5                  TRA     s:7604
         5 000334   000703 710000 5                  TRA     s:7604
         5 000335   000703 710000 5                  TRA     s:7604
         5 000336   000703 710000 5                  TRA     s:7604
         5 000337   000703 710000 5                  TRA     s:7604
         5 000340   000703 710000 5                  TRA     s:7604
         5 000341   000703 710000 5                  TRA     s:7604
         5 000342   000703 710000 5                  TRA     s:7604
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:155  
         5 000343   000703 710000 5                  TRA     s:7604
         5 000344   000703 710000 5                  TRA     s:7604
         5 000345   000703 710000 5                  TRA     s:7604
         5 000346   000703 710000 5                  TRA     s:7604
         5 000347   000703 710000 5                  TRA     s:7604
         5 000350   000703 710000 5                  TRA     s:7604
         5 000351   000703 710000 5                  TRA     s:7604
         5 000352   000703 710000 5                  TRA     s:7604
         5 000353   000703 710000 5                  TRA     s:7604
         5 000354   000703 710000 5                  TRA     s:7604
         5 000355   000703 710000 5                  TRA     s:7604
         5 000356   000703 710000 5                  TRA     s:7604
         5 000357   000703 710000 5                  TRA     s:7604
         5 000360   000703 710000 5                  TRA     s:7604
         5 000361   000703 710000 5                  TRA     s:7604
         5 000362   000703 710000 5                  TRA     s:7604
         5 000363   000703 710000 5                  TRA     s:7604
         5 000364   000703 710000 5                  TRA     s:7604
         5 000365   000703 710000 5                  TRA     s:7604
         5 000366   000703 710000 5                  TRA     s:7604
         5 000367   000703 710000 5                  TRA     s:7604
         5 000370   000703 710000 5                  TRA     s:7604
         5 000371   000703 710000 5                  TRA     s:7604
         5 000372   000703 710000 5                  TRA     s:7604
         5 000373   000703 710000 5                  TRA     s:7604
         5 000374   000703 710000 5                  TRA     s:7604
         5 000375   000703 710000 5                  TRA     s:7604
         5 000376   000703 710000 5                  TRA     s:7604
         5 000377   000703 710000 5                  TRA     s:7604
         5 000400   000703 710000 5                  TRA     s:7604
         5 000401   000703 710000 5                  TRA     s:7604
         5 000402   000703 710000 5                  TRA     s:7604
         5 000403   000703 710000 5                  TRA     s:7604
         5 000404   000703 710000 5                  TRA     s:7604
         5 000405   000703 710000 5                  TRA     s:7604
         5 000406   000703 710000 5                  TRA     s:7604
         5 000407   000703 710000 5                  TRA     s:7604
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:156  
         5 000410   000703 710000 5                  TRA     s:7604
         5 000411   000703 710000 5                  TRA     s:7604
         5 000412   000703 710000 5                  TRA     s:7604
         5 000413   000703 710000 5                  TRA     s:7604
         5 000414   000703 710000 5                  TRA     s:7604
         5 000415   000703 710000 5                  TRA     s:7604
         5 000416   000703 710000 5                  TRA     s:7604
         5 000417   000703 710000 5                  TRA     s:7604
         5 000420   000703 710000 5                  TRA     s:7604
         5 000421   000703 710000 5                  TRA     s:7604
         5 000422   000703 710000 5                  TRA     s:7604
         5 000423   000703 710000 5                  TRA     s:7604
         5 000424   000703 710000 5                  TRA     s:7604
         5 000425   000703 710000 5                  TRA     s:7604
         5 000426   000703 710000 5                  TRA     s:7604
         5 000427   000703 710000 5                  TRA     s:7604
         5 000430   000703 710000 5                  TRA     s:7604
         5 000431   000703 710000 5                  TRA     s:7604
         5 000432   000703 710000 5                  TRA     s:7604
         5 000433   000703 710000 5                  TRA     s:7604
         5 000434   000703 710000 5                  TRA     s:7604
         5 000435   000703 710000 5                  TRA     s:7604
         5 000436   000703 710000 5                  TRA     s:7604
         5 000437   000703 710000 5                  TRA     s:7604
         5 000440   000703 710000 5                  TRA     s:7604
         5 000441   000703 710000 5                  TRA     s:7604
         5 000442   000703 710000 5                  TRA     s:7604
         5 000443   000703 710000 5                  TRA     s:7604
         5 000444   000703 710000 5                  TRA     s:7604
         5 000445   000703 710000 5                  TRA     s:7604
         5 000446   000703 710000 5                  TRA     s:7604
         5 000447   000703 710000 5                  TRA     s:7604
         5 000450   000703 710000 5                  TRA     s:7604
         5 000451   000703 710000 5                  TRA     s:7604
         5 000452   000703 710000 5                  TRA     s:7604
         5 000453   000703 710000 5                  TRA     s:7604
         5 000454   000703 710000 5                  TRA     s:7604
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:157  
         5 000455   000703 710000 5                  TRA     s:7604
         5 000456   000703 710000 5                  TRA     s:7604
         5 000457   000703 710000 5                  TRA     s:7604
         5 000460   000703 710000 5                  TRA     s:7604
         5 000461   000703 710000 5                  TRA     s:7604
         5 000462   000703 710000 5                  TRA     s:7604
         5 000463   000703 710000 5                  TRA     s:7604
         5 000464   000703 710000 5                  TRA     s:7604
         5 000465   000703 710000 5                  TRA     s:7604
         5 000466   000703 710000 5                  TRA     s:7604
         5 000467   000703 710000 5                  TRA     s:7604
         5 000470   000703 710000 5                  TRA     s:7604
         5 000471   000703 710000 5                  TRA     s:7604
         5 000472   000703 710000 5                  TRA     s:7604
         5 000473   000703 710000 5                  TRA     s:7604
         5 000474   000703 710000 5                  TRA     s:7604
         5 000475   000703 710000 5                  TRA     s:7604
         5 000476   000703 710000 5                  TRA     s:7604
         5 000477   000703 710000 5                  TRA     s:7604
         5 000500   000703 710000 5                  TRA     s:7604
         5 000501   000703 710000 5                  TRA     s:7604
         5 000502   000703 710000 5                  TRA     s:7604
         5 000503   000703 710000 5                  TRA     s:7604
         5 000504   000703 710000 5                  TRA     s:7604
         5 000505   000703 710000 5                  TRA     s:7604
         5 000506   000703 710000 5                  TRA     s:7604
         5 000507   000703 710000 5                  TRA     s:7604
         5 000510   000703 710000 5                  TRA     s:7604
         5 000511   000703 710000 5                  TRA     s:7604
         5 000512   000703 710000 5                  TRA     s:7604
         5 000513   000703 710000 5                  TRA     s:7604
         5 000514   000703 710000 5                  TRA     s:7604
         5 000515   000703 710000 5                  TRA     s:7604
         5 000516   000703 710000 5                  TRA     s:7604
         5 000517   000703 710000 5                  TRA     s:7604
         5 000520   000703 710000 5                  TRA     s:7604
         5 000521   000703 710000 5                  TRA     s:7604
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:158  
         5 000522   000703 710000 5                  TRA     s:7604
         5 000523   000703 710000 5                  TRA     s:7604
         5 000524   000703 710000 5                  TRA     s:7604
         5 000525   000703 710000 5                  TRA     s:7604
         5 000526   000703 710000 5                  TRA     s:7604
         5 000527   000703 710000 5                  TRA     s:7604
         5 000530   000703 710000 5                  TRA     s:7604
         5 000531   000703 710000 5                  TRA     s:7604
         5 000532   000703 710000 5                  TRA     s:7604
         5 000533   000703 710000 5                  TRA     s:7604
         5 000534   000703 710000 5                  TRA     s:7604
         5 000535   000703 710000 5                  TRA     s:7604
         5 000536   000703 710000 5                  TRA     s:7604
         5 000537   000703 710000 5                  TRA     s:7604
         5 000540   000703 710000 5                  TRA     s:7604
         5 000541   000703 710000 5                  TRA     s:7604
         5 000542   000703 710000 5                  TRA     s:7604
         5 000543   000703 710000 5                  TRA     s:7604
         5 000544   000703 710000 5                  TRA     s:7604
         5 000545   000703 710000 5                  TRA     s:7604
         5 000546   000703 710000 5                  TRA     s:7604
         5 000547   000703 710000 5                  TRA     s:7604
         5 000550   000703 710000 5                  TRA     s:7604
         5 000551   000703 710000 5                  TRA     s:7604
         5 000552   000703 710000 5                  TRA     s:7604
         5 000553   000703 710000 5                  TRA     s:7604
         5 000554   000703 710000 5                  TRA     s:7604
         5 000555   000703 710000 5                  TRA     s:7604
         5 000556   000703 710000 5                  TRA     s:7604
         5 000557   000703 710000 5                  TRA     s:7604
         5 000560   000703 710000 5                  TRA     s:7604
         5 000561   000703 710000 5                  TRA     s:7604
         5 000562   000703 710000 5                  TRA     s:7604
         5 000563   000703 710000 5                  TRA     s:7604
         5 000564   000703 710000 5                  TRA     s:7604
         5 000565   000703 710000 5                  TRA     s:7604
         5 000566   000703 710000 5                  TRA     s:7604
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:159  
         5 000567   000703 710000 5                  TRA     s:7604
         5 000570   000703 710000 5                  TRA     s:7604
         5 000571   000703 710000 5                  TRA     s:7604
         5 000572   000703 710000 5                  TRA     s:7604
         5 000573   000703 710000 5                  TRA     s:7604
         5 000574   000703 710000 5                  TRA     s:7604
         5 000575   000703 710000 5                  TRA     s:7604
         5 000576   000703 710000 5                  TRA     s:7604
         5 000577   000703 710000 5                  TRA     s:7604
         5 000600   000703 710000 5                  TRA     s:7604
         5 000601   000703 710000 5                  TRA     s:7604
         5 000602   000703 710000 5                  TRA     s:7604
         5 000603   000703 710000 5                  TRA     s:7604
         5 000604   000703 710000 5                  TRA     s:7604
         5 000605   000703 710000 5                  TRA     s:7604
         5 000606   000703 710000 5                  TRA     s:7604
         5 000607   000703 710000 5                  TRA     s:7604
         5 000610   000703 710000 5                  TRA     s:7604
         5 000611   000703 710000 5                  TRA     s:7604
         5 000612   000703 710000 5                  TRA     s:7604
         5 000613   000703 710000 5                  TRA     s:7604
         5 000614   000703 710000 5                  TRA     s:7604
         5 000615   000703 710000 5                  TRA     s:7604
         5 000616   000703 710000 5                  TRA     s:7604
         5 000617   000703 710000 5                  TRA     s:7604
         5 000620   000703 710000 5                  TRA     s:7604
         5 000621   000703 710000 5                  TRA     s:7604
         5 000622   000703 710000 5                  TRA     s:7604
         5 000623   000703 710000 5                  TRA     s:7604
         5 000624   000703 710000 5                  TRA     s:7604
         5 000625   000703 710000 5                  TRA     s:7604
         5 000626   000703 710000 5                  TRA     s:7604
         5 000627   000703 710000 5                  TRA     s:7604
         5 000630   000703 710000 5                  TRA     s:7604
         5 000631   000703 710000 5                  TRA     s:7604
         5 000632   000703 710000 5                  TRA     s:7604
         5 000633   000703 710000 5                  TRA     s:7604
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:160  
         5 000634   000703 710000 5                  TRA     s:7604
         5 000635   000703 710000 5                  TRA     s:7604
         5 000636   000703 710000 5                  TRA     s:7604
         5 000637   000703 710000 5                  TRA     s:7604
         5 000640   000703 710000 5                  TRA     s:7604
         5 000641   000703 710000 5                  TRA     s:7604
         5 000642   000703 710000 5                  TRA     s:7604
         5 000643   000703 710000 5                  TRA     s:7604
         5 000644   000703 710000 5                  TRA     s:7604
         5 000645   000703 710000 5                  TRA     s:7604
         5 000646   000703 710000 5                  TRA     s:7604
         5 000647   000703 710000 5                  TRA     s:7604
         5 000650   000703 710000 5                  TRA     s:7604
         5 000651   000703 710000 5                  TRA     s:7604
         5 000652   000703 710000 5                  TRA     s:7604
         5 000653   000703 710000 5                  TRA     s:7604
         5 000654   000703 710000 5                  TRA     s:7604
         5 000655   000703 710000 5                  TRA     s:7604
         5 000656   000703 710000 5                  TRA     s:7604
         5 000657   000703 710000 5                  TRA     s:7604
         5 000660   000703 710000 5                  TRA     s:7604
         5 000661   000703 710000 5                  TRA     s:7604
         5 000662   000703 710000 5                  TRA     s:7604
         5 000663   000703 710000 5                  TRA     s:7604
         5 000664   000703 710000 5                  TRA     s:7604
         5 000665   000703 710000 5                  TRA     s:7604
         5 000666   000703 710000 5                  TRA     s:7604
         5 000667   000673 710000 5                  TRA     s:7596

      592     7589
      593     7590    3         CASE(%RSV_WRD_ANY);

      594     7591
      595     7592    3           EXPR_TYPE = %EXPR_TYPE_ANY;

   7592  5 000670   200004 473500                    LDP3    @EXPR_TYPE,,AUTO
         5 000671   300000 450100                    STZ     0,,PR3
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:161  
         5 000672   001011 710000 5                  TRA     s:7665

      596     7593
      597     7594    3         CASE(%RSV_WRD_TRUE);

      598     7595
      599     7596    3           EXPR_TYPE = %EXPR_TYPE_TRUE;

   7596  5 000673   000001 236007                    LDQ     1,DL
         5 000674   200004 473500                    LDP3    @EXPR_TYPE,,AUTO
         5 000675   300000 756100                    STQ     0,,PR3
         5 000676   001011 710000 5                  TRA     s:7665

      600     7597
      601     7598    3         CASE(%RSV_WRD_FALSE);

      602     7599
      603     7600    3           EXPR_TYPE = %EXPR_TYPE_FALSE;

   7600  5 000677   000002 236007                    LDQ     2,DL
         5 000700   200004 473500                    LDP3    @EXPR_TYPE,,AUTO
         5 000701   300000 756100                    STQ     0,,PR3
         5 000702   001011 710000 5                  TRA     s:7665

      604     7601
      605     7602    3         CASE(ELSE);

      606     7603
      607     7604    3           EXPR_TYPE = %EXPR_TYPE_EXPR;

   7604  5 000703   000004 236007                    LDQ     4,DL
         5 000704   200004 473500                    LDP3    @EXPR_TYPE,,AUTO
         5 000705   300000 756100                    STQ     0,,PR3

      608     7605    3       END;

   7605  5 000706   001011 710000 5                  TRA     s:7665
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:162  

      609     7606
      610     7607    2     CASE(%BINARY_OP);

      611     7608
      612     7609    3       DO CASE(EXPR$ -> BINARY_OP.OP);

   7609  5 000707   100003 235100                    LDA     3,,PR1
         5 000710   000016 135007                    SBLA    14,DL
         5 000711   000025 115007                    CMPA    21,DL
         5 000712   000714 602005 5                  TNC     s:7609+5,AL
         5 000713   000745 710000 5                  TRA     s:7629
         5 000714   000741 710000 5                  TRA     s:7625
         5 000715   000741 710000 5                  TRA     s:7625
         5 000716   000745 710000 5                  TRA     s:7629
         5 000717   000745 710000 5                  TRA     s:7629
         5 000720   000745 710000 5                  TRA     s:7629
         5 000721   000745 710000 5                  TRA     s:7629
         5 000722   000745 710000 5                  TRA     s:7629
         5 000723   000745 710000 5                  TRA     s:7629
         5 000724   000741 710000 5                  TRA     s:7625
         5 000725   000741 710000 5                  TRA     s:7625
         5 000726   000741 710000 5                  TRA     s:7625
         5 000727   000741 710000 5                  TRA     s:7625
         5 000730   000741 710000 5                  TRA     s:7625
         5 000731   000741 710000 5                  TRA     s:7625
         5 000732   000745 710000 5                  TRA     s:7629
         5 000733   000745 710000 5                  TRA     s:7629
         5 000734   000745 710000 5                  TRA     s:7629
         5 000735   000745 710000 5                  TRA     s:7629
         5 000736   000745 710000 5                  TRA     s:7629
         5 000737   000745 710000 5                  TRA     s:7629
         5 000740   000741 710000 5                  TRA     s:7625

      613     7610
      614     7611    3         CASE(

PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:163  
      615     7612                   %SET_OF_RELATIONAL_OPS;
      616     7623    3             );
      617     7624
      618     7625    3           EXPR_TYPE = %EXPR_TYPE_COND;

   7625  5 000741   000003 236007                    LDQ     3,DL
         5 000742   200004 473500                    LDP3    @EXPR_TYPE,,AUTO
         5 000743   300000 756100                    STQ     0,,PR3
         5 000744   001011 710000 5                  TRA     s:7665

      619     7626
      620     7627    3         CASE(ELSE);

      621     7628
      622     7629    3           EXPR_TYPE = %EXPR_TYPE_EXPR;

   7629  5 000745   000004 236007                    LDQ     4,DL
         5 000746   200004 473500                    LDP3    @EXPR_TYPE,,AUTO
         5 000747   300000 756100                    STQ     0,,PR3

      623     7630
      624     7631    3       END;

   7631  5 000750   001011 710000 5                  TRA     s:7665

      625     7632
      626     7633    2     CASE(%UNARY_OP);

      627     7634
      628     7635    3       DO CASE(EXPR$ -> UNARY_OP.OP);

   7635  5 000751   100003 235100                    LDA     3,,PR1
         5 000752   000003 115007                    CMPA    3,DL
         5 000753   000755 602005 5                  TNC     s:7635+4,AL
         5 000754   000775 710000 5                  TRA     s:7653
         5 000755   000764 710000 5                  TRA     s:7648
         5 000756   000760 710000 5                  TRA     s:7644
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:164  
         5 000757   000760 710000 5                  TRA     s:7644

      629     7636
      630     7637    3         CASE(

      631     7638                   %SET_OF_UNARY_ARITH;
      632     7642    3             );
      633     7643
      634     7644    3           EXPR_TYPE = %EXPR_TYPE_EXPR;

   7644  5 000760   000004 236007                    LDQ     4,DL
         5 000761   200004 473500                    LDP3    @EXPR_TYPE,,AUTO
         5 000762   300000 756100                    STQ     0,,PR3
         5 000763   001011 710000 5                  TRA     s:7665

      635     7645
      636     7646    3         CASE(%OP_NOT);

      637     7647
      638     7648    3           CALL Z8EU$DETERMINE_EXPR_TYPE (EXPR$ -> UNARY_OP.LOP$,

   7648  5 000764   200004 236100                    LDQ     @EXPR_TYPE,,AUTO
         5 000765   200007 756100                    STQ     @EXPR_TYPE+3,,AUTO
         5 000766   100001 633500                    EPPR3   1,,PR1
         5 000767   200006 453500                    STP3    @EXPR_TYPE+2,,AUTO
         5 000770   200006 630500                    EPPR0   @EXPR_TYPE+2,,AUTO
         5 000771   000000 631400 6                  EPPR1   0
         5 000772   000000 701000 5                  TSX1    s:6
         5 000773   000000 011000                    NOP     0
         5 000774   001011 710000 5                  TRA     s:7665

      639     7649    3                                          EXPR_TYPE);
      640     7650
      641     7651    3         CASE(ELSE);

      642     7652
      643     7653    3           EXPR_TYPE = %EXPR_TYPE_COND;
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:165  

   7653  5 000775   000003 236007                    LDQ     3,DL
         5 000776   200004 473500                    LDP3    @EXPR_TYPE,,AUTO
         5 000777   300000 756100                    STQ     0,,PR3

      644     7654    3       END;

   7654  5 001000   001011 710000 5                  TRA     s:7665

      645     7655
      646     7656    2     CASE(%LX_ETT_ITEM);

      647     7657
      648     7658    2       EXPR_TYPE = %EXPR_TYPE_EXPR;

   7658  5 001001   000004 235007                    LDA     4,DL
         5 001002   200004 473500                    LDP3    @EXPR_TYPE,,AUTO
         5 001003   300000 755100                    STA     0,,PR3
         5 001004   001011 710000 5                  TRA     s:7665

      649     7659
      650     7660    2     CASE(ELSE);

      651     7661
      652     7662    2       CALL Z8AE$ERROR (%E$UNEXPECTED_CASE);

   7662  5 001005   000003 630400 6                  EPPR0   3
         5 001006   000001 631400 6                  EPPR1   1
         5 001007   000000 701000 xent               TSX1    Z8AE$ERROR
         5 001010   000000 011000                    NOP     0

      653     7663    2   END;

      654     7664
      655     7665    1   END Z8EU$DETERMINE_EXPR_TYPE;

   7665  5 001011   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:166  
      656     7666        %EOD;

PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:167  
--  Include file information  --

   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   Z8E_WINDOW.:Z8A6TOU  is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$DETERMINE_EXPR_TYPE.
PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:168  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 002 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 003 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 004 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:169  
  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @EXPR$                     4-0-0/w PTR         r     1 @EXPR_TYPE
    *0-0-0/w PTR         r     1 EXPR$                     *0-0-0/w SBIN        r     1 EXPR_TYPE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)   r     1 BINARY_OP                  0-0-0/w STRC(288)         1 CALL_STMT
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(288)         1 ILS_LIST                   0-0-0/w STRC(288)         1 INSPECT_1_STMT
     0-0-0/w STRC(288)         1 INSPECT_2_STMT             0-0-0/w STRC(288)         1 INSPECT_4_STMT
     0-0-0/w STRC(288)         1 LA_ITEM                    0-0-0/w STRC(504)         1 LX_CD_INPUT
     0-0-0/w STRC(324)         1 LX_CD_I_O                  0-0-0/w STRC(396)         1 LX_CD_OUTPUT
     0-0-0/w STRC(288)         1 LX_ETT_ITEM                0-0-0/w STRC(288)   r     1 LX_ITEM
     0-0-0/w STRC(288)         1 LX_LARGE                   0-0-0/w STRC(288)         1 LX_LIST
     0-0-0/w STRC(1224)        1 LX_REC_DECL                0-0-0/w STRC(864)         1 LX_REPORT_REC
     0-0-0/w STRC(288)   r     1 LX_TERMINAL                0-0-0/w STRC(288)         1 MULTIPLY_STMT
     0-0-0/w STRC(36864)       1 PAGE                       0-0-0/w STRC(288)         1 READ_STMT
     0-0-0/w STRC(288)         1 REWRITE_STMT               0-0-0/w STRC(288)         1 START_STMT
     0-0-0/w STRC(252)         1 STRING_STMT                0-0-0/w STRC(288)         1 SUBTRACT_STMT
     0-0-0/w STRC(288)   r     1 UNARY_OP                   0-0-0/w STRC(288)         1 UNSTRING_STMT
     0-0-0/w STRC(288)         1 WRITE_STMT

PL6.E3A0      #009=Z8EU$DETERMINE_EXPR_TYPE File=Z8EU.:Z8A6TSI                   SAT 08/09/97 12:58 Page:170  

   Procedure Z8EU$DETERMINE_EXPR_TYPE requires 522 words for executable code.
   Procedure Z8EU$DETERMINE_EXPR_TYPE requires 8 words of local(AUTO) storage.

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:171  
      657        1        /*M*  Z8EU$MAKE_INIT_LTS -- Build tree of INIT_LTS items */
      658        2        /*T***********************************************************/
      659        3        /*T*                                                         */
      660        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      661        5        /*T*                                                         */
      662        6        /*T***********************************************************/
      663        7        /*P*
      664        8               NAME:  Z8EU$MAKE_INIT_LTS
      665        9             AUTHOR:  Albert Wigchert
      666       10            PURPOSE:  Build tree of INIT_LTS items for INITIALIZEd identifier.
      667       11        */
      668       12        /*D*
      669       13               NAME:  Z8EU$MAKE_INIT_LTS
      670       14               CALL:  CALL Z8EU$MAKE_INIT_LTS (IDENT_ST$, SUBSCR$, OFF, INIT_LTS$);
      671       15              INPUT:  IDENT_ST$ -- ST item for the identifier.
      672       16                      SUBSCR$ -- ETT item for all subscripts already applied.
      673       17                      OFF -- offset from identifier, to be used with subscripts.
      674       18             OUTPUT:  INIT_LTS$ -- pointer to tree of INIT_LTS items.
      675       19        DESCRIPTION:  Walk the tree of QLT items for a data item and everything
      676       20                      subordinate to it. Generate an INIT_LTS item for each field that
      677       21                      can be initialized separately, combining adjacent fields and
      678       22                      collapsing tables to scalars if possible.
      679       23        */
      680       24        %EJECT;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:172  
      681       25        Z8EU$MAKE_INIT_LTS: PROC (IDENT_ST$,
      682       26                                  SUBSCR$,
      683       27                                  OFF,
      684       28                                  INIT_LTS$);
      685       29        %SET PHASE = 1;
      686       30        %INCLUDE Z8A_DEFC;
      687       98        %INCLUDE Z8A_SUPP_MAC;
      688     2498        %INCLUDE Z8A_MKCN;
      689     2515        %INCLUDE Z8A_DNT;
      690     2736        %INCLUDE Z8A_ETT;
      691     3037        %INCLUDE Z8A_QLT;
      692     3143        %INCLUDE Z8A_ST;
      693     6802        %INCLUDE Z8A_TYPES;
      694     6976        %INCLUDE Z8A_LTS;
      695     9053    1   DCL IDENT_ST$      PTR;
      696     9054    1   DCL SUBSCR$        PTR;
      697     9055    1   DCL OFF            SBIN;
      698     9056    1   DCL INIT_LTS$      PTR;
      699     9057    1   DCL INDICES$ (0:47) PTR STATIC;
      700     9058    1   DCL LAST_CREATED   SBIN STATIC INIT (-1);
      701     9059    1   DCL LAST_IN_USE    SBIN STATIC INIT (-1);
      702     9060    1   DCL IDENT_QLT$     PTR;
      703     9061    1   DCL IDENT_BASE$    PTR;
      704     9062    1   DCL IDENT_DIM      UBIN;
      705     9063    1   DCL SON_OFF        SBIN;
      706     9064    1   DCL SON_DIM        UBIN;
      707     9065    1   DCL SON_BASE$      PTR;
      708     9066    1   DCL SON_QLT$       PTR;
      709     9067    1   DCL SON_ST$        PTR;
      710     9068    1   DCL SON_LTS$       PTR;
      711     9069    1   DCL PREV_SON_ST$   PTR;
      712     9070    1   DCL PREV_SON_LTS$  PTR;
      713     9071    1   DCL SUBSCR1$       PTR;
      714     9072    1   DCL SUBSCR2$       PTR;
      715     9073    1   DCL DIMS$          PTR;
      716     9074    1   DCL CONST$         PTR;
      717     9075    1   DCL ETT$$          PTR;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:173  
      718     9076    1   DCL 1 DNA_ROPCON   STATIC,
      719     9077    1         2 *          UBIN HALF HALIGNED INIT (0),
      720     9078    1         2 CN         UBIN (2) UNAL,
      721     9079    1         2 *          BIT (1) INIT ('0'B),
      722     9080    1         2 TA         BIT (2) INIT (%ADSC9),
      723     9081    1         2 *          BIT (7) INIT ('0'B),
      724     9082    1         2 N          UBIN (6) UNAL;
      725     9083    1   DCL 1 DNA_BCD_ROPCON REDEF DNA_ROPCON,
      726     9084    1         2 *          UBIN HALF HALIGNED,
      727     9085    1         2 CN         UBIN (3) UNAL,
      728     9086    1         2 TA         BIT (2),
      729     9087    1         2 *          BIT (13);
      730     9088    1   DCL Z8AC$MAKE_CONST                ENTRY(1);
      731     9089    1   DCL Z8AF$FORME                     ENTRY(4);
      732     9090    1   DCL Z8AF$NEW_BASE                  ENTRY(3);
      733     9091    1   DCL Z8AT$CREATE_TEMP_WITH_BASE     ENTRY(2);
      734     9092        %EJECT;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:174  
      735     9093    1     IDENT_QLT$ = IDENT_ST$ -> VARIABLE.QLT$;
      736     9094          %GET_LTS (@ID = %DIMS, @ST$ = IDENT_ST$, @RETURN$ = DIMS$);
      737     9137    1     IF DIMS$ = ADDR (NIL) OR IDENT_QLT$ -> QLT.B.OCCURS = FALSE THEN
      738     9138    1       IDENT_DIM = 0;
      739     9139    1     ELSE
      740     9140    1       IDENT_DIM = DIMS$ -> DIMS.D.DIM ((DIMS$ -> DIMS.N - %MIN_DIM_SIZE) / %
              9140                NO_WORDS_PER_DIM);
      741     9141          %NEW_INIT_LTS (@POINTER = INIT_LTS$,
      742     9142                         @SUBSCR$ = SUBSCR$,
      743     9143                         @OFF     = OFF,
      744     9144                         @DIMS    = IDENT_DIM);
      745     9250    1     IF IDENT_ST$ -> VARIABLE.B.ELEMENTARY THEN
      746     9251    2       DO;
      747     9252    2         SON_DIM = 0;
      748     9253    3         DO CASE (IDENT_ST$ -> VARIABLE.TYPE);
      749     9254    3           CASE (%TYC);
      750     9255    3             INIT_LTS$ -> INIT_LTS.BCD = TRUE;
      751     9256    3             IF IDENT_ST$ -> VARIABLE.NDSC.TN = %ADSC9 /* Not overpunched */
      752     9257    3                 AND IDENT_ST$ -> VARIABLE.NDSC.S = %NO_SIGN THEN
      753     9258    3               INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;
      754     9259    3           CASE (%TYB);
      755     9260    3             INIT_LTS$ -> INIT_LTS.BCD = TRUE;
      756     9261    3             IF NOT IDENT_ST$ -> VARIABLE.B.SUB_CLASS.EDITED THEN
      757     9262    4               DO;
      758     9263    4                 INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;
      759     9264    4                 INIT_LTS$ -> INIT_LTS.FILL = %BITASC ('020'O); /* GBCD space */
      760     9265    4               END;
      761     9266    3           CASE (%TYH, %TYI, %TYJ, %TYK);
      762     9267    3             INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;
      763     9268    3           CASE (%TYD);
      764     9269    3             IF IDENT_ST$ -> VARIABLE.NDSC.S = %NO_SIGN THEN
      765     9270    4               DO;
      766     9271    4                 IF IDENT_ST$ -> VARIABLE.NDSC.TN = %NDSC9 THEN
      767     9272    5                   DO;
      768     9273    5                     INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;
      769     9274    5                     INIT_LTS$ -> INIT_LTS.FILL = '0';
      770     9275    5                   END;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:175  
      771     9276    4                 ELSE IF NOT IDENT_QLT$ -> QLT.B.DIGIT THEN
      772     9277    4                   INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;
      773     9278    4               END;
      774     9279    3           CASE (%TYF);
      775     9280    3             IF IDENT_ST$ -> VARIABLE.NDSC.TN = %NDSC9 /* Not overpunched */
      776     9281    3                 AND IDENT_ST$ -> VARIABLE.NDSC.S = %NO_SIGN THEN
      777     9282    4               DO;
      778     9283    4                 INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;
      779     9284    4                 INIT_LTS$ -> INIT_LTS.FILL = %BITASC ('360'O); /* EBCDIC ZERO */
      780     9285    4               END;
      781     9286    3           CASE (%TYE);
      782     9287    3             IF NOT IDENT_ST$ -> VARIABLE.B.SUB_CLASS.EDITED THEN
      783     9288    4               DO;
      784     9289    4                 INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;
      785     9290    4                 INIT_LTS$ -> INIT_LTS.FILL = %BITASC ('100'O); /* EBCDIC space */
      786     9291    4               END;
      787     9292    3           CASE (%TYA);
      788     9293    3             IF NOT IDENT_ST$ -> VARIABLE.B.SUB_CLASS.EDITED THEN
      789     9294    4               DO;
      790     9295    4                 INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;
      791     9296    4                 INIT_LTS$ -> INIT_LTS.FILL = ' ';
      792     9297    4               END;
      793     9298    3         END; /* CASE */
      794     9299    2         CALL Z8AF$NEW_BASE (IDENT_ST$, ADDR (NIL), INIT_LTS$ -> INIT_LTS.BASE$);
      795     9300    3         DO CASE (IDENT_ST$ -> VARIABLE.B.CLASS);
      796     9301    3           CASE (%CLASS_POINTER);
      797     9302    3             INIT_LTS$ -> INIT_LTS.LENGTH = 4;
      798     9303    3             INIT_LTS$ -> INIT_LTS.POINTER = TRUE;
      799     9304    3           CASE (%CLASS_NUMERIC);
      800     9305    3             DNA_ROPCON.N = IDENT_ST$ -> VARIABLE.NDSC.N;
      801     9306    3             DNA_ROPCON.CN = IDENT_ST$ -> VARIABLE.ADSC.CN;
      802     9307    3             INIT_LTS$ -> INIT_LTS.LENGTH = IDENT_ST$ -> VARIABLE.NDSC.N;
      803     9308    4             DO CASE (IDENT_ST$ -> VARIABLE.TYPE);
      804     9309    4               CASE (%TYD);
      805     9310    4                 IF IDENT_ST$ -> VARIABLE.NDSC.TN = %NDSC4 THEN
      806     9311    5                   DO;
      807     9312    5                     IF IDENT_ST$ -> VARIABLE.B.DIGIT THEN
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:176  
      808     9313    5                       DNA_ROPCON.TA = %ADSC4;
      809     9314    5                     ELSE
      810     9315    6                       DO;
      811     9316    6                         INIT_LTS$ -> INIT_LTS.LENGTH = (INIT_LTS$ -> INIT_LTS.LENGTH +
              9316                                  2) / 2;
      812     9317    6                         DNA_ROPCON.N = (DNA_ROPCON.N + 1) / 2; /* In units of bytes */
      813     9318    6                       END;
      814     9319    5                   END;
      815     9320    4               CASE (%TYC);
      816     9321    4                 DNA_BCD_ROPCON.CN = IDENT_ST$ -> VARIABLE.NDSC.CN;
      817     9322    4                 DNA_BCD_ROPCON.TA = %ADSC6;
      818     9323    4             END;
      819     9324    3             CALL Z8AF$FORME (%DNA,
      820     9325    3                              INIT_LTS$ -> INIT_LTS.BASE$,
      821     9326    3                              DNA_ROPCON,
      822     9327    3                              INIT_LTS$ -> INIT_LTS.BASE$);
      823     9328                  /* DNA needed for MFILL, move one table element to another, etc. */
      824     9329    3             DNA_ROPCON = '0'B;
      825     9330    3           CASE (ELSE);
      826     9331                  %GET_ADSC_LEN (ST$ = IDENT_ST$, RTN = INIT_LTS$ -> INIT_LTS.LENGTH);
      827     9342    3         END; /* CASE */
      828     9343    2       END; /* ELEMENTARY */
      829     9344    1     ELSE
      830     9345    2       DO; /* GROUP ITEM */
      831     9346    2         SON_QLT$ = IDENT_QLT$ -> QLT.SON; /* Cannot be ADDR (NIL) */
      832     9347    2         PREV_SON_LTS$ = ADDR (NIL);
      833     9348    2         PREV_SON_ST$ = ADDR (NIL);
      834     9349    2         INIT_LTS$ -> INIT_LTS.GROUP = TRUE;
      835     9350              %GET_ADSC_LEN (ST$ = IDENT_ST$, RTN = INIT_LTS$ -> INIT_LTS.LENGTH);
      836     9361    2         IF INIT_LTS$ -> INIT_LTS.DIMS <= 1 OR LAST_IN_USE < 0 THEN
      837     9362    2           SUBSCR1$ = SUBSCR$;
      838     9363    2         ELSE IF SUBSCR$ = ADDR (NIL) THEN
      839     9364    2           SUBSCR1$ = INDICES$ (LAST_IN_USE);
      840     9365    2         ELSE
      841     9366    2           CALL Z8AF$FORME (%ADI, SUBSCR$, INDICES$ (LAST_IN_USE), SUBSCR1$);
      842     9367    3         DO UNTIL SON_QLT$ = ADDR (NIL);
      843     9368    3           SON_DIM = 0;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:177  
      844     9369    3           SON_ST$ = SON_QLT$ -> QLT.ST$;
      845     9370    3           IF SON_QLT$ -> QLT.B.RENAMES
      846     9371    3               OR SON_ST$ -> ST.ID = %CONDITION
      847     9372    3               OR SON_ST$ -> VARIABLE.B.REDEF_SUB THEN; /* Ignore item */
      848     9373    3           ELSE IF SON_ST$ -> VARIABLE.TYPE = %TYX
      849     9374    3               OR SON_ST$ -> VARIABLE.TYPE = %TYY
      850     9375    3               OR SON_ST$ -> VARIABLE.DNT$ -> DNT.TEXT.NAME = 'FILLER' THEN
      851     9376    4             DO;
      852     9377    4               INIT_LTS$ -> INIT_LTS.FILLER = TRUE; /* Uninitializable field found */
      853     9378    4               INIT_LTS$ -> INIT_LTS.MFILLABLE = FALSE;
      854     9379    4             END;
      855     9380    3           ELSE
      856     9381    4             DO; /* Initializable item */
      857     9382    4               IF SUBSCR1$ = ADDR (NIL) THEN
      858     9383    4                 SUBSCR2$ = SUBSCR1$;
      859     9384    4               ELSE IF SON_ST$ -> VARIABLE.B.DIGIT THEN
      860     9385    4                 CALL Z8AF$FORME (%MPI2, SUBSCR1$, 1, SUBSCR2$);
      861     9386    4               ELSE IF SON_ST$ -> VARIABLE.TYPE = %TYB OR
      862     9387    4                   SON_ST$ -> VARIABLE.TYPE = %TYC THEN
      863     9388    5                 DO;
      864     9389    5                   MKCN.CON = 3;
      865     9390    5                   CALL Z8AC$MAKE_CONST (ETT$$);
      866     9391    5                   CALL Z8AF$FORME (%MPI, SUBSCR1$, ETT$$, SUBSCR2$);
      867     9392    5                   CALL Z8AF$FORME (%DVI2, SUBSCR2$, 1, SUBSCR2$);
      868     9393    5                 END;
      869     9394    4               ELSE
      870     9395    4                 SUBSCR2$ = SUBSCR1$;
      871     9396    4               IF SON_QLT$ -> QLT.B.OCCURS THEN
      872     9397    5                 DO;
      873     9398                        %GET_LTS (@ID = %DIMS, @ST$ = SON_ST$, @RETURN$ = DIMS$);
      874     9441    5                   SON_DIM = DIMS$ -> DIMS.D.DIM ((DIMS$ -> DIMS.N - %MIN_DIM_SIZE) /
      875     9442    5                               %NO_WORDS_PER_DIM);
      876     9443    5                   IF SON_DIM > 1 THEN
      877     9444    6                     DO;
      878     9445    6                       LAST_IN_USE = LAST_IN_USE + 1;
      879     9446    6                       IF LAST_IN_USE > LAST_CREATED THEN
      880     9447    7                         DO;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:178  
      881     9448    7                           LAST_CREATED = LAST_IN_USE;
      882     9449    7                           CALL Z8AT$CREATE_TEMP_WITH_BASE (%SCALAR, INDICES$ (
              9449                                    LAST_IN_USE));
      883     9450    7                         END;
      884     9451    6                     END; /* SON_DIM > 1 */
      885     9452    5                 END; /* SON_QLT$ -> QLT.B.OCCURS */
      886     9453    4               SON_OFF = OFF;
      887     9454    5               DO CASE (SON_ST$ -> VARIABLE.TYPE);
      888     9455    5                 CASE (%TYD);
      889     9456    5                   IF SON_ST$ -> VARIABLE.NDSC.TN = %NDSC4 THEN
      890     9457    5                     SON_OFF = SON_OFF * 2;
      891     9458    5                 CASE (%TYB, %TYC);
      892     9459    5                   SON_OFF = SON_OFF * 3 / 2;
      893     9460    5                 CASE (%TYI, %TYP, %TYR, %TYQ);
      894     9461    5                   SON_OFF = SON_OFF / 4;
      895     9462    5               END;
      896     9463    4               CALL Z8EU$MAKE_INIT_LTS (SON_ST$, SUBSCR2$, SON_OFF, SON_LTS$);
      897     9464    4               IF NOT SON_LTS$ -> INIT_LTS.GROUP AND SUBSCR2$ ~= ADDR (NIL) THEN
      898     9465    5                 DO CASE (SON_ST$ -> VARIABLE.TYPE);
      899     9466    5                   CASE (%TYD);
      900     9467    5                     IF SON_ST$ -> VARIABLE.NDSC.TN = %NDSC4 AND
      901     9468    5                         NOT SON_ST$ -> VARIABLE.B.DIGIT THEN
      902     9469    5                       CALL Z8AF$FORME (%MPI2, SUBSCR2$, 1, SUBSCR2$);
      903     9470    5                   CASE (%TYI, %TYP, %TYR, %TYQ);
      904     9471    5                     CALL Z8AF$FORME (%DVI2, SUBSCR2$, 2, SUBSCR2$);
      905     9472    5                 END;
      906     9473    4               IF SON_DIM > 1 THEN
      907     9474    5                 DO;
      908     9475    5                   IF SON_LTS$ -> INIT_LTS.MFILLABLE AND
      909     9476    5                       (NOT SON_LTS$ -> INIT_LTS.BCD OR
      910     9477    5                          (MOD (SON_LTS$ -> INIT_LTS.LENGTH, 3) = 0 AND
      911     9478    5                            (SON_ST$ -> VARIABLE.NDSC.CN = 0 OR
      912     9479    5                             SON_ST$ -> VARIABLE.NDSC.CN = 4)) OR
      913     9480    5                        SON_ST$ -> VARIABLE.TYPE = %TYA) THEN
      914     9481    6                     DO;
      915     9482    6                       IF SON_LTS$ -> INIT_LTS.BASE$ -> ETT.ID = %SIZ
      916     9483    6                         THEN SON_BASE$ = SON_LTS$ -> INIT_LTS.BASE$ -> ETT.LOP;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:179  
      917     9484    6                         ELSE SON_BASE$ = SON_LTS$ -> INIT_LTS.BASE$;
      918     9485    6                       SON_LTS$ -> INIT_LTS.LENGTH = SON_LTS$ -> INIT_LTS.LENGTH *
              9485                                SON_DIM;
      919     9486    6                       SON_LTS$ -> INIT_LTS.DIMS = 0; /* Collapsed to scalar */
      920     9487    6                       SON_LTS$ -> INIT_LTS.GROUP = TRUE;
      921     9488    6                       MKCN.CON = SON_LTS$ -> INIT_LTS.LENGTH;
      922     9489    6                       CALL Z8AC$MAKE_CONST (ETT$$);
      923     9490    6                       CALL Z8AF$FORME (%SIZ, SON_BASE$, ETT$$, SON_LTS$ -> INIT_LTS.
              9490                                BASE$);
      924     9491    6                       SON_LTS$ -> INIT_LTS.SON$ = ADDR (NIL);
      925     9492    6                       SON_LTS$ -> INIT_LTS.SUBSCR$ = SUBSCR1$;
      926     9493    6                     END;
      927     9494    5                   ELSE
      928     9495    6                     DO;
      929     9496    6                       SON_LTS$ -> INIT_LTS.INDEX$ = INDICES$ (LAST_IN_USE);
      930     9497    6                       SON_LTS$ -> INIT_LTS.SUBSCR$ = SUBSCR2$;
      931     9498    6                       SON_LTS$ -> INIT_LTS.SPAN = DIMS$ -> DIMS.D.SPAN
      932     9499    6                           ((DIMS$ -> DIMS.N - %MIN_DIM_SIZE) / %NO_WORDS_PER_DIM);
      933     9500    7                       DO CASE (SON_ST$ -> VARIABLE.TYPE);
      934     9501    7                         CASE (%TYD);
      935     9502    7                           IF SON_ST$ -> VARIABLE.NDSC.TN = %NDSC4 AND
      936     9503    7                               NOT SON_ST$ -> VARIABLE.B.DIGIT THEN
      937     9504    7                             SON_LTS$ -> INIT_LTS.SPAN = SON_LTS$ -> INIT_LTS.SPAN / 2;
      938     9505    7                         CASE (%TYP, %TYR, %TYQ);
      939     9506    7                           SON_LTS$ -> INIT_LTS.SPAN = SON_LTS$ -> INIT_LTS.SPAN * 4;
      940     9507    7                       END;
      941     9508    6                     END;
      942     9509    5                 END; /* SON_DIM > 1 */
      943     9510    4               ELSE
      944     9511    4                 SON_LTS$ -> INIT_LTS.SUBSCR$ = SUBSCR2$;
      945     9512    4               IF SON_LTS$ -> INIT_LTS.BCD THEN
      946     9513    5                 DO;
      947     9514    5                   SON_LTS$ -> INIT_LTS.LENGTH = SON_LTS$ -> INIT_LTS.LENGTH * 3 / 2;
      948     9515    5                   IF SUBSCR$ ~= ADDR (NIL) AND SON_LTS$ -> INIT_LTS.MFILLABLE THEN
      949     9516    6                     DO;
      950     9517    6                       IF SUBSCR2$ -> ETT.ID ~= %DVI2 THEN
      951     9518    7                         DO;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:180  
      952     9519    7                           MKCN.CON = 3;
      953     9520    7                           CALL Z8AC$MAKE_CONST (ETT$$);
      954     9521    7                           CALL Z8AF$FORME (%MPI, SUBSCR1$, ETT$$, SUBSCR2$);
      955     9522    7                           CALL Z8AF$FORME (%DVI2, SUBSCR2$, 1, SUBSCR2$);
      956     9523    7                         END;
      957     9524    6                       SON_LTS$ -> INIT_LTS.SUBSCR$ = SUBSCR2$; /* BCD units */
      958     9525    6                     END;
      959     9526    5                 END;
      960     9527    4               IF SON_LTS$ -> INIT_LTS.FILLER
      961     9528    4                 THEN INIT_LTS$ -> INIT_LTS.FILLER = TRUE;
      962     9529    4               IF SON_LTS$ -> INIT_LTS.BASE$ ~= ADDR (NIL) THEN
      963     9530    5                 DO;
      964     9531    5                   IF PREV_SON_LTS$ = ADDR (NIL) THEN
      965     9532    6                     DO;
      966     9533    6                       PREV_SON_ST$ = SON_ST$;
      967     9534    6                       PREV_SON_LTS$ = SON_LTS$;
      968     9535    6                       INIT_LTS$ -> INIT_LTS.SON$ = SON_LTS$;
      969     9536    6                       CALL Z8AF$NEW_BASE (IDENT_ST$, ADDR (NIL), INIT_LTS$ -> INIT_LTS
              9536                                .BASE$);
      970     9537    6                       INIT_LTS$ -> INIT_LTS.BCD = SON_LTS$ -> INIT_LTS.BCD;
      971     9538    6                       IF SON_LTS$ -> INIT_LTS.MFILLABLE AND
      972     9539    6                           NOT INIT_LTS$ -> INIT_LTS.FILLER THEN
      973     9540    7                         DO;
      974     9541    7                           INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;
      975     9542    7                           INIT_LTS$ -> INIT_LTS.FILL = SON_LTS$ -> INIT_LTS.FILL;
      976     9543    7                         END;
      977     9544    6                     END;
      978     9545    5                   ELSE
      979     9546    6                     DO;
      980     9547    6                       IF NOT SON_LTS$ -> INIT_LTS.BCD THEN
      981     9548    6                         INIT_LTS$ -> INIT_LTS.BCD = FALSE;
      982     9549    6                       IF PREV_SON_LTS$ -> INIT_LTS.MFILLABLE
      983     9550    6                           AND SON_LTS$ -> INIT_LTS.MFILLABLE
      984     9551    6                           AND PREV_SON_LTS$ -> INIT_LTS.FILL = SON_LTS$ -> INIT_LTS.
              9551                                    FILL THEN
      985     9552    7                         DO;
      986     9553    7                           IF (PREV_SON_LTS$ -> INIT_LTS.BCD AND
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:181  
      987     9554    7                               SON_LTS$ -> INIT_LTS.BCD AND
      988     9555    7                               PREV_SON_ST$ -> VARIABLE.SA * 6 + PREV_SON_ST$ ->
              9555                                        VARIABLE.NDSC.CN
      989     9556    7                                 + PREV_SON_LTS$ -> INIT_LTS.LENGTH =
      990     9557    7                                 SON_ST$ -> VARIABLE.SA * 6 + SON_ST$ -> VARIABLE.NDSC.
              9557                                          CN) OR
      991     9558    7                              (NOT PREV_SON_LTS$ -> INIT_LTS.BCD AND
      992     9559    7                               NOT SON_LTS$ -> INIT_LTS.BCD AND
      993     9560    7                               PREV_SON_ST$ -> VARIABLE.SA * 4 + PREV_SON_ST$ ->
              9560                                        VARIABLE.ADSC.CN
      994     9561    7                                 + PREV_SON_LTS$ -> INIT_LTS.LENGTH =
      995     9562    7                                 SON_ST$ -> VARIABLE.SA * 4 + SON_ST$ -> VARIABLE.ADSC.
              9562                                          CN) THEN
      996     9563    8                             DO;
      997     9564    8                               IF PREV_SON_ST$ -> VARIABLE.TYPE = %TYD AND
      998     9565    8                                   PREV_SON_ST$ -> VARIABLE.NDSC.TN = %NDSC4 AND
      999     9566    8                                   NOT PREV_SON_LTS$ -> INIT_LTS.GROUP THEN
     1000     9567    9                                 DO;
     1001     9568    9                                   PREV_SON_LTS$ -> INIT_LTS.OFF = PREV_SON_LTS$ ->
              9568                                            INIT_LTS.OFF / 2;
     1002     9569    9                                   IF PREV_SON_LTS$ -> INIT_LTS.SUBSCR$ ~= ADDR (NIL)
              9569                                            THEN
     1003     9570    9                                     PREV_SON_LTS$ -> INIT_LTS.SUBSCR$ =
     1004     9571    9                                         PREV_SON_LTS$ -> INIT_LTS.SUBSCR$ -> ETT.LOP;
     1005     9572                                        /* Delete MPI2, ropcon = 1 */
     1006     9573    9                                 END; /* Set units from digits back to bytes */
     1007     9574    8                               PREV_SON_LTS$ -> INIT_LTS.LENGTH = PREV_SON_LTS$ ->
              9574                                        INIT_LTS.LENGTH
     1008     9575    8                                 + SON_LTS$ -> INIT_LTS.LENGTH;
     1009     9576    8                               MKCN.CON = PREV_SON_LTS$ -> INIT_LTS.LENGTH;
     1010     9577    8                               PREV_SON_LTS$ -> INIT_LTS.GROUP = TRUE;
     1011     9578    8                               ETT$$ = PREV_SON_LTS$ -> INIT_LTS.BASE$;
     1012     9579    8                               IF ETT$$ -> ETT.ID = %SIZ
     1013     9580    8                                 THEN ETT$$ = ETT$$ -> ETT.LOP;
     1014     9581    8                               CALL Z8AC$MAKE_CONST (CONST$);
     1015     9582    8                               CALL Z8AF$FORME (%SIZ, ETT$$, CONST$, PREV_SON_LTS$ ->
              9582                                        INIT_LTS.BASE$);
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:182  
     1016     9583    8                             END;
     1017     9584    7                           ELSE
     1018     9585    8                             DO; /* Cannot be combined */
     1019     9586    8                               PREV_SON_LTS$ -> INIT_LTS.NEXT$ = SON_LTS$;
     1020     9587    8                               PREV_SON_LTS$ = SON_LTS$;
     1021     9588    8                               PREV_SON_ST$ = SON_ST$;
     1022     9589    8                               INIT_LTS$ -> INIT_LTS.MFILLABLE = FALSE;
     1023     9590    8                             END;
     1024     9591    7                         END; /* Both MFILLABLE, same fill */
     1025     9592    6                       ELSE
     1026     9593    7                         DO;
     1027     9594    7                           PREV_SON_LTS$ -> INIT_LTS.NEXT$ = SON_LTS$;
     1028     9595    7                           PREV_SON_LTS$ = SON_LTS$;
     1029     9596    7                           PREV_SON_ST$ = SON_ST$;
     1030     9597    7                           INIT_LTS$ -> INIT_LTS.MFILLABLE = FALSE;
     1031     9598    7                         END;
     1032     9599    6                     END; /* PREV_SON_LTS$ ~= ADDR (NIL) */
     1033     9600    5                 END; /* SON_LTS$ -> INIT_LTS.BASE$ ~= ADDR (NIL) */
     1034     9601    4               IF SON_DIM > 1 THEN
     1035     9602    4                 LAST_IN_USE = LAST_IN_USE - 1;
     1036     9603    4             END; /* Initializable item */
     1037     9604    3           SON_QLT$ = SON_QLT$ -> QLT.BROTHER;
     1038     9605    3         END; /* UNTIL SON_QLT$ = ADDR (NIL) */
     1039     9606    2         IF INIT_LTS$ -> INIT_LTS.BCD AND
     1040     9607    2             (MOD (INIT_LTS$ -> INIT_LTS.LENGTH, 2) ~= 0 OR
     1041     9608    2              MOD (IDENT_ST$ -> VARIABLE.ADSC.CN, 2) = 1) THEN
     1042     9609    2           INIT_LTS$ -> INIT_LTS.MFILLABLE = FALSE;
     1043     9610    2         IF INIT_LTS$ -> INIT_LTS.MFILLABLE AND NOT INIT_LTS$ -> INIT_LTS.FILLER THEN
     1044     9611    3           DO;
     1045     9612    3             IF INIT_LTS$ -> INIT_LTS.BCD THEN
     1046     9613    3               INIT_LTS$ -> INIT_LTS.SUBSCR$ = PREV_SON_LTS$ -> INIT_LTS.SUBSCR$;
     1047     9614    3             INIT_LTS$ -> INIT_LTS.SON$ = ADDR (NIL);
     1048     9615    3           END;
     1049     9616    2       END; /* GROUP ITEM */
     1050     9617    1   END Z8EU$MAKE_INIT_LTS;

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:183  
--  Include file information  --

   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_MKCN.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$MAKE_INIT_LTS.

   Procedure Z8EU$MAKE_INIT_LTS requires 1112 words for executable code.
   Procedure Z8EU$MAKE_INIT_LTS requires 30 words of local(AUTO) storage.

    No errors detected in file Z8EU.:Z8A6TSI    .

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:184  

 Object Unit name= Z8EU$MAKE_INIT_LTS                         File name= Z8EU.:Z8A6TOU
 UTS= AUG 09 '97 12:59:43.32 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     2      2  MKCN
    2  LblCom even  none     1      1  DNT$
    3  LblCom even  none     5      5  DNT_
    4  LblCom even  none     1      1  DNT_BUCKET_NUMBER
    5  LblCom even  none     1      1  DNT_OF_1$
    6  LblCom even  none     1      1  ETT$
    7  LblCom even  none     1      1  HEAD_ETT$
    8  LblCom even  none   512   1000  ETT_BUCKETS
    9  LblCom even  none     5      5  ETT_
   10  LblCom even  none     1      1  QLT$
   11  LblCom even  none     1      1  PREV_01_QLT$
   12  LblCom even  none     5      5  QLT_
   13  LblCom even  none     1      1  ST$
   14  LblCom even  none     5      5  ST_
   15  LblCom even  none     1      1  LTS$
   16  LblCom even  none     5      5  LTS_
   17   Data  even  none    51     63  Z8EU$MAKE_INIT_LTS
   18  RoData even  UTS      2      2  Z8EU$MAKE_INIT_LTS
   19   Proc  even  none  1112   2130  Z8EU$MAKE_INIT_LTS
   20  RoData even  none    32     40  Z8EU$MAKE_INIT_LTS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    19      0   yes            yes      Std        4  Z8EU$MAKE_INIT_LTS
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:185  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 Z8AR$RESERVER
         yes           Std       3 Z8AF$NEW_BASE
         yes           Std       4 Z8AF$FORME
         yes           Std       2 Z8AT$CREATE_TEMP_WITH_BASE
         yes           Std       1 Z8AC$MAKE_CONST
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    LTS_STEP

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:186  


      657        1        /*M*  Z8EU$MAKE_INIT_LTS -- Build tree of INIT_LTS items */
      658        2        /*T***********************************************************/
      659        3        /*T*                                                         */
      660        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      661        5        /*T*                                                         */
      662        6        /*T***********************************************************/
      663        7        /*P*
      664        8               NAME:  Z8EU$MAKE_INIT_LTS
      665        9             AUTHOR:  Albert Wigchert
      666       10            PURPOSE:  Build tree of INIT_LTS items for INITIALIZEd identifier.
      667       11        */
      668       12        /*D*
      669       13               NAME:  Z8EU$MAKE_INIT_LTS
      670       14               CALL:  CALL Z8EU$MAKE_INIT_LTS (IDENT_ST$, SUBSCR$, OFF, INIT_LTS$);
      671       15              INPUT:  IDENT_ST$ -- ST item for the identifier.
      672       16                      SUBSCR$ -- ETT item for all subscripts already applied.
      673       17                      OFF -- offset from identifier, to be used with subscripts.
      674       18             OUTPUT:  INIT_LTS$ -- pointer to tree of INIT_LTS items.
      675       19        DESCRIPTION:  Walk the tree of QLT items for a data item and everything
      676       20                      subordinate to it. Generate an INIT_LTS item for each field that
      677       21                      can be initialized separately, combining adjacent fields and
      678       22                      collapsing tables to scalars if possible.
      679       23        */
      680       24        %EJECT;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:187  
      681       25        Z8EU$MAKE_INIT_LTS: PROC (IDENT_ST$,

     25 19 000000   000000 700200 xent  Z8EU$MAKE_I* TSX0  ! X66_AUTO_4
        19 000001   000036 000004                    ZERO    30,4

      682       26                                  SUBSCR$,
      683       27                                  OFF,
      684       28                                  INIT_LTS$);
      685       29        %SET PHASE = 1;
      686       30        %INCLUDE Z8A_DEFC;
      687       98        %INCLUDE Z8A_SUPP_MAC;
      688     2498        %INCLUDE Z8A_MKCN;
      689     2515        %INCLUDE Z8A_DNT;
      690     2736        %INCLUDE Z8A_ETT;
      691     3037        %INCLUDE Z8A_QLT;
      692     3143        %INCLUDE Z8A_ST;
      693     6802        %INCLUDE Z8A_TYPES;
      694     6976        %INCLUDE Z8A_LTS;
      695     9053    1   DCL IDENT_ST$      PTR;
      696     9054    1   DCL SUBSCR$        PTR;
      697     9055    1   DCL OFF            SBIN;
      698     9056    1   DCL INIT_LTS$      PTR;
      699     9057    1   DCL INDICES$ (0:47) PTR STATIC;
      700     9058    1   DCL LAST_CREATED   SBIN STATIC INIT (-1);
      701     9059    1   DCL LAST_IN_USE    SBIN STATIC INIT (-1);
      702     9060    1   DCL IDENT_QLT$     PTR;
      703     9061    1   DCL IDENT_BASE$    PTR;
      704     9062    1   DCL IDENT_DIM      UBIN;
      705     9063    1   DCL SON_OFF        SBIN;
      706     9064    1   DCL SON_DIM        UBIN;
      707     9065    1   DCL SON_BASE$      PTR;
      708     9066    1   DCL SON_QLT$       PTR;
      709     9067    1   DCL SON_ST$        PTR;
      710     9068    1   DCL SON_LTS$       PTR;
      711     9069    1   DCL PREV_SON_ST$   PTR;
      712     9070    1   DCL PREV_SON_LTS$  PTR;
      713     9071    1   DCL SUBSCR1$       PTR;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:188  
      714     9072    1   DCL SUBSCR2$       PTR;
      715     9073    1   DCL DIMS$          PTR;
      716     9074    1   DCL CONST$         PTR;
      717     9075    1   DCL ETT$$          PTR;
      718     9076    1   DCL 1 DNA_ROPCON   STATIC,
      719     9077    1         2 *          UBIN HALF HALIGNED INIT (0),
      720     9078    1         2 CN         UBIN (2) UNAL,
      721     9079    1         2 *          BIT (1) INIT ('0'B),
      722     9080    1         2 TA         BIT (2) INIT (%ADSC9),
      723     9081    1         2 *          BIT (7) INIT ('0'B),
      724     9082    1         2 N          UBIN (6) UNAL;
      725     9083    1   DCL 1 DNA_BCD_ROPCON REDEF DNA_ROPCON,
      726     9084    1         2 *          UBIN HALF HALIGNED,
      727     9085    1         2 CN         UBIN (3) UNAL,
      728     9086    1         2 TA         BIT (2),
      729     9087    1         2 *          BIT (13);
      730     9088    1   DCL Z8AC$MAKE_CONST                ENTRY(1);
      731     9089    1   DCL Z8AF$FORME                     ENTRY(4);
      732     9090    1   DCL Z8AF$NEW_BASE                  ENTRY(3);
      733     9091    1   DCL Z8AT$CREATE_TEMP_WITH_BASE     ENTRY(2);
      734     9092        %EJECT;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:189  
      735     9093    1     IDENT_QLT$ = IDENT_ST$ -> VARIABLE.QLT$;

   9093 19 000002   200003 470500                    LDP0    @IDENT_ST$,,AUTO
        19 000003   000000 471500                    LDP1    0,,PR0
        19 000004   100007 236100                    LDQ     7,,PR1
        19 000005   200007 756100                    STQ     IDENT_QLT$,,AUTO

      736     9094          %GET_LTS (@ID = %DIMS, @ST$ = IDENT_ST$, @RETURN$ = DIMS$);

   9096 19 000006   100005 236100                    LDQ     5,,PR1
        19 000007   000000 116000 20                 CMPQ    0
        19 000010   000020 600000 19                 TZE     s:9130
        19 000011   100005 473500                    LDP3    5,,PR1
        19 000012   300000 220100                    LDX0    0,,PR3
        19 000013   001105 100003                    CMPX0   581,DU
        19 000014   000020 601000 19                 TNZ     s:9130

   9100 19 000015   300001 236100                    LDQ     1,,PR3
        19 000016   200024 756100                    STQ     DIMS$,,AUTO

   9128 19 000017   000032 710000 19                 TRA     s:9137

   9130 19 000020   000000 116000 20                 CMPQ    0
        19 000021   000030 600000 19                 TZE     s:9134
        19 000022   100005 473500                    LDP3    5,,PR1
        19 000023   300000 220100                    LDX0    0,,PR3
        19 000024   001104 100003                    CMPX0   580,DU
        19 000025   000030 601000 19                 TNZ     s:9134

   9132 19 000026   200024 756100                    STQ     DIMS$,,AUTO
        19 000027   000032 710000 19                 TRA     s:9137

   9134 19 000030   000000 236000 20                 LDQ     0
        19 000031   200024 756100                    STQ     DIMS$,,AUTO

      737     9137    1     IF DIMS$ = ADDR (NIL) OR IDENT_QLT$ -> QLT.B.OCCURS = FALSE THEN

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:190  
   9137 19 000032   000000 116000 20                 CMPQ    0
        19 000033   000040 600000 19                 TZE     s:9138
        19 000034   200007 473500                    LDP3    IDENT_QLT$,,AUTO
        19 000035   300000 236100                    LDQ     0,,PR3
        19 000036   400000 316007                    CANQ    -131072,DL
        19 000037   000042 601000 19                 TNZ     s:9140

      738     9138    1       IDENT_DIM = 0;

   9138 19 000040   200011 450100                    STZ     IDENT_DIM,,AUTO
        19 000041   000052 710000 19                 TRA     s:9223

      739     9139    1     ELSE
      740     9140    1       IDENT_DIM = DIMS$ -> DIMS.D.DIM ((DIMS$ -> DIMS.N - %MIN_DIM_SIZE) / %
              9140                NO_WORDS_PER_DIM);

   9140 19 000042   200024 474500                    LDP4    DIMS$,,AUTO
        19 000043   400000 236100                    LDQ     0,,PR4
        19 000044   777777 376007                    ANQ     -1,DL
        19 000045   000005 136007                    SBLQ    5,DL
        19 000046   000003 506007                    DIV     3,DL
        19 000047   000003 402007                    MPY     3,DL
        19 000050   400003 235106                    LDA     3,QL,PR4
        19 000051   200011 755100                    STA     IDENT_DIM,,AUTO

      741     9141          %NEW_INIT_LTS (@POINTER = INIT_LTS$,
      742     9142                         @SUBSCR$ = SUBSCR$,
      743     9143                         @OFF     = OFF,
      744     9144                         @DIMS    = IDENT_DIM);

   9223 19 000052   000002 236000 16                 LDQ     LTS_+2
        19 000053   000012 036007                    ADLQ    10,DL
        19 000054   000003 116000 16                 CMPQ    LTS_+3
        19 000055   000066 604000 19                 TMI     s:9225

   9224 19 000056   000002 236000 20                 LDQ     2
        19 000057   200030 756100                    STQ     ETT$$+2,,AUTO
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:191  
        19 000060   200030 631500                    EPPR1   ETT$$+2,,AUTO
        19 000061   200031 451500                    STP1    ETT$$+3,,AUTO
        19 000062   200031 630500                    EPPR0   ETT$$+3,,AUTO
        19 000063   000001 631400 20                 EPPR1   1
        19 000064   000000 701000 xent               TSX1    Z8AR$RESERVER
        19 000065   000000 011000                    NOP     0

   9225 19 000066   000002 236000 16                 LDQ     LTS_+2
        19 000067   000022 736000                    QLS     18
        19 000070   000001 036000 16                 ADLQ    LTS_+1
        19 000071   200006 470500                    LDP0    @INIT_LTS$,,AUTO
        19 000072   000000 756100                    STQ     0,,PR0

   9226 19 000073   000012 236007                    LDQ     10,DL
        19 000074   000002 056000 16                 ASQ     LTS_+2

   9227 19 000075   000000 471500                    LDP1    0,,PR0
        19 000076   001062 220003                    LDX0    562,DU
        19 000077   100000 740100                    STX0    0,,PR1

   9233 19 000100   000000 471500                    LDP1    0,,PR0
        19 000101   000000 236003                    LDQ     0,DU
        19 000102   100000 552110                    STBQ    0,'10'O,PR1

   9234 19 000103   000000 471500                    LDP1    0,,PR0
        19 000104   000003 236000 20                 LDQ     3
        19 000105   100000 356100                    ANSQ    0,,PR1

   9235 19 000106   000000 471500                    LDP1    0,,PR0
        19 000107   000004 236000 20                 LDQ     4
        19 000110   100000 356100                    ANSQ    0,,PR1

   9236 19 000111   000000 471500                    LDP1    0,,PR0
        19 000112   000005 236000 20                 LDQ     5
        19 000113   100000 356100                    ANSQ    0,,PR1

   9237 19 000114   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:192  
        19 000115   000006 236000 20                 LDQ     6
        19 000116   100000 356100                    ANSQ    0,,PR1

   9238 19 000117   000000 471500                    LDP1    0,,PR0
        19 000120   000007 236000 20                 LDQ     7
        19 000121   100000 356100                    ANSQ    0,,PR1

   9239 19 000122   000000 471500                    LDP1    0,,PR0
        19 000123   000000 236000 20                 LDQ     0
        19 000124   100001 756100                    STQ     1,,PR1

   9240 19 000125   000000 471500                    LDP1    0,,PR0
        19 000126   200005 473500                    LDP3    @OFF,,AUTO
        19 000127   300000 235100                    LDA     0,,PR3
        19 000130   100002 755100                    STA     2,,PR1

   9241 19 000131   000000 471500                    LDP1    0,,PR0
        19 000132   100003 756100                    STQ     3,,PR1

   9242 19 000133   000000 471500                    LDP1    0,,PR0
        19 000134   100004 756100                    STQ     4,,PR1

   9243 19 000135   000000 471500                    LDP1    0,,PR0
        19 000136   100005 450100                    STZ     5,,PR1

   9244 19 000137   000000 471500                    LDP1    0,,PR0
        19 000140   100006 450100                    STZ     6,,PR1

   9245 19 000141   000000 471500                    LDP1    0,,PR0
        19 000142   200011 235100                    LDA     IDENT_DIM,,AUTO
        19 000143   100007 755100                    STA     7,,PR1

   9246 19 000144   000000 471500                    LDP1    0,,PR0
        19 000145   200004 474500                    LDP4    @SUBSCR$,,AUTO
        19 000146   400000 236100                    LDQ     0,,PR4
        19 000147   100010 756100                    STQ     8,,PR1

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:193  
   9247 19 000150   000000 471500                    LDP1    0,,PR0
        19 000151   000000 236000 20                 LDQ     0
        19 000152   100011 756100                    STQ     9,,PR1

      745     9250    1     IF IDENT_ST$ -> VARIABLE.B.ELEMENTARY THEN

   9250 19 000153   200003 471500                    LDP1    @IDENT_ST$,,AUTO
        19 000154   100000 475500                    LDP5    0,,PR1
        19 000155   500003 236100                    LDQ     3,,PR5
        19 000156   010000 316003                    CANQ    4096,DU
        19 000157   000546 600000 19                 TZE     s:9346

      746     9251    2       DO;

      747     9252    2         SON_DIM = 0;

   9252 19 000160   200013 450100                    STZ     SON_DIM,,AUTO

      748     9253    3         DO CASE (IDENT_ST$ -> VARIABLE.TYPE);

   9253 19 000161   500002 221100                    LDX1    2,,PR5
        19 000162   000024 101003                    CMPX1   20,DU
        19 000163   000165 602011 19                 TNC     s:9253+4,X1
        19 000164   000335 710000 19                 TRA     s:9299
        19 000165   000251 710000 19                 TRA     s:9269
        19 000166   000245 710000 19                 TRA     s:9267
        19 000167   000245 710000 19                 TRA     s:9267
        19 000170   000335 710000 19                 TRA     s:9299
        19 000171   000335 710000 19                 TRA     s:9299
        19 000172   000335 710000 19                 TRA     s:9299
        19 000173   000314 710000 19                 TRA     s:9287
        19 000174   000245 710000 19                 TRA     s:9267
        19 000175   000325 710000 19                 TRA     s:9293
        19 000176   000335 710000 19                 TRA     s:9299
        19 000177   000335 710000 19                 TRA     s:9299
        19 000200   000277 710000 19                 TRA     s:9280
        19 000201   000227 710000 19                 TRA     s:9260
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:194  
        19 000202   000335 710000 19                 TRA     s:9299
        19 000203   000335 710000 19                 TRA     s:9299
        19 000204   000245 710000 19                 TRA     s:9267
        19 000205   000335 710000 19                 TRA     s:9299
        19 000206   000335 710000 19                 TRA     s:9299
        19 000207   000335 710000 19                 TRA     s:9299
        19 000210   000211 710000 19                 TRA     s:9255

      749     9254    3           CASE (%TYC);

      750     9255    3             INIT_LTS$ -> INIT_LTS.BCD = TRUE;

   9255 19 000211   000000 476500                    LDP6    0,,PR0
        19 000212   000040 236007                    LDQ     32,DL
        19 000213   600000 256100                    ORSQ    0,,PR6

      751     9256    3             IF IDENT_ST$ -> VARIABLE.NDSC.TN = %ADSC9 /* Not overpunched */

   9256 19 000214   100000 475500                    LDP5    0,,PR1
        19 000215   500001 236100                    LDQ     1,,PR5
        19 000216   040000 316007                    CANQ    16384,DL
        19 000217   000335 601000 19                 TNZ     s:9299
        19 000220   030000 376007                    ANQ     12288,DL
        19 000221   030000 116007                    CMPQ    12288,DL
        19 000222   000335 601000 19                 TNZ     s:9299

      752     9257    3                 AND IDENT_ST$ -> VARIABLE.NDSC.S = %NO_SIGN THEN
      753     9258    3               INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;

   9258 19 000223   000000 476500                    LDP6    0,,PR0
        19 000224   000200 236007                    LDQ     128,DL
        19 000225   600000 256100                    ORSQ    0,,PR6
        19 000226   000335 710000 19                 TRA     s:9299

      754     9259    3           CASE (%TYB);

      755     9260    3             INIT_LTS$ -> INIT_LTS.BCD = TRUE;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:195  

   9260 19 000227   000000 476500                    LDP6    0,,PR0
        19 000230   000040 236007                    LDQ     32,DL
        19 000231   600000 256100                    ORSQ    0,,PR6

      756     9261    3             IF NOT IDENT_ST$ -> VARIABLE.B.SUB_CLASS.EDITED THEN

   9261 19 000232   100000 475500                    LDP5    0,,PR1
        19 000233   500003 236100                    LDQ     3,,PR5
        19 000234   000004 316007                    CANQ    4,DL
        19 000235   000335 601000 19                 TNZ     s:9299

      757     9262    4               DO;

      758     9263    4                 INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;

   9263 19 000236   000000 476500                    LDP6    0,,PR0
        19 000237   000200 236007                    LDQ     128,DL
        19 000240   600000 256100                    ORSQ    0,,PR6

      759     9264    4                 INIT_LTS$ -> INIT_LTS.FILL = %BITASC ('020'O); /* GBCD space */

   9264 19 000241   000000 475500                    LDP5    0,,PR0
        19 000242   020000 236007                    LDQ     8192,DL
        19 000243   500000 552110                    STBQ    0,'10'O,PR5

      760     9265    4               END;

   9265 19 000244   000335 710000 19                 TRA     s:9299

      761     9266    3           CASE (%TYH, %TYI, %TYJ, %TYK);

      762     9267    3             INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;

   9267 19 000245   000000 476500                    LDP6    0,,PR0
        19 000246   000200 236007                    LDQ     128,DL
        19 000247   600000 256100                    ORSQ    0,,PR6
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:196  
        19 000250   000335 710000 19                 TRA     s:9299

      763     9268    3           CASE (%TYD);

      764     9269    3             IF IDENT_ST$ -> VARIABLE.NDSC.S = %NO_SIGN THEN

   9269 19 000251   500001 236100                    LDQ     1,,PR5
        19 000252   030000 376007                    ANQ     12288,DL
        19 000253   030000 116007                    CMPQ    12288,DL
        19 000254   000335 601000 19                 TNZ     s:9299

      765     9270    4               DO;

      766     9271    4                 IF IDENT_ST$ -> VARIABLE.NDSC.TN = %NDSC9 THEN

   9271 19 000255   500001 236100                    LDQ     1,,PR5
        19 000256   040000 316007                    CANQ    16384,DL
        19 000257   000267 601000 19                 TNZ     s:9276

      767     9272    5                   DO;

      768     9273    5                     INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;

   9273 19 000260   000000 476500                    LDP6    0,,PR0
        19 000261   000200 236007                    LDQ     128,DL
        19 000262   600000 256100                    ORSQ    0,,PR6

      769     9274    5                     INIT_LTS$ -> INIT_LTS.FILL = '0';

   9274 19 000263   000000 475500                    LDP5    0,,PR0
        19 000264   060000 236007                    LDQ     24576,DL
        19 000265   500000 552110                    STBQ    0,'10'O,PR5

      770     9275    5                   END;

   9275 19 000266   000335 710000 19                 TRA     s:9299

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:197  
      771     9276    4                 ELSE IF NOT IDENT_QLT$ -> QLT.B.DIGIT THEN

   9276 19 000267   200007 476500                    LDP6    IDENT_QLT$,,AUTO
        19 000270   600000 236100                    LDQ     0,,PR6
        19 000271   100000 316007                    CANQ    32768,DL
        19 000272   000335 601000 19                 TNZ     s:9299

      772     9277    4                   INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;

   9277 19 000273   000000 477500                    LDP7    0,,PR0
        19 000274   000200 236007                    LDQ     128,DL
        19 000275   700000 256100                    ORSQ    0,,PR7

      773     9278    4               END;

   9278 19 000276   000335 710000 19                 TRA     s:9299

      774     9279    3           CASE (%TYF);

      775     9280    3             IF IDENT_ST$ -> VARIABLE.NDSC.TN = %NDSC9 /* Not overpunched */

   9280 19 000277   500001 236100                    LDQ     1,,PR5
        19 000300   040000 316007                    CANQ    16384,DL
        19 000301   000335 601000 19                 TNZ     s:9299
        19 000302   030000 376007                    ANQ     12288,DL
        19 000303   030000 116007                    CMPQ    12288,DL
        19 000304   000335 601000 19                 TNZ     s:9299

      776     9281    3                 AND IDENT_ST$ -> VARIABLE.NDSC.S = %NO_SIGN THEN
      777     9282    4               DO;

      778     9283    4                 INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;

   9283 19 000305   000000 476500                    LDP6    0,,PR0
        19 000306   000200 236007                    LDQ     128,DL
        19 000307   600000 256100                    ORSQ    0,,PR6

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:198  
      779     9284    4                 INIT_LTS$ -> INIT_LTS.FILL = %BITASC ('360'O); /* EBCDIC ZERO */

   9284 19 000310   000000 475500                    LDP5    0,,PR0
        19 000311   360000 236007                    LDQ     122880,DL
        19 000312   500000 552110                    STBQ    0,'10'O,PR5

      780     9285    4               END;

   9285 19 000313   000335 710000 19                 TRA     s:9299

      781     9286    3           CASE (%TYE);

      782     9287    3             IF NOT IDENT_ST$ -> VARIABLE.B.SUB_CLASS.EDITED THEN

   9287 19 000314   000004 316007                    CANQ    4,DL
        19 000315   000335 601000 19                 TNZ     s:9299

      783     9288    4               DO;

      784     9289    4                 INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;

   9289 19 000316   000000 476500                    LDP6    0,,PR0
        19 000317   000200 236007                    LDQ     128,DL
        19 000320   600000 256100                    ORSQ    0,,PR6

      785     9290    4                 INIT_LTS$ -> INIT_LTS.FILL = %BITASC ('100'O); /* EBCDIC space */

   9290 19 000321   000000 475500                    LDP5    0,,PR0
        19 000322   100000 236007                    LDQ     32768,DL
        19 000323   500000 552110                    STBQ    0,'10'O,PR5

      786     9291    4               END;

   9291 19 000324   000335 710000 19                 TRA     s:9299

      787     9292    3           CASE (%TYA);

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:199  
      788     9293    3             IF NOT IDENT_ST$ -> VARIABLE.B.SUB_CLASS.EDITED THEN

   9293 19 000325   000004 316007                    CANQ    4,DL
        19 000326   000335 601000 19                 TNZ     s:9299

      789     9294    4               DO;

      790     9295    4                 INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;

   9295 19 000327   000000 476500                    LDP6    0,,PR0
        19 000330   000200 236007                    LDQ     128,DL
        19 000331   600000 256100                    ORSQ    0,,PR6

      791     9296    4                 INIT_LTS$ -> INIT_LTS.FILL = ' ';

   9296 19 000332   000000 475500                    LDP5    0,,PR0
        19 000333   040000 236007                    LDQ     16384,DL
        19 000334   500000 552110                    STBQ    0,'10'O,PR5

      792     9297    4               END;

      793     9298    3         END; /* CASE */

      794     9299    2         CALL Z8AF$NEW_BASE (IDENT_ST$, ADDR (NIL), INIT_LTS$ -> INIT_LTS.BASE$);

   9299 19 000335   000000 475500                    LDP5    0,,PR0
        19 000336   000000 236000 20                 LDQ     0
        19 000337   200030 756100                    STQ     ETT$$+2,,AUTO
        19 000340   500001 636500                    EPPR6   1,,PR5
        19 000341   200033 456500                    STP6    ETT$$+5,,AUTO
        19 000342   200030 635500                    EPPR5   ETT$$+2,,AUTO
        19 000343   200032 455500                    STP5    ETT$$+4,,AUTO
        19 000344   200003 236100                    LDQ     @IDENT_ST$,,AUTO
        19 000345   200031 756100                    STQ     ETT$$+3,,AUTO
        19 000346   200031 630500                    EPPR0   ETT$$+3,,AUTO
        19 000347   000010 631400 20                 EPPR1   8
        19 000350   000000 701000 xent               TSX1    Z8AF$NEW_BASE
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:200  
        19 000351   000000 011000                    NOP     0

      795     9300    3         DO CASE (IDENT_ST$ -> VARIABLE.B.CLASS);

   9300 19 000352   200003 470500                    LDP0    @IDENT_ST$,,AUTO
        19 000353   000000 471500                    LDP1    0,,PR0
        19 000354   100003 720100                    LXL0    3,,PR1
        19 000355   000007 360003                    ANX0    7,DU
        19 000356   000002 100003                    CMPX0   2,DU
        19 000357   000361 602010 19                 TNC     s:9300+7,X0
        19 000360   000516 710000 19                 TRA     s:9333
        19 000361   000363 710000 19                 TRA     s:9302
        19 000362   000373 710000 19                 TRA     s:9305

      796     9301    3           CASE (%CLASS_POINTER);

      797     9302    3             INIT_LTS$ -> INIT_LTS.LENGTH = 4;

   9302 19 000363   200006 473500                    LDP3    @INIT_LTS$,,AUTO
        19 000364   300000 474500                    LDP4    0,,PR3
        19 000365   000004 235007                    LDA     4,DL
        19 000366   400005 755100                    STA     5,,PR4

      798     9303    3             INIT_LTS$ -> INIT_LTS.POINTER = TRUE;

   9303 19 000367   300000 471500                    LDP1    0,,PR3
        19 000370   000020 236007                    LDQ     16,DL
        19 000371   100000 256100                    ORSQ    0,,PR1
        19 000372   002127 710000 19                 TRA     s:9617

      799     9304    3           CASE (%CLASS_NUMERIC);

      800     9305    3             DNA_ROPCON.N = IDENT_ST$ -> VARIABLE.NDSC.N;

   9305 19 000373   100001 236100                    LDQ     1,,PR1
        19 000374   000062 752001 17                 STCQ    DNA_ROPCON,'01'O

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:201  
      801     9306    3             DNA_ROPCON.CN = IDENT_ST$ -> VARIABLE.ADSC.CN;

   9306 19 000375   000000 471500                    LDP1    0,,PR0
        19 000376   100001 236100                    LDQ     1,,PR1
        19 000377   000062 676000 17                 ERQ     DNA_ROPCON
        19 000400   600000 376007                    ANQ     -65536,DL
        19 000401   000062 656000 17                 ERSQ    DNA_ROPCON

      802     9307    3             INIT_LTS$ -> INIT_LTS.LENGTH = IDENT_ST$ -> VARIABLE.NDSC.N;

   9307 19 000402   200006 471500                    LDP1    @INIT_LTS$,,AUTO
        19 000403   100000 473500                    LDP3    0,,PR1
        19 000404   000000 474500                    LDP4    0,,PR0
        19 000405   400001 236100                    LDQ     1,,PR4
        19 000406   000077 376007                    ANQ     63,DL
        19 000407   300005 756100                    STQ     5,,PR3

      803     9308    4             DO CASE (IDENT_ST$ -> VARIABLE.TYPE);

   9308 19 000410   000000 473500                    LDP3    0,,PR0
        19 000411   300002 220100                    LDX0    2,,PR3
        19 000412   000024 100003                    CMPX0   20,DU
        19 000413   000415 602010 19                 TNC     s:9308+5,X0
        19 000414   000477 710000 19                 TRA     s:9324
        19 000415   000441 710000 19                 TRA     s:9310
        19 000416   000477 710000 19                 TRA     s:9324
        19 000417   000477 710000 19                 TRA     s:9324
        19 000420   000477 710000 19                 TRA     s:9324
        19 000421   000477 710000 19                 TRA     s:9324
        19 000422   000477 710000 19                 TRA     s:9324
        19 000423   000477 710000 19                 TRA     s:9324
        19 000424   000477 710000 19                 TRA     s:9324
        19 000425   000477 710000 19                 TRA     s:9324
        19 000426   000477 710000 19                 TRA     s:9324
        19 000427   000477 710000 19                 TRA     s:9324
        19 000430   000477 710000 19                 TRA     s:9324
        19 000431   000477 710000 19                 TRA     s:9324
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:202  
        19 000432   000477 710000 19                 TRA     s:9324
        19 000433   000477 710000 19                 TRA     s:9324
        19 000434   000477 710000 19                 TRA     s:9324
        19 000435   000477 710000 19                 TRA     s:9324
        19 000436   000477 710000 19                 TRA     s:9324
        19 000437   000477 710000 19                 TRA     s:9324
        19 000440   000467 710000 19                 TRA     s:9321

      804     9309    4               CASE (%TYD);

      805     9310    4                 IF IDENT_ST$ -> VARIABLE.NDSC.TN = %NDSC4 THEN

   9310 19 000441   300001 236100                    LDQ     1,,PR3
        19 000442   040000 316007                    CANQ    16384,DL
        19 000443   000477 600000 19                 TZE     s:9324

      806     9311    5                   DO;

      807     9312    5                     IF IDENT_ST$ -> VARIABLE.B.DIGIT THEN

   9312 19 000444   300003 236100                    LDQ     3,,PR3
        19 000445   000200 316007                    CANQ    128,DL
        19 000446   000454 600000 19                 TZE     s:9316

      808     9313    5                       DNA_ROPCON.TA = %ADSC4;

   9313 19 000447   000062 236000 17                 LDQ     DNA_ROPCON
        19 000450   000011 376000 20                 ANQ     9
        19 000451   040000 276007                    ORQ     16384,DL
        19 000452   000062 756000 17                 STQ     DNA_ROPCON
        19 000453   000477 710000 19                 TRA     s:9324

      809     9314    5                     ELSE
      810     9315    6                       DO;

      811     9316    6                        INIT_LTS$ -> INIT_LTS.LENGTH = (INIT_LTS$ -> INIT_LTS.LENGTH +
              9316                                  2) / 2;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:203  

   9316 19 000454   100000 474500                    LDP4    0,,PR1
        19 000455   400005 236100                    LDQ     5,,PR4
        19 000456   000002 036007                    ADLQ    2,DL
        19 000457   000001 772000                    QRL     1
        19 000460   400005 756100                    STQ     5,,PR4

      812     9317    6                        DNA_ROPCON.N = (DNA_ROPCON.N + 1) / 2; /* In units of bytes */

   9317 19 000461   000062 236000 17                 LDQ     DNA_ROPCON
        19 000462   000077 376007                    ANQ     63,DL
        19 000463   000001 036007                    ADLQ    1,DL
        19 000464   000001 772000                    QRL     1
        19 000465   000062 752001 17                 STCQ    DNA_ROPCON,'01'O

      813     9318    6                       END;

      814     9319    5                   END;

   9319 19 000466   000477 710000 19                 TRA     s:9324

      815     9320    4               CASE (%TYC);

      816     9321    4                 DNA_BCD_ROPCON.CN = IDENT_ST$ -> VARIABLE.NDSC.CN;

   9321 19 000467   300001 236100                    LDQ     1,,PR3
        19 000470   000062 676000 17                 ERQ     DNA_ROPCON
        19 000471   700000 376007                    ANQ     -32768,DL
        19 000472   000062 656000 17                 ERSQ    DNA_ROPCON

      817     9322    4                 DNA_BCD_ROPCON.TA = %ADSC6;

   9322 19 000473   000062 236000 17                 LDQ     DNA_ROPCON
        19 000474   000011 376000 20                 ANQ     9
        19 000475   020000 276007                    ORQ     8192,DL
        19 000476   000062 756000 17                 STQ     DNA_ROPCON

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:204  
      818     9323    4             END;

      819     9324    3             CALL Z8AF$FORME (%DNA,

   9324 19 000477   100000 473500                    LDP3    0,,PR1
        19 000500   300001 634500                    EPPR4   1,,PR3
        19 000501   200033 454500                    STP4    ETT$$+5,,AUTO
        19 000502   000014 236000 20                 LDQ     12
        19 000503   200032 756100                    STQ     ETT$$+4,,AUTO
        19 000504   300001 635500                    EPPR5   1,,PR3
        19 000505   200031 455500                    STP5    ETT$$+3,,AUTO
        19 000506   000015 236000 20                 LDQ     13
        19 000507   200030 756100                    STQ     ETT$$+2,,AUTO
        19 000510   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 000511   000012 631400 20                 EPPR1   10
        19 000512   000000 701000 xent               TSX1    Z8AF$FORME
        19 000513   000000 011000                    NOP     0

      820     9325    3                              INIT_LTS$ -> INIT_LTS.BASE$,
      821     9326    3                              DNA_ROPCON,
      822     9327    3                              INIT_LTS$ -> INIT_LTS.BASE$);
      823     9328                  /* DNA needed for MFILL, move one table element to another, etc. */
      824     9329    3             DNA_ROPCON = '0'B;

   9329 19 000514   000062 450000 17                 STZ     DNA_ROPCON
        19 000515   002127 710000 19                 TRA     s:9617

      825     9330    3           CASE (ELSE);

      826     9331                  %GET_ADSC_LEN (ST$ = IDENT_ST$, RTN = INIT_LTS$ -> INIT_LTS.LENGTH);

   9333 19 000516   100003 236100                    LDQ     3,,PR1
        19 000517   004000 316003                    CANQ    2048,DU
        19 000520   000540 600000 19                 TZE     s:9339

   9334 19 000521   100005 473500                    LDP3    5,,PR1
        19 000522   300000 221100                    LDX1    0,,PR3
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:205  
        19 000523   001105 101003                    CMPX1   581,DU
        19 000524   000533 601000 19                 TNZ     s:9337

   9335 19 000525   200006 474500                    LDP4    @INIT_LTS$,,AUTO
        19 000526   400000 475500                    LDP5    0,,PR4
        19 000527   300003 476500                    LDP6    3,,PR3
        19 000530   600001 235100                    LDA     1,,PR6
        19 000531   500005 755100                    STA     5,,PR5
        19 000532   002127 710000 19                 TRA     s:9617

   9337 19 000533   200006 474500                    LDP4    @INIT_LTS$,,AUTO
        19 000534   400000 475500                    LDP5    0,,PR4
        19 000535   300001 235100                    LDA     1,,PR3
        19 000536   500005 755100                    STA     5,,PR5
        19 000537   002127 710000 19                 TRA     s:9617

   9339 19 000540   200006 473500                    LDP3    @INIT_LTS$,,AUTO
        19 000541   300000 474500                    LDP4    0,,PR3
        19 000542   100001 236100                    LDQ     1,,PR1
        19 000543   007777 376007                    ANQ     4095,DL
        19 000544   400005 756100                    STQ     5,,PR4

      827     9342    3         END; /* CASE */

      828     9343    2       END; /* ELEMENTARY */

   9343 19 000545   002127 710000 19                 TRA     s:9617

      829     9344    1     ELSE
      830     9345    2       DO; /* GROUP ITEM */

      831     9346    2         SON_QLT$ = IDENT_QLT$ -> QLT.SON; /* Cannot be ADDR (NIL) */

   9346 19 000546   200007 476500                    LDP6    IDENT_QLT$,,AUTO
        19 000547   600003 236100                    LDQ     3,,PR6
        19 000550   200015 756100                    STQ     SON_QLT$,,AUTO

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:206  
      832     9347    2         PREV_SON_LTS$ = ADDR (NIL);

   9347 19 000551   000000 236000 20                 LDQ     0
        19 000552   200021 756100                    STQ     PREV_SON_LTS$,,AUTO

      833     9348    2         PREV_SON_ST$ = ADDR (NIL);

   9348 19 000553   200020 756100                    STQ     PREV_SON_ST$,,AUTO

      834     9349    2         INIT_LTS$ -> INIT_LTS.GROUP = TRUE;

   9349 19 000554   000000 477500                    LDP7    0,,PR0
        19 000555   000100 236007                    LDQ     64,DL
        19 000556   700000 256100                    ORSQ    0,,PR7

      835     9350              %GET_ADSC_LEN (ST$ = IDENT_ST$, RTN = INIT_LTS$ -> INIT_LTS.LENGTH);

   9352 19 000557   100000 475500                    LDP5    0,,PR1
        19 000560   500003 236100                    LDQ     3,,PR5
        19 000561   004000 316003                    CANQ    2048,DU
        19 000562   000606 600000 19                 TZE     s:9358

   9353 19 000563   500005 477500                    LDP7    5,,PR5
        19 000564   700000 221100                    LDX1    0,,PR7
        19 000565   001105 101003                    CMPX1   581,DU
        19 000566   000577 601000 19                 TNZ     s:9356

   9354 19 000567   000000 471500                    LDP1    0,,PR0
        19 000570   200003 475500                    LDP5    @IDENT_ST$,,AUTO
        19 000571   500000 477500                    LDP7    0,,PR5
        19 000572   700005 470500                    LDP0    5,,PR7
        19 000573   000003 473500                    LDP3    3,,PR0
        19 000574   300001 235100                    LDA     1,,PR3
        19 000575   100005 755100                    STA     5,,PR1
        19 000576   000612 710000 19                 TRA     s:9361

   9356 19 000577   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:207  
        19 000600   200003 475500                    LDP5    @IDENT_ST$,,AUTO
        19 000601   500000 477500                    LDP7    0,,PR5
        19 000602   700005 470500                    LDP0    5,,PR7
        19 000603   000001 235100                    LDA     1,,PR0
        19 000604   100005 755100                    STA     5,,PR1
        19 000605   000612 710000 19                 TRA     s:9361

   9358 19 000606   000000 477500                    LDP7    0,,PR0
        19 000607   500001 236100                    LDQ     1,,PR5
        19 000610   007777 376007                    ANQ     4095,DL
        19 000611   700005 756100                    STQ     5,,PR7

      836     9361    2         IF INIT_LTS$ -> INIT_LTS.DIMS <= 1 OR LAST_IN_USE < 0 THEN

   9361 19 000612   200006 470500                    LDP0    @INIT_LTS$,,AUTO
        19 000613   000000 471500                    LDP1    0,,PR0
        19 000614   100007 235100                    LDA     7,,PR1
        19 000615   000002 115007                    CMPA    2,DL
        19 000616   000621 602000 19                 TNC     s:9362
        19 000617   000061 236000 17                 LDQ     LAST_IN_USE
        19 000620   000624 605000 19                 TPL     s:9363

      837     9362    2           SUBSCR1$ = SUBSCR$;

   9362 19 000621   400000 236100                    LDQ     0,,PR4
        19 000622   200022 756100                    STQ     SUBSCR1$,,AUTO
        19 000623   000647 710000 19                 TRA     s:9368

      838     9363    2         ELSE IF SUBSCR$ = ADDR (NIL) THEN

   9363 19 000624   400000 236100                    LDQ     0,,PR4
        19 000625   000000 116000 20                 CMPQ    0
        19 000626   000633 601000 19                 TNZ     s:9366

      839     9364    2           SUBSCR1$ = INDICES$ (LAST_IN_USE);

   9364 19 000627   000061 721000 17                 LXL1    LAST_IN_USE
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:208  
        19 000630   000000 236011 17                 LDQ     INDICES$,X1
        19 000631   200022 756100                    STQ     SUBSCR1$,,AUTO
        19 000632   000647 710000 19                 TRA     s:9368

      840     9365    2         ELSE
      841     9366    2           CALL Z8AF$FORME (%ADI, SUBSCR$, INDICES$ (LAST_IN_USE), SUBSCR1$);

   9366 19 000633   200022 633500                    EPPR3   SUBSCR1$,,AUTO
        19 000634   200033 453500                    STP3    ETT$$+5,,AUTO
        19 000635   000061 721000 17                 LXL1    LAST_IN_USE
        19 000636   000000 631411 17                 EPPR1   INDICES$,X1
        19 000637   200032 451500                    STP1    ETT$$+4,,AUTO
        19 000640   200004 236100                    LDQ     @SUBSCR$,,AUTO
        19 000641   000017 235000 20                 LDA     15
        19 000642   200030 757100                    STAQ    ETT$$+2,,AUTO
        19 000643   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 000644   000012 631400 20                 EPPR1   10
        19 000645   000000 701000 xent               TSX1    Z8AF$FORME
        19 000646   000000 011000                    NOP     0

      842     9367    3         DO UNTIL SON_QLT$ = ADDR (NIL);

      843     9368    3           SON_DIM = 0;

   9368 19 000647   200013 450100                    STZ     SON_DIM,,AUTO

      844     9369    3           SON_ST$ = SON_QLT$ -> QLT.ST$;

   9369 19 000650   200015 470500                    LDP0    SON_QLT$,,AUTO
        19 000651   000004 236100                    LDQ     4,,PR0
        19 000652   200016 756100                    STQ     SON_ST$,,AUTO

      845     9370    3           IF SON_QLT$ -> QLT.B.RENAMES

   9370 19 000653   000000 236100                    LDQ     0,,PR0
        19 000654   040000 316007                    CANQ    16384,DL
        19 000655   002062 601000 19                 TNZ     s:9604
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:209  
        19 000656   200016 471500                    LDP1    SON_ST$,,AUTO
        19 000657   100000 220100                    LDX0    0,,PR1
        19 000660   000764 100003                    CMPX0   500,DU
        19 000661   002062 600000 19                 TZE     s:9604
        19 000662   100003 430100                    FSZN    3,,PR1
        19 000663   002062 604000 19                 TMI     s:9604

      846     9371    3               OR SON_ST$ -> ST.ID = %CONDITION
      847     9372    3               OR SON_ST$ -> VARIABLE.B.REDEF_SUB THEN; /* Ignore item */
      848     9373    3           ELSE IF SON_ST$ -> VARIABLE.TYPE = %TYX

   9373 19 000664   100002 221100                    LDX1    2,,PR1
        19 000665   000011 101003                    CMPX1   9,DU
        19 000666   000677 600000 19                 TZE     s:9377
        19 000667   000012 101003                    CMPX1   10,DU
        19 000670   000677 600000 19                 TZE     s:9377
        19 000671   100006 473500                    LDP3    6,,PR1
        19 000672   300004 222100                    LDX2    4,,PR3
        19 000673   040000 106540                    CMPC    fill='040'O
        19 000674   300004 400012                    ADSC9   4,,PR3                   cn=2,n=*X2
        19 000675   000000 000006 18                 ADSC9   0                        cn=0,n=6
        19 000676   000707 601000 19                 TNZ     s:9382

      849     9374    3               OR SON_ST$ -> VARIABLE.TYPE = %TYY
      850     9375    3               OR SON_ST$ -> VARIABLE.DNT$ -> DNT.TEXT.NAME = 'FILLER' THEN
      851     9376    4             DO;

      852     9377    4               INIT_LTS$ -> INIT_LTS.FILLER = TRUE; /* Uninitializable field found */

   9377 19 000677   200006 473500                    LDP3    @INIT_LTS$,,AUTO
        19 000700   300000 474500                    LDP4    0,,PR3
        19 000701   000400 236007                    LDQ     256,DL
        19 000702   400000 256100                    ORSQ    0,,PR4

      853     9378    4               INIT_LTS$ -> INIT_LTS.MFILLABLE = FALSE;

   9378 19 000703   300000 471500                    LDP1    0,,PR3
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:210  
        19 000704   000004 236000 20                 LDQ     4
        19 000705   100000 356100                    ANSQ    0,,PR1

      854     9379    4             END;

   9379 19 000706   002062 710000 19                 TRA     s:9604

      855     9380    3           ELSE
      856     9381    4             DO; /* Initializable item */

      857     9382    4               IF SUBSCR1$ = ADDR (NIL) THEN

   9382 19 000707   200022 236100                    LDQ     SUBSCR1$,,AUTO
        19 000710   000000 116000 20                 CMPQ    0
        19 000711   000714 601000 19                 TNZ     s:9384

      858     9383    4                 SUBSCR2$ = SUBSCR1$;

   9383 19 000712   200023 756100                    STQ     SUBSCR2$,,AUTO
        19 000713   001003 710000 19                 TRA     s:9396

      859     9384    4               ELSE IF SON_ST$ -> VARIABLE.B.DIGIT THEN

   9384 19 000714   100003 236100                    LDQ     3,,PR1
        19 000715   000200 316007                    CANQ    128,DL
        19 000716   000734 600000 19                 TZE     s:9386

      860     9385    4                 CALL Z8AF$FORME (%MPI2, SUBSCR1$, 1, SUBSCR2$);

   9385 19 000717   200023 634500                    EPPR4   SUBSCR2$,,AUTO
        19 000720   200033 454500                    STP4    ETT$$+5,,AUTO
        19 000721   000022 236000 20                 LDQ     18
        19 000722   200032 756100                    STQ     ETT$$+4,,AUTO
        19 000723   200022 633500                    EPPR3   SUBSCR1$,,AUTO
        19 000724   200031 453500                    STP3    ETT$$+3,,AUTO
        19 000725   000023 236000 20                 LDQ     19
        19 000726   200030 756100                    STQ     ETT$$+2,,AUTO
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:211  
        19 000727   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 000730   000012 631400 20                 EPPR1   10
        19 000731   000000 701000 xent               TSX1    Z8AF$FORME
        19 000732   000000 011000                    NOP     0
        19 000733   001003 710000 19                 TRA     s:9396

      861     9386    4               ELSE IF SON_ST$ -> VARIABLE.TYPE = %TYB OR

   9386 19 000734   000014 101003                    CMPX1   12,DU
        19 000735   000740 600000 19                 TZE     s:9389
        19 000736   000023 101003                    CMPX1   19,DU
        19 000737   001001 601000 19                 TNZ     s:9395

      862     9387    4                   SON_ST$ -> VARIABLE.TYPE = %TYC THEN
      863     9388    5                 DO;

      864     9389    5                   MKCN.CON = 3;

   9389 19 000740   000003 235007                    LDA     3,DL
        19 000741   000000 755000 1                  STA     MKCN

      865     9390    5                   CALL Z8AC$MAKE_CONST (ETT$$);

   9390 19 000742   200026 634500                    EPPR4   ETT$$,,AUTO
        19 000743   200030 454500                    STP4    ETT$$+2,,AUTO
        19 000744   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 000745   000001 631400 20                 EPPR1   1
        19 000746   000000 701000 xent               TSX1    Z8AC$MAKE_CONST
        19 000747   000000 011000                    NOP     0

      866     9391    5                   CALL Z8AF$FORME (%MPI, SUBSCR1$, ETT$$, SUBSCR2$);

   9391 19 000750   200023 630500                    EPPR0   SUBSCR2$,,AUTO
        19 000751   200033 450500                    STP0    ETT$$+5,,AUTO
        19 000752   200026 631500                    EPPR1   ETT$$,,AUTO
        19 000753   200032 451500                    STP1    ETT$$+4,,AUTO
        19 000754   200022 633500                    EPPR3   SUBSCR1$,,AUTO
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:212  
        19 000755   200031 453500                    STP3    ETT$$+3,,AUTO
        19 000756   000025 236000 20                 LDQ     21
        19 000757   200030 756100                    STQ     ETT$$+2,,AUTO
        19 000760   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 000761   000012 631400 20                 EPPR1   10
        19 000762   000000 701000 xent               TSX1    Z8AF$FORME
        19 000763   000000 011000                    NOP     0

      867     9392    5                   CALL Z8AF$FORME (%DVI2, SUBSCR2$, 1, SUBSCR2$);

   9392 19 000764   200023 630500                    EPPR0   SUBSCR2$,,AUTO
        19 000765   200033 450500                    STP0    ETT$$+5,,AUTO
        19 000766   000022 236000 20                 LDQ     18
        19 000767   200032 756100                    STQ     ETT$$+4,,AUTO
        19 000770   200023 631500                    EPPR1   SUBSCR2$,,AUTO
        19 000771   200031 451500                    STP1    ETT$$+3,,AUTO
        19 000772   000027 236000 20                 LDQ     23
        19 000773   200030 756100                    STQ     ETT$$+2,,AUTO
        19 000774   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 000775   000012 631400 20                 EPPR1   10
        19 000776   000000 701000 xent               TSX1    Z8AF$FORME
        19 000777   000000 011000                    NOP     0

      868     9393    5                 END;

   9393 19 001000   001003 710000 19                 TRA     s:9396

      869     9394    4               ELSE
      870     9395    4                 SUBSCR2$ = SUBSCR1$;

   9395 19 001001   200022 236100                    LDQ     SUBSCR1$,,AUTO
        19 001002   200023 756100                    STQ     SUBSCR2$,,AUTO

      871     9396    4               IF SON_QLT$ -> QLT.B.OCCURS THEN

   9396 19 001003   200015 470500                    LDP0    SON_QLT$,,AUTO
        19 001004   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:213  
        19 001005   400000 316007                    CANQ    -131072,DL
        19 001006   001063 600000 19                 TZE     s:9453

      872     9397    5                 DO;

      873     9398                        %GET_LTS (@ID = %DIMS, @ST$ = SON_ST$, @RETURN$ = DIMS$);

   9400 19 001007   200016 471500                    LDP1    SON_ST$,,AUTO
        19 001010   100005 236100                    LDQ     5,,PR1
        19 001011   000000 116000 20                 CMPQ    0
        19 001012   001022 600000 19                 TZE     s:9434
        19 001013   100005 473500                    LDP3    5,,PR1
        19 001014   300000 220100                    LDX0    0,,PR3
        19 001015   001105 100003                    CMPX0   581,DU
        19 001016   001022 601000 19                 TNZ     s:9434

   9404 19 001017   300001 236100                    LDQ     1,,PR3
        19 001020   200024 756100                    STQ     DIMS$,,AUTO

   9432 19 001021   001034 710000 19                 TRA     s:9441

   9434 19 001022   000000 116000 20                 CMPQ    0
        19 001023   001032 600000 19                 TZE     s:9438
        19 001024   100005 473500                    LDP3    5,,PR1
        19 001025   300000 220100                    LDX0    0,,PR3
        19 001026   001104 100003                    CMPX0   580,DU
        19 001027   001032 601000 19                 TNZ     s:9438

   9436 19 001030   200024 756100                    STQ     DIMS$,,AUTO
        19 001031   001034 710000 19                 TRA     s:9441

   9438 19 001032   000000 236000 20                 LDQ     0
        19 001033   200024 756100                    STQ     DIMS$,,AUTO

      874     9441    5                   SON_DIM = DIMS$ -> DIMS.D.DIM ((DIMS$ -> DIMS.N - %MIN_DIM_SIZE) /

   9441 19 001034   200024 473500                    LDP3    DIMS$,,AUTO
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:214  
        19 001035   300000 236100                    LDQ     0,,PR3
        19 001036   777777 376007                    ANQ     -1,DL
        19 001037   000005 136007                    SBLQ    5,DL
        19 001040   000003 506007                    DIV     3,DL
        19 001041   000003 402007                    MPY     3,DL
        19 001042   300003 235106                    LDA     3,QL,PR3
        19 001043   200013 755100                    STA     SON_DIM,,AUTO

      875     9442    5                               %NO_WORDS_PER_DIM);
      876     9443    5                   IF SON_DIM > 1 THEN

   9443 19 001044   000002 115007                    CMPA    2,DL
        19 001045   001063 602000 19                 TNC     s:9453

      877     9444    6                     DO;

      878     9445    6                       LAST_IN_USE = LAST_IN_USE + 1;

   9445 19 001046   000061 054000 17                 AOS     LAST_IN_USE

      879     9446    6                       IF LAST_IN_USE > LAST_CREATED THEN

   9446 19 001047   000061 236000 17                 LDQ     LAST_IN_USE
        19 001050   000060 116000 17                 CMPQ    LAST_CREATED
        19 001051   001063 604400 19                 TMOZ    s:9453

      880     9447    7                         DO;

      881     9448    7                           LAST_CREATED = LAST_IN_USE;

   9448 19 001052   000060 756000 17                 STQ     LAST_CREATED

      882     9449    7                           CALL Z8AT$CREATE_TEMP_WITH_BASE (%SCALAR, INDICES$ (
              9449                                    LAST_IN_USE));

   9449 19 001053   000000 634406 17                 EPPR4   INDICES$,QL
        19 001054   200031 454500                    STP4    ETT$$+3,,AUTO
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:215  
        19 001055   000032 236000 20                 LDQ     26
        19 001056   200030 756100                    STQ     ETT$$+2,,AUTO
        19 001057   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 001060   000030 631400 20                 EPPR1   24
        19 001061   000000 701000 xent               TSX1    Z8AT$CREATE_TEMP_WITH_BASE
        19 001062   000000 011000                    NOP     0

      883     9450    7                         END;

      884     9451    6                     END; /* SON_DIM > 1 */

      885     9452    5                 END; /* SON_QLT$ -> QLT.B.OCCURS */

      886     9453    4               SON_OFF = OFF;

   9453 19 001063   200005 470500                    LDP0    @OFF,,AUTO
        19 001064   000000 235100                    LDA     0,,PR0
        19 001065   200012 755100                    STA     SON_OFF,,AUTO

      887     9454    5               DO CASE (SON_ST$ -> VARIABLE.TYPE);

   9454 19 001066   200016 471500                    LDP1    SON_ST$,,AUTO
        19 001067   100002 220100                    LDX0    2,,PR1
        19 001070   000024 100003                    CMPX0   20,DU
        19 001071   001073 602010 19                 TNC     s:9454+5,X0
        19 001072   001135 710000 19                 TRA     s:9463
        19 001073   001117 710000 19                 TRA     s:9456
        19 001074   001132 710000 19                 TRA     s:9461
        19 001075   001135 710000 19                 TRA     s:9463
        19 001076   001135 710000 19                 TRA     s:9463
        19 001077   001132 710000 19                 TRA     s:9461
        19 001100   001132 710000 19                 TRA     s:9461
        19 001101   001135 710000 19                 TRA     s:9463
        19 001102   001135 710000 19                 TRA     s:9463
        19 001103   001135 710000 19                 TRA     s:9463
        19 001104   001135 710000 19                 TRA     s:9463
        19 001105   001135 710000 19                 TRA     s:9463
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:216  
        19 001106   001135 710000 19                 TRA     s:9463
        19 001107   001125 710000 19                 TRA     s:9459
        19 001110   001135 710000 19                 TRA     s:9463
        19 001111   001135 710000 19                 TRA     s:9463
        19 001112   001135 710000 19                 TRA     s:9463
        19 001113   001135 710000 19                 TRA     s:9463
        19 001114   001135 710000 19                 TRA     s:9463
        19 001115   001132 710000 19                 TRA     s:9461
        19 001116   001125 710000 19                 TRA     s:9459

      888     9455    5                 CASE (%TYD);

      889     9456    5                   IF SON_ST$ -> VARIABLE.NDSC.TN = %NDSC4 THEN

   9456 19 001117   100001 236100                    LDQ     1,,PR1
        19 001120   040000 316007                    CANQ    16384,DL
        19 001121   001135 600000 19                 TZE     s:9463

      890     9457    5                     SON_OFF = SON_OFF * 2;

   9457 19 001122   200012 236100                    LDQ     SON_OFF,,AUTO
        19 001123   200012 056100                    ASQ     SON_OFF,,AUTO
        19 001124   001135 710000 19                 TRA     s:9463

      891     9458    5                 CASE (%TYB, %TYC);

      892     9459    5                   SON_OFF = SON_OFF * 3 / 2;

   9459 19 001125   200012 236100                    LDQ     SON_OFF,,AUTO
        19 001126   000003 402007                    MPY     3,DL
        19 001127   000002 506007                    DIV     2,DL
        19 001130   200012 756100                    STQ     SON_OFF,,AUTO
        19 001131   001135 710000 19                 TRA     s:9463

      893     9460    5                 CASE (%TYI, %TYP, %TYR, %TYQ);

      894     9461    5                   SON_OFF = SON_OFF / 4;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:217  

   9461 19 001132   200012 236100                    LDQ     SON_OFF,,AUTO
        19 001133   000004 506007                    DIV     4,DL
        19 001134   200012 756100                    STQ     SON_OFF,,AUTO

      895     9462    5               END;

      896     9463    4               CALL Z8EU$MAKE_INIT_LTS (SON_ST$, SUBSCR2$, SON_OFF, SON_LTS$);

   9463 19 001135   200017 633500                    EPPR3   SON_LTS$,,AUTO
        19 001136   200033 453500                    STP3    ETT$$+5,,AUTO
        19 001137   200012 634500                    EPPR4   SON_OFF,,AUTO
        19 001140   200032 454500                    STP4    ETT$$+4,,AUTO
        19 001141   200023 635500                    EPPR5   SUBSCR2$,,AUTO
        19 001142   200031 455500                    STP5    ETT$$+3,,AUTO
        19 001143   200016 636500                    EPPR6   SON_ST$,,AUTO
        19 001144   200030 456500                    STP6    ETT$$+2,,AUTO
        19 001145   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 001146   000012 631400 20                 EPPR1   10
        19 001147   000000 701000 19                 TSX1    s:25
        19 001150   000000 011000                    NOP     0

      897     9464    4               IF NOT SON_LTS$ -> INIT_LTS.GROUP AND SUBSCR2$ ~= ADDR (NIL) THEN

   9464 19 001151   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001152   000000 236100                    LDQ     0,,PR0
        19 001153   000100 316007                    CANQ    64,DL
        19 001154   001247 601000 19                 TNZ     s:9473
        19 001155   200023 236100                    LDQ     SUBSCR2$,,AUTO
        19 001156   000000 116000 20                 CMPQ    0
        19 001157   001247 600000 19                 TZE     s:9473

      898     9465    5                 DO CASE (SON_ST$ -> VARIABLE.TYPE);

   9465 19 001160   200016 471500                    LDP1    SON_ST$,,AUTO
        19 001161   100002 220100                    LDX0    2,,PR1
        19 001162   000023 100003                    CMPX0   19,DU
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:218  
        19 001163   001165 602010 19                 TNC     s:9465+5,X0
        19 001164   001247 710000 19                 TRA     s:9473
        19 001165   001210 710000 19                 TRA     s:9467
        19 001166   001233 710000 19                 TRA     s:9471
        19 001167   001247 710000 19                 TRA     s:9473
        19 001170   001247 710000 19                 TRA     s:9473
        19 001171   001233 710000 19                 TRA     s:9471
        19 001172   001233 710000 19                 TRA     s:9471
        19 001173   001247 710000 19                 TRA     s:9473
        19 001174   001247 710000 19                 TRA     s:9473
        19 001175   001247 710000 19                 TRA     s:9473
        19 001176   001247 710000 19                 TRA     s:9473
        19 001177   001247 710000 19                 TRA     s:9473
        19 001200   001247 710000 19                 TRA     s:9473
        19 001201   001247 710000 19                 TRA     s:9473
        19 001202   001247 710000 19                 TRA     s:9473
        19 001203   001247 710000 19                 TRA     s:9473
        19 001204   001247 710000 19                 TRA     s:9473
        19 001205   001247 710000 19                 TRA     s:9473
        19 001206   001247 710000 19                 TRA     s:9473
        19 001207   001233 710000 19                 TRA     s:9471

      899     9466    5                   CASE (%TYD);

      900     9467    5                     IF SON_ST$ -> VARIABLE.NDSC.TN = %NDSC4 AND

   9467 19 001210   100001 236100                    LDQ     1,,PR1
        19 001211   040000 316007                    CANQ    16384,DL
        19 001212   001247 600000 19                 TZE     s:9473
        19 001213   100003 236100                    LDQ     3,,PR1
        19 001214   000200 316007                    CANQ    128,DL
        19 001215   001247 601000 19                 TNZ     s:9473

      901     9468    5                         NOT SON_ST$ -> VARIABLE.B.DIGIT THEN
      902     9469    5                       CALL Z8AF$FORME (%MPI2, SUBSCR2$, 1, SUBSCR2$);

   9469 19 001216   200023 633500                    EPPR3   SUBSCR2$,,AUTO
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:219  
        19 001217   200033 453500                    STP3    ETT$$+5,,AUTO
        19 001220   000022 236000 20                 LDQ     18
        19 001221   200032 756100                    STQ     ETT$$+4,,AUTO
        19 001222   200023 634500                    EPPR4   SUBSCR2$,,AUTO
        19 001223   200031 454500                    STP4    ETT$$+3,,AUTO
        19 001224   000023 236000 20                 LDQ     19
        19 001225   200030 756100                    STQ     ETT$$+2,,AUTO
        19 001226   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 001227   000012 631400 20                 EPPR1   10
        19 001230   000000 701000 xent               TSX1    Z8AF$FORME
        19 001231   000000 011000                    NOP     0
        19 001232   001247 710000 19                 TRA     s:9473

      903     9470    5                   CASE (%TYI, %TYP, %TYR, %TYQ);

      904     9471    5                     CALL Z8AF$FORME (%DVI2, SUBSCR2$, 2, SUBSCR2$);

   9471 19 001233   200023 633500                    EPPR3   SUBSCR2$,,AUTO
        19 001234   200033 453500                    STP3    ETT$$+5,,AUTO
        19 001235   000034 236000 20                 LDQ     28
        19 001236   200032 756100                    STQ     ETT$$+4,,AUTO
        19 001237   200023 634500                    EPPR4   SUBSCR2$,,AUTO
        19 001240   200031 454500                    STP4    ETT$$+3,,AUTO
        19 001241   000027 236000 20                 LDQ     23
        19 001242   200030 756100                    STQ     ETT$$+2,,AUTO
        19 001243   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 001244   000012 631400 20                 EPPR1   10
        19 001245   000000 701000 xent               TSX1    Z8AF$FORME
        19 001246   000000 011000                    NOP     0

      905     9472    5                 END;

      906     9473    4               IF SON_DIM > 1 THEN

   9473 19 001247   200013 235100                    LDA     SON_DIM,,AUTO
        19 001250   000002 115007                    CMPA    2,DL
        19 001251   001446 602000 19                 TNC     s:9511
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:220  

      907     9474    5                 DO;

      908     9475    5                   IF SON_LTS$ -> INIT_LTS.MFILLABLE AND

   9475 19 001252   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001253   000000 236100                    LDQ     0,,PR0
        19 001254   000200 316007                    CANQ    128,DL
        19 001255   001357 600000 19                 TZE     s:9496
        19 001256   000040 316007                    CANQ    32,DL
        19 001257   001301 600000 19                 TZE     s:9482
        19 001260   000005 235100                    LDA     5,,PR0
        19 001261   000043 773000                    LRL     35
        19 001262   000003 507007                    DVF     3,DL
        19 001263   000000 116003                    CMPQ    0,DU
        19 001264   001275 601000 19                 TNZ     s:9475+19
        19 001265   200016 471500                    LDP1    SON_ST$,,AUTO
        19 001266   100001 236100                    LDQ     1,,PR1
        19 001267   700000 316007                    CANQ    -32768,DL
        19 001270   001301 600000 19                 TZE     s:9482
        19 001271   100001 236100                    LDQ     1,,PR1
        19 001272   700000 376007                    ANQ     -32768,DL
        19 001273   400000 116007                    CMPQ    -131072,DL
        19 001274   001301 600000 19                 TZE     s:9482
        19 001275   200016 471500                    LDP1    SON_ST$,,AUTO
        19 001276   100002 220100                    LDX0    2,,PR1
        19 001277   000010 100003                    CMPX0   8,DU
        19 001300   001357 601000 19                 TNZ     s:9496

      909     9476    5                       (NOT SON_LTS$ -> INIT_LTS.BCD OR
      910     9477    5                          (MOD (SON_LTS$ -> INIT_LTS.LENGTH, 3) = 0 AND
      911     9478    5                            (SON_ST$ -> VARIABLE.NDSC.CN = 0 OR
      912     9479    5                             SON_ST$ -> VARIABLE.NDSC.CN = 4)) OR
      913     9480    5                        SON_ST$ -> VARIABLE.TYPE = %TYA) THEN
      914     9481    6                     DO;

      915     9482    6                       IF SON_LTS$ -> INIT_LTS.BASE$ -> ETT.ID = %SIZ
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:221  

   9482 19 001301   000001 471500                    LDP1    1,,PR0
        19 001302   100000 220100                    LDX0    0,,PR1
        19 001303   000004 100003                    CMPX0   4,DU
        19 001304   001310 601000 19                 TNZ     s:9484

      916     9483    6                         THEN SON_BASE$ = SON_LTS$ -> INIT_LTS.BASE$ -> ETT.LOP;

   9483 19 001305   100001 236100                    LDQ     1,,PR1
        19 001306   200014 756100                    STQ     SON_BASE$,,AUTO
        19 001307   001312 710000 19                 TRA     s:9485

      917     9484    6                         ELSE SON_BASE$ = SON_LTS$ -> INIT_LTS.BASE$;

   9484 19 001310   000001 236100                    LDQ     1,,PR0
        19 001311   200014 756100                    STQ     SON_BASE$,,AUTO

      918     9485    6                       SON_LTS$ -> INIT_LTS.LENGTH = SON_LTS$ -> INIT_LTS.LENGTH *
              9485                                SON_DIM;

   9485 19 001312   000005 236100                    LDQ     5,,PR0
        19 001313   200013 402100                    MPY     SON_DIM,,AUTO
        19 001314   000005 756100                    STQ     5,,PR0

      919     9486    6                       SON_LTS$ -> INIT_LTS.DIMS = 0; /* Collapsed to scalar */

   9486 19 001315   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001316   000007 450100                    STZ     7,,PR0

      920     9487    6                       SON_LTS$ -> INIT_LTS.GROUP = TRUE;

   9487 19 001317   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001320   000100 236007                    LDQ     64,DL
        19 001321   000000 256100                    ORSQ    0,,PR0

      921     9488    6                       MKCN.CON = SON_LTS$ -> INIT_LTS.LENGTH;

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:222  
   9488 19 001322   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001323   000005 235100                    LDA     5,,PR0
        19 001324   000000 755000 1                  STA     MKCN

      922     9489    6                       CALL Z8AC$MAKE_CONST (ETT$$);

   9489 19 001325   200026 631500                    EPPR1   ETT$$,,AUTO
        19 001326   200030 451500                    STP1    ETT$$+2,,AUTO
        19 001327   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 001330   000001 631400 20                 EPPR1   1
        19 001331   000000 701000 xent               TSX1    Z8AC$MAKE_CONST
        19 001332   000000 011000                    NOP     0

      923     9490    6                       CALL Z8AF$FORME (%SIZ, SON_BASE$, ETT$$, SON_LTS$ -> INIT_LTS.
              9490                                BASE$);

   9490 19 001333   200017 236100                    LDQ     SON_LTS$,,AUTO
        19 001334   000001 036003                    ADLQ    1,DU
        19 001335   200033 756100                    STQ     ETT$$+5,,AUTO
        19 001336   200026 630500                    EPPR0   ETT$$,,AUTO
        19 001337   200032 450500                    STP0    ETT$$+4,,AUTO
        19 001340   200014 631500                    EPPR1   SON_BASE$,,AUTO
        19 001341   200031 451500                    STP1    ETT$$+3,,AUTO
        19 001342   000036 236000 20                 LDQ     30
        19 001343   200030 756100                    STQ     ETT$$+2,,AUTO
        19 001344   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 001345   000012 631400 20                 EPPR1   10
        19 001346   000000 701000 xent               TSX1    Z8AF$FORME
        19 001347   000000 011000                    NOP     0

      924     9491    6                       SON_LTS$ -> INIT_LTS.SON$ = ADDR (NIL);

   9491 19 001350   000000 236000 20                 LDQ     0
        19 001351   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001352   000003 756100                    STQ     3,,PR0

      925     9492    6                       SON_LTS$ -> INIT_LTS.SUBSCR$ = SUBSCR1$;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:223  

   9492 19 001353   200022 236100                    LDQ     SUBSCR1$,,AUTO
        19 001354   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001355   000010 756100                    STQ     8,,PR0

      926     9493    6                     END;

   9493 19 001356   001451 710000 19                 TRA     s:9512

      927     9494    5                   ELSE
      928     9495    6                     DO;

      929     9496    6                       SON_LTS$ -> INIT_LTS.INDEX$ = INDICES$ (LAST_IN_USE);

   9496 19 001357   000061 720000 17                 LXL0    LAST_IN_USE
        19 001360   000000 236010 17                 LDQ     INDICES$,X0
        19 001361   000011 756100                    STQ     9,,PR0

      930     9497    6                       SON_LTS$ -> INIT_LTS.SUBSCR$ = SUBSCR2$;

   9497 19 001362   200023 236100                    LDQ     SUBSCR2$,,AUTO
        19 001363   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001364   000010 756100                    STQ     8,,PR0

      931     9498    6                       SON_LTS$ -> INIT_LTS.SPAN = DIMS$ -> DIMS.D.SPAN

   9498 19 001365   200024 470500                    LDP0    DIMS$,,AUTO
        19 001366   000000 236100                    LDQ     0,,PR0
        19 001367   777777 376007                    ANQ     -1,DL
        19 001370   000005 136007                    SBLQ    5,DL
        19 001371   000003 506007                    DIV     3,DL
        19 001372   000003 402007                    MPY     3,DL
        19 001373   200017 471500                    LDP1    SON_LTS$,,AUTO
        19 001374   000002 235106                    LDA     2,QL,PR0
        19 001375   100006 755100                    STA     6,,PR1

      932     9499    6                           ((DIMS$ -> DIMS.N - %MIN_DIM_SIZE) / %NO_WORDS_PER_DIM);
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:224  
      933     9500    7                       DO CASE (SON_ST$ -> VARIABLE.TYPE);

   9500 19 001376   200016 471500                    LDP1    SON_ST$,,AUTO
        19 001377   100002 221100                    LDX1    2,,PR1
        19 001400   000023 101003                    CMPX1   19,DU
        19 001401   001403 602011 19                 TNC     s:9500+5,X1
        19 001402   001451 710000 19                 TRA     s:9512
        19 001403   001426 710000 19                 TRA     s:9502
        19 001404   001445 710000 19                 TRA     s:9509
        19 001405   001445 710000 19                 TRA     s:9509
        19 001406   001445 710000 19                 TRA     s:9509
        19 001407   001441 710000 19                 TRA     s:9506
        19 001410   001441 710000 19                 TRA     s:9506
        19 001411   001445 710000 19                 TRA     s:9509
        19 001412   001445 710000 19                 TRA     s:9509
        19 001413   001445 710000 19                 TRA     s:9509
        19 001414   001445 710000 19                 TRA     s:9509
        19 001415   001445 710000 19                 TRA     s:9509
        19 001416   001445 710000 19                 TRA     s:9509
        19 001417   001445 710000 19                 TRA     s:9509
        19 001420   001445 710000 19                 TRA     s:9509
        19 001421   001445 710000 19                 TRA     s:9509
        19 001422   001445 710000 19                 TRA     s:9509
        19 001423   001445 710000 19                 TRA     s:9509
        19 001424   001445 710000 19                 TRA     s:9509
        19 001425   001441 710000 19                 TRA     s:9506

      934     9501    7                         CASE (%TYD);

      935     9502    7                           IF SON_ST$ -> VARIABLE.NDSC.TN = %NDSC4 AND

   9502 19 001426   100001 236100                    LDQ     1,,PR1
        19 001427   040000 316007                    CANQ    16384,DL
        19 001430   001451 600000 19                 TZE     s:9512
        19 001431   100003 236100                    LDQ     3,,PR1
        19 001432   000200 316007                    CANQ    128,DL
        19 001433   001451 601000 19                 TNZ     s:9512
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:225  

      936     9503    7                               NOT SON_ST$ -> VARIABLE.B.DIGIT THEN
      937     9504    7                            SON_LTS$ -> INIT_LTS.SPAN = SON_LTS$ -> INIT_LTS.SPAN / 2;

   9504 19 001434   200017 473500                    LDP3    SON_LTS$,,AUTO
        19 001435   300006 236100                    LDQ     6,,PR3
        19 001436   000001 772000                    QRL     1
        19 001437   300006 756100                    STQ     6,,PR3
        19 001440   001451 710000 19                 TRA     s:9512

      938     9505    7                         CASE (%TYP, %TYR, %TYQ);

      939     9506    7                           SON_LTS$ -> INIT_LTS.SPAN = SON_LTS$ -> INIT_LTS.SPAN * 4;

   9506 19 001441   200017 473500                    LDP3    SON_LTS$,,AUTO
        19 001442   300006 235100                    LDA     6,,PR3
        19 001443   000002 735000                    ALS     2
        19 001444   300006 755100                    STA     6,,PR3

      940     9507    7                       END;

      941     9508    6                     END;

      942     9509    5                 END; /* SON_DIM > 1 */

   9509 19 001445   001451 710000 19                 TRA     s:9512

      943     9510    4               ELSE
      944     9511    4                 SON_LTS$ -> INIT_LTS.SUBSCR$ = SUBSCR2$;

   9511 19 001446   200023 236100                    LDQ     SUBSCR2$,,AUTO
        19 001447   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001450   000010 756100                    STQ     8,,PR0

      945     9512    4               IF SON_LTS$ -> INIT_LTS.BCD THEN

   9512 19 001451   200017 470500                    LDP0    SON_LTS$,,AUTO
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:226  
        19 001452   000000 236100                    LDQ     0,,PR0
        19 001453   000040 316007                    CANQ    32,DL
        19 001454   001540 600000 19                 TZE     s:9527

      946     9513    5                 DO;

      947     9514    5                   SON_LTS$ -> INIT_LTS.LENGTH = SON_LTS$ -> INIT_LTS.LENGTH * 3 / 2;

   9514 19 001455   000005 236100                    LDQ     5,,PR0
        19 001456   000003 402007                    MPY     3,DL
        19 001457   000001 772000                    QRL     1
        19 001460   000005 756100                    STQ     5,,PR0

      948     9515    5                   IF SUBSCR$ ~= ADDR (NIL) AND SON_LTS$ -> INIT_LTS.MFILLABLE THEN

   9515 19 001461   200004 470500                    LDP0    @SUBSCR$,,AUTO
        19 001462   000000 236100                    LDQ     0,,PR0
        19 001463   000000 116000 20                 CMPQ    0
        19 001464   001540 600000 19                 TZE     s:9527
        19 001465   200017 471500                    LDP1    SON_LTS$,,AUTO
        19 001466   100000 236100                    LDQ     0,,PR1
        19 001467   000200 316007                    CANQ    128,DL
        19 001470   001540 600000 19                 TZE     s:9527

      949     9516    6                     DO;

      950     9517    6                       IF SUBSCR2$ -> ETT.ID ~= %DVI2 THEN

   9517 19 001471   200023 473500                    LDP3    SUBSCR2$,,AUTO
        19 001472   300000 220100                    LDX0    0,,PR3
        19 001473   000114 100003                    CMPX0   76,DU
        19 001474   001535 600000 19                 TZE     s:9524

      951     9518    7                         DO;

      952     9519    7                           MKCN.CON = 3;

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:227  
   9519 19 001475   000003 235007                    LDA     3,DL
        19 001476   000000 755000 1                  STA     MKCN

      953     9520    7                           CALL Z8AC$MAKE_CONST (ETT$$);

   9520 19 001477   200026 634500                    EPPR4   ETT$$,,AUTO
        19 001500   200030 454500                    STP4    ETT$$+2,,AUTO
        19 001501   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 001502   000001 631400 20                 EPPR1   1
        19 001503   000000 701000 xent               TSX1    Z8AC$MAKE_CONST
        19 001504   000000 011000                    NOP     0

      954     9521    7                           CALL Z8AF$FORME (%MPI, SUBSCR1$, ETT$$, SUBSCR2$);

   9521 19 001505   200023 630500                    EPPR0   SUBSCR2$,,AUTO
        19 001506   200033 450500                    STP0    ETT$$+5,,AUTO
        19 001507   200026 631500                    EPPR1   ETT$$,,AUTO
        19 001510   200032 451500                    STP1    ETT$$+4,,AUTO
        19 001511   200022 633500                    EPPR3   SUBSCR1$,,AUTO
        19 001512   200031 453500                    STP3    ETT$$+3,,AUTO
        19 001513   000025 236000 20                 LDQ     21
        19 001514   200030 756100                    STQ     ETT$$+2,,AUTO
        19 001515   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 001516   000012 631400 20                 EPPR1   10
        19 001517   000000 701000 xent               TSX1    Z8AF$FORME
        19 001520   000000 011000                    NOP     0

      955     9522    7                           CALL Z8AF$FORME (%DVI2, SUBSCR2$, 1, SUBSCR2$);

   9522 19 001521   200023 630500                    EPPR0   SUBSCR2$,,AUTO
        19 001522   200033 450500                    STP0    ETT$$+5,,AUTO
        19 001523   000022 236000 20                 LDQ     18
        19 001524   200032 756100                    STQ     ETT$$+4,,AUTO
        19 001525   200023 631500                    EPPR1   SUBSCR2$,,AUTO
        19 001526   200031 451500                    STP1    ETT$$+3,,AUTO
        19 001527   000027 236000 20                 LDQ     23
        19 001530   200030 756100                    STQ     ETT$$+2,,AUTO
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:228  
        19 001531   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 001532   000012 631400 20                 EPPR1   10
        19 001533   000000 701000 xent               TSX1    Z8AF$FORME
        19 001534   000000 011000                    NOP     0

      956     9523    7                         END;

      957     9524    6                       SON_LTS$ -> INIT_LTS.SUBSCR$ = SUBSCR2$; /* BCD units */

   9524 19 001535   200023 236100                    LDQ     SUBSCR2$,,AUTO
        19 001536   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001537   000010 756100                    STQ     8,,PR0

      958     9525    6                     END;

      959     9526    5                 END;

      960     9527    4               IF SON_LTS$ -> INIT_LTS.FILLER

   9527 19 001540   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001541   000000 236100                    LDQ     0,,PR0
        19 001542   000400 316007                    CANQ    256,DL
        19 001543   001550 600000 19                 TZE     s:9529

      961     9528    4                 THEN INIT_LTS$ -> INIT_LTS.FILLER = TRUE;

   9528 19 001544   200006 471500                    LDP1    @INIT_LTS$,,AUTO
        19 001545   100000 473500                    LDP3    0,,PR1
        19 001546   000400 236007                    LDQ     256,DL
        19 001547   300000 256100                    ORSQ    0,,PR3

      962     9529    4               IF SON_LTS$ -> INIT_LTS.BASE$ ~= ADDR (NIL) THEN

   9529 19 001550   200017 470500                    LDP0    SON_LTS$,,AUTO
        19 001551   000001 236100                    LDQ     1,,PR0
        19 001552   000000 116000 20                 CMPQ    0
        19 001553   002055 600000 19                 TZE     s:9601
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:229  

      963     9530    5                 DO;

      964     9531    5                   IF PREV_SON_LTS$ = ADDR (NIL) THEN

   9531 19 001554   200021 236100                    LDQ     PREV_SON_LTS$,,AUTO
        19 001555   000000 116000 20                 CMPQ    0
        19 001556   001631 601000 19                 TNZ     s:9547

      965     9532    6                     DO;

      966     9533    6                       PREV_SON_ST$ = SON_ST$;

   9533 19 001557   200016 236100                    LDQ     SON_ST$,,AUTO
        19 001560   200020 756100                    STQ     PREV_SON_ST$,,AUTO

      967     9534    6                       PREV_SON_LTS$ = SON_LTS$;

   9534 19 001561   200017 236100                    LDQ     SON_LTS$,,AUTO
        19 001562   200021 756100                    STQ     PREV_SON_LTS$,,AUTO

      968     9535    6                       INIT_LTS$ -> INIT_LTS.SON$ = SON_LTS$;

   9535 19 001563   200006 471500                    LDP1    @INIT_LTS$,,AUTO
        19 001564   100000 473500                    LDP3    0,,PR1
        19 001565   300003 756100                    STQ     3,,PR3

      969     9536    6                      CALL Z8AF$NEW_BASE (IDENT_ST$, ADDR (NIL), INIT_LTS$ -> INIT_LTS
              9536                                .BASE$);

   9536 19 001566   100000 470500                    LDP0    0,,PR1
        19 001567   000000 236000 20                 LDQ     0
        19 001570   200030 756100                    STQ     ETT$$+2,,AUTO
        19 001571   000001 633500                    EPPR3   1,,PR0
        19 001572   200033 453500                    STP3    ETT$$+5,,AUTO
        19 001573   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 001574   200032 450500                    STP0    ETT$$+4,,AUTO
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:230  
        19 001575   200003 236100                    LDQ     @IDENT_ST$,,AUTO
        19 001576   200031 756100                    STQ     ETT$$+3,,AUTO
        19 001577   200031 630500                    EPPR0   ETT$$+3,,AUTO
        19 001600   000010 631400 20                 EPPR1   8
        19 001601   000000 701000 xent               TSX1    Z8AF$NEW_BASE
        19 001602   000000 011000                    NOP     0

      970     9537    6                       INIT_LTS$ -> INIT_LTS.BCD = SON_LTS$ -> INIT_LTS.BCD;

   9537 19 001603   200006 470500                    LDP0    @INIT_LTS$,,AUTO
        19 001604   000000 471500                    LDP1    0,,PR0
        19 001605   200017 473500                    LDP3    SON_LTS$,,AUTO
        19 001606   300000 236100                    LDQ     0,,PR3
        19 001607   100000 676100                    ERQ     0,,PR1
        19 001610   000040 376007                    ANQ     32,DL
        19 001611   100000 656100                    ERSQ    0,,PR1

      971     9538    6                       IF SON_LTS$ -> INIT_LTS.MFILLABLE AND

   9538 19 001612   200017 471500                    LDP1    SON_LTS$,,AUTO
        19 001613   100000 236100                    LDQ     0,,PR1
        19 001614   000200 316007                    CANQ    128,DL
        19 001615   002055 600000 19                 TZE     s:9601
        19 001616   000000 473500                    LDP3    0,,PR0
        19 001617   300000 236100                    LDQ     0,,PR3
        19 001620   000400 316007                    CANQ    256,DL
        19 001621   002055 601000 19                 TNZ     s:9601

      972     9539    6                           NOT INIT_LTS$ -> INIT_LTS.FILLER THEN
      973     9540    7                         DO;

      974     9541    7                           INIT_LTS$ -> INIT_LTS.MFILLABLE = TRUE;

   9541 19 001622   000200 236007                    LDQ     128,DL
        19 001623   300000 256100                    ORSQ    0,,PR3

      975     9542    7                           INIT_LTS$ -> INIT_LTS.FILL = SON_LTS$ -> INIT_LTS.FILL;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:231  

   9542 19 001624   000000 471500                    LDP1    0,,PR0
        19 001625   200017 473500                    LDP3    SON_LTS$,,AUTO
        19 001626   300000 236100                    LDQ     0,,PR3
        19 001627   100000 552110                    STBQ    0,'10'O,PR1

      976     9543    7                         END;

      977     9544    6                     END;

   9544 19 001630   002055 710000 19                 TRA     s:9601

      978     9545    5                   ELSE
      979     9546    6                     DO;

      980     9547    6                       IF NOT SON_LTS$ -> INIT_LTS.BCD THEN

   9547 19 001631   000000 236100                    LDQ     0,,PR0
        19 001632   000040 316007                    CANQ    32,DL
        19 001633   001640 601000 19                 TNZ     s:9549

      981     9548    6                         INIT_LTS$ -> INIT_LTS.BCD = FALSE;

   9548 19 001634   200006 471500                    LDP1    @INIT_LTS$,,AUTO
        19 001635   100000 473500                    LDP3    0,,PR1
        19 001636   000006 236000 20                 LDQ     6
        19 001637   300000 356100                    ANSQ    0,,PR3

      982     9549    6                       IF PREV_SON_LTS$ -> INIT_LTS.MFILLABLE

   9549 19 001640   200021 470500                    LDP0    PREV_SON_LTS$,,AUTO
        19 001641   000000 236100                    LDQ     0,,PR0
        19 001642   000200 316007                    CANQ    128,DL
        19 001643   002043 600000 19                 TZE     s:9594
        19 001644   200017 471500                    LDP1    SON_LTS$,,AUTO
        19 001645   100000 236100                    LDQ     0,,PR1
        19 001646   000200 316007                    CANQ    128,DL
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:232  
        19 001647   002043 600000 19                 TZE     s:9594
        19 001650   000000 236100                    LDQ     0,,PR0
        19 001651   100000 676100                    ERQ     0,,PR1
        19 001652   777000 376007                    ANQ     -512,DL
        19 001653   002043 601000 19                 TNZ     s:9594

      983     9550    6                           AND SON_LTS$ -> INIT_LTS.MFILLABLE
      984     9551    6                           AND PREV_SON_LTS$ -> INIT_LTS.FILL = SON_LTS$ -> INIT_LTS.
              9551                                    FILL THEN
      985     9552    7                         DO;

      986     9553    7                           IF (PREV_SON_LTS$ -> INIT_LTS.BCD AND

   9553 19 001654   000000 236100                    LDQ     0,,PR0
        19 001655   000040 316007                    CANQ    32,DL
        19 001656   001710 600000 19                 TZE     s:9553+28
        19 001657   100000 236100                    LDQ     0,,PR1
        19 001660   000040 316007                    CANQ    32,DL
        19 001661   001710 600000 19                 TZE     s:9553+28
        19 001662   200020 473500                    LDP3    PREV_SON_ST$,,AUTO
        19 001663   300001 236100                    LDQ     1,,PR3
        19 001664   000017 772000                    QRL     15
        19 001665   000007 376007                    ANQ     7,DL
        19 001666   200030 756100                    STQ     ETT$$+2,,AUTO
        19 001667   300001 236100                    LDQ     1,,PR3
        19 001670   000022 772000                    QRL     18
        19 001671   000006 402007                    MPY     6,DL
        19 001672   200030 036100                    ADLQ    ETT$$+2,,AUTO
        19 001673   000005 036100                    ADLQ    5,,PR0
        19 001674   200016 474500                    LDP4    SON_ST$,,AUTO
        19 001675   200031 756100                    STQ     ETT$$+3,,AUTO
        19 001676   400001 236100                    LDQ     1,,PR4
        19 001677   000017 772000                    QRL     15
        19 001700   000007 376007                    ANQ     7,DL
        19 001701   200032 756100                    STQ     ETT$$+4,,AUTO
        19 001702   400001 236100                    LDQ     1,,PR4
        19 001703   000022 772000                    QRL     18
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:233  
        19 001704   000006 402007                    MPY     6,DL
        19 001705   200032 036100                    ADLQ    ETT$$+4,,AUTO
        19 001706   200031 116100                    CMPQ    ETT$$+3,,AUTO
        19 001707   001744 600000 19                 TZE     s:9564
        19 001710   000000 236100                    LDQ     0,,PR0
        19 001711   000040 316007                    CANQ    32,DL
        19 001712   002030 601000 19                 TNZ     s:9586
        19 001713   100000 236100                    LDQ     0,,PR1
        19 001714   000040 316007                    CANQ    32,DL
        19 001715   002030 601000 19                 TNZ     s:9586
        19 001716   200020 473500                    LDP3    PREV_SON_ST$,,AUTO
        19 001717   300001 236100                    LDQ     1,,PR3
        19 001720   000020 772000                    QRL     16
        19 001721   000003 376007                    ANQ     3,DL
        19 001722   200033 756100                    STQ     ETT$$+5,,AUTO
        19 001723   300001 236100                    LDQ     1,,PR3
        19 001724   000020 772000                    QRL     16
        19 001725   000037 376000 20                 ANQ     31
        19 001726   200033 036100                    ADLQ    ETT$$+5,,AUTO
        19 001727   000005 036100                    ADLQ    5,,PR0
        19 001730   200016 474500                    LDP4    SON_ST$,,AUTO
        19 001731   200034 756100                    STQ     ETT$$+6,,AUTO
        19 001732   400001 236100                    LDQ     1,,PR4
        19 001733   000020 772000                    QRL     16
        19 001734   000003 376007                    ANQ     3,DL
        19 001735   200035 756100                    STQ     ETT$$+7,,AUTO
        19 001736   400001 236100                    LDQ     1,,PR4
        19 001737   000020 772000                    QRL     16
        19 001740   000037 376000 20                 ANQ     31
        19 001741   200035 036100                    ADLQ    ETT$$+7,,AUTO
        19 001742   200034 116100                    CMPQ    ETT$$+6,,AUTO
        19 001743   002030 601000 19                 TNZ     s:9586

      987     9554    7                               SON_LTS$ -> INIT_LTS.BCD AND
      988     9555    7                               PREV_SON_ST$ -> VARIABLE.SA * 6 + PREV_SON_ST$ ->
              9555                                        VARIABLE.NDSC.CN
      989     9556    7                                 + PREV_SON_LTS$ -> INIT_LTS.LENGTH =
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:234  
      990     9557    7                                SON_ST$ -> VARIABLE.SA * 6 + SON_ST$ -> VARIABLE.NDSC.
              9557                                          CN) OR
      991     9558    7                              (NOT PREV_SON_LTS$ -> INIT_LTS.BCD AND
      992     9559    7                               NOT SON_LTS$ -> INIT_LTS.BCD AND
      993     9560    7                               PREV_SON_ST$ -> VARIABLE.SA * 4 + PREV_SON_ST$ ->
              9560                                        VARIABLE.ADSC.CN
      994     9561    7                                 + PREV_SON_LTS$ -> INIT_LTS.LENGTH =
      995     9562    7                                SON_ST$ -> VARIABLE.SA * 4 + SON_ST$ -> VARIABLE.ADSC.
              9562                                          CN) THEN
      996     9563    8                             DO;

      997     9564    8                               IF PREV_SON_ST$ -> VARIABLE.TYPE = %TYD AND

   9564 19 001744   300002 220100                    LDX0    2,,PR3
        19 001745   001765 601000 19                 TNZ     s:9574
        19 001746   300001 236100                    LDQ     1,,PR3
        19 001747   040000 316007                    CANQ    16384,DL
        19 001750   001765 600000 19                 TZE     s:9574
        19 001751   000000 236100                    LDQ     0,,PR0
        19 001752   000100 316007                    CANQ    64,DL
        19 001753   001765 601000 19                 TNZ     s:9574

      998     9565    8                                   PREV_SON_ST$ -> VARIABLE.NDSC.TN = %NDSC4 AND
      999     9566    8                                   NOT PREV_SON_LTS$ -> INIT_LTS.GROUP THEN
     1000     9567    9                                 DO;

     1001     9568    9                                   PREV_SON_LTS$ -> INIT_LTS.OFF = PREV_SON_LTS$ ->
              9568                                            INIT_LTS.OFF / 2;

   9568 19 001754   000002 236100                    LDQ     2,,PR0
        19 001755   000002 506007                    DIV     2,DL
        19 001756   000002 756100                    STQ     2,,PR0

     1002     9569    9                                   IF PREV_SON_LTS$ -> INIT_LTS.SUBSCR$ ~= ADDR (NIL)
              9569                                            THEN

   9569 19 001757   000010 236100                    LDQ     8,,PR0
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:235  
        19 001760   000000 116000 20                 CMPQ    0
        19 001761   001765 600000 19                 TZE     s:9574

     1003     9570    9                                     PREV_SON_LTS$ -> INIT_LTS.SUBSCR$ =

   9570 19 001762   000010 471500                    LDP1    8,,PR0
        19 001763   100001 236100                    LDQ     1,,PR1
        19 001764   000010 756100                    STQ     8,,PR0

     1004     9571    9                                         PREV_SON_LTS$ -> INIT_LTS.SUBSCR$ -> ETT.LOP;
     1005     9572                                        /* Delete MPI2, ropcon = 1 */
     1006     9573    9                                 END; /* Set units from digits back to bytes */

     1007     9574    8                               PREV_SON_LTS$ -> INIT_LTS.LENGTH = PREV_SON_LTS$ ->
              9574                                        INIT_LTS.LENGTH

   9574 19 001765   200017 471500                    LDP1    SON_LTS$,,AUTO
        19 001766   000005 236100                    LDQ     5,,PR0
        19 001767   100005 036100                    ADLQ    5,,PR1
        19 001770   000005 756100                    STQ     5,,PR0

     1008     9575    8                                 + SON_LTS$ -> INIT_LTS.LENGTH;
     1009     9576    8                               MKCN.CON = PREV_SON_LTS$ -> INIT_LTS.LENGTH;

   9576 19 001771   000000 756000 1                  STQ     MKCN

     1010     9577    8                               PREV_SON_LTS$ -> INIT_LTS.GROUP = TRUE;

   9577 19 001772   000100 236007                    LDQ     64,DL
        19 001773   000000 256100                    ORSQ    0,,PR0

     1011     9578    8                               ETT$$ = PREV_SON_LTS$ -> INIT_LTS.BASE$;

   9578 19 001774   000001 236100                    LDQ     1,,PR0
        19 001775   200026 756100                    STQ     ETT$$,,AUTO

     1012     9579    8                               IF ETT$$ -> ETT.ID = %SIZ
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:236  

   9579 19 001776   200026 471500                    LDP1    ETT$$,,AUTO
        19 001777   100000 220100                    LDX0    0,,PR1
        19 002000   000004 100003                    CMPX0   4,DU
        19 002001   002004 601000 19                 TNZ     s:9581

     1013     9580    8                                 THEN ETT$$ = ETT$$ -> ETT.LOP;

   9580 19 002002   100001 236100                    LDQ     1,,PR1
        19 002003   200026 756100                    STQ     ETT$$,,AUTO

     1014     9581    8                               CALL Z8AC$MAKE_CONST (CONST$);

   9581 19 002004   200025 631500                    EPPR1   CONST$,,AUTO
        19 002005   200030 451500                    STP1    ETT$$+2,,AUTO
        19 002006   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 002007   000001 631400 20                 EPPR1   1
        19 002010   000000 701000 xent               TSX1    Z8AC$MAKE_CONST
        19 002011   000000 011000                    NOP     0

     1015     9582    8                               CALL Z8AF$FORME (%SIZ, ETT$$, CONST$, PREV_SON_LTS$ ->
              9582                                        INIT_LTS.BASE$);

   9582 19 002012   200021 236100                    LDQ     PREV_SON_LTS$,,AUTO
        19 002013   000001 036003                    ADLQ    1,DU
        19 002014   200033 756100                    STQ     ETT$$+5,,AUTO
        19 002015   200025 630500                    EPPR0   CONST$,,AUTO
        19 002016   200032 450500                    STP0    ETT$$+4,,AUTO
        19 002017   200026 631500                    EPPR1   ETT$$,,AUTO
        19 002020   200031 451500                    STP1    ETT$$+3,,AUTO
        19 002021   000036 236000 20                 LDQ     30
        19 002022   200030 756100                    STQ     ETT$$+2,,AUTO
        19 002023   200030 630500                    EPPR0   ETT$$+2,,AUTO
        19 002024   000012 631400 20                 EPPR1   10
        19 002025   000000 701000 xent               TSX1    Z8AF$FORME
        19 002026   000000 011000                    NOP     0

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:237  
     1016     9583    8                             END;

   9583 19 002027   002055 710000 19                 TRA     s:9601

     1017     9584    7                           ELSE
     1018     9585    8                             DO; /* Cannot be combined */

     1019     9586    8                               PREV_SON_LTS$ -> INIT_LTS.NEXT$ = SON_LTS$;

   9586 19 002030   200017 236100                    LDQ     SON_LTS$,,AUTO
        19 002031   000004 756100                    STQ     4,,PR0

     1020     9587    8                               PREV_SON_LTS$ = SON_LTS$;

   9587 19 002032   200017 236100                    LDQ     SON_LTS$,,AUTO
        19 002033   200021 756100                    STQ     PREV_SON_LTS$,,AUTO

     1021     9588    8                               PREV_SON_ST$ = SON_ST$;

   9588 19 002034   200016 236100                    LDQ     SON_ST$,,AUTO
        19 002035   200020 756100                    STQ     PREV_SON_ST$,,AUTO

     1022     9589    8                               INIT_LTS$ -> INIT_LTS.MFILLABLE = FALSE;

   9589 19 002036   200006 470500                    LDP0    @INIT_LTS$,,AUTO
        19 002037   000000 471500                    LDP1    0,,PR0
        19 002040   000004 236000 20                 LDQ     4
        19 002041   100000 356100                    ANSQ    0,,PR1

     1023     9590    8                             END;

     1024     9591    7                         END; /* Both MFILLABLE, same fill */

   9591 19 002042   002055 710000 19                 TRA     s:9601

     1025     9592    6                       ELSE
     1026     9593    7                         DO;
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:238  

     1027     9594    7                           PREV_SON_LTS$ -> INIT_LTS.NEXT$ = SON_LTS$;

   9594 19 002043   200017 236100                    LDQ     SON_LTS$,,AUTO
        19 002044   000004 756100                    STQ     4,,PR0

     1028     9595    7                           PREV_SON_LTS$ = SON_LTS$;

   9595 19 002045   200017 236100                    LDQ     SON_LTS$,,AUTO
        19 002046   200021 756100                    STQ     PREV_SON_LTS$,,AUTO

     1029     9596    7                           PREV_SON_ST$ = SON_ST$;

   9596 19 002047   200016 236100                    LDQ     SON_ST$,,AUTO
        19 002050   200020 756100                    STQ     PREV_SON_ST$,,AUTO

     1030     9597    7                           INIT_LTS$ -> INIT_LTS.MFILLABLE = FALSE;

   9597 19 002051   200006 470500                    LDP0    @INIT_LTS$,,AUTO
        19 002052   000000 471500                    LDP1    0,,PR0
        19 002053   000004 236000 20                 LDQ     4
        19 002054   100000 356100                    ANSQ    0,,PR1

     1031     9598    7                         END;

     1032     9599    6                     END; /* PREV_SON_LTS$ ~= ADDR (NIL) */

     1033     9600    5                 END; /* SON_LTS$ -> INIT_LTS.BASE$ ~= ADDR (NIL) */

     1034     9601    4               IF SON_DIM > 1 THEN

   9601 19 002055   200013 235100                    LDA     SON_DIM,,AUTO
        19 002056   000002 115007                    CMPA    2,DL
        19 002057   002062 602000 19                 TNC     s:9604

     1035     9602    4                 LAST_IN_USE = LAST_IN_USE - 1;

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:239  
   9602 19 002060   000001 336007                    LCQ     1,DL
        19 002061   000061 056000 17                 ASQ     LAST_IN_USE

     1036     9603    4             END; /* Initializable item */

     1037     9604    3           SON_QLT$ = SON_QLT$ -> QLT.BROTHER;

   9604 19 002062   200015 470500                    LDP0    SON_QLT$,,AUTO
        19 002063   000002 236100                    LDQ     2,,PR0
        19 002064   200015 756100                    STQ     SON_QLT$,,AUTO

     1038     9605    3         END; /* UNTIL SON_QLT$ = ADDR (NIL) */

   9605 19 002065   000000 116000 20                 CMPQ    0
        19 002066   000647 601000 19                 TNZ     s:9368

     1039     9606    2         IF INIT_LTS$ -> INIT_LTS.BCD AND

   9606 19 002067   200006 470500                    LDP0    @INIT_LTS$,,AUTO
        19 002070   000000 471500                    LDP1    0,,PR0
        19 002071   100000 236100                    LDQ     0,,PR1
        19 002072   000040 316007                    CANQ    32,DL
        19 002073   002111 600000 19                 TZE     s:9610
        19 002074   100005 236100                    LDQ     5,,PR1
        19 002075   000001 376007                    ANQ     1,DL
        19 002076   002107 601000 19                 TNZ     s:9609
        19 002077   200003 473500                    LDP3    @IDENT_ST$,,AUTO
        19 002100   300000 474500                    LDP4    0,,PR3
        19 002101   400001 236100                    LDQ     1,,PR4
        19 002102   000020 772000                    QRL     16
        19 002103   000003 376007                    ANQ     3,DL
        19 002104   000001 376007                    ANQ     1,DL
        19 002105   000001 116007                    CMPQ    1,DL
        19 002106   002111 601000 19                 TNZ     s:9610

     1040     9607    2             (MOD (INIT_LTS$ -> INIT_LTS.LENGTH, 2) ~= 0 OR
     1041     9608    2              MOD (IDENT_ST$ -> VARIABLE.ADSC.CN, 2) = 1) THEN
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:240  
     1042     9609    2           INIT_LTS$ -> INIT_LTS.MFILLABLE = FALSE;

   9609 19 002107   000004 236000 20                 LDQ     4
        19 002110   100000 356100                    ANSQ    0,,PR1

     1043     9610    2         IF INIT_LTS$ -> INIT_LTS.MFILLABLE AND NOT INIT_LTS$ -> INIT_LTS.FILLER THEN

   9610 19 002111   000000 471500                    LDP1    0,,PR0
        19 002112   100000 236100                    LDQ     0,,PR1
        19 002113   000200 316007                    CANQ    128,DL
        19 002114   002127 600000 19                 TZE     s:9617
        19 002115   000400 316007                    CANQ    256,DL
        19 002116   002127 601000 19                 TNZ     s:9617

     1044     9611    3           DO;

     1045     9612    3             IF INIT_LTS$ -> INIT_LTS.BCD THEN

   9612 19 002117   000040 316007                    CANQ    32,DL
        19 002120   002124 600000 19                 TZE     s:9614

     1046     9613    3               INIT_LTS$ -> INIT_LTS.SUBSCR$ = PREV_SON_LTS$ -> INIT_LTS.SUBSCR$;

   9613 19 002121   200021 473500                    LDP3    PREV_SON_LTS$,,AUTO
        19 002122   300010 236100                    LDQ     8,,PR3
        19 002123   100010 756100                    STQ     8,,PR1

     1047     9614    3             INIT_LTS$ -> INIT_LTS.SON$ = ADDR (NIL);

   9614 19 002124   000000 471500                    LDP1    0,,PR0
        19 002125   000000 236000 20                 LDQ     0
        19 002126   100003 756100                    STQ     3,,PR1

     1048     9615    3           END;

     1049     9616    2       END; /* GROUP ITEM */

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:241  
     1050     9617    1   END Z8EU$MAKE_INIT_LTS;

   9617 19 002127   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:242  
--  Include file information  --

   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ETT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_MKCN.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8EU$MAKE_INIT_LTS.
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:243  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom MKCN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 MKCN

  ****  Section 002 LblCom DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DNT$

  ****  Section 003 LblCom DNT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 DNT_

  ****  Section 004 LblCom DNT_BUCKET_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 DNT_BUCKET_NUMBER

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:244  
  ****  Section 005 LblCom DNT_OF_1$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 DNT_OF_1$

  ****  Section 006 LblCom ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ETT$

  ****  Section 007 LblCom HEAD_ETT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAD_ETT$

  ****  Section 008 LblCom ETT_BUCKETS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ETT_BUCKETS(0:511)

  ****  Section 009 LblCom ETT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ETT_

  ****  Section 010 LblCom QLT$

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:245  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 QLT$

  ****  Section 011 LblCom PREV_01_QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 PREV_01_QLT$

  ****  Section 012 LblCom QLT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 QLT_

  ****  Section 013 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 014 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 015 LblCom LTS$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:246  

     0-0-0/w PTR               1 LONG_ITEM$                 0-0-0/w PTR         r     1 LTS$

  ****  Section 016 LblCom LTS_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 LTS_

  ****  Section 017  Data  Z8EU$MAKE_INIT_LTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    62-0-0/h STRC        r     1 DNA_BCD_ROPCON            62-0-0/h STRC        r     1 DNA_ROPCON
     0-0-0/w PTR         r     1 INDICES$(0:47)
    60-0-0/w SBIN        r     1 LAST_CREATED              61-0-0/w SBIN        r     1 LAST_IN_USE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @IDENT_ST$                 6-0-0/w PTR         r     1 @INIT_LTS$
     5-0-0/w PTR         r     1 @OFF                       4-0-0/w PTR         r     1 @SUBSCR$
    25-0-0/w PTR         r     1 CONST$                    24-0-0/w PTR         r     1 DIMS$
    26-0-0/w PTR         r     1 ETT$$                     10-0-0/w PTR               1 IDENT_BASE$
    11-0-0/w UBIN        r     1 IDENT_DIM                  7-0-0/w PTR         r     1 IDENT_QLT$
    *0-0-0/w PTR         r     1 IDENT_ST$                 *0-0-0/w PTR         r     1 INIT_LTS$
    *0-0-0/w SBIN        r     1 OFF                       21-0-0/w PTR         r     1 PREV_SON_LTS$
    20-0-0/w PTR         r     1 PREV_SON_ST$              14-0-0/w PTR         r     1 SON_BASE$
    13-0-0/w UBIN        r     1 SON_DIM                   17-0-0/w PTR         r     1 SON_LTS$
    12-0-0/w SBIN        r     1 SON_OFF                   15-0-0/w PTR         r     1 SON_QLT$
    16-0-0/w PTR         r     1 SON_ST$                   *0-0-0/w PTR         r     1 SUBSCR$
    22-0-0/w PTR         r     1 SUBSCR1$                  23-0-0/w PTR         r     1 SUBSCR2$

PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:247  
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTS_STEP(0:37)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(396)         1 ALPHABET                   0-0-0/w STRC(144)         1 ALTER_LTS
     0-0-0/w STRC(3672)        1 ALT_KEY                    0-0-0/w STRC(36864)       1 ARGLIST
     0-0-0/w STRC(396)         1 ARRAY                      0-0-0/w STRC(180)         1 ARRAY_PRESET_LTS
     0-0-0/w STRC(288)         1 BASE_LTS                   0-0-0/w STRC(396)         1 BLOCK
     0-0-0/w STRC(144)         1 BT                         0-0-0/w STRC(396)         1 CD
     0-0-0/w STRC(288)         1 CD_LTS                     0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(396)         1 CLASS                      0-0-0/w STRC(396)         1 CONDITION
     0-0-0/w STRC(396)         1 CONST                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(540)         1 CONTROL_NAME_LTS           0-0-0/w STRC(1872)        1 COPY_FILE
     0-0-0/w STRC(396)         1 DB                         0-0-0/w STRC(396)         1 DCB_
     0-0-0/w STRC(108)         1 DEPENDING_SIZE             0-0-0/w STRC(5472)  r     1 DIMS
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w STRC(216)         1 DML_REC
     0-0-0/w ASTR(180)   r     1 DNT                        0-0-0/w STRC(180)   r     1 ETT
     0-0-0/w STRC(73836)       1 EVALUATE                   0-0-0/w STRC(396)         1 FD
     0-0-0/w STRC(1692)        1 FILE_LTS                   0-0-0/w STRC(108)         1 INDEXES
     0-0-0/w STRC(360)   r     1 INIT_LTS                   0-0-0/w STRC(396)         1 INTDEF
     0-0-0/w STRC(180)         1 IO_RESTORE_CHAIN           0-0-0/w STRC(144)         1 KEY
     0-0-0/w STRC(396)         1 LABEL                      0-0-0/w STRC(36864)       1 LCNST
     0-0-0/w STRC(72)    r     1 LONG                       0-0-0/w STRC        r     1 LTS
     0-0-0/w STRC(360)   r     1 LTSS                       0-0-0/w STRC(36936)       1 LTS_PTR_ARRAY
     0-0-0/w STRC(396)         1 MNEMONIC                   0-0-0/w STRC(144)         1 NEL
     0-0-0/w STRC(216)         1 OPEN_LTS                   0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(396)         1 PARA                       0-0-0/w STRC(144)         1 PRIME
     0-0-0/w STRC(396)         1 PROC_                      0-0-0/w STRC(396)         1 PROC_DEF
     0-0-0/w STRC(900)         1 PROC_SUPP                  0-0-0/w STRC(216)   r     1 QLT
PL6.E3A0      #010=Z8EU$MAKE_INIT_LTS File=Z8EU.:Z8A6TSI                         SAT 08/09/97 12:59 Page:248  
     0-0-0/w STRC(396)         1 RD                         0-0-0/w STRC(216)         1 REF
     0-0-0/w STRC(108)         1 RENAMES                    0-0-0/w STRC(720)         1 REPORT_01_LTS
     0-0-0/w STRC(432)         1 REPORT_ELEM_LTS            0-0-0/w STRC(252)         1 REPORT_GRP_LTS
     0-0-0/w STRC(1332)        1 REPORT_LTS                 0-0-0/w STRC(144)         1 RVA_LTS
     0-0-0/w STRC(396)   r     1 SCALAR                     0-0-0/w STRC(396)         1 SD
     0-0-0/w STRC(396)         1 SECTION                    0-0-0/w STRC(396)         1 SEGMENT
     0-0-0/w STRC(360)         1 SEGMENT_LTS                0-0-0/w STRC(396)   r     1 ST
     0-0-0/w STRC(252)         1 SUM_LTS                    0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/d STRC(612)         1 USE                        0-0-0/w STRC(252)         1 USE_SUPP
     0-0-0/w STRC(396)   r     1 VARIABLE


   Procedure Z8EU$MAKE_INIT_LTS requires 1112 words for executable code.
   Procedure Z8EU$MAKE_INIT_LTS requires 30 words of local(AUTO) storage.

    No errors detected in file Z8EU.:Z8A6TSI    .
