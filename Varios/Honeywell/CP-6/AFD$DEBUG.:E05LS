VERSION E05

PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:1    
        1        1        /*M* Debug driver for AFA$ACCT (and FRS$ACCTNG)                           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P* NAME: AFD$DEBUG
        8        8             DESCRIPTION: When linked with AFA$ACCT, FGH$SUBR, and FRS$ACCTNG (a few
        9        9             double DEFs and calling sequence mismatches are to be expected), allows
       10       10             online execution of the pertinent parts of the accounting routines.
       11       11             RES_CNT selects how manyn different resources are used.
       12       12             RES_REPEAT selects how many times each resource is gotten and released.
       13       13             SU_CNT selects which SUDOs are used.
       14       14             In the second compile-unit (AFD$MISC) the FPT_ACCT V area can be
       15       15             adjusted to change the patch through AFA$ACCT some.
       16       16        */
       17       17        AFD$DEBUG: PROC MAIN;
       18       18
       19       19    1   dcl jsp(0:1023) ptr static;
       20       20    1   dcl B$SBUF2$ ptr constant symdef init(addr(jsp));
       21       21    1   dcl jit(0:255) sbin static;
       22       22    1   dcl b$jit$ ptr constant symdef init(addr(jit));
       23       23
       24       24    1   dcl afa$acct entry;
       25       25    1   dcl frs$suadd entry(1);
       26       26    1   dcl frs$sustrt entry(1);
       27       27    1   dcl frs$susub entry(1);
       28       28    1   dcl frs$resadd entry(1);
       29       29    1   dcl frs$ressub entry(1);
       30       30
       31       31    1   dcl i sbin;
       32       32    1   dcl j sbin;
       33       33    1   dcl SU_CNT(0:7) ubin byte unal static symdef init(0,4,0,3,0,2,0,1);
       34       34    1   dcl fr_sumx constant symdef ubin init(7);
       35       35    1   dcl fr_sunm(0:7) constant symdef char(8) init('Zero','One','Two','Three',
       36       36    1      'Four','Five','Six','Seven');
       37       37
PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:2    
       38       38        %include FR$RAT;
       39       91        %fr$rat;
       40      131        %include NK$LDCT;
       41      233        %nk$ldct;
       42      279    1   dcl n$dct$$ ptr constant symdef init(addr(jsp));
       43      280    1   dcl RES_CNT static symdef sbin init(5);
       44      281    1   dcl RES_REPEAT static symdef sbin init(12);
       45      282
       46      283    1      call frs$sustrt (SU_CNT);
       47      284    1      call frs$suadd (SU_CNT);
       48      285    1      call frs$susub (SU_CNT);
       49      286    1      jsp(1) = addr(jsp(2)); /* ldct at 2 */
       50      287    1      jsp(1)->nk$ldct.devnm = 'Device';
       51      288    1      jsp(0) = addr(jsp(30)); /* rat at 30 */
       52      289    1      jsp(0)->fr$rat.dctx = 1;
       53      290    2      do i=1 to RES_CNT;
       54      291    2         jsp(0)->fr$rat.rcod = i;
       55      292    2         jsp(0)->fr$rat.typ = fr_sunm(i);
       56      293    2         jsp(0)->fr$rat.res.numb = '01';
       57      294    2         jsp(0)->fr$rat.m1 = '012345'o;
       58      295    2         jsp(0)->fr$rat.res.m2 = '012345'o;
       59      296    3         do j=0 to RES_REPEAT-1;
       60      297    3            jsp(0)->fr$rat.res.actx = i*RES_REPEAT + j;
       61      298    3            call frs$resadd (jsp(0)->fr$rat);
       62      299    3            call frs$ressub (jsp(0)->fr$rat);
       63      300    3            end;
       64      301    2         end;
       65      302    1      call afa$acct;
       66      303    1   stop:;
       67      304    1   end;
       68      305        %EOD;

PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:3    
--  Include file information  --

   NK$LDCT.:E05TOU  is referenced.
   FR$RAT.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure AFD$DEBUG.

   Procedure AFD$DEBUG requires 71 words for executable code.
   Procedure AFD$DEBUG requires 6 words of local(AUTO) storage.

PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:4    

 Object Unit name= AFD$DEBUG                                  File name= AFD$DEBUG.:E05TOU
 UTS= JUL 29 '97 08:24:56.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none  1284   2404  AFD$DEBUG
    1  RoData even  UTS     23     27  AFD$DEBUG
    2   Proc  even  none    71    107  AFD$DEBUG
    3  RoData even  none     3      3  AFD$DEBUG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Main       0  AFD$DEBUG

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  B$SBUF2$                           1      1  B$JIT$
    0   2400  SU_CNT                             1      2  FR_SUMX
    1      3  FR_SUNM                            1     23  N$DCT$$
    0   2402  RES_CNT                            0   2403  RES_REPEAT
PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:5    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 FRS$SUSTRT
         yes           Std       1 FRS$SUADD
         yes           Std       1 FRS$SUSUB
         yes           Std       1 FRS$RESADD
         yes           Std       1 FRS$RESSUB
         yes           Std       0 AFA$ACCT
                       nStd      0 X66_MAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_MARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:6    


        1        1        /*M* Debug driver for AFA$ACCT (and FRS$ACCTNG)                           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P* NAME: AFD$DEBUG
        8        8             DESCRIPTION: When linked with AFA$ACCT, FGH$SUBR, and FRS$ACCTNG (a few
        9        9             double DEFs and calling sequence mismatches are to be expected), allows
       10       10             online execution of the pertinent parts of the accounting routines.
       11       11             RES_CNT selects how manyn different resources are used.
       12       12             RES_REPEAT selects how many times each resource is gotten and released.
       13       13             SU_CNT selects which SUDOs are used.
       14       14             In the second compile-unit (AFD$MISC) the FPT_ACCT V area can be
       15       15             adjusted to change the patch through AFA$ACCT some.
       16       16        */
       17       17        AFD$DEBUG: PROC MAIN;

     17  2 000000   000000 700200 xent  AFD$DEBUG    TSX0  ! X66_MAUTO
         2 000001   000006 000000                    ZERO    6,0

       18       18
       19       19    1   dcl jsp(0:1023) ptr static;
       20       20    1   dcl B$SBUF2$ ptr constant symdef init(addr(jsp));
       21       21    1   dcl jit(0:255) sbin static;
       22       22    1   dcl b$jit$ ptr constant symdef init(addr(jit));
       23       23
       24       24    1   dcl afa$acct entry;
       25       25    1   dcl frs$suadd entry(1);
       26       26    1   dcl frs$sustrt entry(1);
       27       27    1   dcl frs$susub entry(1);
       28       28    1   dcl frs$resadd entry(1);
       29       29    1   dcl frs$ressub entry(1);
       30       30
       31       31    1   dcl i sbin;
       32       32    1   dcl j sbin;
PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:7    
       33       33    1   dcl SU_CNT(0:7) ubin byte unal static symdef init(0,4,0,3,0,2,0,1);
       34       34    1   dcl fr_sumx constant symdef ubin init(7);
       35       35    1   dcl fr_sunm(0:7) constant symdef char(8) init('Zero','One','Two','Three',
       36       36    1      'Four','Five','Six','Seven');
       37       37
       38       38        %include FR$RAT;
       39       91        %fr$rat;
       40      131        %include NK$LDCT;
       41      233        %nk$ldct;
       42      279    1   dcl n$dct$$ ptr constant symdef init(addr(jsp));
       43      280    1   dcl RES_CNT static symdef sbin init(5);
       44      281    1   dcl RES_REPEAT static symdef sbin init(12);
       45      282
       46      283    1      call frs$sustrt (SU_CNT);

    283  2 000002   000000 630400 3                  EPPR0   0
         2 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000004   000000 701000 xent               TSX1    FRS$SUSTRT
         2 000005   000000 011000                    NOP     0

       47      284    1      call frs$suadd (SU_CNT);

    284  2 000006   000000 630400 3                  EPPR0   0
         2 000007   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000010   000000 701000 xent               TSX1    FRS$SUADD
         2 000011   000000 011000                    NOP     0

       48      285    1      call frs$susub (SU_CNT);

    285  2 000012   000000 630400 3                  EPPR0   0
         2 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000014   000000 701000 xent               TSX1    FRS$SUSUB
         2 000015   000000 011000                    NOP     0

       49      286    1      jsp(1) = addr(jsp(2)); /* ldct at 2 */

    286  2 000016   000001 236000 3                  LDQ     1
PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:8    
         2 000017   000001 756000 0                  STQ     JSP+1

       50      287    1      jsp(1)->nk$ldct.devnm = 'Device';

    287  2 000020   000001 470400 0                  LDP0    JSP+1
         2 000021   040100 100400                    MLR     fill='040'O
         2 000022   000024 000006 1                  ADSC9   FR_SUNM+17               cn=0,n=6
         2 000023   000002 000010                    ADSC9   2,,PR0                   cn=0,n=8

       51      288    1      jsp(0) = addr(jsp(30)); /* rat at 30 */

    288  2 000024   000002 236000 3                  LDQ     2
         2 000025   000000 756000 0                  STQ     JSP

       52      289    1      jsp(0)->fr$rat.dctx = 1;

    289  2 000026   000001 220003                    LDX0    1,DU
         2 000027   000000 471400 0                  LDP1    JSP
         2 000030   100003 440100                    SXL0    3,,PR1

       53      290    2      do i=1 to RES_CNT;

    290  2 000031   000001 235007                    LDA     1,DL
         2 000032   200003 755100                    STA     I,,AUTO
         2 000033   000100 710000 2                  TRA     s:301+1

       54      291    2         jsp(0)->fr$rat.rcod = i;

    291  2 000034   000000 470400 0                  LDP0    JSP
         2 000035   200003 236100                    LDQ     I,,AUTO
         2 000036   000027 736000                    QLS     23
         2 000037   000003 676100                    ERQ     3,,PR0
         2 000040   000740 376003                    ANQ     480,DU
         2 000041   000003 656100                    ERSQ    3,,PR0

       55      292    2         jsp(0)->fr$rat.typ = fr_sunm(i);

PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:9    
    292  2 000042   200003 235100                    LDA     I,,AUTO
         2 000043   000001 735000                    ALS     1
         2 000044   000003 220005 1                  LDX0    FR_SUNM,AL
         2 000045   000010 740100                    STX0    8,,PR0

       56      293    2         jsp(0)->fr$rat.res.numb = '01';

    293  2 000046   000026 221000 1                  LDX1    FR_SUNM+19
         2 000047   000001 441100                    SXL1    1,,PR0

       57      294    2         jsp(0)->fr$rat.m1 = '012345'o;

    294  2 000050   012345 222003                    LDX2    5349,DU
         2 000051   000006 742100                    STX2    6,,PR0

       58      295    2         jsp(0)->fr$rat.res.m2 = '012345'o;

    295  2 000052   000002 742100                    STX2    2,,PR0

       59      296    3         do j=0 to RES_REPEAT-1;

    296  2 000053   200004 450100                    STZ     J,,AUTO
         2 000054   000074 710000 2                  TRA     s:300+1

       60      297    3            jsp(0)->fr$rat.res.actx = i*RES_REPEAT + j;

    297  2 000055   200003 236100                    LDQ     I,,AUTO
         2 000056   002403 402000 0                  MPY     RES_REPEAT
         2 000057   200004 036100                    ADLQ    J,,AUTO
         2 000060   000000 620006                    EAX0    0,QL
         2 000061   000000 470400 0                  LDP0    JSP
         2 000062   000002 440100                    SXL0    2,,PR0

       61      298    3            call frs$resadd (jsp(0)->fr$rat);

    298  2 000063   000000 630400 0                  EPPR0   JSP
         2 000064   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:10   
         2 000065   000000 701000 xent               TSX1    FRS$RESADD
         2 000066   000000 011000                    NOP     0

       62      299    3            call frs$ressub (jsp(0)->fr$rat);

    299  2 000067   000000 630400 0                  EPPR0   JSP
         2 000070   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000071   000000 701000 xent               TSX1    FRS$RESSUB
         2 000072   000000 011000                    NOP     0

       63      300    3            end;

    300  2 000073   200004 054100                    AOS     J,,AUTO
         2 000074   200004 236100                    LDQ     J,,AUTO
         2 000075   002403 116000 0                  CMPQ    RES_REPEAT
         2 000076   000055 604000 2                  TMI     s:297

       64      301    2         end;

    301  2 000077   200003 054100                    AOS     I,,AUTO
         2 000100   200003 236100                    LDQ     I,,AUTO
         2 000101   002402 116000 0                  CMPQ    RES_CNT
         2 000102   000034 604400 2                  TMOZ    s:291

       65      302    1      call afa$acct;

    302  2 000103   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000104   000000 701000 xent               TSX1    AFA$ACCT
         2 000105   000000 011000                    NOP     0

    299  2 000106                       STOP         null
       66      303    1   stop:;
       67      304    1   end;

    304  2 000106   000000 702200 xent               TSX2  ! X66_MARET
       68      305        %EOD;

PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:11   
--  Include file information  --

   NK$LDCT.:E05TOU  is referenced.
   FR$RAT.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure AFD$DEBUG.
PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:12   

 **** Variables and constants ****

  ****  Section 000  Data  AFD$DEBUG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  2000-0-0/w SBIN        r     1 JIT(0:255)                 0-0-0/w PTR         r     1 JSP(0:1023)
  2402-0-0/w SBIN        r     1 RES_CNT                 2403-0-0/w SBIN        r     1 RES_REPEAT
  2400-0-0/b UBIN(9)     r     1 SU_CNT(0:7)

  ****  Section 001 RoData AFD$DEBUG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/c CHAR(8)     r     1 FR_SUNM(0:7)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w SBIN        r     1 I                          4-0-0/w SBIN        r     1 J

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(324)   r     1 FR$RAT                     0-0-0/d STRC(864)   r     1 NK$LDCT


   Procedure AFD$DEBUG requires 71 words for executable code.
   Procedure AFD$DEBUG requires 6 words of local(AUTO) storage.
PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:13   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:14   
          MINI XREF LISTING

AFA$ACCT
        24**DCL-ENT   302--CALL
FR$RAT
        93**DCL       298<>CALL      299<>CALL
FR$RAT.DCTX
       111**DCL       289<<ASSIGN
FR$RAT.M1
       115**DCL       294<<ASSIGN
FR$RAT.RCOD
       106**DCL       291<<ASSIGN
FR$RAT.RES.ACTX
        99**DCL       297<<ASSIGN
FR$RAT.RES.M2
        98**DCL       295<<ASSIGN
FR$RAT.RES.NUMB
        97**DCL       293<<ASSIGN
FR$RAT.TYP
       117**DCL       292<<ASSIGN
FRS$RESADD
        28**DCL-ENT   298--CALL
FRS$RESSUB
        29**DCL-ENT   299--CALL
FRS$SUADD
        25**DCL-ENT   284--CALL
FRS$SUSTRT
        26**DCL-ENT   283--CALL
FRS$SUSUB
        27**DCL-ENT   285--CALL
FR_SUNM
        35**DCL       292>>ASSIGN
I
        31**DCL       290<<DOINDEX   291>>ASSIGN    292>>ASSIGN    297>>ASSIGN
PL6.E3A0      #001=AFD$DEBUG File=AFD$DEBUG.:E05TSI                              TUE 07/29/97 08:24 Page:15   
J
        32**DCL       296<<DOINDEX   297>>ASSIGN
JIT
        21**DCL        22--DCLINIT
JSP
        19**DCL        20--DCLINIT   279--DCLINIT   286<<ASSIGN    286--ASSIGN    287>>ASSIGN    288<<ASSIGN
       288--ASSIGN    289>>ASSIGN    291>>ASSIGN    292>>ASSIGN    293>>ASSIGN    294>>ASSIGN    295>>ASSIGN
       297>>ASSIGN    298>>CALL      299>>CALL
NK$LDCT.DDT$
       248**DCL       248--REDEF
NK$LDCT.DEVNM
       248**DCL       287<<ASSIGN
NK$LDCT.IOQ$
       247**DCL       248--REDEF
NK$LDCT.LDCTX
       249**DCL       249--REDEF
NK$LDCT.LKFLG.ABORTED
       261**DCL       262--REDEF
NK$LDCT.RLCID.LDCTX
       271**DCL       271--REDEF
NK$LDCT.STA$
       267**DCL       268--REDEF
NK$LDCT.SYMB$
       246**DCL       246--REDEF     246--REDEF     247--REDEF
RES_CNT
       280**DCL       290>>DOINDEX
RES_REPEAT
       281**DCL       296>>DOINDEX   297>>ASSIGN
SU_CNT
        33**DCL       283<>CALL      284<>CALL      285<>CALL

PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:16   
       69        1        /*T***********************************************************/
       70        2        /*T*                                                         */
       71        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       72        4        /*T*                                                         */
       73        5        /*T***********************************************************/
       74        6        AFD$MISC: proc (p1,p2,p3,p4,p5) altret;
       75        7        /*F* name: AFD$MISC
       76        8             purpose: Entry points for monitor routines not in AFA or FRS.
       77        9        */
       78       10
       79       11    1   dcl p1 char(p2) daligned;
       80       12    1   dcl p1s redef p1 sbin;
       81       13    1   dcl p1v redef p1 vector;
       82       14    1   dcl p2 sbin;
       83       15    1   dcl p3 sbin;
       84       16    1   dcl p4 sbin;
       85       17    1   dcl p5 sbin;
       86       18
       87       19        %include CP_6;
       88      100        %include B$JIT;
       89      390    1   dcl b$jit$ ptr symref;
       90      391    1   dcl ls1ptr ubin constant init(%bitbin('6001'o));
       91      392    1   dcl b$ls1$ redef ls1ptr ptr;
       92      393        %b$tcb;
       93      396        %b$alt;
       94      404    1   dcl b$tcb$ ptr symref;
       95      405        %fpt_read (stclass=BASED);
       96      444        %fpt_precord (stclass=BASED);
       97      465        %fpt_acct (stclass=CONSTANT);
       98      481    1   dcl b$ps$(0:5) ptr constant symdef init(addr(fpt_acct.v)*0);
       99      482    1   dcl dcb# ubin(18) based aligned;
      100      483        %m$dcb (dcbn=m$ui, asn=file, name='**S', ctg=yes, fun=create, exist=oldfile,
      101      484           org=keyed, acs=direct);
      102      558    1   dcl curtime sbin static init(1352);
      103      559
      104      560
      105      561
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:17   
      106      562
      107      563
      108      564    1   mme$wgvp: entry (p1,p2,p3,p4) altret;
      109      565    1      return;
      110      566    1   mme$wfvp: entry (p1,p2,p3,p4) altret;
      111      567    1      return;
      112      568    1   frs$opstrs: entry altret;
      113      569    1      return;
      114      570    1   frs$clstrs: entry altret;
      115      571    1      return;
      116      572    1   fmo$getdomain: entry (p1) altret;
      117      573    1      p1s = 0;
      118      574    1      return;
      119      575    1   sss$curtime: entry (p1) altret;
      120      576    1   sss$systime: entry (p1) altret;
      121      577    1      curtime = curtime +317;
      122      578    1      p1s = curtime;
      123      579    1      return;
      124      580    1   hff$nilerase: entry (p1) altret;
      125      581    1      altreturn;
      126      582    1   hff$dsiz: entry(p1,p2) altret;
      127      583    1      p2 = 0;
      128      584    1      return;
      129      585    1   m$mread: entry(p1) altret;
      130      586    1      p1v->dcb# = dcbnum(m$ui);
      131      587    1      call m$read (addr(p1)->fpt_read) altret (retalt);
      132      588    1      goto retret;
      133      589    1   m$mwrite: entry(p1) altret;
      134      590    1      p1v->dcb# = dcbnum(m$ui);
      135      591    1      call m$write (addr(p1)->fpt_read) altret (retalt);
      136      592    1      goto retret;
      137      593    1   m$mprecord: entry(p1) altret;
      138      594    1      p1v->dcb# = dcbnum(m$ui);
      139      595    1      call m$precord (addr(p1)->fpt_precord) altret (retalt);
      140      596    1   retret: b$jit = b$ls1$->b$jit;
      141      597    1      return;
      142      598    1   retalt: b$jit = b$ls1$->b$jit;
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:18   
      143      599    1      b$jit.err = b$tcb$->b$tcb.alt$->b$alt.err;
      144      600    1      altreturn;
      145      601    1   m$mjobstats: entry(p1) altret;
      146      602    1      altreturn;
      147      603    1   end;

PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:19   
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure AFD$MISC.

   Procedure AFD$MISC requires 91 words for executable code.
   Procedure AFD$MISC requires 8 words of local(AUTO) storage.

    No errors detected in file AFD$DEBUG.:E05TSI    .

PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:20   

 Object Unit name= AFD$MISC                                   File name= AFD$DEBUG.:E05TOU
 UTS= JUL 29 '97 08:25:08.56 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     20     24  AFD$MISC
    2   DCB   even  none    98    142  M$UI
    3   Data  even  none     1      1  AFD$MISC
    4   Proc  even  none    91    133  AFD$MISC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        5  AFD$MISC
     4      3          yes     yes      Std        4  MME$WGVP
     4      6          yes     yes      Std        4  MME$WFVP
     4     11          yes     yes      Std        0  FRS$OPSTRS
     4     14          yes     yes      Std        0  FRS$CLSTRS
     4     17          yes     yes      Std        1  FMO$GETDOMAIN
     4     24          yes     yes      Std        1  SSS$CURTIME
     4     27          yes     yes      Std        1  SSS$SYSTIME
     4     37          yes     yes      Std        1  HFF$NILERASE
     4     42          yes     yes      Std        2  HFF$DSIZ
     4     47          yes     yes      Std        1  M$MREAD
     4     62          yes     yes      Std        1  M$MWRITE
     4     75          yes     yes      Std        1  M$MPRECORD
     4    130          yes     yes      Std        1  M$MJOBSTATS
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:21   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1     16  B$PS$

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$JIT$                                B$TCB$
     M$UI

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:22   


       69        1        /*T***********************************************************/
       70        2        /*T*                                                         */
       71        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       72        4        /*T*                                                         */
       73        5        /*T***********************************************************/
       74        6        AFD$MISC: proc (p1,p2,p3,p4,p5) altret;

      6  4 000000   000000 700200 xent  AFD$MISC     TSX0  ! X66_AUTO_5
         4 000001   000010 000005                    ZERO    8,5
         4 000002   000005 710000 4                  TRA     s:565

       75        7        /*F* name: AFD$MISC
       76        8             purpose: Entry points for monitor routines not in AFA or FRS.
       77        9        */
       78       10
       79       11    1   dcl p1 char(p2) daligned;
       80       12    1   dcl p1s redef p1 sbin;
       81       13    1   dcl p1v redef p1 vector;
       82       14    1   dcl p2 sbin;
       83       15    1   dcl p3 sbin;
       84       16    1   dcl p4 sbin;
       85       17    1   dcl p5 sbin;
       86       18
       87       19        %include CP_6;
       88      100        %include B$JIT;
       89      390    1   dcl b$jit$ ptr symref;
       90      391    1   dcl ls1ptr ubin constant init(%bitbin('6001'o));
       91      392    1   dcl b$ls1$ redef ls1ptr ptr;
       92      393        %b$tcb;
       93      396        %b$alt;
       94      404    1   dcl b$tcb$ ptr symref;
       95      405        %fpt_read (stclass=BASED);
       96      444        %fpt_precord (stclass=BASED);
       97      465        %fpt_acct (stclass=CONSTANT);
       98      481    1   dcl b$ps$(0:5) ptr constant symdef init(addr(fpt_acct.v)*0);
       99      482    1   dcl dcb# ubin(18) based aligned;
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:23   
      100      483        %m$dcb (dcbn=m$ui, asn=file, name='**S', ctg=yes, fun=create, exist=oldfile,
      101      484           org=keyed, acs=direct);
      102      558    1   dcl curtime sbin static init(1352);
      103      559
      104      560
      105      561
      106      562
      107      563
      108      564    1   mme$wgvp: entry (p1,p2,p3,p4) altret;

    564  4 000003   000000 700200 xent  MME$WGVP     TSX0  ! X66_AUTO_5
         4 000004   000010 000005                    ZERO    8,5

      109      565    1      return;

    565  4 000005   000000 702200 xent               TSX2  ! X66_ARET

      110      566    1   mme$wfvp: entry (p1,p2,p3,p4) altret;

    566  4 000006   000000 700200 xent  MME$WFVP     TSX0  ! X66_AUTO_5
         4 000007   000010 000005                    ZERO    8,5

      111      567    1      return;

    567  4 000010   000000 702200 xent               TSX2  ! X66_ARET

      112      568    1   frs$opstrs: entry altret;

    568  4 000011   000000 700200 xent  FRS$OPSTRS   TSX0  ! X66_AUTO_5
         4 000012   000010 000005                    ZERO    8,5

      113      569    1      return;

    569  4 000013   000000 702200 xent               TSX2  ! X66_ARET

      114      570    1   frs$clstrs: entry altret;

PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:24   
    570  4 000014   000000 700200 xent  FRS$CLSTRS   TSX0  ! X66_AUTO_5
         4 000015   000010 000005                    ZERO    8,5

      115      571    1      return;

    571  4 000016   000000 702200 xent               TSX2  ! X66_ARET

      116      572    1   fmo$getdomain: entry (p1) altret;

    572  4 000017   000000 700200 xent  FMO$GETDOMA* TSX0  ! X66_AUTO_5
         4 000020   000010 000005                    ZERO    8,5

      117      573    1      p1s = 0;

    573  4 000021   200003 470500                    LDP0    @P1,,AUTO
         4 000022   000000 450100                    STZ     0,,PR0

      118      574    1      return;

    574  4 000023   000000 702200 xent               TSX2  ! X66_ARET

      119      575    1   sss$curtime: entry (p1) altret;

    575  4 000024   000000 700200 xent  SSS$CURTIME  TSX0  ! X66_AUTO_5
         4 000025   000010 000005                    ZERO    8,5
         4 000026   000031 710000 4                  TRA     s:577

      120      576    1   sss$systime: entry (p1) altret;

    576  4 000027   000000 700200 xent  SSS$SYSTIME  TSX0  ! X66_AUTO_5
         4 000030   000010 000005                    ZERO    8,5

      121      577    1      curtime = curtime +317;

    577  4 000031   000475 236007                    LDQ     317,DL
         4 000032   000000 056000 3                  ASQ     CURTIME

PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:25   
      122      578    1      p1s = curtime;

    578  4 000033   200003 470500                    LDP0    @P1,,AUTO
         4 000034   000000 235000 3                  LDA     CURTIME
         4 000035   000000 755100                    STA     0,,PR0

      123      579    1      return;

    579  4 000036   000000 702200 xent               TSX2  ! X66_ARET

      124      580    1   hff$nilerase: entry (p1) altret;

    580  4 000037   000000 700200 xent  HFF$NILERASE TSX0  ! X66_AUTO_5
         4 000040   000010 000005                    ZERO    8,5

      125      581    1      altreturn;

    581  4 000041   000000 702200 xent               TSX2  ! X66_AALT

      126      582    1   hff$dsiz: entry(p1,p2) altret;

    582  4 000042   000000 700200 xent  HFF$DSIZ     TSX0  ! X66_AUTO_5
         4 000043   000010 000005                    ZERO    8,5

      127      583    1      p2 = 0;

    583  4 000044   200004 470500                    LDP0    @P2,,AUTO
         4 000045   000000 450100                    STZ     0,,PR0

      128      584    1      return;

    584  4 000046   000000 702200 xent               TSX2  ! X66_ARET

      129      585    1   m$mread: entry(p1) altret;

    585  4 000047   000000 700200 xent  M$MREAD      TSX0  ! X66_AUTO_5
         4 000050   000010 000005                    ZERO    8,5
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:26   

      130      586    1      p1v->dcb# = dcbnum(m$ui);

    586  4 000051   200003 470500                    LDP0    @P1,,AUTO
         4 000052   000000 671500                    LDD1    0,,PR0
         4 000053   000000 236007 xsym               LDQ     M$UI,DL
         4 000054   000000 620006                    EAX0    0,QL
         4 000055   100000 740100                    STX0    0,,PR1

      131      587    1      call m$read (addr(p1)->fpt_read) altret (retalt);

    587  4 000056   440000 713400                    CLIMB   alt,read
         4 000057   401400 401760                    pmme    nvectors=4
         4 000060   000115 702000 4                  TSX2    RETALT

      132      588    1      goto retret;

    588  4 000061   000107 710000 4                  TRA     RETRET

      133      589    1   m$mwrite: entry(p1) altret;

    589  4 000062   000000 700200 xent  M$MWRITE     TSX0  ! X66_AUTO_5
         4 000063   000010 000005                    ZERO    8,5

      134      590    1      p1v->dcb# = dcbnum(m$ui);

    590  4 000064   200003 470500                    LDP0    @P1,,AUTO
         4 000065   000000 671500                    LDD1    0,,PR0
         4 000066   000000 236007 xsym               LDQ     M$UI,DL
         4 000067   000000 620006                    EAX0    0,QL
         4 000070   100000 740100                    STX0    0,,PR1

      135      591    1      call m$write (addr(p1)->fpt_read) altret (retalt);

    591  4 000071   440001 713400                    CLIMB   alt,write
         4 000072   401400 401760                    pmme    nvectors=4
         4 000073   000115 702000 4                  TSX2    RETALT
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:27   

      136      592    1      goto retret;

    592  4 000074   000107 710000 4                  TRA     RETRET

      137      593    1   m$mprecord: entry(p1) altret;

    593  4 000075   000000 700200 xent  M$MPRECORD   TSX0  ! X66_AUTO_5
         4 000076   000010 000005                    ZERO    8,5

      138      594    1      p1v->dcb# = dcbnum(m$ui);

    594  4 000077   200003 470500                    LDP0    @P1,,AUTO
         4 000100   000000 671500                    LDD1    0,,PR0
         4 000101   000000 236007 xsym               LDQ     M$UI,DL
         4 000102   000000 620006                    EAX0    0,QL
         4 000103   100000 740100                    STX0    0,,PR1

      139      595    1      call m$precord (addr(p1)->fpt_precord) altret (retalt);

    595  4 000104   440003 713400                    CLIMB   alt,+16387
         4 000105   401000 401760                    pmme    nvectors=3
         4 000106   000115 702000 4                  TSX2    RETALT

      140      596    1   retret: b$jit = b$ls1$->b$jit;

    596  4 000107   000000 470400 1     RETRET       LDP0    LS1PTR
         4 000110   000000 471400 xsym               LDP1    B$JIT$
         4 000111   000100 100500                    MLR     fill='000'O
         4 000112   000000 001730                    ADSC9   0,,PR0                   cn=0,n=984
         4 000113   100000 001730                    ADSC9   0,,PR1                   cn=0,n=984

      141      597    1      return;

    597  4 000114   000000 702200 xent               TSX2  ! X66_ARET

      142      598    1   retalt: b$jit = b$ls1$->b$jit;
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:28   

    598  4 000115   000000 470400 1     RETALT       LDP0    LS1PTR
         4 000116   000000 471400 xsym               LDP1    B$JIT$
         4 000117   000100 100500                    MLR     fill='000'O
         4 000120   000000 001730                    ADSC9   0,,PR0                   cn=0,n=984
         4 000121   100000 001730                    ADSC9   0,,PR1                   cn=0,n=984

      143      599    1      b$jit.err = b$tcb$->b$tcb.alt$->b$alt.err;

    599  4 000122   000000 471400 xsym               LDP1    B$TCB$
         4 000123   100000 473500                    LDP3    0,,PR1
         4 000124   300102 236100                    LDQ     66,,PR3
         4 000125   000000 474400 xsym               LDP4    B$JIT$
         4 000126   400012 756100                    STQ     10,,PR4

      144      600    1      altreturn;

    600  4 000127   000000 702200 xent               TSX2  ! X66_AALT

      145      601    1   m$mjobstats: entry(p1) altret;

    601  4 000130   000000 700200 xent  M$MJOBSTATS  TSX0  ! X66_AUTO_5
         4 000131   000010 000005                    ZERO    8,5

      146      602    1      altreturn;

    602  4 000132   000000 702200 xent               TSX2  ! X66_AALT
      147      603    1   end;

PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:29   
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure AFD$MISC.
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:30   

 **** Variables and constants ****

  ****  Section 001 RoData AFD$MISC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$LS1$                     2-0-0/d STRC(432)   r     1 FPT_ACCT
     0-0-0/w UBIN        r     1 LS1PTR

  ****  Section 003  Data  AFD$MISC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 CURTIME

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P1                        4-0-0/w PTR         r     1 @P2
     5-0-0/w PTR         r     1 @P3                        6-0-0/w PTR         r     1 @P4
     7-0-0/w PTR         r     1 @P5                       *0-0-0/d ACHR        r     1 P1
    *0-0-0/d SBIN        r     1 P1S                       *0-0-0/d VECT        r     1 P1V
    *0-0-0/w SBIN        r     1 P2                        *0-0-0/w SBIN        r     1 P3
    *0-0-0/w SBIN        r     1 P4                        *0-0-0/w SBIN        r     1 P5

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:31   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w UBIN(18)    r     1 DCB#
     0-0-0/d STRC(360)   r     1 FPT_PRECORD                0-0-0/d STRC(504)   r     1 FPT_READ
     0-0-0/d ASTR(3528)  r     1 M$UI


   Procedure AFD$MISC requires 91 words for executable code.
   Procedure AFD$MISC requires 8 words of local(AUTO) storage.

    No errors detected in file AFD$DEBUG.:E05TSI    .
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:32   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:33   
          MINI XREF LISTING

B$ALT.CODE
       398**DCL       398--REDEF     399--REDEF     399--REDEF
B$ALT.ERR
       399**DCL       599>>ASSIGN
B$ALT.ERR.ERR#
       400**DCL       400--REDEF
B$ALT.EVID
       399**DCL       399--REDEF     399--REDEF
B$JIT
       109**DCL       596<<ASSIGN    596>>ASSIGN    598<<ASSIGN    598>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       208**DCL       208--REDEF
B$JIT.ERR
       114**DCL       599<<ASSIGN
B$JIT.ERR.MID
       115**DCL       115--REDEF
B$JIT.JRESPEAK
       276**DCL       277--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       385**DCL       385--REDEF     386--REDEF
B$JIT.PNR
       289**DCL       289--REDEF
B$JIT.TSLINE
       383**DCL       384--REDEF
B$JIT$
       390**DCL       109--IMP-PTR   596>>ASSIGN    598>>ASSIGN    599>>ASSIGN
B$LS1$
       392**DCL       596>>ASSIGN    598>>ASSIGN
B$TCB.ALT$
       394**DCL       599>>ASSIGN
B$TCB$
       404**DCL       599>>ASSIGN
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:34   
CURTIME
       558**DCL       577<<ASSIGN    577>>ASSIGN    578>>ASSIGN
DCB#
       482**DCL       586<<ASSIGN    590<<ASSIGN    594<<ASSIGN
FPT_ACCT.V
       478**DCL       476--DCLINIT   481--DCLINIT
FPT_PRECORD
       455**DCL       595<>CALL
FPT_READ
       422**DCL       587<>CALL      591<>CALL
FPT_READ.STATION_
       425**DCL       426--REDEF
FPT_READ.V.DVBYTE.REREAD#
       437**DCL       437--REDEF
FPT_READ.V.INDX#
       435**DCL       435--REDEF
LS1PTR
       391**DCL       392--REDEF
M$PRECORD
        32**DCL-ENT   595--CALL
M$READ
        29**DCL-ENT   587--CALL
M$UI
       485**DCL       586>>ASSIGN    590>>ASSIGN    594>>ASSIGN
M$UI.ACTPOS
       526**DCL       526--REDEF
M$UI.ARS#
       485**DCL       485--REDEF
M$UI.ATTR#
       515**DCL       515--REDEF     517--REDEF
M$UI.BORROW
       537**DCL       537--REDEF     537--REDEF     537--REDEF
M$UI.DCBNAME.L
       556**DCL       556--IMP-SIZ   586>>ASSIGN    590>>ASSIGN    594>>ASSIGN
M$UI.EOMCHAR#
       492**DCL       493--REDEF
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:35   
M$UI.FLDID
       529**DCL       530--REDEF
M$UI.FORM$
       521**DCL       521--REDEF
M$UI.FSECT
       544**DCL       544--REDEF
M$UI.FSN#
       511**DCL       511--REDEF     511--REDEF     512--REDEF
M$UI.HEADER$
       520**DCL       521--REDEF
M$UI.IXTNSIZE#
       517**DCL       518--REDEF
M$UI.LASTSTA$
       501**DCL       501--REDEF
M$UI.LVL
       538**DCL       538--REDEF
M$UI.NAME#.C
       501**DCL       502--REDEF
M$UI.NOEOF
       533**DCL       533--REDEF
M$UI.NRECS#
       518**DCL       518--REDEF
M$UI.NRECX
       545**DCL       545--REDEF
M$UI.OHDR
       534**DCL       534--REDEF
M$UI.ORG#
       509**DCL       510--REDEF
M$UI.PRECNO
       542**DCL       542--REDEF
M$UI.RCSZ
       550**DCL       550--REDEF
M$UI.RES#
       503**DCL       503--REDEF
M$UI.SETX
       522**DCL       522--REDEF
PL6.E3A0      #002=AFD$MISC File=AFD$DEBUG.:E05TSI                               TUE 07/29/97 08:25 Page:36   
M$UI.TAB$
       521**DCL       521--REDEF
M$UI.TDA
       541**DCL       542--REDEF
M$UI.WSN#
       503**DCL       504--REDEF
M$WRITE
        29**DCL-ENT   591--CALL
P1
        11**DCL         6--PROC       12--REDEF      13--REDEF     564--ENTRY     566--ENTRY     572--ENTRY
       575--ENTRY     576--ENTRY     580--ENTRY     582--ENTRY     585--ENTRY     587--CALL      589--ENTRY
       591--CALL      593--ENTRY     595--CALL      601--ENTRY
P1S
        12**DCL       573<<ASSIGN    578<<ASSIGN
P1V
        13**DCL       586>>ASSIGN    590>>ASSIGN    594>>ASSIGN
P2
        14**DCL         6--PROC       11--IMP-SIZ   564--ENTRY     566--ENTRY     582--ENTRY     583<<ASSIGN
P3
        15**DCL         6--PROC      564--ENTRY     566--ENTRY
P4
        16**DCL         6--PROC      564--ENTRY     566--ENTRY
P5
        17**DCL         6--PROC
RETALT
       598**LABEL     587--CALLALT   591--CALLALT   595--CALLALT
RETRET
       596**LABEL     588--GOTO      592--GOTO
