VERSION E05


CRAWDAD version A00  Source listing      12:59:00.48 JUL 29 '97 DBB$ISA                                 1    
        1        1        /*M* DBB$ISA ISA and TSA display formats */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        G$TSA/73 'TRAP: %2.1P%@.8N:=KD TSAL: %P.%8LYI: .%..5P%2.9ZY %@16N.1='
        9        9           'INST: .%4.18ZY Z: .%4.18ZY A$: .%Y%/%.#:17684+:8*K.J%999R'
       10       10           'S: .%.6P%4.18ZY  Ring: %.6..2P%0.2N[3 - User    %1?2 - Debugger'
       11       11           '%2?1 - Monitor %?0 - Master  %] Level: %@.13D IV$: .%.16P%Y%2/'
       12       12           '%.4P%@32N.3=%@32N.2=%1P%26=%4E%(G$ISA%)';
       13       13
       14       14        G$ISA/60 'ISA - P: .%#[%2.4P%@32N.3=%]%.3#KH - '
       15       15           '%6.3.3#.60000E=%3#:1+[%:2-X%?+.%.3#KH%]%/      S: .%2.5.#P%4@.16ZH '
       16       16           'CHN: .%..10:#+P%4.18ZY ISM1: .%4@.16N:4=KZH ISM2: .%4@.16N:5=KZH%/'
       17       17           '      NATSAP: %.3.#.20P%0.3N:6=[0 - Monitor/Scheduler%1?1 - User'
       18       18           '%2?2 - Handler%?%.6#KD - ???%]%39-ASV$: .%..#P%Y%2/'
       19       19           '%.1C%4#:1&(%@6#N.7#=%)%4#:2/.4=%7#:1+.7=%C' /* if V4&1: V6 bits to V(V7)  */
       20       20           '%35.7=%25(%:1-.7#:1-:7==%)'         /* Init V10 - V34 to -1               */
       21       21           '%..22:#+P%32.6=%7(%1C%)'       /* Position to regs, V6=32, get B7 - B1    */
       22       22           '%16.6=%9(%1C%)'                     /* get I, R7 - R1, and M1             */
       23       23           '%5#:1&(%6(%@16N.7#=%7#:1+.7=%)%)'   /* get M2 - M7 if ism2&1              */
       24       24           '%5#:2&(%@32N.32=%0)'                /* get T$ if ism2&2                   */
       25       25           '%5#:256&(%@16N.33=%32N.34=%0)'      /* get CI, RDBR$ if V5&256            */
       26       26           '%.1CRegisters: %7( %6*.7#:8#+:7=#KH%)%C'
       27       27           '              _____1 _____2 _____3 _____4 _____5 _____6 _____7%/'
       28       28           '%#[%?%2#.14=%1#.22=%]'              /* Set B3/R3 if TSA                   */
       29       29           'B %17.7=%:1-.8=%1C%/%25.7=R %1C%/'  /* Display Bs and Rs                  */
       30       30           'M %24.7=%1.8=%1C%2/'
       31       31           'TSAP$: .%..6:#+P%6LY I: .%4*.17#KZH T$: .%6*.32#KLH CI: .%4*.33#KZH'
       32       32           ' RDBR$: .%6*.34#KLH%/%1Q';
       33       33
       34       34        G$PLUGH/6 =
       35       35           '%2P%@32N='                          /* Stack header adr in VAR0           */
       36       36           '%@32N.1='                           /* Bottom frame in VAR1               */
       37       37           '%@16N.2='                           /* VAR2 nonzero if user stack         */
CRAWDAD version A00  Source listing      12:59:00.48 JUL 29 '97 DBB$ISA                                 2    
       38       38           '%3.#E'                              /* Fetch header                       */
       39       39           '%2PHeader at .%.#KH, CW=.%.@16N:3=KH, MW=.%.18Y'
       40       40           '%#:3#-.3='                          /* Var3= end of (hardware) stack      */
       41       41           '%/Stack displayed from '
       42       42           '%1.2#['                             /* User stack, display bottom to top  */
       43       43              'bottom frame to top'
       44       44              '%1#:1-='                         /* First frame to display             */
       45       45              '%3#.1='                          /* Last frame                         */
       46       46           '%?top frame to bottom'         /* Monitor or delta, display the other way */
       47       47              '%#:1-.1='                        /* First frame not to display         */
       48       48              '%3#='                            /* First frame to display             */
       49       49           '%] frame:%/'
       50       50           '%^%#:1#?(%1Q%)'                     /* Quit if frame > last frame         */
       51       51           '%3.#E'                              /* Fetch a frame                      */
       52       52           '%2PFrame @.%.#KH called from .'
       53       53           '%@16N.3='                           /* Frame size to VAR3                 */
       54       54           '%#:3#+:1+='                         /* New frame address                  */
       55       55           '%@32N:3-.2='                        /* Return addr to VAR2                */
       56       56           '%.2#KH (%6.2.2#.60000E='            /* Display addr and sym name          */
       57       57           '%:2#?.1[%:1-X'            /* Offset in Var2, -1 if not found, erase the ( */
       58       58           '%?+.%.2#KH)%]'                      /* found, display the offset          */
       59       59           '%3#[%1Q%]';                         /* Give up if stack size is zero      */
       60       60
       61       61        G$ASDT/62 =
       62       62           'Address  Page  RdWrEx   Size       Address  Page  RdWrEx   Size%/'
       63       63           '------- -----  ------ ------       ------- -----  ------ ------'
       64       64           '%.1C%2.3:@2N-KD%C'
       65       65           '%.2C%4.#KH%E000%1@N[%15X empty%3S%?%6.@15H%E  %1C%1C%1C%5.@10N:1+KH%E00%]%C'
       66       66           '%/%2P%2C%1=%15(%/%2.#P%2C%7X%56S%#:16*=%2C%#:16/:1+=%)%1Q';
       67       67

CRAWDAD version A00  Source listing      12:59:00.48 JUL 29 '97 DBB$ISA                                 3    

         No errors,   4 Format Definitions in DBB$ISA

