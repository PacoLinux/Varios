

15:11 JUL 28 '97 PM_BUCKET_C.:E05SI                                        1    
    1      /*M*  PM_BUCKET_C    Contains macros associated with bucket generation        */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*K*  BUCKET_SET     A "bucket set" is a data structure usually used for
    8                  performance monitoring purposes;  it is used to gather statistical
    9                  data about a variable or event whose value distribution is too
   10                  large to permit the use of an individual counter for each
   11                  possible value (e.g., # of milliseconds between PMMEs, etc).
   12                  A bucket set consists of some header information (specifically,
   13                  the number of buckets in the set) and a set of data buckets
   14                  each of which is responsible for data falling into a successively
   15                  higher range.  When creating a bucket set, the programmer specifies
   16                  the number of significant buckets to be built (call this "N");
   17                  an N+1th bucket will be built and will be used as an overflow
   18                  area to count any data values that lie above the range indicated
   19                  by the programmer.
   20                                                                                    */
   21      %MACRO BUCKET
   22         (NAME="*",
   23          STCLASS="STATIC SYMDEF",
   24          #_OF_BUCKETS=1,
   25          MAX_VALUES="0*0");
   26
   27      DCL 1 NAME STCLASS DALIGNED,
   28            2 SIZE UBIN WORD INIT (#_OF_BUCKETS),
   29            2 * UBIN WORD,
   30            2 MAX (0:#_OF_BUCKETS) SBIN WORD INIT(MAX_VALUES),
   31            2 SUM(0:#_OF_BUCKETS) SBIN WORD INIT(0*0);
   32
   33      %MEND;
   34      %MACRO DUMMY_BUCKET (NAME="*", STCLASS=" ");
   35      DCL 1 NAME STCLASS DALIGNED,
   36            2 SIZE UBIN WORD,
   37            2 * UBIN WORD,
15:11 JUL 28 '97 PM_BUCKET_C.:E05SI                                        2    
   38            2 DATA (0:0) SBIN WORD;
   39      %MEND;
   40      /*F*  NAME: UPDATE_BUCKET
   41            PURPOSE: Macro to generate in-line code for updating a bucket set.      */
   42      /*D*  NAME: UPDATE_BUCKET
   43            DESCRIPTION: This macro may be used to generate in-line code to update
   44               a performance monitor bucket set.  It should be used whenever bucket
   45               updating is to be performed in a time-critical path (i.e., scheduler
   46               or I/O system code) in which the overhead involved in calling
   47               PMB$BUCKET would be undesirable.  It is used as follows:
   48                                                                                  *//*
   49                  %INCLUDE PM_BUCKET_C;
   50                                                                                  *//*
   51                  %DUMMY_BUCKET (NAME=bucket_name, STCLASS=SYMREF);
   52                                                                                  *//*
   53                           .
   54                           .
   55                           .
   56                                                                                  *//*
   57                  %UPDATE_BUCKET (BUCKET=bucket_name, SCRATCH=scratch_UBIN_var,
   58                                  DIST_VAL=distribution_value
   59                                  [ ,INCREMENT=increment_value] );
   60                                                                                  *//*
   61               This assumes that the bucket set is build and SYMDEFed in some
   62               other module (as good CP-6 programming practice requires).
   63               The SCRATCH variable may be either AUTO or STATIC, and may be
   64               used for other things in your module as long as you don't mind
   65               having it blitzed when you update the bucket set.  For a
   66               further description of bucket manipulation, see the PMB$BUCKET
   67               reports.
   68                                                                                    */
   69      %MACRO UPDATE_BUCKET (INCREMENT=1, DIST_VAL=0,
   70                            BUCKET=BUCKET, SCRATCH=SCRATCH);
   71
   72         SCRATCH = 0;
   73
   74         DO WHILE (SCRATCH < BUCKET.SIZE AND
15:11 JUL 28 '97 PM_BUCKET_C.:E05SI                                        3    
   75             DIST_VAL > BUCKET.DATA(SCRATCH));
   76
   77            SCRATCH = SCRATCH + 1;
   78
   79            END;
   80
   81         BUCKET.DATA(SCRATCH + BUCKET.SIZE + 1) =
   82          BUCKET.DATA(SCRATCH + BUCKET.SIZE + 1) + INCREMENT;
   83
   84      %MEND;

