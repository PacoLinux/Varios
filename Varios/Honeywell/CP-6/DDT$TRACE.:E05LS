VERSION E05

PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:1    
        1        1        /*M* DDT$TRACE TRACE MODULES */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDT$TRACE
        9        9             PURPOSE: CONTAINS TRACE MODULES. */
       10       10        %EJECT;
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:2    
       11       11        /*D*  NAME:  DDT$TRACEOFF
       12       12              DESCRIPTION:  IF THE TRACE FLAG IS OFF, DONE.  IF THE
       13       13                     TRACE FLAG IS ON, FIRST REMOVE ALL THE FAULT TAGS
       14       14                     FROM THE ENTDEFS.  THEN RUN THE ENTDEF TABLE LOOKING
       15       15                     FOR THE INTERNAL MARK ON.  IF A MODULE HAS ITS
       16       16                     INTERNAL MARK ON, THEN CALL DDT$ITAGS WITH THE REMOVE
       17       17                     FUNCTION...TO RESET THE TAGS TO THEIR ORIGINAL
       18       18                    STATE.  THEN UNMARK THE ENTDEF.  TURN TRACE FLAG
       19       19                     OFF AND RETURN. */
       20       20                                                /**/
       21       21        DDT$TRACEOFF: PROC;
       22       22                                                /**/
       23       23    1   DCL EDEF$ PTR;
       24       24    1   DCL EDEF_END$ PTR;
       25       25    1   DCL DNAME$ PTR;
       26       26    1   DCL NODE$ PTR;
       27       27    1   DCL NODE SBIN;                          /* Must be SBIN */
       28       28        %INCLUDE DD$BASED;
       29     1331        %DU$TREE (NAME="DU$TREE(0:0)");
       30     1337        %DU$NODE (NAME="DU$NODE(0:0)");
       31     1347        %INCLUDE B$OBJECT_C;
       32     4777        %B$EDEF (STCLASS="BASED(EDEF$)");
       33     4847        %INCLUDE XUH_MACRO_C;
       34     4931        %INCLUDE DD_SD_M;
       35     6267        %S_D;
       36     7585        %INCLUDE DD_SUBS_C;
       37     7856        %INCLUDE DD_ERR_C;
       38     8253    1   DCL DDS$EQCS# ENTRY(1) ALTRET;
       39     8254    1   DCL DDS$ES_INQ ENTRY(1) ALTRET;
       40     8255    1   DCL DDT$XTAGS ENTRY(4);
       41     8256    1   DCL DDT$ITAGS ENTRY(1) ALTRET;
       42     8257    1   DCL DDE$ERROR ENTRY;
       43     8258                                                /**/
       44     8259    1        IF S_D.TR$INFO.SET = '0'B
       45     8260    1        THEN RETURN;
       46     8261    1        IF S_D.TR$INFO.TYPE ~= C_TC        /* C_TC */
       47     8262    2        THEN DO;
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:3    
       48     8263    2             S_D.T$T.ACTIVE = '0'B;
       49     8264    2             RETURN;
       50     8265    2           END;
       51     8266        /* Turn trace calls off, and clear fault tags */
       52     8267    1        IF S_D.TR$INFO.ACTIVE = '0'B THEN RETURN;
       53     8268    1        S_D.TR$INFO.ACTIVE = '0'B;
       54     8269    1        IF S_D.OVERLAID
       55     8270    2        THEN DO;
       56     8271    2             NODE = S_D.MTREE$ -> DU$TREE.NEXT#( S_D.NODE#M1 + 1 );
       57     8272    3             DO WHILE ( NODE > 0 );
       58     8273    3                  NODE$ = PINCRW( S_D.NODESEG$, SIZEW( DU$NODE ) * NODE );
       59     8274    3                  EDEF$ = NODE$ -> DU$NODE.EDEF$( 0 );
       60     8275    3                  EDEF_END$ = NODE$ -> DU$NODE.EDEF_END$( 0 );
       61     8276    3                  DNAME$ = NODE$ -> DU$NODE.DNAME$( 0 );
       62     8277    3                  CALL DDT$XTAGS( @REMOVE_TAGS, EDEF$, EDEF_END$, DNAME$ );
       63     8278    3                  IF NOT S_D.TR$INFO.X
       64     8279    4                  THEN DO;
       65     8280    4                       S_D.NODE = NODE;
       66     8281    4                       S_D.EDEF$ = NODE$ -> DU$NODE.EDEF$( 0 );
       67     8282    4                       S_D.EDEF_END$ = NODE$ -> DU$NODE.EDEF_END$( 0 );
       68     8283    4                       S_D.SDEF$ = NODE$ -> DU$NODE.SDEF$( 0 );
       69     8284    4                       S_D.SDEF_END$ = NODE$ -> DU$NODE.SDEF_END$( 0 );
       70     8285    4                       S_D.DNAME$ = NODE$ -> DU$NODE.DNAME$( 0 );
       71     8286    4                       CALL DOITAGS;
       72     8287    4                     END;
       73     8288    3                  NODE = S_D.MTREE$ -> DU$TREE.NEXT#( NODE );
       74     8289    3                END;
       75     8290    2           END;
       76     8291    2        ELSE DO;
       77     8292    2             CALL DDT$XTAGS( @REMOVE_TAGS, S_D.EDEF$, S_D.EDEF_END$, S_D.DNAME$ );
       78     8293    2             IF NOT S_D.TR$INFO.X
       79     8294    2             THEN CALL DOITAGS;
       80     8295    2           END;
       81     8296    1        S_D.QSCH = '0'B;
       82     8297                                                /**/
       83     8298    1        RETURN;
       84     8299                                                /**/
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:4    
       85     8300        %EJECT;
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:5    
       86     8301                                                /**/
       87     8302    1   DOITAGS: PROC;
       88     8303                                                /**/
       89     8304    2        EDEF$ = S_D.EDEF$;
       90     8305    2        IF EDEF$ = ADDR( NIL ) THEN RETURN;
       91     8306    3        DO WHILE( EDEF$ <= S_D.EDEF_END$ );
       92     8307        /* Look at primary entdefs which have their marks on */
       93     8308    3             IF ( B$EDEF.PRI ) AND ( B$EDEF.LFLAGS.FAULTAGS )
       94     8309    4             THEN DO;
       95     8310    4                  CALL DDS$EQCS#( POFFW( EDEF$, S_D.EDEF$ ) / SIZEW( B$EDEF ) ) ALTRET(
              8310                           NOSCH );
       96     8311    4                  CALL DDT$ITAGS( @REMOVE_TAGS ) ALTRET( DELBUG );
       97     8312    4   NOSCH:
       98     8313    4                  B$EDEF.LFLAGS.FAULTAGS = '0'B;
       99     8314    4                END;
      100     8315    3             EDEF$ = PINCRW( EDEF$, SIZEW( B$EDEF ) );
      101     8316    4             DO WHILE ( '0'B );
      102     8317    4   DELBUG:        S_D.ERROR = E@DELBUG;    /* E@DELBUG */
      103     8318    4                  CALL DDE$ERROR;
      104     8319    4                END;
      105     8320    3           END;
      106     8321                                                /**/
      107     8322    2        RETURN;
      108     8323                                                /**/
      109     8324    2   END DOITAGS;
      110     8325                                                /**/
      111     8326    1   END DDT$TRACEOFF;
      112     8327        %EOD;

PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:6    
--  Include file information  --

   DD_ERR_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDT$TRACEOFF.

   Procedure DDT$TRACEOFF requires 151 words for executable code.
   Procedure DDT$TRACEOFF requires 14 words of local(AUTO) storage.

PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:7    

 Object Unit name= DDT$TRACEOFF                               File name= DDT$TRACE.:E05TOU
 UTS= JUL 29 '97 14:25:43.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   151    227  DDT$TRACEOFF
    1  RoData even  none     2      2  DDT$TRACEOFF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  DDT$TRACEOFF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 DDT$XTAGS
 yes     yes           Std       1 DDS$EQCS#
 yes     yes           Std       1 DDT$ITAGS
         yes           Std       0 DDE$ERROR
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:8    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:9    


        1        1        /*M* DDT$TRACE TRACE MODULES */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDT$TRACE
        9        9             PURPOSE: CONTAINS TRACE MODULES. */
       10       10        %EJECT;
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:10   
       11       11        /*D*  NAME:  DDT$TRACEOFF
       12       12              DESCRIPTION:  IF THE TRACE FLAG IS OFF, DONE.  IF THE
       13       13                     TRACE FLAG IS ON, FIRST REMOVE ALL THE FAULT TAGS
       14       14                     FROM THE ENTDEFS.  THEN RUN THE ENTDEF TABLE LOOKING
       15       15                     FOR THE INTERNAL MARK ON.  IF A MODULE HAS ITS
       16       16                     INTERNAL MARK ON, THEN CALL DDT$ITAGS WITH THE REMOVE
       17       17                     FUNCTION...TO RESET THE TAGS TO THEIR ORIGINAL
       18       18                    STATE.  THEN UNMARK THE ENTDEF.  TURN TRACE FLAG
       19       19                     OFF AND RETURN. */
       20       20                                                /**/
       21       21        DDT$TRACEOFF: PROC;

     21  0 000000   000000 700200 xent  DDT$TRACEOFF TSX0  ! X66_AUTO_0
         0 000001   000016 000000                    ZERO    14,0

       22       22                                                /**/
       23       23    1   DCL EDEF$ PTR;
       24       24    1   DCL EDEF_END$ PTR;
       25       25    1   DCL DNAME$ PTR;
       26       26    1   DCL NODE$ PTR;
       27       27    1   DCL NODE SBIN;                          /* Must be SBIN */
       28       28        %INCLUDE DD$BASED;
       29     1331        %DU$TREE (NAME="DU$TREE(0:0)");
       30     1337        %DU$NODE (NAME="DU$NODE(0:0)");
       31     1347        %INCLUDE B$OBJECT_C;
       32     4777        %B$EDEF (STCLASS="BASED(EDEF$)");
       33     4847        %INCLUDE XUH_MACRO_C;
       34     4931        %INCLUDE DD_SD_M;
       35     6267        %S_D;
       36     7585        %INCLUDE DD_SUBS_C;
       37     7856        %INCLUDE DD_ERR_C;
       38     8253    1   DCL DDS$EQCS# ENTRY(1) ALTRET;
       39     8254    1   DCL DDS$ES_INQ ENTRY(1) ALTRET;
       40     8255    1   DCL DDT$XTAGS ENTRY(4);
       41     8256    1   DCL DDT$ITAGS ENTRY(1) ALTRET;
       42     8257    1   DCL DDE$ERROR ENTRY;
       43     8258                                                /**/
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:11   
       44     8259    1        IF S_D.TR$INFO.SET = '0'B

   8259  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   004627 234100                    SZN     2455,,PR0
         0 000004   000006 604000 0                  TMI     s:8261

       45     8260    1        THEN RETURN;

   8260  0 000005   000000 702200 xent               TSX2  ! X66_ARET

       46     8261    1        IF S_D.TR$INFO.TYPE ~= C_TC        /* C_TC */

   8261  0 000006   004634 235100                    LDA     2460,,PR0
         0 000007   000056 115007                    CMPA    46,DL
         0 000010   000013 600000 0                  TZE     s:8267

       47     8262    2        THEN DO;

       48     8263    2             S_D.T$T.ACTIVE = '0'B;

   8263  0 000011   004707 450100                    STZ     2503,,PR0

       49     8264    2             RETURN;

   8264  0 000012   000000 702200 xent               TSX2  ! X66_ARET

       50     8265    2           END;
       51     8266        /* Turn trace calls off, and clear fault tags */
       52     8267    1        IF S_D.TR$INFO.ACTIVE = '0'B THEN RETURN;

   8267  0 000013   004630 234100                    SZN     2456,,PR0
         0 000014   000016 604000 0                  TMI     s:8268

   8267  0 000015   000000 702200 xent               TSX2  ! X66_ARET

       53     8268    1        S_D.TR$INFO.ACTIVE = '0'B;

PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:12   
   8268  0 000016   004630 450100                    STZ     2456,,PR0

       54     8269    1        IF S_D.OVERLAID

   8269  0 000017   004764 234100                    SZN     2548,,PR0
         0 000020   000111 605000 0                  TPL     s:8292

       55     8270    2        THEN DO;

       56     8271    2             NODE = S_D.MTREE$ -> DU$TREE.NEXT#( S_D.NODE#M1 + 1 );

   8271  0 000021   004762 471500                    LDP1    2546,,PR0
         0 000022   004766 236100                    LDQ     2550,,PR0
         0 000023   000003 402007                    MPY     3,DL
         0 000024   100003 235106                    LDA     3,QL,PR1
         0 000025   200007 755100                    STA     NODE,,AUTO

       57     8272    3             DO WHILE ( NODE > 0 );

   8272  0 000026   000134 604400 0                  TMOZ    s:8296

       58     8273    3                  NODE$ = PINCRW( S_D.NODESEG$, SIZEW( DU$NODE ) * NODE );

   8273  0 000027   000000 470400 xsym               LDP0    S_D$
         0 000030   005003 471500                    LDP1    2563,,PR0
         0 000031   200007 236100                    LDQ     NODE,,AUTO
         0 000032   000007 402007                    MPY     7,DL
         0 000033   100000 633506                    EPPR3   0,QL,PR1
         0 000034   200006 453500                    STP3    NODE$,,AUTO

       59     8274    3                  EDEF$ = NODE$ -> DU$NODE.EDEF$( 0 );

   8274  0 000035   300002 236100                    LDQ     2,,PR3
         0 000036   200003 756100                    STQ     EDEF$,,AUTO

       60     8275    3                  EDEF_END$ = NODE$ -> DU$NODE.EDEF_END$( 0 );

PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:13   
   8275  0 000037   300003 236100                    LDQ     3,,PR3
         0 000040   200004 756100                    STQ     EDEF_END$,,AUTO

       61     8276    3                  DNAME$ = NODE$ -> DU$NODE.DNAME$( 0 );

   8276  0 000041   300006 236100                    LDQ     6,,PR3
         0 000042   200005 756100                    STQ     DNAME$,,AUTO

       62     8277    3                  CALL DDT$XTAGS( @REMOVE_TAGS, EDEF$, EDEF_END$, DNAME$ );

   8277  0 000043   200005 634500                    EPPR4   DNAME$,,AUTO
         0 000044   200015 454500                    STP4    NODE+6,,AUTO
         0 000045   200004 635500                    EPPR5   EDEF_END$,,AUTO
         0 000046   200014 455500                    STP5    NODE+5,,AUTO
         0 000047   200003 636500                    EPPR6   EDEF$,,AUTO
         0 000050   200013 456500                    STP6    NODE+4,,AUTO
         0 000051   000000 236000 1                  LDQ     0
         0 000052   200012 756100                    STQ     NODE+3,,AUTO
         0 000053   200012 630500                    EPPR0   NODE+3,,AUTO
         0 000054   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000055   000000 701000 xent               TSX1    DDT$XTAGS
         0 000056   000000 011000                    NOP     0

       63     8278    3                  IF NOT S_D.TR$INFO.X

   8278  0 000057   000000 470400 xsym               LDP0    S_D$
         0 000060   004632 234100                    SZN     2458,,PR0
         0 000061   000101 604000 0                  TMI     s:8288

       64     8279    4                  THEN DO;

       65     8280    4                       S_D.NODE = NODE;

   8280  0 000062   200007 235100                    LDA     NODE,,AUTO
         0 000063   004706 755100                    STA     2502,,PR0

       66     8281    4                       S_D.EDEF$ = NODE$ -> DU$NODE.EDEF$( 0 );
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:14   

   8281  0 000064   200006 471500                    LDP1    NODE$,,AUTO
         0 000065   100002 236100                    LDQ     2,,PR1
         0 000066   001042 756100                    STQ     546,,PR0

       67     8282    4                       S_D.EDEF_END$ = NODE$ -> DU$NODE.EDEF_END$( 0 );

   8282  0 000067   100003 236100                    LDQ     3,,PR1
         0 000070   001044 756100                    STQ     548,,PR0

       68     8283    4                       S_D.SDEF$ = NODE$ -> DU$NODE.SDEF$( 0 );

   8283  0 000071   100004 236100                    LDQ     4,,PR1
         0 000072   001043 756100                    STQ     547,,PR0

       69     8284    4                       S_D.SDEF_END$ = NODE$ -> DU$NODE.SDEF_END$( 0 );

   8284  0 000073   100005 236100                    LDQ     5,,PR1
         0 000074   001045 756100                    STQ     549,,PR0

       70     8285    4                       S_D.DNAME$ = NODE$ -> DU$NODE.DNAME$( 0 );

   8285  0 000075   100006 236100                    LDQ     6,,PR1
         0 000076   001041 756100                    STQ     545,,PR0

       71     8286    4                       CALL DOITAGS;

   8286  0 000077   000141 701000 0                  TSX1    DOITAGS
         0 000100   000000 011000                    NOP     0

       72     8287    4                     END;

       73     8288    3                  NODE = S_D.MTREE$ -> DU$TREE.NEXT#( NODE );

   8288  0 000101   000000 470400 xsym               LDP0    S_D$
         0 000102   004762 471500                    LDP1    2546,,PR0
         0 000103   200007 236100                    LDQ     NODE,,AUTO
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:15   
         0 000104   000003 402007                    MPY     3,DL
         0 000105   100000 235106                    LDA     0,QL,PR1
         0 000106   200007 755100                    STA     NODE,,AUTO

       74     8289    3                END;

   8289  0 000107   000027 605400 0                  TPNZ    s:8273

       75     8290    2           END;

   8290  0 000110   000134 710000 0                  TRA     s:8296

       76     8291    2        ELSE DO;

       77     8292    2             CALL DDT$XTAGS( @REMOVE_TAGS, S_D.EDEF$, S_D.EDEF_END$, S_D.DNAME$ );

   8292  0 000111   000000 236000 xsym               LDQ     S_D$
         0 000112   001041 036003                    ADLQ    545,DU
         0 000113   200015 756100                    STQ     NODE+6,,AUTO
         0 000114   000000 236000 xsym               LDQ     S_D$
         0 000115   001044 036003                    ADLQ    548,DU
         0 000116   200014 756100                    STQ     NODE+5,,AUTO
         0 000117   000000 236000 xsym               LDQ     S_D$
         0 000120   001042 036003                    ADLQ    546,DU
         0 000121   000000 235000 1                  LDA     0
         0 000122   200012 757100                    STAQ    NODE+3,,AUTO
         0 000123   200012 630500                    EPPR0   NODE+3,,AUTO
         0 000124   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000125   000000 701000 xent               TSX1    DDT$XTAGS
         0 000126   000000 011000                    NOP     0

       78     8293    2             IF NOT S_D.TR$INFO.X

   8293  0 000127   000000 470400 xsym               LDP0    S_D$
         0 000130   004632 234100                    SZN     2458,,PR0
         0 000131   000134 604000 0                  TMI     s:8296

PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:16   
       79     8294    2             THEN CALL DOITAGS;

   8294  0 000132   000141 701000 0                  TSX1    DOITAGS
         0 000133   000000 011000                    NOP     0

       80     8295    2           END;

       81     8296    1        S_D.QSCH = '0'B;

   8296  0 000134   000000 470400 xsym               LDP0    S_D$
         0 000135   000100 100400                    MLR     fill='000'O
         0 000136   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000137   000733 000034                    ADSC9   475,,PR0                 cn=0,n=28

       82     8297                                                /**/
       83     8298    1        RETURN;

   8298  0 000140   000000 702200 xent               TSX2  ! X66_ARET

       84     8299                                                /**/
       85     8300        %EJECT;
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:17   
       86     8301                                                /**/
       87     8302    1   DOITAGS: PROC;

   8302  0 000141   200010 741300       DOITAGS      STX1  ! NODE+1,,AUTO

       88     8303                                                /**/
       89     8304    2        EDEF$ = S_D.EDEF$;

   8304  0 000142   000000 470400 xsym               LDP0    S_D$
         0 000143   001042 236100                    LDQ     546,,PR0
         0 000144   200003 756100                    STQ     EDEF$,,AUTO

       90     8305    2        IF EDEF$ = ADDR( NIL ) THEN RETURN;

   8305  0 000145   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000146   000150 601000 0                  TNZ     s:8306

   8305  0 000147   000001 702211                    TSX2  ! 1,X1

       91     8306    3        DO WHILE( EDEF$ <= S_D.EDEF_END$ );

   8306  0 000150   001044 116100                    CMPQ    548,,PR0
         0 000151   000153 600000 0                  TZE     s:8308
         0 000152   000225 603000 0                  TRC     s:8322

       92     8307        /* Look at primary entdefs which have their marks on */
       93     8308    3             IF ( B$EDEF.PRI ) AND ( B$EDEF.LFLAGS.FAULTAGS )

   8308  0 000153   200003 470500                    LDP0    EDEF$,,AUTO
         0 000154   000001 236100                    LDQ     1,,PR0
         0 000155   400000 316007                    CANQ    -131072,DL
         0 000156   000207 600000 0                  TZE     s:8315
         0 000157   000000 430100                    FSZN    0,,PR0
         0 000160   000207 605000 0                  TPL     s:8315

       94     8309    4             THEN DO;

PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:18   
       95     8310    4                 CALL DDS$EQCS#( POFFW( EDEF$, S_D.EDEF$ ) / SIZEW( B$EDEF ) ) ALTRET(
              8310                           NOSCH );

   8310  0 000161   000000 471400 xsym               LDP1    S_D$
         0 000162   101042 236100                    LDQ     546,,PR1
         0 000163   000022 772000                    QRL     18
         0 000164   200012 756100                    STQ     NODE+3,,AUTO
         0 000165   200003 236100                    LDQ     EDEF$,,AUTO
         0 000166   000022 772000                    QRL     18
         0 000167   200012 136100                    SBLQ    NODE+3,,AUTO
         0 000170   000002 506007                    DIV     2,DL
         0 000171   200013 756100                    STQ     NODE+4,,AUTO
         0 000172   200013 633500                    EPPR3   NODE+4,,AUTO
         0 000173   200014 453500                    STP3    NODE+5,,AUTO
         0 000174   200014 630500                    EPPR0   NODE+5,,AUTO
         0 000175   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000176   000000 701000 xent               TSX1    DDS$EQCS#
         0 000177   000204 702000 0                  TSX2    NOSCH

       96     8311    4                  CALL DDT$ITAGS( @REMOVE_TAGS ) ALTRET( DELBUG );

   8311  0 000200   000000 630400 1                  EPPR0   0
         0 000201   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000202   000000 701000 xent               TSX1    DDT$ITAGS
         0 000203   000213 702000 0                  TSX2    DELBUG

       97     8312    4   NOSCH:
       98     8313    4                  B$EDEF.LFLAGS.FAULTAGS = '0'B;

   8313  0 000204   200003 470500       NOSCH        LDP0    EDEF$,,AUTO
         0 000205   000001 236000 1                  LDQ     1
         0 000206   000000 356100                    ANSQ    0,,PR0

       99     8314    4                END;

      100     8315    3             EDEF$ = PINCRW( EDEF$, SIZEW( B$EDEF ) );

PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:19   
   8315  0 000207   200003 236100                    LDQ     EDEF$,,AUTO
         0 000210   000002 036003                    ADLQ    2,DU
         0 000211   200003 756100                    STQ     EDEF$,,AUTO

      101     8316    4             DO WHILE ( '0'B );

   8316  0 000212   000221 710000 0                  TRA     s:8320

      102     8317    4   DELBUG:        S_D.ERROR = E@DELBUG;    /* E@DELBUG */

   8317  0 000213   000766 235007       DELBUG       LDA     502,DL
         0 000214   000000 470400 xsym               LDP0    S_D$
         0 000215   000013 755100                    STA     11,,PR0

      103     8318    4                  CALL DDE$ERROR;

   8318  0 000216   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000217   000000 701000 xent               TSX1    DDE$ERROR
         0 000220   000000 011000                    NOP     0

      104     8319    4                END;

      105     8320    3           END;

   8320  0 000221   000000 470400 xsym               LDP0    S_D$
         0 000222   001044 236100                    LDQ     548,,PR0
         0 000223   200003 116100                    CMPQ    EDEF$,,AUTO
         0 000224   000153 603000 0                  TRC     s:8308

      106     8321                                                /**/
      107     8322    2        RETURN;

   8322  0 000225   200010 221300                    LDX1  ! NODE+1,,AUTO
         0 000226   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:20   
   1     000   000003 006000   776777 777777                                    ........
      108     8323                                                /**/
      109     8324    2   END DOITAGS;
      110     8325                                                /**/
      111     8326    1   END DDT$TRACEOFF;
      112     8327        %EOD;

PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:21   
--  Include file information  --

   DD_ERR_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDT$TRACEOFF.

   Procedure DDT$TRACEOFF requires 151 words for executable code.
   Procedure DDT$TRACEOFF requires 14 words of local(AUTO) storage.
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:22   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:23   
          MINI XREF LISTING

B$EDEF
      4778**DCL      8310--CALL     8315--ASSIGN
B$EDEF.LFLAGS.FAULTAGS
      4793**DCL      8308>>IF       8313<<ASSIGN
B$EDEF.OU
      4795**DCL      4801--REDEF
B$EDEF.PRI
      4806**DCL      8308>>IF
DDE$ERROR
      8257**DCL-ENT  8318--CALL
DDS$EQCS#
      8253**DCL-ENT  8310--CALL
DDT$ITAGS
      8256**DCL-ENT  8311--CALL
DDT$XTAGS
      8255**DCL-ENT  8277--CALL     8292--CALL
DELBUG IN PROCEDURE DOITAGS
      8317**LABEL    8311--CALLALT
DNAME$
        25**DCL      8276<<ASSIGN   8277<>CALL
DOITAGS
      8302**PROC     8286--CALL     8294--CALL
DU$NODE
      1338**DCL      8273--ASSIGN
DU$NODE.DNAME$
      1345**DCL      8276>>ASSIGN   8285>>ASSIGN
DU$NODE.EDEF$
      1341**DCL      8274>>ASSIGN   8281>>ASSIGN
DU$NODE.EDEF_END$
      1342**DCL      8275>>ASSIGN   8282>>ASSIGN
DU$NODE.SDEF$
      1343**DCL      8283>>ASSIGN
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:24   
DU$NODE.SDEF_END$
      1344**DCL      8284>>ASSIGN
DU$TREE.NEXT#
      1333**DCL      8271>>ASSIGN   8288>>ASSIGN
EDEF$
        23**DCL      4778--IMP-PTR  8274<<ASSIGN   8277<>CALL     8304<<ASSIGN   8305>>IF       8306>>DOWHILE
      8308>>IF       8308>>IF       8310>>CALL     8313>>ASSIGN   8315<<ASSIGN   8315>>ASSIGN
EDEF_END$
        24**DCL      8275<<ASSIGN   8277<>CALL
NODE
        27**DCL      8271<<ASSIGN   8272>>DOWHILE  8273>>ASSIGN   8280>>ASSIGN   8288<<ASSIGN   8288>>ASSIGN
NODE$
        26**DCL      8273<<ASSIGN   8274>>ASSIGN   8275>>ASSIGN   8276>>ASSIGN   8281>>ASSIGN   8282>>ASSIGN
      8283>>ASSIGN   8284>>ASSIGN   8285>>ASSIGN
NOSCH IN PROCEDURE DOITAGS
      8313**LABEL    8310--CALLALT
S_D.CURRENT_CHANNEL
      7219**DCL      7221--REDEF
S_D.DEBUGA
      6371**DCL      6373--REDEF
S_D.DNAME$
      6713**DCL      8285<<ASSIGN   8292<>CALL
S_D.EDEF$
      6715**DCL      8281<<ASSIGN   8292<>CALL     8304>>ASSIGN   8310>>CALL
S_D.EDEF_END$
      6719**DCL      8282<<ASSIGN   8292<>CALL     8306>>DOWHILE
S_D.EIS
      7329**DCL      7358--REDEF
S_D.ERROR
      6300**DCL      8317<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      7262**DCL      7263--REDEF    7277--REDEF
S_D.JDE
      6876**DCL      6877--REDEF
S_D.L$.VALUE
      6429**DCL      6435--REDEF    6443--REDEF    6446--REDEF    6449--REDEF    6452--REDEF
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:25   
S_D.L$.VALUE.L
      6430**DCL      6431--REDEF    6432--REDEF
S_D.L6_MESSAGE_BUF
      7283**DCL      7285--REDEF
S_D.MTREE$
      6929**DCL      8271>>ASSIGN   8288>>ASSIGN
S_D.NODE
      6828**DCL      8280<<ASSIGN
S_D.NODE#M1
      6937**DCL      8271>>ASSIGN
S_D.NODESEG$
      6963**DCL      8273>>ASSIGN
S_D.OUTPUT
      7249**DCL      7251--REDEF
S_D.OVERLAID
      6933**DCL      8269>>IF
S_D.QSCH
      6573**DCL      8296<<ASSIGN
S_D.REMOTE_MSG.FNCC
      7268**DCL      7269--REDEF
S_D.REMOTE_MSG.STXC
      7264**DCL      7265--REDEF
S_D.REMOTE_MSG.SUBFNCC
      7272**DCL      7273--REDEF
S_D.SDEF$
      6717**DCL      8283<<ASSIGN
S_D.SDEF_END$
      6721**DCL      8284<<ASSIGN
S_D.SV
      6328**DCL      6349--REDEF
S_D.T$T.ACTIVE
      6832**DCL      8263<<ASSIGN
S_D.TR$INFO.ACTIVE
      6755**DCL      8267>>IF       8268<<ASSIGN
S_D.TR$INFO.SET
      6753**DCL      8259>>IF
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:26   
S_D.TR$INFO.TYPE
      6763**DCL      8261>>IF
S_D.TR$INFO.X
      6759**DCL      8278>>IF       8293>>IF
S_D$
      7580**DCL      6276--IMP-PTR  8259>>IF       8261>>IF       8263>>ASSIGN   8267>>IF       8268>>ASSIGN
      8269>>IF       8271>>ASSIGN   8271>>ASSIGN   8273>>ASSIGN   8278>>IF       8280>>ASSIGN   8281>>ASSIGN
      8282>>ASSIGN   8283>>ASSIGN   8284>>ASSIGN   8285>>ASSIGN   8288>>ASSIGN   8292>>CALL     8292>>CALL
      8292>>CALL     8293>>IF       8296>>ASSIGN   8304>>ASSIGN   8306>>DOWHILE  8310>>CALL     8317>>ASSIGN
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:27   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDT$TRACEOFF File=DDT$TRACE.:E05TSI                           TUE 07/29/97 14:25 Page:28   
              MINI UREF LISTING

DDS$ES_INQ    8254**DCL-ENT
DDT$TRACEOFF      21**PROC

PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:29   
      113        1        /*T***********************************************************/
      114        2        /*T*                                                         */
      115        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      116        4        /*T*                                                         */
      117        5        /*T***********************************************************/
      118        6        /*D*  NAME:  DDT$MODTAG
      119        7              CALL:  CALL DDT$MODTAG(FUNCTION, FLTTAG$)
      120        8              INPUT:  FUNCTION IS PLANT OR REMOVE TAG.
      121        9                     FLTTAG$ IS A POINTER TO THE INSTRUCTION TO BE MODIFIED.
      122       10              DESCRIPTION:  THE INSTRUCTION IS ACCESSED.  THE TAG IS
      123       11                     MODIFIES ACCORDING TO FUNCTION DESIRED.
      124       12                     */
      125       13        DDT$MODTAG: PROC(FUNCTION,FLTTAG$);
      126       14    1   DCL FUNCTION SBIN;
      127       15    1   DCL FLTTAG$ PTR;
      128       16    1   DCL WHAT SBIN;
      129       17    1   DCL I$ PTR;
      130       18        %INCLUDE DD$BASED;
      131     1321        %HOST_INSTR;
      132     1343    1   DCL I$INS UBIN WORD BASED;
      133     1344        %INCLUDE DD_SUBS_C;
      134     1615        %INCLUDE XUH_MACRO_C;
      135     1699        %INCLUDE DD_SD_M;
      136     3035        %S_D;
      137     4353        %INCLUDE DD_ERR_C;
      138     4750    1   DCL DDC$PUTONE ENTRY(2) ALTRET;
      139     4751    1   DCL DDE$ERROR ENTRY;
      140     4752        /**/
      141     4753        /* Get the instruction whose tag is to be modified */
      142     4754    1        WHAT = FLTTAG$->I$INS;
      143     4755    1        I$ = ADDR(WHAT);
      144     4756    2        DO CASE(FUNCTION);
      145     4757    2          CASE( @PLANT_TAGS );             /* Plant tags */
      146     4758    2             I$->HOST_INSTR.TAGG = FAULT_TAG;
      147     4759    2          CASE( @REMOVE_TAGS );            /* Remove tags */
      148     4760    2             I$->HOST_INSTR.TAGG = PL6_TAG; /* Restore tag to original state */
      149     4761    2          CASE(ELSE);
PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:30   
      150     4762    2             S_D.ERROR = E@DELBUG;         /* E@DELBUG - What's this ? */
      151     4763    2             CALL DDE$ERROR;
      152     4764    2          END;
      153     4765    1        CALL DDC$PUTONE(FLTTAG$,WHAT) ALTRET(DELBUG);
      154     4766    1        RETURN;
      155     4767    1   DELBUG:
      156     4768        /* Since trace calls is only valid in the monitor, an altret
      157     4769           from DDC$PUTONE is unexpected...could be delta bug or
      158     4770           mapping problem????*/
      159     4771    1        IF S_D.ERROR = 0
      160     4772    1        THEN S_D.ERROR = E@DELBUG;         /* E@DELBUG */
      161     4773    1        CALL DDE$ERROR;
      162     4774    1        RETURN;
      163     4775    1   END DDT$MODTAG;
      164     4776        %EOD;

PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:31   
--  Include file information  --

   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDT$MODTAG.

   Procedure DDT$MODTAG requires 46 words for executable code.
   Procedure DDT$MODTAG requires 10 words of local(AUTO) storage.

PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:32   

 Object Unit name= DDT$MODTAG                                 File name= DDT$TRACE.:E05TOU
 UTS= JUL 29 '97 14:26:06.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    46     56  DDT$MODTAG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  DDT$MODTAG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 DDE$ERROR
 yes     yes           Std       2 DDC$PUTONE
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL
PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:33   


      113        1        /*T***********************************************************/
      114        2        /*T*                                                         */
      115        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      116        4        /*T*                                                         */
      117        5        /*T***********************************************************/
      118        6        /*D*  NAME:  DDT$MODTAG
      119        7              CALL:  CALL DDT$MODTAG(FUNCTION, FLTTAG$)
      120        8              INPUT:  FUNCTION IS PLANT OR REMOVE TAG.
      121        9                     FLTTAG$ IS A POINTER TO THE INSTRUCTION TO BE MODIFIED.
      122       10              DESCRIPTION:  THE INSTRUCTION IS ACCESSED.  THE TAG IS
      123       11                     MODIFIES ACCORDING TO FUNCTION DESIRED.
      124       12                     */
      125       13        DDT$MODTAG: PROC(FUNCTION,FLTTAG$);

     13  0 000000   000000 700200 xent  DDT$MODTAG   TSX0  ! X66_AUTO_2
         0 000001   000012 000002                    ZERO    10,2

      126       14    1   DCL FUNCTION SBIN;
      127       15    1   DCL FLTTAG$ PTR;
      128       16    1   DCL WHAT SBIN;
      129       17    1   DCL I$ PTR;
      130       18        %INCLUDE DD$BASED;
      131     1321        %HOST_INSTR;
      132     1343    1   DCL I$INS UBIN WORD BASED;
      133     1344        %INCLUDE DD_SUBS_C;
      134     1615        %INCLUDE XUH_MACRO_C;
      135     1699        %INCLUDE DD_SD_M;
      136     3035        %S_D;
      137     4353        %INCLUDE DD_ERR_C;
      138     4750    1   DCL DDC$PUTONE ENTRY(2) ALTRET;
      139     4751    1   DCL DDE$ERROR ENTRY;
      140     4752        /**/
      141     4753        /* Get the instruction whose tag is to be modified */
      142     4754    1        WHAT = FLTTAG$->I$INS;

   4754  0 000002   200004 470500                    LDP0    @FLTTAG$,,AUTO
PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:34   
         0 000003   000000 471500                    LDP1    0,,PR0
         0 000004   100000 235100                    LDA     0,,PR1
         0 000005   200005 755100                    STA     WHAT,,AUTO

      143     4755    1        I$ = ADDR(WHAT);

   4755  0 000006   200005 631500                    EPPR1   WHAT,,AUTO
         0 000007   200006 451500                    STP1    I$,,AUTO

      144     4756    2        DO CASE(FUNCTION);

   4756  0 000010   200003 473500                    LDP3    @FUNCTION,,AUTO
         0 000011   300000 235100                    LDA     0,,PR3
         0 000012   000003 115007                    CMPA    3,DL
         0 000013   000015 602005 0                  TNC     s:4756+5,AL
         0 000014   000026 710000 0                  TRA     s:4762
         0 000015   000026 710000 0                  TRA     s:4762
         0 000016   000023 710000 0                  TRA     s:4760
         0 000017   000020 710000 0                  TRA     s:4758

      145     4757    2          CASE( @PLANT_TAGS );             /* Plant tags */

      146     4758    2             I$->HOST_INSTR.TAGG = FAULT_TAG;

   4758  0 000020   000040 236007                    LDQ     32,DL
         0 000021   100000 752101                    STCQ    0,'01'O,PR1
         0 000022   000034 710000 0                  TRA     s:4765

      147     4759    2          CASE( @REMOVE_TAGS );            /* Remove tags */

      148     4760    2             I$->HOST_INSTR.TAGG = PL6_TAG; /* Restore tag to original state */

   4760  0 000023   000000 236003                    LDQ     0,DU
         0 000024   100000 752101                    STCQ    0,'01'O,PR1
         0 000025   000034 710000 0                  TRA     s:4765

      149     4761    2          CASE(ELSE);
PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:35   

      150     4762    2             S_D.ERROR = E@DELBUG;         /* E@DELBUG - What's this ? */

   4762  0 000026   000766 236007                    LDQ     502,DL
         0 000027   000000 474400 xsym               LDP4    S_D$
         0 000030   400013 756100                    STQ     11,,PR4

      151     4763    2             CALL DDE$ERROR;

   4763  0 000031   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000032   000000 701000 xent               TSX1    DDE$ERROR
         0 000033   000000 011000                    NOP     0

      152     4764    2          END;

      153     4765    1        CALL DDC$PUTONE(FLTTAG$,WHAT) ALTRET(DELBUG);

   4765  0 000034   200005 630500                    EPPR0   WHAT,,AUTO
         0 000035   200011 450500                    STP0    I$+3,,AUTO
         0 000036   200004 236100                    LDQ     @FLTTAG$,,AUTO
         0 000037   200010 756100                    STQ     I$+2,,AUTO
         0 000040   200010 630500                    EPPR0   I$+2,,AUTO
         0 000041   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000042   000000 701000 xent               TSX1    DDC$PUTONE
         0 000043   000045 702000 0                  TSX2    DELBUG

      154     4766    1        RETURN;

   4766  0 000044   000000 702200 xent               TSX2  ! X66_ARET

      155     4767    1   DELBUG:
      156     4768        /* Since trace calls is only valid in the monitor, an altret
      157     4769           from DDC$PUTONE is unexpected...could be delta bug or
      158     4770           mapping problem????*/
      159     4771    1        IF S_D.ERROR = 0

   4771  0 000045   000000 470400 xsym  DELBUG       LDP0    S_D$
PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:36   
         0 000046   000013 235100                    LDA     11,,PR0
         0 000047   000052 601000 0                  TNZ     s:4773

      160     4772    1        THEN S_D.ERROR = E@DELBUG;         /* E@DELBUG */

   4772  0 000050   000766 236007                    LDQ     502,DL
         0 000051   000013 756100                    STQ     11,,PR0

      161     4773    1        CALL DDE$ERROR;

   4773  0 000052   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000053   000000 701000 xent               TSX1    DDE$ERROR
         0 000054   000000 011000                    NOP     0

      162     4774    1        RETURN;

   4774  0 000055   000000 702200 xent               TSX2  ! X66_ARET
      163     4775    1   END DDT$MODTAG;
      164     4776        %EOD;

PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:37   
--  Include file information  --

   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDT$MODTAG.

   Procedure DDT$MODTAG requires 46 words for executable code.
   Procedure DDT$MODTAG requires 10 words of local(AUTO) storage.
PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:38   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:39   
          MINI XREF LISTING

DDC$PUTONE
      4750**DCL-ENT  4765--CALL
DDE$ERROR
      4751**DCL-ENT  4763--CALL     4773--CALL
DELBUG
      4771**LABEL    4765--CALLALT
FLTTAG$
        15**DCL        13--PROC     4754>>ASSIGN   4765<>CALL
FUNCTION
        14**DCL        13--PROC     4756>>DOCASE
HOST_INSTR.TAG.TD
      1338**DCL      1339--REDEF
HOST_INSTR.TAGG
      1335**DCL      1336--REDEF    4758<<ASSIGN   4760<<ASSIGN
HOST_INSTR.Y
      1323**DCL      1324--REDEF    1327--REDEF
I$
        17**DCL      4755<<ASSIGN   4758>>ASSIGN   4760>>ASSIGN
I$INS
      1343**DCL      4754>>ASSIGN
S_D.CURRENT_CHANNEL
      3987**DCL      3989--REDEF
S_D.DEBUGA
      3139**DCL      3141--REDEF
S_D.EIS
      4097**DCL      4126--REDEF
S_D.ERROR
      3068**DCL      4762<<ASSIGN   4771>>IF       4772<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      4030**DCL      4031--REDEF    4045--REDEF
S_D.JDE
      3644**DCL      3645--REDEF
PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:40   
S_D.L$.VALUE
      3197**DCL      3203--REDEF    3211--REDEF    3214--REDEF    3217--REDEF    3220--REDEF
S_D.L$.VALUE.L
      3198**DCL      3199--REDEF    3200--REDEF
S_D.L6_MESSAGE_BUF
      4051**DCL      4053--REDEF
S_D.OUTPUT
      4017**DCL      4019--REDEF
S_D.REMOTE_MSG.FNCC
      4036**DCL      4037--REDEF
S_D.REMOTE_MSG.STXC
      4032**DCL      4033--REDEF
S_D.REMOTE_MSG.SUBFNCC
      4040**DCL      4041--REDEF
S_D.SV
      3096**DCL      3117--REDEF
S_D$
      4348**DCL      3044--IMP-PTR  4762>>ASSIGN   4771>>IF       4772>>ASSIGN
WHAT
        16**DCL      4754<<ASSIGN   4755--ASSIGN   4765<>CALL
PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:41   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDT$MODTAG File=DDT$TRACE.:E05TSI                             TUE 07/29/97 14:26 Page:42   
              MINI UREF LISTING

DDT$MODTAG      13**PROC

PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:43   
      165        1        /*T***********************************************************/
      166        2        /*T*                                                         */
      167        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      168        4        /*T*                                                         */
      169        5        /*T***********************************************************/
      170        6        /*D* NAME:  DDT$XTAGS(FUNCTION);
      171        7             CALL:  CALL DDT$XTAGS(FUNCTION,EDEF$,EDEF_END$,DNAME$);
      172        8             INPUT: FUNCTION IS PLANT OR REMOVE TAG
      173        9             OUPUT: THE EXTERNAL TAGS ARE MODIFIED PER THE FUNCTION
      174       10                    SPECIFIED.
      175       11             DESCRIPTION:  THE ENTDEF TABLE IS SCANNED FOR PRIMARY
      176       12                    ENTDEFS. IF A PREFIX WAS SPECIFIED IN THE TRACE CALLS
      177       13                    COMMAND THEN IT IS COMPARED AGAINST THE ENTDEF NAME.
      178       14                    THE TAG IS MODIFIED PER THE FUNCTION SPECIFIED. */
      179       15                                                /**/
      180       16        DDT$XTAGS: PROC(FUNCTION,EDEF$,EDEF_END$,DNAME$);
      181       17                                                /**/
      182       18    1   DCL FUNCTION SBIN;
      183       19    1   DCL EDEF$ PTR;
      184       20    1   DCL EDEF_END$ PTR;
      185       21    1   DCL DNAME$ PTR;
      186       22    1   DCL TEDEF$ PTR;
      187       23    1   DCL TEDEF_END$ PTR;
      188       24    1   DCL TDNAME$ PTR;
      189       25    1   DCL FLTTAG$ PTR;
      190       26    1   DCL NP$ PTR;
      191       27    1   DCL COMPARE SBIN;
      192       28    1   DCL 1 COMP BASED,
      193       29    1         2 * UBIN HALF UNAL,
      194       30    1         2 TEXT CHAR(COMPARE);
      195       31        %INCLUDE B$OBJECT_C;
      196     3461        %SUB_CST;
      197     3477        %SUB_LINKFLAGS;
      198     3486        %B$EDEF (STCLASS="BASED(TEDEF$)");
      199     3556        %B$DNAME (STCLASS="BASED(NP$)");
      200     3575        %INCLUDE XUH_MACRO_C;
      201     3659        %INCLUDE DD_SD_M;
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:44   
      202     4995        %S_D;
      203     6313    1   DCL UIS$ PTR SYMREF;
      204     6314    1   DCL DDT$MODTAG ENTRY(2);
      205     6315                                                /**/
      206     6316    1        TEDEF$ = EDEF$;
      207     6317    1        IF TEDEF$ = ADDR( NIL ) THEN RETURN;
      208     6318    1        TEDEF_END$ = EDEF_END$;
      209     6319    1        TDNAME$ = DNAME$;
      210     6320    1        COMPARE = S_D.TR$INFO.PSIZ;
      211     6321    2        DO WHILE ( TEDEF$ <= TEDEF_END$ );
      212     6322                                                /* Insure standard calling sequence */
      213     6323    2             IF ( B$EDEF.CST = %STD#
      214     6324    2               OR B$EDEF.CST = %ASYNC#
      215     6325    2               OR B$EDEF.CST = %FUNC#
      216     6326    2               OR B$EDEF.CST = %XSTD#
      217     6327    2               OR B$EDEF.CST = %XASYNC#
      218     6328    2               OR B$EDEF.CST = %XFUNC# )
      219     6329    2               AND ( B$EDEF.LFLAGS.SOURCE = %SOURCE_OBJECT#
      220     6330    2               OR B$EDEF.LFLAGS.SOURCE = %SOURCE_ULIB# )
      221     6331    3             THEN DO;
      222     6332    3                  IF S_D.TR$INFO.P
      223     6333    4                  THEN DO;
      224     6334    4                       NP$ = PINCRW(TDNAME$,B$EDEF.NPOINTER);
      225     6335    4                       IF S_D.TR$INFO.PTXT ~= NP$->COMP.TEXT THEN GOTO NOT_THIS_ONE;
      226     6336    4                     END;
      227     6337    3                  FLTTAG$ = PINCRW(UIS$,B$EDEF.OU.OFFSET);
      228     6338    3                  CALL DDT$MODTAG(FUNCTION,FLTTAG$);
      229     6339    3                END;
      230     6340    2   NOT_THIS_ONE:
      231     6341    2             TEDEF$ = PINCRW(TEDEF$,SIZEW(B$EDEF));
      232     6342    2           END;
      233     6343    1        RETURN;
      234     6344    1   END DDT$XTAGS;
      235     6345        %EOD;

PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:45   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDT$XTAGS.

   Procedure DDT$XTAGS requires 75 words for executable code.
   Procedure DDT$XTAGS requires 16 words of local(AUTO) storage.

PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:46   

 Object Unit name= DDT$XTAGS                                  File name= DDT$TRACE.:E05TOU
 UTS= JUL 29 '97 14:26:21.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    75    113  DDT$XTAGS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        4  DDT$XTAGS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 DDT$MODTAG
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  UIS$                                  B_VECTNIL
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:47   


      165        1        /*T***********************************************************/
      166        2        /*T*                                                         */
      167        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      168        4        /*T*                                                         */
      169        5        /*T***********************************************************/
      170        6        /*D* NAME:  DDT$XTAGS(FUNCTION);
      171        7             CALL:  CALL DDT$XTAGS(FUNCTION,EDEF$,EDEF_END$,DNAME$);
      172        8             INPUT: FUNCTION IS PLANT OR REMOVE TAG
      173        9             OUPUT: THE EXTERNAL TAGS ARE MODIFIED PER THE FUNCTION
      174       10                    SPECIFIED.
      175       11             DESCRIPTION:  THE ENTDEF TABLE IS SCANNED FOR PRIMARY
      176       12                    ENTDEFS. IF A PREFIX WAS SPECIFIED IN THE TRACE CALLS
      177       13                    COMMAND THEN IT IS COMPARED AGAINST THE ENTDEF NAME.
      178       14                    THE TAG IS MODIFIED PER THE FUNCTION SPECIFIED. */
      179       15                                                /**/
      180       16        DDT$XTAGS: PROC(FUNCTION,EDEF$,EDEF_END$,DNAME$);

     16  0 000000   000000 700200 xent  DDT$XTAGS    TSX0  ! X66_AUTO_4
         0 000001   000020 000004                    ZERO    16,4

      181       17                                                /**/
      182       18    1   DCL FUNCTION SBIN;
      183       19    1   DCL EDEF$ PTR;
      184       20    1   DCL EDEF_END$ PTR;
      185       21    1   DCL DNAME$ PTR;
      186       22    1   DCL TEDEF$ PTR;
      187       23    1   DCL TEDEF_END$ PTR;
      188       24    1   DCL TDNAME$ PTR;
      189       25    1   DCL FLTTAG$ PTR;
      190       26    1   DCL NP$ PTR;
      191       27    1   DCL COMPARE SBIN;
      192       28    1   DCL 1 COMP BASED,
      193       29    1         2 * UBIN HALF UNAL,
      194       30    1         2 TEXT CHAR(COMPARE);
      195       31        %INCLUDE B$OBJECT_C;
      196     3461        %SUB_CST;
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:48   
      197     3477        %SUB_LINKFLAGS;
      198     3486        %B$EDEF (STCLASS="BASED(TEDEF$)");
      199     3556        %B$DNAME (STCLASS="BASED(NP$)");
      200     3575        %INCLUDE XUH_MACRO_C;
      201     3659        %INCLUDE DD_SD_M;
      202     4995        %S_D;
      203     6313    1   DCL UIS$ PTR SYMREF;
      204     6314    1   DCL DDT$MODTAG ENTRY(2);
      205     6315                                                /**/
      206     6316    1        TEDEF$ = EDEF$;

   6316  0 000002   200004 470500                    LDP0    @EDEF$,,AUTO
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   200007 756100                    STQ     TEDEF$,,AUTO

      207     6317    1        IF TEDEF$ = ADDR( NIL ) THEN RETURN;

   6317  0 000005   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000006   000010 601000 0                  TNZ     s:6318

   6317  0 000007   000000 702200 xent               TSX2  ! X66_ARET

      208     6318    1        TEDEF_END$ = EDEF_END$;

   6318  0 000010   200005 471500                    LDP1    @EDEF_END$,,AUTO
         0 000011   100000 236100                    LDQ     0,,PR1
         0 000012   200010 756100                    STQ     TEDEF_END$,,AUTO

      209     6319    1        TDNAME$ = DNAME$;

   6319  0 000013   200006 473500                    LDP3    @DNAME$,,AUTO
         0 000014   300000 236100                    LDQ     0,,PR3
         0 000015   200011 756100                    STQ     TDNAME$,,AUTO

      210     6320    1        COMPARE = S_D.TR$INFO.PSIZ;

   6320  0 000016   000000 474400 xsym               LDP4    S_D$
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:49   
         0 000017   404635 235100                    LDA     2461,,PR4
         0 000020   200014 755100                    STA     COMPARE,,AUTO

      211     6321    2        DO WHILE ( TEDEF$ <= TEDEF_END$ );

   6321  0 000021   200010 236100                    LDQ     TEDEF_END$,,AUTO
         0 000022   200007 116100                    CMPQ    TEDEF$,,AUTO
         0 000023   000112 602000 0                  TNC     s:6343

      212     6322                                                /* Insure standard calling sequence */
      213     6323    2             IF ( B$EDEF.CST = %STD#

   6323  0 000024   200007 470500                    LDP0    TEDEF$,,AUTO
         0 000025   000001 236100                    LDQ     1,,PR0
         0 000026   074000 316007                    CANQ    30720,DL
         0 000027   000044 600000 0                  TZE     s:6323+16
         0 000030   000001 236100                    LDQ     1,,PR0
         0 000031   074000 376007                    ANQ     30720,DL
         0 000032   014000 116007                    CMPQ    6144,DL
         0 000033   000044 600000 0                  TZE     s:6323+16
         0 000034   020000 116007                    CMPQ    8192,DL
         0 000035   000044 600000 0                  TZE     s:6323+16
         0 000036   024000 116007                    CMPQ    10240,DL
         0 000037   000044 600000 0                  TZE     s:6323+16
         0 000040   040000 116007                    CMPQ    16384,DL
         0 000041   000044 600000 0                  TZE     s:6323+16
         0 000042   044000 116007                    CMPQ    18432,DL
         0 000043   000104 601000 0                  TNZ     NOT_THIS_ONE
         0 000044   000000 236100                    LDQ     0,,PR0
         0 000045   700000 316003                    CANQ    -32768,DU
         0 000046   000053 600000 0                  TZE     s:6332
         0 000047   000000 236100                    LDQ     0,,PR0
         0 000050   700000 376003                    ANQ     -32768,DU
         0 000051   300000 116003                    CMPQ    98304,DU
         0 000052   000104 601000 0                  TNZ     NOT_THIS_ONE

      214     6324    2               OR B$EDEF.CST = %ASYNC#
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:50   
      215     6325    2               OR B$EDEF.CST = %FUNC#
      216     6326    2               OR B$EDEF.CST = %XSTD#
      217     6327    2               OR B$EDEF.CST = %XASYNC#
      218     6328    2               OR B$EDEF.CST = %XFUNC# )
      219     6329    2               AND ( B$EDEF.LFLAGS.SOURCE = %SOURCE_OBJECT#
      220     6330    2               OR B$EDEF.LFLAGS.SOURCE = %SOURCE_ULIB# )
      221     6331    3             THEN DO;

      222     6332    3                  IF S_D.TR$INFO.P

   6332  0 000053   000000 471400 xsym               LDP1    S_D$
         0 000054   104633 234100                    SZN     2459,,PR1
         0 000055   000070 605000 0                  TPL     s:6337

      223     6333    4                  THEN DO;

      224     6334    4                       NP$ = PINCRW(TDNAME$,B$EDEF.NPOINTER);

   6334  0 000056   000001 220100                    LDX0    1,,PR0
         0 000057   000000 636010                    EAQ     0,X0
         0 000060   200011 036100                    ADLQ    TDNAME$,,AUTO
         0 000061   200013 756100                    STQ     NP$,,AUTO

      225     6335    4                       IF S_D.TR$INFO.PTXT ~= NP$->COMP.TEXT THEN GOTO NOT_THIS_ONE;

   6335  0 000062   200013 473500                    LDP3    NP$,,AUTO
         0 000063   200014 721100                    LXL1    COMPARE,,AUTO
         0 000064   040140 106500                    CMPC    fill='040'O
         0 000065   104636 000030                    ADSC9   2462,,PR1                cn=0,n=24
         0 000066   300000 400011                    ADSC9   0,,PR3                   cn=2,n=*X1
         0 000067   000104 601000 0                  TNZ     NOT_THIS_ONE

      226     6336    4                     END;

      227     6337    3                  FLTTAG$ = PINCRW(UIS$,B$EDEF.OU.OFFSET);

   6337  0 000070   000000 720100                    LXL0    0,,PR0
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:51   
         0 000071   000000 636010                    EAQ     0,X0
         0 000072   000000 036000 xsym               ADLQ    UIS$
         0 000073   200012 756100                    STQ     FLTTAG$,,AUTO

      228     6338    3                  CALL DDT$MODTAG(FUNCTION,FLTTAG$);

   6338  0 000074   200012 633500                    EPPR3   FLTTAG$,,AUTO
         0 000075   200017 453500                    STP3    COMPARE+3,,AUTO
         0 000076   200003 236100                    LDQ     @FUNCTION,,AUTO
         0 000077   200016 756100                    STQ     COMPARE+2,,AUTO
         0 000100   200016 630500                    EPPR0   COMPARE+2,,AUTO
         0 000101   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000102   000000 701000 xent               TSX1    DDT$MODTAG
         0 000103   000000 011000                    NOP     0

      229     6339    3                END;

      230     6340    2   NOT_THIS_ONE:
      231     6341    2             TEDEF$ = PINCRW(TEDEF$,SIZEW(B$EDEF));

   6341  0 000104   200007 236100       NOT_THIS_ONE LDQ     TEDEF$,,AUTO
         0 000105   000002 036003                    ADLQ    2,DU
         0 000106   200007 756100                    STQ     TEDEF$,,AUTO

      232     6342    2           END;

   6342  0 000107   200010 116100                    CMPQ    TEDEF_END$,,AUTO
         0 000110   000024 602000 0                  TNC     s:6323
         0 000111   000024 600000 0                  TZE     s:6323

      233     6343    1        RETURN;

   6343  0 000112   000000 702200 xent               TSX2  ! X66_ARET
      234     6344    1   END DDT$XTAGS;
      235     6345        %EOD;

PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:52   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDT$XTAGS.

   Procedure DDT$XTAGS requires 75 words for executable code.
   Procedure DDT$XTAGS requires 16 words of local(AUTO) storage.
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:53   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:54   
          MINI XREF LISTING

B$DNAME.COUNT
      3565**DCL      3572--IMP-SIZ
B$EDEF
      3487**DCL      6341--ASSIGN
B$EDEF.CST
      3533**DCL      6323>>IF       6323>>IF       6323>>IF       6323>>IF       6323>>IF       6323>>IF
B$EDEF.LFLAGS.SOURCE
      3492**DCL      6323>>IF       6323>>IF
B$EDEF.NPOINTER
      3512**DCL      6334>>ASSIGN
B$EDEF.OU
      3504**DCL      3510--REDEF
B$EDEF.OU.OFFSET
      3508**DCL      6337>>ASSIGN
COMP.TEXT
        30**DCL      6335>>IF
COMPARE
        27**DCL        30--IMP-SIZ  6320<<ASSIGN   6335>>IF
DDT$MODTAG
      6314**DCL-ENT  6338--CALL
DNAME$
        21**DCL        16--PROC     6319>>ASSIGN
EDEF$
        19**DCL        16--PROC     6316>>ASSIGN
EDEF_END$
        20**DCL        16--PROC     6318>>ASSIGN
FLTTAG$
        25**DCL      6337<<ASSIGN   6338<>CALL
FUNCTION
        18**DCL        16--PROC     6338<>CALL
NOT_THIS_ONE
      6341**LABEL    6335--GOTO
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:55   
NP$
        26**DCL      3564--IMP-PTR  6334<<ASSIGN   6335>>IF
S_D.CURRENT_CHANNEL
      5947**DCL      5949--REDEF
S_D.DEBUGA
      5099**DCL      5101--REDEF
S_D.EIS
      6057**DCL      6086--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      5990**DCL      5991--REDEF    6005--REDEF
S_D.JDE
      5604**DCL      5605--REDEF
S_D.L$.VALUE
      5157**DCL      5163--REDEF    5171--REDEF    5174--REDEF    5177--REDEF    5180--REDEF
S_D.L$.VALUE.L
      5158**DCL      5159--REDEF    5160--REDEF
S_D.L6_MESSAGE_BUF
      6011**DCL      6013--REDEF
S_D.OUTPUT
      5977**DCL      5979--REDEF
S_D.REMOTE_MSG.FNCC
      5996**DCL      5997--REDEF
S_D.REMOTE_MSG.STXC
      5992**DCL      5993--REDEF
S_D.REMOTE_MSG.SUBFNCC
      6000**DCL      6001--REDEF
S_D.SV
      5056**DCL      5077--REDEF
S_D.TR$INFO.P
      5489**DCL      6332>>IF
S_D.TR$INFO.PSIZ
      5493**DCL      6320>>ASSIGN
S_D.TR$INFO.PTXT
      5495**DCL      6335>>IF
S_D$
      6308**DCL      5004--IMP-PTR  6320>>ASSIGN   6332>>IF       6335>>IF
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:56   
TDNAME$
        24**DCL      6319<<ASSIGN   6334>>ASSIGN
TEDEF$
        22**DCL      3487--IMP-PTR  6316<<ASSIGN   6317>>IF       6321>>DOWHILE  6323>>IF       6323>>IF
      6323>>IF       6323>>IF       6323>>IF       6323>>IF       6323>>IF       6323>>IF       6334>>ASSIGN
      6337>>ASSIGN   6341<<ASSIGN   6341>>ASSIGN
TEDEF_END$
        23**DCL      6318<<ASSIGN   6321>>DOWHILE
UIS$
      6313**DCL      6337>>ASSIGN
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:57   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=DDT$XTAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:58   
              MINI UREF LISTING

DDT$XTAGS      16**PROC

PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:59   
      236        1        /*T***********************************************************/
      237        2        /*T*                                                         */
      238        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      239        4        /*T*                                                         */
      240        5        /*T***********************************************************/
      241        6        /*D*  NAME:  DDT$ITAGS
      242        7              CALL:  CALL DDT$ITAGS(FUNCTION) ALTRET(NO_SCHEMA)
      243        8              INPUT: FUNCTION SPECIFIES PLANT OR RESTORE
      244        9                     PRIM$ IS A POINTER TO THE PRIMARY ENTDEF OF THE DESIRED MODDULE.
      245       10              OUTPUT: THE FAULT TAGS ARE PLANTED OR REMOVED IN THE SPECIFIED
      246       11                     MODULE (PROVIDING THERE IS A SCHEMA).  ALTERNATE RETURN
      247       12                     IS TAKEN IF THERE IS NO SCHEMA.
      248       13              */
      249       14        DDT$ITAGS: PROC(FUNCTION) ALTRET;
      250       15    1   DCL FUNCTION SBIN;
      251       16    1   DCL PRIM$ PTR;
      252       17    1   DCL IE$ PTR;
      253       18    1   DCL OU$ PTR;
      254       19    1   DCL FLTTAG$ PTR;
      255       20    1   DCL NP$ PTR;
      256       21    1   DCL COMPARE SBIN;
      257       22    1   DCL IX SBIN;
      258       23    1   DCL IEND SBIN;
      259       24        /*D* IX & IEND must be SBIN */
      260       25    1   DCL TEMP UBIN;
      261       26    1   DCL 1 COMP BASED,
      262       27    1         2 * UBIN HALF UNAL,
      263       28    1         2 TEXT CHAR(COMPARE);
      264       29        %INCLUDE B$OBJECT_C;
      265     3459        %INCLUDE DD_ERR_C;
      266     3856        %B$INTNTRY (STCLASS="BASED(IE$)");
      267     3914        %B$DNAME (STCLASS="BASED(NP$)");
      268     3933        %B$LBNTRY1;
      269     3960        %B$EDEF;
      270     4030        %INCLUDE XUH_MACRO_C;
      271     4114        %INCLUDE DD_SD_M;
      272     5450        %S_D;
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:60   
      273     6768    1   DCL UIS$ PTR SYMREF;
      274     6769    1   DCL DDF$IE_# ENTRY(2) ALTRET;
      275     6770    1   DCL DDF$DBG_# ENTRY(2) ALTRET;
      276     6771    1   DCL DDT$MODTAG ENTRY(2);
      277     6772    1   DCL DDE$ERROR ENTRY(0);
      278     6773        %INCLUDE DD_SUBS_C;
      279     7044        /**/
      280     7045    1        IF ( NOT S_D.QSCH.OK ) OR ( S_D.DBG$ = ADDR( NIL ) ) OR ( S_D.IE$ = ADDR( NIL )
              7045                 )
      281     7046    1        THEN GOTO NO_SCHEMA;
      282     7047    1        IF ( FUNCTION = @PLANT_TAGS ) AND ( NOT S_D.SCHEMA )
      283     7048    1        THEN GOTO NO_SCHEMA;
      284     7049    1        COMPARE = S_D.TR$INFO.PSIZ;
      285     7050    1        IEND = ( S_D.LB1$ -> B$LBNTRY1.INTRYSIZ / SIZEW( B$INTNTRY ) ) - 1;
      286     7051    2        DO IX = 0 TO IEND;
      287     7052    2             CALL DDF$IE_#( IX, IE$ ) ALTRET( DELBUG );
      288     7053    2             IF S_D.TR$INFO.P              /* Prefixed call ? */
      289     7054    3             THEN DO;
      290     7055    3                  TEMP = B$INTNTRY.NPOINTER;
      291     7056    3                  CALL DDF$DBG_#( TEMP, NP$ ) ALTRET( DELBUG );
      292     7057    3                  IF S_D.TR$INFO.PTXT ~= NP$->COMP.TEXT THEN GOTO NEXT;
      293     7058    3                END;
      294     7059    2             FLTTAG$ = PINCRW(UIS$,B$INTNTRY.OU.OFFSET);
      295     7060    2             CALL DDT$MODTAG(FUNCTION,FLTTAG$);
      296     7061    2   NEXT:
      297     7062    2           END;
      298     7063    2        DO CASE(FUNCTION);
      299     7064    2          CASE( @REMOVE_TAGS );            /* Remove tags */
      300     7065    2             PINCRW( S_D.EDEF$, S_D.QSCH.PEDEF# * SIZEW( B$EDEF ) ) -> B$EDEF.LFLAGS.
              7065                      FAULTAGS = '0'B;
      301     7066    2          CASE( @PLANT_TAGS );             /* Plant tags */
      302     7067    2             PINCRW( S_D.EDEF$, S_D.QSCH.PEDEF# * SIZEW( B$EDEF ) ) -> B$EDEF.LFLAGS.
              7067                      FAULTAGS = '1'B;
      303     7068    2          END;
      304     7069    1        RETURN;
      305     7070    1   NO_SCHEMA:
      306     7071    1        ALTRETURN;
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:61   
      307     7072    1   DELBUG:
      308     7073    1        S_D.ERROR = E@DELBUG;              /* E@DELBUG */
      309     7074    1        CALL DDE$ERROR;
      310     7075    1        ALTRETURN;
      311     7076    1   END DDT$ITAGS;

PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:62   
--  Include file information  --

   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDT$ITAGS.

   Procedure DDT$ITAGS requires 106 words for executable code.
   Procedure DDT$ITAGS requires 16 words of local(AUTO) storage.

    No errors detected in file DDT$TRACE.:E05TSI    .

PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:63   

 Object Unit name= DDT$ITAGS                                  File name= DDT$TRACE.:E05TOU
 UTS= JUL 29 '97 14:26:38.80 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   106    152  DDT$ITAGS
    1  RoData even  none     1      1  DDT$ITAGS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  DDT$ITAGS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDF$IE_#
 yes     yes           Std       2 DDF$DBG_#
         yes           Std       2 DDT$MODTAG
         yes           Std       0 DDE$ERROR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:64   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  UIS$                                  B_VECTNIL
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:65   


      236        1        /*T***********************************************************/
      237        2        /*T*                                                         */
      238        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      239        4        /*T*                                                         */
      240        5        /*T***********************************************************/
      241        6        /*D*  NAME:  DDT$ITAGS
      242        7              CALL:  CALL DDT$ITAGS(FUNCTION) ALTRET(NO_SCHEMA)
      243        8              INPUT: FUNCTION SPECIFIES PLANT OR RESTORE
      244        9                     PRIM$ IS A POINTER TO THE PRIMARY ENTDEF OF THE DESIRED MODDULE.
      245       10              OUTPUT: THE FAULT TAGS ARE PLANTED OR REMOVED IN THE SPECIFIED
      246       11                     MODULE (PROVIDING THERE IS A SCHEMA).  ALTERNATE RETURN
      247       12                     IS TAKEN IF THERE IS NO SCHEMA.
      248       13              */
      249       14        DDT$ITAGS: PROC(FUNCTION) ALTRET;

     14  0 000000   000000 700200 xent  DDT$ITAGS    TSX0  ! X66_AUTO_1
         0 000001   000020 000001                    ZERO    16,1

      250       15    1   DCL FUNCTION SBIN;
      251       16    1   DCL PRIM$ PTR;
      252       17    1   DCL IE$ PTR;
      253       18    1   DCL OU$ PTR;
      254       19    1   DCL FLTTAG$ PTR;
      255       20    1   DCL NP$ PTR;
      256       21    1   DCL COMPARE SBIN;
      257       22    1   DCL IX SBIN;
      258       23    1   DCL IEND SBIN;
      259       24        /*D* IX & IEND must be SBIN */
      260       25    1   DCL TEMP UBIN;
      261       26    1   DCL 1 COMP BASED,
      262       27    1         2 * UBIN HALF UNAL,
      263       28    1         2 TEXT CHAR(COMPARE);
      264       29        %INCLUDE B$OBJECT_C;
      265     3459        %INCLUDE DD_ERR_C;
      266     3856        %B$INTNTRY (STCLASS="BASED(IE$)");
      267     3914        %B$DNAME (STCLASS="BASED(NP$)");
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:66   
      268     3933        %B$LBNTRY1;
      269     3960        %B$EDEF;
      270     4030        %INCLUDE XUH_MACRO_C;
      271     4114        %INCLUDE DD_SD_M;
      272     5450        %S_D;
      273     6768    1   DCL UIS$ PTR SYMREF;
      274     6769    1   DCL DDF$IE_# ENTRY(2) ALTRET;
      275     6770    1   DCL DDF$DBG_# ENTRY(2) ALTRET;
      276     6771    1   DCL DDT$MODTAG ENTRY(2);
      277     6772    1   DCL DDE$ERROR ENTRY(0);
      278     6773        %INCLUDE DD_SUBS_C;
      279     7044        /**/
      280     7045    1       IF ( NOT S_D.QSCH.OK ) OR ( S_D.DBG$ = ADDR( NIL ) ) OR ( S_D.IE$ = ADDR( NIL )
              7045                 )

   7045  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   000733 234100                    SZN     475,,PR0
         0 000004   000142 605000 0                  TPL     NO_SCHEMA
         0 000005   001005 236100                    LDQ     517,,PR0
         0 000006   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000007   000142 600000 0                  TZE     NO_SCHEMA
         0 000010   001013 236100                    LDQ     523,,PR0
         0 000011   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000012   000142 600000 0                  TZE     NO_SCHEMA

      281     7046    1        THEN GOTO NO_SCHEMA;
      282     7047    1        IF ( FUNCTION = @PLANT_TAGS ) AND ( NOT S_D.SCHEMA )

   7047  0 000013   200003 471500                    LDP1    @FUNCTION,,AUTO
         0 000014   100000 235100                    LDA     0,,PR1
         0 000015   000002 115007                    CMPA    2,DL
         0 000016   000021 601000 0                  TNZ     s:7049
         0 000017   000052 234100                    SZN     42,,PR0
         0 000020   000142 605000 0                  TPL     NO_SCHEMA

      283     7048    1        THEN GOTO NO_SCHEMA;
      284     7049    1        COMPARE = S_D.TR$INFO.PSIZ;
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:67   

   7049  0 000021   004635 235100                    LDA     2461,,PR0
         0 000022   200011 755100                    STA     COMPARE,,AUTO

      285     7050    1        IEND = ( S_D.LB1$ -> B$LBNTRY1.INTRYSIZ / SIZEW( B$INTNTRY ) ) - 1;

   7050  0 000023   001036 473500                    LDP3    542,,PR0
         0 000024   300003 236100                    LDQ     3,,PR3
         0 000025   000022 772000                    QRL     18
         0 000026   000001 772000                    QRL     1
         0 000027   000001 136007                    SBLQ    1,DL
         0 000030   200013 756100                    STQ     IEND,,AUTO

      286     7051    2        DO IX = 0 TO IEND;

   7051  0 000031   200012 450100                    STZ     IX,,AUTO
         0 000032   000107 710000 0                  TRA     NEXT+1

      287     7052    2             CALL DDF$IE_#( IX, IE$ ) ALTRET( DELBUG );

   7052  0 000033   200005 630500                    EPPR0   IE$,,AUTO
         0 000034   200017 450500                    STP0    TEMP+3,,AUTO
         0 000035   200012 631500                    EPPR1   IX,,AUTO
         0 000036   200016 451500                    STP1    TEMP+2,,AUTO
         0 000037   200016 630500                    EPPR0   TEMP+2,,AUTO
         0 000040   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000041   000000 701000 xent               TSX1    DDF$IE_#
         0 000042   000143 702000 0                  TSX2    DELBUG

      288     7053    2             IF S_D.TR$INFO.P              /* Prefixed call ? */

   7053  0 000043   000000 470400 xsym               LDP0    S_D$
         0 000044   004633 234100                    SZN     2459,,PR0
         0 000045   000071 605000 0                  TPL     s:7059

      289     7054    3             THEN DO;

PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:68   
      290     7055    3                  TEMP = B$INTNTRY.NPOINTER;

   7055  0 000046   200005 471500                    LDP1    IE$,,AUTO
         0 000047   100001 236100                    LDQ     1,,PR1
         0 000050   000022 732000                    QRS     18
         0 000051   200014 756100                    STQ     TEMP,,AUTO

      291     7056    3                  CALL DDF$DBG_#( TEMP, NP$ ) ALTRET( DELBUG );

   7056  0 000052   200010 633500                    EPPR3   NP$,,AUTO
         0 000053   200017 453500                    STP3    TEMP+3,,AUTO
         0 000054   200014 634500                    EPPR4   TEMP,,AUTO
         0 000055   200016 454500                    STP4    TEMP+2,,AUTO
         0 000056   200016 630500                    EPPR0   TEMP+2,,AUTO
         0 000057   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000060   000000 701000 xent               TSX1    DDF$DBG_#
         0 000061   000143 702000 0                  TSX2    DELBUG

      292     7057    3                  IF S_D.TR$INFO.PTXT ~= NP$->COMP.TEXT THEN GOTO NEXT;

   7057  0 000062   000000 470400 xsym               LDP0    S_D$
         0 000063   200010 471500                    LDP1    NP$,,AUTO
         0 000064   200011 720100                    LXL0    COMPARE,,AUTO
         0 000065   040140 106500                    CMPC    fill='040'O
         0 000066   004636 000030                    ADSC9   2462,,PR0                cn=0,n=24
         0 000067   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         0 000070   000106 601000 0                  TNZ     NEXT

      293     7058    3                END;

      294     7059    2             FLTTAG$ = PINCRW(UIS$,B$INTNTRY.OU.OFFSET);

   7059  0 000071   200005 471500                    LDP1    IE$,,AUTO
         0 000072   100000 720100                    LXL0    0,,PR1
         0 000073   000000 636010                    EAQ     0,X0
         0 000074   000000 036000 xsym               ADLQ    UIS$
         0 000075   200007 756100                    STQ     FLTTAG$,,AUTO
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:69   

      295     7060    2             CALL DDT$MODTAG(FUNCTION,FLTTAG$);

   7060  0 000076   200007 633500                    EPPR3   FLTTAG$,,AUTO
         0 000077   200017 453500                    STP3    TEMP+3,,AUTO
         0 000100   200003 236100                    LDQ     @FUNCTION,,AUTO
         0 000101   200016 756100                    STQ     TEMP+2,,AUTO
         0 000102   200016 630500                    EPPR0   TEMP+2,,AUTO
         0 000103   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000104   000000 701000 xent               TSX1    DDT$MODTAG
         0 000105   000000 011000                    NOP     0

      296     7061    2   NEXT:
      297     7062    2           END;

   7062  0 000106   200012 054100       NEXT         AOS     IX,,AUTO
         0 000107   200012 236100                    LDQ     IX,,AUTO
         0 000110   200013 116100                    CMPQ    IEND,,AUTO
         0 000111   000033 604400 0                  TMOZ    s:7052

      298     7063    2        DO CASE(FUNCTION);

   7063  0 000112   200003 470500                    LDP0    @FUNCTION,,AUTO
         0 000113   000000 235100                    LDA     0,,PR0
         0 000114   000003 115007                    CMPA    3,DL
         0 000115   000117 602005 0                  TNC     s:7063+5,AL
         0 000116   000141 710000 0                  TRA     s:7069
         0 000117   000141 710000 0                  TRA     s:7069
         0 000120   000122 710000 0                  TRA     s:7065
         0 000121   000132 710000 0                  TRA     s:7067

      299     7064    2          CASE( @REMOVE_TAGS );            /* Remove tags */

      300     7065    2             PINCRW( S_D.EDEF$, S_D.QSCH.PEDEF# * SIZEW( B$EDEF ) ) -> B$EDEF.LFLAGS.
              7065                      FAULTAGS = '0'B;

   7065  0 000122   000000 471400 xsym               LDP1    S_D$
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:70   
         0 000123   100734 720100                    LXL0    476,,PR1
         0 000124   101042 473500                    LDP3    546,,PR1
         0 000125   000000 635010                    EAA     0,X0
         0 000126   000021 771000                    ARL     17
         0 000127   000000 236000 1                  LDQ     0
         0 000130   300000 356105                    ANSQ    0,AL,PR3
         0 000131   000141 710000 0                  TRA     s:7069

      301     7066    2          CASE( @PLANT_TAGS );             /* Plant tags */

      302     7067    2             PINCRW( S_D.EDEF$, S_D.QSCH.PEDEF# * SIZEW( B$EDEF ) ) -> B$EDEF.LFLAGS.
              7067                      FAULTAGS = '1'B;

   7067  0 000132   000000 471400 xsym               LDP1    S_D$
         0 000133   100734 720100                    LXL0    476,,PR1
         0 000134   101042 473500                    LDP3    546,,PR1
         0 000135   000000 635010                    EAA     0,X0
         0 000136   000021 771000                    ARL     17
         0 000137   001000 236003                    LDQ     512,DU
         0 000140   300000 256105                    ORSQ    0,AL,PR3

      303     7068    2          END;

      304     7069    1        RETURN;

   7069  0 000141   000000 702200 xent               TSX2  ! X66_ARET

      305     7070    1   NO_SCHEMA:
      306     7071    1        ALTRETURN;

   7071  0 000142   000000 702200 xent  NO_SCHEMA    TSX2  ! X66_AALT

      307     7072    1   DELBUG:
      308     7073    1        S_D.ERROR = E@DELBUG;              /* E@DELBUG */

   7073  0 000143   000766 235007       DELBUG       LDA     502,DL
         0 000144   000000 470400 xsym               LDP0    S_D$
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:71   
         0 000145   000013 755100                    STA     11,,PR0

      309     7074    1        CALL DDE$ERROR;

   7074  0 000146   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000147   000000 701000 xent               TSX1    DDE$ERROR
         0 000150   000000 011000                    NOP     0

      310     7075    1        ALTRETURN;

   7075  0 000151   000000 702200 xent               TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
   1     000   776777 777777                                                    ....
      311     7076    1   END DDT$ITAGS;

PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:72   
--  Include file information  --

   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDT$ITAGS.

   Procedure DDT$ITAGS requires 106 words for executable code.
   Procedure DDT$ITAGS requires 16 words of local(AUTO) storage.

    No errors detected in file DDT$TRACE.:E05TSI    .
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:73   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:74   
          MINI XREF LISTING

B$DNAME.COUNT
      3923**DCL      3930--IMP-SIZ
B$EDEF
      3961**DCL      7065--ASSIGN   7067--ASSIGN
B$EDEF.LFLAGS.FAULTAGS
      3976**DCL      7065<<ASSIGN   7067<<ASSIGN
B$EDEF.OU
      3978**DCL      3984--REDEF
B$INTNTRY
      3857**DCL      7050--ASSIGN
B$INTNTRY.NPOINTER
      3871**DCL      7055>>ASSIGN
B$INTNTRY.OU
      3861**DCL      3868--REDEF
B$INTNTRY.OU.OFFSET
      3865**DCL      7059>>ASSIGN
B$LBNTRY1.INTRYSIZ
      3953**DCL      7050>>ASSIGN
COMP.TEXT
        28**DCL      7057>>IF
COMPARE
        21**DCL        28--IMP-SIZ  7049<<ASSIGN   7057>>IF
DDE$ERROR
      6772**DCL-ENT  7074--CALL
DDF$DBG_#
      6770**DCL-ENT  7056--CALL
DDF$IE_#
      6769**DCL-ENT  7052--CALL
DDT$MODTAG
      6771**DCL-ENT  7060--CALL
DELBUG
      7073**LABEL    7052--CALLALT  7056--CALLALT
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:75   
FLTTAG$
        19**DCL      7059<<ASSIGN   7060<>CALL
FUNCTION
        15**DCL        14--PROC     7047>>IF       7060<>CALL     7063>>DOCASE
IE$
        17**DCL      3857--IMP-PTR  7052<>CALL     7055>>ASSIGN   7059>>ASSIGN
IEND
        23**DCL      7050<<ASSIGN   7051>>DOINDEX
IX
        22**DCL      7051<<DOINDEX  7052<>CALL
NEXT
      7062**LABEL    7057--GOTO
NO_SCHEMA
      7071**LABEL    7046--GOTO     7048--GOTO
NP$
        20**DCL      3922--IMP-PTR  7056<>CALL     7057>>IF
S_D.CURRENT_CHANNEL
      6402**DCL      6404--REDEF
S_D.DBG$
      5852**DCL      7045>>IF
S_D.DEBUGA
      5554**DCL      5556--REDEF
S_D.EDEF$
      5898**DCL      7065>>ASSIGN   7067>>ASSIGN
S_D.EIS
      6512**DCL      6541--REDEF
S_D.ERROR
      5483**DCL      7073<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      6445**DCL      6446--REDEF    6460--REDEF
S_D.IE$
      5864**DCL      7045>>IF
S_D.JDE
      6059**DCL      6060--REDEF
S_D.L$.VALUE
      5612**DCL      5618--REDEF    5626--REDEF    5629--REDEF    5632--REDEF    5635--REDEF
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:76   
S_D.L$.VALUE.L
      5613**DCL      5614--REDEF    5615--REDEF
S_D.L6_MESSAGE_BUF
      6466**DCL      6468--REDEF
S_D.LB1$
      5890**DCL      7050>>ASSIGN
S_D.OUTPUT
      6432**DCL      6434--REDEF
S_D.QSCH.OK
      5758**DCL      7045>>IF
S_D.QSCH.PEDEF#
      5760**DCL      7065>>ASSIGN   7067>>ASSIGN
S_D.REMOTE_MSG.FNCC
      6451**DCL      6452--REDEF
S_D.REMOTE_MSG.STXC
      6447**DCL      6448--REDEF
S_D.REMOTE_MSG.SUBFNCC
      6455**DCL      6456--REDEF
S_D.SCHEMA
      5552**DCL      7047>>IF
S_D.SV
      5511**DCL      5532--REDEF
S_D.TR$INFO.P
      5944**DCL      7053>>IF
S_D.TR$INFO.PSIZ
      5948**DCL      7049>>ASSIGN
S_D.TR$INFO.PTXT
      5950**DCL      7057>>IF
S_D$
      6763**DCL      5459--IMP-PTR  7045>>IF       7045>>IF       7045>>IF       7047>>IF       7049>>ASSIGN
      7050>>ASSIGN   7053>>IF       7057>>IF       7065>>ASSIGN   7065>>ASSIGN   7067>>ASSIGN   7067>>ASSIGN
      7073>>ASSIGN
TEMP
        25**DCL      7055<<ASSIGN   7056<>CALL
UIS$
      6768**DCL      7059>>ASSIGN
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:77   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #004=DDT$ITAGS File=DDT$TRACE.:E05TSI                              TUE 07/29/97 14:26 Page:78   
              MINI UREF LISTING

DDT$ITAGS      14**PROC
OU$      18**DCL
PRIM$      16**DCL
