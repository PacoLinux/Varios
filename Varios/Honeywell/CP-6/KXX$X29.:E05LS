VERSION E05

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*P*
        7        7             NAME: KXX$X29
        8        8             PURPOSE: X.29 - X.25 interface.
        9        9                      All of X.25 calls to X.29 comes here.
       10       10        */
       11       11        /*X*   PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                11         */
       12       12        KXX$X29: PROC ( FPT_X25 );
       13       13
       14       14        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:2    
       15       15
       16       16        /*****************************************************************
       17       17        *                                                                *
       18       18        *                           Include files                        *
       19       19        *                                                                *
       20       20        *****************************************************************/
       21       21
       22       22        %INCLUDE LCP_6;
       23     4301        %INCLUDE G_JIT_M;
       24     4566        %INCLUDE KHA_FNC_E;
       25     4666        %INCLUDE KH_MACRO_C;
       26     5409        %INCLUDE KX_DATA_C;
       27     5477        %INCLUDE KX_PERR_C;
       28     5606        %INCLUDE KX_SCODE_C;
       29     5672        %INCLUDE KX_MACROS_M;
       30     6443        %INCLUDE KXX_MACROS_M;
       31     6785        %INCLUDE KA_GLB_E;
       32     6863        %KA_HLTOTP_E;
       33     6872        %INCLUDE KX_EQUS_E;
       34     7311        %INCLUDE KV$GLB;
       35     7730        %INCLUDE KV$GLBCTX;
       36     8175        %INCLUDE KV$VDH;
       37     8606        %INCLUDE KV_GLB_M;
       38     8728        %INCLUDE KV_GLBCNS_E;
       39     9069        %KV_VDH_EVT_ID_E;
       40     9075        %KV_SCHRSN_E;
       41     9082        %KV_DSCRSN_E;
       42     9091        %KV#CQ_HNDID_E;
       43     9096        %INCLUDE KH$CHN;
       44     9218        %INCLUDE KH_CHN;
       45     9258        %INCLUDE K_ID_E;
       46     9308        %K#ENTID_E;
       47     9327        %K#LYRID_E;
       48     9334        %INCLUDE KL_MACRO_C;
       49    12686        %INCLUDE KL_AFCN_C;
       50    12787        %INCLUDE KL_SUPER_C;
       51    15689        %INCLUDE KH$STT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:3    
       52    15719
       53    15720        %INCLUDE CP_6_SUBS;
       54    16260        %INCLUDE KA_GLB;
       55    16337        %INCLUDE KV_ASCCHR_E;
       56    16474        %INCLUDE K_ADDRESS_M;
       57    16977        %INCLUDE KNH_MACRO_C;
       58    17260        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:4    
       59    17261        /*****************************************************************
       60    17262        *                                                                *
       61    17263        *                           Auto                                 *
       62    17264        *                                                                *
       63    17265        *****************************************************************/
       64    17266
       65    17267        %FPT_X25 ( STCLASS = );
       66    17311    1   DCL X29$ PTR;
       67    17312    1   DCL DAT$ PTR;
       68    17313    1   DCL VDI$ PTR;
       69    17314    1   DCL L3$ PTR;
       70    17315    1   DCL Y@BYTSIZ UBIN;
       71    17316    1   DCL BYTX UBIN;
       72    17317    1   DCL PRM_INDEX UBIN;
       73    17318    1   DCL KVBSIZ UBIN;
       74    17319        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = AUTO );
       75    17363        %KV$VDH_DAT ( NAME = KV@VDH_DAT, STCLASS = AUTO );
       76    17443        %KV$VDH_DSC ( NAME = KV@VDH_DSC, STCLASS = AUTO );
       77    17479        %KV@USRENT;
       78    17499    1   DCL START UBIN;
       79    17500    1   DCL NEXT_FE UBIN;
       80    17501    1   DCL INV_MSG_COD UBIN;
       81    17502    1   DCL ERR_TYP UBIN;
       82    17503    1   DCL Y@ERROR UBIN(32);
       83    17504    1   DCL COMPARE BIT(1);
       84    17505    1   DCL LINSPDX UBIN;
       85    17506
       86    17507        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:5    
       87    17508        /*****************************************************************
       88    17509        *                                                                *
       89    17510        *                           Based                                *
       90    17511        *                                                                *
       91    17512        *****************************************************************/
       92    17513
       93    17514        %KX$X29_OTPBFR ( STCLASS = "BASED (DAT$)" );
       94    17537        %KX$X29_INPBFR ( STCLASS = "BASED (DAT$)" );
       95    17601        %KX$X29 ( STCLASS = "BASED (X29$)" );
       96    17641        %KV$VDI ( STCLASS = "BASED (VDI$)" );
       97    17712        %EQU KV_VDI = CHARTEXT('KV$VDI');
       98    17713        %KH$CHN;
       99    17837        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
      100    18251
      101    18252    1   DCL IN_STR CHAR(2000) BASED (FPT_X25.V_.ADR$);
      102    18253    1   DCL BYT_ARY(0:2000) UBIN BYTE CALIGNED BASED (DAT$);
      103    18254    1   DCL DSTR CHAR(2000) BASED ( DAT$ );
      104    18255        %KV$USRPRM;
      105    18306        %KV$STT;
      106    18700        %KV$PTR;
      107    18743        %KX$L2;
      108    19110        %KX$L3 ( STCLASS = "BASED ( L3$ )" );
      109    19513
      110    19514        %VLP_SCODE ( FPTN=B$SCODE, STCLASS=BASED );
      111    19575        %KX$DATA ( STCLASS = BASED );
      112    19595        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:6    
      113    19596        /*****************************************************************
      114    19597        *                                                                *
      115    19598        *                           Constant/Symref                      *
      116    19599        *                                                                *
      117    19600        *****************************************************************/
      118    19601
      119    19602        %KH_CHNDAT;
      120    19620    1   DCL KX_X29_ERR_PAD_LMT UBIN SYMREF;
      121    19621    1   DCL KX_X3_INT_EQ_BRK(0:31) BIT(1) UNAL SYMREF;
      122    19622    1   DCL KX_X3_RST_EQ_BRK(0:31) BIT(1) UNAL SYMREF;
      123    19623    1   DCL KX_X3_IND_EQ_BRK(0:31) BIT(1) UNAL SYMREF;
      124    19624    1   DCL KX_CHAR_FE BIT(8) ALIGNED CONSTANT INIT('FE'X);
      125    19625    1   DCL CHAR_FE REDEF KX_CHAR_FE CHAR(1) ALIGNED;
      126    19626    1   DCL KX_BFR_FEFE BIT(16) ALIGNED CONSTANT INIT('FEFE'X);
      127    19627    1   DCL KX_BFR_BRK BIT(16) ALIGNED SYMREF;
      128    19628    1   DCL KX_LINSPDX_X3_TO_CP6(0:18) UBIN BYTE CALIGNED SYMREF;
      129    19629    1   DCL Y_POWER_OF_2(0:15) UBIN WORD CONSTANT INIT(1,2,4,8,16,32,64,128,
      130    19630    1    256,512,1024,2048,4096,8192,16384,32768);
      131    19631        %KX$X29 ( FPTN = KX_X29, STCLASS = CONSTANT );
      132    19671
      133    19672        %KX_DATA;
      134    20362    1   DCL G$JIT$ PTR SYMREF;
      135    20363        %KV$USRPRM ( NAME = KX_USRPRM, STCLASS = SYMREF );
      136    20414        %KX_STATS_X29;
      137    20755        %KV$VDH_EVT ( ID = KV_VDH_EVT_ID_CMPOTP, NAME = KV_VDH_EVT_CMPOTP, STCLASS = SYMREF
             20755            );
      138    20790        %KV$VDH_DAT ( NAME = KV_VDH_DAT, STCLASS = SYMREF );
      139    20870        %KV$VDH_DSC ( NAME = KXX_VDH_DSC, STCLASS = "CONSTANT SYMDEF",
      140    20871         RSN=%KV_DSCRSN_LINDRP,NO_IO=YES,ALLSSN=YES );
      141    20907        %KV$VDH_EVT ( ID = KV_VDH_EVT_ID_RLSVDI, NAME = KV_VDH_EVT_RLSVDI, STCLASS = SYMREF
             20907            );
      142    20942        %KV$VDH_EVT ( ID = KV_VDH_EVT_ID_RQSOTP, NAME = KV_VDH_EVT_RQSOTP, STCLASS = SYMREF
             20942            );
      143    20977
      144    20978        %KA_MSC;
      145    21000
      146    21001
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:7    
      147    21002        /*
      148    21003           Error logs
      149    21004        */
      150    21005        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      151    21006                      FPTN = INVALID_VC_DCL,
      152    21007                      ERR# = %E_KXX_INVALID_VC_DCL# );
      153    21053        /*E*   ERROR: KXX-E_KXX_INVALID_VC_DCL#-0
      154    21054             MESSAGE: SUPER-defined X.29 virtual circuit is illegal.
      155    21055        */
      156    21056        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      157    21057                      FPTN = INVALID_INTACK,
      158    21058                      ERR# = %E_KXX_INVALID_INTACK# );
      159    21104        /*E*   ERROR: KXX-E_KXX_INVALID_INTACK#-0
      160    21105             MESSAGE: Interrupt confirm packets are illegal for X.29.
      161    21106        */
      162    21107        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      163    21108                      FPTN = UNEXP_PRM_IND,
      164    21109                      ERR# = %E_KXX_UNEXP_PRM_IND# );
      165    21155        /*E*   ERROR: KXX-E_KXX_UNEXP_PRM_IND#-0
      166    21156             MESSAGE: Unexpected parameter indication message.
      167    21157        */
      168    21158        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      169    21159                      FPTN = FAIL_TO_SET_X3,
      170    21160                      ERR# = %E_KXX_FAIL_TO_SET_X3# );
      171    21206        /*E*   ERROR: KXX-E_KXX_FAIL_TO_SET_X3#-0
      172    21207             MESSAGE: Failed to set an X.3 parameter.
      173    21208                      VAL0 is the parameter index,
      174    21209                      and VAL1 is the parameter value in the PAD.
      175    21210        */
      176    21211        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      177    21212                      FPTN = ERROR_PAD_MSG,
      178    21213                      ERR# = %E_KXX_ERROR_PAD_MSG# );
      179    21259        /*E*   ERROR: KXX-E_KXX_ERROR_PAD_MSG#-0
      180    21260             MESSAGE: An error-PAD X.29 message is received.
      181    21261                      VAL0 is the error type and VAL1 is the invalid message code.
      182    21262        */
      183    21263        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:8    
      184    21264                      FPTN = BAD_IND_BRK_MSG,
      185    21265                      ERR# = %E_KXX_BAD_IND_BRK_MSG# );
      186    21311        /*E*   ERROR: KXX-E_KXX_BAD_IND_BRK_MSG#-0
      187    21312             MESSAGE: Unexpected format of indication of break message.
      188    21313                      VAL0 and VAL1 are the 2 bytes after the message
      189    21314                      code.   */
      190    21315        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      191    21316                      FPTN = BAD_PAD_MSG,
      192    21317                      ERR# = %E_KXX_BAD_PAD_MSG# );
      193    21363        /*E*   ERROR: KXX-E_KXX_BAD_PAD_MSG#-0
      194    21364             MESSAGE: X.29 message with bad message code received.
      195    21365                      VAL0 is the byte index of the bad message code.  VAL1 is size.
      196    21366        */
      197    21367        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      198    21368                      FPTN = BAD_PRM_IND_MSG,
      199    21369                      ERR# = %E_KXX_BAD_PRM_IND_MSG# );
      200    21415        /*E*   ERROR: KXX-E_KXX_BAD_PRM_IND_MSG#-0
      201    21416             MESSAGE: Bad parameter index in parameter indication message.
      202    21417                      VAL 0 is the parameter index, and VAL1 is the parameter value.
      203    21418        */
      204    21419
      205    21420
      206    21421        %VLP_SCODE (FPTN=Y_NO_X29CTX,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_NO_X29CTX#);
      207    21482        %VLP_SCODE (FPTN=Y_NO_RLS,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_NO_RLS#);
      208    21543        %VLP_SCODE (FPTN=Y_BADOTPQ,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_X29_BADOTPQ#);
      209    21604        %VLP_SCODE (FPTN=Y_BADRMTDCL,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_BADRMTDCL#);
      210    21665        %VLP_SCODE (FPTN=Y_BADX29STT,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_BADX29STT#);
      211    21726        %VLP_SCODE (FPTN=Y_UNKEVT,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_X29_UNKEVT#);
      212    21787        %VLP_SCODE (FPTN=Y_UNKSCHRSN,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_UNKSCHRSN#);
      213    21848        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:9    
      214    21849        /*****************************************************************
      215    21850        *                                                                *
      216    21851        *                           Entry references                     *
      217    21852        *                                                                *
      218    21853        *****************************************************************/
      219    21854
      220    21855    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
      221    21856    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
      222    21857    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      223    21858    1   DCL KHD$SCREECH ENTRY (1) ;
      224    21859    1   DCL KXX$TRNOTP ENTRY(1) ALTRET;
      225    21860    1   DCL KXX$MRK ENTRY(1);
      226    21861    1   DCL KXX$RLSCTX ENTRY(1);
      227    21862    1   DCL KXX$INTCNC ENTRY (2) ALTRET;
      228    21863    1   DCL KXP$PACKET ENTRY(1) ALTRET;
      229    21864    1   DCL KXX$SNDX29MSG ENTRY(2) ALTRET;
      230    21865    1   DCL KVV$VDI ENTRY(1) ALTRET;
      231    21866    1   DCL KVV$INT ENTRY(1) ALTRET;
      232    21867    1   DCL KVI$RE_DSPINP ENTRY;
      233    21868    1   DCL KHA$DVCADM ENTRY(6) ALTRET;
      234    21869    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      235    21870    1   DCL KXS$Q_SYSLOG ENTRY (1);
      236    21871    1   DCL KXS$SYSLOG ENTRY (7);
      237    21872
      238    21873        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:10   
      239    21874
      240    21875        /*****************************************************************
      241    21876        *                                                                *
      242    21877        *                           Procedure                            *
      243    21878        *                                                                *
      244    21879        *****************************************************************/
      245    21880
      246    21881
      247    21882    1       L3$ = FPT_X25.CAL$;
      248    21883    1       X29$ = FPT_X25.RCV$;
      249    21884    1       IF X29$ ~= ADDR(NIL)
      250    21885    1          THEN
      251    21886    2             DO;
      252    21887    2                VDI$ = KX$X29.VDI$;
      253    21888    2             END;
      254    21889    1          ELSE
      255    21890    2             DO;
      256    21891    2                VDI$ = ADDR(NIL);
      257    21892    2             END;
      258    21893
      259    21894        /*
      260    21895           The only legal call to this interface without passing X29$ is for
      261    21896           RMTDCL, opening a new X.29 circuit.
      262    21897        */
      263    21898    1       IF X29$ = ADDR(NIL) AND FPT_X25.EVN ~= %KX_CM_EV_RMTDCL# AND NOT KX$L3.PVC
      264    21899    1          THEN
      265    21900    2             DO;
      266    21901        /*S* SCREECH_CODE: KXX-S$KX_NO_X29CTX#
      267    21902             MESSAGE: The only call without passing X29 context address
      268    21903                      allowed is for RMTDCL. Any other events are illegal.
      269    21904        */
      270    21905    2                CALL KHD$SCREECH ( Y_NO_X29CTX );
      271    21906    2             END;
      272    21907
      273    21908    2       DO CASE ( FPT_X25.EVN );
      274    21909
      275    21910        /*
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:11   
      276    21911           EVENT DCL - X.29 should only use remotely declared circuits unless
      277    21912                       it is a permanent VC. Errorlog and return.
      278    21913        */
      279    21914    2          CASE ( %KX_CM_EV_DCL# );
      280    21915
      281    21916    2             IF KX$L3.PVC
      282    21917    2                THEN
      283    21918    2                   GOTO RMTDCL_ENTRY;
      284    21919    2                ELSE
      285    21920    3                   DO;
      286    21921                           %WRSYSLOG ( ERRCOD = INVALID_VC_DCL,
      287    21922                           TRMID = "L3$ -> KX$L3.CHN$ -> KH$CHN.TERMID");
      288    21940    3                      RETURN;
      289    21941    3                   END;
      290    21942
      291    21943        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:12   
      292    21944
      293    21945        /*
      294    21946           EVENT DATIN - call Y$DATIN to find out what it is.
      295    21947        */
      296    21948    2          CASE ( %KX_CM_EV_DATIN# );
      297    21949
      298    21950    2             CALL Y$DATIN;
      299    21951
      300    21952        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:13   
      301    21953
      302    21954        /*
      303    21955           EVENT DATRQS - release transmitted output buffers. Send
      304    21956                          queued messages.
      305    21957        */
      306    21958    2          CASE ( %KX_CM_EV_DATRQS# );
      307    21959
      308    21960        /*
      309    21961           Do we have anything to send ?
      310    21962        */
      311    21963    2             IF KX$X29.SND.HED$ = ADDR(NIL)
      312    21964    2                THEN
      313    21965    3                   DO;
      314    21966    3                      KX$X29.RPRDAT = '1'B;
      315    21967    3                      RETURN;
      316    21968    3                   END;
      317    21969        /*
      318    21970           If this is the tail of the chain and is not truncated yet, truncate it now.
      319    21971        */
      320    21972    2             IF VDI$ ~= ADDR(NIL)
      321    21973    2                THEN
      322    21974    3                   DO;
      323    21975    3                      IF NOT KX$X29.VDHEXTCAL
      324    21976    3                         THEN
      325    21977        /*  make sure we did not get here on the VDHEXT thread */
      326    21978    4                            DO;
      327    21979                                    %KV$USRENT ( VDI$ = VDI$, DFR$ = Y@DFR5,
      328    21980                                    SCHRSN = %KV_SCHRSN_DFR0 );
             21993    4           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             21993                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
             21994    5           IF NOT VDI$->KV$VDI.BSY THEN DO;
             21995    5              VDI$->KV$VDI.BSY = '1'B;
             21996    5              KV@USRENT.SVDPTR$ = KV$PTR$;
             21997    5              KV$PTR$ = VDI$->KV$VDI.ASNINPPTR$;
             21998    5              END;                         /* ELSE IF ~BSY                       */
             21999    5           ELSE DO;
             22000    5              VDI$->KV$VDI.DFR.USR(0) = '1'B;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:14   
             22001    5           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22001                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;
             22002    5              GOTO Y@DFR5;
             22003    5              END;                         /* END IF                             */
      329    22006    4                            END;
      330    22007    4                      DO WHILE ( KX$X29.SND.HED$ ~= KX$X29.SND.NXTLOD$ );
      331    22008    4                         DAT$ = KX$X29.SND.HED$;
      332    22009    4                         KX$X29.SND.HED$ = KX$X29_OTPBFR.LNK$;
      333    22010    4                         IF DAT$ = KX$X29.SND.TAL$
      334    22011    4                            THEN
      335    22012    5                               DO;
      336    22013    5                                  KX$X29.HLTOTP_ALL = KX$X29.HLTOTPNXTBFR_ALL | KX$X29.
             22013                                           HLTOTP_ALL;
      337    22014    5                                  KX$X29.HLTOTPNXTBFR = '0'B;
      338    22015    5                               END;
      339    22016    4                         IF KX$X29_OTPBFR.NMBMRK > 0
      340    22017    4                            THEN
      341    22018    5                               DO;
      342    22019    5                                  KX$X29_OTPBFR.DLT = '0'B;
      343    22020    5                                  CALL KXX$MRK ( KX$X29_OTPBFR );
      344    22021    5                               END;
      345    22022    4                         Y@BYTSIZ = Y_POWER_OF_2 ( KX$X29_OTPBFR.BYTSIZLOG2 );
      346    22023    4                         KX$X29.OTPBFRBYTCNT = KX$X29.OTPBFRBYTCNT - Y@BYTSIZ;
      347    22024    4                         CALL KVB$RLSSYS ( Y@BYTSIZ / 2, DAT$ );
      348    22025    4                         KX_STATS_X29.KHSTT.OTPBFRBYTUTL = KX_STATS_X29.KHSTT.
             22025                                  OTPBFRBYTUTL - Y@BYTSIZ;
      349    22026    4                      END; /* DO WHILE ( ...HED$ ~= ...NXTLOD$ )  */
      350    22027    3   NXT_BFR:           IF KX$X29.SND.HED$ = ADDR(NIL)
      351    22028    3                         THEN
      352    22029    4                            DO;
      353    22030    4                               KX$X29.SND.TAL$ = ADDR(NIL);
      354    22031    4                               KX$X29.RPRDAT = '1'B;
      355    22032    4                            END;
      356    22033    3                      IF KX$X29.STATE ~= %KX_X29_ST_ENDPHSDSC#
      357    22034    3                         THEN
      358    22035    4                            DO;
      359    22036    4                               IF KX$X29.SND.TAL$ = ADDR(NIL)
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:15   
      360    22037    4                                  THEN
      361    22038    5                                     DO;
      362    22039    5                                        IF KV$VDI.RE_DSPINP
      363    22040    5                                           THEN
      364    22041    6                                              DO;
      365    22042    6                                                 CALL KVI$RE_DSPINP;
      366    22043    6                                                 KV$VDI.RE_DSPINP = '0'B;
      367    22044    6                                              END;
      368    22045                                             %KV$CMPOTP;
             22050    6           IF KV$VDI.OTPCNDPND THEN DO;
             22051    6              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);
             22052    6              END;                         /* END IF                             */
      369    22054    5                                     END;
      370    22055
      371    22056        /*
      372    22057           Check to see if we should unblock.
      373    22058        */
      374    22059    4                               IF ( KX$X29.OTPBFRBYTCNT <= KA_OTPUN_BLKLMT(KV$VDI.
             22059                                        LINSPD) )
      375    22060    4                                  OR ( KX$X29.SND.HED$ = KX$X29.SND.TAL$ )
      376    22061    4                                  THEN
      377    22062                                          %KV$RQSOTP ( RQSOTP = YES );
             22074    5           IF NOT KV$VDI.RQSOTP  THEN DO;
             22075    5              KV$VDI.RQSOTP = '1'B;
             22076    5              CALL KVV$VDI(KV_VDH_EVT_RQSOTP);
             22077    5              END;                         /* END IF                             */
      378    22080    4                               IF %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI)
      379    22081    4                                  AND KX$X29.SND.HED$ = ADDR(NIL) AND NOT KX$X29.HLTOTP
      380    22082    4                                  THEN
      381    22083    5                                     DO;
      382    22084
      383    22085        /* We are to report to VDH quiescence in ASYNC                                */
      384    22086        /* so we can complete the releasing of VDI.                                   */
      385    22087
      386    22088    5                                        CALL KVV$VDI(KV_VDH_EVT_RLSVDI) ;
      387    22089    5                                     END;
      388    22090    4                            END;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:16   
      389    22091    3                      DAT$ = KX$X29.SND.NXTLOD$;
      390    22092    3                      IF DAT$ = ADDR(NIL)
      391    22093    3                         THEN
      392    22094    3                            GOTO EXT_RET;
      393    22095    3                      IF DAT$ = KV$VDI.OTPBFR_.ADR$
      394    22096    3                         THEN
      395    22097    3                            CALL KXX$TRNOTP ( KV$VDI ) ALTRET (EXT_RET);
      396    22098
      397    22099    3                      IF NOT KV$VDI.PHSDSC AND NOT KV$VDI.INTPHSDSC
      398    22100    3                         THEN
      399    22101    4                            DO;
      400    22102    4                               IF KX$X29.HLTOTP
      401    22103    4                                  THEN
      402    22104    4                                     GOTO EXT_RET;
      403    22105    4                               IF KX$X29_OTPBFR.HLTOTP_ALL
      404    22106    4                                  THEN
      405    22107    5                                     DO;
      406    22108    5                                        IF DAT$ = KX$X29.SND.HED$
      407    22109    5                                           THEN
      408    22110    6                                              DO;
      409    22111    6                                                 KX$X29.HLTOTP_ALL = KX$X29.HLTOTP_ALL
             22111                                                          | KX$X29_OTPBFR.HLTOTP_ALL;
      410    22112    6                                                 KX$X29_OTPBFR.HLTOTP_ALL = '0'B;
      411    22113    6                                              END;
      412    22114    5                                        GOTO EXT_RET;
      413    22115    5                                     END;
      414    22116    4                            END;
      415    22117    3                   END;
      416    22118    2             DAT$ = KX$X29.SND.NXTLOD$;
      417    22119    2             IF DAT$ = ADDR(NIL)
      418    22120    2                THEN
      419    22121    3                   DO;
      420    22122    3                      KX$X29.RPRDAT = '1'B;
      421    22123    3                      RETURN;
      422    22124    3                   END;
      423    22125    2             KX$X29.SND.NXTLOD$ = KX$X29_OTPBFR.LNK$;
      424    22126    2             IF KX$X29_OTPBFR.BYTCNT = 0 AND DAT$ ~= KV$VDI.OTPBFR_.ADR$
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:17   
      425    22127    2                THEN
      426    22128    3                   DO;
      427    22129        /*
      428    22130           This is a buffer with (at least) one marker but no actual data.
      429    22131           Everything in front of this buffer ( which has only markers )
      430    22132           has been sent. Let's report done to VDH and release this buffer.
      431    22133        */
      432    22134    3                      KX$X29_OTPBFR.DLT = '0'B;
      433    22135    3                      CALL KXX$MRK ( KX$X29_OTPBFR );
      434    22136    3                      KX$X29.SND.HED$ = KX$X29_OTPBFR.LNK$;
      435    22137    3                      Y@BYTSIZ = Y_POWER_OF_2 ( KX$X29_OTPBFR.BYTSIZLOG2 );
      436    22138    3                      KX$X29.OTPBFRBYTCNT = KX$X29.OTPBFRBYTCNT - Y@BYTSIZ;
      437    22139    3                      CALL KVB$RLSSYS ( Y@BYTSIZ / 2, DAT$ );
      438    22140    3                      GOTO NXT_BFR;
      439    22141    3                   END;
      440    22142    2             FPT_X25.V_.ADR$ = DAT$;
      441    22143    2             FPT_X25.V_.BYTX = LENGTHC ( KX$X29_OTPBFR );
      442    22144    2             FPT_X25.V_.BYTSIZ = KX$X29_OTPBFR.BYTCNT;
      443    22145    2             FPT_X25.PRS.PRM1 = KX$X29_OTPBFR.Q;
      444    22146    2   EXT_RET:  IF VDI$ ~= ADDR(NIL) AND NOT KX$X29.VDHEXTCAL
      445    22147    2                THEN
      446    22148    3                   DO;
      447    22149                           %KV$USREXT;
             22155    3           KV$VDI.BSY = '0'B;
             22157    3           KV$PTR$ = KV@USRENT.SVDPTR$;
      448    22159    3                   END;
      449    22160    2             RETURN;
      450    22161    2   Y@DFR5:   KX$X29.RPRDAT = '1'B;
      451    22162    2             RETURN;
      452    22163
      453    22164        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:18   
      454    22165
      455    22166        /*
      456    22167           EVENT INT - interrupt packet received. See if this is the way
      457    22168                       the remote PAD say BREAK to us.
      458    22169        */
      459    22170    2          CASE ( %KX_CM_EV_INT# );
      460    22171
      461    22172    2             IF ( KX$X29.STATE = %KX_X29_ST_NRM# AND
      462    22173    2                KX_X3_INT_EQ_BRK(KX$X29.X3PRM(%KX_X3PRMX_ACTBRK#)) )
      463    22174    2                THEN
      464    22175    3                   DO;
      465    22176        /*
      466    22177           Tell the PAD to resume displaying output.
      467    22178        */
      468    22179    3   BRK2VDH:           CALL KXX$SNDX29MSG ( %KX_X29MSGTYP_RSMOTP#, KX$X29 );
      469    22180                           %KV$USRENT ( VDI$ = VDI$, DFR$ = Y@DFR7,
      470    22181                           SCHRSN = %KV_SCHRSN_DFR2 );
             22194    3           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             22194                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
             22195    4           IF NOT VDI$->KV$VDI.BSY THEN DO;
             22196    4              VDI$->KV$VDI.BSY = '1'B;
             22197    4              KV@USRENT.SVDPTR$ = KV$PTR$;
             22198    4              KV$PTR$ = VDI$->KV$VDI.ASNINPPTR$;
             22199    4              END;                         /* ELSE IF ~BSY                       */
             22200    4           ELSE DO;
             22201    4              VDI$->KV$VDI.DFR.USR(2) = '1'B;
             22202    4           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22202                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;
             22203    4              GOTO Y@DFR7;
             22204    4              END;                         /* END IF                             */
      471    22207    3                      KV@VDH_DAT = KV_VDH_DAT;
      472    22208    3                      KV@VDH_DAT.DAT__.ADR$ = ADDR(KX_BFR_BRK);
      473    22209    3                      KV@VDH_DAT.DAT__.DATBYTSIZ = 2;
      474    22210    3                      KV@VDH_DAT.DAT__.BFRBYTSIZ = 2;
      475    22211    3                      CALL KVV$VDI ( KV@VDH_DAT );
      476    22212                           %KV$USREXT ( VDI$ = VDI$ );
             22218    3           KV$VDI.BSY = '0'B;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:19   
             22220    3           KV$PTR$ = KV@USRENT.SVDPTR$;
      477    22222    3                   END;
      478    22223    2   Y@DFR7:   ;
      479    22224        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:20   
      480    22225
      481    22226        /*
      482    22227           EVENTs INTACK, INTNAK - errorlog and reset, since X.29 never send
      483    22228                                           out any interrupt packets.
      484    22229        */
      485    22230    2          CASE ( %KX_CM_EV_INTACK#, %KX_CM_EV_INTNAK# );
      486    22231
      487    22232                  %WRSYSLOG ( ERRCOD = INVALID_INTACK,
      488    22233                  TRMID = "KX$X29.CHN$ -> KH$CHN.TERMID" );
      489    22251    2             CALL_FPT = '0'B;
      490    22252    2             CALL_FPT.CAL$ = X29$;
      491    22253    2             CALL_FPT.RCV$ = L3$;
      492    22254    2             CALL_FPT.EVN = %KX_P_EV_VCRST#;
      493    22255    2             CALL KXP$PACKET ( CALL_FPT ) ALTRET ( SCREECH_KXP );
      494    22256
      495    22257        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:21   
      496    22258
      497    22259        /*
      498    22260           EVENT RMTDCL - opening a new X.29 circuit.
      499    22261        */
      500    22262    2          CASE ( %KX_CM_EV_RMTDCL# );
      501    22263
      502    22264    2   RMTDCL_ENTRY: ;
      503    22265    2             IF X29$ ~= ADDR(NIL)
      504    22266    2                THEN
      505    22267    3                   DO;
      506    22268    3                      CALL KHD$SCREECH ( Y_BADRMTDCL );
      507    22269    3                   END;
      508    22270        /*
      509    22271           Report the connect attempt to handler administration.
      510    22272        */
      511    22273        /*N* For now, use the TERMID of the frame level channel table.
      512    22274        */
      513    22275        /*N*      CALL KHA$DVCADM ( %KHA_FNC_CONNECT, Y@ERROR, KX$L3.L2$->KX$L2.CHN$->KH$CHN
             22275         )
      514    22276                     ALTRET ( CLRVC );            */
      515    22277        /* GET MEMORY FROM THE CENTRAL MEMORY MANAGER FOR THE X.29                    */
      516    22278        /* CONTEXT BLOCK.                                                        */
      517    22279
      518    22280    2             CALL KVB$GETSYS(SIZEW(KX$X29),X29$)
      519    22281    2                WHENALTRETURN
      520    22282    3                   DO;
      521    22283    3   CLRVC:             CALL_FPT = '0'B;
      522    22284    3                      CALL_FPT.RCV$ = L3$;
      523    22285    3                      CALL_FPT.EVN = %KX_P_EV_VCLST#;
      524    22286    3                      CALL_FPT.PRM1 = %KX_DIAG_CALPRB#; /* call setup problem  */
      525    22287    3                      CALL_FPT.PRS.PRM1 = '1'B;
      526    22288    3                      CALL KXP$PACKET ( CALL_FPT ) ALTRET ( SCREECH_KXP );
      527    22289    3                      RETURN;
      528    22290    3                   END;
      529    22291
      530    22292    2             KX_STATS_X29.KHSTT.CTXBYTUTL = SIZEC(KX$X29) + KX_STATS_X29.KHSTT.
             22292                      CTXBYTUTL;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:22   
      531    22293    2             KX_STATS_X29.CIRCUITS = KX_STATS_X29.CIRCUITS + 1;
      532    22294
      533    22295
      534    22296        /*
      535    22297           Always pass back the ctx$ and data timer period in the fpt.
      536    22298        */
      537    22299    2             FPT_X25.RCV$ = X29$;
      538    22300    2             FPT_X25.PRM2 = KX_X29MLTMR;
      539    22301    2             FPT_X25.PRM1 = %KX_L3_TOACT_RSTRTR#;
      540    22302
      541    22303        /* WE GOT THE MEMORY FOR THE X29 CONTEXT BLOCK*                        */
      542    22304    2             KX$X29 = KX_X29;
      543    22305    2             KX$X29.STATE = %KX_X29_ST_VCUP#;
      544    22306    2             KX$X29.CHN$ = FPT_X25.PRM2$;
      545    22307    2             KX$X29.CHN$->KH$CHN.TERMID.TTYP = %KLTY_TTY#;
      546    22308    2             KX$X29.L3$ = FPT_X25.CAL$;
      547    22309
      548    22310    2             CALL_FPT = '0'B;
      549    22311    2             CALL_FPT.CAL$ = X29$;
      550    22312    2             CALL_FPT.RCV$ = L3$;
      551    22313    2             CALL_FPT.EVN = %KX_P_EV_VCUP#;
      552    22314    2             CALL KXP$PACKET ( CALL_FPT ) ALTRET ( SCREECH_KXP );
      553    22315
      554    22316        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:23   
      555    22317        /*
      556    22318            EVENT RSTIND - packet level received a reset packet. See if
      557    22319                           the remote PAD is telling us of a break.
      558    22320        */
      559    22321    2          CASE ( %KX_CM_EV_RSTIND# );
      560    22322
      561    22323    2             IF ( KX$X29.STATE = %KX_X29_ST_NRM# AND
      562    22324    2                KX_X3_RST_EQ_BRK(KX$X29.X3PRM(%KX_X3PRMX_ACTBRK#)) )
      563    22325    2                THEN
      564    22326    2                   GOTO BRK2VDH;   /* in case ( int ) */
      565    22327
      566    22328        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:24   
      567    22329        /*
      568    22330           EVENT VCRST - VC reset, nothing to do.
      569    22331        */
      570    22332    2          CASE ( %KX_CM_EV_VCRST# );
      571    22333
      572    22334        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:25   
      573    22335
      574    22336        /*
      575    22337           EVENT VCDWN - VC down. This should not be reported for a remotely
      576    22338                         declared VC, so we'll just return. But if it is from a
      577    22339                         PVC, we'll have to treat it as a VCLST
      578    22340        */
      579    22341    2          CASE ( %KX_CM_EV_VCDWN# );
      580    22342
      581    22343    2             IF KX$L3.PVC
      582    22344    2                THEN
      583    22345    2                   GOTO VCLST_ENTRY;
      584    22346        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:26   
      585    22347
      586    22348        /*
      587    22349           EVENT VCLST - VC lost. Does not matter which end decided to drop
      588    22350                         the VC. Change state and call VDH_DSC with line-drop as reason.
      589    22351        */
      590    22352    2          CASE ( %KX_CM_EV_VCLST# );
      591    22353    2   VCLST_ENTRY: ;
      592    22354    2             IF KX$X29.STATE = %KX_X29_ST_BGNPHSDSC#
      593    22355    2                THEN
      594    22356    3                   DO;
      595    22357    3                      KX$X29.STATE = %KX_X29_ST_ENDPHSDSC#;
      596    22358    3                      RETURN;
      597    22359    3                   END;
      598    22360    2             IF KX$X29.VDI$ = ADDR(NIL)
      599    22361    2                THEN
      600    22362        /*
      601    22363           The VC was cleared because we cannot get VDI.
      602    22364        */
      603    22365    3                   DO;
      604    22366    3                      IF KX$X29.STATE = %KX_X29_ST_SETRED#
      605    22367    3                         THEN
      606    22368    4                            DO;
      607    22369    4                               CALL KXX$RLSCTX ( KX$X29 );
      608    22370    4                               FPT_X25.RCV$ = ADDR(NIL);
      609    22371    4                            END;
      610    22372    3                      RETURN;
      611    22373    3                   END;
      612    22374    2                ELSE
      613    22375    3                   DO;
      614    22376    3                      IF NOT KX$X29.VDHEXTCAL
      615    22377    3                         THEN
      616    22378    4                            DO;
      617    22379                                    %KV$USRENT ( VDI$ = VDI$, DFR$ = Y@DFR2,
      618    22380                                    SCHRSN = %KV_SCHRSN_DFR3 );
             22393    4           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             22393                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
             22394    5           IF NOT VDI$->KV$VDI.BSY THEN DO;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:27   
             22395    5              VDI$->KV$VDI.BSY = '1'B;
             22396    5              KV@USRENT.SVDPTR$ = KV$PTR$;
             22397    5              KV$PTR$ = VDI$->KV$VDI.ASNINPPTR$;
             22398    5              END;                         /* ELSE IF ~BSY                       */
             22399    5           ELSE DO;
             22400    5              VDI$->KV$VDI.DFR.USR(3) = '1'B;
             22401    5           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22401                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;
             22402    5              GOTO Y@DFR2;
             22403    5              END;                         /* END IF                             */
      619    22406    4                            END;
      620    22407    3                      KV$VDI.PHSDSC = '1'B;
      621    22408    3                      KV@VDH_DSC = KXX_VDH_DSC;
      622    22409    3                      CALL KVV$VDI ( KV@VDH_DSC );
      623    22410    3                      KX$X29.STATE = %KX_X29_ST_ENDPHSDSC#;
      624    22411    3                      KV$VDI.OTPBFR_.BYTSIZ = 0;
      625    22412    3                      KV$VDI.OTPBFR_.BYTX = LENGTHC ( KX$X29_OTPBFR );
      626    22413    3                      KV$VDI.OTPBFR_.ADR$ = ADDR (NIL);
      627    22414                           /* takes care of purging output */
      628    22415    4                      DO WHILE ( KX$X29.SND.HED$ ~= ADDR(NIL) );
      629    22416    4                         DAT$ = KX$X29.SND.HED$;
      630    22417    4                         KX$X29.SND.HED$ = KX$X29_OTPBFR.LNK$;
      631    22418    4                         IF KX$X29_OTPBFR.NMBMRK > 0
      632    22419    4                            THEN
      633    22420    5                               DO;
      634    22421    5                                  KX$X29_OTPBFR.DLT = '1'B;
      635    22422    5                                  CALL KXX$MRK ( KX$X29_OTPBFR );
      636    22423    5                               END;
      637    22424    4                         Y@BYTSIZ = Y_POWER_OF_2 ( KX$X29_OTPBFR.BYTSIZLOG2 );
      638    22425    4                         CALL KVB$RLSSYS ( Y@BYTSIZ / 2, DAT$ );
      639    22426    4                         KX_STATS_X29.KHSTT.OTPBFRBYTUTL = KX_STATS_X29.KHSTT.
             22426                                  OTPBFRBYTUTL - Y@BYTSIZ;
      640    22427    4                      END; /*  DO WHILE ...  */
      641    22428    3                      KX$X29.OTPBFRBYTCNT = 0;
      642    22429
      643    22430                           %KV$RQSOTP ( RQSOTP = YES );
             22442    4           IF NOT KV$VDI.RQSOTP  THEN DO;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:28   
             22443    4              KV$VDI.RQSOTP = '1'B;
             22444    4              CALL KVV$VDI(KV_VDH_EVT_RQSOTP);
             22445    4              END;                         /* END IF                             */
      644    22448    3                      IF %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI)
      645    22449    3                         THEN
      646    22450        /* We are to report to VDH quiescence in ASYNC                                */
      647    22451        /* so we can complete the releasing of VDI.                                   */
      648    22452    3                            CALL KVV$VDI(KV_VDH_EVT_RLSVDI) ;
      649    22453    3                      KX$X29.SND.NXTLOD$ = ADDR(NIL);
      650    22454    3                      KX$X29.SND.TAL$ = ADDR(NIL);
      651    22455    3                      GOTO EXT_RET;
      652    22456
      653    22457    3                   END;
      654    22458    2   Y@DFR2:   ;
      655    22459        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:29   
      656    22460        /*
      657    22461           EVENT RLSL3 - L3 context is about to go away. We still have to wait
      658    22462                         until the disconnect procedure with VDH is done. Just
      659    22463                         clear the L3$.
      660    22464        */
      661    22465    2          CASE ( %KX_CM_EV_RLSL3# );
      662    22466
      663    22467    2             KX$X29.L3$ = ADDR(NIL);
      664    22468        /*N* Some more code may be needed.  */
      665    22469        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:30   
      666    22470
      667    22471        /*
      668    22472           EVENT VCUP - VC established. It is time to get the X.3 profile.
      669    22473        */
      670    22474
      671    22475    2          CASE ( %KX_CM_EV_VCUP# );
      672    22476
      673    22477    2             IF KX$X29.STATE ~= %KX_X29_ST_VCUP#
      674    22478    2                THEN
      675    22479    3                   DO;
      676    22480        /*S* SCREECH_CODE: KXX-S$KX_BADX29STT#
      677    22481             MESSAGE: X29 should not be in this state with the current event.
      678    22482        */
      679    22483    3                      CALL KHD$SCREECH ( Y_BADX29STT );
      680    22484    3                   END;
      681    22485
      682    22486    2             KX$X29.STATE = %KX_X29_ST_INIT_RED#;
      683    22487        /*
      684    22488           First thing we do after circuit establishment is to get the
      685    22489           X.3 profile from the PAD.
      686    22490        */
      687    22491    2             CALL KXX$SNDX29MSG ( %KX_X29MSGTYP_REDX3#, KX$X29 );
      688    22492    2             KX$X29.WAT4PRM = KX$X29.WAT4PRM + 1;
      689    22493        /*
      690    22494           any other events - screech
      691    22495        */
      692    22496    2          CASE ( ELSE );
      693    22497
      694    22498        /*S* SCREECH_CODE: KXX-S$KX_X29_UNKEVT#
      695    22499             MESSAGE: Packet called X29 with an unknown event.
      696    22500        */
      697    22501    2             CALL KHD$SCREECH ( Y_UNKEVT );
      698    22502
      699    22503    2       END; /* DO CASE */
      700    22504
      701    22505    1       RETURN;
      702    22506
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:31   
      703    22507    1   SCREECH_KXP: CALL KHD$SCREECH ( CALL_FPT.PRM1$->B$SCODE );
      704    22508        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:32   
      705    22509
      706    22510
      707    22511    1   Y$DATIN: PROC;
      708    22512
      709    22513        /*I*
      710    22514             NAME: Y$DATIN
      711    22515             PURPOSE: To decode the incoming message and act according to
      712    22516                      the current state.
      713    22517        */
      714    22518
      715    22519    2       IF NOT FPT_X25.PRS.PRM1 /* no Q-bit. Normal X.25 data packet */
      716    22520    2          THEN
      717    22521    3             DO CASE ( KX$X29.STATE );
      718    22522
      719    22523    3                CASE ( %KX_X29_ST_NRM# );
      720    22524        /* If VDI$ is nil, ignore the input. */
      721    22525    3                   IF VDI$ = ADDR(NIL) THEN RETURN;
      722    22526
      723    22527        /*
      724    22528           'FE'X is the control character introducer to VDH. So we have to
      725    22529           double up any 'FE'X characters in the input buffer.
      726    22530        */
      727    22531    3                   IF NOT FPT_X25.PRS.PRM2
      728    22532    3                      THEN
      729    22533    4                         DO;
      730    22534        /*
      731    22535           If this call is on the VDH schedule thread, then no need for USRENT.
      732    22536        */
      733    22537                                 %KV$USRENT ( VDI$ = VDI$, DFR$ = Y@DFR3,
      734    22538                                 SCHRSN = %KV_SCHRSN_DFR1 );
             22551    4           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             22551                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
             22552    5           IF NOT VDI$->KV$VDI.BSY THEN DO;
             22553    5              VDI$->KV$VDI.BSY = '1'B;
             22554    5              KV@USRENT.SVDPTR$ = KV$PTR$;
             22555    5              KV$PTR$ = VDI$->KV$VDI.ASNINPPTR$;
             22556    5              END;                         /* ELSE IF ~BSY                       */
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:33   
             22557    5           ELSE DO;
             22558    5              VDI$->KV$VDI.DFR.USR(1) = '1'B;
             22559    5           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22559                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;
             22560    5              GOTO Y@DFR3;
             22561    5              END;                         /* END IF                             */
      735    22564    4                         END;
      736    22565
      737    22566    3                   START = 0;
      738    22567    4                   DO WHILE ( START < FPT_X25.V_.BYTSIZ );
      739    22568    4                      CALL INDEX ( NEXT_FE, CHAR_FE, SUBSTR(IN_STR,FPT_X25.V_.BYTX,
             22568                               FPT_X25.V_.BYTSIZ), START );
      740    22569    4                      IF NEXT_FE ~= START
      741    22570    4                         THEN
      742    22571    5                            DO;
      743    22572    5                               KV@VDH_DAT = KV_VDH_DAT;
      744    22573    5                               KV@VDH_DAT.DAT__.ADR$ = FPT_X25.V_.ADR$;
      745    22574    5                               KV@VDH_DAT.DAT__.BYTX = FPT_X25.V_.BYTX + START;
      746    22575    5                               KV@VDH_DAT.DAT__.DATBYTSIZ = NEXT_FE - START;
      747    22576    5                               CALL KVV$VDI ( KV@VDH_DAT );
      748    22577    5                            END;
      749    22578    4                      IF NEXT_FE < FPT_X25.V_.BYTSIZ
      750    22579    4                         THEN
      751    22580    5                            DO;
      752    22581    5                               KV@VDH_DAT = KV_VDH_DAT;
      753    22582    5                               KV@VDH_DAT.DAT__.ADR$ = ADDR(KX_BFR_FEFE);
      754    22583    5                               KV@VDH_DAT.DAT__.DATBYTSIZ = 2;
      755    22584    5                               KV@VDH_DAT.DAT__.BFRBYTSIZ = 2;
      756    22585    5                               CALL KVV$VDI ( KV@VDH_DAT );
      757    22586    5                            END;
      758    22587    4                      START = NEXT_FE + 1;
      759    22588    4                   END; /*  DO WHILE  */
      760    22589    4                   IF KX$X29.RPRDAT AND NOT KX$X29.HLTOTP THEN DO;
      761    22590
      762    22591        /* THE OUTPUT CCB COUNT IS ZERO, SO POSITIONING AND/OR                        */
      763    22592        /* OUTPUT BUFFER TRUNCATING WON'T BE DONE BY THE OUTPUT                       */
      764    22593        /* INTERRUPT ROUTINE.                                                         */
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:34   
      765    22594
      766    22595        /* Force completion of any pending output operations.                         */
      767    22596
      768    22597    5                            IF %KV_VDI.RE_DSPINP THEN DO;
      769    22598    5                                     CALL KVI$RE_DSPINP;
      770    22599    5                                  END;
      771    22600
      772    22601                                 %KV$CMPOTP;
             22606    5           IF KV$VDI.OTPCNDPND THEN DO;
             22607    5              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);
             22608    5              END;                         /* END IF                             */
      773    22610    4                         END;
      774    22611    3                   IF NOT FPT_X25.PRS.PRM2
      775    22612    3                      THEN
      776    22613    4                         DO;
      777    22614        /*
      778    22615           If this call is on the VDH schedule thread, then no need for USREXT
      779    22616        */
      780    22617                                 %KV$USREXT ( VDI$ = VDI$ );
             22623    4           KV$VDI.BSY = '0'B;
             22625    4           KV$PTR$ = KV@USRENT.SVDPTR$;
      781    22627    4                         END;
      782    22628
      783    22629    3                CASE ( %KX_X29_ST_INIT_RED#, %KX_X29_ST_SETRED# );
      784    22630
      785    22631    3   Y@DFR3:         CALL Y$COPY;
      786    22632
      787    22633
      788    22634    3                CASE ( %KX_X29_ST_BGNPHSDSC#, %KX_X29_ST_ENDPHSDSC# );
      789    22635        /*  Just ignore input.  */
      790    22636
      791    22637    3                CASE ( ELSE );
      792    22638
      793    22639    3                   CALL KHD$SCREECH ( Y_UNKSCHRSN );
      794    22640
      795    22641    3             END; /*  end of do case  */
      796    22642    2          ELSE
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:35   
      797    22643        /*
      798    22644           Q-bit on. See what it is.
      799    22645        */
      800    22646    2             CALL Y$DECODE_X29;
      801    22647
      802    22648    2   END Y$DATIN;
      803    22649
      804    22650        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:36   
      805    22651
      806    22652        /*I*
      807    22653             NAME: Y$DECODE_X29
      808    22654             PURPOSE: The received packet has the Q-bit on and is thus an
      809    22655                      X.29 message. This routine decodes the X.29 protocol
      810    22656                      and changes the state and causes some actions, where
      811    22657                      appropriate.
      812    22658        */
      813    22659    1   Y$DECODE_X29: PROC;
      814    22660
      815    22661    2   DCL BAD_PRM_IND UBIN;
      816    22662    2   DCL FAIL_TO_SET UBIN;
      817    22663    2       DAT$ = FPT_X25.V_.ADR$;
      818    22664
      819    22665    2       BYTX = FPT_X25.V_.BYTX;
      820    22666    3       DO CASE ( BYT_ARY(BYTX) );
      821    22667
      822    22668        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:37   
      823    22669        /*
      824    22670           Parameter indication PAD message.
      825    22671        */
      826    22672
      827    22673    3          CASE ( %KX_X29MSGTYP_PRMIND# );
      828    22674
      829    22675    3             IF KX$X29.WAT4PRM = 0
      830    22676    3                THEN
      831    22677        /*
      832    22678           We are not expecting any parameter indication messages from the
      833    22679           PAD. Errorlog.
      834    22680        */
      835    22681    4                   DO;
      836    22682                           %WRSYSLOG ( ERRCOD = UNEXP_PRM_IND,
      837    22683                           TRMID = "KX$X29.CHN$->KH$CHN.TERMID" );
      838    22701    4                      RETURN;
      839    22702    4                   END;
      840    22703    3                ELSE
      841    22704    4                   DO;
      842    22705    4                      IF KX$X29.STATE = %KX_X29_ST_INIT_RED#
      843    22706    4                         THEN
      844    22707    4                            COMPARE = '0'B;
      845    22708    4                         ELSE
      846    22709    4                            COMPARE = '1'B;
      847    22710        /*
      848    22711           Copy these parameter values into the X.29 context block.
      849    22712        */
      850    22713    4                      BYTX = BYTX + 1;
      851    22714    4                      BAD_PRM_IND = 0;
      852    22715    4                      FAIL_TO_SET = 0;
      853    22716    5                      DO WHILE ( BYTX < FPT_X25.V_.BYTSIZ+ FPT_X25.V_.BYTX );
      854    22717    5                         PRM_INDEX = BYT_ARY (BYTX);
      855    22718    5                         IF PRM_INDEX > %KX_X3PRMX_HI# + 1
      856    22719    5                            THEN
      857    22720    5                               BAD_PRM_IND = BYTX;
      858    22721    5                            ELSE
      859    22722    6                               DO;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:38   
      860    22723    6                                  IF COMPARE AND KX$X29.X3PRM ( PRM_INDEX - 1 ) ~=
      861    22724    6                                     BYT_ARY ( BYTX + 1 )
      862    22725    6                                     THEN
      863    22726    6                                        FAIL_TO_SET = BYTX;
      864    22727    6                                  KX$X29.X3PRM ( PRM_INDEX - 1 ) = BYT_ARY ( BYTX + 1 )
             22727                                           ;
      865    22728    6                               END;
      866    22729    5                         BYTX = BYTX + 2;
      867    22730    5                      END; /*  DO WHILE  */
      868    22731
      869    22732    4                      IF FPT_X25.V_.BYTSIZ = 3 AND PRM_INDEX = %KX_X3PRMX_HLTMRK#
      870    22733    4                         THEN
      871    22734    4                            KX$X29.HLTOTP.BITT(%KA#HLTOTP_USRX) = '1'B;
      872    22735    4                      IF BAD_PRM_IND ~= 0
      873    22736    4                         THEN
      874    22737    5                            DO;
      875    22738    5                               BYTX = BYT_ARY (BAD_PRM_IND);
      876    22739    5                               BAD_PRM_IND = BYT_ARY (BAD_PRM_IND+1);
      877    22740                                    %WRSYSLOG ( ERRCOD = BAD_PRM_IND_MSG,
      878    22741                                    TRMID = "KX$X29.CHN$->KH$CHN.TERMID",
      879    22742                                    BFR = BYT_ARY,
      880    22743                                    VAL1 = BAD_PRM_IND,
      881    22744                                    VAL0 = BYTX );
      882    22762    5                            END;
      883    22763    4                      IF FAIL_TO_SET ~= 0
      884    22764    4                         THEN
      885    22765    5                            DO;
      886    22766    5                               BYTX = BYT_ARY (FAIL_TO_SET);
      887    22767    5                               FAIL_TO_SET = BYT_ARY (FAIL_TO_SET+1);
      888    22768                                    %WRSYSLOG ( ERRCOD = FAIL_TO_SET_X3,
      889    22769                                    TRMID = "KX$X29.CHN$->KH$CHN.TERMID",
      890    22770                                    BFR = BYT_ARY,
      891    22771                                    VAL1 = FAIL_TO_SET,
      892    22772                                    VAL0 = BYTX );
      893    22790    5                            END;
      894    22791    4                      IF KX$X29.STATE = %KX_X29_ST_INIT_RED#
      895    22792    4                         THEN
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:39   
      896    22793        /*
      897    22794           The PAD has responded to our initial read param message.
      898    22795           We should move to the SETRED state and send the set and
      899    22796           read message.
      900    22797        */
      901    22798    5                            DO;
      902    22799    5                               KX$X29.STATE = %KX_X29_ST_SETRED#;
      903    22800    5                               CALL KXX$SNDX29MSG ( %KX_X29MSGTYP_1ST_SETREDX3#, KX$X29
             22800                                        );
      904    22801    5                            END;
      905    22802    4                         ELSE
      906    22803    4                            IF KX$X29.STATE = %KX_X29_ST_SETRED#
      907    22804    4                               THEN
      908    22805        /*
      909    22806           The PAD has responded to our set and read param message.
      910    22807           Move to state normal. Call VDHINT and VDH_CNC.
      911    22808        */
      912    22809    5                                  DO;
      913    22810    5                                     KX$X29.WAT4PRM = KX$X29.WAT4PRM - 1;
      914    22811    5                                     CALL KXX$INTCNC ( KX$X29 )
      915    22812    5                                        WHENRETURN
      916    22813    6                                           DO;
      917    22814    6                                              KX$X29.STATE = %KX_X29_ST_NRM#;
      918    22815    6                                              LINSPDX = KX_LINSPDX_X3_TO_CP6(KX$X29.
             22815                                                       X3PRM(%KX_X3PRMX_LINSPD#));
      919    22816    6                                              KX_STATS_X29.LINSPDDST(LINSPDX) =
             22816                                                       KX_STATS_X29.LINSPDDST(LINSPDX) + 1;
      920    22817        /*
      921    22818           Right after INTCNC, VDI will have the busy bit on. Do a usrent here
      922    22819           just to raise the appropriate defer bit, so that we will call
      923    22820           KXX$DFRINP at the earliest chance.
      924    22821        */
      925    22822                                                   %KV$USRENT ( VDI$ = KX$X29.VDI$, DFR$ =
             22822                                                       Y@DFR6, SCHRSN = %KV_SCHRSN_DFR1 );
             22835    6           KX$X29.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             22835                    KX$X29.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
             22836    7           IF NOT KX$X29.VDI$->KV$VDI.BSY THEN DO;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:40   
             22837    7              KX$X29.VDI$->KV$VDI.BSY = '1'B;
             22838    7              KV@USRENT.SVDPTR$ = KV$PTR$;
             22839    7              KV$PTR$ = KX$X29.VDI$->KV$VDI.ASNINPPTR$;
             22840    7              END;                         /* ELSE IF ~BSY                       */
             22841    7           ELSE DO;
             22842    7              KX$X29.VDI$->KV$VDI.DFR.USR(1) = '1'B;
             22843    7           KX$X29.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22843                    KX$X29.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;
             22844    7              GOTO Y@DFR6;
             22845    7              END;                         /* END IF                             */
      926    22848        /*
      927    22849           Put a usrext here just in case VDI busy bit is reset.
      928    22850        */
      929    22851                                                   %KV$USREXT ( VDI$ = KX$X29.VDI$ );
             22857    6           KV$VDI.BSY = '0'B;
             22859    6           KV$PTR$ = KV@USRENT.SVDPTR$;
      930    22861    6   Y@DFR6:                                    ;
      931    22862
      932    22863    6                                           END;
      933    22864    5                                  END;
      934    22865    4                   END;
      935    22866        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:41   
      936    22867        /*
      937    22868           Error PAD message.
      938    22869        */
      939    22870    3          CASE ( %KX_X29MSGTYP_ERRPAD# );
      940    22871
      941    22872        /*
      942    22873           Errorlog and increment our error count. If the PAD has
      943    22874           complained too many times about error from us, clear the
      944    22875           circuit.
      945    22876        */
      946    22877    3             IF FPT_X25.V_.BYTSIZ = 3
      947    22878    3                THEN
      948    22879    3                   INV_MSG_COD = BYT_ARY (BYTX + 2);
      949    22880    3                ELSE
      950    22881    3                   INV_MSG_COD = 0;
      951    22882    3             ERR_TYP = BYT_ARY (BYTX + 1);
      952    22883                  %WRSYSLOG ( ERRCOD = ERROR_PAD_MSG,
      953    22884                  TRMID = "KX$X29.CHN$->KH$CHN.TERMID",
      954    22885                  VAL0 = ERR_TYP,
      955    22886                  VAL1 = INV_MSG_COD );
      956    22904    3             KX$X29.ERR_PAD = KX$X29.ERR_PAD + 1;
      957    22905    3   ERR_PAD:  IF KX$X29.ERR_PAD >= KX_X29_ERR_PAD_LMT
      958    22906    3                THEN
      959    22907    4                   DO;
      960    22908    4                      CALL_FPT = '0'B;
      961    22909    4                      CALL_FPT.CAL$ = X29$;
      962    22910    4                      CALL_FPT.RCV$ = L3$;
      963    22911    4                      CALL_FPT.EVN = %KX_P_EV_VCLST#;
      964    22912    4                      CALL KXP$PACKET ( CALL_FPT )
      965    22913    5                         WHENALTRETURN DO;
      966    22914    5                               CALL KHD$SCREECH ( CALL_FPT.PRM1$->B$SCODE );
      967    22915    5                            END;
      968    22916    4                   END;
      969    22917
      970    22918        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:42   
      971    22919        /*
      972    22920           Indication of break PAD message.
      973    22921        */
      974    22922    3          CASE ( %KX_X29MSGTYP_BRKIND# );
      975    22923
      976    22924        /*
      977    22925           The PAD always sends a 3 byte message:
      978    22926             Indication of break message code ('03'X),
      979    22927             Parameter reference (8),
      980    22928             Parameter value (1-discard output).
      981    22929        */
      982    22930    3             IF FPT_X25.V_.BYTSIZ ~= 3 OR
      983    22931    3                BYT_ARY (BYTX+1) ~= %KX_X3PRMX_DSCOTP#+1 OR BYT_ARY (BYTX+2) ~= 1
      984    22932    3                THEN
      985    22933    4                   DO;
      986    22934                           %WRSYSLOG ( ERRCOD = BAD_IND_BRK_MSG,
      987    22935                           TRMID = "KX$X29.CHN$->KH$CHN.TERMID" );
      988    22953    4                   END;
      989    22954        /*
      990    22955           Convey the break event to VDH if we are already connected to VDH.
      991    22956        */
      992    22957    3             IF KX$X29.VDI$ = ADDR(NIL)
      993    22958    3                THEN
      994    22959    4                   DO;
      995    22960    4                      CALL KXX$SNDX29MSG (%KX_X29MSGTYP_RSMOTP#, KX$X29);
      996    22961    4                      RETURN;
      997    22962    4                   END;
      998    22963    3             IF NOT FPT_X25.PRS.PRM2
      999    22964    3                THEN
     1000    22965    4                   DO;
     1001    22966        /*
     1002    22967          If the call is on VDH schedule thread, then no need for USRENT.
     1003    22968        */
     1004    22969                           %KV$USRENT ( VDI$ = VDI$, DFR$ = Y@DFR4,
     1005    22970                           SCHRSN = %KV_SCHRSN_DFR2 );
             22983    4           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             22983                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:43   
             22984    5           IF NOT VDI$->KV$VDI.BSY THEN DO;
             22985    5              VDI$->KV$VDI.BSY = '1'B;
             22986    5              KV@USRENT.SVDPTR$ = KV$PTR$;
             22987    5              KV$PTR$ = VDI$->KV$VDI.ASNINPPTR$;
             22988    5              END;                         /* ELSE IF ~BSY                       */
             22989    5           ELSE DO;
             22990    5              VDI$->KV$VDI.DFR.USR(2) = '1'B;
             22991    5           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22991                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;
             22992    5              GOTO Y@DFR4;
             22993    5              END;                         /* END IF                             */
     1006    22996    4                   END;
     1007    22997        /*
     1008    22998           Tell the PAD to resume displaying output, then tell VDH about the break.
     1009    22999        */
     1010    23000    3             CALL KXX$SNDX29MSG ( %KX_X29MSGTYP_RSMOTP#, KX$X29 );
     1011    23001    3             KV@VDH_DAT = KV_VDH_DAT;
     1012    23002    3             KV@VDH_DAT.DAT__.ADR$ = ADDR(KX_BFR_BRK);
     1013    23003    3             KV@VDH_DAT.DAT__.DATBYTSIZ = 2;
     1014    23004    3             KV@VDH_DAT.DAT__.BFRBYTSIZ = 2;
     1015    23005    3             CALL KVV$VDI ( KV@VDH_DAT );
     1016    23006    3             IF NOT FPT_X25.PRS.PRM2
     1017    23007    3                THEN
     1018    23008    4                   DO;
     1019    23009        /*
     1020    23010           If the call is on VDH schedule thread, then no need for USREXT.
     1021    23011        */
     1022    23012                           %KV$USREXT ( VDI$ = VDI$ );
             23018    4           KV$VDI.BSY = '0'B;
             23020    4           KV$PTR$ = KV@USRENT.SVDPTR$;
     1023    23022    4                   END;
     1024    23023    3   Y@DFR4:   RETURN;
     1025    23024
     1026    23025
     1027    23026        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:44   
     1028    23027        /*
     1029    23028           The only other valid X.29 messages are:
     1030    23029             Set PAD message,
     1031    23030             Read PAD message,
     1032    23031             Set and Read PAD message,
     1033    23032             Invitation to clear PAD message.
     1034    23033           Or the message code is invalid.
     1035    23034           We do not expect any of these and should clear the circuit.
     1036    23035        */
     1037    23036    3          CASE (ELSE);
     1038    23037                  %WRSYSLOG ( ERRCOD = BAD_PAD_MSG,
     1039    23038                  TRMID = "KX$X29.CHN$->KH$CHN.TERMID",
     1040    23039                  BFR = BYT_ARY,
     1041    23040                  VAL0 = BYTX,
     1042    23041                  VAL1 = FPT_X25.V_.BYTSIZ );
     1043    23059        /*
     1044    23060           Increment the ERR_PAD count per this unknown X.29 message.
     1045    23061           Disconnect VC if exceeds limit.
     1046    23062        */
     1047    23063    3             GOTO ERR_PAD; /*  under case (%KX_X29MSGTYP_ERRPAD#) */
     1048    23064
     1049    23065    3       END; /*  DO CASE  */
     1050    23066
     1051    23067    2   END Y$DECODE_X29;
     1052    23068
     1053    23069        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:45   
     1054    23070
     1055    23071        /*I*
     1056    23072             NAME: Y$COPY
     1057    23073             PURPOSE: When data arrive while the VC is in X.29 setup stage,
     1058    23074                      or while VDH is busy and have to defer processing,
     1059    23075                      buffer it up in a linked list so that they can be
     1060    23076                      handled as soon as setup is done.
     1061    23077        */
     1062    23078    1   Y$COPY: PROC ALTRET;
     1063    23079
     1064    23080    2       KVBSIZ = SIZEW ( FPT_X25 ) + ( FPT_X25.V_.BYTSIZ + 1 ) / 2;
     1065    23081    2       CALL KVB$GET2NSYS ( KVBSIZ, DAT$ )
     1066    23082    2          WHENALTRETURN
     1067    23083    3             DO;
     1068    23084        /*
     1069    23085           If no space available, altret and drop the data on the floor.
     1070    23086        */
     1071    23087    3                ALTRETURN;
     1072    23088    3             END;
     1073    23089    2       KX_STATS_X29.KHSTT.INPBFRBYTUTL = KX_STATS_X29.KHSTT.INPBFRBYTUTL + KVBSIZ*2;
     1074    23090    2       KX$X29_INPBFR.FPT = FPT_X25;
     1075    23091    2       KX$X29_INPBFR.FPT.V_.ADR$ = DAT$;
     1076    23092    2       KX$X29_INPBFR.FPT.V_.BYTX = SIZEW ( FPT_X25 ) * 2;
     1077    23093        /*
     1078    23094           Link this buffer into the chain.
     1079    23095           Notice that KX$X29_INPBFR.FPT.PRM1$ is used as the link pointer,
     1080    23096           and KX$X29_INPBFR.FPT.PRM1 is used to store the buffer word size.
     1081    23097        */
     1082    23098    2       KX$X29_INPBFR.FPT.PRM1 = KVBSIZ;
     1083    23099
     1084    23100    2       IF KX$X29.INPBFR.HED$ = ADDR(NIL)
     1085    23101    2          THEN
     1086    23102    2             KX$X29.INPBFR.HED$ = DAT$;
     1087    23103    2          ELSE
     1088    23104    2             KX$X29.INPBFR.TAL$->KX$X29_INPBFR.FPT.PRM1$ = DAT$;
     1089    23105    2       KX$X29.INPBFR.TAL$ = DAT$;
     1090    23106    2       KX$X29_INPBFR.FPT.PRM1$ = ADDR(NIL);
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:46   
     1091    23107        /*
     1092    23108           Copy the data into the buffer just obtained.
     1093    23109        */
     1094    23110    2       SUBSTR ( DSTR, KX$X29_INPBFR.FPT.V_.BYTX, FPT_X25.V_.BYTSIZ )
     1095    23111    2          = SUBSTR ( IN_STR, FPT_X25.V_.BYTX, FPT_X25.V_.BYTSIZ ) ;
     1096    23112
     1097    23113    2       RETURN;
     1098    23114
     1099    23115    2   END Y$COPY;
     1100    23116
     1101    23117        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:47   
     1102    23118
     1103    23119
     1104    23120    1   END KXX$X29;

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:48   
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:49   
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$X29.

   Procedure KXX$X29 requires 2463 words for executable code.
   Procedure KXX$X29 requires 71 words of local(AUTO) storage.

    No errors detected in file KXX$X29.:E05TSI    .

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:50   

 Object Unit name= KXX$X29                                    File name= KXX$X29.:E05TOU
 UTS= JUL 30 '97 02:34:59.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     93     5D  KXX$X29
    1   Proc  even  none  2463    99F  KXX$X29
    2  RoData even  none    17     11  KXX$X29

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KXX$X29

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0     36  KXX_VDH_DSC
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:51   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       7 KXS$SYSLOG
 yes     yes           Std       1 KXX$TRNOTP
 yes     yes           Std       2 KXX$SNDX29MSG
 yes     yes           Std       2 KVB$GETSYS
 yes     yes           Std       2 KVB$RLSSYS
 yes     yes           Std       1 KXP$PACKET
         yes           Std       0 KVI$RE_DSPINP
 yes     yes           Std       1 KVV$VDI
         yes           Std       1 KHD$SCREECH
         yes           Std       1 KXX$MRK
         yes           Std       1 KXX$RLSCTX
 yes     yes           Std       2 KXX$INTCNC
 yes     yes           Std       2 KVB$GET2NSYS
         yes           Std       1 KXX$X29
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6C_SRCH

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                          r    KH_CHNHI                         r    KH_CHNLOW
     KX_X29_ERR_PAD_LMT                    KX_X3_INT_EQ_BRK                      KX_X3_RST_EQ_BRK
     KX_BFR_BRK                            KX_LINSPDX_X3_TO_CP6                  KX_X29MLTMR
     KX_PM$                                G$JIT$                                KX_STATS_X29
     KV_VDH_EVT_CMPOTP                     KV_VDH_DAT                            KV_VDH_EVT_RLSVDI
     KV_VDH_EVT_RQSOTP                     KA_OTPUN_BLKLMT                  r    G$ROS$
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:52   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*P*
        7        7             NAME: KXX$X29
        8        8             PURPOSE: X.29 - X.25 interface.
        9        9                      All of X.25 calls to X.29 comes here.
       10       10        */
       11       11        /*X*  PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                11         */
       12       12        KXX$X29: PROC ( FPT_X25 );

     12   1 000000  D380 0000 0000  xent KXX$X29         LNJ,B5   X6A_AUTO_1
          1 000003       0047 0001                       DC       71,1

       13       13
       14       14        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:53   
       15       15
       16       16        /*****************************************************************
       17       17        *                                                                *
       18       18        *                           Include files                        *
       19       19        *                                                                *
       20       20        *****************************************************************/
       21       21
       22       22        %INCLUDE LCP_6;
       23     4301        %INCLUDE G_JIT_M;
       24     4566        %INCLUDE KHA_FNC_E;
       25     4666        %INCLUDE KH_MACRO_C;
       26     5409        %INCLUDE KX_DATA_C;
       27     5477        %INCLUDE KX_PERR_C;
       28     5606        %INCLUDE KX_SCODE_C;
       29     5672        %INCLUDE KX_MACROS_M;
       30     6443        %INCLUDE KXX_MACROS_M;
       31     6785        %INCLUDE KA_GLB_E;
       32     6863        %KA_HLTOTP_E;
       33     6872        %INCLUDE KX_EQUS_E;
       34     7311        %INCLUDE KV$GLB;
       35     7730        %INCLUDE KV$GLBCTX;
       36     8175        %INCLUDE KV$VDH;
       37     8606        %INCLUDE KV_GLB_M;
       38     8728        %INCLUDE KV_GLBCNS_E;
       39     9069        %KV_VDH_EVT_ID_E;
       40     9075        %KV_SCHRSN_E;
       41     9082        %KV_DSCRSN_E;
       42     9091        %KV#CQ_HNDID_E;
       43     9096        %INCLUDE KH$CHN;
       44     9218        %INCLUDE KH_CHN;
       45     9258        %INCLUDE K_ID_E;
       46     9308        %K#ENTID_E;
       47     9327        %K#LYRID_E;
       48     9334        %INCLUDE KL_MACRO_C;
       49    12686        %INCLUDE KL_AFCN_C;
       50    12787        %INCLUDE KL_SUPER_C;
       51    15689        %INCLUDE KH$STT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:54   
       52    15719
       53    15720        %INCLUDE CP_6_SUBS;
       54    16260        %INCLUDE KA_GLB;
       55    16337        %INCLUDE KV_ASCCHR_E;
       56    16474        %INCLUDE K_ADDRESS_M;
       57    16977        %INCLUDE KNH_MACRO_C;
       58    17260        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:55   
       59    17261        /*****************************************************************
       60    17262        *                                                                *
       61    17263        *                           Auto                                 *
       62    17264        *                                                                *
       63    17265        *****************************************************************/
       64    17266
       65    17267        %FPT_X25 ( STCLASS = );
       66    17311    1   DCL X29$ PTR;
       67    17312    1   DCL DAT$ PTR;
       68    17313    1   DCL VDI$ PTR;
       69    17314    1   DCL L3$ PTR;
       70    17315    1   DCL Y@BYTSIZ UBIN;
       71    17316    1   DCL BYTX UBIN;
       72    17317    1   DCL PRM_INDEX UBIN;
       73    17318    1   DCL KVBSIZ UBIN;
       74    17319        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = AUTO );
       75    17363        %KV$VDH_DAT ( NAME = KV@VDH_DAT, STCLASS = AUTO );
       76    17443        %KV$VDH_DSC ( NAME = KV@VDH_DSC, STCLASS = AUTO );
       77    17479        %KV@USRENT;
       78    17499    1   DCL START UBIN;
       79    17500    1   DCL NEXT_FE UBIN;
       80    17501    1   DCL INV_MSG_COD UBIN;
       81    17502    1   DCL ERR_TYP UBIN;
       82    17503    1   DCL Y@ERROR UBIN(32);
       83    17504    1   DCL COMPARE BIT(1);
       84    17505    1   DCL LINSPDX UBIN;
       85    17506
       86    17507        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:56   
       87    17508        /*****************************************************************
       88    17509        *                                                                *
       89    17510        *                           Based                                *
       90    17511        *                                                                *
       91    17512        *****************************************************************/
       92    17513
       93    17514        %KX$X29_OTPBFR ( STCLASS = "BASED (DAT$)" );
       94    17537        %KX$X29_INPBFR ( STCLASS = "BASED (DAT$)" );
       95    17601        %KX$X29 ( STCLASS = "BASED (X29$)" );
       96    17641        %KV$VDI ( STCLASS = "BASED (VDI$)" );
       97    17712        %EQU KV_VDI = CHARTEXT('KV$VDI');
       98    17713        %KH$CHN;
       99    17837        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
      100    18251
      101    18252    1   DCL IN_STR CHAR(2000) BASED (FPT_X25.V_.ADR$);
      102    18253    1   DCL BYT_ARY(0:2000) UBIN BYTE CALIGNED BASED (DAT$);
      103    18254    1   DCL DSTR CHAR(2000) BASED ( DAT$ );
      104    18255        %KV$USRPRM;
      105    18306        %KV$STT;
      106    18700        %KV$PTR;
      107    18743        %KX$L2;
      108    19110        %KX$L3 ( STCLASS = "BASED ( L3$ )" );
      109    19513
      110    19514        %VLP_SCODE ( FPTN=B$SCODE, STCLASS=BASED );
      111    19575        %KX$DATA ( STCLASS = BASED );
      112    19595        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:57   
      113    19596        /*****************************************************************
      114    19597        *                                                                *
      115    19598        *                           Constant/Symref                      *
      116    19599        *                                                                *
      117    19600        *****************************************************************/
      118    19601
      119    19602        %KH_CHNDAT;
      120    19620    1   DCL KX_X29_ERR_PAD_LMT UBIN SYMREF;
      121    19621    1   DCL KX_X3_INT_EQ_BRK(0:31) BIT(1) UNAL SYMREF;
      122    19622    1   DCL KX_X3_RST_EQ_BRK(0:31) BIT(1) UNAL SYMREF;
      123    19623    1   DCL KX_X3_IND_EQ_BRK(0:31) BIT(1) UNAL SYMREF;
      124    19624    1   DCL KX_CHAR_FE BIT(8) ALIGNED CONSTANT INIT('FE'X);
      125    19625    1   DCL CHAR_FE REDEF KX_CHAR_FE CHAR(1) ALIGNED;
      126    19626    1   DCL KX_BFR_FEFE BIT(16) ALIGNED CONSTANT INIT('FEFE'X);
      127    19627    1   DCL KX_BFR_BRK BIT(16) ALIGNED SYMREF;
      128    19628    1   DCL KX_LINSPDX_X3_TO_CP6(0:18) UBIN BYTE CALIGNED SYMREF;
      129    19629    1   DCL Y_POWER_OF_2(0:15) UBIN WORD CONSTANT INIT(1,2,4,8,16,32,64,128,
      130    19630    1    256,512,1024,2048,4096,8192,16384,32768);
      131    19631        %KX$X29 ( FPTN = KX_X29, STCLASS = CONSTANT );
      132    19671
      133    19672        %KX_DATA;
      134    20362    1   DCL G$JIT$ PTR SYMREF;
      135    20363        %KV$USRPRM ( NAME = KX_USRPRM, STCLASS = SYMREF );
      136    20414        %KX_STATS_X29;
      137    20755        %KV$VDH_EVT ( ID = KV_VDH_EVT_ID_CMPOTP, NAME = KV_VDH_EVT_CMPOTP, STCLASS = SYMREF
             20755            );
      138    20790        %KV$VDH_DAT ( NAME = KV_VDH_DAT, STCLASS = SYMREF );
      139    20870        %KV$VDH_DSC ( NAME = KXX_VDH_DSC, STCLASS = "CONSTANT SYMDEF",
      140    20871         RSN=%KV_DSCRSN_LINDRP,NO_IO=YES,ALLSSN=YES );
      141    20907        %KV$VDH_EVT ( ID = KV_VDH_EVT_ID_RLSVDI, NAME = KV_VDH_EVT_RLSVDI, STCLASS = SYMREF
             20907            );
      142    20942        %KV$VDH_EVT ( ID = KV_VDH_EVT_ID_RQSOTP, NAME = KV_VDH_EVT_RQSOTP, STCLASS = SYMREF
             20942            );
      143    20977
      144    20978        %KA_MSC;
      145    21000
      146    21001
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:58   
      147    21002        /*
      148    21003           Error logs
      149    21004        */
      150    21005        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      151    21006                      FPTN = INVALID_VC_DCL,
      152    21007                      ERR# = %E_KXX_INVALID_VC_DCL# );
      153    21053        /*E*   ERROR: KXX-E_KXX_INVALID_VC_DCL#-0
      154    21054             MESSAGE: SUPER-defined X.29 virtual circuit is illegal.
      155    21055        */
      156    21056        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      157    21057                      FPTN = INVALID_INTACK,
      158    21058                      ERR# = %E_KXX_INVALID_INTACK# );
      159    21104        /*E*   ERROR: KXX-E_KXX_INVALID_INTACK#-0
      160    21105             MESSAGE: Interrupt confirm packets are illegal for X.29.
      161    21106        */
      162    21107        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      163    21108                      FPTN = UNEXP_PRM_IND,
      164    21109                      ERR# = %E_KXX_UNEXP_PRM_IND# );
      165    21155        /*E*   ERROR: KXX-E_KXX_UNEXP_PRM_IND#-0
      166    21156             MESSAGE: Unexpected parameter indication message.
      167    21157        */
      168    21158        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      169    21159                      FPTN = FAIL_TO_SET_X3,
      170    21160                      ERR# = %E_KXX_FAIL_TO_SET_X3# );
      171    21206        /*E*   ERROR: KXX-E_KXX_FAIL_TO_SET_X3#-0
      172    21207             MESSAGE: Failed to set an X.3 parameter.
      173    21208                      VAL0 is the parameter index,
      174    21209                      and VAL1 is the parameter value in the PAD.
      175    21210        */
      176    21211        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      177    21212                      FPTN = ERROR_PAD_MSG,
      178    21213                      ERR# = %E_KXX_ERROR_PAD_MSG# );
      179    21259        /*E*   ERROR: KXX-E_KXX_ERROR_PAD_MSG#-0
      180    21260             MESSAGE: An error-PAD X.29 message is received.
      181    21261                      VAL0 is the error type and VAL1 is the invalid message code.
      182    21262        */
      183    21263        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:59   
      184    21264                      FPTN = BAD_IND_BRK_MSG,
      185    21265                      ERR# = %E_KXX_BAD_IND_BRK_MSG# );
      186    21311        /*E*   ERROR: KXX-E_KXX_BAD_IND_BRK_MSG#-0
      187    21312             MESSAGE: Unexpected format of indication of break message.
      188    21313                      VAL0 and VAL1 are the 2 bytes after the message
      189    21314                      code.   */
      190    21315        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      191    21316                      FPTN = BAD_PAD_MSG,
      192    21317                      ERR# = %E_KXX_BAD_PAD_MSG# );
      193    21363        /*E*   ERROR: KXX-E_KXX_BAD_PAD_MSG#-0
      194    21364             MESSAGE: X.29 message with bad message code received.
      195    21365                      VAL0 is the byte index of the bad message code.  VAL1 is size.
      196    21366        */
      197    21367        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='X',SEV=%G_WRSYSLOG_SEV_INFO#,
      198    21368                      FPTN = BAD_PRM_IND_MSG,
      199    21369                      ERR# = %E_KXX_BAD_PRM_IND_MSG# );
      200    21415        /*E*   ERROR: KXX-E_KXX_BAD_PRM_IND_MSG#-0
      201    21416             MESSAGE: Bad parameter index in parameter indication message.
      202    21417                      VAL 0 is the parameter index, and VAL1 is the parameter value.
      203    21418        */
      204    21419
      205    21420
      206    21421        %VLP_SCODE (FPTN=Y_NO_X29CTX,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_NO_X29CTX#);
      207    21482        %VLP_SCODE (FPTN=Y_NO_RLS,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_NO_RLS#);
      208    21543        %VLP_SCODE (FPTN=Y_BADOTPQ,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_X29_BADOTPQ#);
      209    21604        %VLP_SCODE (FPTN=Y_BADRMTDCL,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_BADRMTDCL#);
      210    21665        %VLP_SCODE (FPTN=Y_BADX29STT,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_BADX29STT#);
      211    21726        %VLP_SCODE (FPTN=Y_UNKEVT,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_X29_UNKEVT#);
      212    21787        %VLP_SCODE (FPTN=Y_UNKSCHRSN,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_UNKSCHRSN#);
      213    21848        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:60   
      214    21849        /*****************************************************************
      215    21850        *                                                                *
      216    21851        *                           Entry references                     *
      217    21852        *                                                                *
      218    21853        *****************************************************************/
      219    21854
      220    21855    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
      221    21856    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
      222    21857    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      223    21858    1   DCL KHD$SCREECH ENTRY (1) ;
      224    21859    1   DCL KXX$TRNOTP ENTRY(1) ALTRET;
      225    21860    1   DCL KXX$MRK ENTRY(1);
      226    21861    1   DCL KXX$RLSCTX ENTRY(1);
      227    21862    1   DCL KXX$INTCNC ENTRY (2) ALTRET;
      228    21863    1   DCL KXP$PACKET ENTRY(1) ALTRET;
      229    21864    1   DCL KXX$SNDX29MSG ENTRY(2) ALTRET;
      230    21865    1   DCL KVV$VDI ENTRY(1) ALTRET;
      231    21866    1   DCL KVV$INT ENTRY(1) ALTRET;
      232    21867    1   DCL KVI$RE_DSPINP ENTRY;
      233    21868    1   DCL KHA$DVCADM ENTRY(6) ALTRET;
      234    21869    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      235    21870    1   DCL KXS$Q_SYSLOG ENTRY (1);
      236    21871    1   DCL KXS$SYSLOG ENTRY (7);
      237    21872
      238    21873        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:61   
      239    21874
      240    21875        /*****************************************************************
      241    21876        *                                                                *
      242    21877        *                           Procedure                            *
      243    21878        *                                                                *
      244    21879        *****************************************************************/
      245    21880
      246    21881
      247    21882    1       L3$ = FPT_X25.CAL$;

  21882   1 000005  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 000007  DCC6 0001                            LDB,B5   1,B6
          1 000009  DFC7 000C                            STB,B5   L3$,AUTO

      248    21883    1       X29$ = FPT_X25.RCV$;

  21883   1 00000B  CCC6 0003                            LDB,B4   3,B6
          1 00000D  CFC7 0006                            STB,B4   X29$,AUTO

      249    21884    1       IF X29$ ~= ADDR(NIL)

  21884   1 00000F  8DC7 0006                            CMN      X29$,AUTO
          1 000011  0901 0007                            BE       s:21891,PREL

      250    21885    1          THEN
      251    21886    2             DO;

      252    21887    2                VDI$ = KX$X29.VDI$;

  21887   1 000013  BCC4 0002                            LDB,B3   2,B4
          1 000015  BFC7 000A                            STB,B3   VDI$,AUTO

      253    21888    2             END;

  21888   1 000017  0F81 0006                            B        s:21898,PREL

      254    21889    1          ELSE
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:62   
      255    21890    2             DO;

      256    21891    2                VDI$ = ADDR(NIL);

  21891   1 000019  BB80 0000 0000                       LAB,B3   0
          1 00001C  BFC7 000A                            STB,B3   VDI$,AUTO

      257    21892    2             END;

      258    21893
      259    21894        /*
      260    21895           The only legal call to this interface without passing X29$ is for
      261    21896           RMTDCL, opening a new X.29 circuit.
      262    21897        */
      263    21898    1       IF X29$ = ADDR(NIL) AND FPT_X25.EVN ~= %KX_CM_EV_RMTDCL# AND NOT KX$L3.PVC

  21898   1 00001E  8DC7 0006                            CMN      X29$,AUTO
          1 000020  0981 0013                            BNE      s:21908,PREL
          1 000022  E806                                 LDR,R6   ,B6
          1 000023  6D02                                 CMV,R6   2
          1 000024  0901 000F                            BE       s:21908,PREL
          1 000026  82C5 0029                            LB,'0100'X        41,B5
          1 000028       0100
          1 000029  0501 000A                            BBT      s:21908,PREL

      264    21899    1          THEN
      265    21900    2             DO;

      266    21901        /*S* SCREECH_CODE: KXX-S$KX_NO_X29CTX#
      267    21902             MESSAGE: The only call without passing X29 context address
      268    21903                      allowed is for RMTDCL. Any other events are illegal.
      269    21904        */
      270    21905    2                CALL KHD$SCREECH ( Y_NO_X29CTX );

  21905   1 00002B  BB80 0000 0000  02                   LAB,B3   0
          1 00002E  CBF0 0100                            LAB,B4   256,IMO
          1 000030  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:63   
          1 000033       0001                            DC       s:21908,PREL

      271    21906    2             END;

      272    21907
      273    21908    2       DO CASE ( FPT_X25.EVN );

  21908   1 000034  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 000036  B806                                 LDR,R3   ,B6
          1 000037  3D11                                 CMV,R3   17
          1 000038  0281 04D9                            BGE      s:22501,PREL
          1 00003A  A830 0000 0040  01                   LDR,R2   s:21908+12,R3
          1 00003D  83A0 0000 0051  01                   JMP      s:21916,R2
          1 000040       04C1                            DC       s:22501,PREL
          1 000041       0000                            DC       s:21916,PREL
          1 000042       02CC                            DC       s:22262,PREL
          1 000043       0490                            DC       s:22477,PREL
          1 000044       0384                            DC       s:22352,PREL
          1 000045       037B                            DC       s:22343,PREL
          1 000046       04CA                            DC       s:22505,PREL
          1 000047       021D                            DC       s:22172,PREL
          1 000048       04C1                            DC       s:22501,PREL
          1 000049       0022                            DC       s:21950,PREL
          1 00004A       0292                            DC       s:22249,PREL
          1 00004B       0292                            DC       s:22249,PREL
          1 00004C       0027                            DC       s:21963,PREL
          1 00004D       04C1                            DC       s:22501,PREL
          1 00004E       0487                            DC       s:22467,PREL
          1 00004F       04C1                            DC       s:22501,PREL
          1 000050       0369                            DC       s:22323,PREL

      274    21909
      275    21910        /*
      276    21911           EVENT DCL - X.29 should only use remotely declared circuits unless
      277    21912                       it is a permanent VC. Errorlog and return.
      278    21913        */
      279    21914    2          CASE ( %KX_CM_EV_DCL# );
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:64   

      280    21915
      281    21916    2             IF KX$L3.PVC

  21916   1 000051  DCC7 000C                            LDB,B5   L3$,AUTO
          1 000053  82C5 0029                            LB,'0100'X        41,B5
          1 000055       0100
          1 000056  0501 02C6                            BBT      s:22262,PREL

      282    21917    2                THEN
      283    21918    2                   GOTO RMTDCL_ENTRY;
      284    21919    2                ELSE
      285    21920    3                   DO;

      286    21921                           %WRSYSLOG ( ERRCOD = INVALID_VC_DCL,
      287    21922                           TRMID = "L3$ -> KX$L3.CHN$ -> KH$CHN.TERMID");

  21938   1 000058  CCC5 0006                            LDB,B4   6,B5
          1 00005A  BB80 0000 0000                       LAB,B3   0
          1 00005D  BFC7 0040                            STB,B3   FAIL_TO_SET+5,AUTO
          1 00005F  ABC4 0012                            LAB,B2   18,B4
          1 000061  AFC7 003E                            STB,B2   FAIL_TO_SET+3,AUTO
          1 000063  CB80 0000 0038  00                   LAB,B4   INVALID_VC_DCL
          1 000066  CFC7 003C                            STB,B4   FAIL_TO_SET+1,AUTO
          1 000068  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 00006A  CBF0 0300                            LAB,B4   768,IMO
          1 00006C  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          1 00006F       0001                            DC       s:21940,PREL

      288    21940    3                      RETURN;

  21940   1 000070  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      289    21941    3                   END;
      290    21942
      291    21943        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:65   
      292    21944
      293    21945        /*
      294    21946           EVENT DATIN - call Y$DATIN to find out what it is.
      295    21947        */
      296    21948    2          CASE ( %KX_CM_EV_DATIN# );

      297    21949
      298    21950    2             CALL Y$DATIN;

  21950   1 000073  E3C0 04B4                            LNJ,B6   s:0,PREL
          1 000075       0001                            DC       s:21950+3,PREL
          1 000076  0F81 04A4                            B        s:22505,PREL

      299    21951
      300    21952        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:66   
      301    21953
      302    21954        /*
      303    21955           EVENT DATRQS - release transmitted output buffers. Send
      304    21956                          queued messages.
      305    21957        */
      306    21958    2          CASE ( %KX_CM_EV_DATRQS# );

      307    21959
      308    21960        /*
      309    21961           Do we have anything to send ?
      310    21962        */
      311    21963    2             IF KX$X29.SND.HED$ = ADDR(NIL)

  21963   1 000078  DCC7 0006                            LDB,B5   X29$,AUTO
          1 00007A  8DC5 000C                            CMN      12,B5
          1 00007C  0981 0007                            BNE      s:21972,PREL

      312    21964    2                THEN
      313    21965    3                   DO;

      314    21966    3                      KX$X29.RPRDAT = '1'B;

  21966   1 00007E  8945 0016                            LBT,'1000'X       22,B5
  21966   1 000080       1000

      315    21967    3                      RETURN;

  21967   1 000081  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      316    21968    3                   END;
      317    21969        /*
      318    21970           If this is the tail of the chain and is not truncated yet, truncate it now.
      319    21971        */
      320    21972    2             IF VDI$ ~= ADDR(NIL)

  21972   1 000084  8DC7 000A                            CMN      VDI$,AUTO
          1 000086  0901 0160                            BE       s:22118,PREL
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:67   

      321    21973    2                THEN
      322    21974    3                   DO;

      323    21975    3                      IF NOT KX$X29.VDHEXTCAL

  21975   1 000088  82C5 0016                            LB,'0800'X        22,B5
  21975   1 00008A       0800
          1 00008B  0501 002C                            BBT      s:22007,PREL

      324    21976    3                         THEN
      325    21977        /*  make sure we did not get here on the VDHEXT thread */
      326    21978    4                            DO;

      327    21979                                    %KV$USRENT ( VDI$ = VDI$, DFR$ = Y@DFR5,
      328    21980                                    SCHRSN = %KV_SCHRSN_DFR0 );
             21993    4           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             21993                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;

  21993   1 00008D  CCC7 000A                            LDB,B4   VDI$,AUTO
          1 00008F  BCC4 0008                            LDB,B3   8,B4
          1 000091  ACC3 0033                            LDB,B2   51,B3
          1 000093  8AC2 0039                            INC      57,B2
          1 000095  8EC2 0038                            CAD      56,B2

             21994    5           IF NOT VDI$->KV$VDI.BSY THEN DO;

  21994   1 000097  82C4 0019                            LB,'0080'X        25,B4
  21994   1 000099       0080
          1 00009A  0501 0010                            BBT      s:22000,PREL

             21995    5              VDI$->KV$VDI.BSY = '1'B;

  21995   1 00009C  8944 0019                            LBT,'0080'X       25,B4
  21995   1 00009E       0080

             21996    5              KV@USRENT.SVDPTR$ = KV$PTR$;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:68   

  21996   1 00009F  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          1 0000A2  BFC7 002C                            STB,B3   KV@USRENT,AUTO

             21997    5              KV$PTR$ = VDI$->KV$VDI.ASNINPPTR$;

  21997   1 0000A4  ACC4 0006                            LDB,B2   6,B4
          1 0000A6  AF80 0000 0000  xsym                 STB,B2   KV$PTR$

             21998    5              END;                         /* ELSE IF ~BSY                       */

  21998   1 0000A9  0F81 000E                            B        s:22007,PREL

             21999    5           ELSE DO;

             22000    5              VDI$->KV$VDI.DFR.USR(0) = '1'B;

  22000   1 0000AB  8944 0018                            LBT,'8000'X       24,B4
  22000   1 0000AD       8000

             22001    5           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22001                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;

  22001   1 0000AE  BCC4 0008                            LDB,B3   8,B4
          1 0000B0  ACC3 0033                            LDB,B2   51,B3
          1 0000B2  8AC2 003B                            INC      59,B2
          1 0000B4  8EC2 003A                            CAD      58,B2

             22002    5              GOTO Y@DFR5;

  22002   1 0000B6  0F81 01B1                            B        s:22161,PREL

             22003    5              END;                         /* END IF                             */
      329    22006    4                            END;
      330    22007    4                      DO WHILE ( KX$X29.SND.HED$ ~= KX$X29.SND.NXTLOD$ );

  22007   1 0000B8  CCC5 000C                            LDB,B4   12,B5
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:69   
          1 0000BA  CDC5 000E                            CMB,B4   14,B5
          1 0000BC  0901 006A                            BE       s:22027,PREL

      331    22008    4                         DAT$ = KX$X29.SND.HED$;

  22008   1 0000BE  ECC7 0006                            LDB,B6   X29$,AUTO
          1 0000C0  DCC6 000C                            LDB,B5   12,B6
          1 0000C2  DFC7 0008                            STB,B5   DAT$,AUTO

      332    22009    4                         KX$X29.SND.HED$ = KX$X29_OTPBFR.LNK$;

  22009   1 0000C4  CC85                                 LDB,B4   ,B5
          1 0000C5  CFC6 000C                            STB,B4   12,B6

      333    22010    4                         IF DAT$ = KX$X29.SND.TAL$

  22010   1 0000C7  DDC6 0010                            CMB,B5   16,B6
          1 0000C9  0981 0010                            BNE      s:22016,PREL

      334    22011    4                            THEN
      335    22012    5                               DO;

      336    22013    5                                 KX$X29.HLTOTP_ALL = KX$X29.HLTOTPNXTBFR_ALL | KX$X29.
             22013                                           HLTOTP_ALL;

  22013   1 0000CB  E846 0016                            LDR,R6   22,B6
          1 0000CD  E570 C000                            AND,R6   -16384,IMO
          1 0000CF  D846 0015                            LDR,R5   21,B6
          1 0000D1  D570 C000                            AND,R5   -16384,IMO
          1 0000D3  E455                                 OR,R6    R5
          1 0000D4  EAC6 0015                            SRM,R6,'C000'X    21,B6
          1 0000D6       C000

      337    22014    5                                  KX$X29.HLTOTPNXTBFR = '0'B;

  22014   1 0000D7  8846 0016                            LBF,'C000'X       22,B6
  22014   1 0000D9       C000
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:70   

      338    22015    5                               END;

      339    22016    4                         IF KX$X29_OTPBFR.NMBMRK > 0

  22016   1 0000DA  E2C5 0003                            LLH,R6   3,B5
          1 0000DC  6901 000C                            BEZ,R6   s:22022,PREL

      340    22017    4                            THEN
      341    22018    5                               DO;

      342    22019    5                                  KX$X29_OTPBFR.DLT = '0'B;

  22019   1 0000DE  8845 0003                            LBF,'0040'X       3,B5
  22019   1 0000E0       0040

      343    22020    5                                  CALL KXX$MRK ( KX$X29_OTPBFR );

  22020   1 0000E1  BBC7 0008                            LAB,B3   DAT$,AUTO
          1 0000E3  CBF0 0100                            LAB,B4   256,IMO
          1 0000E5  E380 0000 0000  xent                 LNJ,B6   KXX$MRK
          1 0000E8       0001                            DC       s:22022,PREL

      344    22021    5                               END;

      345    22022    4                         Y@BYTSIZ = Y_POWER_OF_2 ( KX$X29_OTPBFR.BYTSIZLOG2 );

  22022   1 0000E9  ECC7 0008                            LDB,B6   DAT$,AUTO
          1 0000EB  B846 0002                            LDR,R3   2,B6
          1 0000ED  304A                                 SOR,R3   10
          1 0000EE  B570 000F                            AND,R3   15,IMO
          1 0000F0  E830 0000 0002  00                   LDR,R6   Y_POWER_OF_2,R3
          1 0000F3  EF47 000E                            STR,R6   Y@BYTSIZ,AUTO

      346    22023    4                         KX$X29.OTPBFRBYTCNT = KX$X29.OTPBFRBYTCNT - Y@BYTSIZ;

  22023   1 0000F5  DCC7 0006                            LDB,B5   X29$,AUTO
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:71   
          1 0000F7  E245 0012                            SUB,R6   18,B5
          1 0000F9  8256                                 NEG      R6
          1 0000FA  EF45 0012                            STR,R6   18,B5

      347    22024    4                         CALL KVB$RLSSYS ( Y@BYTSIZ / 2, DAT$ );

  22024   1 0000FC  D847 000E                            LDR,R5   Y@BYTSIZ,AUTO
          1 0000FE  5041                                 SOR,R5   1
          1 0000FF  DF47 003C                            STR,R5   FAIL_TO_SET+1,AUTO
          1 000101  CBC7 0008                            LAB,B4   DAT$,AUTO
          1 000103  CFC7 003F                            STB,B4   FAIL_TO_SET+4,AUTO
          1 000105  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000107  BFC7 003D                            STB,B3   FAIL_TO_SET+2,AUTO
          1 000109  BBC7 003D                            LAB,B3   FAIL_TO_SET+2,AUTO
          1 00010B  CBF0 0200                            LAB,B4   512,IMO
          1 00010D  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 000110       0001                            DC       s:22025,PREL

      348    22025    4                         KX_STATS_X29.KHSTT.OTPBFRBYTUTL = KX_STATS_X29.KHSTT.
             22025                                  OTPBFRBYTUTL - Y@BYTSIZ;

  22025   1 000111  F847 000E                            LDR,R7   Y@BYTSIZ,AUTO
          1 000113  6C00                                 LDV,R6   0
          1 000114  8480 0000 001E  xsym                 SID      KX_STATS_X29+30
          1 000117  8656                                 CPL      R6
          1 000118  8657                                 CPL      R7
          1 000119  8470 0000 0001                       AID      1,IMO
          1 00011C  8D00 0000 001E  xsym                 SDI      KX_STATS_X29+30

      349    22026    4                      END; /* DO WHILE ( ...HED$ ~= ...NXTLOD$ )  */

  22026   1 00011F  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000121  DCC6 000C                            LDB,B5   12,B6
          1 000123  DDC6 000E                            CMB,B5   14,B6
          1 000125  0981 FF98                            BNE      s:22008,PREL

      350    22027    3   NXT_BFR:           IF KX$X29.SND.HED$ = ADDR(NIL)
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:72   

  22027   1 000127  ECC7 0006            NXT_BFR         LDB,B6   X29$,AUTO
          1 000129  8DC6 000C                            CMN      12,B6
          1 00012B  0981 0009                            BNE      s:22033,PREL

      351    22028    3                         THEN
      352    22029    4                            DO;

      353    22030    4                               KX$X29.SND.TAL$ = ADDR(NIL);

  22030   1 00012D  DB80 0000 0000                       LAB,B5   0
          1 000130  DFC6 0010                            STB,B5   16,B6

      354    22031    4                               KX$X29.RPRDAT = '1'B;

  22031   1 000132  8946 0016                            LBT,'1000'X       22,B6
  22031   1 000134       1000

      355    22032    4                            END;

      356    22033    3                      IF KX$X29.STATE ~= %KX_X29_ST_ENDPHSDSC#

  22033   1 000135  E846 0018                            LDR,R6   24,B6
          1 000137  E570 00FF                            AND,R6   255,IMO
          1 000139  6D06                                 CMV,R6   6
          1 00013A  0901 0065                            BE       s:22091,PREL

      357    22034    3                         THEN
      358    22035    4                            DO;

      359    22036    4                               IF KX$X29.SND.TAL$ = ADDR(NIL)

  22036   1 00013C  8DC6 0010                            CMN      16,B6
          1 00013E  0981 0022                            BNE      s:22059,PREL

      360    22037    4                                  THEN
      361    22038    5                                     DO;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:73   

      362    22039    5                                        IF KV$VDI.RE_DSPINP

  22039   1 000140  DCC7 000A                            LDB,B5   VDI$,AUTO
          1 000142  82C5 0019                            LB,'0010'X        25,B5
          1 000144       0010
          1 000145  0581 000C                            BBF      s:22050,PREL

      363    22040    5                                           THEN
      364    22041    6                                              DO;

      365    22042    6                                                 CALL KVI$RE_DSPINP;

  22042   1 000147  CBF0 0000                            LAB,B4   0,IMO
          1 000149  E380 0000 0000  xent                 LNJ,B6   KVI$RE_DSPINP
          1 00014C       0001                            DC       s:22043,PREL

      366    22043    6                                                 KV$VDI.RE_DSPINP = '0'B;

  22043   1 00014D  ECC7 000A                            LDB,B6   VDI$,AUTO
          1 00014F  8846 0019                            LBF,'0010'X       25,B6
          1 000151       0010

      367    22044    6                                              END;

      368    22045                                             %KV$CMPOTP;
             22050    6           IF KV$VDI.OTPCNDPND THEN DO;

  22050   1 000152  ECC7 000A                            LDB,B6   VDI$,AUTO
          1 000154  E846 001A                            LDR,R6   26,B6
          1 000156  6901 000A                            BEZ,R6   s:22059,PREL

             22051    6              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);

  22051   1 000158  BB80 0000 0002  02                   LAB,B3   +2
          1 00015B  CBF0 0100                            LAB,B4   256,IMO
          1 00015D  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:74   
          1 000160       0001                            DC       s:22059,PREL

             22052    6              END;                         /* END IF                             */

      369    22054    5                                     END;

      370    22055
      371    22056        /*
      372    22057           Check to see if we should unblock.
      373    22058        */
      374    22059    4                               IF ( KX$X29.OTPBFRBYTCNT <= KA_OTPUN_BLKLMT(KV$VDI.
             22059                                        LINSPD) )

  22059   1 000161  ECC7 000A                            LDB,B6   VDI$,AUTO
          1 000163  B2C6 001E                            LLH,R3   30,B6
          1 000165  DCC7 0006                            LDB,B5   X29$,AUTO
          1 000167  E845 0012                            LDR,R6   18,B5
          1 000169  E930 0000 0000  xsym                 CMR,R6   KA_OTPUN_BLKLMT,R3
          1 00016C  0381 0007                            BLE      s:22074,PREL
          1 00016E  CCC5 000C                            LDB,B4   12,B5
          1 000170  CDC5 0010                            CMB,B4   16,B5
          1 000172  0981 0012                            BNE      s:22080,PREL

      375    22060    4                                  OR ( KX$X29.SND.HED$ = KX$X29.SND.TAL$ )
      376    22061    4                                  THEN
      377    22062                                          %KV$RQSOTP ( RQSOTP = YES );
             22074    5           IF NOT KV$VDI.RQSOTP  THEN DO;

  22074   1 000174  82C6 0019                            LB,'0008'X        25,B6
  22074   1 000176       0008
          1 000177  0501 000D                            BBT      s:22080,PREL

             22075    5              KV$VDI.RQSOTP = '1'B;

  22075   1 000179  8946 0019                            LBT,'0008'X       25,B6
  22075   1 00017B       0008

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:75   
             22076    5              CALL KVV$VDI(KV_VDH_EVT_RQSOTP);

  22076   1 00017C  BB80 0000 0004  02                   LAB,B3   +4
          1 00017F  CBF0 0100                            LAB,B4   256,IMO
          1 000181  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 000184       0001                            DC       s:22080,PREL

             22077    5              END;                         /* END IF                             */

      378    22080    4                               IF %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI)

  22080   1 000185  ECC7 000A                            LDB,B6   VDI$,AUTO
          1 000187  82C6 001F                            LB,'0002'X        31,B6
          1 000189       0002
          1 00018A  0581 0015                            BBF      s:22091,PREL
          1 00018C  DCC7 0006                            LDB,B5   X29$,AUTO
          1 00018E  8DC5 000C                            CMN      12,B5
          1 000190  0981 000F                            BNE      s:22091,PREL
          1 000192  82C5 0015                            LB,'C000'X        21,B5
          1 000194       C000
          1 000195  0501 000A                            BBT      s:22091,PREL

      379    22081    4                                 AND KX$X29.SND.HED$ = ADDR(NIL) AND NOT KX$X29.HLTOTP
      380    22082    4                                  THEN
      381    22083    5                                     DO;

      382    22084
      383    22085        /* We are to report to VDH quiescence in ASYNC                                */
      384    22086        /* so we can complete the releasing of VDI.                                   */
      385    22087
      386    22088    5                                        CALL KVV$VDI(KV_VDH_EVT_RLSVDI) ;

  22088   1 000197  BB80 0000 0006  02                   LAB,B3   +6
          1 00019A  CBF0 0100                            LAB,B4   256,IMO
          1 00019C  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 00019F       0001                            DC       s:22091,PREL

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:76   
      387    22089    5                                     END;

      388    22090    4                            END;

      389    22091    3                      DAT$ = KX$X29.SND.NXTLOD$;

  22091   1 0001A0  ECC7 0006                            LDB,B6   X29$,AUTO
          1 0001A2  DCC6 000E                            LDB,B5   14,B6
          1 0001A4  DFC7 0008                            STB,B5   DAT$,AUTO

      390    22092    3                      IF DAT$ = ADDR(NIL)

  22092   1 0001A6  8DC7 0008                            CMN      DAT$,AUTO
          1 0001A8  0901 00A7                            BE       s:22146,PREL

      391    22093    3                         THEN
      392    22094    3                            GOTO EXT_RET;
      393    22095    3                      IF DAT$ = KV$VDI.OTPBFR_.ADR$

  22095   1 0001AA  CCC7 000A                            LDB,B4   VDI$,AUTO
          1 0001AC  DDC4 000A                            CMB,B5   10,B4
          1 0001AE  0981 0009                            BNE      s:22099,PREL

      394    22096    3                         THEN
      395    22097    3                            CALL KXX$TRNOTP ( KV$VDI ) ALTRET (EXT_RET);

  22097   1 0001B0  BBC7 000A                            LAB,B3   VDI$,AUTO
          1 0001B2  CBF0 0100                            LAB,B4   256,IMO
          1 0001B4  E380 0000 0000  xent                 LNJ,B6   KXX$TRNOTP
          1 0001B7       0099                            DC       s:22146,PREL

      396    22098
      397    22099    3                      IF NOT KV$VDI.PHSDSC AND NOT KV$VDI.INTPHSDSC

  22099   1 0001B8  ECC7 000A                            LDB,B6   VDI$,AUTO
          1 0001BA  82C6 0019                            LB,'0040'X        25,B6
          1 0001BC       0040
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:77   
          1 0001BD  0501 0029                            BBT      s:22118,PREL
          1 0001BF  82C6 001D                            LB,'0800'X        29,B6
          1 0001C1       0800
          1 0001C2  0501 0024                            BBT      s:22118,PREL

      398    22100    3                         THEN
      399    22101    4                            DO;

      400    22102    4                               IF KX$X29.HLTOTP

  22102   1 0001C4  DCC7 0006                            LDB,B5   X29$,AUTO
          1 0001C6  82C5 0015                            LB,'C000'X        21,B5
          1 0001C8       C000
          1 0001C9  0501 0086                            BBT      s:22146,PREL

      401    22103    4                                  THEN
      402    22104    4                                     GOTO EXT_RET;
      403    22105    4                               IF KX$X29_OTPBFR.HLTOTP_ALL

  22105   1 0001CB  CCC7 0008                            LDB,B4   DAT$,AUTO
          1 0001CD  82C4 0002                            LB,'C000'X        2,B4
          1 0001CF       C000
          1 0001D0  0581 0016                            BBF      s:22118,PREL

      404    22106    4                                  THEN
      405    22107    5                                     DO;

      406    22108    5                                        IF DAT$ = KX$X29.SND.HED$

  22108   1 0001D2  CDC5 000C                            CMB,B4   12,B5
          1 0001D4  0981 0010                            BNE      s:22114,PREL

      407    22109    5                                           THEN
      408    22110    6                                              DO;

      409    22111    6                                                 KX$X29.HLTOTP_ALL = KX$X29.HLTOTP_ALL
             22111                                                          | KX$X29_OTPBFR.HLTOTP_ALL;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:78   

  22111   1 0001D6  E845 0015                            LDR,R6   21,B5
          1 0001D8  E570 C000                            AND,R6   -16384,IMO
          1 0001DA  D844 0002                            LDR,R5   2,B4
          1 0001DC  D570 C000                            AND,R5   -16384,IMO
          1 0001DE  E455                                 OR,R6    R5
          1 0001DF  EAC5 0015                            SRM,R6,'C000'X    21,B5
          1 0001E1       C000

      410    22112    6                                                 KX$X29_OTPBFR.HLTOTP_ALL = '0'B;

  22112   1 0001E2  8844 0002                            LBF,'C000'X       2,B4
  22112   1 0001E4       C000

      411    22113    6                                              END;

      412    22114    5                                        GOTO EXT_RET;

  22114   1 0001E5  0F81 006A                            B        s:22146,PREL

      413    22115    5                                     END;
      414    22116    4                            END;
      415    22117    3                   END;
      416    22118    2             DAT$ = KX$X29.SND.NXTLOD$;

  22118   1 0001E7  ECC7 0006                            LDB,B6   X29$,AUTO
          1 0001E9  DCC6 000E                            LDB,B5   14,B6
          1 0001EB  DFC7 0008                            STB,B5   DAT$,AUTO

      417    22119    2             IF DAT$ = ADDR(NIL)

  22119   1 0001ED  8DC7 0008                            CMN      DAT$,AUTO
          1 0001EF  0981 0007                            BNE      s:22125,PREL

      418    22120    2                THEN
      419    22121    3                   DO;

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:79   
      420    22122    3                      KX$X29.RPRDAT = '1'B;

  22122   1 0001F1  8946 0016                            LBT,'1000'X       22,B6
  22122   1 0001F3       1000

      421    22123    3                      RETURN;

  22123   1 0001F4  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      422    22124    3                   END;
      423    22125    2             KX$X29.SND.NXTLOD$ = KX$X29_OTPBFR.LNK$;

  22125   1 0001F7  CC85                                 LDB,B4   ,B5
          1 0001F8  CFC6 000E                            STB,B4   14,B6

      424    22126    2             IF KX$X29_OTPBFR.BYTCNT = 0 AND DAT$ ~= KV$VDI.OTPBFR_.ADR$

  22126   1 0001FA  82C5 0002                            LB,'03FF'X        2,B5
  22126   1 0001FC       03FF
          1 0001FD  0501 003F                            BBT      s:22142,PREL
          1 0001FF  BCC7 000A                            LDB,B3   VDI$,AUTO
          1 000201  DDC3 000A                            CMB,B5   10,B3
          1 000203  0901 0039                            BE       s:22142,PREL

      425    22127    2                THEN
      426    22128    3                   DO;

      427    22129        /*
      428    22130           This is a buffer with (at least) one marker but no actual data.
      429    22131           Everything in front of this buffer ( which has only markers )
      430    22132           has been sent. Let's report done to VDH and release this buffer.
      431    22133        */
      432    22134    3                      KX$X29_OTPBFR.DLT = '0'B;

  22134   1 000205  8845 0003                            LBF,'0040'X       3,B5
  22134   1 000207       0040

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:80   
      433    22135    3                      CALL KXX$MRK ( KX$X29_OTPBFR );

  22135   1 000208  BBC7 0008                            LAB,B3   DAT$,AUTO
          1 00020A  CBF0 0100                            LAB,B4   256,IMO
          1 00020C  E380 0000 0000  xent                 LNJ,B6   KXX$MRK
          1 00020F       0001                            DC       s:22136,PREL

      434    22136    3                      KX$X29.SND.HED$ = KX$X29_OTPBFR.LNK$;

  22136   1 000210  ECC7 0008                            LDB,B6   DAT$,AUTO
          1 000212  DC86                                 LDB,B5   ,B6
          1 000213  CCC7 0006                            LDB,B4   X29$,AUTO
          1 000215  DFC4 000C                            STB,B5   12,B4

      435    22137    3                      Y@BYTSIZ = Y_POWER_OF_2 ( KX$X29_OTPBFR.BYTSIZLOG2 );

  22137   1 000217  B846 0002                            LDR,R3   2,B6
          1 000219  304A                                 SOR,R3   10
          1 00021A  B570 000F                            AND,R3   15,IMO
          1 00021C  E830 0000 0002  00                   LDR,R6   Y_POWER_OF_2,R3
          1 00021F  EF47 000E                            STR,R6   Y@BYTSIZ,AUTO

      436    22138    3                      KX$X29.OTPBFRBYTCNT = KX$X29.OTPBFRBYTCNT - Y@BYTSIZ;

  22138   1 000221  E244 0012                            SUB,R6   18,B4
          1 000223  8256                                 NEG      R6
          1 000224  EF44 0012                            STR,R6   18,B4

      437    22139    3                      CALL KVB$RLSSYS ( Y@BYTSIZ / 2, DAT$ );

  22139   1 000226  D847 000E                            LDR,R5   Y@BYTSIZ,AUTO
          1 000228  5041                                 SOR,R5   1
          1 000229  DF47 003C                            STR,R5   FAIL_TO_SET+1,AUTO
          1 00022B  DBC7 0008                            LAB,B5   DAT$,AUTO
          1 00022D  DFC7 003F                            STB,B5   FAIL_TO_SET+4,AUTO
          1 00022F  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000231  BFC7 003D                            STB,B3   FAIL_TO_SET+2,AUTO
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:81   
          1 000233  BBC7 003D                            LAB,B3   FAIL_TO_SET+2,AUTO
          1 000235  CBF0 0200                            LAB,B4   512,IMO
          1 000237  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 00023A       0001                            DC       s:22140,PREL

      438    22140    3                      GOTO NXT_BFR;

  22140   1 00023B  0F81 FEEB                            B        s:22027,PREL

      439    22141    3                   END;
      440    22142    2             FPT_X25.V_.ADR$ = DAT$;

  22142   1 00023D  BCC7 0004                            LDB,B3   @FPT_X25,AUTO
          1 00023F  DFC3 000B                            STB,B5   11,B3

      441    22143    2             FPT_X25.V_.BYTX = LENGTHC ( KX$X29_OTPBFR );

  22143   1 000241  6C08                                 LDV,R6   8
          1 000242  EF43 000D                            STR,R6   13,B3

      442    22144    2             FPT_X25.V_.BYTSIZ = KX$X29_OTPBFR.BYTCNT;

  22144   1 000244  D845 0002                            LDR,R5   2,B5
          1 000246  D570 03FF                            AND,R5   1023,IMO
          1 000248  DF43 000E                            STR,R5   14,B3

      443    22145    2             FPT_X25.PRS.PRM1 = KX$X29_OTPBFR.Q;

  22145   1 00024A  C845 0003                            LDR,R4   3,B5
          1 00024C  4008                                 SOL,R4   8
          1 00024D  CAC3 000F                            SRM,R4,'8000'X    15,B3
          1 00024F       8000

      444    22146    2   EXT_RET:  IF VDI$ ~= ADDR(NIL) AND NOT KX$X29.VDHEXTCAL

  22146   1 000250  8DC7 000A            EXT_RET         CMN      VDI$,AUTO
          1 000252  0901 0012                            BE       s:22160,PREL
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:82   
          1 000254  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000256  82C6 0016                            LB,'0800'X        22,B6
          1 000258       0800
          1 000259  0501 000B                            BBT      s:22160,PREL

      445    22147    2                THEN
      446    22148    3                   DO;

      447    22149                           %KV$USREXT;
             22155    3           KV$VDI.BSY = '0'B;

  22155   1 00025B  DCC7 000A                            LDB,B5   VDI$,AUTO
          1 00025D  8845 0019                            LBF,'0080'X       25,B5
          1 00025F       0080

             22157    3           KV$PTR$ = KV@USRENT.SVDPTR$;

  22157   1 000260  CCC7 002C                            LDB,B4   KV@USRENT,AUTO
          1 000262  CF80 0000 0000  xsym                 STB,B4   KV$PTR$

      448    22159    3                   END;

      449    22160    2             RETURN;

  22160   1 000265  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      450    22161    2   Y@DFR5:   KX$X29.RPRDAT = '1'B;

  22161   1 000268  8945 0016            Y@DFR5          LBT,'1000'X       22,B5
  22161   1 00026A       1000

      451    22162    2             RETURN;

  22162   1 00026B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      452    22163
      453    22164        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:83   
      454    22165
      455    22166        /*
      456    22167           EVENT INT - interrupt packet received. See if this is the way
      457    22168                       the remote PAD say BREAK to us.
      458    22169        */
      459    22170    2          CASE ( %KX_CM_EV_INT# );

      460    22171
      461    22172    2             IF ( KX$X29.STATE = %KX_X29_ST_NRM# AND

  22172   1 00026E  DCC7 0006                            LDB,B5   X29$,AUTO
          1 000270  E845 0018                            LDR,R6   24,B5
          1 000272  E570 00FF                            AND,R6   255,IMO
          1 000274  6D04                                 CMV,R6   4
          1 000275  0981 006B                            BNE      s:22222,PREL
          1 000277  92C5 001E                            LLH,R1   30,B5
          1 000279  8290 0000 0000  xsym                 LB       KX_X3_INT_EQ_BRK,R1
          1 00027C  0581 0064                            BBF      s:22222,PREL

      462    22173    2                KX_X3_INT_EQ_BRK(KX$X29.X3PRM(%KX_X3PRMX_ACTBRK#)) )
      463    22174    2                THEN
      464    22175    3                   DO;

      465    22176        /*
      466    22177           Tell the PAD to resume displaying output.
      467    22178        */
      468    22179    3   BRK2VDH:           CALL KXX$SNDX29MSG ( %KX_X29MSGTYP_RSMOTP#, KX$X29 );

  22179   1 00027E  EBF0 0007            BRK2VDH         LAB,B6   7,IMO
          1 000280  DCC7 0006                            LDB,B5   X29$,AUTO
          1 000282  DFC7 003E                            STB,B5   FAIL_TO_SET+3,AUTO
          1 000284  EFC7 003C                            STB,B6   FAIL_TO_SET+1,AUTO
          1 000286  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000288  CBF0 0200                            LAB,B4   512,IMO
          1 00028A  E380 0000 0000  xent                 LNJ,B6   KXX$SNDX29MSG
          1 00028D       0001                            DC       s:22194,PREL

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:84   
      469    22180                           %KV$USRENT ( VDI$ = VDI$, DFR$ = Y@DFR7,
      470    22181                           SCHRSN = %KV_SCHRSN_DFR2 );
             22194    3           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             22194                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;

  22194   1 00028E  ECC7 000A                            LDB,B6   VDI$,AUTO
          1 000290  DCC6 0008                            LDB,B5   8,B6
          1 000292  CCC5 0033                            LDB,B4   51,B5
          1 000294  8AC4 0039                            INC      57,B4
          1 000296  8EC4 0038                            CAD      56,B4

             22195    4           IF NOT VDI$->KV$VDI.BSY THEN DO;

  22195   1 000298  82C6 0019                            LB,'0080'X        25,B6
  22195   1 00029A       0080
          1 00029B  0501 0010                            BBT      s:22201,PREL

             22196    4              VDI$->KV$VDI.BSY = '1'B;

  22196   1 00029D  8946 0019                            LBT,'0080'X       25,B6
  22196   1 00029F       0080

             22197    4              KV@USRENT.SVDPTR$ = KV$PTR$;

  22197   1 0002A0  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0002A3  DFC7 002C                            STB,B5   KV@USRENT,AUTO

             22198    4              KV$PTR$ = VDI$->KV$VDI.ASNINPPTR$;

  22198   1 0002A5  CCC6 0006                            LDB,B4   6,B6
          1 0002A7  CF80 0000 0000  xsym                 STB,B4   KV$PTR$

             22199    4              END;                         /* ELSE IF ~BSY                       */

  22199   1 0002AA  0F81 000E                            B        s:22207,PREL

             22200    4           ELSE DO;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:85   

             22201    4              VDI$->KV$VDI.DFR.USR(2) = '1'B;

  22201   1 0002AC  8946 0018                            LBT,'2000'X       24,B6
  22201   1 0002AE       2000

             22202    4           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22202                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;

  22202   1 0002AF  DCC6 0008                            LDB,B5   8,B6
          1 0002B1  CCC5 0033                            LDB,B4   51,B5
          1 0002B3  8AC4 003B                            INC      59,B4
          1 0002B5  8EC4 003A                            CAD      58,B4

             22203    4              GOTO Y@DFR7;

  22203   1 0002B7  0F81 0029                            B        s:22222,PREL

             22204    4              END;                         /* END IF                             */
      471    22207    3                      KV@VDH_DAT = KV_VDH_DAT;

  22207   1 0002B9  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_DAT
          1 0002BC  2C00                                 LDV,R2   0
          1 0002BD  6C10                                 LDV,R6   16
          1 0002BE  BB87                                 LAB,B3   ,AUTO
          1 0002BF  3C44                                 LDV,R3   68
          1 0002C0  0008                                 MMM

      472    22208    3                      KV@VDH_DAT.DAT__.ADR$ = ADDR(KX_BFR_BRK);

  22208   1 0002C1  EB80 0000 0000  xsym                 LAB,B6   KX_BFR_BRK
          1 0002C4  EFC7 0023                            STB,B6   KV@VDH_DAT+1,AUTO

      473    22209    3                      KV@VDH_DAT.DAT__.DATBYTSIZ = 2;

  22209   1 0002C6  6C02                                 LDV,R6   2
          1 0002C7  EF47 0026                            STR,R6   KV@VDH_DAT+4,AUTO
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:86   

      474    22210    3                      KV@VDH_DAT.DAT__.BFRBYTSIZ = 2;

  22210   1 0002C9  EF47 0027                            STR,R6   KV@VDH_DAT+5,AUTO

      475    22211    3                      CALL KVV$VDI ( KV@VDH_DAT );

  22211   1 0002CB  DBC7 0022                            LAB,B5   KV@VDH_DAT,AUTO
          1 0002CD  DFC7 003C                            STB,B5   FAIL_TO_SET+1,AUTO
          1 0002CF  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 0002D1  CBF0 0100                            LAB,B4   256,IMO
          1 0002D3  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 0002D6       0001                            DC       s:22218,PREL

      476    22212                           %KV$USREXT ( VDI$ = VDI$ );
             22218    3           KV$VDI.BSY = '0'B;

  22218   1 0002D7  ECC7 000A                            LDB,B6   VDI$,AUTO
          1 0002D9  8846 0019                            LBF,'0080'X       25,B6
          1 0002DB       0080

             22220    3           KV$PTR$ = KV@USRENT.SVDPTR$;

  22220   1 0002DC  DCC7 002C                            LDB,B5   KV@USRENT,AUTO
          1 0002DE  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

      477    22222    3                   END;

  22210   1 0002E1  0F81 0239            Y@DFR7          B        s:22505,PREL

      478    22223    2   Y@DFR7:   ;
      479    22224        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:87   
      480    22225
      481    22226        /*
      482    22227           EVENTs INTACK, INTNAK - errorlog and reset, since X.29 never send
      483    22228                                           out any interrupt packets.
      484    22229        */
      485    22230    2          CASE ( %KX_CM_EV_INTACK#, %KX_CM_EV_INTNAK# );

      486    22231
      487    22232                  %WRSYSLOG ( ERRCOD = INVALID_INTACK,
      488    22233                  TRMID = "KX$X29.CHN$ -> KH$CHN.TERMID" );

  22249   1 0002E3  DCC7 0006                            LDB,B5   X29$,AUTO
          1 0002E5  CCC5 0004                            LDB,B4   4,B5
          1 0002E7  BB80 0000 0000                       LAB,B3   0
          1 0002EA  BFC7 0040                            STB,B3   FAIL_TO_SET+5,AUTO
          1 0002EC  ABC4 0012                            LAB,B2   18,B4
          1 0002EE  AFC7 003E                            STB,B2   FAIL_TO_SET+3,AUTO
          1 0002F0  CB80 0000 003A  00                   LAB,B4   INVALID_INTACK
          1 0002F3  CFC7 003C                            STB,B4   FAIL_TO_SET+1,AUTO
          1 0002F5  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 0002F7  CBF0 0300                            LAB,B4   768,IMO
          1 0002F9  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          1 0002FC       0001                            DC       s:22251,PREL

      489    22251    2             CALL_FPT = '0'B;

  22251   1 0002FD  5C20                                 LDV,R5   32
          1 0002FE  0021                                 ALR      ;
          1 0002FF       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000301       4007 0012                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

      490    22252    2             CALL_FPT.CAL$ = X29$;

  22252   1 000303  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000305  437F                                 CSYNC    s:22252+1,SPREL
          1 000306  EFC7 0013                            STB,B6   CALL_FPT+1,AUTO

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:88   
      491    22253    2             CALL_FPT.RCV$ = L3$;

  22253   1 000308  DCC7 000C                            LDB,B5   L3$,AUTO
          1 00030A  DFC7 0015                            STB,B5   CALL_FPT+3,AUTO

      492    22254    2             CALL_FPT.EVN = %KX_P_EV_VCRST#;

  22254   1 00030C  6C0A                                 LDV,R6   10
          1 00030D  EF47 0012                            STR,R6   CALL_FPT,AUTO

      493    22255    2             CALL KXP$PACKET ( CALL_FPT ) ALTRET ( SCREECH_KXP );

  22255   1 00030F  CBC7 0012                            LAB,B4   CALL_FPT,AUTO
          1 000311  CFC7 003C                            STB,B4   FAIL_TO_SET+1,AUTO
          1 000313  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000315  CBF0 0100                            LAB,B4   256,IMO
          1 000317  E380 0000 0000  xent                 LNJ,B6   KXP$PACKET
          1 00031A       0204                            DC       s:22507,PREL
          1 00031B  0F81 01FF                            B        s:22505,PREL

      494    22256
      495    22257        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:89   
      496    22258
      497    22259        /*
      498    22260           EVENT RMTDCL - opening a new X.29 circuit.
      499    22261        */
      500    22262    2          CASE ( %KX_CM_EV_RMTDCL# );

  22254   1                              RMTDCL_ENTRY    null
      501    22263
      502    22264    2   RMTDCL_ENTRY: ;
      503    22265    2             IF X29$ ~= ADDR(NIL)

  22265   1 00031D  8DC7 0006            RMTDCL_ENTRY    CMN      X29$,AUTO
          1 00031F  0901 000A                            BE       s:22280,PREL

      504    22266    2                THEN
      505    22267    3                   DO;

      506    22268    3                      CALL KHD$SCREECH ( Y_BADRMTDCL );

  22268   1 000321  BB80 0000 0008  02                   LAB,B3   +8
          1 000324  CBF0 0100                            LAB,B4   256,IMO
          1 000326  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 000329       0001                            DC       s:22280,PREL

      507    22269    3                   END;

      508    22270        /*
      509    22271           Report the connect attempt to handler administration.
      510    22272        */
      511    22273        /*N* For now, use the TERMID of the frame level channel table.
      512    22274        */
      513    22275        /*N*     CALL KHA$DVCADM ( %KHA_FNC_CONNECT, Y@ERROR, KX$L3.L2$->KX$L2.CHN$->KH$CHN
             22275         )
      514    22276                     ALTRET ( CLRVC );            */
      515    22277        /* GET MEMORY FROM THE CENTRAL MEMORY MANAGER FOR THE X.29                    */
      516    22278        /* CONTEXT BLOCK.                                                        */
      517    22279
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:90   
      518    22280    2             CALL KVB$GETSYS(SIZEW(KX$X29),X29$)

  22280   1 00032A  EBF0 0024                            LAB,B6   36,IMO
          1 00032C  DBC7 0006                            LAB,B5   X29$,AUTO
          1 00032E  DFC7 003E                            STB,B5   FAIL_TO_SET+3,AUTO
          1 000330  EFC7 003C                            STB,B6   FAIL_TO_SET+1,AUTO
          1 000332  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000334  CBF0 0200                            LAB,B4   512,IMO
          1 000336  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          1 000339       0003                            DC       s:22282,PREL
          1 00033A  0F81 0024                            B        s:22292,PREL

      519    22281    2                WHENALTRETURN
      520    22282    3                   DO;

      521    22283    3   CLRVC:             CALL_FPT = '0'B;

  22283   1 00033C  5C20                 CLRVC           LDV,R5   32
          1 00033D  0021                                 ALR      ;
          1 00033E       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000340       4007 0012                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

      522    22284    3                      CALL_FPT.RCV$ = L3$;

  22284   1 000342  ECC7 000C                            LDB,B6   L3$,AUTO
          1 000344  437F                                 CSYNC    s:22284+1,SPREL
          1 000345  EFC7 0015                            STB,B6   CALL_FPT+3,AUTO

      523    22285    3                      CALL_FPT.EVN = %KX_P_EV_VCLST#;

  22285   1 000347  6C09                                 LDV,R6   9
          1 000348  EF47 0012                            STR,R6   CALL_FPT,AUTO

      524    22286    3                      CALL_FPT.PRM1 = %KX_DIAG_CALPRB#; /* call setup problem  */

  22286   1 00034A  4C40                                 LDV,R4   64
          1 00034B  CF47 0017                            STR,R4   CALL_FPT+5,AUTO
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:91   

      525    22287    3                      CALL_FPT.PRS.PRM1 = '1'B;

  22287   1 00034D  8947 0021                            LBT,'8000'X       CALL_FPT+15,AUTO
  22287   1 00034F       8000

      526    22288    3                      CALL KXP$PACKET ( CALL_FPT ) ALTRET ( SCREECH_KXP );

  22288   1 000350  DBC7 0012                            LAB,B5   CALL_FPT,AUTO
          1 000352  DFC7 003C                            STB,B5   FAIL_TO_SET+1,AUTO
          1 000354  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000356  CBF0 0100                            LAB,B4   256,IMO
          1 000358  E380 0000 0000  xent                 LNJ,B6   KXP$PACKET
          1 00035B       01C3                            DC       s:22507,PREL

      527    22289    3                      RETURN;

  22289   1 00035C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      528    22290    3                   END;
      529    22291
      530    22292    2             KX_STATS_X29.KHSTT.CTXBYTUTL = SIZEC(KX$X29) + KX_STATS_X29.KHSTT.
             22292                      CTXBYTUTL;

  22292   1 00035F  8C80 0000 0020  xsym                 LDI      KX_STATS_X29+32
          1 000362  8470 0000 0048                       AID      72,IMO
          1 000365  8D00 0000 0020  xsym                 SDI      KX_STATS_X29+32

      531    22293    2             KX_STATS_X29.CIRCUITS = KX_STATS_X29.CIRCUITS + 1;

  22293   1 000368  8A80 0000 004B  xsym                 INC      KX_STATS_X29+75
          1 00036B  8E80 0000 004A  xsym                 CAD      KX_STATS_X29+74

      532    22294
      533    22295
      534    22296        /*
      535    22297           Always pass back the ctx$ and data timer period in the fpt.
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:92   
      536    22298        */
      537    22299    2             FPT_X25.RCV$ = X29$;

  22299   1 00036E  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000370  DCC7 0004                            LDB,B5   @FPT_X25,AUTO
          1 000372  EFC5 0003                            STB,B6   3,B5

      538    22300    2             FPT_X25.PRM2 = KX_X29MLTMR;

  22300   1 000374  E800 0000 0000  xsym                 LDR,R6   KX_X29MLTMR
          1 000377  EF45 0006                            STR,R6   6,B5

      539    22301    2             FPT_X25.PRM1 = %KX_L3_TOACT_RSTRTR#;

  22301   1 000379  5C03                                 LDV,R5   3
          1 00037A  DF45 0005                            STR,R5   5,B5

      540    22302
      541    22303        /* WE GOT THE MEMORY FOR THE X29 CONTEXT BLOCK*                        */
      542    22304    2             KX$X29 = KX_X29;

  22304   1 00037C  AB80 0000 0000  00                   LAB,B2   KX_CHAR_FE
          1 00037F  2C24                                 LDV,R2   36
          1 000380  6C48                                 LDV,R6   72
          1 000381  BCC7 0006                            LDB,B3   X29$,AUTO
          1 000383  3C00                                 LDV,R3   0
          1 000384  0008                                 MMM

      543    22305    2             KX$X29.STATE = %KX_X29_ST_VCUP#;

  22305   1 000385  6C01                                 LDV,R6   1
          1 000386  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000388  EAC6 0018                            SRM,R6,'00FF'X    24,B6
          1 00038A       00FF

      544    22306    2             KX$X29.CHN$ = FPT_X25.PRM2$;

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:93   
  22306   1 00038B  CCC5 0009                            LDB,B4   9,B5
          1 00038D  CFC6 0004                            STB,B4   4,B6

      545    22307    2             KX$X29.CHN$->KH$CHN.TERMID.TTYP = %KLTY_TTY#;

  22307   1 00038F  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000391  CCC6 0004                            LDB,B4   4,B6
          1 000393  4C02                                 LDV,R4   2
          1 000394  C7C4 0012                            STH,R4   18,B4

      546    22308    2             KX$X29.L3$ = FPT_X25.CAL$;

  22308   1 000396  CCC5 0001                            LDB,B4   1,B5
          1 000398  CFC6 0006                            STB,B4   6,B6

      547    22309
      548    22310    2             CALL_FPT = '0'B;

  22310   1 00039A  5C20                                 LDV,R5   32
          1 00039B  0021                                 ALR      ;
          1 00039C       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 00039E       4007 0012                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

      549    22311    2             CALL_FPT.CAL$ = X29$;

  22311   1 0003A0  ECC7 0006                            LDB,B6   X29$,AUTO
          1 0003A2  437F                                 CSYNC    s:22311+1,SPREL
          1 0003A3  EFC7 0013                            STB,B6   CALL_FPT+1,AUTO

      550    22312    2             CALL_FPT.RCV$ = L3$;

  22312   1 0003A5  CCC7 000C                            LDB,B4   L3$,AUTO
          1 0003A7  CFC7 0015                            STB,B4   CALL_FPT+3,AUTO

      551    22313    2             CALL_FPT.EVN = %KX_P_EV_VCUP#;

  22313   1 0003A9  3C04                                 LDV,R3   4
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:94   
          1 0003AA  BF47 0012                            STR,R3   CALL_FPT,AUTO

      552    22314    2             CALL KXP$PACKET ( CALL_FPT ) ALTRET ( SCREECH_KXP );

  22314   1 0003AC  BBC7 0012                            LAB,B3   CALL_FPT,AUTO
          1 0003AE  BFC7 003C                            STB,B3   FAIL_TO_SET+1,AUTO
          1 0003B0  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 0003B2  CBF0 0100                            LAB,B4   256,IMO
          1 0003B4  E380 0000 0000  xent                 LNJ,B6   KXP$PACKET
          1 0003B7       0167                            DC       s:22507,PREL
          1 0003B8  0F81 0162                            B        s:22505,PREL

      553    22315
      554    22316        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:95   
      555    22317        /*
      556    22318            EVENT RSTIND - packet level received a reset packet. See if
      557    22319                           the remote PAD is telling us of a break.
      558    22320        */
      559    22321    2          CASE ( %KX_CM_EV_RSTIND# );

      560    22322
      561    22323    2             IF ( KX$X29.STATE = %KX_X29_ST_NRM# AND

  22323   1 0003BA  DCC7 0006                            LDB,B5   X29$,AUTO
          1 0003BC  E845 0018                            LDR,R6   24,B5
          1 0003BE  E570 00FF                            AND,R6   255,IMO
          1 0003C0  6D04                                 CMV,R6   4
          1 0003C1  0981 0008                            BNE      s:22323+16,PREL
          1 0003C3  92C5 001E                            LLH,R1   30,B5
          1 0003C5  8290 0000 0000  xsym                 LB       KX_X3_RST_EQ_BRK,R1
          1 0003C8  0501 FEB5                            BBT      s:22175,PREL
          1 0003CA  0F81 0150                            B        s:22505,PREL

      562    22324    2                KX_X3_RST_EQ_BRK(KX$X29.X3PRM(%KX_X3PRMX_ACTBRK#)) )
      563    22325    2                THEN
      564    22326    2                   GOTO BRK2VDH;   /* in case ( int ) */
      565    22327
      566    22328        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:96   
      567    22329        /*
      568    22330           EVENT VCRST - VC reset, nothing to do.
      569    22331        */
      570    22332    2          CASE ( %KX_CM_EV_VCRST# );

      571    22333
      572    22334        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:97   
      573    22335
      574    22336        /*
      575    22337           EVENT VCDWN - VC down. This should not be reported for a remotely
      576    22338                         declared VC, so we'll just return. But if it is from a
      577    22339                         PVC, we'll have to treat it as a VCLST
      578    22340        */
      579    22341    2          CASE ( %KX_CM_EV_VCDWN# );

      580    22342
      581    22343    2             IF KX$L3.PVC

  22343   1 0003CC  DCC7 000C                            LDB,B5   L3$,AUTO
          1 0003CE  82C5 0029                            LB,'0100'X        41,B5
          1 0003D0       0100
          1 0003D1  0501 0003                            BBT      s:22352,PREL
          1 0003D3  0F81 0147                            B        s:22505,PREL

      582    22344    2                THEN
      583    22345    2                   GOTO VCLST_ENTRY;
      584    22346        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:98   
      585    22347
      586    22348        /*
      587    22349           EVENT VCLST - VC lost. Does not matter which end decided to drop
      588    22350                         the VC. Change state and call VDH_DSC with line-drop as reason.
      589    22351        */
      590    22352    2          CASE ( %KX_CM_EV_VCLST# );

  22343   1                              VCLST_ENTRY     null
      591    22353    2   VCLST_ENTRY: ;
      592    22354    2             IF KX$X29.STATE = %KX_X29_ST_BGNPHSDSC#

  22354   1 0003D5  DCC7 0006            VCLST_ENTRY     LDB,B5   X29$,AUTO
          1 0003D7  E845 0018                            LDR,R6   24,B5
          1 0003D9  E570 00FF                            AND,R6   255,IMO
          1 0003DB  6D05                                 CMV,R6   5
          1 0003DC  0981 0008                            BNE      s:22360,PREL

      593    22355    2                THEN
      594    22356    3                   DO;

      595    22357    3                      KX$X29.STATE = %KX_X29_ST_ENDPHSDSC#;

  22357   1 0003DE  5C06                                 LDV,R5   6
          1 0003DF  DAC5 0018                            SRM,R5,'00FF'X    24,B5
          1 0003E1       00FF

      596    22358    3                      RETURN;

  22358   1 0003E2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      597    22359    3                   END;
      598    22360    2             IF KX$X29.VDI$ = ADDR(NIL)

  22360   1 0003E5  8DC5 0002                            CMN      2,B5
          1 0003E7  0981 0016                            BNE      s:22376,PREL

      599    22361    2                THEN
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:99   
      600    22362        /*
      601    22363           The VC was cleared because we cannot get VDI.
      602    22364        */
      603    22365    3                   DO;

      604    22366    3                      IF KX$X29.STATE = %KX_X29_ST_SETRED#

  22366   1 0003E9  6D03                                 CMV,R6   3
          1 0003EA  0981 0010                            BNE      s:22372,PREL

      605    22367    3                         THEN
      606    22368    4                            DO;

      607    22369    4                               CALL KXX$RLSCTX ( KX$X29 );

  22369   1 0003EC  BBC7 0006                            LAB,B3   X29$,AUTO
          1 0003EE  CBF0 0100                            LAB,B4   256,IMO
          1 0003F0  E380 0000 0000  xent                 LNJ,B6   KXX$RLSCTX
          1 0003F3       0001                            DC       s:22370,PREL

      608    22370    4                               FPT_X25.RCV$ = ADDR(NIL);

  22370   1 0003F4  EB80 0000 0000                       LAB,B6   0
          1 0003F7  DCC7 0004                            LDB,B5   @FPT_X25,AUTO
          1 0003F9  EFC5 0003                            STB,B6   3,B5

      609    22371    4                            END;

      610    22372    3                      RETURN;

  22372   1 0003FB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      611    22373    3                   END;
      612    22374    2                ELSE
      613    22375    3                   DO;

      614    22376    3                      IF NOT KX$X29.VDHEXTCAL
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:100  

  22376   1 0003FE  82C5 0016                            LB,'0800'X        22,B5
  22376   1 000400       0800
          1 000401  0501 002C                            BBT      s:22407,PREL

      615    22377    3                         THEN
      616    22378    4                            DO;

      617    22379                                    %KV$USRENT ( VDI$ = VDI$, DFR$ = Y@DFR2,
      618    22380                                    SCHRSN = %KV_SCHRSN_DFR3 );
             22393    4           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             22393                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;

  22393   1 000403  CCC7 000A                            LDB,B4   VDI$,AUTO
          1 000405  BCC4 0008                            LDB,B3   8,B4
          1 000407  ACC3 0033                            LDB,B2   51,B3
          1 000409  8AC2 0039                            INC      57,B2
          1 00040B  8EC2 0038                            CAD      56,B2

             22394    5           IF NOT VDI$->KV$VDI.BSY THEN DO;

  22394   1 00040D  82C4 0019                            LB,'0080'X        25,B4
  22394   1 00040F       0080
          1 000410  0501 0010                            BBT      s:22400,PREL

             22395    5              VDI$->KV$VDI.BSY = '1'B;

  22395   1 000412  8944 0019                            LBT,'0080'X       25,B4
  22395   1 000414       0080

             22396    5              KV@USRENT.SVDPTR$ = KV$PTR$;

  22396   1 000415  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          1 000418  BFC7 002C                            STB,B3   KV@USRENT,AUTO

             22397    5              KV$PTR$ = VDI$->KV$VDI.ASNINPPTR$;

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:101  
  22397   1 00041A  ACC4 0006                            LDB,B2   6,B4
          1 00041C  AF80 0000 0000  xsym                 STB,B2   KV$PTR$

             22398    5              END;                         /* ELSE IF ~BSY                       */

  22398   1 00041F  0F81 000E                            B        s:22407,PREL

             22399    5           ELSE DO;

             22400    5              VDI$->KV$VDI.DFR.USR(3) = '1'B;

  22400   1 000421  8944 0018                            LBT,'1000'X       24,B4
  22400   1 000423       1000

             22401    5           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22401                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;

  22401   1 000424  BCC4 0008                            LDB,B3   8,B4
          1 000426  ACC3 0033                            LDB,B2   51,B3
          1 000428  8AC2 003B                            INC      59,B2
          1 00042A  8EC2 003A                            CAD      58,B2

             22402    5              GOTO Y@DFR2;

  22402   1 00042C  0F81 00A9                            B        s:22453,PREL

             22403    5              END;                         /* END IF                             */
      619    22406    4                            END;
      620    22407    3                      KV$VDI.PHSDSC = '1'B;

  22407   1 00042E  CCC7 000A                            LDB,B4   VDI$,AUTO
          1 000430  8944 0019                            LBT,'0040'X       25,B4
          1 000432       0040

      621    22408    3                      KV@VDH_DSC = KXX_VDH_DSC;

  22408   1 000433  8C80 0000 0036  00                   LDI      KXX_VDH_DSC
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:102  
          1 000436  8D47 002A                            SDI      KV@VDH_DSC,AUTO

      622    22409    3                      CALL KVV$VDI ( KV@VDH_DSC );

  22409   1 000438  BBC7 002A                            LAB,B3   KV@VDH_DSC,AUTO
          1 00043A  BFC7 003C                            STB,B3   FAIL_TO_SET+1,AUTO
          1 00043C  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 00043E  CBF0 0100                            LAB,B4   256,IMO
          1 000440  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 000443       0001                            DC       s:22410,PREL

      623    22410    3                      KX$X29.STATE = %KX_X29_ST_ENDPHSDSC#;

  22410   1 000444  6C06                                 LDV,R6   6
          1 000445  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000447  EAC6 0018                            SRM,R6,'00FF'X    24,B6
          1 000449       00FF

      624    22411    3                      KV$VDI.OTPBFR_.BYTSIZ = 0;

  22411   1 00044A  DCC7 000A                            LDB,B5   VDI$,AUTO
          1 00044C  8745 000D                            CL       13,B5

      625    22412    3                      KV$VDI.OTPBFR_.BYTX = LENGTHC ( KX$X29_OTPBFR );

  22412   1 00044E  5C08                                 LDV,R5   8
          1 00044F  DF45 000C                            STR,R5   12,B5

      626    22413    3                      KV$VDI.OTPBFR_.ADR$ = ADDR (NIL);

  22413   1 000451  CB80 0000 0000                       LAB,B4   0
          1 000454  CFC5 000A                            STB,B4   10,B5

      627    22414                           /* takes care of purging output */
      628    22415    4                      DO WHILE ( KX$X29.SND.HED$ ~= ADDR(NIL) );

  22415   1 000456  0F81 0046                            B        s:22427,PREL
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:103  

      629    22416    4                         DAT$ = KX$X29.SND.HED$;

  22416   1 000458  ECC7 0006                            LDB,B6   X29$,AUTO
          1 00045A  DCC6 000C                            LDB,B5   12,B6
          1 00045C  DFC7 0008                            STB,B5   DAT$,AUTO

      630    22417    4                         KX$X29.SND.HED$ = KX$X29_OTPBFR.LNK$;

  22417   1 00045E  CC85                                 LDB,B4   ,B5
          1 00045F  CFC6 000C                            STB,B4   12,B6

      631    22418    4                         IF KX$X29_OTPBFR.NMBMRK > 0

  22418   1 000461  E2C5 0003                            LLH,R6   3,B5
          1 000463  6901 000C                            BEZ,R6   s:22424,PREL

      632    22419    4                            THEN
      633    22420    5                               DO;

      634    22421    5                                  KX$X29_OTPBFR.DLT = '1'B;

  22421   1 000465  8945 0003                            LBT,'0040'X       3,B5
  22421   1 000467       0040

      635    22422    5                                  CALL KXX$MRK ( KX$X29_OTPBFR );

  22422   1 000468  BBC7 0008                            LAB,B3   DAT$,AUTO
          1 00046A  CBF0 0100                            LAB,B4   256,IMO
          1 00046C  E380 0000 0000  xent                 LNJ,B6   KXX$MRK
          1 00046F       0001                            DC       s:22424,PREL

      636    22423    5                               END;

      637    22424    4                         Y@BYTSIZ = Y_POWER_OF_2 ( KX$X29_OTPBFR.BYTSIZLOG2 );

  22424   1 000470  ECC7 0008                            LDB,B6   DAT$,AUTO
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:104  
          1 000472  B846 0002                            LDR,R3   2,B6
          1 000474  304A                                 SOR,R3   10
          1 000475  B570 000F                            AND,R3   15,IMO
          1 000477  E830 0000 0002  00                   LDR,R6   Y_POWER_OF_2,R3
          1 00047A  EF47 000E                            STR,R6   Y@BYTSIZ,AUTO

      638    22425    4                         CALL KVB$RLSSYS ( Y@BYTSIZ / 2, DAT$ );

  22425   1 00047C  6041                                 SOR,R6   1
          1 00047D  EF47 003C                            STR,R6   FAIL_TO_SET+1,AUTO
          1 00047F  DBC7 0008                            LAB,B5   DAT$,AUTO
          1 000481  DFC7 003F                            STB,B5   FAIL_TO_SET+4,AUTO
          1 000483  CBC7 003C                            LAB,B4   FAIL_TO_SET+1,AUTO
          1 000485  CFC7 003D                            STB,B4   FAIL_TO_SET+2,AUTO
          1 000487  BBC7 003D                            LAB,B3   FAIL_TO_SET+2,AUTO
          1 000489  CBF0 0200                            LAB,B4   512,IMO
          1 00048B  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 00048E       0001                            DC       s:22426,PREL

      639    22426    4                         KX_STATS_X29.KHSTT.OTPBFRBYTUTL = KX_STATS_X29.KHSTT.
             22426                                  OTPBFRBYTUTL - Y@BYTSIZ;

  22426   1 00048F  F847 000E                            LDR,R7   Y@BYTSIZ,AUTO
          1 000491  6C00                                 LDV,R6   0
          1 000492  8480 0000 001E  xsym                 SID      KX_STATS_X29+30
          1 000495  8656                                 CPL      R6
          1 000496  8657                                 CPL      R7
          1 000497  8470 0000 0001                       AID      1,IMO
          1 00049A  8D00 0000 001E  xsym                 SDI      KX_STATS_X29+30

      640    22427    4                      END; /*  DO WHILE ...  */

  22427   1 00049D  ECC7 0006                            LDB,B6   X29$,AUTO
          1 00049F  8DC6 000C                            CMN      12,B6
          1 0004A1  0981 FFB6                            BNE      s:22416,PREL

      641    22428    3                      KX$X29.OTPBFRBYTCNT = 0;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:105  

  22428   1 0004A3  8746 0012                            CL       18,B6

      642    22429
      643    22430                           %KV$RQSOTP ( RQSOTP = YES );
             22442    4           IF NOT KV$VDI.RQSOTP  THEN DO;

  22442   1 0004A5  DCC7 000A                            LDB,B5   VDI$,AUTO
          1 0004A7  82C5 0019                            LB,'0008'X        25,B5
          1 0004A9       0008
          1 0004AA  0501 000D                            BBT      s:22448,PREL

             22443    4              KV$VDI.RQSOTP = '1'B;

  22443   1 0004AC  8945 0019                            LBT,'0008'X       25,B5
  22443   1 0004AE       0008

             22444    4              CALL KVV$VDI(KV_VDH_EVT_RQSOTP);

  22444   1 0004AF  BB80 0000 0004  02                   LAB,B3   +4
          1 0004B2  CBF0 0100                            LAB,B4   256,IMO
          1 0004B4  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 0004B7       0001                            DC       s:22448,PREL

             22445    4              END;                         /* END IF                             */

      644    22448    3                      IF %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI)

  22448   1 0004B8  ECC7 000A                            LDB,B6   VDI$,AUTO
          1 0004BA  82C6 001F                            LB,'0002'X        31,B6
          1 0004BC       0002
          1 0004BD  0581 000A                            BBF      s:22453,PREL

      645    22449    3                         THEN
      646    22450        /* We are to report to VDH quiescence in ASYNC                                */
      647    22451        /* so we can complete the releasing of VDI.                                   */
      648    22452    3                            CALL KVV$VDI(KV_VDH_EVT_RLSVDI) ;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:106  

  22452   1 0004BF  BB80 0000 0006  02                   LAB,B3   +6
          1 0004C2  CBF0 0100                            LAB,B4   256,IMO
          1 0004C4  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 0004C7       0001                            DC       s:22453,PREL

      649    22453    3                      KX$X29.SND.NXTLOD$ = ADDR(NIL);

  22453   1 0004C8  EB80 0000 0000                       LAB,B6   0
          1 0004CB  DCC7 0006                            LDB,B5   X29$,AUTO
          1 0004CD  EFC5 000E                            STB,B6   14,B5

      650    22454    3                      KX$X29.SND.TAL$ = ADDR(NIL);

  22454   1 0004CF  CB80 0000 0000                       LAB,B4   0
          1 0004D2  CFC5 0010                            STB,B4   16,B5

      651    22455    3                      GOTO EXT_RET;

  22455   1 0004D4  0F81 FD7B                            B        s:22146,PREL

  22453   1 0004D6  0F81 0044            Y@DFR2          B        s:22505,PREL

      652    22456
      653    22457    3                   END;
      654    22458    2   Y@DFR2:   ;
      655    22459        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:107  
      656    22460        /*
      657    22461           EVENT RLSL3 - L3 context is about to go away. We still have to wait
      658    22462                         until the disconnect procedure with VDH is done. Just
      659    22463                         clear the L3$.
      660    22464        */
      661    22465    2          CASE ( %KX_CM_EV_RLSL3# );

      662    22466
      663    22467    2             KX$X29.L3$ = ADDR(NIL);

  22467   1 0004D8  DB80 0000 0000                       LAB,B5   0
          1 0004DB  CCC7 0006                            LDB,B4   X29$,AUTO
          1 0004DD  DFC4 0006                            STB,B5   6,B4
          1 0004DF  0F81 003B                            B        s:22505,PREL

      664    22468        /*N* Some more code may be needed.  */
      665    22469        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:108  
      666    22470
      667    22471        /*
      668    22472           EVENT VCUP - VC established. It is time to get the X.3 profile.
      669    22473        */
      670    22474
      671    22475    2          CASE ( %KX_CM_EV_VCUP# );

      672    22476
      673    22477    2             IF KX$X29.STATE ~= %KX_X29_ST_VCUP#

  22477   1 0004E1  DCC7 0006                            LDB,B5   X29$,AUTO
          1 0004E3  E845 0018                            LDR,R6   24,B5
          1 0004E5  E570 00FF                            AND,R6   255,IMO
          1 0004E7  6D01                                 CMV,R6   1
          1 0004E8  0901 000A                            BE       s:22486,PREL

      674    22478    2                THEN
      675    22479    3                   DO;

      676    22480        /*S* SCREECH_CODE: KXX-S$KX_BADX29STT#
      677    22481             MESSAGE: X29 should not be in this state with the current event.
      678    22482        */
      679    22483    3                      CALL KHD$SCREECH ( Y_BADX29STT );

  22483   1 0004EA  BB80 0000 000A  02                   LAB,B3   +10
          1 0004ED  CBF0 0100                            LAB,B4   256,IMO
          1 0004EF  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 0004F2       0001                            DC       s:22486,PREL

      680    22484    3                   END;

      681    22485
      682    22486    2             KX$X29.STATE = %KX_X29_ST_INIT_RED#;

  22486   1 0004F3  6C02                                 LDV,R6   2
          1 0004F4  ECC7 0006                            LDB,B6   X29$,AUTO
          1 0004F6  EAC6 0018                            SRM,R6,'00FF'X    24,B6
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:109  
          1 0004F8       00FF

      683    22487        /*
      684    22488           First thing we do after circuit establishment is to get the
      685    22489           X.3 profile from the PAD.
      686    22490        */
      687    22491    2             CALL KXX$SNDX29MSG ( %KX_X29MSGTYP_REDX3#, KX$X29 );

  22491   1 0004F9  DBF0 0004                            LAB,B5   4,IMO
          1 0004FB  EFC7 003E                            STB,B6   FAIL_TO_SET+3,AUTO
          1 0004FD  DFC7 003C                            STB,B5   FAIL_TO_SET+1,AUTO
          1 0004FF  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000501  CBF0 0200                            LAB,B4   512,IMO
          1 000503  E380 0000 0000  xent                 LNJ,B6   KXX$SNDX29MSG
          1 000506       0001                            DC       s:22492,PREL

      688    22492    2             KX$X29.WAT4PRM = KX$X29.WAT4PRM + 1;

  22492   1 000507  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000509  E846 0015                            LDR,R6   21,B6
          1 00050B  EA70 0100                            ADD,R6   256,IMO
          1 00050D  EAC6 0015                            SRM,R6,'0700'X    21,B6
          1 00050F       0700
          1 000510  0F81 000A                            B        s:22505,PREL

      689    22493        /*
      690    22494           any other events - screech
      691    22495        */
      692    22496    2          CASE ( ELSE );

      693    22497
      694    22498        /*S* SCREECH_CODE: KXX-S$KX_X29_UNKEVT#
      695    22499             MESSAGE: Packet called X29 with an unknown event.
      696    22500        */
      697    22501    2             CALL KHD$SCREECH ( Y_UNKEVT );

  22501   1 000512  BB80 0000 000C  02                   LAB,B3   +12
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:110  
          1 000515  CBF0 0100                            LAB,B4   256,IMO
          1 000517  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 00051A       0001                            DC       s:22505,PREL

      698    22502
      699    22503    2       END; /* DO CASE */

      700    22504
      701    22505    1       RETURN;

  22505   1 00051B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      702    22506
      703    22507    1   SCREECH_KXP: CALL KHD$SCREECH ( CALL_FPT.PRM1$->B$SCODE );

  22507   1 00051E  BBC7 0019            SCREECH_KXP     LAB,B3   CALL_FPT+7,AUTO
          1 000520  CBF0 0100                            LAB,B4   256,IMO
          1 000522  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 000525       0001                            DC       s:22507+8,PREL
          1 000526  0F81 0475                            B        s:23120,PREL

      704    22508        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:111  
      705    22509
      706    22510
      707    22511    1   Y$DATIN: PROC;

  22511   1 000528  EFC7 0036            Y$DATIN         STB,B6   LINSPDX+1,AUTO

      708    22512
      709    22513        /*I*
      710    22514             NAME: Y$DATIN
      711    22515             PURPOSE: To decode the incoming message and act according to
      712    22516                      the current state.
      713    22517        */
      714    22518
      715    22519    2       IF NOT FPT_X25.PRS.PRM1 /* no Q-bit. Normal X.25 data packet */

  22519   1 00052A  DCC7 0004                            LDB,B5   @FPT_X25,AUTO
          1 00052C  89C5 000F                            CMZ      15,B5
          1 00052E  0801 0131                            BAL      s:22646,PREL

      716    22520    2          THEN
      717    22521    3             DO CASE ( KX$X29.STATE );

  22521   1 000530  CCC7 0006                            LDB,B4   X29$,AUTO
          1 000532  B844 0018                            LDR,R3   24,B4
          1 000534  B570 00FF                            AND,R3   255,IMO
          1 000536  3D07                                 CMV,R3   7
          1 000537  0281 011D                            BGE      s:22639,PREL
          1 000539  A830 0000 053F  01                   LDR,R2   s:22521+15,R3
          1 00053C  83A0 0000 0546  01                   JMP      s:22525,R2
          1 00053F       010F                            DC       s:22639,PREL
          1 000540       010F                            DC       s:22639,PREL
          1 000541       010A                            DC       s:22629,PREL
          1 000542       010A                            DC       s:22629,PREL
          1 000543       0000                            DC       s:22525,PREL
          1 000544       0118                            DC       s:22641,PREL
          1 000545       0118                            DC       s:22641,PREL

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:112  
      718    22522
      719    22523    3                CASE ( %KX_X29_ST_NRM# );

      720    22524        /* If VDI$ is nil, ignore the input. */
      721    22525    3                   IF VDI$ = ADDR(NIL) THEN RETURN;

  22525   1 000546  8DC7 000A                            CMN      VDI$,AUTO
          1 000548  0981 0005                            BNE      s:22531,PREL

  22525   1 00054A  ECC7 0036                            LDB,B6   LINSPDX+1,AUTO
          1 00054C  C3C6 0001                            LNJ,B4   1,B6

      722    22526
      723    22527        /*
      724    22528           'FE'X is the control character introducer to VDH. So we have to
      725    22529           double up any 'FE'X characters in the input buffer.
      726    22530        */
      727    22531    3                   IF NOT FPT_X25.PRS.PRM2

  22531   1 00054E  82C5 000F                            LB,'4000'X        15,B5
  22531   1 000550       4000
          1 000551  0501 002C                            BBT      s:22566,PREL

      728    22532    3                      THEN
      729    22533    4                         DO;

      730    22534        /*
      731    22535           If this call is on the VDH schedule thread, then no need for USRENT.
      732    22536        */
      733    22537                                 %KV$USRENT ( VDI$ = VDI$, DFR$ = Y@DFR3,
      734    22538                                 SCHRSN = %KV_SCHRSN_DFR1 );
             22551    4           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             22551                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;

  22551   1 000553  BCC7 000A                            LDB,B3   VDI$,AUTO
          1 000555  ACC3 0008                            LDB,B2   8,B3
          1 000557  9CC2 0033                            LDB,B1   51,B2
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:113  
          1 000559  8AC1 0039                            INC      57,B1
          1 00055B  8EC1 0038                            CAD      56,B1

             22552    5           IF NOT VDI$->KV$VDI.BSY THEN DO;

  22552   1 00055D  82C3 0019                            LB,'0080'X        25,B3
  22552   1 00055F       0080
          1 000560  0501 0010                            BBT      s:22558,PREL

             22553    5              VDI$->KV$VDI.BSY = '1'B;

  22553   1 000562  8943 0019                            LBT,'0080'X       25,B3
  22553   1 000564       0080

             22554    5              KV@USRENT.SVDPTR$ = KV$PTR$;

  22554   1 000565  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000568  EFC7 002C                            STB,B6   KV@USRENT,AUTO

             22555    5              KV$PTR$ = VDI$->KV$VDI.ASNINPPTR$;

  22555   1 00056A  ACC3 0006                            LDB,B2   6,B3
          1 00056C  AF80 0000 0000  xsym                 STB,B2   KV$PTR$

             22556    5              END;                         /* ELSE IF ~BSY                       */

  22556   1 00056F  0F81 000E                            B        s:22566,PREL

             22557    5           ELSE DO;

             22558    5              VDI$->KV$VDI.DFR.USR(1) = '1'B;

  22558   1 000571  8943 0018                            LBT,'4000'X       24,B3
  22558   1 000573       4000

             22559    5           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22559                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:114  

  22559   1 000574  ECC3 0008                            LDB,B6   8,B3
          1 000576  ACC6 0033                            LDB,B2   51,B6
          1 000578  8AC2 003B                            INC      59,B2
          1 00057A  8EC2 003A                            CAD      58,B2

             22560    5              GOTO Y@DFR3;

  22560   1 00057C  0F81 00D3                            B        s:22629,PREL

             22561    5              END;                         /* END IF                             */
      735    22564    4                         END;
      736    22565
      737    22566    3                   START = 0;

  22566   1 00057E  8747 002E                            CL       START,AUTO

      738    22567    4                   DO WHILE ( START < FPT_X25.V_.BYTSIZ );

  22567   1 000580  E847 002E                            LDR,R6   START,AUTO
          1 000582  E945 000E                            CMR,R6   14,B5
          1 000584  0281 0090                            BGE      s:22589,PREL

      739    22568    4                      CALL INDEX ( NEXT_FE, CHAR_FE, SUBSTR(IN_STR,FPT_X25.V_.BYTX,
             22568                               FPT_X25.V_.BYTSIZ), START );

  22568   1 000586  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 000588  DCC6 000B                            LDB,B5   11,B6
          1 00058A  E846 000D                            LDR,R6   13,B6
          1 00058C  D846 000E                            LDR,R5   14,B6
          1 00058E  DF47 003C                            STR,R5   FAIL_TO_SET+1,AUTO
          1 000590  D247 002E                            SUB,R5   START,AUTO
          1 000592  EA47 002E                            ADD,R6   START,AUTO
          1 000594  C847 003C                            LDR,R4   FAIL_TO_SET+1,AUTO
          1 000596  CF47 002F                            STR,R4   NEXT_FE,AUTO
          1 000598  B800 0000 000E  02                   LDR,R3   +14
          1 00059B  EBB0 0000 0000  01                   LAB,B6   s:12,R3
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:115  
          1 00059E  DF47 003D                            STR,R5   FAIL_TO_SET+2,AUTO
          1 0005A0  EF47 003E                            STR,R6   FAIL_TO_SET+3,AUTO
          1 0005A2  DFC7 003F                            STB,B5   FAIL_TO_SET+4,AUTO
          1 0005A4  AB80 0000 0000  00                   LAB,B2   KX_CHAR_FE
          1 0005A7  2C00                                 LDV,R2   0
          1 0005A8  6C01                                 LDV,R6   1
          1 0005A9  BB85                                 LAB,B3   ,B5
          1 0005AA  B847 003E                            LDR,R3   FAIL_TO_SET+3,AUTO
          1 0005AC  F855                                 LDR,R7   R5
          1 0005AD  9BC7 003C                            LAB,B1   FAIL_TO_SET+1,AUTO
          1 0005AF  1C0A                                 LDV,R1   10
          1 0005B0  5C0C                                 LDV,R5   12
          1 0005B1  D380 0000 0000  xent                 LNJ,B5   X6C_SRCH
          1 0005B4  EA47 002E                            ADD,R6   START,AUTO
          1 0005B6  EF47 002F                            STR,R6   NEXT_FE,AUTO

      740    22569    4                      IF NEXT_FE ~= START

  22569   1 0005B8  E847 002F                            LDR,R6   NEXT_FE,AUTO
          1 0005BA  E947 002E                            CMR,R6   START,AUTO
          1 0005BC  0901 0027                            BE       s:22578,PREL

      741    22570    4                         THEN
      742    22571    5                            DO;

      743    22572    5                               KV@VDH_DAT = KV_VDH_DAT;

  22572   1 0005BE  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_DAT
          1 0005C1  2C00                                 LDV,R2   0
          1 0005C2  6C10                                 LDV,R6   16
          1 0005C3  BB87                                 LAB,B3   ,AUTO
          1 0005C4  3C44                                 LDV,R3   68
          1 0005C5  0008                                 MMM

      744    22573    5                               KV@VDH_DAT.DAT__.ADR$ = FPT_X25.V_.ADR$;

  22573   1 0005C6  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:116  
          1 0005C8  DCC6 000B                            LDB,B5   11,B6
          1 0005CA  DFC7 0023                            STB,B5   KV@VDH_DAT+1,AUTO

      745    22574    5                               KV@VDH_DAT.DAT__.BYTX = FPT_X25.V_.BYTX + START;

  22574   1 0005CC  E846 000D                            LDR,R6   13,B6
          1 0005CE  EA47 002E                            ADD,R6   START,AUTO
          1 0005D0  EF47 0025                            STR,R6   KV@VDH_DAT+3,AUTO

      746    22575    5                               KV@VDH_DAT.DAT__.DATBYTSIZ = NEXT_FE - START;

  22575   1 0005D2  D847 002F                            LDR,R5   NEXT_FE,AUTO
          1 0005D4  D247 002E                            SUB,R5   START,AUTO
          1 0005D6  DF47 0026                            STR,R5   KV@VDH_DAT+4,AUTO

      747    22576    5                               CALL KVV$VDI ( KV@VDH_DAT );

  22576   1 0005D8  CBC7 0022                            LAB,B4   KV@VDH_DAT,AUTO
          1 0005DA  CFC7 003C                            STB,B4   FAIL_TO_SET+1,AUTO
          1 0005DC  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 0005DE  CBF0 0100                            LAB,B4   256,IMO
          1 0005E0  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 0005E3       0001                            DC       s:22578,PREL

      748    22577    5                            END;

      749    22578    4                      IF NEXT_FE < FPT_X25.V_.BYTSIZ

  22578   1 0005E4  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 0005E6  E847 002F                            LDR,R6   NEXT_FE,AUTO
          1 0005E8  E946 000E                            CMR,R6   14,B6
          1 0005EA  0281 001F                            BGE      s:22587,PREL

      750    22579    4                         THEN
      751    22580    5                            DO;

      752    22581    5                               KV@VDH_DAT = KV_VDH_DAT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:117  

  22581   1 0005EC  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_DAT
          1 0005EF  2C00                                 LDV,R2   0
          1 0005F0  6C10                                 LDV,R6   16
          1 0005F1  BB87                                 LAB,B3   ,AUTO
          1 0005F2  3C44                                 LDV,R3   68
          1 0005F3  0008                                 MMM

      753    22582    5                               KV@VDH_DAT.DAT__.ADR$ = ADDR(KX_BFR_FEFE);

  22582   1 0005F4  DB80 0000 0001  00                   LAB,B5   KX_BFR_FEFE
          1 0005F7  DFC7 0023                            STB,B5   KV@VDH_DAT+1,AUTO

      754    22583    5                               KV@VDH_DAT.DAT__.DATBYTSIZ = 2;

  22583   1 0005F9  6C02                                 LDV,R6   2
          1 0005FA  EF47 0026                            STR,R6   KV@VDH_DAT+4,AUTO

      755    22584    5                               KV@VDH_DAT.DAT__.BFRBYTSIZ = 2;

  22584   1 0005FC  EF47 0027                            STR,R6   KV@VDH_DAT+5,AUTO

      756    22585    5                               CALL KVV$VDI ( KV@VDH_DAT );

  22585   1 0005FE  CBC7 0022                            LAB,B4   KV@VDH_DAT,AUTO
          1 000600  CFC7 003C                            STB,B4   FAIL_TO_SET+1,AUTO
          1 000602  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000604  CBF0 0100                            LAB,B4   256,IMO
          1 000606  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 000609       0001                            DC       s:22587,PREL

      757    22586    5                            END;

      758    22587    4                      START = NEXT_FE + 1;

  22587   1 00060A  E847 002F                            LDR,R6   NEXT_FE,AUTO
          1 00060C  6E01                                 ADV,R6   1
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:118  
          1 00060D  EF47 002E                            STR,R6   START,AUTO

      759    22588    4                   END; /*  DO WHILE  */

  22588   1 00060F  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 000611  E946 000E                            CMR,R6   14,B6
          1 000613  0201 FF72                            BL       s:22568,PREL

      760    22589    4                   IF KX$X29.RPRDAT AND NOT KX$X29.HLTOTP THEN DO;

  22589   1 000615  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000617  82C6 0016                            LB,'1000'X        22,B6
          1 000619       1000
          1 00061A  0581 0022                            BBF      s:22611,PREL
          1 00061C  82C6 0015                            LB,'C000'X        21,B6
          1 00061E       C000
          1 00061F  0501 001D                            BBT      s:22611,PREL

      761    22590
      762    22591        /* THE OUTPUT CCB COUNT IS ZERO, SO POSITIONING AND/OR                        */
      763    22592        /* OUTPUT BUFFER TRUNCATING WON'T BE DONE BY THE OUTPUT                       */
      764    22593        /* INTERRUPT ROUTINE.                                                         */
      765    22594
      766    22595        /* Force completion of any pending output operations.                         */
      767    22596
      768    22597    5                            IF %KV_VDI.RE_DSPINP THEN DO;

  22597   1 000621  DCC7 000A                            LDB,B5   VDI$,AUTO
          1 000623  82C5 0019                            LB,'0010'X        25,B5
          1 000625       0010
          1 000626  0581 0007                            BBF      s:22606,PREL

      769    22598    5                                     CALL KVI$RE_DSPINP;

  22598   1 000628  CBF0 0000                            LAB,B4   0,IMO
          1 00062A  E380 0000 0000  xent                 LNJ,B6   KVI$RE_DSPINP
          1 00062D       0001                            DC       s:22606,PREL
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:119  

      770    22599    5                                  END;

      771    22600
      772    22601                                 %KV$CMPOTP;
             22606    5           IF KV$VDI.OTPCNDPND THEN DO;

  22606   1 00062E  ECC7 000A                            LDB,B6   VDI$,AUTO
          1 000630  E846 001A                            LDR,R6   26,B6
          1 000632  6901 000A                            BEZ,R6   s:22611,PREL

             22607    5              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);

  22607   1 000634  BB80 0000 0002  02                   LAB,B3   +2
          1 000637  CBF0 0100                            LAB,B4   256,IMO
          1 000639  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 00063C       0001                            DC       s:22611,PREL

             22608    5              END;                         /* END IF                             */

      773    22610    4                         END;

      774    22611    3                   IF NOT FPT_X25.PRS.PRM2

  22611   1 00063D  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 00063F  82C6 000F                            LB,'4000'X        15,B6
          1 000641       4000
          1 000642  0501 0020                            BBT      s:22648,PREL

      775    22612    3                      THEN
      776    22613    4                         DO;

      777    22614        /*
      778    22615           If this call is on the VDH schedule thread, then no need for USREXT
      779    22616        */
      780    22617                                 %KV$USREXT ( VDI$ = VDI$ );
             22623    4           KV$VDI.BSY = '0'B;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:120  

  22623   1 000644  DCC7 000A                            LDB,B5   VDI$,AUTO
          1 000646  8845 0019                            LBF,'0080'X       25,B5
          1 000648       0080

             22625    4           KV$PTR$ = KV@USRENT.SVDPTR$;

  22625   1 000649  CCC7 002C                            LDB,B4   KV@USRENT,AUTO
          1 00064B  CF80 0000 0000  xsym                 STB,B4   KV$PTR$

      781    22627    4                         END;

  22627   1 00064E  0F81 0014                            B        s:22648,PREL

      782    22628
      783    22629    3                CASE ( %KX_X29_ST_INIT_RED#, %KX_X29_ST_SETRED# );

      784    22630
      785    22631    3   Y@DFR3:         CALL Y$COPY;

  22631   1 000650  E3C0 02DC            Y@DFR3          LNJ,B6   s:0,PREL
          1 000652       0001                            DC       s:22629+3,PREL
          1 000653  0F81 000F                            B        s:22648,PREL

      786    22632
      787    22633
      788    22634    3                CASE ( %KX_X29_ST_BGNPHSDSC#, %KX_X29_ST_ENDPHSDSC# );

      789    22635        /*  Just ignore input.  */
      790    22636
      791    22637    3                CASE ( ELSE );

      792    22638
      793    22639    3                   CALL KHD$SCREECH ( Y_UNKSCHRSN );

  22639   1 000655  BB80 0000 000F  02                   LAB,B3   +15
          1 000658  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:121  
          1 00065A  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 00065D       0001                            DC       s:22641,PREL

      794    22640
      795    22641    3             END; /*  end of do case  */

  22641   1 00065E  0F81 0004                            B        s:22648,PREL

      796    22642    2          ELSE
      797    22643        /*
      798    22644           Q-bit on. See what it is.
      799    22645        */
      800    22646    2             CALL Y$DECODE_X29;

  22646   1 000660  E3C0 0006                            LNJ,B6   s:0,PREL
          1 000662       0001                            DC       s:22648,PREL

      801    22647
      802    22648    2   END Y$DATIN;

  22648   1 000663  ECC7 0036                            LDB,B6   LINSPDX+1,AUTO
          1 000665  C3C6 0001                            LNJ,B4   1,B6

      803    22649
      804    22650        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:122  
      805    22651
      806    22652        /*I*
      807    22653             NAME: Y$DECODE_X29
      808    22654             PURPOSE: The received packet has the Q-bit on and is thus an
      809    22655                      X.29 message. This routine decodes the X.29 protocol
      810    22656                      and changes the state and causes some actions, where
      811    22657                      appropriate.
      812    22658        */
      813    22659    1   Y$DECODE_X29: PROC;

  22659   1 000667  EFC7 0038            Y$DECODE_X29    STB,B6   LINSPDX+3,AUTO

      814    22660
      815    22661    2   DCL BAD_PRM_IND UBIN;
      816    22662    2   DCL FAIL_TO_SET UBIN;
      817    22663    2       DAT$ = FPT_X25.V_.ADR$;

  22663   1 000669  DCC7 0004                            LDB,B5   @FPT_X25,AUTO
          1 00066B  CCC5 000B                            LDB,B4   11,B5
          1 00066D  CFC7 0008                            STB,B4   DAT$,AUTO

      818    22664
      819    22665    2       BYTX = FPT_X25.V_.BYTX;

  22665   1 00066F  E845 000D                            LDR,R6   13,B5
          1 000671  EF47 000F                            STR,R6   BYTX,AUTO

      820    22666    3       DO CASE ( BYT_ARY(BYTX) );

  22666   1 000673  B856                                 LDR,R3   R6
          1 000674  A2B4                                 LLH,R2   ,B4,R3
          1 000675  2D06                                 CMV,R2   6
          1 000676  0281 0291                            BGE      s:23057,PREL
          1 000678  9820 0000 067E  01                   LDR,R1   s:22666+11,R2
          1 00067B  8390 0000 0684  01                   JMP      s:22675,R1
          1 00067E       0000                            DC       s:22675,PREL
          1 00067F       0284                            DC       s:23057,PREL
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:123  
          1 000680       0284                            DC       s:23057,PREL
          1 000681       01CF                            DC       s:22930,PREL
          1 000682       0284                            DC       s:23057,PREL
          1 000683       015F                            DC       s:22877,PREL

      821    22667
      822    22668        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:124  
      823    22669        /*
      824    22670           Parameter indication PAD message.
      825    22671        */
      826    22672
      827    22673    3          CASE ( %KX_X29MSGTYP_PRMIND# );

      828    22674
      829    22675    3             IF KX$X29.WAT4PRM = 0

  22675   1 000684  BCC7 0006                            LDB,B3   X29$,AUTO
          1 000686  82C3 0015                            LB,'0700'X        21,B3
          1 000688       0700
          1 000689  0501 001D                            BBT      s:22705,PREL

      830    22676    3                THEN
      831    22677        /*
      832    22678           We are not expecting any parameter indication messages from the
      833    22679           PAD. Errorlog.
      834    22680        */
      835    22681    4                   DO;

      836    22682                           %WRSYSLOG ( ERRCOD = UNEXP_PRM_IND,
      837    22683                           TRMID = "KX$X29.CHN$->KH$CHN.TERMID" );

  22699   1 00068B  ACC3 0004                            LDB,B2   4,B3
          1 00068D  9B80 0000 0000                       LAB,B1   0
          1 000690  9FC7 0040                            STB,B1   FAIL_TO_SET+5,AUTO
          1 000692  EBC2 0012                            LAB,B6   18,B2
          1 000694  EFC7 003E                            STB,B6   FAIL_TO_SET+3,AUTO
          1 000696  AB80 0000 003C  00                   LAB,B2   UNEXP_PRM_IND
          1 000699  AFC7 003C                            STB,B2   FAIL_TO_SET+1,AUTO
          1 00069B  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 00069D  CBF0 0300                            LAB,B4   768,IMO
          1 00069F  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          1 0006A2       0001                            DC       s:22701,PREL

      838    22701    4                      RETURN;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:125  

  22701   1 0006A3  ECC7 0038                            LDB,B6   LINSPDX+3,AUTO
          1 0006A5  C3C6 0001                            LNJ,B4   1,B6

      839    22702    4                   END;
      840    22703    3                ELSE
      841    22704    4                   DO;

      842    22705    4                      IF KX$X29.STATE = %KX_X29_ST_INIT_RED#

  22705   1 0006A7  D843 0018                            LDR,R5   24,B3
          1 0006A9  D570 00FF                            AND,R5   255,IMO
          1 0006AB  5D02                                 CMV,R5   2
          1 0006AC  0981 0005                            BNE      s:22709,PREL

      843    22706    4                         THEN
      844    22707    4                            COMPARE = '0'B;

  22707   1 0006AE  8747 0034                            CL       COMPARE,AUTO
          1 0006B0  0F81 0004                            B        s:22713,PREL

      845    22708    4                         ELSE
      846    22709    4                            COMPARE = '1'B;

  22709   1 0006B2  8947 0034                            LBT,'8000'X       COMPARE,AUTO
  22709   1 0006B4       8000

      847    22710        /*
      848    22711           Copy these parameter values into the X.29 context block.
      849    22712        */
      850    22713    4                      BYTX = BYTX + 1;

  22713   1 0006B5  8AC7 000F                            INC      BYTX,AUTO

      851    22714    4                      BAD_PRM_IND = 0;

  22714   1 0006B7  8747 003A                            CL       BAD_PRM_IND,AUTO
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:126  

      852    22715    4                      FAIL_TO_SET = 0;

  22715   1 0006B9  8747 003B                            CL       FAIL_TO_SET,AUTO

      853    22716    5                      DO WHILE ( BYTX < FPT_X25.V_.BYTSIZ+ FPT_X25.V_.BYTX );

  22716   1 0006BB  0F81 002F                            B        s:22730,PREL

      854    22717    5                         PRM_INDEX = BYT_ARY (BYTX);

  22717   1 0006BD  ECC7 0008                            LDB,B6   DAT$,AUTO
          1 0006BF  B847 000F                            LDR,R3   BYTX,AUTO
          1 0006C1  E2B6                                 LLH,R6   ,B6,R3
          1 0006C2  EF47 0010                            STR,R6   PRM_INDEX,AUTO

      855    22718    5                         IF PRM_INDEX > %KX_X3PRMX_HI# + 1

  22718   1 0006C4  6D16                                 CMV,R6   22
          1 0006C5  0381 0005                            BLE      s:22723,PREL

      856    22719    5                            THEN
      857    22720    5                               BAD_PRM_IND = BYTX;

  22720   1 0006C7  BF47 003A                            STR,R3   BAD_PRM_IND,AUTO
          1 0006C9  0F81 001C                            B        s:22729,PREL

      858    22721    5                            ELSE
      859    22722    6                               DO;

      860    22723    6                                  IF COMPARE AND KX$X29.X3PRM ( PRM_INDEX - 1 ) ~=

  22723   1 0006CB  89C7 0034                            CMZ      COMPARE,AUTO
          1 0006CD  0881 000F                            BAGE     s:22727,PREL
          1 0006CF  DCC7 0006                            LDB,B5   X29$,AUTO
          1 0006D1  A856                                 LDR,R2   R6
          1 0006D2  2E35                                 ADV,R2   53
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:127  
          1 0006D3  D2A5                                 LLH,R5   ,B5,R2
          1 0006D4  3E01                                 ADV,R3   1
          1 0006D5  C2B6                                 LLH,R4   ,B6,R3
          1 0006D6  D954                                 CMR,R5   R4
          1 0006D7  0901 0005                            BE       s:22727,PREL

      861    22724    6                                     BYT_ARY ( BYTX + 1 )
      862    22725    6                                     THEN
      863    22726    6                                        FAIL_TO_SET = BYTX;

  22726   1 0006D9  9847 000F                            LDR,R1   BYTX,AUTO
          1 0006DB  9F47 003B                            STR,R1   FAIL_TO_SET,AUTO

      864    22727    6                                 KX$X29.X3PRM ( PRM_INDEX - 1 ) = BYT_ARY ( BYTX + 1 )
             22727                                           ;

  22727   1 0006DD  B847 000F                            LDR,R3   BYTX,AUTO
          1 0006DF  3E01                                 ADV,R3   1
          1 0006E0  D2B6                                 LLH,R5   ,B6,R3
          1 0006E1  DCC7 0006                            LDB,B5   X29$,AUTO
          1 0006E3  A856                                 LDR,R2   R6
          1 0006E4  2E35                                 ADV,R2   53
          1 0006E5  D7A5                                 STH,R5   ,B5,R2

      865    22728    6                               END;

      866    22729    5                         BYTX = BYTX + 2;

  22729   1 0006E6  D847 000F                            LDR,R5   BYTX,AUTO
          1 0006E8  5E02                                 ADV,R5   2
          1 0006E9  DF47 000F                            STR,R5   BYTX,AUTO

      867    22730    5                      END; /*  DO WHILE  */

  22730   1 0006EB  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 0006ED  E846 000E                            LDR,R6   14,B6
          1 0006EF  EA46 000D                            ADD,R6   13,B6
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:128  
          1 0006F1  6801 0004                            BLZ,R6   s:22732,PREL
          1 0006F3  E947 000F                            CMR,R6   BYTX,AUTO
          1 0006F5  0348                                 BG       s:22717,SPREL

      868    22731
      869    22732    4                      IF FPT_X25.V_.BYTSIZ = 3 AND PRM_INDEX = %KX_X3PRMX_HLTMRK#

  22732   1 0006F6  E846 000E                            LDR,R6   14,B6
          1 0006F8  6D03                                 CMV,R6   3
          1 0006F9  0981 000B                            BNE      s:22735,PREL
          1 0006FB  D847 0010                            LDR,R5   PRM_INDEX,AUTO
          1 0006FD  5D06                                 CMV,R5   6
          1 0006FE  0981 0006                            BNE      s:22735,PREL

      870    22733    4                         THEN
      871    22734    4                            KX$X29.HLTOTP.BITT(%KA#HLTOTP_USRX) = '1'B;

  22734   1 000700  DCC7 0006                            LDB,B5   X29$,AUTO
          1 000702  8945 0015                            LBT,'4000'X       21,B5
          1 000704       4000

      872    22735    4                      IF BAD_PRM_IND ~= 0

  22735   1 000705  E847 003A                            LDR,R6   BAD_PRM_IND,AUTO
          1 000707  6901 002A                            BEZ,R6   s:22763,PREL

      873    22736    4                         THEN
      874    22737    5                            DO;

      875    22738    5                               BYTX = BYT_ARY (BAD_PRM_IND);

  22738   1 000709  DCC7 0008                            LDB,B5   DAT$,AUTO
          1 00070B  B856                                 LDR,R3   R6
          1 00070C  D2B5                                 LLH,R5   ,B5,R3
          1 00070D  DF47 000F                            STR,R5   BYTX,AUTO

      876    22739    5                               BAD_PRM_IND = BYT_ARY (BAD_PRM_IND+1);
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:129  

  22739   1 00070F  3E01                                 ADV,R3   1
          1 000710  B2B5                                 LLH,R3   ,B5,R3
          1 000711  BF47 003A                            STR,R3   BAD_PRM_IND,AUTO

      877    22740                                    %WRSYSLOG ( ERRCOD = BAD_PRM_IND_MSG,
      878    22741                                    TRMID = "KX$X29.CHN$->KH$CHN.TERMID",
      879    22742                                    BFR = BYT_ARY,
      880    22743                                    VAL1 = BAD_PRM_IND,
      881    22744                                    VAL0 = BYTX );

  22760   1 000713  CCC7 0006                            LDB,B4   X29$,AUTO
          1 000715  BCC4 0004                            LDB,B3   4,B4
          1 000717  ABC7 003A                            LAB,B2   BAD_PRM_IND,AUTO
          1 000719  AFC7 0044                            STB,B2   FAIL_TO_SET+9,AUTO
          1 00071B  9BC7 000F                            LAB,B1   BYTX,AUTO
          1 00071D  9FC7 0042                            STB,B1   FAIL_TO_SET+7,AUTO
          1 00071F  DFC7 0040                            STB,B5   FAIL_TO_SET+5,AUTO
          1 000721  EBC3 0012                            LAB,B6   18,B3
          1 000723  EFC7 003E                            STB,B6   FAIL_TO_SET+3,AUTO
          1 000725  BB80 0000 0046  00                   LAB,B3   BAD_PRM_IND_MSG
          1 000728  BFC7 003C                            STB,B3   FAIL_TO_SET+1,AUTO
          1 00072A  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 00072C  CBF0 0500                            LAB,B4   1280,IMO
          1 00072E  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          1 000731       0001                            DC       s:22763,PREL

      882    22762    5                            END;

      883    22763    4                      IF FAIL_TO_SET ~= 0

  22763   1 000732  E847 003B                            LDR,R6   FAIL_TO_SET,AUTO
          1 000734  6901 002A                            BEZ,R6   s:22791,PREL

      884    22764    4                         THEN
      885    22765    5                            DO;

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:130  
      886    22766    5                               BYTX = BYT_ARY (FAIL_TO_SET);

  22766   1 000736  ECC7 0008                            LDB,B6   DAT$,AUTO
          1 000738  B856                                 LDR,R3   R6
          1 000739  D2B6                                 LLH,R5   ,B6,R3
          1 00073A  DF47 000F                            STR,R5   BYTX,AUTO

      887    22767    5                               FAIL_TO_SET = BYT_ARY (FAIL_TO_SET+1);

  22767   1 00073C  3E01                                 ADV,R3   1
          1 00073D  B2B6                                 LLH,R3   ,B6,R3
          1 00073E  BF47 003B                            STR,R3   FAIL_TO_SET,AUTO

      888    22768                                    %WRSYSLOG ( ERRCOD = FAIL_TO_SET_X3,
      889    22769                                    TRMID = "KX$X29.CHN$->KH$CHN.TERMID",
      890    22770                                    BFR = BYT_ARY,
      891    22771                                    VAL1 = FAIL_TO_SET,
      892    22772                                    VAL0 = BYTX );

  22788   1 000740  DCC7 0006                            LDB,B5   X29$,AUTO
          1 000742  CCC5 0004                            LDB,B4   4,B5
          1 000744  BBC7 003B                            LAB,B3   FAIL_TO_SET,AUTO
          1 000746  BFC7 0044                            STB,B3   FAIL_TO_SET+9,AUTO
          1 000748  ABC7 000F                            LAB,B2   BYTX,AUTO
          1 00074A  AFC7 0042                            STB,B2   FAIL_TO_SET+7,AUTO
          1 00074C  EFC7 0040                            STB,B6   FAIL_TO_SET+5,AUTO
          1 00074E  9BC4 0012                            LAB,B1   18,B4
          1 000750  9FC7 003E                            STB,B1   FAIL_TO_SET+3,AUTO
          1 000752  CB80 0000 003E  00                   LAB,B4   FAIL_TO_SET_X3
          1 000755  CFC7 003C                            STB,B4   FAIL_TO_SET+1,AUTO
          1 000757  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000759  CBF0 0500                            LAB,B4   1280,IMO
          1 00075B  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          1 00075E       0001                            DC       s:22791,PREL

      893    22790    5                            END;

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:131  
      894    22791    4                      IF KX$X29.STATE = %KX_X29_ST_INIT_RED#

  22791   1 00075F  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000761  E846 0018                            LDR,R6   24,B6
          1 000763  E570 00FF                            AND,R6   255,IMO
          1 000765  6D02                                 CMV,R6   2
          1 000766  0981 0015                            BNE      s:22803,PREL

      895    22792    4                         THEN
      896    22793        /*
      897    22794           The PAD has responded to our initial read param message.
      898    22795           We should move to the SETRED state and send the set and
      899    22796           read message.
      900    22797        */
      901    22798    5                            DO;

      902    22799    5                               KX$X29.STATE = %KX_X29_ST_SETRED#;

  22799   1 000768  5C03                                 LDV,R5   3
          1 000769  DAC6 0018                            SRM,R5,'00FF'X    24,B6
          1 00076B       00FF

      903    22800    5                              CALL KXX$SNDX29MSG ( %KX_X29MSGTYP_1ST_SETREDX3#, KX$X29
             22800                                        );

  22800   1 00076C  DBF0 0008                            LAB,B5   8,IMO
          1 00076E  EFC7 003E                            STB,B6   FAIL_TO_SET+3,AUTO
          1 000770  DFC7 003C                            STB,B5   FAIL_TO_SET+1,AUTO
          1 000772  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000774  CBF0 0200                            LAB,B4   512,IMO
          1 000776  E380 0000 0000  xent                 LNJ,B6   KXX$SNDX29MSG
          1 000779       0001                            DC       s:22801,PREL

      904    22801    5                            END;

  22801   1 00077A  0F81 01AE                            B        s:23067,PREL

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:132  
      905    22802    4                         ELSE
      906    22803    4                            IF KX$X29.STATE = %KX_X29_ST_SETRED#

  22803   1 00077C  6D03                                 CMV,R6   3
          1 00077D  0981 01AB                            BNE      s:23067,PREL

      907    22804    4                               THEN
      908    22805        /*
      909    22806           The PAD has responded to our set and read param message.
      910    22807           Move to state normal. Call VDHINT and VDH_CNC.
      911    22808        */
      912    22809    5                                  DO;

      913    22810    5                                     KX$X29.WAT4PRM = KX$X29.WAT4PRM - 1;

  22810   1 00077F  D846 0015                            LDR,R5   21,B6
          1 000781  DA70 0700                            ADD,R5   1792,IMO
          1 000783  DAC6 0015                            SRM,R5,'0700'X    21,B6
          1 000785       0700

      914    22811    5                                     CALL KXX$INTCNC ( KX$X29 )

  22811   1 000786  BBC7 0006                            LAB,B3   X29$,AUTO
          1 000788  CBF0 0100                            LAB,B4   256,IMO
          1 00078A  E380 0000 0000  xent                 LNJ,B6   KXX$INTCNC
          1 00078D       0054                            DC       s:22859,PREL

      915    22812    5                                        WHENRETURN
      916    22813    6                                           DO;

      917    22814    6                                              KX$X29.STATE = %KX_X29_ST_NRM#;

  22814   1 00078E  6C04                                 LDV,R6   4
          1 00078F  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000791  EAC6 0018                            SRM,R6,'00FF'X    24,B6
          1 000793       00FF

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:133  
      918    22815    6                                              LINSPDX = KX_LINSPDX_X3_TO_CP6(KX$X29.
             22815                                                       X3PRM(%KX_X3PRMX_LINSPD#));

  22815   1 000794  B2C6 0020                            LLH,R3   32,B6
          1 000796  D2B0 0000 0000  xsym                 LLH,R5   KX_LINSPDX_X3_TO_CP6,R3
          1 000799  DF47 0035                            STR,R5   LINSPDX,AUTO

      919    22816    6                                              KX_STATS_X29.LINSPDDST(LINSPDX) =
             22816                                                       KX_STATS_X29.LINSPDDST(LINSPDX) + 1;

  22816   1 00079B  A855                                 LDR,R2   R5
          1 00079C  AF47 003C                            STR,R2   FAIL_TO_SET+1,AUTO
          1 00079E  2001                                 SOL,R2   1
          1 00079F  B847 003C                            LDR,R3   FAIL_TO_SET+1,AUTO
          1 0007A1  3001                                 SOL,R3   1
          1 0007A2  8AA0 0000 0023  xsym                 INC      KX_STATS_X29+35,R2
          1 0007A5  8EB0 0000 0022  xsym                 CAD      KX_STATS_X29+34,R3

      920    22817        /*
      921    22818           Right after INTCNC, VDI will have the busy bit on. Do a usrent here
      922    22819           just to raise the appropriate defer bit, so that we will call
      923    22820           KXX$DFRINP at the earliest chance.
      924    22821        */
      925    22822                                                   %KV$USRENT ( VDI$ = KX$X29.VDI$, DFR$ =
             22822                                                       Y@DFR6, SCHRSN = %KV_SCHRSN_DFR1 );
             22835    6           KX$X29.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             22835                    KX$X29.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;

  22835   1 0007A8  DCC6 0002                            LDB,B5   2,B6
          1 0007AA  CCC5 0008                            LDB,B4   8,B5
          1 0007AC  BCC4 0033                            LDB,B3   51,B4
          1 0007AE  8AC3 0039                            INC      57,B3
          1 0007B0  8EC3 0038                            CAD      56,B3

             22836    7           IF NOT KX$X29.VDI$->KV$VDI.BSY THEN DO;

  22836   1 0007B2  DCC6 0002                            LDB,B5   2,B6
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:134  
          1 0007B4  82C5 0019                            LB,'0080'X        25,B5
          1 0007B6       0080
          1 0007B7  0501 0012                            BBT      s:22842,PREL

             22837    7              KX$X29.VDI$->KV$VDI.BSY = '1'B;

  22837   1 0007B9  8945 0019                            LBT,'0080'X       25,B5
  22837   1 0007BB       0080

             22838    7              KV@USRENT.SVDPTR$ = KV$PTR$;

  22838   1 0007BC  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0007BF  DFC7 002C                            STB,B5   KV@USRENT,AUTO

             22839    7              KV$PTR$ = KX$X29.VDI$->KV$VDI.ASNINPPTR$;

  22839   1 0007C1  CCC6 0002                            LDB,B4   2,B6
          1 0007C3  BCC4 0006                            LDB,B3   6,B4
          1 0007C5  BF80 0000 0000  xsym                 STB,B3   KV$PTR$

             22840    7              END;                         /* ELSE IF ~BSY                       */

  22840   1 0007C8  0F81 0010                            B        s:22857,PREL

             22841    7           ELSE DO;

             22842    7              KX$X29.VDI$->KV$VDI.DFR.USR(1) = '1'B;

  22842   1 0007CA  8945 0018                            LBT,'4000'X       24,B5
  22842   1 0007CC       4000

             22843    7           KX$X29.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22843                    KX$X29.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;

  22843   1 0007CD  DCC6 0002                            LDB,B5   2,B6
          1 0007CF  CCC5 0008                            LDB,B4   8,B5
          1 0007D1  BCC4 0033                            LDB,B3   51,B4
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:135  
          1 0007D3  8AC3 003B                            INC      59,B3
          1 0007D5  8EC3 003A                            CAD      58,B3

             22844    7              GOTO Y@DFR6;

  22844   1 0007D7  0F81 0009                            B        s:22859,PREL

             22845    7              END;                         /* END IF                             */
      926    22848        /*
      927    22849           Put a usrext here just in case VDI busy bit is reset.
      928    22850        */
      929    22851                                                   %KV$USREXT ( VDI$ = KX$X29.VDI$ );
             22857    6           KV$VDI.BSY = '0'B;

  22857   1 0007D9  ACC7 000A                            LDB,B2   VDI$,AUTO
          1 0007DB  8842 0019                            LBF,'0080'X       25,B2
          1 0007DD       0080

             22859    6           KV$PTR$ = KV@USRENT.SVDPTR$;

  22859   1 0007DE  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

  22859   1                              Y@DFR6          null
      930    22861    6   Y@DFR6:                                    ;
      931    22862
      932    22863    6                                           END;

      933    22864    5                                  END;

      934    22865    4                   END;

  22865   1 0007E1  0F81 0147            Y@DFR6          B        s:23067,PREL

      935    22866        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:136  
      936    22867        /*
      937    22868           Error PAD message.
      938    22869        */
      939    22870    3          CASE ( %KX_X29MSGTYP_ERRPAD# );

      940    22871
      941    22872        /*
      942    22873           Errorlog and increment our error count. If the PAD has
      943    22874           complained too many times about error from us, clear the
      944    22875           circuit.
      945    22876        */
      946    22877    3             IF FPT_X25.V_.BYTSIZ = 3

  22877   1 0007E3  D845 000E                            LDR,R5   14,B5
          1 0007E5  5D03                                 CMV,R5   3
          1 0007E6  0981 0007                            BNE      s:22881,PREL

      947    22878    3                THEN
      948    22879    3                   INV_MSG_COD = BYT_ARY (BYTX + 2);

  22879   1 0007E8  3E02                                 ADV,R3   2
          1 0007E9  C2B4                                 LLH,R4   ,B4,R3
          1 0007EA  CF47 0030                            STR,R4   INV_MSG_COD,AUTO
          1 0007EC  0F81 0003                            B        s:22882,PREL

      949    22880    3                ELSE
      950    22881    3                   INV_MSG_COD = 0;

  22881   1 0007EE  8747 0030                            CL       INV_MSG_COD,AUTO

      951    22882    3             ERR_TYP = BYT_ARY (BYTX + 1);

  22882   1 0007F0  B856                                 LDR,R3   R6
          1 0007F1  3E01                                 ADV,R3   1
          1 0007F2  D2B4                                 LLH,R5   ,B4,R3
          1 0007F3  DF47 0031                            STR,R5   ERR_TYP,AUTO

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:137  
      952    22883                  %WRSYSLOG ( ERRCOD = ERROR_PAD_MSG,
      953    22884                  TRMID = "KX$X29.CHN$->KH$CHN.TERMID",
      954    22885                  VAL0 = ERR_TYP,
      955    22886                  VAL1 = INV_MSG_COD );

  22902   1 0007F5  BCC7 0006                            LDB,B3   X29$,AUTO
          1 0007F7  ACC3 0004                            LDB,B2   4,B3
          1 0007F9  9BC7 0030                            LAB,B1   INV_MSG_COD,AUTO
          1 0007FB  9FC7 0044                            STB,B1   FAIL_TO_SET+9,AUTO
          1 0007FD  EBC7 0031                            LAB,B6   ERR_TYP,AUTO
          1 0007FF  EFC7 0042                            STB,B6   FAIL_TO_SET+7,AUTO
          1 000801  EB80 0000 0000                       LAB,B6   0
          1 000804  EFC7 0040                            STB,B6   FAIL_TO_SET+5,AUTO
          1 000806  EBC2 0012                            LAB,B6   18,B2
          1 000808  EFC7 003E                            STB,B6   FAIL_TO_SET+3,AUTO
          1 00080A  AB80 0000 0040  00                   LAB,B2   ERROR_PAD_MSG
          1 00080D  AFC7 003C                            STB,B2   FAIL_TO_SET+1,AUTO
          1 00080F  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000811  CBF0 0500                            LAB,B4   1280,IMO
          1 000813  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          1 000816       0001                            DC       s:22904,PREL

      956    22904    3             KX$X29.ERR_PAD = KX$X29.ERR_PAD + 1;

  22904   1 000817  ECC7 0006                            LDB,B6   X29$,AUTO
          1 000819  E846 0017                            LDR,R6   23,B6
          1 00081B  EA70 0001                            ADD,R6   1,IMO
          1 00081D  EAC6 0017                            SRM,R6,'00FF'X    23,B6
          1 00081F       00FF

      957    22905    3   ERR_PAD:  IF KX$X29.ERR_PAD >= KX_X29_ERR_PAD_LMT

  22905   1 000820  ECC7 0006            ERR_PAD         LDB,B6   X29$,AUTO
          1 000822  E846 0017                            LDR,R6   23,B6
          1 000824  E570 00FF                            AND,R6   255,IMO
          1 000826  E900 0000 0000  xsym                 CMR,R6   KX_X29_ERR_PAD_LMT
          1 000829  0201 00FF                            BL       s:23067,PREL
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:138  

      958    22906    3                THEN
      959    22907    4                   DO;

      960    22908    4                      CALL_FPT = '0'B;

  22908   1 00082B  5C20                                 LDV,R5   32
          1 00082C  0021                                 ALR      ;
          1 00082D       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 00082F       4007 0012                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

      961    22909    4                      CALL_FPT.CAL$ = X29$;

  22909   1 000831  437F                                 CSYNC    s:22908+5,SPREL
          1 000832  EFC7 0013                            STB,B6   CALL_FPT+1,AUTO

      962    22910    4                      CALL_FPT.RCV$ = L3$;

  22910   1 000834  DCC7 000C                            LDB,B5   L3$,AUTO
          1 000836  DFC7 0015                            STB,B5   CALL_FPT+3,AUTO

      963    22911    4                      CALL_FPT.EVN = %KX_P_EV_VCLST#;

  22911   1 000838  6C09                                 LDV,R6   9
          1 000839  EF47 0012                            STR,R6   CALL_FPT,AUTO

      964    22912    4                      CALL KXP$PACKET ( CALL_FPT )

  22912   1 00083B  CBC7 0012                            LAB,B4   CALL_FPT,AUTO
          1 00083D  CFC7 003C                            STB,B4   FAIL_TO_SET+1,AUTO
          1 00083F  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000841  CBF0 0100                            LAB,B4   256,IMO
          1 000843  E380 0000 0000  xent                 LNJ,B6   KXP$PACKET
          1 000846       0003                            DC       s:22914,PREL
          1 000847  0F81 0009                            B        s:22916,PREL

      965    22913    5                         WHENALTRETURN DO;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:139  

      966    22914    5                               CALL KHD$SCREECH ( CALL_FPT.PRM1$->B$SCODE );

  22914   1 000849  BBC7 0019                            LAB,B3   CALL_FPT+7,AUTO
          1 00084B  CBF0 0100                            LAB,B4   256,IMO
          1 00084D  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 000850       0001                            DC       s:22916,PREL

      967    22915    5                            END;

      968    22916    4                   END;

  22916   1 000851  0F81 00D7                            B        s:23067,PREL

      969    22917
      970    22918        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:140  
      971    22919        /*
      972    22920           Indication of break PAD message.
      973    22921        */
      974    22922    3          CASE ( %KX_X29MSGTYP_BRKIND# );

      975    22923
      976    22924        /*
      977    22925           The PAD always sends a 3 byte message:
      978    22926             Indication of break message code ('03'X),
      979    22927             Parameter reference (8),
      980    22928             Parameter value (1-discard output).
      981    22929        */
      982    22930    3             IF FPT_X25.V_.BYTSIZ ~= 3 OR

  22930   1 000853  D845 000E                            LDR,R5   14,B5
          1 000855  5D03                                 CMV,R5   3
          1 000856  0981 000C                            BNE      s:22951,PREL
          1 000858  3E01                                 ADV,R3   1
          1 000859  C2B4                                 LLH,R4   ,B4,R3
          1 00085A  4D08                                 CMV,R4   8
          1 00085B  0981 0007                            BNE      s:22951,PREL
          1 00085D  A856                                 LDR,R2   R6
          1 00085E  2E02                                 ADV,R2   2
          1 00085F  92A4                                 LLH,R1   ,B4,R2
          1 000860  1D01                                 CMV,R1   1
          1 000861  0901 001B                            BE       s:22957,PREL

      983    22931    3                BYT_ARY (BYTX+1) ~= %KX_X3PRMX_DSCOTP#+1 OR BYT_ARY (BYTX+2) ~= 1
      984    22932    3                THEN
      985    22933    4                   DO;

      986    22934                           %WRSYSLOG ( ERRCOD = BAD_IND_BRK_MSG,
      987    22935                           TRMID = "KX$X29.CHN$->KH$CHN.TERMID" );

  22951   1 000863  BCC7 0006                            LDB,B3   X29$,AUTO
          1 000865  ACC3 0004                            LDB,B2   4,B3
          1 000867  9B80 0000 0000                       LAB,B1   0
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:141  
          1 00086A  9FC7 0040                            STB,B1   FAIL_TO_SET+5,AUTO
          1 00086C  EBC2 0012                            LAB,B6   18,B2
          1 00086E  EFC7 003E                            STB,B6   FAIL_TO_SET+3,AUTO
          1 000870  AB80 0000 0042  00                   LAB,B2   BAD_IND_BRK_MSG
          1 000873  AFC7 003C                            STB,B2   FAIL_TO_SET+1,AUTO
          1 000875  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000877  CBF0 0300                            LAB,B4   768,IMO
          1 000879  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          1 00087C       0001                            DC       s:22957,PREL

      988    22953    4                   END;

      989    22954        /*
      990    22955           Convey the break event to VDH if we are already connected to VDH.
      991    22956        */
      992    22957    3             IF KX$X29.VDI$ = ADDR(NIL)

  22957   1 00087D  ECC7 0006                            LDB,B6   X29$,AUTO
          1 00087F  8DC6 0002                            CMN      2,B6
          1 000881  0981 0013                            BNE      s:22963,PREL

      993    22958    3                THEN
      994    22959    4                   DO;

      995    22960    4                      CALL KXX$SNDX29MSG (%KX_X29MSGTYP_RSMOTP#, KX$X29);

  22960   1 000883  DBF0 0007                            LAB,B5   7,IMO
          1 000885  EFC7 003E                            STB,B6   FAIL_TO_SET+3,AUTO
          1 000887  DFC7 003C                            STB,B5   FAIL_TO_SET+1,AUTO
          1 000889  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 00088B  CBF0 0200                            LAB,B4   512,IMO
          1 00088D  E380 0000 0000  xent                 LNJ,B6   KXX$SNDX29MSG
          1 000890       0001                            DC       s:22961,PREL

      996    22961    4                      RETURN;

  22961   1 000891  ECC7 0038                            LDB,B6   LINSPDX+3,AUTO
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:142  
          1 000893  C3C6 0001                            LNJ,B4   1,B6

      997    22962    4                   END;
      998    22963    3             IF NOT FPT_X25.PRS.PRM2

  22963   1 000895  DCC7 0004                            LDB,B5   @FPT_X25,AUTO
          1 000897  82C5 000F                            LB,'4000'X        15,B5
          1 000899       4000
          1 00089A  0501 002C                            BBT      s:23000,PREL

      999    22964    3                THEN
     1000    22965    4                   DO;

     1001    22966        /*
     1002    22967          If the call is on VDH schedule thread, then no need for USRENT.
     1003    22968        */
     1004    22969                           %KV$USRENT ( VDI$ = VDI$, DFR$ = Y@DFR4,
     1005    22970                           SCHRSN = %KV_SCHRSN_DFR2 );
             22983    4           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             22983                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;

  22983   1 00089C  CCC7 000A                            LDB,B4   VDI$,AUTO
          1 00089E  BCC4 0008                            LDB,B3   8,B4
          1 0008A0  ACC3 0033                            LDB,B2   51,B3
          1 0008A2  8AC2 0039                            INC      57,B2
          1 0008A4  8EC2 0038                            CAD      56,B2

             22984    5           IF NOT VDI$->KV$VDI.BSY THEN DO;

  22984   1 0008A6  82C4 0019                            LB,'0080'X        25,B4
  22984   1 0008A8       0080
          1 0008A9  0501 0010                            BBT      s:22990,PREL

             22985    5              VDI$->KV$VDI.BSY = '1'B;

  22985   1 0008AB  8944 0019                            LBT,'0080'X       25,B4
  22985   1 0008AD       0080
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:143  

             22986    5              KV@USRENT.SVDPTR$ = KV$PTR$;

  22986   1 0008AE  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          1 0008B1  BFC7 002C                            STB,B3   KV@USRENT,AUTO

             22987    5              KV$PTR$ = VDI$->KV$VDI.ASNINPPTR$;

  22987   1 0008B3  ACC4 0006                            LDB,B2   6,B4
          1 0008B5  AF80 0000 0000  xsym                 STB,B2   KV$PTR$

             22988    5              END;                         /* ELSE IF ~BSY                       */

  22988   1 0008B8  0F81 000E                            B        s:23000,PREL

             22989    5           ELSE DO;

             22990    5              VDI$->KV$VDI.DFR.USR(2) = '1'B;

  22990   1 0008BA  8944 0018                            LBT,'2000'X       24,B4
  22990   1 0008BC       2000

             22991    5           VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             22991                    VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;

  22991   1 0008BD  BCC4 0008                            LDB,B3   8,B4
          1 0008BF  ACC3 0033                            LDB,B2   51,B3
          1 0008C1  8AC2 003B                            INC      59,B2
          1 0008C3  8EC2 003A                            CAD      58,B2

             22992    5              GOTO Y@DFR4;

  22992   1 0008C5  0F81 003E                            B        s:23022,PREL

             22993    5              END;                         /* END IF                             */
     1006    22996    4                   END;
     1007    22997        /*
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:144  
     1008    22998           Tell the PAD to resume displaying output, then tell VDH about the break.
     1009    22999        */
     1010    23000    3             CALL KXX$SNDX29MSG ( %KX_X29MSGTYP_RSMOTP#, KX$X29 );

  23000   1 0008C7  CBF0 0007                            LAB,B4   7,IMO
          1 0008C9  EFC7 003E                            STB,B6   FAIL_TO_SET+3,AUTO
          1 0008CB  CFC7 003C                            STB,B4   FAIL_TO_SET+1,AUTO
          1 0008CD  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 0008CF  CBF0 0200                            LAB,B4   512,IMO
          1 0008D1  E380 0000 0000  xent                 LNJ,B6   KXX$SNDX29MSG
          1 0008D4       0001                            DC       s:23001,PREL

     1011    23001    3             KV@VDH_DAT = KV_VDH_DAT;

  23001   1 0008D5  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_DAT
          1 0008D8  2C00                                 LDV,R2   0
          1 0008D9  6C10                                 LDV,R6   16
          1 0008DA  BB87                                 LAB,B3   ,AUTO
          1 0008DB  3C44                                 LDV,R3   68
          1 0008DC  0008                                 MMM

     1012    23002    3             KV@VDH_DAT.DAT__.ADR$ = ADDR(KX_BFR_BRK);

  23002   1 0008DD  EB80 0000 0000  xsym                 LAB,B6   KX_BFR_BRK
          1 0008E0  EFC7 0023                            STB,B6   KV@VDH_DAT+1,AUTO

     1013    23003    3             KV@VDH_DAT.DAT__.DATBYTSIZ = 2;

  23003   1 0008E2  6C02                                 LDV,R6   2
          1 0008E3  EF47 0026                            STR,R6   KV@VDH_DAT+4,AUTO

     1014    23004    3             KV@VDH_DAT.DAT__.BFRBYTSIZ = 2;

  23004   1 0008E5  EF47 0027                            STR,R6   KV@VDH_DAT+5,AUTO

     1015    23005    3             CALL KVV$VDI ( KV@VDH_DAT );

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:145  
  23005   1 0008E7  DBC7 0022                            LAB,B5   KV@VDH_DAT,AUTO
          1 0008E9  DFC7 003C                            STB,B5   FAIL_TO_SET+1,AUTO
          1 0008EB  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 0008ED  CBF0 0100                            LAB,B4   256,IMO
          1 0008EF  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 0008F2       0001                            DC       s:23006,PREL

     1016    23006    3             IF NOT FPT_X25.PRS.PRM2

  23006   1 0008F3  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 0008F5  82C6 000F                            LB,'4000'X        15,B6
          1 0008F7       4000
          1 0008F8  0501 000B                            BBT      s:23022,PREL

     1017    23007    3                THEN
     1018    23008    4                   DO;

     1019    23009        /*
     1020    23010           If the call is on VDH schedule thread, then no need for USREXT.
     1021    23011        */
     1022    23012                           %KV$USREXT ( VDI$ = VDI$ );
             23018    4           KV$VDI.BSY = '0'B;

  23018   1 0008FA  DCC7 000A                            LDB,B5   VDI$,AUTO
          1 0008FC  8845 0019                            LBF,'0080'X       25,B5
          1 0008FE       0080

             23020    4           KV$PTR$ = KV@USRENT.SVDPTR$;

  23020   1 0008FF  CCC7 002C                            LDB,B4   KV@USRENT,AUTO
          1 000901  CF80 0000 0000  xsym                 STB,B4   KV$PTR$

     1023    23022    4                   END;

     1024    23023    3   Y@DFR4:   RETURN;

  23023   1 000904  ECC7 0038            Y@DFR4          LDB,B6   LINSPDX+3,AUTO
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:146  
          1 000906  C3C6 0001                            LNJ,B4   1,B6

     1025    23024
     1026    23025
     1027    23026        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:147  
     1028    23027        /*
     1029    23028           The only other valid X.29 messages are:
     1030    23029             Set PAD message,
     1031    23030             Read PAD message,
     1032    23031             Set and Read PAD message,
     1033    23032             Invitation to clear PAD message.
     1034    23033           Or the message code is invalid.
     1035    23034           We do not expect any of these and should clear the circuit.
     1036    23035        */
     1037    23036    3          CASE (ELSE);

     1038    23037                  %WRSYSLOG ( ERRCOD = BAD_PAD_MSG,
     1039    23038                  TRMID = "KX$X29.CHN$->KH$CHN.TERMID",
     1040    23039                  BFR = BYT_ARY,
     1041    23040                  VAL0 = BYTX,
     1042    23041                  VAL1 = FPT_X25.V_.BYTSIZ );

  23057   1 000908  BCC7 0006                            LDB,B3   X29$,AUTO
          1 00090A  ACC3 0004                            LDB,B2   4,B3
          1 00090C  9BC5 000E                            LAB,B1   14,B5
          1 00090E  9FC7 0044                            STB,B1   FAIL_TO_SET+9,AUTO
          1 000910  EBC7 000F                            LAB,B6   BYTX,AUTO
          1 000912  EFC7 0042                            STB,B6   FAIL_TO_SET+7,AUTO
          1 000914  CFC7 0040                            STB,B4   FAIL_TO_SET+5,AUTO
          1 000916  EBC2 0012                            LAB,B6   18,B2
          1 000918  EFC7 003E                            STB,B6   FAIL_TO_SET+3,AUTO
          1 00091A  AB80 0000 0044  00                   LAB,B2   BAD_PAD_MSG
          1 00091D  AFC7 003C                            STB,B2   FAIL_TO_SET+1,AUTO
          1 00091F  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000921  CBF0 0500                            LAB,B4   1280,IMO
          1 000923  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          1 000926       0001                            DC       s:23063,PREL

     1043    23059        /*
     1044    23060           Increment the ERR_PAD count per this unknown X.29 message.
     1045    23061           Disconnect VC if exceeds limit.
     1046    23062        */
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:148  
     1047    23063    3             GOTO ERR_PAD; /*  under case (%KX_X29MSGTYP_ERRPAD#) */

  23063   1 000927  0F81 FEF8                            B        s:22905,PREL

     1048    23064
     1049    23065    3       END; /*  DO CASE  */

     1050    23066
     1051    23067    2   END Y$DECODE_X29;

  23067   1 000929  ECC7 0038                            LDB,B6   LINSPDX+3,AUTO
          1 00092B  C3C6 0001                            LNJ,B4   1,B6

     1052    23068
     1053    23069        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:149  
     1054    23070
     1055    23071        /*I*
     1056    23072             NAME: Y$COPY
     1057    23073             PURPOSE: When data arrive while the VC is in X.29 setup stage,
     1058    23074                      or while VDH is busy and have to defer processing,
     1059    23075                      buffer it up in a linked list so that they can be
     1060    23076                      handled as soon as setup is done.
     1061    23077        */
     1062    23078    1   Y$COPY: PROC ALTRET;

  23078   1 00092D  EFC7 0038            Y$COPY          STB,B6   LINSPDX+3,AUTO

     1063    23079
     1064    23080    2       KVBSIZ = SIZEW ( FPT_X25 ) + ( FPT_X25.V_.BYTSIZ + 1 ) / 2;

  23080   1 00092F  DCC7 0004                            LDB,B5   @FPT_X25,AUTO
          1 000931  E845 000E                            LDR,R6   14,B5
          1 000933  6E01                                 ADV,R6   1
          1 000934  6041                                 SOR,R6   1
          1 000935  6E10                                 ADV,R6   16
          1 000936  EF47 0011                            STR,R6   KVBSIZ,AUTO

     1065    23081    2       CALL KVB$GET2NSYS ( KVBSIZ, DAT$ )

  23081   1 000938  CBC7 0008                            LAB,B4   DAT$,AUTO
          1 00093A  CFC7 003E                            STB,B4   FAIL_TO_SET+3,AUTO
          1 00093C  BBC7 0011                            LAB,B3   KVBSIZ,AUTO
          1 00093E  BFC7 003C                            STB,B3   FAIL_TO_SET+1,AUTO
          1 000940  BBC7 003C                            LAB,B3   FAIL_TO_SET+1,AUTO
          1 000942  CBF0 0200                            LAB,B4   512,IMO
          1 000944  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          1 000947       0003                            DC       s:23087,PREL
          1 000948  0F81 0005                            B        s:23089,PREL

     1066    23082    2          WHENALTRETURN
     1067    23083    3             DO;

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:150  
     1068    23084        /*
     1069    23085           If no space available, altret and drop the data on the floor.
     1070    23086        */
     1071    23087    3                ALTRETURN;

  23087   1 00094A  ECC7 0038                            LDB,B6   LINSPDX+3,AUTO
          1 00094C  B806                                 LDR,R3   ,B6
          1 00094D  C3B6                                 LNJ,B4   ,B6,R3

     1072    23088    3             END;
     1073    23089    2       KX_STATS_X29.KHSTT.INPBFRBYTUTL = KX_STATS_X29.KHSTT.INPBFRBYTUTL + KVBSIZ*2;

  23089   1 00094E  F847 0011                            LDR,R7   KVBSIZ,AUTO
          1 000950  6C00                                 LDV,R6   0
          1 000951  7081                                 DOL,R7   1
          1 000952  8400 0000 001C  xsym                 AID      KX_STATS_X29+28
          1 000955  8D00 0000 001C  xsym                 SDI      KX_STATS_X29+28

     1074    23090    2       KX$X29_INPBFR.FPT = FPT_X25;

  23090   1 000958  ACC7 0004                            LDB,B2   @FPT_X25,AUTO
          1 00095A  2C00                                 LDV,R2   0
          1 00095B  6C20                                 LDV,R6   32
          1 00095C  BCC7 0008                            LDB,B3   DAT$,AUTO
          1 00095E  3C00                                 LDV,R3   0
          1 00095F  0008                                 MMM

     1075    23091    2       KX$X29_INPBFR.FPT.V_.ADR$ = DAT$;

  23091   1 000960  ECC7 0008                            LDB,B6   DAT$,AUTO
          1 000962  EFC6 000B                            STB,B6   11,B6

     1076    23092    2       KX$X29_INPBFR.FPT.V_.BYTX = SIZEW ( FPT_X25 ) * 2;

  23092   1 000964  6C20                                 LDV,R6   32
          1 000965  EF46 000D                            STR,R6   13,B6

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:151  
     1077    23093        /*
     1078    23094           Link this buffer into the chain.
     1079    23095           Notice that KX$X29_INPBFR.FPT.PRM1$ is used as the link pointer,
     1080    23096           and KX$X29_INPBFR.FPT.PRM1 is used to store the buffer word size.
     1081    23097        */
     1082    23098    2       KX$X29_INPBFR.FPT.PRM1 = KVBSIZ;

  23098   1 000967  D847 0011                            LDR,R5   KVBSIZ,AUTO
          1 000969  DF46 0005                            STR,R5   5,B6

     1083    23099
     1084    23100    2       IF KX$X29.INPBFR.HED$ = ADDR(NIL)

  23100   1 00096B  DCC7 0006                            LDB,B5   X29$,AUTO
          1 00096D  8DC5 0008                            CMN      8,B5
          1 00096F  0981 0007                            BNE      s:23104,PREL

     1085    23101    2          THEN
     1086    23102    2             KX$X29.INPBFR.HED$ = DAT$;

  23102   1 000971  CCC7 0008                            LDB,B4   DAT$,AUTO
          1 000973  CFC5 0008                            STB,B4   8,B5
          1 000975  0F81 0007                            B        s:23105,PREL

     1087    23103    2          ELSE
     1088    23104    2             KX$X29.INPBFR.TAL$->KX$X29_INPBFR.FPT.PRM1$ = DAT$;

  23104   1 000977  CCC5 000A                            LDB,B4   10,B5
          1 000979  BCC7 0008                            LDB,B3   DAT$,AUTO
          1 00097B  BFC4 0007                            STB,B3   7,B4

     1089    23105    2       KX$X29.INPBFR.TAL$ = DAT$;

  23105   1 00097D  ECC7 0008                            LDB,B6   DAT$,AUTO
          1 00097F  DCC7 0006                            LDB,B5   X29$,AUTO
          1 000981  EFC5 000A                            STB,B6   10,B5

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:152  
     1090    23106    2       KX$X29_INPBFR.FPT.PRM1$ = ADDR(NIL);

  23106   1 000983  CB80 0000 0000                       LAB,B4   0
          1 000986  CFC6 0007                            STB,B4   7,B6

     1091    23107        /*
     1092    23108           Copy the data into the buffer just obtained.
     1093    23109        */
     1094    23110    2       SUBSTR ( DSTR, KX$X29_INPBFR.FPT.V_.BYTX, FPT_X25.V_.BYTSIZ )

  23110   1 000988  ECC7 0008                            LDB,B6   DAT$,AUTO
          1 00098A  D846 000D                            LDR,R5   13,B6
          1 00098C  C842 000E                            LDR,R4   14,B2
          1 00098E  DCC2 000B                            LDB,B5   11,B2
          1 000990  B842 000D                            LDR,R3   13,B2
          1 000992  AB85                                 LAB,B2   ,B5
          1 000993  A853                                 LDR,R2   R3
          1 000994  E854                                 LDR,R6   R4
          1 000995  BB86                                 LAB,B3   ,B6
          1 000996  B855                                 LDR,R3   R5
          1 000997  0008                                 MMM

     1095    23111    2          = SUBSTR ( IN_STR, FPT_X25.V_.BYTX, FPT_X25.V_.BYTSIZ ) ;
     1096    23112
     1097    23113    2       RETURN;

  23113   1 000998  ECC7 0038                            LDB,B6   LINSPDX+3,AUTO
          1 00099A  C3C6 0001                            LNJ,B4   1,B6

     1098    23114
     1099    23115    2   END Y$COPY;
     1100    23116
     1101    23117        %EJECT;
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:153  
     1102    23118
     1103    23119
     1104    23120    1   END KXX$X29;

  23120   1 00099C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:154  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:155  
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$X29.
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:156  

 **** Variables and constants ****

  ****  Section 000 RoData KXX$X29

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    42-0-0/w STRC(32)    r     1 BAD_IND_BRK_MSG           44-0-0/w STRC(32)    r     1 BAD_PAD_MSG
    46-0-0/w STRC(32)    r     1 BAD_PRM_IND_MSG            0-0-0/w CHAR        r     1 CHAR_FE
    40-0-0/w STRC(32)    r     1 ERROR_PAD_MSG             3E-0-0/w STRC(32)    r     1 FAIL_TO_SET_X3
    3A-0-0/w STRC(32)    r     1 INVALID_INTACK            38-0-0/w STRC(32)    r     1 INVALID_VC_DCL
    36-0-0/w STRC(32)    r     1 KXX_VDH_DSC                1-0-0/w BIT (16)    r     1 KX_BFR_FEFE
     0-0-0/w BIT (8)     r     1 KX_CHAR_FE                12-0-0/w STRC(576)   r     1 KX_X29
    3C-0-0/w STRC(32)    r     1 UNEXP_PRM_IND             51-0-0/w STRC(48)    r     1 Y_BADRMTDCL
    54-0-0/w STRC(48)    r     1 Y_BADX29STT               48-0-0/w STRC(48)    r     1 Y_NO_X29CTX
     2-0-0/w UBIN(16)    r     1 Y_POWER_OF_2(0:15)
    57-0-0/w STRC(48)    r     1 Y_UNKEVT                  5A-0-0/w STRC(48)    r     1 Y_UNKSCHRSN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @FPT_X25                  3A-0-0/w UBIN(16)    r     1 BAD_PRM_IND
     F-0-0/w UBIN(16)    r     1 BYTX                      12-0-0/w STRC(256)   r     1 CALL_FPT
    34-0-0/b BIT         r     1 COMPARE                    8-0-0/w PTR         r     1 DAT$
    31-0-0/w UBIN(16)    r     1 ERR_TYP                   3B-0-0/w UBIN(16)    r     1 FAIL_TO_SET
    *0-0-0/w STRC(256)   r     1 FPT_X25                   30-0-0/w UBIN(16)    r     1 INV_MSG_COD
    2C-0-0/w STRC(32)    r     1 KV@USRENT                 22-0-0/w STRC(128)   r     1 KV@VDH_DAT
    2A-0-0/w STRC(32)    r     1 KV@VDH_DSC                11-0-0/w UBIN(16)    r     1 KVBSIZ
     C-0-0/w PTR         r     1 L3$                       35-0-0/w UBIN(16)    r     1 LINSPDX
    2F-0-0/w UBIN(16)    r     1 NEXT_FE                   10-0-0/w UBIN(16)    r     1 PRM_INDEX
    2E-0-0/w UBIN(16)    r     1 START                      A-0-0/w PTR         r     1 VDI$
     6-0-0/w PTR         r     1 X29$                       E-0-0/w UBIN(16)    r     1 Y@BYTSIZ

  ****  SYMREF variables  ****

PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:157  
  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$JIT$
     0-0-0/w UBIN(16)    r     1 KA_OTPUN_BLKLMT(0:15)
     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(128)   r     1 KV_VDH_DAT
     0-0-0/w STRC(32)    r     1 KV_VDH_EVT_CMPOTP          0-0-0/w STRC(32)    r     1 KV_VDH_EVT_RLSVDI
     0-0-0/w STRC(32)    r     1 KV_VDH_EVT_RQSOTP          0-0-0/w BIT (16)    r     1 KX_BFR_BRK
     0-0-0/c UBIN(8)     r     1 KX_LINSPDX_X3_TO_CP6(0:18)
     0-0-0/b EPTR        r     1 KX_PM$(0:2)                0-0-0/w STRC(1248)  r     1 KX_STATS_X29
     0-0-0/w UBIN(16)    r     1 KX_X29MLTMR                0-0-0/w UBIN(16)    r     1 KX_X29_ERR_PAD_LMT
     0-0-0/b BIT         r     1 KX_X3_INT_EQ_BRK(0:31)
     0-0-0/b BIT         r     1 KX_X3_RST_EQ_BRK(0:31)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 B$SCODE                    0-0-0/c UBIN(8)     r     1 BYT_ARY(0:2000)
     0-0-0/c CHAR(2000)  r     1 DSTR                       0-0-0/c CHAR(2000)  r     1 IN_STR
     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(8960)  r     1 KV$STT
     0-0-0/w STRC(912)   r     1 KV$USRPRM                  0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(2320)  r     1 KX$L3                      0-0-0/w STRC(576)   r     1 KX$X29
     0-0-0/w STRC(256)   r     1 KX$X29_INPBFR              0-0-0/w STRC(64)    r     1 KX$X29_OTPBFR


   Procedure KXX$X29 requires 2463 words for executable code.
   Procedure KXX$X29 requires 71 words of local(AUTO) storage.

    No errors detected in file KXX$X29.:E05TSI    .
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:158  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:159  
          MINI XREF LISTING

B$SCODE
     19541**DCL     22507<>CALL    22914<>CALL
BAD_IND_BRK_MSG
     21279**DCL     22951<>CALL
BAD_PAD_MSG
     21331**DCL     23057<>CALL
BAD_PRM_IND IN PROCEDURE Y$DECODE_X29
     22661**DCL     22714<<ASSIGN  22720<<ASSIGN  22735>>IF      22738>>ASSIGN  22739<<ASSIGN  22739>>ASSIGN
     22760<>CALL
BAD_PRM_IND_MSG
     21383**DCL     22760<>CALL
BRK2VDH
     22179**LABEL   22326--GOTO
BYTX
     17316**DCL     22665<<ASSIGN  22666>>DOCASE  22713<<ASSIGN  22713>>ASSIGN  22716>>DOWHILE 22717>>ASSIGN
     22720>>ASSIGN  22723>>IF      22726>>ASSIGN  22727>>ASSIGN  22729<<ASSIGN  22729>>ASSIGN  22738<<ASSIGN
     22760<>CALL    22766<<ASSIGN  22788<>CALL    22879>>ASSIGN  22882>>ASSIGN  22930>>IF      22930>>IF
     23057<>CALL
BYT_ARY
     18253**DCL     22666>>DOCASE  22717>>ASSIGN  22723>>IF      22727>>ASSIGN  22738>>ASSIGN  22739>>ASSIGN
     22760<>CALL    22766>>ASSIGN  22767>>ASSIGN  22788<>CALL    22879>>ASSIGN  22882>>ASSIGN  22930>>IF
     22930>>IF      23057<>CALL
CALL_FPT
     17346**DCL     22251<<ASSIGN  22255<>CALL    22283<<ASSIGN  22288<>CALL    22310<<ASSIGN  22314<>CALL
     22908<<ASSIGN  22912<>CALL
CALL_FPT.CAL$
     17350**DCL     22252<<ASSIGN  22311<<ASSIGN  22909<<ASSIGN
CALL_FPT.EVN
     17350**DCL     22254<<ASSIGN  22285<<ASSIGN  22313<<ASSIGN  22911<<ASSIGN
CALL_FPT.PRM1
     17351**DCL     22286<<ASSIGN
CALL_FPT.PRM1$
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:160  
     17351**DCL     17352--REDEF   22507>>CALL    22914>>CALL
CALL_FPT.PRM2$
     17353**DCL     17353--REDEF
CALL_FPT.PRS.PRM1
     17356**DCL     22287<<ASSIGN
CALL_FPT.RCV$
     17350**DCL     22253<<ASSIGN  22284<<ASSIGN  22312<<ASSIGN  22910<<ASSIGN
CHAR_FE
     19625**DCL     22568>>CALLBLT
COMPARE
     17504**DCL     22707<<ASSIGN  22709<<ASSIGN  22723>>IF
DAT$
     17312**DCL     17528--IMP-PTR 17551--IMP-PTR 18253--IMP-PTR 18254--IMP-PTR 22008<<ASSIGN  22009>>ASSIGN
     22010>>IF      22016>>IF      22019>>ASSIGN  22020>>CALL    22022>>ASSIGN  22024<>CALL    22091<<ASSIGN
     22092>>IF      22095>>IF      22105>>IF      22108>>IF      22111>>ASSIGN  22112>>ASSIGN  22118<<ASSIGN
     22119>>IF      22125>>ASSIGN  22126>>IF      22126>>IF      22134>>ASSIGN  22135>>CALL    22136>>ASSIGN
     22137>>ASSIGN  22139<>CALL    22142>>ASSIGN  22144>>ASSIGN  22145>>ASSIGN  22416<<ASSIGN  22417>>ASSIGN
     22418>>IF      22421>>ASSIGN  22422>>CALL    22424>>ASSIGN  22425<>CALL    22663<<ASSIGN  22666>>DOCASE
     22717>>ASSIGN  22723>>IF      22727>>ASSIGN  22738>>ASSIGN  22739>>ASSIGN  22760>>CALL    22766>>ASSIGN
     22767>>ASSIGN  22788>>CALL    22879>>ASSIGN  22882>>ASSIGN  22930>>IF      22930>>IF      23057>>CALL
     23081<>CALL    23090>>ASSIGN  23091>>ASSIGN  23091>>ASSIGN  23092>>ASSIGN  23098>>ASSIGN  23102>>ASSIGN
     23104>>ASSIGN  23105>>ASSIGN  23106>>ASSIGN  23110>>ASSIGN  23110>>ASSIGN
DSTR
     18254**DCL     23110<<ASSIGN
ERROR_PAD_MSG
     21227**DCL     22902<>CALL
ERR_PAD IN PROCEDURE Y$DECODE_X29
     22905**LABEL   23063--GOTO
ERR_TYP
     17502**DCL     22882<<ASSIGN  22902<>CALL
EXT_RET
     22146**LABEL   22094--GOTO    22097--CALLALT 22104--GOTO    22114--GOTO    22455--GOTO
FAIL_TO_SET IN PROCEDURE Y$DECODE_X29
     22662**DCL     22715<<ASSIGN  22726<<ASSIGN  22763>>IF      22766>>ASSIGN  22767<<ASSIGN  22767>>ASSIGN
     22788<>CALL
FAIL_TO_SET_X3
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:161  
     21174**DCL     22788<>CALL
FPT_X25
     17294**DCL        12--PROC    23080--ASSIGN  23090>>ASSIGN  23092--ASSIGN
FPT_X25.CAL$
     17298**DCL     21882>>ASSIGN  22308>>ASSIGN
FPT_X25.EVN
     17298**DCL     21898>>IF      21908>>DOCASE
FPT_X25.PRM1
     17299**DCL     22301<<ASSIGN
FPT_X25.PRM1$
     17299**DCL     17300--REDEF
FPT_X25.PRM2
     17299**DCL     22300<<ASSIGN
FPT_X25.PRM2$
     17301**DCL     17301--REDEF   22306>>ASSIGN
FPT_X25.PRS.PRM1
     17304**DCL     22145<<ASSIGN  22519>>IF
FPT_X25.PRS.PRM2
     17304**DCL     22531>>IF      22611>>IF      22963>>IF      23006>>IF
FPT_X25.RCV$
     17298**DCL     21883>>ASSIGN  22299<<ASSIGN  22370<<ASSIGN
FPT_X25.V_.ADR$
     17302**DCL     18252--IMP-PTR 22142<<ASSIGN  22568>>CALLBLT 22573>>ASSIGN  22663>>ASSIGN  23110>>ASSIGN
FPT_X25.V_.BYTSIZ
     17303**DCL     22144<<ASSIGN  22567>>DOWHILE 22568>>CALLBLT 22578>>IF      22716>>DOWHILE 22732>>IF
     22877>>IF      22930>>IF      23057<>CALL    23080>>ASSIGN  23110>>ASSIGN  23110>>ASSIGN
FPT_X25.V_.BYTX
     17303**DCL     22143<<ASSIGN  22568>>CALLBLT 22574>>ASSIGN  22665>>ASSIGN  22716>>DOWHILE 23110>>ASSIGN
G$JIT.ERRLOG
     18181**DCL     18184--REDEF
G$JIT.JSUNIT
     17920**DCL     17921--REDEF
G$JIT.MCLS
     17919**DCL     17919--REDEF
G$JIT.TMRZ
     18188**DCL     18189--REDEF
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:162  
G$JIT.USER_EXTIME
     17912**DCL     17913--REDEF
G$JIT.USER_MEMTIME
     17915**DCL     17915--REDEF
G$JIT.USER_SVTIME
     17914**DCL     17914--REDEF
G$JIT$
     20362**DCL     17851--IMP-PTR
INVALID_INTACK
     21072**DCL     22249<>CALL
INVALID_VC_DCL
     21021**DCL     21938<>CALL
INV_MSG_COD
     17501**DCL     22879<<ASSIGN  22881<<ASSIGN  22902<>CALL
IN_STR
     18252**DCL     22568>>CALLBLT 23110>>ASSIGN
KA_OTPUN_BLKLMT
     20992**DCL     22059>>IF
KH$CHN.TERMID
     17822**DCL     21938<>CALL    22249<>CALL    22699<>CALL    22760<>CALL    22788<>CALL    22902<>CALL
     22951<>CALL    23057<>CALL
KH$CHN.TERMID.TERM
     17824**DCL     17833--REDEF
KH$CHN.TERMID.TTYP
     17824**DCL     22307<<ASSIGN
KHD$SCREECH
     21858**DCL-ENT 21905--CALL    22268--CALL    22483--CALL    22501--CALL    22507--CALL    22639--CALL
     22914--CALL
KH_CHNHI
     19615**DCL     19616--REDEF
KH_CHNLOW
     19616**DCL     19617--REDEF
KV$PTR.INPCNDPND
     18727**DCL     18736--REDEF   18740--REDEF
KV$PTR.LINLST$
     18723**DCL     18724--REDEF
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:163  
KV$PTR$
     18715**DCL     18721--IMP-PTR 21996>>ASSIGN  21997<<ASSIGN  22157<<ASSIGN  22197>>ASSIGN  22198<<ASSIGN
     22220<<ASSIGN  22396>>ASSIGN  22397<<ASSIGN  22554>>ASSIGN  22555<<ASSIGN  22625<<ASSIGN  22838>>ASSIGN
     22839<<ASSIGN  22859<<ASSIGN  22986>>ASSIGN  22987<<ASSIGN  23020<<ASSIGN
KV$STT.REQSTATS.DSPMSK
     18579**DCL     18585--REDEF
KV$STT.REQSTATS.SLCMSK
     18620**DCL     18627--REDEF
KV$STT.USRENTCNT
     18689**DCL     21993<<ASSIGN  21993>>ASSIGN  22194<<ASSIGN  22194>>ASSIGN  22393<<ASSIGN  22393>>ASSIGN
     22551<<ASSIGN  22551>>ASSIGN  22835<<ASSIGN  22835>>ASSIGN  22983<<ASSIGN  22983>>ASSIGN
KV$STT.USRENTDFRCNT
     18690**DCL     22001<<ASSIGN  22001>>ASSIGN  22202<<ASSIGN  22202>>ASSIGN  22401<<ASSIGN  22401>>ASSIGN
     22559<<ASSIGN  22559>>ASSIGN  22843<<ASSIGN  22843>>ASSIGN  22991<<ASSIGN  22991>>ASSIGN
KV$USRPRM.STT$
     18303**DCL     21993>>ASSIGN  21993>>ASSIGN  22001>>ASSIGN  22001>>ASSIGN  22194>>ASSIGN  22194>>ASSIGN
     22202>>ASSIGN  22202>>ASSIGN  22393>>ASSIGN  22393>>ASSIGN  22401>>ASSIGN  22401>>ASSIGN  22551>>ASSIGN
     22551>>ASSIGN  22559>>ASSIGN  22559>>ASSIGN  22835>>ASSIGN  22835>>ASSIGN  22843>>ASSIGN  22843>>ASSIGN
     22983>>ASSIGN  22983>>ASSIGN  22991>>ASSIGN  22991>>ASSIGN
KV$VDI
     17662**DCL     22097<>CALL
KV$VDI.ASNINPPTR$
     17663**DCL     21997>>ASSIGN  22198>>ASSIGN  22397>>ASSIGN  22555>>ASSIGN  22839>>ASSIGN  22987>>ASSIGN
KV$VDI.BSY
     17697**DCL     21994>>IF      21995<<ASSIGN  22155<<ASSIGN  22195>>IF      22196<<ASSIGN  22218<<ASSIGN
     22394>>IF      22395<<ASSIGN  22552>>IF      22553<<ASSIGN  22623<<ASSIGN  22836>>IF      22837<<ASSIGN
     22857<<ASSIGN  22984>>IF      22985<<ASSIGN  23018<<ASSIGN
KV$VDI.DFR.USR
     17694**DCL     22000<<ASSIGN  22201<<ASSIGN  22400<<ASSIGN  22558<<ASSIGN  22842<<ASSIGN  22990<<ASSIGN
KV$VDI.INTPHSDSC
     17701**DCL     22099>>IF
KV$VDI.LINSPD
     17704**DCL     22059>>IF
KV$VDI.OTPBFR_.ADR$
     17688**DCL     22095>>IF      22126>>IF      22413<<ASSIGN
KV$VDI.OTPBFR_.BYTSIZ
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:164  
     17688**DCL     22411<<ASSIGN
KV$VDI.OTPBFR_.BYTX
     17688**DCL     22412<<ASSIGN
KV$VDI.OTPCNDPND
     17699**DCL     22050>>IF      22606>>IF
KV$VDI.PHSDSC
     17697**DCL     22099>>IF      22407<<ASSIGN
KV$VDI.RE_DSPINP
     17697**DCL     22039>>IF      22043<<ASSIGN  22597>>IF
KV$VDI.RQSOTP
     17698**DCL     22074>>IF      22075<<ASSIGN  22442>>IF      22443<<ASSIGN
KV$VDI.USRPRM$
     17663**DCL     21993>>ASSIGN  21993>>ASSIGN  22001>>ASSIGN  22001>>ASSIGN  22194>>ASSIGN  22194>>ASSIGN
     22202>>ASSIGN  22202>>ASSIGN  22393>>ASSIGN  22393>>ASSIGN  22401>>ASSIGN  22401>>ASSIGN  22551>>ASSIGN
     22551>>ASSIGN  22559>>ASSIGN  22559>>ASSIGN  22835>>ASSIGN  22835>>ASSIGN  22843>>ASSIGN  22843>>ASSIGN
     22983>>ASSIGN  22983>>ASSIGN  22991>>ASSIGN  22991>>ASSIGN
KV$VDI.VDHEVTENB
     17710**DCL     22080>>IF      22448>>IF
KV@USRENT.SVDPTR$
     17497**DCL     21996<<ASSIGN  22157>>ASSIGN  22197<<ASSIGN  22220>>ASSIGN  22396<<ASSIGN  22554<<ASSIGN
     22625>>ASSIGN  22838<<ASSIGN  22859>>ASSIGN  22986<<ASSIGN  23020>>ASSIGN
KV@VDH_DAT
     17396**DCL     22207<<ASSIGN  22211<>CALL    22572<<ASSIGN  22576<>CALL    22581<<ASSIGN  22585<>CALL
     23001<<ASSIGN  23005<>CALL
KV@VDH_DAT.DAT__.ADR$
     17432**DCL     22208<<ASSIGN  22573<<ASSIGN  22582<<ASSIGN  23002<<ASSIGN
KV@VDH_DAT.DAT__.BFRBYTSIZ
     17433**DCL     22210<<ASSIGN  22584<<ASSIGN  23004<<ASSIGN
KV@VDH_DAT.DAT__.BYTX
     17432**DCL     22574<<ASSIGN
KV@VDH_DAT.DAT__.DATBYTSIZ
     17432**DCL     22209<<ASSIGN  22575<<ASSIGN  22583<<ASSIGN  23003<<ASSIGN
KV@VDH_DSC
     17470**DCL     22408<<ASSIGN  22409<>CALL
KVB$GET2NSYS
     21857**DCL-ENT 23081--CALL
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:165  
KVB$GETSYS
     21856**DCL-ENT 22280--CALL
KVB$RLSSYS
     21855**DCL-ENT 22024--CALL    22139--CALL    22425--CALL
KVBSIZ
     17318**DCL     23080<<ASSIGN  23081<>CALL    23089>>ASSIGN  23098>>ASSIGN
KVI$RE_DSPINP
     21867**DCL-ENT 22042--CALL    22598--CALL
KVV$VDI
     21865**DCL-ENT 22051--CALL    22076--CALL    22088--CALL    22211--CALL    22409--CALL    22444--CALL
     22452--CALL    22576--CALL    22585--CALL    22607--CALL    23005--CALL
KV_VDH_DAT
     20823**DCL     22207>>ASSIGN  22572>>ASSIGN  22581>>ASSIGN  23001>>ASSIGN
KV_VDH_EVT_CMPOTP
     20782**DCL     22051<>CALL    22607<>CALL
KV_VDH_EVT_RLSVDI
     20934**DCL     22088<>CALL    22452<>CALL
KV_VDH_EVT_RQSOTP
     20969**DCL     22076<>CALL    22444<>CALL
KX$DATA.RLS_STAT
     19590**DCL     19591--REDEF
KX$L2.DFLVCPRF.TRADEL
     18901**DCL     18911--REDEF
KX$L2.DSTSNPA.ADR_STRING
     19092**DCL     19092--REDEF
KX$L2.FRMR_NSNR
     18878**DCL     18879--REDEF
KX$L2.NTWADR.ADR_STRING
     18812**DCL     18812--REDEF
KX$L2.STATES
     18790**DCL     18790--REDEF
KX$L3.CALL_OPTS.RCVADR.ADR_STRING
     19170**DCL     19170--REDEF
KX$L3.CHN$
     19131**DCL     21938>>CALL
KX$L3.CM_OPTS.RCVADR.ADR_STRING
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:166  
     19205**DCL     19205--REDEF
KX$L3.CUG
     19248**DCL     19249--REDEF
KX$L3.DFL_OPTS.RCVADR.ADR_STRING
     19240**DCL     19240--REDEF
KX$L3.LCLADR.ADR_STRING
     19365**DCL     19365--REDEF
KX$L3.LCLNSAP
     19382**DCL     19438--REDEF
KX$L3.LCLNSAP.NSAP.ADDRESS_N
     19433**DCL     19434--REDEF
KX$L3.LCN#
     19247**DCL     19248--REDEF
KX$L3.PVC
     19244**DCL     21898>>IF      21916>>IF      22343>>IF
KX$L3.RMTNSAP
     19455**DCL     19511--REDEF
KX$L3.RMTNSAP.NSAP.ADDRESS_N
     19506**DCL     19507--REDEF
KX$L3.STATES
     19253**DCL     19253--REDEF
KX$L3.TRNDLY
     19249**DCL     19250--REDEF
KX$L3.TRNDLYIND
     19250**DCL     19251--REDEF
KX$X29
     17620**DCL     22179<>CALL    22280--CALL    22292--ASSIGN  22304<<ASSIGN  22369<>CALL    22491<>CALL
     22800<>CALL    22811<>CALL    22960<>CALL    23000<>CALL
KX$X29.CHN$
     17624**DCL     22249>>CALL    22306<<ASSIGN  22307>>ASSIGN  22699>>CALL    22760>>CALL    22788>>CALL
     22902>>CALL    22951>>CALL    23057>>CALL
KX$X29.ERR_PAD
     17636**DCL     22904<<ASSIGN  22904>>ASSIGN  22905>>IF
KX$X29.HLTOTP
     17630**DCL     17630--REDEF   22080>>IF      22102>>IF      22589>>IF
KX$X29.HLTOTP.BITT
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:167  
     17630**DCL     22734<<ASSIGN
KX$X29.HLTOTPNXTBFR
     17633**DCL     17634--REDEF   22014<<ASSIGN
KX$X29.HLTOTPNXTBFR_ALL
     17634**DCL     22013>>ASSIGN
KX$X29.HLTOTP_ALL
     17630**DCL     22013<<ASSIGN  22013>>ASSIGN  22111<<ASSIGN  22111>>ASSIGN
KX$X29.INPBFR.HED$
     17625**DCL     23100>>IF      23102<<ASSIGN
KX$X29.INPBFR.TAL$
     17626**DCL     23104>>ASSIGN  23105<<ASSIGN
KX$X29.L3$
     17625**DCL     22308<<ASSIGN  22467<<ASSIGN
KX$X29.OTPBFRBYTCNT
     17628**DCL     22023<<ASSIGN  22023>>ASSIGN  22059>>IF      22138<<ASSIGN  22138>>ASSIGN  22428<<ASSIGN
KX$X29.RPRDAT
     17635**DCL     21966<<ASSIGN  22031<<ASSIGN  22122<<ASSIGN  22161<<ASSIGN  22589>>IF
KX$X29.SND.HED$
     17626**DCL     21963>>IF      22007>>DOWHILE 22008>>ASSIGN  22009<<ASSIGN  22027>>IF      22059>>IF
     22080>>IF      22108>>IF      22136<<ASSIGN  22415>>DOWHILE 22416>>ASSIGN  22417<<ASSIGN
KX$X29.SND.NXTLOD$
     17627**DCL     22007>>DOWHILE 22091>>ASSIGN  22118>>ASSIGN  22125<<ASSIGN  22453<<ASSIGN
KX$X29.SND.TAL$
     17627**DCL     22010>>IF      22030<<ASSIGN  22036>>IF      22059>>IF      22454<<ASSIGN
KX$X29.STATE
     17637**DCL     22033>>IF      22172>>IF      22305<<ASSIGN  22323>>IF      22354>>IF      22357<<ASSIGN
     22366>>IF      22410<<ASSIGN  22477>>IF      22486<<ASSIGN  22521>>DOCASE  22705>>IF      22791>>IF
     22799<<ASSIGN  22803>>IF      22814<<ASSIGN
KX$X29.VDHEXTCAL
     17635**DCL     21975>>IF      22146>>IF      22376>>IF
KX$X29.VDI$
     17624**DCL     21887>>ASSIGN  22360>>IF      22835>>ASSIGN  22835>>ASSIGN  22836>>IF      22837>>ASSIGN
     22839>>ASSIGN  22842>>ASSIGN  22843>>ASSIGN  22843>>ASSIGN  22957>>IF
KX$X29.WAT4PRM
     17632**DCL     22492<<ASSIGN  22492>>ASSIGN  22675>>IF      22810<<ASSIGN  22810>>ASSIGN
KX$X29.X3PRM
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:168  
     17638**DCL     22172>>IF      22323>>IF      22723>>IF      22727<<ASSIGN  22815>>ASSIGN
KX$X29_INPBFR.FPT
     17585**DCL     23090<<ASSIGN
KX$X29_INPBFR.FPT.PRM1
     17588**DCL     23098<<ASSIGN
KX$X29_INPBFR.FPT.PRM1$
     17588**DCL     17589--REDEF   23104<<ASSIGN  23106<<ASSIGN
KX$X29_INPBFR.FPT.PRM2$
     17590**DCL     17590--REDEF
KX$X29_INPBFR.FPT.V_.ADR$
     17591**DCL     23091<<ASSIGN
KX$X29_INPBFR.FPT.V_.BYTX
     17592**DCL     23092<<ASSIGN  23110>>ASSIGN
KX$X29_OTPBFR
     17528**DCL     22020<>CALL    22135<>CALL    22143--ASSIGN  22412--ASSIGN  22422<>CALL
KX$X29_OTPBFR.BYTCNT
     17533**DCL     22126>>IF      22144>>ASSIGN
KX$X29_OTPBFR.BYTSIZLOG2
     17533**DCL     22022>>ASSIGN  22137>>ASSIGN  22424>>ASSIGN
KX$X29_OTPBFR.DLT
     17534**DCL     22019<<ASSIGN  22134<<ASSIGN  22421<<ASSIGN
KX$X29_OTPBFR.HLTOTP
     17532**DCL     17533--REDEF
KX$X29_OTPBFR.HLTOTP_ALL
     17533**DCL     22105>>IF      22111>>ASSIGN  22112<<ASSIGN
KX$X29_OTPBFR.LNK$
     17532**DCL     22009>>ASSIGN  22125>>ASSIGN  22136>>ASSIGN  22417>>ASSIGN
KX$X29_OTPBFR.NMBMRK
     17534**DCL     22016>>IF      22418>>IF
KX$X29_OTPBFR.Q
     17534**DCL     22145>>ASSIGN
KXP$PACKET
     21863**DCL-ENT 22255--CALL    22288--CALL    22314--CALL    22912--CALL
KXS$SYSLOG
     21871**DCL-ENT 21938--CALL    22249--CALL    22699--CALL    22760--CALL    22788--CALL    22902--CALL
     22951--CALL    23057--CALL
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:169  
KXX$INTCNC
     21862**DCL-ENT 22811--CALL
KXX$MRK
     21860**DCL-ENT 22020--CALL    22135--CALL    22422--CALL
KXX$RLSCTX
     21861**DCL-ENT 22369--CALL
KXX$SNDX29MSG
     21864**DCL-ENT 22179--CALL    22491--CALL    22800--CALL    22960--CALL    23000--CALL
KXX$TRNOTP
     21859**DCL-ENT 22097--CALL
KXX$X29
        12**PROC    19654--DCLINIT
KXX_VDH_DSC
     20898**DCL     22408>>ASSIGN
KX_BFR_BRK
     19627**DCL     22208--ASSIGN  23002--ASSIGN
KX_BFR_FEFE
     19626**DCL     22582--ASSIGN
KX_CHAR_FE
     19624**DCL     19625--REDEF
KX_LINSPDX_X3_TO_CP6
     19628**DCL     22815>>ASSIGN
KX_STATS_HDLC.REQSTATS.DSPMSK
     19959**DCL     19965--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     20000**DCL     20007--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     20284**DCL     20290--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     20325**DCL     20332--REDEF
KX_STATS_X29.CIRCUITS
     20752**DCL     22293<<ASSIGN  22293>>ASSIGN
KX_STATS_X29.KHSTT.CTXBYTUTL
     20748**DCL     22292<<ASSIGN  22292>>ASSIGN
KX_STATS_X29.KHSTT.INPBFRBYTUTL
     20747**DCL     23089<<ASSIGN  23089>>ASSIGN
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:170  
KX_STATS_X29.KHSTT.OTPBFRBYTUTL
     20747**DCL     22025<<ASSIGN  22025>>ASSIGN  22426<<ASSIGN  22426>>ASSIGN
KX_STATS_X29.LINSPDDST
     20750**DCL     22816<<ASSIGN  22816>>ASSIGN
KX_STATS_X29.REQSTATS.DSPMSK
     20675**DCL     20681--REDEF
KX_STATS_X29.REQSTATS.SLCMSK
     20716**DCL     20723--REDEF
KX_X29
     19650**DCL     22304>>ASSIGN
KX_X29.HLTOTP
     19660**DCL     19660--REDEF
KX_X29.HLTOTPNXTBFR
     19663**DCL     19664--REDEF
KX_X29MLTMR
     20354**DCL     22300>>ASSIGN
KX_X29_ERR_PAD_LMT
     19620**DCL     22905>>IF
KX_X3_INT_EQ_BRK
     19621**DCL     22172>>IF
KX_X3_RST_EQ_BRK
     19622**DCL     22323>>IF
L3$
     17314**DCL     19130--IMP-PTR 21882<<ASSIGN  21898>>IF      21916>>IF      21938>>CALL    22253>>ASSIGN
     22284>>ASSIGN  22312>>ASSIGN  22343>>IF      22910>>ASSIGN
LINSPDX
     17505**DCL     22815<<ASSIGN  22816>>ASSIGN  22816>>ASSIGN
NEXT_FE
     17500**DCL     22568<<CALLBLT 22569>>IF      22575>>ASSIGN  22578>>IF      22587>>ASSIGN
NXT_BFR
     22027**LABEL   22140--GOTO
PRM_INDEX
     17317**DCL     22717<<ASSIGN  22718>>IF      22723>>IF      22727>>ASSIGN  22732>>IF
RMTDCL_ENTRY
     22254**LABEL   21918--GOTO
SCREECH_KXP
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:171  
     22507**LABEL   22255--CALLALT 22288--CALLALT 22314--CALLALT
START
     17499**DCL     22566<<ASSIGN  22567>>DOWHILE 22568>>CALLBLT 22569>>IF      22574>>ASSIGN  22575>>ASSIGN
     22587<<ASSIGN
UNEXP_PRM_IND
     21123**DCL     22699<>CALL
VCLST_ENTRY
     22343**LABEL   22345--GOTO
VDI$
     17313**DCL     17662--IMP-PTR 21887<<ASSIGN  21891<<ASSIGN  21972>>IF      21993>>ASSIGN  21993>>ASSIGN
     21994>>IF      21995>>ASSIGN  21997>>ASSIGN  22000>>ASSIGN  22001>>ASSIGN  22001>>ASSIGN  22039>>IF
     22043>>ASSIGN  22050>>IF      22059>>IF      22074>>IF      22075>>ASSIGN  22080>>IF      22095>>IF
     22097>>CALL    22099>>IF      22099>>IF      22126>>IF      22146>>IF      22155>>ASSIGN  22194>>ASSIGN
     22194>>ASSIGN  22195>>IF      22196>>ASSIGN  22198>>ASSIGN  22201>>ASSIGN  22202>>ASSIGN  22202>>ASSIGN
     22218>>ASSIGN  22393>>ASSIGN  22393>>ASSIGN  22394>>IF      22395>>ASSIGN  22397>>ASSIGN  22400>>ASSIGN
     22401>>ASSIGN  22401>>ASSIGN  22407>>ASSIGN  22411>>ASSIGN  22412>>ASSIGN  22413>>ASSIGN  22442>>IF
     22443>>ASSIGN  22448>>IF      22525>>IF      22551>>ASSIGN  22551>>ASSIGN  22552>>IF      22553>>ASSIGN
     22555>>ASSIGN  22558>>ASSIGN  22559>>ASSIGN  22559>>ASSIGN  22597>>IF      22606>>IF      22623>>ASSIGN
     22857>>ASSIGN  22983>>ASSIGN  22983>>ASSIGN  22984>>IF      22985>>ASSIGN  22987>>ASSIGN  22990>>ASSIGN
     22991>>ASSIGN  22991>>ASSIGN  23018>>ASSIGN
X29$
     17311**DCL     17620--IMP-PTR 21883<<ASSIGN  21884>>IF      21887>>ASSIGN  21898>>IF      21963>>IF
     21966>>ASSIGN  21975>>IF      22007>>DOWHILE 22007>>DOWHILE 22008>>ASSIGN  22009>>ASSIGN  22010>>IF
     22013>>ASSIGN  22013>>ASSIGN  22013>>ASSIGN  22014>>ASSIGN  22023>>ASSIGN  22023>>ASSIGN  22027>>IF
     22030>>ASSIGN  22031>>ASSIGN  22033>>IF      22036>>IF      22059>>IF      22059>>IF      22059>>IF
     22080>>IF      22080>>IF      22091>>ASSIGN  22102>>IF      22108>>IF      22111>>ASSIGN  22111>>ASSIGN
     22118>>ASSIGN  22122>>ASSIGN  22125>>ASSIGN  22136>>ASSIGN  22138>>ASSIGN  22138>>ASSIGN  22146>>IF
     22161>>ASSIGN  22172>>IF      22172>>IF      22179>>CALL    22249>>CALL    22252>>ASSIGN  22265>>IF
     22280<>CALL    22299>>ASSIGN  22304>>ASSIGN  22305>>ASSIGN  22306>>ASSIGN  22307>>ASSIGN  22308>>ASSIGN
     22311>>ASSIGN  22323>>IF      22323>>IF      22354>>IF      22357>>ASSIGN  22360>>IF      22366>>IF
     22369>>CALL    22376>>IF      22410>>ASSIGN  22415>>DOWHILE 22416>>ASSIGN  22417>>ASSIGN  22428>>ASSIGN
     22453>>ASSIGN  22454>>ASSIGN  22467>>ASSIGN  22477>>IF      22486>>ASSIGN  22491>>CALL    22492>>ASSIGN
     22492>>ASSIGN  22521>>DOCASE  22589>>IF      22589>>IF      22675>>IF      22699>>CALL    22705>>IF
     22723>>IF      22727>>ASSIGN  22734>>ASSIGN  22760>>CALL    22788>>CALL    22791>>IF      22799>>ASSIGN
     22800>>CALL    22803>>IF      22810>>ASSIGN  22810>>ASSIGN  22811>>CALL    22814>>ASSIGN  22815>>ASSIGN
     22835>>ASSIGN  22835>>ASSIGN  22836>>IF      22837>>ASSIGN  22839>>ASSIGN  22842>>ASSIGN  22843>>ASSIGN
PL6.E3A0      #001=KXX$X29 File=KXX$X29.:E05TSI                                  WED 07/30/97 02:34 Page:172  
     22843>>ASSIGN  22902>>CALL    22904>>ASSIGN  22904>>ASSIGN  22905>>IF      22909>>ASSIGN  22951>>CALL
     22957>>IF      22960>>CALL    23000>>CALL    23057>>CALL    23100>>IF      23102>>ASSIGN  23104>>ASSIGN
     23105>>ASSIGN
Y$COPY
     23078**PROC    22631--CALL
Y$DATIN
     22511**PROC    21950--CALL
Y$DECODE_X29
     22659**PROC    22646--CALL
Y@BYTSIZ
     17315**DCL     22022<<ASSIGN  22023>>ASSIGN  22024>>CALL    22025>>ASSIGN  22137<<ASSIGN  22138>>ASSIGN
     22139>>CALL    22424<<ASSIGN  22425>>CALL    22426>>ASSIGN
Y@DFR2
     22453**LABEL   22402--GOTO
Y@DFR3 IN PROCEDURE Y$DATIN
     22631**LABEL   22560--GOTO
Y@DFR4 IN PROCEDURE Y$DECODE_X29
     23023**LABEL   22992--GOTO
Y@DFR5
     22161**LABEL   22002--GOTO
Y@DFR6 IN PROCEDURE Y$DECODE_X29
     22859**LABEL   22844--GOTO
Y@DFR7
     22210**LABEL   22203--GOTO
Y_BADRMTDCL
     21631**DCL     22268<>CALL
Y_BADX29STT
     21692**DCL     22483<>CALL
Y_NO_X29CTX
     21448**DCL     21905<>CALL
Y_POWER_OF_2
     19629**DCL     22022>>ASSIGN  22137>>ASSIGN  22424>>ASSIGN
Y_UNKEVT
     21753**DCL     22501<>CALL
Y_UNKSCHRSN
     21814**DCL     22639<>CALL
