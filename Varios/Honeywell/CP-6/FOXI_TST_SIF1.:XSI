      PROGRAM FOXI_TST
C*T***********************************************************
C*T*                                                         *
C*T* Copyright (c) Bull HN Information Systems Inc., 1989    *
C*T*                                                         *
C*T***********************************************************
C *
C *      This program is used to test the improvement in performance made
C *      possible by substituting FOXI I/O for Fortran I/O.  When compiled
C *      with the X compilation option, FOXI I/O will be included; when
C *      compiled with the Y option, Fortran I/O will be used.  Compilation
C *      with the X and Z options illustrates the savings gained by using
C *      COBOL-style DCB numbers as the UNIT specifier for FOXI calls.
C *
C *      Invocation:
C *
C *         !FOXI_TST.  infile  how  outfile
C *
C *      Andrew E. Birner
C *      25 June, 1987
C *
      CHARACTER RECBUF*511, INFID*64 /' '/, OUTFID*64 /' '/
C *
      INTEGER RECARS, IOS200, IOS400, DCB200, DCB400, RECCOUNT, ERR200,
     1        TIMES_THROUGH
C *
C *      Start by attempting to open our files; if anything goes wrong,
C *      abort.  To make this faster, we use DCB numbers for all our FOXI I/O.
C *
      CALL  VFCP6  (108, .TRUE.)
C *
X     CALL  FIND$DCB  (200, DCB200)
X     IF ( DCB200 .LT. 0 ) THEN
X        WRITE (108,"($A*** Aargh!  Couldn't get input DCB!$)")
X        CALL  EXIT  (6)
X     END IF 
X     DCB200 = ISL (DCB200, 18)
Z     DCB200 = 200
C
X     CALL  FIND$DCB  ('F$400 ', DCB400)
X     IF ( DCB400 .LT. 0 ) THEN
X        WRITE (108,"($A*** Aargh!  Couldn't get output DCB!$)")
X        CALL  EXIT  (6)
X     END IF 
X     DCB400 = ISL (DCB400, 18)
Z     DCB400 = 400
C *
C *      Open input DCB
C *
X     CALL  FAST$OPEN  (IOS200, DCB200, INFID, 10, 2)
Y     OPEN (200, USAGE='INPUT', IOSTAT=IOS200)
C
      IF ( IOS200 .NE. 0 ) THEN
         IF ( IOS200 .LT. -12 .OR. IOS200 .GT. 0 ) THEN
            CALL  ERROROUT  (108, IOS200)
         ELSE 
            WRITE (108,"($A*** Aargh!  FOXI error on input: $,I)")
         END IF 
         CALL  EXIT  (4)
      END IF 
C *
C *      Open output DCB -- this should be in DCB already
C *
X     CALL  FAST$OPEN  (IOS400, DCB400, OUTFID, 10, 0, 1)
Y     OPEN (400, USAGE='CREATE', IOSTAT=IOS400)
C *
      IF ( IOS400 .NE. 0 ) THEN
         IF ( IOS400 .LT. -12 .OR. IOS400 .GT. 0 ) THEN
            CALL  ERROROUT  (108, IOS400)
         ELSE 
            WRITE (108,"($A*** Aargh!  FOXI error on output: $,I)")
         END IF 
         CALL  EXIT  (4)
      END IF 
C *
C *      Okay, read and write until the cows come home . . .
C *
      RECCOUNT = 1
X     CALL  FAST$READ  (IOS200, DCB200, RECBUF, LEN (RECBUF), RECARS)
Y     READ (200,'(A)',IOSTAT=IOS200) RECBUF
Y     INQUIRE (200,RECSIZE=RECARS)
C
      DO 1010 , TIMES_THROUGH = 1, 10
C
         REPEAT 1000, WHILE (IOS200 .EQ. 0)
C
X           CALL  FAST$WRITE  (IOS400, DCB400, RECBUF, RECARS)
Y           WRITE (400,'(A)',IOSTAT=IOS400) RECBUF(:RECARS)
C
            IF ( IOS400 .NE. 0 ) THEN
               WRITE (108,"($A*** Error writing record # $,I)") RECCOUNT
               CALL  ERROROUT  (108, IOS400)
               CALL  EXIT  (4)
            END IF 
C
            RECCOUNT = RECCOUNT + 1
X           CALL  FAST$READ  (IOS200, DCB200, RECBUF, LEN (RECBUF),
X    1            RECARS)
Y           READ (200,'(A)',IOSTAT=IOS200) RECBUF
Y           INQUIRE (200,RECSIZE=RECARS)
C
1000     CONTINUE 
C *
C *      Error on input--check error code for E$EOF#
C *
         ERR200 = IOSDCODE (IOS200)
C
         IF ( ERR200 .NE. 6 ) THEN
            WRITE (108,"($A*** Error reading record # $,I)") RECCOUNT
            CALL  ERROROUT  (108, IOS200)
            CALL  EXIT  (4)
         ELSE 
X           CALL FAST$REWIND (IOS200, DCB200)
Y           REWIND (UNIT=200)
Y           IOS200 = 0
         END IF 
C
1010  CONTINUE 
C *
C *      Normal EOF on input--close files
C *
X     CALL  FAST$CLOSE  (IOS200, DCB200)
Y     CLOSE (200,IOSTAT=IOS200)
      IF ( IOS200 .NE. 0 ) THEN
         WRITE (108,"($*** Error closing input file!$)")
         CALL  ERROROUT  (108, IOS200)
      END IF 
C
X     CALL  FAST$CLOSE  (IOS400, DCB400, 2)
Y     CLOSE (200,STATUS='KEEP',IOSTAT=IOS400)
      IF ( IOS400 .NE. 0 ) THEN
         WRITE (108,"($*** Error closing output file!$)")
         CALL  ERROROUT  (108, IOS400)
      END IF 
C
      WRITE (108,"($A--> $,I,$ records processed!$)") RECCOUNT - 1
C
      IF ( IOS200 .NE. 0  .OR.  IOS400 .NE. 0 ) THEN
         CALL  EXIT  (6)
      ELSE 
         CALL  EXIT  (0)
      END IF 
C *
C *      End of program EVEN
C *
      E N D 
