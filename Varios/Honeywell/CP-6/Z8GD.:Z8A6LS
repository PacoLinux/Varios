VERSION A06

PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:1    
        1        1        /*M* Z8GD$DOCUMENT -- Phase 3 Documentation */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*P*
        9        9             NAME: Z8GD$DOCUMENT
       10       10             PURPOSE:
       11       11                  COBOL 85 global optimizer documentation module.
       12       12             DESCRIPTION:
       13       13                  This module contains general documentation for the
       14       14                  global optimizer phase of the COBOL 85 compiler.
       15       15        */
       16       16
       17       17        /*F*       NAME: COBOL_85_OPTIMIZER
       18       18
       19       19            DESCRIPTION::
       20       20
       21       21                The Cobol-85 Compiler is capable of producing highly efficient
       22       22
       23       23                object code.  The production of  code of this type is referred
       24       24
       25       25                to  by  the   terminology  "optimization".   The  optimization
       26       26
       27       27                features of  Cobol-85 are characterized by  two general types:
       28       28
       29       29                (1)  local optimization,  and (2)  global optimization.  Local
       30       30
       31       31                optimization  consists of analyses  performed at the statement
       32       32
       33       33                level,   for   example,   compile   time  arithmetic.   Global
       34       34
       35       35                optimization, by contrast, consists of analyses performed over
       36       36
       37       37                many statements.
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:2    
       38       38
       39       39
       40       40                Essentially, global optimization is based on a linear analysis
       41       41
       42       42                of  the definition points  of the variables  and the branching
       43       43
       44       44                and loop  structure  of the program.   The major objectives of
       45       45
       46       46                this process are:
       47       47
       48       48                (1) eliminate redundant calculations  when references are made
       49       49
       50       50                    to common sub-expression values,
       51       51
       52       52                (2) remove invariant calculations from in-line Perform loops,
       53       53
       54       54                (3) more  efficiently compute  subscripts containing induction
       55       55
       56       56                    variables, and
       57       57
       58       58                (4) provide efficient register usage.
       59       59
       60       60        */
       61       61
       62       62        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:3    
       63       63        /*F*       NAME: COMMON_SUBEXPRESSION_ANALYSIS
       64       64
       65       65            DESCRIPTION::
       66       66
       67       67                A prevalent coding practice among inexperienced programmers is
       68       68
       69       69                the repeated use of the same expression.  For example:
       70       70
       71       71                    COMPUTE R4 = R1 + R2
       72       72                    COMPUTE R5 = R1 + R2 + R3
       73       73                    COMPUTE R6 = (R1 + R2) * R3 / (R1 + R2 + R3)
       74       74
       75       75                Here  the expression  R1 +  R2 appears  in each  of the source
       76       76
       77       77                lines  and  R1  +  R2  +  R3  appears  in  lines 2 and 3.  The
       78       78
       79       79                optimizer  will  issue  CCOSU  (compute  common subexpression)
       80       80
       81       81                items for  the two expressions, so that  Phase 4 will generate
       82       82
       83       83                code using temporary storage locations (T1 and T2) as follows:
       84       84
       85       85                    T1 = R1 + R2
       86       86                    R4 = T1
       87       87                    T2 = T1 + R3
       88       88                    R5 = T2
       89       89                    R6 = T1 * R3 / T2
       90       90
       91       91        */
       92       92
       93       93        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:4    
       94       94        /*F*       NAME: INDUCTION_VARIABLE_MATERIALIZATION_ANALYSIS
       95       95
       96       96            DESCRIPTION::
       97       97
       98       98                This  analysis  determines  whether  the  Perform  loop  index
       99       99
      100      100                (induction variable) should be materialized (i.e., stored in a
      101      101
      102      102                core  storage  location).   This  non-materialization  of  the
      103      103
      104      104                induction variable  means that the size  of the code generated
      105      105
      106      106                for  the Perform loop  is reduced.  When  it is unnecessary to
      107      107
      108      108                materialize an induction  variable, the compiler will generate
      109      109
      110      110                code to  use an index register (if  one is available) to count
      111      111
      112      112                down the number of iterations of the Perform.
      113      113
      114      114        */
      115      115
      116      116        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:5    
      117      117        /*F*       NAME: LOOP_COLLAPSING_ANALYSIS
      118      118
      119      119            DESCRIPTION::
      120      120
      121      121                This  analysis attempts to  reduce two or  more nested Perform
      122      122
      123      123                loops to a single loop. Consider the following example:
      124      124
      125      125
      126      126                    MOVE ZERO TO SUM.
      127      127                    PERFORM VARYING I FROM 1 BY 1 UNTIL I > K
      128      128                      PERFORM VARYING J FROM 1 BY 1 UNTIL J > L
      129      129                        ADD 1 TO SUM
      130      130                      END-PERFORM.
      131      131                    END-PERFORM.
      132      132
      133      133                The global  optimizer causes code generation  that reduces the
      134      134
      135      135                two loops to one:
      136      136
      137      137
      138      138                    MOVE ZERO TO SUM.
      139      139                    MULTIPLY K BY L GIVING TEMP.
      140      140                    PERFORM VARYING I FROM 1 BY 1 UNTIL I > TEMP
      141      141                      ADD 1 TO SUM
      142      142                    END-PERFORM.
      143      143
      144      144                The general criteria that must be met to combine an inner loop
      145      145
      146      146                with its next outer loop are:
      147      147
      148      148                (1) There are no executable statements or code inserted by the
      149      149
      150      150                    compiler between the two Perform statements or between the
      151      151
      152      152                    two End-Performs.
      153      153
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:6    
      154      154                (2) The induction variable of  neither the inner nor the outer
      155      155
      156      156                    loop  is to be  materialized; that is,  the only usages of
      157      157
      158      158                    the induction variables are as subscripts.
      159      159
      160      160                (3) There is no branch out of the loops.
      161      161
      162      162                When these conditions are  met, the optimizer causes the inner
      163      163
      164      164                loop  to  be  non-iterative,  causing  the  code  generator to
      165      165
      166      166                generate  no  code  for  it.   The iteration expression of the
      167      167
      168      168                outer  loop is set  equal to the  product of the iterations of
      169      169
      170      170                the two original loops.
      171      171
      172      172        */
      173      173
      174      174        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:7    
      175      175        /*F*       NAME: SUBSCRIPT_EXPRESSION_ANALYSIS
      176      176
      177      177            DESCRIPTION::
      178      178
      179      179                A subscript expression whose value is invariant over a loop or
      180      180
      181      181                limited by  the induction variable of the  loop is a potential
      182      182
      183      183                candidate  for  permanent  index  register assignment over the
      184      184
      185      185                range  of  the  loop.   Additionally,  the  compute  point  of
      186      186
      187      187                subscripts dependent on more  than one induction variable of a
      188      188
      189      189                nest  of  Performs  may  often  be  adjusted to an outer loop.
      190      190
      191      191                Consider the following example:
      192      192
      193      193
      194      194                    PERFORM VARYING I FROM 1 BY 1 UNTIL I > N1
      195      195                      PERFORM VARYING J FROM 1 BY 1 UNTIL J > N2
      196      196                        PERFORM VARYING K FROM 1 BY 1 UNTIL K > N3
      197      197                          COMPUTE AR5 (I, J, K) = I + 10*J + 100*K
      198      198                          IF I*J*K IS EQUAL TO 7 THEN
      199      199                            MOVE -7 TO AR5 (I, J, K)
      200      200                            MOVE -1 TO ITAG
      201      201                          ELSE
      202      202                            MOVE 1 TO ITAG
      203      203                          END-IF
      204      204                        END-PERFORM
      205      205                      END-PERFORM
      206      206                    END-PERFORM.
      207      207
      208      208                Those  statements  within  the  innermost loop require storage
      209      209
      210      210                into  the array  element AR5  (I, J,  K).  The  address of the
      211      211
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:8    
      212      212                element is a complicated function  of the subscripts I, J, and
      213      213
      214      214                K.   The optimizer  causes code  to be  generated to calculate
      215      215
      216      216                this subscript function one time and assign it to a register.
      217      217
      218      218                See Z8GX extract documentation for more details.
      219      219
      220      220        */
      221      221
      222      222        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:9    
      223      223        /*F*       NAME: EXPRESSION_COMPUTE_POINT_ANALYSIS
      224      224
      225      225            DESCRIPTION::
      226      226
      227      227                During the Optimization phase,  the encoded program is scanned
      228      228
      229      229                backwards;  that  is,  from  the  last statement to the first.
      230      230
      231      231                Expression  compute point analysis  involves the determination
      232      232
      233      233                of  the optimal  place for  the computation  of expressions in
      234      234
      235      235                relation to loop stuctures.  The object of this analysis is to
      236      236
      237      237                squeeze  as  much  code  as  possible outside of the innermost
      238      238
      239      239                loops  of  Perform  nests,  since  these  loops  are generally
      240      240
      241      241                executed the greatest number of times.
      242      242
      243      243
      244      244                The process of determining where  in the program to compute an
      245      245
      246      246                expression  involves  determining  the  range  of  the  source
      247      247
      248      248                program  over  which  the  operands  of  the expression have a
      249      249
      250      250                constant  value.   This   process  yields  values  called  the
      251      251
      252      252                "forward definition point"  (FDP) and the "backward definition
      253      253
      254      254                point"  (BDP).   Using  these  points  and  the  Perform  loop
      255      255
      256      256                structure  and  knowledge  of  referenced labels, the earliest
      257      257
      258      258                location  where it  is theoretically  possible to  compute the
      259      259
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:10   
      260      260                expression is determined.
      261      261
      262      262        */
      263      263
      264      264        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:11   
      265      265        /*F*       NAME: ILS
      266      266
      267      267            DESCRIPTION::
      268      268
      269      269                The major table for the global optimizer is the ILS.  For each
      270      270
      271      271                major item on the ILL, Phase One must issue an associated item
      272      272
      273      273                on the ILS.  One factor in determining which ILS item is to be
      274      274
      275      275                issued   is  whether   the  ILL   item  involves   the  actual
      276      276
      277      277                redefinition  of  a  variable.    A  variable  has  an  actual
      278      278
      279      279                redefinition when it is used:
      280      280
      281      281                (1) As an identifier in an ACCEPT statement;
      282      282                (2) As a CD-name in an ACCEPT (message count updated);
      283      283                (3) As a  receiving identifier in an  ADD, SUBTRACT, MULTIPLY,
      284      284                    or DIVIDE statement;
      285      285                (4) As identifier-1 of a TRANSFORM statement.
      286      286                (5) On the left of equals in a COMPUTE statement;
      287      287                (6) As identifier-1 of an INITIALIZE statement;
      288      288                (7) As  a sum-counter, LINE-COUNTER,  or PAGE-COUNTER involved
      289      289                    in an INITIATE statement;
      290      290                (8) As identifier-2 in an INSPECT TALLYING statement;
      291      291                (9) As identifier-1 in an INSPECT REPLACING statement;
      292      292                (10) As identifier-2 of a MOVE statement;
      293      293                (11) As a LINAGE-COUNTER involved in an OPEN or WRITE;
      294      294                (12) As an induction variable in a Format 4 PERFORM;
      295      295                (13) As a record area associated with a READ file-name;
      296      296                (14) As identifier-1 of a RECEIVE statement;
      297      297                (15) As a record area associated with a RETURN file-name;
      298      298                (16) As  a  record-name  when  the  FROM  option  is used in a
      299      299                    RELEASE, REWRITE, or WRITE statement;
      300      300                (17) As an  identifier when the INTO option  is used in a READ
      301      301                    or RETURN statement;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:12   
      302      302                (18) As  identifier-2,  index-name-1,  or  the  implied  index
      303      303                    varied by a SEARCH statement;
      304      304                (19) As a receiving item in a SET statement;
      305      305                (20) As identifier-3 or identifier-4 of a STRING statement;
      306      306                (21) As    identifier-4,   identifier-5,    identifier-6,   or
      307      307                    identifier-8 of an UNSTRING statement;
      308      308                (22) Implicitly in an EXAMINE statement (the TALLY register);
      309      309                (23) As identifier-1 of an EXAMINE statement.
      310      310
      311      311                In addition,  a variable has a  potential redefinition when it
      312      312
      313      313                is used:
      314      314
      315      315                (1) As  a  data-name  in   the  "BY  REFERENCE"  list  (either
      316      316                    implicitly or explicitly) of a CALL statement;
      317      317                (2) As a  data-name that's part of an  SD referenced in a SORT
      318      318                    or MERGE statement.
      319      319
      320      320                Note also  that a CALL statement  can potentially redefine any
      321      321
      322      322                EXTERNAL data-name.  A redefinition  of a group item redefines
      323      323
      324      324                all  members of  the group.   A redefinition  of a  RENAMES or
      325      325
      326      326                REDEFINES  data-name redefines all  data-names equivalenced to
      327      327
      328      328                that data-name.
      329      329
      330      330
      331      331
      332      332        */
      333      333
      334      334        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:13   
      335      335        /*F*       NAME: PHASE_1_SUPPORT
      336      336
      337      337            DESCRIPTION::
      338      338
      339      339                (1) THE REDEFINITION LIST -- prior  to  Phase 3,  each  symbol
      340      340
      341      341                    table item (SCALAR, ARRAY, etc.) contains an indication of
      342      342
      343      343                    the  last redefinition  point (FDP).   This information in
      344      344
      345      345                    conjunction with the  OPV and OPA redefinition information
      346      346
      347      347                    constitutes the redefinition list.
      348      348
      349      349                (2) THE COMMON  REDEFINITION LIST -- a cell  in COMCOM will be
      350      350
      351      351                    set  by Phase 1  to indicate the  last common redefinition
      352      352
      353      353                    point (ie, the last  CALL). This information in conjuction
      354      354
      355      355                    with  the  OPA  common  redefinition  data constitutes the
      356      356
      357      357                    common redefinition list.
      358      358
      359      359                (3) THE LOOP NEST LIST  -- an in-line PERFORM loop (equivalent
      360      360
      361      361                    to a Fortran DO loop) is  represented on the ILL by a loop
      362      362
      363      363                    begin (DO5) item and a loop-end item (DOEND). Each DO5
      364      364
      365      365                    item contains the following links:
      366      366
      367      367                    (a) a link to its own DOEND,
      368      368
      369      369                    (b) a link to the next outer loop's DO5 item,
      370      370
      371      371                    (c) a link to the next DO5 or DOEND item.
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:14   
      372      372
      373      373                    Each DOEND item must contain the following links:
      374      374
      375      375                    (a) a link to its own DO5,
      376      376
      377      377                    (b) a link to the next DO5 or DOEND item.
      378      378
      379      379                (4) TRANSFORM  SUBSCRIPT REFERENCES  -- since  Phase 3  does a
      380      380
      381      381                    subexpression   analysis   to   determine  commonality  of
      382      382
      383      383                    occurrence, it is desirable that all subscript expressions
      384      384
      385      385                    be  transformed  into  their  arithmetic counterparts.
      386      386
      387      387        */
      388      388
      389      389        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:15   
      390      390        /*F*       NAME: PHASE_2_SUPPORT
      391      391
      392      392            DESCRIPTION::
      393      393
      394      394                (1) THE REFERENCED  LABEL LIST -- during  Phase 2's processing
      395      395
      396      396                    of labels (see Design Note  #1), it must create a backward
      397      397
      398      398                    chain  of referenced labels  for use by  Phase 3.  The LBL
      399      399
      400      400                    field in  the DEFLAB ILL item will  be the linking element
      401      401
      402      402                    for  this chain.  The  head link will  be H_LBL in COMCOM,
      403      403
      404      404                    and will point to the last DEFLAB item in the ILL.
      405      405
      406      406                (2) "PERFORM"  MANIPULATION  --  it  would  be nice if Phase 2
      407      407
      408      408                    could  transform eligible out-of-line  PERFORMs to in-line
      409      409
      410      410                    PERFORMs.  This  would  accomplish  two  things:  (a) help
      411      411
      412      412                    global  optimization, (b) reduce  pipeline breaks and page
      413      413
      414      414                    faults caused by transfering back and forth to out-of-line
      415      415
      416      416                    PERFORMs.  The problem  is:  how  to accomplish this?  The
      417      417
      418      418                    sequence  numbers  of  the  statements  within the Perform
      419      419
      420      420                    paragraph(s)  to  be  moved  are  not in sequence with the
      421      421
      422      422                    surrounding  ILS items  where it  is to  be moved  to.  It
      423      423
      424      424                    would be an almost  impossible task to resequence the ILS,
      425      425
      426      426                    since  Phase 1 has  placed sequence numbers  in ST and ILL
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:16   
      427      427
      428      428                    items as well as ILS items. A possible solution is to have
      429      429
      430      430                    Phase 2 assign the sequence  numbers after it has done the
      431      431
      432      432                    "PERFORM  manipulations", and so it does.
      433      433
      434      434        */
      435      435
      436      436        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:17   
      437      437
      438      438        Z8GD$DOCUMENT: PROC;
      439      439        %EQU PHASE = 3;
      440      440        %SET Z8GD = 874 ; /* 8 || G=7 || D=4 */
      441      441        %EQU MODULE = Z8GD ;
      442      442
      443      443        %INCLUDE Z8A_DEFC ;
      444      511        %INCLUDE Z8A_NAMES;
      445     2311
      446     2312        %LIST;
      447     2313        %INCLUDE Z8G_O3COM ;
        1+    2314        /*T***********************************************************/
        2+    2315        /*T*                                                         */
        3+    2316        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    2317        /*T*                                                         */
        5+    2318        /*T***********************************************************/
        6+    2319        /* INCLUDE FILE OPT_O3COM: Phase 3 Common */
        7+    2320
        8+    2321        %EQU FIRST_SEQ# = 3 ; /* LINOI after ENTRY */
        9+    2322
       10+    2323    1   DCL 1 O3COM   ALIGNED EXT,
       11+    2324    1       2 CURRENT_SEQ_NO  SBIN WORD, /* Sequence# of current ILS$ */
       12+    2325    1       2 SEQ#1$          PTR INIT (ADDR(NIL)), /* ILS item seq#1 */
       13+    2326    1       2 EVALP$          PTR INIT (ADDR(NIL)), /* Current EVALP */
       14+    2327    1       2 LBL             PTR INIT (ADDR(NIL)), /* Next Ref'd Label */
       15+    2328    1       2 DO#             UBIN WORD INIT (0),   /* Seq# of Inner DO */
       16+    2329    1       2 DOEND#          UBIN WORD INIT (0),   /* Seq# of Do End   */
       17+    2330    1       2 IF#             UBIN WORD INIT (0),   /* Seq# of Inner IF */
       18+    2331    1       2 IFEND#          UBIN WORD INIT (0),   /* Seq# of If End   */
       19+    2332    1       2 LAST_OPA_REDEF  SBIN WORD INIT (%MAX_SEQ#),
       20+    2333    1       2 LOOP_LEVEL      UBIN WORD INIT (0),   /* Current DO Level */
       21+    2334    1       2 OP$             PTR,                  /* CCOSU for op seg ESC */
       22+    2335    1       2 SL_INDEX        SBIN WORD,            /* Index into SL array */
       23+    2336    1       2 SL (0:15),                            /* Sequence# List      */
       24+    2337    1       3 SEQ#            SBIN WORD INIT (%FIRST_SEQ# * 16),
       25+    2338    1       3 SEQ$            PTR,
       26+    2339    1       2 MAX_SEQ#        SBIN WORD,
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:18   
       27+    2340    1       2 VARYING$        PTR INIT(ADDR(NIL)),  /* Index of inner DO5 */
       28+    2341    1       2 FROM$           PTR,                  /* Start of inner DO5 */
       29+    2342    1       2 BY$             PTR,                  /* Incrm of inner DO5 */
       30+    2343    1       2 GSA$            PTR INIT(ADDR(NIL)),  /* GSA List           */
       31+    2344    1       2 GSA_COUNT       SBIN WORD INIT(0),    /* # GSA Items        */
       32+    2345    1       2 DO_SEQ#         SBIN WORD,            /* Seq# of DO5        */
       33+    2346    1       2 DOEND_SEQ#      SBIN WORD,            /* Seq# of DO5 DOEND  */
       34+    2347    1       2 INCRV_ILS$      PTR,                  /* Seq# of INCRV      */
       35+    2348    1       2 DO_ILS$         PTR INIT(ADDR(NIL)),  /* ILS of inner DO    */
       36+    2349    1       2 HEAD_EVALP$     PTR INIT(ADDR(NIL)),  /* Head of EVALP pool */
       37+    2350    1       2 LAST_WORD       SBIN WORD ;
       38+    2351
       39+    2352        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:19   
      448     2353        %INCLUDE Z8G_P3VEC ;
        1+    2354        /*T***********************************************************/
        2+    2355        /*T*                                                         */
        3+    2356        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    2357        /*T*                                                         */
        5+    2358        /*T***********************************************************/
        6+    2359        /* INCLUDE FILE Z8G_P3VEC */
        7+    2360
        8+    2361        /* Recompile Z8GD when this include file changes */
        9+    2362
       10+    2363        /* P3VEC Codes */
       11+    2364
       12+    2365        %EQU NO_EXPRESSIONS =              0 ;
       13+    2366        %EQU ONE_EXPRESSION_LOP_REDEF =    1 ;
       14+    2367        %EQU TWO_EXPRESSIONS_LOP_REDEF =   2 ;
       15+    2368        %EQU THREE_EXPRESSIONS_TO_REDEF =  3 ;
       16+    2369        %EQU FOUR_EXPRESSIONS_TWO_REDEFS = 4 ;
       17+    2370        %EQU EVALP_ =                      5 ;
       18+    2371        %EQU SSOP_SIZ_BASE =               5 ;
       19+    2372        %EQU ONE_EXPRESSION_NO_REDEF =     6 ;
       20+    2373        %EQU TWO_EXPRESSIONS_NO_REDEF =    7 ;
       21+    2374        %EQU ROP_ARGLIST              =    8 ;
       22+    2375        %EQU ROP_EXPRESSION_NO_REDEF =     9 ;
       23+    2376        %EQU TIMES$_EXPRESSION_NO_REDEF = 10 ;
       24+    2377        %EQU EXPR_EXPRESSION_NO_REDEF   = 11 ;
       25+    2378        %EQU INITV_INCRV_CEILV = 12 ;
       26+    2379        %EQU ARGLIST_REDEF     = 13 ;
       27+    2380        %EQU ILLEGAL_VALUE     = 14 ;
       28+    2381        %EQU LOP_ARGLIST       = 15 ;
       29+    2382
       30+    2383        %SET Z8GD = 874 ; /* 8 || G=7 || D=4 */
       31+    2384
       32+    2385    1   DCL P3VEC (0:%LAST_ILL) UBIN WORD EXT
       33+    2386        %IF MODULE = Z8GD ;
       34+    2387    1    INIT (
       35+    2388    1    /* CONTINUE 0 */ %NO_EXPRESSIONS,
       36+    2389    1    /* BASE          1 */ %SSOP_SIZ_BASE
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:20   
       37+    2390    1   ,/* FISS          2 */ %SSOP_SIZ_BASE
       38+    2391    1   ,/* OFF           3 */ %SSOP_SIZ_BASE
       39+    2392    1   ,/* SIZ           4 */ %SSOP_SIZ_BASE
       40+    2393    1   ,/* SSOP          5 */ %SSOP_SIZ_BASE
       41+    2394    1   ,/* DAN      6    6 */ %ONE_EXPRESSION_NO_REDEF
       42+    2395    1   ,/* DNA      7    7 */ %ONE_EXPRESSION_NO_REDEF
       43+    2396    1   ,/* DESC     8   10 */ %NO_EXPRESSIONS
       44+    2397    1   ,/* D96      9   11 */ %ONE_EXPRESSION_NO_REDEF
       45+    2398    1   ,/* REFMOD  10   12 */ %SSOP_SIZ_BASE                       /*#28637*/
       46+    2399    1   ,/*         11      */ %ILLEGAL_VALUE*1
       47+    2400    1   ,/* MPD10   12   14 */ %ONE_EXPRESSION_NO_REDEF
       48+    2401    1   ,/* TRIAD   13   15 */ %NO_EXPRESSIONS
       49+    2402    1   ,/* ARGP    14   16 */ %NO_EXPRESSIONS
       50+    2403    1   ,/* ESC     15   17 */ %NO_EXPRESSIONS
       51+    2404    1   ,/* CVDF    16   20 */ %ONE_EXPRESSION_NO_REDEF
       52+    2405    1   ,/* MODI    17   21 */ %TWO_EXPRESSIONS_NO_REDEF
       53+    2406    1   ,/* ASC_BIN 18   22 */ %ONE_EXPRESSION_NO_REDEF
       54+    2407    1   ,/* CVIK    19   23 */ %ONE_EXPRESSION_NO_REDEF
       55+    2408    1   ,/* CVKI    20   24 */ %ONE_EXPRESSION_NO_REDEF
       56+    2409    1   ,/* CFILL   21   25 */ %ONE_EXPRESSION_NO_REDEF
       57+    2410    1   ,/* CVDDD   22   26 */ %ONE_EXPRESSION_NO_REDEF
       58+    2411    1   ,/* SBCHK   23   27 */ %TWO_EXPRESSIONS_NO_REDEF
       59+    2412    1   ,/* OCCHK   24   30 */ %TWO_EXPRESSIONS_NO_REDEF
       60+    2413    1   ,/* CMGR    25   31 */ %TWO_EXPRESSIONS_NO_REDEF
       61+    2414    1   ,/* CMGQ    26   32 */ %TWO_EXPRESSIONS_NO_REDEF
       62+    2415    1   ,/* CMPQ    27   33 */ %TWO_EXPRESSIONS_NO_REDEF
       63+    2416    1   ,/* ANDI    28   34 */ %TWO_EXPRESSIONS_NO_REDEF
       64+    2417    1   ,/* CVIH    29   35 */ %ONE_EXPRESSION_NO_REDEF
       65+    2418    1   ,/* CVID9   30   36 */ %ONE_EXPRESSION_NO_REDEF
       66+    2419    1   ,/* CVDSF   31   37 */ %ONE_EXPRESSION_NO_REDEF
       67+    2420    1   ,/* RNDQ    32   40 */ %ONE_EXPRESSION_NO_REDEF
       68+    2421    1   ,/* EXRR    33   41 */ %TWO_EXPRESSIONS_NO_REDEF
       69+    2422    1   ,/* EXRI    34   42 */ %TWO_EXPRESSIONS_NO_REDEF
       70+    2423    1   ,/* EXQQ    35   43 */ %TWO_EXPRESSIONS_NO_REDEF
       71+    2424    1   ,/* EXQI    36   44 */ %TWO_EXPRESSIONS_NO_REDEF
       72+    2425    1   ,/* ADQ     37   45 */ %TWO_EXPRESSIONS_NO_REDEF
       73+    2426    1   ,/* SBQ     38   46 */ %TWO_EXPRESSIONS_NO_REDEF
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:21   
       74+    2427    1   ,/* MPQ     39   47 */ %TWO_EXPRESSIONS_NO_REDEF
       75+    2428    1   ,/* DVQ     40   50 */ %TWO_EXPRESSIONS_NO_REDEF
       76+    2429    1   ,/* USQ     41   51 */ %ONE_EXPRESSION_NO_REDEF
       77+    2430    1   ,/* MPI2    42   52 */ %ONE_EXPRESSION_NO_REDEF
       78+    2431    1   ,/* ADD     43   53 */ %TWO_EXPRESSIONS_NO_REDEF
       79+    2432    1   ,/* ADI     44   54 */ %TWO_EXPRESSIONS_NO_REDEF
       80+    2433    1   ,/* SBD     45   55 */ %TWO_EXPRESSIONS_NO_REDEF
       81+    2434    1   ,/* SBI     46   56 */ %TWO_EXPRESSIONS_NO_REDEF
       82+    2435    1   ,/* MPD     47   57 */ %TWO_EXPRESSIONS_NO_REDEF
       83+    2436    1   ,/* MPI     48   60 */ %TWO_EXPRESSIONS_NO_REDEF
       84+    2437    1   ,/* DVD     49   61 */ %TWO_EXPRESSIONS_NO_REDEF
       85+    2438    1   ,/* DVI     50   62 */ %TWO_EXPRESSIONS_NO_REDEF
       86+    2439    1   ,/* DVDR    51   63 */ %TWO_EXPRESSIONS_NO_REDEF
       87+    2440    1   ,/* EXDIO   52   64 */ %TWO_EXPRESSIONS_NO_REDEF
       88+    2441    1   ,/* USD     53   65 */ %ONE_EXPRESSION_NO_REDEF
       89+    2442    1   ,/* USI     54   66 */ %ONE_EXPRESSION_NO_REDEF
       90+    2443    1   ,/* ADR     55   67 */ %TWO_EXPRESSIONS_NO_REDEF
       91+    2444    1   ,/* SBR     56   70 */ %TWO_EXPRESSIONS_NO_REDEF
       92+    2445    1   ,/* MPR     57   71 */ %TWO_EXPRESSIONS_NO_REDEF
       93+    2446    1   ,/* DVR     58   72 */ %TWO_EXPRESSIONS_NO_REDEF
       94+    2447    1   ,/* USR     59   73 */ %ONE_EXPRESSION_NO_REDEF
       95+    2448    1   ,/* CVDO    60   74 */ %ONE_EXPRESSION_NO_REDEF
       96+    2449    1   ,/* EXII    61   75 */ %TWO_EXPRESSIONS_NO_REDEF
       97+    2450    1   ,/* EXDI    62   76 */ %TWO_EXPRESSIONS_NO_REDEF
       98+    2451    1   ,/* EXDD    63   77 */ %TWO_EXPRESSIONS_NO_REDEF
       99+    2452    1   ,/* CVII    64  100 */ %ONE_EXPRESSION_NO_REDEF
      100+    2453    1   ,/* CVDD    65  101 */ %ONE_EXPRESSION_NO_REDEF
      101+    2454    1   ,/* RNDD    66  102 */ %ONE_EXPRESSION_NO_REDEF
      102+    2455    1   ,/*         67  103 */ %ONE_EXPRESSION_NO_REDEF
      103+    2456    1   ,/* RNDR    68  104 */ %ONE_EXPRESSION_NO_REDEF
      104+    2457    1   ,/* TRN     69  105 */ %ONE_EXPRESSION_NO_REDEF
      105+    2458    1   ,/* CMPI    70  106 */ %TWO_EXPRESSIONS_NO_REDEF
      106+    2459    1   ,/* CMPD    71  107 */ %TWO_EXPRESSIONS_NO_REDEF
      107+    2460    1   ,/* CMPC    72  110 */ %TWO_EXPRESSIONS_NO_REDEF
      108+    2461    1   ,/* CMPA    73  111 */ %TWO_EXPRESSIONS_NO_REDEF
      109+    2462    1   ,/* CMPR    74  112 */ %TWO_EXPRESSIONS_NO_REDEF
      110+    2463    1   ,/* CMGP    75  113 */ %TWO_EXPRESSIONS_NO_REDEF
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:22   
      111+    2464    1   ,/* DVI2    76  114 */ %ONE_EXPRESSION_NO_REDEF
      112+    2465    1   ,/* CVT     77  115 */ %ONE_EXPRESSION_NO_REDEF
      113+    2466    1   ,/* CMPAA   78  116 */ %TWO_EXPRESSIONS_NO_REDEF
      114+    2467    1   ,/*         79  117 */ %TWO_EXPRESSIONS_NO_REDEF
      115+    2468    1   ,/*         80  120 */ %TWO_EXPRESSIONS_NO_REDEF
      116+    2469    1   ,/* CMPAO   81  121 */ %TWO_EXPRESSIONS_NO_REDEF
      117+    2470    1   ,/* CMPAS   82  122 */ %ONE_EXPRESSION_NO_REDEF
      118+    2471    1   ,/* CMGI    83  123 */ %TWO_EXPRESSIONS_NO_REDEF
      119+    2472    1   ,/* CVAA    84  124 */ %ONE_EXPRESSION_NO_REDEF
      120+    2473    1   ,/* CV49    85  125 */ %ONE_EXPRESSION_NO_REDEF
      121+    2474    1   ,/* CVXY 86-101 145 */ %ONE_EXPRESSION_NO_REDEF * 16
      122+    2475    1   ,/* ORI    102  146 */ %TWO_EXPRESSIONS_NO_REDEF
      123+    2476    1   ,/* CVOD9  103  147 */ %ONE_EXPRESSION_NO_REDEF
      124+    2477    1   ,/* CVQD9  104  150 */ %ONE_EXPRESSION_NO_REDEF
      125+    2478    1   ,/* CVRD9  105  151 */ %ONE_EXPRESSION_NO_REDEF
      126+    2479    1   ,/* INDEX  106  152 */ %TWO_EXPRESSIONS_NO_REDEF
      127+    2480    1   ,/* MINI   107  153 */ %TWO_EXPRESSIONS_NO_REDEF
      128+    2481    1   ,/* MIND   108  154 */ %TWO_EXPRESSIONS_NO_REDEF
      129+    2482    1   ,/* MINR   109  155 */ %TWO_EXPRESSIONS_NO_REDEF
      130+    2483    1   ,/* MINQ   110  156 */ %TWO_EXPRESSIONS_NO_REDEF
      131+    2484    1   ,/* BIN_ASC 111 157 */ %ONE_EXPRESSION_NO_REDEF
      132+    2485    1   ,/* CFILLR  112 160 */ %ONE_EXPRESSION_NO_REDEF
      133+    2486    1   ,/* SHIFT_L 113 161 */ %ONE_EXPRESSION_NO_REDEF
      134+    2487    1   ,/* SHIFT_R 114 162 */ %ONE_EXPRESSION_NO_REDEF
      135+    2488    1   ,/* ADO     115 163 */ %TWO_EXPRESSIONS_NO_REDEF
      136+    2489    1   ,/* SBO     116 164 */ %TWO_EXPRESSIONS_NO_REDEF
      137+    2490    1   ,/* MPO     117 165 */ %TWO_EXPRESSIONS_NO_REDEF
      138+    2491    1   ,/* DVO     118 166 */ %TWO_EXPRESSIONS_NO_REDEF
      139+    2492    1   ,/* DVOR    119 167 */ %TWO_EXPRESSIONS_NO_REDEF
      140+    2493    1   ,/* CMPO    120 170 */ %TWO_EXPRESSIONS_NO_REDEF
      141+    2494    1   ,/* EVAL    121 171 */ %ONE_EXPRESSION_NO_REDEF
      142+    2495    1   ,/* USO     122 172 */ %ONE_EXPRESSION_NO_REDEF
      143+    2496    1   ,/* MINO    123 173 */ %TWO_EXPRESSIONS_NO_REDEF
      144+    2497    1   ,/* RNDO    124 174 */ %ONE_EXPRESSION_NO_REDEF
      145+    2498    1   ,/* ADDR    125 175 */ %ONE_EXPRESSION_NO_REDEF
      146+    2499    1   ,/* AUTO    126 176 */ %NO_EXPRESSIONS
      147+    2500    1   ,/* CMK     127 177 */ %TWO_EXPRESSIONS_NO_REDEF
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:23   
      148+    2501    1   ,/* CMK1    128 200 */ %TWO_EXPRESSIONS_NO_REDEF
      149+    2502    1   ,/* CMK1    129 201 */ %TWO_EXPRESSIONS_NO_REDEF
      150+    2503    1   ,/*        130-149  */ %ILLEGAL_VALUE*20
      151+    2504    1   ,/* AD2D   150  226 */ %TWO_EXPRESSIONS_LOP_REDEF
      152+    2505    1   ,/* AD2DR  151  227 */ %TWO_EXPRESSIONS_LOP_REDEF
      153+    2506    1   ,/* AD2I   152  230 */ %TWO_EXPRESSIONS_LOP_REDEF
      154+    2507    1   ,/* SB2D   153  231 */ %TWO_EXPRESSIONS_LOP_REDEF
      155+    2508    1   ,/* SB2DR  154  232 */ %TWO_EXPRESSIONS_LOP_REDEF
      156+    2509    1   ,/* SB2I   155  233 */ %TWO_EXPRESSIONS_LOP_REDEF
      157+    2510    1   ,/* MP2D   156  234 */ %TWO_EXPRESSIONS_LOP_REDEF
      158+    2511    1   ,/* MP2DR  157  235 */ %TWO_EXPRESSIONS_LOP_REDEF
      159+    2512    1   ,/* MP2I   158  236 */ %TWO_EXPRESSIONS_LOP_REDEF
      160+    2513    1   ,/* DV2D   159  237 */ %TWO_EXPRESSIONS_LOP_REDEF
      161+    2514    1   ,/* DV2DR  160  240 */ %TWO_EXPRESSIONS_LOP_REDEF
      162+    2515    1   ,/* DV2I   161  241 */ %TWO_EXPRESSIONS_LOP_REDEF
      163+    2516    1   ,/* DV2IR  162  242 */ %TWO_EXPRESSIONS_LOP_REDEF
      164+    2517    1   ,/* MVDD   163  243 */ %TWO_EXPRESSIONS_LOP_REDEF
      165+    2518    1   ,/* MVDDR  164  244 */ %TWO_EXPRESSIONS_LOP_REDEF
      166+    2519    1   ,/* MVII   165  245 */ %TWO_EXPRESSIONS_LOP_REDEF
      167+    2520    1   ,/* MVRR   166  246 */ %TWO_EXPRESSIONS_LOP_REDEF
      168+    2521    1   ,/* MVQQ   167  247 */ %TWO_EXPRESSIONS_LOP_REDEF
      169+    2522    1   ,/* MVRL   168  250 */ %TWO_EXPRESSIONS_LOP_REDEF
      170+    2523    1   ,/* MVHH   169  251 */ %TWO_EXPRESSIONS_LOP_REDEF
      171+    2524    1   ,/* MVID   170  252 */ %TWO_EXPRESSIONS_LOP_REDEF
      172+    2525    1   ,/* MVIH   171  253 */ %TWO_EXPRESSIONS_LOP_REDEF
      173+    2526    1   ,/* MVAN   172  254 */ %TWO_EXPRESSIONS_LOP_REDEF
      174+    2527    1   ,/* MVANO  173  255 */ %TWO_EXPRESSIONS_LOP_REDEF
      175+    2528    1   ,/* MVXY   174-183  */ %TWO_EXPRESSIONS_LOP_REDEF * 10
      176+    2529    1   ,/* MFILL  184  270 */ %ONE_EXPRESSION_LOP_REDEF
      177+    2530    1   ,/* MVIK   185  271 */ %TWO_EXPRESSIONS_LOP_REDEF
      178+    2531    1   ,/* MVKI   186  272 */ %TWO_EXPRESSIONS_LOP_REDEF
      179+    2532    1   ,/* MVJI   187  273 */ %TWO_EXPRESSIONS_LOP_REDEF
      180+    2533    1   ,/* PINC   188  274 */ %ONE_EXPRESSION_LOP_REDEF
      181+    2534    1   ,/* MVPP   189  275 */ %TWO_EXPRESSIONS_LOP_REDEF
      182+    2535    1   ,0*13
      183+    2536    1   ,/* REMEM    203 313*/ %NO_EXPRESSIONS
      184+    2537    1   ,/* STP2   204  314 */ %NO_EXPRESSIONS
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:24   
      185+    2538    1   ,/* MVDDD  205  315 */ %THREE_EXPRESSIONS_TO_REDEF
      186+    2539    1   ,/* MVEAL  206  316 */ %THREE_EXPRESSIONS_TO_REDEF
      187+    2540    1   ,/* MVEAN  207  317 */ %THREE_EXPRESSIONS_TO_REDEF
      188+    2541    1   ,/* MVEDD  208  320 */ %THREE_EXPRESSIONS_TO_REDEF
      189+    2542    1   ,/* AD3D   209  321 */ %THREE_EXPRESSIONS_TO_REDEF
      190+    2543    1   ,/* AD3DR  210  322 */ %THREE_EXPRESSIONS_TO_REDEF
      191+    2544    1   ,/* SB3D   211  323 */ %THREE_EXPRESSIONS_TO_REDEF
      192+    2545    1   ,/* SB3DR  212  324 */ %THREE_EXPRESSIONS_TO_REDEF
      193+    2546    1   ,/* MP3D   213  325 */ %THREE_EXPRESSIONS_TO_REDEF
      194+    2547    1   ,/* MP3DR  214  326 */ %THREE_EXPRESSIONS_TO_REDEF
      195+    2548    1   ,/* DV3D   215  327 */ %THREE_EXPRESSIONS_TO_REDEF
      196+    2549    1   ,/* DV3DR  216  330 */ %THREE_EXPRESSIONS_TO_REDEF
      197+    2550    1   ,/* DV3IR  217  331 */ %ILLEGAL_VALUE
      198+    2551    1   ,/* DV4I   218  332 */ %FOUR_EXPRESSIONS_TWO_REDEFS
      199+    2552    1   ,/* SETF   219  333 */ %ILLEGAL_VALUE
      200+    2553    1   ,/* SETFF  220  334 */ %ILLEGAL_VALUE
      201+    2554    1   ,/* SETFT  221  335 */ %ILLEGAL_VALUE
      202+    2555    1   ,/* P_P_PRESET 222  336 */ %NO_EXPRESSIONS
      203+    2556    1   ,/* STOP   223  337 */ %NO_EXPRESSIONS
      204+    2557    1   ,/* STOPL  224  340 */ %NO_EXPRESSIONS
      205+    2558    1   ,/* EVALP  225  341 */ %EVALP_
      206+    2559    1   ,/* CCOSU  226  342 */ %EVALP_
      207+    2560    1   ,/* PTR_SET     343 */ %NO_EXPRESSIONS
      208+    2561    1   ,/* GO     228  344 */ %TWO_EXPRESSIONS_NO_REDEF
      209+    2562    1   ,/* MULTI_GO    345 */ %EXPR_EXPRESSION_NO_REDEF
      210+    2563    1   ,/* DEFLB  230  346 */ %NO_EXPRESSIONS
      211+    2564    1   ,/*INITV   231  347 */ %INITV_INCRV_CEILV
      212+    2565    1   ,/*INCRV   232  350 */ %INITV_INCRV_CEILV
      213+    2566    1   ,/*            233  */ %ILLEGAL_VALUE
      214+    2567    1   ,/*        234  352 */ %ILLEGAL_VALUE
      215+    2568    1   ,/* ENTRY  235  353 */ %NO_EXPRESSIONS
      216+    2569    1   ,/* ON_SWITCH   354 */ %NO_EXPRESSIONS
      217+    2570    1   ,/* OFF_SWITCH  355 */ %NO_EXPRESSIONS
      218+    2571    1   ,/* GO_SUB      356 */ %NO_EXPRESSIONS
      219+    2572    1   ,/* SUB_ENTRY   357 */ %TWO_EXPRESSIONS_NO_REDEF
      220+    2573    1   ,/* SUB_END     360 */ %TWO_EXPRESSIONS_NO_REDEF
      221+    2574    1   ,/* SUB_PREP    361 */ %NO_EXPRESSIONS
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:25   
      222+    2575    1   ,/* OS_CALL     362 */ %LOP_ARGLIST
      223+    2576    1   ,/* USER_CALL   363 */ %LOP_ARGLIST
      224+    2577    1   ,/* USE_ENTRY   364 */ %NO_EXPRESSIONS
      225+    2578    1   ,/* USE_END     365 */ %NO_EXPRESSIONS
      226+    2579    1   ,/* EXIT_PROG   366 */ %NO_EXPRESSIONS
      227+    2580    1   ,/* VAL    247  367 */ %NO_EXPRESSIONS
      228+    2581    1   ,/* VAL_END     370 */ %NO_EXPRESSIONS
      229+    2582    1   ,/* ACCEP  249  371 */ %ARGLIST_REDEF
      230+    2583    1   ,/* DISPL  250  372 */ %ROP_ARGLIST
      231+    2584    1   ,/* LINOI  251  373 */ %NO_EXPRESSIONS
      232+    2585    1   ,/* END    252  374 */ %NO_EXPRESSIONS
      233+    2586    1   ,/* DO1    253  375 */ %NO_EXPRESSIONS
      234+    2587    1   ,/* DO2    254  376 */ %NO_EXPRESSIONS
      235+    2588    1   ,/* DO3    255  377 */ %NO_EXPRESSIONS
      236+    2589    1   ,/* DO4    256  400 */ %NO_EXPRESSIONS
      237+    2590    1   ,/* DO5    257  401 */ %NO_EXPRESSIONS
      238+    2591    1   ,/* MVFIL  258  402 */ %TWO_EXPRESSIONS_LOP_REDEF
      239+    2592    1   ,/* DOEND  259  403 */ %NO_EXPRESSIONS
      240+    2593    1   ,/* PFORM  260  404 */ %NO_EXPRESSIONS
      241+    2594    1   ,/*        261  405 */ %ILLEGAL_VALUE
      242+    2595    1   ,/*        262  406 */ %ILLEGAL_VALUE
      243+    2596    1   ,/* EVALU  263  407 */ %NO_EXPRESSIONS
      244+    2597    1   ,/* WHEN   264  410 */ %NO_EXPRESSIONS
      245+    2598    1   ,/* OR2I   265  411 */ %TWO_EXPRESSIONS_LOP_REDEF
      246+    2599    1   ,/* ALTER  266  412 */ %NO_EXPRESSIONS
      247+    2600    1   ,/* SEARCH 267  413 */ %FOUR_EXPRESSIONS_TWO_REDEFS
      248+    2601    1   ,/* MVT    268  414 */ %THREE_EXPRESSIONS_TO_REDEF
      249+    2602    1   ,/* MVOOR  269  415 */ %TWO_EXPRESSIONS_LOP_REDEF
      250+    2603    1   ,/* MVDOR  270  416 */ %TWO_EXPRESSIONS_LOP_REDEF
      251+    2604    1   ,/* MVODR  271  417 */ %TWO_EXPRESSIONS_LOP_REDEF
      252+    2605    1   ,/* PREOFF 272  420 */ %NO_EXPRESSIONS
      253+    2606    1   ,/* PEND   273  421 */ %NO_EXPRESSIONS
      254+    2607    1   ,/* PRESET 274  422 */ %NO_EXPRESSIONS
      255+    2608    1   ,/* MVOO   275  423 */ %TWO_EXPRESSIONS_LOP_REDEF
      256+    2609    1   ,/* AD2O   276  424 */ %TWO_EXPRESSIONS_LOP_REDEF
      257+    2610    1   ,/* AD2OR  277  425 */ %TWO_EXPRESSIONS_LOP_REDEF
      258+    2611    1   ,/* AD3O   278  426 */ %THREE_EXPRESSIONS_TO_REDEF
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:26   
      259+    2612    1   ,/* AD3OR  279  427 */ %THREE_EXPRESSIONS_TO_REDEF
      260+    2613    1   ,/* MP2O   280  430 */ %TWO_EXPRESSIONS_LOP_REDEF
      261+    2614    1   ,/* MP2OR  281  431 */ %TWO_EXPRESSIONS_LOP_REDEF
      262+    2615    1   ,/* MP3O   282  432 */ %THREE_EXPRESSIONS_TO_REDEF
      263+    2616    1   ,/* MP3OR  283  433 */ %THREE_EXPRESSIONS_TO_REDEF
      264+    2617    1   ,/* DV2O   284  434 */ %TWO_EXPRESSIONS_LOP_REDEF
      265+    2618    1   ,/* DV2OR  285  435 */ %TWO_EXPRESSIONS_LOP_REDEF
      266+    2619    1   ,/* DV3O   286  436 */ %THREE_EXPRESSIONS_TO_REDEF
      267+    2620    1   ,/* DV3OR  287  437 */ %THREE_EXPRESSIONS_TO_REDEF
      268+    2621    1   ,/* SB2O   288  440 */ %TWO_EXPRESSIONS_LOP_REDEF
      269+    2622    1   ,/* SB2OR  289  441 */ %TWO_EXPRESSIONS_LOP_REDEF
      270+    2623    1   ,/* SB3O   290  442 */ %THREE_EXPRESSIONS_TO_REDEF
      271+    2624    1   ,/* SB3OR  291  443 */ %THREE_EXPRESSIONS_TO_REDEF
      272+    2625    1   ,/* END_PROG    444 */ %NO_EXPRESSIONS
      273+    2626    1   ,/* SCOPE  293  445 */ %NO_EXPRESSIONS
      274+    2627    1   ,/*P_A_PRESET   446 */ %NO_EXPRESSIONS
      275+    2628    1   )
      276+    2629        %ENDIF ;
      277+    2630    1   ;
      278+    2631
      279+    2632        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:27   
      449     2633
      450     2634
      451     2635    1   RETURN ; /* Allows reference in Z8GO & gets around Delta bug. */
      452     2636
      453     2637    1   END Z8GD$DOCUMENT ;

PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:28   
--  Include file information  --

   Z8G_P3VEC.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8G_O3COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8GD$DOCUMENT.

   Procedure Z8GD$DOCUMENT requires 3 words for executable code.
   Procedure Z8GD$DOCUMENT requires 4 words of local(AUTO) storage.

    No errors detected in file Z8GD.:Z8A6TSI    .

PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:29   

 Object Unit name= Z8GD$DOCUMENT                              File name= Z8GD.:Z8A6TOU
 UTS= AUG 09 '97 13:13:52.40 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none    56     70  O3COM
    2  LblCom even  none   295    447  P3VEC
    3   Proc  even  none     3      3  Z8GD$DOCUMENT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  Z8GD$DOCUMENT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:30   


        1        1        /*M* Z8GD$DOCUMENT -- Phase 3 Documentation */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*P*
        9        9             NAME: Z8GD$DOCUMENT
       10       10             PURPOSE:
       11       11                  COBOL 85 global optimizer documentation module.
       12       12             DESCRIPTION:
       13       13                  This module contains general documentation for the
       14       14                  global optimizer phase of the COBOL 85 compiler.
       15       15        */
       16       16
       17       17        /*F*       NAME: COBOL_85_OPTIMIZER
       18       18
       19       19            DESCRIPTION::
       20       20
       21       21                The Cobol-85 Compiler is capable of producing highly efficient
       22       22
       23       23                object code.  The production of  code of this type is referred
       24       24
       25       25                to  by  the   terminology  "optimization".   The  optimization
       26       26
       27       27                features of  Cobol-85 are characterized by  two general types:
       28       28
       29       29                (1)  local optimization,  and (2)  global optimization.  Local
       30       30
       31       31                optimization  consists of analyses  performed at the statement
       32       32
       33       33                level,   for   example,   compile   time  arithmetic.   Global
       34       34
       35       35                optimization, by contrast, consists of analyses performed over
       36       36
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:31   
       37       37                many statements.
       38       38
       39       39
       40       40                Essentially, global optimization is based on a linear analysis
       41       41
       42       42                of  the definition points  of the variables  and the branching
       43       43
       44       44                and loop  structure  of the program.   The major objectives of
       45       45
       46       46                this process are:
       47       47
       48       48                (1) eliminate redundant calculations  when references are made
       49       49
       50       50                    to common sub-expression values,
       51       51
       52       52                (2) remove invariant calculations from in-line Perform loops,
       53       53
       54       54                (3) more  efficiently compute  subscripts containing induction
       55       55
       56       56                    variables, and
       57       57
       58       58                (4) provide efficient register usage.
       59       59
       60       60        */
       61       61
       62       62        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:32   
       63       63        /*F*       NAME: COMMON_SUBEXPRESSION_ANALYSIS
       64       64
       65       65            DESCRIPTION::
       66       66
       67       67                A prevalent coding practice among inexperienced programmers is
       68       68
       69       69                the repeated use of the same expression.  For example:
       70       70
       71       71                    COMPUTE R4 = R1 + R2
       72       72                    COMPUTE R5 = R1 + R2 + R3
       73       73                    COMPUTE R6 = (R1 + R2) * R3 / (R1 + R2 + R3)
       74       74
       75       75                Here  the expression  R1 +  R2 appears  in each  of the source
       76       76
       77       77                lines  and  R1  +  R2  +  R3  appears  in  lines 2 and 3.  The
       78       78
       79       79                optimizer  will  issue  CCOSU  (compute  common subexpression)
       80       80
       81       81                items for  the two expressions, so that  Phase 4 will generate
       82       82
       83       83                code using temporary storage locations (T1 and T2) as follows:
       84       84
       85       85                    T1 = R1 + R2
       86       86                    R4 = T1
       87       87                    T2 = T1 + R3
       88       88                    R5 = T2
       89       89                    R6 = T1 * R3 / T2
       90       90
       91       91        */
       92       92
       93       93        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:33   
       94       94        /*F*       NAME: INDUCTION_VARIABLE_MATERIALIZATION_ANALYSIS
       95       95
       96       96            DESCRIPTION::
       97       97
       98       98                This  analysis  determines  whether  the  Perform  loop  index
       99       99
      100      100                (induction variable) should be materialized (i.e., stored in a
      101      101
      102      102                core  storage  location).   This  non-materialization  of  the
      103      103
      104      104                induction variable  means that the size  of the code generated
      105      105
      106      106                for  the Perform loop  is reduced.  When  it is unnecessary to
      107      107
      108      108                materialize an induction  variable, the compiler will generate
      109      109
      110      110                code to  use an index register (if  one is available) to count
      111      111
      112      112                down the number of iterations of the Perform.
      113      113
      114      114        */
      115      115
      116      116        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:34   
      117      117        /*F*       NAME: LOOP_COLLAPSING_ANALYSIS
      118      118
      119      119            DESCRIPTION::
      120      120
      121      121                This  analysis attempts to  reduce two or  more nested Perform
      122      122
      123      123                loops to a single loop. Consider the following example:
      124      124
      125      125
      126      126                    MOVE ZERO TO SUM.
      127      127                    PERFORM VARYING I FROM 1 BY 1 UNTIL I > K
      128      128                      PERFORM VARYING J FROM 1 BY 1 UNTIL J > L
      129      129                        ADD 1 TO SUM
      130      130                      END-PERFORM.
      131      131                    END-PERFORM.
      132      132
      133      133                The global  optimizer causes code generation  that reduces the
      134      134
      135      135                two loops to one:
      136      136
      137      137
      138      138                    MOVE ZERO TO SUM.
      139      139                    MULTIPLY K BY L GIVING TEMP.
      140      140                    PERFORM VARYING I FROM 1 BY 1 UNTIL I > TEMP
      141      141                      ADD 1 TO SUM
      142      142                    END-PERFORM.
      143      143
      144      144                The general criteria that must be met to combine an inner loop
      145      145
      146      146                with its next outer loop are:
      147      147
      148      148                (1) There are no executable statements or code inserted by the
      149      149
      150      150                    compiler between the two Perform statements or between the
      151      151
      152      152                    two End-Performs.
      153      153
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:35   
      154      154                (2) The induction variable of  neither the inner nor the outer
      155      155
      156      156                    loop  is to be  materialized; that is,  the only usages of
      157      157
      158      158                    the induction variables are as subscripts.
      159      159
      160      160                (3) There is no branch out of the loops.
      161      161
      162      162                When these conditions are  met, the optimizer causes the inner
      163      163
      164      164                loop  to  be  non-iterative,  causing  the  code  generator to
      165      165
      166      166                generate  no  code  for  it.   The iteration expression of the
      167      167
      168      168                outer  loop is set  equal to the  product of the iterations of
      169      169
      170      170                the two original loops.
      171      171
      172      172        */
      173      173
      174      174        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:36   
      175      175        /*F*       NAME: SUBSCRIPT_EXPRESSION_ANALYSIS
      176      176
      177      177            DESCRIPTION::
      178      178
      179      179                A subscript expression whose value is invariant over a loop or
      180      180
      181      181                limited by  the induction variable of the  loop is a potential
      182      182
      183      183                candidate  for  permanent  index  register assignment over the
      184      184
      185      185                range  of  the  loop.   Additionally,  the  compute  point  of
      186      186
      187      187                subscripts dependent on more  than one induction variable of a
      188      188
      189      189                nest  of  Performs  may  often  be  adjusted to an outer loop.
      190      190
      191      191                Consider the following example:
      192      192
      193      193
      194      194                    PERFORM VARYING I FROM 1 BY 1 UNTIL I > N1
      195      195                      PERFORM VARYING J FROM 1 BY 1 UNTIL J > N2
      196      196                        PERFORM VARYING K FROM 1 BY 1 UNTIL K > N3
      197      197                          COMPUTE AR5 (I, J, K) = I + 10*J + 100*K
      198      198                          IF I*J*K IS EQUAL TO 7 THEN
      199      199                            MOVE -7 TO AR5 (I, J, K)
      200      200                            MOVE -1 TO ITAG
      201      201                          ELSE
      202      202                            MOVE 1 TO ITAG
      203      203                          END-IF
      204      204                        END-PERFORM
      205      205                      END-PERFORM
      206      206                    END-PERFORM.
      207      207
      208      208                Those  statements  within  the  innermost loop require storage
      209      209
      210      210                into  the array  element AR5  (I, J,  K).  The  address of the
      211      211
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:37   
      212      212                element is a complicated function  of the subscripts I, J, and
      213      213
      214      214                K.   The optimizer  causes code  to be  generated to calculate
      215      215
      216      216                this subscript function one time and assign it to a register.
      217      217
      218      218                See Z8GX extract documentation for more details.
      219      219
      220      220        */
      221      221
      222      222        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:38   
      223      223        /*F*       NAME: EXPRESSION_COMPUTE_POINT_ANALYSIS
      224      224
      225      225            DESCRIPTION::
      226      226
      227      227                During the Optimization phase,  the encoded program is scanned
      228      228
      229      229                backwards;  that  is,  from  the  last statement to the first.
      230      230
      231      231                Expression  compute point analysis  involves the determination
      232      232
      233      233                of  the optimal  place for  the computation  of expressions in
      234      234
      235      235                relation to loop stuctures.  The object of this analysis is to
      236      236
      237      237                squeeze  as  much  code  as  possible outside of the innermost
      238      238
      239      239                loops  of  Perform  nests,  since  these  loops  are generally
      240      240
      241      241                executed the greatest number of times.
      242      242
      243      243
      244      244                The process of determining where  in the program to compute an
      245      245
      246      246                expression  involves  determining  the  range  of  the  source
      247      247
      248      248                program  over  which  the  operands  of  the expression have a
      249      249
      250      250                constant  value.   This   process  yields  values  called  the
      251      251
      252      252                "forward definition point"  (FDP) and the "backward definition
      253      253
      254      254                point"  (BDP).   Using  these  points  and  the  Perform  loop
      255      255
      256      256                structure  and  knowledge  of  referenced labels, the earliest
      257      257
      258      258                location  where it  is theoretically  possible to  compute the
      259      259
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:39   
      260      260                expression is determined.
      261      261
      262      262        */
      263      263
      264      264        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:40   
      265      265        /*F*       NAME: ILS
      266      266
      267      267            DESCRIPTION::
      268      268
      269      269                The major table for the global optimizer is the ILS.  For each
      270      270
      271      271                major item on the ILL, Phase One must issue an associated item
      272      272
      273      273                on the ILS.  One factor in determining which ILS item is to be
      274      274
      275      275                issued   is  whether   the  ILL   item  involves   the  actual
      276      276
      277      277                redefinition  of  a  variable.    A  variable  has  an  actual
      278      278
      279      279                redefinition when it is used:
      280      280
      281      281                (1) As an identifier in an ACCEPT statement;
      282      282                (2) As a CD-name in an ACCEPT (message count updated);
      283      283                (3) As a  receiving identifier in an  ADD, SUBTRACT, MULTIPLY,
      284      284                    or DIVIDE statement;
      285      285                (4) As identifier-1 of a TRANSFORM statement.
      286      286                (5) On the left of equals in a COMPUTE statement;
      287      287                (6) As identifier-1 of an INITIALIZE statement;
      288      288                (7) As  a sum-counter, LINE-COUNTER,  or PAGE-COUNTER involved
      289      289                    in an INITIATE statement;
      290      290                (8) As identifier-2 in an INSPECT TALLYING statement;
      291      291                (9) As identifier-1 in an INSPECT REPLACING statement;
      292      292                (10) As identifier-2 of a MOVE statement;
      293      293                (11) As a LINAGE-COUNTER involved in an OPEN or WRITE;
      294      294                (12) As an induction variable in a Format 4 PERFORM;
      295      295                (13) As a record area associated with a READ file-name;
      296      296                (14) As identifier-1 of a RECEIVE statement;
      297      297                (15) As a record area associated with a RETURN file-name;
      298      298                (16) As  a  record-name  when  the  FROM  option  is used in a
      299      299                    RELEASE, REWRITE, or WRITE statement;
      300      300                (17) As an  identifier when the INTO option  is used in a READ
      301      301                    or RETURN statement;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:41   
      302      302                (18) As  identifier-2,  index-name-1,  or  the  implied  index
      303      303                    varied by a SEARCH statement;
      304      304                (19) As a receiving item in a SET statement;
      305      305                (20) As identifier-3 or identifier-4 of a STRING statement;
      306      306                (21) As    identifier-4,   identifier-5,    identifier-6,   or
      307      307                    identifier-8 of an UNSTRING statement;
      308      308                (22) Implicitly in an EXAMINE statement (the TALLY register);
      309      309                (23) As identifier-1 of an EXAMINE statement.
      310      310
      311      311                In addition,  a variable has a  potential redefinition when it
      312      312
      313      313                is used:
      314      314
      315      315                (1) As  a  data-name  in   the  "BY  REFERENCE"  list  (either
      316      316                    implicitly or explicitly) of a CALL statement;
      317      317                (2) As a  data-name that's part of an  SD referenced in a SORT
      318      318                    or MERGE statement.
      319      319
      320      320                Note also  that a CALL statement  can potentially redefine any
      321      321
      322      322                EXTERNAL data-name.  A redefinition  of a group item redefines
      323      323
      324      324                all  members of  the group.   A redefinition  of a  RENAMES or
      325      325
      326      326                REDEFINES  data-name redefines all  data-names equivalenced to
      327      327
      328      328                that data-name.
      329      329
      330      330
      331      331
      332      332        */
      333      333
      334      334        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:42   
      335      335        /*F*       NAME: PHASE_1_SUPPORT
      336      336
      337      337            DESCRIPTION::
      338      338
      339      339                (1) THE REDEFINITION LIST -- prior  to  Phase 3,  each  symbol
      340      340
      341      341                    table item (SCALAR, ARRAY, etc.) contains an indication of
      342      342
      343      343                    the  last redefinition  point (FDP).   This information in
      344      344
      345      345                    conjunction with the  OPV and OPA redefinition information
      346      346
      347      347                    constitutes the redefinition list.
      348      348
      349      349                (2) THE COMMON  REDEFINITION LIST -- a cell  in COMCOM will be
      350      350
      351      351                    set  by Phase 1  to indicate the  last common redefinition
      352      352
      353      353                    point (ie, the last  CALL). This information in conjuction
      354      354
      355      355                    with  the  OPA  common  redefinition  data constitutes the
      356      356
      357      357                    common redefinition list.
      358      358
      359      359                (3) THE LOOP NEST LIST  -- an in-line PERFORM loop (equivalent
      360      360
      361      361                    to a Fortran DO loop) is  represented on the ILL by a loop
      362      362
      363      363                    begin (DO5) item and a loop-end item (DOEND). Each DO5
      364      364
      365      365                    item contains the following links:
      366      366
      367      367                    (a) a link to its own DOEND,
      368      368
      369      369                    (b) a link to the next outer loop's DO5 item,
      370      370
      371      371                    (c) a link to the next DO5 or DOEND item.
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:43   
      372      372
      373      373                    Each DOEND item must contain the following links:
      374      374
      375      375                    (a) a link to its own DO5,
      376      376
      377      377                    (b) a link to the next DO5 or DOEND item.
      378      378
      379      379                (4) TRANSFORM  SUBSCRIPT REFERENCES  -- since  Phase 3  does a
      380      380
      381      381                    subexpression   analysis   to   determine  commonality  of
      382      382
      383      383                    occurrence, it is desirable that all subscript expressions
      384      384
      385      385                    be  transformed  into  their  arithmetic counterparts.
      386      386
      387      387        */
      388      388
      389      389        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:44   
      390      390        /*F*       NAME: PHASE_2_SUPPORT
      391      391
      392      392            DESCRIPTION::
      393      393
      394      394                (1) THE REFERENCED  LABEL LIST -- during  Phase 2's processing
      395      395
      396      396                    of labels (see Design Note  #1), it must create a backward
      397      397
      398      398                    chain  of referenced labels  for use by  Phase 3.  The LBL
      399      399
      400      400                    field in  the DEFLAB ILL item will  be the linking element
      401      401
      402      402                    for  this chain.  The  head link will  be H_LBL in COMCOM,
      403      403
      404      404                    and will point to the last DEFLAB item in the ILL.
      405      405
      406      406                (2) "PERFORM"  MANIPULATION  --  it  would  be nice if Phase 2
      407      407
      408      408                    could  transform eligible out-of-line  PERFORMs to in-line
      409      409
      410      410                    PERFORMs.  This  would  accomplish  two  things:  (a) help
      411      411
      412      412                    global  optimization, (b) reduce  pipeline breaks and page
      413      413
      414      414                    faults caused by transfering back and forth to out-of-line
      415      415
      416      416                    PERFORMs.  The problem  is:  how  to accomplish this?  The
      417      417
      418      418                    sequence  numbers  of  the  statements  within the Perform
      419      419
      420      420                    paragraph(s)  to  be  moved  are  not in sequence with the
      421      421
      422      422                    surrounding  ILS items  where it  is to  be moved  to.  It
      423      423
      424      424                    would be an almost  impossible task to resequence the ILS,
      425      425
      426      426                    since  Phase 1 has  placed sequence numbers  in ST and ILL
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:45   
      427      427
      428      428                    items as well as ILS items. A possible solution is to have
      429      429
      430      430                    Phase 2 assign the sequence  numbers after it has done the
      431      431
      432      432                    "PERFORM  manipulations", and so it does.
      433      433
      434      434        */
      435      435
      436      436        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:46   
      437      437
      438      438        Z8GD$DOCUMENT: PROC;

    438  3 000000   000000 700200 xent  Z8GD$DOCUME* TSX0  ! X66_AUTO_0
         3 000001   000004 000000                    ZERO    4,0

      439      439        %EQU PHASE = 3;
      440      440        %SET Z8GD = 874 ; /* 8 || G=7 || D=4 */
      441      441        %EQU MODULE = Z8GD ;
      442      442
      443      443        %INCLUDE Z8A_DEFC ;
      444      511        %INCLUDE Z8A_NAMES;
      445     2311
      446     2312        %LIST;
      447     2313        %INCLUDE Z8G_O3COM ;
        1+    2314        /*T***********************************************************/
        2+    2315        /*T*                                                         */
        3+    2316        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    2317        /*T*                                                         */
        5+    2318        /*T***********************************************************/
        6+    2319        /* INCLUDE FILE OPT_O3COM: Phase 3 Common */
        7+    2320
        8+    2321        %EQU FIRST_SEQ# = 3 ; /* LINOI after ENTRY */
        9+    2322
       10+    2323    1   DCL 1 O3COM   ALIGNED EXT,
       11+    2324    1       2 CURRENT_SEQ_NO  SBIN WORD, /* Sequence# of current ILS$ */
       12+    2325    1       2 SEQ#1$          PTR INIT (ADDR(NIL)), /* ILS item seq#1 */
       13+    2326    1       2 EVALP$          PTR INIT (ADDR(NIL)), /* Current EVALP */
       14+    2327    1       2 LBL             PTR INIT (ADDR(NIL)), /* Next Ref'd Label */
       15+    2328    1       2 DO#             UBIN WORD INIT (0),   /* Seq# of Inner DO */
       16+    2329    1       2 DOEND#          UBIN WORD INIT (0),   /* Seq# of Do End   */
       17+    2330    1       2 IF#             UBIN WORD INIT (0),   /* Seq# of Inner IF */
       18+    2331    1       2 IFEND#          UBIN WORD INIT (0),   /* Seq# of If End   */
       19+    2332    1       2 LAST_OPA_REDEF  SBIN WORD INIT (%MAX_SEQ#),
       20+    2333    1       2 LOOP_LEVEL      UBIN WORD INIT (0),   /* Current DO Level */
       21+    2334    1       2 OP$             PTR,                  /* CCOSU for op seg ESC */
       22+    2335    1       2 SL_INDEX        SBIN WORD,            /* Index into SL array */
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:47   
       23+    2336    1       2 SL (0:15),                            /* Sequence# List      */
       24+    2337    1       3 SEQ#            SBIN WORD INIT (%FIRST_SEQ# * 16),
       25+    2338    1       3 SEQ$            PTR,
       26+    2339    1       2 MAX_SEQ#        SBIN WORD,
       27+    2340    1       2 VARYING$        PTR INIT(ADDR(NIL)),  /* Index of inner DO5 */
       28+    2341    1       2 FROM$           PTR,                  /* Start of inner DO5 */
       29+    2342    1       2 BY$             PTR,                  /* Incrm of inner DO5 */
       30+    2343    1       2 GSA$            PTR INIT(ADDR(NIL)),  /* GSA List           */
       31+    2344    1       2 GSA_COUNT       SBIN WORD INIT(0),    /* # GSA Items        */
       32+    2345    1       2 DO_SEQ#         SBIN WORD,            /* Seq# of DO5        */
       33+    2346    1       2 DOEND_SEQ#      SBIN WORD,            /* Seq# of DO5 DOEND  */
       34+    2347    1       2 INCRV_ILS$      PTR,                  /* Seq# of INCRV      */
       35+    2348    1       2 DO_ILS$         PTR INIT(ADDR(NIL)),  /* ILS of inner DO    */
       36+    2349    1       2 HEAD_EVALP$     PTR INIT(ADDR(NIL)),  /* Head of EVALP pool */
       37+    2350    1       2 LAST_WORD       SBIN WORD ;
       38+    2351
       39+    2352        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:48   
      448     2353        %INCLUDE Z8G_P3VEC ;
        1+    2354        /*T***********************************************************/
        2+    2355        /*T*                                                         */
        3+    2356        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4+    2357        /*T*                                                         */
        5+    2358        /*T***********************************************************/
        6+    2359        /* INCLUDE FILE Z8G_P3VEC */
        7+    2360
        8+    2361        /* Recompile Z8GD when this include file changes */
        9+    2362
       10+    2363        /* P3VEC Codes */
       11+    2364
       12+    2365        %EQU NO_EXPRESSIONS =              0 ;
       13+    2366        %EQU ONE_EXPRESSION_LOP_REDEF =    1 ;
       14+    2367        %EQU TWO_EXPRESSIONS_LOP_REDEF =   2 ;
       15+    2368        %EQU THREE_EXPRESSIONS_TO_REDEF =  3 ;
       16+    2369        %EQU FOUR_EXPRESSIONS_TWO_REDEFS = 4 ;
       17+    2370        %EQU EVALP_ =                      5 ;
       18+    2371        %EQU SSOP_SIZ_BASE =               5 ;
       19+    2372        %EQU ONE_EXPRESSION_NO_REDEF =     6 ;
       20+    2373        %EQU TWO_EXPRESSIONS_NO_REDEF =    7 ;
       21+    2374        %EQU ROP_ARGLIST              =    8 ;
       22+    2375        %EQU ROP_EXPRESSION_NO_REDEF =     9 ;
       23+    2376        %EQU TIMES$_EXPRESSION_NO_REDEF = 10 ;
       24+    2377        %EQU EXPR_EXPRESSION_NO_REDEF   = 11 ;
       25+    2378        %EQU INITV_INCRV_CEILV = 12 ;
       26+    2379        %EQU ARGLIST_REDEF     = 13 ;
       27+    2380        %EQU ILLEGAL_VALUE     = 14 ;
       28+    2381        %EQU LOP_ARGLIST       = 15 ;
       29+    2382
       30+    2383        %SET Z8GD = 874 ; /* 8 || G=7 || D=4 */
       31+    2384
       32+    2385    1   DCL P3VEC (0:%LAST_ILL) UBIN WORD EXT
       33+    2386        %IF MODULE = Z8GD ;
       34+    2387    1    INIT (
       35+    2388    1    /* CONTINUE 0 */ %NO_EXPRESSIONS,
       36+    2389    1    /* BASE          1 */ %SSOP_SIZ_BASE
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:49   
       37+    2390    1   ,/* FISS          2 */ %SSOP_SIZ_BASE
       38+    2391    1   ,/* OFF           3 */ %SSOP_SIZ_BASE
       39+    2392    1   ,/* SIZ           4 */ %SSOP_SIZ_BASE
       40+    2393    1   ,/* SSOP          5 */ %SSOP_SIZ_BASE
       41+    2394    1   ,/* DAN      6    6 */ %ONE_EXPRESSION_NO_REDEF
       42+    2395    1   ,/* DNA      7    7 */ %ONE_EXPRESSION_NO_REDEF
       43+    2396    1   ,/* DESC     8   10 */ %NO_EXPRESSIONS
       44+    2397    1   ,/* D96      9   11 */ %ONE_EXPRESSION_NO_REDEF
       45+    2398    1   ,/* REFMOD  10   12 */ %SSOP_SIZ_BASE                       /*#28637*/
       46+    2399    1   ,/*         11      */ %ILLEGAL_VALUE*1
       47+    2400    1   ,/* MPD10   12   14 */ %ONE_EXPRESSION_NO_REDEF
       48+    2401    1   ,/* TRIAD   13   15 */ %NO_EXPRESSIONS
       49+    2402    1   ,/* ARGP    14   16 */ %NO_EXPRESSIONS
       50+    2403    1   ,/* ESC     15   17 */ %NO_EXPRESSIONS
       51+    2404    1   ,/* CVDF    16   20 */ %ONE_EXPRESSION_NO_REDEF
       52+    2405    1   ,/* MODI    17   21 */ %TWO_EXPRESSIONS_NO_REDEF
       53+    2406    1   ,/* ASC_BIN 18   22 */ %ONE_EXPRESSION_NO_REDEF
       54+    2407    1   ,/* CVIK    19   23 */ %ONE_EXPRESSION_NO_REDEF
       55+    2408    1   ,/* CVKI    20   24 */ %ONE_EXPRESSION_NO_REDEF
       56+    2409    1   ,/* CFILL   21   25 */ %ONE_EXPRESSION_NO_REDEF
       57+    2410    1   ,/* CVDDD   22   26 */ %ONE_EXPRESSION_NO_REDEF
       58+    2411    1   ,/* SBCHK   23   27 */ %TWO_EXPRESSIONS_NO_REDEF
       59+    2412    1   ,/* OCCHK   24   30 */ %TWO_EXPRESSIONS_NO_REDEF
       60+    2413    1   ,/* CMGR    25   31 */ %TWO_EXPRESSIONS_NO_REDEF
       61+    2414    1   ,/* CMGQ    26   32 */ %TWO_EXPRESSIONS_NO_REDEF
       62+    2415    1   ,/* CMPQ    27   33 */ %TWO_EXPRESSIONS_NO_REDEF
       63+    2416    1   ,/* ANDI    28   34 */ %TWO_EXPRESSIONS_NO_REDEF
       64+    2417    1   ,/* CVIH    29   35 */ %ONE_EXPRESSION_NO_REDEF
       65+    2418    1   ,/* CVID9   30   36 */ %ONE_EXPRESSION_NO_REDEF
       66+    2419    1   ,/* CVDSF   31   37 */ %ONE_EXPRESSION_NO_REDEF
       67+    2420    1   ,/* RNDQ    32   40 */ %ONE_EXPRESSION_NO_REDEF
       68+    2421    1   ,/* EXRR    33   41 */ %TWO_EXPRESSIONS_NO_REDEF
       69+    2422    1   ,/* EXRI    34   42 */ %TWO_EXPRESSIONS_NO_REDEF
       70+    2423    1   ,/* EXQQ    35   43 */ %TWO_EXPRESSIONS_NO_REDEF
       71+    2424    1   ,/* EXQI    36   44 */ %TWO_EXPRESSIONS_NO_REDEF
       72+    2425    1   ,/* ADQ     37   45 */ %TWO_EXPRESSIONS_NO_REDEF
       73+    2426    1   ,/* SBQ     38   46 */ %TWO_EXPRESSIONS_NO_REDEF
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:50   
       74+    2427    1   ,/* MPQ     39   47 */ %TWO_EXPRESSIONS_NO_REDEF
       75+    2428    1   ,/* DVQ     40   50 */ %TWO_EXPRESSIONS_NO_REDEF
       76+    2429    1   ,/* USQ     41   51 */ %ONE_EXPRESSION_NO_REDEF
       77+    2430    1   ,/* MPI2    42   52 */ %ONE_EXPRESSION_NO_REDEF
       78+    2431    1   ,/* ADD     43   53 */ %TWO_EXPRESSIONS_NO_REDEF
       79+    2432    1   ,/* ADI     44   54 */ %TWO_EXPRESSIONS_NO_REDEF
       80+    2433    1   ,/* SBD     45   55 */ %TWO_EXPRESSIONS_NO_REDEF
       81+    2434    1   ,/* SBI     46   56 */ %TWO_EXPRESSIONS_NO_REDEF
       82+    2435    1   ,/* MPD     47   57 */ %TWO_EXPRESSIONS_NO_REDEF
       83+    2436    1   ,/* MPI     48   60 */ %TWO_EXPRESSIONS_NO_REDEF
       84+    2437    1   ,/* DVD     49   61 */ %TWO_EXPRESSIONS_NO_REDEF
       85+    2438    1   ,/* DVI     50   62 */ %TWO_EXPRESSIONS_NO_REDEF
       86+    2439    1   ,/* DVDR    51   63 */ %TWO_EXPRESSIONS_NO_REDEF
       87+    2440    1   ,/* EXDIO   52   64 */ %TWO_EXPRESSIONS_NO_REDEF
       88+    2441    1   ,/* USD     53   65 */ %ONE_EXPRESSION_NO_REDEF
       89+    2442    1   ,/* USI     54   66 */ %ONE_EXPRESSION_NO_REDEF
       90+    2443    1   ,/* ADR     55   67 */ %TWO_EXPRESSIONS_NO_REDEF
       91+    2444    1   ,/* SBR     56   70 */ %TWO_EXPRESSIONS_NO_REDEF
       92+    2445    1   ,/* MPR     57   71 */ %TWO_EXPRESSIONS_NO_REDEF
       93+    2446    1   ,/* DVR     58   72 */ %TWO_EXPRESSIONS_NO_REDEF
       94+    2447    1   ,/* USR     59   73 */ %ONE_EXPRESSION_NO_REDEF
       95+    2448    1   ,/* CVDO    60   74 */ %ONE_EXPRESSION_NO_REDEF
       96+    2449    1   ,/* EXII    61   75 */ %TWO_EXPRESSIONS_NO_REDEF
       97+    2450    1   ,/* EXDI    62   76 */ %TWO_EXPRESSIONS_NO_REDEF
       98+    2451    1   ,/* EXDD    63   77 */ %TWO_EXPRESSIONS_NO_REDEF
       99+    2452    1   ,/* CVII    64  100 */ %ONE_EXPRESSION_NO_REDEF
      100+    2453    1   ,/* CVDD    65  101 */ %ONE_EXPRESSION_NO_REDEF
      101+    2454    1   ,/* RNDD    66  102 */ %ONE_EXPRESSION_NO_REDEF
      102+    2455    1   ,/*         67  103 */ %ONE_EXPRESSION_NO_REDEF
      103+    2456    1   ,/* RNDR    68  104 */ %ONE_EXPRESSION_NO_REDEF
      104+    2457    1   ,/* TRN     69  105 */ %ONE_EXPRESSION_NO_REDEF
      105+    2458    1   ,/* CMPI    70  106 */ %TWO_EXPRESSIONS_NO_REDEF
      106+    2459    1   ,/* CMPD    71  107 */ %TWO_EXPRESSIONS_NO_REDEF
      107+    2460    1   ,/* CMPC    72  110 */ %TWO_EXPRESSIONS_NO_REDEF
      108+    2461    1   ,/* CMPA    73  111 */ %TWO_EXPRESSIONS_NO_REDEF
      109+    2462    1   ,/* CMPR    74  112 */ %TWO_EXPRESSIONS_NO_REDEF
      110+    2463    1   ,/* CMGP    75  113 */ %TWO_EXPRESSIONS_NO_REDEF
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:51   
      111+    2464    1   ,/* DVI2    76  114 */ %ONE_EXPRESSION_NO_REDEF
      112+    2465    1   ,/* CVT     77  115 */ %ONE_EXPRESSION_NO_REDEF
      113+    2466    1   ,/* CMPAA   78  116 */ %TWO_EXPRESSIONS_NO_REDEF
      114+    2467    1   ,/*         79  117 */ %TWO_EXPRESSIONS_NO_REDEF
      115+    2468    1   ,/*         80  120 */ %TWO_EXPRESSIONS_NO_REDEF
      116+    2469    1   ,/* CMPAO   81  121 */ %TWO_EXPRESSIONS_NO_REDEF
      117+    2470    1   ,/* CMPAS   82  122 */ %ONE_EXPRESSION_NO_REDEF
      118+    2471    1   ,/* CMGI    83  123 */ %TWO_EXPRESSIONS_NO_REDEF
      119+    2472    1   ,/* CVAA    84  124 */ %ONE_EXPRESSION_NO_REDEF
      120+    2473    1   ,/* CV49    85  125 */ %ONE_EXPRESSION_NO_REDEF
      121+    2474    1   ,/* CVXY 86-101 145 */ %ONE_EXPRESSION_NO_REDEF * 16
      122+    2475    1   ,/* ORI    102  146 */ %TWO_EXPRESSIONS_NO_REDEF
      123+    2476    1   ,/* CVOD9  103  147 */ %ONE_EXPRESSION_NO_REDEF
      124+    2477    1   ,/* CVQD9  104  150 */ %ONE_EXPRESSION_NO_REDEF
      125+    2478    1   ,/* CVRD9  105  151 */ %ONE_EXPRESSION_NO_REDEF
      126+    2479    1   ,/* INDEX  106  152 */ %TWO_EXPRESSIONS_NO_REDEF
      127+    2480    1   ,/* MINI   107  153 */ %TWO_EXPRESSIONS_NO_REDEF
      128+    2481    1   ,/* MIND   108  154 */ %TWO_EXPRESSIONS_NO_REDEF
      129+    2482    1   ,/* MINR   109  155 */ %TWO_EXPRESSIONS_NO_REDEF
      130+    2483    1   ,/* MINQ   110  156 */ %TWO_EXPRESSIONS_NO_REDEF
      131+    2484    1   ,/* BIN_ASC 111 157 */ %ONE_EXPRESSION_NO_REDEF
      132+    2485    1   ,/* CFILLR  112 160 */ %ONE_EXPRESSION_NO_REDEF
      133+    2486    1   ,/* SHIFT_L 113 161 */ %ONE_EXPRESSION_NO_REDEF
      134+    2487    1   ,/* SHIFT_R 114 162 */ %ONE_EXPRESSION_NO_REDEF
      135+    2488    1   ,/* ADO     115 163 */ %TWO_EXPRESSIONS_NO_REDEF
      136+    2489    1   ,/* SBO     116 164 */ %TWO_EXPRESSIONS_NO_REDEF
      137+    2490    1   ,/* MPO     117 165 */ %TWO_EXPRESSIONS_NO_REDEF
      138+    2491    1   ,/* DVO     118 166 */ %TWO_EXPRESSIONS_NO_REDEF
      139+    2492    1   ,/* DVOR    119 167 */ %TWO_EXPRESSIONS_NO_REDEF
      140+    2493    1   ,/* CMPO    120 170 */ %TWO_EXPRESSIONS_NO_REDEF
      141+    2494    1   ,/* EVAL    121 171 */ %ONE_EXPRESSION_NO_REDEF
      142+    2495    1   ,/* USO     122 172 */ %ONE_EXPRESSION_NO_REDEF
      143+    2496    1   ,/* MINO    123 173 */ %TWO_EXPRESSIONS_NO_REDEF
      144+    2497    1   ,/* RNDO    124 174 */ %ONE_EXPRESSION_NO_REDEF
      145+    2498    1   ,/* ADDR    125 175 */ %ONE_EXPRESSION_NO_REDEF
      146+    2499    1   ,/* AUTO    126 176 */ %NO_EXPRESSIONS
      147+    2500    1   ,/* CMK     127 177 */ %TWO_EXPRESSIONS_NO_REDEF
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:52   
      148+    2501    1   ,/* CMK1    128 200 */ %TWO_EXPRESSIONS_NO_REDEF
      149+    2502    1   ,/* CMK1    129 201 */ %TWO_EXPRESSIONS_NO_REDEF
      150+    2503    1   ,/*        130-149  */ %ILLEGAL_VALUE*20
      151+    2504    1   ,/* AD2D   150  226 */ %TWO_EXPRESSIONS_LOP_REDEF
      152+    2505    1   ,/* AD2DR  151  227 */ %TWO_EXPRESSIONS_LOP_REDEF
      153+    2506    1   ,/* AD2I   152  230 */ %TWO_EXPRESSIONS_LOP_REDEF
      154+    2507    1   ,/* SB2D   153  231 */ %TWO_EXPRESSIONS_LOP_REDEF
      155+    2508    1   ,/* SB2DR  154  232 */ %TWO_EXPRESSIONS_LOP_REDEF
      156+    2509    1   ,/* SB2I   155  233 */ %TWO_EXPRESSIONS_LOP_REDEF
      157+    2510    1   ,/* MP2D   156  234 */ %TWO_EXPRESSIONS_LOP_REDEF
      158+    2511    1   ,/* MP2DR  157  235 */ %TWO_EXPRESSIONS_LOP_REDEF
      159+    2512    1   ,/* MP2I   158  236 */ %TWO_EXPRESSIONS_LOP_REDEF
      160+    2513    1   ,/* DV2D   159  237 */ %TWO_EXPRESSIONS_LOP_REDEF
      161+    2514    1   ,/* DV2DR  160  240 */ %TWO_EXPRESSIONS_LOP_REDEF
      162+    2515    1   ,/* DV2I   161  241 */ %TWO_EXPRESSIONS_LOP_REDEF
      163+    2516    1   ,/* DV2IR  162  242 */ %TWO_EXPRESSIONS_LOP_REDEF
      164+    2517    1   ,/* MVDD   163  243 */ %TWO_EXPRESSIONS_LOP_REDEF
      165+    2518    1   ,/* MVDDR  164  244 */ %TWO_EXPRESSIONS_LOP_REDEF
      166+    2519    1   ,/* MVII   165  245 */ %TWO_EXPRESSIONS_LOP_REDEF
      167+    2520    1   ,/* MVRR   166  246 */ %TWO_EXPRESSIONS_LOP_REDEF
      168+    2521    1   ,/* MVQQ   167  247 */ %TWO_EXPRESSIONS_LOP_REDEF
      169+    2522    1   ,/* MVRL   168  250 */ %TWO_EXPRESSIONS_LOP_REDEF
      170+    2523    1   ,/* MVHH   169  251 */ %TWO_EXPRESSIONS_LOP_REDEF
      171+    2524    1   ,/* MVID   170  252 */ %TWO_EXPRESSIONS_LOP_REDEF
      172+    2525    1   ,/* MVIH   171  253 */ %TWO_EXPRESSIONS_LOP_REDEF
      173+    2526    1   ,/* MVAN   172  254 */ %TWO_EXPRESSIONS_LOP_REDEF
      174+    2527    1   ,/* MVANO  173  255 */ %TWO_EXPRESSIONS_LOP_REDEF
      175+    2528    1   ,/* MVXY   174-183  */ %TWO_EXPRESSIONS_LOP_REDEF * 10
      176+    2529    1   ,/* MFILL  184  270 */ %ONE_EXPRESSION_LOP_REDEF
      177+    2530    1   ,/* MVIK   185  271 */ %TWO_EXPRESSIONS_LOP_REDEF
      178+    2531    1   ,/* MVKI   186  272 */ %TWO_EXPRESSIONS_LOP_REDEF
      179+    2532    1   ,/* MVJI   187  273 */ %TWO_EXPRESSIONS_LOP_REDEF
      180+    2533    1   ,/* PINC   188  274 */ %ONE_EXPRESSION_LOP_REDEF
      181+    2534    1   ,/* MVPP   189  275 */ %TWO_EXPRESSIONS_LOP_REDEF
      182+    2535    1   ,0*13
      183+    2536    1   ,/* REMEM    203 313*/ %NO_EXPRESSIONS
      184+    2537    1   ,/* STP2   204  314 */ %NO_EXPRESSIONS
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:53   
      185+    2538    1   ,/* MVDDD  205  315 */ %THREE_EXPRESSIONS_TO_REDEF
      186+    2539    1   ,/* MVEAL  206  316 */ %THREE_EXPRESSIONS_TO_REDEF
      187+    2540    1   ,/* MVEAN  207  317 */ %THREE_EXPRESSIONS_TO_REDEF
      188+    2541    1   ,/* MVEDD  208  320 */ %THREE_EXPRESSIONS_TO_REDEF
      189+    2542    1   ,/* AD3D   209  321 */ %THREE_EXPRESSIONS_TO_REDEF
      190+    2543    1   ,/* AD3DR  210  322 */ %THREE_EXPRESSIONS_TO_REDEF
      191+    2544    1   ,/* SB3D   211  323 */ %THREE_EXPRESSIONS_TO_REDEF
      192+    2545    1   ,/* SB3DR  212  324 */ %THREE_EXPRESSIONS_TO_REDEF
      193+    2546    1   ,/* MP3D   213  325 */ %THREE_EXPRESSIONS_TO_REDEF
      194+    2547    1   ,/* MP3DR  214  326 */ %THREE_EXPRESSIONS_TO_REDEF
      195+    2548    1   ,/* DV3D   215  327 */ %THREE_EXPRESSIONS_TO_REDEF
      196+    2549    1   ,/* DV3DR  216  330 */ %THREE_EXPRESSIONS_TO_REDEF
      197+    2550    1   ,/* DV3IR  217  331 */ %ILLEGAL_VALUE
      198+    2551    1   ,/* DV4I   218  332 */ %FOUR_EXPRESSIONS_TWO_REDEFS
      199+    2552    1   ,/* SETF   219  333 */ %ILLEGAL_VALUE
      200+    2553    1   ,/* SETFF  220  334 */ %ILLEGAL_VALUE
      201+    2554    1   ,/* SETFT  221  335 */ %ILLEGAL_VALUE
      202+    2555    1   ,/* P_P_PRESET 222  336 */ %NO_EXPRESSIONS
      203+    2556    1   ,/* STOP   223  337 */ %NO_EXPRESSIONS
      204+    2557    1   ,/* STOPL  224  340 */ %NO_EXPRESSIONS
      205+    2558    1   ,/* EVALP  225  341 */ %EVALP_
      206+    2559    1   ,/* CCOSU  226  342 */ %EVALP_
      207+    2560    1   ,/* PTR_SET     343 */ %NO_EXPRESSIONS
      208+    2561    1   ,/* GO     228  344 */ %TWO_EXPRESSIONS_NO_REDEF
      209+    2562    1   ,/* MULTI_GO    345 */ %EXPR_EXPRESSION_NO_REDEF
      210+    2563    1   ,/* DEFLB  230  346 */ %NO_EXPRESSIONS
      211+    2564    1   ,/*INITV   231  347 */ %INITV_INCRV_CEILV
      212+    2565    1   ,/*INCRV   232  350 */ %INITV_INCRV_CEILV
      213+    2566    1   ,/*            233  */ %ILLEGAL_VALUE
      214+    2567    1   ,/*        234  352 */ %ILLEGAL_VALUE
      215+    2568    1   ,/* ENTRY  235  353 */ %NO_EXPRESSIONS
      216+    2569    1   ,/* ON_SWITCH   354 */ %NO_EXPRESSIONS
      217+    2570    1   ,/* OFF_SWITCH  355 */ %NO_EXPRESSIONS
      218+    2571    1   ,/* GO_SUB      356 */ %NO_EXPRESSIONS
      219+    2572    1   ,/* SUB_ENTRY   357 */ %TWO_EXPRESSIONS_NO_REDEF
      220+    2573    1   ,/* SUB_END     360 */ %TWO_EXPRESSIONS_NO_REDEF
      221+    2574    1   ,/* SUB_PREP    361 */ %NO_EXPRESSIONS
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:54   
      222+    2575    1   ,/* OS_CALL     362 */ %LOP_ARGLIST
      223+    2576    1   ,/* USER_CALL   363 */ %LOP_ARGLIST
      224+    2577    1   ,/* USE_ENTRY   364 */ %NO_EXPRESSIONS
      225+    2578    1   ,/* USE_END     365 */ %NO_EXPRESSIONS
      226+    2579    1   ,/* EXIT_PROG   366 */ %NO_EXPRESSIONS
      227+    2580    1   ,/* VAL    247  367 */ %NO_EXPRESSIONS
      228+    2581    1   ,/* VAL_END     370 */ %NO_EXPRESSIONS
      229+    2582    1   ,/* ACCEP  249  371 */ %ARGLIST_REDEF
      230+    2583    1   ,/* DISPL  250  372 */ %ROP_ARGLIST
      231+    2584    1   ,/* LINOI  251  373 */ %NO_EXPRESSIONS
      232+    2585    1   ,/* END    252  374 */ %NO_EXPRESSIONS
      233+    2586    1   ,/* DO1    253  375 */ %NO_EXPRESSIONS
      234+    2587    1   ,/* DO2    254  376 */ %NO_EXPRESSIONS
      235+    2588    1   ,/* DO3    255  377 */ %NO_EXPRESSIONS
      236+    2589    1   ,/* DO4    256  400 */ %NO_EXPRESSIONS
      237+    2590    1   ,/* DO5    257  401 */ %NO_EXPRESSIONS
      238+    2591    1   ,/* MVFIL  258  402 */ %TWO_EXPRESSIONS_LOP_REDEF
      239+    2592    1   ,/* DOEND  259  403 */ %NO_EXPRESSIONS
      240+    2593    1   ,/* PFORM  260  404 */ %NO_EXPRESSIONS
      241+    2594    1   ,/*        261  405 */ %ILLEGAL_VALUE
      242+    2595    1   ,/*        262  406 */ %ILLEGAL_VALUE
      243+    2596    1   ,/* EVALU  263  407 */ %NO_EXPRESSIONS
      244+    2597    1   ,/* WHEN   264  410 */ %NO_EXPRESSIONS
      245+    2598    1   ,/* OR2I   265  411 */ %TWO_EXPRESSIONS_LOP_REDEF
      246+    2599    1   ,/* ALTER  266  412 */ %NO_EXPRESSIONS
      247+    2600    1   ,/* SEARCH 267  413 */ %FOUR_EXPRESSIONS_TWO_REDEFS
      248+    2601    1   ,/* MVT    268  414 */ %THREE_EXPRESSIONS_TO_REDEF
      249+    2602    1   ,/* MVOOR  269  415 */ %TWO_EXPRESSIONS_LOP_REDEF
      250+    2603    1   ,/* MVDOR  270  416 */ %TWO_EXPRESSIONS_LOP_REDEF
      251+    2604    1   ,/* MVODR  271  417 */ %TWO_EXPRESSIONS_LOP_REDEF
      252+    2605    1   ,/* PREOFF 272  420 */ %NO_EXPRESSIONS
      253+    2606    1   ,/* PEND   273  421 */ %NO_EXPRESSIONS
      254+    2607    1   ,/* PRESET 274  422 */ %NO_EXPRESSIONS
      255+    2608    1   ,/* MVOO   275  423 */ %TWO_EXPRESSIONS_LOP_REDEF
      256+    2609    1   ,/* AD2O   276  424 */ %TWO_EXPRESSIONS_LOP_REDEF
      257+    2610    1   ,/* AD2OR  277  425 */ %TWO_EXPRESSIONS_LOP_REDEF
      258+    2611    1   ,/* AD3O   278  426 */ %THREE_EXPRESSIONS_TO_REDEF
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:55   
      259+    2612    1   ,/* AD3OR  279  427 */ %THREE_EXPRESSIONS_TO_REDEF
      260+    2613    1   ,/* MP2O   280  430 */ %TWO_EXPRESSIONS_LOP_REDEF
      261+    2614    1   ,/* MP2OR  281  431 */ %TWO_EXPRESSIONS_LOP_REDEF
      262+    2615    1   ,/* MP3O   282  432 */ %THREE_EXPRESSIONS_TO_REDEF
      263+    2616    1   ,/* MP3OR  283  433 */ %THREE_EXPRESSIONS_TO_REDEF
      264+    2617    1   ,/* DV2O   284  434 */ %TWO_EXPRESSIONS_LOP_REDEF
      265+    2618    1   ,/* DV2OR  285  435 */ %TWO_EXPRESSIONS_LOP_REDEF
      266+    2619    1   ,/* DV3O   286  436 */ %THREE_EXPRESSIONS_TO_REDEF
      267+    2620    1   ,/* DV3OR  287  437 */ %THREE_EXPRESSIONS_TO_REDEF
      268+    2621    1   ,/* SB2O   288  440 */ %TWO_EXPRESSIONS_LOP_REDEF
      269+    2622    1   ,/* SB2OR  289  441 */ %TWO_EXPRESSIONS_LOP_REDEF
      270+    2623    1   ,/* SB3O   290  442 */ %THREE_EXPRESSIONS_TO_REDEF
      271+    2624    1   ,/* SB3OR  291  443 */ %THREE_EXPRESSIONS_TO_REDEF
      272+    2625    1   ,/* END_PROG    444 */ %NO_EXPRESSIONS
      273+    2626    1   ,/* SCOPE  293  445 */ %NO_EXPRESSIONS
      274+    2627    1   ,/*P_A_PRESET   446 */ %NO_EXPRESSIONS
      275+    2628    1   )
      276+    2629        %ENDIF ;
      277+    2630    1   ;
      278+    2631
      279+    2632        %EJECT;
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:56   
      449     2633
      450     2634
      451     2635    1   RETURN ; /* Allows reference in Z8GO & gets around Delta bug. */

   2635  3 000002   000000 702200 xent               TSX2  ! X66_ARET
      452     2636
      453     2637    1   END Z8GD$DOCUMENT ;

PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:57   
--  Include file information  --

   Z8G_P3VEC.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8G_O3COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8GD$DOCUMENT.
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:58   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom O3COM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2016)        1 O3COM

  ****  Section 002 LblCom P3VEC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 P3VEC(0:294)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(36864)       1 PAGE


   Procedure Z8GD$DOCUMENT requires 3 words for executable code.
   Procedure Z8GD$DOCUMENT requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=Z8GD$DOCUMENT File=Z8GD.:Z8A6TSI                              SAT 08/09/97 13:13 Page:59   

    No errors detected in file Z8GD.:Z8A6TSI    .
