C*T***********************************************************  
C*T*                                                         *  
C*T* Copyright (c) Bull HN Information Systems Inc., 1989    *  
C*T*                                                         *  
C*T***********************************************************  
      SUBROUTINE $DSTRING (LINE, IPOS, STRNG, DELIMS, KNDEX, JNDEX, ISTA
     *T)
      CHARACTER*(*) LINE, DELIMS, STRNG
      IPOS = IPOS + 1
      I = IVERIFY (LINE(IPOS:), ' ')
      IF (I .EQ. 0) THEN
         IPOS = LENSIG(LINE) + 1
         STRNG = ' '
         RETURN
      ENDIF 
      ISTART = IPOS + I - 1
      L = LENSIG(LINE) - ISTART + 2
      DO 1000 I = 1, LEN(DELIMS)
         J = INDEX (LINE(ISTART:), DELIMS(I:I))
         IF (J .GT. 0) THEN
            L = MIN (L, J)
         ENDIF 
1000  CONTINUE 
1010  CONTINUE 
      IF (L .GT. 1) THEN
         IF (L - 1 .GT. LEN(STRNG)) THEN
            ISTAT = KNDEX*1000 + JNDEX
         ENDIF 
         STRNG = LINE(ISTART:ISTART+L-2)
      ELSE 
         STRNG = ' '
      ENDIF 
      IPOS = ISTART + L - 1
      IF (IPOS .GT. LENSIG(LINE)) THEN
         IPOS = LENSIG(LINE) + 1
      ENDIF 
      END 
      SUBROUTINE PARSEOPT (LINE, MAXOPT, NOPTIONS, OPTIONS, ISTAT)
      CHARACTER LINE*(*), OPTIONS(2,MAXOPT)*(*)
      ISTAT = 0
      NOPTIONS = 0
      IPOS = IVERIFY (LINE, ' (') - 1
1000  CONTINUE 
      IF (NOPTIONS .GE. MAXOPT) THEN
         ISTAT = 1
         RETURN
      ENDIF 
      NOPTIONS = NOPTIONS + 1
      CALL $DSTRING (LINE, IPOS, OPTIONS(1,NOPTIONS), ',=()', 1,
     1NOPTIONS, ISTAT)
      IF (IPOS .GT. LENSIG(LINE)) THEN
         OPTIONS(2,NOPTIONS) = ' '
      ELSE IF (LINE(IPOS:IPOS) .EQ. ')' .OR. LINE(IPOS:IPOS) .EQ. ',')
     1THEN
         OPTIONS(2,NOPTIONS) = ' '
      ELSE IF (LINE(IPOS:IPOS) .EQ. '=' ) THEN
         I = IVERIFY ( LINE(IPOS+1:), ' ' )
         IPOS = IPOS + I - 1
         IF (I .EQ. 0 ) THEN
            OPTIONS(2,NOPTIONS) = ' '
            IPOS = LEN(LINE) + 1
         ELSE IF (LINE(IPOS+1:IPOS+1) .NE. '(' ) THEN
            CALL $DSTRING (LINE, IPOS, OPTIONS(2,NOPTIONS), ',)', 2,
     1            NOPTIONS,ISTAT)
         ELSE 
            IPOS = IPOS + 1
            CALL $DSTRING (LINE, IPOS, OPTIONS(2,NOPTIONS), ',)', 2,
     1            NOPTIONS,ISTAT)
1010        IF (LINE(IPOS:IPOS) .NE. ')') THEN
               IF (NOPTIONS .GE. MAXOPT) THEN
                  ISTAT = 1
                  RETURN
               ENDIF 
               NOPTIONS = NOPTIONS + 1
               OPTIONS(1,NOPTIONS) = ' '
               CALL $DSTRING (LINE, IPOS, OPTIONS(2,NOPTIONS), ',)', 2,
     1                  NOPTIONS,ISTAT)
               IF (IPOS .GT. LENSIG(LINE)) THEN
                  GOTO 1020 
               ENDIF 
               GOTO 1010 
            ENDIF 
1020        CONTINUE 
            IPOS = IPOS + 1
         ENDIF 
      ENDIF 
      IF (IPOS .GT. LENSIG(LINE)) THEN
         GOTO 1040 
      ENDIF 
1030  IF (.NOT.(LINE(IPOS:IPOS) .EQ. ')'))GOTO 1000 
1040  CONTINUE 
      IF (OPTIONS(1,NOPTIONS) .EQ. ' ' .AND. OPTIONS(2,NOPTIONS) .EQ. 
     1'') THEN
         NOPTIONS = NOPTIONS - 1
      ENDIF 
      END 
C**********************************************************************
C**********************************************************************
C
C  ROUTINE NAME: LENSIG - SIGNIFICANT LENGTH OF A CHARACTER STRING
C
C  PURPOSE:
C      TO RETURN THE INDEX OF THE LAST NON-BLANK CHARACTER IN A
C      CHARACTER STRING.
C
C  BASIC APPROACH:
C         BEGIN THE SEARCH FOR A NON-BLANK CHARACTER AT THE BACK END
C      OF THE CHARACTER STRING, AND CONTINUE MOVING TOWARD THE FRONT
C      OF THE STRING.
C         THE INDEX OF THE LAST NON-BLANK CHARACTER IS RETURNED.  IF
C      NO NON-BLANK CHARACTER IS FOUND, THE VALUE ZERO IS RETURNED.
C
C  ENVIRONMENT:
C      LANGUAGE: ANS FORTRAN
C
C  MAJOR PROGRAM VARIABLES:
C      LENGTH - THE DECLARED LENGTH OF THE CHARACTER STRING
C      LENSIG - THE INDEX TO THE LAST NON-BLANK CHARACTER IN THE STRING
C      STRING - CHARACTER STRING PASSED TO THE FUNCTION
C
C  INPUT:
C      STRING
C
C  OUTPUT:
C      LENSIG
C
C  ROUTINES CALLED:
C      LEN - FUNCTION RETURNING THE DECLARED LENGTH OF ITS ARGUMENT
C
C  AUTHOR: J.M.FLEMING
C  DATE:   16 APRIL 1979
C
C  HISTORY:
C      REFERENCES: CR0793-79XXX
C
C**********************************************************************
C**********************************************************************
C
      INTEGER FUNCTION LENSIG(STRING)
      CHARACTER STRING*(*)
C
      LENGTH = LEN(STRING)
      DO 1000 IX=LENGTH,1,-1
         IF (STRING(IX:IX) .NE. ' ') THEN
            LENSIG = IX
            RETURN
         ENDIF 
1000  CONTINUE 
      LENSIG=IX
      RETURN
      END 
      LOGICAL FUNCTION BATCH
      CALL GETID (MOP)
      IF (MOP .EQ. 1) THEN
         BATCH = .TRUE.
      ELSE 
         BATCH = .FALSE.
      END IF 
      RETURN
      END 
      SUBROUTINE GETCOM (STRING)
      CHARACTER STRING*(*)
 
      CALL GETCOMF (STRING, LEN(STRING))
      END 
      FUNCTION IVERIFY (STRING, COMPARE)
      CHARACTER*(*) STRING, COMPARE
      L1 = LEN (STRING)
      L2 = LEN (COMPARE)
      DO 1030 I = 1, L1
         J=1
1000     IF (.NOT.(J.LE.L2))GOTO 1020 
         IF (COMPARE(J:J) .EQ. STRING(I:I)) THEN
            GOTO 1020 
         ENDIF 
1010     J=J+1
         GOTO 1000 
1020     CONTINUE 
         IF (J .GT. L2) THEN
            IVERIFY = I
            RETURN
         ENDIF 
1030  CONTINUE 
1040  CONTINUE 
      IVERIFY = 0
      RETURN
      END 
