

CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=1  
        1         1             /* $Header: ca_put.c,v 1.4 87/03/10 10:43:26 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             #include <stdio:h>
        7         7             #include "types:h"
        8         8             #include "ca:h"
        9         9             #include "debug:h"
       10        10             #include "def:h"
       11        11             #include "map:h"
       12        12             #include "em_spec:h"
       13        13             #include "em_pseu:h"
       14        14             #include "em_mnem:h"
       15        15             #include "em_flag:h"
       16        16             #include "em_mes:h"
       17        17             #include "alloc:h"
       18        18
       19        19             #define outbyte(b) putc(b,outfile)
       20        20
       21        21             FILE *outfile;
       22        22
       23        23             STATIC proc_p thispro;
       24        24
       25        25             STATIC outinst(m) {
       26        26    1
       27        27    1         outbyte( (byte) m );
       28        28    1        }
       29        29
       30        30             STATIC coutshort(i) short i; {
       31        31    1
       32        32    1         outbyte( (byte) (i&0777L) );
       33        33    1         outbyte( (byte) (i>>9) );
       34        34    1        }
       35        35
       36        36             STATIC coutint(i) short i; {
CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=2  
       37        37    1
       38        38    1         if (i>= -sp_zcst0 && i< sp_ncst0-sp_zcst0)
       39        39    1            outbyte( (byte) (i+sp_zcst0+sp_fcst0) );
       40        40    1         else {
       41        41    2          outbyte( (byte) sp_cst4) ;
       42        42    2            coutshort(i);
       43        43    2          coutshort (i>>18) ;
       44        44    2         }
       45        45    1        }
       46        46
       47        47             STATIC coutoff(off) offset off; {
       48        48    1
       49        49    1         if ((short) off == off)
       50        50    1            coutint((short) off);
       51        51    1         else {
       52        52    2            outbyte( (byte) sp_cst4) ;
       53        53    2            coutshort( (short) (off&0777777L) );
       54        54    2            coutshort( (short) (off>>18) );
       55        55    2         }
       56        56    1        }
       57        57
       58        58
       59        59             STATIC outsym(s,t)
       60        60              char *s;
       61        61              int t;
       62        62             {
       63        63    1         register byte *p;
       64        64    1         register unsigned num;
       65        65    1
       66        66    1         if (s[0] == '.') {
       67        67    2            num = atoi(&s[1]);
       68        68    2            if (num < 256) {
       69        69    3               outbyte( (byte) sp_dlb1) ;
       70        70    3               outbyte( (byte) (num) );
       71        71    3            } else {
       72        72    3               outbyte( (byte) sp_dlb2) ;
       73        73    3               coutshort((short) num);
CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=3  
       74        74    3            }
       75        75    2         } else {
       76        76    2            p= s;
       77        77    2            while (*p && p < &s[IDL])
       78        78    2               p++;
       79        79    2            num = p - s;
       80        80    2            outbyte( (byte) t);
       81        81    2            coutint((short) num);
       82        82    2            p = s;
       83        83    2            while (num--)
       84        84    2               outbyte( (byte) *p++ );
       85        85    2         }
       86        86    1        }
       87        87
       88        88
       89        89             STATIC outdsym(dbl)
       90        90              dblock_p dbl;
       91        91             {
       92        92    1         outsym(dnames[dbl->d_id],sp_dnam);
       93        93    1        }
       94        94
       95        95
       96        96             STATIC outpsym(p)
       97        97              proc_p p;
       98        98             {
       99        99    1         outsym(pnames[p->p_id],sp_pnam);
      100       100    1        }
      101       101
      102       102
      103       103             STATIC outddef(id) short id; {
      104       104    1
      105       105    1         dblock_p dbl;
      106       106    1
      107       107    1         dbl = dmap[id];
      108       108    1         dbl->d_flags2 |= DF_SYMOUT;
      109       109    1         if (dbl->d_flags1 & DF_EXTERNAL) {
      110       110    2            outinst(ps_exa);
CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=4  
      111       111    2            outdsym(dbl);
      112       112    2         }
      113       113    1        }
      114       114
      115       115             STATIC outpdef(p) proc_p p; {
      116       116    1         p->p_flags2 |= PF_SYMOUT;
      117       117    1         if (p->p_flags1 & PF_EXTERNAL) {
      118       118    2            outinst(ps_exp);
      119       119    2            outpsym(p);
      120       120    2         }
      121       121    1        }
      122       122
      123       123
      124       124             STATIC outdocc(obj) obj_p obj; {
      125       125    1         dblock_p dbl;
      126       126    1
      127       127    1         dbl = obj->o_dblock;
      128       128    1         if ((dbl->d_flags2 & DF_SYMOUT) == 0) {
      129       129    2            dbl->d_flags2 |= DF_SYMOUT;
      130       130    2            if ((dbl->d_flags1 & DF_EXTERNAL) == 0) {
      131       131    3               outinst(ps_ina);
      132       132    3               outdsym(dbl);
      133       133    3            }
      134       134    2         }
      135       135    1        }
      136       136
      137       137
      138       138             STATIC outpocc(p) proc_p p; {
      139       139    1         if ((p->p_flags2 & PF_SYMOUT) == 0) {
      140       140    2            p->p_flags2 |= PF_SYMOUT;
      141       141    2            if ((p->p_flags1 & PF_EXTERNAL) == 0) {
      142       142    3               outinst(ps_inp);
      143       143    3               outpsym(p);
      144       144    3            }
      145       145    2         }
      146       146    1        }
      147       147
CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=5  
      148       148
      149       149             STATIC coutobject(obj)
      150       150              obj_p obj;
      151       151             {
      152       152    1         /* In general, an object is defined by a global data
      153       153    1          * label and an offset. There are two special cases:
      154       154    1          * the label is omitted if the object is part of the current
      155       155    1          * hol block; the offset is omitted if it is 0 and the label
      156       156    1          * was not omitted.
      157       157    1          */
      158       158    1         if (dnames[obj->o_dblock->d_id][0] == '\0') {
      159       159    2            coutoff(obj->o_off);
      160       160    2         } else {
      161       161    2            if (obj->o_off == 0) {
      162       162    3               outdsym(obj->o_dblock);
      163       163    3            } else {
      164       164    3               outbyte((byte) sp_doff);
      165       165    3               outdsym(obj->o_dblock);
      166       166    3               coutoff(obj->o_off);
      167       167    3            }
      168       168    2         }
      169       169    1        }
      170       170
      171       171
      172       172             STATIC cputstr(abp) register argb_p abp; {
      173       173    1         register argb_p tbp;
      174       174    1         register length;
      175       175    1
      176       176    1         length = 0;
      177       177    1         tbp = abp;
      178       178    1         while (tbp!= (argb_p) 0) {
      179       179    2            length += tbp->ab_index;
      180       180    2            tbp = tbp->ab_next;
      181       181    2         }
      182       182    1         coutint(length);
      183       183    1         while (abp != (argb_p) 0) {
      184       184    2            for (length=0;length<abp->ab_index;length++)
CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=6  
      185       185    2               outbyte( (byte) abp->ab_contents[length] );
      186       186    2            abp = abp->ab_next;
      187       187    2         }
      188       188    1        }
      189       189
      190       190
      191       191             STATIC outnum(n)
      192       192              int n;
      193       193             {
      194       194    1         if (n < 256) {
      195       195    2            outbyte((byte) sp_ilb1);
      196       196    2            outbyte((byte) n);
      197       197    2         } else {
      198       198    2            outbyte((byte) sp_ilb2);
      199       199    2            coutshort((short) n);
      200       200    2         }
      201       201    1        }
      202       202
      203       203
      204       204             STATIC numlab(n)
      205       205              int n;
      206       206             {
      207       207    1         if (n < sp_nilb0) {
      208       208    2            outbyte((byte) (n + sp_filb0));
      209       209    2         } else {
      210       210    2            outnum(n);
      211       211    2         }
      212       212    1        }
      213       213
      214       214
      215       215             STATIC cputargs(lnp)
      216       216              line_p lnp;
      217       217             {
      218       218    1         register arg_p ap;
      219       219    1         int cnt = 0;
      220       220    1         ap = ARG(lnp);
      221       221    1         while (ap != (arg_p) 0) {
CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=7  
      222       222    2            switch(ap->a_type) {
      223       223    3               case ARGOFF:
      224       224    3                  coutoff(ap->a_a.a_offset);
      225       225    3                  break;
      226       226    3               case ARGOBJECT:
      227       227    3                  coutobject(ap->a_a.a_obj);
      228       228    3                  break;
      229       229    3               case ARGPROC:
      230       230    3                  outpsym(ap->a_a.a_proc);
      231       231    3                  break;
      232       232    3               case ARGINSTRLAB:
      233       233    3                  outnum(ap->a_a.a_instrlab);
      234       234    3                  break;
      235       235    3               case ARGSTRING:
      236       236    3                  outbyte((byte) sp_scon);
      237       237    3                  cputstr(&ap->a_a.a_string);
      238       238    3                  break;
      239       239    3               case ARGICN:
      240       240    3                  outbyte((byte) sp_icon);
      241       241    3                  goto casecon;
      242       242    3               case ARGUCN:
      243       243    3                  outbyte((byte) sp_ucon);
      244       244    3                  goto casecon;
      245       245    3               case ARGFCN:
      246       246    3                  outbyte((byte) sp_fcon);
      247       247    3               casecon:
      248       248    3                  coutint(ap->a_a.a_con.ac_length);
      249       249    3                  cputstr(&ap->a_a.a_con.ac_con);
      250       250    3                  break;
      251       251    3               default:
      252       252    3                  assert(FALSE);
      253       253    3            }
      254       254    2            ap = ap->a_next;
      255       255    2            /* Avoid generating extremely long CON or ROM statements */
      256       256    2            if (cnt++ > 10 && ap != (arg_p) 0 &&
      257       257    2                (INSTR(lnp) == ps_con || INSTR(lnp) == ps_rom)) {
      258       258    3               cnt = 0;
CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=8  
      259       259    3               outbyte((byte) sp_cend);
      260       260    3               outinst(INSTR(lnp));
      261       261    3            }
      262       262    2         }
      263       263    1        }
      264       264
      265       265
      266       266
      267       267             STATIC outoperand(lnp)
      268       268              line_p lnp;
      269       269             {
      270       270    1         /* Output the operand of instruction lnp */
      271       271    1
      272       272    1         switch(TYPE(lnp)) {
      273       273    2            case OPNO:
      274       274    2               if ((em_flag[INSTR(lnp)-sp_fmnem]&EM_PAR) != PAR_NO && INSTR(lnp) != ps
                               _end) {
      275       275    3                  outbyte((byte) sp_cend);
      276       276    3               }
      277       277    2               break;
      278       278    2            case OPSHORT:
      279       279    2               if (INSTR(lnp) == ps_sym) {
      280       280    3                  outsym(dnames[SHORT(lnp)],sp_dnam);
      281       281    3               } else {
      282       282    3                  coutint(SHORT(lnp));
      283       283    3               }
      284       284    2               break;
      285       285    2            case OPOFFSET:
      286       286    2               coutoff(OFFSET(lnp));
      287       287    2               break;
      288       288    2            case OPINSTRLAB:
      289       289    2               if (INSTR(lnp) == op_lab) {
      290       290    3                  numlab(INSTRLAB(lnp));
      291       291    3               } else {
      292       292    3                  if (INSTR(lnp) < sp_fpseu) {
      293       293    4                     coutint(INSTRLAB(lnp));
      294       294    4                  } else {
CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=9  
      295       295    4                     numlab(INSTRLAB(lnp));
      296       296    4                  }
      297       297    3               }
      298       298    2               break;
      299       299    2            case OPOBJECT:
      300       300    2               coutobject(OBJ(lnp));
      301       301    2               break;
      302       302    2            case OPPROC:
      303       303    2               outpsym(PROC(lnp));
      304       304    2               break;
      305       305    2            case OPLIST:
      306       306    2               cputargs(lnp);
      307       307    2               switch(INSTR(lnp)) {
      308       308    3                  case ps_con:
      309       309    3                  case ps_rom:
      310       310    3                  case ps_mes:
      311       311    3                     outbyte((byte) sp_cend);
      312       312    3                     /* list terminator */
      313       313    3                     break;
      314       314    3               }
      315       315    2               break;
      316       316    2            default:
      317       317    2               assert(FALSE);
      318       318    2         }
      319       319    1        }
      320       320
      321       321
      322       322             STATIC outvisibility(lnp)
      323       323              line_p lnp;
      324       324             {
      325       325    1         /* In EM names of datalabels and procedures can be made
      326       326    1          * externally visible, so they can be used in other files.
      327       327    1          * There are special EM pseudo-instructions to state
      328       328    1          * explicitly that a certain identifier is externally
      329       329    1          * visible (ps_exa,ps_exp) or invisible (ps_ina,ps_inp).
      330       330    1          * If there is no such pseudo for a certain identifier,
      331       331    1          * the identifier is external only if its first use
CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=10 
      332       332    1          * in the current file is an applied occurrence.
      333       333    1          * Unfortunately the global optimizer may change the
      334       334    1          * order of defining and applied occurrences.
      335       335    1          * In the first optimizer pass (ic) we record for each identifier
      336       336    1          * whether it is external or not. If necessary we generate
      337       337    1          * pseudo instructions here.
      338       338    1          */
      339       339    1
      340       340    1          arg_p ap;
      341       341    1          short instr;
      342       342    1
      343       343    1          instr = INSTR(lnp);
      344       344    1          switch(TYPE(lnp)) {
      345       345    2            case OPOBJECT:
      346       346    2               outdocc(OBJ(lnp));
      347       347    2               /* applied occurrence of a data label */
      348       348    2               break;
      349       349    2            case OPSHORT:
      350       350    2               if (instr == ps_sym) {
      351       351    3                  outddef(SHORT(lnp));
      352       352    3                  /* defining occ. data label */
      353       353    3               }
      354       354    2               break;
      355       355    2            case OPPROC:
      356       356    2               if (instr == ps_pro) {
      357       357    3                  outpdef(PROC(lnp));
      358       358    3                  /* defining occ. procedure */
      359       359    3               } else {
      360       360    3                  outpocc(PROC(lnp));
      361       361    3               }
      362       362    2               break;
      363       363    2            case OPLIST:
      364       364    2               for (ap =  ARG(lnp); ap != (arg_p) 0; ap = ap->a_next) {
      365       365    3                  switch(ap->a_type) {
      366       366    4                     case ARGOBJECT:
      367       367    4                        outdocc(ap->a_a.a_obj);
      368       368    4                        break;
CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=11 
      369       369    4                     case ARGPROC:
      370       370    4                        outpocc(ap->a_a.a_proc);
      371       371    4                        break;
      372       372    4                  }
      373       373    3               }
      374       374    2               break;
      375       375    2         }
      376       376    1        }
      377       377
      378       378
      379       379             cputlines(l,lf)
      380       380              line_p l;
      381       381              FILE *lf;
      382       382             {
      383       383    1         /* Output the lines in Campact assembly language
      384       384    1          * format.
      385       385    1          */
      386       386    1
      387       387    1         line_p next,lnp;
      388       388    1
      389       389    1         outfile = lf;
      390       390    1         for (lnp = l; lnp != (line_p) 0; lnp = next) {
      391       391    2            next = lnp->l_next;
      392       392    2            outvisibility(lnp); /* take care of visibiltity rules */
      393       393    2            if (INSTR(lnp) != ps_sym && INSTR(lnp) != op_lab) {
      394       394    3               outinst(INSTR(lnp));
      395       395    3            }
      396       396    2            outoperand(lnp);
      397       397    2            switch(INSTR(lnp)) {
      398       398    3               case ps_pro:
      399       399    3                  thispro = PROC(lnp);
      400       400    3                  /* fall through ... */
      401       401    3               case ps_end:
      402       402    3                  coutoff(thispro->p_localbytes);
      403       403    3            }
      404       404    2        /* oldcore(lnp, sizeof(struct line));   - DELETE THIS FOR TIME BEING.*/
      405       405    2         }
CC.C03    File=zbe$ca_put:c.:ZBC3TSI                                                Fri Aug 22 1997  Page=12 
      406       406    1         if (lmap != (line_p *) 0) {
      407       407    2            oldmap(lmap,llength);
      408       408    2            lmap = (line_p *) 0;
      409       409    2         }
      410       410    1        }
      411       411
      412       412             cputmagic(lf)
      413       413              FILE *lf;
      414       414             {
      415       415    1         /* write the magic number */
      416       416    1
      417       417    1         outfile = lf;
      418       418    1         coutshort(sp_magic);
      419       419    1        }
      420       420
---  Include file information  ---

   stdio:h.:LIBRARY. is referenced
   zbe$types:h.:ZBC3TOU. is referenced
   zbe$ca:h.:ZBC3TOU. is referenced
   zbe$debug:h.:ZBC3TOU. is referenced
   zbe$def:h.:ZBC3TOU. is referenced
   zbe$map:h.:ZBC3TOU. is referenced
   em_spec:h.:ZBC3TOU. is referenced
   em_pseu:h.:ZBC3TOU. is referenced
   em_mnem:h.:ZBC3TOU. is referenced
   em_flag:h.:ZBC3TOU. is referenced
   em_mes:h.:ZBC3TOU. is referenced
   zbe$alloc:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbe$ca_put:c.:ZBC3TSI
