
PL6.E3A0      #001=XBI$CONVERT_C_TO_CP6_ERRCODE File=xbi_error:6.:XBC3TSI        WED 08/20/97 14:22 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        XBI$CONVERT_C_TO_CP6_ERRCODE: PROC (c_error, cp6_error);
        7        7           /*D*  NAME: XBI$CONVERT_C_TO_CP6_ERRCODE
        8        8                 CALL: CALL XBI$CONVERT_C_TO_CP6_ERRCODE (c_error, cp6_error);
        9        9                 INPUT:   c_error  C error code format
       10       10                 OUTPUT:  cp6_error %VLP_ERRCODE
       11       11                 DESCRIPTION: Converts a C format error code into a CP-6 %VLP_ERRCODE
       12       12                    form.
       13       13           */
       14       14
       15       15           %INCLUDE CP_6;
       16     5575           %INCLUDE xb_errno_i6;
       17     5614
       18     5615           %C_ERRCODE (FPTN=c_error);
       19     5623           %VLP_ERRCODE (FPTN=cp6_error, STCLASS=" ");
       20     5668
       21     5669    1      cp6_error.fcg = c_error.fcg;
       22     5670    1      cp6_error.mid = c_error.mid;
       23     5671    1      cp6_error.mon = c_error.mon;
       24     5672    1      cp6_error.err# = c_error.err#;
       25     5673    1      cp6_error.sev = c_error.sev;
       26     5674    1   END XBI$CONVERT_C_TO_CP6_ERRCODE;
       27     5675        %EOD;

PL6.E3A0      #001=XBI$CONVERT_C_TO_CP6_ERRCODE File=xbi_error:6.:XBC3TSI        WED 08/20/97 14:22 Page:2    
--  Include file information  --

   xb_errno_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI$CONVERT_C_TO_CP6_ERRCODE.

   Procedure XBI$CONVERT_C_TO_CP6_ERRCODE requires 21 words for executable code.
   Procedure XBI$CONVERT_C_TO_CP6_ERRCODE requires 6 words of local(AUTO) storage.

PL6.E3A0      #001=XBI$CONVERT_C_TO_CP6_ERRCODE File=xbi_error:6.:XBC3TSI        WED 08/20/97 14:22 Page:3    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XBI$CONVERT_C_TO_CP6_ERRCODE File=xbi_error:6.:XBC3TSI        WED 08/20/97 14:22 Page:4    
          MINI XREF LISTING

CP6_ERROR
      5635**DCL         6--PROC
CP6_ERROR.ERR#
      5665**DCL      5672<<ASSIGN
CP6_ERROR.FCG
      5651**DCL      5669<<ASSIGN
CP6_ERROR.MID
      5664**DCL      5670<<ASSIGN
CP6_ERROR.MON
      5664**DCL      5671<<ASSIGN
CP6_ERROR.SEV
      5665**DCL      5673<<ASSIGN
C_ERROR
      5616**DCL         6--PROC
C_ERROR.ERR#
      5620**DCL      5672>>ASSIGN
C_ERROR.FCG
      5617**DCL      5669>>ASSIGN
C_ERROR.MID
      5618**DCL      5670>>ASSIGN
C_ERROR.MON
      5619**DCL      5671>>ASSIGN
C_ERROR.SEV
      5621**DCL      5673>>ASSIGN
ERRNO
      5584**DCL      5602--REDEF
ERRNO_P
      5583**DCL      5584--IMP-PTR  5602--IMP-PTR

PL6.E3A0      #002=XBI$SET_MATH_ERRNO File=xbi_error:6.:XBC3TSI                  WED 08/20/97 14:22 Page:5    
       28        1        /*T***********************************************************/
       29        2        /*T*                                                         */
       30        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
       31        4        /*T*                                                         */
       32        5        /*T***********************************************************/
       33        6
       34        7        XBI$SET_MATH_ERRNO: PROC (MATH_ERROR_CODE);
       35        8
       36        9        /*I* NAME: XBI$SET_MATH_ERRNO
       37       10             INPUT: MATH_ERROR_CODE UBIN(18) UNAL; -18 bit math error code
       38       11             PURPOSE: To convert MATH_ERROR_CODE which is an 18 bit math error
       39       12                      code into either an EDOM or ERANGE error code and set
       40       13                      errno accordingly.
       41       14        */
       42       15
       43       16        %INCLUDE CP_6;
       44     5576        %INCLUDE xb_errors_i6;
       45     5647
       46     5648    1   DCL XPF_5EXPAND_18BIT_CODES    ENTRY(2);
       47     5649    1   DCL XBI_SET_ERRNO             ENTRY (1);
       48     5650    1   DCL XPT_8T0_D                 ENTRY CONV (5);
       49     5651    1   DCL XPK_LIB_DATA              ENTRY CONV (5);
       50     5652    1   DCL XB_IO_ERROR               ENTRY;
       51     5653
       52     5654    1   DCL MATH_ERROR_CODE           UBIN;
       53     5655        %VLP_ERRCODE (FPTN=ERROR_CODE);
       54     5700    1   DCL ERR#                      UBIN;
       55     5701
       56     5702    1      CALL XPF_5EXPAND_18BIT_CODES (MATH_ERROR_CODE, ERROR_CODE);
       57     5703    1      ERR# = ERROR_CODE.ERR#;
       58     5704    2      DO CASE (ERR#);
       59     5705    2         CASE (1,3,4,7,8,9,10,11,13,14,36,37);
       60     5706    2            CALL XBI_SET_ERRNO (ERR$DOMAIN_ERROR);
       61     5707    2         CASE (2,5,6,12,38,39);
       62     5708    2            CALL XBI_SET_ERRNO (ERR$RANGE_ERROR);
       63     5709    2         CASE (ELSE);
       64     5710                 /* oops, we've got a bug in the runtime library! */
PL6.E3A0      #002=XBI$SET_MATH_ERRNO File=xbi_error:6.:XBC3TSI                  WED 08/20/97 14:22 Page:6    
       65     5711    2            CALL XBI_SET_ERRNO (ERR$ASSERTION_FAILURE);
       66     5712    2            CALL XB_IO_ERROR;
       67     5713    2      END;
       68     5714    1   END XBI$SET_MATH_ERRNO;
       69     5715        %EOD;

PL6.E3A0      #002=XBI$SET_MATH_ERRNO File=xbi_error:6.:XBC3TSI                  WED 08/20/97 14:22 Page:7    
--  Include file information  --

   xb_errors_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI$SET_MATH_ERRNO.

   Procedure XBI$SET_MATH_ERRNO requires 74 words for executable code.
   Procedure XBI$SET_MATH_ERRNO requires 8 words of local(AUTO) storage.

PL6.E3A0      #002=XBI$SET_MATH_ERRNO File=xbi_error:6.:XBC3TSI                  WED 08/20/97 14:22 Page:8    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XBI$SET_MATH_ERRNO File=xbi_error:6.:XBC3TSI                  WED 08/20/97 14:22 Page:9    
          MINI XREF LISTING

ERR#
      5700**DCL      5703<<ASSIGN   5704>>DOCASE
ERROR_CODE
      5667**DCL      5702<>CALL
ERROR_CODE.ERR#
      5697**DCL      5703>>ASSIGN
MATH_ERROR_CODE
      5654**DCL         7--PROC     5702<>CALL
XB$ERR$ASSERTION_FAILURE
      5621**DCL      5711<>CALL
XB$ERR$DOMAIN_ERROR
      5628**DCL      5706<>CALL
XB$ERR$RANGE_ERROR
      5629**DCL      5708<>CALL
XBI_SET_ERRNO
      5649**DCL-ENT  5706--CALL     5708--CALL     5711--CALL
XB_IO_ERROR
      5652**DCL-ENT  5712--CALL
XPF_5EXPAND_18BIT_CODES
      5648**DCL-ENT  5702--CALL

PL6.E3A0      #003=XBI_SET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:10   
       70        1        /*T***********************************************************/
       71        2        /*T*                                                         */
       72        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
       73        4        /*T*                                                         */
       74        5        /*T***********************************************************/
       75        6
       76        7        XBI_SET_ERRNO: PROC (supplied_error);
       77        8           /*I*  NAME: XBI_SET_ERRNO
       78        9                 CALL: CALL XBI_SET_ERRNO (supplied_error);
       79       10                 INPUT: supplied_error   VLP_ERRCODE (optional).
       80       11                 DESCRIPTION: Stuffs an error code into the global errno
       81       12              variable that is visible to C functions.  The error code comes
       82       13              from supplied_error, or if called with no arguments, from the
       83       14              altreturn frame of the TCB.
       84       15           */
       85       16           %INCLUDE CP_6;
       86     5576           %INCLUDE xb_errno_i6;
       87     5615           %INCLUDE B$ROSEG;
       88     5678
       89     5679           %VLP_ERRCODE (FPTN=supplied_error, STCLASS=" ");
       90     5724
       91     5725    1      DCL B$TCB$                                   PTR SYMREF READONLY;
       92     5726    1      DCL B$ROS$                                   PTR SYMREF READONLY;
       93     5727
       94     5728    1      DCL XBI$MIN_RELEASE_DCBNUM     SBIN SYMREF;
       95     5729           %F$DCB(STCLASS="BASED(DCB$)");
       96     5786    1      dcl  dcb$  ptr;
       97     5787
       98     5788           %FPT_RELDCB(FPTN=FPT_RELDCB_CONST,STCLASS=CONSTANT);
       99     5802           %FPT_RELDCB(FPTN=FPT_RELDCB,STCLASS="");
      100     5816
      101     5817           %B$TCB;
      102     5820           %B$ALT;
      103     5828           %VLP_ERRCODE (FPTN=error, STCLASS=" ");
      104     5873
      105     5874    1      IF ADDR(supplied_error) ~= ADDR(NIL) THEN
      106     5875    1         error = supplied_error;
PL6.E3A0      #003=XBI_SET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:11   
      107     5876    1      ELSE
      108     5877    1         error = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      109     5878
      110     5879    1      CP6_ERRNO.fcg = error.fcg;
      111     5880    1      CP6_ERRNO.mid = error.mid;
      112     5881    1      CP6_ERRNO.mon = error.mon;
      113     5882    1      CP6_ERRNO.err# = error.err#;
      114     5883    1      CP6_ERRNO.sev = error.sev;
      115     5884
      116     5885           /* there is no dcb associated with this error */
      117     5886
      118     5887    1      if (XBI$CP6_DCBNUMBER >= XBI$MIN_RELEASE_DCBNUM and
      119     5888    2          XBI$CP6_DCBNUMBER <= B$ROS$->B$ROSEG.NUMDCBS ) then do;
      120     5889    2         dcb$ = dcbaddr(XBI$CP6_DCBNUMBER);
      121     5890    2         if dcb$ = addr(nil) then exit;
      122     5891    2         if (dcb$->F$DCB.FCD# = '1'b) then exit;  /* Its open! */
      123     5892    2         FPT_RELDCB = FPT_RELDCB_CONST;
      124     5893    2         FPT_RELDCB.V_ = vector(FPT_RELDCB.V);
      125     5894    2         FPT_RELDCB.V.DCB# = XBI$CP6_DCBNUMBER;
      126     5895    3         call M$RELDCB(FPT_RELDCB) whenaltreturn do; ; end;
      127     5896    2      end;
      128     5897
      129     5898    1      XBI$CP6_DCBNUMBER = 0;
      130     5899    1   END XBI_SET_ERRNO;
      131     5900        %EOD;

PL6.E3A0      #003=XBI_SET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:12   
--  Include file information  --

   B$ROSEG.:LIB_E04  cannot be made into a system file and is referenced.
   xb_errno_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI_SET_ERRNO.

   Procedure XBI_SET_ERRNO requires 66 words for executable code.
   Procedure XBI_SET_ERRNO requires 14 words of local(AUTO) storage.

PL6.E3A0      #003=XBI_SET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:13   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XBI_SET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:14   
          MINI XREF LISTING

B$ALT.CODE
      5822**DCL      5822--REDEF    5823--REDEF    5823--REDEF
B$ALT.ERR
      5823**DCL      5877>>ASSIGN
B$ALT.ERR.ERR#
      5824**DCL      5824--REDEF
B$ALT.EVID
      5823**DCL      5823--REDEF    5823--REDEF
B$ROS$
      5726**DCL      5887>>IF
B$ROSEG.NUMDCBS
      5628**DCL      5887>>IF
B$TCB.ALT$
      5818**DCL      5877>>ASSIGN
B$TCB$
      5725**DCL      5877>>ASSIGN
CP6_ERRNO.ERR#
      5607**DCL      5882<<ASSIGN
CP6_ERRNO.FCG
      5604**DCL      5879<<ASSIGN
CP6_ERRNO.MID
      5605**DCL      5880<<ASSIGN
CP6_ERRNO.MON
      5606**DCL      5881<<ASSIGN
CP6_ERRNO.SEV
      5608**DCL      5883<<ASSIGN
DCB$
      5786**DCL      5730--IMP-PTR  5889<<ASSIGN   5890>>IF       5891>>IF
ERRNO
      5585**DCL      5603--REDEF
ERRNO_P
      5584**DCL      5585--IMP-PTR  5603--IMP-PTR  5879>>ASSIGN   5880>>ASSIGN   5881>>ASSIGN   5882>>ASSIGN
PL6.E3A0      #003=XBI_SET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:15   
      5883>>ASSIGN
ERROR
      5840**DCL      5875<<ASSIGN   5877<<ASSIGN
ERROR.ERR#
      5870**DCL      5882>>ASSIGN
ERROR.FCG
      5856**DCL      5879>>ASSIGN
ERROR.MID
      5869**DCL      5880>>ASSIGN
ERROR.MON
      5869**DCL      5881>>ASSIGN
ERROR.SEV
      5870**DCL      5883>>ASSIGN
F$DCB.ACTPOS
      5762**DCL      5762--REDEF
F$DCB.ARS#
      5736**DCL      5736--REDEF
F$DCB.ATTR
      5755**DCL      5756--REDEF
F$DCB.BORROW
      5770**DCL      5770--REDEF    5770--REDEF    5770--REDEF
F$DCB.DCBNAME.L
      5784**DCL      5784--IMP-SIZ
F$DCB.EOMCHAR#
      5740**DCL      5740--REDEF
F$DCB.FCD#
      5749**DCL      5891>>IF
F$DCB.FLDID
      5765**DCL      5765--REDEF
F$DCB.FORM$
      5759**DCL      5759--REDEF
F$DCB.FSECT
      5775**DCL      5775--REDEF
F$DCB.FSN#
      5752**DCL      5752--REDEF    5752--REDEF    5753--REDEF
F$DCB.HEADER$
PL6.E3A0      #003=XBI_SET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:16   
      5758**DCL      5758--REDEF
F$DCB.IXTNSIZE#
      5756**DCL      5756--REDEF
F$DCB.LASTSTA$
      5745**DCL      5745--REDEF
F$DCB.LVL
      5771**DCL      5771--REDEF
F$DCB.NAME#.C
      5746**DCL      5746--REDEF
F$DCB.NOEOF
      5768**DCL      5768--REDEF
F$DCB.NRECS#
      5757**DCL      5757--REDEF
F$DCB.NRECX
      5776**DCL      5776--REDEF
F$DCB.OHDR
      5768**DCL      5768--REDEF
F$DCB.ORG#
      5751**DCL      5751--REDEF
F$DCB.PRECNO
      5774**DCL      5774--REDEF
F$DCB.RCSZ
      5780**DCL      5780--REDEF
F$DCB.RES#
      5747**DCL      5747--REDEF
F$DCB.SETX
      5759**DCL      5759--REDEF
F$DCB.TAB$
      5759**DCL      5759--REDEF
F$DCB.TDA
      5773**DCL      5774--REDEF
F$DCB.WSN#
      5747**DCL      5747--REDEF
FPT_RELDCB
      5813**DCL      5892<<ASSIGN   5895<>CALL
FPT_RELDCB.V
PL6.E3A0      #003=XBI_SET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:17   
      5813**DCL      5893--ASSIGN
FPT_RELDCB.V.DCB#
      5813**DCL      5894<<ASSIGN
FPT_RELDCB.V_
      5813**DCL      5893<<ASSIGN
FPT_RELDCB_CONST
      5799**DCL      5892>>ASSIGN
FPT_RELDCB_CONST.V
      5799**DCL      5799--DCLINIT
M$RELDCB
      5510**DCL-ENT  5895--CALL
SUPPLIED_ERROR
      5691**DCL         7--PROC     5874--IF       5875>>ASSIGN
XBI$CP6_DCBNUMBER
      5614**DCL      5887>>IF       5887>>IF       5889--ASSIGN   5894>>ASSIGN   5898<<ASSIGN
XBI$MIN_RELEASE_DCBNUM
      5728**DCL      5887>>IF

PL6.E3A0      #004=XBI_SET_STREAM_ERRNO File=xbi_error:6.:XBC3TSI                WED 08/20/97 14:23 Page:18   
      132        1        /*T***********************************************************/
      133        2        /*T*                                                         */
      134        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      135        4        /*T*                                                         */
      136        5        /*T***********************************************************/
      137        6
      138        7        XBI_SET_STREAM_ERRNO: PROC (F, supplied_error);
      139        8           /*I*  NAME: XBI_SET_STREAM_ERRNO
      140        9                 CALL: CALL XBI_SET_STREAM_ERRNO (F, supplied_error);
      141       10                 INPUT: F                Stream header
      142       11                        supplied_error   VLP_ERRCODE (optional).
      143       12                 DESCRIPTION: Stuffs an error code into the global errno
      144       13              variable that is visible to C functions.  The error code comes
      145       14              from supplied_error, or if called with no arguments, from the
      146       15              altreturn frame of the TCB.  The dcb number of the stream the
      147       16              error occured on is extracted from F.
      148       17           */
      149       18           %INCLUDE CP_6;
      150     5578           %INCLUDE xb_stdio_i6;
      151     5821           %INCLUDE xb_errno_i6;
      152     5860           %INCLUDE B$ROSEG;
      153     5923
      154     5924           %File_Header (Name=F, Stclass=" ");
      155     6036           %VLP_ERRCODE (FPTN=supplied_error, STCLASS=" ");
      156     6081
      157     6082    1      DCL B$TCB$                                   PTR SYMREF READONLY;
      158     6083    1      DCL B$ROS$                                 PTR SYMREF READONLY;
      159     6084
      160     6085    1      DCL XBI$MIN_RELEASE_DCBNUM     SBIN SYMREF;
      161     6086           %F$DCB(STCLASS="BASED(DCB$)");
      162     6143    1      dcl  dcb$  ptr;
      163     6144
      164     6145           %FPT_RELDCB(FPTN=FPT_RELDCB_CONST,STCLASS=CONSTANT);
      165     6159           %FPT_RELDCB(FPTN=FPT_RELDCB,STCLASS="");
      166     6173
      167     6174           %B$TCB;
      168     6177           %B$ALT;
PL6.E3A0      #004=XBI_SET_STREAM_ERRNO File=xbi_error:6.:XBC3TSI                WED 08/20/97 14:23 Page:19   
      169     6185           %VLP_ERRCODE (FPTN=error, STCLASS=" ");
      170     6230
      171     6231    1      IF ADDR(supplied_error) ~= ADDR(NIL) THEN
      172     6232    1         error = supplied_error;
      173     6233    1      ELSE
      174     6234    1         error = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      175     6235
      176     6236    1      CP6_ERRNO.fcg = error.fcg;
      177     6237    1      CP6_ERRNO.mid = error.mid;
      178     6238    1      CP6_ERRNO.mon = error.mon;
      179     6239    1      CP6_ERRNO.err# = error.err#;
      180     6240    1      CP6_ERRNO.sev = error.sev;
      181     6241
      182     6242    1      if (XBI$CP6_DCBNUMBER >= XBI$MIN_RELEASE_DCBNUM and
      183     6243    1         XBI$CP6_DCBNUMBER ~= F.FPT_READ.V.DCB# AND
      184     6244    2          XBI$CP6_DCBNUMBER <= B$ROS$->B$ROSEG.NUMDCBS ) then do;
      185     6245    2         dcb$ = dcbaddr(XBI$CP6_DCBNUMBER);
      186     6246    2         if dcb$ = addr(nil) then exit;
      187     6247    2         if (dcb$->F$DCB.FCD# = '1'b) then exit;  /* Its open! */
      188     6248    2         FPT_RELDCB = FPT_RELDCB_CONST;
      189     6249    2         FPT_RELDCB.V_ = vector(FPT_RELDCB.V);
      190     6250    2         FPT_RELDCB.V.DCB# = XBI$CP6_DCBNUMBER;
      191     6251    3         call M$RELDCB(FPT_RELDCB) whenaltreturn do; ; end;
      192     6252    2      end;
      193     6253
      194     6254    1      XBI$CP6_DCBNUMBER = F.FPT_READ.V.DCB#;
      195     6255
      196     6256    1      F.is_error = '1'B;
      197     6257    1   END XBI_SET_STREAM_ERRNO;
      198     6258        %EOD;

PL6.E3A0      #004=XBI_SET_STREAM_ERRNO File=xbi_error:6.:XBC3TSI                WED 08/20/97 14:23 Page:20   
--  Include file information  --

   B$ROSEG.:LIB_E04  cannot be made into a system file and is referenced.
   xb_errno_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI_SET_STREAM_ERRNO.

   Procedure XBI_SET_STREAM_ERRNO requires 76 words for executable code.
   Procedure XBI_SET_STREAM_ERRNO requires 14 words of local(AUTO) storage.

PL6.E3A0      #004=XBI_SET_STREAM_ERRNO File=xbi_error:6.:XBC3TSI                WED 08/20/97 14:23 Page:21   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XBI_SET_STREAM_ERRNO File=xbi_error:6.:XBC3TSI                WED 08/20/97 14:23 Page:22   
          MINI XREF LISTING

B$ALT.CODE
      6179**DCL      6179--REDEF    6180--REDEF    6180--REDEF
B$ALT.ERR
      6180**DCL      6234>>ASSIGN
B$ALT.ERR.ERR#
      6181**DCL      6181--REDEF
B$ALT.EVID
      6180**DCL      6180--REDEF    6180--REDEF
B$ROS$
      6083**DCL      6242>>IF
B$ROSEG.NUMDCBS
      5873**DCL      6242>>IF
B$TCB.ALT$
      6175**DCL      6234>>ASSIGN
B$TCB$
      6082**DCL      6234>>ASSIGN
CP6_ERRNO.ERR#
      5852**DCL      6239<<ASSIGN
CP6_ERRNO.FCG
      5849**DCL      6236<<ASSIGN
CP6_ERRNO.MID
      5850**DCL      6237<<ASSIGN
CP6_ERRNO.MON
      5851**DCL      6238<<ASSIGN
CP6_ERRNO.SEV
      5853**DCL      6240<<ASSIGN
DCB$
      6143**DCL      6087--IMP-PTR  6245<<ASSIGN   6246>>IF       6247>>IF
ERRNO
      5830**DCL      5848--REDEF
ERRNO_P
      5829**DCL      5830--IMP-PTR  5848--IMP-PTR  6236>>ASSIGN   6237>>ASSIGN   6238>>ASSIGN   6239>>ASSIGN
PL6.E3A0      #004=XBI_SET_STREAM_ERRNO File=xbi_error:6.:XBC3TSI                WED 08/20/97 14:23 Page:23   
      6240>>ASSIGN
ERROR
      6197**DCL      6232<<ASSIGN   6234<<ASSIGN
ERROR.ERR#
      6227**DCL      6239>>ASSIGN
ERROR.FCG
      6213**DCL      6236>>ASSIGN
ERROR.MID
      6226**DCL      6237>>ASSIGN
ERROR.MON
      6226**DCL      6238>>ASSIGN
ERROR.SEV
      6227**DCL      6240>>ASSIGN
F
      5925**DCL         7--PROC
F.FPT_READ.V.DCB#
      5970**DCL      6242>>IF       6254>>ASSIGN
F.FPT_READ.V.DVBYTE.REREAD#
      5987**DCL      5988--REDEF
F.FPT_READ.V.INDX#
      5980**DCL      5981--REDEF
F.FPT_WRITE.V.DVBYTE.VFC#
      6025**DCL      6026--REDEF
F.IS_ERROR
      5932**DCL      6256<<ASSIGN
F$DCB.ACTPOS
      6119**DCL      6119--REDEF
F$DCB.ARS#
      6093**DCL      6093--REDEF
F$DCB.ATTR
      6112**DCL      6113--REDEF
F$DCB.BORROW
      6127**DCL      6127--REDEF    6127--REDEF    6127--REDEF
F$DCB.DCBNAME.L
      6141**DCL      6141--IMP-SIZ
F$DCB.EOMCHAR#
PL6.E3A0      #004=XBI_SET_STREAM_ERRNO File=xbi_error:6.:XBC3TSI                WED 08/20/97 14:23 Page:24   
      6097**DCL      6097--REDEF
F$DCB.FCD#
      6106**DCL      6247>>IF
F$DCB.FLDID
      6122**DCL      6122--REDEF
F$DCB.FORM$
      6116**DCL      6116--REDEF
F$DCB.FSECT
      6132**DCL      6132--REDEF
F$DCB.FSN#
      6109**DCL      6109--REDEF    6109--REDEF    6110--REDEF
F$DCB.HEADER$
      6115**DCL      6115--REDEF
F$DCB.IXTNSIZE#
      6113**DCL      6113--REDEF
F$DCB.LASTSTA$
      6102**DCL      6102--REDEF
F$DCB.LVL
      6128**DCL      6128--REDEF
F$DCB.NAME#.C
      6103**DCL      6103--REDEF
F$DCB.NOEOF
      6125**DCL      6125--REDEF
F$DCB.NRECS#
      6114**DCL      6114--REDEF
F$DCB.NRECX
      6133**DCL      6133--REDEF
F$DCB.OHDR
      6125**DCL      6125--REDEF
F$DCB.ORG#
      6108**DCL      6108--REDEF
F$DCB.PRECNO
      6131**DCL      6131--REDEF
F$DCB.RCSZ
      6137**DCL      6137--REDEF
F$DCB.RES#
PL6.E3A0      #004=XBI_SET_STREAM_ERRNO File=xbi_error:6.:XBC3TSI                WED 08/20/97 14:23 Page:25   
      6104**DCL      6104--REDEF
F$DCB.SETX
      6116**DCL      6116--REDEF
F$DCB.TAB$
      6116**DCL      6116--REDEF
F$DCB.TDA
      6130**DCL      6131--REDEF
F$DCB.WSN#
      6104**DCL      6104--REDEF
FPT_RELDCB
      6170**DCL      6248<<ASSIGN   6251<>CALL
FPT_RELDCB.V
      6170**DCL      6249--ASSIGN
FPT_RELDCB.V.DCB#
      6170**DCL      6250<<ASSIGN
FPT_RELDCB.V_
      6170**DCL      6249<<ASSIGN
FPT_RELDCB_CONST
      6156**DCL      6248>>ASSIGN
FPT_RELDCB_CONST.V
      6156**DCL      6156--DCLINIT
M$RELDCB
      5512**DCL-ENT  6251--CALL
SUPPLIED_ERROR
      6048**DCL         7--PROC     6231--IF       6232>>ASSIGN
XBI$CP6_DCBNUMBER
      5859**DCL      6242>>IF       6242>>IF       6242>>IF       6245--ASSIGN   6250>>ASSIGN   6254<<ASSIGN
XBI$MIN_RELEASE_DCBNUM
      6085**DCL      6242>>IF

PL6.E3A0      #005=XBI_GET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:26   
      199        1        /*T***********************************************************/
      200        2        /*T*                                                         */
      201        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      202        4        /*T*                                                         */
      203        5        /*T***********************************************************/
      204        6
      205        7        XBI_GET_ERRNO: PROC (error);
      206        8           /*I*  NAME: XBI_GET_ERRNO
      207        9                 CALL: CALL XBI_GET_ERRNO (error);
      208       10                 OUTPUT: error        VLP_ERRCODE
      209       11                 DESCRIPTION: Returns the current value of errno converted to a
      210       12                    CP-6 error code.
      211       13           */
      212       14
      213       15           %INCLUDE CP_6;
      214     5575           %INCLUDE xb_errno_i6;
      215     5614
      216     5615           %VLP_ERRCODE (FPTN=error, STCLASS=" ");
      217     5660
      218     5661    1      error.fcg = CP6_ERRNO.fcg;
      219     5662    1      error.mid = CP6_ERRNO.mid;
      220     5663    1      error.mon = CP6_ERRNO.mon;
      221     5664    1      error.err# = CP6_ERRNO.err#;
      222     5665    1      error.sev = CP6_ERRNO.sev;
      223     5666    1   END XBI_GET_ERRNO;
      224     5667        %EOD;

PL6.E3A0      #005=XBI_GET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:27   
--  Include file information  --

   xb_errno_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI_GET_ERRNO.

   Procedure XBI_GET_ERRNO requires 25 words for executable code.
   Procedure XBI_GET_ERRNO requires 4 words of local(AUTO) storage.

PL6.E3A0      #005=XBI_GET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=XBI_GET_ERRNO File=xbi_error:6.:XBC3TSI                       WED 08/20/97 14:23 Page:29   
          MINI XREF LISTING

CP6_ERRNO.ERR#
      5606**DCL      5664>>ASSIGN
CP6_ERRNO.FCG
      5603**DCL      5661>>ASSIGN
CP6_ERRNO.MID
      5604**DCL      5662>>ASSIGN
CP6_ERRNO.MON
      5605**DCL      5663>>ASSIGN
CP6_ERRNO.SEV
      5607**DCL      5665>>ASSIGN
ERRNO
      5584**DCL      5602--REDEF
ERRNO_P
      5583**DCL      5584--IMP-PTR  5602--IMP-PTR  5661>>ASSIGN   5662>>ASSIGN   5663>>ASSIGN   5664>>ASSIGN
      5665>>ASSIGN
ERROR
      5627**DCL         7--PROC
ERROR.ERR#
      5657**DCL      5664<<ASSIGN
ERROR.FCG
      5643**DCL      5661<<ASSIGN
ERROR.MID
      5656**DCL      5662<<ASSIGN
ERROR.MON
      5656**DCL      5663<<ASSIGN
ERROR.SEV
      5657**DCL      5665<<ASSIGN

PL6.E3A0      #006=XBI_GET_CP6_DCBNUMBER File=xbi_error:6.:XBC3TSI               WED 08/20/97 14:24 Page:30   
      225        1        /*T***********************************************************/
      226        2        /*T*                                                         */
      227        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      228        4        /*T*                                                         */
      229        5        /*T***********************************************************/
      230        6
      231        7        XBI_GET_CP6_DCBNUMBER: PROC (dcb_number);
      232        8           /*I*  NAME: XBI_GET_CP6_DCBNUMBER
      233        9                 CALL: CALL XBI_GET_CP6_DCBNUMBER (dcb_number);
      234       10                 OUTPUT: dcb_number            SBIN;
      235       11                 DESCRIPTION: Returns dcb number associated with errno.  If the most
      236       12                    recent error was not an I/O error then it can be expected that the
      237       13                    value zero will be returned.
      238       14           */
      239       15
      240       16           %INCLUDE xb_errno_i6;
      241       55
      242       56    1      DCL dcb_number          SBIN;
      243       57
      244       58    1      dcb_number = XBI$CP6_DCBNUMBER;
      245       59    1   END XBI_GET_CP6_DCBNUMBER;
      246       60        %EOD;

PL6.E3A0      #006=XBI_GET_CP6_DCBNUMBER File=xbi_error:6.:XBC3TSI               WED 08/20/97 14:24 Page:31   
--  Include file information  --

   xb_errno_i6.:XBC3TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI_GET_CP6_DCBNUMBER.

   Procedure XBI_GET_CP6_DCBNUMBER requires 6 words for executable code.
   Procedure XBI_GET_CP6_DCBNUMBER requires 4 words of local(AUTO) storage.

PL6.E3A0      #006=XBI_GET_CP6_DCBNUMBER File=xbi_error:6.:XBC3TSI               WED 08/20/97 14:24 Page:32   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=XBI_GET_CP6_DCBNUMBER File=xbi_error:6.:XBC3TSI               WED 08/20/97 14:24 Page:33   
          MINI XREF LISTING

DCB_NUMBER
        56**DCL         7--PROC       58<<ASSIGN
ERRNO
        25**DCL        43--REDEF
ERRNO_P
        24**DCL        25--IMP-PTR    43--IMP-PTR
XBI$CP6_DCBNUMBER
        54**DCL        58>>ASSIGN

PL6.E3A0      #007=XB_IO_ERROR File=xbi_error:6.:XBC3TSI                         WED 08/20/97 14:24 Page:34   
      247        1        /*T***********************************************************/
      248        2        /*T*                                                         */
      249        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      250        4        /*T*                                                         */
      251        5        /*T***********************************************************/
      252        6
      253        7        XB_IO_ERROR: PROC;
      254        8           /*I*  NAME: XB_IO_ERROR
      255        9                 CALL: CALL XB_IO_ERROR;
      256       10                 DESCRIPTION: Used to report internal library assertion failures.
      257       11                    Also home to text for all C runtime library error messages.
      258       12           */
      259       13
      260       14           %INCLUDE CP_6;
      261     5574           %INCLUDE xb_error_numbers_i6;
      262     5621           %INCLUDE xb_signal_i6;
      263     5683           %INCLUDE xb_string_support_i6;
      264     5719
      265     5720           %STRING_VARIABLE (NAME=STRING_TEMPLATE,STCLASS=BASED,MAXIMUM_LENGTH=
              5720               "STRING_TEMPLATE.SIZE");
      266     5725
      267     5726           /*E* ERROR: XBI-E$BAD_OR_MISSING_REAL_NUMBER-C
      268     5727                MESSAGE: You have tried to read a real number from the file %DC
      269     5728                         externally known as %UF but no recognizable real number was found.
      270     5729           */
      271     5730
      272     5731           /*E* ERROR: XBI-E$BAD_BASE-C
      273     5732                MESSAGE: You tried to read an integer from the file %DC externally
      274     5733                         known as %UF that had a base outside the range that is permitted.
      275     5734           */
      276     5735
      277     5736           /*E* ERROR: XBI-E$READ_AFTER_WRITE-C
      278     5737                MESSAGE: Output to a stream may not be directly followed by input
      279     5738           without an intervening call to fflush or a file positioning function.
      280     5739           */
      281     5740
      282     5741           /*E* ERROR: XBI-E$WRITE_AFTER_READ-C
PL6.E3A0      #007=XB_IO_ERROR File=xbi_error:6.:XBC3TSI                         WED 08/20/97 14:24 Page:35   
      283     5742                MESSAGE: Input may not be directly followed by output unless the
      284     5743           stream is at eof, or an intervening call to fflush or a file positioning
      285     5744           function is made.
      286     5745           */
      287     5746
      288     5747           /*E* ERROR: XBI-E$ASSERTION_FAILURE-C
      289     5748                MESSAGE: An internal consistency check in the C runtime library
      290     5749           has failed.  This indicates a bug in the C runtime library, not a bug
      291     5750           in your program.
      292     5751           */
      293     5752
      294     5753           /*E* ERROR: XBI-E$NO_MEMORY_FOR_MALLOC-C
      295     5754                MESSAGE: A call to malloc, calloc or realloc failed because you have
      296     5755         reached the 256kw size limit of the heap.  !ORESing more memory won't help.
      297     5756           */
      298     5757
      299     5758           /*E* ERROR: XBI-E$NO_SUCH_ARGUMENT-C
      300     5759                MESSAGE: You called a function with too few arguments.
      301     5760           */
      302     5761
      303     5762           /*E* ERROR: XBI-E$WIDTH_OR_PRECISION_TB-C
      304     5763                MESSAGE: A width or precision specification was too big for this
      305     5764                 implementation of C to handle.
      306     5765           */
      307     5766
      308     5767           /*E* ERROR: XBI-E$UNKNOWN_FORMAT_CONV-C
      309     5768                MESSAGE: You specified an unknown conversion operation in a format
      310     5769                 control string.
      311     5770           */
      312     5771
      313     5772           /*E* ERROR: XBI-E$FORMAT_STRING_TOO_LONG-C
      314     5773                MESSAGE: This implementation of C won't handle format control
      315     5774                 strings longer than 16384 characters.
      316     5775           */
      317     5776
      318     5777           /*E* ERROR: XBI-E$FIELD_TOO_BIG-C
      319     5778                MESSAGE: A conversion specification in a format control string
PL6.E3A0      #007=XB_IO_ERROR File=xbi_error:6.:XBC3TSI                         WED 08/20/97 14:24 Page:36   
      320     5779                 cannot produce a field larger than 1024 characters in this
      321     5780                 implementation of C.
      322     5781           */
      323     5782
      324     5783           /*E* ERROR: XBI-E$DOMAIN_ERROR-C
      325     5784                MESSAGE: A function parameter is outside the defined domain.
      326     5785           */
      327     5786
      328     5787           /*E* ERROR: XBI-E$RANGE_ERROR-C
      329     5788                MESSAGE: A function result is outside the defined range.
      330     5789           */
      331     5790
      332     5791           /*E* ERROR: XBI-E$BAD_OPEN_MODE-C
      333     5792                MESSAGE: You specified an unrecognizable mode in a call to fopen
      334     5793                 or freopen.
      335     5794           */
      336     5795
      337     5796           /*E* ERROR: XBI-E$BAD_FILE_POSITIONING-C
      338     5797                MESSAGE: You tried to position to a nonexistent place in a fil
      339     5798           using fsetpos or fseek.
      340     5799           */
      341     5800
      342     5801           /*E* ERROR: XBI-E$BAD_WHENCE-C
      343     5802                MESSAGE: fseek must be called with SEEK_SET, SEEK_CUR or SEEK_END for
      344     5803           binary streams.  For text streams, offset must be zero or SEEK_SET must
      345     5804           be specified.
      346     5805           */
      347     5806
      348     5807           /*E* ERROR: XBI-E$STRING_TOO_LONG-C
      349     5808                MESSAGE: Strings are limited to 262143 characters in size in this
      350     5809           implementation of C.
      351     5810           */
      352     5811
      353     5812           /*E* ERROR: XBI-E$NO_CHARS_TO_SCAN-C
      354     5813                MESSAGE: There are no characters left to scan because we've reached
      355     5814           the end of the scan string (sscanf) or reached end of file (scanf, fscanf).
      356     5815           */
PL6.E3A0      #007=XB_IO_ERROR File=xbi_error:6.:XBC3TSI                         WED 08/20/97 14:24 Page:37   
      357     5816
      358     5817           /*E* ERROR: XBI-E$SCAN_MISMATCH-C
      359     5818                MESSAGE: Input characters were inappropriate for a format directive
      360     5819           in a call to sscanf, scanf or fscanf.
      361     5820           */
      362     5821
      363     5822           /*E* ERROR: XBI-E$WIDTH_CANT_BE_ZERO-C
      364     5823                MESSAGE: Field width in conversion specification can't be zero
      365     5824           in a call to sscanf, scanf or fscanf.
      366     5825           */
      367     5826
      368     5827           /*E* ERROR: XBI-E$BAD_CALL_TO_SETBUF-C
      369     5828                MESSAGE: setbuf or setvbuf can only be called after a stream has
      370     5829           been opened and before any reading, writing or positioning has been done.
      371     5830           */
      372     5831
      373     5832           /*E* ERROR: XBI-E$BAD_CALL_TO_SIGNAL-C
      374     5833                MESSAGE: You either passed a nonexistent signal type or SIG_ERR to
      375     5834           the signal function.
      376     5835           */
      377     5836
      378     5837           /*E* ERROR: XBI-E$ABORT_SIGNAL-C
      379     5838                MESSAGE: The program issued an abort signal (SIGABRT).
      380     5839           */
      381     5840
      382     5841           /*E* ERROR: XBI-E$BREAK_KEY_HIT-C
      383     5842                MESSAGE: You hit the BREAK key!
      384     5843           */
      385     5844
      386     5845           /*E* ERROR: XBI-E$EXIT_CONTROL-C
      387     5846                MESSAGE: a SIGTERM signal was raised but the program had no function
      388     5847           assigned to handle the signal.
      389     5848           */
      390     5849           /*E* ERROR: XBI-E$BAD_MEMORY_STACK-C
      391     5850                MESSAGE: The memory heap is malformed, possibly due to assigning values
      392     5851           past the requested allocated area.
      393     5852           */
PL6.E3A0      #007=XB_IO_ERROR File=xbi_error:6.:XBC3TSI                         WED 08/20/97 14:24 Page:38   
      394     5853
      395     5854           /*E* ERROR: XBI-E$AUXIO_FILE_POINTER-C
      396     5855                MESSAGE: A call was made to a C runtime library function with a file
      397     5856           pointer that specified to use auxiliary file I/O.
      398     5857           */
      399     5858
      400     5859           /*E* ERROR: XBI-E$SIGALRM_SIGNAL-C
      401     5860                MESSAGE: A SIGALRM signal was raised but the program had no    file
      402     5861           function assigned to handle the signal.
      403     5862           */
      404     5863
      405     5864           /*E* ERROR: XBI-E$SIGUSR1_SIGNAL-C
      406     5865                MESSAGE: A SIGUSR1 signal was raised but the program had no    file
      407     5866           function assigned to handle the signal.
      408     5867           */
      409     5868
      410     5869           /*E* ERROR: XBI-E$SIGUSR2_SIGNAL-C
      411     5870                MESSAGE: A SIGUSR2 signal was raised but the program had no    file
      412     5871           function assigned to handle the signal.
      413     5872           */
      414     5873
      415     5874           %SUB ERR$BAD_OR_MISSING_REAL_NUMBER = XB$ERR$BAD_OR_MISSING_REAL_NUM;
      416     5875           %SUB ERR$BAD_BASE                   = XB$ERR$BAD_BASE;
      417     5876           %SUB ERR$READ_AFTER_WRITE           = XB$ERR$READ_AFTER_WRITE;
      418     5877           %SUB ERR$WRITE_AFTER_READ           = XB$ERR$WRITE_AFTER_READ;
      419     5878           %SUB ERR$ASSERTION_FAILURE          = XB$ERR$ASSERTION_FAILURE;
      420     5879           %SUB ERR$NO_MEMORY_FOR_MALLOC       = XB$ERR$NO_MEMORY_FOR_MALLOC;
      421     5880           %SUB ERR$NO_SUCH_ARGUMENT           = XB$ERR$NO_SUCH_ARGUMENT;
      422     5881           %SUB ERR$WIDTH_OR_PRECISION_TB      = XB$ERR$WIDTH_OR_PRECISION_TB;
      423     5882           %SUB ERR$UNKNOWN_FORMAT_CONV        = XB$ERR$UNKNOWN_FORMAT_CONV;
      424     5883           %SUB ERR$FORMAT_STRING_TOO_LONG     = XB$ERR$FORMAT_STRING_TOO_LONG;
      425     5884           %SUB ERR$FIELD_TOO_BIG              = XB$ERR$FIELD_TOO_BIG;
      426     5885           %SUB ERR$DOMAIN_ERROR               = XB$ERR$DOMAIN_ERROR;
      427     5886           %SUB ERR$RANGE_ERROR                = XB$ERR$RANGE_ERROR;
      428     5887           %SUB ERR$BAD_OPEN_MODE              = XB$ERR$BAD_OPEN_MODE;
      429     5888           %SUB ERR$BAD_FILE_POSITIONING       = XB$ERR$BAD_FILE_POSITIONING;
      430     5889           %SUB ERR$BAD_WHENCE                 = XB$ERR$BAD_WHENCE;
PL6.E3A0      #007=XB_IO_ERROR File=xbi_error:6.:XBC3TSI                         WED 08/20/97 14:24 Page:39   
      431     5890           %SUB ERR$STRING_TOO_LONG            = XB$ERR$STRING_TOO_LONG;
      432     5891           %SUB ERR$NO_CHARS_TO_SCAN           = XB$ERR$NO_CHARS_TO_SCAN;
      433     5892           %SUB ERR$SCAN_MISMATCH              = XB$ERR$SCAN_MISMATCH;
      434     5893           %SUB ERR$WIDTH_CANT_BE_ZERO         = XB$ERR$WIDTH_CANT_BE_ZERO;
      435     5894           %SUB ERR$BAD_CALL_TO_SETBUF         = XB$ERR$BAD_CALL_TO_SETBUF;
      436     5895           %SUB ERR$BAD_CALL_TO_SIGNAL         = XB$ERR$BAD_CALL_TO_SIGNAL;
      437     5896           %SUB ERR$ABORT_SIGNAL               = XB$ERR$ABORT_SIGNAL;
      438     5897           %SUB ERR$BREAK_KEY_HIT              = XB$ERR$BREAK_KEY_HIT;
      439     5898           %SUB ERR$EXIT_CONTROL               = XB$ERR$EXIT_CONTROL;
      440     5899           %SUB ERR$BAD_MEMORY_STACK           = XB$ERR$BAD_MEMORY_STACK;
      441     5900           %SUB ERR$AUXIO_FILE_POINTER         = XB$ERR$AUXIO_FILE_POINTER;
      442     5901           %SUB ERR$SIGALRM_SIGNAL             = XB$ERR$SIGALRM_SIGNAL;
      443     5902           %SUB ERR$SIGUSR1_SIGNAL             = XB$ERR$SIGUSR1_SIGNAL;
      444     5903           %SUB ERR$SIGUSR2_SIGNAL             = XB$ERR$SIGUSR2_SIGNAL;
      445     5904           %VLP_ERRCODE (FPTN=ERR$BAD_BASE, STCLASS="CONSTANT SYMDEF",
      446     5905                         FCG='XB', MID='I', ERR#="%E$BAD_BASE", SEV=7);
      447     5950           %VLP_ERRCODE (FPTN=ERR$BAD_OR_MISSING_REAL_NUMBER, STCLASS="CONSTANT SYMDEF",
      448     5951                         FCG='XB', MID='I', ERR#="%E$BAD_OR_MISSING_REAL_NUMBER", SEV=7);
      449     5996           %VLP_ERRCODE (FPTN=ERR$READ_AFTER_WRITE, STCLASS="CONSTANT SYMDEF",
      450     5997                         FCG='XB', MID='I', ERR#="E$READ_AFTER_WRITE", SEV=7);
      451     6042           %VLP_ERRCODE (FPTN=ERR$WRITE_AFTER_READ, STCLASS="CONSTANT SYMDEF",
      452     6043                         FCG='XB', MID='I', ERR#="E$WRITE_AFTER_READ", SEV=7);
      453     6088           %VLP_ERRCODE (FPTN=ERR$ASSERTION_FAILURE, STCLASS="CONSTANT SYMDEF",
      454     6089                         FCG='XB', MID='I', ERR#="E$ASSERTION_FAILURE", SEV=7);
      455     6134           %VLP_ERRCODE (FPTN=ERR$NO_MEMORY_FOR_MALLOC, STCLASS="CONSTANT SYMDEF",
      456     6135                         FCG='XB', MID='I', ERR#="E$NO_MEMORY_FOR_MALLOC", SEV=7);
      457     6180           %VLP_ERRCODE (FPTN=ERR$NO_SUCH_ARGUMENT, STCLASS="CONSTANT SYMDEF",
      458     6181                         FCG='XB', MID='I', ERR#="E$NO_SUCH_ARGUMENT", SEV=7);
      459     6226           %VLP_ERRCODE (FPTN=ERR$WIDTH_OR_PRECISION_TB, STCLASS="CONSTANT SYMDEF",
      460     6227                         FCG='XB', MID='I', ERR#="E$WIDTH_OR_PRECISION_TB", SEV=7);
      461     6272           %VLP_ERRCODE (FPTN=ERR$UNKNOWN_FORMAT_CONV, STCLASS="CONSTANT SYMDEF",
      462     6273                         FCG='XB', MID='I', ERR#="E$UNKNOWN_FORMAT_CONV", SEV=7);
      463     6318           %VLP_ERRCODE (FPTN=ERR$FORMAT_STRING_TOO_LONG, STCLASS="CONSTANT SYMDEF",
      464     6319                         FCG='XB', MID='I', ERR#="E$FORMAT_STRING_TOO_LONG", SEV=7);
      465     6364           %VLP_ERRCODE (FPTN=ERR$FIELD_TOO_BIG, STCLASS="CONSTANT SYMDEF",
      466     6365                         FCG='XB', MID='I', ERR#="E$FIELD_TOO_BIG", SEV=7);
      467     6410           %VLP_ERRCODE (FPTN=ERR$DOMAIN_ERROR, STCLASS="CONSTANT SYMDEF",
PL6.E3A0      #007=XB_IO_ERROR File=xbi_error:6.:XBC3TSI                         WED 08/20/97 14:24 Page:40   
      468     6411                         FCG='XB', MID='I', ERR#="E$DOMAIN_ERROR", SEV=7);
      469     6456           %VLP_ERRCODE (FPTN=ERR$RANGE_ERROR, STCLASS="CONSTANT SYMDEF",
      470     6457                         FCG='XB', MID='I', ERR#="E$RANGE_ERROR", SEV=7);
      471     6502           %VLP_ERRCODE (FPTN=ERR$BAD_OPEN_MODE, STCLASS="CONSTANT SYMDEF",
      472     6503                         FCG='XB', MID='I', ERR#="E$BAD_OPEN_MODE", SEV=7);
      473     6548           %VLP_ERRCODE (FPTN=ERR$BAD_FILE_POSITIONING, STCLASS="CONSTANT SYMDEF",
      474     6549                         FCG='XB', MID='I', ERR#="E$BAD_FILE_POSITIONING", SEV=7);
      475     6594           %VLP_ERRCODE (FPTN=ERR$BAD_WHENCE, STCLASS="CONSTANT SYMDEF",
      476     6595                         FCG='XB', MID='I', ERR#="E$BAD_WHENCE", SEV=7);
      477     6640           %VLP_ERRCODE (FPTN=ERR$STRING_TOO_LONG, STCLASS="CONSTANT SYMDEF",
      478     6641                         FCG='XB', MID='I', ERR#="E$STRING_TOO_LONG", SEV=7);
      479     6686           %VLP_ERRCODE (FPTN=ERR$NO_CHARS_TO_SCAN, STCLASS="CONSTANT SYMDEF",
      480     6687                         FCG='XB', MID='I', ERR#="E$NO_CHARS_TO_SCAN", SEV=7);
      481     6732           %VLP_ERRCODE (FPTN=ERR$SCAN_MISMATCH, STCLASS="CONSTANT SYMDEF",
      482     6733                         FCG='XB', MID='I', ERR#="E$SCAN_MISMATCH", SEV=7);
      483     6778           %VLP_ERRCODE (FPTN=ERR$WIDTH_CANT_BE_ZERO, STCLASS="CONSTANT SYMDEF",
      484     6779                         FCG='XB', MID='I', ERR#="E$WIDTH_CANT_BE_ZERO", SEV=7);
      485     6824           %VLP_ERRCODE (FPTN=ERR$BAD_CALL_TO_SETBUF, STCLASS="CONSTANT SYMDEF",
      486     6825                         FCG='XB', MID='I', ERR#="E$BAD_CALL_TO_SETBUF", SEV=7);
      487     6870           %VLP_ERRCODE (FPTN=ERR$BAD_CALL_TO_SIGNAL, STCLASS="CONSTANT SYMDEF",
      488     6871                         FCG='XB', MID='I', ERR#="E$BAD_CALL_TO_SIGNAL", SEV=7);
      489     6916           %VLP_ERRCODE (FPTN=ERR$ABORT_SIGNAL, STCLASS="CONSTANT SYMDEF",
      490     6917                         FCG='XB', MID='I', ERR#="E$ABORT_SIGNAL", SEV=7);
      491     6962           %VLP_ERRCODE (FPTN=ERR$BREAK_KEY_HIT, STCLASS="CONSTANT SYMDEF",
      492     6963                         FCG='XB', MID='I', ERR#="E$BREAK_KEY_HIT", SEV=7);
      493     7008           %VLP_ERRCODE (FPTN=ERR$EXIT_CONTROL, STCLASS="CONSTANT SYMDEF",
      494     7009                         FCG='XB', MID='I', ERR#="E$EXIT_CONTROL", SEV=7);
      495     7054           %VLP_ERRCODE (FPTN=ERR$BAD_MEMORY_STACK, STCLASS="CONSTANT SYMDEF",
      496     7055                         FCG='XB', MID='I', ERR#="E$BAD_MEMORY_STACK", SEV=7);
      497     7100
      498     7101           %VLP_ERRCODE (FPTN=ERR$AUXIO_FILE_POINTER, STCLASS="CONSTANT SYMDEF",
      499     7102                         FCG='XB', MID='I', ERR#="E$AUXIO_FILE_POINTER", SEV=7);
      500     7147
      501     7148           %VLP_ERRCODE (FPTN=ERR$SIGALRM_SIGNAL, STCLASS="CONSTANT SYMDEF",
      502     7149                         FCG='XB', MID='I', ERR#="E$SIGALRM_SIGNAL", SEV=7);
      503     7194
      504     7195           %VLP_ERRCODE (FPTN=ERR$SIGUSR1_SIGNAL, STCLASS="CONSTANT SYMDEF",
PL6.E3A0      #007=XB_IO_ERROR File=xbi_error:6.:XBC3TSI                         WED 08/20/97 14:24 Page:41   
      505     7196                         FCG='XB', MID='I', ERR#="E$SIGUSR1_SIGNAL", SEV=7);
      506     7241
      507     7242           %VLP_ERRCODE (FPTN=ERR$SIGUSR2_SIGNAL, STCLASS="CONSTANT SYMDEF",
      508     7243                         FCG='XB', MID='I', ERR#="E$SIGUSR2_SIGNAL", SEV=7);
      509     7288
      510     7289           %VLP_ERRCODE (FPTN=error, STCLASS=" ");
      511     7334
      512     7335           %STRING_CONSTANT (NAME=Internal_Trap,               VALUE="'Internal_Trap'");
      513     7340
      514     7341    1      DCL dcb_number                SBIN;
      515     7342
      516     7343    1      DCL XBI$RAISE_SIGNAL          ENTRY;
      517     7344    1      DCL XBI_GET_ERRNO             ENTRY (1);
      518     7345    1      DCL XBI_GET_CP6_DCBNUMBER     ENTRY (1);
      519     7346
      520     7347    1      CALL XBI_GET_ERRNO (error);
      521     7348    1      CALL XBI_GET_CP6_DCBNUMBER (dcb_number);
      522     7349    1      XB$ENV.CURRENT_SIGNAL        = %SIGABRT;
      523     7350    1      XB$ENV.DCB_NUMBER            = dcb_number;
      524     7351    1      XB$ENV.ERROR_CODE            = error;
      525     7352    1      XB$ENV.EXCEPTION_NAME.SIZE   = Internal_Trap.SIZE;
      526     7353    1      XB$ENV.EXCEPTION_NAME.STRING = Internal_Trap.STRING;
      527     7354    1      XB$ENV.EXCEPTION_LOCATION    = 0;
      528     7355    1      CALL XBI$RAISE_SIGNAL;
      529     7356    1   END XB_IO_ERROR;
      530     7357        %EOD;

PL6.E3A0      #007=XB_IO_ERROR File=xbi_error:6.:XBC3TSI                         WED 08/20/97 14:24 Page:42   
--  Include file information  --

   xb_string_support_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   xb_signal_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   xb_error_numbers_i6.:XBC3TOU  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XB_IO_ERROR.

   Procedure XB_IO_ERROR requires 31 words for executable code.
   Procedure XB_IO_ERROR requires 8 words of local(AUTO) storage.

PL6.E3A0      #007=XB_IO_ERROR File=xbi_error:6.:XBC3TSI                         WED 08/20/97 14:24 Page:43   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=XB_IO_ERROR File=xbi_error:6.:XBC3TSI                         WED 08/20/97 14:24 Page:44   
          MINI XREF LISTING

DCB_NUMBER
      7341**DCL      7348<>CALL     7350>>ASSIGN
ERROR
      7301**DCL      7347<>CALL     7351>>ASSIGN
INTERNAL_TRAP.SIZE
      7337**DCL      7352>>ASSIGN
INTERNAL_TRAP.STRING
      7338**DCL      7353>>ASSIGN
SIGVEC.SV_HANDLER
      5679**DCL      5680--REDEF
STRING_TEMPLATE.SIZE
      5722**DCL      5723--IMP-SIZ
XB$ENV.CURRENT_SIGNAL
      5652**DCL      7349<<ASSIGN
XB$ENV.DCB_NUMBER
      5662**DCL      7350<<ASSIGN
XB$ENV.ERROR_CODE
      5656**DCL      7351<<ASSIGN
XB$ENV.EXCEPTION_LOCATION
      5663**DCL      7354<<ASSIGN
XB$ENV.EXCEPTION_NAME.SIZE
      5654**DCL      7352<<ASSIGN
XB$ENV.EXCEPTION_NAME.STRING
      5655**DCL      7353<<ASSIGN
XBI$RAISE_SIGNAL
      7343**DCL-ENT  7355--CALL
XBI_GET_CP6_DCBNUMBER
      7345**DCL-ENT  7348--CALL
XBI_GET_ERRNO
      7344**DCL-ENT  7347--CALL

PL6.E3A0      #008=XB$GET_LAST_ERROR_MESSAGE File=xbi_error:6.:XBC3TSI           WED 08/20/97 14:24 Page:45   
      531        1        /*T***********************************************************/
      532        2        /*T*                                                         */
      533        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      534        4        /*T*                                                         */
      535        5        /*T***********************************************************/
      536        6
      537        7        XB$GET_LAST_ERROR_MESSAGE: PROC (LAST_ERROR_MESSAGE, MAXIMUM_MESSAGE_SIZE);
      538        8           /*I*  NAME: XBI$GET_LAST_ERROR_MESSAGE
      539        9                 CALL: CALL XBI$GET_LAST_ERROR_MESSAGE (LAST_ERROR_MESSAGE,
      540       10                                                        MAXIMUM_MESSAGE_SIZE);
      541       11                 INPUT: MAXIMUM_MESSAGE_SIZE   SBIN; -max size of LAST_ERROR_MESSAGE
      542       12                 OUTPUT: LAST_ERROR_MESSAGE    pascal string type
      543       13                 DESCRIPTION: Returns text for current errno error condition in
      544       14                    LAST_ERROR_MESSAGE.
      545       15           */
      546       16
      547       17           %INCLUDE xb_string_support_i6;
      548       53           %INCLUDE xb_signal_i6;
      549      115           %INCLUDE CP_6;
      550     5675           %INCLUDE B$TABLES_C;
      551     5783
      552     5784        %VAR_STRING_PARAMETER (NAME=LAST_ERROR_MESSAGE, MAXIMUM_LENGTH=MAXIMUM_MESSAGE_SIZE)
              5784            ;
      553     5789    1   DCL MAXIMUM_MESSAGE_SIZE      SBIN WORD ALIGNED;
      554     5790
      555     5791        %FPT_ERRMSG (STCLASS=AUTO);
      556     5818        %FPT_ERRMSG (FPTN=FPT$ERRMSG, STCLASS=CONSTANT, FLAGLEV=4,
      557     5819           FILENAME=XBI$ERRFILE_NAME, FILEACCT=XBI$ERRFILE_ACCT);
      558     5846        %VLP_NAME (FPTN=XBI$ERRFILE_NAME, STCLASS="SYMREF READONLY", LEN=31);
      559     5873        %VLP_ACCT (FPTN=XBI$ERRFILE_ACCT, STCLASS="SYMREF READONLY");
      560     5886    1   DCL I                            SBIN WORD ALIGNED;
      561     5887    1   DCL J                            SBIN WORD ALIGNED;
      562     5888    1   DCL JUNK                         SBIN WORD ALIGNED;
      563     5889        %B$SR_NON_BLANK (NAME=XBI$non_blank_table);
      564     5893    1   DCL 1 SUBSTITUTION_PHRASE        ALIGNED,
      565     5894    1         2 SIZE                     UBIN BYTE UNAL,
      566     5895    1         2 STRING                   CHAR(13) UNAL;
PL6.E3A0      #008=XB$GET_LAST_ERROR_MESSAGE File=xbi_error:6.:XBC3TSI           WED 08/20/97 14:24 Page:46   
      567     5896
      568     5897
      569     5898    1      LAST_ERROR_MESSAGE.SIZE = 0;
      570     5899    1      LAST_ERROR_MESSAGE.STRING = ' ';
      571     5900    2      IF XB$ENV.ERROR_CODE  THEN DO;
      572     5901    2         FPT_ERRMSG = FPT$ERRMSG;
      573     5902    2         FPT_ERRMSG.V_ = VECTOR (FPT_ERRMSG.V);
      574     5903    2         FPT_ERRMSG.CODE_ = VECTOR(XB$ENV.ERROR_CODE);
      575     5904    2         FPT_ERRMSG.V.DCB# = XB$ENV.DCB_NUMBER;
      576     5905    2         FPT_ERRMSG.BUF_ = VECTOR (LAST_ERROR_MESSAGE.STRING);
      577     5906    3         IF XB$ENV.ERROR_CODE.FCG ~= '3002'O THEN DO;  /* 'XB' */
      578     5907    3            FPT_ERRMSG.FILENAME_ = VECTOR(NIL);
      579     5908    3            FPT_ERRMSG.FILEACCT_ = VECTOR(NIL);
      580     5909    3         END;
      581     5910    2         CALL M$ERRMSG (FPT_ERRMSG) ALTRET(GOON); GOON:
      582     5911    2         I = 0;
      583     5912    3         DO WHILE ('1'B);
      584     5913    3            CALL INDEX2(I, '  ', LAST_ERROR_MESSAGE.STRING, I);
      585     5914    3            CALL SEARCH(J, JUNK, XBI$non_blank_table, LAST_ERROR_MESSAGE.STRING, I)
              5914                     ALTRET (DONE);
      586     5915    3            CALL INSERT (LAST_ERROR_MESSAGE.STRING, I+1, ,SUBSTR(LAST_ERROR_MESSAGE.
              5915                     STRING, J));
      587     5916    3         END;
      588     5917    2        DONE:
      589     5918    2         CALL SEARCHR(I, JUNK, XBI$non_blank_table, LAST_ERROR_MESSAGE.STRING);
      590     5919    2         LAST_ERROR_MESSAGE.SIZE = I + 1;
      591     5920    2         XB$ENV.ERROR_CODE = '0'B;
      592     5921    2      END;
      593     5922
      594     5923    1   END XB$GET_LAST_ERROR_MESSAGE;
      595     5924        %EOD;

PL6.E3A0      #008=XB$GET_LAST_ERROR_MESSAGE File=xbi_error:6.:XBC3TSI           WED 08/20/97 14:24 Page:47   
--  Include file information  --

   B$TABLES_C.:LIB_E04  cannot be made into a system file and is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   xb_signal_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   xb_string_support_i6.:XBC3TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XB$GET_LAST_ERROR_MESSAGE.

   Procedure XB$GET_LAST_ERROR_MESSAGE requires 116 words for executable code.
   Procedure XB$GET_LAST_ERROR_MESSAGE requires 42 words of local(AUTO) storage.

PL6.E3A0      #008=XB$GET_LAST_ERROR_MESSAGE File=xbi_error:6.:XBC3TSI           WED 08/20/97 14:24 Page:48   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=XB$GET_LAST_ERROR_MESSAGE File=xbi_error:6.:XBC3TSI           WED 08/20/97 14:24 Page:49   
          MINI XREF LISTING

B$SR_NON_BLANK$
      5890**DCL      5891--IMP-PTR  5914>>CALLBLT  5918>>CALLBLT
DONE
      5918**LABEL    5914--CALLALT
FPT$ERRMSG
      5830**DCL      5901>>ASSIGN
FPT$ERRMSG.V
      5834**DCL      5830--DCLINIT
FPT_ERRMSG
      5802**DCL      5901<<ASSIGN   5910<>CALL
FPT_ERRMSG.BUF_
      5802**DCL      5905<<ASSIGN
FPT_ERRMSG.CODE_
      5802**DCL      5903<<ASSIGN
FPT_ERRMSG.FILEACCT_
      5803**DCL      5908<<ASSIGN
FPT_ERRMSG.FILENAME_
      5803**DCL      5907<<ASSIGN
FPT_ERRMSG.V
      5806**DCL      5902--ASSIGN
FPT_ERRMSG.V.DCB#
      5806**DCL      5904<<ASSIGN
FPT_ERRMSG.V_
      5802**DCL      5902<<ASSIGN
GOON
      5911**LABEL    5910--CALLALT
I
      5886**DCL      5911<<ASSIGN   5913<<CALLBLT  5913>>CALLBLT  5914>>CALLBLT  5915>>CALLBLT  5918<<CALLBLT
      5919>>ASSIGN
J
      5887**DCL      5914<<CALLBLT  5915>>CALLBLT
JUNK
PL6.E3A0      #008=XB$GET_LAST_ERROR_MESSAGE File=xbi_error:6.:XBC3TSI           WED 08/20/97 14:24 Page:50   
      5888**DCL      5914<<CALLBLT  5918<<CALLBLT
LAST_ERROR_MESSAGE
      5785**DCL         7--PROC
LAST_ERROR_MESSAGE.SIZE
      5786**DCL      5898<<ASSIGN   5919<<ASSIGN
LAST_ERROR_MESSAGE.STRING
      5787**DCL      5899<<ASSIGN   5905--ASSIGN   5913>>CALLBLT  5914>>CALLBLT  5915<<CALLBLT  5915>>CALLBLT
      5918>>CALLBLT
M$ERRMSG
      5666**DCL-ENT  5910--CALL
MAXIMUM_MESSAGE_SIZE
      5789**DCL         7--PROC     5787--IMP-SIZ  5899>>ASSIGN   5905>>ASSIGN   5913>>CALLBLT  5914>>CALLBLT
      5915>>CALLBLT  5915>>CALLBLT  5918>>CALLBLT
SIGVEC.SV_HANDLER
       111**DCL       112--REDEF
XB$ENV.DCB_NUMBER
        94**DCL      5904>>ASSIGN
XB$ENV.ERROR_CODE
        88**DCL      5900>>IF       5903--ASSIGN   5920<<ASSIGN
XB$ENV.ERROR_CODE.FCG
        89**DCL      5906>>IF
XBI$ERRFILE_ACCT
      5884**DCL      5831--DCLINIT
XBI$ERRFILE_NAME
      5871**DCL      5831--DCLINIT
XBI$NON_BLANK_TABLE
      5891**DCL      5914>>CALLBLT  5918>>CALLBLT

PL6.E3A0      #009=XBI$WRITE_MESSAGE File=xbi_error:6.:XBC3TSI                   WED 08/20/97 14:24 Page:51   
      596        1        /*T***********************************************************/
      597        2        /*T*                                                         */
      598        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      599        4        /*T*                                                         */
      600        5        /*T***********************************************************/
      601        6
      602        7        XBI$WRITE_MESSAGE: PROC (DCB#, TEXT, OFFSET);
      603        8           /*I*  NAME: XBI$WRITE_MESSAGE
      604        9                 CALL: CALL XBI$WRITE_MESSAGE (DCB#, TEXT, OFFSET);
      605       10                 INPUT: DCB#          UBIN; -dcb to write to
      606       11                        TEXT pascal string; -text to write
      607       12                        OFFSET        SBIN; -left blank padding
      608       13                 DESCRIPTION: Writes the contents of TEXT to the dcb DCB#.  Offset
      609       14                    specifies how many blanks to place at the beginning of each line.
      610       15                    The contents of TEXT are formatted to eliminate excessive white
      611       16                    space between tokens.
      612       17           */
      613       18
      614       19           %INCLUDE xb_string_support_i6;
      615       55           %INCLUDE CP_6;
      616     5615           %INCLUDE NK_VFC_C;
      617     5689    1      DCL DCB#          UBIN WORD ALIGNED;
      618     5690           %CONST_STRING_PARAMETER (NAME=TEXT);
      619     5695    1      DCL OFFSET        SBIN WORD ALIGNED;
      620     5696
      621     5697        %FPT_WRITE (FPTN=FPT$WRITE_TEXT, STCLASS=CONSTANT, VFC=YES);
      622     5728        %FPT_WRITE (FPTN=FPT_WRITE_TEXT, STCLASS=AUTO);
      623     5759        %F$DCB;
      624     5816    1   DCL FIRST               SBIN WORD ALIGNED;
      625     5817    1   DCL NEXT                SBIN WORD ALIGNED;
      626     5818    1   DCL LAST                SBIN WORD ALIGNED;
      627     5819    1   DCL JUNK                SBIN WORD ALIGNED;
      628     5820    1   DCL WIDTH               SBIN WORD ALIGNED;
      629     5821    1   DCL OUTPUT_BUFFER       CHAR(257) ALIGNED;
      630     5822    1   DCL SEARCH_TABLE     (0:127) UBIN BYTE UNAL CONSTANT INIT(1*%ASCBIN(' '),0,1*0);
      631     5823
      632     5824    1   DCL   XBI_SET_ERRNO  ENTRY(1);
PL6.E3A0      #009=XBI$WRITE_MESSAGE File=xbi_error:6.:XBC3TSI                   WED 08/20/97 14:24 Page:52   
      633     5825
      634     5826        %SUB MINIMUM_WIDTH   = "30";
      635     5827        %SUB DEFAULT_WIDTH   = "79";
      636     5828        %SUB MAXIMUM_WIDTH   = "256";
      637     5829
      638     5830    1      IF TEXT.SIZE = 0 THEN RETURN;
      639     5831    1      FPT_WRITE_TEXT = FPT$WRITE_TEXT; FPT_WRITE_TEXT.V_ = VECTOR (FPT_WRITE_TEXT.V);
      640     5832    1      FPT_WRITE_TEXT.V.DCB# = DCB#;
      641     5833    1      CALL SEARCHR(LAST, JUNK, SEARCH_TABLE, TEXT.STRING, TEXT.SIZE);
      642     5834    1      WIDTH = DCBADDR(DCB#)->F$DCB.WIDTH#;
      643     5835    1      IF WIDTH < MINIMUM_WIDTH THEN WIDTH = DEFAULT_WIDTH;
      644     5836    1      WIDTH = MINIMUM (WIDTH, MAXIMUM_WIDTH);
      645     5837    1      WIDTH = MINIMUM (WIDTH, TEXT.SIZE);
      646     5838    1      IF WIDTH = TEXT.SIZE THEN
      647     5839    1         NEXT = WIDTH;
      648     5840    1      ELSE
      649     5841    1         CALL INDEX1R (NEXT, ' ', TEXT.STRING, WIDTH);
      650     5842    1      SUBSTR (OUTPUT_BUFFER, 0, 1) = %VFC_TRANSITION1;
      651     5843    1      SUBSTR (OUTPUT_BUFFER, 1, NEXT) = SUBSTR (TEXT.STRING, 0, NEXT);
      652     5844    1      FPT_WRITE_TEXT.BUF_ = VECTOR(SUBSTR(OUTPUT_BUFFER, 0, NEXT+1));
      653     5845    2      CALL M$WRITE (FPT_WRITE_TEXT) WHENALTRETURN DO;
      654     5846    2         CALL XBI_SET_ERRNO;
      655     5847    2         RETURN;
      656     5848    2      END;
      657     5849    1      WIDTH = WIDTH - OFFSET;
      658     5850           /* write any subsequent lines offset to the right */
      659     5851           /* Formatting scheme is:
      660     5852                 write as many words as possible, and break at a blank.
      661     5853                 if a word exceeds the width, take up to the next blank
      662     5854                 and let the system deal with wrapping it.
      663     5855           */
      664     5856    1      OUTPUT_BUFFER = ' ';
      665     5857    2      DO WHILE (NEXT <= LAST);
      666     5858    2         FIRST = NEXT+1;
      667     5859    2         CALL INDEX1R (NEXT, ' ', TEXT.STRING, FIRST+WIDTH);
      668     5860    2         IF NEXT < FIRST THEN CALL INDEX1(NEXT,' ',TEXT.STRING, FIRST);
      669     5861    2         CALL INSERT (OUTPUT_BUFFER, OFFSET+1, ,SUBSTR(TEXT.STRING, FIRST, NEXT-FIRST))
PL6.E3A0      #009=XBI$WRITE_MESSAGE File=xbi_error:6.:XBC3TSI                   WED 08/20/97 14:24 Page:53   
              5861                  ;
      670     5862    2         SUBSTR (OUTPUT_BUFFER, 0, 1) = %VFC_TRANSITION1;
      671     5863    2         FPT_WRITE_TEXT.BUF_ = VECTOR(SUBSTR(OUTPUT_BUFFER, 0, NEXT-FIRST+OFFSET+1));
      672     5864    3         CALL M$WRITE (FPT_WRITE_TEXT) WHENALTRETURN DO;
      673     5865    3            CALL XBI_SET_ERRNO;
      674     5866    3            RETURN;
      675     5867    3         END;
      676     5868    2      END;
      677     5869
      678     5870    1   END XBI$WRITE_MESSAGE;

PL6.E3A0      #009=XBI$WRITE_MESSAGE File=xbi_error:6.:XBC3TSI                   WED 08/20/97 14:24 Page:54   
--  Include file information  --

   NK_VFC_C.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   xb_string_support_i6.:XBC3TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI$WRITE_MESSAGE.

   Procedure XBI$WRITE_MESSAGE requires 169 words for executable code.
   Procedure XBI$WRITE_MESSAGE requires 90 words of local(AUTO) storage.

    No errors detected in file xbi_error:6.:XBC3TSI    .

PL6.E3A0      #009=XBI$WRITE_MESSAGE File=xbi_error:6.:XBC3TSI                   WED 08/20/97 14:24 Page:55   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=XBI$WRITE_MESSAGE File=xbi_error:6.:XBC3TSI                   WED 08/20/97 14:24 Page:56   
          MINI XREF LISTING

DCB#
      5689**DCL         7--PROC     5832>>ASSIGN   5834--ASSIGN
F$DCB.ACTPOS
      5792**DCL      5792--REDEF
F$DCB.ARS#
      5766**DCL      5766--REDEF
F$DCB.ATTR
      5785**DCL      5786--REDEF
F$DCB.BORROW
      5800**DCL      5800--REDEF    5800--REDEF    5800--REDEF
F$DCB.DCBNAME.L
      5814**DCL      5814--IMP-SIZ
F$DCB.EOMCHAR#
      5770**DCL      5770--REDEF
F$DCB.FLDID
      5795**DCL      5795--REDEF
F$DCB.FORM$
      5789**DCL      5789--REDEF
F$DCB.FSECT
      5805**DCL      5805--REDEF
F$DCB.FSN#
      5782**DCL      5782--REDEF    5782--REDEF    5783--REDEF
F$DCB.HEADER$
      5788**DCL      5788--REDEF
F$DCB.IXTNSIZE#
      5786**DCL      5786--REDEF
F$DCB.LASTSTA$
      5775**DCL      5775--REDEF
F$DCB.LVL
      5801**DCL      5801--REDEF
F$DCB.NAME#.C
      5776**DCL      5776--REDEF
PL6.E3A0      #009=XBI$WRITE_MESSAGE File=xbi_error:6.:XBC3TSI                   WED 08/20/97 14:24 Page:57   
F$DCB.NOEOF
      5798**DCL      5798--REDEF
F$DCB.NRECS#
      5787**DCL      5787--REDEF
F$DCB.NRECX
      5806**DCL      5806--REDEF
F$DCB.OHDR
      5798**DCL      5798--REDEF
F$DCB.ORG#
      5781**DCL      5781--REDEF
F$DCB.PRECNO
      5804**DCL      5804--REDEF
F$DCB.RCSZ
      5810**DCL      5810--REDEF
F$DCB.RES#
      5777**DCL      5777--REDEF
F$DCB.SETX
      5789**DCL      5789--REDEF
F$DCB.TAB$
      5789**DCL      5789--REDEF
F$DCB.TDA
      5803**DCL      5804--REDEF
F$DCB.WIDTH#
      5773**DCL      5834>>ASSIGN
F$DCB.WSN#
      5777**DCL      5777--REDEF
FIRST
      5816**DCL      5858<<ASSIGN   5859>>CALLBLT  5860>>IF       5860>>CALLBLT  5861>>CALLBLT  5861>>CALLBLT
      5863>>ASSIGN
FPT$WRITE_TEXT
      5714**DCL      5831>>ASSIGN
FPT$WRITE_TEXT.STATION_
      5716**DCL      5716--REDEF
FPT$WRITE_TEXT.V
      5717**DCL      5714--DCLINIT
FPT$WRITE_TEXT.V.DVBYTE.VFC#
PL6.E3A0      #009=XBI$WRITE_MESSAGE File=xbi_error:6.:XBC3TSI                   WED 08/20/97 14:24 Page:58   
      5723**DCL      5723--REDEF
FPT_WRITE_TEXT
      5745**DCL      5831<<ASSIGN   5845<>CALL     5864<>CALL
FPT_WRITE_TEXT.BUF_
      5745**DCL      5844<<ASSIGN   5863<<ASSIGN
FPT_WRITE_TEXT.STATION_
      5747**DCL      5747--REDEF
FPT_WRITE_TEXT.V
      5748**DCL      5831--ASSIGN
FPT_WRITE_TEXT.V.DCB#
      5748**DCL      5832<<ASSIGN
FPT_WRITE_TEXT.V.DVBYTE.VFC#
      5754**DCL      5754--REDEF
FPT_WRITE_TEXT.V_
      5745**DCL      5831<<ASSIGN
JUNK
      5819**DCL      5833<<CALLBLT
LAST
      5818**DCL      5833<<CALLBLT  5857>>DOWHILE
M$WRITE
      5544**DCL-ENT  5845--CALL     5864--CALL
NEXT
      5817**DCL      5839<<ASSIGN   5841<<CALLBLT  5843>>ASSIGN   5843>>ASSIGN   5844>>ASSIGN   5857>>DOWHILE
      5858>>ASSIGN   5859<<CALLBLT  5860>>IF       5860<<CALLBLT  5861>>CALLBLT  5863>>ASSIGN
OFFSET
      5695**DCL         7--PROC     5849>>ASSIGN   5861>>CALLBLT  5863>>ASSIGN
OUTPUT_BUFFER
      5821**DCL      5842<<ASSIGN   5843<<ASSIGN   5844--ASSIGN   5856<<ASSIGN   5861<<CALLBLT  5862<<ASSIGN
      5863--ASSIGN
SEARCH_TABLE
      5822**DCL      5833>>CALLBLT
TEXT
      5691**DCL         7--PROC
TEXT.SIZE
      5692**DCL      5693--IMP-SIZ  5830>>IF       5833>>CALLBLT  5833>>CALLBLT  5837>>ASSIGN   5838>>IF
      5841>>CALLBLT  5843>>ASSIGN   5859>>CALLBLT  5860>>CALLBLT  5861>>CALLBLT
PL6.E3A0      #009=XBI$WRITE_MESSAGE File=xbi_error:6.:XBC3TSI                   WED 08/20/97 14:24 Page:59   
TEXT.STRING
      5693**DCL      5833>>CALLBLT  5841>>CALLBLT  5843>>ASSIGN   5859>>CALLBLT  5860>>CALLBLT  5861>>CALLBLT
WIDTH
      5820**DCL      5834<<ASSIGN   5835>>IF       5835<<ASSIGN   5836<<ASSIGN   5836>>ASSIGN   5837<<ASSIGN
      5837>>ASSIGN   5838>>IF       5839>>ASSIGN   5841>>CALLBLT  5849<<ASSIGN   5849>>ASSIGN   5859>>CALLBLT
XBI_SET_ERRNO
      5824**DCL-ENT  5846--CALL     5865--CALL
