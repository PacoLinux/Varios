VERSION E05

PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:1    
        1        1        /*M*    CPR$RPTERR  subroutine used to report errors to the user              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /*P*    NAME: CPR$RPTERR
        9        9                PURPOSE: To provide multiple error reporting per command */
       10       10        /******************************************************************************/
       11       11        CPR$RPTERR:
       12       12                PROC (ERR_BLK,OFFSET);
       13       13        /***** include files *****/
       14       14          %INCLUDE CP_6;
       15       95          %INCLUDE CP_6_SUBS;
       16      635          %INCLUDE CP_SUBS_C;
       17     1552          %INCLUDE CP_PERR_C;
       18     1890          %INCLUDE CP_MACROS_C;
       19     2642          %INCLUDE NK_VFC_C;
       20     2716          %INCLUDE XU_MACRO_C;
       21     5822          %INCLUDE CP_DATA_R;
       22     8385        /***** Parameters *****/
       23     8386          %ERR_BLK (NAME=ERR_BLK,STCLASS=" ");
       24     8411    1     DCL OFFSET UBIN WORD;
       25     8412        /***** fpts *****/
       26     8413          %SEG$2;
       27     8473          %ERR_CODE;
       28     8493          %XUG_GETCMD (NAME=GET$CMD, STCLASS=BASED) ;
       29     8831        /***** external routines *****/
       30     8832        %INCLUDE CXG_ENTRY ;
       31     8844    1   DCL CPC$WRITEMSGE ENTRY (6);
       32     8845    1   DCL CPC$OPEN_DO ENTRY;
       33     8846    1   DCL CPC$OPEN_LL ENTRY;
       34     8847        /***** local variables *****/
       35     8848    1   DCL INDX UBIN WORD;
       36     8849        /*E*    ERROR:   CPR-E$TMERRS-0
       37     8850                MESSAGE: Too many errors on above statement
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:2    
       38     8851        */
       39     8852        /*E*    ERROR:   CPR-E$NOERRS-0
       40     8853                MESSAGE: No error messages available
       41     8854        */
       42     8855        %ERR_CODE (NAME=E_TMERRS,MID#=CPR$IBEXMID,CODE#=E$TMERRS,STCLASS=CONSTANT);
       43     8875        %ERR_CODE (NAME=E_NOERRS,MID#=CPR$IBEXMID,CODE#=E$NOERRS,STCLASS=CONSTANT);
       44     8895        %EJECT;
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:3    
       45     8896    1           IF ERR_BLK.FIRST = 0   /* no errors */
       46     8897    1           THEN
       47     8898    1              RETURN;
       48     8899        /**/
       49     8900    1   CPR$RPTERR_2:
       50     8901    1           ENTRY (ERR_BLK,OFFSET);
       51     8902    1           IF SEG$2.FLAGS.SKIP_ERRS /* skip errors */
       52     8903    1              THEN
       53     8904    1                 RETURN;
       54     8905    1           IF ERR_BLK.FIRST = 0 /* no errors */
       55     8906    1           THEN
       56     8907    2              DO; /* write NO ERRORS msg */
       57     8908    2                 CALL CPC$WRITEMSGE (E_NOERRS);
       58     8909    2                 RETURN;
       59     8910    2              END;
       60     8911        /*
       61     8912             ***** Get M$LL ...
       62     8913        */
       63     8914    1           CALL CPC$OPEN_LL;
       64     8915    1           CALL CPC$OPEN_DO;
       65     8916    1           SEG$2.GETCMD$->GET$CMD.DCB_PARAM# = %M$DO#;
       66     8917    1           SEG$2.GETCMD$->GET$CMD.DCB2_PARAM# = SEG$2.LLDCB# ;
       67     8918    1           SEG$2.GETCMD$->GET$CMD.ERRMSG_VFC# = %VFC_TRANSITION1 ;
       68     8919        /**/
       69     8920    1           INDX = ERR_BLK.FIRST; /* first error */
       70     8921    2           DO WHILE (INDX ~= 0);
       71     8922    2              ERR_CODE = ERR_BLK.BLK.ERROR(INDX);
       72     8923    2              SEG$2.GETCMD$->GET$CMD.ERR_CODE = ERR_CODE ;
       73     8924    2              SEG$2.GETCMD$->GET$CMD.ERRDCB# = ERR_BLK.BLK.DCB#(INDX);
       74     8925    2              SEG$2.GETCMD$->GET$CMD.EPOS# = ERR_BLK.BLK.CHARPOS(INDX)+OFFSET;
       75     8926    2              SEG$2.GETCMD$->GET$CMD.USE_EPOS# = '1'B ;
       76     8927        /*
       77     8928             ***** Some of the monitor errors are only for informational
       78     8929                   purposes and should not cause the user to be aborted.
       79     8930                   Any IBEX error code > 1199 is also informational ...
       80     8931        */
       81     8932    2              IF (ERR_CODE.MON AND ERR_CODE.SEV > 0)
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:4    
       82     8933    2               OR (ERR_CODE.CODE < 1200 AND ERR_CODE.FCG = IBEXFCG)
       83     8934    2               OR (ERR_CODE.FCG ~= IBEXFCG)
       84     8935    2                 THEN   /* Not an informational error */
       85     8936    2                    SEG$2.FLAGS.ABORT = %YES#;
       86     8937        /**/
       87     8938    2              IF SEG$2.GETCMD$ -> GET$CMD.EPOS# < 511
       88     8939    2                THEN
       89     8940    2                 CALL CXG$ERRPTR (SEG$2.GETCMD$ -> GET$CMD);
       90     8941
       91     8942    2              CALL CXG$ERRMSG (SEG$2.GETCMD$->GET$CMD) ALTRET(TRY_HELP);
       92     8943        /**/
       93     8944    2              ERR_BLK.BLK.ERROR(INDX) = ERR_CODE;
       94     8945    2              INDX = ERR_BLK.BLK.LINK(INDX);
       95     8946    2           END;   /* Do while ... end */
       96     8947    2              DO WHILE (%NO#);
       97     8948    2   TRY_HELP:
       98     8949    2                 CALL CPC$WRITEMSGE (E_NOERRS);
       99     8950    2                 ERR_BLK.FIRST = 0;   /* No more messages avail */
      100     8951    2                 RETURN;
      101     8952    2              END;   /* Do while ...end */
      102     8953        /**/
      103     8954    1           IF ERR_BLK.NEXT >= ERR_BLK.SIZE
      104     8955    1              THEN   /* Too many errors */
      105     8956    1                 CALL CPC$WRITEMSGE (E_TMERRS);
      106     8957        /**/
      107     8958    1           RETURN;
      108     8959    1   END CPR$RPTERR;

PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:5    
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPR$RPTERR.

   Procedure CPR$RPTERR requires 128 words for executable code.
   Procedure CPR$RPTERR requires 10 words of local(AUTO) storage.

    No errors detected in file CPR$RPTERR.:E05TSI    .

PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:6    

 Object Unit name= CPR$RPTERR                                 File name= CPR$RPTERR.:E05TOU
 UTS= JUL 29 '97 12:04:13.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  CPR$RPTERR
    2   Proc  even  none   128    200  CPR$RPTERR
    3  RoData even  none     2      2  CPR$RPTERR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  CPR$RPTERR
     2      7                  yes      Std        2  CPR$RPTERR_2

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       6 CPC$WRITEMSGE
         yes           Std       0 CPC$OPEN_DO
 yes     yes           Std       1 CXG$ERRMSG
         yes           Std       0 CPC$OPEN_LL
 yes     yes           Std       1 CXG$ERRPTR
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    SEG2$                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:8    


        1        1        /*M*    CPR$RPTERR  subroutine used to report errors to the user              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /*P*    NAME: CPR$RPTERR
        9        9                PURPOSE: To provide multiple error reporting per command */
       10       10        /******************************************************************************/
       11       11        CPR$RPTERR:
       12       12                PROC (ERR_BLK,OFFSET);

     12  2 000000   000000 700200 xent  CPR$RPTERR   TSX0  ! X66_AUTO_2
         2 000001   000012 000002                    ZERO    10,2

       13       13        /***** include files *****/
       14       14          %INCLUDE CP_6;
       15       95          %INCLUDE CP_6_SUBS;
       16      635          %INCLUDE CP_SUBS_C;
       17     1552          %INCLUDE CP_PERR_C;
       18     1890          %INCLUDE CP_MACROS_C;
       19     2642          %INCLUDE NK_VFC_C;
       20     2716          %INCLUDE XU_MACRO_C;
       21     5822          %INCLUDE CP_DATA_R;
       22     8385        /***** Parameters *****/
       23     8386          %ERR_BLK (NAME=ERR_BLK,STCLASS=" ");
       24     8411    1     DCL OFFSET UBIN WORD;
       25     8412        /***** fpts *****/
       26     8413          %SEG$2;
       27     8473          %ERR_CODE;
       28     8493          %XUG_GETCMD (NAME=GET$CMD, STCLASS=BASED) ;
       29     8831        /***** external routines *****/
       30     8832        %INCLUDE CXG_ENTRY ;
       31     8844    1   DCL CPC$WRITEMSGE ENTRY (6);
       32     8845    1   DCL CPC$OPEN_DO ENTRY;
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:9    
       33     8846    1   DCL CPC$OPEN_LL ENTRY;
       34     8847        /***** local variables *****/
       35     8848    1   DCL INDX UBIN WORD;
       36     8849        /*E*    ERROR:   CPR-E$TMERRS-0
       37     8850                MESSAGE: Too many errors on above statement
       38     8851        */
       39     8852        /*E*    ERROR:   CPR-E$NOERRS-0
       40     8853                MESSAGE: No error messages available
       41     8854        */
       42     8855        %ERR_CODE (NAME=E_TMERRS,MID#=CPR$IBEXMID,CODE#=E$TMERRS,STCLASS=CONSTANT);
       43     8875        %ERR_CODE (NAME=E_NOERRS,MID#=CPR$IBEXMID,CODE#=E$NOERRS,STCLASS=CONSTANT);
       44     8895        %EJECT;
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:10   
       45     8896    1           IF ERR_BLK.FIRST = 0   /* no errors */

   8896  2 000002   200003 470500                    LDP0    @ERR_BLK,,AUTO
         2 000003   000001 235100                    LDA     1,,PR0
         2 000004   000006 601000 2                  TNZ     s:8898+1

       46     8897    1           THEN
       47     8898    1              RETURN;

   8898  2 000005   000000 702200 xent               TSX2  ! X66_ARET
         2 000006   000011 710000 2                  TRA     s:8902

       48     8899        /**/
       49     8900    1   CPR$RPTERR_2:
       50     8901    1           ENTRY (ERR_BLK,OFFSET);

   8901  2 000007   000000 700200 xent  CPR$RPTERR_2 TSX0  ! X66_AUTO_2
         2 000010   000012 000002                    ZERO    10,2

       51     8902    1           IF SEG$2.FLAGS.SKIP_ERRS /* skip errors */

   8902  2 000011   000000 470400 xsym               LDP0    SEG2$
         2 000012   000000 236100                    LDQ     0,,PR0
         2 000013   004000 316003                    CANQ    2048,DU
         2 000014   000016 600000 2                  TZE     s:8905

       52     8903    1              THEN
       53     8904    1                 RETURN;

   8904  2 000015   000000 702200 xent               TSX2  ! X66_ARET

       54     8905    1           IF ERR_BLK.FIRST = 0 /* no errors */

   8905  2 000016   200003 471500                    LDP1    @ERR_BLK,,AUTO
         2 000017   100001 235100                    LDA     1,,PR1
         2 000020   000026 601000 2                  TNZ     s:8914

PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:11   
       55     8906    1           THEN
       56     8907    2              DO; /* write NO ERRORS msg */

       57     8908    2                 CALL CPC$WRITEMSGE (E_NOERRS);

   8908  2 000021   000000 630400 3                  EPPR0   0
         2 000022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000023   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000024   000000 011000                    NOP     0

       58     8909    2                 RETURN;

   8909  2 000025   000000 702200 xent               TSX2  ! X66_ARET

       59     8910    2              END;
       60     8911        /*
       61     8912             ***** Get M$LL ...
       62     8913        */
       63     8914    1           CALL CPC$OPEN_LL;

   8914  2 000026   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000027   000000 701000 xent               TSX1    CPC$OPEN_LL
         2 000030   000000 011000                    NOP     0

       64     8915    1           CALL CPC$OPEN_DO;

   8915  2 000031   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000032   000000 701000 xent               TSX1    CPC$OPEN_DO
         2 000033   000000 011000                    NOP     0

       65     8916    1           SEG$2.GETCMD$->GET$CMD.DCB_PARAM# = %M$DO#;

   8916  2 000034   000000 470400 xsym               LDP0    SEG2$
         2 000035   000173 471500                    LDP1    123,,PR0
         2 000036   000004 235007                    LDA     4,DL
         2 000037   100014 755100                    STA     12,,PR1

PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:12   
       66     8917    1           SEG$2.GETCMD$->GET$CMD.DCB2_PARAM# = SEG$2.LLDCB# ;

   8917  2 000040   000173 471500                    LDP1    123,,PR0
         2 000041   000000 236100                    LDQ     0,,PR0
         2 000042   777777 376007                    ANQ     -1,DL
         2 000043   100015 756100                    STQ     13,,PR1

       67     8918    1           SEG$2.GETCMD$->GET$CMD.ERRMSG_VFC# = %VFC_TRANSITION1 ;

   8918  2 000044   000173 471500                    LDP1    123,,PR0
         2 000045   037000 236003                    LDQ     15872,DU
         2 000046   100007 552140                    STBQ    7,'40'O,PR1

       68     8919        /**/
       69     8920    1           INDX = ERR_BLK.FIRST; /* first error */

   8920  2 000047   200003 471500                    LDP1    @ERR_BLK,,AUTO
         2 000050   100001 235100                    LDA     1,,PR1
         2 000051   200006 755100                    STA     INDX,,AUTO

       70     8921    2           DO WHILE (INDX ~= 0);

   8921  2 000052   000157 600000 2                  TZE     s:8947

       71     8922    2              ERR_CODE = ERR_BLK.BLK.ERROR(INDX);

   8922  2 000053   200006 235100                    LDA     INDX,,AUTO
         2 000054   000001 735000                    ALS     1
         2 000055   200003 470500                    LDP0    @ERR_BLK,,AUTO
         2 000056   000004 236105                    LDQ     4,AL,PR0
         2 000057   200005 756100                    STQ     ERR_CODE,,AUTO

       72     8923    2              SEG$2.GETCMD$->GET$CMD.ERR_CODE = ERR_CODE ;

   8923  2 000060   000000 471400 xsym               LDP1    SEG2$
         2 000061   100173 473500                    LDP3    123,,PR1
         2 000062   300010 756100                    STQ     8,,PR3
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:13   

       73     8924    2              SEG$2.GETCMD$->GET$CMD.ERRDCB# = ERR_BLK.BLK.DCB#(INDX);

   8924  2 000063   100173 473500                    LDP3    123,,PR1
         2 000064   000003 236105                    LDQ     3,AL,PR0
         2 000065   000011 772000                    QRL     9
         2 000066   000777 376007                    ANQ     511,DL
         2 000067   300011 756100                    STQ     9,,PR3

       74     8925    2              SEG$2.GETCMD$->GET$CMD.EPOS# = ERR_BLK.BLK.CHARPOS(INDX)+OFFSET;

   8925  2 000070   100173 473500                    LDP3    123,,PR1
         2 000071   200004 474500                    LDP4    @OFFSET,,AUTO
         2 000072   000003 236105                    LDQ     3,AL,PR0
         2 000073   000033 772000                    QRL     27
         2 000074   400000 036100                    ADLQ    0,,PR4
         2 000075   000000 620006                    EAX0    0,QL
         2 000076   300006 440100                    SXL0    6,,PR3

       75     8926    2              SEG$2.GETCMD$->GET$CMD.USE_EPOS# = '1'B ;

   8926  2 000077   100173 473500                    LDP3    123,,PR1
         2 000100   400000 236003                    LDQ     -131072,DU
         2 000101   300006 256100                    ORSQ    6,,PR3

       76     8927        /*
       77     8928             ***** Some of the monitor errors are only for informational
       78     8929                   purposes and should not cause the user to be aborted.
       79     8930                   Any IBEX error code > 1199 is also informational ...
       80     8931        */
       81     8932    2              IF (ERR_CODE.MON AND ERR_CODE.SEV > 0)

   8932  2 000102   200005 236100                    LDQ     ERR_CODE,,AUTO
         2 000103   400000 316007                    CANQ    -131072,DL
         2 000104   000107 600000 2                  TZE     s:8932+5
         2 000105   000007 316007                    CANQ    7,DL
         2 000106   000123 601000 2                  TNZ     s:8936
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:14   
         2 000107   200005 236100                    LDQ     ERR_CODE,,AUTO
         2 000110   377770 376007                    ANQ     131064,DL
         2 000111   022600 116007                    CMPQ    9600,DL
         2 000112   000117 603000 2                  TRC     s:8932+13
         2 000113   200005 236100                    LDQ     ERR_CODE,,AUTO
         2 000114   777700 376003                    ANQ     -64,DU
         2 000115   032000 116003                    CMPQ    13312,DU
         2 000116   000123 600000 2                  TZE     s:8936
         2 000117   200005 236100                    LDQ     ERR_CODE,,AUTO
         2 000120   777700 376003                    ANQ     -64,DU
         2 000121   032000 116003                    CMPQ    13312,DU
         2 000122   000125 600000 2                  TZE     s:8938

       82     8933    2               OR (ERR_CODE.CODE < 1200 AND ERR_CODE.FCG = IBEXFCG)
       83     8934    2               OR (ERR_CODE.FCG ~= IBEXFCG)
       84     8935    2                 THEN   /* Not an informational error */
       85     8936    2                    SEG$2.FLAGS.ABORT = %YES#;

   8936  2 000123   000400 236003                    LDQ     256,DU
         2 000124   100000 256100                    ORSQ    0,,PR1

       86     8937        /**/
       87     8938    2              IF SEG$2.GETCMD$ -> GET$CMD.EPOS# < 511

   8938  2 000125   100173 473500                    LDP3    123,,PR1
         2 000126   300006 720100                    LXL0    6,,PR3
         2 000127   000777 100003                    CMPX0   511,DU
         2 000130   000136 603000 2                  TRC     s:8942

       88     8939    2                THEN
       89     8940    2                 CALL CXG$ERRPTR (SEG$2.GETCMD$ -> GET$CMD);

   8940  2 000131   200010 453500                    STP3    INDX+2,,AUTO
         2 000132   200010 630500                    EPPR0   INDX+2,,AUTO
         2 000133   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000134   000000 701000 xent               TSX1    CXG$ERRPTR
         2 000135   000000 011000                    NOP     0
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:15   

       90     8941
       91     8942    2              CALL CXG$ERRMSG (SEG$2.GETCMD$->GET$CMD) ALTRET(TRY_HELP);

   8942  2 000136   000000 470400 xsym               LDP0    SEG2$
         2 000137   000173 471500                    LDP1    123,,PR0
         2 000140   200010 451500                    STP1    INDX+2,,AUTO
         2 000141   200010 630500                    EPPR0   INDX+2,,AUTO
         2 000142   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000143   000000 701000 xent               TSX1    CXG$ERRMSG
         2 000144   000160 702000 2                  TSX2    TRY_HELP

       92     8943        /**/
       93     8944    2              ERR_BLK.BLK.ERROR(INDX) = ERR_CODE;

   8944  2 000145   200006 235100                    LDA     INDX,,AUTO
         2 000146   000001 735000                    ALS     1
         2 000147   200005 236100                    LDQ     ERR_CODE,,AUTO
         2 000150   200003 470500                    LDP0    @ERR_BLK,,AUTO
         2 000151   000004 756105                    STQ     4,AL,PR0

       94     8945    2              INDX = ERR_BLK.BLK.LINK(INDX);

   8945  2 000152   000003 236105                    LDQ     3,AL,PR0
         2 000153   000022 772000                    QRL     18
         2 000154   000777 376007                    ANQ     511,DL
         2 000155   200006 756100                    STQ     INDX,,AUTO

       95     8946    2           END;   /* Do while ... end */

   8946  2 000156   000053 601000 2                  TNZ     s:8922

       96     8947    2              DO WHILE (%NO#);

   8947  2 000157   000167 710000 2                  TRA     s:8954

       97     8948    2   TRY_HELP:
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:16   
       98     8949    2                 CALL CPC$WRITEMSGE (E_NOERRS);

   8949  2 000160   000000 630400 3     TRY_HELP     EPPR0   0
         2 000161   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000162   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000163   000000 011000                    NOP     0

       99     8950    2                 ERR_BLK.FIRST = 0;   /* No more messages avail */

   8950  2 000164   200003 470500                    LDP0    @ERR_BLK,,AUTO
         2 000165   000001 450100                    STZ     1,,PR0

      100     8951    2                 RETURN;

   8951  2 000166   000000 702200 xent               TSX2  ! X66_ARET

      101     8952    2              END;   /* Do while ...end */

      102     8953        /**/
      103     8954    1           IF ERR_BLK.NEXT >= ERR_BLK.SIZE

   8954  2 000167   200003 470500                    LDP0    @ERR_BLK,,AUTO
         2 000170   000002 236100                    LDQ     2,,PR0
         2 000171   000000 116100                    CMPQ    0,,PR0
         2 000172   000177 602000 2                  TNC     s:8958

      104     8955    1              THEN   /* Too many errors */
      105     8956    1                 CALL CPC$WRITEMSGE (E_TMERRS);

   8956  2 000173   000001 630400 3                  EPPR0   1
         2 000174   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000175   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000176   000000 011000                    NOP     0

      106     8957        /**/
      107     8958    1           RETURN;

PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:17   
   8958  2 000177   000000 702200 xent               TSX2  ! X66_ARET
      108     8959    1   END CPR$RPTERR;

PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:18   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPR$RPTERR.
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:19   

 **** Variables and constants ****

  ****  Section 001 RoData CPR$RPTERR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w STRC        r     1 E_NOERRS                   0-0-0/w STRC        r     1 E_TMERRS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ERR_BLK                   4-0-0/w PTR         r     1 @OFFSET
    *0-0-0/w STRC(828)   r     1 ERR_BLK                    5-0-0/w STRC        r     1 ERR_CODE
     6-0-0/w UBIN        r     1 INDX                      *0-0-0/w UBIN        r     1 OFFSET

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1512)  r     1 GET$CMD                    0-0-0/w STRC(6264)  r     1 SEG$2


   Procedure CPR$RPTERR requires 128 words for executable code.
   Procedure CPR$RPTERR requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:20   

    No errors detected in file CPR$RPTERR.:E05TSI    .
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:21   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:22   
          MINI XREF LISTING

CAMR_REC.ACSVEH_
      7357**DCL      7358--REDEF
CAMR_REC.ALTKEYS_
      7363**DCL      7364--REDEF    7364--REDEF
CAMR_REC.HDR_
      7362**DCL      7363--REDEF
CAMR_REC.TAB_
      7361**DCL      7362--REDEF
CAMR_REC.UHL_
      7355**DCL      7356--REDEF    7356--REDEF
CAMR_REC.V.FSN#
      7395**DCL      7395--REDEF    7395--REDEF
CAMR_REC.WSN_
      7361**DCL      7361--REDEF
CFPT_CLOSE.SN_
      6199**DCL      6199--REDEF
CFPT_CLOSE.UTL_
      6200**DCL      6200--REDEF
CFPT_CLOSE.V.EXPIRE#
      6214**DCL      6214--REDEF
CFPT_CLOSE.V.TYPE#
      6212**DCL      6212--REDEF
CFPT_CLOSE.V.XTNSIZE#
      6209**DCL      6209--REDEF    6211--REDEF
CFPT_OPEN.ACSVEH_
      6134**DCL      6135--REDEF
CFPT_OPEN.ALTKEYS_
      6140**DCL      6141--REDEF    6141--REDEF
CFPT_OPEN.HDR_
      6139**DCL      6140--REDEF
CFPT_OPEN.TAB_
      6138**DCL      6139--REDEF
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:23   
CFPT_OPEN.UHL_
      6132**DCL      6133--REDEF    6133--REDEF
CFPT_OPEN.V.FSN#
      6172**DCL      6172--REDEF    6172--REDEF
CFPT_OPEN.WSN_
      6138**DCL      6138--REDEF
CFPT_READ.STATION_
      6238**DCL      6239--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      6250**DCL      6250--REDEF
CFPT_READ.V.INDX#
      6248**DCL      6248--REDEF
CFPT_READUC.STATION_
      6608**DCL      6609--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      6620**DCL      6620--REDEF
CFPT_READUC.V.INDX#
      6618**DCL      6618--REDEF
CFPT_TRTN.V.IR#
      6844**DCL      6845--REDEF
CFPT_WRITE.STATION_
      6276**DCL      6276--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      6283**DCL      6283--REDEF
CFPT_WRITEUC.STATION_
      6576**DCL      6576--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      6583**DCL      6583--REDEF
CFPT_XXX.V.STEPCC#
      7556**DCL      7556--REDEF
CGETCMD.OUT$
      7577**DCL      7583--REDEF
CPC$OPEN_DO
      8845**DCL-ENT  8915--CALL
CPC$OPEN_LL
      8846**DCL-ENT  8914--CALL
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:24   
CPC$WRITEMSGE
      8844**DCL-ENT  8908--CALL     8949--CALL     8956--CALL
CVLP_TRMCTL.BREAKCOUNT
      7168**DCL      7169--REDEF
CVLP_WINDOW.FWINDOW#
      7264**DCL      7264--REDEF    7265--REDEF
CXG$ERRMSG
      8840**DCL-ENT  8942--CALL
CXG$ERRPTR
      8839**DCL-ENT  8940--CALL
ERR_BLK
      8400**DCL        11--PROC     8900--ENTRY
ERR_BLK.BLK.CHARPOS
      8405**DCL      8925>>ASSIGN
ERR_BLK.BLK.DCB#
      8407**DCL      8924>>ASSIGN
ERR_BLK.BLK.ERROR
      8409**DCL      8922>>ASSIGN   8944<<ASSIGN
ERR_BLK.BLK.LINK
      8406**DCL      8945>>ASSIGN
ERR_BLK.FIRST
      8402**DCL      8896>>IF       8905>>IF       8920>>ASSIGN   8950<<ASSIGN
ERR_BLK.NEXT
      8403**DCL      8954>>IF
ERR_BLK.SIZE
      8401**DCL      8954>>IF
ERR_CODE
      8486**DCL      8922<<ASSIGN   8923>>ASSIGN   8944>>ASSIGN
ERR_CODE.CODE
      8490**DCL      8932>>IF
ERR_CODE.FCG
      8487**DCL      8932>>IF       8932>>IF
ERR_CODE.MON
      8489**DCL      8932>>IF
ERR_CODE.SEV
      8491**DCL      8932>>IF
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:25   
E_NOERRS
      8888**DCL      8908<>CALL     8949<>CALL
E_TMERRS
      8868**DCL      8956<>CALL
GET$CMD
      8506**DCL      8940<>CALL     8942<>CALL
GET$CMD.DCB2_PARAM#
      8691**DCL      8917<<ASSIGN
GET$CMD.DCB_PARAM#
      8686**DCL      8916<<ASSIGN
GET$CMD.EPOS#
      8616**DCL      8925<<ASSIGN   8938>>IF
GET$CMD.ERRDCB#
      8665**DCL      8924<<ASSIGN
GET$CMD.ERRMSG_VFC#
      8621**DCL      8918<<ASSIGN
GET$CMD.ERR_CODE
      8654**DCL      8923<<ASSIGN
GET$CMD.OUT$
      8511**DCL      8517--REDEF
GET$CMD.USE_EPOS#
      8549**DCL      8926<<ASSIGN
INDX
      8848**DCL      8920<<ASSIGN   8921>>DOWHILE  8922>>ASSIGN   8924>>ASSIGN   8925>>ASSIGN   8944>>ASSIGN
      8945<<ASSIGN   8945>>ASSIGN
OFFSET
      8411**DCL        11--PROC     8900--ENTRY    8925>>ASSIGN
SEG$2.FLAGS.ABORT
      8425**DCL      8936<<ASSIGN
SEG$2.FLAGS.SKIP_ERRS
      8422**DCL      8902>>IF
SEG$2.GETCMD$
      8460**DCL      8916>>ASSIGN   8917>>ASSIGN   8918>>ASSIGN   8923>>ASSIGN   8924>>ASSIGN   8925>>ASSIGN
      8926>>ASSIGN   8938>>IF       8940>>CALL     8942>>CALL
SEG$2.LLDCB#
      8434**DCL      8917>>ASSIGN
PL6.E3A0      #001=CPR$RPTERR File=CPR$RPTERR.:E05TSI                            TUE 07/29/97 12:04 Page:26   
SEG2$
      8311**DCL      8414--IMP-PTR  8902>>IF       8916>>ASSIGN   8917>>ASSIGN   8917>>ASSIGN   8918>>ASSIGN
      8923>>ASSIGN   8924>>ASSIGN   8925>>ASSIGN   8926>>ASSIGN   8936>>ASSIGN   8938>>IF       8940>>CALL
      8942>>CALL
TRY_HELP
      8949**LABEL    8942--CALLALT
