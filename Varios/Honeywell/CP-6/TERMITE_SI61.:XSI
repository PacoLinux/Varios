/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
TERMITE:  PROC MAIN NOAUTO;
%INCLUDE TERMITE_C61;
%INCLUDE CP_6;
 %B$TCB;
 %B$ALT;
 %FPT_CMDVAR(FPTN=FPT_CMDVAR,STCLASS=CONSTANT,
    FUN=STORE,
    NAME=VARNAME,
    VALUE=VARVALUE);
 %VLP_NAME(FPTN=VARNAME,STCLASS=STATIC,
    LEN=31);
 %VLP_NAME(FPTN=VARVALUE,STCLASS=STATIC,
    LEN=511);
 %FPT_TRMATTR(FPTN=FPT_TRMATTR,STCLASS=STATIC,
    DCB=M$SI,
    TRMATTR=VLP_TRMATTR);
 %VLP_TRMATTR(FPTN=VLP_TRMATTR,STCLASS=STATIC);
 %FPT_TRMCTL(FPTN=FPT_TRMCTL,STCLASS=STATIC,
    DCB=M$SI);
 %VLP_WINDOW(FPTN=VLP_WINDOW,STCLASS=STATIC);
 %VLP_TRMCTL(FPTN=VLP_TRMCTL,STCLASS=STATIC);
 %VLP_EDTCTL(FPTN=VLP_EDTCTL,STCLASS=STATIC);
%INCLUDE CP_6_SUBS;
%INCLUDE B$JIT;
 
%INCLUDE XU_MACRO_C;
 %P_PCB(NAME=PCB,STCLASS=STATIC,
    R=TERMITE_NODES,
    W=WORK,
    WSZ=1024);
 %PARSE$OUT(NAME=OUT$BLK,STCLASS=BASED);
 %PARSE$SYM(NAME=OUT$SYM,STCLASS="BASED(SYM$)");
 
DCL M$SI DCB;
DCL M$LO DCB;
DCL M$DO DCB;
DCL B$JIT$ PTR SYMREF;
DCL B$TCB$ PTR SYMREF;
DCL X$PARSE ENTRY(1) ALTRET;
DCL SYM$ PTR;
DCL TERMITE_NODES UBIN WORD SYMREF;
DCL WORK(0:1023) UBIN STATIC;
 
%VLP_NAMEV(FPTN=TEXTC,STCLASS=BASED);
%VLP_NAME(FPTN=YES,LEN=3,NAME='YES');
%VLP_NAME(FPTN=NO,LEN=2,NAME='NO');
 
DCL TEMP_UBIN UBIN;
DCL TEMP_FLAG BIT(1) ALIGNED;
DCL I UBIN;
 
    PCB.TEXT$=PINCRC(ADDR(B$JIT.CCBUF),B$JIT.CCDISP);
    PCB.NCHARS=B$JIT.CCARS-B$JIT.CCDISP;
    CALL X$PARSE(PCB)
    WHENALTRETURN DO;
        CALL ERR_PROC(2);
        GOTO RET;
        END;
 
    FPT_TRMCTL.TRMCTL_=VECTOR(VLP_WINDOW);
    FPT_TRMCTL.V.VLPTYPE#=%TRMCTL_WINDOW#;
    CALL M$GTRMCTL(FPT_TRMCTL) ALTRET(E_MONSER);
 
    FPT_TRMCTL.TRMCTL_=VECTOR(VLP_TRMCTL);
    FPT_TRMCTL.V.VLPTYPE#=%TRMCTL_TRMCTL#;
    CALL M$GTRMCTL(FPT_TRMCTL) ALTRET(E_MONSER);
 
    FPT_TRMCTL.TRMCTL_=VECTOR(VLP_EDTCTL);
    FPT_TRMCTL.V.VLPTYPE#=%TRMCTL_EDTCTL#;
    CALL M$GTRMCTL(FPT_TRMCTL) ALTRET(E_MONSER);
 
    CALL M$GTRMATTR(FPT_TRMATTR) ALTRET(E_MONSER);
 
    DO I=0 TO PCB.OUT$->OUT$BLK.NSUBLKS-1;
        SYM$=PCB.OUT$->OUT$BLK.SUBLK$(I);
        VARNAME.L#=OUT$SYM.TEXTC$->TEXTC.L#;
        VARNAME.NAME#=OUT$SYM.TEXTC$->TEXTC.NAME#;
        DO CASE(OUT$SYM.CODE);
%EJECT;
/*          From VLP_WINDOW */
        CASE(%BTMBRDR);
            TEMP_FLAG=VLP_WINDOW.BTMBRDR#;
            CALL YESNO;
        CASE(%FWINDOW);
            VARVALUE.NAME#=VLP_WINDOW.FWINDOW#;
            CALL STRIP;
        CASE(%HBRDRCHR);
            VARVALUE.NAME#=VLP_WINDOW.HBRDRCHR#;
            CALL STRIP;
        CASE(%HBRDRSIZ);
            TEMP_UBIN=VLP_WINDOW.HBRDRSIZ#;
            CALL BTOD;
        CASE(%WLENGTH);
            TEMP_UBIN=VLP_WINDOW.LENGTH#;
            CALL BTOD;
        CASE(%LFTBRDR);
            TEMP_FLAG=VLP_WINDOW.LFTBRDR#;
            CALL YESNO;
        CASE(%MINLENGTH);
            TEMP_UBIN=VLP_WINDOW.MINLENGTH#;
            CALL BTOD;
        CASE(%MINWIDTH);
            TEMP_UBIN=VLP_WINDOW.MINWIDTH#;
            CALL BTOD;
        CASE(%LINE);
            TEMP_UBIN=VLP_WINDOW.ORG_PST.LINE;
            CALL BTOD;
        CASE(%COLUMN);
            TEMP_UBIN=VLP_WINDOW.ORG_PST.COLUMN;
            CALL BTOD;
        CASE(%POSITION);
            TEMP_UBIN=VLP_WINDOW.POSITION#;
            CALL BTOD;
        CASE(%REMOVABLE);
            TEMP_FLAG=VLP_WINDOW.REMOVABLE#;
            CALL YESNO;
        CASE(%RHTBRDR);
            TEMP_FLAG=VLP_WINDOW.RHTBRDR#;
            CALL YESNO;
        CASE(%TOPBRDR);
            TEMP_FLAG=VLP_WINDOW.TOPBRDR#;
            CALL YESNO;
        CASE(%VBRDRCHR);
            VARVALUE.NAME#=VLP_WINDOW.VBRDRCHR#;
            CALL STRIP;
        CASE(%VBRDRSIZ);
            TEMP_UBIN=VLP_WINDOW.VBRDRSIZ#;
            CALL BTOD;
        CASE(%WWIDTH);
            TEMP_UBIN=VLP_WINDOW.WIDTH#;
            CALL BTOD;
%EJECT;
/*          From VLP_TRMCTL */
        CASE(%ACTONTRN);
            TEMP_FLAG=VLP_TRMCTL.ACTONTRN#;
            CALL YESNO;
        CASE(%APLLCNRM);
            TEMP_FLAG=VLP_TRMCTL.APLLCNRM#;
            CALL YESNO;
        CASE(%AUTOTABCLM);
            TEMP_UBIN=VLP_TRMCTL.AUTOTABCLM#;
            CALL BTOD;
        CASE(%BREAKCOUNT);
            TEMP_UBIN=VLP_TRMCTL.BREAKCOUNT#;
            CALL BTOD;
        CASE(%DISPINPUT);
            TEMP_FLAG=VLP_TRMCTL.DISPINPUT#;
            CALL YESNO;
        CASE(%EDITOVR);
            TEMP_FLAG=VLP_TRMCTL.EDITOVR#;
            CALL YESNO;
        CASE(%ENBENTEXTSRDCHR);
            TEMP_FLAG=VLP_TRMCTL.ENBENTEXTSRDCHR#;
            CALL YESNO;
        CASE(%FULLDUXPAPERTAPE);
            TEMP_FLAG=VLP_TRMCTL.FULLDUXPAPERTAPE#;
            CALL YESNO;
        CASE(%HALFDUXPAPERTAPE);
            TEMP_FLAG=VLP_TRMCTL.HALFDUXPAPERTAPE#;
            CALL YESNO;
        CASE(%HSCROLL);
            TEMP_FLAG=VLP_TRMCTL.HSCROLL#;
            CALL YESNO;
        CASE(%HSMARGIN);
            TEMP_UBIN=VLP_TRMCTL.HSMARGIN#;
            CALL BTOD;
        CASE(%HSSHIFT);
            TEMP_UBIN=VLP_TRMCTL.HSSHIFT#;
            CALL BTOD;
        CASE(%INSERTMODE);
            TEMP_FLAG=VLP_TRMCTL.INSERTMODE#;
            CALL YESNO;
        CASE(%LOWERCASE);
            TEMP_FLAG=VLP_TRMCTL.LOWERCASE#;
            CALL YESNO;
        CASE(%MSGHALT);
            TEMP_FLAG=VLP_TRMCTL.MSGHALT#;
            CALL YESNO;
        CASE(%MSGLINE);
            TEMP_FLAG=VLP_TRMCTL.MSGLINE#;
            CALL YESNO;
        CASE(%NOOPTMIZ);
            TEMP_FLAG=VLP_TRMCTL.NOOPTMIZ#;
            CALL YESNO;
        CASE(%OUTPUTDISCARD);
            TEMP_FLAG=VLP_TRMCTL.OUTPUTDISCARD#;
            CALL YESNO;
        CASE(%PAGEHALT);
            TEMP_FLAG=VLP_TRMCTL.PAGEHALT#;
            CALL YESNO;
        CASE(%PARITYCHECK);
            TEMP_FLAG=VLP_TRMCTL.PARITYCHECK#;
            CALL YESNO;
        CASE(%PRINTHALT);
            TEMP_FLAG=VLP_TRMCTL.PRINTHALT#;
            CALL YESNO;
        CASE(%RELPAGE);
            TEMP_FLAG=VLP_TRMCTL.RELPAGE#;
            CALL YESNO;
        CASE(%RETYPOVR);
            TEMP_FLAG=VLP_TRMCTL.RETYPOVR#;
            CALL YESNO;
        CASE(%SCROLL);
            TEMP_FLAG=VLP_TRMCTL.SCROLL#;
            CALL YESNO;
        CASE(%SENDBKSPACE);
            TEMP_FLAG=VLP_TRMCTL.SENDBKSPACE#;
            CALL YESNO;
        CASE(%SIMPERF);
            TEMP_FLAG=VLP_TRMCTL.SIMPERF#;
            CALL YESNO;
        CASE(%SINPUTSZ);
            TEMP_UBIN=VLP_TRMCTL.SINPUTSZ#;
            CALL BTOD;
        CASE(%SPACEINSERT);
            TEMP_FLAG=VLP_TRMCTL.SPACEINSERT#;
            CALL YESNO;
        CASE(%TABRELATIVE);
            TEMP_FLAG=VLP_TRMCTL.TABRELATIVE#;
            CALL YESNO;
        CASE(%TABSIM);
            TEMP_FLAG=VLP_TRMCTL.TABSIM#;
            CALL YESNO;
        CASE(%TRUNCATE);
            TEMP_FLAG=VLP_TRMCTL.TRUNCATE#;
            CALL YESNO;
        CASE(%UPPERCASE);
            TEMP_FLAG=VLP_TRMCTL.UPPERCASE#;
            CALL YESNO;
        CASE(%WORDWRAPCLM);
            TEMP_UBIN=VLP_TRMCTL.WORDWRAPCLM#;
            CALL BTOD;
        CASE(%WRAPPAGE);
            TEMP_FLAG=VLP_TRMCTL.WRAPPAGE#;
            CALL YESNO;
%EJECT;
/*          From VLP_EDTCTL */
        CASE(%HSALL);
            TEMP_FLAG=VLP_EDTCTL.HSALL#;
            CALL YESNO;
        CASE(%KEYINCR);
            TEMP_UBIN=VLP_EDTCTL.KEYINCR#;
            CALL BTOD;
        CASE(%KEYTYPE);
            DO CASE(VLP_EDTCTL.KEYTYPE#);
            CASE(4);
                VARVALUE.NAME#='BIN10';
            CASE(5);
                VARVALUE.NAME#='BINHLF';
            CASE(6);
                VARVALUE.NAME#='BIN521';
            CASE(7);
                VARVALUE.NAME#='STRING';
            CASE(ELSE);
                VARVALUE.NAME#='UNKNOWN';
                END;
            CALL STRIP;
        CASE(%RCRWRAP);
            TEMP_FLAG=VLP_EDTCTL.RCRWRAP#;
            CALL YESNO;
        CASE(%TEXTEDIT);
            TEMP_FLAG=VLP_EDTCTL.TEXTEDIT#;
            CALL YESNO;
        CASE(%VSMARGIN);
            TEMP_UBIN=VLP_EDTCTL.VSMARGIN#;
            CALL BTOD;
        CASE(%VSSHIFT);
            TEMP_UBIN=VLP_EDTCTL.VSSHIFT#;
            CALL BTOD;
%EJECT;
/*          From VLP_TRMATTR */
        CASE(%APL);
            TEMP_FLAG=VLP_TRMATTR.APL#;
            CALL YESNO;
        CASE(%ATRSCRNPOS);
            TEMP_FLAG=VLP_TRMATTR.ATRSCRNPOS#;
            CALL YESNO;
        CASE(%AUTONL);
            TEMP_FLAG=VLP_TRMATTR.AUTONL#;
            CALL YESNO;
        CASE(%BIN);
            TEMP_FLAG=VLP_TRMATTR.BIN#;
            CALL YESNO;
        CASE(%BLANKERASES);
            TEMP_FLAG=VLP_TRMATTR.BLANKERASES#;
            CALL YESNO;
        CASE(%CHARSETNAME);
            VARVALUE.NAME#=VLP_TRMATTR.CHARSETNAME#;
        CASE(%CRISNL);
            TEMP_FLAG=VLP_TRMATTR.CRISNL#;
            CALL YESNO;
        CASE(%CURSORUP);
            TEMP_FLAG=VLP_TRMATTR.CURSORUP#;
            CALL YESNO;
        CASE(%DCHMOVFLD);
            TEMP_FLAG=VLP_TRMATTR.DCHMOVFLD#;
            CALL YESNO;
        CASE(%DEVICEBS);
            TEMP_FLAG=VLP_TRMATTR.DEVICEBS#;
            CALL YESNO;
        CASE(%DEVICECR);
            TEMP_FLAG=VLP_TRMATTR.DEVICECR#;
            CALL YESNO;
        CASE(%DEVICELF);
            TEMP_FLAG=VLP_TRMATTR.DEVICELF#;
            CALL YESNO;
        CASE(%DEVPOSOPTS);
            TEMP_FLAG=VLP_TRMATTR.DEVPOSOPTS#;
            CALL YESNO;
        CASE(%DEVSCROLL);
            TEMP_FLAG=VLP_TRMATTR.DEVSCROLL#;
            CALL YESNO;
        CASE(%DSPHEIGHT);
            TEMP_UBIN=VLP_TRMATTR.DSPHEIGHT#;
            CALL BTOD;
        CASE(%DVCFLWCTRALG);
            DO CASE(VLP_TRMATTR.DVCFLWCTRALG#);
            CASE(0);
                VARVALUE.NAME#='NONE';
            CASE(1);
                VARVALUE.NAME#='ENQACK';
            CASE(2);
                VARVALUE.NAME#='EXTACK';
            CASE(3);
                VARVALUE.NAME#='DC1DC3';
            CASE(ELSE);
                VARVALUE.NAME#='UNKNOWN';
                END;
            CALL STRIP;
        CASE(%EXTWID);
            TEMP_FLAG=VLP_TRMATTR.EXTWID#;
            CALL YESNO;
        CASE(%FCNTBL);
            VARVALUE.NAME#=VLP_TRMATTR.FCNTBL#;
            CALL STRIP;
        CASE(%FFFLUSH);
            TEMP_FLAG=VLP_TRMATTR.FF_FLUSH#;
            CALL YESNO;
        CASE(%HEIGHT);
            TEMP_UBIN=VLP_TRMATTR.HEIGHT#;
            CALL BTOD;
        CASE(%INPUT);
            TEMP_FLAG=VLP_TRMATTR.INPUT#;
            CALL YESNO;
        CASE(%LFISNL);
            TEMP_FLAG=VLP_TRMATTR.LFISNL#;
            CALL YESNO;
        CASE(%LIMBOCLM);
            TEMP_FLAG=VLP_TRMATTR.LIMBOCLM#;
            CALL YESNO;
        CASE(%LOCALECHO);
            TEMP_FLAG=VLP_TRMATTR.LOCALECHO#;
            CALL YESNO;
        CASE(%LOWERCASEPRINTS);
            TEMP_FLAG=VLP_TRMATTR.LOWERCASEPRINTS#;
            CALL YESNO;
        CASE(%MAXATRS);
            TEMP_UBIN=VLP_TRMATTR.MAXATRS#;
            CALL BTOD;
        CASE(%MINREC);
            TEMP_UBIN=VLP_TRMATTR.MINREC#;
            CALL BTOD;
        CASE(%NO_FLDTRM);
            TEMP_FLAG=VLP_TRMATTR.NO_FLDTRM#;
            CALL YESNO;
        CASE(%OPDTAB);
            TEMP_FLAG=VLP_TRMATTR.OPDTAB#;
            CALL YESNO;
        CASE(%OUTPUT);
            TEMP_FLAG=VLP_TRMATTR.OUTPUT#;
            CALL YESNO;
        CASE(%PARITY);
            DO CASE(VLP_TRMATTR.PARITY#);
            CASE(0);
                VARVALUE.NAME#='NONE';
            CASE(1);
                VARVALUE.NAME#='ODD';
            CASE(2);
                VARVALUE.NAME#='EVEN';
            CASE(3);
                VARVALUE.NAME#='ONE';
            CASE(4);
                VARVALUE.NAME#='ZERO';
            CASE(ELSE);
                VARVALUE.NAME#='UNDEFINED';
                END;
            CALL STRIP;
        CASE(%PRINTTYPE);
            TEMP_FLAG=VLP_TRMATTR.PRINTTYPE#;
            CALL YESNO;
        CASE(%PROGDTAB);
            TEMP_FLAG=VLP_TRMATTR.PROGDTAB#;
            CALL YESNO;
        CASE(%SPCBFRPRT);
            TEMP_FLAG=VLP_TRMATTR.SPCBFRPRT#;
            CALL YESNO;
        CASE(%SPEED);
            DO CASE(VLP_TRMATTR.SPEED#);
            CASE(0);
                VARVALUE.NAME#='50';
            CASE(1);
                VARVALUE.NAME#='75';
            CASE(2);
                VARVALUE.NAME#='110';
            CASE(3);
                VARVALUE.NAME#='134';
            CASE(4);
                VARVALUE.NAME#='150';
            CASE(5);
                VARVALUE.NAME#='200';
            CASE(6);
                VARVALUE.NAME#='300';
            CASE(7);
                VARVALUE.NAME#='600';
            CASE(8);
                VARVALUE.NAME#='1050';
            CASE(9);
                VARVALUE.NAME#='1200';
            CASE(10);
                VARVALUE.NAME#='1800';
            CASE(11);
                VARVALUE.NAME#='2000';
            CASE(12);
                VARVALUE.NAME#='2400';
            CASE(13);
                VARVALUE.NAME#='4800';
            CASE(14);
                VARVALUE.NAME#='9600';
            CASE(15);
                VARVALUE.NAME#='19200';
            CASE(ELSE);
                VARVALUE.NAME#='UNKNOWN';
                END;
            CALL STRIP;
        CASE(%TRUOVRPRT);
            TEMP_FLAG=VLP_TRMATTR.TRUOVRPRT#;
            CALL YESNO;
        CASE(%TTYTYPE);
            TEMP_FLAG=VLP_TRMATTR.TTYTYPE#;
            CALL YESNO;
        CASE(%WIDTH);
            TEMP_UBIN=VLP_TRMATTR.WIDTH#;
            CALL BTOD;
            END; /* CASE */
        CALL M$CMDVAR(FPT_CMDVAR) ALTRET(E_MONSER);
        END;
 
RET:CALL M$EXIT;
E_MONSER:   ;
    CALL ERR_PROC(1);
    GOTO RET;
%EJECT;
BTOD:   PROC;
%INCLUDE B_MICROPS_C;
DCL MOPS(0:3) BIT(9) CONSTANT INIT(%LTE3,ASCBIT(' '),%MFLS11,%INSM1);
DCL I UBIN;
DCL T1CHAR CHAR(12) ALIGNED;
DCL T2CHAR CHAR(12) ALIGNED;
    CALL BINXCHAR(T1CHAR,TEMP_UBIN);
    CALL EDITXCHAR(T2CHAR,,,MOPS,T1CHAR);
    CALL INDEX1R(I,' ',T2CHAR);
    IF I=LENGTHV(T2CHAR) THEN DO;
        VARVALUE.L#=1;
        VARVALUE.NAME#='0';
        END;
    ELSE DO;
        VARVALUE.L#=LENGTHV(T2CHAR)-I;
        VARVALUE.NAME#=SUBSTR(T2CHAR,I+1);
        END;
    GOTO RET;
STRIP:  ENTRY;
    CALL INDEX(I,' ',VARVALUE.NAME#);
    VARVALUE.L#=I;
    GOTO RET;
YESNO:  ENTRY;
    IF TEMP_FLAG THEN
        VARVALUE=YES;
    ELSE
        VARVALUE=NO;
RET:RETURN;
END BTOD;
%EJECT;
ERR_PROC:   PROC(CODE);
/*D*
NAME:   ERR_PROC
DESCRIPTION:
    A code of 1 stands for an ALTRET.
    A code of 2 stands for an X$PARSE error.
*/
%FPT_ERRMSG(FPTN=FPT_ERRMSG,STCLASS=STATIC,
    BUF=ERR_BUF,
    INCLCODE=NO,
    OUTDCB1=M$DO,
    OUTDCB2=M$LO);
DCL ERR_BUF CHAR(120) STATIC;
DCL CODE UBIN;
 
    DO CASE(CODE);
    CASE(1);
        FPT_ERRMSG.CODE_=VECTOR(B$TCB$->B$TCB.ALT$->B$ALT.ERR);
        FPT_ERRMSG.V.DCB#=B$TCB$->B$TCB.ALT$->B$ALT.DCB#;
        FPT_ERRMSG.V.POINTER#=0;
    CASE(2);
        FPT_ERRMSG.CODE_=VECTOR(PCB.ERROR);
        FPT_ERRMSG.V.DCB#=0;
        FPT_ERRMSG.V.POINTER#=PCB.HI_CHAR+B$JIT.CCDISP;
        END;
    CALL M$ERRMSG(FPT_ERRMSG);
    RETURN;
END ERR_PROC;
END TERMITE;
