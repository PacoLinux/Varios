/*M* XMITT Transmits records to an output place. */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
                                   /*
                                        Author: T.S.Martner, LADC
                                        Date: 4/82
                                                                  */
%SET LISTSUB='1'B;
 
 
/*P* NAME: XMITT
        DESCRIPTION:  XMITT transmits characters to an output place.
           To call it --
           !XMITT.X     ON,output ([[dvfc],][[rlen],][cs])
           If "dvfc" is specified, it overrides the default
              default VFC character of 'A'.
           If "rlen" is specified, it overrides the default output
              record length of 80.
        (Note: "dvfc" must be one non-numeric character, that's how
              we tell dvfc-only from rlen-only.  Also, "cs" can
              have no commas in it.)
           If "cs" is specified, it overrides the default character
              string to be replicated in the buffer of 'ABCDEFGHIJ'.*/
XMITT: PROC MAIN;
%EQU MAXREC=2048;
%INCLUDE CP_6;
DCL M$LO DCB;
DCL B$JIT$ PTR SYMREF;
%INCLUDE B$JIT;
DCL LOBUF CHAR(%MAXREC) STATIC;
DCL I SBIN STATIC;
DCL J SBIN STATIC;
DCL K SBIN STATIC;
DCL BUFARS UBIN STATIC INIT(80);
DCL CSLEN UBIN STATIC INIT(10);
DCL CS CHAR(%MAXREC) STATIC INIT('ABCDEFGHIJKLMNOPQRSTUVWXYZ');
%FPT_OPEN(FPTN=OPENLO,STCLASS=STATIC,DCB=M$LO,DVFC='A');
%FPT_WRITE(FPTN=WRLO,STCLASS=STATIC,DCB=M$LO,BUF=LOBUF);
     I=B$JIT.CCARS-B$JIT.CCDISP-2;
     J=B$JIT.CCDISP+1;
     IF I>0 THEN DO;
        IF SUBSTR(B$JIT.CCBUF,J,1)=',' THEN DO;
           J=J+1; I=I-1; END;
        ELSE IF SUBSTR(B$JIT.CCBUF,J+1,1)=',' THEN DO;
              CALL INDEX1(K,SUBSTR(B$JIT.CCBUF,J,1),'0123456789')
                 ALTRET(DVFCONLY);
              GOTO LENONLY;
DVFCONLY:     OPENLO.V.DVFC#=SUBSTR(B$JIT.CCBUF,J,1);
              J=J+2; I=I-2;
LENONLY:      END;
        END;
     IF I>0 THEN DO;
        CALL INDEX1(K,',',SUBSTR(B$JIT.CCBUF,J,I))
           ALTRET(NOLEN);
        IF K>0 THEN
           CALL CHARBIN(BUFARS,SUBSTR(B$JIT.CCBUF,J,K));
        I=I-K-1; J=J+K+1;
NOLEN:  END;
     IF I>0 THEN DO;
        CS=SUBSTR(B$JIT.CCBUF,J,I);
        CSLEN=I;
        END;
     I=0;
     DO WHILE (I<%MAXREC);
        IF (I<=%MAXREC-CSLEN) THEN
           CALL INSERT(LOBUF,I,CSLEN,CS);
        ELSE
           CALL INSERT(LOBUF,I,,CS);
        I=I+CSLEN;
        END;
     CALL M$OPEN(OPENLO);
     WRLO.BUF_.BOUND=BUFARS-1;
     DO I=1 TO 99;
        CALL BINCHAR(SUBSTR(LOBUF,6,2),I);
        CALL M$WRITE(WRLO);
        END;
     DO I=100 TO 999;
        CALL BINCHAR(SUBSTR(LOBUF,5,3),I);
        CALL M$WRITE(WRLO);
        END;
     DO I=1000 TO 9999;
        CALL BINCHAR(SUBSTR(LOBUF,4,4),I);
        CALL M$WRITE(WRLO);
        END;
     DO I=10000 TO 99999;
        CALL BINCHAR(SUBSTR(LOBUF,3,5),I);
        CALL M$WRITE(WRLO);
        END;
     DO I=100000 TO 999999;
        CALL BINCHAR(SUBSTR(LOBUF,2,6),I);
        CALL M$WRITE(WRLO);
        END;
     DO I=1000000 TO 9999999;
        CALL BINCHAR(SUBSTR(LOBUF,1,7),I);
        CALL M$WRITE(WRLO);
        END;
END XMITT;
