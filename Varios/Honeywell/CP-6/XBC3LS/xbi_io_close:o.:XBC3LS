
PL6.E3A0      #001=XBI_CLOSE_DCBS File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        XBI_CLOSE_DCBS: PROC;
        7        7           /*I*  NAME: XBI_CLOSE_DCBS
        8        8                 CALL: CALL XBI_CLOSE_DCBS;
        9        9                 PURPOSE: Closes all currently open streams, except stderr.
       10       10           */
       11       11
       12       12           %INCLUDE xb_stdio_i6;
       13      255
       14      256    1      DCL STDIN_P                        PTR SYMREF;
       15      257    1      DCL STDOUT_P                       PTR SYMREF;
       16      258
       17      259    1      DCL current_stream               PTR;
       18      260    1      DCL next_stream                  PTR;
       19      261    1      DCL dcb_number                       SBIN;
       20      262           %File_Header (Name=F, Stclass="BASED (current_stream)");
       21      374
       22      375    1      DCL XBI$FCLOSE                   ENTRY(1) ALTRET;
       23      376    1      DCL XB$CLOSE_FILDES              ENTRY(1);
       24      377
       25      378    1      current_stream = XBI$FIRST_FILE_HEADER;
       26      379    2      DO WHILE current_stream ~= ADDR(NIL);
       27      380    2         next_stream = F.next_file_header;
       28      381    3         IF (F.auxio$ ~= ADDR(nil)) THEN DO;
       29      382    3            dcb_number = F.fpt_read.v.dcb#;
       30      383    3            CALL  XB$CLOSE_FILDES (dcb_number);
       31      384    3         END;
       32      385    2         ELSE
       33      386    2            CALL XBI$FCLOSE (F); /* we don't care if it ALTRETURN's */
       34      387    2         current_stream= next_stream;
       35      388    2      END;
       36      389           /* Close stdout and stdin                                        */
       37      390
PL6.E3A0      #001=XBI_CLOSE_DCBS File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:2    
       38      391    1      current_stream = stdin_p;
       39      392    1      IF (current_stream ~= addr(NIL)) then
       40      393    1         CALL XBI$FCLOSE (F);
       41      394    1      current_stream = stdout_p;
       42      395    1      IF (current_stream ~= addr(NIL)) then
       43      396    1         CALL XBI$FCLOSE (F);
       44      397    1   END XBI_CLOSE_DCBS;
       45      398        %EOD;

PL6.E3A0      #001=XBI_CLOSE_DCBS File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:3    
--  Include file information  --

   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI_CLOSE_DCBS.

   Procedure XBI_CLOSE_DCBS requires 46 words for executable code.
   Procedure XBI_CLOSE_DCBS requires 8 words of local(AUTO) storage.

PL6.E3A0      #001=XBI_CLOSE_DCBS File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:4    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XBI_CLOSE_DCBS File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:5    
          MINI XREF LISTING

CURRENT_STREAM
       259**DCL       263--IMP-PTR   378<<ASSIGN    379>>DOWHILE   380>>ASSIGN    381>>IF        382>>ASSIGN
       386>>CALL      387<<ASSIGN    391<<ASSIGN    392>>IF        393>>CALL      394<<ASSIGN    395>>IF
       396>>CALL
DCB_NUMBER
       261**DCL       382<<ASSIGN    383<>CALL
F
       263**DCL       386<>CALL      393<>CALL      396<>CALL
F.AUXIO$
       295**DCL       381>>IF
F.FPT_READ.V.DCB#
       308**DCL       382>>ASSIGN
F.FPT_READ.V.DVBYTE.REREAD#
       325**DCL       326--REDEF
F.FPT_READ.V.INDX#
       318**DCL       319--REDEF
F.FPT_WRITE.V.DVBYTE.VFC#
       363**DCL       364--REDEF
F.NEXT_FILE_HEADER
       291**DCL       380>>ASSIGN
NEXT_STREAM
       260**DCL       380<<ASSIGN    387>>ASSIGN
STDIN_P
       256**DCL       391>>ASSIGN
STDOUT_P
       257**DCL       394>>ASSIGN
XB$CLOSE_FILDES
       376**DCL-ENT   383--CALL
XBI$FCLOSE
       375**DCL-ENT   386--CALL      393--CALL      396--CALL
XBI$FIRST_FILE_HEADER
        30**DCL       378>>ASSIGN

PL6.E3A0      #002=XBI$CLOSE_FILE File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:6    
       46        1        /*T***********************************************************/
       47        2        /*T*                                                         */
       48        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
       49        4        /*T*                                                         */
       50        5        /*T***********************************************************/
       51        6
       52        7        XBI$CLOSE_FILE: PROC (F) ALTRET;
       53        8           /*I*  NAME: XBI$CLOSE_FILE
       54        9                 CALL: CALL XBI$CLOSE_FILE (F);
       55       10                 INPUT: F file_header;   -file to close
       56       11                 PURPOSE: Closes the file F and releases XSA buffers (if any).
       57       12                    The buffer and dcb# are not released!
       58       13           */
       59       14
       60       15           %INCLUDE CP_6;
       61     5575           %INCLUDE CP_6_SUBS;
       62     6115           %INCLUDE xb_stdio_i6;
       63     6358           %INCLUDE XS_MACRO_C;
       64     6402
       65     6403           %File_Header (Name=F, Stclass=" ");
       66     6515
       67     6516    1      DCL XBI$WRITE_BEFORE_POSITIONING    ENTRY (1) ALTRET;
       68     6517    1      DCL XBI_SET_STREAM_ERRNO            ENTRY (2);
       69     6518    1      DCL XBI$RELEASE_XSA_BUFFERS         ENTRY (1);
       70     6519
       71     6520           %FPT_CLOSE (FPTN=CLOSE_CONST, DISP=SAVE, STCLASS=CONSTANT);
       72     6562           %FPT_CLOSE (FPTN=CLOSE_FILE, STCLASS=AUTO);
       73     6604           %F$DCB;
       74     6661
       75     6662           %XSA_PARAM (STCLASS=BASED);
       76     6692           %XSA_ENTRIES;
       77     6696
       78     6697    1      DCL XBI$COMPLETE_OPEN            ENTRY (1) ALTRET;
       79     6698    1      DCL XBI_MALLOC                   ENTRY (2);
       80     6699    1      DCL XBI$PROTECT_POINTER          ENTRY (1);
       81     6700    1      DCL XBI$GET_STREAM_BUFFER        ENTRY(1) ALTRET;
       82     6701
PL6.E3A0      #002=XBI$CLOSE_FILE File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:7    
       83     6702    1      DCL XB$CLOSE_FILDES              ENTRY(1);
       84     6703    1      DCL dcb_number                       SBIN;
       85     6704
       86     6705           /* If there is no DCB associated with this file then it has definitely
       87     6706              been closed.
       88     6707           */
       89     6708
       90     6709    1      IF F.fpt_read.v.dcb# = 0 THEN RETURN;
       91     6710
       92     6711        /*    Check to see if they are trying to close a file that was using
       93     6712              auxiliary I/O.  If so this was called by freopen() and they
       94     6713              are allowed to do this.                                       */
       95     6714
       96     6715    2      IF (F.auxio$ ~= ADDR(NIL)) THEN DO;
       97     6716    2         dcb_number = F.fpt_read.v.dcb#;
       98     6717    2         CALL  XB$CLOSE_FILDES (dcb_number);
       99     6718    2         RETURN;
      100     6719    2      END;
      101     6720
      102     6721    2      IF F.is_partly_open AND (NOT F.is_error) THEN DO;
      103     6722    2         IF F.buffer$ = ADDR(NIL) THEN
      104     6723    3            CALL XBI$GET_STREAM_BUFFER (F) WHENALTRETURN DO; ALTRETURN; END;
      105     6724
      106     6725           /* Allocate xsa buffers, if necessary */
      107     6726
      108     6727    3         IF F.xsa$ ~= ADDR(NIL) AND F.XSA$->XSA_PARAM.BBUF_.BUF$ = ADDR(NIL) THEN DO;
      109     6728    3            CALL XBI_MALLOC (4096, F.xsa$->XSA_PARAM.BBUF_.BUF$);
      110     6729    3            CALL XBI$PROTECT_POINTER (F.xsa$->XSA_PARAM.BBUF_.BUF$);
      111     6730    3            IF F.xsa$->XSA_PARAM.BBUF_.BUF$ ~= ADDR(NIL) THEN
      112     6731    3               F.xsa$->XSA_PARAM.BBUF_.BOUND = 4096 - 1;
      113     6732    4            IF F.xsa$->XSA_PARAM.ORG = %KEYED# THEN DO;
      114     6733    4               CALL XBI_MALLOC (4096, F.xsa$->XSA_PARAM.KBUF_.BUF$);
      115     6734    4               CALL XBI$PROTECT_POINTER (F.xsa$->XSA_PARAM.KBUF_.BUF$);
      116     6735    4               IF F.xsa$->XSA_PARAM.KBUF_.BUF$ ~= ADDR(NIL) THEN
      117     6736    4                  F.xsa$->XSA_PARAM.KBUF_.BOUND = 4096 - 1;
      118     6737    4            END;
      119     6738    2         END; ELSE
PL6.E3A0      #002=XBI$CLOSE_FILE File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:8    
      120     6739    2            F.cancel_xsa = '0'B;
      121     6740    2         F.is_partly_open = '0'B;
      122     6741    2      END;
      123     6742
      124     6743    2      IF F.is_buffer_modified AND (NOT F.is_error) THEN DO;
      125     6744    2         CALL XBI$WRITE_BEFORE_POSITIONING (F)
      126     6745    3            WHENALTRETURN DO;
      127     6746    3               ALTRETURN;
      128     6747    3            END;
      129     6748    2      END;
      130     6749
      131     6750    2      IF DCBADDR(F.FPT_READ.V.DCB#) -> F$DCB.FCD# THEN DO;
      132     6751    2         CLOSE_FILE = CLOSE_CONST;
      133     6752    2         CLOSE_FILE.V_ = VECTOR (CLOSE_FILE.V);
      134     6753    2         CLOSE_FILE.V.DCB# = F.FPT_READ.V.DCB#;
      135     6754    2         IF F.xsa$ ~= ADDR(NIL) AND (NOT F.is_error) THEN
      136     6755    2            CALL XSA$CLOSE (CLOSE_FILE, F.xsa$ -> XSA_PARAM)
      137     6756    3               WHENALTRETURN DO;
      138     6757    3                  CALL XBI_SET_STREAM_ERRNO (F, F.xsa$ -> XSA_PARAM);
      139     6758    3                  ALTRETURN;
      140     6759    3               END;
      141     6760    2         ELSE
      142     6761    2            CALL M$CLOSE (CLOSE_FILE)
      143     6762    3               WHENALTRETURN DO;
      144     6763    3                  CALL XBI_SET_STREAM_ERRNO (F);
      145     6764    3                  ALTRETURN;
      146     6765    3               END;
      147     6766    2         IF F.xsa$ ~= ADDR(NIL) THEN CALL XBI$RELEASE_XSA_BUFFERS (F);
      148     6767    2      END;
      149     6768    1   END XBI$CLOSE_FILE;
      150     6769        %EOD;

PL6.E3A0      #002=XBI$CLOSE_FILE File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:9    
--  Include file information  --

   XS_MACRO_C.:LIB_E04  is referenced.
   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI$CLOSE_FILE.

   Procedure XBI$CLOSE_FILE requires 175 words for executable code.
   Procedure XBI$CLOSE_FILE requires 38 words of local(AUTO) storage.

PL6.E3A0      #002=XBI$CLOSE_FILE File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:10   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XBI$CLOSE_FILE File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:11   
          MINI XREF LISTING

CLOSE_CONST
      6543**DCL      6751>>ASSIGN
CLOSE_CONST.SN_
      6543**DCL      6543--REDEF
CLOSE_CONST.UTL_
      6544**DCL      6544--REDEF
CLOSE_CONST.V
      6548**DCL      6543--DCLINIT
CLOSE_CONST.V.EXPIRE#
      6558**DCL      6558--REDEF
CLOSE_CONST.V.TYPE#
      6556**DCL      6556--REDEF
CLOSE_CONST.V.XTNSIZE#
      6553**DCL      6553--REDEF    6555--REDEF
CLOSE_FILE
      6585**DCL      6751<<ASSIGN   6755<>CALL     6761<>CALL
CLOSE_FILE.SN_
      6585**DCL      6585--REDEF
CLOSE_FILE.UTL_
      6586**DCL      6586--REDEF
CLOSE_FILE.V
      6590**DCL      6752--ASSIGN
CLOSE_FILE.V.DCB#
      6591**DCL      6753<<ASSIGN
CLOSE_FILE.V.EXPIRE#
      6600**DCL      6600--REDEF
CLOSE_FILE.V.TYPE#
      6598**DCL      6598--REDEF
CLOSE_FILE.V.XTNSIZE#
      6595**DCL      6595--REDEF    6597--REDEF
CLOSE_FILE.V_
      6585**DCL      6752<<ASSIGN
PL6.E3A0      #002=XBI$CLOSE_FILE File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:12   
DCB_NUMBER
      6703**DCL      6716<<ASSIGN   6717<>CALL
F
      6404**DCL         7--PROC     6723<>CALL     6744<>CALL     6757<>CALL     6763<>CALL     6766<>CALL
F.AUXIO$
      6436**DCL      6715>>IF
F.BUFFER$
      6428**DCL      6722>>IF
F.CANCEL_XSA
      6417**DCL      6739<<ASSIGN
F.FPT_READ.V.DCB#
      6449**DCL      6709>>IF       6716>>ASSIGN   6750--IF       6753>>ASSIGN
F.FPT_READ.V.DVBYTE.REREAD#
      6466**DCL      6467--REDEF
F.FPT_READ.V.INDX#
      6459**DCL      6460--REDEF
F.FPT_WRITE.V.DVBYTE.VFC#
      6504**DCL      6505--REDEF
F.IS_BUFFER_MODIFIED
      6408**DCL      6743>>IF
F.IS_ERROR
      6411**DCL      6721>>IF       6743>>IF       6754>>IF
F.IS_PARTLY_OPEN
      6416**DCL      6721>>IF       6740<<ASSIGN
F.XSA$
      6430**DCL      6727>>IF       6727>>IF       6728>>CALL     6729>>CALL     6730>>IF       6731>>ASSIGN
      6732>>IF       6733>>CALL     6734>>CALL     6735>>IF       6736>>ASSIGN   6754>>IF       6755>>CALL
      6757>>CALL     6766>>IF
F$DCB.ACTPOS
      6637**DCL      6637--REDEF
F$DCB.ARS#
      6611**DCL      6611--REDEF
F$DCB.ATTR
      6630**DCL      6631--REDEF
F$DCB.BORROW
      6645**DCL      6645--REDEF    6645--REDEF    6645--REDEF
PL6.E3A0      #002=XBI$CLOSE_FILE File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:13   
F$DCB.DCBNAME.L
      6659**DCL      6659--IMP-SIZ
F$DCB.EOMCHAR#
      6615**DCL      6615--REDEF
F$DCB.FCD#
      6624**DCL      6750>>IF
F$DCB.FLDID
      6640**DCL      6640--REDEF
F$DCB.FORM$
      6634**DCL      6634--REDEF
F$DCB.FSECT
      6650**DCL      6650--REDEF
F$DCB.FSN#
      6627**DCL      6627--REDEF    6627--REDEF    6628--REDEF
F$DCB.HEADER$
      6633**DCL      6633--REDEF
F$DCB.IXTNSIZE#
      6631**DCL      6631--REDEF
F$DCB.LASTSTA$
      6620**DCL      6620--REDEF
F$DCB.LVL
      6646**DCL      6646--REDEF
F$DCB.NAME#.C
      6621**DCL      6621--REDEF
F$DCB.NOEOF
      6643**DCL      6643--REDEF
F$DCB.NRECS#
      6632**DCL      6632--REDEF
F$DCB.NRECX
      6651**DCL      6651--REDEF
F$DCB.OHDR
      6643**DCL      6643--REDEF
F$DCB.ORG#
      6626**DCL      6626--REDEF
F$DCB.PRECNO
      6649**DCL      6649--REDEF
PL6.E3A0      #002=XBI$CLOSE_FILE File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:14   
F$DCB.RCSZ
      6655**DCL      6655--REDEF
F$DCB.RES#
      6622**DCL      6622--REDEF
F$DCB.SETX
      6634**DCL      6634--REDEF
F$DCB.TAB$
      6634**DCL      6634--REDEF
F$DCB.TDA
      6648**DCL      6649--REDEF
F$DCB.WSN#
      6622**DCL      6622--REDEF
M$CLOSE
      5503**DCL-ENT  6761--CALL
XB$CLOSE_FILDES
      6702**DCL-ENT  6717--CALL
XBI$GET_STREAM_BUFFER
      6700**DCL-ENT  6723--CALL
XBI$PROTECT_POINTER
      6699**DCL-ENT  6729--CALL     6734--CALL
XBI$RELEASE_XSA_BUFFERS
      6518**DCL-ENT  6766--CALL
XBI$WRITE_BEFORE_POSITIONING
      6516**DCL-ENT  6744--CALL
XBI_MALLOC
      6698**DCL-ENT  6728--CALL     6733--CALL
XBI_SET_STREAM_ERRNO
      6517**DCL-ENT  6757--CALL     6763--CALL
XSA$CLOSE
      6693**DCL-ENT  6755--CALL
XSA_PARAM
      6670**DCL      6755<>CALL     6757<>CALL
XSA_PARAM.BBUF_.BOUND
      6678**DCL      6731<<ASSIGN
XSA_PARAM.BBUF_.BUF$
      6679**DCL      6727>>IF       6728<>CALL     6729<>CALL     6730>>IF
PL6.E3A0      #002=XBI$CLOSE_FILE File=xbi_io_close:6.:XBC3TSI                   FRI 01/06/95 11:24 Page:15   
XSA_PARAM.EOMCHAR#
      6686**DCL      6687--REDEF
XSA_PARAM.KBUF_.BOUND
      6676**DCL      6736<<ASSIGN
XSA_PARAM.KBUF_.BUF$
      6677**DCL      6733<>CALL     6734<>CALL     6735>>IF
XSA_PARAM.ORG
      6685**DCL      6732>>IF
XSA_PARAM.SIG1
      6680**DCL      6680--REDEF
XSA_PARAM.SIG2
      6680**DCL      6681--REDEF

PL6.E3A0      #003=XBI$RELEASE_XSA_BUFFERS File=xbi_io_close:6.:XBC3TSI          FRI 01/06/95 11:24 Page:16   
      151        1        /*T***********************************************************/
      152        2        /*T*                                                         */
      153        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      154        4        /*T*                                                         */
      155        5        /*T***********************************************************/
      156        6
      157        7        XBI$RELEASE_XSA_BUFFERS: PROC (F);
      158        8           /*I*  NAME: XBI$RELEASE_XSA_BUFFERS
      159        9                 CALL: CALL XBI$RELEASE_XSA_BUFFERS (F);
      160       10                 INPUT: F file_header;
      161       11                 PURPOSE: Any XSA buffers owned by stream F are released.
      162       12           */
      163       13
      164       14           %INCLUDE xb_stdio_i6;
      165      257           %INCLUDE XS_MACRO_C;
      166      301
      167      302           %File_Header (Name=F, Stclass=" ");
      168      414
      169      415           %XSA_PARAM (STCLASS=BASED);
      170      445
      171      446    1      DCL XBI$UNPROTECT_POINTER           ENTRY (1);
      172      447    1      DCL XBI_FREE                        ENTRY (1);
      173      448
      174      449    2      IF F.xsa$ ~= ADDR(NIL) THEN DO;
      175      450    3       IF F.XSA$->XSA_PARAM.BBUF_.BUF$ ~= ADDR(NIL) THEN DO;
      176      451    3         CALL XBI$UNPROTECT_POINTER (F.xsa$ -> XSA_PARAM.BBUF_.BUF$);
      177      452    3         CALL XBI_FREE (F.xsa$ -> XSA_PARAM.BBUF_.BUF$);
      178      453    3       END;
      179      454    3       IF F.XSA$->XSA_PARAM.KBUF_.BUF$ ~= ADDR(NIL) THEN DO;
      180      455    3         CALL XBI$UNPROTECT_POINTER (F.xsa$ -> XSA_PARAM.KBUF_.BUF$);
      181      456    3         CALL XBI_FREE (F.xsa$ -> XSA_PARAM.KBUF_.BUF$);
      182      457    3       END;
      183      458    2         CALL XBI$UNPROTECT_POINTER (F.xsa$);
      184      459    2         CALL XBI_FREE (F.xsa$);
      185      460    2         F.xsa$ = ADDR(NIL);
      186      461    2      END;
      187      462    1   END XBI$RELEASE_XSA_BUFFERS;
PL6.E3A0      #003=XBI$RELEASE_XSA_BUFFERS File=xbi_io_close:6.:XBC3TSI          FRI 01/06/95 11:24 Page:17   
      188      463        %EOD;

PL6.E3A0      #003=XBI$RELEASE_XSA_BUFFERS File=xbi_io_close:6.:XBC3TSI          FRI 01/06/95 11:24 Page:18   
--  Include file information  --

   XS_MACRO_C.:LIB_E04  is referenced.
   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI$RELEASE_XSA_BUFFERS.

   Procedure XBI$RELEASE_XSA_BUFFERS requires 61 words for executable code.
   Procedure XBI$RELEASE_XSA_BUFFERS requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=XBI$RELEASE_XSA_BUFFERS File=xbi_io_close:6.:XBC3TSI          FRI 01/06/95 11:24 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XBI$RELEASE_XSA_BUFFERS File=xbi_io_close:6.:XBC3TSI          FRI 01/06/95 11:24 Page:20   
          MINI XREF LISTING

F
       303**DCL         7--PROC
F.FPT_READ.V.DVBYTE.REREAD#
       365**DCL       366--REDEF
F.FPT_READ.V.INDX#
       358**DCL       359--REDEF
F.FPT_WRITE.V.DVBYTE.VFC#
       403**DCL       404--REDEF
F.XSA$
       329**DCL       449>>IF        450>>IF        451>>CALL      452>>CALL      454>>IF        455>>CALL
       456>>CALL      458<>CALL      459<>CALL      460<<ASSIGN
XBI$UNPROTECT_POINTER
       446**DCL-ENT   451--CALL      455--CALL      458--CALL
XBI_FREE
       447**DCL-ENT   452--CALL      456--CALL      459--CALL
XSA_PARAM.BBUF_.BUF$
       432**DCL       450>>IF        451<>CALL      452<>CALL
XSA_PARAM.EOMCHAR#
       439**DCL       440--REDEF
XSA_PARAM.KBUF_.BUF$
       430**DCL       454>>IF        455<>CALL      456<>CALL
XSA_PARAM.SIG1
       433**DCL       433--REDEF
XSA_PARAM.SIG2
       433**DCL       434--REDEF

PL6.E3A0      #004=XBI$FCLOSE File=xbi_io_close:6.:XBC3TSI                       FRI 01/06/95 11:24 Page:21   
      189        1        /*T***********************************************************/
      190        2        /*T*                                                         */
      191        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      192        4        /*T*                                                         */
      193        5        /*T***********************************************************/
      194        6
      195        7        XBI$FCLOSE: PROC (F) ALTRET;
      196        8           /*I*  NAME: XBI$FCLOSE
      197        9                 CALL: CALL XBI$FCLOSE (F);
      198       10                 INPUT: F file_header;
      199       11                 PURPOSE: Closes stream F, releases all buffers associated with
      200       12                    the stream, releases the dcb and removes the stream from the file
      201       13                    chain.
      202       14           */
      203       15
      204       16           %INCLUDE CP_6;
      205     5576           %INCLUDE xb_stdio_i6;
      206     5819           %INCLUDE xb_errors_i6;
      207     5890
      208     5891           %File_Header (Name=F, Stclass=" ");
      209     6003
      210     6004    1      DCL XBI$CLOSE_FILE                  ENTRY (1) ALTRET;
      211     6005    1      DCL XBI$UNPROTECT_POINTER           ENTRY (1);
      212     6006    1      DCL XBI_FREE                        ENTRY (1);
      213     6007    1      DCL XBI_SET_STREAM_ERRNO            ENTRY (2);
      214     6008    1      DCL XBI$UNLINK_FILE_HEADER          ENTRY (1);
      215     6009
      216     6010           %FPT_RELDCB (FPTN=RELDCB, STCLASS=AUTO);
      217     6024
      218     6025    1   DCL F$ PTR;
      219     6026    1      DCL XBI$MIN_RELEASE_DCBNUM     SBIN SYMREF;
      220     6027
      221     6028    1      IF F.is_open THEN
      222     6029    1      CALL XBI$CLOSE_FILE (F) ALTRET (error_return);
      223     6030
      224     6031    2      IF F.has_auto_buffer AND F.buffer$ ~= ADDR(NIL) THEN DO;
      225     6032    2         CALL XBI$UNPROTECT_POINTER (F.buffer$);
PL6.E3A0      #004=XBI$FCLOSE File=xbi_io_close:6.:XBC3TSI                       FRI 01/06/95 11:24 Page:22   
      226     6033    2         CALL XBI_FREE (F.buffer$);
      227     6034    2         F.buffer$ = ADDR(NIL);
      228     6035    2      END;
      229     6036
      230     6037           /* We don't want to release the M$DO DCB */
      231     6038
      232     6039    2      IF F.FPT_READ.V.DCB# >= XBI$MIN_RELEASE_DCBNUM THEN DO;
      233     6040    2         RELDCB.V_ = VECTOR (RELDCB.V);
      234     6041    2         RELDCB.V.DCB# = F.FPT_READ.V.DCB#;
      235     6042    2         CALL M$RELDCB (RELDCB)
      236     6043    3            WHENALTRETURN DO;
      237     6044    3               CALL XBI_SET_STREAM_ERRNO (F);
      238     6045    3               GOTO error_return;
      239     6046    3            END;
      240     6047    2      END;
      241     6048
      242     6049    1      CALL cleanup;
      243     6050    1      RETURN;
      244     6051
      245     6052    1   error_return:
      246     6053    1      CALL cleanup;
      247     6054    1      ALTRETURN;
      248     6055
      249     6056
      250     6057    1   cleanup: proc;
      251     6058
      252     6059    2      F.fpt_read.v.dcb# = 0;
      253     6060    2      F.fpt_write.v.dcb# = 0;
      254     6061    2      IF F.is_open = '1'B
      255     6062    3      THEN DO;
      256     6063    3           F.is_open = '0'B;
      257     6064    3           CALL XBI$UNLINK_FILE_HEADER (F);
      258     6065    3           END;
      259     6066    3      ELSE DO;
      260     6067    3           F$ = ADDR(F);
      261     6068    3           CALL XBI$UNPROTECT_POINTER (F$);
      262     6069    3           CALL XBI_FREE (F$);
PL6.E3A0      #004=XBI$FCLOSE File=xbi_io_close:6.:XBC3TSI                       FRI 01/06/95 11:24 Page:23   
      263     6070    3           END;
      264     6071
      265     6072    2      RETURN;
      266     6073    2   END cleanup;
      267     6074    1   END XBI$FCLOSE;

PL6.E3A0      #004=XBI$FCLOSE File=xbi_io_close:6.:XBC3TSI                       FRI 01/06/95 11:24 Page:24   
--  Include file information  --

   xb_errors_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XBI$FCLOSE.

   Procedure XBI$FCLOSE requires 91 words for executable code.
   Procedure XBI$FCLOSE requires 14 words of local(AUTO) storage.

    No errors detected in file xbi_io_close:6.:XBC3TSI    .

PL6.E3A0      #004=XBI$FCLOSE File=xbi_io_close:6.:XBC3TSI                       FRI 01/06/95 11:24 Page:25   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XBI$FCLOSE File=xbi_io_close:6.:XBC3TSI                       FRI 01/06/95 11:24 Page:26   
          MINI XREF LISTING

CLEANUP
      6057**PROC     6049--CALL     6053--CALL
ERROR_RETURN
      6053**LABEL    6029--CALLALT  6045--GOTO
F
      5892**DCL         7--PROC     6029<>CALL     6044<>CALL     6064<>CALL     6067--ASSIGN
F.BUFFER$
      5916**DCL      6031>>IF       6032<>CALL     6033<>CALL     6034<<ASSIGN
F.FPT_READ.V.DCB#
      5937**DCL      6039>>IF       6041>>ASSIGN   6059<<ASSIGN
F.FPT_READ.V.DVBYTE.REREAD#
      5954**DCL      5955--REDEF
F.FPT_READ.V.INDX#
      5947**DCL      5948--REDEF
F.FPT_WRITE.V.DCB#
      5974**DCL      6060<<ASSIGN
F.FPT_WRITE.V.DVBYTE.VFC#
      5992**DCL      5993--REDEF
F.HAS_AUTO_BUFFER
      5901**DCL      6031>>IF
F.IS_OPEN
      5900**DCL      6028>>IF       6061>>IF       6063<<ASSIGN
F$
      6025**DCL      6067<<ASSIGN   6068<>CALL     6069<>CALL
M$RELDCB
      5510**DCL-ENT  6042--CALL
RELDCB
      6021**DCL      6042<>CALL
RELDCB.V
      6021**DCL      6040--ASSIGN
RELDCB.V.DCB#
      6021**DCL      6041<<ASSIGN
PL6.E3A0      #004=XBI$FCLOSE File=xbi_io_close:6.:XBC3TSI                       FRI 01/06/95 11:24 Page:27   
RELDCB.V_
      6021**DCL      6040<<ASSIGN
XBI$CLOSE_FILE
      6004**DCL-ENT  6029--CALL
XBI$MIN_RELEASE_DCBNUM
      6026**DCL      6039>>IF
XBI$UNLINK_FILE_HEADER
      6008**DCL-ENT  6064--CALL
XBI$UNPROTECT_POINTER
      6005**DCL-ENT  6032--CALL     6068--CALL
XBI_FREE
      6006**DCL-ENT  6033--CALL     6069--CALL
XBI_SET_STREAM_ERRNO
      6007**DCL-ENT  6044--CALL
