

11:11 JAN 06 '95 stdio:h.:XBC3TSI                                          1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      #ifndef __stdio
    7      #define __stdio
    8
    9      #ifndef __size_t
   10      #define __size_t
   11      typedef unsigned size_t;
   12      #endif
   13
   14      #ifndef __va_list
   15      #define __va_list
   16      typedef   char    *va_list;
   17      #endif
   18
   19      #ifndef NULL
   20      #ifdef __STDC__
   21      #define NULL (void *)0
   22      #else
   23      #define NULL (char *)0
   24      #endif
   25      #endif
   26
   27      #define EOF       (-1)
   28
   29      #define L_tmpnam 11
   30      #define TMP_MAX  1000   /* really can be much larger */
   31      #define FOPEN_MAX 90
   32      #define FILENAME_MAX 64
   33      #define BUFSIZ 1024
   34
   35      typedef struct _FILE {
   36         unsigned int _flags;
   37         unsigned int _saved_char;
11:11 JAN 06 '95 stdio:h.:XBC3TSI                                          2    
   38         int          _record_position;
   39         unsigned int _character_position;
   40         unsigned int _continued_ios;
   41         unsigned int _ars;
   42         int          _last_record;
   43         char         *_buffer;
   44         unsigned int _buffer_size;
   45         int          *_xsa;
   46         unsigned int _state;
   47         struct _FILE *_next_file_header;
   48         int          _key;
   49         int          (*_auxio)();
   50         int          _mod_time;
   51         int          _create_time;
   52         int          _user;
   53         int          _rfu[3];
   54         struct __fpt_read {
   55            double      _v_;
   56            int         _key_[2];
   57            int         _buf_[2];
   58            int         _station_[2];
   59            struct _read_v{
   60               unsigned int   _dcb:18;
   61               unsigned int   _wait:1;
   62               unsigned int   _keys:1;
   63               unsigned int   _keyr:1;
   64               unsigned int   _id:1;
   65               unsigned int   _keychng:1;
   66               unsigned int   _full:1;
   67               unsigned int   _pbs:1;
   68               unsigned int   _pbr:1;
   69               unsigned int   _indx_or_keytype:9;
   70               int            _event;
   71               unsigned int   _seed;
   72               unsigned int   _dv_top:1;
   73               unsigned int   _dv_bp:1;
   74               unsigned int   _dv_reread_or_vfc:1;
11:11 JAN 06 '95 stdio:h.:XBC3TSI                                          3    
   75               unsigned int   _dv_bin:1;
   76               unsigned int   _dv_trans:1;
   77               unsigned int   :1;
   78               unsigned int   _dv_nodat:1;
   79               unsigned int   :1;
   80               unsigned int   _dv_cont:1;
   81               unsigned int   _strpvfc:1;
   82               unsigned int   :8;
   83               unsigned int   _recnum:18;
   84               unsigned int   _sinputsize:18;
   85               unsigned int   _rereadpos:18;
   86               unsigned int   _filler_1;
   87            } _v;
   88         } _fpt_read;
   89         struct __fpt_write{
   90            double      _v_;
   91            int         _key_[2];
   92            int         _buf_[2];
   93            int         _station_[2];
   94            struct _write_v{
   95               unsigned int   _dcb:18;
   96               unsigned int   _wait:1;
   97               unsigned int   :2;
   98               unsigned int   _id:1;
   99               unsigned int   :1;
  100               unsigned int   _full:1;
  101               unsigned int   :3;
  102               unsigned int   _onewkey:1;
  103               unsigned int   _newkey:1;
  104               unsigned int   _rewrite:1;
  105               unsigned int   _notime:1;
  106               unsigned int   :1;
  107               unsigned int   _keytype:4;
  108               int            _event;
  109               unsigned int   _seed;
  110               unsigned int   _dv_top:1;
  111               unsigned int   _dv_bp:1;
11:11 JAN 06 '95 stdio:h.:XBC3TSI                                          4    
  112               unsigned int   _dv_reread_or_vfc:1;
  113               unsigned int   _dv_bin:1;
  114               unsigned int   _dv_trans:1;
  115               unsigned int   _dv_rrr:1;
  116               unsigned int   _dv_nodat:1;
  117               unsigned int   :1;
  118               unsigned int   _dv_cont:1;
  119               unsigned int   :9;
  120               unsigned int   _filler_2;
  121            } _v;
  122         } _fpt_write;
  123      } FILE;
  124
  125      /* masks for the flags field in the FILE structure */
  126
  127      #define _is_text_mask             0400000000000
  128      #define _is_eof_mask              0200000000000
  129      #define _is_saved_char_mask       0100000000000
  130      #define _is_buffer_modified_mask  0040000000000
  131      #define _is_writes_ok_mask        0020000000000
  132      #define _is_write_at_eof_mask     0010000000000
  133      #define _is_error_mask            0004000000000
  134      #define _is_open_mask             0002000000000
  135      #define _has_auto_buffer_mask     0001000000000
  136      #define _is_reads_ok_mask         0000400000000
  137      #define _is_unbuffered_mask       0000200000000
  138      #define _is_partly_open_mask      0000100000000
  139      #define _cancel_xsa_mask          0000040000000
  140      #define _is_ic_mask               0000020000000
  141      #define _is_shared_mask           0000010000000
  142      #define _is_flushed_mask          0000004000000
  143
  144      /* legal values for state field in FILE */
  145
  146      #define _F_reading_state       0
  147      #define _F_writing_state       1
  148      #define _F_dont_care_state     2
11:11 JAN 06 '95 stdio:h.:XBC3TSI                                          5    
  149      #define _F_undefined_state     3
  150
  151      typedef struct _fpos_t {
  152         unsigned int record_position;
  153         unsigned int character_position;
  154      } fpos_t;
  155
  156      #ifndef __standard_files
  157      #define __standard_files
  158      extern   FILE  _iostd[];
  159      #endif
  160      #define  stdin    (&_iostd[0])
  161      #define  stdout   (&_iostd[1])
  162      #define  stderr   (&_iostd[2])
  163
  164      #ifndef  __SEEK__
  165      #define  __SEEK__
  166      #define SEEK_CUR 1
  167      #define SEEK_END 2
  168      #define SEEK_SET 0
  169      #endif
  170
  171      #define _IOFBF   0
  172      #define _IOLBF   1
  173      #define _IONBF   2
  174
  175      extern int remove ( const char * );
  176      extern int rename ( const char *, const char * );
  177      extern FILE *tmpfile ( void );
  178      extern char *tmpnam ( char * );
  179      extern int fclose ( FILE * );
  180      extern int fflush ( FILE * );
  181      extern FILE *fopen ( const char *, const char * );
  182      extern FILE *freopen ( const char *, const char *, FILE * );
  183      extern void setbuf ( FILE *, char * );
  184      extern int setvbuf ( FILE *, char *, int, size_t );
  185      extern int fprintf ( FILE *, const char *, ... );
11:11 JAN 06 '95 stdio:h.:XBC3TSI                                          6    
  186      extern int fscanf ( FILE *, const char *, ... );
  187      extern int printf ( const char *, ... );
  188      extern int scanf ( const char *, ... );
  189      extern int sprintf ( char *, const char *, ... );
  190      extern int sscanf ( const char *, const char *, ... );
  191      extern int vfprintf ( FILE *, const char *, va_list );
  192      extern int vprintf ( const char *, va_list );
  193      extern int vsprintf ( char *, const char *, va_list );
  194      extern int fgetc ( FILE * );
  195      extern char *fgets ( char *, int, FILE * );
  196      extern int fputc ( int, FILE * );
  197      extern int fputs ( const char *, FILE * );
  198      extern int getc ( FILE * );
  199      extern int _getc ( FILE * );
  200      extern int getchar ( void );
  201      extern int _getchar ( void );
  202      extern char *gets ( char * );
  203      extern int putc ( int, FILE * );
  204      extern int putchar ( int );
  205      extern int puts ( const char * );
  206      extern int ungetc ( int , FILE * );
  207      extern size_t fread ( void *, size_t, size_t, FILE * );
  208      extern size_t fwrite ( const void *, size_t, size_t, FILE * );
  209      extern int fgetpos ( FILE *, fpos_t * );
  210      extern int fseek ( FILE *, long int, int );
  211      extern int fsetpos ( FILE *, const fpos_t * );
  212      extern long int ftell ( FILE * );
  213      extern void rewind ( FILE * );
  214      extern void clearerr ( FILE * );
  215      extern int feof ( FILE * );
  216      extern int ferror ( FILE * );
  217      extern void perror ( const char * );
  218      extern char    *fwildfid (char *, int, int);
  219      extern int     touch (char *);
  220      extern int     printmsg(char *, ...);
  221      extern int     fprintmsg(FILE *, char *, ...);
  222      extern int     sprintmsg(char *, char *, ...);
11:11 JAN 06 '95 stdio:h.:XBC3TSI                                          7    
  223      extern char    *cuserid(char *);
  224      extern char    *getlogin();
  225      extern int     putw(int, FILE *);
  226      extern int     getw(FILE *);
  227      extern int     getpid();
  228      extern int     unlink(char *);
  229
  230      #define feof(f) ((f) -> _flags & _is_eof_mask)
  231      #define ferror(f) ((f) -> _flags & _is_error_mask)
  232      #define clearerr(f) ((f)->_flags &= ~(_is_error_mask | _is_eof_mask))
  233      #define getchar() (\
  234         (((stdin)->_flags & (_is_partly_open_mask | _is_saved_char_mask\
  235          | _is_eof_mask)) == 0) &&\
  236         ((stdin)->_state != _F_writing_state) &&\
  237         ((stdin)->_character_position < (stdin)->_ars)\
  238         ? (int) (*((stdin)->_buffer + (stdin)->_character_position++)) : _getchar ()\
  239         )
  240      #define getc(f) (\
  241         (((f)->_flags & (_is_partly_open_mask | _is_saved_char_mask\
  242          | _is_eof_mask)) == 0) &&\
  243         ((f)->_state != _F_writing_state) &&\
  244         ((f)->_character_position < (f)->_ars)\
  245         ? (int) (*((f)->_buffer + (f)->_character_position++)) : _getc (f)\
  246         )
  247
  248      /* until the compiler supports long and/or folded lines from the
  249         preprocessor, we're better off without the getchar and getc macros.
  250      */
  251
  252      #ifndef __STDC__
  253      #undef getchar
  254      #undef getc
  255      #endif
  256
  257      #define  L_cuserid   9
  258      #endif

