
 11:16 01/06/95  FILE=xb_qsort:a.:XBC3TSI                                                                1    BMAP - B00     
                                         1  *T***********************************************************
                                         2  *T*                                                         *
                                         3  *T* Copyright (c) Bull HN Information Systems Inc., 1989    *
                                         4  *T*                                                         *
                                         5  *T***********************************************************
                                         6            LODM      xbi_std_ig
                                         7
                                         8            ENTDEF    qsort
                                         9
                                        10            ENTREF    X66_AUTO_4
                                        11            ENTREF    X66_FARET
                                        12            ENTREF    XBI_MALLOC
                                        13            ENTREF    XBI_FREE
                                        14
 0 000000                               15            USE       qsort,1
                                        16
                                        17  *D* PROTOTYPE: void qsort (char *base, unsigned count, int size, int (*compar)() )
                                        18  *,* DESCRIPTION : sorts an array of count ellements whose first element
                                        19  *,*               is pointed to by base, each element has in characters
                                        20  *,*               is size and compar is a user supplied function that
                                        21  *,*               takes as arguments pointers to two elements and returns
                                        22  *,*               -1 if the first is "less than" the second, 0 if the two
                                        23  *,*               elements are equal and 1 if the first element is "greater
                                        24  *,*               than the second.
                                        25  *,*
                                        26  *,*               The code is a BMAP version of this C code ....
                                        27  *,*
                                        28  *,* ->  * qsort - shell sort a vector of things
                                        29  *,* ->
                                        30  *,* -> qsort(base, count, size, compar)
                                        31  *,* ->
                                        32  *,* ->  char *base;
                                        33  *,* ->  unsigned int size, count;
                                        34  *,* ->  int (*compar)();
                                        35  *,* ->
                                        36  *,* -> {
                                        37  *,* ->  char *p, *q, *r;
 11:16 01/06/95  FILE=xb_qsort:a.:XBC3TSI                                                                2    BMAP - B00     
                                        38  *,* ->  int delta;
                                        39  *,* ->  char *end, *x, *stop;
                                        40  *,* ->  extern char *malloc();
                                        41  *,* ->
                                        42  *,* ->  delta = 1;
                                        43  *,* ->  while ((delta = delta*3 + 1) < count);
                                        44  *,* ->
                                        45  *,* ->  delta *= size;
                                        46  *,* ->  end = &base[size*count];
                                        47  *,* ->  x = malloc(size);
                                        48  *,* ->
                                        49  *,* ->  while ((delta = (delta - size)/3) > 0)
                                        50  *,* ->     {
                                        51  *,* ->      for (stop=p = &base[delta]; p < end; p += size)
                                        52  *,* ->         {
                                        53  *,* ->          memcpy(x, p, size);
                                        54  *,* ->          for (r=q=p; q >= stop && 0 > (*compar)(x, q-=delta, size);)
                                        55  *,* ->             {
                                        56  *,* ->              memcpy(r, q, size);
                                        57  *,* ->              r = q;
                                        58  *,* ->             }
                                        59  *,* ->          memcpy(r, x, size);
                                        60  *,* ->         }
                                        61  *,* ->     }
                                        62  *,* ->  free(x);
                                        63  *,* -> }
                                        64  */
                                        65
          (0)000000000000               66  qsort        EQU     *
                                        67
             000000000003               68  base         EQU     3
             000000000004               69  count        EQU     4
             000000000005               70  size         EQU     5
             000000000006               71  compar       EQU     6
             000000000007               72  p            EQU     7
             000000000010               73  q            EQU     8
             000000000011               74  r            EQU     9
 11:16 01/06/95  FILE=xb_qsort:a.:XBC3TSI                                                                3    BMAP - B00     
             000000000012               75  delta        EQU     10
             000000000013               76  end          EQU     11
             000000000014               77  x            EQU     12
             000000000015               78  stop         EQU     13
                                        79
   000000  X 000000 7000 00             80               TSX0    X66_AUTO_4
   000001    000026 000004              81               ZERO    22,4
                                        82
   000002    000001 2350 07             83               LDA     1,DL              - delta = 1;
   000003    2 00012 7551 00            84               STA     delta,,AUTO
                                        85
          (0)000000000004               86  qsortPT1     EQU     *
   000004    2 00012 2361 00            87               LDQ     delta,,AUTO       - while ((delta = delta*3 + 1) < count);
   000005    000003 4020 07             88               MPY     3,DL
   000006    000001 0760 07             89               ADQ     1,DL
   000007    2 00012 7561 00            90               STQ     delta,,AUTO
   000010    2 00004 1161 00            91               CMPQ    count,,AUTO
   000011 (0)000004 6020 00             92               TNC     qsortPT1
                                        93
   000012    2 00005 2361 00            94               LDQ     size,,AUTO        - delta *= size;
   000013    2 00012 4021 00            95               MPY     delta,,AUTO
   000014    2 00012 7561 00            96               STQ     delta,,AUTO
                                        97
   000015    2 00005 2361 00            98               LDQ     size,,AUTO        - end = &base[size*count];
   000016    2 00004 4021 00            99               MPY     count,,AUTO
   000017    000020 7360 00            100               QLS     16
   000020    2 00003 0361 00           101               ADLQ    base,,AUTO
   000021    2 00013 7561 00           102               STQ     end,,AUTO
                                       103
   000022    2 00014 6305 00           104               EPPR0   x,,AUTO           - x = malloc(size);
   000023    2 00022 4505 00           105               STP0    stop+5,,AUTO
   000024    2 00005 6315 00           106               EPPR1   size,,AUTO
   000025    2 00021 4515 00           107               STP1    stop+4,,AUTO
   000026    2 00021 6305 00           108               EPPR0   stop+4,,AUTO
   000027 (1)000000 6314 00            109               EPPR1   =o000002000000
   000030  X 000000 7010 00            110               TSX1    XBI_MALLOC
   000031    000000 0110 00            111               NOP     0
 11:16 01/06/95  FILE=xb_qsort:a.:XBC3TSI                                                                4    BMAP - B00     
                                       112
          (0)000000000032              113  qsortPT2     EQU     *                 - while ((delta = (delta - size)/3) > 0)
   000032    2 00012 2361 00           114               LDQ     delta,,AUTO
   000033    2 00005 1361 00           115               SBLQ    size,,AUTO
   000034    000003 5060 07            116               DIV     3,DL
   000035    2 00012 7561 00           117               STQ     delta,,AUTO
   000036    000000 1160 07            118               CMPQ    0,DL
   000037 (0)000136 6044 00            119               TMOZ    qsortPT7
                                       120
   000040    2 00012 2351 00           121               LDA     delta,,AUTO       - for (stop=p = &base[delta]; p < end; p += s
   000041    000020 7350 00            122               ALS     16
   000042    2 00003 0351 00           123               ADLA    base,,AUTO
   000043    2 00007 7551 00           124               STA     p,,AUTO
   000044    2 00015 7551 00           125               STA     stop,,AUTO
   000045 (0)000052 7100 00            126               TRA     qsortPT4
                                       127
          (0)000000000046              128  qsortPT3     EQU     *
   000046    2 00005 2351 00           129               LDA     size,,AUTO
   000047    2 00007 4705 00           130               LDP0    p,,AUTO
   000050    0 00000 5005 05           131               A9BD    0,AL,PR0
   000051    2 00007 4505 00           132               STP0    p,,AUTO
                                       133
          (0)000000000052              134  qsortPT4     EQU     *
   000052    2 00007 2351 00           135               LDA     p,,AUTO
   000053    2 00013 1151 00           136               CMPA    end,,AUTO
   000054 (0)000032 6030 00            137               TRC     qsortPT2
                                       138
   000055    2 00007 4705 00           139               LDP0    p,,AUTO           - memcpy(x, p, size);
   000056    2 00005 7201 00           140               LXL0    size,,AUTO
   000057    2 00014 4715 00           141               LDP1    x,,AUTO
   000060    2 00005 7211 00           142               LXL1    size,,AUTO
   000061    000 0 140 1005 40         143               MLR     (1,1),(1,1),0
   000062    0 00000 0 0 0 0010        144               ADSC9   0,,X0,PR0
   000063    1 00000 0 0 0 0011        145               ADSC9   0,,X1,PR1
                                       146
   000064    2 00007 2351 00           147               LDA     p,,AUTO           - for (r=q=p; q >= stop && 0 > (*compar)(x, q
   000065    2 00010 7551 00           148               STA     q,,AUTO
 11:16 01/06/95  FILE=xb_qsort:a.:XBC3TSI                                                                5    BMAP - B00     
   000066    2 00011 7551 00           149               STA     r,,AUTO
                                       150
          (0)000000000067              151  qsortPT5     EQU     *
   000067    2 00010 2351 00           152               LDA     q,,AUTO
   000070    2 00015 1151 00           153               CMPA    stop,,AUTO
   000071 (0)000126 6020 00            154               TNC     qsortPT6
   000072    2 00014 2351 00           155               LDA     x,,AUTO
   000073    2 00021 7551 00           156               STA     stop+4,,AUTO
   000074    2 00012 3351 00           157               LCA     delta,,AUTO
   000075    2 00010 4705 00           158               LDP0    q,,AUTO
   000076    0 00000 5005 05           159               A9BD    0,AL,PR0
   000077    2 00010 4505 00           160               STP0    q,,AUTO
   000100    2 00024 4505 00           161               STP0    stop+7,,AUTO
   000101    2 00024 2361 00           162               LDQ     stop+7,,AUTO
   000102    2 00022 7561 00           163               STQ     stop+5,,AUTO
   000103    2 00005 2351 00           164               LDA     size,,AUTO
   000104    2 00023 7551 00           165               STA     stop+6,,AUTO
   000105    2 00021 6305 00           166               EPPR0   stop+4,,AUTO
   000106 (1)000001 6314 00            167               EPPR1   =o000003000000
   000107    2 00006 4775 00           168               LDP7    compar,,AUTO
   000110    7 00000 7011 00           169               TSX1    0,,PR7
   000111    000000 2360 07            170               LDQ     0,DL
   000112    000000 1160 07            171               CMPQ    0,DL
   000113 (0)000126 6050 00            172               TPL     qsortPT6
                                       173
   000114    2 00010 4705 00           174               LDP0    q,,AUTO           - memcpy(r, q, size);
   000115    2 00005 7201 00           175               LXL0    size,,AUTO
   000116    2 00011 4715 00           176               LDP1    r,,AUTO
   000117    2 00005 7211 00           177               LXL1    size,,AUTO
   000120    000 0 140 1005 40         178               MLR     (1,1),(1,1),0
   000121    0 00000 0 0 0 0010        179               ADSC9   0,,X0,PR0
   000122    1 00000 0 0 0 0011        180               ADSC9   0,,X1,PR1
                                       181
   000123    2 00010 2351 00           182               LDA     q,,AUTO           - r = q;
   000124    2 00011 7551 00           183               STA     r,,AUTO
   000125 (0)000067 7100 00            184               TRA     qsortPT5
                                       185
 11:16 01/06/95  FILE=xb_qsort:a.:XBC3TSI                                                                6    BMAP - B00     
          (0)000000000126              186  qsortPT6     EQU     *
   000126    2 00014 4705 00           187               LDP0    x,,AUTO           - memcpy(r, x, size);
   000127    2 00005 7201 00           188               LXL0    size,,AUTO
   000130    2 00011 4715 00           189               LDP1    r,,AUTO
   000131    2 00005 7211 00           190               LXL1    size,,AUTO
   000132    000 0 140 1005 40         191               MLR     (1,1),(1,1),0
   000133    0 00000 0 0 0 0010        192               ADSC9   0,,X0,PR0
   000134    1 00000 0 0 0 0011        193               ADSC9   0,,X1,PR1
                                       194
   000135 (0)000046 7100 00            195               TRA     qsortPT3
                                       196
          (0)000000000136              197  qsortPT7     EQU     *                 - free(x);
   000136    2 00014 6305 00           198               EPPR0   x,,AUTO
   000137    2 00021 4505 00           199               STP0    stop+4,,AUTO
   000140    2 00021 6305 00           200               EPPR0   stop+4,,AUTO
   000141 (1)000002 6314 00            201               EPPR1   =o000001000000
   000142  X 000000 7010 00            202               TSX1    XBI_FREE
   000143    000000 0110 00            203               NOP     0
                                       204
   000144  X 000000 7020 00            205               TSX2    X66_FARET
                                 99999.999         END               ***END OF FILE***
 1 000000    000002000000
   000001    000003000000
   000002    000001000000

  CONTROL SECTION TABLE

   0 CODE   EVEN  000145 QSORT
   1 RODATA EVEN  000003 LITERALS

 11:16 01/06/95  FILE=xb_qsort:a.:XBC3TSI     SYMBOL TABLE                                               7    BMAP - B00     
 00101000 000000000000 /*T*            *6
 00101000 000000000000 /*T***************************      *6
 41000000 000000000102 AUTO            *6        84        87        90        91        94        95
                                       96        98        99       101       102       104       105
                                      106       107       108       114       115       117       121
                                      123       124       125       129       130       132       135
                                      136       139       140       141       142       147       148
                                      149       152       153       155       156       157       158
                                      160       161       162       163       164       165       166
                                      168       174       175       176       177       182       183
                                      187       188       189       190       198       199       200
 41000000 000000000003 BASE           *68       101       123
 41000000 000000000006 COMPAR         *71       168
 41000000 000000000004 COUNT          *69        91        99
 41000000 000000000012 DELTA          *75        84        87        90        95        96       114
                                      117       121       157
 41000000 000000000013 END            *76       102       136
 41000000 000000000007 P              *72       124       130       132       135       139       147
 41000000 000000000100 PR0             *6       131       144       159       179       192
 41000000 000000000101 PR1             *6       145       180       193
 41000000 000000000102 PR2             *6
 41000000 000000000103 PR3             *6
 41000000 000000000104 PR4             *6
 41000000 000000000105 PR5             *6
 41000000 000000000106 PR6             *6
 41000000 000000000107 PR7             *6       169
 41000000 000000000010 Q              *73       148       152       158       160       174       182
 52101000 000000000000 QSORT            8       *66
 41101000 000000000004 QSORTPT1       *86        92
 41101000 000000000032 QSORTPT2      *113       137
 41101000 000000000046 QSORTPT3      *128       195
 41101000 000000000052 QSORTPT4       126      *134
 41101000 000000000067 QSORTPT5      *151       184
 41101000 000000000126 QSORTPT6       154       172      *186
 41101000 000000000136 QSORTPT7       119      *197
 41000000 000000000011 R              *74       149       176       183       189
 41000000 000000000005 SIZE           *70        94        98       106       115       129       140
 11:16 01/06/95  FILE=xb_qsort:a.:XBC3TSI     SYMBOL TABLE                                               8    BMAP - B00     
                                      142       164       175       177       188       190
 41000000 000000000015 STOP           *78       105       107       108       125       153       156
                                      161       162       163       165       166       199       200
 41000000 000000000014 X              *77       104       141       155       187       198
 03201000 000000000000 X66_AUTO_4     *10        80
 03201001 000000000000 X66_FARET      *11       205
 03201003 000000000000 XBI_FREE       *13       202
 03201002 000000000000 XBI_MALLOC     *12       110

      34 SYMBOLS

       0 MACROS

    SYMBOL SPACE USED   624 WORDS
     MACRO SPACE USED     0 WORDS
   INPUT RECORDS READ   426
 STATEMENTS PROCESSED   163
         ELAPSED TIME  0:01.20
             CPU TIME     0.98 SEC.
        ASSEMBLY RATE  9980 STATEMENTS/CPU MIN.

      NO ERRORS

