
PL6.E3A0      #001=FSEEK File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        fseek: PROC (F, P_offset, P_whence);
        7        7           /*D*  NAME: fseek
        8        8                 PROTOTYPE: int fseek (FILE *stream, long int offset, int whence)
        9        9                 PURPOSE: Positions stream.  For text streams, offset has to be
       10       10                    initialized by a previous call to ftell.  For binary streams,
       11       11                    offset is a character offset.  whence determines what point
       12       12                    positioning is done from.
       13       13           */
       14       14
       15       15           %INCLUDE xb_stdio_i6;
       16      258           %INCLUDE xb_errors_i6;
       17      329
       18      330           %File_Header (Name=F, Stclass=" ");
       19      442
       20      443    1      DCL P_offset               UBIN;
       21      444    1      DCL P_whence               UBIN;
       22      445
       23      446    1      DCL offset_as_ptr          PTR;
       24      447    1      DCL offset REDEF offset_as_ptr SBIN;
       25      448    1      DCL 1 text_offset REDEF offset_as_ptr ALIGNED,
       26      449    1         2  record_position      UBIN (19) UNAL,
       27      450    1         2  character_position   UBIN (17) UNAL;
       28      451
       29      452    1      DCL whence_as_ptr          PTR;
       30      453    1      DCL whence REDEF whence_as_ptr UBIN;
       31      454
       32      455           %fpos_t (Name=position, Stclass=" ");
       33      460    1      DCL current_offset         SBIN;
       34      461    1      DCL new_offset             SBIN;
       35      462
       36      463    1      DCL XBI_SET_STREAM_ERRNO   ENTRY (2);
       37      464    1      DCL XBI$POSITION_TO_EOF    ENTRY (1) ALTRET;
PL6.E3A0      #001=FSEEK File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:2    
       38      465    1      DCL XBI$FSETPOS            ENTRY (2) ALTRET;
       39      466    1      DCL XB_RETURN_ORDINAL_RESULT  ENTRY (1);
       40      467    1      DCL XBI$COMPLETE_OPEN      ENTRY (1) ALTRET;
       41      468    1      DCL XB_IO_ERROR            ENTRY;
       42      469
       43      470    1      offset_as_ptr = ADDR (P_offset);
       44      471    1      whence_as_ptr = ADDR (P_whence);
       45      472
       46      473    2      IF (F.auxio$ ~= ADDR(NIL)) THEN DO;
       47      474    2         CALL XBI_SET_STREAM_ERRNO (F, ERR$AUXIO_FILE_POINTER);
       48      475    2         CALL XB_IO_ERROR;
       49      476    2      END;
       50      477
       51      478    1      IF F.is_partly_open THEN CALL XBI$COMPLETE_OPEN (F) ALTRET (error_return);
       52      479
       53      480    2      DO CASE (whence);
       54      481    2         CASE (%SEEK_CUR);
       55      482    2            IF F.is_text THEN
       56      483    3               IF offset = 0 THEN DO;
       57      484    3                  IF F.is_writes_ok AND F.is_reads_ok THEN
       58      485    3                     F.state = %F_dont_care_state;
       59      486    3                  F.is_eof = '0'B;
       60      487    3                  CALL XB_RETURN_ORDINAL_RESULT (0);
       61      488    2               END; ELSE
       62      489    2                  GOTO bum_whence;
       63      490
       64      491    2            current_offset = ((F.record_position - 1) * F.buffer_size) +
       65      492    2               F.character_position;
       66      493    2            new_offset = MAXIMUM (current_offset + offset, 0);
       67      494    2            position.record_position = (new_offset / F.buffer_size) + 1;
       68      495    2            position.character_position = MOD (new_offset, F.buffer_size);
       69      496    2         CASE (%SEEK_SET);
       70      497    2            IF F.is_text THEN
       71      498    3               IF offset = 0 THEN DO;
       72      499    3                  position.record_position = 1;
       73      500    3                  position.character_position = 0;
       74      501    3               END; ELSE DO;
PL6.E3A0      #001=FSEEK File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:3    
       75      502    3                  position.record_position = text_offset.record_position;
       76      503    3                  position.character_position = text_offset.character_position;
       77      504    3               END;
       78      505    2            ELSE
       79      506    3               IF offset < 0 THEN DO;
       80      507    3                  GOTO bum_whence;
       81      508    3               END; ELSE DO;
       82      509    3                  position.record_position = (offset / F.buffer_size) + 1;
       83      510    3                  position.character_position = MOD (offset, F.buffer_size);
       84      511    3               END;
       85      512    2         CASE (%SEEK_END);
       86      513    2            IF F.is_text THEN
       87      514    3               IF offset = 0 THEN DO;
       88      515    3                  IF NOT F.is_eof THEN
       89      516    3                     CALL XBI$POSITION_TO_EOF (F) ALTRET (error_return);
       90      517    3                  F.is_eof = '0'B;
       91      518    3                  CALL XB_RETURN_ORDINAL_RESULT (0);
       92      519    2               END; ELSE
       93      520    2                  GOTO bum_whence;
       94      521    2            IF offset > 0 THEN GOTO bum_whence;
       95      522    2            IF NOT F.is_eof THEN
       96      523    2               CALL XBI$POSITION_TO_EOF (F) ALTRET (error_return);
       97      524    3            IF offset = 0 THEN DO;
       98      525    3               F.is_eof = '0'B;
       99      526    3               CALL XB_RETURN_ORDINAL_RESULT (0);
      100      527    3            END;
      101      528    2            current_offset = ((F.record_position - 1) * F.buffer_size) +
      102      529    2               F.character_position;
      103      530    2            new_offset = MAXIMUM (current_offset + offset, 0);
      104      531    2            position.record_position = (new_offset / F.buffer_size) + 1;
      105      532    2            position.character_position = MOD (new_offset, F.buffer_size);
      106      533    2         CASE (ELSE);
      107      534    2            GOTO bum_whence;
      108      535    2      END;
      109      536    1      CALL XBI$FSETPOS (F, position) ALTRET (error_return);
      110      537    1      F.is_eof = '0'B;
      111      538    1      CALL XB_RETURN_ORDINAL_RESULT (0);
PL6.E3A0      #001=FSEEK File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:4    
      112      539
      113      540    1   bum_whence:
      114      541    1      CALL XBI_SET_STREAM_ERRNO (F, ERR$BAD_WHENCE);
      115      542
      116      543    1   error_return:
      117      544    1      CALL XB_RETURN_ORDINAL_RESULT (1);
      118      545
      119      546    1   END fseek;
      120      547        %EOD;

PL6.E3A0      #001=FSEEK File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:5    
--  Include file information  --

   xb_errors_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FSEEK.

   Procedure FSEEK requires 207 words for executable code.
   Procedure FSEEK requires 14 words of local(AUTO) storage.

PL6.E3A0      #001=FSEEK File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:6    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FSEEK File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:7    
          MINI XREF LISTING

BUM_WHENCE
       541**LABEL     489--GOTO      507--GOTO      520--GOTO      521--GOTO      534--GOTO
CURRENT_OFFSET
       460**DCL       491<<ASSIGN    493>>ASSIGN    528<<ASSIGN    530>>ASSIGN
ERROR_RETURN
       544**LABEL     478--CALLALT   516--CALLALT   523--CALLALT   536--CALLALT
F
       331**DCL         6--PROC      474<>CALL      478<>CALL      516<>CALL      523<>CALL      536<>CALL
       541<>CALL
F.AUXIO$
       363**DCL       473>>IF
F.BUFFER_SIZE
       356**DCL       491>>ASSIGN    494>>ASSIGN    495>>ASSIGN    509>>ASSIGN    510>>ASSIGN    528>>ASSIGN
       531>>ASSIGN    532>>ASSIGN
F.CHARACTER_POSITION
       351**DCL       491>>ASSIGN    528>>ASSIGN
F.FPT_READ.V.DVBYTE.REREAD#
       393**DCL       394--REDEF
F.FPT_READ.V.INDX#
       386**DCL       387--REDEF
F.FPT_WRITE.V.DVBYTE.VFC#
       431**DCL       432--REDEF
F.IS_EOF
       333**DCL       486<<ASSIGN    515>>IF        517<<ASSIGN    522>>IF        525<<ASSIGN    537<<ASSIGN
F.IS_PARTLY_OPEN
       343**DCL       478>>IF
F.IS_READS_OK
       341**DCL       484>>IF
F.IS_TEXT
       332**DCL       482>>IF        497>>IF        513>>IF
F.IS_WRITES_OK
       336**DCL       484>>IF
PL6.E3A0      #001=FSEEK File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:8    
F.RECORD_POSITION
       350**DCL       491>>ASSIGN    528>>ASSIGN
F.STATE
       358**DCL       485<<ASSIGN
NEW_OFFSET
       461**DCL       493<<ASSIGN    494>>ASSIGN    495>>ASSIGN    530<<ASSIGN    531>>ASSIGN    532>>ASSIGN
OFFSET
       447**DCL       483>>IF        493>>ASSIGN    498>>IF        506>>IF        509>>ASSIGN    510>>ASSIGN
       514>>IF        521>>IF        524>>IF        530>>ASSIGN
OFFSET_AS_PTR
       446**DCL       447--REDEF     448--REDEF     470<<ASSIGN
POSITION
       456**DCL       536<>CALL
POSITION.CHARACTER_POSITION
       458**DCL       495<<ASSIGN    500<<ASSIGN    503<<ASSIGN    510<<ASSIGN    532<<ASSIGN
POSITION.RECORD_POSITION
       457**DCL       494<<ASSIGN    499<<ASSIGN    502<<ASSIGN    509<<ASSIGN    531<<ASSIGN
P_OFFSET
       443**DCL         6--PROC      470--ASSIGN
P_WHENCE
       444**DCL         6--PROC      471--ASSIGN
TEXT_OFFSET.CHARACTER_POSITION
       450**DCL       503>>ASSIGN
TEXT_OFFSET.RECORD_POSITION
       449**DCL       502>>ASSIGN
WHENCE
       453**DCL       480>>DOCASE
WHENCE_AS_PTR
       452**DCL       453--REDEF     471<<ASSIGN
XB$ERR$AUXIO_FILE_POINTER
       325**DCL       474<>CALL
XB$ERR$BAD_WHENCE
       314**DCL       541<>CALL
XBI$COMPLETE_OPEN
       467**DCL-ENT   478--CALL
XBI$FSETPOS
PL6.E3A0      #001=FSEEK File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:9    
       465**DCL-ENT   536--CALL
XBI$POSITION_TO_EOF
       464**DCL-ENT   516--CALL      523--CALL
XBI_SET_STREAM_ERRNO
       463**DCL-ENT   474--CALL      541--CALL
XB_IO_ERROR
       468**DCL-ENT   475--CALL
XB_RETURN_ORDINAL_RESULT
       466**DCL-ENT   487--CALL      518--CALL      526--CALL      538--CALL      544--CALL

PL6.E3A0      #002=REWIND File=xb_io_position:6.:XBC3TSI                         FRI 01/06/95 11:27 Page:10   
      121        1        /*T***********************************************************/
      122        2        /*T*                                                         */
      123        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      124        4        /*T*                                                         */
      125        5        /*T***********************************************************/
      126        6
      127        7
      128        8        rewind: PROC (F);
      129        9           /*D*  NAME: rewind
      130       10                 PROTOTYPE: void rewind (FILE *stream);
      131       11                 PURPOSE: positions stream to the beginning.
      132       12           */
      133       13
      134       14           %INCLUDE xb_stdio_i6;
      135      257           %INCLUDE xb_errors_i6;
      136      328
      137      329           %File_Header (Name=F, Stclass=" ");
      138      441
      139      442           %fpos_t (Name=bof, Stclass=" ");
      140      447
      141      448    1      DCL XBI$FSETPOS               ENTRY (2) ALTRET;
      142      449    1      DCL XBI$COMPLETE_OPEN         ENTRY (1) ALTRET;
      143      450    1      DCL XB_IO_ERROR            ENTRY;
      144      451    1      DCL XBI_SET_STREAM_ERRNO   ENTRY(2);
      145      452
      146      453    2      IF (F.auxio$ ~= ADDR(NIL)) THEN DO;
      147      454    2         CALL XBI_SET_STREAM_ERRNO (F, ERR$AUXIO_FILE_POINTER);
      148      455    2         CALL XB_IO_ERROR;
      149      456    2      END;
      150      457
      151      458    1      IF F.is_partly_open THEN CALL XBI$COMPLETE_OPEN (F);
      152      459
      153      460    1      bof.record_position = 1;
      154      461    1      bof.character_position = 0;
      155      462    1      CALL XBI$FSETPOS (F, bof);
      156      463    1   END rewind;
      157      464        %EOD;
PL6.E3A0      #002=REWIND File=xb_io_position:6.:XBC3TSI                         FRI 01/06/95 11:27 Page:11   

PL6.E3A0      #002=REWIND File=xb_io_position:6.:XBC3TSI                         FRI 01/06/95 11:27 Page:12   
--  Include file information  --

   xb_errors_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure REWIND.

   Procedure REWIND requires 36 words for executable code.
   Procedure REWIND requires 8 words of local(AUTO) storage.

PL6.E3A0      #002=REWIND File=xb_io_position:6.:XBC3TSI                         FRI 01/06/95 11:27 Page:13   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=REWIND File=xb_io_position:6.:XBC3TSI                         FRI 01/06/95 11:27 Page:14   
          MINI XREF LISTING

BOF
       443**DCL       462<>CALL
BOF.CHARACTER_POSITION
       445**DCL       461<<ASSIGN
BOF.RECORD_POSITION
       444**DCL       460<<ASSIGN
F
       330**DCL         8--PROC      454<>CALL      458<>CALL      462<>CALL
F.AUXIO$
       362**DCL       453>>IF
F.FPT_READ.V.DVBYTE.REREAD#
       392**DCL       393--REDEF
F.FPT_READ.V.INDX#
       385**DCL       386--REDEF
F.FPT_WRITE.V.DVBYTE.VFC#
       430**DCL       431--REDEF
F.IS_PARTLY_OPEN
       342**DCL       458>>IF
XB$ERR$AUXIO_FILE_POINTER
       324**DCL       454<>CALL
XBI$COMPLETE_OPEN
       449**DCL-ENT   458--CALL
XBI$FSETPOS
       448**DCL-ENT   462--CALL
XBI_SET_STREAM_ERRNO
       451**DCL-ENT   454--CALL
XB_IO_ERROR
       450**DCL-ENT   455--CALL

PL6.E3A0      #003=FTELL File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:15   
      158        1        /*T***********************************************************/
      159        2        /*T*                                                         */
      160        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      161        4        /*T*                                                         */
      162        5        /*T***********************************************************/
      163        6
      164        7        ftell: PROC (F);
      165        8           /*D*  NAME: ftell
      166        9                 PROTOTYPE: long int ftell (FILE *stream);
      167       10                 PURPOSE: returns the current position of the file.
      168       11           */
      169       12
      170       13           %INCLUDE xb_stdio_i6;
      171      256           %INCLUDE CP_6;
      172     5816           %INCLUDE xb_errors_i6;
      173     5887           %INCLUDE xb_error_numbers_i6;
      174     5934
      175     5935           %File_Header (Name=F, Stclass=" ");
      176     6047
      177     6048    1      DCL binary_result             UBIN;
      178     6049    1      DCL 1 text_result ALIGNED,
      179     6050    1         2  record                  UBIN (19),
      180     6051    1         2  character               UBIN (17);
      181     6052    1      DCL record                    UBIN;
      182     6053    1      DCL character                 UBIN;
      183     6054
      184     6055    1      DCL XB_RETURN_ORDINAL_RESULT  ENTRY (1);
      185     6056    1      DCL XBI$COMPLETE_OPEN      ENTRY (1) ALTRET;
      186     6057    1      DCL XBI_SET_STREAM_ERRNO          ENTRY (2);
      187     6058    1      DCL XB_IO_ERROR            ENTRY;
      188     6059
      189     6060           %VLP_ERRCODE (FPTN=ERR$BAD_FTELL, STCLASS="CONSTANT SYMDEF",
      190     6061                         FCG='XB', MID='I', ERR#="E$BAD_FTELL", SEV=7);
      191     6106
      192     6107    2      IF (F.auxio$ ~= ADDR(NIL)) THEN DO;
      193     6108    2         CALL XBI_SET_STREAM_ERRNO (F, ERR$AUXIO_FILE_POINTER);
      194     6109    2         CALL XB_IO_ERROR;
PL6.E3A0      #003=FTELL File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:16   
      195     6110    2      END;
      196     6111
      197     6112    2      IF (~F.is_open) THEN DO;
      198     6113        /*E* ERROR: XBI-E$BAD_FTELL_C
      199     6114             MESSAGE: A call to ftell() was made on a file that was not
      200     6115                      currently open.
      201     6116        */
      202     6117    2         CALL XBI_SET_STREAM_ERRNO (F, ERR$BAD_FTELL);
      203     6118    2         CALL XB_RETURN_ORDINAL_RESULT (-1);
      204     6119    2      END;
      205     6120
      206     6121    1      IF F.is_partly_open THEN CALL XBI$COMPLETE_OPEN (F);
      207     6122
      208     6123    1      record = F.record_position;
      209     6124    1      character = F.character_position;
      210     6125    2      IF record = 0 THEN DO;
      211     6126    2         record = 1;
      212     6127    2         character = 0;
      213     6128    2      END;
      214     6129    2      IF F.is_text THEN DO;
      215     6130    2         text_result.record = record;
      216     6131    2         text_result.character = character;
      217     6132    2         CALL XB_RETURN_ORDINAL_RESULT (text_result);
      218     6133    2      END; ELSE DO;
      219     6134    2         binary_result = (record - 1) * F.buffer_size + character;
      220     6135    2         IF (F.is_saved_char) then
      221     6136    2            binary_result = binary_result - 1;
      222     6137    2         CALL XB_RETURN_ORDINAL_RESULT (binary_result);
      223     6138    2      END;
      224     6139    1   END ftell;
      225     6140        %EOD;

PL6.E3A0      #003=FTELL File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:17   
--  Include file information  --

   xb_error_numbers_i6.:XBC3TOU  is referenced.
   xb_errors_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FTELL.

   Procedure FTELL requires 84 words for executable code.
   Procedure FTELL requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=FTELL File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:18   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FTELL File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:19   
          MINI XREF LISTING

BINARY_RESULT
      6048**DCL      6134<<ASSIGN   6136<<ASSIGN   6136>>ASSIGN   6137<>CALL
CHARACTER
      6053**DCL      6124<<ASSIGN   6127<<ASSIGN   6131>>ASSIGN   6134>>ASSIGN
F
      5936**DCL         7--PROC     6108<>CALL     6117<>CALL     6121<>CALL
F.AUXIO$
      5968**DCL      6107>>IF
F.BUFFER_SIZE
      5961**DCL      6134>>ASSIGN
F.CHARACTER_POSITION
      5956**DCL      6124>>ASSIGN
F.FPT_READ.V.DVBYTE.REREAD#
      5998**DCL      5999--REDEF
F.FPT_READ.V.INDX#
      5991**DCL      5992--REDEF
F.FPT_WRITE.V.DVBYTE.VFC#
      6036**DCL      6037--REDEF
F.IS_OPEN
      5944**DCL      6112>>IF
F.IS_PARTLY_OPEN
      5948**DCL      6121>>IF
F.IS_SAVED_CHAR
      5939**DCL      6135>>IF
F.IS_TEXT
      5937**DCL      6129>>IF
F.RECORD_POSITION
      5955**DCL      6123>>ASSIGN
RECORD
      6052**DCL      6123<<ASSIGN   6125>>IF       6126<<ASSIGN   6130>>ASSIGN   6134>>ASSIGN
TEXT_RESULT
      6049**DCL      6132<>CALL
PL6.E3A0      #003=FTELL File=xb_io_position:6.:XBC3TSI                          FRI 01/06/95 11:27 Page:20   
TEXT_RESULT.CHARACTER
      6051**DCL      6131<<ASSIGN
TEXT_RESULT.RECORD
      6050**DCL      6130<<ASSIGN
XB$ERR$AUXIO_FILE_POINTER
      5883**DCL      6108<>CALL
XB$ERR$BAD_FTELL
      6073**DCL      6117<>CALL
XBI$COMPLETE_OPEN
      6056**DCL-ENT  6121--CALL
XBI_SET_STREAM_ERRNO
      6057**DCL-ENT  6108--CALL     6117--CALL
XB_IO_ERROR
      6058**DCL-ENT  6109--CALL
XB_RETURN_ORDINAL_RESULT
      6055**DCL-ENT  6118--CALL     6132--CALL     6137--CALL

PL6.E3A0      #004=FGETPOS File=xb_io_position:6.:XBC3TSI                        FRI 01/06/95 11:27 Page:21   
      226        1        /*T***********************************************************/
      227        2        /*T*                                                         */
      228        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      229        4        /*T*                                                         */
      230        5        /*T***********************************************************/
      231        6
      232        7        fgetpos: PROC (F, file_position);
      233        8           /*D*  NAME: fgetpos
      234        9                 PROTOTYPE: int fgetpos (FILE *stream, fpos_t *pos);
      235       10                 INPUT: F file_header;
      236       11                 OUTPUT: pos file_position;
      237       12                 PURPOSE: Returns the position of the stream F in pos.  This can later
      238       13                    be used as an argument to fsetpos to return to the same position.
      239       14           */
      240       15
      241       16           %INCLUDE xb_stdio_i6;
      242      259           %INCLUDE xb_errors_i6;
      243      330
      244      331           %File_Header (Name=F, Stclass=" ");
      245      443           %fpos_t (Name=file_position, Stclass=" ");
      246      448
      247      449    1      DCL XBI$COMPLETE_OPEN         ENTRY (1) ALTRET;
      248      450    1      DCL XB_RETURN_ORDINAL_RESULT  ENTRY (1);
      249      451    1      DCL XB_IO_ERROR            ENTRY;
      250      452    1      DCL XBI_SET_STREAM_ERRNO   ENTRY(2);
      251      453
      252      454    2      IF (F.auxio$ ~= ADDR(NIL)) THEN DO;
      253      455    2         CALL XBI_SET_STREAM_ERRNO (F, ERR$AUXIO_FILE_POINTER);
      254      456    2         CALL XB_IO_ERROR;
      255      457    2      END;
      256      458
      257      459    1      IF F.is_partly_open THEN CALL XBI$COMPLETE_OPEN (F)
      258      460    2         WHENALTRETURN DO;
      259      461    2            CALL XB_RETURN_ORDINAL_RESULT (1);
      260      462    2         END;
      261      463
      262      464    2      IF F.record_position = 0 THEN DO;
PL6.E3A0      #004=FGETPOS File=xb_io_position:6.:XBC3TSI                        FRI 01/06/95 11:27 Page:22   
      263      465    2         file_position.record_position = 1;
      264      466    2         file_position.character_position = 0;
      265      467    2      END; ELSE DO;
      266      468    2         file_position.record_position = F.record_position;
      267      469    2         file_position.character_position = F.character_position;
      268      470    2      END;
      269      471    1      CALL XB_RETURN_ORDINAL_RESULT (0);
      270      472    1   END fgetpos;
      271      473        %EOD;

PL6.E3A0      #004=FGETPOS File=xb_io_position:6.:XBC3TSI                        FRI 01/06/95 11:27 Page:23   
--  Include file information  --

   xb_errors_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FGETPOS.

   Procedure FGETPOS requires 46 words for executable code.
   Procedure FGETPOS requires 8 words of local(AUTO) storage.

PL6.E3A0      #004=FGETPOS File=xb_io_position:6.:XBC3TSI                        FRI 01/06/95 11:27 Page:24   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FGETPOS File=xb_io_position:6.:XBC3TSI                        FRI 01/06/95 11:27 Page:25   
          MINI XREF LISTING

F
       332**DCL         7--PROC      455<>CALL      459<>CALL
F.AUXIO$
       364**DCL       454>>IF
F.CHARACTER_POSITION
       352**DCL       469>>ASSIGN
F.FPT_READ.V.DVBYTE.REREAD#
       394**DCL       395--REDEF
F.FPT_READ.V.INDX#
       387**DCL       388--REDEF
F.FPT_WRITE.V.DVBYTE.VFC#
       432**DCL       433--REDEF
F.IS_PARTLY_OPEN
       344**DCL       459>>IF
F.RECORD_POSITION
       351**DCL       464>>IF        468>>ASSIGN
FILE_POSITION
       444**DCL         7--PROC
FILE_POSITION.CHARACTER_POSITION
       446**DCL       466<<ASSIGN    469<<ASSIGN
FILE_POSITION.RECORD_POSITION
       445**DCL       465<<ASSIGN    468<<ASSIGN
XB$ERR$AUXIO_FILE_POINTER
       326**DCL       455<>CALL
XBI$COMPLETE_OPEN
       449**DCL-ENT   459--CALL
XBI_SET_STREAM_ERRNO
       452**DCL-ENT   455--CALL
XB_IO_ERROR
       451**DCL-ENT   456--CALL
XB_RETURN_ORDINAL_RESULT
       450**DCL-ENT   461--CALL      471--CALL

PL6.E3A0      #005=FSETPOS File=xb_io_position:6.:XBC3TSI                        FRI 01/06/95 11:27 Page:26   
      272        1        /*T***********************************************************/
      273        2        /*T*                                                         */
      274        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
      275        4        /*T*                                                         */
      276        5        /*T***********************************************************/
      277        6
      278        7        fsetpos: PROC (F, fileposition);
      279        8           /*D*  NAME: fsetpos
      280        9                 PROTOTYPE: int fsetpos (FILE *stream, const fpos_t *pos);
      281       10                 PURPOSE: positions the stream F to the position defined by pos.
      282       11           */
      283       12
      284       13           %INCLUDE xb_stdio_i6;
      285      256           %INCLUDE xb_errors_i6;
      286      327
      287      328           %File_Header (Name=F, Stclass=" ");
      288      440           %fpos_t (Name=fileposition, Stclass=" ");
      289      445
      290      446    1      DCL XB_RETURN_ORDINAL_RESULT     ENTRY (1);
      291      447    1      DCL XBI$FSETPOS                  ENTRY (2) ALTRET;
      292      448    1      DCL XBI$COMPLETE_OPEN            ENTRY (1) ALTRET;
      293      449    1      DCL XB_IO_ERROR            ENTRY;
      294      450    1      DCL XBI_SET_STREAM_ERRNO   ENTRY(2);
      295      451
      296      452    2      IF (F.auxio$ ~= ADDR(NIL)) THEN DO;
      297      453    2         CALL XBI_SET_STREAM_ERRNO (F, ERR$AUXIO_FILE_POINTER);
      298      454    2         CALL XB_IO_ERROR;
      299      455    2      END;
      300      456
      301      457    1      IF F.is_partly_open THEN CALL XBI$COMPLETE_OPEN (F)
      302      458    2         WHENALTRETURN DO;
      303      459    2            CALL XB_RETURN_ORDINAL_RESULT (1);
      304      460    2         END;
      305      461
      306      462    1      CALL XBI$FSETPOS (F, fileposition)
      307      463    2         WHENRETURN DO;
      308      464    2            CALL XB_RETURN_ORDINAL_RESULT (0);
PL6.E3A0      #005=FSETPOS File=xb_io_position:6.:XBC3TSI                        FRI 01/06/95 11:27 Page:27   
      309      465    2         END;
      310      466    2         WHENALTRETURN DO;
      311      467    2            CALL XB_RETURN_ORDINAL_RESULT (1);
      312      468    2         END;
      313      469    1   END fsetpos;

PL6.E3A0      #005=FSETPOS File=xb_io_position:6.:XBC3TSI                        FRI 01/06/95 11:27 Page:28   
--  Include file information  --

   xb_errors_i6.:XBC3TOU  cannot be made into a system file and is referenced.
   xb_stdio_i6.:XBC3TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FSETPOS.

   Procedure FSETPOS requires 43 words for executable code.
   Procedure FSETPOS requires 8 words of local(AUTO) storage.

    No errors detected in file xb_io_position:6.:XBC3TSI    .

PL6.E3A0      #005=FSETPOS File=xb_io_position:6.:XBC3TSI                        FRI 01/06/95 11:27 Page:29   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=FSETPOS File=xb_io_position:6.:XBC3TSI                        FRI 01/06/95 11:27 Page:30   
          MINI XREF LISTING

F
       329**DCL         7--PROC      453<>CALL      457<>CALL      462<>CALL
F.AUXIO$
       361**DCL       452>>IF
F.FPT_READ.V.DVBYTE.REREAD#
       391**DCL       392--REDEF
F.FPT_READ.V.INDX#
       384**DCL       385--REDEF
F.FPT_WRITE.V.DVBYTE.VFC#
       429**DCL       430--REDEF
F.IS_PARTLY_OPEN
       341**DCL       457>>IF
FILEPOSITION
       441**DCL         7--PROC      462<>CALL
XB$ERR$AUXIO_FILE_POINTER
       323**DCL       453<>CALL
XBI$COMPLETE_OPEN
       448**DCL-ENT   457--CALL
XBI$FSETPOS
       447**DCL-ENT   462--CALL
XBI_SET_STREAM_ERRNO
       450**DCL-ENT   453--CALL
XB_IO_ERROR
       449**DCL-ENT   454--CALL
XB_RETURN_ORDINAL_RESULT
       446**DCL-ENT   459--CALL      464--CALL      467--CALL
