
 11:17 01/06/95  FILE=xb_string_sg:a.:XBC3TSI                                                            1    BMAP - B00     
                                         1  *T***********************************************************
                                         2  *T*                                                         *
                                         3  *T* Copyright (c) Bull HN Information Systems Inc., 1989    *
                                         4  *T*                                                         *
                                         5  *T***********************************************************
                                         6                LODM           xbi_std_ig
                                         7
                                         8                ENTDEF         strlen
                                         9                ENTDEF         strcpy
                                        10                ENTDEF         strncpy
                                        11                ENTDEF         strcmp
                                        12                ENTDEF         strcoll
                                        13                ENTDEF         strncmp
                                        14                ENTDEF         strcat
                                        15                ENTDEF         strncat
                                        16                ENTDEF         strchr
                                        17                ENTDEF         strrchr
                                        18                ENTDEF         memchr
                                        19                ENTDEF         XBI$STRLEN
                                        20  *
                                        21  * Segment Identifiers:
                                        22                SEGREF         ISSID
                                        23                SEGREF         NULLSID
                                        24
                                        25  *D* PROTOTYPE:   int strlen (char *string)
                                        26  *,* DESCRIPTION: returns the number of characters in the string preceeding
                                        27  *,*              the terminating NULL character.
                                        28  */
          (0)000000000000               29  strlen        EQU            *
                                        30  *********     LDP1           0,,PR0         pointer to string
                                        31  *********     LCQ            1,DL           maximum length4
                                        32  *********     SCM            (1,1),(0,0,0,DU),0
                                        33  *********     ADSC9          0,0,QL,PR1
                                        34  *********     ADSC9          0
                                        35  *********     ARG            LENGTH
                                        36  *********     LDQ            LENGTH
                                        37  *
 11:17 01/06/95  FILE=xb_string_sg:a.:XBC3TSI                                                            2    BMAP - B00     
 0 000000    0 00000 4715 00            38                LDP1           0,,PR0         Pointer to string
   000001 (0)000173 7070 00             39                TSX7           SCM_LEN
   000002    000001 7100 11             40                TRA            1,X1
                                        41  *
                                        42  * PL6 interface: XBI$STRLEN( char *string, int *len )
                                        43  *
   000003                               44  XBI$STRLEN    NULL
   000003    0 00000 4715 00            45                LDP1           0,,PR0
   000004    0 00001 4735 00            46                LDP3           1,,PR0
   000005 (0)000173 7070 00             47                TSX7           SCM_LEN
   000006    3 00000 7561 00            48                STQ            0,,PR3
   000007    000001 7100 11             49                TRA            1,X1
                                        50
                                        51  *D* PROTOTYPE:   char *strcpy (char *destination, *source);
                                        52  *,* DESCRIPTION: copies the contents of string source to string destination,
                                        53  *,*              overwriting
                                        54  *,*              the contents of destination. A pointer to the first character
                                        55  *,*              of destination is returned.
                                        56  */
          (0)000000000010               57  strcpy        EQU            *
   000010    0 00001 4715 00            58                LDP1           1,,PR0         pointer to source
   000011    0 00000 4735 00            59                LDP3           0,,PR0         pointer to destination
   000012 (0)000173 7070 00             60                TSX7           SCM_LEN        Locate size of string
   000013    000001 0760 07             61                ADQ            1,DL           add 1 so null is included in move
   000014    000 0 140 1005 40          62                MLR            (1,1),(1,1)
   000015    1 00000 0 0 0 0006         63                ADSC9          0,0,QL,PR1
   000016    3 00000 0 0 0 0006         64                ADSC9          0,0,QL,PR3
   000017    0 00000 2361 00            65                LDQ            0,,PR0         return pointer to destination
   000020    000001 7100 11             66                TRA            1,X1
                                        67
                                        68  *D* PROTOTYPE:   char *strncpy (char *s1, *s2; int n);
                                        69  *,* DESCRIPTION: copies the contents of up to n characters of string s2
                                        70  *,*              to string s1, overwriting the contents of s1. If there
                                        71  *,*              are fewer than n characters in s2 then NULL characters
                                        72  *,*              are written into s1 until n characters are in s1.
                                        73  *,*              A pointer to the first character of s1 is returned.
                                        74  */
 11:17 01/06/95  FILE=xb_string_sg:a.:XBC3TSI                                                            3    BMAP - B00     
          (0)000000000021               75  strncpy       EQU            *
   000021    0 00000 4735 00            76                LDP3           0,,PR0         pointer to destination
   000022    0 00001 4715 00            77                LDP1           1,,PR0         pointer to source
   000023    0 00002 2361 00            78                LDQ            2,,PR0
   000024 (0)000176 7070 00             79                TSX7           SCM_LEN_N      Get length of source
   000025    0 00002 2351 00            80                LDA            2,,PR0         load destination size
   000026    000 0 140 1005 40          81                MLR            (1,1),(1,1),0  move, pad with nulls
   000027    1 00000 0 0 0 0006         82                ADSC9          0,0,QL,PR1
   000030    3 00000 0 0 0 0005         83                ADSC9          0,0,AL,PR3
   000031    0 00000 2361 00            84                LDQ            0,,PR0         return pointer to destination
   000032    000001 7100 11             85                TRA            1,X1
                                        86
                                        87  *D* PROTOTYPE:   int *strcmp (char *s1, *s2);
                                        88  *,* DESCRIPTION: lexicographically compares the contents of strings
                                        89  *,*              s1 and s2. An interger is returned which is zero if
                                        90  *,*              the strings are equal, minus 1 if s1 is less than s2
                                        91  *,*              and 1 if s1 is greater than s2.
                                        92  *,*
                                        93  *,* ENTRY:       int *strcoll (char *s1, *s2);
                                        94  *,* DESCRIPTION: since setlocale is a stub in our implementation, strcoll
                                        95  *,*              is equivalent to strcmp.
                                        96  */
          (0)000000000033               97  strcmp        EQU            *
          (0)000000000033               98  strcoll       EQU            *
   000033    0 00000 4745 00            99                LDP4           0,,PR0         pointer to s1
   000034    0 00001 4735 00           100                LDP3           1,,PR0         pointer to s2
   000035    000001 3360 07            101                LCQ            1,DL           maximum string size
   000036 (0)000042 7100 00            102                TRA            string_compare
                                       103
                                       104  *D* PROTOTYPE:   int *strncmp (char *s1, *s2, n);
                                       105  *,* DESCRIPTION: lexicographically compares up to n characters the
                                       106  *,*              contents of strings s1 and s2. An interger is returned
                                       107  *,*              which is zero if the strings are equal, minus 1 if s1
                                       108  *,*              is less than s2 and 1 if s1 is greater than s2.
                                       109  */
          (0)000000000037              110  strncmp       EQU            *
   000037    0 00000 4745 00           111                LDP4           0,,PR0         pointer to s1
 11:17 01/06/95  FILE=xb_string_sg:a.:XBC3TSI                                                            4    BMAP - B00     
   000040    0 00001 4735 00           112                LDP3           1,,PR0         pointer to s2
   000041    0 00002 2361 00           113                LDQ            2,,PR0         maximum string size
                                       114
          (0)000000000042              115  string_compare EQU           *
   000042 (2)000003 7560 00            116                STQ            LENGTH_S1
   000043    3 00000 6315 00           117                EPPR1          0,,PR3
   000044 (0)000176 7070 00            118                TSX7           SCM_LEN_N            find length of s2
   000045 (2)000003 1160 00            119                CMPQ           LENGTH_S1
   000046    000002 6020 04            120                TNC            2,IC
   000047 (2)000003 2360 00            121                LDQ            LENGTH_S1
   000050 (2)000004 7560 00            122                STQ            LENGTH_S2
   000051 (2)000003 2360 00            123                LDQ            LENGTH_S1
   000052    4 00000 6315 00           124                EPPR1          0,,PR4              find length of s1
   000053 (0)000176 7070 00            125                TSX7           SCM_LEN_N
   000054 (2)000003 1160 00            126                CMPQ           LENGTH_S1
   000055    000002 6020 04            127                TNC            2,IC
   000056 (2)000003 2360 00            128                LDQ            LENGTH_S1
   000057 (2)000004 2350 00            129                LDA            LENGTH_S2
   000060    000 0 140 1065 40         130                CMPC           (1,1),(1,1),0  compare the strings
   000061    1 00000 0 0 0 0006        131                ADSC9          0,0,QL,PR1
   000062    3 00000 0 0 0 0005        132                ADSC9          0,0,AL,PR3
   000063 (0)000066 6030 00            133                TRC            strcmp_carry
   000064    000001 3360 07            134                LCQ            1,DL           s1 < s2
   000065    000001 7100 11            135                TRA            1,X1
          (0)000000000066              136  strcmp_carry  EQU            *
   000066 (0)000071 6000 00            137                TZE            strcmp_zero
   000067    000001 2360 07            138                LDQ            1,DL           s1 > s2
   000070    000001 7100 11            139                TRA            1,X1
          (0)000000000071              140  strcmp_zero   EQU            *
   000071    000000 2360 07            141                LDQ            0,DL           s1 = s2
   000072    000001 7100 11            142                TRA            1,X1
                                       143
                                       144  *D* PROTOTYPE:   char *strcat (char *s1, *s2);
                                       145  *,* DESCRIPTION: appends the contents of string s2 to the end of string s1.
                                       146  *,*              A pointer to the first character of s1 is returned.
                                       147  */
          (0)000000000073              148  strcat        EQU            *
 11:17 01/06/95  FILE=xb_string_sg:a.:XBC3TSI                                                            5    BMAP - B00     
   000073    0 00000 4745 00           149                LDP4           0,,PR0         pointer to s1
   000074    0 00001 4735 00           150                LDP3           1,,PR0         pointer to s2
   000075    000001 3360 07            151                LCQ            1,DL           maximum s2 string size
   000076 (0)000102 7100 00            152                TRA            string_cat
                                       153
                                       154  *D* PROTOTYPE:   char *strncat (char *s1, *s2, n);
                                       155  *,* DESCRIPTION: appends the contents of up n characters of string s2
                                       156  *,*              to the end of string s1. If s2 is shorther than n
                                       157  *,*              in length then the function stops at the null.
                                       158  *,*              A pointer to the first character of s1 is returned.
                                       159  */
          (0)000000000077              160  strncat       EQU            *
   000077    0 00000 4745 00           161                LDP4           0,,PR0         pointer to s1
   000100    0 00001 4735 00           162                LDP3           1,,PR0         pointer to s2
   000101    0 00002 2361 00           163                LDQ            2,,PR0         maximum s2 string size
                                       164
          (0)000000000102              165  string_cat    EQU            *
   000102 (2)000004 7560 00            166                STQ            LENGTH_S2
   000103    3 00000 6315 00           167                EPPR1          0,,PR3         Get s2 string size
   000104 (0)000176 7070 00            168                TSX7           SCM_LEN_N         Find length
   000105 (2)000004 1160 00            169                CMPQ           LENGTH_S2
   000106    000002 6030 04            170                TRC            2,IC
   000107 (2)000004 7560 00            171                STQ            LENGTH_S2
   000110    4 00000 6315 00           172                EPPR1          0,,PR4       find length of s1
   000111 (0)000173 7070 00            173                TSX7           SCM_LEN
   000112    1 00000 5005 06           174                A9BD           0,QL,PR1       after s1.
   000113 (2)000004 2360 00            175                LDQ            LENGTH_S2      load length of s2
   000114 (2)000004 2350 00            176                LDA            LENGTH_S2      length of target string is the
   000115    000001 0750 07            177                ADA            1,DL           length of s2 plus 1
   000116    000 0 140 1005 40         178                MLR            (1,1),(1,1),0  move string, pad with a null
   000117    3 00000 0 0 0 0006        179                ADSC9          0,0,QL,PR3
   000120    1 00000 0 0 0 0005        180                ADSC9          0,0,AL,PR1
   000121    0 00000 2361 00           181                LDQ            0,,PR0         return s1
   000122    000001 7100 11            182                TRA            1,X1
                                       183
                                       184  *D* PROTOTYPE:   char *strchr (char *s, c);
                                       185  *,* DESCRIPTION: searches the string s for the firrst occurrence of the
 11:17 01/06/95  FILE=xb_string_sg:a.:XBC3TSI                                                            6    BMAP - B00     
                                       186  *,*              single character c. If the character is found a pointer
                                       187  *,*              to it within the string is returned. If it is not found
                                       188  *,*              a null pointer is returned.
                                       189  */
          (0)000000000123              190  strchr        EQU            *
   000123    0 00000 4715 00           191                LDP1           0,,PR0         pointer to string
   000124    000001 3360 07            192                LCQ            1,DL           maximum length
   000125 (0)000173 7070 00            193                TSX7           SCM_LEN
   000126    000001 0360 07            194                ADLQ           1,DL           null is valid search target
   000127    000 0 100 1245 40         195                SCM            (1,1),(1,0),0  search for character
   000130    1 00000 0 0 0 0006        196                ADSC9          0,0,QL,PR1
   000131    0 00001 6 0 0 0000        197                ADSC9          1,3,,PR0
   000132 (2)000002 0000 00            198                ARG            LENGTH
   000133 (0)000171 6064 00            199                TTN            return_null    tally runout?
   000134 (2)000002 2360 00            200                LDQ            LENGTH         yes, return pointer to it
   000135    000020 7360 00            201                QLS            16
   000136    0 00000 0361 00           202                ADLQ           0,,PR0
   000137    000001 7100 11            203                TRA            1,X1
                                       204
                                       205  *D* PROTOTYPE:   char *strrchr (char *s, c);
                                       206  *,* DESCRIPTION: searches the string s for the last occurrence of the
                                       207  *,*              single character c. If the character is found a pointer
                                       208  *,*              to it within the string is returned. If it is not found
                                       209  *,*                  a null pointer is returned.
                                       210  */
          (0)000000000140              211  strrchr        EQU            *
   000140    0 00000 4715 00           212                LDP1           0,,PR0         pointer to string
   000141    000001 3360 07            213                LCQ            1,DL           maximum length
   000142 (0)000173 7070 00            214                TSX7           SCM_LEN
   000143    000001 0360 07            215                ADLQ           1,DL           0 is valid search target
   000144    000 0 100 1255 40         216                SCMR           (1,1),(1,0),0  search for character
   000145    1 00000 0 0 0 0006        217                ADSC9          0,0,QL,PR1
   000146    0 00001 6 0 0 0000        218                ADSC9          1,3,,PR0
   000147 (2)000002 0000 00            219                ARG            LENGTH
   000150 (0)000171 6064 00            220                TTN            return_null
   000151 (2)000002 1760 00            221                SBQ            LENGTH
   000152    000001 1760 07            222                SBQ            1,DL
 11:17 01/06/95  FILE=xb_string_sg:a.:XBC3TSI                                                            7    BMAP - B00     
   000153    000020 7360 00            223                QLS            16
   000154    0 00000 0361 00           224                ADLQ           0,,PR0
   000155    000001 7100 11            225                TRA            1,X1
                                       226
                                       227  *D* PROTOTYPE:   void *memchr (const void *arrays,int ch,size_t n);
                                       228  *,* DESCRIPTION: searches the first n bytes of the array arrays for
                                       229  *,*              the character ch. Returns a pointer to the first
                                       230  *,*              occurrence or NULL of the character does not occur.
                                       231  */
          (0)000000000156              232  memchr        EQU            *
   000156    0 00000 4715 00           233                LDP1           0,,PR0         pointer to string
   000157    0 00002 2361 00           234                LDQ            2,,PR0         load length of string
   000160    000 0 100 1245 40         235                SCM            (1,1),(1,0),0  search for character
   000161    1 00000 0 0 0 0006        236                ADSC9          0,0,QL,PR1
   000162    0 00001 6 0 0 0000        237                ADSC9          1,3,,PR0
   000163 (2)000002 0000 00            238                ARG            LENGTH
   000164 (0)000171 6064 00            239                TTN            return_null    tally runout?
   000165 (2)000002 2360 00            240                LDQ            LENGTH         yes, return pointer to it
   000166    000020 7360 00            241                QLS            16
   000167    0 00000 0361 00           242                ADLQ           0,,PR0
   000170    000001 7100 11            243                TRA            1,X1
                                       244
          (0)000000000171              245  return_null   EQU         *
   000171  X 000000 2360 07            246                LDQ            NULLSID,DL      not found, return NULL
   000172    000001 7100 11            247                TRA            1,X1
                                       248  *
                                       249  * Setup SCM length:
                                       250  *
                                       251  *    Problems:
                                       252  *
                                       253  *    1. Because some CPUs pre-page (fetch page table info one page
                                       254  *       ahead of the actual working page), we must provide a very
                                       255  *       good guess about how long the string is if:
                                       256  *
                                       257  *       a) the string is in the last page of the dynamic data segment
                                       258  *       b) the next page is not allocated in the instruction segment.
                                       259  *
 11:17 01/06/95  FILE=xb_string_sg:a.:XBC3TSI                                                            8    BMAP - B00     
                                       260  *    2. The SCM is done in one page chunks when looking at strings in
                                       261  *       the instruction segment, otherwise, we are too likely to trap.
                                       262  *       Dynamic segments have no holes therefore, we can store the
                                       263  *       descriptor to get the segment size.
                                       264  *
   000173                              265  SCM_LEN       NULL
   000173    000001 3360 07            266                LCQ            1,DL
   000174 (2)000005 7560 00            267                STQ            LENGTH_MAX
   000175 (0)000177 7100 00            268                TRA            SCM_LEN_BEG
   000176                              269  SCM_LEN_N     NULL
   000176 (2)000005 7560 00            270                STQ            LENGTH_MAX
                                       271  *                            $PR1 has ptr to return bound
   000177 (2)000002 4514 00            272  scm_len_beg   STP1           LENGTH
   000200    1 00000 6375 00           273                EPPR7          0,,PR1      Dont use PR1 but PR7
   000201    004000 2360 03            274                LDQ           =2048,DU     Now compute end of page disp
   000202 (2)000002 1360 00            275                SBLQ           LENGTH
   000203    000020 7720 00            276                QRL            16          Byte count to page end in Q
   000204    007777 3760 07            277                ANQ            4095,DL     Now we have bytes to page end
   000205 (0)000207 6010 00            278                TNZ            scm_len0    Brif not start of page
   000206    010000 2360 07            279                LDQ           =4096,DL     A full page!
   000207 (2)000002 2350 00            280  scm_len0      LDA            LENGTH      Now see if ISADDR
   000210    007777 3750 07            281                ANA           =o7777,DL    Mask off segid
   000211  X 000000 1150 07            282                CMPA           ISSID,DL    Is this instruction segment?
   000212 (0)000217 6000 00            283                TZE            scm_len1       Yes, we go in small chnks
   000213 (2)000000 0514 00            284                STD1           DESCRIPTOR  Store descriptor
   000214 (2)000000 2360 00            285                LDQ            DESCRIPTOR  and get bound
   000215 (2)000002 1360 00            286                SBLQ           LENGTH      Compute remaining chars
   000216    000020 7720 00            287                QRL            16
   000217    000000 2350 07            288  scm_len1      LDA            0,DL        Got the best guess length
   000220    000401 2260 03            289                LDX6          =257,DU
   000221 (2)000005 1160 00            290                CMPQ           LENGTH_MAX
   000222 (0)000224 6020 00            291                TNC            SCM_LEN_LP
   000223 (2)000005 2360 00            292                LDQ            LENGTH_MAX
   000224    000 0 003 1245 40         293  scm_len_lp    SCM            (1,1),(0,0,0,DU),0
   000225    7 00000 0 0 0 0006        294                ADSC9          0,0,QL,PR7
   000226    000000 0 0 0 0000         295                ADSC9          0
   000227 (2)000002 0000 00            296                ARG            LENGTH
 11:17 01/06/95  FILE=xb_string_sg:a.:XBC3TSI                                                            9    BMAP - B00     
   000230 (0)000240 6070 00            297                TTF            scm_len_xit
   000231 (2)000002 0350 00            298                ADLA           LENGTH
   000232    7 00000 5005 06           299                A9BD           0,QL,PR7
   000233    010000 2360 07            300                LDQ           =4096,DL
   000234 (2)000005 1150 00            301                CMPA          LENGTH_MAX
   000235 (0)000243 6030 00            302                TRC           SCM_PAST_MAX
   000236    000001 1260 03            303                SBLX6         =1,DU
   000237 (0)000224 6054 00            304                TPNZ           scm_len_lp
   000240 (2)000002 0550 00            305  scm_len_xit   ASA            LENGTH
   000241 (2)000002 2360 00            306                LDQ            LENGTH
   000242    000000 7100 17            307                TRA            0,X7
   000243 (2)000005 2360 00            308  scm_past_max  LDQ            LENGTH_MAX
   000244    000000 7100 17            309                TRA            0,X7
                                       310
 2 000000                              311                USE            string,0
                                       312                EVEN
   000000    000000000000              313  DESCRIPTOR    OCT            0,0
   000001    000000000000
   000002    000000000000              314  LENGTH        OCT            0
   000003    000000000000              315  LENGTH_S1     OCT            0
   000004    000000000000              316  LENGTH_S2     OCT            0
   000005    000000000000              317  LENGTH_MAX    OCT            0
                                       318                END

  CONTROL SECTION TABLE

   0 CODE   EVEN  000245
   1 RODATA EVEN  000000 LITERALS
   2 DATA   EVEN  000006 STRING

 11:17 01/06/95  FILE=xb_string_sg:a.:XBC3TSI SYMBOL TABLE                                               10   BMAP - B00     
 00101000 000000000000 /*T*            *6
 00101000 000000000000 /*T***************************      *6
 40000000 000000000102 AUTO            *6
 01101002 000000000000 DESCRIPTOR     284       285      *313
 03601000 000000000000 ISSID          *22       282
 01101002 000000000002 LENGTH         198       200       219       221       238       240       272
                                      275       280       286       296       298       305       306
                                     *314
 01101002 000000000005 LENGTH_MAX     267       270       290       292       301       308      *317
 01101002 000000000003 LENGTH_S1      116       119       121       123       126       128      *315
 01101002 000000000004 LENGTH_S2      122       129       166       169       171       175       176
                                     *316
 52101000 000000000156 MEMCHR          18      *232
 03601001 000000000000 NULLSID        *23       246
 41000000 000000000100 PR0             *6        38        45        46        58        59        65
                                       76        77        78        80        84        99       100
                                      111       112       113       149       150       161       162
                                      163       181       191       197       202       212       218
                                      224       233       234       237       242
 41000000 000000000101 PR1             *6        63        82       131       174       180       196
                                      217       236       273
 41000000 000000000102 PR2             *6
 41000000 000000000103 PR3             *6        48        64        83       117       132       167
                                      179
 41000000 000000000104 PR4             *6       124       172
 41000000 000000000105 PR5             *6
 41000000 000000000106 PR6             *6
 41000000 000000000107 PR7             *6       294       299
 41101000 000000000171 RETURN_NULL    199       220       239      *245
 01101000 000000000173 SCM_LEN         39        47        60       173       193       214      *265
 01101000 000000000207 SCM_LEN0       278      *280
 01101000 000000000217 SCM_LEN1       283      *288
 01101000 000000000177 SCM_LEN_BEG    268      *272
 01101000 000000000224 SCM_LEN_LP     291      *293       304
 01101000 000000000176 SCM_LEN_N       79       118       125       168      *269
 01101000 000000000240 SCM_LEN_XIT    297      *305
 01101000 000000000243 SCM_PAST_MAX   302      *308
 11:17 01/06/95  FILE=xb_string_sg:a.:XBC3TSI SYMBOL TABLE                                               11   BMAP - B00     
 52101000 000000000073 STRCAT          14      *148
 52101000 000000000123 STRCHR          16      *190
 52101000 000000000033 STRCMP          11       *97
 41101000 000000000066 STRCMP_CARRY   133      *136
 41101000 000000000071 STRCMP_ZERO    137      *140
 52101000 000000000033 STRCOLL         12       *98
 52101000 000000000010 STRCPY           9       *57
 41101000 000000000102 STRING_CAT     152      *165
 41101000 000000000042 STRING_COMPARE           102      *115
 52101000 000000000000 STRLEN           8       *29
 52101000 000000000077 STRNCAT         15      *160
 52101000 000000000037 STRNCMP         13      *110
 52101000 000000000021 STRNCPY         10       *75
 52101000 000000000140 STRRCHR         17      *211
 12101000 000000000003 XBI$STRLEN      19       *44

      43 SYMBOLS

       0 MACROS

    SYMBOL SPACE USED   668 WORDS
     MACRO SPACE USED     0 WORDS
   INPUT RECORDS READ   652
 STATEMENTS PROCESSED   248
         ELAPSED TIME  0:01.92
             CPU TIME     1.36 SEC.
        ASSEMBLY RATE 10941 STATEMENTS/CPU MIN.

      NO ERRORS

