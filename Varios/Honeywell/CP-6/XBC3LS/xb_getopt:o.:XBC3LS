

CC.C02    File=xb_getopt:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=1  
        1         1             /*M*    getopt      -- get option letter from argument vector    */
        2         2
        3         3             /*F*    NAME:          getopt
        4         4                     PURPOSE:       To help analyze command lines.
        5         5
        6         6                     CALL:          int getopt(int argc, char **argv, char *optstr)
        7         7                     INTERFACE:     extern char *optarg;
        8         8                                    extern int   optind;
        9         9                                    extern int   opterr;
       10        10
       11        11                     DESCRIPTION:
       12        12
       13        13                        "getopt" is a command line parser.  It returns the next
       14        14                        option letter in argv that matches a letter in opstring.
       15        15                        opstring is a string of recognized option letters; if a
       16        16                        letter is followed by a colon, the option is expected to
       17        17                        have an argument that may or may not be separated from it
       18        18                        by white space.  optarg is set to point to the start of
       19        19                        the option argument on return from getopt.
       20        20
       21        21                        getopt places in optind the argv index of the next argument
       22        22                        to be processed.  The external variable optind is
       23        23                        initialized to 1 before the first call to getopt.
       24        24
       25        25                        When all options have been procesed (i.e., up to the first
       26        26                        non-option argument), getopt returns EOF.  The special
       27        27                        option -- may be used to delimit the end of the options;
       28        28                        EOF will be returned, and -- will be skipped.
       29        29
       30        30                        Return Value
       31        31
       32        32                        getopt prints an error message on stderr and returns a
       33        33                        question mark (?) when it encounters an option letter
       34        34                        not included in optstring.  This error message may be
       35        35                        disabled by setting opterr to zero (0).
       36        36
       37        37                        Extensions:
CC.C02    File=xb_getopt:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=2  
       38        38
       39        39                        For CP-6, the option scan skips over non-option arguments
       40        40                        and uses them later for arguments or returns NULL while
       41        41                        setting up optarg to those arguments until all of the
       42        42                        command line arguments have been processed.
       43        43
       44        44             */
       45        45
       46        46             #include   <stdio.h>
       47        47             #include   <string.h>
       48        48
       49        49             int     optind   =  1;    /*  next option index   */
       50        50             int     opterr   =  1;    /*  Report errors       */
       51        51             char   *optarg   =  0;    /*  Option argument string */
       52        52
       53        53             static  opti     =  0;    /*  position in argv[optind]  */
       54        54             static  optmoved =  0;    /*  number of non-options moved     */
       55        55             static  optdone  =  0;    /*  all options processed           */
       56        56             static  optx     =  1;    /*  shadow optind             */
       57        57             static  optstrt  = 262143;/*  index of "--"             */
       58        58             static  opteof1  =  0;    /* EOF at least once!         */
       59        59
       60        60             int
       61        61             getopt( argc, argv, optstring)
       62        62               int         argc;
       63        63               char      **argv;
       64        64               char       *optstring;
       65        65             {
       66        66    1          int         c, fc;
       67        67    1          char       *cp = 0;
       68        68    1          int         optend = 0;
       69        69    1
       70        70    1          optarg = 0;
       71        71    1          if (optx != optind)  {  /* optind has been set by user      */
       72        72    2             opti = 0;
       73        73    2             optdone = 0;
       74        74    2             if (optmoved)
CC.C02    File=xb_getopt:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=3  
       75        75    2                correct_args();
       76        76    2             }
       77        77    1          if (optdone)
       78        78    1             return next_arg( argc, argv, 0);
       79        79    1          c = 0;
       80        80    1          optend = argc - optmoved;
       81        81    1          while ( c==0 && optind < optend ) {
       82        82    2             if (opti == 0) {
       83        83    3                if (*argv[optind] != '-')  {
       84        84    4                   move_arg(argc, argv);
       85        85    4                   optend--;
       86        86    4                   continue;
       87        87    4                   }
       88        88    3                opti++;
       89        89    3                }
       90        90    2             c = *( argv[optind] + opti);
       91        91    2             if (c == 0)
       92        92    2                optind++, opti = 0;
       93        93    2             }
       94        94    1          opti++, optx = optind;    /* Update shadow  */
       95        95    1          if (c == 0)
       96        96    1             return next_arg(argc, argv, 1);
       97        97    1          if (c == '-')  {
       98        98    2             optstrt = optind;
       99        99    2             optind++;
      100       100    2             return next_arg( argc, argv, 1);
      101       101    2             }
      102       102    1
      103       103    1          cp = strchr(optstring, c);
      104       104    1          if (!cp) {
      105       105    2             if (opterr)
      106       106    2                fprintf(stderr,"%s: Illegal option \"%c\"\n",argv[0],c);
      107       107    2             return '?';
      108       108    2             }
      109       109    1          fc = cp[1];
      110       110    1          if (fc != ':' && fc != ';') return c;
      111       111    1          optarg = argv[optind] + opti;
CC.C02    File=xb_getopt:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=4  
      112       112    1          if (*optarg)   {
      113       113    2             if (fc == ';') {
      114       114    3                fc = *(cp = optarg);
      115       115    3                while (fc && fc <= '9' && fc >= '0') opti++, fc = *++cp;
      116       116    3                }
      117       117    2             else optind++, opti = 0;
      118       118    2             return c;
      119       119    2             }
      120       120    1          optind++, opti = 0;
      121       121    1          if (EOF == next_arg(argc, argv, 2, c))
      122       122    1             return c;
      123       123    1          else return '?';
      124       124    1        }
      125       125
      126       126             static int
      127       127             next_arg(argc, argv, flg, c)
      128       128               int   argc;
      129       129               char **argv;
      130       130               int      flg;
      131       131               int      c;
      132       132             {
      133       133    1          if (flg == 1)  {
      134       134    2             optdone++;
      135       135    2             if (optmoved)
      136       136    2                correct_args(argc, argv);
      137       137    2             }
      138       138    1          else if (flg == 0) optind++;
      139       139    1          argc -= optmoved;
      140       140    1          if (optind < argc && (optind > optstrt || *(argv[optind])!='-'))  {
      141       141    2                optarg = argv[optind];
      142       142    2                if (flg < 2)
      143       143    2                   opteof1++;
      144       144    2                else optind++;
      145       145    2                optx = optind;
      146       146    2                return EOF;
      147       147    2                }
      148       148    1          if (flg == 3) return EOF;
CC.C02    File=xb_getopt:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=5  
      149       149    1          if (flg == 2 && opterr)
      150       150    1             fprintf(stderr,"%s: argument required for \"%c\" option\n",argv[0],c);
      151       151    1          return (!opteof1++ || flg == 1)? EOF : ' ';
      152       152    1        }
      153       153
      154       154
      155       155
      156       156             static
      157       157             move_arg(int argc, char *argv[])   {
"xb_getopt:c.:XBC3TSI", line 157: (warning) function move_arg called before prototype definition
      158       158    1          char  *saved = argv[optind];
      159       159    1          int    last  = argc - ++optmoved;
      160       160    1          int    i     = optind;
      161       161    1
      162       162    1          while (i < last)
      163       163    1             i++, argv[i-1] = argv[i];
      164       164    1
      165       165    1          argv[i] = saved;
      166       166    1        }
      167       167
      168       168
      169       169
      170       170             static
      171       171             correct_args(int argc, char *argv[])  {
"xb_getopt:c.:XBC3TSI", line 171: (warning) function correct_args called before prototype definition
      172       172    1          int   i  = argc - optmoved;
      173       173    1          int   l  = argc - 1;
      174       174    1          char *s;
      175       175    1
      176       176    1          if (optstrt > argc)  {
      177       177    2             while ( (l-i) > 0 )  {
      178       178    3                s = argv[i]; argv[i] = argv[l]; argv[l] = s;
      179       179    3                i += 1;
      180       180    3                l -= 1;
      181       181    3                }
      182       182    2             }
      183       183    1          else  {
CC.C02    File=xb_getopt:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=6  
      184       184    2             int   strt = optstrt + 1;
      185       185    2             int   i, j;
      186       186    2             char *s;
      187       187    2
      188       188    2             for (i = argc - optmoved ; i < argc ; i++)   {
      189       189    3                s = argv[i];
      190       190    3                for ( j = i ; j > strt ; j-- )
      191       191    3                   argv[j] = argv[j-1];
      192       192    3                argv[strt++] = s;
      193       193    3                }
      194       194    2             }
      195       195    1          optmoved = 0;
      196       196    1        }
      197       197
---  Include file information  ---

   stdio:h.:XBC3TOU. is referenced
   string:h.:XBC3TOU. is referenced

2 warnings were detected in the file xb_getopt:c.:XBC3TSI
