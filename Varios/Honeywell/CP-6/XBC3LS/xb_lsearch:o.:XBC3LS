

CC.C02    File=xb_lsearch:c.:XBC3TSI                                                Fri Jan  6 1995  Page=1  
        1         1             /*M*  lsearch  lfind -- Insert/find items in al linear search       */
        2         2
        3         3             #include <stdio.h>
        4         4             #include <stdlib.h>
        5         5             #include <search.h>
        6         6
        7         7             /*F*    NAME:    lsearch
        8         8                     PURPOSE:  The lsearch function is a linear search routine
        9         9                               generalized from Knuth (6.1) Algorithm S.
       10        10                     DESCRIPTION:
       11        11                               This function returns a pointer into a table
       12        12                               indicating where the data can be found.  If the
       13        13                               data can not be found it is added to the end of
       14        14                               the table.  The key parameter points to the datum
       15        15                               to be found in the table.  The base parameter
       16        16                               points to the first item in the table.  The nelp
       17        17                               parameter points to the current number of elements
       18        18                               in the table.  The compar is a compare function
       19        19                               that the user must supply.  It is called with two
       20        20                               arguments that point to the elements to be compared.
       21        21                               The function must return 0 if the elements are
       22        22                               equal otherwise non-zero.
       23        23
       24        24                               Upon successful completion the function returns a
       25        25                               pointer into the table where the datum may be
       26        26                               found.
       27        27             */
       28        28
       29        29             char *
       30        30             lsearch(char *key, char *base, unsigned *nelp, int key_size,
       31        31                     int (*compar)()) {
       32        32    1           char  *temp = base;
       33        33    1           int   i = 1;
       34        34    1           int   maxnum;
       35        35    1
       36        36    1        /*    Time to loop through the list and see if we can find the
       37        37    1              specified key.                                                */
CC.C02    File=xb_lsearch:c.:XBC3TSI                                                Fri Jan  6 1995  Page=2  
       38        38    1
       39        39    1           maxnum = *nelp;
       40        40    1           while ((i <= maxnum) && (temp)) {
       41        41    2              if (!compar(key, temp)) {
       42        42    3                 return temp;
       43        43    3              }
       44        44    2              else {
       45        45    3                 i++;
       46        46    3                 temp += key_size;
       47        47    3              }
       48        48    2           }
       49        49    1
       50        50    1        /*    If we got here that means that we have not found the item
       51        51    1              in the linear search.  So we gotta allocate it and stuff the
       52        52    1              data into this allocation.                                    */
       53        53    1
       54        54    1           memcpy(temp, key, key_size);
       55        55    1           *nelp += 1;
       56        56    1           return temp;
       57        57    1
       58        58    1        /*    We got some type of error if we got here so we will return a
       59        59    1              NULL pointer.  We really should not get here.                 */
       60        60    1
       61        61    1           return ((char *) 0);
       62        62    1
       63        63    1        }
       64        64
       65        65             /*F*    NAME:    lfind
       66        66                     PURPOSE:  The lfind function is a linear search routine
       67        67                               generalized from Knuth (6.1) Algorithm S.
       68        68                     DESCRIPTION:
       69        69                               This function returns a pointer into a table
       70        70                               indicating where the data can be found.  If the
       71        71                               data can not be found a NULL pointer is returned
       72        72                               The key parameter points to the datum
       73        73                               to be found in the table.  The base parameter
       74        74                               points to the first item in the table.  The nelp
CC.C02    File=xb_lsearch:c.:XBC3TSI                                                Fri Jan  6 1995  Page=3  
       75        75                               parameter points to the current number of elements
       76        76                               in the table.  The compar is a compare function
       77        77                               that the user must supply.  It is called with two
       78        78                               arguments that point to the elements to be compared.
       79        79                               The function must return 0 if the elements are
       80        80                               equal otherwise non-zero.
       81        81
       82        82                               Upon successful completion the function returns a
       83        83                               pointer into the table where the datum may be
       84        84                               found, otherwise a null pointer is returned.
       85        85             */
       86        86
       87        87             char *
       88        88             lfind(char *key, char *base, unsigned *nelp, int key_size,
       89        89                     int (*compar)()) {
       90        90    1           char  *temp = base;
       91        91    1           int   i = 1;
       92        92    1           int   maxnum;
       93        93    1
       94        94    1        /*    Time to loop through the list and see if we can find the
       95        95    1              specified key.                                                */
       96        96    1
       97        97    1           maxnum = *nelp;
       98        98    1           while ((i <= maxnum) && (temp)) {
       99        99    2              if (!compar(key, temp)) {
      100       100    3                 return temp;
      101       101    3              }
      102       102    2              else {
      103       103    3                 i++;
      104       104    3                 temp += key_size;
      105       105    3              }
      106       106    2           }
      107       107    1
      108       108    1        /*    We did not find the value requested so we will return a
      109       109    1              NULL pointer.                                                 */
      110       110    1
      111       111    1           return ((char *) 0);
CC.C02    File=xb_lsearch:c.:XBC3TSI                                                Fri Jan  6 1995  Page=4  
      112       112    1
      113       113    1        }
---  Include file information  ---

   stdio:h.:XBC3TOU. is referenced
   stdlib:h.:XBC3TOU. is referenced
   search:h.:XBC3TOU. is referenced

No diagnostics were issued in the file xb_lsearch:c.:XBC3TSI
