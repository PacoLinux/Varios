

CC.C02    File=xbi_setup:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=1  
        1         1             /*T***********************************************************/
        2         2             /*T*                                                         */
        3         3             /*T* COPYRIGHT, (C) HONEYWELL BULL INC., 1988                */
        4         4             /*T*                                                         */
        5         5             /*T***********************************************************/
        6         6             /*I* NAME: C_SETUP
        7         7                   PURPOSE: Called from C_CROOT main program.  Parses the command line,
        8         8                      opens stdin, stdout, initializes the runtime library and then calls
        9         9                      the user supplied main function.
       10        10             */
       11        11
       12        12
       13        13             /* define standard global variables */
       14        14
       15        15             long errno;
       16        16             #define __errno
       17        17
       18        18             /* we are going to "lie" and say that we have defined stdin, stdout, stderr.
       19        19                The problem is that they can't be defined until after the FILE type is
       20        20                defined.
       21        21             */
       22        22             #define __standard_files
       23        23
       24        24             /* defining point for MB_CUR_MAX */
       25        25
       26        26             static unsigned MB_CUR_MAX = 1;
       27        27             #define __MB_CUR_MAX
       28        28
       29        29             #include <stddef.h>
       30        30             #include <stdio.h>
       31        31             #include <stdlib.h>
       32        32             #include <errno.h>
       33        33             #include <string.h>
       34        34
       35        35             /* now we can actually define stdin, stdout and stderr */
       36        36             FILE  _iostd[3];
       37        37
CC.C02    File=xbi_setup:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=2  
       38        38             static char *C_get_token ( );
       39        39             static char *C_get_buffer ( );
       40        40
       41        41             static char *cp;
       42        42             static char *pend;
       43        43
       44        44             C_SETUP ( ccars, ccdisp, ccbuf, standard_invocation, contin_line)
       45        45              unsigned *ccars;
       46        46              unsigned *ccdisp;
       47        47              char *ccbuf;
       48        48              int *contin_line;
       49        49              int *standard_invocation;
       50        50             {
       51        51    1         char *inname;
       52        52    1         char *outname;
       53        53    1         char *outmode;
       54        54    1         unsigned toklen;
       55        55    1         char *str;
       56        56    1         char *start;
       57        57    1         int argc;
       58        58    1         char **argv;
       59        59    1         unsigned maxarg;
       60        60    1
       61        61    1         /* tell the runtime library what the address of various global
       62        62    1            variables is as the runtime library has to be able to
       63        63    1            reference these variables.
       64        64    1         */
       65        65    1         XBI_LINK_GLOBALS (&errno, stdin, stdout, stderr, (double *) 0, &MB_CUR_MAX);
       66        66    1
       67        67    1         /* now that stderr is defined, we can initialize the file system */
       68        68    1         XBI_INITIALIZE_FILE_SYSTEM ( );
       69        69    1
       70        70    1         /* initialize the random number seed */
       71        71    1
       72        72    1         srand (1);
       73        73    1
       74        74    1         if (*standard_invocation)
CC.C02    File=xbi_setup:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=3  
       75        75    1           { /* CP-6 standard command line invocation */
       76        76    2            if (freopen ("dcb=M$SI", "r", stdin) == NULL)
       77        77    2              { perror ("can't open stdin"); exit (7); }
       78        78    2            if (freopen ("dcb=M$LO", "w", stdout) == NULL)
       79        79    2              { perror ("can't open stdout"); exit (7); }
       80        80    2          }
       81        81    1
       82        82    1         maxarg = 10;
       83        83    1         argv = (char **) malloc ( maxarg * sizeof(char *) );
       84        84    1         inname = outname = (char *)NULL;
       85        85    1
       86        86    1         if (*contin_line) {
       87        87    2            cp = C_get_buffer ();
       88        88    2            if (!cp) cp = ccbuf;
       89        89    2         }
       90        90    1         else
       91        91    1            cp = ccbuf;
       92        92    1         pend = cp + *ccars;
       93        93    1         argc = 0;
       94        94    1
       95        95    1         /* pickup the first token, the program name */
       96        96    1
       97        97    1         argv[argc++] = C_get_token ( );
       98        98    1
       99        99    1         /* if this is standard invocation we just parse any options in brackets */
      100       100    1
      101       101    1         if (*standard_invocation)
      102       102    1          {
      103       103    2           cp = ccbuf + *ccdisp;
      104       104    2           if ( cp < pend && *cp == '(') {
      105       105    3            start = cp;
      106       106    3            while (cp < pend && *cp != ')') cp++;
      107       107    3            if (*cp == ')') cp++;   /* include parenthesis in token */
      108       108    3            toklen = cp - start;
      109       109    3            str = (char *) malloc ( toklen + 1 );
      110       110    3            (memcpy) ( str, start, toklen );
"xbi_setup:c.:XBC3TSI", line 110: (warning) macro memcpy needs arguments
CC.C02    File=xbi_setup:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=4  
      111       111    3            str[toklen] = '\0';
      112       112    3            if( argc >= maxarg-1 ) {
      113       113    4            maxarg += 10;
      114       114    4            argv = (char **) realloc( (char *) argv, maxarg * sizeof(char *) );
      115       115    4
      116       116    4             if( argv == NULL ) {
      117       117    5              perror( "setup" );
      118       118    5              exit( 7 );
      119       119    5             }
      120       120    4            }
      121       121    3            argv [argc++] = str;
      122       122    3           } /* if */
      123       123    2           goto call_main;
      124       124    2          }
      125       125    1
      126       126    1         /* non standard invocation */
      127       127    1
      128       128    1         for(;;) {
      129       129    2          while( cp < pend && isspace( *cp ) ) /* skip whitespace */
      130       130    2           cp++;
      131       131    2
      132       132    2          if( cp >= pend ) /* check for loop termination */
      133       133    2           break;
      134       134    2
      135       135    2          /*
      136       136    2           * Decide if the string is redirection, and either process it,
      137       137    2           * or stuff it into argv.
      138       138    2           */
      139       139    2          switch( *cp ) {
      140       140    3          case '>':
      141       141    3           cp++;
      142       142    3           if( outname != NULL) {
      143       143    4              fprintf (stderr, "Multiple output redirection\n" );
      144       144    4              exit (7);
      145       145    4           }
      146       146    3           if( *cp == '>' ) {
      147       147    4            cp++;
CC.C02    File=xbi_setup:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=5  
      148       148    4            outmode = "a";
      149       149    4            outname = C_get_token( );
      150       150    4           }
      151       151    3           else {
      152       152    4            outmode = "w";
      153       153    4            outname = C_get_token ( );
      154       154    4           }
      155       155    3           continue;
      156       156    3
      157       157    3          case '<':
      158       158    3           cp++;
      159       159    3           if( inname != NULL ) {
      160       160    4              fprintf (stderr, "Multiple input redirection\n" );
      161       161    4              exit (7);
      162       162    4           }
      163       163    3           inname = C_get_token ();
      164       164    3           continue;
      165       165    3
      166       166    3          default:
      167       167    3           str = C_get_token ();
      168       168    3           if( argc >= maxarg-1 ) {
      169       169    4            maxarg += 10;
      170       170    4            argv = (char **) realloc( (char *) argv, maxarg * sizeof(char *) );
      171       171    4
      172       172    4            if( argv == NULL ) {
      173       173    5             perror( "setup" );
      174       174    5             exit( 7 );
      175       175    5            }
      176       176    4           }
      177       177    3           argv[argc++] = str;
      178       178    3          } /* switch */
      179       179    2         } /* for */
      180       180    1
      181       181    1         if( inname != NULL ) {
      182       182    2           if (!freopen( inname, "r", stdin)) {
      183       183    3              perror( "Can't open stdin" );
      184       184    3              exit (7);
CC.C02    File=xbi_setup:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=6  
      185       185    3           }
      186       186    2           free (inname);
      187       187    2         }
      188       188    1         else
      189       189    1           if (!freopen ( "ME", "r", stdin)) {
      190       190    2              perror( "Can't open stdin" );
      191       191    2              exit (7);
      192       192    2           }
      193       193    1
      194       194    1         if( outname != NULL ) {
      195       195    2           if (!freopen( outname, outmode, stdout)) {
      196       196    3             perror( "Can't open stdout" );
      197       197    3             exit (7);
      198       198    3          }
      199       199    2           free (outname);
      200       200    2         }
      201       201    1         else
      202       202    1          if (!freopen("ME", "w", stdout)) {
      203       203    2             perror( "Can't open stdout" );
      204       204    2             exit (7);
      205       205    2          }
      206       206    1
      207       207    1        call_main:
      208       208    1
      209       209    1         argv[argc] = (char *)NULL;
      210       210    1
      211       211    1         main( argc, argv, (char **)NULL );
      212       212    1         exit (0);
      213       213    1        }
      214       214
      215       215             static char *C_get_token ( )
      216       216             {
      217       217    1          char *start, *str;
      218       218    1          int toklen;
      219       219    1
      220       220    1          /* parse a token */
      221       221    1
CC.C02    File=xbi_setup:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=7  
      222       222    1          while( cp < pend && isspace( *cp ) ) /* skip whitespace */
      223       223    1           cp++;
      224       224    1
      225       225    1          start = cp;
      226       226    1
      227       227    1          while( cp < pend && !isspace( *cp ) ) /* scan for whitespace */
      228       228    1           cp++;
      229       229    1
      230       230    1          toklen = cp - start;
      231       231    1          str = (char *) malloc ( toklen + 1 );
      232       232    1          (memcpy)( str, start, toklen );
"xbi_setup:c.:XBC3TSI", line 232: (warning) macro memcpy needs arguments
      233       233    1          str[toklen] = '\0';
      234       234    1          return str;
      235       235    1        }
      236       236
      237       237             static char *C_get_buffer ()
      238       238             {
      239       239    1        #define  MAXLINE_SIZE   1024
      240       240    1        #define  CONTIN_FILENAME    "*CONTINUATION_COMMANDS"
      241       241    1
      242       242    1           FILE  *fp = (FILE *) 0;
      243       243    1           char  *semi_ptr;
      244       244    1           char  *tempbuf;
      245       245    1           char  *str = (char *) 0;
      246       246    1
      247       247    1        /*    See if there is a continuation file to begin with             */
      248       248    1
      249       249    1           fp = fopen (CONTIN_FILENAME, "r");
      250       250    1           if (fp) {
      251       251    2              tempbuf = (char *) malloc (MAXLINE_SIZE);
      252       252    2              while (fgets (tempbuf, MAXLINE_SIZE, fp)) {
      253       253    3                 if (!str) {
      254       254    4                    str = (char *) realloc (str, strlen (tempbuf));
      255       255    4                    *str = '\0';
      256       256    4                 }
      257       257    3                 else
CC.C02    File=xbi_setup:c.:XBC3TSI                                                 Fri Jan  6 1995  Page=8  
      258       258    3                    str = (char *) realloc (str, strlen (str) + strlen (tempbuf));
      259       259    3                 semi_ptr = strchr (tempbuf, ';');
      260       260    3                 if (semi_ptr)
      261       261    3                    *semi_ptr = ' ';
      262       262    3                 strncat (str, tempbuf, strlen(tempbuf)-1);
      263       263    3              }
      264       264    2              free (tempbuf);
      265       265    2              remove (CONTIN_FILENAME);
      266       266    2           }
      267       267    1           if ((!fp) || (!str))
      268       268    1              return ((char *) 0);
      269       269    1           else
      270       270    1              return (str);
      271       271    1        }
---  Include file information  ---

   stddef:h.:XBC3TOU. is referenced
   stdio:h.:XBC3TOU. is referenced
   stdlib:h.:XBC3TOU. is referenced
   errno:h.:XBC3TOU. is referenced
   string:h.:XBC3TOU. is referenced

2 warnings were detected in the file xbi_setup:c.:XBC3TSI
