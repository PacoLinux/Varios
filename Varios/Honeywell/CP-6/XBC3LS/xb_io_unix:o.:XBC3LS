

CC.C02    File=xb_io_unix:c.:XBC3TSI                                                Fri Aug 22 1997  Page=1  
        1         1              /*M*   xb_io_unix:c  --  some unix io routines                  */
        2         2
        3         3             #include   <fcntl.h>
        4         4             #include   <b$dcb_c.h>
        5         5             #include   <b$roseg.h>
        6         6             #include   <fileinfo.h>
        7         7             #include   <cp_6_subs.h>
        8         8             #include   <stdlib.h>
        9         9             #include   <stdio.h>
       10        10
       11        11             #undef  stderr
       12        12             #undef  stdin
       13        13             #undef  stdout
       14        14
       15        15             #define stderr   STDERR_P
       16        16             #define stdout   STDOUT_P
       17        17             #define stdin    STDIN_P
       18        18
       19        19             extern FILE *stderr, *stdout, *stdin;
       20        20
       21        21
       22        22             #define    b$fildes    B$FILDES$
       23        23
       24        24             extern FILE **b$fildes;
       25        25
       26        26             #ifdef  DEBUGMAIN
       27        27   *S*
       28        28   *S*       main()  {
       29        29   *S*         int   i, j, fi;
       30        30   *S*         char  fido[] = "stdio:h.:LIBRARY";
       31        31   *S*         char  fidc[] = "*open_read_write_test";
       32        32   *S*
       33        33   *S*         printf(" numdcbs = %d\n", B$ROS$->numdcbs);
       34        34   *S*         _alloc_fildes();
       35        35   *S*         print_fildes();
       36        36   *S*         i = open( fido, O_RDONLY);
       37        37   *S*         if (i >= 0) {
CC.C02    File=xb_io_unix:c.:XBC3TSI                                                Fri Aug 22 1997  Page=2  
       38        38   *S*            printf(" Descriptor %d opened to %s\n", i, fido);
       39        39   *S*            for (j = 0 ; j<10 ; )   {
       40        40   *S*               char buf[80];
       41        41   *S*               int  rs = read(i, buf, sizeof(buf));
       42        42   *S*               if (rs >= 0)   {
       43        43   *S*                  buf[(rs<80)? rs : 79] = 0;
       44        44   *S*                  printf("%d: %s\n", ++j, buf);
       45        45   *S*                  }
       46        46   *S*               else printf("I/O Error\n");
       47        47   *S*               }
       48        48   *S*            }
       49        49   *S*         else printf(" Failed to open to %s\n", fido);
       50        50   *S*         fi = open( fidc, O_WRONLY);
       51        51   *S*         if (fi >= 0)   {
       52        52   *S*            printf(" Descriptor %d opened to %s\n", i, fidc);
       53        53   *S*            for (j = 0 ; j < 10 ; j++) {
       54        54   *S*               int rs = write(fi, "record\n", 7);
       55        55   *S*               if (rs < 0)
       56        56   *S*                  printf("I/O error\n");
       57        57   *S*               }
       58        58   *S*            }
       59        59   *S*         print_fildes();
       60        60   *S*
       61        61   *S*       }
       62        62   *S*
       63        63   *S*
       64        64   *S*       #endif
       65        65
       66        66
       67        67
       68        68             #ifdef DEBUG
       69        69   *S*
       70        70   *S*       int
       71        71   *S*       print_fildes()   {
       72        72   *S*         int      numdcbs = B$ROS$->numdcbs;
       73        73   *S*         int      fildes;
       74        74   *S*         FILE_SET setting;
CC.C02    File=xb_io_unix:c.:XBC3TSI                                                Fri Aug 22 1997  Page=3  
       75        75   *S*
       76        76   *S*         for (fildes = 0 ; fildes < numdcbs ; fildes++ )
       77        77   *S*            if (b$fildes[fildes])   {
       78        78   *S*               finform( b$fildes[ fildes ], &setting );
       79        79   *S*               printf("%d %s\n", fildes, setting.fid);
       80        80   *S*            }
       81        81   *S*
       82        82   *S*       }
       83        83   *S*
       84        84   *S*
       85        85   *S*
       86        86   *S*       #endif
       87        87
       88        88
       89        89             int
       90        90             _alloc_fildes()   {
       91        91    1          int     numdcbs = B$ROS$->numdcbs + 1;
       92        92    1          int     fildes;
       93        93    1          FILE  **fildesp = malloc( sizeof(FILE **) * numdcbs);
       94        94    1          FILE   *f;
       95        95    1
       96        96    1          if (b$fildes || !fildesp)
       97        97    1             return 0;
       98        98    1
       99        99    1          for (fildes = 0; fildes < numdcbs ; )
      100       100    1             fildesp[fildes++] = (FILE *) 0;
      101       101    1
      102       102    1          fildesp[2] = fildesp[ (stderr)->_fpt_read._v._dcb ] = stderr;
      103       103    1          fildesp[0] = fildesp[ (stdin )->_fpt_read._v._dcb ] = stdin;
      104       104    1          fildesp[1] = fildesp[ (stdout)->_fpt_read._v._dcb ] = stdout;
      105       105    1
      106       106    1          f = (stdin)->_next_file_header;
      107       107    1          while (f)   {
      108       108    2             fildesp[ f->_fpt_read._v._dcb ] = f;
      109       109    2             f = f->_next_file_header;
      110       110    2             }
      111       111    1
CC.C02    File=xb_io_unix:c.:XBC3TSI                                                Fri Aug 22 1997  Page=4  
      112       112    1          if (!b$fildes)
      113       113    1             b$fildes = fildesp;
      114       114    1          else free(fildesp);
      115       115    1
      116       116    1          return 1;
      117       117    1        }
      118       118
      119       119
      120       120             static const char error_open_opt[] = " error";
      121       121             int
      122       122             open(char *path, int oflag, ...) {
      123       123    1          char fmode[12];
      124       124    1          int   add_error = 0;
      125       125    1          int  fmi = 0;
      126       126    1          int   c;
      127       127    1          int   fildes = -1;
      128       128    1          FILE *f;
      129       129    1
      130       130    1          if (!b$fildes)
      131       131    1             _alloc_fildes();
      132       132    1
      133       133    1          c = 'r';
      134       134    1          if (oflag & O_APPEND)
      135       135    1             c = 'a';
      136       136    1          else if (oflag & O_RDONLY)
      137       137    1             c = 'r';
      138       138    1          else if (oflag & O_WRONLY)
      139       139    1             c = 'w';
      140       140    1          fmode[fmi++] = c;
      141       141    1
      142       142    1          if (oflag & O_RDWR)
      143       143    1             fmode[fmi++] = '+';
      144       144    1          else if (oflag & O_TRUNC)
      145       145    1             fmode[0] = 'w', fmode[(fmi=2)-1] = '+';
      146       146    1
      147       147    1          if (!oflag & O_TRUNC  &&
      148       148    1               oflag & O_CREAT  &&  oflag & O_EXCL)
CC.C02    File=xb_io_unix:c.:XBC3TSI                                                Fri Aug 22 1997  Page=5  
      149       149    1             add_error++;
      150       150    1
      151       151    1          if (oflag & O_BIN)
      152       152    1             fmode[fmi++] = 'b';
      153       153    1
      154       154    1          fmode[fmi] = 0;
      155       155    1          if (add_error)
      156       156    1             strcat(fmode, error_open_opt);
      157       157    1
      158       158    1          f = fopen(path, fmode);
      159       159    1          if (f)  {
      160       160    2             fildes = f->_fpt_read._v._dcb;
      161       161    2             b$fildes[fildes] = f;
      162       162    2             }
      163       163    1
      164       164    1          return fildes;
      165       165    1        }
      166       166
      167       167
      168       168
      169       169
      170       170             int
      171       171             read(int fildes, void *buf, unsigned nbyte) {
      172       172    1          int   nread = -1;
      173       173    1
      174       174    1          if (!b$fildes && fildes < 4)
      175       175    1             _alloc_fildes();
      176       176    1          if (b$fildes && b$fildes[ fildes ])  {
      177       177    2             FILE *f = b$fildes[fildes];
      178       178    2             if (!f->_auxio) {
      179       179    3                if (!isatty(fildes)) {
      180       180    4                   nread = fread( buf, (size_t) 1, (size_t) nbyte, f);
      181       181    4                }
      182       182    3                else {
      183       183    4                   nread = fread_term( buf, (size_t) 1, (size_t) nbyte, f);
      184       184    4                }
      185       185    3             }
CC.C02    File=xb_io_unix:c.:XBC3TSI                                                Fri Aug 22 1997  Page=6  
      186       186    2             else
      187       187    2                return ((f->_auxio)(FNC_READ, __varyarg_ptr));
      188       188    2             }
      189       189    1          return nread;
      190       190    1        }
      191       191
      192       192             int
      193       193             write(int fildes, void *buf, unsigned nbyte)   {
      194       194    1          int   nwrite = -1;
      195       195    1
      196       196    1          if (!b$fildes && fildes < 4)
      197       197    1             _alloc_fildes();
      198       198    1          if (b$fildes && b$fildes[ fildes ]) {
      199       199    2             FILE *f = b$fildes[fildes];
      200       200    2             if (!f->_auxio)
      201       201    2                nwrite = fwrite( buf, (size_t) 1, (size_t) nbyte, f);
      202       202    2             else
      203       203    2                return ((f->_auxio)(FNC_WRITE, __varyarg_ptr));
      204       204    2             }
      205       205    1          return nwrite;
      206       206    1        }
      207       207
      208       208
      209       209             long
      210       210             lseek(int fildes, long offset, int whence)  {
      211       211    1          long  position = -1;
      212       212    1
      213       213    1          if (!b$fildes && fildes < 4)
      214       214    1             _alloc_fildes();
      215       215    1          if (b$fildes && b$fildes[ fildes ]) {
      216       216    2             FILE *f = b$fildes[fildes];
      217       217    2             if (!f->_auxio)
      218       218    2                position = fseek(f, offset, whence);
      219       219    2             else
      220       220    2                return ((f->_auxio)(FNC_LSEEK, __varyarg_ptr));
      221       221    2             }
      222       222    1          return position;
CC.C02    File=xb_io_unix:c.:XBC3TSI                                                Fri Aug 22 1997  Page=7  
      223       223    1        }
      224       224
      225       225
      226       226             int
      227       227             close(int fildes)   {
      228       228    1          int status = -1;
      229       229    1
      230       230    1          if (!b$fildes && fildes < 4)
      231       231    1             _alloc_fildes();
      232       232    1          if (b$fildes && b$fildes[ fildes ]) {
      233       233    2             FILE *f = b$fildes[fildes];
      234       234    2             if (!f->_auxio) {
      235       235    3                status  = fclose(f);
      236       236    3                b$fildes[ fildes ] = 0;
      237       237    3             }
      238       238    2             else {
      239       239    3                return ((f->_auxio)(FNC_CLOSE, __varyarg_ptr));
      240       240    3             }
      241       241    2             }
      242       242    1          return status;
      243       243    1        }
      244       244
      245       245             FILE *
      246       246             fdopen(int fildes) {
      247       247    1           if (!b$fildes)
      248       248    1              _alloc_fildes();
      249       249    1          if    (fildes < 0 || fildes > B$ROS$->numdcbs) return (FILE *) 0;
      250       250    1          return (b$fildes && b$fildes [fildes]) ? b$fildes[fildes] : (FILE*)0;
      251       251    1        }
      252       252
      253       253             int
      254       254             isatty(int fildes)  {
      255       255    1          int    rs = 0;
      256       256    1
      257       257    1          if (!b$fildes && fildes < 4)
      258       258    1             _alloc_fildes();
      259       259    1          if (b$fildes && b$fildes[fildes]) {
CC.C02    File=xb_io_unix:c.:XBC3TSI                                                Fri Aug 22 1997  Page=8  
      260       260    2             int dcb = b$fildes[fildes]->_fpt_read._v._dcb;
      261       261    2             struct mdcb *dcb$ = B$ROS$->dcbptr[dcb];
      262       262    2             rs =  dcb$->ddev_ic;
      263       263    2             }
      264       264    1          return rs;
      265       265    1        }
      266       266
      267       267             int   fcntl( int fildes, int cmd, int arg) {
"xb_io_unix:c.:XBC3TSI", line 267: (warning) identifier "cmd" is not used
"xb_io_unix:c.:XBC3TSI", line 267: (warning) identifier "arg" is not used
      268       268    1
      269       269    1          if (!b$fildes && fildes < 4)
      270       270    1             _alloc_fildes();
      271       271    1           if ((b$fildes) && (b$fildes[fildes])) {
      272       272    2              FILE  *f = b$fildes[fildes];
      273       273    2              if (f->_auxio)
      274       274    2                 return ((f->_auxio)(FNC_FCNTL, __varyarg_ptr));
      275       275    2           }
      276       276    1           return (-1);
      277       277    1        }
      278       278             FILE *XB$GET_FILDES (int dcbnum) {
      279       279    1           FILE *f = 0;
      280       280    1
      281       281    1           if (dcbnum > B$ROS$->numdcbs) {
      282       282    2              return ((FILE *) 0);
      283       283    2           }
      284       284    1
      285       285    1           if (!b$fildes)
      286       286    1              _alloc_fildes();
      287       287    1           if (!b$fildes[dcbnum]) {
      288       288    2              XBI$GET_FILE_HEADER (&f);
      289       289    2              f->_flags |= _is_open_mask;
      290       290    2              XBI$LINK_FILE_HEADER (f);
      291       291    2              b$fildes[dcbnum] = f;
      292       292    2              f->_fpt_read._v._dcb = dcbnum;
      293       293    2           }
      294       294    1           return (f);
CC.C02    File=xb_io_unix:c.:XBC3TSI                                                Fri Aug 22 1997  Page=9  
      295       295    1        }
      296       296
      297       297             int XB$RELEASE_FILDES (int dcbnum) {
      298       298    1           FILE *f = 0;
      299       299    1           int retval = -1;
      300       300    1
      301       301    1           if (dcbnum > B$ROS$->numdcbs) {
      302       302    2              return (retval);
      303       303    2           }
      304       304    1
      305       305    1           if ((b$fildes) && (b$fildes[dcbnum])) {
      306       306    2              f = b$fildes[dcbnum];
      307       307    2              f->_flags ^= _is_open_mask;
      308       308    2              XBI$UNLINK_FILE_HEADER (f);
      309       309    2              free (f);
      310       310    2              b$fildes[dcbnum] = 0;
      311       311    2              retval = dcbnum;
      312       312    2           }
      313       313    1           return (retval);
      314       314    1        }
      315       315
      316       316             int   XB$CLOSE_FILDES (int *fildes) {
      317       317    1           return (close(*fildes));
      318       318    1        }
      319       319
      320       320             int   ioctl( int fildes, unsigned request, ...) {
"xb_io_unix:c.:XBC3TSI", line 320: (warning) identifier "request" is not used
      321       321    1
      322       322    1           if (!b$fildes && fildes < 4)
      323       323    1              _alloc_fildes();
      324       324    1           if ((b$fildes) && (b$fildes[fildes])) {
      325       325    2              FILE  *f = b$fildes[fildes];
      326       326    2              if (f->_auxio)
      327       327    2                 return ((f->_auxio)(FNC_IOCTL, __varyarg_ptr));
      328       328    2           }
      329       329    1           return (-1);
      330       330    1        }
CC.C02    File=xb_io_unix:c.:XBC3TSI                                                Fri Aug 22 1997  Page=10 
---  Include file information  ---

   fcntl:h.:XBC3TOU. is referenced
   b$dcb_c:h.:XBC3TOU. is referenced
   b$roseg:h.:XBC3TOU. is referenced
   fileinfo:h.:XBC3TOU. is referenced
   stdio:h.:XBC3TOU. is referenced
   cp_6_subs:h.:XBC3TOU. is referenced
   stdlib:h.:XBC3TOU. is referenced

3 warnings were detected in the file xb_io_unix:c.:XBC3TSI
