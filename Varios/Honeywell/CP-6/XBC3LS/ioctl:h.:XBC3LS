

11:15 JAN 06 '95 ioctl:h.:XBC3TSI                                          1    
    1      /*M*    ioctl.h  --  flag values for ioctl                      */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1991    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      #ifndef __ioctl
    8      #define __ioctl
    9
   10      /* Portions of this file are derived from the BSD 4.3 Unix release.
   11         Modifications have been made to support the CP-6 communications
   12         environment.  Not every facility identified by #define is supported
   13         by the Host Socket Library and/or the Unix FEPs at this time.
   14         No commitment to provide these facilities is made.           */
   15      /*
   16       * Copyright (c) 1982, 1986 Regents of the University of California
   17       * All rights reserved.  The Berkeley software License Agreement
   18       * specifies the terms and conditions for redistribution.
   19       */
   20
   21      /*
   22       * Ioctl's have the command encoded in the lower halfword,
   23       * and the size of any in or out parameters in the upper
   24       * halfword.  The high 3 bits of the upper halfword are used
   25       * to encode the in/out status of the parameter; for now
   26       * we restrict parameters to at most 128 bytes.
   27       */
   28      #define IOCPARM_MASK    0x7f            /* parameters must be < 128 bytes */
   29      #define IOC_VOID        0040000000000   /* no parameters */
   30      #define IOC_OUT         0100000000000   /* copy out parameters */
   31      #define IOC_IN          0200000000000   /* copy in parameters */
   32      #define IOC_INOUT       (IOC_IN|IOC_OUT)
   33      /* the 0040000000000 is so we can distinguish new ioctl's from old */
   34      #define _(x)   (*#x)
   35      #define _IO(x,y)        (IOC_VOID|(_(x)<<9)|y)
   36      #define _IOR(x,y,t)     (IOC_OUT|((sizeof(t)&IOCPARM_MASK)<<18)|(_(x)<<9)|y)
   37      #define _IOW(x,y,t)     (IOC_IN|((sizeof(t)&IOCPARM_MASK)<<18)|(_(x)<<9)|y)
11:15 JAN 06 '95 ioctl:h.:XBC3TSI                                          2    
   38      #define _IOWR(x,y,t)    (IOC_INOUT|((sizeof(t)&IOCPARM_MASK)<<18)|(_(x)<<9)|y)
   39
   40      /* TTY ioctls not implemented */
   41
   42      /* File ioctls */
   43      #define FIOCLEX     _IO(f, 1)           /* set exclusive use on fd */
   44      #define FIONCLEX    _IO(f, 2)           /* remove exclusive use */
   45      #define FIONREAD    _IOR(f, 127, int)   /* get # bytes to read */
   46      #define FIONBIO     _IOW(f, 126, int)   /* set/clear non-blocking i/o */
   47      #define FIOASYNC    _IOW(f, 125, int)   /* set/clear async i/o */
   48      #define FIOSETOWN   _IOW(f, 124, int)   /* set owner */
   49      #define FIOGETOWN   _IOR(f, 123, int)   /* get owner */
   50
   51      /* Socket ioctls */
   52      #define SIOCSHIWAT  _IOW(s,  0, int)    /* set high watermark */
   53      #define SIOCGHIWAT  _IOR(s,  1, int)    /* get high watermark */
   54      #define SIOCSLOWAT  _IOW(s,  2, int)    /* set low watermark */
   55      #define SIOCGLOWAT  _IOR(s,  3, int)    /* get low watermark */
   56      #define SIOCATMARK  _IOR(s,  7, int)    /* at oob mark? */
   57      #define SIOCSPGRP   _IOW(s,  8, int)    /* set process group */
   58      #define SIOCGPGRP   _IOR(s,  9, int)    /* get process group */
   59
   60      /* Routing ioctls */
   61      #define SIOCADDRT   _IOW(R, 10, struct rtentry)     /* add route */
   62      #define SIOCDELRT   _IOW(R, 11, struct rtentry)     /* delete route */
   63
   64      /* Interface ioctls */
   65      #define SIOCSIFADDR     _IOW(i, 12, struct ifreq)  /* set ifnet address */
   66      #define SIOCGIFADDR     _IOWR(i,13, struct ifreq)  /* get ifnet address */
   67      #define SIOCSIFDSTADDR  _IOW(i, 14, struct ifreq)  /* set p-p address */
   68      #define SIOCGIFDSTADDR  _IOWR(i,15, struct ifreq)  /* get p-p address */
   69      #define SIOCSIFFLAGS    _IOW(i, 16, struct ifreq)  /* set ifnet flags */
   70      #define SIOCGIFFLAGS    _IOWR(i,17, struct ifreq)  /* get ifnet flags */
   71      #define SIOCGIFBRDADDR  _IOWR(i,18, struct ifreq)  /* get broadcast addr */
   72      #define SIOCSIFBRDADDR  _IOW(i, 19, struct ifreq)  /* set broadcast addr */
   73      #define SIOCGIFCONF     _IOWR(i,20, struct ifconf) /* get ifnet list */
   74      #define SIOCGIFNETMASK  _IOWR(i,21, struct ifreq)  /* get net addr mask */
11:15 JAN 06 '95 ioctl:h.:XBC3TSI                                          3    
   75      #define SIOCSIFNETMASK  _IOW(i, 22, struct ifreq)  /* set net addr mask */
   76      #define SIOCGIFMETRIC   _IOWR(i,23, struct ifreq)  /* get IF metric */
   77      #define SIOCSIFMETRIC   _IOW(i, 24, struct ifreq)  /* set IF metric */
   78      #define SIOCSARP        _IOW(i, 30, struct arpreq) /* set arp entry */
   79      #define SIOCGARP        _IOWR(i,31, struct arpreq) /* get arp entry */
   80      #define SIOCDARP        _IOW(i, 32, struct arpreq) /* delete arp entry */
   81
   82      extern int ioctl( int, unsigned, ... );
   83
   84      #endif

