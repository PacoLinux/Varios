
 11:15 01/06/95  FILE=xbi_vframe_sg:a                                                                    1    BMAP - B00     
                                         1  *M*     XBI$VFRAME  --    Frame a 256kw chunk of mem in virtual seg
                                         2  *T***********************************************************
                                         3  *T*                                                         *
                                         4  *T* Copyright (c) Bull HN Information Systems Inc., 1989    *
                                         5  *T*                                                         *
                                         6  *T***********************************************************
                                         7  *
                                         8  *D*     NAME:       XBI$VFRAME
                                         9  *,*     PURPOSE:    To generate a simple pointer to a 256kw portion
                                        10  *,*                 of a virtual data segment.
                                        11  *,*
                                        12  *,*     CALL:       call XBI$VFRAME(virtual,chunk,ptr)
                                        13  *,*
                                        14  *,*     ARGUMENTS:  virtual  ...   a pointer to a virtual datasegment
                                        15  *,*                 chunk    ...   a pointer to a ubin 256kw index
                                        16  *,*                 ptr      ...   a simple ($ASn) pointer
                                        17  *,*
                                        18  *,*     DESCRIPTION:
                                        19  *,*
                                        20  *,*        This function shrinks a pointer to a virtual data segment
                                        21  *,*        chunk of memory by pushing a descriptor onto the argument
                                        22  *,*        stack.  This descriptor is obtained via the LDEA instr.
                                        23  *,*
                                        24  *
                                        25             ENTDEF      XBI$VFRAME           primary entry point
                                        26  *
                                        27             ENTREF      X66_AUTO_3           takes 3 args
                                        28             ENTREF      X66_FARET            and returns ptr
                                        29             SEGREF      NULLSID
                                        30  *    Constants
                                        31             LODM        xbi_std_ig
                                        32  *
 0 000000                               33  XBI$VFRAME NULL
   000000  X 000000 7000 00             34             TSX0        X66_AUTO_3           Get auto frame & 3 args
   000001    000010 000003              35             ZERO        8,3
                                        36  * First get virtual pointer and point at correct 256kw segment
   000002    2 00003 4775 00            37             LDP7        3,,PR2
 11:15 01/06/95  FILE=xbi_vframe_sg:a                                                                    2    BMAP - B00     
   000003    2 00004 4715 00            38             LDP1        4,,PR2               ptr to index
   000004    1 00000 2351 00            39             LDA         0,,PR1                      index
   000005    000024 7350 00             40             ALS         20                   to byte addr of 256kw
   000006    2 00006 7551 00            41             STA         6,,PR2
   000007    2 00006 6175 00            42             LDEA7       6,,PR2               Point at it!
                                        43  * Shrink descriptor onto argument stack...
   000010 (0)000022 6764 00             44             LDD6        DRSHRNK              Shrink descriptor
   000011    000000 1164 00             45             SDR6        0                       onto argument stack
   000012    2 00007 4565 00            46             STP6        7,,PR2               Save our pointer
                                        47  * Finally, set 3rd argument to result pointer and return it.
   000013    2 00005 2361 00            48             LDQ         5,,PR2               Check for result
   000014  X 000000 1160 07             49             CMPQ        NULLSID,DL       3rd argument not present
   000015 (0)000020 6000 00             50             TZE         RETURN7
   000016    2 00005 4735 00            51             LDP3        5,,PR2
   000017    3 00000 4565 00            52             STP6        0,,PR3               Save return pointer
   000020    2 00007 2361 00            53  RETURN7    LDQ         7,,PR2
   000021  X 000000 7000 00             54             TSX0        X66_FARET            and return to caller
                                        55  *
                                        56             EVEN
   000022    777777777640               57  DRSHRNK    OCT         777777777640         256kw, flags=shrink
   000023    000000001777               58             OCT         000000001777         Source=$PR7
                                        59             END

  CONTROL SECTION TABLE

   0 CODE   EVEN  000024
   1 RODATA EVEN  000000 LITERALS

 11:15 01/06/95  FILE=xbi_vframe_sg:a         SYMBOL TABLE                                               3    BMAP - B00     
 00101000 000000000000 /*T*           *31
 00101000 000000000000 /*T***************************     *31
 40000000 000000000102 AUTO           *31
 01101000 000000000022 DRSHRNK         44       *57
 03601000 000000000000 NULLSID        *29        49
 41000000 000000000100 PR0            *31
 41000000 000000000101 PR1            *31        39
 41000000 000000000102 PR2            *31        37        38        41        42        46        48
                                       51        53
 41000000 000000000103 PR3            *31        52
 41000000 000000000104 PR4            *31
 41000000 000000000105 PR5            *31
 41000000 000000000106 PR6            *31
 40000000 000000000107 PR7            *31
 01101000 000000000020 RETURN7         50       *53
 03201000 000000000000 X66_AUTO_3     *27        34
 03201001 000000000000 X66_FARET      *28        54
 12101000 000000000000 XBI$VFRAME      25       *33

      17 SYMBOLS

       0 MACROS

    SYMBOL SPACE USED   195 WORDS
     MACRO SPACE USED     0 WORDS
   INPUT RECORDS READ   134
 STATEMENTS PROCESSED    47
         ELAPSED TIME  0:00.48
             CPU TIME     0.37 SEC.
        ASSEMBLY RATE  7622 STATEMENTS/CPU MIN.

      NO ERRORS

