VERSION E05

PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:1    
        1        1        /*M* PSM$MM  Manage STATS' data segments                                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        /*P*  NAME:    PSM$MM
        9        9              PURPOSE: Contains routines to get and free data segments for
       10       10                       STATS' performance monitoring data                             */
       11       11        PSM$MM: PROC (POINTER$, SIZE);
       12       12    1   DCL POINTER$ PTR;
       13       13    1   DCL SIZE UBIN;
       14       14        %INCLUDE CP_6;
       15       95        %INCLUDE PS_DATA_R;
       16     5391        %FPT_GDS (RESULTS=VLP_VECTOR, FREE=YES);
       17     5407        %FPT_FDS (RESULTS=VLP_VECTOR);
       18     5422        %VLP_VECTOR;
       19     5437        %VLP_VECTOR (FPTN=FRESH_SEGMENT, SEGID='0'O);
       20     5452    1   DCL PSE$ERRMSG ENTRY (5);
       21     5453        %EJECT;
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:2    
       22     5454    1   PSM$NEWSEG: ENTRY (POINTER$, SIZE);
       23     5455
       24     5456    1      VLP_VECTOR = FRESH_SEGMENT;
       25     5457
       26     5458    1      FPT_GDS.V.SEGSIZE# = SIZE;
       27     5459
       28     5460    1      CALL M$GDS (FPT_GDS) ALTRET (NO_MEMORY);
       29     5461
       30     5462    1      POINTER$ = VLP_VECTOR.PTR$;
       31     5463
       32     5464    1      RETURN;
       33     5465        %EJECT;
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:3    
       34     5466    1   PSM$GROWSEG: ENTRY (POINTER$, SIZE);
       35     5467
       36     5468    1      VLP_VECTOR.PTR$ = POINTER$;
       37     5469
       38     5470    1      FPT_GDS.V.SEGSIZE# = SIZE;
       39     5471
       40     5472    1      CALL M$GDS (FPT_GDS) ALTRET (NO_MEMORY);
       41     5473
       42     5474    1      RETURN;
       43     5475        %EJECT;
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:4    
       44     5476    1   PSM$FREESEG: ENTRY (POINTER$);
       45     5477
       46     5478    1      VLP_VECTOR.PTR$ = POINTER$;
       47     5479
       48     5480    1      FPT_FDS.V.SEGSIZE# = 0;
       49     5481
       50     5482    1      CALL M$FDS (FPT_FDS) ALTRET (NO_MEMORY);
       51     5483
       52     5484    1      IF VLP_VECTOR.W2.SEGID# = '6014'O THEN RETURN;
       53     5485
       54     5486    1      FPT_FDS.V.SEGSIZE# = (VLP_VECTOR.W1.VSIZE# + 1) / 4;
       55     5487
       56     5488    1      CALL M$FDS (FPT_FDS) ALTRET (NO_MEMORY);
       57     5489
       58     5490    1      RETURN;
       59     5491
       60     5492
       61     5493
       62     5494    1   NO_MEMORY:
       63     5495
       64     5496    1      CALL PSE$ERRMSG( , SERIOUS#);
       65     5497
       66     5498        %EJECT;
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:5    
       67     5499    1   PSM$SIZESEG: ENTRY (POINTER$, SIZE);
       68     5500
       69     5501    1      VLP_VECTOR.PTR$ = POINTER$;
       70     5502
       71     5503    1      FPT_FDS.V.SEGSIZE# = 0;
       72     5504
       73     5505    1      CALL M$FDS (FPT_FDS);
       74     5506
       75     5507    1      SIZE = 0;
       76     5508
       77     5509    1      IF VLP_VECTOR.W2.SEGID# = '0'O THEN RETURN;
       78     5510
       79     5511    1      SIZE = (VLP_VECTOR.W1.VSIZE# + 1) / 4;
       80     5512
       81     5513    1      RETURN;
       82     5514    1   END PSM$MM;
       83     5515        %EOD;

PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:6    
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSM$MM.

   Procedure PSM$MM requires 88 words for executable code.
   Procedure PSM$MM requires 8 words of local(AUTO) storage.

PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:7    

 Object Unit name= PSM$MM                                     File name= PSM$MM.:E05TOU
 UTS= JUL 30 '97 04:35:48.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$SI
    4   DCB   even  none     0      0  F$LOG
    5   DCB   even  none     0      0  M$ME
    6   DCB   even  none     0      0  M$HLPCG
    7  RtLbCm even  none    30     36  PS_FDS
    8  RtLbCm even  none    32     40  PS_SELECT_RPN
    9  RtLbCm even  none    17     21  PS_STATS_RPN
   10  RtLbCm even  none    34     42  PS_STATS_BUCKET
   11   Data  even  none    16     20  PSM$MM
   12   Proc  even  none    88    130  PSM$MM
   13  RoData even  none     1      1  PSM$MM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        2  PSM$MM
    12      3                  yes      Std        2  PSM$NEWSEG
    12     22                  yes      Std        2  PSM$GROWSEG
    12     37                  yes      Std        1  PSM$FREESEG
    12    102                  yes      Std        2  PSM$SIZESEG
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:8    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 PSE$ERRMSG
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  M$DO
     M$SI                                  F$LOG                                 M$ME
     M$HLPCG                               PS_BUFFER                             PS_STATS$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:9    


        1        1        /*M* PSM$MM  Manage STATS' data segments                                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        /*P*  NAME:    PSM$MM
        9        9              PURPOSE: Contains routines to get and free data segments for
       10       10                       STATS' performance monitoring data                             */
       11       11        PSM$MM: PROC (POINTER$, SIZE);

     11 12 000000   000000 700200 xent  PSM$MM       TSX0  ! X66_AUTO_2
        12 000001   000010 000002                    ZERO    8,2
        12 000002   000005 710000 12                 TRA     s:5456

       12       12    1   DCL POINTER$ PTR;
       13       13    1   DCL SIZE UBIN;
       14       14        %INCLUDE CP_6;
       15       95        %INCLUDE PS_DATA_R;
       16     5391        %FPT_GDS (RESULTS=VLP_VECTOR, FREE=YES);
       17     5407        %FPT_FDS (RESULTS=VLP_VECTOR);
       18     5422        %VLP_VECTOR;
       19     5437        %VLP_VECTOR (FPTN=FRESH_SEGMENT, SEGID='0'O);
       20     5452    1   DCL PSE$ERRMSG ENTRY (5);
       21     5453        %EJECT;
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:10   
       22     5454    1   PSM$NEWSEG: ENTRY (POINTER$, SIZE);

   5454 12 000003   000000 700200 xent  PSM$NEWSEG   TSX0  ! X66_AUTO_2
        12 000004   000010 000002                    ZERO    8,2

       23     5455
       24     5456    1      VLP_VECTOR = FRESH_SEGMENT;

   5456 12 000005   000016 237000 11                 LDAQ    FRESH_SEGMENT
        12 000006   000014 757000 11                 STAQ    VLP_VECTOR

       25     5457
       26     5458    1      FPT_GDS.V.SEGSIZE# = SIZE;

   5458 12 000007   200004 470500                    LDP0    @SIZE,,AUTO
        12 000010   000000 720100                    LXL0    0,,PR0
        12 000011   000004 440000 11                 SXL0    FPT_GDS+4

       27     5459
       28     5460    1      CALL M$GDS (FPT_GDS) ALTRET (NO_MEMORY);

   5460 12 000012   000000 630400 11                 EPPR0   FPT_GDS
        12 000013   430001 713400                    CLIMB   alt,gds
        12 000014   400400 401760                    pmme    nvectors=2
        12 000015   000072 702000 12                 TSX2    NO_MEMORY

       29     5461
       30     5462    1      POINTER$ = VLP_VECTOR.PTR$;

   5462 12 000016   000015 236000 11                 LDQ     VLP_VECTOR+1
        12 000017   200003 470500                    LDP0    @POINTER$,,AUTO
        12 000020   000000 756100                    STQ     0,,PR0

       31     5463
       32     5464    1      RETURN;

   5464 12 000021   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:11   

       33     5465        %EJECT;
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:12   
       34     5466    1   PSM$GROWSEG: ENTRY (POINTER$, SIZE);

   5466 12 000022   000000 700200 xent  PSM$GROWSEG  TSX0  ! X66_AUTO_2
        12 000023   000010 000002                    ZERO    8,2

       35     5467
       36     5468    1      VLP_VECTOR.PTR$ = POINTER$;

   5468 12 000024   200003 470500                    LDP0    @POINTER$,,AUTO
        12 000025   000000 236100                    LDQ     0,,PR0
        12 000026   000015 756000 11                 STQ     VLP_VECTOR+1

       37     5469
       38     5470    1      FPT_GDS.V.SEGSIZE# = SIZE;

   5470 12 000027   200004 471500                    LDP1    @SIZE,,AUTO
        12 000030   100000 720100                    LXL0    0,,PR1
        12 000031   000004 440000 11                 SXL0    FPT_GDS+4

       39     5471
       40     5472    1      CALL M$GDS (FPT_GDS) ALTRET (NO_MEMORY);

   5472 12 000032   000000 630400 11                 EPPR0   FPT_GDS
        12 000033   430001 713400                    CLIMB   alt,gds
        12 000034   400400 401760                    pmme    nvectors=2
        12 000035   000072 702000 12                 TSX2    NO_MEMORY

       41     5473
       42     5474    1      RETURN;

   5474 12 000036   000000 702200 xent               TSX2  ! X66_ARET

       43     5475        %EJECT;
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:13   
       44     5476    1   PSM$FREESEG: ENTRY (POINTER$);

   5476 12 000037   000000 700200 xent  PSM$FREESEG  TSX0  ! X66_AUTO_2
        12 000040   000010 000002                    ZERO    8,2

       45     5477
       46     5478    1      VLP_VECTOR.PTR$ = POINTER$;

   5478 12 000041   200003 470500                    LDP0    @POINTER$,,AUTO
        12 000042   000000 236100                    LDQ     0,,PR0
        12 000043   000015 756000 11                 STQ     VLP_VECTOR+1

       47     5479
       48     5480    1      FPT_FDS.V.SEGSIZE# = 0;

   5480 12 000044   000000 220003                    LDX0    0,DU
        12 000045   000012 440000 11                 SXL0    FPT_FDS+4

       49     5481
       50     5482    1      CALL M$FDS (FPT_FDS) ALTRET (NO_MEMORY);

   5482 12 000046   000006 630400 11                 EPPR0   FPT_FDS
        12 000047   430002 713400                    CLIMB   alt,fds
        12 000050   400400 401760                    pmme    nvectors=2
        12 000051   000072 702000 12                 TSX2    NO_MEMORY

       51     5483
       52     5484    1      IF VLP_VECTOR.W2.SEGID# = '6014'O THEN RETURN;

   5484 12 000052   000015 236000 11                 LDQ     VLP_VECTOR+1
        12 000053   007777 376007                    ANQ     4095,DL
        12 000054   006014 116007                    CMPQ    3084,DL
        12 000055   000057 601000 12                 TNZ     s:5486

   5484 12 000056   000000 702200 xent               TSX2  ! X66_ARET

       53     5485
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:14   
       54     5486    1      FPT_FDS.V.SEGSIZE# = (VLP_VECTOR.W1.VSIZE# + 1) / 4;

   5486 12 000057   000014 236000 11                 LDQ     VLP_VECTOR
        12 000060   000020 772000                    QRL     16
        12 000061   000001 036007                    ADLQ    1,DL
        12 000062   000002 772000                    QRL     2
        12 000063   000000 620006                    EAX0    0,QL
        12 000064   000012 440000 11                 SXL0    FPT_FDS+4

       55     5487
       56     5488    1      CALL M$FDS (FPT_FDS) ALTRET (NO_MEMORY);

   5488 12 000065   000006 630400 11                 EPPR0   FPT_FDS
        12 000066   430002 713400                    CLIMB   alt,fds
        12 000067   400400 401760                    pmme    nvectors=2
        12 000070   000072 702000 12                 TSX2    NO_MEMORY

       57     5489
       58     5490    1      RETURN;

   5490 12 000071   000000 702200 xent               TSX2  ! X66_ARET

       59     5491
       60     5492
       61     5493
       62     5494    1   NO_MEMORY:
       63     5495
       64     5496    1      CALL PSE$ERRMSG( , SERIOUS#);

   5496 12 000072   000000 236000 13    NO_MEMORY    LDQ     0
        12 000073   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000074   200006 757100                    STAQ    @SIZE+2,,AUTO
        12 000075   200006 630500                    EPPR0   @SIZE+2,,AUTO
        12 000076   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000077   000000 701000 xent               TSX1    PSE$ERRMSG
        12 000100   000000 011000                    NOP     0
        12 000101   000104 710000 12                 TRA     s:5501
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:15   

       65     5497
       66     5498        %EJECT;
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:16   
       67     5499    1   PSM$SIZESEG: ENTRY (POINTER$, SIZE);

   5499 12 000102   000000 700200 xent  PSM$SIZESEG  TSX0  ! X66_AUTO_2
        12 000103   000010 000002                    ZERO    8,2

       68     5500
       69     5501    1      VLP_VECTOR.PTR$ = POINTER$;

   5501 12 000104   200003 470500                    LDP0    @POINTER$,,AUTO
        12 000105   000000 236100                    LDQ     0,,PR0
        12 000106   000015 756000 11                 STQ     VLP_VECTOR+1

       70     5502
       71     5503    1      FPT_FDS.V.SEGSIZE# = 0;

   5503 12 000107   000000 220003                    LDX0    0,DU
        12 000110   000012 440000 11                 SXL0    FPT_FDS+4

       72     5504
       73     5505    1      CALL M$FDS (FPT_FDS);

   5505 12 000111   000006 630400 11                 EPPR0   FPT_FDS
        12 000112   030002 713400                    CLIMB   fds
        12 000113   400400 401760                    pmme    nvectors=2

       74     5506
       75     5507    1      SIZE = 0;

   5507 12 000114   200004 470500                    LDP0    @SIZE,,AUTO
        12 000115   000000 450100                    STZ     0,,PR0

       76     5508
       77     5509    1      IF VLP_VECTOR.W2.SEGID# = '0'O THEN RETURN;

   5509 12 000116   000015 236000 11                 LDQ     VLP_VECTOR+1
        12 000117   007777 316007                    CANQ    4095,DL
        12 000120   000122 601000 12                 TNZ     s:5511
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:17   

   5509 12 000121   000000 702200 xent               TSX2  ! X66_ARET

       78     5510
       79     5511    1      SIZE = (VLP_VECTOR.W1.VSIZE# + 1) / 4;

   5511 12 000122   000014 236000 11                 LDQ     VLP_VECTOR
        12 000123   000020 772000                    QRL     16
        12 000124   000001 036007                    ADLQ    1,DL
        12 000125   000002 772000                    QRL     2
        12 000126   000000 756100                    STQ     0,,PR0

       80     5512
       81     5513    1      RETURN;

   5513 12 000127   000000 702200 xent               TSX2  ! X66_ARET
       82     5514    1   END PSM$MM;
       83     5515        %EOD;

PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:18   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSM$MM.
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:19   

 **** Variables and constants ****

  ****  Section 011  Data  PSM$MM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/d STRC(216)   r     1 FPT_FDS                    0-0-0/d STRC(216)   r     1 FPT_GDS
    16-0-0/d STRC(72)    r     1 FRESH_SEGMENT             14-0-0/d STRC(72)    r     1 VLP_VECTOR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @POINTER$                  4-0-0/w PTR         r     1 @SIZE
    *0-0-0/w PTR         r     1 POINTER$                  *0-0-0/w UBIN        r     1 SIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(140)   r     1 PS_BUFFER                  0-0-0/w PTR         r     1 PS_STATS$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LO                       0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure PSM$MM requires 88 words for executable code.
   Procedure PSM$MM requires 8 words of local(AUTO) storage.
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:20   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:21   
          MINI XREF LISTING

FPT_FDS
      5418**DCL      5482<>CALL     5488<>CALL     5505<>CALL
FPT_FDS.V
      5418**DCL      5418--DCLINIT
FPT_FDS.V.SEGSIZE#
      5420**DCL      5480<<ASSIGN   5486<<ASSIGN   5503<<ASSIGN
FPT_GDS
      5402**DCL      5460<>CALL     5472<>CALL
FPT_GDS.V
      5402**DCL      5402--DCLINIT
FPT_GDS.V.SEGSIZE#
      5405**DCL      5458<<ASSIGN   5470<<ASSIGN
FRESH_SEGMENT
      5448**DCL      5456>>ASSIGN
FRESH_SEGMENT.W2
      5449**DCL      5450--REDEF
M$FDS
        58**DCL-ENT  5482--CALL     5488--CALL     5505--CALL
M$GDS
        58**DCL-ENT  5460--CALL     5472--CALL
NO_MEMORY
      5496**LABEL    5460--CALLALT  5472--CALLALT  5482--CALLALT  5488--CALLALT
POINTER$
        12**DCL        11--PROC     5454--ENTRY    5462<<ASSIGN   5466--ENTRY    5468>>ASSIGN   5476--ENTRY
      5478>>ASSIGN   5499--ENTRY    5501>>ASSIGN
PSE$ERRMSG
      5452**DCL-ENT  5496--CALL
PS_BUFFER
      4926**DCL      4961--DCLINIT  4963--DCLINIT
PS_COLLECT.CALCNT
      5081**DCL      5081--REDEF
PS_COLLECT.USRSRV
PL6.E3A0      #001=PSM$MM File=PSM$MM.:E05TSI                                    WED 07/30/97 04:35 Page:22   
      5078**DCL      5079--REDEF
PS_HLPCGBUF.DSPMSK
      5338**DCL      5344--REDEF
PS_HLPCGBUF.SLCMSK
      5379**DCL      5386--REDEF
PS_OLD_COLLECT.CALCNT
      5085**DCL      5086--REDEF
PS_OLD_COLLECT.USRSRV
      5083**DCL      5083--REDEF
PS_STATS$
      5087**DCL      5089--IMP-PTR
SIZE
        13**DCL        11--PROC     5454--ENTRY    5458>>ASSIGN   5466--ENTRY    5470>>ASSIGN   5499--ENTRY
      5507<<ASSIGN   5511<<ASSIGN
TEXTC.LEN
      5091**DCL      5091--IMP-SIZ
VLP_VECTOR
      5433**DCL      5402--DCLINIT  5418--DCLINIT  5456<<ASSIGN
VLP_VECTOR.PTR$
      5435**DCL      5462>>ASSIGN   5468<<ASSIGN   5478<<ASSIGN   5501<<ASSIGN
VLP_VECTOR.W1.VSIZE#
      5433**DCL      5486>>ASSIGN   5511>>ASSIGN
VLP_VECTOR.W2
      5434**DCL      5435--REDEF
VLP_VECTOR.W2.SEGID#
      5435**DCL      5484>>IF       5509>>IF

PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:23   
       84        1        /*M*  PSM$SEGOX   Driver for PSM$NEWSEG and PSM$GROWSEG                       */
       85        2        /*T***********************************************************/
       86        3        /*T*                                                         */
       87        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       88        5        /*T*                                                         */
       89        6        /*T***********************************************************/
       90        7        PSM$SEGOX: PROC (POINTER$, ACTUAL, HISTORY);
       91        8
       92        9    1   DCL POINTER$ PTR;
       93       10    1   DCL ACTUAL UBIN;
       94       11    1   DCL HISTORY UBIN;
       95       12    1   DCL INCREMENT UBIN;
       96       13    1   DCL TEMP UBIN;
       97       14
       98       15    1   DCL PSM$NEWSEG ENTRY (2);
       99       16    1   DCL PSM$GROWSEG ENTRY (2);
      100       17    1   DCL PSM$SIZESEG ENTRY (2);
      101       18
      102       19    1      IF ACTUAL = 0
      103       20    2        THEN DO;
      104       21    2         CALL PSM$NEWSEG (POINTER$, HISTORY);
      105       22    2         ACTUAL = HISTORY;
      106       23    2         END;
      107       24    2        ELSE DO;
      108       25    2         INCREMENT = 1024;
      109       26    2         CALL PSM$SIZESEG (POINTER$, TEMP);
      110       27    2         IF (TEMP - ACTUAL) > 1024
      111       28    3           THEN DO;
      112       29    3            ACTUAL = TEMP;
      113       30    3            RETURN;
      114       31    3            END;
      115       32    2         CALL PSM$GROWSEG (POINTER$, INCREMENT);
      116       33    2         ACTUAL = ACTUAL + INCREMENT;
      117       34    2         END;
      118       35
      119       36    1      RETURN;
      120       37
PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:24   
      121       38    1   END PSM$SEGOX;
      122       39        %EOD;

PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:25   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure PSM$SEGOX.

   Procedure PSM$SEGOX requires 48 words for executable code.
   Procedure PSM$SEGOX requires 10 words of local(AUTO) storage.

PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:26   

 Object Unit name= PSM$SEGOX                                  File name= PSM$MM.:E05TOU
 UTS= JUL 30 '97 04:36:14.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    48     60  PSM$SEGOX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  PSM$SEGOX

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 PSM$NEWSEG
         yes           Std       2 PSM$GROWSEG
         yes           Std       2 PSM$SIZESEG
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:27   


       84        1        /*M*  PSM$SEGOX   Driver for PSM$NEWSEG and PSM$GROWSEG                       */
       85        2        /*T***********************************************************/
       86        3        /*T*                                                         */
       87        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       88        5        /*T*                                                         */
       89        6        /*T***********************************************************/
       90        7        PSM$SEGOX: PROC (POINTER$, ACTUAL, HISTORY);

      7  0 000000   000000 700200 xent  PSM$SEGOX    TSX0  ! X66_AUTO_3
         0 000001   000012 000003                    ZERO    10,3

       91        8
       92        9    1   DCL POINTER$ PTR;
       93       10    1   DCL ACTUAL UBIN;
       94       11    1   DCL HISTORY UBIN;
       95       12    1   DCL INCREMENT UBIN;
       96       13    1   DCL TEMP UBIN;
       97       14
       98       15    1   DCL PSM$NEWSEG ENTRY (2);
       99       16    1   DCL PSM$GROWSEG ENTRY (2);
      100       17    1   DCL PSM$SIZESEG ENTRY (2);
      101       18
      102       19    1      IF ACTUAL = 0

     19  0 000002   200004 470500                    LDP0    @ACTUAL,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000021 601000 0                  TNZ     s:25

      103       20    2        THEN DO;

      104       21    2         CALL PSM$NEWSEG (POINTER$, HISTORY);

     21  0 000005   200005 236100                    LDQ     @HISTORY,,AUTO
         0 000006   200003 235100                    LDA     @POINTER$,,AUTO
         0 000007   200010 757100                    STAQ    TEMP+1,,AUTO
         0 000010   200010 630500                    EPPR0   TEMP+1,,AUTO
PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:28   
         0 000011   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000012   000000 701000 xent               TSX1    PSM$NEWSEG
         0 000013   000000 011000                    NOP     0

      105       22    2         ACTUAL = HISTORY;

     22  0 000014   200005 470500                    LDP0    @HISTORY,,AUTO
         0 000015   200004 471500                    LDP1    @ACTUAL,,AUTO
         0 000016   000000 235100                    LDA     0,,PR0
         0 000017   100000 755100                    STA     0,,PR1

      106       23    2         END;

     23  0 000020   000057 710000 0                  TRA     s:36

      107       24    2        ELSE DO;

      108       25    2         INCREMENT = 1024;

     25  0 000021   002000 236007                    LDQ     1024,DL
         0 000022   200006 756100                    STQ     INCREMENT,,AUTO

      109       26    2         CALL PSM$SIZESEG (POINTER$, TEMP);

     26  0 000023   200007 631500                    EPPR1   TEMP,,AUTO
         0 000024   200011 451500                    STP1    TEMP+2,,AUTO
         0 000025   200003 236100                    LDQ     @POINTER$,,AUTO
         0 000026   200010 756100                    STQ     TEMP+1,,AUTO
         0 000027   200010 630500                    EPPR0   TEMP+1,,AUTO
         0 000030   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000031   000000 701000 xent               TSX1    PSM$SIZESEG
         0 000032   000000 011000                    NOP     0

      110       27    2         IF (TEMP - ACTUAL) > 1024

     27  0 000033   200004 470500                    LDP0    @ACTUAL,,AUTO
         0 000034   200007 236100                    LDQ     TEMP,,AUTO
PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:29   
         0 000035   000000 136100                    SBLQ    0,,PR0
         0 000036   002000 116007                    CMPQ    1024,DL
         0 000037   000043 604400 0                  TMOZ    s:32

      111       28    3           THEN DO;

      112       29    3            ACTUAL = TEMP;

     29  0 000040   200007 235100                    LDA     TEMP,,AUTO
         0 000041   000000 755100                    STA     0,,PR0

      113       30    3            RETURN;

     30  0 000042   000000 702200 xent               TSX2  ! X66_ARET

      114       31    3            END;
      115       32    2         CALL PSM$GROWSEG (POINTER$, INCREMENT);

     32  0 000043   200006 631500                    EPPR1   INCREMENT,,AUTO
         0 000044   200011 451500                    STP1    TEMP+2,,AUTO
         0 000045   200003 236100                    LDQ     @POINTER$,,AUTO
         0 000046   200010 756100                    STQ     TEMP+1,,AUTO
         0 000047   200010 630500                    EPPR0   TEMP+1,,AUTO
         0 000050   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000051   000000 701000 xent               TSX1    PSM$GROWSEG
         0 000052   000000 011000                    NOP     0

      116       33    2         ACTUAL = ACTUAL + INCREMENT;

     33  0 000053   200004 470500                    LDP0    @ACTUAL,,AUTO
         0 000054   000000 236100                    LDQ     0,,PR0
         0 000055   200006 036100                    ADLQ    INCREMENT,,AUTO
         0 000056   000000 756100                    STQ     0,,PR0

      117       34    2         END;

      118       35
PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:30   
      119       36    1      RETURN;

     36  0 000057   000000 702200 xent               TSX2  ! X66_ARET
      120       37
      121       38    1   END PSM$SEGOX;
      122       39        %EOD;

PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:31   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure PSM$SEGOX.
PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:32   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ACTUAL                    5-0-0/w PTR         r     1 @HISTORY
     3-0-0/w PTR         r     1 @POINTER$                 *0-0-0/w UBIN        r     1 ACTUAL
    *0-0-0/w UBIN        r     1 HISTORY                    6-0-0/w UBIN        r     1 INCREMENT
    *0-0-0/w PTR         r     1 POINTER$                   7-0-0/w UBIN        r     1 TEMP


   Procedure PSM$SEGOX requires 48 words for executable code.
   Procedure PSM$SEGOX requires 10 words of local(AUTO) storage.
PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:33   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=PSM$SEGOX File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:34   
          MINI XREF LISTING

ACTUAL
        10**DCL         7--PROC       19>>IF         22<<ASSIGN     27>>IF         29<<ASSIGN     33<<ASSIGN
        33>>ASSIGN
HISTORY
        11**DCL         7--PROC       21<>CALL       22>>ASSIGN
INCREMENT
        12**DCL        25<<ASSIGN     32<>CALL       33>>ASSIGN
POINTER$
         9**DCL         7--PROC       21<>CALL       26<>CALL       32<>CALL
PSM$GROWSEG
        16**DCL-ENT    32--CALL
PSM$NEWSEG
        15**DCL-ENT    21--CALL
PSM$SIZESEG
        17**DCL-ENT    26--CALL
TEMP
        13**DCL        26<>CALL       27>>IF         29>>ASSIGN

PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:35   
      123        1        /*M*  PSM$ALLOC   Allocate and initialize data segment for statistics         */
      124        2        /*T***********************************************************/
      125        3        /*T*                                                         */
      126        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      127        5        /*T*                                                         */
      128        6        /*T***********************************************************/
      129        7        PSM$ALLOC: PROC (N, N1);
      130        8        %INCLUDE PS_DATA_R;
      131     5304        %REF_RPN (NAME=BASED_RPN, STCLASS=BASED);
      132     5315        %DUMMY_BUCKET (NAME=BASED_BUCKET, STCLASS=BASED);
      133     5321    1   DCL N UBIN;
      134     5322    1   DCL N1 UBIN;
      135     5323    1   DCL I UBIN;
      136     5324    1   DCL J UBIN;
      137     5325    1   DCL P$ PTR;
      138     5326    1   DCL Q$ PTR;
      139     5327    1   DCL R$ PTR;
      140     5328    1   DCL PSM$SEGOX ENTRY (3);
      141     5329        %EJECT;
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:36   
      142     5330    1      PS_STATS_SIZE = N * (SIZEW(PS_STATS) + SIZEW(PS_STATS_BUCKET) +
      143     5331    1       SIZEW(PS_STATS_RPN) + MAX_PLOT_VALUES#) +
      144     5332    1       N1 * (X_AXIS_POINTS# * Y_AXIS_POINTS# / 4);
      145     5333
      146     5334    1      J = 0;
      147     5335
      148     5336    1      CALL PSM$SEGOX (PS_STATS$, J, PS_STATS_SIZE);
      149     5337
      150     5338    2      DO I = 0 TO PS_STATS_SIZE - 1;
      151     5339
      152     5340    2         PINCRW(PS_STATS$, I) -> SBIN_ = 0;
      153     5341
      154     5342    2         END;
      155     5343
      156     5344    1      P$ = PINCRW(PS_STATS$, N * SIZEW(PS_STATS));
      157     5345    1      Q$ = PINCRW(P$, N * SIZEW(PS_STATS_BUCKET));
      158     5346    1      R$ = PINCRW(Q$, N * SIZEW(PS_STATS_RPN));
      159     5347    1      PS_GRAPH$(0) = PINCRW(R$, N * MAX_PLOT_VALUES#);
      160     5348
      161     5349    2      DO I = 1 TO N1-1;
      162     5350
      163     5351    2         PS_GRAPH$(I) = PINCRC(PS_GRAPH$(I-1), X_AXIS_POINTS#
      164     5352    2          * Y_AXIS_POINTS#);
      165     5353
      166     5354    2         END;
      167     5355
      168     5356    2      DO I = 0 TO N-1;
      169     5357
      170     5358    2         PS_STATS.BUCKET$(I) = P$;
      171     5359    2         PS_STATS.RPN$(I) = Q$;
      172     5360    2         PS_STATS.PLOT$(I) = R$;
      173     5361
      174     5362    2         PS_STATS.MIN(I) = BITBIN('377777777777'O);
      175     5363    2         PS_STATS.MAX(I) = BITBIN('400000000000'O);
      176     5364
      177     5365    2         P$ -> BASED_BUCKET = PS_STATS_BUCKET;
      178     5366    2         Q$ -> BASED_RPN = PS_STATS_RPN;
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:37   
      179     5367
      180     5368    2         P$ = PINCRW(P$, SIZEW(PS_STATS_BUCKET));
      181     5369    2         Q$ = PINCRW(Q$, SIZEW(PS_STATS_RPN));
      182     5370    2         R$ = PINCRW(R$, MAX_PLOT_VALUES#);
      183     5371
      184     5372    2         END;
      185     5373
      186     5374    1      RETURN;
      187     5375
      188     5376    1   END PSM$ALLOC;

PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:38   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure PSM$ALLOC.

   Procedure PSM$ALLOC requires 110 words for executable code.
   Procedure PSM$ALLOC requires 16 words of local(AUTO) storage.

    No errors detected in file PSM$MM.:E05TSI    .

PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:39   

 Object Unit name= PSM$ALLOC                                  File name= PSM$MM.:E05TOU
 UTS= JUL 30 '97 04:36:19.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$LO
    1   DCB   even  none     0      0  M$DO
    2   DCB   even  none     0      0  M$SI
    3   DCB   even  none     0      0  F$LOG
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$HLPCG
    6  RtLbCm even  none    30     36  PS_FDS
    7  RtLbCm even  none    32     40  PS_SELECT_RPN
    8  RtLbCm even  none    17     21  PS_STATS_RPN
    9  RtLbCm even  none    34     42  PS_STATS_BUCKET
   10   Proc  even  none   110    156  PSM$ALLOC
   11  RoData even  none     2      2  PSM$ALLOC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    10      0   yes            yes      Std        2  PSM$ALLOC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 PSM$SEGOX
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:40   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$LO                                  M$DO                                  M$SI
     F$LOG                                 M$ME                                  M$HLPCG
     PS_BUFFER                             PS_STATS$                             PS_GRAPH$
     PS_STATS_SIZE                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:41   


      123        1        /*M*  PSM$ALLOC   Allocate and initialize data segment for statistics         */
      124        2        /*T***********************************************************/
      125        3        /*T*                                                         */
      126        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      127        5        /*T*                                                         */
      128        6        /*T***********************************************************/
      129        7        PSM$ALLOC: PROC (N, N1);

      7 10 000000   000000 700200 xent  PSM$ALLOC    TSX0  ! X66_AUTO_2
        10 000001   000020 000002                    ZERO    16,2

      130        8        %INCLUDE PS_DATA_R;
      131     5304        %REF_RPN (NAME=BASED_RPN, STCLASS=BASED);
      132     5315        %DUMMY_BUCKET (NAME=BASED_BUCKET, STCLASS=BASED);
      133     5321    1   DCL N UBIN;
      134     5322    1   DCL N1 UBIN;
      135     5323    1   DCL I UBIN;
      136     5324    1   DCL J UBIN;
      137     5325    1   DCL P$ PTR;
      138     5326    1   DCL Q$ PTR;
      139     5327    1   DCL R$ PTR;
      140     5328    1   DCL PSM$SEGOX ENTRY (3);
      141     5329        %EJECT;
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:42   
      142     5330    1      PS_STATS_SIZE = N * (SIZEW(PS_STATS) + SIZEW(PS_STATS_BUCKET) +

   5330 10 000002   200004 470500                    LDP0    @N1,,AUTO
        10 000003   000000 236100                    LDQ     0,,PR0
        10 000004   000360 402007                    MPY     240,DL
        10 000005   200014 756100                    STQ     R$+2,,AUTO
        10 000006   200003 471500                    LDP1    @N,,AUTO
        10 000007   100000 236100                    LDQ     0,,PR1
        10 000010   000147 402007                    MPY     103,DL
        10 000011   200014 036100                    ADLQ    R$+2,,AUTO
        10 000012   000000 756000 xsym               STQ     PS_STATS_SIZE

      143     5331    1       SIZEW(PS_STATS_RPN) + MAX_PLOT_VALUES#) +
      144     5332    1       N1 * (X_AXIS_POINTS# * Y_AXIS_POINTS# / 4);
      145     5333
      146     5334    1      J = 0;

   5334 10 000013   200007 450100                    STZ     J,,AUTO

      147     5335
      148     5336    1      CALL PSM$SEGOX (PS_STATS$, J, PS_STATS_SIZE);

   5336 10 000014   000000 236000 11                 LDQ     0
        10 000015   200016 756100                    STQ     R$+4,,AUTO
        10 000016   200007 633500                    EPPR3   J,,AUTO
        10 000017   200015 453500                    STP3    R$+3,,AUTO
        10 000020   000001 236000 11                 LDQ     1
        10 000021   200014 756100                    STQ     R$+2,,AUTO
        10 000022   200014 630500                    EPPR0   R$+2,,AUTO
        10 000023   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 000024   000000 701000 xent               TSX1    PSM$SEGOX
        10 000025   000000 011000                    NOP     0

      149     5337
      150     5338    2      DO I = 0 TO PS_STATS_SIZE - 1;

   5338 10 000026   200006 450100                    STZ     I,,AUTO
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:43   
        10 000027   000036 710000 10                 TRA     s:5342+3

      151     5339
      152     5340    2         PINCRW(PS_STATS$, I) -> SBIN_ = 0;

   5340 10 000030   000000 470400 xsym               LDP0    PS_STATS$
        10 000031   200006 720100                    LXL0    I,,AUTO
        10 000032   000000 450110                    STZ     0,X0,PR0

      153     5341
      154     5342    2         END;

   5342 10 000033   200006 235100                    LDA     I,,AUTO
        10 000034   000001 035007                    ADLA    1,DL
        10 000035   200006 755100                    STA     I,,AUTO
        10 000036   200006 236100                    LDQ     I,,AUTO
        10 000037   000000 116000 xsym               CMPQ    PS_STATS_SIZE
        10 000040   000030 602000 10                 TNC     s:5340

      155     5343
      156     5344    1      P$ = PINCRW(PS_STATS$, N * SIZEW(PS_STATS));

   5344 10 000041   200003 470500                    LDP0    @N,,AUTO
        10 000042   000000 720100                    LXL0    0,,PR0
        10 000043   000000 636010                    EAQ     0,X0
        10 000044   000014 402007                    MPY     12,DL
        10 000045   000000 036000 xsym               ADLQ    PS_STATS$
        10 000046   200010 756100                    STQ     P$,,AUTO

      157     5345    1      Q$ = PINCRW(P$, N * SIZEW(PS_STATS_BUCKET));

   5345 10 000047   000000 636010                    EAQ     0,X0
        10 000050   000042 402007                    MPY     34,DL
        10 000051   200010 036100                    ADLQ    P$,,AUTO
        10 000052   200011 756100                    STQ     Q$,,AUTO

      158     5346    1      R$ = PINCRW(Q$, N * SIZEW(PS_STATS_RPN));
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:44   

   5346 10 000053   000000 636010                    EAQ     0,X0
        10 000054   000021 402007                    MPY     17,DL
        10 000055   200011 036100                    ADLQ    Q$,,AUTO
        10 000056   200012 756100                    STQ     R$,,AUTO

      159     5347    1      PS_GRAPH$(0) = PINCRW(R$, N * MAX_PLOT_VALUES#);

   5347 10 000057   000000 636010                    EAQ     0,X0
        10 000060   000050 402007                    MPY     40,DL
        10 000061   200012 036100                    ADLQ    R$,,AUTO
        10 000062   000000 756000 xsym               STQ     PS_GRAPH$

      160     5348
      161     5349    2      DO I = 1 TO N1-1;

   5349 10 000063   000001 235007                    LDA     1,DL
        10 000064   200006 755100                    STA     I,,AUTO
        10 000065   000075 710000 10                 TRA     s:5354+3

      162     5350
      163     5351    2         PS_GRAPH$(I) = PINCRC(PS_GRAPH$(I-1), X_AXIS_POINTS#

   5351 10 000066   200006 720100                    LXL0    I,,AUTO
        10 000067   777777 236010 xsym               LDQ     PS_GRAPH$-1,X0
        10 000070   000360 036003                    ADLQ    240,DU
        10 000071   000000 756010 xsym               STQ     PS_GRAPH$,X0

      164     5352    2          * Y_AXIS_POINTS#);
      165     5353
      166     5354    2         END;

   5354 10 000072   200006 235100                    LDA     I,,AUTO
        10 000073   000001 035007                    ADLA    1,DL
        10 000074   200006 755100                    STA     I,,AUTO
        10 000075   200004 470500                    LDP0    @N1,,AUTO
        10 000076   200006 236100                    LDQ     I,,AUTO
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:45   
        10 000077   000000 116100                    CMPQ    0,,PR0
        10 000100   000066 602000 10                 TNC     s:5351

      167     5355
      168     5356    2      DO I = 0 TO N-1;

   5356 10 000101   200006 450100                    STZ     I,,AUTO
        10 000102   000151 710000 10                 TRA     s:5372+3

      169     5357
      170     5358    2         PS_STATS.BUCKET$(I) = P$;

   5358 10 000103   200006 236100                    LDQ     I,,AUTO
        10 000104   000014 402007                    MPY     12,DL
        10 000105   000000 620006                    EAX0    0,QL
        10 000106   200010 236100                    LDQ     P$,,AUTO
        10 000107   000000 470400 xsym               LDP0    PS_STATS$
        10 000110   000012 756110                    STQ     10,X0,PR0

      171     5359    2         PS_STATS.RPN$(I) = Q$;

   5359 10 000111   200011 236100                    LDQ     Q$,,AUTO
        10 000112   000000 470400 xsym               LDP0    PS_STATS$
        10 000113   000013 756110                    STQ     11,X0,PR0

      172     5360    2         PS_STATS.PLOT$(I) = R$;

   5360 10 000114   200012 236100                    LDQ     R$,,AUTO
        10 000115   000000 470400 xsym               LDP0    PS_STATS$
        10 000116   000011 756110                    STQ     9,X0,PR0

      173     5361
      174     5362    2         PS_STATS.MIN(I) = BITBIN('377777777777'O);

   5362 10 000117   000031 235000 xsym               LDA     B_VECTNIL+25
        10 000120   000000 470400 xsym               LDP0    PS_STATS$
        10 000121   000002 755110                    STA     2,X0,PR0
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:46   

      175     5363    2         PS_STATS.MAX(I) = BITBIN('400000000000'O);

   5363 10 000122   000030 235000 xsym               LDA     B_VECTNIL+24
        10 000123   000000 470400 xsym               LDP0    PS_STATS$
        10 000124   000003 755110                    STA     3,X0,PR0

      176     5364
      177     5365    2         P$ -> BASED_BUCKET = PS_STATS_BUCKET;

   5365 10 000125   200010 470500                    LDP0    P$,,AUTO
        10 000126   000100 100400                    MLR     fill='000'O
        10 000127   000000 000014 9                  ADSC9   PS_STATS_BUCKET          cn=0,n=12
        10 000130   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12

      178     5366    2         Q$ -> BASED_RPN = PS_STATS_RPN;

   5366 10 000131   200011 471500                    LDP1    Q$,,AUTO
        10 000132   000000 237000 8                  LDAQ    PS_STATS_RPN
        10 000133   100000 755100                    STA     0,,PR1
        10 000134   100001 756100                    STQ     1,,PR1

      179     5367
      180     5368    2         P$ = PINCRW(P$, SIZEW(PS_STATS_BUCKET));

   5368 10 000135   200010 236100                    LDQ     P$,,AUTO
        10 000136   000042 036003                    ADLQ    34,DU
        10 000137   200010 756100                    STQ     P$,,AUTO

      181     5369    2         Q$ = PINCRW(Q$, SIZEW(PS_STATS_RPN));

   5369 10 000140   200011 236100                    LDQ     Q$,,AUTO
        10 000141   000021 036003                    ADLQ    17,DU
        10 000142   200011 756100                    STQ     Q$,,AUTO

      182     5370    2         R$ = PINCRW(R$, MAX_PLOT_VALUES#);

PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:47   
   5370 10 000143   200012 236100                    LDQ     R$,,AUTO
        10 000144   000050 036003                    ADLQ    40,DU
        10 000145   200012 756100                    STQ     R$,,AUTO

      183     5371
      184     5372    2         END;

   5372 10 000146   200006 235100                    LDA     I,,AUTO
        10 000147   000001 035007                    ADLA    1,DL
        10 000150   200006 755100                    STA     I,,AUTO
        10 000151   200003 470500                    LDP0    @N,,AUTO
        10 000152   200006 236100                    LDQ     I,,AUTO
        10 000153   000000 116100                    CMPQ    0,,PR0
        10 000154   000103 602000 10                 TNC     s:5358

      185     5373
      186     5374    1      RETURN;

   5374 10 000155   000000 702200 xent               TSX2  ! X66_ARET
      187     5375
      188     5376    1   END PSM$ALLOC;

PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:48   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure PSM$ALLOC.
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:49   

 **** Variables and constants ****

  ****  Section 008 RtLmCm PS_STATS_RPN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(612)   r     1 PS_STATS_RPN

  ****  Section 009 RtLmCm PS_STATS_BUCKET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1224)  r     1 PS_STATS_BUCKET

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @N                         4-0-0/w PTR         r     1 @N1
     6-0-0/w UBIN        r     1 I                          7-0-0/w UBIN        r     1 J
    *0-0-0/w UBIN        r     1 N                         *0-0-0/w UBIN        r     1 N1
    10-0-0/w PTR         r     1 P$                        11-0-0/w PTR         r     1 Q$
    12-0-0/w PTR         r     1 R$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(140)   r     1 PS_BUFFER
     0-0-0/w PTR         r     1 PS_GRAPH$(0:9)
     0-0-0/w PTR         r     1 PS_STATS$                  0-0-0/w UBIN        r     1 PS_STATS_SIZE

  ****  BASED and DCB variables  ****
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:50   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(108)   r     1 BASED_BUCKET               0-0-0/w STRC(72)    r     1 BASED_RPN
     0-0-0N  NULL        r     1 M$LO
     0-0-0/w STRC(432)   r     1 PS_STATS(0:0)
     0-0-0/w SBIN        r     1 SBIN_                      0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure PSM$ALLOC requires 110 words for executable code.
   Procedure PSM$ALLOC requires 16 words of local(AUTO) storage.

    No errors detected in file PSM$MM.:E05TSI    .
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:51   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:52   
          MINI XREF LISTING

BASED_BUCKET
      5316**DCL      5365<<ASSIGN
BASED_RPN
      5305**DCL      5366<<ASSIGN
I
      5323**DCL      5338<<DOINDEX  5340>>ASSIGN   5349<<DOINDEX  5351>>ASSIGN   5351>>ASSIGN   5356<<DOINDEX
      5358>>ASSIGN   5359>>ASSIGN   5360>>ASSIGN   5362>>ASSIGN   5363>>ASSIGN
J
      5324**DCL      5334<<ASSIGN   5336<>CALL
N
      5321**DCL         7--PROC     5330>>ASSIGN   5344>>ASSIGN   5345>>ASSIGN   5346>>ASSIGN   5347>>ASSIGN
      5356>>DOINDEX
N1
      5322**DCL         7--PROC     5330>>ASSIGN   5349>>DOINDEX
P$
      5325**DCL      5344<<ASSIGN   5345>>ASSIGN   5358>>ASSIGN   5365>>ASSIGN   5368<<ASSIGN   5368>>ASSIGN
PSM$SEGOX
      5328**DCL-ENT  5336--CALL
PS_BUFFER
      4839**DCL      4874--DCLINIT  4876--DCLINIT
PS_COLLECT.CALCNT
      4994**DCL      4994--REDEF
PS_COLLECT.USRSRV
      4991**DCL      4992--REDEF
PS_GRAPH$
      5000**DCL      5347<<ASSIGN   5351<<ASSIGN   5351>>ASSIGN
PS_HLPCGBUF.DSPMSK
      5251**DCL      5257--REDEF
PS_HLPCGBUF.SLCMSK
      5292**DCL      5299--REDEF
PS_OLD_COLLECT.CALCNT
      4998**DCL      4999--REDEF
PL6.E3A0      #003=PSM$ALLOC File=PSM$MM.:E05TSI                                 WED 07/30/97 04:36 Page:53   
PS_OLD_COLLECT.USRSRV
      4996**DCL      4996--REDEF
PS_STATS
      5002**DCL      5330--ASSIGN   5344--ASSIGN
PS_STATS.BUCKET$
      5004**DCL      5358<<ASSIGN
PS_STATS.MAX
      5003**DCL      5363<<ASSIGN
PS_STATS.MIN
      5003**DCL      5362<<ASSIGN
PS_STATS.PLOT$
      5003**DCL      5360<<ASSIGN
PS_STATS.RPN$
      5004**DCL      5359<<ASSIGN
PS_STATS$
      5000**DCL      5002--IMP-PTR  5336<>CALL     5340>>ASSIGN   5344>>ASSIGN   5358>>ASSIGN   5359>>ASSIGN
      5360>>ASSIGN   5362>>ASSIGN   5363>>ASSIGN
PS_STATS_BUCKET
      4980**DCL      5330--ASSIGN   5345--ASSIGN   5365>>ASSIGN   5368--ASSIGN
PS_STATS_RPN
      4967**DCL      5330--ASSIGN   5346--ASSIGN   5366>>ASSIGN   5369--ASSIGN
PS_STATS_SIZE
      5000**DCL      5330<<ASSIGN   5336<>CALL     5338>>DOINDEX
Q$
      5326**DCL      5345<<ASSIGN   5346>>ASSIGN   5359>>ASSIGN   5366>>ASSIGN   5369<<ASSIGN   5369>>ASSIGN
R$
      5327**DCL      5346<<ASSIGN   5347>>ASSIGN   5360>>ASSIGN   5370<<ASSIGN   5370>>ASSIGN
SBIN_
      5004**DCL      5340<<ASSIGN
TEXTC.LEN
      5004**DCL      5004--IMP-SIZ
