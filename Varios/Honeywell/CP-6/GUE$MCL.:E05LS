VERSION E05

PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:1    
        1        1        /*M* GUE$MCL  Handler for LCP-6 Exceptional Condition Monitor Services  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0     */
        8        8
        9        9        GUE$MCL: PROC(GUD_PARAMS);
       10       10
       11       11        %INCLUDE G_HJIT_M;
       12      156        %INCLUDE G_JIT_M;
       13      421        %INCLUDE G_ROS_M;
       14      503        %INCLUDE GU_MACROS_M;
       15      662 S      %INCLUDE GH_LCP6_M;
       16      663 S      %INCLUDE GJ_LCP6_M;
       17      664 S      %INCLUDE GU_LCP6_M;
       18      665 S      %INCLUDE G_LCP6_E;
       19      666        %INCLUDE J_SCODE_C;
       20      694
       21      695                                                /* Input parameters                   */
       22      696        %GUD_HAND_PARAMS (FPTN=GUD_PARAMS);
       23      772
       24      773                                                /* AUTO Storage                       */
       25      774    1   DCL I UBIN;
       26      775    1   DCL MCL_CODE UBIN;
       27      776    1   DCL NEW$ PTR;
       28      777    1   DCL PREVIOUS$ PTR;
       29      778    1   DCL ALT$ PTR;
       30      779    1   DCL CSTK$ PTR;
       31      780    1   DCL STK$ PTR;
       32      781    1   DCL TCB$ PTR;
       33      782    1   DCL ECCB$ PTR;
       34      783    1   DCL R3 UBIN;
       35      784    1   DCL B3$ PTR;
       36      785    1   DCL J BIT(1) ALIGNED;
       37      786
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:2    
       38      787                                                /*  Based Structures                  */
       39      788    1   DCL G$PRIVS BIT(32) BASED WALIGNED;
       40      789    1   DCL B$WORD UBIN BASED;
       41      790    1   DCL P$$ EPTR BASED;
       42      791
       43      792        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
       44     3766        %G$JIT (FPTN=G$JIT, STCLASS="BASED(G$JIT$)");
       45     4180        %G$ROS (FPTN=G$ROS,STCLASS="BASED(G$ROS$)");
       46     4224        %G$ECCB (FPTN=G$ECCB,ARRAYED=YES,STCLASS="BASED(ECCB$)");
       47     4300        %G$TCB (FPTN=G$TCB,STCLASS="BASED(TCB$)");
       48     4321        %G$TSA (FPTN=G$TSA,STCLASS="BASED(GUD_PARAMS.TSA$)");
       49     4709        %G$EXCFR;
       50     5091
       51     5092        %VLP_TRAP_CONDITIONS (FPTN=VLP$TC,STCLASS=BASED);
       52     5248        %VLP_ERRCODE (FPTN=G$ERR,STCLASS=BASED);
       53     5294        %VLP_REGISTERS (FPTN=VLP$REGISTERS,STCLASS=BASED);
       54     5466        %FPT_RETRY (FPTN=FPT$RETRY,STCLASS=BASED,VECTORS=NO);
       55     5489
       56     5490
       57     5491                                                /* EQUS                               */
       58     5492        %GU_MCL_E;
       59     5518        %GJ_MCL_E;
       60     5527        %G$JIT_E;
       61     5589        %INCLUDE UD_ERRORS_C;
       62     5631        %INCLUDE UE_ERRORS_C;
       63     5649        %INCLUDE UD_SCODE_C;
       64     5661
       65     5662                                                /* Internal Data                      */
       66     5663        %VLP_SCODE (FPTN=EMCL_TABLE,ERR#=%S$MCL_TABLE,SEV=6,
       67     5664                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       68     5725        %VLP_SCODE (FPTN=SDOMAIN,ERR#=%S$SSFRAME,SEV=G_SEV_SUA#,
       69     5726                    STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       70     5787
       71     5788
       72     5789        %VLP_ERRCODE (FPTN=EBADVECT0,ERR#=%E$BADVECT0,SEV=G_SEV_ERROR#,
       73     5790                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       74     5836        %VLP_ERRCODE (FPTN=EALTEMPTY,ERR#=%E$ALTEMPTY,SEV=G_SEV_ERROR#,
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:3    
       75     5837                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       76     5883        %VLP_ERRCODE (FPTN=ETCBEMPTY,ERR#=%E$TCBEMPTY,SEV=G_SEV_ERROR#,
       77     5884                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       78     5930        %VLP_ERRCODE (FPTN=ENOTPMME,ERR#=%E$NOTPMME,SEV=G_SEV_ERROR#,
       79     5931                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       80     5977        %VLP_ERRCODE (FPTN=ETCBFULL,ERR#=%E$TCBFULL,SEV=G_SEV_ERROR#,
       81     5978                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       82     6024        %VLP_ERRCODE (FPTN=EALTRET,ERR#=%E$ALTRET,SEV=G_SEV_ERROR#,
       83     6025                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       84     6071        %VLP_ERRCODE (FPTN=ENOPRIV,ERR#=%E$NOPRIV,SEV=G_SEV_CONT#,
       85     6072                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       86     6118
       87     6119
       88     6120                                                /*  External data                     */
       89     6121
       90     6122    1   DCL G$UHJIT$ PTR SYMREF READONLY;
       91     6123    1   DCL G$JIT$ PTR SYMREF READONLY;
       92     6124    1   DCL G$ROS$ PTR SYMREF READONLY;
       93     6125
       94     6126                                                /* External Procedures                */
       95     6127    1   DCL GJM$MCL ENTRY(1);
       96     6128    1   DCL SCREECH ENTRY(1);
       97     6129        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:4    
       98     6130        /*F* NAME: GUE$MCL
       99     6131
      100     6132             PURPOSE:  GUE$MCL is the MCL handler for monitor
      101     6133                       services belonging to the GU Functional
      102     6134                       Code Group that deal with exceptional
      103     6135                       condition processing.
      104     6136
      105     6137                       Exceptional condition services fall into two
      106     6138                       catagories;  those used to set and reset
      107     6139                       control of exceptional conditions and those
      108     6140                       used to manipulate the TCB.
      109     6141        */
      110     6142
      111     6143        /* Set up some commonly required pointers
      112     6144        */
      113     6145    1      TCB$ = ADDR(G$ROS.TCB);
      114     6146    1      ALT$ = G$TCB.ALT$;
      115     6147    1      CSTK$ = G$TCB.STK$;
      116     6148
      117     6149    1      IF G$UHJIT.DMN.ID = %G_DMN_USR_SVC#
      118     6150    1      THEN ECCB$ = G$ROS.U_ECCB$;
      119     6151    1      ELSE IF G$UHJIT.DMN.ID = %G_DMN_DB_SVC#
      120     6152    1           THEN ECCB$ = G$ROS.DB_ECCB$;
      121     6153    1           ELSE CALL SCREECH(SDOMAIN);
      122     6154
      123     6155
      124     6156        /* Islolate the MCL specific code from the FCG so it may be
      125     6157           used as an index.
      126     6158        */
      127     6159    1      MCL_CODE = GUD_PARAMS.MCL.C.MCL;
      128     6160
      129     6161
      130     6162        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:5    
      131     6163        /*************************************************************
      132     6164         *                                                           *
      133     6165         *               M$EVENT   M$INT   M$XCON  M$TRAP            *
      134     6166         *                                                           *
      135     6167         *************************************************************/
      136     6168
      137     6169        /*F* NAME: M$EVENT M$INT M$XCON M$TRAP
      138     6170        */
      139     6171
      140     6172
      141     6173        /*D*  Any of these service requests may specify that the currently
      142     6174              effective exceptional condition handler be returned to the
      143     6175              user specified results area.  The new handler address, if
      144     6176              specified, is then used to replace the currently effective
      145     6177              address in the ECCB.   Of course, if neither parameter is
      146     6178              specified, it is an error and we ALTRET to the user.
      147     6179        */
      148     6180
      149     6181    1      IF GUD_PARAMS.MCL.CODE <= %G_MCL_DBCONTROL#
      150     6182    2      THEN DO;
      151     6183    2           NEW$ = GUD_PARAMS.PTRS.PAR1$;
      152     6184    2           PREVIOUS$ = GUD_PARAMS.PTRS.PAR2$;
      153     6185
      154     6186    2           IF (NEW$ = ADDR(NIL) ) AND (PREVIOUS$ = ADDR(NIL) )
      155     6187    3           THEN DO;
      156     6188    3                GUD_PARAMS.ERR = EBADVECT0;
      157     6189    3                RETURN;
      158     6190    3                END;
      159     6191        /*E*   ERROR: GUE-E$BADVECT0-E
      160     6192               MESSAGE:  Either the new or previous condition setting must be specified.
      161     6193        */
      162     6194
      163     6195    2           IF PREVIOUS$ ~= ADDR(NIL)
      164     6196    2           THEN PREVIOUS$->VLP$TC.TRAP$ = G$ECCB.HAND$(MCL_CODE);
      165     6197
      166     6198    2           IF NEW$ ~= ADDR(NIL)
      167     6199    2           THEN G$ECCB.HAND$(MCL_CODE) = NEW$->VLP$TC.TRAP$;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:6    
      168     6200
      169     6201        /*D* The M$TRAP service request allows for the resetting of the
      170     6202             FLTFLG area of the ECCB and the M1 and M3 registers as well.
      171     6203        */
      172     6204    2           IF GUD_PARAMS.MCL.CODE = %G_MCL_TRAP#
      173     6205    3           THEN DO;
      174     6206    3                IF PREVIOUS$ ~= ADDR(NIL)
      175     6207    4                THEN DO;
      176     6208    4                     PREVIOUS$->VLP$TC.FLTFLG = G$ECCB.FLTFLG;
      177     6209    4                     PREVIOUS$->VLP$TC.M1 = G$TSA.ISA.REGS.M1;
      178     6210    4                     PREVIOUS$->VLP$TC.M3 = G$TSA.ISA.REGS.M3;
      179     6211    4                     END;
      180     6212
      181     6213    3                IF NEW$ ~= ADDR(NIL)
      182     6214    4                THEN DO;
      183     6215    4                     G$ECCB.FLTFLG = NEW$->VLP$TC.FLTFLG;
      184     6216
      185     6217    4                     J = G$TSA.ISA.REGS.M1.J;
      186     6218    4                     G$TSA.ISA.REGS.M1 = NEW$->VLP$TC.M1;
      187     6219    4                     IF G$JIT.DB# ~= 0
      188     6220    4                     THEN G$TSA.ISA.REGS.M1.J = J;
      189     6221
      190     6222    4                     G$TSA.ISA.REGS.M3 = NEW$->VLP$TC.M3;
      191     6223    4                     END;
      192     6224    3                END;
      193     6225
      194     6226        /*D* If this is an M$XCON request, and the entry address is being
      195     6227             reset, the XCON in progress bit is reset in the ECCB.
      196     6228        */
      197     6229    2           IF (GUD_PARAMS.MCL.CODE = %G_MCL_XCON#) AND (NEW$ ~= ADDR(NIL))
      198     6230    2           THEN G$ECCB.FLAGS.XCONP = '0'B;
      199     6231
      200     6232    2           END /* Do if <= TRAP */;
      201     6233
      202     6234
      203     6235        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:7    
      204     6236        /*************************************************************
      205     6237         *                                                           *
      206     6238         *              TCB Manipulation Requests                    *
      207     6239         *                                                           *
      208     6240         *************************************************************/
      209     6241
      210     6242        /*F* NAME: TCB Manipulation Requests
      211     6243        */
      212     6244
      213     6245
      214     6246        /*D* If the service request is M$CLRSTK, M$TRTN, M$MERCS, M$RETRYS
      215     6247             or M$RENV and the TCB Stack is empty, it is an error.
      216     6248        */
      217     6249    2      ELSE DO;
      218     6250    2           IF GUD_PARAMS.MCL.CODE > %G_MCL_RETRY#
      219     6251    2           THEN IF G$TCB.CURRSZ=0
      220     6252    3                THEN DO;
      221     6253    3                     GUD_PARAMS.ERR=ETCBEMPTY;
      222     6254    3                     IF GUD_PARAMS.MCL.CODE = %G_MCL_CLRSTK# THEN GUD_PARAMS.ERR.SEV=0;
      223     6255    3                     RETURN;
      224     6256    3                     END;
      225     6257    2                ELSE STK$=CSTK$;
      226     6258        /*E*     ERROR:  GUE-E$TCBEMPTY-E
      227     6259                 MESSAGE: That Service Request not allowed when the TCB stack is empty.
      228     6260                 MESSAGE1: One of the following Service Requests has
      229     6261                           caused you to be aborted because your TCB
      230     6262                           Stack is empty:
      231     6263                               M$TRTN   M$CLRSTK   M$MERCS   M$RETRYS   M$RENV
      232     6264        */
      233     6265
      234     6266        /*D* If the service request is M$MERC, M$RETRY or M$SENV and
      235     6267             the TCB Altret frame is empty, it is an error.
      236     6268        */
      237     6269    2           ELSE IF ALT$->G$EXCFR.PREVSZ ~=0
      238     6270    3                THEN DO;
      239     6271    3                     GUD_PARAMS.ERR=EALTEMPTY;
      240     6272    3                     RETURN;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:8    
      241     6273    3                     END;
      242     6274    2                ELSE STK$=ALT$;
      243     6275        /*E*     ERROR:  GUE-E$ALTEMPTY-E
      244     6276         MESSAGE: That Service Request is not allowed when the ALTRET frame in the TCB is em
              6276        pty.
      245     6277                 MESSAGE1: One of the following service requests has caused
      246     6278                           you to be aborted because the ALTRET frame in
      247     6279                           your TCB is empty:
      248     6280                               M$MERC   M$RETRY   M$SENV
      249     6281        */
      250     6282
      251     6283        /*   Now proceed with the individual service request.
      252     6284        */
      253     6285    3           DO CASE(GUD_PARAMS.MCL.CODE);
      254     6286
      255     6287        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:9    
      256     6288        /*************************************************************
      257     6289         *                                                           *
      258     6290         *                        M$CLRSTK                           *
      259     6291         *                                                           *
      260     6292         *************************************************************/
      261     6293    3            CASE(%G_MCL_CLRSTK#);
      262     6294    3              IF GUD_PARAMS.PTRS.PAR1$ = ADDR(NIL)
      263     6295    3              THEN I = 1;
      264     6296    3              ELSE I = GUD_PARAMS.PTRS.PAR1$->B$WORD;
      265     6297
      266     6298    4              DO WHILE (I > 0);
      267     6299    4                   CALL CLEAR_ONE;
      268     6300    4                   I = I -1;
      269     6301    4                   END /*Do while I >0 */;
      270     6302
      271     6303
      272     6304        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:10   
      273     6305        /*************************************************************
      274     6306         *                                                           *
      275     6307         *                     M$SENV - M$RENV                       *
      276     6308         *                                                           *
      277     6309         *************************************************************/
      278     6310    3            CASE(%G_MCL_SENV#);
      279     6311    3              IF G$TCB.AVSZ < SIZEW(G$EXCFR)
      280     6312    4              THEN DO;
      281     6313    4                   GUD_PARAMS.ERR = ETCBFULL;
      282     6314    4                   END;
      283     6315        /*E* ERROR: GUE-E$TCBFULL-E
      284     6316             MESSAGE: Can't M$SENV - Your TCB is full.
      285     6317        */
      286     6318
      287     6319    4              ELSE DO;
      288     6320    4                   CSTK$ = PINCRW(CSTK$,G$TCB.CURRSZ);
      289     6321    4                   ALT$->G$EXCFR.PREVSZ = G$TCB.CURRSZ;
      290     6322    4                   G$TCB.STK$ = CSTK$;
      291     6323    4                   G$TCB.CURRSZ = SIZEW(G$EXCFR);
      292     6324    4                   G$TCB.AVSZ = G$TCB.AVSZ - G$TCB.CURRSZ;
      293     6325
      294     6326    4                   CSTK$->G$EXCFR = ALT$->G$EXCFR;
      295     6327
      296     6328    4                   ALT$->G$EXCFR.ALTEMPTY = -1;
      297     6329    4                   END;
      298     6330
      299     6331
      300     6332
      301     6333    3            CASE(%G_MCL_RENV#);
      302     6334    3              IF CSTK$->G$EXCFR.ECC ~= %G_ALT#
      303     6335    4              THEN DO;
      304     6336    4                   GUD_PARAMS.ERR = ENOTPMME;
      305     6337    4                   END;
      306     6338
      307     6339    4              ELSE DO;
      308     6340    4                   ALT$->G$EXCFR = CSTK$->G$EXCFR;
      309     6341    4                   ALT$->G$EXCFR.ALTEMPTY = 0;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:11   
      310     6342    4                   CALL CLEAR_ONE;
      311     6343    4                   END;
      312     6344
      313     6345
      314     6346        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:12   
      315     6347        /*************************************************************
      316     6348         *                                                           *
      317     6349         *                        M$TRTN                             *
      318     6350         *                                                           *
      319     6351         *************************************************************/
      320     6352
      321     6353        /*F* NAME: M$TRTN
      322     6354        */
      323     6355
      324     6356    3            CASE(%G_MCL_TRTN#);
      325     6357
      326     6358        /*D* The exceptional condition frame is moved from the TCB to
      327     6359             the TSA overlaying the MCL environment.
      328     6360        */
      329     6361    3              CALL TCB_TSA;
      330     6362
      331     6363        /*D* Any values for the registers or the program counter that
      332     6364             are specified via the M$TRTN FPT are then moved to the TSA
      333     6365             overlaying those from the exceptional condition frame.
      334     6366        */
      335     6367    3              IF GUD_PARAMS.PTRS.PAR1$ ~= ADDR(NIL)
      336     6368    4              THEN DO;
      337     6369    4                   R3 = G$TSA.ISA.REGS.R3;
      338     6370    4                   B3$ = G$TSA.ISA.REGS.B3$;
      339     6371    4                   G$TSA.ISA.REGS = GUD_PARAMS.PTRS.PAR1$->VLP$REGISTERS;
      340     6372    4                   G$TSA.B3$ = G$TSA.ISA.REGS.B3$;
      341     6373    4                   G$TSA.R3 = G$TSA.ISA.REGS.R3;
      342     6374    4                   G$TSA.ISA.REGS.B3$ = B3$;
      343     6375    4                   G$TSA.ISA.REGS.R3 = R3;
      344     6376    4                   END;
      345     6377
      346     6378    3              IF GUD_PARAMS.PTRS.PAR2$ ~= ADDR(NIL)
      347     6379    4              THEN DO;
      348     6380    4                   IF GUD_PARAMS.PTRS.PAR2$ -> P$$ ~= ENTADDR(NIL)
      349     6381    4                   THEN G$TSA.P$$ = GUD_PARAMS.PTRS.PAR2$->P$$;
      350     6382    4                   END;
      351     6383
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:13   
      352     6384        /*D* If this is an M$TRTN through an exit for LDTRC frame, control
      353     6385             is transferred to GJM$MCL to complete the M$LDTRC process.
      354     6386        */
      355     6387    4              ELSE DO;
      356     6388    4                   IF (STK$->G$EXCFR.ECC = %G_XCON#) AND
      357     6389    4                     (STK$->G$EXCFR.TRLR.RNST & %G_RS_LDTRC#)
      358     6390    5                   THEN DO;
      359     6391    5                        GUD_PARAMS.MCL.CODE = 0;
      360     6392    5                        CALL GJM$MCL(GUD_PARAMS);
      361     6393    5                        RETURN;
      362     6394    5                        END;
      363     6395    4                   END;
      364     6396        /*D* The top of frame stack is removed from the TCB.
      365     6397        */
      366     6398    3              CALL CLEAR_ONE;
      367     6399
      368     6400        /*D* The error code is set to E$ALTRET which is used to tell
      369     6401             the MCL handler that the existing TSA frame is not to be
      370     6402             modified in any way when returning to the user.
      371     6403             The TRAP# in the TSA is set to zero to indicate to the trap
      372     6404             handler's ALTRET routine that any associated debugger is not
      373     6405             to be entered.
      374     6406        */
      375     6407    3              GUD_PARAMS.ERR = EALTRET;
      376     6408    3              G$TSA.I.TRAP# = 0;
      377     6409
      378     6410        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:14   
      379     6411        /*************************************************************
      380     6412         *                                                           *
      381     6413         *                  M$RETRY - M$RETRYS                       *
      382     6414         *                                                           *
      383     6415         *************************************************************/
      384     6416
      385     6417        /*F* NAME: M$RETRY - M$RETRYS
      386     6418        */
      387     6419
      388     6420    3            CASE(%G_MCL_RETRY#,%G_MCL_RETRYS#);
      389     6421
      390     6422        /*   First, make sure we are positioned on a monitor service
      391     6423             error environment.
      392     6424        */
      393     6425    3              IF (STK$->G$EXCFR.ECC = %G_ALT#) OR
      394     6426    3                ( (STK$->G$EXCFR.ECC = %G_TRAP#)
      395     6427    3                AND (STK$->G$EXCFR.TRLR.TRAP.TRAP# = %G_MCL#) )
      396     6428    4              THEN DO;
      397     6429
      398     6430        /*D* If these is no FPT associated with the request, the values
      399     6431             for R3 and B3$ are moved from the TCB frame that contains
      400     6432             the original MCL (from the ALTRET frame if this is an M$RETRY,
      401     6433             from the top TCB stack frame if this is an M$RETRYS).
      402     6434        */
      403     6435    4                   IF GUD_PARAMS.PTRS.PAR1$ = ADDR(NIL)
      404     6436    5                   THEN DO;
      405     6437    5                        G$TSA.R3 = STK$->G$EXCFR.REGS.R3;
      406     6438    5                        G$TSA.B3$ = STK$->G$EXCFR.REGS.B3$;
      407     6439    5                        END;
      408     6440
      409     6441        /*D* If the user supplied an FPT, the MCL TSA frame is instead
      410     6442             modified with these FPT values.
      411     6443        */
      412     6444    5                   ELSE DO;
      413     6445    5                        G$TSA.R3 = GUD_PARAMS.PTRS.PAR1$->FPT$RETRY.R3;
      414     6446    5                        G$TSA.B3$ = GUD_PARAMS.PTRS.PAR1$->FPT$RETRY.B3$;
      415     6447    5                        END;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:15   
      416     6448
      417     6449        /*D* The Program Counter is set to the original MCL address -1
      418     6450             as the return through GUD$MCL_HAND will cause TSA.P$ to be
      419     6451             bumped by 1 for a normal return from MCL processing.
      420     6452        */
      421     6453    4                   G$TSA.P$ = PINCRW(STK$->G$EXCFR.P$,-1);
      422     6454
      423     6455        /*D* If this is M$RETRY, the ALTRET frame is marked empty.  If
      424     6456             this is M$RETRYS, the top of frame stack is removed from
      425     6457             the TCB.
      426     6458        */
      427     6459    4                   IF GUD_PARAMS.MCL.CODE = %G_MCL_RETRY#
      428     6460    4                   THEN ALT$->G$EXCFR.ALTEMPTY = -1;
      429     6461    4                   ELSE CALL CLEAR_ONE;
      430     6462
      431     6463    4                   END/*DO if poistioned at MCL */;
      432     6464
      433     6465        /*   If this is not a monitor service error environment, ALTRET
      434     6466             to the user's M$RETRY(S).
      435     6467        */
      436     6468    4              ELSE DO;
      437     6469    4                   GUD_PARAMS.ERR = ENOTPMME;
      438     6470    4                   END;
      439     6471
      440     6472        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:16   
      441     6473        /*************************************************************
      442     6474         *                                                           *
      443     6475         *                  M$MERC  - M$MERCS                        *
      444     6476         *                                                           *
      445     6477         *************************************************************/
      446     6478
      447     6479        /*F* NAME: M$MERC - M$MERCS
      448     6480        */
      449     6481
      450     6482    3            CASE(%G_MCL_MERC#,%G_MCL_MERCS#);
      451     6483
      452     6484        /*D* If the user supplied an error code via the FPT, it is moved
      453     6485             to the error code word in the exceptional condition frame.
      454     6486        */
      455     6487    3              IF GUD_PARAMS.PTRS.PAR1$ ~= ADDR(NIL)
      456     6488    4              THEN DO;
      457     6489    4                   STK$->G$EXCFR.TRLR.ERR = GUD_PARAMS.PTRS.PAR1$->G$ERR;
      458     6490    4                   END;
      459     6491
      460     6492        /*D* If the severity of the error is zero, and this is not an
      461     6493             exit control frame, the user is allowed to continue processing.
      462     6494        */
      463     6495    3              IF (STK$->G$EXCFR.TRLR.ERR.SEV = %G_SEV_CONT#)
      464     6496    3                AND ( (STK$->G$EXCFR.ECC ~= %G_XCON#)
      465     6497    3                AND (STK$->G$EXCFR.ECC ~= %G_TCBFULL#) )
      466     6498    4              THEN DO;
      467     6499
      468     6500        /*D* The exceptional condition frame is moved from the TCB
      469     6501             to the TSA overlaying the current M$MERC(S) environment.
      470     6502        */
      471     6503    4                   CALL TCB_TSA;
      472     6504
      473     6505        /*D* If MERCing from a monitor services error environment, the
      474     6506             value of the Program Counter must be modified to avoid
      475     6507             re-entering the user's ALTRET or M$TRAP routine.
      476     6508        */
      477     6509    4                   IF (STK$->G$EXCFR.ECC = %G_ALT#) OR
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:17   
      478     6510    4                     ( (STK$->G$EXCFR.ECC = %G_TRAP#)
      479     6511    4                     AND (STK$->G$EXCFR.TRLR.TRAP.TRAP# = %G_MCL#) )
      480     6512    4                   THEN G$TSA.P$ = PINCRW(G$TSA.P$,1);
      481     6513
      482     6514        /*D* If this is M$MERC, the ALTRET frame is marked empty.  If
      483     6515             this is M$MERCS, the top of frame stack is removed from
      484     6516             the TCB.
      485     6517        */
      486     6518    4                   IF GUD_PARAMS.MCL.CODE = %G_MCL_MERC#
      487     6519    4                   THEN ALT$->G$EXCFR.ALTEMPTY = -1;
      488     6520    4                   ELSE CALL CLEAR_ONE;
      489     6521
      490     6522        /*D* The error code is set to E$ALTRET which is used to tell
      491     6523             the MCL handler that the existing TSA frame is not to be
      492     6524             modified in any way when returning to the user.
      493     6525             The TRAP# in the TSA is set to zero to indicate to the trap
      494     6526             handler's ALTRET routine that any associated debugger is not
      495     6527             to be entered.
      496     6528        */
      497     6529    4                   GUD_PARAMS.ERR = EALTRET;
      498     6530    4                   G$TSA.I.TRAP# = 0;
      499     6531
      500     6532    4                   END/* DO if severity zero and not xcon*/;
      501     6533
      502     6534        /*D* When the severity of the error is not zero, the input
      503     6535             parameters from GUD$MCL_HAND are modified to simulate an
      504     6536             M$ERR or M$XXX as indicated by the severity of the error.
      505     6537        */
      506     6538    4              ELSE DO;
      507     6539    4                   GUD_PARAMS.PTRS.PAR1$ = ADDR(STK$->G$EXCFR.TRLR.ERR);
      508     6540    4                   GUD_PARAMS.PTRS.PAR2$ = ADDR(NIL);
      509     6541
      510     6542    4                   IF STK$->G$EXCFR.TRLR.ERR.SEV > %G_SEV_ERR#
      511     6543    4                   THEN GUD_PARAMS.MCL.CODE = %G_MCL_XXX#;
      512     6544    4                   ELSE GUD_PARAMS.MCL.CODE = %G_MCL_ERR#;
      513     6545
      514     6546        /*D* Anytime a user is MERCing through an exit control frame
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:18   
      515     6547             an M$EXIT is simulated.
      516     6548        */
      517     6549    4                   IF (STK$->G$EXCFR.ECC = %G_XCON#)
      518     6550    4                     OR (STK$->G$EXCFR.ECC = %G_TCBFULL#)
      519     6551    4                   THEN GUD_PARAMS.MCL.CODE = %G_MCL_EXIT#;
      520     6552
      521     6553        /*D* Control passes to the GJM$MCL module to process this
      522     6554             simulated service request.
      523     6555        */
      524     6556    4                   CALL GJM$MCL(GUD_PARAMS);
      525     6557    4                   END/* DO if the severity is non-zero*/;
      526     6558
      527     6559        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:19   
      528     6560
      529     6561    3            CASE(ELSE);
      530     6562    3              CALL SCREECH(EMCL_TABLE);
      531     6563    3              END /*DO CASE(GUD_PARAMS.CODE)*/;
      532     6564    2           END /* Do if > TRAP */;
      533     6565    1      RETURN;
      534     6566
      535     6567        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:20   
      536     6568        /*I* NAME: CLEAR_ONE
      537     6569
      538     6570             PURPOSE:  To remove one frame from the top of the
      539     6571                       TCB exceptional condition stack.
      540     6572
      541     6573             CALL:   CALL CLEAR_ONE;
      542     6574
      543     6575        */
      544     6576
      545     6577    1   CLEAR_ONE: PROC;
      546     6578    2      IF G$TCB.CURRSZ= 0 THEN RETURN;
      547     6579
      548     6580    2      IF CSTK$->G$EXCFR.ECC = %G_XCON#
      549     6581    3      THEN DO;
      550     6582    3           G$ECCB.FLAGS.XCONP = CSTK$->G$EXCFR.TRLR.XCON.FLAGS.XCONP;
      551     6583    3           END;
      552     6584
      553     6585    2      G$TCB.AVSZ = G$TCB.AVSZ + G$TCB.CURRSZ;
      554     6586    2      G$TCB.CURRSZ = CSTK$->G$EXCFR.PREVSZ;
      555     6587
      556     6588    2      IF G$TCB.CURRSZ = 0 THEN RETURN;
      557     6589
      558     6590    2      G$TCB.STK$ = PINCRW(G$TCB.STK$,-G$TCB.CURRSZ);
      559     6591    2      CSTK$ = G$TCB.STK$;
      560     6592
      561     6593    2      RETURN;
      562     6594    2   END CLEAR_ONE;
      563     6595        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:21   
      564     6596        /*I* NAME: TCB_TSA
      565     6597
      566     6598             PURPOSE:  To move a frame from the top of the TCB
      567     6599                       exceptional condition stack to the currently
      568     6600                       active Trap Save Area.
      569     6601
      570     6602             CALL:  CALL TCB_TSA;
      571     6603
      572     6604             DATA:  STK$ must contain the pointer to the TCB frame
      573     6605                    that is to be moved to the TSA.  This may be
      574     6606                    the ALTRET frame or a stack frame.
      575     6607
      576     6608        */
      577     6609
      578     6610    1   TCB_TSA: PROC;
      579     6611        /*   Save B3 and R3 out of the TSA.ISA for the trap handler.
      580     6612        */
      581     6613    2      R3 = G$TSA.ISA.REGS.R3;
      582     6614    2      B3$ = G$TSA.ISA.REGS.B3$;
      583     6615
      584     6616        /*   Make sure that the current T$ doesn't get replaced, in case
      585     6617             the user enlarged auto while in the ASYNC routine.
      586     6618        */
      587     6619    2      STK$->G$EXCFR.REGS.T$ = G$TSA.ISA.REGS.T$;
      588     6620
      589     6621        /*   The exceptional condition frame is moved from the TCB to
      590     6622             the TSA overlaying the MCL environment.
      591     6623        */
      592     6624    2      G$TSA.P$ = STK$->G$EXCFR.P$;
      593     6625    2      G$TSA.S.RING = STK$->G$EXCFR.S.RING;
      594     6626    2      G$TSA.ISA.REGS = STK$->G$EXCFR.REGS;
      595     6627
      596     6628    2      G$TSA.B3$ = G$TSA.ISA.REGS.B3$;
      597     6629    2      G$TSA.R3 = G$TSA.ISA.REGS.R3;
      598     6630
      599     6631    2      G$TSA.I = STK$->G$EXCFR.REGS.I;
      600     6632
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:22   
      601     6633    2      G$TSA.ISA.ISM1 = STK$->G$EXCFR.ISM1;
      602     6634    2      G$TSA.ISA.ISM2 = STK$->G$EXCFR.ISM2;
      603     6635
      604     6636        /*   B3 and R3 in what was the MCL TSA are now restored for
      605     6637             trap handler.
      606     6638        */
      607     6639    2      G$TSA.ISA.REGS.B3$ = B3$;
      608     6640    2      G$TSA.ISA.REGS.R3 = R3;
      609     6641
      610     6642    2   END TCB_TSA;
      611     6643    1   END GUE$MCL;

PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:23   
--  Include file information  --

   UD_SCODE_C.:E05TOU  is referenced.
   UE_ERRORS_C.:E05TOU  is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   J_SCODE_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GUE$MCL.

   Procedure GUE$MCL requires 863 words for executable code.
   Procedure GUE$MCL requires 30 words of local(AUTO) storage.

    No errors detected in file GUE$MCL.:E05TSI    .

PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:24   

 Object Unit name= GUE$MCL                                    File name= GUE$MCL.:E05TOU
 UTS= JUL 29 '97 22:14:52.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     20     14  GUE$MCL
    1   Proc  even  none   863    35F  GUE$MCL
    2  RoData even  none     6      6  GUE$MCL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GUE$MCL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 SCREECH
         yes           Std       1 GJM$MCL
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$UHJIT$                         r    G$JIT$                           r    G$ROS$
r    G$ROS$
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:25   


        1        1        /*M* GUE$MCL  Handler for LCP-6 Exceptional Condition Monitor Services  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0     */
        8        8
        9        9        GUE$MCL: PROC(GUD_PARAMS);

      9   1 000000  D380 0000 0000  xent GUE$MCL         LNJ,B5   X6A_AUTO_1
          1 000003       001E 0001                       DC       30,1

       10       10
       11       11        %INCLUDE G_HJIT_M;
       12      156        %INCLUDE G_JIT_M;
       13      421        %INCLUDE G_ROS_M;
       14      503        %INCLUDE GU_MACROS_M;
       15      662 S      %INCLUDE GH_LCP6_M;
       16      663 S      %INCLUDE GJ_LCP6_M;
       17      664 S      %INCLUDE GU_LCP6_M;
       18      665 S      %INCLUDE G_LCP6_E;
       19      666        %INCLUDE J_SCODE_C;
       20      694
       21      695                                                /* Input parameters                   */
       22      696        %GUD_HAND_PARAMS (FPTN=GUD_PARAMS);
       23      772
       24      773                                                /* AUTO Storage                       */
       25      774    1   DCL I UBIN;
       26      775    1   DCL MCL_CODE UBIN;
       27      776    1   DCL NEW$ PTR;
       28      777    1   DCL PREVIOUS$ PTR;
       29      778    1   DCL ALT$ PTR;
       30      779    1   DCL CSTK$ PTR;
       31      780    1   DCL STK$ PTR;
       32      781    1   DCL TCB$ PTR;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:26   
       33      782    1   DCL ECCB$ PTR;
       34      783    1   DCL R3 UBIN;
       35      784    1   DCL B3$ PTR;
       36      785    1   DCL J BIT(1) ALIGNED;
       37      786
       38      787                                                /*  Based Structures                  */
       39      788    1   DCL G$PRIVS BIT(32) BASED WALIGNED;
       40      789    1   DCL B$WORD UBIN BASED;
       41      790    1   DCL P$$ EPTR BASED;
       42      791
       43      792        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
       44     3766        %G$JIT (FPTN=G$JIT, STCLASS="BASED(G$JIT$)");
       45     4180        %G$ROS (FPTN=G$ROS,STCLASS="BASED(G$ROS$)");
       46     4224        %G$ECCB (FPTN=G$ECCB,ARRAYED=YES,STCLASS="BASED(ECCB$)");
       47     4300        %G$TCB (FPTN=G$TCB,STCLASS="BASED(TCB$)");
       48     4321        %G$TSA (FPTN=G$TSA,STCLASS="BASED(GUD_PARAMS.TSA$)");
       49     4709        %G$EXCFR;
       50     5091
       51     5092        %VLP_TRAP_CONDITIONS (FPTN=VLP$TC,STCLASS=BASED);
       52     5248        %VLP_ERRCODE (FPTN=G$ERR,STCLASS=BASED);
       53     5294        %VLP_REGISTERS (FPTN=VLP$REGISTERS,STCLASS=BASED);
       54     5466        %FPT_RETRY (FPTN=FPT$RETRY,STCLASS=BASED,VECTORS=NO);
       55     5489
       56     5490
       57     5491                                                /* EQUS                               */
       58     5492        %GU_MCL_E;
       59     5518        %GJ_MCL_E;
       60     5527        %G$JIT_E;
       61     5589        %INCLUDE UD_ERRORS_C;
       62     5631        %INCLUDE UE_ERRORS_C;
       63     5649        %INCLUDE UD_SCODE_C;
       64     5661
       65     5662                                                /* Internal Data                      */
       66     5663        %VLP_SCODE (FPTN=EMCL_TABLE,ERR#=%S$MCL_TABLE,SEV=6,
       67     5664                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       68     5725        %VLP_SCODE (FPTN=SDOMAIN,ERR#=%S$SSFRAME,SEV=G_SEV_SUA#,
       69     5726                    STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:27   
       70     5787
       71     5788
       72     5789        %VLP_ERRCODE (FPTN=EBADVECT0,ERR#=%E$BADVECT0,SEV=G_SEV_ERROR#,
       73     5790                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       74     5836        %VLP_ERRCODE (FPTN=EALTEMPTY,ERR#=%E$ALTEMPTY,SEV=G_SEV_ERROR#,
       75     5837                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       76     5883        %VLP_ERRCODE (FPTN=ETCBEMPTY,ERR#=%E$TCBEMPTY,SEV=G_SEV_ERROR#,
       77     5884                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       78     5930        %VLP_ERRCODE (FPTN=ENOTPMME,ERR#=%E$NOTPMME,SEV=G_SEV_ERROR#,
       79     5931                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       80     5977        %VLP_ERRCODE (FPTN=ETCBFULL,ERR#=%E$TCBFULL,SEV=G_SEV_ERROR#,
       81     5978                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       82     6024        %VLP_ERRCODE (FPTN=EALTRET,ERR#=%E$ALTRET,SEV=G_SEV_ERROR#,
       83     6025                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       84     6071        %VLP_ERRCODE (FPTN=ENOPRIV,ERR#=%E$NOPRIV,SEV=G_SEV_CONT#,
       85     6072                         STCLASS=CONSTANT,FCG=GU,MID=E,MON='1'B);
       86     6118
       87     6119
       88     6120                                                /*  External data                     */
       89     6121
       90     6122    1   DCL G$UHJIT$ PTR SYMREF READONLY;
       91     6123    1   DCL G$JIT$ PTR SYMREF READONLY;
       92     6124    1   DCL G$ROS$ PTR SYMREF READONLY;
       93     6125
       94     6126                                                /* External Procedures                */
       95     6127    1   DCL GJM$MCL ENTRY(1);
       96     6128    1   DCL SCREECH ENTRY(1);
       97     6129        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:28   
       98     6130        /*F* NAME: GUE$MCL
       99     6131
      100     6132             PURPOSE:  GUE$MCL is the MCL handler for monitor
      101     6133                       services belonging to the GU Functional
      102     6134                       Code Group that deal with exceptional
      103     6135                       condition processing.
      104     6136
      105     6137                       Exceptional condition services fall into two
      106     6138                       catagories;  those used to set and reset
      107     6139                       control of exceptional conditions and those
      108     6140                       used to manipulate the TCB.
      109     6141        */
      110     6142
      111     6143        /* Set up some commonly required pointers
      112     6144        */
      113     6145    1      TCB$ = ADDR(G$ROS.TCB);

   6145   1 000005  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          1 000008  DBC6 0004                            LAB,B5   4,B6
          1 00000A  DFC7 0012                            STB,B5   TCB$,AUTO

      114     6146    1      ALT$ = G$TCB.ALT$;

   6146   1 00000C  CC85                                 LDB,B4   ,B5
          1 00000D  CFC7 000C                            STB,B4   ALT$,AUTO

      115     6147    1      CSTK$ = G$TCB.STK$;

   6147   1 00000F  BCC5 0002                            LDB,B3   2,B5
          1 000011  BFC7 000E                            STB,B3   CSTK$,AUTO

      116     6148
      117     6149    1      IF G$UHJIT.DMN.ID = %G_DMN_USR_SVC#

   6149   1 000013  AC80 0000 0000  xsym                 LDB,B2   G$UHJIT$
          1 000016  E842 007E                            LDR,R6   126,B2
          1 000018  6D03                                 CMV,R6   3
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:29   
          1 000019  0981 0007                            BNE      s:6151,PREL

      118     6150    1      THEN ECCB$ = G$ROS.U_ECCB$;

   6150   1 00001B  9CC6 000C                            LDB,B1   12,B6
          1 00001D  9FC7 0014                            STB,B1   ECCB$,AUTO
          1 00001F  0F81 0013                            B        s:6159,PREL

      119     6151    1      ELSE IF G$UHJIT.DMN.ID = %G_DMN_DB_SVC#

   6151   1 000021  6D01                                 CMV,R6   1
          1 000022  0981 0007                            BNE      s:6153,PREL

      120     6152    1           THEN ECCB$ = G$ROS.DB_ECCB$;

   6152   1 000024  9CC6 000E                            LDB,B1   14,B6
          1 000026  9FC7 0014                            STB,B1   ECCB$,AUTO
          1 000028  0F81 000A                            B        s:6159,PREL

      121     6153    1           ELSE CALL SCREECH(SDOMAIN);

   6153   1 00002A  BB80 0000 0000  02                   LAB,B3   0
          1 00002D  CBF0 0100                            LAB,B4   256,IMO
          1 00002F  E380 0000 0000  xent                 LNJ,B6   SCREECH
          1 000032       0001                            DC       s:6159,PREL

      122     6154
      123     6155
      124     6156        /* Islolate the MCL specific code from the FCG so it may be
      125     6157           used as an index.
      126     6158        */
      127     6159    1      MCL_CODE = GUD_PARAMS.MCL.C.MCL;

   6159   1 000033  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 000035  E806                                 LDR,R6   ,B6
          1 000036  E570 003F                            AND,R6   63,IMO
          1 000038  EF47 0007                            STR,R6   MCL_CODE,AUTO
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:30   

      128     6160
      129     6161
      130     6162        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:31   
      131     6163        /*************************************************************
      132     6164         *                                                           *
      133     6165         *               M$EVENT   M$INT   M$XCON  M$TRAP            *
      134     6166         *                                                           *
      135     6167         *************************************************************/
      136     6168
      137     6169        /*F* NAME: M$EVENT M$INT M$XCON M$TRAP
      138     6170        */
      139     6171
      140     6172
      141     6173        /*D*  Any of these service requests may specify that the currently
      142     6174              effective exceptional condition handler be returned to the
      143     6175              user specified results area.  The new handler address, if
      144     6176              specified, is then used to replace the currently effective
      145     6177              address in the ECCB.   Of course, if neither parameter is
      146     6178              specified, it is an error and we ALTRET to the user.
      147     6179        */
      148     6180
      149     6181    1      IF GUD_PARAMS.MCL.CODE <= %G_MCL_DBCONTROL#

   6181   1 00003A  D806                                 LDR,R5   ,B6
          1 00003B  D570 03FF                            AND,R5   1023,IMO
          1 00003D  D970 00C4                            CMR,R5   196,IMO
          1 00003F  0A01 008D                            BAG      s:6250,PREL

      150     6182    2      THEN DO;

      151     6183    2           NEW$ = GUD_PARAMS.PTRS.PAR1$;

   6183   1 000041  DCC6 0006                            LDB,B5   6,B6
          1 000043  DFC7 0008                            STB,B5   NEW$,AUTO

      152     6184    2           PREVIOUS$ = GUD_PARAMS.PTRS.PAR2$;

   6184   1 000045  CCC6 0008                            LDB,B4   8,B6
          1 000047  CFC7 000A                            STB,B4   PREVIOUS$,AUTO

PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:32   
      153     6185
      154     6186    2           IF (NEW$ = ADDR(NIL) ) AND (PREVIOUS$ = ADDR(NIL) )

   6186   1 000049  8DC7 0008                            CMN      NEW$,AUTO
          1 00004B  0981 000D                            BNE      s:6195,PREL
          1 00004D  8DC7 000A                            CMN      PREVIOUS$,AUTO
          1 00004F  0981 0009                            BNE      s:6195,PREL

      155     6187    3           THEN DO;

      156     6188    3                GUD_PARAMS.ERR = EBADVECT0;

   6188   1 000051  8C80 0000 0006  00                   LDI      EBADVECT0
          1 000054  8D46 0003                            SDI      3,B6

      157     6189    3                RETURN;

   6189   1 000056  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      158     6190    3                END;
      159     6191        /*E*   ERROR: GUE-E$BADVECT0-E
      160     6192               MESSAGE:  Either the new or previous condition setting must be specified.
      161     6193        */
      162     6194
      163     6195    2           IF PREVIOUS$ ~= ADDR(NIL)

   6195   1 000059  8DC7 000A                            CMN      PREVIOUS$,AUTO
          1 00005B  0901 0006                            BE       s:6198,PREL

      164     6196    2           THEN PREVIOUS$->VLP$TC.TRAP$ = G$ECCB.HAND$(MCL_CODE);

   6196   1 00005D  BCC7 0014                            LDB,B3   ECCB$,AUTO
          1 00005F  B856                                 LDR,R3   R6
          1 000060  ACB3                                 LDB,B2   ,B3,R3
          1 000061  AF84                                 STB,B2   ,B4

      165     6197
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:33   
      166     6198    2           IF NEW$ ~= ADDR(NIL)

   6198   1 000062  8DC7 0008                            CMN      NEW$,AUTO
          1 000064  0901 0006                            BE       s:6204,PREL

      167     6199    2           THEN G$ECCB.HAND$(MCL_CODE) = NEW$->VLP$TC.TRAP$;

   6199   1 000066  BC85                                 LDB,B3   ,B5
          1 000067  ACC7 0014                            LDB,B2   ECCB$,AUTO
          1 000069  B856                                 LDR,R3   R6
          1 00006A  BFB2                                 STB,B3   ,B2,R3

      168     6200
      169     6201        /*D* The M$TRAP service request allows for the resetting of the
      170     6202             FLTFLG area of the ECCB and the M1 and M3 registers as well.
      171     6203        */
      172     6204    2           IF GUD_PARAMS.MCL.CODE = %G_MCL_TRAP#

   6204   1 00006B  D806                                 LDR,R5   ,B6
          1 00006C  D570 03FF                            AND,R5   1023,IMO
          1 00006E  D970 00C3                            CMR,R5   195,IMO
          1 000070  0981 004A                            BNE      s:6229,PREL

      173     6205    3           THEN DO;

      174     6206    3                IF PREVIOUS$ ~= ADDR(NIL)

   6206   1 000072  8DC7 000A                            CMN      PREVIOUS$,AUTO
          1 000074  0901 0016                            BE       s:6213,PREL

      175     6207    4                THEN DO;

      176     6208    4                     PREVIOUS$->VLP$TC.FLTFLG = G$ECCB.FLTFLG;

   6208   1 000076  ACC7 0014                            LDB,B2   ECCB$,AUTO
          1 000078  2C16                                 LDV,R2   22
          1 000079  6C06                                 LDV,R6   6
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:34   
          1 00007A  BB84                                 LAB,B3   ,B4
          1 00007B  3C04                                 LDV,R3   4
          1 00007C  0008                                 MMM

      177     6209    4                     PREVIOUS$->VLP$TC.M1 = G$TSA.ISA.REGS.M1;

   6209   1 00007D  DCC6 0001                            LDB,B5   1,B6
          1 00007F  ACC7 000A                            LDB,B2   PREVIOUS$,AUTO
          1 000081  E845 002E                            LDR,R6   46,B5
          1 000083  EF42 0005                            STR,R6   5,B2

      178     6210    4                     PREVIOUS$->VLP$TC.M3 = G$TSA.ISA.REGS.M3;

   6210   1 000085  DCC6 0001                            LDB,B5   1,B6
          1 000087  D845 0030                            LDR,R5   48,B5
          1 000089  DF42 0007                            STR,R5   7,B2

      179     6211    4                     END;

      180     6212
      181     6213    3                IF NEW$ ~= ADDR(NIL)

   6213   1 00008B  8DC7 0008                            CMN      NEW$,AUTO
          1 00008D  0901 002D                            BE       s:6229,PREL

      182     6214    4                THEN DO;

      183     6215    4                     G$ECCB.FLTFLG = NEW$->VLP$TC.FLTFLG;

   6215   1 00008F  ACC7 0008                            LDB,B2   NEW$,AUTO
          1 000091  2C04                                 LDV,R2   4
          1 000092  6C06                                 LDV,R6   6
          1 000093  BCC7 0014                            LDB,B3   ECCB$,AUTO
          1 000095  3C16                                 LDV,R3   22
          1 000096  0008                                 MMM

      184     6216
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:35   
      185     6217    4                     J = G$TSA.ISA.REGS.M1.J;

   6217   1 000097  DCC6 0001                            LDB,B5   1,B6
          1 000099  E845 002E                            LDR,R6   46,B5
          1 00009B  6008                                 SOL,R6   8
          1 00009C  E570 8000                            AND,R6   -32768,IMO
          1 00009E  EF47 0019                            STR,R6   J,AUTO

      186     6218    4                     G$TSA.ISA.REGS.M1 = NEW$->VLP$TC.M1;

   6218   1 0000A0  CCC7 0008                            LDB,B4   NEW$,AUTO
          1 0000A2  D844 0005                            LDR,R5   5,B4
          1 0000A4  DF45 002E                            STR,R5   46,B5

      187     6219    4                     IF G$JIT.DB# ~= 0

   6219   1 0000A6  DC80 0000 0000  xsym                 LDB,B5   G$JIT$
          1 0000A9  E2C5 008D                            LLH,R6   141,B5
          1 0000AB  6901 0009                            BEZ,R6   s:6222,PREL

      188     6220    4                     THEN G$TSA.ISA.REGS.M1.J = J;

   6220   1 0000AD  BCC6 0001                            LDB,B3   1,B6
          1 0000AF  D847 0019                            LDR,R5   J,AUTO
          1 0000B1  5048                                 SOR,R5   8
          1 0000B2  DAC3 002E                            SRM,R5,'0080'X    46,B3
          1 0000B4       0080

      189     6221
      190     6222    4                     G$TSA.ISA.REGS.M3 = NEW$->VLP$TC.M3;

   6222   1 0000B5  BCC6 0001                            LDB,B3   1,B6
          1 0000B7  E844 0007                            LDR,R6   7,B4
          1 0000B9  EF43 0030                            STR,R6   48,B3

      191     6223    4                     END;

PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:36   
      192     6224    3                END;

      193     6225
      194     6226        /*D* If this is an M$XCON request, and the entry address is being
      195     6227             reset, the XCON in progress bit is reset in the ECCB.
      196     6228        */
      197     6229    2           IF (GUD_PARAMS.MCL.CODE = %G_MCL_XCON#) AND (NEW$ ~= ADDR(NIL))

   6229   1 0000BB  E806                                 LDR,R6   ,B6
          1 0000BC  E570 03FF                            AND,R6   1023,IMO
          1 0000BE  E970 00C2                            CMR,R6   194,IMO
          1 0000C0  0981 0200                            BNE      s:6565,PREL
          1 0000C2  8DC7 0008                            CMN      NEW$,AUTO
          1 0000C4  0901 01FC                            BE       s:6565,PREL

      198     6230    2           THEN G$ECCB.FLAGS.XCONP = '0'B;

   6230   1 0000C6  DCC7 0014                            LDB,B5   ECCB$,AUTO
          1 0000C8  8845 000A                            LBF,'8000'X       10,B5
          1 0000CA       8000

      199     6231
      200     6232    2           END /* Do if <= TRAP */;

   6232   1 0000CB  0F81 01F5                            B        s:6565,PREL

      201     6233
      202     6234
      203     6235        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:37   
      204     6236        /*************************************************************
      205     6237         *                                                           *
      206     6238         *              TCB Manipulation Requests                    *
      207     6239         *                                                           *
      208     6240         *************************************************************/
      209     6241
      210     6242        /*F* NAME: TCB Manipulation Requests
      211     6243        */
      212     6244
      213     6245
      214     6246        /*D* If the service request is M$CLRSTK, M$TRTN, M$MERCS, M$RETRYS
      215     6247             or M$RENV and the TCB Stack is empty, it is an error.
      216     6248        */
      217     6249    2      ELSE DO;

      218     6250    2           IF GUD_PARAMS.MCL.CODE > %G_MCL_RETRY#

   6250   1 0000CD  D970 00CA                            CMR,R5   202,IMO
          1 0000CF  0A81 001C                            BALE     s:6269,PREL

      219     6251    2           THEN IF G$TCB.CURRSZ=0

   6251   1 0000D1  DCC7 0012                            LDB,B5   TCB$,AUTO
          1 0000D3  C845 0005                            LDR,R4   5,B5
          1 0000D5  4981 0010                            BNEZ,R4  s:6257,PREL

      220     6252    3                THEN DO;

      221     6253    3                     GUD_PARAMS.ERR=ETCBEMPTY;

   6253   1 0000D7  8C80 0000 000A  00                   LDI      ETCBEMPTY
          1 0000DA  8D46 0003                            SDI      3,B6

      222     6254    3                    IF GUD_PARAMS.MCL.CODE = %G_MCL_CLRSTK# THEN GUD_PARAMS.ERR.SEV=0;

   6254   1 0000DC  D970 00CD                            CMR,R5   205,IMO
          1 0000DE  0981 0004                            BNE      s:6255,PREL
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:38   

   6254   1 0000E0  8846 0004                            LBF,'0007'X       4,B6
   6254   1 0000E2       0007

      223     6255    3                     RETURN;

   6255   1 0000E3  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      224     6256    3                     END;
      225     6257    2                ELSE STK$=CSTK$;

   6257   1 0000E6  CCC7 000E                            LDB,B4   CSTK$,AUTO
          1 0000E8  CFC7 0010                            STB,B4   STK$,AUTO
          1 0000EA  0F81 0010                            B        s:6285,PREL

      226     6258        /*E*     ERROR:  GUE-E$TCBEMPTY-E
      227     6259                 MESSAGE: That Service Request not allowed when the TCB stack is empty.
      228     6260                 MESSAGE1: One of the following Service Requests has
      229     6261                           caused you to be aborted because your TCB
      230     6262                           Stack is empty:
      231     6263                               M$TRTN   M$CLRSTK   M$MERCS   M$RETRYS   M$RENV
      232     6264        */
      233     6265
      234     6266        /*D* If the service request is M$MERC, M$RETRY or M$SENV and
      235     6267             the TCB Altret frame is empty, it is an error.
      236     6268        */
      237     6269    2           ELSE IF ALT$->G$EXCFR.PREVSZ ~=0

   6269   1 0000EC  DCC7 000C                            LDB,B5   ALT$,AUTO
          1 0000EE  C805                                 LDR,R4   ,B5
          1 0000EF  4901 0009                            BEZ,R4   s:6274,PREL

      238     6270    3                THEN DO;

      239     6271    3                     GUD_PARAMS.ERR=EALTEMPTY;

   6271   1 0000F1  8C80 0000 0008  00                   LDI      EALTEMPTY
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:39   
          1 0000F4  8D46 0003                            SDI      3,B6

      240     6272    3                     RETURN;

   6272   1 0000F6  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      241     6273    3                     END;
      242     6274    2                ELSE STK$=ALT$;

   6274   1 0000F9  DFC7 0010                            STB,B5   STK$,AUTO

      243     6275        /*E*     ERROR:  GUE-E$ALTEMPTY-E
      244     6276        MESSAGE: That Service Request is not allowed when the ALTRET frame in the TCB is em
              6276        pty.
      245     6277                 MESSAGE1: One of the following service requests has caused
      246     6278                           you to be aborted because the ALTRET frame in
      247     6279                           your TCB is empty:
      248     6280                               M$MERC   M$RETRY   M$SENV
      249     6281        */
      250     6282
      251     6283        /*   Now proceed with the individual service request.
      252     6284        */
      253     6285    3           DO CASE(GUD_PARAMS.MCL.CODE);

   6285   1 0000FB  B855                                 LDR,R3   R5
          1 0000FC  BA70 FF38                            ADD,R3   -200,IMO
          1 0000FE  3D08                                 CMV,R3   8
          1 0000FF  0281 01B8                            BGE      s:6562,PREL
          1 000101  A830 0000 0107  01                   LDR,R2   s:6285+12,R3
          1 000104  83A0 0000 010F  01                   JMP      s:6294,R2
          1 000107       001A                            DC       s:6311,PREL
          1 000108       0124                            DC       s:6487,PREL
          1 000109       00D3                            DC       s:6425,PREL
          1 00010A       0047                            DC       s:6334,PREL
          1 00010B       0064                            DC       s:6361,PREL
          1 00010C       0000                            DC       s:6294,PREL
          1 00010D       0124                            DC       s:6487,PREL
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:40   
          1 00010E       00D3                            DC       s:6425,PREL

      254     6286
      255     6287        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:41   
      256     6288        /*************************************************************
      257     6289         *                                                           *
      258     6290         *                        M$CLRSTK                           *
      259     6291         *                                                           *
      260     6292         *************************************************************/
      261     6293    3            CASE(%G_MCL_CLRSTK#);

      262     6294    3              IF GUD_PARAMS.PTRS.PAR1$ = ADDR(NIL)

   6294   1 00010F  8DC6 0006                            CMN      6,B6
          1 000111  0981 0006                            BNE      s:6296,PREL

      263     6295    3              THEN I = 1;

   6295   1 000113  4C01                                 LDV,R4   1
          1 000114  CF47 0006                            STR,R4   I,AUTO
          1 000116  0F81 0006                            B        s:6298,PREL

      264     6296    3              ELSE I = GUD_PARAMS.PTRS.PAR1$->B$WORD;

   6296   1 000118  DCC6 0006                            LDB,B5   6,B6
          1 00011A  C805                                 LDR,R4   ,B5
          1 00011B  CF47 0006                            STR,R4   I,AUTO

      265     6297
      266     6298    4              DO WHILE (I > 0);

   6298   1 00011D  4901 01A3                            BEZ,R4   s:6565,PREL

      267     6299    4                   CALL CLEAR_ONE;

   6299   1 00011F  E3C0 01A4                            LNJ,B6   s:0,PREL
          1 000121       0001                            DC       s:6300,PREL

      268     6300    4                   I = I -1;

   6300   1 000122  88C7 0006                            DEC      I,AUTO
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:42   

      269     6301    4                   END /*Do while I >0 */;

   6301   1 000124  E847 0006                            LDR,R6   I,AUTO
          1 000126  69F9                                 BNEZ,R6  s:6299,SPREL
          1 000127  0F81 0199                            B        s:6565,PREL

      270     6302
      271     6303
      272     6304        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:43   
      273     6305        /*************************************************************
      274     6306         *                                                           *
      275     6307         *                     M$SENV - M$RENV                       *
      276     6308         *                                                           *
      277     6309         *************************************************************/
      278     6310    3            CASE(%G_MCL_SENV#);

      279     6311    3              IF G$TCB.AVSZ < SIZEW(G$EXCFR)

   6311   1 000129  DCC7 0012                            LDB,B5   TCB$,AUTO
          1 00012B  C845 0004                            LDR,R4   4,B5
          1 00012D  4D2E                                 CMV,R4   46
          1 00012E  0881 0008                            BAGE     s:6320,PREL

      280     6312    4              THEN DO;

      281     6313    4                   GUD_PARAMS.ERR = ETCBFULL;

   6313   1 000130  8C80 0000 000E  00                   LDI      ETCBFULL
          1 000133  8D46 0003                            SDI      3,B6

      282     6314    4                   END;

   6314   1 000135  0F81 018B                            B        s:6565,PREL

      283     6315        /*E* ERROR: GUE-E$TCBFULL-E
      284     6316             MESSAGE: Can't M$SENV - Your TCB is full.
      285     6317        */
      286     6318
      287     6319    4              ELSE DO;

      288     6320    4                   CSTK$ = PINCRW(CSTK$,G$TCB.CURRSZ);

   6320   1 000137  9845 0005                            LDR,R1   5,B5
          1 000139  CCC7 000E                            LDB,B4   CSTK$,AUTO
          1 00013B  BB94                                 LAB,B3   ,B4,R1
          1 00013C  BFC7 000E                            STB,B3   CSTK$,AUTO
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:44   

      289     6321    4                   ALT$->G$EXCFR.PREVSZ = G$TCB.CURRSZ;

   6321   1 00013E  CCC7 000C                            LDB,B4   ALT$,AUTO
          1 000140  9F04                                 STR,R1   ,B4

      290     6322    4                   G$TCB.STK$ = CSTK$;

   6322   1 000141  BFC5 0002                            STB,B3   2,B5

      291     6323    4                   G$TCB.CURRSZ = SIZEW(G$EXCFR);

   6323   1 000143  4C2E                                 LDV,R4   46
          1 000144  CF45 0005                            STR,R4   5,B5

      292     6324    4                   G$TCB.AVSZ = G$TCB.AVSZ - G$TCB.CURRSZ;

   6324   1 000146  C245 0004                            SUB,R4   4,B5
          1 000148  8254                                 NEG      R4
          1 000149  CF45 0004                            STR,R4   4,B5

      293     6325
      294     6326    4                   CSTK$->G$EXCFR = ALT$->G$EXCFR;

   6326   1 00014B  AB84                                 LAB,B2   ,B4
          1 00014C  2C00                                 LDV,R2   0
          1 00014D  6C5C                                 LDV,R6   92
          1 00014E  3C00                                 LDV,R3   0
          1 00014F  0008                                 MMM

      295     6327
      296     6328    4                   ALT$->G$EXCFR.ALTEMPTY = -1;

   6328   1 000150  DCC7 000C                            LDB,B5   ALT$,AUTO
          1 000152  8905                                 LBT,'FFFF'X       ,B5
          1 000153       FFFF

PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:45   
      297     6329    4                   END;

   6329   1 000154  0F81 016C                            B        s:6565,PREL

      298     6330
      299     6331
      300     6332
      301     6333    3            CASE(%G_MCL_RENV#);

      302     6334    3              IF CSTK$->G$EXCFR.ECC ~= %G_ALT#

   6334   1 000156  DCC7 000E                            LDB,B5   CSTK$,AUTO
          1 000158  C845 0001                            LDR,R4   1,B5
          1 00015A  4D63                                 CMV,R4   99
          1 00015B  0901 0008                            BE       s:6340,PREL

      303     6335    4              THEN DO;

      304     6336    4                   GUD_PARAMS.ERR = ENOTPMME;

   6336   1 00015D  8C80 0000 000C  00                   LDI      ENOTPMME
          1 000160  8D46 0003                            SDI      3,B6

      305     6337    4                   END;

   6337   1 000162  0F81 015E                            B        s:6565,PREL

      306     6338
      307     6339    4              ELSE DO;

      308     6340    4                   ALT$->G$EXCFR = CSTK$->G$EXCFR;

   6340   1 000164  AB85                                 LAB,B2   ,B5
          1 000165  2C00                                 LDV,R2   0
          1 000166  6C5C                                 LDV,R6   92
          1 000167  BCC7 000C                            LDB,B3   ALT$,AUTO
          1 000169  3C00                                 LDV,R3   0
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:46   
          1 00016A  0008                                 MMM

      309     6341    4                   ALT$->G$EXCFR.ALTEMPTY = 0;

   6341   1 00016B  CCC7 000C                            LDB,B4   ALT$,AUTO
          1 00016D  8704                                 CL       ,B4

      310     6342    4                   CALL CLEAR_ONE;

   6342   1 00016E  E3C0 0155                            LNJ,B6   s:0,PREL
          1 000170       0001                            DC       s:6343,PREL

      311     6343    4                   END;

   6343   1 000171  0F81 014F                            B        s:6565,PREL

      312     6344
      313     6345
      314     6346        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:47   
      315     6347        /*************************************************************
      316     6348         *                                                           *
      317     6349         *                        M$TRTN                             *
      318     6350         *                                                           *
      319     6351         *************************************************************/
      320     6352
      321     6353        /*F* NAME: M$TRTN
      322     6354        */
      323     6355
      324     6356    3            CASE(%G_MCL_TRTN#);

      325     6357
      326     6358        /*D* The exceptional condition frame is moved from the TCB to
      327     6359             the TSA overlaying the MCL environment.
      328     6360        */
      329     6361    3              CALL TCB_TSA;

   6361   1 000173  E3C0 0192                            LNJ,B6   s:0,PREL
          1 000175       0001                            DC       s:6367,PREL

      330     6362
      331     6363        /*D* Any values for the registers or the program counter that
      332     6364             are specified via the M$TRTN FPT are then moved to the TSA
      333     6365             overlaying those from the exceptional condition frame.
      334     6366        */
      335     6367    3              IF GUD_PARAMS.PTRS.PAR1$ ~= ADDR(NIL)

   6367   1 000176  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 000178  8DC6 0006                            CMN      6,B6
          1 00017A  0901 002B                            BE       s:6378,PREL

      336     6368    4              THEN DO;

      337     6369    4                   R3 = G$TSA.ISA.REGS.R3;

   6369   1 00017C  DCC6 0001                            LDB,B5   1,B6
          1 00017E  E845 002B                            LDR,R6   43,B5
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:48   
          1 000180  EF47 0016                            STR,R6   R3,AUTO

      338     6370    4                   B3$ = G$TSA.ISA.REGS.B3$;

   6370   1 000182  CCC5 0020                            LDB,B4   32,B5
          1 000184  CFC7 0017                            STB,B4   B3$,AUTO

      339     6371    4                   G$TSA.ISA.REGS = GUD_PARAMS.PTRS.PAR1$->VLP$REGISTERS;

   6371   1 000186  BCC6 0006                            LDB,B3   6,B6
          1 000188  AB83                                 LAB,B2   ,B3
          1 000189  2C00                                 LDV,R2   0
          1 00018A  6C44                                 LDV,R6   68
          1 00018B  BB85                                 LAB,B3   ,B5
          1 00018C  3C30                                 LDV,R3   48
          1 00018D  0008                                 MMM

      340     6372    4                   G$TSA.B3$ = G$TSA.ISA.REGS.B3$;

   6372   1 00018E  CCC6 0001                            LDB,B4   1,B6
          1 000190  ACC4 0020                            LDB,B2   32,B4
          1 000192  AFC4 000A                            STB,B2   10,B4

      341     6373    4                   G$TSA.R3 = G$TSA.ISA.REGS.R3;

   6373   1 000194  CCC6 0001                            LDB,B4   1,B6
          1 000196  E844 002B                            LDR,R6   43,B4
          1 000198  EF44 0003                            STR,R6   3,B4

      342     6374    4                   G$TSA.ISA.REGS.B3$ = B3$;

   6374   1 00019A  CCC6 0001                            LDB,B4   1,B6
          1 00019C  ACC7 0017                            LDB,B2   B3$,AUTO
          1 00019E  AFC4 0020                            STB,B2   32,B4

      343     6375    4                   G$TSA.ISA.REGS.R3 = R3;

PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:49   
   6375   1 0001A0  CCC6 0001                            LDB,B4   1,B6
          1 0001A2  E847 0016                            LDR,R6   R3,AUTO
          1 0001A4  EF44 002B                            STR,R6   43,B4

      344     6376    4                   END;

      345     6377
      346     6378    3              IF GUD_PARAMS.PTRS.PAR2$ ~= ADDR(NIL)

   6378   1 0001A6  8DC6 0008                            CMN      8,B6
          1 0001A8  0901 000F                            BE       s:6388,PREL

      347     6379    4              THEN DO;

      348     6380    4                   IF GUD_PARAMS.PTRS.PAR2$ -> P$$ ~= ENTADDR(NIL)

   6380   1 0001AA  DCC6 0008                            LDB,B5   8,B6
          1 0001AC  CC85                                 LDB,B4   ,B5
          1 0001AD  CD80 0000 0002  02                   CMB,B4   +2
          1 0001B0  0901 0021                            BE       s:6398,PREL

      349     6381    4                   THEN G$TSA.P$$ = GUD_PARAMS.PTRS.PAR2$->P$$;

   6381   1 0001B2  BCC6 0001                            LDB,B3   1,B6
          1 0001B4  CFC3 0008                            STB,B4   8,B3

      350     6382    4                   END;

   6382   1 0001B6  0F81 001B                            B        s:6398,PREL

      351     6383
      352     6384        /*D* If this is an M$TRTN through an exit for LDTRC frame, control
      353     6385             is transferred to GJM$MCL to complete the M$LDTRC process.
      354     6386        */
      355     6387    4              ELSE DO;

      356     6388    4                   IF (STK$->G$EXCFR.ECC = %G_XCON#) AND
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:50   

   6388   1 0001B8  DCC7 0010                            LDB,B5   STK$,AUTO
          1 0001BA  E845 0001                            LDR,R6   1,B5
          1 0001BC  6D02                                 CMV,R6   2
          1 0001BD  0981 0014                            BNE      s:6398,PREL
          1 0001BF  D845 002A                            LDR,R5   42,B5
          1 0001C1  D570 0004                            AND,R5   4,IMO
          1 0001C3  5901 000E                            BEZ,R5   s:6398,PREL

      357     6389    4                     (STK$->G$EXCFR.TRLR.RNST & %G_RS_LDTRC#)
      358     6390    5                   THEN DO;

      359     6391    5                        GUD_PARAMS.MCL.CODE = 0;

   6391   1 0001C5  8806                                 LBF,'03FF'X       ,B6
   6391   1 0001C6       03FF

      360     6392    5                        CALL GJM$MCL(GUD_PARAMS);

   6392   1 0001C7  BBC7 0004                            LAB,B3   @GUD_PARAMS,AUTO
          1 0001C9  CBF0 0100                            LAB,B4   256,IMO
          1 0001CB  E380 0000 0000  xent                 LNJ,B6   GJM$MCL
          1 0001CE       0001                            DC       s:6393,PREL

      361     6393    5                        RETURN;

   6393   1 0001CF  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      362     6394    5                        END;
      363     6395    4                   END;
      364     6396        /*D* The top of frame stack is removed from the TCB.
      365     6397        */
      366     6398    3              CALL CLEAR_ONE;

   6398   1 0001D2  E3C0 00F1                            LNJ,B6   s:0,PREL
          1 0001D4       0001                            DC       s:6407,PREL

PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:51   
      367     6399
      368     6400        /*D* The error code is set to E$ALTRET which is used to tell
      369     6401             the MCL handler that the existing TSA frame is not to be
      370     6402             modified in any way when returning to the user.
      371     6403             The TRAP# in the TSA is set to zero to indicate to the trap
      372     6404             handler's ALTRET routine that any associated debugger is not
      373     6405             to be entered.
      374     6406        */
      375     6407    3              GUD_PARAMS.ERR = EALTRET;

   6407   1 0001D5  8C80 0000 0010  00                   LDI      EALTRET
          1 0001D8  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 0001DA  8D46 0003                            SDI      3,B6

      376     6408    3              G$TSA.I.TRAP# = 0;

   6408   1 0001DC  DCC6 0001                            LDB,B5   1,B6
          1 0001DE  87C5 0002                            CLH      2,B5
          1 0001E0  0F81 00E0                            B        s:6565,PREL

      377     6409
      378     6410        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:52   
      379     6411        /*************************************************************
      380     6412         *                                                           *
      381     6413         *                  M$RETRY - M$RETRYS                       *
      382     6414         *                                                           *
      383     6415         *************************************************************/
      384     6416
      385     6417        /*F* NAME: M$RETRY - M$RETRYS
      386     6418        */
      387     6419
      388     6420    3            CASE(%G_MCL_RETRY#,%G_MCL_RETRYS#);

      389     6421
      390     6422        /*   First, make sure we are positioned on a monitor service
      391     6423             error environment.
      392     6424        */
      393     6425    3              IF (STK$->G$EXCFR.ECC = %G_ALT#) OR

   6425   1 0001E2  DCC7 0010                            LDB,B5   STK$,AUTO
          1 0001E4  C845 0001                            LDR,R4   1,B5
          1 0001E6  4D63                                 CMV,R4   99
          1 0001E7  0901 0009                            BE       s:6435,PREL
          1 0001E9  4D03                                 CMV,R4   3
          1 0001EA  0981 0041                            BNE      s:6469,PREL
          1 0001EC  92C5 0029                            LLH,R1   41,B5
          1 0001EE  1D01                                 CMV,R1   1
          1 0001EF  0981 003C                            BNE      s:6469,PREL

      394     6426    3                ( (STK$->G$EXCFR.ECC = %G_TRAP#)
      395     6427    3                AND (STK$->G$EXCFR.TRLR.TRAP.TRAP# = %G_MCL#) )
      396     6428    4              THEN DO;

      397     6429
      398     6430        /*D* If these is no FPT associated with the request, the values
      399     6431             for R3 and B3$ are moved from the TCB frame that contains
      400     6432             the original MCL (from the ALTRET frame if this is an M$RETRY,
      401     6433             from the top TCB stack frame if this is an M$RETRYS).
      402     6434        */
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:53   
      403     6435    4                   IF GUD_PARAMS.PTRS.PAR1$ = ADDR(NIL)

   6435   1 0001F1  8DC6 0006                            CMN      6,B6
          1 0001F3  0981 000F                            BNE      s:6445,PREL

      404     6436    5                   THEN DO;

      405     6437    5                        G$TSA.R3 = STK$->G$EXCFR.REGS.R3;

   6437   1 0001F5  CCC6 0001                            LDB,B4   1,B6
          1 0001F7  9845 001A                            LDR,R1   26,B5
          1 0001F9  9F44 0003                            STR,R1   3,B4

      406     6438    5                        G$TSA.B3$ = STK$->G$EXCFR.REGS.B3$;

   6438   1 0001FB  CCC6 0001                            LDB,B4   1,B6
          1 0001FD  BCC5 000F                            LDB,B3   15,B5
          1 0001FF  BFC4 000A                            STB,B3   10,B4

      407     6439    5                        END;

   6439   1 000201  0F81 0010                            B        s:6453,PREL

      408     6440
      409     6441        /*D* If the user supplied an FPT, the MCL TSA frame is instead
      410     6442             modified with these FPT values.
      411     6443        */
      412     6444    5                   ELSE DO;

      413     6445    5                        G$TSA.R3 = GUD_PARAMS.PTRS.PAR1$->FPT$RETRY.R3;

   6445   1 000203  CCC6 0001                            LDB,B4   1,B6
          1 000205  BCC6 0006                            LDB,B3   6,B6
          1 000207  9803                                 LDR,R1   ,B3
          1 000208  9F44 0003                            STR,R1   3,B4

      414     6446    5                        G$TSA.B3$ = GUD_PARAMS.PTRS.PAR1$->FPT$RETRY.B3$;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:54   

   6446   1 00020A  CCC6 0001                            LDB,B4   1,B6
          1 00020C  BCC6 0006                            LDB,B3   6,B6
          1 00020E  ACC3 0001                            LDB,B2   1,B3
          1 000210  AFC4 000A                            STB,B2   10,B4

      415     6447    5                        END;

      416     6448
      417     6449        /*D* The Program Counter is set to the original MCL address -1
      418     6450             as the return through GUD$MCL_HAND will cause TSA.P$ to be
      419     6451             bumped by 1 for a normal return from MCL processing.
      420     6452        */
      421     6453    4                   G$TSA.P$ = PINCRW(STK$->G$EXCFR.P$,-1);

   6453   1 000212  CCC6 0001                            LDB,B4   1,B6
          1 000214  BCC5 0004                            LDB,B3   4,B5
          1 000216  ABC3 FFFF                            LAB,B2   -1,B3
          1 000218  AFC4 0008                            STB,B2   8,B4

      422     6454
      423     6455        /*D* If this is M$RETRY, the ALTRET frame is marked empty.  If
      424     6456             this is M$RETRYS, the top of frame stack is removed from
      425     6457             the TCB.
      426     6458        */
      427     6459    4                   IF GUD_PARAMS.MCL.CODE = %G_MCL_RETRY#

   6459   1 00021A  C806                                 LDR,R4   ,B6
          1 00021B  C570 03FF                            AND,R4   1023,IMO
          1 00021D  C970 00CA                            CMR,R4   202,IMO
          1 00021F  0981 0007                            BNE      s:6461,PREL

      428     6460    4                   THEN ALT$->G$EXCFR.ALTEMPTY = -1;

   6460   1 000221  CCC7 000C                            LDB,B4   ALT$,AUTO
          1 000223  8904                                 LBT,'FFFF'X       ,B4
          1 000224       FFFF
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:55   
          1 000225  0F81 009B                            B        s:6565,PREL

      429     6461    4                   ELSE CALL CLEAR_ONE;

   6461   1 000227  E3C0 009C                            LNJ,B6   s:0,PREL
          1 000229       0001                            DC       s:6463,PREL

      430     6462
      431     6463    4                   END/*DO if poistioned at MCL */;

   6463   1 00022A  0F81 0096                            B        s:6565,PREL

      432     6464
      433     6465        /*   If this is not a monitor service error environment, ALTRET
      434     6466             to the user's M$RETRY(S).
      435     6467        */
      436     6468    4              ELSE DO;

      437     6469    4                   GUD_PARAMS.ERR = ENOTPMME;

   6469   1 00022C  8C80 0000 000C  00                   LDI      ENOTPMME
          1 00022F  8D46 0003                            SDI      3,B6

      438     6470    4                   END;

   6470   1 000231  0F81 008F                            B        s:6565,PREL

      439     6471
      440     6472        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:56   
      441     6473        /*************************************************************
      442     6474         *                                                           *
      443     6475         *                  M$MERC  - M$MERCS                        *
      444     6476         *                                                           *
      445     6477         *************************************************************/
      446     6478
      447     6479        /*F* NAME: M$MERC - M$MERCS
      448     6480        */
      449     6481
      450     6482    3            CASE(%G_MCL_MERC#,%G_MCL_MERCS#);

      451     6483
      452     6484        /*D* If the user supplied an error code via the FPT, it is moved
      453     6485             to the error code word in the exceptional condition frame.
      454     6486        */
      455     6487    3              IF GUD_PARAMS.PTRS.PAR1$ ~= ADDR(NIL)

   6487   1 000233  8DC6 0006                            CMN      6,B6
          1 000235  0901 0008                            BE       s:6495,PREL

      456     6488    4              THEN DO;

      457     6489    4                   STK$->G$EXCFR.TRLR.ERR = GUD_PARAMS.PTRS.PAR1$->G$ERR;

   6489   1 000237  DCC6 0006                            LDB,B5   6,B6
          1 000239  8C85                                 LDI      ,B5
          1 00023A  CCC7 0010                            LDB,B4   STK$,AUTO
          1 00023C  8D44 002B                            SDI      43,B4

      458     6490    4                   END;

      459     6491
      460     6492        /*D* If the severity of the error is zero, and this is not an
      461     6493             exit control frame, the user is allowed to continue processing.
      462     6494        */
      463     6495    3              IF (STK$->G$EXCFR.TRLR.ERR.SEV = %G_SEV_CONT#)

PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:57   
   6495   1 00023E  DCC7 0010                            LDB,B5   STK$,AUTO
          1 000240  82C5 002C                            LB,'0007'X        44,B5
          1 000242       0007
          1 000243  0501 0044                            BBT      s:6539,PREL
          1 000245  E845 0001                            LDR,R6   1,B5
          1 000247  6D02                                 CMV,R6   2
          1 000248  0901 003F                            BE       s:6539,PREL
          1 00024A  6D62                                 CMV,R6   98
          1 00024B  0901 003C                            BE       s:6539,PREL

      464     6496    3                AND ( (STK$->G$EXCFR.ECC ~= %G_XCON#)
      465     6497    3                AND (STK$->G$EXCFR.ECC ~= %G_TCBFULL#) )
      466     6498    4              THEN DO;

      467     6499
      468     6500        /*D* The exceptional condition frame is moved from the TCB
      469     6501             to the TSA overlaying the current M$MERC(S) environment.
      470     6502        */
      471     6503    4                   CALL TCB_TSA;

   6503   1 00024D  E3C0 00B8                            LNJ,B6   s:0,PREL
          1 00024F       0001                            DC       s:6509,PREL

      472     6504
      473     6505        /*D* If MERCing from a monitor services error environment, the
      474     6506             value of the Program Counter must be modified to avoid
      475     6507             re-entering the user's ALTRET or M$TRAP routine.
      476     6508        */
      477     6509    4                   IF (STK$->G$EXCFR.ECC = %G_ALT#) OR

   6509   1 000250  ECC7 0010                            LDB,B6   STK$,AUTO
          1 000252  E846 0001                            LDR,R6   1,B6
          1 000254  6D63                                 CMV,R6   99
          1 000255  0901 0009                            BE       s:6512,PREL
          1 000257  6D03                                 CMV,R6   3
          1 000258  0981 0010                            BNE      s:6518,PREL
          1 00025A  D2C6 0029                            LLH,R5   41,B6
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:58   
          1 00025C  5D01                                 CMV,R5   1
          1 00025D  0981 000B                            BNE      s:6518,PREL

      478     6510    4                     ( (STK$->G$EXCFR.ECC = %G_TRAP#)
      479     6511    4                     AND (STK$->G$EXCFR.TRLR.TRAP.TRAP# = %G_MCL#) )
      480     6512    4                   THEN G$TSA.P$ = PINCRW(G$TSA.P$,1);

   6512   1 00025F  DCC7 0004                            LDB,B5   @GUD_PARAMS,AUTO
          1 000261  CCC5 0001                            LDB,B4   1,B5
          1 000263  BCC4 0008                            LDB,B3   8,B4
          1 000265  ABC3 0001                            LAB,B2   1,B3
          1 000267  AFC4 0008                            STB,B2   8,B4

      481     6513
      482     6514        /*D* If this is M$MERC, the ALTRET frame is marked empty.  If
      483     6515             this is M$MERCS, the top of frame stack is removed from
      484     6516             the TCB.
      485     6517        */
      486     6518    4                   IF GUD_PARAMS.MCL.CODE = %G_MCL_MERC#

   6518   1 000269  DCC7 0004                            LDB,B5   @GUD_PARAMS,AUTO
          1 00026B  E805                                 LDR,R6   ,B5
          1 00026C  E570 03FF                            AND,R6   1023,IMO
          1 00026E  E970 00C9                            CMR,R6   201,IMO
          1 000270  0981 0007                            BNE      s:6520,PREL

      487     6519    4                   THEN ALT$->G$EXCFR.ALTEMPTY = -1;

   6519   1 000272  CCC7 000C                            LDB,B4   ALT$,AUTO
          1 000274  8904                                 LBT,'FFFF'X       ,B4
          1 000275       FFFF
          1 000276  0F81 0004                            B        s:6529,PREL

      488     6520    4                   ELSE CALL CLEAR_ONE;

   6520   1 000278  E3C0 004B                            LNJ,B6   s:0,PREL
          1 00027A       0001                            DC       s:6529,PREL
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:59   

      489     6521
      490     6522        /*D* The error code is set to E$ALTRET which is used to tell
      491     6523             the MCL handler that the existing TSA frame is not to be
      492     6524             modified in any way when returning to the user.
      493     6525             The TRAP# in the TSA is set to zero to indicate to the trap
      494     6526             handler's ALTRET routine that any associated debugger is not
      495     6527             to be entered.
      496     6528        */
      497     6529    4                   GUD_PARAMS.ERR = EALTRET;

   6529   1 00027B  8C80 0000 0010  00                   LDI      EALTRET
          1 00027E  ECC7 0004                            LDB,B6   @GUD_PARAMS,AUTO
          1 000280  8D46 0003                            SDI      3,B6

      498     6530    4                   G$TSA.I.TRAP# = 0;

   6530   1 000282  DCC6 0001                            LDB,B5   1,B6
          1 000284  87C5 0002                            CLH      2,B5

      499     6531
      500     6532    4                   END/* DO if severity zero and not xcon*/;

   6532   1 000286  0F81 003A                            B        s:6565,PREL

      501     6533
      502     6534        /*D* When the severity of the error is not zero, the input
      503     6535             parameters from GUD$MCL_HAND are modified to simulate an
      504     6536             M$ERR or M$XXX as indicated by the severity of the error.
      505     6537        */
      506     6538    4              ELSE DO;

      507     6539    4                   GUD_PARAMS.PTRS.PAR1$ = ADDR(STK$->G$EXCFR.TRLR.ERR);

   6539   1 000288  CBC5 002B                            LAB,B4   43,B5
          1 00028A  CFC6 0006                            STB,B4   6,B6

PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:60   
      508     6540    4                   GUD_PARAMS.PTRS.PAR2$ = ADDR(NIL);

   6540   1 00028C  BB80 0000 0000                       LAB,B3   0
          1 00028F  BFC6 0008                            STB,B3   8,B6

      509     6541
      510     6542    4                   IF STK$->G$EXCFR.TRLR.ERR.SEV > %G_SEV_ERR#

   6542   1 000291  E845 002C                            LDR,R6   44,B5
          1 000293  E570 0007                            AND,R6   7,IMO
          1 000295  6D04                                 CMV,R6   4
          1 000296  0381 0007                            BLE      s:6544,PREL

      511     6543    4                   THEN GUD_PARAMS.MCL.CODE = %G_MCL_XXX#;

   6543   1 000298  C870 0082                            LDR,R4   130,IMO
          1 00029A  CA86                                 SRM,R4,'03FF'X    ,B6
          1 00029B       03FF
          1 00029C  0F81 0005                            B        s:6549,PREL

      512     6544    4                   ELSE GUD_PARAMS.MCL.CODE = %G_MCL_ERR#;

   6544   1 00029E  C870 0081                            LDR,R4   129,IMO
          1 0002A0  CA86                                 SRM,R4,'03FF'X    ,B6
          1 0002A1       03FF

      513     6545
      514     6546        /*D* Anytime a user is MERCing through an exit control frame
      515     6547             an M$EXIT is simulated.
      516     6548        */
      517     6549    4                   IF (STK$->G$EXCFR.ECC = %G_XCON#)

   6549   1 0002A2  E845 0001                            LDR,R6   1,B5
          1 0002A4  6D02                                 CMV,R6   2
          1 0002A5  0901 0004                            BE       s:6551,PREL
          1 0002A7  6D62                                 CMV,R6   98
          1 0002A8  0981 0005                            BNE      s:6556,PREL
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:61   

      518     6550    4                     OR (STK$->G$EXCFR.ECC = %G_TCBFULL#)
      519     6551    4                   THEN GUD_PARAMS.MCL.CODE = %G_MCL_EXIT#;

   6551   1 0002AA  C870 0080                            LDR,R4   128,IMO
          1 0002AC  CA86                                 SRM,R4,'03FF'X    ,B6
          1 0002AD       03FF

      520     6552
      521     6553        /*D* Control passes to the GJM$MCL module to process this
      522     6554             simulated service request.
      523     6555        */
      524     6556    4                   CALL GJM$MCL(GUD_PARAMS);

   6556   1 0002AE  BBC7 0004                            LAB,B3   @GUD_PARAMS,AUTO
          1 0002B0  CBF0 0100                            LAB,B4   256,IMO
          1 0002B2  E380 0000 0000  xent                 LNJ,B6   GJM$MCL
          1 0002B5       0001                            DC       s:6557,PREL

      525     6557    4                   END/* DO if the severity is non-zero*/;

   6557   1 0002B6  0F81 000A                            B        s:6565,PREL

      526     6558
      527     6559        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:62   
      528     6560
      529     6561    3            CASE(ELSE);

      530     6562    3              CALL SCREECH(EMCL_TABLE);

   6562   1 0002B8  BB80 0000 0004  02                   LAB,B3   +4
          1 0002BB  CBF0 0100                            LAB,B4   256,IMO
          1 0002BD  E380 0000 0000  xent                 LNJ,B6   SCREECH
          1 0002C0       0001                            DC       s:6565,PREL

      531     6563    3              END /*DO CASE(GUD_PARAMS.CODE)*/;

      532     6564    2           END /* Do if > TRAP */;

      533     6565    1      RETURN;

   6565   1 0002C1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      534     6566
      535     6567        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:63   
      536     6568        /*I* NAME: CLEAR_ONE
      537     6569
      538     6570             PURPOSE:  To remove one frame from the top of the
      539     6571                       TCB exceptional condition stack.
      540     6572
      541     6573             CALL:   CALL CLEAR_ONE;
      542     6574
      543     6575        */
      544     6576
      545     6577    1   CLEAR_ONE: PROC;

   6577   1 0002C4  EFC7 001A            CLEAR_ONE       STB,B6   J+1,AUTO

      546     6578    2      IF G$TCB.CURRSZ= 0 THEN RETURN;

   6578   1 0002C6  DCC7 0012                            LDB,B5   TCB$,AUTO
          1 0002C8  E845 0005                            LDR,R6   5,B5
          1 0002CA  6981 0005                            BNEZ,R6  s:6580,PREL

   6578   1 0002CC  ECC7 001A                            LDB,B6   J+1,AUTO
          1 0002CE  C3C6 0001                            LNJ,B4   1,B6

      547     6579
      548     6580    2      IF CSTK$->G$EXCFR.ECC = %G_XCON#

   6580   1 0002D0  CCC7 000E                            LDB,B4   CSTK$,AUTO
          1 0002D2  D844 0001                            LDR,R5   1,B4
          1 0002D4  5D02                                 CMV,R5   2
          1 0002D5  0981 0009                            BNE      s:6585,PREL

      549     6581    3      THEN DO;

      550     6582    3           G$ECCB.FLAGS.XCONP = CSTK$->G$EXCFR.TRLR.XCON.FLAGS.XCONP;

   6582   1 0002D7  C844 0029                            LDR,R4   41,B4
          1 0002D9  4008                                 SOL,R4   8
          1 0002DA  BCC7 0014                            LDB,B3   ECCB$,AUTO
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:64   
          1 0002DC  CAC3 000A                            SRM,R4,'8000'X    10,B3
          1 0002DE       8000

      551     6583    3           END;

      552     6584
      553     6585    2      G$TCB.AVSZ = G$TCB.AVSZ + G$TCB.CURRSZ;

   6585   1 0002DF  E845 0004                            LDR,R6   4,B5
          1 0002E1  EA45 0005                            ADD,R6   5,B5
          1 0002E3  EF45 0004                            STR,R6   4,B5

      554     6586    2      G$TCB.CURRSZ = CSTK$->G$EXCFR.PREVSZ;

   6586   1 0002E5  D804                                 LDR,R5   ,B4
          1 0002E6  DF45 0005                            STR,R5   5,B5

      555     6587
      556     6588    2      IF G$TCB.CURRSZ = 0 THEN RETURN;

   6588   1 0002E8  5981 0005                            BNEZ,R5  s:6590,PREL

   6588   1 0002EA  ECC7 001A                            LDB,B6   J+1,AUTO
          1 0002EC  C3C6 0001                            LNJ,B4   1,B6

      557     6589
      558     6590    2      G$TCB.STK$ = PINCRW(G$TCB.STK$,-G$TCB.CURRSZ);

   6590   1 0002EE  B855                                 LDR,R3   R5
          1 0002EF  ECC5 0002                            LDB,B6   2,B5
          1 0002F1  EFC7 001C                            STB,B6   J+3,AUTO
          1 0002F3  E853                                 LDR,R6   R3
          1 0002F4  70F0                                 DAR,R7   16
          1 0002F5  84C7 001C                            SID      J+3,AUTO
          1 0002F7  8656                                 CPL      R6
          1 0002F8  8657                                 CPL      R7
          1 0002F9  8470 0000 0001                       AID      1,IMO
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:65   
          1 0002FC  8D45 0002                            SDI      2,B5

      559     6591    2      CSTK$ = G$TCB.STK$;

   6591   1 0002FE  ECC5 0002                            LDB,B6   2,B5
          1 000300  EFC7 000E                            STB,B6   CSTK$,AUTO

      560     6592
      561     6593    2      RETURN;

   6593   1 000302  ECC7 001A                            LDB,B6   J+1,AUTO
          1 000304  C3C6 0001                            LNJ,B4   1,B6

      562     6594    2   END CLEAR_ONE;
      563     6595        %EJECT;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:66   
      564     6596        /*I* NAME: TCB_TSA
      565     6597
      566     6598             PURPOSE:  To move a frame from the top of the TCB
      567     6599                       exceptional condition stack to the currently
      568     6600                       active Trap Save Area.
      569     6601
      570     6602             CALL:  CALL TCB_TSA;
      571     6603
      572     6604             DATA:  STK$ must contain the pointer to the TCB frame
      573     6605                    that is to be moved to the TSA.  This may be
      574     6606                    the ALTRET frame or a stack frame.
      575     6607
      576     6608        */
      577     6609
      578     6610    1   TCB_TSA: PROC;

   6610   1 000306  EFC7 001A            TCB_TSA         STB,B6   J+1,AUTO

      579     6611        /*   Save B3 and R3 out of the TSA.ISA for the trap handler.
      580     6612        */
      581     6613    2      R3 = G$TSA.ISA.REGS.R3;

   6613   1 000308  DCC7 0004                            LDB,B5   @GUD_PARAMS,AUTO
          1 00030A  CCC5 0001                            LDB,B4   1,B5
          1 00030C  E844 002B                            LDR,R6   43,B4
          1 00030E  EF47 0016                            STR,R6   R3,AUTO

      582     6614    2      B3$ = G$TSA.ISA.REGS.B3$;

   6614   1 000310  BCC4 0020                            LDB,B3   32,B4
          1 000312  BFC7 0017                            STB,B3   B3$,AUTO

      583     6615
      584     6616        /*   Make sure that the current T$ doesn't get replaced, in case
      585     6617             the user enlarged auto while in the ASYNC routine.
      586     6618        */
      587     6619    2      STK$->G$EXCFR.REGS.T$ = G$TSA.ISA.REGS.T$;
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:67   

   6619   1 000314  ACC4 0035                            LDB,B2   53,B4
          1 000316  9CC7 0010                            LDB,B1   STK$,AUTO
          1 000318  AFC1 0024                            STB,B2   36,B1

      588     6620
      589     6621        /*   The exceptional condition frame is moved from the TCB to
      590     6622             the TSA overlaying the MCL environment.
      591     6623        */
      592     6624    2      G$TSA.P$ = STK$->G$EXCFR.P$;

   6624   1 00031A  CCC5 0001                            LDB,B4   1,B5
          1 00031C  ECC1 0004                            LDB,B6   4,B1
          1 00031E  EFC4 0008                            STB,B6   8,B4

      593     6625    2      G$TSA.S.RING = STK$->G$EXCFR.S.RING;

   6625   1 000320  ECC5 0001                            LDB,B6   1,B5
          1 000322  D841 0006                            LDR,R5   6,B1
          1 000324  DAC6 000C                            SRM,R5,'6000'X    12,B6
          1 000326       6000

      594     6626    2      G$TSA.ISA.REGS = STK$->G$EXCFR.REGS;

   6626   1 000327  ECC5 0001                            LDB,B6   1,B5
          1 000329  AB81                                 LAB,B2   ,B1
          1 00032A  2C0E                                 LDV,R2   14
          1 00032B  6C44                                 LDV,R6   68
          1 00032C  BB86                                 LAB,B3   ,B6
          1 00032D  3C30                                 LDV,R3   48
          1 00032E  0008                                 MMM

      595     6627
      596     6628    2      G$TSA.B3$ = G$TSA.ISA.REGS.B3$;

   6628   1 00032F  CCC5 0001                            LDB,B4   1,B5
          1 000331  ECC4 0020                            LDB,B6   32,B4
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:68   
          1 000333  EFC4 000A                            STB,B6   10,B4

      597     6629    2      G$TSA.R3 = G$TSA.ISA.REGS.R3;

   6629   1 000335  ECC5 0001                            LDB,B6   1,B5
          1 000337  E846 002B                            LDR,R6   43,B6
          1 000339  EF46 0003                            STR,R6   3,B6

      598     6630
      599     6631    2      G$TSA.I = STK$->G$EXCFR.REGS.I;

   6631   1 00033B  ECC5 0001                            LDB,B6   1,B5
          1 00033D  CCC7 0010                            LDB,B4   STK$,AUTO
          1 00033F  E844 0015                            LDR,R6   21,B4
          1 000341  EF46 0002                            STR,R6   2,B6

      600     6632
      601     6633    2      G$TSA.ISA.ISM1 = STK$->G$EXCFR.ISM1;

   6633   1 000343  ECC5 0001                            LDB,B6   1,B5
          1 000345  E844 0002                            LDR,R6   2,B4
          1 000347  EF46 0013                            STR,R6   19,B6

      602     6634    2      G$TSA.ISA.ISM2 = STK$->G$EXCFR.ISM2;

   6634   1 000349  ECC5 0001                            LDB,B6   1,B5
          1 00034B  E844 0003                            LDR,R6   3,B4
          1 00034D  EF46 0014                            STR,R6   20,B6

      603     6635
      604     6636        /*   B3 and R3 in what was the MCL TSA are now restored for
      605     6637             trap handler.
      606     6638        */
      607     6639    2      G$TSA.ISA.REGS.B3$ = B3$;

   6639   1 00034F  ECC5 0001                            LDB,B6   1,B5
          1 000351  BCC7 0017                            LDB,B3   B3$,AUTO
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:69   
          1 000353  BFC6 0020                            STB,B3   32,B6

      608     6640    2      G$TSA.ISA.REGS.R3 = R3;

   6640   1 000355  ECC5 0001                            LDB,B6   1,B5
          1 000357  E847 0016                            LDR,R6   R3,AUTO
          1 000359  EF46 002B                            STR,R6   43,B6

      609     6641
      610     6642    2   END TCB_TSA;

   6642   1 00035B  ECC7 001A                            LDB,B6   J+1,AUTO
          1 00035D  C3C6 0001                            LNJ,B4   1,B6
      611     6643    1   END GUE$MCL;

PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:70   
--  Include file information  --

   UD_SCODE_C.:E05TOU  is referenced.
   UE_ERRORS_C.:E05TOU  is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   J_SCODE_C.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GUE$MCL.
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:71   

 **** Variables and constants ****

  ****  Section 000 RoData GUE$MCL

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     8-0-0/w STRC(32)    r     1 EALTEMPTY                 10-0-0/w STRC(32)    r     1 EALTRET
     6-0-0/w STRC(32)    r     1 EBADVECT0                  0-0-0/w STRC(48)    r     1 EMCL_TABLE
     C-0-0/w STRC(32)    r     1 ENOTPMME                   A-0-0/w STRC(32)    r     1 ETCBEMPTY
     E-0-0/w STRC(32)    r     1 ETCBFULL                   3-0-0/w STRC(48)    r     1 SDOMAIN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @GUD_PARAMS                C-0-0/w PTR         r     1 ALT$
    17-0-0/w PTR         r     1 B3$                        E-0-0/w PTR         r     1 CSTK$
    14-0-0/w PTR         r     1 ECCB$                     *0-0-0/w STRC(1280)  r     1 GUD_PARAMS
     6-0-0/w UBIN(16)    r     1 I                         19-0-0/w BIT         r     1 J
     7-0-0/w UBIN(16)    r     1 MCL_CODE                   8-0-0/w PTR         r     1 NEW$
     A-0-0/w PTR         r     1 PREVIOUS$                 16-0-0/w UBIN(16)    r     1 R3
    10-0-0/w PTR         r     1 STK$                      12-0-0/w PTR         r     1 TCB$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$JIT$                     0-0-0/w PTR         r     1 G$ROS$
     0-0-0/w PTR         r     1 G$UHJIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:72   

     0-0-0/w UBIN(16)    r     1 B$WORD                     0-0-0/w STRC(48)    r     1 FPT$RETRY
     0-0-0/w STRC(224)   r     1 G$ECCB                     0-0-0/w STRC(32)    r     1 G$ERR
     0-0-0/w STRC(736)   r     1 G$EXCFR                    0-0-0/w STRC(5616)  r     1 G$JIT
     0-0-0/w STRC(928)   r     1 G$ROS                      0-0-0/w STRC(96)    r     1 G$TCB
     0-0-0/w STRC(928)   r     1 G$TSA                      0-0-0/w STRC(6480)  r     1 G$UHJIT
     0-0-0/w EPTR        r     1 P$$                        0-0-0/w STRC(544)   r     1 VLP$REGISTERS
     0-0-0/w STRC(192)   r     1 VLP$TC


   Procedure GUE$MCL requires 863 words for executable code.
   Procedure GUE$MCL requires 30 words of local(AUTO) storage.

    No errors detected in file GUE$MCL.:E05TSI    .
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:73   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:74   
          MINI XREF LISTING

ALT$
       778**DCL      6146<<ASSIGN   6269>>IF       6274>>ASSIGN   6321>>ASSIGN   6326>>ASSIGN   6328>>ASSIGN
      6340>>ASSIGN   6341>>ASSIGN   6460>>ASSIGN   6519>>ASSIGN
B$WORD
       789**DCL      6296>>ASSIGN
B3$
       784**DCL      6370<<ASSIGN   6374>>ASSIGN   6614<<ASSIGN   6639>>ASSIGN
CLEAR_ONE
      6577**PROC     6299--CALL     6342--CALL     6398--CALL     6461--CALL     6520--CALL
CSTK$
       779**DCL      6147<<ASSIGN   6257>>ASSIGN   6320<<ASSIGN   6320>>ASSIGN   6322>>ASSIGN   6326>>ASSIGN
      6334>>IF       6340>>ASSIGN   6580>>IF       6582>>ASSIGN   6586>>ASSIGN   6591<<ASSIGN
EALTEMPTY
      5851**DCL      6271>>ASSIGN
EALTRET
      6039**DCL      6407>>ASSIGN   6529>>ASSIGN
EBADVECT0
      5804**DCL      6188>>ASSIGN
ECCB$
       782**DCL      4238--IMP-PTR  6150<<ASSIGN   6152<<ASSIGN   6196>>ASSIGN   6199>>ASSIGN   6208>>ASSIGN
      6215>>ASSIGN   6230>>ASSIGN   6582>>ASSIGN
EMCL_TABLE
      5691**DCL      6562<>CALL
ENOTPMME
      5945**DCL      6336>>ASSIGN   6469>>ASSIGN
ETCBEMPTY
      5898**DCL      6253>>ASSIGN
ETCBFULL
      5992**DCL      6313>>ASSIGN
FPT$RETRY.B3$
      5487**DCL      6446>>ASSIGN
FPT$RETRY.R3
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:75   
      5487**DCL      6445>>ASSIGN
G$ECCB.FLAGS.XCONP
      4249**DCL      6230<<ASSIGN   6582<<ASSIGN
G$ECCB.FLTFLG
      4267**DCL      4298--REDEF    6208>>ASSIGN   6215<<ASSIGN
G$ECCB.HAND$
      4247**DCL      6196>>ASSIGN   6199<<ASSIGN
G$ERR
      5262**DCL      6489>>ASSIGN
G$EXCFR
      4723**DCL      6311--IF       6323--ASSIGN   6326<<ASSIGN   6326>>ASSIGN   6340<<ASSIGN   6340>>ASSIGN
G$EXCFR.ALTEMPTY
      4728**DCL      6328<<ASSIGN   6341<<ASSIGN   6460<<ASSIGN   6519<<ASSIGN
G$EXCFR.ECC
      4728**DCL      6334>>IF       6388>>IF       6425>>IF       6425>>IF       6495>>IF       6495>>IF
      6509>>IF       6509>>IF       6549>>IF       6549>>IF       6580>>IF
G$EXCFR.ISM1
      4746**DCL      6633>>ASSIGN
G$EXCFR.ISM2
      4771**DCL      6634>>ASSIGN
G$EXCFR.P$
      4778**DCL      6453>>ASSIGN   6624>>ASSIGN
G$EXCFR.P$$
      4778**DCL      4778--REDEF    4778--REDEF
G$EXCFR.PREVSZ
      4728**DCL      4728--REDEF    6269>>IF       6321<<ASSIGN   6586>>ASSIGN
G$EXCFR.REGS
      4817**DCL      6626>>ASSIGN
G$EXCFR.REGS.B3$
      4821**DCL      6438>>ASSIGN
G$EXCFR.REGS.I
      4839**DCL      6631>>ASSIGN
G$EXCFR.REGS.R3
      4847**DCL      6437>>ASSIGN
G$EXCFR.REGS.T$
      4940**DCL      6619<<ASSIGN
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:76   
G$EXCFR.S.RING
      4798**DCL      6625>>ASSIGN
G$EXCFR.TRLR.ERR
      5058**DCL      6489<<ASSIGN   6539--ASSIGN
G$EXCFR.TRLR.ERR.SEV
      5086**DCL      6495>>IF       6542>>IF
G$EXCFR.TRLR.EVID
      5015**DCL      5033--REDEF    5041--REDEF    5041--REDEF
G$EXCFR.TRLR.RNST
      5033**DCL      6388>>IF
G$EXCFR.TRLR.SUBC
      4992**DCL      4992--REDEF    5010--REDEF    5014--REDEF    5014--REDEF
G$EXCFR.TRLR.TRAP.TRAP#
      5014**DCL      6425>>IF       6509>>IF
G$EXCFR.TRLR.XCON.FLAGS.XCONP
      5015**DCL      6582>>ASSIGN
G$JIT.DB#
      3961**DCL      6219>>IF
G$JIT.ERRLOG
      4110**DCL      4113--REDEF
G$JIT.JSUNIT
      3849**DCL      3850--REDEF
G$JIT.MCLS
      3848**DCL      3848--REDEF
G$JIT.TMRZ
      4117**DCL      4118--REDEF
G$JIT.USER_EXTIME
      3841**DCL      3842--REDEF
G$JIT.USER_MEMTIME
      3844**DCL      3844--REDEF
G$JIT.USER_SVTIME
      3843**DCL      3843--REDEF
G$JIT$
      6123**DCL      3780--IMP-PTR  6219>>IF
G$ROS.AUTO_DS$
      4203**DCL      4204--REDEF
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:77   
G$ROS.AUTO_T$
      4204**DCL      4204--REDEF
G$ROS.DB_ECCB$
      4201**DCL      6152>>ASSIGN
G$ROS.TCB
      4199**DCL      6145--ASSIGN
G$ROS.U_ECCB$
      4201**DCL      6150>>ASSIGN
G$ROS$
      6124**DCL      4194--IMP-PTR  6145>>ASSIGN   6150>>ASSIGN   6152>>ASSIGN
G$TCB.ALT$
      4318**DCL      6146>>ASSIGN
G$TCB.AVSZ
      4318**DCL      6311>>IF       6324<<ASSIGN   6324>>ASSIGN   6585<<ASSIGN   6585>>ASSIGN
G$TCB.CURRSZ
      4319**DCL      6251>>IF       6320>>ASSIGN   6321>>ASSIGN   6323<<ASSIGN   6324>>ASSIGN   6578>>IF
      6585>>ASSIGN   6586<<ASSIGN   6588>>IF       6590>>ASSIGN
G$TCB.STK$
      4318**DCL      6147>>ASSIGN   6322<<ASSIGN   6590<<ASSIGN   6590>>ASSIGN   6591>>ASSIGN
G$TSA.B3$
      4381**DCL      6372<<ASSIGN   6438<<ASSIGN   6446<<ASSIGN   6628<<ASSIGN
G$TSA.I
      4370**DCL      6631<<ASSIGN
G$TSA.I.TRAP#
      4372**DCL      6408<<ASSIGN   6530<<ASSIGN
G$TSA.ISA.ISM1
      4476**DCL      6633<<ASSIGN
G$TSA.ISA.ISM2
      4501**DCL      6634<<ASSIGN
G$TSA.ISA.P$$
      4509**DCL      4509--REDEF
G$TSA.ISA.REGS
      4551**DCL      6371<<ASSIGN   6626<<ASSIGN
G$TSA.ISA.REGS.B3$
      4555**DCL      6370>>ASSIGN   6372>>ASSIGN   6374<<ASSIGN   6614>>ASSIGN   6628>>ASSIGN   6639<<ASSIGN
G$TSA.ISA.REGS.M1
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:78   
      4601**DCL      6209>>ASSIGN   6218<<ASSIGN
G$TSA.ISA.REGS.M1.J
      4603**DCL      6217>>ASSIGN   6220<<ASSIGN
G$TSA.ISA.REGS.M3
      4625**DCL      6210>>ASSIGN   6222<<ASSIGN
G$TSA.ISA.REGS.R3
      4581**DCL      6369>>ASSIGN   6373>>ASSIGN   6375<<ASSIGN   6613>>ASSIGN   6629>>ASSIGN   6640<<ASSIGN
G$TSA.ISA.REGS.T$
      4674**DCL      6619>>ASSIGN
G$TSA.P$
      4380**DCL      6453<<ASSIGN   6512<<ASSIGN   6512>>ASSIGN   6624<<ASSIGN
G$TSA.P$$
      4380**DCL      4380--REDEF    4381--REDEF    6381<<ASSIGN
G$TSA.R3
      4377**DCL      6373<<ASSIGN   6437<<ASSIGN   6445<<ASSIGN   6629<<ASSIGN
G$TSA.S.RING
      4402**DCL      6625<<ASSIGN
G$UHJIT.DMN.ID
      2527**DCL      6149>>IF       6151>>IF
G$UHJIT.ISA_USR
      2232**DCL      2527--REDEF
G$UHJIT.ISA_USR.P$$
      2307**DCL      2307--REDEF
G$UHJIT.TSA_CP.ISA.P$$
      3514**DCL      3514--REDEF
G$UHJIT.TSA_CP.P$$
      3385**DCL      3385--REDEF    3386--REDEF
G$UHJIT.TSA_DB.ISA.P$$
      3126**DCL      3126--REDEF
G$UHJIT.TSA_DB.P$$
      2997**DCL      2997--REDEF    2998--REDEF
G$UHJIT.TSA_RTT.P$$
      3760**DCL      3760--REDEF    3761--REDEF
G$UHJIT.TSA_USR.ISA.P$$
      2716**DCL      2716--REDEF
G$UHJIT.TSA_USR.P$$
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:79   
      2587**DCL      2587--REDEF    2588--REDEF
G$UHJIT$
      6122**DCL       809--IMP-PTR  6149>>IF       6151>>IF
GJM$MCL
      6127**DCL-ENT  6392--CALL     6556--CALL
GUD_PARAMS
       697**DCL         9--PROC     6392<>CALL     6556<>CALL
GUD_PARAMS.BND
       757**DCL       758--REDEF
GUD_PARAMS.DESC
       759**DCL       760--REDEF
GUD_PARAMS.ERR
       723**DCL      6188<<ASSIGN   6253<<ASSIGN   6271<<ASSIGN   6313<<ASSIGN   6336<<ASSIGN   6407<<ASSIGN
      6469<<ASSIGN   6529<<ASSIGN
GUD_PARAMS.ERR.SEV
       751**DCL      6254<<ASSIGN
GUD_PARAMS.MCL.C.MCL
       704**DCL      6159>>ASSIGN
GUD_PARAMS.MCL.CODE
       704**DCL       704--REDEF    6181>>IF       6204>>IF       6229>>IF       6250>>IF       6254>>IF
      6285>>DOCASE   6391<<ASSIGN   6459>>IF       6518>>IF       6543<<ASSIGN   6544<<ASSIGN   6551<<ASSIGN
GUD_PARAMS.PTRS
       753**DCL       754--REDEF     756--REDEF     756--REDEF     756--REDEF
GUD_PARAMS.PTRS.PAR1$
       753**DCL      6183>>ASSIGN   6294>>IF       6296>>ASSIGN   6367>>IF       6371>>ASSIGN   6435>>IF
      6445>>ASSIGN   6446>>ASSIGN   6487>>IF       6489>>ASSIGN   6539<<ASSIGN
GUD_PARAMS.PTRS.PAR2$
       753**DCL      6184>>ASSIGN   6378>>IF       6380>>IF       6381>>ASSIGN   6540<<ASSIGN
GUD_PARAMS.TSA$
       706**DCL      4348--IMP-PTR  6209>>ASSIGN   6210>>ASSIGN   6217>>ASSIGN   6218>>ASSIGN   6220>>ASSIGN
      6222>>ASSIGN   6369>>ASSIGN   6370>>ASSIGN   6371>>ASSIGN   6372>>ASSIGN   6372>>ASSIGN   6373>>ASSIGN
      6373>>ASSIGN   6374>>ASSIGN   6375>>ASSIGN   6381>>ASSIGN   6408>>ASSIGN   6437>>ASSIGN   6438>>ASSIGN
      6445>>ASSIGN   6446>>ASSIGN   6453>>ASSIGN   6512>>ASSIGN   6512>>ASSIGN   6530>>ASSIGN   6613>>ASSIGN
      6614>>ASSIGN   6619>>ASSIGN   6624>>ASSIGN   6625>>ASSIGN   6626>>ASSIGN   6628>>ASSIGN   6628>>ASSIGN
      6629>>ASSIGN   6629>>ASSIGN   6631>>ASSIGN   6633>>ASSIGN   6634>>ASSIGN   6639>>ASSIGN   6640>>ASSIGN
I
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:80   
       774**DCL      6295<<ASSIGN   6296<<ASSIGN   6298>>DOWHILE  6300<<ASSIGN   6300>>ASSIGN
J
       785**DCL      6217<<ASSIGN   6220>>ASSIGN
MCL_CODE
       775**DCL      6159<<ASSIGN   6196>>ASSIGN   6199>>ASSIGN
NEW$
       776**DCL      6183<<ASSIGN   6186>>IF       6198>>IF       6199>>ASSIGN   6213>>IF       6215>>ASSIGN
      6218>>ASSIGN   6222>>ASSIGN   6229>>IF
P$$
       790**DCL      6380>>IF       6381>>ASSIGN
PREVIOUS$
       777**DCL      6184<<ASSIGN   6186>>IF       6195>>IF       6196>>ASSIGN   6206>>IF       6208>>ASSIGN
      6209>>ASSIGN   6210>>ASSIGN
R3
       783**DCL      6369<<ASSIGN   6375>>ASSIGN   6613<<ASSIGN   6640>>ASSIGN
SCREECH
      6128**DCL-ENT  6153--CALL     6562--CALL
SDOMAIN
      5753**DCL      6153<>CALL
STK$
       780**DCL      6257<<ASSIGN   6274<<ASSIGN   6388>>IF       6388>>IF       6425>>IF       6425>>IF
      6425>>IF       6437>>ASSIGN   6438>>ASSIGN   6453>>ASSIGN   6489>>ASSIGN   6495>>IF       6495>>IF
      6495>>IF       6509>>IF       6509>>IF       6509>>IF       6539>>ASSIGN   6542>>IF       6549>>IF
      6549>>IF       6619>>ASSIGN   6624>>ASSIGN   6625>>ASSIGN   6626>>ASSIGN   6631>>ASSIGN   6633>>ASSIGN
      6634>>ASSIGN
TCB$
       781**DCL      4314--IMP-PTR  6145<<ASSIGN   6146>>ASSIGN   6147>>ASSIGN   6251>>IF       6311>>IF
      6320>>ASSIGN   6321>>ASSIGN   6322>>ASSIGN   6323>>ASSIGN   6324>>ASSIGN   6324>>ASSIGN   6324>>ASSIGN
      6578>>IF       6585>>ASSIGN   6585>>ASSIGN   6585>>ASSIGN   6586>>ASSIGN   6588>>IF       6590>>ASSIGN
      6590>>ASSIGN   6590>>ASSIGN   6591>>ASSIGN
TCB_TSA
      6610**PROC     6361--CALL     6503--CALL
VLP$REGISTERS
      5308**DCL      6371>>ASSIGN
VLP$TC.FLTFLG
      5125**DCL      6208<<ASSIGN   6215>>ASSIGN
PL6.E3A0      #001=GUE$MCL File=GUE$MCL.:E05TSI                                  TUE 07/29/97 22:14 Page:81   
VLP$TC.M1
      5173**DCL      6209<<ASSIGN   6218>>ASSIGN
VLP$TC.M3
      5197**DCL      6210<<ASSIGN   6222>>ASSIGN
VLP$TC.TRAP$
      5105**DCL      6196<<ASSIGN   6199>>ASSIGN
