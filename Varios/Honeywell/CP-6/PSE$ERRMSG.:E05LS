VERSION E05

PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:1    
        1        1        /*M*  PSE$ERRMSG  Print error messages and HELP text for STATS                */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        /*P*  NAME:    PSE$ERRMSG
        9        9              PURPOSE: Routine is used to interface with M$ERRMSG to print
       10       10                       out the text of STATS error messages and HELP
       11       11                       commentary.
       12       12                                                                                      */
       13       13        /*D*  NAME:    PSE$ERRMSG
       14       14              CALL: CALL PSE$ERRMSG ([a], [b], [c], [d], [e]);
       15       15              DESCRIPTION:
       16       16           PSE$ERRMSG is the general error-message and HELP-text
       17       17           handler for the STATS program.  Its five parameters (all optional)
       18       18           are as follows:
       19       19
       20       20              #1 -  if present, should be a UBIN WORD giving the number of a
       21       21                    STATS error (defined in PS_PERR_C); this error number
       22       22                    will be used as the CODE portion of the error message
       23       23                    fetched from the error message file;  an FCG of 'PS' and a
       24       24                    MID of 0 will be used.  If absent, the complete error code from
       25       25                    the ALTRET frame in the TCB will be used.
       26       26
       27       27              #2 -  if present, should be a UBIN WORD giving the "flag level" of
       28       28                    the message to be printed (i.e., the number of asterisks).  If
       29       29                    absent, a flag level of 0 will be assumed.
       30       30
       31       31              #3 -  if present, a BIT(72) vector defining the area to be substituted
       32       32                    into the %U1 portion of the error message.  If absent,  no %U1
       33       33                    substitution will be performed.
       34       34
       35       35              #4 -  if present, a BIT(72) vector defining the area to be substituted
       36       36                    into the %U2 portion of the error message.  If absent,  no %U2
       37       37                    substitution will be performed.
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:2    
       38       38
       39       39              #5 -  if present, a BIT(72) vector defining the area to be substituted
       40       40                    into the %U3 portion of the error message.  If absent,  no %U3
       41       41                    substitution will be performed.
       42       42
       43       43           PSE$ERRMSG calls M$ERRMSG to perform the actual dirty work.  When
       44       44           M$ERRMSG returns, PSE$ERRMSG will check the "flag level" that it
       45       45           was passed (if any) - if the flag level was 4 (indicating a fatal
       46       46           error) PSE$ERRMSG will suicide via M$ERR;  if the flag level was
       47       47           less than 4, PSE$ERRMSG will unwind back to the STATS command
       48       48           interpreter via the PS_BAILOUT variable.
       49       49        */
       50       50        PSE$ERRMSG: PROC (ERR, STARS, FIELD1, FIELD2, FIELD3);
       51       51        %INCLUDE CP_6;
       52      132        %INCLUDE CP_6_SUBS;
       53      672        %INCLUDE PS_DATA_R;
       54     5968        %INCLUDE XUR_ENTRY;
       55     6000        %B$TCB;
       56     6003        %B$EXCFR;
       57     6021        %B$ALT;
       58     6029        %MACRO TEXTC(NAME=NIL, STCLASS=STATIC);
       59     6030        DCL 1 NAME STCLASS,
       60     6031              2 LEN UBIN BYTE UNAL,
       61     6032              2 CHARS CHAR (31);
       62     6033        %MEND;
       63     6034        %MACRO VECTOR (NAME=NIL);
       64     6035        DCL 1 NAME DALIGNED,
       65     6036              2 BOUND UBIN (20) UNAL,
       66     6037              2 * BIT (16) UNAL,
       67     6038              2 PTR$ PTR ALIGNED;
       68     6039        %MEND;
       69     6040    1   DCL ERR UBIN WORD;
       70     6041    1   DCL STARS UBIN WORD;
       71     6042    1   DCL FIELD1 BIT(72) DALIGNED;
       72     6043    1   DCL FIELD2 BIT(72) DALIGNED;
       73     6044    1   DCL FIELD3 BIT(72) DALIGNED;
       74     6045        %TEXTC (NAME=SCRATCH_AREA_1);
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:3    
       75     6050        %TEXTC (NAME=SCRATCH_AREA_2);
       76     6055        %TEXTC (NAME=SCRATCH_AREA_3);
       77     6060        %VECTOR (NAME=PSE_FIELD1);
       78     6066        %VECTOR (NAME=PSE_FIELD2);
       79     6072        %VECTOR (NAME=PSE_FIELD3);
       80     6078    1   DCL LEN UBIN WORD;
       81     6079    1   DCL TEXT CHAR (LEN) BASED;
       82     6080    1   DCL RETURN_TO_CALLER LOGICAL;
       83     6081    1   DCL ELUCIDATING LOGICAL;
       84     6082    1   DCL B$TCB$ PTR SYMREF;
       85     6083    1   DCL DCB# UBIN STATIC INIT(0);
       86     6084        %EJECT;
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:4    
       87     6085    1   SETUP_VARIABLE_PORTION: PROC (GIVEN_VECTOR, RESULT_VECTOR, SCRATCH);
       88     6086        %VECTOR (NAME=GIVEN_VECTOR);
       89     6092        %VECTOR (NAME=RESULT_VECTOR);
       90     6098        %TEXTC (NAME=SCRATCH, STCLASS=" ");
       91     6103    2      IF ADDR(GIVEN_VECTOR) = ADDR(NIL)
       92     6104    2       OR GIVEN_VECTOR = VECTOR(NIL)
       93     6105    2        THEN
       94     6106    2         RESULT_VECTOR = VECTOR(NIL);
       95     6107
       96     6108    3        ELSE DO;
       97     6109
       98     6110    3         SCRATCH.LEN = GIVEN_VECTOR.BOUND + 1;
       99     6111
      100     6112    3         LEN = SCRATCH.LEN;
      101     6113    3         SCRATCH.CHARS = GIVEN_VECTOR.PTR$ -> TEXT;
      102     6114    3         RESULT_VECTOR = VECTOR(SCRATCH);
      103     6115    3         END;
      104     6116
      105     6117    2      RETURN;
      106     6118
      107     6119    2   END SETUP_VARIABLE_PORTION;
      108     6120        %EJECT;
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:5    
      109     6121
      110     6122    1      RETURN_TO_CALLER = %NO#;
      111     6123    1      RETURN_TO_CALLER = %NO#;
      112     6124    1      GOTO SETUP_THE_FIELDS;
      113     6125
      114     6126
      115     6127    1   PSE$GRIPE: ENTRY (ERR, STARS, FIELD1, FIELD2, FIELD3);
      116     6128
      117     6129        /*D*  NAME:    PSE$GRIPE
      118     6130              DESCRIPTION:  PSE$GRIPE is like PSE$ERRMSG except that it returns
      119     6131                       to the caller after printing the error message instead of
      120     6132                       unwinding to PS_BAILOUT.
      121     6133                                                                                      */
      122     6134
      123     6135    1      RETURN_TO_CALLER = %YES#;
      124     6136
      125     6137    1   SETUP_THE_FIELDS: ;
      126     6138
      127     6139    1      CALL SETUP_VARIABLE_PORTION (FIELD1, PSE_FIELD1, SCRATCH_AREA_1);
      128     6140    1      CALL SETUP_VARIABLE_PORTION (FIELD2, PSE_FIELD2, SCRATCH_AREA_2);
      129     6141    1      CALL SETUP_VARIABLE_PORTION (FIELD3, PSE_FIELD3, SCRATCH_AREA_3);
      130     6142
      131     6143    1      IF ADDR(ERR)=ADDR(NIL)
      132     6144    1        THEN
      133     6145    1         IF B$TCB$ -> B$TCB.ALT$ = ADDR(NIL)
      134     6146    1           THEN
      135     6147    1            PS_ERR = '0'B;
      136     6148    2           ELSE DO;
      137     6149    2            PS_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      138     6150    2            DCB# = B$TCB$->B$TCB.ALT$->B$ALT.DCB#;
      139     6151    2            END;
      140     6152    1        ELSE IF ERR < 9999
      141     6153    2           THEN DO;
      142     6154
      143     6155    2            PS_ERR = '202300000000'O;
      144     6156    2            PS_ERR.CODE = ERR;
      145     6157    2            END;
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:6    
      146     6158
      147     6159    1           ELSE
      148     6160    1            PS_ERR = BINBIT (ERR, 36);
      149     6161
      150     6162
      151     6163
      152     6164    1   OUTPUT_THE_MESSAGE:
      153     6165    1      CALL XUR$ERRMSG (PS_ERR, DCB#, , PSE_FIELD1, PSE_FIELD2, PSE_FIELD3, STARS);
      154     6166
      155     6167    1      IF ADDR(STARS)~=ADDR(NIL) THEN
      156     6168    1         IF STARS = FATAL# THEN
      157     6169    1            CALL M$ERR;
      158     6170    1           ELSE
      159     6171    1            PS_STEPCC = MAXIMUM ( PS_STEPCC, STARS-1 ) ;
      160     6172
      161     6173    1      IF RETURN_TO_CALLER
      162     6174    1        THEN
      163     6175    1         RETURN;
      164     6176    1        ELSE
      165     6177    1         UNWIND TO PS_BAILOUT;
      166     6178
      167     6179    1   END PSE$ERRMSG;

PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:7    
--  Include file information  --

   XUR_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSE$ERRMSG.

   Procedure PSE$ERRMSG requires 137 words for executable code.
   Procedure PSE$ERRMSG requires 32 words of local(AUTO) storage.

    No errors detected in file PSE$ERRMSG.:E05TSI    .

PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:8    

 Object Unit name= PSE$ERRMSG                                 File name= PSE$ERRMSG.:E05TOU
 UTS= JUL 30 '97 04:34:18.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$SI
    4   DCB   even  none     0      0  F$LOG
    5   DCB   even  none     0      0  M$ME
    6   DCB   even  none     0      0  M$HLPCG
    7  RtLbCm even  none    30     36  PS_FDS
    8  RtLbCm even  none    32     40  PS_SELECT_RPN
    9  RtLbCm even  none    17     21  PS_STATS_RPN
   10  RtLbCm even  none    34     42  PS_STATS_BUCKET
   11   Data  even  none    25     31  PSE$ERRMSG
   12  RoData even  UTS      1      1  PSE$ERRMSG
   13   Proc  even  none   137    211  PSE$ERRMSG
   14  RoData even  none     8     10  PSE$ERRMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    13      0   yes            yes      Std        5  PSE$ERRMSG
    13     50                  yes      Std        5  PSE$GRIPE
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:9    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       7 XUR$ERRMSG
                       nStd      0 X66_AUTO_5
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  M$DO
     M$SI                                  F$LOG                                 M$ME
     M$HLPCG                               PS_BAILOUT                            PS_ERR
     PS_STEPCC                             PS_BUFFER                             PS_STATS$
     B$TCB$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:10   


        1        1        /*M*  PSE$ERRMSG  Print error messages and HELP text for STATS                */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        /*P*  NAME:    PSE$ERRMSG
        9        9              PURPOSE: Routine is used to interface with M$ERRMSG to print
       10       10                       out the text of STATS error messages and HELP
       11       11                       commentary.
       12       12                                                                                      */
       13       13        /*D*  NAME:    PSE$ERRMSG
       14       14              CALL: CALL PSE$ERRMSG ([a], [b], [c], [d], [e]);
       15       15              DESCRIPTION:
       16       16           PSE$ERRMSG is the general error-message and HELP-text
       17       17           handler for the STATS program.  Its five parameters (all optional)
       18       18           are as follows:
       19       19
       20       20              #1 -  if present, should be a UBIN WORD giving the number of a
       21       21                    STATS error (defined in PS_PERR_C); this error number
       22       22                    will be used as the CODE portion of the error message
       23       23                    fetched from the error message file;  an FCG of 'PS' and a
       24       24                    MID of 0 will be used.  If absent, the complete error code from
       25       25                    the ALTRET frame in the TCB will be used.
       26       26
       27       27              #2 -  if present, should be a UBIN WORD giving the "flag level" of
       28       28                    the message to be printed (i.e., the number of asterisks).  If
       29       29                    absent, a flag level of 0 will be assumed.
       30       30
       31       31              #3 -  if present, a BIT(72) vector defining the area to be substituted
       32       32                    into the %U1 portion of the error message.  If absent,  no %U1
       33       33                    substitution will be performed.
       34       34
       35       35              #4 -  if present, a BIT(72) vector defining the area to be substituted
       36       36                    into the %U2 portion of the error message.  If absent,  no %U2
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:11   
       37       37                    substitution will be performed.
       38       38
       39       39              #5 -  if present, a BIT(72) vector defining the area to be substituted
       40       40                    into the %U3 portion of the error message.  If absent,  no %U3
       41       41                    substitution will be performed.
       42       42
       43       43           PSE$ERRMSG calls M$ERRMSG to perform the actual dirty work.  When
       44       44           M$ERRMSG returns, PSE$ERRMSG will check the "flag level" that it
       45       45           was passed (if any) - if the flag level was 4 (indicating a fatal
       46       46           error) PSE$ERRMSG will suicide via M$ERR;  if the flag level was
       47       47           less than 4, PSE$ERRMSG will unwind back to the STATS command
       48       48           interpreter via the PS_BAILOUT variable.
       49       49        */
       50       50        PSE$ERRMSG: PROC (ERR, STARS, FIELD1, FIELD2, FIELD3);

     50 13 000000   000000 700200 xent  PSE$ERRMSG   TSX0  ! X66_AUTO_5
        13 000001   000040 000005                    ZERO    32,5
        13 000002   000045 710000 13                 TRA     s:6122

       51       51        %INCLUDE CP_6;
       52      132        %INCLUDE CP_6_SUBS;
       53      672        %INCLUDE PS_DATA_R;
       54     5968        %INCLUDE XUR_ENTRY;
       55     6000        %B$TCB;
       56     6003        %B$EXCFR;
       57     6021        %B$ALT;
       58     6029        %MACRO TEXTC(NAME=NIL, STCLASS=STATIC);
       59     6030        DCL 1 NAME STCLASS,
       60     6031              2 LEN UBIN BYTE UNAL,
       61     6032              2 CHARS CHAR (31);
       62     6033        %MEND;
       63     6034        %MACRO VECTOR (NAME=NIL);
       64     6035        DCL 1 NAME DALIGNED,
       65     6036              2 BOUND UBIN (20) UNAL,
       66     6037              2 * BIT (16) UNAL,
       67     6038              2 PTR$ PTR ALIGNED;
       68     6039        %MEND;
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:12   
       69     6040    1   DCL ERR UBIN WORD;
       70     6041    1   DCL STARS UBIN WORD;
       71     6042    1   DCL FIELD1 BIT(72) DALIGNED;
       72     6043    1   DCL FIELD2 BIT(72) DALIGNED;
       73     6044    1   DCL FIELD3 BIT(72) DALIGNED;
       74     6045        %TEXTC (NAME=SCRATCH_AREA_1);
       75     6050        %TEXTC (NAME=SCRATCH_AREA_2);
       76     6055        %TEXTC (NAME=SCRATCH_AREA_3);
       77     6060        %VECTOR (NAME=PSE_FIELD1);
       78     6066        %VECTOR (NAME=PSE_FIELD2);
       79     6072        %VECTOR (NAME=PSE_FIELD3);
       80     6078    1   DCL LEN UBIN WORD;
       81     6079    1   DCL TEXT CHAR (LEN) BASED;
       82     6080    1   DCL RETURN_TO_CALLER LOGICAL;
       83     6081    1   DCL ELUCIDATING LOGICAL;
       84     6082    1   DCL B$TCB$ PTR SYMREF;
       85     6083    1   DCL DCB# UBIN STATIC INIT(0);
       86     6084        %EJECT;
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:13   
       87     6085    1   SETUP_VARIABLE_PORTION: PROC (GIVEN_VECTOR, RESULT_VECTOR, SCRATCH);

   6085 13 000003   200024 741300       SETUP_VARIA* STX1  ! RETURN_TO_CALLER+3,,AUTO

       88     6086        %VECTOR (NAME=GIVEN_VECTOR);
       89     6092        %VECTOR (NAME=RESULT_VECTOR);
       90     6098        %TEXTC (NAME=SCRATCH, STCLASS=" ");
       91     6103    2      IF ADDR(GIVEN_VECTOR) = ADDR(NIL)

   6103 13 000004   200025 236100                    LDQ     @GIVEN_VECTOR,,AUTO
        13 000005   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000006   000013 600000 13                 TZE     s:6106
        13 000007   200025 470500                    LDP0    @GIVEN_VECTOR,,AUTO
        13 000010   000000 237100                    LDAQ    0,,PR0
        13 000011   000000 117000 14                 CMPAQ   0
        13 000012   000017 601000 13                 TNZ     s:6110

       92     6104    2       OR GIVEN_VECTOR = VECTOR(NIL)
       93     6105    2        THEN
       94     6106    2         RESULT_VECTOR = VECTOR(NIL);

   6106 13 000013   000000 237000 14                 LDAQ    0
        13 000014   200026 470500                    LDP0    @RESULT_VECTOR,,AUTO
        13 000015   000000 757100                    STAQ    0,,PR0
        13 000016   000043 710000 13                 TRA     s:6117

       95     6107
       96     6108    3        ELSE DO;

       97     6109
       98     6110    3         SCRATCH.LEN = GIVEN_VECTOR.BOUND + 1;

   6110 13 000017   000000 236100                    LDQ     0,,PR0
        13 000020   000020 772000                    QRL     16
        13 000021   000001 036007                    ADLQ    1,DL
        13 000022   200030 756100                    STQ     @SCRATCH+1,,AUTO
        13 000023   200027 471500                    LDP1    @SCRATCH,,AUTO
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:14   
        13 000024   000100 101500                    MRL     fill='000'O
        13 000025   200030 000004                    ADSC9   @SCRATCH+1,,AUTO         cn=0,n=4
        13 000026   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

       99     6111
      100     6112    3         LEN = SCRATCH.LEN;

   6112 13 000027   000100 101500                    MRL     fill='000'O
        13 000030   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
        13 000031   200020 000004                    ADSC9   LEN,,AUTO                cn=0,n=4

      101     6113    3         SCRATCH.CHARS = GIVEN_VECTOR.PTR$ -> TEXT;

   6113 13 000032   000001 473500                    LDP3    1,,PR0
        13 000033   200020 720100                    LXL0    LEN,,AUTO
        13 000034   040100 100540                    MLR     fill='040'O
        13 000035   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
        13 000036   100000 200037                    ADSC9   0,,PR1                   cn=1,n=31

      102     6114    3         RESULT_VECTOR = VECTOR(SCRATCH);

   6114 13 000037   000002 235000 14                 LDA     2
        13 000040   200027 236100                    LDQ     @SCRATCH,,AUTO
        13 000041   200026 473500                    LDP3    @RESULT_VECTOR,,AUTO
        13 000042   300000 757100                    STAQ    0,,PR3

      103     6115    3         END;

      104     6116
      105     6117    2      RETURN;

   6117 13 000043   200024 221300                    LDX1  ! RETURN_TO_CALLER+3,,AUTO
        13 000044   000001 702211                    TSX2  ! 1,X1

      106     6118
      107     6119    2   END SETUP_VARIABLE_PORTION;
      108     6120        %EJECT;
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:15   
      109     6121
      110     6122    1      RETURN_TO_CALLER = %NO#;

   6122 13 000045   200021 450100                    STZ     RETURN_TO_CALLER,,AUTO

      111     6123    1      RETURN_TO_CALLER = %NO#;

   6123 13 000046   200021 450100                    STZ     RETURN_TO_CALLER,,AUTO

      112     6124    1      GOTO SETUP_THE_FIELDS;

   6124 13 000047   000054 710000 13                 TRA     SETUP_THE_FIELDS

      113     6125
      114     6126
      115     6127    1   PSE$GRIPE: ENTRY (ERR, STARS, FIELD1, FIELD2, FIELD3);

   6127 13 000050   000000 700200 xent  PSE$GRIPE    TSX0  ! X66_AUTO_5
        13 000051   000040 000005                    ZERO    32,5

      116     6128
      117     6129        /*D*  NAME:    PSE$GRIPE
      118     6130              DESCRIPTION:  PSE$GRIPE is like PSE$ERRMSG except that it returns
      119     6131                       to the caller after printing the error message instead of
      120     6132                       unwinding to PS_BAILOUT.
      121     6133                                                                                      */
      122     6134
      123     6135    1      RETURN_TO_CALLER = %YES#;

   6135 13 000052   400000 236003                    LDQ     -131072,DU
        13 000053   200021 756100                    STQ     RETURN_TO_CALLER,,AUTO

   6135 13 000054                       SETUP_THE_F* null
      124     6136
      125     6137    1   SETUP_THE_FIELDS: ;
      126     6138
      127     6139    1      CALL SETUP_VARIABLE_PORTION (FIELD1, PSE_FIELD1, SCRATCH_AREA_1);
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:16   

   6139 13 000054   000003 236000 14                 LDQ     3
        13 000055   200027 756100                    STQ     @RESULT_VECTOR+1,,AUTO
        13 000056   200012 630500                    EPPR0   PSE_FIELD1,,AUTO
        13 000057   200026 450500                    STP0    @GIVEN_VECTOR+1,,AUTO
        13 000060   200005 236100                    LDQ     @FIELD1,,AUTO
        13 000061   200025 756100                    STQ     RETURN_TO_CALLER+4,,AUTO
        13 000062   000003 701000 13                 TSX1    SETUP_VARIABLE_PORTION
        13 000063   000000 011000                    NOP     0

      128     6140    1      CALL SETUP_VARIABLE_PORTION (FIELD2, PSE_FIELD2, SCRATCH_AREA_2);

   6140 13 000064   000004 236000 14                 LDQ     4
        13 000065   200027 756100                    STQ     @RESULT_VECTOR+1,,AUTO
        13 000066   200014 630500                    EPPR0   PSE_FIELD2,,AUTO
        13 000067   200026 450500                    STP0    @GIVEN_VECTOR+1,,AUTO
        13 000070   200006 236100                    LDQ     @FIELD2,,AUTO
        13 000071   200025 756100                    STQ     RETURN_TO_CALLER+4,,AUTO
        13 000072   000003 701000 13                 TSX1    SETUP_VARIABLE_PORTION
        13 000073   000000 011000                    NOP     0

      129     6141    1      CALL SETUP_VARIABLE_PORTION (FIELD3, PSE_FIELD3, SCRATCH_AREA_3);

   6141 13 000074   000005 236000 14                 LDQ     5
        13 000075   200027 756100                    STQ     @RESULT_VECTOR+1,,AUTO
        13 000076   200016 630500                    EPPR0   PSE_FIELD3,,AUTO
        13 000077   200026 450500                    STP0    @GIVEN_VECTOR+1,,AUTO
        13 000100   200007 236100                    LDQ     @FIELD3,,AUTO
        13 000101   200025 756100                    STQ     RETURN_TO_CALLER+4,,AUTO
        13 000102   000003 701000 13                 TSX1    SETUP_VARIABLE_PORTION
        13 000103   000000 011000                    NOP     0

      130     6142
      131     6143    1      IF ADDR(ERR)=ADDR(NIL)

   6143 13 000104   200003 236100                    LDQ     @ERR,,AUTO
        13 000105   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:17   
        13 000106   000124 601000 13                 TNZ     s:6152

      132     6144    1        THEN
      133     6145    1         IF B$TCB$ -> B$TCB.ALT$ = ADDR(NIL)

   6145 13 000107   000000 470400 xsym               LDP0    B$TCB$
        13 000110   000000 236100                    LDQ     0,,PR0
        13 000111   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000112   000115 601000 13                 TNZ     s:6149

      134     6146    1           THEN
      135     6147    1            PS_ERR = '0'B;

   6147 13 000113   000000 450000 xsym               STZ     PS_ERR
        13 000114   000142 710000 13                 TRA     OUTPUT_THE_MESSAGE

      136     6148    2           ELSE DO;

      137     6149    2            PS_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   6149 13 000115   000000 471500                    LDP1    0,,PR0
        13 000116   100102 236100                    LDQ     66,,PR1
        13 000117   000000 756000 xsym               STQ     PS_ERR

      138     6150    2            DCB# = B$TCB$->B$TCB.ALT$->B$ALT.DCB#;

   6150 13 000120   000000 471500                    LDP1    0,,PR0
        13 000121   100101 235100                    LDA     65,,PR1
        13 000122   000030 755000 11                 STA     DCB#

      139     6151    2            END;

   6151 13 000123   000142 710000 13                 TRA     OUTPUT_THE_MESSAGE

      140     6152    1        ELSE IF ERR < 9999

   6152 13 000124   200003 470500                    LDP0    @ERR,,AUTO
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:18   
        13 000125   000000 235100                    LDA     0,,PR0
        13 000126   023417 115007                    CMPA    9999,DL
        13 000127   000140 603000 13                 TRC     s:6160

      141     6153    2           THEN DO;

      142     6154
      143     6155    2            PS_ERR = '202300000000'O;

   6155 13 000130   000000 236000 12                 LDQ     0
        13 000131   000000 756000 xsym               STQ     PS_ERR

      144     6156    2            PS_ERR.CODE = ERR;

   6156 13 000132   000000 236100                    LDQ     0,,PR0
        13 000133   000003 736000                    QLS     3
        13 000134   000000 676000 xsym               ERQ     PS_ERR
        13 000135   377770 376007                    ANQ     131064,DL
        13 000136   000000 656000 xsym               ERSQ    PS_ERR

      145     6157    2            END;

   6157 13 000137   000142 710000 13                 TRA     OUTPUT_THE_MESSAGE

      146     6158
      147     6159    1           ELSE
      148     6160    1            PS_ERR = BINBIT (ERR, 36);

   6160 13 000140   000000 236100                    LDQ     0,,PR0
        13 000141   000000 756000 xsym               STQ     PS_ERR

      149     6161
      150     6162
      151     6163
      152     6164    1   OUTPUT_THE_MESSAGE:
      153     6165    1      CALL XUR$ERRMSG (PS_ERR, DCB#, , PSE_FIELD1, PSE_FIELD2, PSE_FIELD3, STARS);

PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:19   
   6165 13 000142   200004 236100       OUTPUT_THE_* LDQ     @STARS,,AUTO
        13 000143   200036 756100                    STQ     @SCRATCH+7,,AUTO
        13 000144   200016 630500                    EPPR0   PSE_FIELD3,,AUTO
        13 000145   200035 450500                    STP0    @SCRATCH+6,,AUTO
        13 000146   200014 631500                    EPPR1   PSE_FIELD2,,AUTO
        13 000147   200034 451500                    STP1    @SCRATCH+5,,AUTO
        13 000150   200012 633500                    EPPR3   PSE_FIELD1,,AUTO
        13 000151   200033 453500                    STP3    @SCRATCH+4,,AUTO
        13 000152   000001 236000 xsym               LDQ     B_VECTNIL+1
        13 000153   200032 756100                    STQ     @SCRATCH+3,,AUTO
        13 000154   000006 237000 14                 LDAQ    6
        13 000155   200030 757100                    STAQ    @SCRATCH+1,,AUTO
        13 000156   200030 630500                    EPPR0   @SCRATCH+1,,AUTO
        13 000157   000025 631400 xsym               EPPR1   B_VECTNIL+21
        13 000160   000000 701000 xent               TSX1    XUR$ERRMSG
        13 000161   000000 011000                    NOP     0

      154     6166
      155     6167    1      IF ADDR(STARS)~=ADDR(NIL) THEN

   6167 13 000162   200004 236100                    LDQ     @STARS,,AUTO
        13 000163   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000164   000203 600000 13                 TZE     s:6173

      156     6168    1         IF STARS = FATAL# THEN

   6168 13 000165   200004 470500                    LDP0    @STARS,,AUTO
        13 000166   000000 235100                    LDA     0,,PR0
        13 000167   000004 115007                    CMPA    4,DL
        13 000170   000174 601000 13                 TNZ     s:6171

      157     6169    1            CALL M$ERR;

   6169 13 000171   000002 713400                    CLIMB   err
        13 000172   000000 401760                    pmme    nvectors=0
        13 000173   000203 710000 13                 TRA     s:6173

PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:20   
      158     6170    1           ELSE
      159     6171    1            PS_STEPCC = MAXIMUM ( PS_STEPCC, STARS-1 ) ;

   6171 13 000174   000000 236100                    LDQ     0,,PR0
        13 000175   000001 136007                    SBLQ    1,DL
        13 000176   000201 604000 13                 TMI     s:6171+5
        13 000177   000000 116000 xsym               CMPQ    PS_STEPCC
        13 000200   000202 603000 13                 TRC     s:6171+6
        13 000201   000000 236000 xsym               LDQ     PS_STEPCC
        13 000202   000000 756000 xsym               STQ     PS_STEPCC

      160     6172
      161     6173    1      IF RETURN_TO_CALLER

   6173 13 000203   200021 234100                    SZN     RETURN_TO_CALLER,,AUTO
        13 000204   000206 605000 13                 TPL     s:6177

      162     6174    1        THEN
      163     6175    1         RETURN;

   6175 13 000205   000000 702200 xent               TSX2  ! X66_ARET

      164     6176    1        ELSE
      165     6177    1         UNWIND TO PS_BAILOUT;

   6177 13 000206   000000 237200 xsym               LDAQ  ! PS_BAILOUT
        13 000207   000000 700200 xent               TSX0  ! X66_AUNWIND
        13 000210   000000 000200                    ZERO    0,128
      166     6178
      167     6179    1   END PSE$ERRMSG;

PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:21   
--  Include file information  --

   XUR_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSE$ERRMSG.
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:22   

 **** Variables and constants ****

  ****  Section 011  Data  PSE$ERRMSG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    30-0-0/w UBIN        r     1 DCB#                       0-0-0/c STRC(288)   r     1 SCRATCH_AREA_1
    10-0-0/c STRC(288)   r     1 SCRATCH_AREA_2            20-0-0/c STRC(288)   r     1 SCRATCH_AREA_3

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ERR                       5-0-0/w PTR         r     1 @FIELD1
     6-0-0/w PTR         r     1 @FIELD2                    7-0-0/w PTR         r     1 @FIELD3
    25-0-0/w PTR         r     1 @GIVEN_VECTOR             26-0-0/w PTR         r     1 @RESULT_VECTOR
    27-0-0/w PTR         r     1 @SCRATCH                   4-0-0/w PTR         r     1 @STARS
    *0-0-0/w UBIN        r     1 ERR                       *0-0-0/d BIT (72)    r     1 FIELD1
    *0-0-0/d BIT (72)    r     1 FIELD2                    *0-0-0/d BIT (72)    r     1 FIELD3
    *0-0-0/d STRC(72)    r     1 GIVEN_VECTOR              20-0-0/w UBIN        r     1 LEN
    12-0-0/d STRC(72)    r     1 PSE_FIELD1                14-0-0/d STRC(72)    r     1 PSE_FIELD2
    16-0-0/d STRC(72)    r     1 PSE_FIELD3                *0-0-0/d STRC(72)    r     1 RESULT_VECTOR
    21-0-0/b BIT         r     1 RETURN_TO_CALLER          *0-0-0/c STRC(288)   r     1 SCRATCH
    *0-0-0/w UBIN        r     1 STARS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/d REMB        r     1 PS_BAILOUT
     0-0-0/c CHAR(140)   r     1 PS_BUFFER                  0-0-0/w STRC        r     1 PS_ERR
     0-0-0/w PTR         r     1 PS_STATS$                  0-0-0/w UBIN        r     1 PS_STEPCC

  ****  BASED and DCB variables  ****
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:23   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0N  NULL        r     1 M$LO                       0-0-0/c ACHR        r     1 TEXT
     0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure PSE$ERRMSG requires 137 words for executable code.
   Procedure PSE$ERRMSG requires 32 words of local(AUTO) storage.

    No errors detected in file PSE$ERRMSG.:E05TSI    .
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:24   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:25   
          MINI XREF LISTING

B$ALT.CODE
      6023**DCL      6023--REDEF    6024--REDEF    6024--REDEF
B$ALT.DCB#
      6024**DCL      6150>>ASSIGN
B$ALT.ERR
      6024**DCL      6149>>ASSIGN
B$ALT.ERR.ERR#
      6025**DCL      6025--REDEF
B$ALT.EVID
      6024**DCL      6024--REDEF    6024--REDEF
B$EXCFR.ASL
      6004**DCL      6004--REDEF
B$EXCFR.ERR.ERR#
      6018**DCL      6018--REDEF
B$EXCFR.EVID
      6017**DCL      6017--REDEF    6018--REDEF
B$EXCFR.IR
      6005**DCL      6005--REDEF
B$EXCFR.PREVSZ
      6004**DCL      6004--REDEF
B$EXCFR.SUBC
      6016**DCL      6016--REDEF    6017--REDEF    6017--REDEF
B$TCB.ALT$
      6001**DCL      6145>>IF       6149>>ASSIGN   6150>>ASSIGN
B$TCB$
      6082**DCL      6145>>IF       6149>>ASSIGN   6150>>ASSIGN
DCB#
      6083**DCL      6150<<ASSIGN   6165<>CALL
ERR
      6040**DCL        50--PROC     6127--ENTRY    6143--IF       6152>>IF       6156>>ASSIGN   6160>>ASSIGN
FIELD1
      6042**DCL        50--PROC     6127--ENTRY    6139<>CALL
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:26   
FIELD2
      6043**DCL        50--PROC     6127--ENTRY    6140<>CALL
FIELD3
      6044**DCL        50--PROC     6127--ENTRY    6141<>CALL
GIVEN_VECTOR IN PROCEDURE SETUP_VARIABLE_PORTION
      6087**DCL      6085--PROC     6103--IF       6103>>IF
GIVEN_VECTOR.BOUND IN PROCEDURE SETUP_VARIABLE_PORTION
      6088**DCL      6110>>ASSIGN
GIVEN_VECTOR.PTR$ IN PROCEDURE SETUP_VARIABLE_PORTION
      6090**DCL      6113>>ASSIGN
LEN
      6078**DCL      6079--IMP-SIZ  6112<<ASSIGN   6113>>ASSIGN
M$ERR
        72**DCL-ENT  6169--CALL
PSE_FIELD1
      6061**DCL      6139<>CALL     6165<>CALL
PSE_FIELD2
      6067**DCL      6140<>CALL     6165<>CALL
PSE_FIELD3
      6073**DCL      6141<>CALL     6165<>CALL
PS_BAILOUT
      5501**DCL      6177>>UNWIND
PS_BUFFER
      5503**DCL      5538--DCLINIT  5540--DCLINIT
PS_COLLECT.CALCNT
      5658**DCL      5658--REDEF
PS_COLLECT.USRSRV
      5655**DCL      5656--REDEF
PS_ERR
      5501**DCL      6147<<ASSIGN   6149<<ASSIGN   6155<<ASSIGN   6160<<ASSIGN   6165<>CALL
PS_ERR.CODE
      5502**DCL      6156<<ASSIGN
PS_HLPCGBUF.DSPMSK
      5915**DCL      5921--REDEF
PS_HLPCGBUF.SLCMSK
      5956**DCL      5963--REDEF
PL6.E3A0      #001=PSE$ERRMSG File=PSE$ERRMSG.:E05TSI                            WED 07/30/97 04:34 Page:27   
PS_OLD_COLLECT.CALCNT
      5662**DCL      5663--REDEF
PS_OLD_COLLECT.USRSRV
      5660**DCL      5660--REDEF
PS_STATS$
      5664**DCL      5666--IMP-PTR
PS_STEPCC
      5502**DCL      6171<<ASSIGN   6171>>ASSIGN
RESULT_VECTOR IN PROCEDURE SETUP_VARIABLE_PORTION
      6093**DCL      6085--PROC     6106<<ASSIGN   6114<<ASSIGN
RETURN_TO_CALLER
      6080**DCL      6122<<ASSIGN   6123<<ASSIGN   6135<<ASSIGN   6173>>IF
SCRATCH IN PROCEDURE SETUP_VARIABLE_PORTION
      6099**DCL      6085--PROC     6114--ASSIGN
SCRATCH.CHARS IN PROCEDURE SETUP_VARIABLE_PORTION
      6101**DCL      6113<<ASSIGN
SCRATCH.LEN IN PROCEDURE SETUP_VARIABLE_PORTION
      6100**DCL      6110<<ASSIGN   6112>>ASSIGN
SCRATCH_AREA_1
      6046**DCL      6139<>CALL
SCRATCH_AREA_2
      6051**DCL      6140<>CALL
SCRATCH_AREA_3
      6056**DCL      6141<>CALL
SETUP_THE_FIELDS
      6135**LABEL    6124--GOTO
SETUP_VARIABLE_PORTION
      6085**PROC     6139--CALL     6140--CALL     6141--CALL
STARS
      6041**DCL        50--PROC     6127--ENTRY    6165<>CALL     6167--IF       6168>>IF       6171>>ASSIGN
TEXT
      6079**DCL      6113>>ASSIGN
TEXTC.LEN
      5668**DCL      5668--IMP-SIZ
XUR$ERRMSG
      5983**DCL-ENT  6165--CALL
