VERSION A02

PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:1    
        1        1        /*M*    TCM$ALEX1       Part 1 of ALEX routines for NETSEND         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        TCM$ALEX_READ: PROC(BUF_, TIME, EOMTABLE, EOMCHAR, ARS, MERR, TIMEFLAG) ALTRET;
        8        8    1   DCL 1 BUF_,
        9        9    1        2 VSIZE# UBIN(20) UNAL,
       10       10    1        2 * BIT(16) UNAL,
       11       11    1        2 PTR$ PTR;
       12       12    1   DCL TIME SBIN;
       13       13    1   DCL TBIN UBIN STATIC;
       14       14    1   DCL BIT9 BIT(9) BASED UNAL;
       15       15    1   DCL EOMTABLE(0:287) BIT(1) UNAL;
       16       16    1   DCL EOMCHAR CHAR(1);
       17       17    1   DCL EOMUBIN REDEF EOMCHAR UBIN(9) UNAL;
       18       18    1   DCL ARS UBIN;
       19       19    1   DCL MERR UBIN;
       20       20    1   DCL TIMEFLAG BIT(1) UNAL;
       21       21    1   DCL M$ PTR STATIC;
       22       22    1   DCL P$ PTR STATIC;
       23       23    1   DCL MB UBIN STATIC;
       24       24    1   DCL TBUF CHAR(1280) STATIC;
       25       25        %INCLUDE CP_6;
       26      106    1   DCL BLEN UBIN STATIC;
       27      107    1   DCL BUFC CHAR(BLEN) BASED;
       28      108    1   DCL CHAR1 CHAR(1) BASED;
       29      109    1   DCL UBIN9 UBIN(9) UNAL BASED;
       30      110    1   DCL TCM_READCGBUF CHAR(256) SYMREF;
       31      111    1   DCL TCM_INT BIT(1) ALIGNED SYMREF;
       32      112    1   DCL TCM_NEEDREAD BIT(1) ALIGNED SYMREF;
       33      113    1   DCL TCM_COMMAND BIT(1) ALIGNED SYMREF;
       34      114    1   DCL TCM_MODEMBUF CHAR(1280) SYMREF;
       35      115    1   DCL TCM_MBLEN UBIN SYMREF;
       36      116    1   DCL TIMEOUT SBIN;
       37      117    1   DCL I UBIN STATIC;
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:2    
       38      118    1   dcl REMAINING_TIME sbin static;
       39      119        %FPT_READ (FPTN=TCM_READCG,STCLASS=SYMREF);
       40      158        %F$DCB;
       41      215    1   DCL F$CG DCB;
       42      216    1   DCL F$CG$ PTR SYMREF;
       43      217        %FPT_WAIT(FPTN=WAIT_A_WHILE, UETIME=REMAINING_TIME);
       44      231    1        TIMEOUT=TIME;
       45      232    1        IF ADDR(EOMUBIN) ~= ADDR(NIL) THEN EOMUBIN = 0;
       46      233    1        ARS=0;
       47      234    1        IF ADDR(TIMEFLAG)~=ADDR(NIL) THEN TIMEFLAG='0'B;
       48      235    1        P$=BUF_.PTR$;
       49      236    1        M$=ADDR(TCM_MODEMBUF);
       50      237    1   LOOP:
       51      238    1        IF TCM_NEEDREAD THEN CALL M$READ(TCM_READCG);
       52      239    1        WAIT_A_WHILE.V.UNITS# = maximum(minimum(TIMEOUT,15),1);
       53      240    1        REMAINING_TIME = maximum(TIMEOUT - 1, 0);
       54      241    2        do inhibit;
       55      242    2           IF TCM_MBLEN=0
       56      243    3           THEN DO;
       57      244    3                CALL M$WAIT(WAIT_A_WHILE);
       58      245    3                GOTO LOOPTIME;
       59      246    3                END;
       60      247    2        end;
       61      248    1        MB=TCM_MBLEN; /* TCM_MBLEN MAY BE CHANGED BY EVENT ROUTINE */
       62      249    2        DO I=0 TO MB-1;
       63      250    2        IF ADDR(EOMTABLE) ~=ADDR(NIL)
       64      251    3        THEN DO;            /* EOM CHECK CODE */
       65      252    3             TBIN=BITBIN(M$->BIT9& '00111111'B);
       66      253    3             IF EOMTABLE(TBIN+1+TBIN/8)
       67      254    4             THEN DO;  /* A HIT */
       68      255    4                  EOMCHAR=M$->CHAR1;
       69      256    4                  M$=PINCRC(M$,1);
       70      257    4                  I=I+1;
       71      258    4                  GOTO OUT;
       72      259    4                  END;
       73      260    3             END;      /* ELSE JUST STICK IT IN */
       74      261    2        ARS=ARS+1;     /* COUNT TOTAL CHARS MOVED */
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:3    
       75      262    2        P$->CHAR1 = M$->CHAR1;
       76      263    2        P$=PINCRC(P$,1);
       77      264    2        M$=PINCRC(M$,1);
       78      265    3        IF ARS=BUF_.VSIZE#+1 THEN DO;
       79      266        /* NOW WE'VE GOT ALL THE CURRECT BUFFER CLEARED, RESET TCM_MBLEN */
       80      267    3             GOTO OUT;
       81      268    3             END;
       82      269    2        END;      /* DO I */
       83      270        /* */
       84      271        /* NOW WE'VE GOT ALL THE CURRECT BUFFER CLEARED, RESET TCM_MBLEN */
       85      272        /* CHECK FOR TIMEOUT AND GO BACK TO TOP */
       86      273    1   LOOPEND:
       87      274    2        DO INHIBIT;
       88      275    2        IF MB=TCM_MBLEN
       89      276    3        THEN DO;
       90      277    3             TCM_MBLEN=0;
       91      278    3             M$=ADDR(TCM_MODEMBUF);
       92      279    3             END;
       93      280    3        ELSE DO;
       94      281    3             BLEN=TCM_MBLEN-MB;
       95      282    3             TBUF=M$->BUFC;
       96      283    3             TCM_MODEMBUF=TBUF;
       97      284    3             M$=ADDR(TCM_MODEMBUF);
       98      285    3             TCM_MBLEN=BLEN;
       99      286    3             END;
      100      287    2        END; /* DO INHIBIT */
      101      288    1   LOOPTIME:
      102      289    1        if TIMEOUT ~= -1 then TIMEOUT=maximum(TIMEOUT-(WAIT_A_WHILE.V.UNITS# -
               289                 REMAINING_TIME),0);
      103      290    1        IF TIMEOUT=0 THEN GOTO TIMED;
      104      291    1        GOTO LOOP;
      105      292    1   OUT:      /* COME HERE WHEN BUF.SIZE OR EOM HIT */
      106      293                  /* ADJUST TCM_MODEMBUF */
      107      294    2        DO INHIBIT;
      108      295    2        BLEN=TCM_MBLEN-I;
      109      296    2        TBUF=M$->BUFC;      /* AVOID OVERLAP*/
      110      297    2        TCM_MODEMBUF=TBUF;
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:4    
      111      298    2        TCM_MBLEN=BLEN;
      112      299    2        MERR=0;
      113      300    2        END; /* DO INHIBIT */
      114      301    1        if addr(TIMEFLAG)~=addr(NIL) then TIMEFLAG='0'B;
      115      302    1        RETURN;
      116      303    1   TIMED:
      117      304    1        IF ADDR(TIMEFLAG)~=ADDR(NIL) THEN TIMEFLAG='1'B;
      118      305    1        RETURN;
      119      306    1   END TCM$ALEX_READ;
      120      307        %EOD;

PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:5    
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure TCM$ALEX_READ.

   Procedure TCM$ALEX_READ requires 180 words for executable code.
   Procedure TCM$ALEX_READ requires 14 words of local(AUTO) storage.

PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:6    

 Object Unit name= TCM$ALEX_READ                              File name= TCM$ALEX1.:TCA2TOU
 UTS= NOV 16 '97 14:15:19.92 SUN                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   334    516  TCM$ALEX_READ
    1   DCB   even  none     0      0  M$UC
    2   DCB   even  none     0      0  F$CG
    3   Proc  even  none   180    264  TCM$ALEX_READ
    4  RoData even  none     1      1  TCM$ALEX_READ

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        7  TCM$ALEX_READ

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TCM_NEEDREAD                          TCM_MODEMBUF
     TCM_MBLEN                             TCM_READCG                            F$CG
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:8    


        1        1        /*M*    TCM$ALEX1       Part 1 of ALEX routines for NETSEND         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        TCM$ALEX_READ: PROC(BUF_, TIME, EOMTABLE, EOMCHAR, ARS, MERR, TIMEFLAG) ALTRET;

      7  3 000000   000000 700200 xent  TCM$ALEX_RE* TSX0  ! X66_AUTO_N
         3 000001   000016 000007                    ZERO    14,7

        8        8    1   DCL 1 BUF_,
        9        9    1        2 VSIZE# UBIN(20) UNAL,
       10       10    1        2 * BIT(16) UNAL,
       11       11    1        2 PTR$ PTR;
       12       12    1   DCL TIME SBIN;
       13       13    1   DCL TBIN UBIN STATIC;
       14       14    1   DCL BIT9 BIT(9) BASED UNAL;
       15       15    1   DCL EOMTABLE(0:287) BIT(1) UNAL;
       16       16    1   DCL EOMCHAR CHAR(1);
       17       17    1   DCL EOMUBIN REDEF EOMCHAR UBIN(9) UNAL;
       18       18    1   DCL ARS UBIN;
       19       19    1   DCL MERR UBIN;
       20       20    1   DCL TIMEFLAG BIT(1) UNAL;
       21       21    1   DCL M$ PTR STATIC;
       22       22    1   DCL P$ PTR STATIC;
       23       23    1   DCL MB UBIN STATIC;
       24       24    1   DCL TBUF CHAR(1280) STATIC;
       25       25        %INCLUDE CP_6;
       26      106    1   DCL BLEN UBIN STATIC;
       27      107    1   DCL BUFC CHAR(BLEN) BASED;
       28      108    1   DCL CHAR1 CHAR(1) BASED;
       29      109    1   DCL UBIN9 UBIN(9) UNAL BASED;
       30      110    1   DCL TCM_READCGBUF CHAR(256) SYMREF;
       31      111    1   DCL TCM_INT BIT(1) ALIGNED SYMREF;
       32      112    1   DCL TCM_NEEDREAD BIT(1) ALIGNED SYMREF;
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:9    
       33      113    1   DCL TCM_COMMAND BIT(1) ALIGNED SYMREF;
       34      114    1   DCL TCM_MODEMBUF CHAR(1280) SYMREF;
       35      115    1   DCL TCM_MBLEN UBIN SYMREF;
       36      116    1   DCL TIMEOUT SBIN;
       37      117    1   DCL I UBIN STATIC;
       38      118    1   dcl REMAINING_TIME sbin static;
       39      119        %FPT_READ (FPTN=TCM_READCG,STCLASS=SYMREF);
       40      158        %F$DCB;
       41      215    1   DCL F$CG DCB;
       42      216    1   DCL F$CG$ PTR SYMREF;
       43      217        %FPT_WAIT(FPTN=WAIT_A_WHILE, UETIME=REMAINING_TIME);
       44      231    1        TIMEOUT=TIME;

    231  3 000002   200004 470500                    LDP0    @TIME,,AUTO
         3 000003   000000 235100                    LDA     0,,PR0
         3 000004   200012 755100                    STA     TIMEOUT,,AUTO

       45      232    1        IF ADDR(EOMUBIN) ~= ADDR(NIL) THEN EOMUBIN = 0;

    232  3 000005   200006 236100                    LDQ     @EOMCHAR,,AUTO
         3 000006   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000007   000014 600000 3                  TZE     s:233

    232  3 000010   200006 471500                    LDP1    @EOMCHAR,,AUTO
         3 000011   000100 101400                    MRL     fill='000'O
         3 000012   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 000013   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

       46      233    1        ARS=0;

    233  3 000014   200007 471500                    LDP1    @ARS,,AUTO
         3 000015   100000 450100                    STZ     0,,PR1

       47      234    1        IF ADDR(TIMEFLAG)~=ADDR(NIL) THEN TIMEFLAG='0'B;

    234  3 000016   200011 236100                    LDQ     @TIMEFLAG,,AUTO
         3 000017   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:10   
         3 000020   000025 600000 3                  TZE     s:235

    234  3 000021   200011 473500                    LDP3    @TIMEFLAG,,AUTO
         3 000022   003100 060400                    CSL     bolr='003'O
         3 000023   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         3 000024   300000 000001                    BDSC    0,,PR3                   by=0,bit=0,n=1

       48      235    1        P$=BUF_.PTR$;

    235  3 000025   200003 473500                    LDP3    @BUF_,,AUTO
         3 000026   300001 236100                    LDQ     1,,PR3
         3 000027   000002 756000 0                  STQ     P$

       49      236    1        M$=ADDR(TCM_MODEMBUF);

    236  3 000030   000000 236000 4                  LDQ     0
         3 000031   000001 756000 0                  STQ     M$

       50      237    1   LOOP:
       51      238    1        IF TCM_NEEDREAD THEN CALL M$READ(TCM_READCG);

    238  3 000032   000000 234000 xsym  LOOP         SZN     TCM_NEEDREAD
         3 000033   000037 605000 3                  TPL     s:239

    238  3 000034   000000 630400 xsym               EPPR0   TCM_READCG
         3 000035   040000 713400                    CLIMB   read
         3 000036   401400 401760                    pmme    nvectors=4

       52      239    1        WAIT_A_WHILE.V.UNITS# = maximum(minimum(TIMEOUT,15),1);

    239  3 000037   000017 236007                    LDQ     15,DL
         3 000040   000043 604000 3                  TMI     s:239+4
         3 000041   200012 116100                    CMPQ    TIMEOUT,,AUTO
         3 000042   000044 604400 3                  TMOZ    s:239+5
         3 000043   200012 236100                    LDQ     TIMEOUT,,AUTO
         3 000044   000001 116007                    CMPQ    1,DL
         3 000045   000047 605000 3                  TPL     s:239+8
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:11   
         3 000046   000001 236007                    LDQ     1,DL
         3 000047   000514 756000 0                  STQ     WAIT_A_WHILE+4

       53      240    1        REMAINING_TIME = maximum(TIMEOUT - 1, 0);

    240  3 000050   200012 236100                    LDQ     TIMEOUT,,AUTO
         3 000051   000001 136007                    SBLQ    1,DL
         3 000052   000000 116003                    CMPQ    0,DU
         3 000053   000055 605000 3                  TPL     s:240+5
         3 000054   000000 236003                    LDQ     0,DU
         3 000055   000506 756000 0                  STQ     REMAINING_TIME

       54      241    2        do inhibit;

       55      242    2           IF TCM_MBLEN=0

    242  3 000056   000000 235200 xsym               LDA   ! TCM_MBLEN
         3 000057   000064 601200 3                  TNZ   ! s:248

       56      243    3           THEN DO;

       57      244    3                CALL M$WAIT(WAIT_A_WHILE);

    244  3 000060   000510 630600 0                  EPPR0 ! WAIT_A_WHILE
         3 000061   020006 713600                    CLIMB ! 8198
         3 000062   400400 401760                    pmme    nvectors=2

       58      245    3                GOTO LOOPTIME;

    245  3 000063   000206 710200 3                  TRA   ! LOOPTIME

       59      246    3                END;
       60      247    2        end;

       61      248    1        MB=TCM_MBLEN; /* TCM_MBLEN MAY BE CHANGED BY EVENT ROUTINE */

    248  3 000064   000003 755000 0                  STA     MB
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:12   

       62      249    2        DO I=0 TO MB-1;

    249  3 000065   000505 450000 0                  STZ     I
         3 000066   000155 710000 3                  TRA     s:269+3

       63      250    2        IF ADDR(EOMTABLE) ~=ADDR(NIL)

    250  3 000067   200005 236100                    LDQ     @EOMTABLE,,AUTO
         3 000070   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000071   000124 600000 3                  TZE     s:261

       64      251    3        THEN DO;            /* EOM CHECK CODE */

       65      252    3             TBIN=BITBIN(M$->BIT9& '00111111'B);

    252  3 000072   000001 470400 0                  LDP0    M$
         3 000073   003100 060500                    CSL     bolr='003'O
         3 000074   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
         3 000075   200014 000044                    BDSC    TIMEOUT+2,,AUTO          by=0,bit=0,n=36
         3 000076   200014 236100                    LDQ     TIMEOUT+2,,AUTO
         3 000077   176000 376003                    ANQ     64512,DU
         3 000100   000033 772000                    QRL     27
         3 000101   000000 756000 0                  STQ     TBIN

       66      253    3             IF EOMTABLE(TBIN+1+TBIN/8)

    253  3 000102   000003 772000                    QRL     3
         3 000103   000000 036000 0                  ADLQ    TBIN
         3 000104   200005 471500                    LDP1    @EOMTABLE,,AUTO
         3 000105   000000 066506                    CMPB    filb='0'B
         3 000106   100000 010001                    BDSC    0,Q,PR1                  by=0,bit=1,n=1
         3 000107   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         3 000110   000124 600000 3                  TZE     s:261

       67      254    4             THEN DO;  /* A HIT */

PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:13   
       68      255    4                  EOMCHAR=M$->CHAR1;

    255  3 000111   200006 473500                    LDP3    @EOMCHAR,,AUTO
         3 000112   040100 100500                    MLR     fill='040'O
         3 000113   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000114   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

       69      256    4                  M$=PINCRC(M$,1);

    256  3 000115   000001 236000 0                  LDQ     M$
         3 000116   200000 036007                    ADLQ    65536,DL
         3 000117   000001 756000 0                  STQ     M$

       70      257    4                  I=I+1;

    257  3 000120   000505 235000 0                  LDA     I
         3 000121   000001 035007                    ADLA    1,DL
         3 000122   000505 755000 0                  STA     I

       71      258    4                  GOTO OUT;

    258  3 000123   000225 710000 3                  TRA     OUT

       72      259    4                  END;
       73      260    3             END;      /* ELSE JUST STICK IT IN */
       74      261    2        ARS=ARS+1;     /* COUNT TOTAL CHARS MOVED */

    261  3 000124   200007 470500                    LDP0    @ARS,,AUTO
         3 000125   000000 235100                    LDA     0,,PR0
         3 000126   000001 035007                    ADLA    1,DL
         3 000127   000000 755100                    STA     0,,PR0

       75      262    2        P$->CHAR1 = M$->CHAR1;

    262  3 000130   000001 471400 0                  LDP1    M$
         3 000131   000002 473400 0                  LDP3    P$
         3 000132   040100 100500                    MLR     fill='040'O
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:14   
         3 000133   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         3 000134   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

       76      263    2        P$=PINCRC(P$,1);

    263  3 000135   000002 236000 0                  LDQ     P$
         3 000136   200000 036007                    ADLQ    65536,DL
         3 000137   000002 756000 0                  STQ     P$

       77      264    2        M$=PINCRC(M$,1);

    264  3 000140   000001 236000 0                  LDQ     M$
         3 000141   200000 036007                    ADLQ    65536,DL
         3 000142   000001 756000 0                  STQ     M$

       78      265    3        IF ARS=BUF_.VSIZE#+1 THEN DO;

    265  3 000143   200003 471500                    LDP1    @BUF_,,AUTO
         3 000144   100000 236100                    LDQ     0,,PR1
         3 000145   000020 772000                    QRL     16
         3 000146   000001 036007                    ADLQ    1,DL
         3 000147   000000 116100                    CMPQ    0,,PR0
         3 000150   000152 601000 3                  TNZ     s:269

       79      266        /* NOW WE'VE GOT ALL THE CURRECT BUFFER CLEARED, RESET TCM_MBLEN */
       80      267    3             GOTO OUT;

    267  3 000151   000225 710000 3                  TRA     OUT

       81      268    3             END;
       82      269    2        END;      /* DO I */

    269  3 000152   000505 235000 0                  LDA     I
         3 000153   000001 035007                    ADLA    1,DL
         3 000154   000505 755000 0                  STA     I
         3 000155   000505 236000 0                  LDQ     I
         3 000156   000003 116000 0                  CMPQ    MB
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:15   
         3 000157   000067 602000 3                  TNC     s:250

       83      270        /* */
       84      271        /* NOW WE'VE GOT ALL THE CURRECT BUFFER CLEARED, RESET TCM_MBLEN */
       85      272        /* CHECK FOR TIMEOUT AND GO BACK TO TOP */
       86      273    1   LOOPEND:
       87      274    2        DO INHIBIT;

    274  3 000160                       LOOPEND      null
       88      275    2        IF MB=TCM_MBLEN

    275  3 000160   000003 236200 0                  LDQ   ! MB
         3 000161   000000 116200 xsym               CMPQ  ! TCM_MBLEN
         3 000162   000167 601200 3                  TNZ   ! s:281

       89      276    3        THEN DO;

       90      277    3             TCM_MBLEN=0;

    277  3 000163   000000 450200 xsym               STZ   ! TCM_MBLEN

       91      278    3             M$=ADDR(TCM_MODEMBUF);

    278  3 000164   000000 236200 4                  LDQ   ! 0
         3 000165   000001 756200 0                  STQ   ! M$

       92      279    3             END;

    279  3 000166   000206 710200 3                  TRA   ! LOOPTIME

       93      280    3        ELSE DO;

       94      281    3             BLEN=TCM_MBLEN-MB;

    281  3 000167   000000 236200 xsym               LDQ   ! TCM_MBLEN
         3 000170   000003 136200 0                  SBLQ  ! MB
         3 000171   000504 756200 0                  STQ   ! BLEN
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:16   

       95      282    3             TBUF=M$->BUFC;

    282  3 000172   000001 470600 0                  LDP0  ! M$
         3 000173   000000 620206                    EAX0  ! 0,QL
         3 000174   040000 100740                    MLR   ! fill='040'O
         3 000175   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         3 000176   000004 002400 0                  ADSC9   TBUF                     cn=0,n=1280

       96      283    3             TCM_MODEMBUF=TBUF;

    283  3 000177   040000 100600                    MLR   ! fill='040'O
         3 000200   000004 002400 0                  ADSC9   TBUF                     cn=0,n=1280
         3 000201   000000 002400 xsym               ADSC9   TCM_MODEMBUF             cn=0,n=1280

       97      284    3             M$=ADDR(TCM_MODEMBUF);

    284  3 000202   000000 236200 4                  LDQ   ! 0
         3 000203   000001 756200 0                  STQ   ! M$

       98      285    3             TCM_MBLEN=BLEN;

    285  3 000204   000504 235200 0                  LDA   ! BLEN
         3 000205   000000 755200 xsym               STA   ! TCM_MBLEN

       99      286    3             END;

      100      287    2        END; /* DO INHIBIT */

      101      288    1   LOOPTIME:
      102      289    1        if TIMEOUT ~= -1 then TIMEOUT=maximum(TIMEOUT-(WAIT_A_WHILE.V.UNITS# -
               289                 REMAINING_TIME),0);

    289  3 000206   200012 235100       LOOPTIME     LDA     TIMEOUT,,AUTO
         3 000207   000027 115000 xsym               CMPA    B_VECTNIL+23
         3 000210   000222 600000 3                  TZE     s:290

PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:17   
    289  3 000211   000514 236000 0                  LDQ     WAIT_A_WHILE+4
         3 000212   000506 136000 0                  SBLQ    REMAINING_TIME
         3 000213   200014 756100                    STQ     TIMEOUT+2,,AUTO
         3 000214   200012 236100                    LDQ     TIMEOUT,,AUTO
         3 000215   200014 136100                    SBLQ    TIMEOUT+2,,AUTO
         3 000216   000000 116003                    CMPQ    0,DU
         3 000217   000221 605000 3                  TPL     s:289+8
         3 000220   000000 236003                    LDQ     0,DU
         3 000221   200012 756100                    STQ     TIMEOUT,,AUTO

      103      290    1        IF TIMEOUT=0 THEN GOTO TIMED;

    290  3 000222   200012 235100                    LDA     TIMEOUT,,AUTO
         3 000223   000254 600000 3                  TZE     TIMED

      104      291    1        GOTO LOOP;

    291  3 000224   000032 710000 3                  TRA     LOOP

      105      292    1   OUT:      /* COME HERE WHEN BUF.SIZE OR EOM HIT */
      106      293                  /* ADJUST TCM_MODEMBUF */
      107      294    2        DO INHIBIT;

    294  3 000225                       OUT          null
      108      295    2        BLEN=TCM_MBLEN-I;

    295  3 000225   000000 236200 xsym               LDQ   ! TCM_MBLEN
         3 000226   000505 136200 0                  SBLQ  ! I
         3 000227   000504 756200 0                  STQ   ! BLEN

      109      296    2        TBUF=M$->BUFC;      /* AVOID OVERLAP*/

    296  3 000230   000001 470600 0                  LDP0  ! M$
         3 000231   000000 620206                    EAX0  ! 0,QL
         3 000232   040000 100740                    MLR   ! fill='040'O
         3 000233   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         3 000234   000004 002400 0                  ADSC9   TBUF                     cn=0,n=1280
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:18   

      110      297    2        TCM_MODEMBUF=TBUF;

    297  3 000235   040000 100600                    MLR   ! fill='040'O
         3 000236   000004 002400 0                  ADSC9   TBUF                     cn=0,n=1280
         3 000237   000000 002400 xsym               ADSC9   TCM_MODEMBUF             cn=0,n=1280

      111      298    2        TCM_MBLEN=BLEN;

    298  3 000240   000504 235200 0                  LDA   ! BLEN
         3 000241   000000 755200 xsym               STA   ! TCM_MBLEN

      112      299    2        MERR=0;

    299  3 000242   200010 471700                    LDP1  ! @MERR,,AUTO
         3 000243   100000 450300                    STZ   ! 0,,PR1

      113      300    2        END; /* DO INHIBIT */

      114      301    1        if addr(TIMEFLAG)~=addr(NIL) then TIMEFLAG='0'B;

    301  3 000244   200011 236100                    LDQ     @TIMEFLAG,,AUTO
         3 000245   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000246   000253 600000 3                  TZE     s:302

    301  3 000247   200011 473500                    LDP3    @TIMEFLAG,,AUTO
         3 000250   003100 060400                    CSL     bolr='003'O
         3 000251   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         3 000252   300000 000001                    BDSC    0,,PR3                   by=0,bit=0,n=1

      115      302    1        RETURN;

    302  3 000253   000000 702200 xent               TSX2  ! X66_ARET

      116      303    1   TIMED:
      117      304    1        IF ADDR(TIMEFLAG)~=ADDR(NIL) THEN TIMEFLAG='1'B;

PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:19   
    304  3 000254   200011 236100       TIMED        LDQ     @TIMEFLAG,,AUTO
         3 000255   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000256   000263 600000 3                  TZE     s:305

    304  3 000257   200011 470500                    LDP0    @TIMEFLAG,,AUTO
         3 000260   003100 060400                    CSL     bolr='003'O
         3 000261   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         3 000262   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1

      118      305    1        RETURN;

    305  3 000263   000000 702200 xent               TSX2  ! X66_ARET

TBUF
 Sect OctLoc
   0     004   ****** ******   ****** ******   ****** ******   ****** ******    ................

WAIT_A_WHILE
 Sect OctLoc
   0     510   000001 777640   000514 006000   000000 777640   000506 006000    ................
   0     514   000000 000000   000000 000001                                    ........

(unnamed)
 Sect OctLoc
   4     000   000000 006000                                                    ....
      119      306    1   END TCM$ALEX_READ;
      120      307        %EOD;

PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:20   
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure TCM$ALEX_READ.
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:21   

 **** Variables and constants ****

  ****  Section 000  Data  TCM$ALEX_READ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   504-0-0/w UBIN        r     1 BLEN                     505-0-0/w UBIN        r     1 I
     1-0-0/w PTR         r     1 M$                         3-0-0/w UBIN        r     1 MB
     2-0-0/w PTR         r     1 P$                       506-0-0/w SBIN        r     1 REMAINING_TIME
     0-0-0/w UBIN        r     1 TBIN                       4-0-0/c CHAR(1280)  r     1 TBUF
   510-0-0/d STRC(216)   r     1 WAIT_A_WHILE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 @ARS                       3-0-0/w PTR         r     1 @BUF_
     6-0-0/w PTR         r     1 @EOMCHAR                   5-0-0/w PTR         r     1 @EOMTABLE
    10-0-0/w PTR         r     1 @MERR                      4-0-0/w PTR         r     1 @TIME
    11-0-0/w PTR         r     1 @TIMEFLAG                 *0-0-0/w UBIN        r     1 ARS
    *0-0-0/w STRC(72)    r     1 BUF_                      *0-0-0/c CHAR        r     1 EOMCHAR
    *0-0-0/b BIT         r     1 EOMTABLE(0:287)           *0-0-0/c UBIN(9)     r     1 EOMUBIN
    *0-0-0/w UBIN        r     1 MERR                      *0-0-0/w SBIN        r     1 TIME
    *0-0-0/b BIT         r     1 TIMEFLAG                  12-0-0/w SBIN        r     1 TIMEOUT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 TCM_MBLEN                  0-0-0/c CHAR(1280)  r     1 TCM_MODEMBUF
     0-0-0/w BIT         r     1 TCM_NEEDREAD               0-0-0/d STRC(504)   r     1 TCM_READCG

  ****  BASED and DCB variables  ****

PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:22   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT (9)     r     1 BIT9                       0-0-0/c ACHR        r     1 BUFC
     0-0-0/c CHAR        r     1 CHAR1                      0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure TCM$ALEX_READ requires 180 words for executable code.
   Procedure TCM$ALEX_READ requires 14 words of local(AUTO) storage.
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:23   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:24   
          MINI XREF LISTING

ARS
        18**DCL         7--PROC      233<<ASSIGN    261<<ASSIGN    261>>ASSIGN    265>>IF
BIT9
        14**DCL       252>>ASSIGN
BLEN
       106**DCL       107--IMP-SIZ   281<<ASSIGN    282>>ASSIGN    285>>ASSIGN    295<<ASSIGN    296>>ASSIGN
       298>>ASSIGN
BUFC
       107**DCL       282>>ASSIGN    296>>ASSIGN
BUF_
         8**DCL         7--PROC
BUF_.PTR$
        11**DCL       235>>ASSIGN
BUF_.VSIZE#
         9**DCL       265>>IF
CHAR1
       108**DCL       255>>ASSIGN    262<<ASSIGN    262>>ASSIGN
EOMCHAR
        16**DCL         7--PROC       17--REDEF     255<<ASSIGN
EOMTABLE
        15**DCL         7--PROC      250--IF        253>>IF
EOMUBIN
        17**DCL       232--IF        232<<ASSIGN
F$DCB.ACTPOS
       191**DCL       191--REDEF
F$DCB.ARS#
       165**DCL       165--REDEF
F$DCB.ATTR
       184**DCL       185--REDEF
F$DCB.BORROW
       199**DCL       199--REDEF     199--REDEF     199--REDEF
F$DCB.DCBNAME.L
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:25   
       213**DCL       213--IMP-SIZ
F$DCB.EOMCHAR#
       169**DCL       169--REDEF
F$DCB.FLDID
       194**DCL       194--REDEF
F$DCB.FORM$
       188**DCL       188--REDEF
F$DCB.FSECT
       204**DCL       204--REDEF
F$DCB.FSN#
       181**DCL       181--REDEF     181--REDEF     182--REDEF
F$DCB.HEADER$
       187**DCL       187--REDEF
F$DCB.IXTNSIZE#
       185**DCL       185--REDEF
F$DCB.LASTSTA$
       174**DCL       174--REDEF
F$DCB.LVL
       200**DCL       200--REDEF
F$DCB.NAME#.C
       175**DCL       175--REDEF
F$DCB.NOEOF
       197**DCL       197--REDEF
F$DCB.NRECS#
       186**DCL       186--REDEF
F$DCB.NRECX
       205**DCL       205--REDEF
F$DCB.OHDR
       197**DCL       197--REDEF
F$DCB.ORG#
       180**DCL       180--REDEF
F$DCB.PRECNO
       203**DCL       203--REDEF
F$DCB.RCSZ
       209**DCL       209--REDEF
F$DCB.RES#
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:26   
       176**DCL       176--REDEF
F$DCB.SETX
       188**DCL       188--REDEF
F$DCB.TAB$
       188**DCL       188--REDEF
F$DCB.TDA
       202**DCL       203--REDEF
F$DCB.WSN#
       176**DCL       176--REDEF
I
       117**DCL       249<<DOINDEX   257<<ASSIGN    257>>ASSIGN    295>>ASSIGN
LOOP
       238**LABEL     291--GOTO
LOOPTIME
       289**LABEL     245--GOTO
M$
        21**DCL       236<<ASSIGN    252>>ASSIGN    255>>ASSIGN    256<<ASSIGN    256>>ASSIGN    262>>ASSIGN
       264<<ASSIGN    264>>ASSIGN    278<<ASSIGN    282>>ASSIGN    284<<ASSIGN    296>>ASSIGN
M$READ
        35**DCL-ENT   238--CALL
M$WAIT
        92**DCL-ENT   244--CALL
MB
        23**DCL       248<<ASSIGN    249>>DOINDEX   275>>IF        281>>ASSIGN
MERR
        19**DCL         7--PROC      299<<ASSIGN
OUT
       294**LABEL     258--GOTO      267--GOTO
P$
        22**DCL       235<<ASSIGN    262>>ASSIGN    263<<ASSIGN    263>>ASSIGN
REMAINING_TIME
       118**DCL       228--DCLINIT   240<<ASSIGN    289>>ASSIGN
TBIN
        13**DCL       252<<ASSIGN    253>>IF        253>>IF
TBUF
        24**DCL       282<<ASSIGN    283>>ASSIGN    296<<ASSIGN    297>>ASSIGN
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:27   
TCM_MBLEN
       115**DCL       242>>IF        248>>ASSIGN    275>>IF        277<<ASSIGN    281>>ASSIGN    285<<ASSIGN
       295>>ASSIGN    298<<ASSIGN
TCM_MODEMBUF
       114**DCL       236--ASSIGN    278--ASSIGN    283<<ASSIGN    284--ASSIGN    297<<ASSIGN
TCM_NEEDREAD
       112**DCL       238>>IF
TCM_READCG
       136**DCL       238<>CALL
TCM_READCG.STATION_
       139**DCL       140--REDEF
TCM_READCG.V.DVBYTE.REREAD#
       151**DCL       151--REDEF
TCM_READCG.V.INDX#
       149**DCL       149--REDEF
TIME
        12**DCL         7--PROC      231>>ASSIGN
TIMED
       304**LABEL     290--GOTO
TIMEFLAG
        20**DCL         7--PROC      234--IF        234<<ASSIGN    301--IF        301<<ASSIGN    304--IF
       304<<ASSIGN
TIMEOUT
       116**DCL       231<<ASSIGN    239>>ASSIGN    240>>ASSIGN    289>>IF        289<<ASSIGN    289>>ASSIGN
       290>>IF
WAIT_A_WHILE
       228**DCL       244<>CALL
WAIT_A_WHILE.V
       229**DCL       228--DCLINIT
WAIT_A_WHILE.V.UNITS#
       229**DCL       239<<ASSIGN    289>>ASSIGN
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:28   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:29   
              MINI UREF LISTING

F$CG     215**DCL
F$CG$     216**DCL
LOOPEND     274**LABEL
M$ACCT      51**DCL-ENT
M$ACTIVATE      54**DCL-ENT
M$ALIB      47**DCL-ENT
M$ASUSER      49**DCL-ENT
M$ATTACH      56**DCL-ENT
M$BADPP      74**DCL-ENT
M$CGCTL      55**DCL-ENT
M$CGINFO      55**DCL-ENT
M$CHECK      36**DCL-ENT
M$CHGUNIT      94**DCL-ENT
M$CLOSE      34**DCL-ENT
M$CLRSTK      92**DCL-ENT
M$CMDVAR     103**DCL-ENT
M$CONFIG      64**DCL-ENT
M$CORRES      39**DCL-ENT
M$CPEXIT      48**DCL-ENT
M$CVM      72**DCL-ENT
M$CVOL      37**DCL-ENT
M$DCLFLD      64**DCL-ENT
M$DEACTIVATE      54**DCL-ENT
M$DELREC      36**DCL-ENT
M$DEQ     101**DCL-ENT
M$DETACH      56**DCL-ENT
M$DEVICE      38**DCL-ENT
M$DISPLAY     101**DCL-ENT
M$DISPRES      41**DCL-ENT
M$DLIB      47**DCL-ENT
M$DRIBBLE      64**DCL-ENT
M$DRTN      92**DCL-ENT
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:30   
M$DSUSER      49**DCL-ENT
M$ENQ     100**DCL-ENT
M$EOM      59**DCL-ENT
M$ERASE      65**DCL-ENT
M$ERR      46**DCL-ENT
M$ERRMSG      97**DCL-ENT
M$EVENT      89**DCL-ENT
M$EXHUME      98**DCL-ENT
M$EXIT      46**DCL-ENT
M$EXTEND      38**DCL-ENT
M$FDP      70**DCL-ENT
M$FDS      69**DCL-ENT
M$FEBOOT      62**DCL-ENT
M$FECTL      63**DCL-ENT
M$FEDUMP      62**DCL-ENT
M$FID      97**DCL-ENT
M$FINDPROC      51**DCL-ENT
M$FSUSER      49**DCL-ENT
M$FVP      71**DCL-ENT
M$FWCG      55**DCL-ENT
M$GBPL      75**DCL-ENT
M$GDDL      71**DCL-ENT
M$GDP      70**DCL-ENT
M$GDS      69**DCL-ENT
M$GETDCB      40**DCL-ENT
M$GETMOUSE      80**DCL-ENT
M$GETPM      81**DCL-ENT
M$GJOB      99**DCL-ENT
M$GLINEATTR      59**DCL-ENT
M$GOODPP      74**DCL-ENT
M$GPLATEN      67**DCL-ENT
M$GPROMPT      66**DCL-ENT
M$GTRMATTR      60**DCL-ENT
M$GTRMCTL      58**DCL-ENT
M$GTRMTAB      61**DCL-ENT
M$GVP      70**DCL-ENT
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:31   
M$HELP      97**DCL-ENT
M$INT      89**DCL-ENT
M$INTRTN      50**DCL-ENT
M$IOQ      85**DCL-ENT
M$JOBSTATS      99**DCL-ENT
M$KEYIN      39**DCL-ENT
M$LDEV      34**DCL-ENT
M$LDTRC      47**DCL-ENT
M$LIMIT      40**DCL-ENT
M$LINES      39**DCL-ENT
M$LINK      46**DCL-ENT
M$MADMUCK      42**DCL-ENT
M$MAKUSER      73**DCL-ENT
M$MBS      41**DCL-ENT
M$MDFFLD      65**DCL-ENT
M$MERC      90**DCL-ENT
M$MERCS      91**DCL-ENT
M$MIRROR      85**DCL-ENT
M$MONINFO     102**DCL-ENT
M$MPL      75**DCL-ENT
M$NODEINFO      66**DCL-ENT
M$NXTUSR     100**DCL-ENT
M$OCMSG      98**DCL-ENT
M$OLAY      46**DCL-ENT
M$OPEN      34**DCL-ENT
M$PAS      75**DCL-ENT
M$PATHCON      98**DCL-ENT
M$PDS      69**DCL-ENT
M$PFIL      36**DCL-ENT
M$PLATEN      60**DCL-ENT
M$PRECORD      38**DCL-ENT
M$PROCNAME      51**DCL-ENT
M$PROFILE      62**DCL-ENT
M$PROMPT      58**DCL-ENT
M$RACST      42**DCL-ENT
M$RDSYSLOG      83**DCL-ENT
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:32   
M$RELDCB      40**DCL-ENT
M$RELRES      41**DCL-ENT
M$RELSTARF      43**DCL-ENT
M$REM      43**DCL-ENT
M$RENV      90**DCL-ENT
M$REQUIRE      42**DCL-ENT
M$RETRY      91**DCL-ENT
M$RETRYS      91**DCL-ENT
M$REW      37**DCL-ENT
M$RLSFLD      65**DCL-ENT
M$RPRIV      93**DCL-ENT
M$RSPP      72**DCL-ENT
M$RSWITCH      94**DCL-ENT
M$RUE     100**DCL-ENT
M$SAD      73**DCL-ENT
M$SAVE      49**DCL-ENT
M$SCON      50**DCL-ENT
M$SCREECH      48**DCL-ENT
M$SENV      90**DCL-ENT
M$SETFMA      34**DCL-ENT
M$SETFP      63**DCL-ENT
M$SINPUT      61**DCL-ENT
M$SLCFLD      66**DCL-ENT
M$SMOUSE      80**DCL-ENT
M$SMPRT      72**DCL-ENT
M$SPRIV      93**DCL-ENT
M$SSC      73**DCL-ENT
M$SSWITCH      93**DCL-ENT
M$STATE     102**DCL-ENT
M$STD      74**DCL-ENT
M$STIMER      88**DCL-ENT
M$STLPP      71**DCL-ENT
M$STRAP      88**DCL-ENT
M$STRMATTR      60**DCL-ENT
M$STRMCTL      58**DCL-ENT
M$STRMTAB      61**DCL-ENT
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:33   
M$SYMBIO      99**DCL-ENT
M$SYSCON      85**DCL-ENT
M$SYSID     103**DCL-ENT
M$TDCLOSE      84**DCL-ENT
M$TDIO      84**DCL-ENT
M$TDOPEN      83**DCL-ENT
M$TDREQCPU      84**DCL-ENT
M$TEMPWROC      78**DCL-ENT
M$TIME     101**DCL-ENT
M$TRAP      88**DCL-ENT
M$TRMISC      63**DCL-ENT
M$TRMPRG      59**DCL-ENT
M$TRTN      92**DCL-ENT
M$TRUNC      35**DCL-ENT
M$TTIMER      88**DCL-ENT
M$UC      58**DCL
M$UMPL      75**DCL-ENT
M$UNFID      97**DCL-ENT
M$UNLATCH      54**DCL-ENT
M$UNSHARE      51**DCL-ENT
M$USRFIELD      94**DCL-ENT
M$VIRTUAL      69**DCL-ENT
M$WEOF      37**DCL-ENT
M$WRITE      35**DCL-ENT
M$WRSYSLOG      83**DCL-ENT
M$XCON      89**DCL-ENT
M$XCONRTN      50**DCL-ENT
M$XEQTIME     102**DCL-ENT
M$XFLUSH      43**DCL-ENT
M$XMOUSE      80**DCL-ENT
M$XXX      46**DCL-ENT
M$YC      48**DCL-ENT
TCM$ALEX_READ       7**PROC
TCM_COMMAND     113**DCL
TCM_INT     111**DCL
TCM_READCGBUF     110**DCL
PL6.E3A0      #001=TCM$ALEX_READ File=TCM$ALEX1.:TCA2TSI                         SUN 11/16/97 14:15 Page:34   
UBIN9     109**DCL

PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:35   
      121        1        /*T***********************************************************/
      122        2        /*T*                                                         */
      123        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      124        4        /*T*                                                         */
      125        5        /*T***********************************************************/
      126        6        TCM$ALEX_WRITE: PROC (BUF_,MERR) ALTRET;
      127        7    1   DCL 1 BUF_,
      128        8    1        2 VSIZE# UBIN(20) UNAL,
      129        9    1        2 * BIT(16) UNAL,
      130       10    1        2 PTR$ PTR;
      131       11    1   DCL BUFV_ REDEF BUF_ BIT(72);
      132       12    1   DCL I UBIN STATIC;
      133       13    1   DCL J UBIN STATIC;
      134       14    1   DCL TCM_G_PARITY UBIN SYMREF;
      135       15    1   DCL TCM_EPTBLI(0:127) BIT(1) SYMREF;
      136       16    1   DCL TCM_OPTBLI(0:127) BIT(1) SYMREF;
      137       17    1   DCL 1 LA(0:256),
      138       18    1        2 * BIT(1) UNAL,
      139       19    1        2 P BIT(1) UNAL,
      140       20    1        2 U UBIN(7) UNAL;
      141       21    1   DCL CHARN CHAR(J) BASED;
      142       22    1   DCL MERR UBIN;
      143       23        %INCLUDE CP_6;
      144      104        %FPT_WRITE (FPTN=TCM_WRITECG, STCLASS=SYMREF);
      145      135        %FPT_WRITE(FPTN=TWRITE, STCLASS=STATIC);
      146      166    1        TWRITE=TCM_WRITECG;
      147      167    1   DUMMY:
      148      168    1        J=BUF_.VSIZE#+1;
      149      169    1        TWRITE.BUF_=VECTOR(ADDR(LA)->CHARN);
      150      170    1   DUMMY2:
      151      171    1        ADDR(LA)->CHARN=BUF_.PTR$->CHARN;
      152      172    2        DO I=0 TO BUF_.VSIZE#;
      153      173    3             DO CASE(TCM_G_PARITY);
      154      174    3               CASE(0,2);                  /* None, even */
      155      175    3                  LA.P(I)=TCM_EPTBLI(LA.U(I));
      156      176    3               CASE(1);                    /* Odd */
      157      177    3                  LA.P(I)=TCM_OPTBLI(LA.U(I));
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:36   
      158      178    3               CASE(3);                    /* One */
      159      179    3                  LA.P(I)='1'B;
      160      180    3               CASE(4);                    /* Zero */
      161      181    3                  LA.P(I)='0'B;
      162      182    3               CASE(ELSE);
      163      183    3               END;                        /* Do case */
      164      184    2        END;
      165      185    1        CALL M$WRITE(TWRITE) altret(OOPS);
      166      186    1        RETURN;
      167      187    1   OOPS: altreturn;
      168      188    1   END TCM$ALEX_WRITE;

PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:37   
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure TCM$ALEX_WRITE.

   Procedure TCM$ALEX_WRITE requires 87 words for executable code.
   Procedure TCM$ALEX_WRITE requires 72 words of local(AUTO) storage.

    No errors detected in file TCM$ALEX1.:TCA2TSI    .

PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:38   

 Object Unit name= TCM$ALEX_WRITE                             File name= TCM$ALEX1.:TCA2TOU
 UTS= NOV 16 '97 14:16:00.04 SUN                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    14     16  TCM$ALEX_WRITE
    1   DCB   even  none     0      0  M$UC
    2   Proc  even  none    87    127  TCM$ALEX_WRITE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  TCM$ALEX_WRITE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     TCM_G_PARITY                          TCM_EPTBLI                            TCM_OPTBLI
     M$UC                                  TCM_WRITECG                           B_VECTNIL
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:39   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:40   


      121        1        /*T***********************************************************/
      122        2        /*T*                                                         */
      123        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      124        4        /*T*                                                         */
      125        5        /*T***********************************************************/
      126        6        TCM$ALEX_WRITE: PROC (BUF_,MERR) ALTRET;

      6  2 000000   000000 700200 xent  TCM$ALEX_WR* TSX0  ! X66_AUTO_2
         2 000001   000110 000002                    ZERO    72,2

      127        7    1   DCL 1 BUF_,
      128        8    1        2 VSIZE# UBIN(20) UNAL,
      129        9    1        2 * BIT(16) UNAL,
      130       10    1        2 PTR$ PTR;
      131       11    1   DCL BUFV_ REDEF BUF_ BIT(72);
      132       12    1   DCL I UBIN STATIC;
      133       13    1   DCL J UBIN STATIC;
      134       14    1   DCL TCM_G_PARITY UBIN SYMREF;
      135       15    1   DCL TCM_EPTBLI(0:127) BIT(1) SYMREF;
      136       16    1   DCL TCM_OPTBLI(0:127) BIT(1) SYMREF;
      137       17    1   DCL 1 LA(0:256),
      138       18    1        2 * BIT(1) UNAL,
      139       19    1        2 P BIT(1) UNAL,
      140       20    1        2 U UBIN(7) UNAL;
      141       21    1   DCL CHARN CHAR(J) BASED;
      142       22    1   DCL MERR UBIN;
      143       23        %INCLUDE CP_6;
      144      104        %FPT_WRITE (FPTN=TCM_WRITECG, STCLASS=SYMREF);
      145      135        %FPT_WRITE(FPTN=TWRITE, STCLASS=STATIC);
      146      166    1        TWRITE=TCM_WRITECG;

    166  2 000002   000000 100400                    MLR     fill='000'O
         2 000003   000000 000060 xsym               ADSC9   TCM_WRITECG              cn=0,n=48
         2 000004   000002 000060 0                  ADSC9   TWRITE                   cn=0,n=48

      147      167    1   DUMMY:
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:41   
      148      168    1        J=BUF_.VSIZE#+1;

    168  2 000005   200003 470500       DUMMY        LDP0    @BUF_,,AUTO
         2 000006   000000 236100                    LDQ     0,,PR0
         2 000007   000020 772000                    QRL     16
         2 000010   000001 036007                    ADLQ    1,DL
         2 000011   000001 756000 0                  STQ     J

      149      169    1        TWRITE.BUF_=VECTOR(ADDR(LA)->CHARN);

    169  2 000012   000001 235000 0                  LDA     J
         2 000013   000020 735000                    ALS     16
         2 000014   000140 135007                    SBLA    96,DL
         2 000015   200106 452500                    STP2    LA+65,,AUTO
         2 000016   200106 236100                    LDQ     LA+65,,AUTO
         2 000017   000005 036003                    ADLQ    5,DU
         2 000020   000006 757000 0                  STAQ    TWRITE+4

      150      170    1   DUMMY2:
      151      171    1        ADDR(LA)->CHARN=BUF_.PTR$->CHARN;

    171  2 000021   000001 471500       DUMMY2       LDP1    1,,PR0
         2 000022   000001 720000 0                  LXL0    J
         2 000023   040140 100540                    MLR     fill='040'O
         2 000024   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         2 000025   200005 000010                    ADSC9   LA,,AUTO                 cn=0,n=*X0

      152      172    2        DO I=0 TO BUF_.VSIZE#;

    172  2 000026   000000 450000 0                  STZ     I
         2 000027   000114 710000 2                  TRA     s:184+3

      153      173    3             DO CASE(TCM_G_PARITY);

    173  2 000030   000000 235000 xsym               LDA     TCM_G_PARITY
         2 000031   000005 115007                    CMPA    5,DL
         2 000032   000034 602005 2                  TNC     s:173+4,AL
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:42   
         2 000033   000111 710000 2                  TRA     s:184
         2 000034   000041 710000 2                  TRA     s:175
         2 000035   000057 710000 2                  TRA     s:177
         2 000036   000041 710000 2                  TRA     s:175
         2 000037   000075 710000 2                  TRA     s:179
         2 000040   000103 710000 2                  TRA     s:181

      154      174    3               CASE(0,2);                  /* None, even */

      155      175    3                  LA.P(I)=TCM_EPTBLI(LA.U(I));

    175  2 000041   000000 236000 0                  LDQ     I
         2 000042   000011 402007                    MPY     9,DL
         2 000043   003100 061506                    CSR     bolr='003'O
         2 000044   200005 020007                    BDSC    LA,Q,AUTO                by=0,bit=2,n=7
         2 000045   200106 000044                    BDSC    LA+65,,AUTO              by=0,bit=0,n=36
         2 000046   200106 236100                    LDQ     LA+65,,AUTO
         2 000047   200107 756100                    STQ     LA+66,,AUTO
         2 000050   000000 236000 0                  LDQ     I
         2 000051   000011 402007                    MPY     9,DL
         2 000052   200107 235100                    LDA     LA+66,,AUTO
         2 000053   003106 060405                    CSL     bolr='003'O
         2 000054   000000 000001 xsym               BDSC    TCM_EPTBLI,A             by=0,bit=0,n=1
         2 000055   200005 010001                    BDSC    LA,Q,AUTO                by=0,bit=1,n=1
         2 000056   000111 710000 2                  TRA     s:184

      156      176    3               CASE(1);                    /* Odd */

      157      177    3                  LA.P(I)=TCM_OPTBLI(LA.U(I));

    177  2 000057   000000 236000 0                  LDQ     I
         2 000060   000011 402007                    MPY     9,DL
         2 000061   003100 061506                    CSR     bolr='003'O
         2 000062   200005 020007                    BDSC    LA,Q,AUTO                by=0,bit=2,n=7
         2 000063   200106 000044                    BDSC    LA+65,,AUTO              by=0,bit=0,n=36
         2 000064   200106 236100                    LDQ     LA+65,,AUTO
         2 000065   200107 756100                    STQ     LA+66,,AUTO
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:43   
         2 000066   000000 236000 0                  LDQ     I
         2 000067   000011 402007                    MPY     9,DL
         2 000070   200107 235100                    LDA     LA+66,,AUTO
         2 000071   003106 060405                    CSL     bolr='003'O
         2 000072   000000 000001 xsym               BDSC    TCM_OPTBLI,A             by=0,bit=0,n=1
         2 000073   200005 010001                    BDSC    LA,Q,AUTO                by=0,bit=1,n=1
         2 000074   000111 710000 2                  TRA     s:184

      158      178    3               CASE(3);                    /* One */

      159      179    3                  LA.P(I)='1'B;

    179  2 000075   000000 236000 0                  LDQ     I
         2 000076   000011 402007                    MPY     9,DL
         2 000077   003106 060400                    CSL     bolr='003'O
         2 000100   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         2 000101   200005 010001                    BDSC    LA,Q,AUTO                by=0,bit=1,n=1
         2 000102   000111 710000 2                  TRA     s:184

      160      180    3               CASE(4);                    /* Zero */

      161      181    3                  LA.P(I)='0'B;

    181  2 000103   000000 236000 0                  LDQ     I
         2 000104   000011 402007                    MPY     9,DL
         2 000105   003106 060400                    CSL     bolr='003'O
         2 000106   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         2 000107   200005 010001                    BDSC    LA,Q,AUTO                by=0,bit=1,n=1
         2 000110   000111 710000 2                  TRA     s:184

      162      182    3               CASE(ELSE);

      163      183    3               END;                        /* Do case */

      164      184    2        END;

    184  2 000111   000000 235000 0                  LDA     I
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:44   
         2 000112   000001 035007                    ADLA    1,DL
         2 000113   000000 755000 0                  STA     I
         2 000114   200003 470500                    LDP0    @BUF_,,AUTO
         2 000115   000000 236100                    LDQ     0,,PR0
         2 000116   000020 772000                    QRL     16
         2 000117   000000 116000 0                  CMPQ    I
         2 000120   000030 603000 2                  TRC     s:173

      165      185    1        CALL M$WRITE(TWRITE) altret(OOPS);

    185  2 000121   000002 630400 0                  EPPR0   TWRITE
         2 000122   440001 713400                    CLIMB   alt,write
         2 000123   401400 401760                    pmme    nvectors=4
         2 000124   000126 702000 2                  TSX2    OOPS

      166      186    1        RETURN;

    186  2 000125   000000 702200 xent               TSX2  ! X66_ARET

      167      187    1   OOPS: altreturn;

    187  2 000126   000000 702200 xent  OOPS         TSX2  ! X66_AALT

TWRITE
 Sect OctLoc
   0     002   000003 777640   000012 006000   000000 177640   000000 006014    ................
   0     006   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     012   000000 400400   000000 000000   000000 000000   000000 000000    ................
      168      188    1   END TCM$ALEX_WRITE;

PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:45   
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure TCM$ALEX_WRITE.
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:46   

 **** Variables and constants ****

  ****  Section 000  Data  TCM$ALEX_WRITE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 I                          1-0-0/w UBIN        r     1 J
     2-0-0/d STRC(432)   r     1 TWRITE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUF_                      4-0-0/w PTR         r     1 @MERR
    *0-0-0/w STRC(72)    r     1 BUF_                       5-0-0/b STRC(9)     r     1 LA(0:256)
    *0-0-0/w UBIN        r     1 MERR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 TCM_EPTBLI(0:127)
     0-0-0/w UBIN        r     1 TCM_G_PARITY
     0-0-0/b BIT         r     1 TCM_OPTBLI(0:127)
     0-0-0/d STRC(432)   r     1 TCM_WRITECG

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR        r     1 CHARN

PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:47   

   Procedure TCM$ALEX_WRITE requires 87 words for executable code.
   Procedure TCM$ALEX_WRITE requires 72 words of local(AUTO) storage.

    No errors detected in file TCM$ALEX1.:TCA2TSI    .
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:48   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:49   
          MINI XREF LISTING

BUF_
         7**DCL         6--PROC       11--REDEF
BUF_.PTR$
        10**DCL       171>>ASSIGN
BUF_.VSIZE#
         8**DCL       168>>ASSIGN    172>>DOINDEX
CHARN
        21**DCL       169--ASSIGN    171<<ASSIGN    171>>ASSIGN
I
        12**DCL       172<<DOINDEX   175>>ASSIGN    175>>ASSIGN    177>>ASSIGN    177>>ASSIGN    179>>ASSIGN
       181>>ASSIGN
J
        13**DCL        21--IMP-SIZ   168<<ASSIGN    169>>ASSIGN    171>>ASSIGN    171>>ASSIGN
LA
        17**DCL       169--ASSIGN    171--ASSIGN
LA.P
        19**DCL       175<<ASSIGN    177<<ASSIGN    179<<ASSIGN    181<<ASSIGN
LA.U
        20**DCL       175>>ASSIGN    177>>ASSIGN
M$WRITE
        33**DCL-ENT   185--CALL
MERR
        22**DCL         6--PROC
OOPS
       187**LABEL     185--CALLALT
TCM_EPTBLI
        15**DCL       175>>ASSIGN
TCM_G_PARITY
        14**DCL       173>>DOCASE
TCM_OPTBLI
        16**DCL       177>>ASSIGN
TCM_WRITECG
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:50   
       121**DCL       166>>ASSIGN
TCM_WRITECG.STATION_
       123**DCL       123--REDEF
TCM_WRITECG.V.DVBYTE.VFC#
       130**DCL       130--REDEF
TWRITE
       152**DCL       166<<ASSIGN    185<>CALL
TWRITE.BUF_
       152**DCL       169<<ASSIGN
TWRITE.STATION_
       154**DCL       154--REDEF
TWRITE.V
       155**DCL       152--DCLINIT
TWRITE.V.DVBYTE.VFC#
       161**DCL       161--REDEF
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:51   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:52   
              MINI UREF LISTING

BUFV_      11**DCL
DUMMY     168**LABEL
DUMMY2     171**LABEL
M$ACCT      49**DCL-ENT
M$ACTIVATE      52**DCL-ENT
M$ALIB      45**DCL-ENT
M$ASUSER      47**DCL-ENT
M$ATTACH      54**DCL-ENT
M$BADPP      72**DCL-ENT
M$CGCTL      53**DCL-ENT
M$CGINFO      53**DCL-ENT
M$CHECK      34**DCL-ENT
M$CHGUNIT      92**DCL-ENT
M$CLOSE      32**DCL-ENT
M$CLRSTK      90**DCL-ENT
M$CMDVAR     101**DCL-ENT
M$CONFIG      62**DCL-ENT
M$CORRES      37**DCL-ENT
M$CPEXIT      46**DCL-ENT
M$CVM      70**DCL-ENT
M$CVOL      35**DCL-ENT
M$DCLFLD      62**DCL-ENT
M$DEACTIVATE      52**DCL-ENT
M$DELREC      34**DCL-ENT
M$DEQ      99**DCL-ENT
M$DETACH      54**DCL-ENT
M$DEVICE      36**DCL-ENT
M$DISPLAY      99**DCL-ENT
M$DISPRES      39**DCL-ENT
M$DLIB      45**DCL-ENT
M$DRIBBLE      62**DCL-ENT
M$DRTN      90**DCL-ENT
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:53   
M$DSUSER      47**DCL-ENT
M$ENQ      98**DCL-ENT
M$EOM      57**DCL-ENT
M$ERASE      63**DCL-ENT
M$ERR      44**DCL-ENT
M$ERRMSG      95**DCL-ENT
M$EVENT      87**DCL-ENT
M$EXHUME      96**DCL-ENT
M$EXIT      44**DCL-ENT
M$EXTEND      36**DCL-ENT
M$FDP      68**DCL-ENT
M$FDS      67**DCL-ENT
M$FEBOOT      60**DCL-ENT
M$FECTL      61**DCL-ENT
M$FEDUMP      60**DCL-ENT
M$FID      95**DCL-ENT
M$FINDPROC      49**DCL-ENT
M$FSUSER      47**DCL-ENT
M$FVP      69**DCL-ENT
M$FWCG      53**DCL-ENT
M$GBPL      73**DCL-ENT
M$GDDL      69**DCL-ENT
M$GDP      68**DCL-ENT
M$GDS      67**DCL-ENT
M$GETDCB      38**DCL-ENT
M$GETMOUSE      78**DCL-ENT
M$GETPM      79**DCL-ENT
M$GJOB      97**DCL-ENT
M$GLINEATTR      57**DCL-ENT
M$GOODPP      72**DCL-ENT
M$GPLATEN      65**DCL-ENT
M$GPROMPT      64**DCL-ENT
M$GTRMATTR      58**DCL-ENT
M$GTRMCTL      56**DCL-ENT
M$GTRMTAB      59**DCL-ENT
M$GVP      68**DCL-ENT
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:54   
M$HELP      95**DCL-ENT
M$INT      87**DCL-ENT
M$INTRTN      48**DCL-ENT
M$IOQ      83**DCL-ENT
M$JOBSTATS      97**DCL-ENT
M$KEYIN      37**DCL-ENT
M$LDEV      32**DCL-ENT
M$LDTRC      45**DCL-ENT
M$LIMIT      38**DCL-ENT
M$LINES      37**DCL-ENT
M$LINK      44**DCL-ENT
M$MADMUCK      40**DCL-ENT
M$MAKUSER      71**DCL-ENT
M$MBS      39**DCL-ENT
M$MDFFLD      63**DCL-ENT
M$MERC      88**DCL-ENT
M$MERCS      89**DCL-ENT
M$MIRROR      83**DCL-ENT
M$MONINFO     100**DCL-ENT
M$MPL      73**DCL-ENT
M$NODEINFO      64**DCL-ENT
M$NXTUSR      98**DCL-ENT
M$OCMSG      96**DCL-ENT
M$OLAY      44**DCL-ENT
M$OPEN      32**DCL-ENT
M$PAS      73**DCL-ENT
M$PATHCON      96**DCL-ENT
M$PDS      67**DCL-ENT
M$PFIL      34**DCL-ENT
M$PLATEN      58**DCL-ENT
M$PRECORD      36**DCL-ENT
M$PROCNAME      49**DCL-ENT
M$PROFILE      60**DCL-ENT
M$PROMPT      56**DCL-ENT
M$RACST      40**DCL-ENT
M$RDSYSLOG      81**DCL-ENT
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:55   
M$READ      33**DCL-ENT
M$RELDCB      38**DCL-ENT
M$RELRES      39**DCL-ENT
M$RELSTARF      41**DCL-ENT
M$REM      41**DCL-ENT
M$RENV      88**DCL-ENT
M$REQUIRE      40**DCL-ENT
M$RETRY      89**DCL-ENT
M$RETRYS      89**DCL-ENT
M$REW      35**DCL-ENT
M$RLSFLD      63**DCL-ENT
M$RPRIV      91**DCL-ENT
M$RSPP      70**DCL-ENT
M$RSWITCH      92**DCL-ENT
M$RUE      98**DCL-ENT
M$SAD      71**DCL-ENT
M$SAVE      47**DCL-ENT
M$SCON      48**DCL-ENT
M$SCREECH      46**DCL-ENT
M$SENV      88**DCL-ENT
M$SETFMA      32**DCL-ENT
M$SETFP      61**DCL-ENT
M$SINPUT      59**DCL-ENT
M$SLCFLD      64**DCL-ENT
M$SMOUSE      78**DCL-ENT
M$SMPRT      70**DCL-ENT
M$SPRIV      91**DCL-ENT
M$SSC      71**DCL-ENT
M$SSWITCH      91**DCL-ENT
M$STATE     100**DCL-ENT
M$STD      72**DCL-ENT
M$STIMER      86**DCL-ENT
M$STLPP      69**DCL-ENT
M$STRAP      86**DCL-ENT
M$STRMATTR      58**DCL-ENT
M$STRMCTL      56**DCL-ENT
PL6.E3A0      #002=TCM$ALEX_WRITE File=TCM$ALEX1.:TCA2TSI                        SUN 11/16/97 14:16 Page:56   
M$STRMTAB      59**DCL-ENT
M$SYMBIO      97**DCL-ENT
M$SYSCON      83**DCL-ENT
M$SYSID     101**DCL-ENT
M$TDCLOSE      82**DCL-ENT
M$TDIO      82**DCL-ENT
M$TDOPEN      81**DCL-ENT
M$TDREQCPU      82**DCL-ENT
M$TEMPWROC      76**DCL-ENT
M$TIME      99**DCL-ENT
M$TRAP      86**DCL-ENT
M$TRMISC      61**DCL-ENT
M$TRMPRG      57**DCL-ENT
M$TRTN      90**DCL-ENT
M$TRUNC      33**DCL-ENT
M$TTIMER      86**DCL-ENT
M$UC      56**DCL
M$UMPL      73**DCL-ENT
M$UNFID      95**DCL-ENT
M$UNLATCH      52**DCL-ENT
M$UNSHARE      49**DCL-ENT
M$USRFIELD      92**DCL-ENT
M$VIRTUAL      67**DCL-ENT
M$WAIT      90**DCL-ENT
M$WEOF      35**DCL-ENT
M$WRSYSLOG      81**DCL-ENT
M$XCON      87**DCL-ENT
M$XCONRTN      48**DCL-ENT
M$XEQTIME     100**DCL-ENT
M$XFLUSH      41**DCL-ENT
M$XMOUSE      78**DCL-ENT
M$XXX      44**DCL-ENT
M$YC      46**DCL-ENT
TCM$ALEX_WRITE       6**PROC
