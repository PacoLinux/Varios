VERSION A02


CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=1  
        1         1             /*M*    XSL$CFUNCS      C-language interface to the XSL routines    */
        2         2             /*T***********************************************************/
        3         3             /*T*                                                         */
        4         4             /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5         5             /*T*                                                         */
        6         6             /*T***********************************************************/
        7         7             /*X* DDA */
        8         8
        9         9             #include <fcntl.h>
       10        10             #include <stdio.h>
       11        11             #include <stdarg.h>
       12        12             #include <stdlib.h>
       13        13             #include <string.h>
       14        14             #include <xu_cp6_c.h>
       15        15             #include "xsl_errno:h"
       16        16             #include "xsl_in:h"
       17        17             #include "xsl_netdb:h"
       18        18             #define FD_SETSIZE 36
       19        19             #include "xsl_select:h"
       20        20             #include "xsl_socket:h"
       21        21
       22        22             /* Creating and Naming Sockets */
       23        23             extern void XSL$SOCKET();
       24        24             extern void XSL$BIND();
       25        25
       26        26             /* Initiating Connections */
       27        27             extern void XSL$LISTEN();
       28        28             extern void XSL$ACCEPT();
       29        29             extern void XSL$ACCEPT_SRVR();
       30        30             extern void XSL$CONNECT();
       31        31
       32        32             /* Transferring Data */
       33        33             extern void XSL$SEND();
       34        34             extern void XSL$RECV();
       35        35             extern void XSL$SENDTO();
       36        36             extern void XSL$RECVFROM();
       37        37             extern void XSL$WRITE();
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=2  
       38        38             extern void XSL$READ();
       39        39             extern void XSL$WRITEV();
       40        40             extern void XSL$READV();
       41        41             extern void XSL$SENDMSG();
       42        42             extern void XSL$RECVMSG();
       43        43
       44        44             /* Synchronous I/O Multiplexing */
       45        45             extern void XSL$SELECT();
       46        46
       47        47             /* Terminating Connections */
       48        48             extern void XSL$SHUTDOWN();
       49        49             extern void XSL$CLOSE();
       50        50
       51        51             /* Host and Socket Information Functions */
       52        52             extern void XSL$GETHOSTNAME();
       53        53             extern void XSL$GETPEERNAME();
       54        54             extern void XSL$GETSOCKNAME();
       55        55             extern void XSL$GETSOCKOPT();
       56        56             extern void XSL$SETSOCKOPT();
       57        57             extern void XSL$FCNTL();
       58        58             extern void XSL$IOCTL();
       59        59
       60        60             /* Data Conversion Functions */
       61        61             extern void XSL$HTONL();
       62        62             extern void XSL$HTONS();
       63        63             extern void XSL$NTOHL();
       64        64             extern void XSL$HTOHS();
       65        65
       66        66             /* Internet Address Manipulation */
       67        67             extern void XSL$INET_ADDR();
       68        68             extern void XSL$INET_LNAOF();
       69        69             extern void XSL$INET_MAKEADDR();
       70        70             extern void XSL$INET_NETOF();
       71        71             extern void XSL$INET_NETWORK();
       72        72             extern void XSL$INET_NTOA();
       73        73
       74        74             /* /etc/hosts File Manipulation */
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=3  
       75        75             extern void XSL$GETHOSTBYADDR();
       76        76             extern void XSL$GETHOSTBYNAME();
       77        77             extern void XSL$GETHOSTENT();
       78        78             extern void XSL$SETHOSTENT();
       79        79             extern void XSL$ENDHOSTENT();
       80        80
       81        81             /* /etc/networks File Manipulation */
       82        82             extern void XSL$GETNETBYADDR();
       83        83             extern void XSL$GETNETBYNAME();
       84        84             extern void XSL$GETNETENT();
       85        85             extern void XSL$SETNETENT();
       86        86             extern void XSL$ENDNETENT();
       87        87
       88        88             /* /etc/protocols File Manipulation */
       89        89             extern void XSL$GETPROTOBYNAME();
       90        90             extern void XSL$GETPROTOBYNUMBER();
       91        91             extern void XSL$GETPROTOENT();
       92        92             extern void XSL$SETPROTOENT();
       93        93             extern void XSL$ENDPROTOENT();
       94        94
       95        95             /* /etc/services File Manipulation */
       96        96             extern void XSL$GETSERVBYNAME();
       97        97             extern void XSL$GETSERVBYPORT();
       98        98             extern void XSL$GETSERVENT();
       99        99             extern void XSL$SETSERVENT();
      100       100             extern void XSL$ENDSERVENT();
      101       101
      102       102             extern long XSL_ERRNO;
      103       103
      104       104             void XBI_SET_ERRNO( /* optional struct vlp_errcode * */ );
      105       105             FILE *XB$GET_FILDES( int);
      106       106             int XB$RELEASE_FILDES( int);
      107       107
      108       108             void xsl$maperror()
      109       109             {
      110       110    1            static struct vlp_errcode errcode={ 03023, 014, 0, 0, 3 };
      111       111    1
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=4  
      112       112    1            if( XSL_ERRNO == -1)
      113       113    1                XBI_SET_ERRNO();  /* get errcode from TCB */
      114       114    1            else
      115       115    1                if( XSL_ERRNO < 0 || XSL_ERRNO > 511)
      116       116    1                    XBI_SET_ERRNO( &XSL_ERRNO);  /* use supplied errcode */
      117       117    1                else {
      118       118    2                    errcode.err = XSL_ERRNO;
      119       119    2                    XBI_SET_ERRNO( &errcode);  /* generate XSL-?-3 errcode */
      120       120    2                    }
      121       121    1            return;
      122       122    1        }
      123       123
      124       124             int xsl$sockethook( fnc, args)
      125       125                 int fnc;
      126       126                 va_list args;
      127       127             {
      128       128    1            char *buf;
      129       129    1            void *ptr;
      130       130    1            int len, fd, cmd, arg, result;
      131       131    1            static struct vlp_errcode ERROPNOTSUPP={ 03023, 014, 0, EOPNOTSUPP, 3 };
      132       132    1
      133       133    1            fd = va_arg( args, int);
      134       134    1            switch( fnc) {
      135       135    2                case FNC_CLOSE:
      136       136    2                    XSL$CLOSE( &result, &fd);
      137       137    2                    if( result == ESUCCESS)
      138       138    2                        XB$RELEASE_FILDES( fd);
      139       139    2                    break;
      140       140    2                case FNC_FCNTL:
      141       141    2                    cmd = va_arg( args, int);
      142       142    2                    arg = va_arg( args, int);
      143       143    2                    XSL$FCNTL( &result, &fd, &cmd, &arg);
      144       144    2                    break;
      145       145    2                case FNC_IOCTL:
      146       146    2                    cmd = va_arg( args, int);
      147       147    2                    ptr = va_arg( args, void *);
      148       148    2                    XSL$IOCTL( &result, &fd, &cmd, ptr);
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=5  
      149       149    2                    break;
      150       150    2                case FNC_READ:
      151       151    2                    buf = va_arg( args, char *);
      152       152    2                    len = va_arg( args, int);
      153       153    2                    XSL$READ( &result, &fd, buf, &len);
      154       154    2                    break;
      155       155    2                case FNC_WRITE:
      156       156    2                    buf = va_arg( args, char *);
      157       157    2                    len = va_arg( args, int);
      158       158    2                    XSL$WRITE( &result, &fd, buf, &len);
      159       159    2                    break;
      160       160    2                case FNC_LSEEK:  /* not supported */
      161       161    2                default:
      162       162    2                    XBI_SET_ERRNO( &ERROPNOTSUPP);
      163       163    2                    return( EFAILURE);
      164       164    2                }
      165       165    1            if( result < 0)
      166       166    1                xsl$maperror();
      167       167    1            return( result);
      168       168    1        }
      169       169
      170       170             int socket( af, type, protocol)
      171       171                 int af, type, protocol;
      172       172             {
      173       173    1            int result;
      174       174    1            FILE *fctx;
      175       175    1
      176       176    1            XSL$SOCKET( &result, &af, &type, &protocol);
      177       177    1            if( result != EFAILURE) {
      178       178    2                fctx = XB$GET_FILDES( result);
      179       179    2                if( fctx)
      180       180    2                    fctx->_auxio = xsl$sockethook;
      181       181    2                else {
      182       182    3                    XSL$CLOSE( &fctx, &result);
      183       183    3                    result = EFAILURE;
      184       184    3                    }
      185       185    2                }
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=6  
      186       186    1            if( result == EFAILURE)
      187       187    1                xsl$maperror();
      188       188    1            return( result);
      189       189    1        }
      190       190
      191       191             int accept_srvr( name, namelen)
      192       192                 int *namelen;
      193       193                 struct sockaddr *name;
      194       194             {
      195       195    1            int result;
      196       196    1            FILE *fctx;
      197       197    1
      198       198    1            XSL$ACCEPT_SRVR( &result, name, namelen);
      199       199    1            if( result != EFAILURE) {
      200       200    2                fctx = XB$GET_FILDES( result);
      201       201    2                if( fctx)
      202       202    2                    fctx->_auxio = xsl$sockethook;
      203       203    2                else {
      204       204    3                    XSL$CLOSE( &fctx, &result);
      205       205    3                    result = EFAILURE;
      206       206    3                    }
      207       207    2                }
      208       208    1            if( result == EFAILURE)
      209       209    1                xsl$maperror();
      210       210    1            return( result);
      211       211    1        }
      212       212
      213       213             int bind( sock, name, namelen)
      214       214                 int sock, namelen;
      215       215                 struct sockaddr *name;
      216       216             {
      217       217    1            int result;
      218       218    1
      219       219    1            XSL$BIND( &result, &sock, name, &namelen);
      220       220    1            if( result)
      221       221    1                xsl$maperror();
      222       222    1            return( result);
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=7  
      223       223    1        }
      224       224
      225       225             int listen( sock, backlog)
      226       226                 int sock, backlog;
      227       227             {
      228       228    1            int result;
      229       229    1
      230       230    1            XSL$LISTEN( &result, &sock, &backlog);
      231       231    1            if( result)
      232       232    1                xsl$maperror();
      233       233    1            return( result);
      234       234    1        }
      235       235
      236       236             int accept( sock, name, namelen)
      237       237                 int sock, *namelen;
      238       238                 struct sockaddr *name;
      239       239             {
      240       240    1            int result;
      241       241    1            FILE *fctx;
      242       242    1
      243       243    1            XSL$ACCEPT( &result, &sock, name, namelen);
      244       244    1            if( result != EFAILURE) {
      245       245    2                fctx = XB$GET_FILDES( result);
      246       246    2                if( fctx)
      247       247    2                    fctx->_auxio = xsl$sockethook;
      248       248    2                else {
      249       249    3                    XSL$CLOSE( &fctx, &result);
      250       250    3                    result = EFAILURE;
      251       251    3                    }
      252       252    2                }
      253       253    1            if( result == EFAILURE)
      254       254    1                xsl$maperror();
      255       255    1            return( result);
      256       256    1        }
      257       257
      258       258             int connect( sock, name, namelen)
      259       259                 int sock, namelen;
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=8  
      260       260                 struct sockaddr *name;
      261       261             {
      262       262    1            int result;
      263       263    1
      264       264    1            XSL$CONNECT( &result, &sock, name, &namelen);
      265       265    1            if( result)
      266       266    1                xsl$maperror();
      267       267    1            return( result);
      268       268    1        }
      269       269
      270       270             int send( sock, msg, len, flags)
      271       271                 int sock, len, flags;
      272       272                 char *msg;
      273       273             {
      274       274    1            int result;
      275       275    1
      276       276    1            XSL$SEND( &result, &sock, msg, &len, &flags);
      277       277    1            if( result == EFAILURE)
      278       278    1                xsl$maperror();
      279       279    1            return( result);
      280       280    1        }
      281       281
      282       282             int recv( sock, buf, len, flags)
      283       283                 int sock, len, flags;
      284       284                 char *buf;
      285       285             {
      286       286    1            int result;
      287       287    1
      288       288    1            XSL$RECV( &result, &sock, buf, &len, &flags);
      289       289    1            if( result == EFAILURE)
      290       290    1                xsl$maperror();
      291       291    1            return( result);
      292       292    1        }
      293       293
      294       294             int sendto( sock, msg, len, flags, to, tolen)
      295       295                 int sock, len, flags, tolen;
      296       296                 char *msg;
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=9  
      297       297                 struct sockaddr *to;
      298       298             {
      299       299    1            int result;
      300       300    1
      301       301    1            XSL$SENDTO( &result, &sock, msg, &len, &flags, to, &tolen);
      302       302    1            if( result == EFAILURE)
      303       303    1                xsl$maperror();
      304       304    1            return( result);
      305       305    1        }
      306       306
      307       307             int recvfrom( sock, buf, len, flags, from, fromlen)
      308       308                 int sock, len, flags, *fromlen;
      309       309                 char *buf;
      310       310                 struct sockaddr *from;
      311       311             {
      312       312    1            int result;
      313       313    1
      314       314    1            XSL$RECVFROM( &result, &sock, buf, &len, &flags, from, fromlen);
      315       315    1            if( result == EFAILURE)
      316       316    1                xsl$maperror();
      317       317    1            return( result);
      318       318    1        }
      319       319
      320       320             int writev( sock, iov, iovcount)
      321       321                 int sock;
      322       322                 struct iovec iov[];
      323       323                 int iovcount;
      324       324             {
      325       325    1            int result;
      326       326    1
      327       327    1            XSL$WRITEV( &result, &sock, iov, &iovcount);
      328       328    1            if( result == EFAILURE)
      329       329    1                xsl$maperror();
      330       330    1            return( result);
      331       331    1        }
      332       332
      333       333             int readv( sock, iov, iovcount)
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=10 
      334       334                 int sock;
      335       335                 struct iovec iov[];
      336       336                 int iovcount;
      337       337             {
      338       338    1            int result;
      339       339    1
      340       340    1            XSL$READV( &result, &sock, iov, &iovcount);
      341       341    1            if( result == EFAILURE)
      342       342    1                xsl$maperror();
      343       343    1            return( result);
      344       344    1        }
      345       345
      346       346             int sendmsg( sock, msg, flags)
      347       347                 int sock;
      348       348                 struct msghdr msg[];
      349       349                 int flags;
      350       350             {
      351       351    1            int result;
      352       352    1
      353       353    1            XSL$SENDMSG( &result, &sock, msg, &flags);
      354       354    1            if( result == EFAILURE)
      355       355    1                xsl$maperror();
      356       356    1            return( result);
      357       357    1        }
      358       358
      359       359             int recvmsg( sock, msg, flags)
      360       360                 int sock;
      361       361                 struct msghdr msg[];
      362       362                 int flags;
      363       363             {
      364       364    1            int result;
      365       365    1
      366       366    1            XSL$RECVMSG( &result, &sock, msg, &flags);
      367       367    1            if( result == EFAILURE)
      368       368    1                xsl$maperror();
      369       369    1            return( result);
      370       370    1        }
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=11 
      371       371
      372       372             int select( numfds, rdmask, wrtmask, excmask, timeout)
      373       373                 int numfds;
      374       374                 fd_set *rdmask, *wrtmask, *excmask;
      375       375                 struct timeval *timeout;
      376       376             {
      377       377    1            int result;
      378       378    1
      379       379    1            XSL$SELECT( &result, &numfds, rdmask, wrtmask, excmask, timeout);
      380       380    1            if( result < 0)
      381       381    1                xsl$maperror();
      382       382    1            return( result);
      383       383    1        }
      384       384
      385       385             int shutdown( sock, how)
      386       386                 int sock, how;
      387       387             {
      388       388    1            int result;
      389       389    1
      390       390    1            XSL$SHUTDOWN( &result, &sock, &how);
      391       391    1            if( result)
      392       392    1                xsl$maperror();
      393       393    1            return( result);
      394       394    1        }
      395       395
      396       396             int gethostname( name, namelen)
      397       397                 char *name;
      398       398                 int namelen;
      399       399             {
      400       400    1            int result;
      401       401    1
      402       402    1            XSL$GETHOSTNAME( &result, name, &namelen);
      403       403    1            if( result)
      404       404    1                xsl$maperror();
      405       405    1            return( result);
      406       406    1        }
      407       407
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=12 
      408       408             int getpeername( sock, name, namelen)
      409       409                 int sock, *namelen;
      410       410                 struct sockaddr *name;
      411       411             {
      412       412    1            int result;
      413       413    1
      414       414    1            XSL$GETPEERNAME( &result, &sock, name, namelen);
      415       415    1            if( result)
      416       416    1                xsl$maperror();
      417       417    1            return( result);
      418       418    1        }
      419       419
      420       420             int getsockname( sock, name, namelen)
      421       421                 int sock, *namelen;
      422       422                 struct sockaddr *name;
      423       423             {
      424       424    1            int result;
      425       425    1
      426       426    1            XSL$GETSOCKNAME( &result, &sock, name, namelen);
      427       427    1            if( result)
      428       428    1                xsl$maperror();
      429       429    1            return( result);
      430       430    1        }
      431       431
      432       432             int getsockopt( sock, level, optname, optval, optlen)
      433       433                 int sock, level, optname, *optlen;
      434       434                 char *optval;
      435       435             {
      436       436    1            int result;
      437       437    1
      438       438    1            XSL$GETSOCKOPT( &result, &sock, &level, &optname, optval, optlen);
      439       439    1            if( result)
      440       440    1                xsl$maperror();
      441       441    1            return( result);
      442       442    1        }
      443       443
      444       444             int setsockopt( sock, level, optname, optval, optlen)
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=13 
      445       445                 int sock, level, optname, optlen;
      446       446                 char *optval;
      447       447             {
      448       448    1            int result;
      449       449    1
      450       450    1            XSL$SETSOCKOPT( &result, &sock, &level, &optname, optval, &optlen);
      451       451    1            if( result)
      452       452    1                xsl$maperror();
      453       453    1            return( result);
      454       454    1        }
      455       455
      456       456             unsigned long htonl( hostlong)
      457       457                 unsigned long hostlong;
      458       458             {
      459       459    1            unsigned long result;
      460       460    1
      461       461    1            XSL$HTONL( &result, &hostlong);
      462       462    1            return( result);
      463       463    1        }
      464       464
      465       465             unsigned short htons( hostshort)
      466       466                 unsigned short hostshort;
"XSL$CFUNCS.:TCA2TSI", line 466: (warning) function htons parameter 1 type not compatible with default promot
ions
      467       467             {
      468       468    1            unsigned short result;
      469       469    1
      470       470    1            XSL$HTONS( &result, &hostshort);
      471       471    1            return( result);
      472       472    1        }
      473       473
      474       474             unsigned long ntohl( netlong)
      475       475                 unsigned long netlong;
      476       476             {
      477       477    1            unsigned long result;
      478       478    1
      479       479    1            XSL$NTOHL( &result, &netlong);
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=14 
      480       480    1            return( result);
      481       481    1        }
      482       482
      483       483             unsigned short ntohs( netshort)
      484       484                 unsigned short netshort;
"XSL$CFUNCS.:TCA2TSI", line 484: (warning) function ntohs parameter 1 type not compatible with default promot
ions
      485       485             {
      486       486    1            unsigned short result;
      487       487    1
      488       488    1            XSL$NTOHS( &result, &netshort);
      489       489    1            return( result);
      490       490    1        }
      491       491
      492       492             unsigned long inet_addr( cp)
      493       493                 char *cp;
      494       494             {
      495       495    1            unsigned long result;
      496       496    1
      497       497    1            XSL$INET_ADDR( &result, cp);
      498       498    1            return( result);
      499       499    1        }
      500       500
      501       501             int inet_lnaof( in)
      502       502                 struct in_addr in;
      503       503             {
      504       504    1            int result;
      505       505    1
      506       506    1            XSL$INET_LNAOF( &result, &in);
      507       507    1            return( result);
      508       508    1        }
      509       509
      510       510             struct in_addr inet_makeaddr( net, lna)
      511       511                 int net, lna;
      512       512             {
      513       513    1            struct in_addr result;
      514       514    1
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=15 
      515       515    1            XSL$INET_MAKEADDR( &result, &net, &lna);
      516       516    1            return( result);
      517       517    1        }
      518       518
      519       519             int inet_netof( in)
      520       520                 struct in_addr in;
      521       521             {
      522       522    1            int result;
      523       523    1
      524       524    1            XSL$INET_NETOF( &result, &in);
      525       525    1            return( result);
      526       526    1        }
      527       527
      528       528             unsigned long inet_network( cp)
      529       529                 char *cp;
      530       530             {
      531       531    1            unsigned long result;
      532       532    1
      533       533    1            XSL$INET_NETWORK( &result, cp);
      534       534    1            return( result);
      535       535    1        }
      536       536
      537       537             char *inet_ntoa( in)
      538       538                 struct in_addr in;
      539       539             {
      540       540    1            char *result;
      541       541    1
      542       542    1            XSL$INET_NTOA( &result, &in);
      543       543    1            return( result);
      544       544    1        }
      545       545
      546       546             struct hostent *gethostbyaddr( cp, len, type)
      547       547                 char *cp;
      548       548                 int len, type;
      549       549             {
      550       550    1            struct hostent *result;
      551       551    1
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=16 
      552       552    1            XSL$GETHOSTBYADDR( &result, cp, &len, &type);
      553       553    1            if( result == NULL)
      554       554    1                xsl$maperror();
      555       555    1            return( result);
      556       556    1        }
      557       557
      558       558             struct hostent *gethostbyname( name)
      559       559                 char *name;
      560       560             {
      561       561    1            struct hostent *result;
      562       562    1
      563       563    1            XSL$GETHOSTBYNAME( &result, name);
      564       564    1            if( result == NULL)
      565       565    1                xsl$maperror();
      566       566    1            return( result);
      567       567    1        }
      568       568
      569       569             struct hostent *gethostent()
      570       570             {
      571       571    1            struct hostent *result;
      572       572    1
      573       573    1            XSL$GETHOSTENT( &result);
      574       574    1            if( result == NULL)
      575       575    1                xsl$maperror();
      576       576    1            return( result);
      577       577    1        }
      578       578
      579       579             void *sethostent( stayopen)
      580       580                 int stayopen;
      581       581             {
      582       582    1            int result;
      583       583    1
      584       584    1            XSL$SETHOSTENT( &result, &stayopen);
      585       585    1            return( result);
"XSL$CFUNCS.:TCA2TSI", line 585: (warning) illegal conversion of int to pointer
      586       586    1        }
      587       587
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=17 
      588       588             void *endhostent()
      589       589             {
      590       590    1            int result;
      591       591    1
      592       592    1            XSL$ENDHOSTENT( &result);
      593       593    1            return( result);
"XSL$CFUNCS.:TCA2TSI", line 593: (warning) illegal conversion of int to pointer
      594       594    1        }
      595       595
      596       596             struct netent *getnetbyaddr( net, type)
      597       597                 int net, type;
      598       598             {
      599       599    1            struct netent *result;
      600       600    1
      601       601    1            XSL$GETNETBYADDR( &result, &net, &type);
      602       602    1            if( result == NULL)
      603       603    1                xsl$maperror();
      604       604    1            return( result);
      605       605    1        }
      606       606
      607       607             struct netent *getnetbyname( name)
      608       608                 char *name;
      609       609             {
      610       610    1            struct netent *result;
      611       611    1
      612       612    1            XSL$GETNETBYNAME( &result, name);
      613       613    1            if( result == NULL)
      614       614    1                xsl$maperror();
      615       615    1            return( result);
      616       616    1        }
      617       617
      618       618             struct netent *getnetent()
      619       619             {
      620       620    1            struct netent *result;
      621       621    1
      622       622    1            XSL$GETNETENT( &result);
      623       623    1            if( result == NULL)
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=18 
      624       624    1                xsl$maperror();
      625       625    1            return( result);
      626       626    1        }
      627       627
      628       628             void *setnetent( stayopen)
      629       629                 int stayopen;
      630       630             {
      631       631    1            int result;
      632       632    1
      633       633    1            XSL$SETNETENT( &result, &stayopen);
      634       634    1            return( result);
"XSL$CFUNCS.:TCA2TSI", line 634: (warning) illegal conversion of int to pointer
      635       635    1        }
      636       636
      637       637             void *endnetent()
      638       638             {
      639       639    1            int result;
      640       640    1
      641       641    1            XSL$ENDNETENT( &result);
      642       642    1            return( result);
"XSL$CFUNCS.:TCA2TSI", line 642: (warning) illegal conversion of int to pointer
      643       643    1        }
      644       644
      645       645             struct protoent *getprotobyname( name)
      646       646                 char *name;
      647       647             {
      648       648    1            struct protoent *result;
      649       649    1
      650       650    1            XSL$GETPROTOBYNAME( &result, name);
      651       651    1            if( result == NULL)
      652       652    1                xsl$maperror();
      653       653    1            return( result);
      654       654    1        }
      655       655
      656       656             struct protoent *getprotobynumber( proto)
      657       657                 int proto;
      658       658             {
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=19 
      659       659    1            struct protoent *result;
      660       660    1
      661       661    1            XSL$GETPROTOBYNUMBER( &result, &proto);
      662       662    1            if( result == NULL)
      663       663    1                xsl$maperror();
      664       664    1            return( result);
      665       665    1        }
      666       666
      667       667             struct protoent *getprotoent()
      668       668             {
      669       669    1            struct protoent *result;
      670       670    1
      671       671    1            XSL$GETPROTOENT( &result);
      672       672    1            if( result == NULL)
      673       673    1                xsl$maperror();
      674       674    1            return( result);
      675       675    1        }
      676       676
      677       677             void *setprotoent( stayopen)
      678       678                 int stayopen;
      679       679             {
      680       680    1            int result;
      681       681    1
      682       682    1            XSL$SETPROTOENT( &result, &stayopen);
      683       683    1            return( result);
"XSL$CFUNCS.:TCA2TSI", line 683: (warning) illegal conversion of int to pointer
      684       684    1        }
      685       685
      686       686             void *endprotoent()
      687       687             {
      688       688    1            int result;
      689       689    1
      690       690    1            XSL$ENDPROTOENT( &result);
      691       691    1            return( result);
"XSL$CFUNCS.:TCA2TSI", line 691: (warning) illegal conversion of int to pointer
      692       692    1        }
      693       693
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=20 
      694       694             struct servent *getservbyname( name, proto)
      695       695                 char *name, *proto;
      696       696             {
      697       697    1            struct servent *result;
      698       698    1
      699       699    1            XSL$GETSERVBYNAME( &result, name, proto);
      700       700    1            if( result == NULL)
      701       701    1                xsl$maperror();
      702       702    1            return( result);
      703       703    1        }
      704       704
      705       705             struct servent *getservbyport( port, proto)
      706       706                 int port;
      707       707                 char *proto;
      708       708             {
      709       709    1            struct servent *result;
      710       710    1
      711       711    1            XSL$GETSERVBYPORT( &result, &port, proto);
      712       712    1            if( result == NULL)
      713       713    1                xsl$maperror();
      714       714    1            return( result);
      715       715    1        }
      716       716
      717       717             struct servent *getservent()
      718       718             {
      719       719    1            struct servent *result;
      720       720    1
      721       721    1            XSL$GETSERVENT( &result);
      722       722    1            if( result == NULL)
      723       723    1                xsl$maperror();
      724       724    1            return( result);
      725       725    1        }
      726       726
      727       727             void *setservent( stayopen)
      728       728                 int stayopen;
      729       729             {
      730       730    1            int result;
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=21 
      731       731    1
      732       732    1            XSL$SETSERVENT( &result, &stayopen);
      733       733    1            return( result);
"XSL$CFUNCS.:TCA2TSI", line 733: (warning) illegal conversion of int to pointer
      734       734    1        }
      735       735
      736       736             void *endservent()
      737       737             {
      738       738    1            int result;
      739       739    1
      740       740    1            XSL$ENDSERVENT( &result);
      741       741    1            return( result);
"XSL$CFUNCS.:TCA2TSI", line 741: (warning) illegal conversion of int to pointer
      742       742    1        }
      743       743
      744       744             /* here are some non-networking functions from BSD */
      745       745             /* ..so the appl coder doesn't have to write 'em.. */
      746       746
      747       747             /*F* NAME: bcmp()  --  Bytestring Comparison
      748       748             ..::IT "Purpose:"
      749       749             .INL +4
      750       750             Compares two strings of bytes and returns status.
      751       751             ..::IT "C Usage:"
      752       752             .INL +4
      753       753             .FIF
      754       754             status = bcmp( ptr1, ptr2, len );
      755       755             ..::IT "Parameters:"
      756       756             .INL +4
      757       757             .FIF
      758       758             ptr1        address of first bytestring in memory
      759       759
      760       760             ptr2        address of second bytestring in memory
      761       761
      762       762             len         integer number of bytes to compare
      763       763             ..::IT "Result:"
      764       764             .INL +4
      765       765             .FIF
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=22 
      766       766             status      integer status of comparison
      767       767             ..::IT "Description:"
      768       768             The bcmp() function compares two strings of bytes and returns zero if they
      769       769             are identical, otherwise returns a nonzero value.  Both strings are assumed
      770       770             to be len bytes long.  If len is zero then bcmp() returns zero.
      771       771             ..::IT "Errors:"
      772       772             No error checking is performed by the bcmp() function.
      773       773             */
      774       774             /*F* NAME: bcopy()  --  Bytestring Copy
      775       775             ..::IT "Purpose:"
      776       776             .INL +4
      777       777             Copies a string of bytes from one memory address to another.
      778       778             ..::IT "C Usage:"
      779       779             .INL +4
      780       780             .FIF
      781       781             bcopy( ptr1, ptr2, len );
      782       782             ..::IT "Parameters:"
      783       783             .INL +4
      784       784             .FIF
      785       785             ptr1        address of source bytestring in memory
      786       786
      787       787             ptr2        address of destination bytestring in memory
      788       788
      789       789             len         integer number of bytes to copy
      790       790             ..::IT "Result:"
      791       791             The result of the bcopy() function is undefined.
      792       792             ..::IT "Description:"
      793       793             The bcopy() function copies len bytes starting at ptr1 to the address given
      794       794             by ptr2.  Overlap of source and destination has an undefined result.
      795       795             ..::IT "Errors:"
      796       796             No error checking is performed by the bcopy() function.
      797       797             */
      798       798             /*F* NAME: bzero()  --  Bytestring Zero
      799       799             ..::IT "Purpose:"
      800       800             .INL +4
      801       801             Zeroes a string of bytes in memory.
      802       802             ..::IT "C Usage:"
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=23 
      803       803             .INL +4
      804       804             .FIF
      805       805             bzero( ptr, len );
      806       806             ..::IT "Parameters:"
      807       807             .INL +4
      808       808             .FIF
      809       809             ptr         address of bytestring to be zeroed
      810       810
      811       811             len         integer number of bytes to be zeroed
      812       812             ..::IT "Result:"
      813       813             The result of the bzero() function is undefined.
      814       814             ..::IT "Description:"
      815       815             The bzero() function zeroes len bytes of a string in memory.
      816       816             ..::IT "Errors:"
      817       817             No error checking is performed by the bzero() function.
      818       818             */
      819       819
      820       820             void *bcopy( const void *src, void *dest, int nbytes) {
      821       821    1            return( memcpy( dest, src, nbytes));
      822       822    1        }
      823       823
      824       824             void *bzero( void *dest, int nbytes) {
      825       825    1            return( memset( dest, 0, nbytes));
      826       826    1        }
      827       827
      828       828             int bcmp( const void *ptr1, const void *ptr2, int nbytes) {
      829       829    1            return( memcmp( ptr1, ptr2, nbytes));
      830       830    1        }
---  Include file information  ---

   fcntl:h.:LIBRARY. is referenced
   stdio:h.:LIBRARY. is referenced
   stdarg:h.:LIBRARY. is referenced
   stdlib:h.:LIBRARY. is referenced
   string:h.:LIBRARY. is referenced
   xu_cp6_c:h.:LIBRARY. is referenced
   xsl_errno:h.:TCA2TOU. is referenced
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=24 
   xsl_in:h.:TCA2TOU. is referenced
   xsl_netdb:h.:TCA2TOU. is referenced
   xsl_select:h.:TCA2TOU. is referenced
   xsl_socket:h.:TCA2TOU. is referenced

10 warnings were detected in the file XSL$CFUNCS.:TCA2TSI

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=25 

 Object Unit name= xsl$maperror                               File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:28:17.28 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    43     53  xsl$maperror
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes                     Std        0  xsl$maperror

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_0
                       Std       0 XBI_SET_ERRNO
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=26 

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=27 


        1         1             /*M*    XSL$CFUNCS      C-language interface to the XSL routines    */  
        2         2             /*T***********************************************************/  
        3         3             /*T*                                                         */  
        4         4             /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */  
        5         5             /*T*                                                         */  
        6         6             /*T***********************************************************/  
        7         7             /*X* DDA */  
        8         8               
        9         9             #include <fcntl.h>  
       10        10             #include <stdio.h>  
       11        11             #include <stdarg.h>  
       12        12             #include <stdlib.h>  
       13        13             #include <string.h>  
       14        14             #include <xu_cp6_c.h>  
       15        15             #include "xsl_errno:h"  
       16        16             #include "xsl_in:h"  
       17        17             #include "xsl_netdb:h"  
       18        18             #define FD_SETSIZE 36  
       19        19             #include "xsl_select:h"  
       20        20             #include "xsl_socket:h"  
       21        21               
       22        22             /* Creating and Naming Sockets */  
       23        23             extern void XSL$SOCKET();  
       24        24             extern void XSL$BIND();  
       25        25               
       26        26             /* Initiating Connections */  
       27        27             extern void XSL$LISTEN();  
       28        28             extern void XSL$ACCEPT();  
       29        29             extern void XSL$ACCEPT_SRVR();  
       30        30             extern void XSL$CONNECT();  
       31        31               
       32        32             /* Transferring Data */  
       33        33             extern void XSL$SEND();  
       34        34             extern void XSL$RECV();  
       35        35             extern void XSL$SENDTO();  
       36        36             extern void XSL$RECVFROM();  
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=28 
       37        37             extern void XSL$WRITE();  
       38        38             extern void XSL$READ();  
       39        39             extern void XSL$WRITEV();  
       40        40             extern void XSL$READV();  
       41        41             extern void XSL$SENDMSG();  
       42        42             extern void XSL$RECVMSG();  
       43        43               
       44        44             /* Synchronous I/O Multiplexing */  
       45        45             extern void XSL$SELECT();  
       46        46               
       47        47             /* Terminating Connections */  
       48        48             extern void XSL$SHUTDOWN();  
       49        49             extern void XSL$CLOSE();  
       50        50               
       51        51             /* Host and Socket Information Functions */  
       52        52             extern void XSL$GETHOSTNAME();  
       53        53             extern void XSL$GETPEERNAME();  
       54        54             extern void XSL$GETSOCKNAME();  
       55        55             extern void XSL$GETSOCKOPT();  
       56        56             extern void XSL$SETSOCKOPT();  
       57        57             extern void XSL$FCNTL();  
       58        58             extern void XSL$IOCTL();  
       59        59               
       60        60             /* Data Conversion Functions */  
       61        61             extern void XSL$HTONL();  
       62        62             extern void XSL$HTONS();  
       63        63             extern void XSL$NTOHL();  
       64        64             extern void XSL$HTOHS();  
       65        65               
       66        66             /* Internet Address Manipulation */  
       67        67             extern void XSL$INET_ADDR();  
       68        68             extern void XSL$INET_LNAOF();  
       69        69             extern void XSL$INET_MAKEADDR();  
       70        70             extern void XSL$INET_NETOF();  
       71        71             extern void XSL$INET_NETWORK();  
       72        72             extern void XSL$INET_NTOA();  
       73        73               
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=29 
       74        74             /* /etc/hosts File Manipulation */  
       75        75             extern void XSL$GETHOSTBYADDR();  
       76        76             extern void XSL$GETHOSTBYNAME();  
       77        77             extern void XSL$GETHOSTENT();  
       78        78             extern void XSL$SETHOSTENT();  
       79        79             extern void XSL$ENDHOSTENT();  
       80        80               
       81        81             /* /etc/networks File Manipulation */  
       82        82             extern void XSL$GETNETBYADDR();  
       83        83             extern void XSL$GETNETBYNAME();  
       84        84             extern void XSL$GETNETENT();  
       85        85             extern void XSL$SETNETENT();  
       86        86             extern void XSL$ENDNETENT();  
       87        87               
       88        88             /* /etc/protocols File Manipulation */  
       89        89             extern void XSL$GETPROTOBYNAME();  
       90        90             extern void XSL$GETPROTOBYNUMBER();  
       91        91             extern void XSL$GETPROTOENT();  
       92        92             extern void XSL$SETPROTOENT();  
       93        93             extern void XSL$ENDPROTOENT();  
       94        94               
       95        95             /* /etc/services File Manipulation */  
       96        96             extern void XSL$GETSERVBYNAME();  
       97        97             extern void XSL$GETSERVBYPORT();  
       98        98             extern void XSL$GETSERVENT();  
       99        99             extern void XSL$SETSERVENT();  
      100       100             extern void XSL$ENDSERVENT();  
      101       101               
      102       102             extern long XSL_ERRNO;  
      103       103                
      104       104             void XBI_SET_ERRNO( /* optional struct vlp_errcode * */ );  
      105       105             FILE *XB$GET_FILDES( int);  
      106       106             int XB$RELEASE_FILDES( int);  
      107       107                
      108       108             void xsl$maperror()  
      109       109             {  

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=30 
    109  0 000000   000000 700000 xent  xsl$maperror TSX0    _XBC_AUTO_0
         0 000001   000020 000000                    ZERO    16,0

      110       110    1            static struct vlp_errcode errcode={ 03023, 014, 0, 0, 3 };  
      111       111    1           
      112       112    1            if( XSL_ERRNO == -1)  

    112  0 000002   000000 236000 xsym               LDQ     XSL_ERRNO
         0 000003   000044 116000 0                  CMPQ    s:119+7
         0 000004   000011 601000 0                  TNZ     s:115

      113       113    1                XBI_SET_ERRNO();  /* get errcode from TCB */  

    113  0 000005   000045 631400 0                  EPPR1   s:119+8
         0 000006   000000 701000 xent               TSX1    XBI_SET_ERRNO
         0 000007   000000 236007                    LDQ     0,DL
         0 000010   000043 710000 0                  TRA     s:119+6

      114       114    1            else  
      115       115    1                if( XSL_ERRNO < 0 || XSL_ERRNO > 511)  

    115  0 000011   000000 234000 xsym               SZN     XSL_ERRNO
         0 000012   000016 604000 0                  TMI     s:116
         0 000013   000000 236000 xsym               LDQ     XSL_ERRNO
         0 000014   000777 116007                    CMPQ    511,DL
         0 000015   000025 604400 0                  TMOZ    s:118

      116       116    1                    XBI_SET_ERRNO( &XSL_ERRNO);  /* use supplied errcode */  

    116  0 000016   000046 236000 0                  LDQ     s:119+9
         0 000017   200005 756100                    STQ     __varyarg_ptr+2,,AUTO
         0 000020   200005 630500                    EPPR0   __varyarg_ptr+2,,AUTO
         0 000021   000047 631400 0                  EPPR1   s:119+10
         0 000022   000000 701000 xent               TSX1    XBI_SET_ERRNO
         0 000023   000000 236007                    LDQ     0,DL
         0 000024   000043 710000 0                  TRA     s:119+6

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=31 
      117       117    1                else {  
      118       118    2                    errcode.err = XSL_ERRNO;  

    118  0 000025   000050 236000 0                  LDQ     s:119+11
         0 000026   000000 376000 xsym               ANQ     inet_addr#s
         0 000027   200006 756100                    STQ     __varyarg_ptr+3,,AUTO
         0 000030   000000 236000 xsym               LDQ     XSL_ERRNO
         0 000031   037777 376007                    ANQ     16383,DL
         0 000032   000003 736000                    QLS     3
         0 000033   200006 276100                    ORQ     __varyarg_ptr+3,,AUTO
         0 000034   000000 756000 xsym               STQ     inet_addr#s

      119       119    2                    XBI_SET_ERRNO( &errcode);  /* generate XSL-?-3 errcode */  

    119  0 000035   000051 236000 0                  LDQ     s:119+12
         0 000036   200005 756100                    STQ     __varyarg_ptr+2,,AUTO
         0 000037   200005 630500                    EPPR0   __varyarg_ptr+2,,AUTO
         0 000040   000047 631400 0                  EPPR1   s:119+10
         0 000041   000000 701000 xent               TSX1    XBI_SET_ERRNO
         0 000042   000000 236007                    LDQ     0,DL
         0 000043   000000 702000 xent               TSX2    _XBC_FARET
         0 000044   777777 777777                    ZERO    -1,-1
         0 000045   000000 000000                    ZERO    0,0
         0 000046   000000 000000 xsym               ZERO    XSL_ERRNO0,0
         0 000047   000001 000000                    ZERO    1,0
         0 000050   777777 400007                    ZERO    -1,-131065
         0 000051   000000 000000 xsym               ZERO    inet_addr#s0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=32 

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   109-   122      7   136     0      0  y        0   1 xsl$maperror
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=33 

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Assign     3 Call       2 If         1 Proc

 # major stmts=    6 Code/major= 7.16 # stmts=    7 Code/stmt= 6.14  Point total= 90.3
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=34 

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO                  0-0-0/c STRC        r,m   1 errcode
     0-0-0/c STRC        r,m   1 errcode

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=35 

 Object Unit name= xsl$sockethook                             File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:28:22.96 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero   354    542  xsl$sockethook
    1   Data  even  zero     0      0
    2  RoData even  none    10     12

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes                     Std        0  xsl$sockethook

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_2
                       Std       0 XSL$CLOSE
         yes           Std       1 XB$RELEASE_FILDES
                       Std       0 XSL$FCNTL
                       Std       0 XSL$IOCTL
                       Std       0 XSL$READ
                       Std       0 XSL$WRITE
                       Std       0 XBI_SET_ERRNO
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=36 

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=37 


      121       121    1            return;  
      122       122    1        }  
      123       123                
      124       124             int xsl$sockethook( fnc, args)  
      125       125                 int fnc;  

    125  0 000000   000000 700000 xent  xsl$socketh* TSX0    _XBC_AUTO_2
         0 000001   000044 000002                    ZERO    36,2

      126       126                 va_list args;  
      127       127             {  
      128       128    1            char *buf;  
      129       129    1            void *ptr;  
      130       130    1            int len, fd, cmd, arg, result;  
      131       131    1           static struct vlp_errcode ERROPNOTSUPP={ 03023, 014, 0, EOPNOTSUPP, 3 };  
      132       132    1           
      133       133    1            fd = va_arg( args, int);  

    133  0 000002   200005 236100                    LDQ     args,,AUTO
         0 000003   006014 116007                    CMPQ    3084,DL
         0 000004   000032 600000 0                  TZE     s:133+24
         0 000005   200005 473500                    LDP3    args,,AUTO
         0 000006   200005 236100                    LDQ     args,,AUTO
         0 000007   006014 676007                    ERQ     3084,DL
         0 000010   000020 732000                    QRS     16
         0 000011   000004 506007                    DIV     4,DL
         0 000012   000000 531000                    NEG     0
         0 000013   000004 075007                    ADA     4,DL
         0 000014   000003 375007                    ANA     3,DL
         0 000015   300000 630500                    EPPR0   0,,PR3
         0 000016   000000 500505                    A9BD    0,AL,PR0
         0 000017   200005 450500                    STP0    args,,AUTO
         0 000020   200005 236100                    LDQ     args,,AUTO
         0 000021   200022 756100                    STQ     buf+1,,AUTO
         0 000022   000533 236000 0                  LDQ     s:168+2
         0 000023   200005 036100                    ADLQ    args,,AUTO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=38 
         0 000024   200005 756100                    STQ     args,,AUTO
         0 000025   200022 473500                    LDP3    buf+1,,AUTO
         0 000026   000100 100500                    MLR     fill='000'O
         0 000027   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         0 000030   200012 000004                    ADSC9   args+5,,AUTO             cn=0,n=4
         0 000031   000033 710000 0                  TRA     s:133+25
         0 000032   200012 450100                    STZ     args+5,,AUTO
         0 000033   200012 236100                    LDQ     args+5,,AUTO
         0 000034   200016 756100                    STQ     fd,,AUTO

      134       134    1            switch( fnc) {  

    134  0 000035   200004 236100                    LDQ     fnc,,AUTO
         0 000036   200023 756100                    STQ     buf+2,,AUTO
         0 000037   000511 710000 0                  TRA     s:163+3

      135       135    2                case FNC_CLOSE:  
      136       136    2                    XSL$CLOSE( &result, &fd);  

    136  0 000040   200013 630500                    EPPR0   result,,AUTO
         0 000041   200011 450500                    STP0    args+4,,AUTO
         0 000042   200016 630500                    EPPR0   fd,,AUTO
         0 000043   200012 450500                    STP0    args+5,,AUTO
         0 000044   200011 630500                    EPPR0   args+4,,AUTO
         0 000045   000534 631400 0                  EPPR1   s:168+3
         0 000046   000000 701000 xent               TSX1    XSL$CLOSE
         0 000047   000000 236007                    LDQ     0,DL

      137       137    2                    if( result == ESUCCESS)  

    137  0 000050   200013 234100                    SZN     result,,AUTO
         0 000051   000060 601000 0                  TNZ     s:139

      138       138    2                        XB$RELEASE_FILDES( fd);  

    138  0 000052   200016 236100                    LDQ     fd,,AUTO
         0 000053   200012 756100                    STQ     args+5,,AUTO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=39 
         0 000054   200012 630500                    EPPR0   args+5,,AUTO
         0 000055   000533 631400 0                  EPPR1   s:168+2
         0 000056   000000 701000 xent               TSX1    XB$RELEASE_FILDES
         0 000057   000000 236007                    LDQ     0,DL

      139       139    2                    break;  

    139  0 000060   000522 710000 0                  TRA     s:165

      140       140    2                case FNC_FCNTL:  
      141       141    2                    cmd = va_arg( args, int);  

    141  0 000061   200005 236100                    LDQ     args,,AUTO
         0 000062   006014 116007                    CMPQ    3084,DL
         0 000063   000111 600000 0                  TZE     s:141+24
         0 000064   200005 473500                    LDP3    args,,AUTO
         0 000065   200005 236100                    LDQ     args,,AUTO
         0 000066   006014 676007                    ERQ     3084,DL
         0 000067   000020 732000                    QRS     16
         0 000070   000004 506007                    DIV     4,DL
         0 000071   000000 531000                    NEG     0
         0 000072   000004 075007                    ADA     4,DL
         0 000073   000003 375007                    ANA     3,DL
         0 000074   300000 630500                    EPPR0   0,,PR3
         0 000075   000000 500505                    A9BD    0,AL,PR0
         0 000076   200005 450500                    STP0    args,,AUTO
         0 000077   200005 236100                    LDQ     args,,AUTO
         0 000100   200024 756100                    STQ     buf+3,,AUTO
         0 000101   000533 236000 0                  LDQ     s:168+2
         0 000102   200005 036100                    ADLQ    args,,AUTO
         0 000103   200005 756100                    STQ     args,,AUTO
         0 000104   200024 473500                    LDP3    buf+3,,AUTO
         0 000105   000100 100500                    MLR     fill='000'O
         0 000106   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         0 000107   200012 000004                    ADSC9   args+5,,AUTO             cn=0,n=4
         0 000110   000112 710000 0                  TRA     s:141+25
         0 000111   200012 450100                    STZ     args+5,,AUTO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=40 
         0 000112   200012 236100                    LDQ     args+5,,AUTO
         0 000113   200015 756100                    STQ     cmd,,AUTO

      142       142    2                    arg = va_arg( args, int);  

    142  0 000114   200005 236100                    LDQ     args,,AUTO
         0 000115   006014 116007                    CMPQ    3084,DL
         0 000116   000144 600000 0                  TZE     s:142+24
         0 000117   200005 473500                    LDP3    args,,AUTO
         0 000120   200005 236100                    LDQ     args,,AUTO
         0 000121   006014 676007                    ERQ     3084,DL
         0 000122   000020 732000                    QRS     16
         0 000123   000004 506007                    DIV     4,DL
         0 000124   000000 531000                    NEG     0
         0 000125   000004 075007                    ADA     4,DL
         0 000126   000003 375007                    ANA     3,DL
         0 000127   300000 630500                    EPPR0   0,,PR3
         0 000130   000000 500505                    A9BD    0,AL,PR0
         0 000131   200005 450500                    STP0    args,,AUTO
         0 000132   200005 236100                    LDQ     args,,AUTO
         0 000133   200025 756100                    STQ     buf+4,,AUTO
         0 000134   000533 236000 0                  LDQ     s:168+2
         0 000135   200005 036100                    ADLQ    args,,AUTO
         0 000136   200005 756100                    STQ     args,,AUTO
         0 000137   200025 473500                    LDP3    buf+4,,AUTO
         0 000140   000100 100500                    MLR     fill='000'O
         0 000141   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         0 000142   200012 000004                    ADSC9   args+5,,AUTO             cn=0,n=4
         0 000143   000145 710000 0                  TRA     s:142+25
         0 000144   200012 450100                    STZ     args+5,,AUTO
         0 000145   200012 236100                    LDQ     args+5,,AUTO
         0 000146   200014 756100                    STQ     arg,,AUTO

      143       143    2                    XSL$FCNTL( &result, &fd, &cmd, &arg);  

    143  0 000147   200013 630500                    EPPR0   result,,AUTO
         0 000150   200007 450500                    STP0    args+2,,AUTO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=41 
         0 000151   200016 630500                    EPPR0   fd,,AUTO
         0 000152   200010 450500                    STP0    args+3,,AUTO
         0 000153   200015 630500                    EPPR0   cmd,,AUTO
         0 000154   200011 450500                    STP0    args+4,,AUTO
         0 000155   200014 630500                    EPPR0   arg,,AUTO
         0 000156   200012 450500                    STP0    args+5,,AUTO
         0 000157   200007 630500                    EPPR0   args+2,,AUTO
         0 000160   000535 631400 0                  EPPR1   s:168+4
         0 000161   000000 701000 xent               TSX1    XSL$FCNTL
         0 000162   000000 236007                    LDQ     0,DL

      144       144    2                    break;  

    144  0 000163   000522 710000 0                  TRA     s:165

      145       145    2                case FNC_IOCTL:  
      146       146    2                    cmd = va_arg( args, int);  

    146  0 000164   200005 236100                    LDQ     args,,AUTO
         0 000165   006014 116007                    CMPQ    3084,DL
         0 000166   000214 600000 0                  TZE     s:146+24
         0 000167   200005 473500                    LDP3    args,,AUTO
         0 000170   200005 236100                    LDQ     args,,AUTO
         0 000171   006014 676007                    ERQ     3084,DL
         0 000172   000020 732000                    QRS     16
         0 000173   000004 506007                    DIV     4,DL
         0 000174   000000 531000                    NEG     0
         0 000175   000004 075007                    ADA     4,DL
         0 000176   000003 375007                    ANA     3,DL
         0 000177   300000 630500                    EPPR0   0,,PR3
         0 000200   000000 500505                    A9BD    0,AL,PR0
         0 000201   200005 450500                    STP0    args,,AUTO
         0 000202   200005 236100                    LDQ     args,,AUTO
         0 000203   200026 756100                    STQ     buf+5,,AUTO
         0 000204   000533 236000 0                  LDQ     s:168+2
         0 000205   200005 036100                    ADLQ    args,,AUTO
         0 000206   200005 756100                    STQ     args,,AUTO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=42 
         0 000207   200026 473500                    LDP3    buf+5,,AUTO
         0 000210   000100 100500                    MLR     fill='000'O
         0 000211   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         0 000212   200012 000004                    ADSC9   args+5,,AUTO             cn=0,n=4
         0 000213   000215 710000 0                  TRA     s:146+25
         0 000214   200012 450100                    STZ     args+5,,AUTO
         0 000215   200012 236100                    LDQ     args+5,,AUTO
         0 000216   200015 756100                    STQ     cmd,,AUTO

      147       147    2                    ptr = va_arg( args, void *);  

    147  0 000217   200005 236100                    LDQ     args,,AUTO
         0 000220   006014 116007                    CMPQ    3084,DL
         0 000221   000247 600000 0                  TZE     s:147+24
         0 000222   200005 473500                    LDP3    args,,AUTO
         0 000223   200005 236100                    LDQ     args,,AUTO
         0 000224   006014 676007                    ERQ     3084,DL
         0 000225   000020 732000                    QRS     16
         0 000226   000004 506007                    DIV     4,DL
         0 000227   000000 531000                    NEG     0
         0 000230   000004 075007                    ADA     4,DL
         0 000231   000003 375007                    ANA     3,DL
         0 000232   300000 630500                    EPPR0   0,,PR3
         0 000233   000000 500505                    A9BD    0,AL,PR0
         0 000234   200005 450500                    STP0    args,,AUTO
         0 000235   200005 236100                    LDQ     args,,AUTO
         0 000236   200027 756100                    STQ     buf+6,,AUTO
         0 000237   000533 236000 0                  LDQ     s:168+2
         0 000240   200005 036100                    ADLQ    args,,AUTO
         0 000241   200005 756100                    STQ     args,,AUTO
         0 000242   200027 473500                    LDP3    buf+6,,AUTO
         0 000243   000100 100500                    MLR     fill='000'O
         0 000244   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         0 000245   200012 000004                    ADSC9   args+5,,AUTO             cn=0,n=4
         0 000246   000251 710000 0                  TRA     s:147+26
         0 000247   006014 236007                    LDQ     3084,DL
         0 000250   200012 756100                    STQ     args+5,,AUTO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=43 
         0 000251   200012 236100                    LDQ     args+5,,AUTO
         0 000252   200020 756100                    STQ     ptr,,AUTO

      148       148    2                    XSL$IOCTL( &result, &fd, &cmd, ptr);  

    148  0 000253   200013 630500                    EPPR0   result,,AUTO
         0 000254   200007 450500                    STP0    args+2,,AUTO
         0 000255   200016 630500                    EPPR0   fd,,AUTO
         0 000256   200010 450500                    STP0    args+3,,AUTO
         0 000257   200015 630500                    EPPR0   cmd,,AUTO
         0 000260   200011 450500                    STP0    args+4,,AUTO
         0 000261   200020 236100                    LDQ     ptr,,AUTO
         0 000262   200012 756100                    STQ     args+5,,AUTO
         0 000263   200007 630500                    EPPR0   args+2,,AUTO
         0 000264   000535 631400 0                  EPPR1   s:168+4
         0 000265   000000 701000 xent               TSX1    XSL$IOCTL
         0 000266   000000 236007                    LDQ     0,DL

      149       149    2                    break;  

    149  0 000267   000522 710000 0                  TRA     s:165

      150       150    2                case FNC_READ:  
      151       151    2                    buf = va_arg( args, char *);  

    151  0 000270   200005 236100                    LDQ     args,,AUTO
         0 000271   006014 116007                    CMPQ    3084,DL
         0 000272   000320 600000 0                  TZE     s:151+24
         0 000273   200005 473500                    LDP3    args,,AUTO
         0 000274   200005 236100                    LDQ     args,,AUTO
         0 000275   006014 676007                    ERQ     3084,DL
         0 000276   000020 732000                    QRS     16
         0 000277   000004 506007                    DIV     4,DL
         0 000300   000000 531000                    NEG     0
         0 000301   000004 075007                    ADA     4,DL
         0 000302   000003 375007                    ANA     3,DL
         0 000303   300000 630500                    EPPR0   0,,PR3
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=44 
         0 000304   000000 500505                    A9BD    0,AL,PR0
         0 000305   200005 450500                    STP0    args,,AUTO
         0 000306   200005 236100                    LDQ     args,,AUTO
         0 000307   200030 756100                    STQ     buf+7,,AUTO
         0 000310   000533 236000 0                  LDQ     s:168+2
         0 000311   200005 036100                    ADLQ    args,,AUTO
         0 000312   200005 756100                    STQ     args,,AUTO
         0 000313   200030 473500                    LDP3    buf+7,,AUTO
         0 000314   000100 100500                    MLR     fill='000'O
         0 000315   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         0 000316   200012 000004                    ADSC9   args+5,,AUTO             cn=0,n=4
         0 000317   000322 710000 0                  TRA     s:151+26
         0 000320   006014 236007                    LDQ     3084,DL
         0 000321   200012 756100                    STQ     args+5,,AUTO
         0 000322   200012 236100                    LDQ     args+5,,AUTO
         0 000323   200021 756100                    STQ     buf,,AUTO

      152       152    2                    len = va_arg( args, int);  

    152  0 000324   200005 236100                    LDQ     args,,AUTO
         0 000325   006014 116007                    CMPQ    3084,DL
         0 000326   000354 600000 0                  TZE     s:152+24
         0 000327   200005 473500                    LDP3    args,,AUTO
         0 000330   200005 236100                    LDQ     args,,AUTO
         0 000331   006014 676007                    ERQ     3084,DL
         0 000332   000020 732000                    QRS     16
         0 000333   000004 506007                    DIV     4,DL
         0 000334   000000 531000                    NEG     0
         0 000335   000004 075007                    ADA     4,DL
         0 000336   000003 375007                    ANA     3,DL
         0 000337   300000 630500                    EPPR0   0,,PR3
         0 000340   000000 500505                    A9BD    0,AL,PR0
         0 000341   200005 450500                    STP0    args,,AUTO
         0 000342   200005 236100                    LDQ     args,,AUTO
         0 000343   200031 756100                    STQ     buf+8,,AUTO
         0 000344   000533 236000 0                  LDQ     s:168+2
         0 000345   200005 036100                    ADLQ    args,,AUTO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=45 
         0 000346   200005 756100                    STQ     args,,AUTO
         0 000347   200031 473500                    LDP3    buf+8,,AUTO
         0 000350   000100 100500                    MLR     fill='000'O
         0 000351   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         0 000352   200012 000004                    ADSC9   args+5,,AUTO             cn=0,n=4
         0 000353   000355 710000 0                  TRA     s:152+25
         0 000354   200012 450100                    STZ     args+5,,AUTO
         0 000355   200012 236100                    LDQ     args+5,,AUTO
         0 000356   200017 756100                    STQ     len,,AUTO

      153       153    2                    XSL$READ( &result, &fd, buf, &len);  

    153  0 000357   200013 630500                    EPPR0   result,,AUTO
         0 000360   200007 450500                    STP0    args+2,,AUTO
         0 000361   200016 630500                    EPPR0   fd,,AUTO
         0 000362   200010 450500                    STP0    args+3,,AUTO
         0 000363   200021 236100                    LDQ     buf,,AUTO
         0 000364   200011 756100                    STQ     args+4,,AUTO
         0 000365   200017 630500                    EPPR0   len,,AUTO
         0 000366   200012 450500                    STP0    args+5,,AUTO
         0 000367   200007 630500                    EPPR0   args+2,,AUTO
         0 000370   000535 631400 0                  EPPR1   s:168+4
         0 000371   000000 701000 xent               TSX1    XSL$READ
         0 000372   000000 236007                    LDQ     0,DL

      154       154    2                    break;  

    154  0 000373   000522 710000 0                  TRA     s:165

      155       155    2                case FNC_WRITE:  
      156       156    2                    buf = va_arg( args, char *);  

    156  0 000374   200005 236100                    LDQ     args,,AUTO
         0 000375   006014 116007                    CMPQ    3084,DL
         0 000376   000424 600000 0                  TZE     s:156+24
         0 000377   200005 473500                    LDP3    args,,AUTO
         0 000400   200005 236100                    LDQ     args,,AUTO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=46 
         0 000401   006014 676007                    ERQ     3084,DL
         0 000402   000020 732000                    QRS     16
         0 000403   000004 506007                    DIV     4,DL
         0 000404   000000 531000                    NEG     0
         0 000405   000004 075007                    ADA     4,DL
         0 000406   000003 375007                    ANA     3,DL
         0 000407   300000 630500                    EPPR0   0,,PR3
         0 000410   000000 500505                    A9BD    0,AL,PR0
         0 000411   200005 450500                    STP0    args,,AUTO
         0 000412   200005 236100                    LDQ     args,,AUTO
         0 000413   200032 756100                    STQ     buf+9,,AUTO
         0 000414   000533 236000 0                  LDQ     s:168+2
         0 000415   200005 036100                    ADLQ    args,,AUTO
         0 000416   200005 756100                    STQ     args,,AUTO
         0 000417   200032 473500                    LDP3    buf+9,,AUTO
         0 000420   000100 100500                    MLR     fill='000'O
         0 000421   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         0 000422   200012 000004                    ADSC9   args+5,,AUTO             cn=0,n=4
         0 000423   000426 710000 0                  TRA     s:156+26
         0 000424   006014 236007                    LDQ     3084,DL
         0 000425   200012 756100                    STQ     args+5,,AUTO
         0 000426   200012 236100                    LDQ     args+5,,AUTO
         0 000427   200021 756100                    STQ     buf,,AUTO

      157       157    2                    len = va_arg( args, int);  

    157  0 000430   200005 236100                    LDQ     args,,AUTO
         0 000431   006014 116007                    CMPQ    3084,DL
         0 000432   000460 600000 0                  TZE     s:157+24
         0 000433   200005 473500                    LDP3    args,,AUTO
         0 000434   200005 236100                    LDQ     args,,AUTO
         0 000435   006014 676007                    ERQ     3084,DL
         0 000436   000020 732000                    QRS     16
         0 000437   000004 506007                    DIV     4,DL
         0 000440   000000 531000                    NEG     0
         0 000441   000004 075007                    ADA     4,DL
         0 000442   000003 375007                    ANA     3,DL
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=47 
         0 000443   300000 630500                    EPPR0   0,,PR3
         0 000444   000000 500505                    A9BD    0,AL,PR0
         0 000445   200005 450500                    STP0    args,,AUTO
         0 000446   200005 236100                    LDQ     args,,AUTO
         0 000447   200033 756100                    STQ     buf+10,,AUTO
         0 000450   000533 236000 0                  LDQ     s:168+2
         0 000451   200005 036100                    ADLQ    args,,AUTO
         0 000452   200005 756100                    STQ     args,,AUTO
         0 000453   200033 473500                    LDP3    buf+10,,AUTO
         0 000454   000100 100500                    MLR     fill='000'O
         0 000455   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         0 000456   200012 000004                    ADSC9   args+5,,AUTO             cn=0,n=4
         0 000457   000461 710000 0                  TRA     s:157+25
         0 000460   200012 450100                    STZ     args+5,,AUTO
         0 000461   200012 236100                    LDQ     args+5,,AUTO
         0 000462   200017 756100                    STQ     len,,AUTO

      158       158    2                    XSL$WRITE( &result, &fd, buf, &len);  

    158  0 000463   200013 630500                    EPPR0   result,,AUTO
         0 000464   200007 450500                    STP0    args+2,,AUTO
         0 000465   200016 630500                    EPPR0   fd,,AUTO
         0 000466   200010 450500                    STP0    args+3,,AUTO
         0 000467   200021 236100                    LDQ     buf,,AUTO
         0 000470   200011 756100                    STQ     args+4,,AUTO
         0 000471   200017 630500                    EPPR0   len,,AUTO
         0 000472   200012 450500                    STP0    args+5,,AUTO
         0 000473   200007 630500                    EPPR0   args+2,,AUTO
         0 000474   000535 631400 0                  EPPR1   s:168+4
         0 000475   000000 701000 xent               TSX1    XSL$WRITE
         0 000476   000000 236007                    LDQ     0,DL

      159       159    2                    break;  

    159  0 000477   000522 710000 0                  TRA     s:165

      160       160    2                case FNC_LSEEK:  /* not supported */  
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=48 
      161       161    2                default:  
      162       162    2                    XBI_SET_ERRNO( &ERROPNOTSUPP);  

    162  0 000500   000536 236000 0                  LDQ     s:168+5
         0 000501   200012 756100                    STQ     args+5,,AUTO
         0 000502   200012 630500                    EPPR0   args+5,,AUTO
         0 000503   000533 631400 0                  EPPR1   s:168+2
         0 000504   000000 701000 xent               TSX1    XBI_SET_ERRNO
         0 000505   000000 236007                    LDQ     0,DL

      163       163    2                    return( EFAILURE);  

    163  0 000506   000537 236000 0                  LDQ     s:168+6
         0 000507   200021 756100                    STQ     buf,,AUTO
         0 000510   000531 710000 0                  TRA     s:168
         0 000511   200023 235100                    LDA     buf+2,,AUTO
         0 000512   000001 135000 2                  SBLA    1
         0 000513   000005 604004                    TMI     s:163+10,IC
         0 000514   000002 115000 2                  CMPA    2
         0 000515   000003 605404                    TPNZ    s:163+10,IC
         0 000516   000003 235005 2                  LDA     3,AL
         0 000517   000000 710001                    TRA     0,AU
         0 000520   000000 235000 2                  LDA     0
         0 000521   000000 710001                    TRA     0,AU

      164       164    2                }  
      165       165    1            if( result < 0)  

    165  0 000522   200013 234100                    SZN     result,,AUTO
         0 000523   000527 605000 0                  TPL     s:167

      166       166    1                xsl$maperror();  

    166  0 000524   000540 631400 0                  EPPR1   s:168+7
         0 000525   000000 701000 xent               TSX1    xsl$maperror
         0 000526   000000 236007                    LDQ     0,DL

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=49 
      167       167    1            return( result);  

    167  0 000527   200013 236100                    LDQ     result,,AUTO
         0 000530   200021 756100                    STQ     buf,,AUTO

      168       168    1        }  

    168  0 000531   200021 236100                    LDQ     buf,,AUTO
         0 000532   000000 702000 xent               TSX2    _XBC_FARET
         0 000533   000001 000000                    ZERO    1,0
         0 000534   000002 000000                    ZERO    2,0
         0 000535   000004 000000                    ZERO    4,0
         0 000536   000001 000000 xsym               ZERO    inet_addr#s+1,0
         0 000537   777777 777777                    ZERO    -1,-1
         0 000540   000000 000000                    ZERO    0,0

(unnamed)
 Sect OctLoc
   2     000   000500 006000   000000 000000   000000 000005   000040 006000    ............. ..
   2     004   000061 006000   000270 006000   000500 006000   000374 006000    .1..............
   2     010   000164 006000   0***** ******                                    .t......
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=50 

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   125-   168     29   150     0      0  y        0   1 xsl$sockethook
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=51 

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     9 Assign     8 Call       2 If         2 Return     1 DoCase     5 Exit
     1 Proc       1 EndPrc

 # major stmts=   22 Code/major=16.09 # stmts=   29 Code/stmt=12.20  Point total= 81.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=52 

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr             14-0-0/w SBIN        r,m   1 arg
     5-0-0/w PTR         r,m   1 args                      21-0-0/w PTR         r,m   1 buf
    15-0-0/w SBIN        r,m   1 cmd                       16-0-0/w SBIN        r,m   1 fd
     4-0-0/w SBIN        r,m   1 fnc                       17-0-0/w SBIN        r,m   1 len
    20-0-0/w PTR         r,m   1 ptr                       13-0-0/w SBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c STRC        r,m   1 ERROPNOTSUPP               1-0-0/c STRC        r,m   1 ERROPNOTSUPP
     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=53 

 Object Unit name= socket                                     File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:28:33.36 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    56     70  socket
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  socket

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 XSL$SOCKET
         yes           Std       1 XB$GET_FILDES
                       Std       0 XSL$CLOSE
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET
 yes                   Std       0 xsl$sockethook
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=54 

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=55 


      170       170             int socket( af, type, protocol)  
      171       171                 int af, type, protocol;  

    171  0 000000   000000 700000 xent  socket       TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      172       172             {  
      173       173    1            int result;  
      174       174    1            FILE *fctx;  
      175       175    1          
      176       176    1            XSL$SOCKET( &result, &af, &type, &protocol);  

    176  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200010 450500                    STP0    protocol+2,,AUTO
         0 000004   200004 630500                    EPPR0   af,,AUTO
         0 000005   200011 450500                    STP0    protocol+3,,AUTO
         0 000006   200005 630500                    EPPR0   type,,AUTO
         0 000007   200012 450500                    STP0    protocol+4,,AUTO
         0 000010   200006 630500                    EPPR0   protocol,,AUTO
         0 000011   200013 450500                    STP0    protocol+5,,AUTO
         0 000012   200010 630500                    EPPR0   protocol+2,,AUTO
         0 000013   000061 631400 0                  EPPR1   s:189+2
         0 000014   000000 701000 xent               TSX1    XSL$SOCKET
         0 000015   000000 236007                    LDQ     0,DL

      177       177    1            if( result != EFAILURE) {  

    177  0 000016   200015 236100                    LDQ     result,,AUTO
         0 000017   000062 116000 0                  CMPQ    s:189+3
         0 000020   000051 600000 0                  TZE     s:186

      178       178    2                fctx = XB$GET_FILDES( result);  

    178  0 000021   200015 236100                    LDQ     result,,AUTO
         0 000022   200013 756100                    STQ     protocol+5,,AUTO
         0 000023   200013 630500                    EPPR0   protocol+5,,AUTO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=56 
         0 000024   000063 631400 0                  EPPR1   s:189+4
         0 000025   000000 701000 xent               TSX1    XB$GET_FILDES
         0 000026   000000 236007                    LDQ     0,DL
         0 000027   200014 756100                    STQ     fctx,,AUTO

      179       179    2                if( fctx)  

    179  0 000030   200014 236100                    LDQ     fctx,,AUTO
         0 000031   006014 116007                    CMPQ    3084,DL
         0 000032   000037 600000 0                  TZE     s:182

      180       180    2                    fctx->_auxio = xsl$sockethook;  

    180  0 000033   200014 473500                    LDP3    fctx,,AUTO
         0 000034   000064 236000 0                  LDQ     s:189+5
         0 000035   300015 756100                    STQ     13,,PR3
         0 000036   000051 710000 0                  TRA     s:186

      181       181    2                else {  
      182       182    3                    XSL$CLOSE( &fctx, &result);  

    182  0 000037   200014 630500                    EPPR0   fctx,,AUTO
         0 000040   200012 450500                    STP0    protocol+4,,AUTO
         0 000041   200015 630500                    EPPR0   result,,AUTO
         0 000042   200013 450500                    STP0    protocol+5,,AUTO
         0 000043   200012 630500                    EPPR0   protocol+4,,AUTO
         0 000044   000065 631400 0                  EPPR1   s:189+6
         0 000045   000000 701000 xent               TSX1    XSL$CLOSE
         0 000046   000000 236007                    LDQ     0,DL

      183       183    3                    result = EFAILURE;  

    183  0 000047   000062 236000 0                  LDQ     s:189+3
         0 000050   200015 756100                    STQ     result,,AUTO

      184       184    3                    }  
      185       185    2                }  
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=57 
      186       186    1            if( result == EFAILURE)  

    186  0 000051   200015 236100                    LDQ     result,,AUTO
         0 000052   000062 116000 0                  CMPQ    s:189+3
         0 000053   000057 601000 0                  TNZ     s:189

      187       187    1                xsl$maperror();  

    187  0 000054   000066 631400 0                  EPPR1   s:189+7
         0 000055   000000 701000 xent               TSX1    xsl$maperror
         0 000056   000000 236007                    LDQ     0,DL

      188       188    1            return( result);  

      189       189    1        }  

    189  0 000057   200015 236100                    LDQ     result,,AUTO
         0 000060   000000 702000 xent               TSX2    _XBC_FARET
         0 000061   000004 000000                    ZERO    4,0
         0 000062   777777 777777                    ZERO    -1,-1
         0 000063   000001 000000                    ZERO    1,0
         0 000064   000000 000000 xent               ZERO    xsl$sockethook0,0
         0 000065   000002 000000                    ZERO    2,0
         0 000066   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=58 

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   171-   189     12   139     0      0  y   y    3   1 socket
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=59 

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     3 Assign     3 Call       3 If         1 Return     1 Proc       1 EndPrc


 # major stmts=   10 Code/major= 5.60 # stmts=   12 Code/stmt= 4.66  Point total= 91.4
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=60 

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w SBIN        r,m   1 af
    14-0-0/w PTR         r,m   1 fctx                       6-0-0/w SBIN        r,m   1 protocol
    15-0-0/w SBIN        r,m   1 result                     5-0-0/w SBIN        r,m   1 type

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=61 

 Object Unit name= accept_srvr                                File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:28:37.12 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    54     66  accept_srvr
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  accept_srvr

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_2
                       Std       0 XSL$ACCEPT_SRVR
         yes           Std       1 XB$GET_FILDES
                       Std       0 XSL$CLOSE
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET
 yes                   Std       0 xsl$sockethook
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=62 

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=63 


      191       191             int accept_srvr( name, namelen)  
      192       192                 int *namelen;  

    192  0 000000   000000 700000 xent  accept_srvr  TSX0    _XBC_AUTO_2
         0 000001   000024 000002                    ZERO    20,2

      193       193                 struct sockaddr *name;  
      194       194             {  
      195       195    1            int result;  
      196       196    1            FILE *fctx;  
      197       197    1           
      198       198    1            XSL$ACCEPT_SRVR( &result, name, namelen);  

    198  0 000002   200013 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    namelen+2,,AUTO
         0 000004   200004 236100                    LDQ     name,,AUTO
         0 000005   200010 756100                    STQ     namelen+3,,AUTO
         0 000006   200005 236100                    LDQ     namelen,,AUTO
         0 000007   200011 756100                    STQ     namelen+4,,AUTO
         0 000010   200007 630500                    EPPR0   namelen+2,,AUTO
         0 000011   000057 631400 0                  EPPR1   s:211+2
         0 000012   000000 701000 xent               TSX1    XSL$ACCEPT_SRVR
         0 000013   000000 236007                    LDQ     0,DL

      199       199    1            if( result != EFAILURE) {  

    199  0 000014   200013 236100                    LDQ     result,,AUTO
         0 000015   000060 116000 0                  CMPQ    s:211+3
         0 000016   000047 600000 0                  TZE     s:208

      200       200    2                fctx = XB$GET_FILDES( result);  

    200  0 000017   200013 236100                    LDQ     result,,AUTO
         0 000020   200011 756100                    STQ     namelen+4,,AUTO
         0 000021   200011 630500                    EPPR0   namelen+4,,AUTO
         0 000022   000061 631400 0                  EPPR1   s:211+4
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=64 
         0 000023   000000 701000 xent               TSX1    XB$GET_FILDES
         0 000024   000000 236007                    LDQ     0,DL
         0 000025   200012 756100                    STQ     fctx,,AUTO

      201       201    2                if( fctx)  

    201  0 000026   200012 236100                    LDQ     fctx,,AUTO
         0 000027   006014 116007                    CMPQ    3084,DL
         0 000030   000035 600000 0                  TZE     s:204

      202       202    2                    fctx->_auxio = xsl$sockethook;  

    202  0 000031   200012 473500                    LDP3    fctx,,AUTO
         0 000032   000062 236000 0                  LDQ     s:211+5
         0 000033   300015 756100                    STQ     13,,PR3
         0 000034   000047 710000 0                  TRA     s:208

      203       203    2                else {  
      204       204    3                    XSL$CLOSE( &fctx, &result);  

    204  0 000035   200012 630500                    EPPR0   fctx,,AUTO
         0 000036   200010 450500                    STP0    namelen+3,,AUTO
         0 000037   200013 630500                    EPPR0   result,,AUTO
         0 000040   200011 450500                    STP0    namelen+4,,AUTO
         0 000041   200010 630500                    EPPR0   namelen+3,,AUTO
         0 000042   000063 631400 0                  EPPR1   s:211+6
         0 000043   000000 701000 xent               TSX1    XSL$CLOSE
         0 000044   000000 236007                    LDQ     0,DL

      205       205    3                    result = EFAILURE;  

    205  0 000045   000060 236000 0                  LDQ     s:211+3
         0 000046   200013 756100                    STQ     result,,AUTO

      206       206    3                    }  
      207       207    2                }  
      208       208    1            if( result == EFAILURE)  
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=65 

    208  0 000047   200013 236100                    LDQ     result,,AUTO
         0 000050   000060 116000 0                  CMPQ    s:211+3
         0 000051   000055 601000 0                  TNZ     s:211

      209       209    1                xsl$maperror();  

    209  0 000052   000064 631400 0                  EPPR1   s:211+7
         0 000053   000000 701000 xent               TSX1    xsl$maperror
         0 000054   000000 236007                    LDQ     0,DL

      210       210    1            return( result);  

      211       211    1        }  

    211  0 000055   200013 236100                    LDQ     result,,AUTO
         0 000056   000000 702000 xent               TSX2    _XBC_FARET
         0 000057   000003 000000                    ZERO    3,0
         0 000060   777777 777777                    ZERO    -1,-1
         0 000061   000001 000000                    ZERO    1,0
         0 000062   000000 000000 xent               ZERO    xsl$sockethook0,0
         0 000063   000002 000000                    ZERO    2,0
         0 000064   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=66 

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   192-   211     12   138     0      0  y   y    2   1 accept_srvr
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=67 

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     3 Assign     3 Call       3 If         1 Return     1 Proc       1 EndPrc


 # major stmts=   10 Code/major= 5.40 # stmts=   12 Code/stmt= 4.50  Point total= 91.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=68 

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr             12-0-0/w PTR         r,m   1 fctx
     4-0-0/w PTR         r,m   1 name                       5-0-0/w PTR         r,m   1 namelen
    13-0-0/w SBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=69 

 Object Unit name= bind                                       File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:28:40.52 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    24     30  bind
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  bind

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 XSL$BIND
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=70 

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=71 


      213       213             int bind( sock, name, namelen)  
      214       214                 int sock, namelen;  

    214  0 000000   000000 700000 xent  bind         TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      215       215                 struct sockaddr *name;  
      216       216             {  
      217       217    1            int result;  
      218       218    1          
      219       219    1            XSL$BIND( &result, &sock, name, &namelen);  

    219  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200011 450500                    STP0    namelen+3,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200012 450500                    STP0    namelen+4,,AUTO
         0 000006   200005 236100                    LDQ     name,,AUTO
         0 000007   200013 756100                    STQ     namelen+5,,AUTO
         0 000010   200006 630500                    EPPR0   namelen,,AUTO
         0 000011   200014 450500                    STP0    namelen+6,,AUTO
         0 000012   200011 630500                    EPPR0   namelen+3,,AUTO
         0 000013   000025 631400 0                  EPPR1   s:223+2
         0 000014   000000 701000 xent               TSX1    XSL$BIND
         0 000015   000000 236007                    LDQ     0,DL

      220       220    1            if( result)  

    220  0 000016   200015 234100                    SZN     result,,AUTO
         0 000017   000023 600000 0                  TZE     s:223

      221       221    1                xsl$maperror();  

    221  0 000020   000026 631400 0                  EPPR1   s:223+3
         0 000021   000000 701000 xent               TSX1    xsl$maperror
         0 000022   000000 236007                    LDQ     0,DL

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=72 
      222       222    1            return( result);  

      223       223    1        }  

    223  0 000023   200015 236100                    LDQ     result,,AUTO
         0 000024   000000 702000 xent               TSX2    _XBC_FARET
         0 000025   000004 000000                    ZERO    4,0
         0 000026   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=73 

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   214-   223      6   138     0      0  y   y    3   1 bind
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=74 

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 6.00 # stmts=    6 Code/stmt= 4.00  Point total= 89.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=75 

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 name
     6-0-0/w SBIN        r,m   1 namelen                   15-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=76 

 Object Unit name= listen                                     File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:28:43.72 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    22     26  listen
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  listen

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_2
                       Std       0 XSL$LISTEN
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=77 

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=78 


      225       225             int listen( sock, backlog)  
      226       226                 int sock, backlog;  

    226  0 000000   000000 700000 xent  listen       TSX0    _XBC_AUTO_2
         0 000001   000022 000002                    ZERO    18,2

      227       227             {  
      228       228    1            int result;  
      229       229    1          
      230       230    1            XSL$LISTEN( &result, &sock, &backlog);  

    230  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200006 450500                    STP0    backlog+1,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200007 450500                    STP0    backlog+2,,AUTO
         0 000006   200005 630500                    EPPR0   backlog,,AUTO
         0 000007   200010 450500                    STP0    backlog+3,,AUTO
         0 000010   200006 630500                    EPPR0   backlog+1,,AUTO
         0 000011   000023 631400 0                  EPPR1   s:234+2
         0 000012   000000 701000 xent               TSX1    XSL$LISTEN
         0 000013   000000 236007                    LDQ     0,DL

      231       231    1            if( result)  

    231  0 000014   200011 234100                    SZN     result,,AUTO
         0 000015   000021 600000 0                  TZE     s:234

      232       232    1                xsl$maperror();  

    232  0 000016   000024 631400 0                  EPPR1   s:234+3
         0 000017   000000 701000 xent               TSX1    xsl$maperror
         0 000020   000000 236007                    LDQ     0,DL

      233       233    1            return( result);  

      234       234    1        }  
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=79 

    234  0 000021   200011 236100                    LDQ     result,,AUTO
         0 000022   000000 702000 xent               TSX2    _XBC_FARET
         0 000023   000003 000000                    ZERO    3,0
         0 000024   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=80 

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   226-   234      6   137     0      0  y   y    2   1 listen
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=81 

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 5.50 # stmts=    6 Code/stmt= 3.66  Point total= 90.1
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=82 

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w SBIN        r,m   1 backlog
    11-0-0/w SBIN        r,m   1 result                     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=83 

 Object Unit name= accept                                     File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:28:46.72 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    56     70  accept
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  accept

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 XSL$ACCEPT
         yes           Std       1 XB$GET_FILDES
                       Std       0 XSL$CLOSE
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET
 yes                   Std       0 xsl$sockethook
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=84 

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=85 


      236       236             int accept( sock, name, namelen)  
      237       237                 int sock, *namelen;  

    237  0 000000   000000 700000 xent  accept       TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      238       238                 struct sockaddr *name;  
      239       239             {  
      240       240    1            int result;  
      241       241    1            FILE *fctx;  
      242       242    1          
      243       243    1            XSL$ACCEPT( &result, &sock, name, namelen);  

    243  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200010 450500                    STP0    namelen+2,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200011 450500                    STP0    namelen+3,,AUTO
         0 000006   200005 236100                    LDQ     name,,AUTO
         0 000007   200012 756100                    STQ     namelen+4,,AUTO
         0 000010   200006 236100                    LDQ     namelen,,AUTO
         0 000011   200013 756100                    STQ     namelen+5,,AUTO
         0 000012   200010 630500                    EPPR0   namelen+2,,AUTO
         0 000013   000061 631400 0                  EPPR1   s:256+2
         0 000014   000000 701000 xent               TSX1    XSL$ACCEPT
         0 000015   000000 236007                    LDQ     0,DL

      244       244    1            if( result != EFAILURE) {  

    244  0 000016   200015 236100                    LDQ     result,,AUTO
         0 000017   000062 116000 0                  CMPQ    s:256+3
         0 000020   000051 600000 0                  TZE     s:253

      245       245    2                fctx = XB$GET_FILDES( result);  

    245  0 000021   200015 236100                    LDQ     result,,AUTO
         0 000022   200013 756100                    STQ     namelen+5,,AUTO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=86 
         0 000023   200013 630500                    EPPR0   namelen+5,,AUTO
         0 000024   000063 631400 0                  EPPR1   s:256+4
         0 000025   000000 701000 xent               TSX1    XB$GET_FILDES
         0 000026   000000 236007                    LDQ     0,DL
         0 000027   200014 756100                    STQ     fctx,,AUTO

      246       246    2                if( fctx)  

    246  0 000030   200014 236100                    LDQ     fctx,,AUTO
         0 000031   006014 116007                    CMPQ    3084,DL
         0 000032   000037 600000 0                  TZE     s:249

      247       247    2                    fctx->_auxio = xsl$sockethook;  

    247  0 000033   200014 473500                    LDP3    fctx,,AUTO
         0 000034   000064 236000 0                  LDQ     s:256+5
         0 000035   300015 756100                    STQ     13,,PR3
         0 000036   000051 710000 0                  TRA     s:253

      248       248    2                else {  
      249       249    3                    XSL$CLOSE( &fctx, &result);  

    249  0 000037   200014 630500                    EPPR0   fctx,,AUTO
         0 000040   200012 450500                    STP0    namelen+4,,AUTO
         0 000041   200015 630500                    EPPR0   result,,AUTO
         0 000042   200013 450500                    STP0    namelen+5,,AUTO
         0 000043   200012 630500                    EPPR0   namelen+4,,AUTO
         0 000044   000065 631400 0                  EPPR1   s:256+6
         0 000045   000000 701000 xent               TSX1    XSL$CLOSE
         0 000046   000000 236007                    LDQ     0,DL

      250       250    3                    result = EFAILURE;  

    250  0 000047   000062 236000 0                  LDQ     s:256+3
         0 000050   200015 756100                    STQ     result,,AUTO

      251       251    3                    }  
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=87 
      252       252    2                }  
      253       253    1            if( result == EFAILURE)  

    253  0 000051   200015 236100                    LDQ     result,,AUTO
         0 000052   000062 116000 0                  CMPQ    s:256+3
         0 000053   000057 601000 0                  TNZ     s:256

      254       254    1                xsl$maperror();  

    254  0 000054   000066 631400 0                  EPPR1   s:256+7
         0 000055   000000 701000 xent               TSX1    xsl$maperror
         0 000056   000000 236007                    LDQ     0,DL

      255       255    1            return( result);  

      256       256    1        }  

    256  0 000057   200015 236100                    LDQ     result,,AUTO
         0 000060   000000 702000 xent               TSX2    _XBC_FARET
         0 000061   000004 000000                    ZERO    4,0
         0 000062   777777 777777                    ZERO    -1,-1
         0 000063   000001 000000                    ZERO    1,0
         0 000064   000000 000000 xent               ZERO    xsl$sockethook0,0
         0 000065   000002 000000                    ZERO    2,0
         0 000066   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=88 

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   237-   256     12   139     0      0  y   y    3   1 accept
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=89 

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     3 Assign     3 Call       3 If         1 Return     1 Proc       1 EndPrc


 # major stmts=   10 Code/major= 5.60 # stmts=   12 Code/stmt= 4.66  Point total= 91.4
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=90 

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr             14-0-0/w PTR         r,m   1 fctx
     5-0-0/w PTR         r,m   1 name                       6-0-0/w PTR         r,m   1 namelen
    15-0-0/w SBIN        r,m   1 result                     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=91 

 Object Unit name= connect                                    File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:28:51.04 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    24     30  connect
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  connect

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 XSL$CONNECT
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=92 

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=93 


      258       258             int connect( sock, name, namelen)  
      259       259                 int sock, namelen;  

    259  0 000000   000000 700000 xent  connect      TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      260       260                 struct sockaddr *name;  
      261       261             {  
      262       262    1            int result;  
      263       263    1          
      264       264    1            XSL$CONNECT( &result, &sock, name, &namelen);  

    264  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200011 450500                    STP0    namelen+3,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200012 450500                    STP0    namelen+4,,AUTO
         0 000006   200005 236100                    LDQ     name,,AUTO
         0 000007   200013 756100                    STQ     namelen+5,,AUTO
         0 000010   200006 630500                    EPPR0   namelen,,AUTO
         0 000011   200014 450500                    STP0    namelen+6,,AUTO
         0 000012   200011 630500                    EPPR0   namelen+3,,AUTO
         0 000013   000025 631400 0                  EPPR1   s:268+2
         0 000014   000000 701000 xent               TSX1    XSL$CONNECT
         0 000015   000000 236007                    LDQ     0,DL

      265       265    1            if( result)  

    265  0 000016   200015 234100                    SZN     result,,AUTO
         0 000017   000023 600000 0                  TZE     s:268

      266       266    1                xsl$maperror();  

    266  0 000020   000026 631400 0                  EPPR1   s:268+3
         0 000021   000000 701000 xent               TSX1    xsl$maperror
         0 000022   000000 236007                    LDQ     0,DL

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=94 
      267       267    1            return( result);  

      268       268    1        }  

    268  0 000023   200015 236100                    LDQ     result,,AUTO
         0 000024   000000 702000 xent               TSX2    _XBC_FARET
         0 000025   000004 000000                    ZERO    4,0
         0 000026   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=95 

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   259-   268      6   138     0      0  y   y    3   1 connect
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=96 

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 6.00 # stmts=    6 Code/stmt= 4.00  Point total= 89.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=97 

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 name
     6-0-0/w SBIN        r,m   1 namelen                   15-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=98 

 Object Unit name= send                                       File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:28:54.52 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    28     34  send
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        4  send

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_4
                       Std       0 XSL$SEND
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=99 

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=100


      270       270             int send( sock, msg, len, flags)  
      271       271                 int sock, len, flags;  

    271  0 000000   000000 700000 xent  send         TSX0    _XBC_AUTO_4
         0 000001   000026 000004                    ZERO    22,4

      272       272                 char *msg;  
      273       273             {  
      274       274    1            int result;  
      275       275    1          
      276       276    1            XSL$SEND( &result, &sock, msg, &len, &flags);  

    276  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200010 450500                    STP0    flags+1,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200011 450500                    STP0    flags+2,,AUTO
         0 000006   200005 236100                    LDQ     msg,,AUTO
         0 000007   200012 756100                    STQ     flags+3,,AUTO
         0 000010   200006 630500                    EPPR0   len,,AUTO
         0 000011   200013 450500                    STP0    flags+4,,AUTO
         0 000012   200007 630500                    EPPR0   flags,,AUTO
         0 000013   200014 450500                    STP0    flags+5,,AUTO
         0 000014   200010 630500                    EPPR0   flags+1,,AUTO
         0 000015   000030 631400 0                  EPPR1   s:280+2
         0 000016   000000 701000 xent               TSX1    XSL$SEND
         0 000017   000000 236007                    LDQ     0,DL

      277       277    1            if( result == EFAILURE)  

    277  0 000020   200015 236100                    LDQ     result,,AUTO
         0 000021   000031 116000 0                  CMPQ    s:280+3
         0 000022   000026 601000 0                  TNZ     s:280

      278       278    1                xsl$maperror();  

    278  0 000023   000032 631400 0                  EPPR1   s:280+4
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=101
         0 000024   000000 701000 xent               TSX1    xsl$maperror
         0 000025   000000 236007                    LDQ     0,DL

      279       279    1            return( result);  

      280       280    1        }  

    280  0 000026   200015 236100                    LDQ     result,,AUTO
         0 000027   000000 702000 xent               TSX2    _XBC_FARET
         0 000030   000005 000000                    ZERO    5,0
         0 000031   777777 777777                    ZERO    -1,-1
         0 000032   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=102

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   271-   280      6   139     0      0  y   y    4   1 send
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=103

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 7.00 # stmts=    6 Code/stmt= 4.66  Point total= 88.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=104

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              7-0-0/w SBIN        r,m   1 flags
     6-0-0/w SBIN        r,m   1 len                        5-0-0/w PTR         r,m   1 msg
    15-0-0/w SBIN        r,m   1 result                     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=105

 Object Unit name= recv                                       File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:28:57.80 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    28     34  recv
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        4  recv

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_4
                       Std       0 XSL$RECV
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=106

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=107


      282       282             int recv( sock, buf, len, flags)  
      283       283                 int sock, len, flags;  

    283  0 000000   000000 700000 xent  recv         TSX0    _XBC_AUTO_4
         0 000001   000026 000004                    ZERO    22,4

      284       284                 char *buf;  
      285       285             {  
      286       286    1            int result;  
      287       287    1          
      288       288    1            XSL$RECV( &result, &sock, buf, &len, &flags);  

    288  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200010 450500                    STP0    flags+1,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200011 450500                    STP0    flags+2,,AUTO
         0 000006   200005 236100                    LDQ     buf,,AUTO
         0 000007   200012 756100                    STQ     flags+3,,AUTO
         0 000010   200006 630500                    EPPR0   len,,AUTO
         0 000011   200013 450500                    STP0    flags+4,,AUTO
         0 000012   200007 630500                    EPPR0   flags,,AUTO
         0 000013   200014 450500                    STP0    flags+5,,AUTO
         0 000014   200010 630500                    EPPR0   flags+1,,AUTO
         0 000015   000030 631400 0                  EPPR1   s:292+2
         0 000016   000000 701000 xent               TSX1    XSL$RECV
         0 000017   000000 236007                    LDQ     0,DL

      289       289    1            if( result == EFAILURE)  

    289  0 000020   200015 236100                    LDQ     result,,AUTO
         0 000021   000031 116000 0                  CMPQ    s:292+3
         0 000022   000026 601000 0                  TNZ     s:292

      290       290    1                xsl$maperror();  

    290  0 000023   000032 631400 0                  EPPR1   s:292+4
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=108
         0 000024   000000 701000 xent               TSX1    xsl$maperror
         0 000025   000000 236007                    LDQ     0,DL

      291       291    1            return( result);  

      292       292    1        }  

    292  0 000026   200015 236100                    LDQ     result,,AUTO
         0 000027   000000 702000 xent               TSX2    _XBC_FARET
         0 000030   000005 000000                    ZERO    5,0
         0 000031   777777 777777                    ZERO    -1,-1
         0 000032   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=109

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   283-   292      6   139     0      0  y   y    4   1 recv
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=110

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 7.00 # stmts=    6 Code/stmt= 4.66  Point total= 88.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=111

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 buf
     7-0-0/w SBIN        r,m   1 flags                      6-0-0/w SBIN        r,m   1 len
    15-0-0/w SBIN        r,m   1 result                     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=112

 Object Unit name= sendto                                     File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:00.52 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    32     40  sendto
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        6  sendto

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_N
                       Std       0 XSL$SENDTO
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=113

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=114


      294       294             int sendto( sock, msg, len, flags, to, tolen)  
      295       295                 int sock, len, flags, tolen;  

    295  0 000000   000000 700000 xent  sendto       TSX0    _XBC_AUTO_N
         0 000001   000032 000006                    ZERO    26,6

      296       296                 char *msg;  
      297       297                 struct sockaddr *to;  
      298       298             {  
      299       299    1            int result;  
      300       300    1          
      301       301    1            XSL$SENDTO( &result, &sock, msg, &len, &flags, to, &tolen);  

    301  0 000002   200021 630500                    EPPR0   result,,AUTO
         0 000003   200012 450500                    STP0    tolen+1,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200013 450500                    STP0    tolen+2,,AUTO
         0 000006   200005 236100                    LDQ     msg,,AUTO
         0 000007   200014 756100                    STQ     tolen+3,,AUTO
         0 000010   200006 630500                    EPPR0   len,,AUTO
         0 000011   200015 450500                    STP0    tolen+4,,AUTO
         0 000012   200007 630500                    EPPR0   flags,,AUTO
         0 000013   200016 450500                    STP0    tolen+5,,AUTO
         0 000014   200010 236100                    LDQ     to,,AUTO
         0 000015   200017 756100                    STQ     tolen+6,,AUTO
         0 000016   200011 630500                    EPPR0   tolen,,AUTO
         0 000017   200020 450500                    STP0    tolen+7,,AUTO
         0 000020   200012 630500                    EPPR0   tolen+1,,AUTO
         0 000021   000034 631400 0                  EPPR1   s:305+2
         0 000022   000000 701000 xent               TSX1    XSL$SENDTO
         0 000023   000000 236007                    LDQ     0,DL

      302       302    1            if( result == EFAILURE)  

    302  0 000024   200021 236100                    LDQ     result,,AUTO
         0 000025   000035 116000 0                  CMPQ    s:305+3
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=115
         0 000026   000032 601000 0                  TNZ     s:305

      303       303    1                xsl$maperror();  

    303  0 000027   000036 631400 0                  EPPR1   s:305+4
         0 000030   000000 701000 xent               TSX1    xsl$maperror
         0 000031   000000 236007                    LDQ     0,DL

      304       304    1            return( result);  

      305       305    1        }  

    305  0 000032   200021 236100                    LDQ     result,,AUTO
         0 000033   000000 702000 xent               TSX2    _XBC_FARET
         0 000034   000007 000000                    ZERO    7,0
         0 000035   777777 777777                    ZERO    -1,-1
         0 000036   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=116

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   295-   305      6   141     0      0  y   y    6   1 sendto
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=117

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 8.00 # stmts=    6 Code/stmt= 5.33  Point total= 87.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=118

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              7-0-0/w SBIN        r,m   1 flags
     6-0-0/w SBIN        r,m   1 len                        5-0-0/w PTR         r,m   1 msg
    21-0-0/w SBIN        r,m   1 result                     4-0-0/w SBIN        r,m   1 sock
    10-0-0/w PTR         r,m   1 to                        11-0-0/w SBIN        r,m   1 tolen

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=119

 Object Unit name= recvfrom                                   File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:05.36 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    32     40  recvfrom
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        6  recvfrom

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_N
                       Std       0 XSL$RECVFROM
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=120

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=121


      307       307             int recvfrom( sock, buf, len, flags, from, fromlen)  
      308       308                 int sock, len, flags, *fromlen;  

    308  0 000000   000000 700000 xent  recvfrom     TSX0    _XBC_AUTO_N
         0 000001   000032 000006                    ZERO    26,6

      309       309                 char *buf;  
      310       310                 struct sockaddr *from;  
      311       311             {  
      312       312    1            int result;  
      313       313    1          
      314       314    1            XSL$RECVFROM( &result, &sock, buf, &len, &flags, from, fromlen);  

    314  0 000002   200021 630500                    EPPR0   result,,AUTO
         0 000003   200012 450500                    STP0    fromlen+1,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200013 450500                    STP0    fromlen+2,,AUTO
         0 000006   200005 236100                    LDQ     buf,,AUTO
         0 000007   200014 756100                    STQ     fromlen+3,,AUTO
         0 000010   200006 630500                    EPPR0   len,,AUTO
         0 000011   200015 450500                    STP0    fromlen+4,,AUTO
         0 000012   200007 630500                    EPPR0   flags,,AUTO
         0 000013   200016 450500                    STP0    fromlen+5,,AUTO
         0 000014   200010 236100                    LDQ     from,,AUTO
         0 000015   200017 756100                    STQ     fromlen+6,,AUTO
         0 000016   200011 236100                    LDQ     fromlen,,AUTO
         0 000017   200020 756100                    STQ     fromlen+7,,AUTO
         0 000020   200012 630500                    EPPR0   fromlen+1,,AUTO
         0 000021   000034 631400 0                  EPPR1   s:318+2
         0 000022   000000 701000 xent               TSX1    XSL$RECVFROM
         0 000023   000000 236007                    LDQ     0,DL

      315       315    1            if( result == EFAILURE)  

    315  0 000024   200021 236100                    LDQ     result,,AUTO
         0 000025   000035 116000 0                  CMPQ    s:318+3
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=122
         0 000026   000032 601000 0                  TNZ     s:318

      316       316    1                xsl$maperror();  

    316  0 000027   000036 631400 0                  EPPR1   s:318+4
         0 000030   000000 701000 xent               TSX1    xsl$maperror
         0 000031   000000 236007                    LDQ     0,DL

      317       317    1            return( result);  

      318       318    1        }  

    318  0 000032   200021 236100                    LDQ     result,,AUTO
         0 000033   000000 702000 xent               TSX2    _XBC_FARET
         0 000034   000007 000000                    ZERO    7,0
         0 000035   777777 777777                    ZERO    -1,-1
         0 000036   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=123

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   308-   318      6   141     0      0  y   y    6   1 recvfrom
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=124

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 8.00 # stmts=    6 Code/stmt= 5.33  Point total= 87.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=125

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 buf
     7-0-0/w SBIN        r,m   1 flags                     10-0-0/w PTR         r,m   1 from
    11-0-0/w PTR         r,m   1 fromlen                    6-0-0/w SBIN        r,m   1 len
    21-0-0/w SBIN        r,m   1 result                     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=126

 Object Unit name= writev                                     File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:08.32 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    26     32  writev
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes                     Std        0  writev

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 XSL$WRITEV
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=127

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=128


      320       320             int writev( sock, iov, iovcount)  
      321       321                 int sock;  

    321  0 000000   000000 700000 xent  writev       TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      322       322                 struct iovec iov[];  
      323       323                 int iovcount;  
      324       324             {  
      325       325    1            int result;  
      326       326    1           
      327       327    1            XSL$WRITEV( &result, &sock, iov, &iovcount);  

    327  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200011 450500                    STP0    iovcount+3,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200012 450500                    STP0    iovcount+4,,AUTO
         0 000006   200005 236100                    LDQ     iov,,AUTO
         0 000007   200013 756100                    STQ     iovcount+5,,AUTO
         0 000010   200006 630500                    EPPR0   iovcount,,AUTO
         0 000011   200014 450500                    STP0    iovcount+6,,AUTO
         0 000012   200011 630500                    EPPR0   iovcount+3,,AUTO
         0 000013   000026 631400 0                  EPPR1   s:331+2
         0 000014   000000 701000 xent               TSX1    XSL$WRITEV
         0 000015   000000 236007                    LDQ     0,DL

      328       328    1            if( result == EFAILURE)  

    328  0 000016   200015 236100                    LDQ     result,,AUTO
         0 000017   000027 116000 0                  CMPQ    s:331+3
         0 000020   000024 601000 0                  TNZ     s:331

      329       329    1                xsl$maperror();  

    329  0 000021   000030 631400 0                  EPPR1   s:331+4
         0 000022   000000 701000 xent               TSX1    xsl$maperror
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=129
         0 000023   000000 236007                    LDQ     0,DL

      330       330    1            return( result);  

      331       331    1        }  

    331  0 000024   200015 236100                    LDQ     result,,AUTO
         0 000025   000000 702000 xent               TSX2    _XBC_FARET
         0 000026   000004 000000                    ZERO    4,0
         0 000027   777777 777777                    ZERO    -1,-1
         0 000030   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=130

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   321-   331      6   138     0      0  y        0   1 writev
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=131

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 6.50 # stmts=    6 Code/stmt= 4.33  Point total= 89.1
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=132

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 iov
     6-0-0/w SBIN        r,m   1 iovcount                  15-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=133

 Object Unit name= readv                                      File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:11.68 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    26     32  readv
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes                     Std        0  readv

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 XSL$READV
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=134

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=135


      333       333             int readv( sock, iov, iovcount)  
      334       334                 int sock;  

    334  0 000000   000000 700000 xent  readv        TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      335       335                 struct iovec iov[];  
      336       336                 int iovcount;  
      337       337             {  
      338       338    1            int result;  
      339       339    1           
      340       340    1            XSL$READV( &result, &sock, iov, &iovcount);  

    340  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200011 450500                    STP0    iovcount+3,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200012 450500                    STP0    iovcount+4,,AUTO
         0 000006   200005 236100                    LDQ     iov,,AUTO
         0 000007   200013 756100                    STQ     iovcount+5,,AUTO
         0 000010   200006 630500                    EPPR0   iovcount,,AUTO
         0 000011   200014 450500                    STP0    iovcount+6,,AUTO
         0 000012   200011 630500                    EPPR0   iovcount+3,,AUTO
         0 000013   000026 631400 0                  EPPR1   s:344+2
         0 000014   000000 701000 xent               TSX1    XSL$READV
         0 000015   000000 236007                    LDQ     0,DL

      341       341    1            if( result == EFAILURE)  

    341  0 000016   200015 236100                    LDQ     result,,AUTO
         0 000017   000027 116000 0                  CMPQ    s:344+3
         0 000020   000024 601000 0                  TNZ     s:344

      342       342    1                xsl$maperror();  

    342  0 000021   000030 631400 0                  EPPR1   s:344+4
         0 000022   000000 701000 xent               TSX1    xsl$maperror
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=136
         0 000023   000000 236007                    LDQ     0,DL

      343       343    1            return( result);  

      344       344    1        }  

    344  0 000024   200015 236100                    LDQ     result,,AUTO
         0 000025   000000 702000 xent               TSX2    _XBC_FARET
         0 000026   000004 000000                    ZERO    4,0
         0 000027   777777 777777                    ZERO    -1,-1
         0 000030   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=137

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   334-   344      6   138     0      0  y        0   1 readv
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=138

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 6.50 # stmts=    6 Code/stmt= 4.33  Point total= 89.1
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=139

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 iov
     6-0-0/w SBIN        r,m   1 iovcount                  15-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=140

 Object Unit name= sendmsg                                    File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:14.72 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    26     32  sendmsg
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes                     Std        0  sendmsg

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 XSL$SENDMSG
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=141

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=142


      346       346             int sendmsg( sock, msg, flags)  
      347       347                 int sock;  

    347  0 000000   000000 700000 xent  sendmsg      TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      348       348                 struct msghdr msg[];  
      349       349                 int flags;  
      350       350             {  
      351       351    1            int result;  
      352       352    1           
      353       353    1            XSL$SENDMSG( &result, &sock, msg, &flags);  

    353  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200011 450500                    STP0    flags+3,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200012 450500                    STP0    flags+4,,AUTO
         0 000006   200005 236100                    LDQ     msg,,AUTO
         0 000007   200013 756100                    STQ     flags+5,,AUTO
         0 000010   200006 630500                    EPPR0   flags,,AUTO
         0 000011   200014 450500                    STP0    flags+6,,AUTO
         0 000012   200011 630500                    EPPR0   flags+3,,AUTO
         0 000013   000026 631400 0                  EPPR1   s:357+2
         0 000014   000000 701000 xent               TSX1    XSL$SENDMSG
         0 000015   000000 236007                    LDQ     0,DL

      354       354    1            if( result == EFAILURE)  

    354  0 000016   200015 236100                    LDQ     result,,AUTO
         0 000017   000027 116000 0                  CMPQ    s:357+3
         0 000020   000024 601000 0                  TNZ     s:357

      355       355    1                xsl$maperror();  

    355  0 000021   000030 631400 0                  EPPR1   s:357+4
         0 000022   000000 701000 xent               TSX1    xsl$maperror
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=143
         0 000023   000000 236007                    LDQ     0,DL

      356       356    1            return( result);  

      357       357    1        }  

    357  0 000024   200015 236100                    LDQ     result,,AUTO
         0 000025   000000 702000 xent               TSX2    _XBC_FARET
         0 000026   000004 000000                    ZERO    4,0
         0 000027   777777 777777                    ZERO    -1,-1
         0 000030   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=144

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   347-   357      6   138     0      0  y        0   1 sendmsg
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=145

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 6.50 # stmts=    6 Code/stmt= 4.33  Point total= 89.1
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=146

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              6-0-0/w SBIN        r,m   1 flags
     5-0-0/w PTR         r,m   1 msg                       15-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=147

 Object Unit name= recvmsg                                    File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:17.64 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    26     32  recvmsg
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes                     Std        0  recvmsg

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 XSL$RECVMSG
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=148

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=149


      359       359             int recvmsg( sock, msg, flags)  
      360       360                 int sock;  

    360  0 000000   000000 700000 xent  recvmsg      TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      361       361                 struct msghdr msg[];  
      362       362                 int flags;  
      363       363             {  
      364       364    1            int result;  
      365       365    1           
      366       366    1            XSL$RECVMSG( &result, &sock, msg, &flags);  

    366  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200011 450500                    STP0    flags+3,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200012 450500                    STP0    flags+4,,AUTO
         0 000006   200005 236100                    LDQ     msg,,AUTO
         0 000007   200013 756100                    STQ     flags+5,,AUTO
         0 000010   200006 630500                    EPPR0   flags,,AUTO
         0 000011   200014 450500                    STP0    flags+6,,AUTO
         0 000012   200011 630500                    EPPR0   flags+3,,AUTO
         0 000013   000026 631400 0                  EPPR1   s:370+2
         0 000014   000000 701000 xent               TSX1    XSL$RECVMSG
         0 000015   000000 236007                    LDQ     0,DL

      367       367    1            if( result == EFAILURE)  

    367  0 000016   200015 236100                    LDQ     result,,AUTO
         0 000017   000027 116000 0                  CMPQ    s:370+3
         0 000020   000024 601000 0                  TNZ     s:370

      368       368    1                xsl$maperror();  

    368  0 000021   000030 631400 0                  EPPR1   s:370+4
         0 000022   000000 701000 xent               TSX1    xsl$maperror
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=150
         0 000023   000000 236007                    LDQ     0,DL

      369       369    1            return( result);  

      370       370    1        }  

    370  0 000024   200015 236100                    LDQ     result,,AUTO
         0 000025   000000 702000 xent               TSX2    _XBC_FARET
         0 000026   000004 000000                    ZERO    4,0
         0 000027   777777 777777                    ZERO    -1,-1
         0 000030   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=151

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   360-   370      6   138     0      0  y        0   1 recvmsg
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=152

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 6.50 # stmts=    6 Code/stmt= 4.33  Point total= 89.1
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=153

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              6-0-0/w SBIN        r,m   1 flags
     5-0-0/w PTR         r,m   1 msg                       15-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=154

 Object Unit name= select                                     File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:20.00 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    28     34  select
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        5  select

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_5
                       Std       0 XSL$SELECT
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=155

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=156


      372       372             int select( numfds, rdmask, wrtmask, excmask, timeout)  
      373       373                 int numfds;  

    373  0 000000   000000 700000 xent  select       TSX0    _XBC_AUTO_5
         0 000001   000032 000005                    ZERO    26,5

      374       374                 fd_set *rdmask, *wrtmask, *excmask;  
      375       375                 struct timeval *timeout;  
      376       376             {  
      377       377    1            int result;  
      378       378    1          
      379       379    1            XSL$SELECT( &result, &numfds, rdmask, wrtmask, excmask, timeout);  

    379  0 000002   200021 630500                    EPPR0   result,,AUTO
         0 000003   200013 450500                    STP0    timeout+3,,AUTO
         0 000004   200004 630500                    EPPR0   numfds,,AUTO
         0 000005   200014 450500                    STP0    timeout+4,,AUTO
         0 000006   200005 236100                    LDQ     rdmask,,AUTO
         0 000007   200015 756100                    STQ     timeout+5,,AUTO
         0 000010   200006 236100                    LDQ     wrtmask,,AUTO
         0 000011   200016 756100                    STQ     timeout+6,,AUTO
         0 000012   200007 236100                    LDQ     excmask,,AUTO
         0 000013   200017 756100                    STQ     timeout+7,,AUTO
         0 000014   200010 236100                    LDQ     timeout,,AUTO
         0 000015   200020 756100                    STQ     timeout+8,,AUTO
         0 000016   200013 630500                    EPPR0   timeout+3,,AUTO
         0 000017   000031 631400 0                  EPPR1   s:383+2
         0 000020   000000 701000 xent               TSX1    XSL$SELECT
         0 000021   000000 236007                    LDQ     0,DL

      380       380    1            if( result < 0)  

    380  0 000022   200021 234100                    SZN     result,,AUTO
         0 000023   000027 605000 0                  TPL     s:383

      381       381    1                xsl$maperror();  
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=157

    381  0 000024   000032 631400 0                  EPPR1   s:383+3
         0 000025   000000 701000 xent               TSX1    xsl$maperror
         0 000026   000000 236007                    LDQ     0,DL

      382       382    1            return( result);  

      383       383    1        }  

    383  0 000027   200021 236100                    LDQ     result,,AUTO
         0 000030   000000 702000 xent               TSX2    _XBC_FARET
         0 000031   000006 000000                    ZERO    6,0
         0 000032   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=158

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   373-   383      6   140     0      0  y   y    5   1 select
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=159

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 7.00 # stmts=    6 Code/stmt= 4.66  Point total= 88.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=160

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              7-0-0/w PTR         r,m   1 excmask
     4-0-0/w SBIN        r,m   1 numfds                     5-0-0/w PTR         r,m   1 rdmask
    21-0-0/w SBIN        r,m   1 result                    10-0-0/w PTR         r,m   1 timeout
     6-0-0/w PTR         r,m   1 wrtmask

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=161

 Object Unit name= shutdown                                   File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:23.68 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    22     26  shutdown
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  shutdown

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_2
                       Std       0 XSL$SHUTDOWN
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=162

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=163


      385       385             int shutdown( sock, how)  
      386       386                 int sock, how;  

    386  0 000000   000000 700000 xent  shutdown     TSX0    _XBC_AUTO_2
         0 000001   000022 000002                    ZERO    18,2

      387       387             {  
      388       388    1            int result;  
      389       389    1          
      390       390    1            XSL$SHUTDOWN( &result, &sock, &how);  

    390  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200006 450500                    STP0    how+1,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200007 450500                    STP0    how+2,,AUTO
         0 000006   200005 630500                    EPPR0   how,,AUTO
         0 000007   200010 450500                    STP0    how+3,,AUTO
         0 000010   200006 630500                    EPPR0   how+1,,AUTO
         0 000011   000023 631400 0                  EPPR1   s:394+2
         0 000012   000000 701000 xent               TSX1    XSL$SHUTDOWN
         0 000013   000000 236007                    LDQ     0,DL

      391       391    1            if( result)  

    391  0 000014   200011 234100                    SZN     result,,AUTO
         0 000015   000021 600000 0                  TZE     s:394

      392       392    1                xsl$maperror();  

    392  0 000016   000024 631400 0                  EPPR1   s:394+3
         0 000017   000000 701000 xent               TSX1    xsl$maperror
         0 000020   000000 236007                    LDQ     0,DL

      393       393    1            return( result);  

      394       394    1        }  
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=164

    394  0 000021   200011 236100                    LDQ     result,,AUTO
         0 000022   000000 702000 xent               TSX2    _XBC_FARET
         0 000023   000003 000000                    ZERO    3,0
         0 000024   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=165

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   386-   394      6   137     0      0  y   y    2   1 shutdown
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=166

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 5.50 # stmts=    6 Code/stmt= 3.66  Point total= 90.1
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=167

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w SBIN        r,m   1 how
    11-0-0/w SBIN        r,m   1 result                     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=168

 Object Unit name= gethostname                                File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:26.76 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    22     26  gethostname
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  gethostname

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_2
                       Std       0 XSL$GETHOSTNAME
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=169

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=170


      396       396             int gethostname( name, namelen)  
      397       397                 char *name;  

    397  0 000000   000000 700000 xent  gethostname  TSX0    _XBC_AUTO_2
         0 000001   000022 000002                    ZERO    18,2

      398       398                 int namelen;  
      399       399             {  
      400       400    1            int result;  
      401       401    1          
      402       402    1            XSL$GETHOSTNAME( &result, name, &namelen);  

    402  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200006 450500                    STP0    namelen+1,,AUTO
         0 000004   200004 236100                    LDQ     name,,AUTO
         0 000005   200007 756100                    STQ     namelen+2,,AUTO
         0 000006   200005 630500                    EPPR0   namelen,,AUTO
         0 000007   200010 450500                    STP0    namelen+3,,AUTO
         0 000010   200006 630500                    EPPR0   namelen+1,,AUTO
         0 000011   000023 631400 0                  EPPR1   s:406+2
         0 000012   000000 701000 xent               TSX1    XSL$GETHOSTNAME
         0 000013   000000 236007                    LDQ     0,DL

      403       403    1            if( result)  

    403  0 000014   200011 234100                    SZN     result,,AUTO
         0 000015   000021 600000 0                  TZE     s:406

      404       404    1                xsl$maperror();  

    404  0 000016   000024 631400 0                  EPPR1   s:406+3
         0 000017   000000 701000 xent               TSX1    xsl$maperror
         0 000020   000000 236007                    LDQ     0,DL

      405       405    1            return( result);  

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=171
      406       406    1        }  

    406  0 000021   200011 236100                    LDQ     result,,AUTO
         0 000022   000000 702000 xent               TSX2    _XBC_FARET
         0 000023   000003 000000                    ZERO    3,0
         0 000024   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=172

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   397-   406      6   137     0      0  y   y    2   1 gethostname
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=173

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 5.50 # stmts=    6 Code/stmt= 3.66  Point total= 90.1
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=174

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w PTR         r,m   1 name
     5-0-0/w SBIN        r,m   1 namelen                   11-0-0/w SBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=175

 Object Unit name= getpeername                                File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:30.32 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    24     30  getpeername
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  getpeername

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 XSL$GETPEERNAME
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=176

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=177


      408       408             int getpeername( sock, name, namelen)  
      409       409                 int sock, *namelen;  

    409  0 000000   000000 700000 xent  getpeername  TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      410       410                 struct sockaddr *name;  
      411       411             {  
      412       412    1            int result;  
      413       413    1          
      414       414    1            XSL$GETPEERNAME( &result, &sock, name, namelen);  

    414  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200011 450500                    STP0    namelen+3,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200012 450500                    STP0    namelen+4,,AUTO
         0 000006   200005 236100                    LDQ     name,,AUTO
         0 000007   200013 756100                    STQ     namelen+5,,AUTO
         0 000010   200006 236100                    LDQ     namelen,,AUTO
         0 000011   200014 756100                    STQ     namelen+6,,AUTO
         0 000012   200011 630500                    EPPR0   namelen+3,,AUTO
         0 000013   000025 631400 0                  EPPR1   s:418+2
         0 000014   000000 701000 xent               TSX1    XSL$GETPEERNAME
         0 000015   000000 236007                    LDQ     0,DL

      415       415    1            if( result)  

    415  0 000016   200015 234100                    SZN     result,,AUTO
         0 000017   000023 600000 0                  TZE     s:418

      416       416    1                xsl$maperror();  

    416  0 000020   000026 631400 0                  EPPR1   s:418+3
         0 000021   000000 701000 xent               TSX1    xsl$maperror
         0 000022   000000 236007                    LDQ     0,DL

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=178
      417       417    1            return( result);  

      418       418    1        }  

    418  0 000023   200015 236100                    LDQ     result,,AUTO
         0 000024   000000 702000 xent               TSX2    _XBC_FARET
         0 000025   000004 000000                    ZERO    4,0
         0 000026   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=179

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   409-   418      6   138     0      0  y   y    3   1 getpeername
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=180

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 6.00 # stmts=    6 Code/stmt= 4.00  Point total= 89.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=181

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 name
     6-0-0/w PTR         r,m   1 namelen                   15-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=182

 Object Unit name= getsockname                                File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:33.32 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    24     30  getsockname
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  getsockname

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 XSL$GETSOCKNAME
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=183

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=184


      420       420             int getsockname( sock, name, namelen)  
      421       421                 int sock, *namelen;  

    421  0 000000   000000 700000 xent  getsockname  TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      422       422                 struct sockaddr *name;  
      423       423             {  
      424       424    1            int result;  
      425       425    1          
      426       426    1            XSL$GETSOCKNAME( &result, &sock, name, namelen);  

    426  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200011 450500                    STP0    namelen+3,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200012 450500                    STP0    namelen+4,,AUTO
         0 000006   200005 236100                    LDQ     name,,AUTO
         0 000007   200013 756100                    STQ     namelen+5,,AUTO
         0 000010   200006 236100                    LDQ     namelen,,AUTO
         0 000011   200014 756100                    STQ     namelen+6,,AUTO
         0 000012   200011 630500                    EPPR0   namelen+3,,AUTO
         0 000013   000025 631400 0                  EPPR1   s:430+2
         0 000014   000000 701000 xent               TSX1    XSL$GETSOCKNAME
         0 000015   000000 236007                    LDQ     0,DL

      427       427    1            if( result)  

    427  0 000016   200015 234100                    SZN     result,,AUTO
         0 000017   000023 600000 0                  TZE     s:430

      428       428    1                xsl$maperror();  

    428  0 000020   000026 631400 0                  EPPR1   s:430+3
         0 000021   000000 701000 xent               TSX1    xsl$maperror
         0 000022   000000 236007                    LDQ     0,DL

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=185
      429       429    1            return( result);  

      430       430    1        }  

    430  0 000023   200015 236100                    LDQ     result,,AUTO
         0 000024   000000 702000 xent               TSX2    _XBC_FARET
         0 000025   000004 000000                    ZERO    4,0
         0 000026   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=186

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   421-   430      6   138     0      0  y   y    3   1 getsockname
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=187

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 6.00 # stmts=    6 Code/stmt= 4.00  Point total= 89.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=188

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 name
     6-0-0/w PTR         r,m   1 namelen                   15-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=189

 Object Unit name= getsockopt                                 File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:37.04 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    28     34  getsockopt
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        5  getsockopt

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_5
                       Std       0 XSL$GETSOCKOPT
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=190

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=191


      432       432             int getsockopt( sock, level, optname, optval, optlen)  
      433       433                 int sock, level, optname, *optlen;  

    433  0 000000   000000 700000 xent  getsockopt   TSX0    _XBC_AUTO_5
         0 000001   000032 000005                    ZERO    26,5

      434       434                 char *optval;  
      435       435             {  
      436       436    1            int result;  
      437       437    1          
      438       438    1            XSL$GETSOCKOPT( &result, &sock, &level, &optname, optval, optlen);  

    438  0 000002   200021 630500                    EPPR0   result,,AUTO
         0 000003   200013 450500                    STP0    optlen+3,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200014 450500                    STP0    optlen+4,,AUTO
         0 000006   200005 630500                    EPPR0   level,,AUTO
         0 000007   200015 450500                    STP0    optlen+5,,AUTO
         0 000010   200006 630500                    EPPR0   optname,,AUTO
         0 000011   200016 450500                    STP0    optlen+6,,AUTO
         0 000012   200007 236100                    LDQ     optval,,AUTO
         0 000013   200017 756100                    STQ     optlen+7,,AUTO
         0 000014   200010 236100                    LDQ     optlen,,AUTO
         0 000015   200020 756100                    STQ     optlen+8,,AUTO
         0 000016   200013 630500                    EPPR0   optlen+3,,AUTO
         0 000017   000031 631400 0                  EPPR1   s:442+2
         0 000020   000000 701000 xent               TSX1    XSL$GETSOCKOPT
         0 000021   000000 236007                    LDQ     0,DL

      439       439    1            if( result)  

    439  0 000022   200021 234100                    SZN     result,,AUTO
         0 000023   000027 600000 0                  TZE     s:442

      440       440    1                xsl$maperror();  

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=192
    440  0 000024   000032 631400 0                  EPPR1   s:442+3
         0 000025   000000 701000 xent               TSX1    xsl$maperror
         0 000026   000000 236007                    LDQ     0,DL

      441       441    1            return( result);  

      442       442    1        }  

    442  0 000027   200021 236100                    LDQ     result,,AUTO
         0 000030   000000 702000 xent               TSX2    _XBC_FARET
         0 000031   000006 000000                    ZERO    6,0
         0 000032   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=193

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   433-   442      6   140     0      0  y   y    5   1 getsockopt
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=194

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 7.00 # stmts=    6 Code/stmt= 4.66  Point total= 88.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=195

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w SBIN        r,m   1 level
    10-0-0/w PTR         r,m   1 optlen                     6-0-0/w SBIN        r,m   1 optname
     7-0-0/w PTR         r,m   1 optval                    21-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=196

 Object Unit name= setsockopt                                 File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:39.84 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    28     34  setsockopt
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        5  setsockopt

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_5
                       Std       0 XSL$SETSOCKOPT
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=197

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=198


      444       444             int setsockopt( sock, level, optname, optval, optlen)  
      445       445                 int sock, level, optname, optlen;  

    445  0 000000   000000 700000 xent  setsockopt   TSX0    _XBC_AUTO_5
         0 000001   000032 000005                    ZERO    26,5

      446       446                 char *optval;  
      447       447             {  
      448       448    1            int result;  
      449       449    1          
      450       450    1            XSL$SETSOCKOPT( &result, &sock, &level, &optname, optval, &optlen);  

    450  0 000002   200021 630500                    EPPR0   result,,AUTO
         0 000003   200013 450500                    STP0    optlen+3,,AUTO
         0 000004   200004 630500                    EPPR0   sock,,AUTO
         0 000005   200014 450500                    STP0    optlen+4,,AUTO
         0 000006   200005 630500                    EPPR0   level,,AUTO
         0 000007   200015 450500                    STP0    optlen+5,,AUTO
         0 000010   200006 630500                    EPPR0   optname,,AUTO
         0 000011   200016 450500                    STP0    optlen+6,,AUTO
         0 000012   200007 236100                    LDQ     optval,,AUTO
         0 000013   200017 756100                    STQ     optlen+7,,AUTO
         0 000014   200010 630500                    EPPR0   optlen,,AUTO
         0 000015   200020 450500                    STP0    optlen+8,,AUTO
         0 000016   200013 630500                    EPPR0   optlen+3,,AUTO
         0 000017   000031 631400 0                  EPPR1   s:454+2
         0 000020   000000 701000 xent               TSX1    XSL$SETSOCKOPT
         0 000021   000000 236007                    LDQ     0,DL

      451       451    1            if( result)  

    451  0 000022   200021 234100                    SZN     result,,AUTO
         0 000023   000027 600000 0                  TZE     s:454

      452       452    1                xsl$maperror();  

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=199
    452  0 000024   000032 631400 0                  EPPR1   s:454+3
         0 000025   000000 701000 xent               TSX1    xsl$maperror
         0 000026   000000 236007                    LDQ     0,DL

      453       453    1            return( result);  

      454       454    1        }  

    454  0 000027   200021 236100                    LDQ     result,,AUTO
         0 000030   000000 702000 xent               TSX2    _XBC_FARET
         0 000031   000006 000000                    ZERO    6,0
         0 000032   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=200

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   445-   454      6   140     0      0  y   y    5   1 setsockopt
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=201

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 7.00 # stmts=    6 Code/stmt= 4.66  Point total= 88.6
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=202

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w SBIN        r,m   1 level
    10-0-0/w SBIN        r,m   1 optlen                     6-0-0/w SBIN        r,m   1 optname
     7-0-0/w PTR         r,m   1 optval                    21-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 sock

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=203

 Object Unit name= htonl                                      File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:42.96 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    14     16  htonl
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  htonl

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$HTONL
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=204

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=205


      456       456             unsigned long htonl( hostlong)  
      457       457                 unsigned long hostlong;  

    457  0 000000   000000 700000 xent  htonl        TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      458       458             {  
      459       459    1            unsigned long result;  
      460       460    1          
      461       461    1            XSL$HTONL( &result, &hostlong);  

    461  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    hostlong+3,,AUTO
         0 000004   200004 630500                    EPPR0   hostlong,,AUTO
         0 000005   200010 450500                    STP0    hostlong+4,,AUTO
         0 000006   200007 630500                    EPPR0   hostlong+3,,AUTO
         0 000007   000014 631400 0                  EPPR1   s:463+2
         0 000010   000000 701000 xent               TSX1    XSL$HTONL
         0 000011   000000 236007                    LDQ     0,DL

      462       462    1            return( result);  

      463       463    1        }  

    463  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   000000 702000 xent               TSX2    _XBC_FARET
         0 000014   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=206

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   457-   463      4   136     0      0  y   y    1   1 htonl
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=207

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 7.00 # stmts=    4 Code/stmt= 3.50  Point total= 87.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=208

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/b UBIN        r,m   1 hostlong
    11-0-0/b UBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=209

 Object Unit name= htons                                      File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:46.40 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    14     16  htons
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  htons

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$HTONS
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=210

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=211


      465       465             unsigned short htons( hostshort)  
      466       466                 unsigned short hostshort;  

    466  0 000000   000000 700000 xent  htons        TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      467       467             {  
      468       468    1            unsigned short result;  
      469       469    1          
      470       470    1            XSL$HTONS( &result, &hostshort);  

    470  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    hostshort+3,,AUTO
         0 000004   200004 630500                    EPPR0   hostshort,,AUTO
         0 000005   200010 450500                    STP0    hostshort+4,,AUTO
         0 000006   200007 630500                    EPPR0   hostshort+3,,AUTO
         0 000007   000014 631400 0                  EPPR1   s:472+2
         0 000010   000000 701000 xent               TSX1    XSL$HTONS
         0 000011   000000 236007                    LDQ     0,DL

      471       471    1            return( result);  

      472       472    1        }  

    472  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   000000 702000 xent               TSX2    _XBC_FARET
         0 000014   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=212

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   466-   472      4   136     0      0  y   y    1   1 htons
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=213

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 7.00 # stmts=    4 Code/stmt= 3.50  Point total= 87.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=214

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/b UBIN        r,m   1 hostshort
    11-0-0/b UBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=215

 Object Unit name= ntohl                                      File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:49.08 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    14     16  ntohl
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  ntohl

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$NTOHL
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=216

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=217


      474       474             unsigned long ntohl( netlong)  
      475       475                 unsigned long netlong;  

    475  0 000000   000000 700000 xent  ntohl        TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      476       476             {  
      477       477    1            unsigned long result;  
      478       478    1          
      479       479    1            XSL$NTOHL( &result, &netlong);  

    479  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    netlong+3,,AUTO
         0 000004   200004 630500                    EPPR0   netlong,,AUTO
         0 000005   200010 450500                    STP0    netlong+4,,AUTO
         0 000006   200007 630500                    EPPR0   netlong+3,,AUTO
         0 000007   000014 631400 0                  EPPR1   s:481+2
         0 000010   000000 701000 xent               TSX1    XSL$NTOHL
         0 000011   000000 236007                    LDQ     0,DL

      480       480    1            return( result);  

      481       481    1        }  

    481  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   000000 702000 xent               TSX2    _XBC_FARET
         0 000014   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=218

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   475-   481      4   136     0      0  y   y    1   1 ntohl
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=219

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 7.00 # stmts=    4 Code/stmt= 3.50  Point total= 87.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=220

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/b UBIN        r,m   1 netlong
    11-0-0/b UBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=221

 Object Unit name= ntohs                                      File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:52.08 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    14     16  ntohs
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  ntohs

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$NTOHS
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=222

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=223


      483       483             unsigned short ntohs( netshort)  
      484       484                 unsigned short netshort;  

    484  0 000000   000000 700000 xent  ntohs        TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      485       485             {  
      486       486    1            unsigned short result;  
      487       487    1          
      488       488    1            XSL$NTOHS( &result, &netshort);  

    488  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    netshort+3,,AUTO
         0 000004   200004 630500                    EPPR0   netshort,,AUTO
         0 000005   200010 450500                    STP0    netshort+4,,AUTO
         0 000006   200007 630500                    EPPR0   netshort+3,,AUTO
         0 000007   000014 631400 0                  EPPR1   s:490+2
         0 000010   000000 701000 xent               TSX1    XSL$NTOHS
         0 000011   000000 236007                    LDQ     0,DL

      489       489    1            return( result);  

      490       490    1        }  

    490  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   000000 702000 xent               TSX2    _XBC_FARET
         0 000014   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=224

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   484-   490      4   136     0      0  y   y    1   1 ntohs
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=225

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 7.00 # stmts=    4 Code/stmt= 3.50  Point total= 87.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=226

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/b UBIN        r,m   1 netshort
    11-0-0/b UBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=227

 Object Unit name= inet_addr                                  File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:54.84 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    14     16  inet_addr
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  inet_addr

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$INET_ADDR
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=228

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=229


      492       492             unsigned long inet_addr( cp)  
      493       493                 char *cp;  

    493  0 000000   000000 700000 xent  inet_addr    TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      494       494             {  
      495       495    1            unsigned long result;  
      496       496    1          
      497       497    1            XSL$INET_ADDR( &result, cp);  

    497  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    cp+3,,AUTO
         0 000004   200004 236100                    LDQ     cp,,AUTO
         0 000005   200010 756100                    STQ     cp+4,,AUTO
         0 000006   200007 630500                    EPPR0   cp+3,,AUTO
         0 000007   000014 631400 0                  EPPR1   s:499+2
         0 000010   000000 701000 xent               TSX1    XSL$INET_ADDR
         0 000011   000000 236007                    LDQ     0,DL

      498       498    1            return( result);  

      499       499    1        }  

    499  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   000000 702000 xent               TSX2    _XBC_FARET
         0 000014   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=230

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   493-   499      4   136     0      0  y   y    1   1 inet_addr
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=231

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 7.00 # stmts=    4 Code/stmt= 3.50  Point total= 87.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=232

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w PTR         r,m   1 cp
    11-0-0/b UBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=233

 Object Unit name= inet_lnaof                                 File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:29:57.88 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    16     20  inet_lnaof
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  inet_lnaof

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$INET_LNAOF
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=234

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=235


      501       501             int inet_lnaof( in)  
      502       502                 struct in_addr in;  

    502  0 000000   000000 700000 xent  inet_lnaof   TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      503       503             {  
      504       504    1            int result;  
      505       505    1          
      506       506    1            XSL$INET_LNAOF( &result, &in);  

    506  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    in+3,,AUTO
         0 000004   200004 630500                    EPPR0   in,,AUTO
         0 000005   200010 450500                    STP0    in+4,,AUTO
         0 000006   200007 630500                    EPPR0   in+3,,AUTO
         0 000007   000016 631400 0                  EPPR1   s:508+2
         0 000010   000000 701000 xent               TSX1    XSL$INET_LNAOF
         0 000011   000000 236007                    LDQ     0,DL

      507       507    1            return( result);  

    507  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   200011 756100                    STQ     result,,AUTO

      508       508    1        }  

    508  0 000014   200011 236100                    LDQ     result,,AUTO
         0 000015   000000 702000 xent               TSX2    _XBC_FARET
         0 000016   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=236

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   502-   508      4   146     0      0  y   y    1   1 inet_lnaof
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=237

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 8.00 # stmts=    4 Code/stmt= 4.00  Point total= 86.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=238

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/c STRC        r,m   1 in
    11-0-0/w SBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=239

 Object Unit name= inet_makeaddr                              File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:00.92 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    20     24  inet_makeaddr
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  inet_makeaddr

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_2
                       Std       0 XSL$INET_MAKEADDR
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=240

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=241


      510       510             struct in_addr inet_makeaddr( net, lna)  
      511       511                 int net, lna;  

    511  0 000000   000000 700000 xent  inet_makead* TSX0    _XBC_AUTO_2
         0 000001   000022 000002                    ZERO    18,2

      512       512             {  
      513       513    1            struct in_addr result;  
      514       514    1          
      515       515    1            XSL$INET_MAKEADDR( &result, &net, &lna);  

    515  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200006 450500                    STP0    lna+1,,AUTO
         0 000004   200004 630500                    EPPR0   net,,AUTO
         0 000005   200007 450500                    STP0    lna+2,,AUTO
         0 000006   200005 630500                    EPPR0   lna,,AUTO
         0 000007   200010 450500                    STP0    lna+3,,AUTO
         0 000010   200006 630500                    EPPR0   lna+1,,AUTO
         0 000011   000022 631400 0                  EPPR1   s:517+2
         0 000012   000000 701000 xent               TSX1    XSL$INET_MAKEADDR
         0 000013   000000 236007                    LDQ     0,DL

      516       516    1            return( result);  

    516  0 000014   200003 473500                    LDP3    __varyarg_ptr,,AUTO
         0 000015   000100 100500                    MLR     fill='000'O
         0 000016   200011 000004                    ADSC9   result,,AUTO             cn=0,n=4
         0 000017   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4

      517       517    1        }  

    517  0 000020   200003 236100                    LDQ     __varyarg_ptr,,AUTO
         0 000021   000000 702000 xent               TSX2    _XBC_FARET
         0 000022   000003 000000                    ZERO    3,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=242

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   511-   517      4   157     0      0  y   y    2   1 inet_makeaddr
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=243

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major=10.00 # stmts=    4 Code/stmt= 5.00  Point total= 84.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=244

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w SBIN        r,m   1 lna
     4-0-0/w SBIN        r,m   1 net                       11-0-0/c STRC        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=245

 Object Unit name= inet_netof                                 File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:03.28 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    16     20  inet_netof
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  inet_netof

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$INET_NETOF
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=246

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=247


      519       519             int inet_netof( in)  
      520       520                 struct in_addr in;  

    520  0 000000   000000 700000 xent  inet_netof   TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      521       521             {  
      522       522    1            int result;  
      523       523    1          
      524       524    1            XSL$INET_NETOF( &result, &in);  

    524  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    in+3,,AUTO
         0 000004   200004 630500                    EPPR0   in,,AUTO
         0 000005   200010 450500                    STP0    in+4,,AUTO
         0 000006   200007 630500                    EPPR0   in+3,,AUTO
         0 000007   000016 631400 0                  EPPR1   s:526+2
         0 000010   000000 701000 xent               TSX1    XSL$INET_NETOF
         0 000011   000000 236007                    LDQ     0,DL

      525       525    1            return( result);  

    525  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   200011 756100                    STQ     result,,AUTO

      526       526    1        }  

    526  0 000014   200011 236100                    LDQ     result,,AUTO
         0 000015   000000 702000 xent               TSX2    _XBC_FARET
         0 000016   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=248

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   520-   526      4   166     0      0  y   y    1   1 inet_netof
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=249

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 8.00 # stmts=    4 Code/stmt= 4.00  Point total= 86.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=250

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/c STRC        r,m   1 in
    11-0-0/w SBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=251

 Object Unit name= inet_network                               File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:07.72 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    14     16  inet_network
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  inet_network

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$INET_NETWORK
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=252

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=253


      528       528             unsigned long inet_network( cp)  
      529       529                 char *cp;  

    529  0 000000   000000 700000 xent  inet_network TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      530       530             {  
      531       531    1            unsigned long result;  
      532       532    1          
      533       533    1            XSL$INET_NETWORK( &result, cp);  

    533  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    cp+3,,AUTO
         0 000004   200004 236100                    LDQ     cp,,AUTO
         0 000005   200010 756100                    STQ     cp+4,,AUTO
         0 000006   200007 630500                    EPPR0   cp+3,,AUTO
         0 000007   000014 631400 0                  EPPR1   s:535+2
         0 000010   000000 701000 xent               TSX1    XSL$INET_NETWORK
         0 000011   000000 236007                    LDQ     0,DL

      534       534    1            return( result);  

      535       535    1        }  

    535  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   000000 702000 xent               TSX2    _XBC_FARET
         0 000014   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=254

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   529-   535      4   166     0      0  y   y    1   1 inet_network
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=255

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 7.00 # stmts=    4 Code/stmt= 3.50  Point total= 87.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=256

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w PTR         r,m   1 cp
    11-0-0/b UBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=257

 Object Unit name= inet_ntoa                                  File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:10.96 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    14     16  inet_ntoa
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  inet_ntoa

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$INET_NTOA
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=258

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=259


      537       537             char *inet_ntoa( in)  
      538       538                 struct in_addr in;  

    538  0 000000   000000 700000 xent  inet_ntoa    TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      539       539             {  
      540       540    1            char *result;  
      541       541    1          
      542       542    1            XSL$INET_NTOA( &result, &in);  

    542  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    in+3,,AUTO
         0 000004   200004 630500                    EPPR0   in,,AUTO
         0 000005   200010 450500                    STP0    in+4,,AUTO
         0 000006   200007 630500                    EPPR0   in+3,,AUTO
         0 000007   000014 631400 0                  EPPR1   s:544+2
         0 000010   000000 701000 xent               TSX1    XSL$INET_NTOA
         0 000011   000000 236007                    LDQ     0,DL

      543       543    1            return( result);  

      544       544    1        }  

    544  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   000000 702000 xent               TSX2    _XBC_FARET
         0 000014   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=260

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   538-   544      4   176     0      0  y   y    1   1 inet_ntoa
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=261

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 7.00 # stmts=    4 Code/stmt= 3.50  Point total= 87.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=262

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/c STRC        r,m   1 in
    11-0-0/w PTR         r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=263

 Object Unit name= gethostbyaddr                              File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:13.92 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    25     31  gethostbyaddr
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  gethostbyaddr

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 XSL$GETHOSTBYADDR
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=264

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=265


      546       546             struct hostent *gethostbyaddr( cp, len, type)  
      547       547                 char *cp;  

    547  0 000000   000000 700000 xent  gethostbyad* TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      548       548                 int len, type;  
      549       549             {  
      550       550    1            struct hostent *result;  
      551       551    1          
      552       552    1            XSL$GETHOSTBYADDR( &result, cp, &len, &type);  

    552  0 000002   200015 630500                    EPPR0   result,,AUTO
         0 000003   200011 450500                    STP0    type+3,,AUTO
         0 000004   200004 236100                    LDQ     cp,,AUTO
         0 000005   200012 756100                    STQ     type+4,,AUTO
         0 000006   200005 630500                    EPPR0   len,,AUTO
         0 000007   200013 450500                    STP0    type+5,,AUTO
         0 000010   200006 630500                    EPPR0   type,,AUTO
         0 000011   200014 450500                    STP0    type+6,,AUTO
         0 000012   200011 630500                    EPPR0   type+3,,AUTO
         0 000013   000026 631400 0                  EPPR1   s:556+2
         0 000014   000000 701000 xent               TSX1    XSL$GETHOSTBYADDR
         0 000015   000000 236007                    LDQ     0,DL

      553       553    1            if( result == NULL)  

    553  0 000016   200015 236100                    LDQ     result,,AUTO
         0 000017   006014 116007                    CMPQ    3084,DL
         0 000020   000024 601000 0                  TNZ     s:556

      554       554    1                xsl$maperror();  

    554  0 000021   000027 631400 0                  EPPR1   s:556+3
         0 000022   000000 701000 xent               TSX1    xsl$maperror
         0 000023   000000 236007                    LDQ     0,DL
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=266

      555       555    1            return( result);  

      556       556    1        }  

    556  0 000024   200015 236100                    LDQ     result,,AUTO
         0 000025   000000 702000 xent               TSX2    _XBC_FARET
         0 000026   000004 000000                    ZERO    4,0
         0 000027   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=267

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   547-   556      6   178     0      0  y   y    3   1 gethostbyaddr
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=268

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 6.25 # stmts=    6 Code/stmt= 4.16  Point total= 89.4
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=269

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w PTR         r,m   1 cp
     5-0-0/w SBIN        r,m   1 len                       15-0-0/w PTR         r,m   1 result
     6-0-0/w SBIN        r,m   1 type

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=270

 Object Unit name= gethostbyname                              File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:17.24 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    21     25  gethostbyname
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  gethostbyname

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$GETHOSTBYNAME
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=271

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=272


      558       558             struct hostent *gethostbyname( name)  
      559       559                 char *name;  

    559  0 000000   000000 700000 xent  gethostbyna* TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      560       560             {  
      561       561    1            struct hostent *result;  
      562       562    1          
      563       563    1            XSL$GETHOSTBYNAME( &result, name);  

    563  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    name+3,,AUTO
         0 000004   200004 236100                    LDQ     name,,AUTO
         0 000005   200010 756100                    STQ     name+4,,AUTO
         0 000006   200007 630500                    EPPR0   name+3,,AUTO
         0 000007   000022 631400 0                  EPPR1   s:567+2
         0 000010   000000 701000 xent               TSX1    XSL$GETHOSTBYNAME
         0 000011   000000 236007                    LDQ     0,DL

      564       564    1            if( result == NULL)  

    564  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   006014 116007                    CMPQ    3084,DL
         0 000014   000020 601000 0                  TNZ     s:567

      565       565    1                xsl$maperror();  

    565  0 000015   000023 631400 0                  EPPR1   s:567+3
         0 000016   000000 701000 xent               TSX1    xsl$maperror
         0 000017   000000 236007                    LDQ     0,DL

      566       566    1            return( result);  

      567       567    1        }  

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=273
    567  0 000020   200011 236100                    LDQ     result,,AUTO
         0 000021   000000 702000 xent               TSX2    _XBC_FARET
         0 000022   000002 000000                    ZERO    2,0
         0 000023   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=274

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   559-   567      6   176     0      0  y   y    1   1 gethostbyname
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=275

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 5.25 # stmts=    6 Code/stmt= 3.50  Point total= 90.4
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=276

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w PTR         r,m   1 name
    11-0-0/w PTR         r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=277

 Object Unit name= gethostent                                 File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:20.32 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    19     23  gethostent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  gethostent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_0
                       Std       0 XSL$GETHOSTENT
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=278

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=279


      569       569             struct hostent *gethostent()  
      570       570             {  

    570  0 000000   000000 700000 xent  gethostent   TSX0    _XBC_AUTO_0
         0 000001   000016 000000                    ZERO    14,0

      571       571    1            struct hostent *result;  
      572       572    1          
      573       573    1            XSL$GETHOSTENT( &result);  

    573  0 000002   200005 630500                    EPPR0   result,,AUTO
         0 000003   200004 450500                    STP0    __varyarg_ptr+1,,AUTO
         0 000004   200004 630500                    EPPR0   __varyarg_ptr+1,,AUTO
         0 000005   000020 631400 0                  EPPR1   s:577+2
         0 000006   000000 701000 xent               TSX1    XSL$GETHOSTENT
         0 000007   000000 236007                    LDQ     0,DL

      574       574    1            if( result == NULL)  

    574  0 000010   200005 236100                    LDQ     result,,AUTO
         0 000011   006014 116007                    CMPQ    3084,DL
         0 000012   000016 601000 0                  TNZ     s:577

      575       575    1                xsl$maperror();  

    575  0 000013   000021 631400 0                  EPPR1   s:577+3
         0 000014   000000 701000 xent               TSX1    xsl$maperror
         0 000015   000000 236007                    LDQ     0,DL

      576       576    1            return( result);  

      577       577    1        }  

    577  0 000016   200005 236100                    LDQ     result,,AUTO
         0 000017   000000 702000 xent               TSX2    _XBC_FARET
         0 000020   000001 000000                    ZERO    1,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=280
         0 000021   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=281

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   570-   577      6   175     0      0  y   y    0   1 gethostent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=282

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 4.75 # stmts=    6 Code/stmt= 3.16  Point total= 90.9
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=283

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=284

 Object Unit name= sethostent                                 File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:24.00 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    16     20  sethostent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  sethostent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$SETHOSTENT
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=285

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=286


      579       579             void *sethostent( stayopen)  
      580       580                 int stayopen;  

    580  0 000000   000000 700000 xent  sethostent   TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      581       581             {  
      582       582    1            int result;  
      583       583    1          
      584       584    1            XSL$SETHOSTENT( &result, &stayopen);  

    584  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    stayopen+3,,AUTO
         0 000004   200004 630500                    EPPR0   stayopen,,AUTO
         0 000005   200010 450500                    STP0    stayopen+4,,AUTO
         0 000006   200007 630500                    EPPR0   stayopen+3,,AUTO
         0 000007   000016 631400 0                  EPPR1   s:586+2
         0 000010   000000 701000 xent               TSX1    XSL$SETHOSTENT
         0 000011   000000 236007                    LDQ     0,DL

      585       585    1            return( result);  

    585  0 000012   006014 236007                    LDQ     3084,DL
         0 000013   200011 656100                    ERSQ    result,,AUTO

      586       586    1        }  

    586  0 000014   200011 236100                    LDQ     result,,AUTO
         0 000015   000000 702000 xent               TSX2    _XBC_FARET
         0 000016   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=287

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   580-   586      4   176     0      0  y   y    1   1 sethostent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=288

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 8.00 # stmts=    4 Code/stmt= 4.00  Point total= 86.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=289

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr             11-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 stayopen

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=290

 Object Unit name= endhostent                                 File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:26.96 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    14     16  endhostent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  endhostent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_0
                       Std       0 XSL$ENDHOSTENT
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=291

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=292


      588       588             void *endhostent()  
      589       589             {  

    589  0 000000   000000 700000 xent  endhostent   TSX0    _XBC_AUTO_0
         0 000001   000016 000000                    ZERO    14,0

      590       590    1            int result;  
      591       591    1          
      592       592    1            XSL$ENDHOSTENT( &result);  

    592  0 000002   200005 630500                    EPPR0   result,,AUTO
         0 000003   200004 450500                    STP0    __varyarg_ptr+1,,AUTO
         0 000004   200004 630500                    EPPR0   __varyarg_ptr+1,,AUTO
         0 000005   000014 631400 0                  EPPR1   s:594+2
         0 000006   000000 701000 xent               TSX1    XSL$ENDHOSTENT
         0 000007   000000 236007                    LDQ     0,DL

      593       593    1            return( result);  

    593  0 000010   006014 236007                    LDQ     3084,DL
         0 000011   200005 656100                    ERSQ    result,,AUTO

      594       594    1        }  

    594  0 000012   200005 236100                    LDQ     result,,AUTO
         0 000013   000000 702000 xent               TSX2    _XBC_FARET
         0 000014   000001 000000                    ZERO    1,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=293

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   589-   594      4   175     0      0  y   y    0   1 endhostent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=294

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 7.00 # stmts=    4 Code/stmt= 3.50  Point total= 87.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=295

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w SBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=296

 Object Unit name= getnetbyaddr                               File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:29.80 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    23     27  getnetbyaddr
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  getnetbyaddr

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_2
                       Std       0 XSL$GETNETBYADDR
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=297

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=298


      596       596             struct netent *getnetbyaddr( net, type)  
      597       597                 int net, type;  

    597  0 000000   000000 700000 xent  getnetbyaddr TSX0    _XBC_AUTO_2
         0 000001   000022 000002                    ZERO    18,2

      598       598             {  
      599       599    1            struct netent *result;  
      600       600    1          
      601       601    1            XSL$GETNETBYADDR( &result, &net, &type);  

    601  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200006 450500                    STP0    type+1,,AUTO
         0 000004   200004 630500                    EPPR0   net,,AUTO
         0 000005   200007 450500                    STP0    type+2,,AUTO
         0 000006   200005 630500                    EPPR0   type,,AUTO
         0 000007   200010 450500                    STP0    type+3,,AUTO
         0 000010   200006 630500                    EPPR0   type+1,,AUTO
         0 000011   000024 631400 0                  EPPR1   s:605+2
         0 000012   000000 701000 xent               TSX1    XSL$GETNETBYADDR
         0 000013   000000 236007                    LDQ     0,DL

      602       602    1            if( result == NULL)  

    602  0 000014   200011 236100                    LDQ     result,,AUTO
         0 000015   006014 116007                    CMPQ    3084,DL
         0 000016   000022 601000 0                  TNZ     s:605

      603       603    1                xsl$maperror();  

    603  0 000017   000025 631400 0                  EPPR1   s:605+3
         0 000020   000000 701000 xent               TSX1    xsl$maperror
         0 000021   000000 236007                    LDQ     0,DL

      604       604    1            return( result);  

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=299
      605       605    1        }  

    605  0 000022   200011 236100                    LDQ     result,,AUTO
         0 000023   000000 702000 xent               TSX2    _XBC_FARET
         0 000024   000003 000000                    ZERO    3,0
         0 000025   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=300

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   597-   605      6   177     0      0  y   y    2   1 getnetbyaddr
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=301

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 5.75 # stmts=    6 Code/stmt= 3.83  Point total= 89.9
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=302

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w SBIN        r,m   1 net
    11-0-0/w PTR         r,m   1 result                     5-0-0/w SBIN        r,m   1 type

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=303

 Object Unit name= getnetbyname                               File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:32.68 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    21     25  getnetbyname
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  getnetbyname

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$GETNETBYNAME
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=304

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=305


      607       607             struct netent *getnetbyname( name)  
      608       608                 char *name;  

    608  0 000000   000000 700000 xent  getnetbyname TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      609       609             {  
      610       610    1            struct netent *result;  
      611       611    1          
      612       612    1            XSL$GETNETBYNAME( &result, name);  

    612  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    name+3,,AUTO
         0 000004   200004 236100                    LDQ     name,,AUTO
         0 000005   200010 756100                    STQ     name+4,,AUTO
         0 000006   200007 630500                    EPPR0   name+3,,AUTO
         0 000007   000022 631400 0                  EPPR1   s:616+2
         0 000010   000000 701000 xent               TSX1    XSL$GETNETBYNAME
         0 000011   000000 236007                    LDQ     0,DL

      613       613    1            if( result == NULL)  

    613  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   006014 116007                    CMPQ    3084,DL
         0 000014   000020 601000 0                  TNZ     s:616

      614       614    1                xsl$maperror();  

    614  0 000015   000023 631400 0                  EPPR1   s:616+3
         0 000016   000000 701000 xent               TSX1    xsl$maperror
         0 000017   000000 236007                    LDQ     0,DL

      615       615    1            return( result);  

      616       616    1        }  

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=306
    616  0 000020   200011 236100                    LDQ     result,,AUTO
         0 000021   000000 702000 xent               TSX2    _XBC_FARET
         0 000022   000002 000000                    ZERO    2,0
         0 000023   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=307

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   608-   616      6   176     0      0  y   y    1   1 getnetbyname
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=308

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 5.25 # stmts=    6 Code/stmt= 3.50  Point total= 90.4
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=309

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w PTR         r,m   1 name
    11-0-0/w PTR         r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=310

 Object Unit name= getnetent                                  File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:35.24 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    19     23  getnetent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  getnetent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_0
                       Std       0 XSL$GETNETENT
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=311

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=312


      618       618             struct netent *getnetent()  
      619       619             {  

    619  0 000000   000000 700000 xent  getnetent    TSX0    _XBC_AUTO_0
         0 000001   000016 000000                    ZERO    14,0

      620       620    1            struct netent *result;  
      621       621    1          
      622       622    1            XSL$GETNETENT( &result);  

    622  0 000002   200005 630500                    EPPR0   result,,AUTO
         0 000003   200004 450500                    STP0    __varyarg_ptr+1,,AUTO
         0 000004   200004 630500                    EPPR0   __varyarg_ptr+1,,AUTO
         0 000005   000020 631400 0                  EPPR1   s:626+2
         0 000006   000000 701000 xent               TSX1    XSL$GETNETENT
         0 000007   000000 236007                    LDQ     0,DL

      623       623    1            if( result == NULL)  

    623  0 000010   200005 236100                    LDQ     result,,AUTO
         0 000011   006014 116007                    CMPQ    3084,DL
         0 000012   000016 601000 0                  TNZ     s:626

      624       624    1                xsl$maperror();  

    624  0 000013   000021 631400 0                  EPPR1   s:626+3
         0 000014   000000 701000 xent               TSX1    xsl$maperror
         0 000015   000000 236007                    LDQ     0,DL

      625       625    1            return( result);  

      626       626    1        }  

    626  0 000016   200005 236100                    LDQ     result,,AUTO
         0 000017   000000 702000 xent               TSX2    _XBC_FARET
         0 000020   000001 000000                    ZERO    1,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=313
         0 000021   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=314

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   619-   626      6   175     0      0  y   y    0   1 getnetent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=315

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 4.75 # stmts=    6 Code/stmt= 3.16  Point total= 90.9
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=316

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=317

 Object Unit name= setnetent                                  File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:38.04 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    16     20  setnetent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  setnetent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$SETNETENT
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=318

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=319


      628       628             void *setnetent( stayopen)  
      629       629                 int stayopen;  

    629  0 000000   000000 700000 xent  setnetent    TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      630       630             {  
      631       631    1            int result;  
      632       632    1          
      633       633    1            XSL$SETNETENT( &result, &stayopen);  

    633  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    stayopen+3,,AUTO
         0 000004   200004 630500                    EPPR0   stayopen,,AUTO
         0 000005   200010 450500                    STP0    stayopen+4,,AUTO
         0 000006   200007 630500                    EPPR0   stayopen+3,,AUTO
         0 000007   000016 631400 0                  EPPR1   s:635+2
         0 000010   000000 701000 xent               TSX1    XSL$SETNETENT
         0 000011   000000 236007                    LDQ     0,DL

      634       634    1            return( result);  

    634  0 000012   006014 236007                    LDQ     3084,DL
         0 000013   200011 656100                    ERSQ    result,,AUTO

      635       635    1        }  

    635  0 000014   200011 236100                    LDQ     result,,AUTO
         0 000015   000000 702000 xent               TSX2    _XBC_FARET
         0 000016   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=320

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   629-   635      4   176     0      0  y   y    1   1 setnetent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=321

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 8.00 # stmts=    4 Code/stmt= 4.00  Point total= 86.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=322

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr             11-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 stayopen

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=323

 Object Unit name= endnetent                                  File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:40.84 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    14     16  endnetent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  endnetent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_0
                       Std       0 XSL$ENDNETENT
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=324

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=325


      637       637             void *endnetent()  
      638       638             {  

    638  0 000000   000000 700000 xent  endnetent    TSX0    _XBC_AUTO_0
         0 000001   000016 000000                    ZERO    14,0

      639       639    1            int result;  
      640       640    1          
      641       641    1            XSL$ENDNETENT( &result);  

    641  0 000002   200005 630500                    EPPR0   result,,AUTO
         0 000003   200004 450500                    STP0    __varyarg_ptr+1,,AUTO
         0 000004   200004 630500                    EPPR0   __varyarg_ptr+1,,AUTO
         0 000005   000014 631400 0                  EPPR1   s:643+2
         0 000006   000000 701000 xent               TSX1    XSL$ENDNETENT
         0 000007   000000 236007                    LDQ     0,DL

      642       642    1            return( result);  

    642  0 000010   006014 236007                    LDQ     3084,DL
         0 000011   200005 656100                    ERSQ    result,,AUTO

      643       643    1        }  

    643  0 000012   200005 236100                    LDQ     result,,AUTO
         0 000013   000000 702000 xent               TSX2    _XBC_FARET
         0 000014   000001 000000                    ZERO    1,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=326

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   638-   643      4   175     0      0  y   y    0   1 endnetent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=327

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 7.00 # stmts=    4 Code/stmt= 3.50  Point total= 87.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=328

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w SBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=329

 Object Unit name= getprotobyname                             File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:43.96 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    21     25  getprotobyname
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  getprotobyname

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$GETPROTOBYNAME
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=330

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=331


      645       645             struct protoent *getprotobyname( name)  
      646       646                 char *name;  

    646  0 000000   000000 700000 xent  getprotobyn* TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      647       647             {  
      648       648    1            struct protoent *result;  
      649       649    1          
      650       650    1            XSL$GETPROTOBYNAME( &result, name);  

    650  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    name+3,,AUTO
         0 000004   200004 236100                    LDQ     name,,AUTO
         0 000005   200010 756100                    STQ     name+4,,AUTO
         0 000006   200007 630500                    EPPR0   name+3,,AUTO
         0 000007   000022 631400 0                  EPPR1   s:654+2
         0 000010   000000 701000 xent               TSX1    XSL$GETPROTOBYNAME
         0 000011   000000 236007                    LDQ     0,DL

      651       651    1            if( result == NULL)  

    651  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   006014 116007                    CMPQ    3084,DL
         0 000014   000020 601000 0                  TNZ     s:654

      652       652    1                xsl$maperror();  

    652  0 000015   000023 631400 0                  EPPR1   s:654+3
         0 000016   000000 701000 xent               TSX1    xsl$maperror
         0 000017   000000 236007                    LDQ     0,DL

      653       653    1            return( result);  

      654       654    1        }  

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=332
    654  0 000020   200011 236100                    LDQ     result,,AUTO
         0 000021   000000 702000 xent               TSX2    _XBC_FARET
         0 000022   000002 000000                    ZERO    2,0
         0 000023   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=333

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   646-   654      6   176     0      0  y   y    1   1 getprotobyname
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=334

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 5.25 # stmts=    6 Code/stmt= 3.50  Point total= 90.4
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=335

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w PTR         r,m   1 name
    11-0-0/w PTR         r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=336

 Object Unit name= getprotobynumber                           File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:47.12 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    21     25  getprotobynumber
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  getprotobynumber

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$GETPROTOBYNUMBER
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=337

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=338


      656       656             struct protoent *getprotobynumber( proto)  
      657       657                 int proto;  

    657  0 000000   000000 700000 xent  getprotobyn* TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      658       658             {  
      659       659    1            struct protoent *result;  
      660       660    1          
      661       661    1            XSL$GETPROTOBYNUMBER( &result, &proto);  

    661  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    proto+3,,AUTO
         0 000004   200004 630500                    EPPR0   proto,,AUTO
         0 000005   200010 450500                    STP0    proto+4,,AUTO
         0 000006   200007 630500                    EPPR0   proto+3,,AUTO
         0 000007   000022 631400 0                  EPPR1   s:665+2
         0 000010   000000 701000 xent               TSX1    XSL$GETPROTOBYNUMBER
         0 000011   000000 236007                    LDQ     0,DL

      662       662    1            if( result == NULL)  

    662  0 000012   200011 236100                    LDQ     result,,AUTO
         0 000013   006014 116007                    CMPQ    3084,DL
         0 000014   000020 601000 0                  TNZ     s:665

      663       663    1                xsl$maperror();  

    663  0 000015   000023 631400 0                  EPPR1   s:665+3
         0 000016   000000 701000 xent               TSX1    xsl$maperror
         0 000017   000000 236007                    LDQ     0,DL

      664       664    1            return( result);  

      665       665    1        }  

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=339
    665  0 000020   200011 236100                    LDQ     result,,AUTO
         0 000021   000000 702000 xent               TSX2    _XBC_FARET
         0 000022   000002 000000                    ZERO    2,0
         0 000023   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=340

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   657-   665      6   176     0      0  y   y    1   1 getprotobynumber
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=341

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 5.25 # stmts=    6 Code/stmt= 3.50  Point total= 90.4
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=342

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w SBIN        r,m   1 proto
    11-0-0/w PTR         r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=343

 Object Unit name= getprotoent                                File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:50.72 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    19     23  getprotoent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  getprotoent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_0
                       Std       0 XSL$GETPROTOENT
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=344

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=345


      667       667             struct protoent *getprotoent()  
      668       668             {  

    668  0 000000   000000 700000 xent  getprotoent  TSX0    _XBC_AUTO_0
         0 000001   000016 000000                    ZERO    14,0

      669       669    1            struct protoent *result;  
      670       670    1          
      671       671    1            XSL$GETPROTOENT( &result);  

    671  0 000002   200005 630500                    EPPR0   result,,AUTO
         0 000003   200004 450500                    STP0    __varyarg_ptr+1,,AUTO
         0 000004   200004 630500                    EPPR0   __varyarg_ptr+1,,AUTO
         0 000005   000020 631400 0                  EPPR1   s:675+2
         0 000006   000000 701000 xent               TSX1    XSL$GETPROTOENT
         0 000007   000000 236007                    LDQ     0,DL

      672       672    1            if( result == NULL)  

    672  0 000010   200005 236100                    LDQ     result,,AUTO
         0 000011   006014 116007                    CMPQ    3084,DL
         0 000012   000016 601000 0                  TNZ     s:675

      673       673    1                xsl$maperror();  

    673  0 000013   000021 631400 0                  EPPR1   s:675+3
         0 000014   000000 701000 xent               TSX1    xsl$maperror
         0 000015   000000 236007                    LDQ     0,DL

      674       674    1            return( result);  

      675       675    1        }  

    675  0 000016   200005 236100                    LDQ     result,,AUTO
         0 000017   000000 702000 xent               TSX2    _XBC_FARET
         0 000020   000001 000000                    ZERO    1,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=346
         0 000021   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=347

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   668-   675      6   175     0      0  y   y    0   1 getprotoent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=348

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 4.75 # stmts=    6 Code/stmt= 3.16  Point total= 90.9
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=349

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=350

 Object Unit name= setprotoent                                File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:53.72 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    16     20  setprotoent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  setprotoent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$SETPROTOENT
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=351

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=352


      677       677             void *setprotoent( stayopen)  
      678       678                 int stayopen;  

    678  0 000000   000000 700000 xent  setprotoent  TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      679       679             {  
      680       680    1            int result;  
      681       681    1          
      682       682    1            XSL$SETPROTOENT( &result, &stayopen);  

    682  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    stayopen+3,,AUTO
         0 000004   200004 630500                    EPPR0   stayopen,,AUTO
         0 000005   200010 450500                    STP0    stayopen+4,,AUTO
         0 000006   200007 630500                    EPPR0   stayopen+3,,AUTO
         0 000007   000016 631400 0                  EPPR1   s:684+2
         0 000010   000000 701000 xent               TSX1    XSL$SETPROTOENT
         0 000011   000000 236007                    LDQ     0,DL

      683       683    1            return( result);  

    683  0 000012   006014 236007                    LDQ     3084,DL
         0 000013   200011 656100                    ERSQ    result,,AUTO

      684       684    1        }  

    684  0 000014   200011 236100                    LDQ     result,,AUTO
         0 000015   000000 702000 xent               TSX2    _XBC_FARET
         0 000016   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=353

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   678-   684      4   176     0      0  y   y    1   1 setprotoent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=354

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 8.00 # stmts=    4 Code/stmt= 4.00  Point total= 86.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=355

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr             11-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 stayopen

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=356

 Object Unit name= endprotoent                                File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:56.08 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    14     16  endprotoent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  endprotoent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_0
                       Std       0 XSL$ENDPROTOENT
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=357

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=358


      686       686             void *endprotoent()  
      687       687             {  

    687  0 000000   000000 700000 xent  endprotoent  TSX0    _XBC_AUTO_0
         0 000001   000016 000000                    ZERO    14,0

      688       688    1            int result;  
      689       689    1          
      690       690    1            XSL$ENDPROTOENT( &result);  

    690  0 000002   200005 630500                    EPPR0   result,,AUTO
         0 000003   200004 450500                    STP0    __varyarg_ptr+1,,AUTO
         0 000004   200004 630500                    EPPR0   __varyarg_ptr+1,,AUTO
         0 000005   000014 631400 0                  EPPR1   s:692+2
         0 000006   000000 701000 xent               TSX1    XSL$ENDPROTOENT
         0 000007   000000 236007                    LDQ     0,DL

      691       691    1            return( result);  

    691  0 000010   006014 236007                    LDQ     3084,DL
         0 000011   200005 656100                    ERSQ    result,,AUTO

      692       692    1        }  

    692  0 000012   200005 236100                    LDQ     result,,AUTO
         0 000013   000000 702000 xent               TSX2    _XBC_FARET
         0 000014   000001 000000                    ZERO    1,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=359

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   687-   692      4   175     0      0  y   y    0   1 endprotoent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=360

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 7.00 # stmts=    4 Code/stmt= 3.50  Point total= 87.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=361

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w SBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=362

 Object Unit name= getservbyname                              File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:30:59.48 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    23     27  getservbyname
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  getservbyname

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_2
                       Std       0 XSL$GETSERVBYNAME
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=363

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=364


      694       694             struct servent *getservbyname( name, proto)  
      695       695                 char *name, *proto;  

    695  0 000000   000000 700000 xent  getservbyna* TSX0    _XBC_AUTO_2
         0 000001   000022 000002                    ZERO    18,2

      696       696             {  
      697       697    1            struct servent *result;  
      698       698    1          
      699       699    1            XSL$GETSERVBYNAME( &result, name, proto);  

    699  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200006 450500                    STP0    proto+1,,AUTO
         0 000004   200004 236100                    LDQ     name,,AUTO
         0 000005   200007 756100                    STQ     proto+2,,AUTO
         0 000006   200005 236100                    LDQ     proto,,AUTO
         0 000007   200010 756100                    STQ     proto+3,,AUTO
         0 000010   200006 630500                    EPPR0   proto+1,,AUTO
         0 000011   000024 631400 0                  EPPR1   s:703+2
         0 000012   000000 701000 xent               TSX1    XSL$GETSERVBYNAME
         0 000013   000000 236007                    LDQ     0,DL

      700       700    1            if( result == NULL)  

    700  0 000014   200011 236100                    LDQ     result,,AUTO
         0 000015   006014 116007                    CMPQ    3084,DL
         0 000016   000022 601000 0                  TNZ     s:703

      701       701    1                xsl$maperror();  

    701  0 000017   000025 631400 0                  EPPR1   s:703+3
         0 000020   000000 701000 xent               TSX1    xsl$maperror
         0 000021   000000 236007                    LDQ     0,DL

      702       702    1            return( result);  

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=365
      703       703    1        }  

    703  0 000022   200011 236100                    LDQ     result,,AUTO
         0 000023   000000 702000 xent               TSX2    _XBC_FARET
         0 000024   000003 000000                    ZERO    3,0
         0 000025   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=366

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   695-   703      6   177     0      0  y   y    2   1 getservbyname
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=367

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 5.75 # stmts=    6 Code/stmt= 3.83  Point total= 89.9
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=368

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w PTR         r,m   1 name
     5-0-0/w PTR         r,m   1 proto                     11-0-0/w PTR         r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=369

 Object Unit name= getservbyport                              File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:31:02.76 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    23     27  getservbyport
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  getservbyport

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_2
                       Std       0 XSL$GETSERVBYPORT
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=370

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=371


      705       705             struct servent *getservbyport( port, proto)  
      706       706                 int port;  

    706  0 000000   000000 700000 xent  getservbypo* TSX0    _XBC_AUTO_2
         0 000001   000022 000002                    ZERO    18,2

      707       707                 char *proto;  
      708       708             {  
      709       709    1            struct servent *result;  
      710       710    1          
      711       711    1            XSL$GETSERVBYPORT( &result, &port, proto);  

    711  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200006 450500                    STP0    proto+1,,AUTO
         0 000004   200004 630500                    EPPR0   port,,AUTO
         0 000005   200007 450500                    STP0    proto+2,,AUTO
         0 000006   200005 236100                    LDQ     proto,,AUTO
         0 000007   200010 756100                    STQ     proto+3,,AUTO
         0 000010   200006 630500                    EPPR0   proto+1,,AUTO
         0 000011   000024 631400 0                  EPPR1   s:715+2
         0 000012   000000 701000 xent               TSX1    XSL$GETSERVBYPORT
         0 000013   000000 236007                    LDQ     0,DL

      712       712    1            if( result == NULL)  

    712  0 000014   200011 236100                    LDQ     result,,AUTO
         0 000015   006014 116007                    CMPQ    3084,DL
         0 000016   000022 601000 0                  TNZ     s:715

      713       713    1                xsl$maperror();  

    713  0 000017   000025 631400 0                  EPPR1   s:715+3
         0 000020   000000 701000 xent               TSX1    xsl$maperror
         0 000021   000000 236007                    LDQ     0,DL

      714       714    1            return( result);  
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=372

      715       715    1        }  

    715  0 000022   200011 236100                    LDQ     result,,AUTO
         0 000023   000000 702000 xent               TSX2    _XBC_FARET
         0 000024   000003 000000                    ZERO    3,0
         0 000025   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=373

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   706-   715      6   177     0      0  y   y    2   1 getservbyport
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=374

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 5.75 # stmts=    6 Code/stmt= 3.83  Point total= 89.9
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=375

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w SBIN        r,m   1 port
     5-0-0/w PTR         r,m   1 proto                     11-0-0/w PTR         r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=376

 Object Unit name= getservent                                 File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:31:06.44 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    19     23  getservent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  getservent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_0
                       Std       0 XSL$GETSERVENT
                       Std       0 xsl$maperror
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=377

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=378


      717       717             struct servent *getservent()  
      718       718             {  

    718  0 000000   000000 700000 xent  getservent   TSX0    _XBC_AUTO_0
         0 000001   000016 000000                    ZERO    14,0

      719       719    1            struct servent *result;  
      720       720    1          
      721       721    1            XSL$GETSERVENT( &result);  

    721  0 000002   200005 630500                    EPPR0   result,,AUTO
         0 000003   200004 450500                    STP0    __varyarg_ptr+1,,AUTO
         0 000004   200004 630500                    EPPR0   __varyarg_ptr+1,,AUTO
         0 000005   000020 631400 0                  EPPR1   s:725+2
         0 000006   000000 701000 xent               TSX1    XSL$GETSERVENT
         0 000007   000000 236007                    LDQ     0,DL

      722       722    1            if( result == NULL)  

    722  0 000010   200005 236100                    LDQ     result,,AUTO
         0 000011   006014 116007                    CMPQ    3084,DL
         0 000012   000016 601000 0                  TNZ     s:725

      723       723    1                xsl$maperror();  

    723  0 000013   000021 631400 0                  EPPR1   s:725+3
         0 000014   000000 701000 xent               TSX1    xsl$maperror
         0 000015   000000 236007                    LDQ     0,DL

      724       724    1            return( result);  

      725       725    1        }  

    725  0 000016   200005 236100                    LDQ     result,,AUTO
         0 000017   000000 702000 xent               TSX2    _XBC_FARET
         0 000020   000001 000000                    ZERO    1,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=379
         0 000021   000000 000000                    ZERO    0,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=380

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   718-   725      6   175     0      0  y   y    0   1 getservent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=381

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     2 Call       1 If         1 Return     1 Proc       1 EndPrc

 # major stmts=    4 Code/major= 4.75 # stmts=    6 Code/stmt= 3.16  Point total= 90.9
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=382

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=383

 Object Unit name= setservent                                 File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:31:09.92 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    16     20  setservent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  setservent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_1
                       Std       0 XSL$SETSERVENT
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=384

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=385


      727       727             void *setservent( stayopen)  
      728       728                 int stayopen;  

    728  0 000000   000000 700000 xent  setservent   TSX0    _XBC_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      729       729             {  
      730       730    1            int result;  
      731       731    1          
      732       732    1            XSL$SETSERVENT( &result, &stayopen);  

    732  0 000002   200011 630500                    EPPR0   result,,AUTO
         0 000003   200007 450500                    STP0    stayopen+3,,AUTO
         0 000004   200004 630500                    EPPR0   stayopen,,AUTO
         0 000005   200010 450500                    STP0    stayopen+4,,AUTO
         0 000006   200007 630500                    EPPR0   stayopen+3,,AUTO
         0 000007   000016 631400 0                  EPPR1   s:734+2
         0 000010   000000 701000 xent               TSX1    XSL$SETSERVENT
         0 000011   000000 236007                    LDQ     0,DL

      733       733    1            return( result);  

    733  0 000012   006014 236007                    LDQ     3084,DL
         0 000013   200011 656100                    ERSQ    result,,AUTO

      734       734    1        }  

    734  0 000014   200011 236100                    LDQ     result,,AUTO
         0 000015   000000 702000 xent               TSX2    _XBC_FARET
         0 000016   000002 000000                    ZERO    2,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=386

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   728-   734      4   176     0      0  y   y    1   1 setservent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=387

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 8.00 # stmts=    4 Code/stmt= 4.00  Point total= 86.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=388

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr             11-0-0/w SBIN        r,m   1 result
     4-0-0/w SBIN        r,m   1 stayopen

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=389

 Object Unit name= endservent                                 File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:31:12.88 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    14     16  endservent
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  endservent

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_0
                       Std       0 XSL$ENDSERVENT
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=390

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=391


      736       736             void *endservent()  
      737       737             {  

    737  0 000000   000000 700000 xent  endservent   TSX0    _XBC_AUTO_0
         0 000001   000016 000000                    ZERO    14,0

      738       738    1            int result;  
      739       739    1          
      740       740    1            XSL$ENDSERVENT( &result);  

    740  0 000002   200005 630500                    EPPR0   result,,AUTO
         0 000003   200004 450500                    STP0    __varyarg_ptr+1,,AUTO
         0 000004   200004 630500                    EPPR0   __varyarg_ptr+1,,AUTO
         0 000005   000014 631400 0                  EPPR1   s:742+2
         0 000006   000000 701000 xent               TSX1    XSL$ENDSERVENT
         0 000007   000000 236007                    LDQ     0,DL

      741       741    1            return( result);  

    741  0 000010   006014 236007                    LDQ     3084,DL
         0 000011   200005 656100                    ERSQ    result,,AUTO

      742       742    1        }  

    742  0 000012   200005 236100                    LDQ     result,,AUTO
         0 000013   000000 702000 xent               TSX2    _XBC_FARET
         0 000014   000001 000000                    ZERO    1,0
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=392

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   737-   742      4   175     0      0  y   y    0   1 endservent
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=393

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Call       1 Return     1 Proc       1 EndPrc

 # major stmts=    2 Code/major= 7.00 # stmts=    4 Code/stmt= 3.50  Point total= 87.8
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=394

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w SBIN        r,m   1 result

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=395

 Object Unit name= bcopy                                      File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:31:16.12 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    12     14  bcopy
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  bcopy

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=396

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=397


      744       744             /* here are some non-networking functions from BSD */  
      745       745             /* ..so the appl coder doesn't have to write 'em.. */  
      746       746                
      747       747             /*F* NAME: bcmp()  --  Bytestring Comparison  
      748       748             ..::IT "Purpose:"  
      749       749             .INL +4  
      750       750             Compares two strings of bytes and returns status.  
      751       751             ..::IT "C Usage:"  
      752       752             .INL +4  
      753       753             .FIF  
      754       754             status = bcmp( ptr1, ptr2, len );  
      755       755             ..::IT "Parameters:"  
      756       756             .INL +4  
      757       757             .FIF  
      758       758             ptr1        address of first bytestring in memory  
      759       759                
      760       760             ptr2        address of second bytestring in memory  
      761       761                
      762       762             len         integer number of bytes to compare  
      763       763             ..::IT "Result:"  
      764       764             .INL +4  
      765       765             .FIF  
      766       766             status      integer status of comparison  
      767       767             ..::IT "Description:"  
      768       768             The bcmp() function compares two strings of bytes and returns zero if they  
      769       769             are identical, otherwise returns a nonzero value.  Both strings are assumed  
      770       770             to be len bytes long.  If len is zero then bcmp() returns zero.  
      771       771             ..::IT "Errors:"  
      772       772             No error checking is performed by the bcmp() function.  
      773       773             */  
      774       774             /*F* NAME: bcopy()  --  Bytestring Copy  
      775       775             ..::IT "Purpose:"  
      776       776             .INL +4  
      777       777             Copies a string of bytes from one memory address to another.  
      778       778             ..::IT "C Usage:"  
      779       779             .INL +4  
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=398
      780       780             .FIF  
      781       781             bcopy( ptr1, ptr2, len );  
      782       782             ..::IT "Parameters:"  
      783       783             .INL +4  
      784       784             .FIF  
      785       785             ptr1        address of source bytestring in memory  
      786       786                
      787       787             ptr2        address of destination bytestring in memory  
      788       788                
      789       789             len         integer number of bytes to copy  
      790       790             ..::IT "Result:"  
      791       791             The result of the bcopy() function is undefined.  
      792       792             ..::IT "Description:"  
      793       793             The bcopy() function copies len bytes starting at ptr1 to the address given  
      794       794             by ptr2.  Overlap of source and destination has an undefined result.  
      795       795             ..::IT "Errors:"  
      796       796             No error checking is performed by the bcopy() function.  
      797       797             */  
      798       798             /*F* NAME: bzero()  --  Bytestring Zero  
      799       799             ..::IT "Purpose:"  
      800       800             .INL +4  
      801       801             Zeroes a string of bytes in memory.  
      802       802             ..::IT "C Usage:"  
      803       803             .INL +4  
      804       804             .FIF  
      805       805             bzero( ptr, len );  
      806       806             ..::IT "Parameters:"  
      807       807             .INL +4  
      808       808             .FIF  
      809       809             ptr         address of bytestring to be zeroed  
      810       810                
      811       811             len         integer number of bytes to be zeroed  
      812       812             ..::IT "Result:"  
      813       813             The result of the bzero() function is undefined.  
      814       814             ..::IT "Description:"  
      815       815             The bzero() function zeroes len bytes of a string in memory.  
      816       816             ..::IT "Errors:"  
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=399
      817       817             No error checking is performed by the bzero() function.  
      818       818             */  
      819       819                
      820       820             void *bcopy( const void *src, void *dest, int nbytes) {  

    820  0 000000   000000 700000 xent  bcopy        TSX0    _XBC_AUTO_3
         0 000001   000024 000003                    ZERO    20,3

      821       821    1            return( memcpy( dest, src, nbytes));  

    821  0 000002   200005 473500                    LDP3    dest,,AUTO
         0 000003   200004 474500                    LDP4    src,,AUTO
         0 000004   200006 236100                    LDQ     nbytes,,AUTO
         0 000005   000140 100540                    MLR     fill='000'O
         0 000006   400000 000006                    ADSC9   0,,PR4                   cn=0,n=*Q
         0 000007   300000 000006                    ADSC9   0,,PR3                   cn=0,n=*Q
         0 000010   200013 453500                    STP3    nbytes+5,,AUTO

      822       822    1        }  

    822  0 000011   200013 236100                    LDQ     nbytes+5,,AUTO
         0 000012   000000 702000 xent               TSX2    _XBC_FARET
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=400

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   820-   822      3   177     0      0  y   y    3   1 bcopy
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=401

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Return     1 Proc       1 EndPrc

 # major stmts=    1 Code/major=12.00 # stmts=    3 Code/stmt= 4.00  Point total= 82.9
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=402

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              5-0-0/w PTR         r,m   1 dest
     6-0-0/w SBIN        r,m   1 nbytes                     4-0-0/w PTR         r,m   1 src

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=403

 Object Unit name= bzero                                      File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:31:20.08 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    11     13  bzero
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  bzero

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_2
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=404

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=405


      824       824             void *bzero( void *dest, int nbytes) {  

    824  0 000000   000000 700000 xent  bzero        TSX0    _XBC_AUTO_2
         0 000001   000022 000002                    ZERO    18,2

      825       825    1            return( memset( dest, 0, nbytes));  

    825  0 000002   200004 473500                    LDP3    dest,,AUTO
         0 000003   200005 236100                    LDQ     nbytes,,AUTO
         0 000004   000140 100400                    MLR     fill='000'O
         0 000005   000000 000000                    ADSC9   0                        cn=0,n=0
         0 000006   300000 000006                    ADSC9   0,,PR3                   cn=0,n=*Q
         0 000007   200011 453500                    STP3    nbytes+4,,AUTO

      826       826    1        }  

    826  0 000010   200011 236100                    LDQ     nbytes+4,,AUTO
         0 000011   000000 702000 xent               TSX2    _XBC_FARET
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=406

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   824-   826      3   176     0      0  y   y    2   1 bzero
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=407

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Return     1 Proc       1 EndPrc

 # major stmts=    1 Code/major=11.00 # stmts=    3 Code/stmt= 3.66  Point total= 83.9
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=408

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              4-0-0/w PTR         r,m   1 dest
     5-0-0/w SBIN        r,m   1 nbytes

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=409

 Object Unit name= bcmp                                       File name= XSL$CFUNCS.:TCA2TOU
 UTS= NOV 16 '97 14:31:22.68 SUN                              Compiler= C/C00            Sev=      00
 SharedLib= :SHARED_C                                         Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  8     zero    17     21  bcmp
    1   Data  even  zero     0      0
    2  RoData even  none     0      0

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  bcmp

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes                   Std       0 _inet_addr#f#
                       Std       0 _XBC_AUTO_3
                       Std       0 _XBC_FARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     inet_addr#s                           XSL_ERRNO                             __INDTBL
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=410

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=411


      828       828             int bcmp( const void *ptr1, const void *ptr2, int nbytes) {  

    828  0 000000   000000 700000 xent  bcmp         TSX0    _XBC_AUTO_3
         0 000001   000026 000003                    ZERO    22,3

      829       829    1            return( memcmp( ptr1, ptr2, nbytes));  

    829  0 000002   200004 473500                    LDP3    ptr1,,AUTO
         0 000003   200005 474500                    LDP4    ptr2,,AUTO
         0 000004   200006 236100                    LDQ     nbytes,,AUTO
         0 000005   000140 106540                    CMPC    fill='000'O
         0 000006   300000 000006                    ADSC9   0,,PR3                   cn=0,n=*Q
         0 000007   400000 000006                    ADSC9   0,,PR4                   cn=0,n=*Q
         0 000010   200014 754100                    STI     nbytes+6,,AUTO
         0 000011   200014 236100                    LDQ     nbytes+6,,AUTO
         0 000012   000017 772000                    QRL     15
         0 000013   000007 376007                    ANQ     7,DL
         0 000014   000020 236006 xsym               LDQ     __INDTBL+16,QL
         0 000015   200013 756100                    STQ     nbytes+5,,AUTO

      830       830    1        }  

    830  0 000016   200013 236100                    LDQ     nbytes+5,,AUTO
         0 000017   000000 702000 xent               TSX2    _XBC_FARET
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=412

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   828-   830      3   177     0      0  y   y    3   1 bcmp
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=413

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label



  **** Statement type totals  ****

     1 Return     1 Proc       1 EndPrc

 # major stmts=    1 Code/major=17.00 # stmts=    3 Code/stmt= 5.66  Point total= 77.9
CC.C03    File=XSL$CFUNCS.:TCA2TSI                                                  Sun Nov 16 1997  Page=414

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r,m   1 __varyarg_ptr              6-0-0/w SBIN        r,m   1 nbytes
     4-0-0/w PTR         r,m   1 ptr1                       5-0-0/w PTR         r,m   1 ptr2

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r,m   1 XSL_ERRNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(1728)  r,m   1 s__FILE#                   0-0-0/c STRC        r,m   1 s_fd_set#
     0-0-0/c STRC(180)   r,m   1 s_hostent#                 0-0-0/c STRC(72)    r,m   1 s_iovec#
     0-0-0/c STRC(216)   r,m   1 s_msghdr#                  0-0-0/c STRC(144)   r,m   1 s_netent#
     0-0-0/c STRC(108)   r,m   1 s_protoent#                0-0-0/c STRC(144)   r,m   1 s_servent#
     0-0-0/c STRC(180)   r,m   1 s_sockaddr#                0-0-0/c STRC(72)    r,m   1 s_timeval#

