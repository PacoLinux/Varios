VERSION A02

PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:1    
        1        1        /*M* XSL$INETD - XSL$ACCEPT split up for INETD and its servers. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F* NAME: XSL$ACCEPT_INETD
        8        8             PARAMETERS:
        9        9              RESULT - SBIN result; returns zero if all went well.
       10       10              SOCK# - SBIN socket number of the listening port.
       11       11              INETD - XSL$INETD area for communication with server side.
       12       12             DESCRIPTION: This routine is to be called after a select indicates that
       13       13              accept will work, and a server has posted INETD.LDCTX.  It does the accept
       14       14              and returns INETD.NAMELEN and INETD.NAME, and wakes up the server.
       15       15        */
       16       16        XSL$ACCEPT_INETD: PROC( RESULT, SOCK#, INETD) ALTRET;
       17       17        %INCLUDE CP_6;
       18       98        %INCLUDE XSL_SOCKET_E;
       19      356        %INCLUDE XSL_SOCKET_M;
       20     1117        %INCLUDE XSL_PERR_C;
       21     1172        %INCLUDE XSL_INTERNAL_M;
       22     1423            %XSL$SOCKINFO( FPTN=SOCK, STCLASS="BASED( SOCK$)");
       23     1567            %XSL$INETD( FPTN=INETD, STCLASS=PARAM);
       24     1647        %INCLUDE XSL_SOCKMSGS_E;
       25     1693        %INCLUDE XSL_SOCKMSGS_M;
       26     2826            %XSL_REFMSGS;
       27     2829            %XSL$ACCEPTRQS( FPTN=XSL_ACCEPTRQS, STCLASS=SYMREF);
       28     2855            %XSL$ACCEPTRQS( STCLASS="BASED( XSL_KEYBUF$)");
       29     2881            %XSL$ACCEPTRSP( STCLASS="BASED( XSL_KEYBUF$)");
       30     2935
       31     2936    1       DCL XSL$CL_READ ENTRY(3) ALTRET;
       32     2937    1       DCL XSL$CL_WRITE ENTRY(4) ALTRET;
       33     2938    1       DCL XSL$NTOHADDR ENTRY(2);
       34     2939    1       DCL XSL$SOCKPTR ENTRY(2) ALTRET;
       35     2940    1       DCL XSL$DCBNPTR ENTRY(2) ALTRET;
       36     2941
       37     2942    1       DCL XSL_ERRNO SBIN SYMREF;
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:2    
       38     2943    1       DCL XSL_SOCK$ REDEF XSL_ERRNO PTR;
       39     2944    1       DCL XSL_KEYBUF$ PTR SYMREF READONLY;
       40     2945
       41     2946    1       DCL RESULT SBIN;
       42     2947    1       DCL SOCK# SBIN;
       43     2948    1       DCL SOCK$ PTR;
       44     2949
       45     2950    1       CALL XSL$DCBNPTR( SOCK#, XSL_SOCK$) ALTRET( BAILOUT);
       46     2951    1       GOTO COMMON;
       47     2952
       48     2953    1   XSL$QACCEPT_INETD: ENTRY( RESULT, SOCK#, INETD) ALTRET;
       49     2954
       50     2955    1       CALL XSL$SOCKPTR( SOCK#, XSL_SOCK$) ALTRET (BAILOUT);
       51     2956    1   COMMON:
       52     2957    1       SOCK$ = XSL_SOCK$;
       53     2958    2       IF NOT SOCK.FLAGS.LISTEN THEN DO;
       54     2959    2           XSL_ERRNO = %E$INVAL;
       55     2960    2   BAILOUT:
       56     2961    2           INETD.ERRNO = XSL_ERRNO;
       57     2962    2           CALL M$RUE (INETD.FPT_RUE);
       58     2963    2           INETD.FPT_RUE.STATE = 2;
       59     2964    2           RESULT = %E$FAILURE;
       60     2965    2           ALTRETURN;
       61     2966    2           END;
       62     2967    1       XSL$ACCEPTRQS = XSL_ACCEPTRQS;
       63     2968    1       XSL$ACCEPTRQS.XPSLDCTX = INETD.LDCTX;
       64     2969    1       CALL XSL$CL_WRITE( SOCK, LENGTHC( XSL$ACCEPTRQS));
       65     2970    1       CALL XSL$CL_READ( SOCK);
       66     2971    2       IF XSL$ACCEPTRSP.RESULT < 0 THEN DO;
       67     2972    2           XSL_ERRNO = XSL$ACCEPTRSP.ERRNO;
       68     2973    2           GOTO BAILOUT;
       69     2974    2           END;
       70     2975    1       INETD.NAMELEN = XSL$ACCEPTRSP.NAMELEN;
       71     2976    1       CALL XSL$NTOHADDR( INETD.NAME, XSL$ACCEPTRSP.NAME);
       72     2977    1       CALL M$RUE( INETD.FPT_RUE);
       73     2978    1       INETD.FPT_RUE.STATE = 2;
       74     2979    1       SOCK.FLAGS.ACCEPT = '1'B;
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:3    
       75     2980    1       RESULT = 0;
       76     2981    1       RETURN;
       77     2982
       78     2983    1       END XSL$ACCEPT_INETD;
       79     2984        %EOD;

PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:4    
--  Include file information  --

   XSL_SOCKMSGS_M.:TCA2TOU  is referenced.
   XSL_SOCKMSGS_E.:TCA2TOU  is referenced.
   XSL_INTERNAL_M.:TCA2TOU  is referenced.
   XSL_PERR_C.:TCA2TOU  is referenced.
   XSL_SOCKET_M.:TCA2TOU  is referenced.
   XSL_SOCKET_E.:TCA2TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure XSL$ACCEPT_INETD.

   Procedure XSL$ACCEPT_INETD requires 90 words for executable code.
   Procedure XSL$ACCEPT_INETD requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:5    

 Object Unit name= XSL$ACCEPT_INETD                           File name= XSL$INETD.:TCA2TOU
 UTS= NOV 16 '97 14:29:27.32 SUN                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    90    132  XSL$ACCEPT_INETD
    2  RoData even  none     2      2  XSL$ACCEPT_INETD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  XSL$ACCEPT_INETD
     1     12          yes     yes      Std        3  XSL$QACCEPT_INETD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XSL$MSGSDEFS
         yes           Std       2 XSL$NTOHADDR
 yes     yes           Std       2 XSL$DCBNPTR
 yes     yes           Std       2 XSL$SOCKPTR
 yes     yes           Std       4 XSL$CL_WRITE
 yes     yes           Std       3 XSL$CL_READ
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  XSL_ACCEPTRQS                         XSL_ERRNO
r    XSL_KEYBUF$                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:7    


        1        1        /*M* XSL$INETD - XSL$ACCEPT split up for INETD and its servers. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F* NAME: XSL$ACCEPT_INETD
        8        8             PARAMETERS:
        9        9              RESULT - SBIN result; returns zero if all went well.
       10       10              SOCK# - SBIN socket number of the listening port.
       11       11              INETD - XSL$INETD area for communication with server side.
       12       12             DESCRIPTION: This routine is to be called after a select indicates that
       13       13              accept will work, and a server has posted INETD.LDCTX.  It does the accept
       14       14              and returns INETD.NAMELEN and INETD.NAME, and wakes up the server.
       15       15        */
       16       16        XSL$ACCEPT_INETD: PROC( RESULT, SOCK#, INETD) ALTRET;

     16  1 000000   000000 700200 xent  XSL$ACCEPT_* TSX0  ! X66_AUTO_3
         1 000001   000012 000003                    ZERO    10,3

       17       17        %INCLUDE CP_6;
       18       98        %INCLUDE XSL_SOCKET_E;
       19      356        %INCLUDE XSL_SOCKET_M;
       20     1117        %INCLUDE XSL_PERR_C;
       21     1172        %INCLUDE XSL_INTERNAL_M;
       22     1423            %XSL$SOCKINFO( FPTN=SOCK, STCLASS="BASED( SOCK$)");
       23     1567            %XSL$INETD( FPTN=INETD, STCLASS=PARAM);
       24     1647        %INCLUDE XSL_SOCKMSGS_E;
       25     1693        %INCLUDE XSL_SOCKMSGS_M;
       26     2826            %XSL_REFMSGS;
       27     2829            %XSL$ACCEPTRQS( FPTN=XSL_ACCEPTRQS, STCLASS=SYMREF);
       28     2855            %XSL$ACCEPTRQS( STCLASS="BASED( XSL_KEYBUF$)");
       29     2881            %XSL$ACCEPTRSP( STCLASS="BASED( XSL_KEYBUF$)");
       30     2935
       31     2936    1       DCL XSL$CL_READ ENTRY(3) ALTRET;
       32     2937    1       DCL XSL$CL_WRITE ENTRY(4) ALTRET;
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:8    
       33     2938    1       DCL XSL$NTOHADDR ENTRY(2);
       34     2939    1       DCL XSL$SOCKPTR ENTRY(2) ALTRET;
       35     2940    1       DCL XSL$DCBNPTR ENTRY(2) ALTRET;
       36     2941
       37     2942    1       DCL XSL_ERRNO SBIN SYMREF;
       38     2943    1       DCL XSL_SOCK$ REDEF XSL_ERRNO PTR;
       39     2944    1       DCL XSL_KEYBUF$ PTR SYMREF READONLY;
       40     2945
       41     2946    1       DCL RESULT SBIN;
       42     2947    1       DCL SOCK# SBIN;
       43     2948    1       DCL SOCK$ PTR;
       44     2949
       45     2950    1       CALL XSL$DCBNPTR( SOCK#, XSL_SOCK$) ALTRET( BAILOUT);

   2950  1 000002   000000 236000 2                  LDQ     0
         1 000003   200004 235100                    LDA     @SOCK#,,AUTO
         1 000004   200010 757100                    STAQ    SOCK$+2,,AUTO
         1 000005   200010 630500                    EPPR0   SOCK$+2,,AUTO
         1 000006   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000007   000000 701000 xent               TSX1    XSL$DCBNPTR
         1 000010   000033 702000 1                  TSX2    BAILOUT

       46     2951    1       GOTO COMMON;

   2951  1 000011   000023 710000 1                  TRA     COMMON

       47     2952
       48     2953    1   XSL$QACCEPT_INETD: ENTRY( RESULT, SOCK#, INETD) ALTRET;

   2953  1 000012   000000 700200 xent  XSL$QACCEPT* TSX0  ! X66_AUTO_3
         1 000013   000012 000003                    ZERO    10,3

       49     2954
       50     2955    1       CALL XSL$SOCKPTR( SOCK#, XSL_SOCK$) ALTRET (BAILOUT);

   2955  1 000014   000000 236000 2                  LDQ     0
         1 000015   200004 235100                    LDA     @SOCK#,,AUTO
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:9    
         1 000016   200010 757100                    STAQ    SOCK$+2,,AUTO
         1 000017   200010 630500                    EPPR0   SOCK$+2,,AUTO
         1 000020   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000021   000000 701000 xent               TSX1    XSL$SOCKPTR
         1 000022   000033 702000 1                  TSX2    BAILOUT

       51     2956    1   COMMON:
       52     2957    1       SOCK$ = XSL_SOCK$;

   2957  1 000023   000000 236000 xsym  COMMON       LDQ     XSL_ERRNO
         1 000024   200006 756100                    STQ     SOCK$,,AUTO

       53     2958    2       IF NOT SOCK.FLAGS.LISTEN THEN DO;

   2958  1 000025   200006 470500                    LDP0    SOCK$,,AUTO
         1 000026   000001 236100                    LDQ     1,,PR0
         1 000027   010000 316003                    CANQ    4096,DU
         1 000030   000047 601000 1                  TNZ     s:2967

       54     2959    2           XSL_ERRNO = %E$INVAL;

   2959  1 000031   000026 235007                    LDA     22,DL
         1 000032   000000 755000 xsym               STA     XSL_ERRNO

       55     2960    2   BAILOUT:
       56     2961    2           INETD.ERRNO = XSL_ERRNO;

   2961  1 000033   200005 470500       BAILOUT      LDP0    @INETD,,AUTO
         1 000034   000000 235000 xsym               LDA     XSL_ERRNO
         1 000035   000006 755100                    STA     6,,PR0

       57     2962    2           CALL M$RUE (INETD.FPT_RUE);

   2962  1 000036   020020 713400                    CLIMB   8208
         1 000037   400000 401760                    pmme    nvectors=1

       58     2963    2           INETD.FPT_RUE.STATE = 2;
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:10   

   2963  1 000040   200005 470500                    LDP0    @INETD,,AUTO
         1 000041   000002 236007                    LDQ     2,DL
         1 000042   000002 552104                    STBQ    2,'04'O,PR0

       59     2964    2           RESULT = %E$FAILURE;

   2964  1 000043   000001 335007                    LCA     1,DL
         1 000044   200003 471500                    LDP1    @RESULT,,AUTO
         1 000045   100000 755100                    STA     0,,PR1

       60     2965    2           ALTRETURN;

   2965  1 000046   000000 702200 xent               TSX2  ! X66_AALT

       61     2966    2           END;
       62     2967    1       XSL$ACCEPTRQS = XSL_ACCEPTRQS;

   2967  1 000047   000000 236000 xsym               LDQ     XSL_ACCEPTRQS
         1 000050   000000 471400 xsym               LDP1    XSL_KEYBUF$
         1 000051   100000 756100                    STQ     0,,PR1

       63     2968    1       XSL$ACCEPTRQS.XPSLDCTX = INETD.LDCTX;

   2968  1 000052   200005 473500                    LDP3    @INETD,,AUTO
         1 000053   300004 220100                    LDX0    4,,PR3
         1 000054   100000 440100                    SXL0    0,,PR1

       64     2969    1       CALL XSL$CL_WRITE( SOCK, LENGTHC( XSL$ACCEPTRQS));

   2969  1 000055   000001 236000 2                  LDQ     1
         1 000056   200006 235100                    LDA     SOCK$,,AUTO
         1 000057   200010 757100                    STAQ    SOCK$+2,,AUTO
         1 000060   200010 630500                    EPPR0   SOCK$+2,,AUTO
         1 000061   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000062   000000 701000 xent               TSX1    XSL$CL_WRITE
         1 000063   000000 011000                    NOP     0
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:11   

       65     2970    1       CALL XSL$CL_READ( SOCK);

   2970  1 000064   200006 630500                    EPPR0   SOCK$,,AUTO
         1 000065   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000066   000000 701000 xent               TSX1    XSL$CL_READ
         1 000067   000000 011000                    NOP     0

       66     2971    2       IF XSL$ACCEPTRSP.RESULT < 0 THEN DO;

   2971  1 000070   000000 470400 xsym               LDP0    XSL_KEYBUF$
         1 000071   000000 720100                    LXL0    0,,PR0
         1 000072   000077 605000 1                  TPL     s:2975

       67     2972    2           XSL_ERRNO = XSL$ACCEPTRSP.ERRNO;

   2972  1 000073   000001 236100                    LDQ     1,,PR0
         1 000074   000022 732000                    QRS     18
         1 000075   000000 756000 xsym               STQ     XSL_ERRNO

       68     2973    2           GOTO BAILOUT;

   2973  1 000076   000033 710000 1                  TRA     BAILOUT

       69     2974    2           END;
       70     2975    1       INETD.NAMELEN = XSL$ACCEPTRSP.NAMELEN;

   2975  1 000077   000001 236100                    LDQ     1,,PR0
         1 000100   000022 736000                    QLS     18
         1 000101   000022 732000                    QRS     18
         1 000102   200005 471500                    LDP1    @INETD,,AUTO
         1 000103   100007 756100                    STQ     7,,PR1

       71     2976    1       CALL XSL$NTOHADDR( INETD.NAME, XSL$ACCEPTRSP.NAME);

   2976  1 000104   000000 236000 xsym               LDQ     XSL_KEYBUF$
         1 000105   000002 036003                    ADLQ    2,DU
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:12   
         1 000106   200011 756100                    STQ     SOCK$+3,,AUTO
         1 000107   200005 236100                    LDQ     @INETD,,AUTO
         1 000110   000010 036003                    ADLQ    8,DU
         1 000111   200010 756100                    STQ     SOCK$+2,,AUTO
         1 000112   200010 630500                    EPPR0   SOCK$+2,,AUTO
         1 000113   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000114   000000 701000 xent               TSX1    XSL$NTOHADDR
         1 000115   000000 011000                    NOP     0

       72     2977    1       CALL M$RUE( INETD.FPT_RUE);

   2977  1 000116   200005 470500                    LDP0    @INETD,,AUTO
         1 000117   020020 713400                    CLIMB   8208
         1 000120   400000 401760                    pmme    nvectors=1

       73     2978    1       INETD.FPT_RUE.STATE = 2;

   2978  1 000121   200005 470500                    LDP0    @INETD,,AUTO
         1 000122   000002 236007                    LDQ     2,DL
         1 000123   000002 552104                    STBQ    2,'04'O,PR0

       74     2979    1       SOCK.FLAGS.ACCEPT = '1'B;

   2979  1 000124   200006 471500                    LDP1    SOCK$,,AUTO
         1 000125   020000 236003                    LDQ     8192,DU
         1 000126   100001 256100                    ORSQ    1,,PR1

       75     2980    1       RESULT = 0;

   2980  1 000127   200003 473500                    LDP3    @RESULT,,AUTO
         1 000130   300000 450100                    STZ     0,,PR3

       76     2981    1       RETURN;

   2981  1 000131   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:13   
 Sect OctLoc
   2     000   000000 006000   000006 006000                                    ........
       77     2982
       78     2983    1       END XSL$ACCEPT_INETD;
       79     2984        %EOD;

PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:14   
--  Include file information  --

   XSL_SOCKMSGS_M.:TCA2TOU  is referenced.
   XSL_SOCKMSGS_E.:TCA2TOU  is referenced.
   XSL_INTERNAL_M.:TCA2TOU  is referenced.
   XSL_PERR_C.:TCA2TOU  is referenced.
   XSL_SOCKET_M.:TCA2TOU  is referenced.
   XSL_SOCKET_E.:TCA2TOU  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure XSL$ACCEPT_INETD.
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:15   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @INETD                     3-0-0/w PTR         r     1 @RESULT
     4-0-0/w PTR         r     1 @SOCK#                    *0-0-0/d STRC(468)   r     1 INETD
    *0-0-0/w SBIN        r     1 RESULT                    *0-0-0/w SBIN        r     1 SOCK#
     6-0-0/w PTR         r     1 SOCK$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 XSL_ACCEPTRQS              0-0-0/w SBIN        r     1 XSL_ERRNO
     0-0-0/w PTR         r     1 XSL_KEYBUF$                0-0-0/w PTR         r     1 XSL_SOCK$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)   r     1 SOCK                       0-0-0/w STRC        r     1 XSL$ACCEPTRQS
     0-0-0/w STRC(216)   r     1 XSL$ACCEPTRSP


   Procedure XSL$ACCEPT_INETD requires 90 words for executable code.
   Procedure XSL$ACCEPT_INETD requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:16   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:17   
          MINI XREF LISTING

BAILOUT
      2961**LABEL    2950--CALLALT  2955--CALLALT  2973--GOTO
COMMON
      2957**LABEL    2951--GOTO
INETD
      1589**DCL        16--PROC     2953--ENTRY
INETD.ERRNO
      1604**DCL      2961<<ASSIGN
INETD.FPT_RUE
      1595**DCL      2962<>CALL     2977<>CALL
INETD.FPT_RUE.STATE
      1599**DCL      2963<<ASSIGN   2978<<ASSIGN
INETD.LDCTX
      1602**DCL      2968>>ASSIGN
INETD.NAME
      1625**DCL      2976<>CALL
INETD.NAMELEN
      1605**DCL      2975<<ASSIGN
M$RUE
        92**DCL-ENT  2962--CALL     2977--CALL
RESULT
      2946**DCL        16--PROC     2953--ENTRY    2964<<ASSIGN   2980<<ASSIGN
SOCK
      1441**DCL      2969<>CALL     2970<>CALL
SOCK.FLAGS.ACCEPT
      1456**DCL      2979<<ASSIGN
SOCK.FLAGS.LISTEN
      1457**DCL      2958>>IF
SOCK.NBACCEPT_SOCK$
      1563**DCL      1564--REDEF
SOCK#
      2947**DCL        16--PROC     2950<>CALL     2953--ENTRY    2955<>CALL
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:18   
SOCK$
      2948**DCL      1441--IMP-PTR  2957<<ASSIGN   2958>>IF       2969>>CALL     2970>>CALL     2979>>ASSIGN
XSL$ACCEPTRQS
      2872**DCL      2967<<ASSIGN   2969--CALL
XSL$ACCEPTRQS.XPSLDCTX
      2879**DCL      2968<<ASSIGN
XSL$ACCEPTRSP.ERRNO
      2906**DCL      2972>>ASSIGN
XSL$ACCEPTRSP.NAME
      2927**DCL      2976<>CALL
XSL$ACCEPTRSP.NAMELEN
      2907**DCL      2975>>ASSIGN
XSL$ACCEPTRSP.RESULT
      2905**DCL      2971>>IF
XSL$CL_READ
      2936**DCL-ENT  2970--CALL
XSL$CL_WRITE
      2937**DCL-ENT  2969--CALL
XSL$DCBNPTR
      2940**DCL-ENT  2950--CALL
XSL$NTOHADDR
      2938**DCL-ENT  2976--CALL
XSL$SOCKPTR
      2939**DCL-ENT  2955--CALL
XSL_ACCEPTRQS
      2846**DCL      2967>>ASSIGN
XSL_ERRNO
      2942**DCL      2943--REDEF    2959<<ASSIGN   2961>>ASSIGN   2972<<ASSIGN
XSL_KEYBUF$
      2944**DCL      2872--IMP-PTR  2898--IMP-PTR  2967>>ASSIGN   2968>>ASSIGN   2971>>IF       2972>>ASSIGN
      2975>>ASSIGN   2976>>CALL
XSL_SOCK$
      2943**DCL      2950<>CALL     2955<>CALL     2957>>ASSIGN
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:19   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:20   
              MINI UREF LISTING

M$ACCT      43**DCL-ENT
M$ACTIVATE      46**DCL-ENT
M$ALIB      39**DCL-ENT
M$ASUSER      41**DCL-ENT
M$ATTACH      48**DCL-ENT
M$BADPP      66**DCL-ENT
M$CGCTL      47**DCL-ENT
M$CGINFO      47**DCL-ENT
M$CHECK      28**DCL-ENT
M$CHGUNIT      86**DCL-ENT
M$CLOSE      26**DCL-ENT
M$CLRSTK      84**DCL-ENT
M$CMDVAR      95**DCL-ENT
M$CONFIG      56**DCL-ENT
M$CORRES      31**DCL-ENT
M$CPEXIT      40**DCL-ENT
M$CVM      64**DCL-ENT
M$CVOL      29**DCL-ENT
M$DCLFLD      56**DCL-ENT
M$DEACTIVATE      46**DCL-ENT
M$DELREC      28**DCL-ENT
M$DEQ      93**DCL-ENT
M$DETACH      48**DCL-ENT
M$DEVICE      30**DCL-ENT
M$DISPLAY      93**DCL-ENT
M$DISPRES      33**DCL-ENT
M$DLIB      39**DCL-ENT
M$DRIBBLE      56**DCL-ENT
M$DRTN      84**DCL-ENT
M$DSUSER      41**DCL-ENT
M$ENQ      92**DCL-ENT
M$EOM      51**DCL-ENT
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:21   
M$ERASE      57**DCL-ENT
M$ERR      38**DCL-ENT
M$ERRMSG      89**DCL-ENT
M$EVENT      81**DCL-ENT
M$EXHUME      90**DCL-ENT
M$EXIT      38**DCL-ENT
M$EXTEND      30**DCL-ENT
M$FDP      62**DCL-ENT
M$FDS      61**DCL-ENT
M$FEBOOT      54**DCL-ENT
M$FECTL      55**DCL-ENT
M$FEDUMP      54**DCL-ENT
M$FID      89**DCL-ENT
M$FINDPROC      43**DCL-ENT
M$FSUSER      41**DCL-ENT
M$FVP      63**DCL-ENT
M$FWCG      47**DCL-ENT
M$GBPL      67**DCL-ENT
M$GDDL      63**DCL-ENT
M$GDP      62**DCL-ENT
M$GDS      61**DCL-ENT
M$GETDCB      32**DCL-ENT
M$GETMOUSE      72**DCL-ENT
M$GETPM      73**DCL-ENT
M$GJOB      91**DCL-ENT
M$GLINEATTR      51**DCL-ENT
M$GOODPP      66**DCL-ENT
M$GPLATEN      59**DCL-ENT
M$GPROMPT      58**DCL-ENT
M$GTRMATTR      52**DCL-ENT
M$GTRMCTL      50**DCL-ENT
M$GTRMTAB      53**DCL-ENT
M$GVP      62**DCL-ENT
M$HELP      89**DCL-ENT
M$INT      81**DCL-ENT
M$INTRTN      42**DCL-ENT
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:22   
M$IOQ      77**DCL-ENT
M$JOBSTATS      91**DCL-ENT
M$KEYIN      31**DCL-ENT
M$LDEV      26**DCL-ENT
M$LDTRC      39**DCL-ENT
M$LIMIT      32**DCL-ENT
M$LINES      31**DCL-ENT
M$LINK      38**DCL-ENT
M$MADMUCK      34**DCL-ENT
M$MAKUSER      65**DCL-ENT
M$MBS      33**DCL-ENT
M$MDFFLD      57**DCL-ENT
M$MERC      82**DCL-ENT
M$MERCS      83**DCL-ENT
M$MIRROR      77**DCL-ENT
M$MONINFO      94**DCL-ENT
M$MPL      67**DCL-ENT
M$NODEINFO      58**DCL-ENT
M$NXTUSR      92**DCL-ENT
M$OCMSG      90**DCL-ENT
M$OLAY      38**DCL-ENT
M$OPEN      26**DCL-ENT
M$PAS      67**DCL-ENT
M$PATHCON      90**DCL-ENT
M$PDS      61**DCL-ENT
M$PFIL      28**DCL-ENT
M$PLATEN      52**DCL-ENT
M$PRECORD      30**DCL-ENT
M$PROCNAME      43**DCL-ENT
M$PROFILE      54**DCL-ENT
M$PROMPT      50**DCL-ENT
M$RACST      34**DCL-ENT
M$RDSYSLOG      75**DCL-ENT
M$READ      27**DCL-ENT
M$RELDCB      32**DCL-ENT
M$RELRES      33**DCL-ENT
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:23   
M$RELSTARF      35**DCL-ENT
M$REM      35**DCL-ENT
M$RENV      82**DCL-ENT
M$REQUIRE      34**DCL-ENT
M$RETRY      83**DCL-ENT
M$RETRYS      83**DCL-ENT
M$REW      29**DCL-ENT
M$RLSFLD      57**DCL-ENT
M$RPRIV      85**DCL-ENT
M$RSPP      64**DCL-ENT
M$RSWITCH      86**DCL-ENT
M$SAD      65**DCL-ENT
M$SAVE      41**DCL-ENT
M$SCON      42**DCL-ENT
M$SCREECH      40**DCL-ENT
M$SENV      82**DCL-ENT
M$SETFMA      26**DCL-ENT
M$SETFP      55**DCL-ENT
M$SINPUT      53**DCL-ENT
M$SLCFLD      58**DCL-ENT
M$SMOUSE      72**DCL-ENT
M$SMPRT      64**DCL-ENT
M$SPRIV      85**DCL-ENT
M$SSC      65**DCL-ENT
M$SSWITCH      85**DCL-ENT
M$STATE      94**DCL-ENT
M$STD      66**DCL-ENT
M$STIMER      80**DCL-ENT
M$STLPP      63**DCL-ENT
M$STRAP      80**DCL-ENT
M$STRMATTR      52**DCL-ENT
M$STRMCTL      50**DCL-ENT
M$STRMTAB      53**DCL-ENT
M$SYMBIO      91**DCL-ENT
M$SYSCON      77**DCL-ENT
M$SYSID      95**DCL-ENT
PL6.E3A0      #001=XSL$ACCEPT_INETD File=XSL$INETD.:TCA2TSI                      SUN 11/16/97 14:29 Page:24   
M$TDCLOSE      76**DCL-ENT
M$TDIO      76**DCL-ENT
M$TDOPEN      75**DCL-ENT
M$TDREQCPU      76**DCL-ENT
M$TEMPWROC      70**DCL-ENT
M$TIME      93**DCL-ENT
M$TRAP      80**DCL-ENT
M$TRMISC      55**DCL-ENT
M$TRMPRG      51**DCL-ENT
M$TRTN      84**DCL-ENT
M$TRUNC      27**DCL-ENT
M$TTIMER      80**DCL-ENT
M$UC      50**DCL
M$UMPL      67**DCL-ENT
M$UNFID      89**DCL-ENT
M$UNLATCH      46**DCL-ENT
M$UNSHARE      43**DCL-ENT
M$USRFIELD      86**DCL-ENT
M$VIRTUAL      61**DCL-ENT
M$WAIT      84**DCL-ENT
M$WEOF      29**DCL-ENT
M$WRITE      27**DCL-ENT
M$WRSYSLOG      75**DCL-ENT
M$XCON      81**DCL-ENT
M$XCONRTN      42**DCL-ENT
M$XEQTIME      94**DCL-ENT
M$XFLUSH      35**DCL-ENT
M$XMOUSE      72**DCL-ENT
M$XXX      38**DCL-ENT
M$YC      40**DCL-ENT
XSL$ACCEPT_INETD      16**PROC
XSL$MSGSDEFS    2827**DCL-ENT
XSL$QACCEPT_INETD    2953**ENTRY

PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:25   
       80        1        /*T***********************************************************/
       81        2        /*T*                                                         */
       82        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       83        4        /*T*                                                         */
       84        5        /*T***********************************************************/
       85        6        /*F* NAME: XSL$ACCEPT_SRVR
       86        7             PARAMETERS:
       87        8              SOCK# - returns socket of accepted connection or negative if failure.
       88        9              NAME - returns socketname of the remote socket.
       89       10              NAMELEN - returns the length of NAME.
       90       11             DESCRIPTION: This routine should be called by an INETD server instead of
       91       12              socket, listen, and accept.  It performs the half of the accept interface
       92       13              dealing with the new socket.  XSL$ACCEPT_INETD does the other half.
       93       14        */
       94       15        /*F* NAME: accept_srvr() and XSL$ACCEPT_SRVR  --  Accept from INETD
       95       16        ..::IT "Purpose:"
       96       17        .INL +4
       97       18        Accepts from the INETD Ghost an incoming connection request from another
       98       19        socket elsewhere in the network.
       99       20        ..::IT "C Usage:"
      100       21        .INL 4
      101       22        .FIF
      102       23        status = accept_srvr( name, &namelen );
      103       24        ..::IT "PL6 Usage:"
      104       25        .INL 4
      105       26        .FIF
      106       27        CALL XSL$ACCEPT_SRVR( status, name, namelen );
      107       28        ..::IT "Parameters:"
      108       29        .INL 4
      109       30        .FIF
      110       31        name        sockaddr structure
      111       32
      112       33        namelen     integer size of name in characters
      113       34        ..::IT "Results:"
      114       35        .INL 4
      115       36        .FIF
      116       37        status      integer new socket descriptor or error code
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:26   
      117       38
      118       39        name        sockaddr structure
      119       40
      120       41        namelen     integer number of significant characters in name
      121       42        ..::IT "Description:"
      122       43        The accept_srvr() function performs the "second half" of incoming connection
      123       44        setup when the INETD Ghost has performed the "first half" for the application.
      124       45        ..::IX "INETD"
      125       46        .SPB
      126       47        On systems such as UNIX where INETD can pass its environment to subprocesses,
      127       48        this function is not needed.  The subprocess inherits socket descriptors from
      128       49        INETD.
      129       50        .SPB
      130       51        On CP-6 systems, however, subprocesses are totally independent of INETD.  INETD
      131       52        takes care of socket(), bind(), listen(), and the initial work of accept().
      132       53        When an incoming connection request arrives, INETD starts up the application
      133       54        as a Ghost job, and the application issues accept_srvr() to complete the
      134       55        connection setup.  To avoid the overhead of
      135       56        starting a new ghost for every request, the application can use close() to end
      136       57        each request, and then accept_srvr() to wait for the next request.  The
      137       58        INETD STATUS command will display such waiting servers in state 1.  If a
      138       59        request arrives when the server is between accept_srvr() calls, a new ghost
      139       60        will be started.  If INETD is restarted while a server is in accept_srvr(),
      140       61        the server will abort (M$XXX in XSL$ACCEPT_SRVR).
      141       62        .SPB
      142       63        The name parameter specifies an application-defined buffer to receive the
      143       64        address of the socket that initiated the connection.
      144       65        .SPB
      145       66        The namelen parameter specifies how large the name buffer is, expressed as
      146       67        the number of characters it can hold.
      147       68        .SPB
      148       69        If the accept_srvr() function is successful, the status result contains the
      149       70        descriptor of the new socket allocated for the new connection.  The
      150       71        descriptor is a small non-negative integer, equivalent to the DCBNUM of the
      151       72        DCB allocated for the new socket.  The name and namelen parameters are
      152       73        modified to identify the initiator of the connection request.
      153       74        .SPB
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:27   
      154       75        If the accept_srvr() function is unsuccessful, the status result contains
      155       76        EFAILURE or E$FAILURE.  The XSL$ACCEPT_SRVR procedure additionally
      156       77        ALTRETURNs if it is unsuccessful; it is otherwise identical
      157       78        to the accept_srvr() function.
      158       79        .SPB
      159       80        If no connection requests are pending when accept_srvr() is invoked, the action
      160       81        taken depends on the socket mode.  The mode of a socket is defined to be
      161       82        either "blocking" or "nonblocking".  If the socket is blocking (which is
      162       83        the default mode) the application is blocked (i.e., suspended) until an
      163       84        incoming connection request is received from the network.  If the
      164       85        socket is nonblocking, the condition is treated as an EWOULDBLOCK error.
      165       86        ..::IX "blocking"
      166       87        ..::IX "non-blocking"
      167       88        .SPB
      168       89        The mode of a socket can be changed with either fcntl() or ioctl().
      169       90        .SPB
      170       91        The accept_srvr() function applies only to "stream" sockets.
      171       92        ..::IT "Errors:"
      172       93        Following are the possible error conditions reported when the accept_srvr()
      173       94        function is unsuccessful.  Equates for the possible values can be found in
      174       95        <xsl_errno.h> or XSL_PERR_C for C and PL6 source respectively.
      175       96
      176       97        .FIF
      177       98
      178       99        C #define               PL6 %EQU
      179      100        ----------------------- -----------------------
      180      101        EBADF                   E$BADF
      181      102        .FIN
      182      103        The descriptor s is inappropriate to identify a socket.
      183      104        .FIF
      184      105
      185      106        EINVAL                  E$INVAL
      186      107        .FIN
      187      108        The listen() function has not been invoked for this socket.
      188      109        .FIF
      189      110
      190      111        EMFILE                  E$MFILE
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:28   
      191      112        .FIN
      192      113        M$GETDCB failed.  Unable to allocate DCB for new socket.
      193      114        .FIF
      194      115
      195      116        ENOTSOCK                E$NOTSOCK
      196      117        .FIN
      197      118        The descriptor s is no longer valid to identify a socket.
      198      119        .FIF
      199      120
      200      121        EOPNOTSUPP              E$OPNOTSUPP
      201      122        .FIN
      202      123        This is not a "stream" socket.
      203      124        .FIF
      204      125
      205      126        EWOULDBLOCK             E$WOULDBLOCK
      206      127        .FIN
      207      128        No connections are pending for this nonblocking socket.
      208      129        .FIF
      209      130        */
      210      131        XSL$ACCEPT_SRVR: PROC( SOCK#, NAME, NAMELEN) ALTRET;
      211      132        %INCLUDE CP_6;
      212      213        %INCLUDE CP_6_SUBS;
      213      753            %M$DCB( DCBN=F$INETD, ASN=FILE, ACS=DS8, FUN=UPDATE, SHARE=ALL,
      214      754              NAME='inetd:', ACCT=':SYS');
      215      828            %FPT_CLOSE( FPTN=CLOSE_DS, STCLASS=CONSTANT, DCB=F$INETD);
      216      870            %FPT_OPEN( FPTN=COPEN_DS, STCLASS=CONSTANT, DCB=F$INETD,
      217      871              FUN=CREATE, EXIST=OLDFILE, ACS=DS8);
      218      980            %VLP_VECTOR( STCLASS=BASED);
      219      995            %FPT_WAIT( FPTN=WAIT_A_BIT, UNITS=20, STCLASS=CONSTANT);
      220     1009            %B$ALT;
      221     1017            %B$TCB( STCLASS="BASED(B$TCB$)");
      222     1020    1       DCL B$TCB$ PTR SYMREF READONLY;
      223     1021        %INCLUDE B$JIT;
      224     1311    1       DCL B$JIT$ PTR SYMREF READONLY;
      225     1312        %INCLUDE XSL_SOCKET_E;
      226     1570        %INCLUDE XSL_SOCKET_M;
      227     2331            %XSL$SOCKADDR( FPTN=NAME, STCLASS=);
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:29   
      228     2371        %INCLUDE XSL_PERR_C;
      229     2426        %INCLUDE XSL_INTERNAL_M;
      230     2677            %XSL$INETD_DS( FPTN=INETD_DS, STCLASS="BASED( INETD$)");
      231     2703            %XSL$INETD( FPTN=INETD, STCLASS="BASED( INETD$)");
      232     2783            %XSL$SOCKINFO( FPTN=NEWSOCK, STCLASS="BASED( NEWSOCK$)");
      233     2927            %XSL$SOCKHD( STCLASS="BASED( XSL_SOCK$$)");
      234     2960        %INCLUDE XSL_SOCKMSGS_E;
      235     3006        %INCLUDE XSL_SOCKMSGS_M;
      236     4139            %XSL_REFMSGS;
      237     4142            %XSL$GIVEUPRQS( FPTN=XSL_GIVEUPRQS, STCLASS=SYMREF);
      238     4167            %XSL$GIVEUPRQS( STCLASS="BASED( XSL_KEYBUF$)");
      239     4192            %XSL$GIVEUPRSP( STCLASS="BASED( XSL_KEYBUF$)");
      240     4218            %XSL$DETACHRQS( FPTN=XSL_DETACHRQS, STCLASS=SYMREF);
      241     4243            %XSL$DETACHRQS( STCLASS="BASED( XSL_KEYBUF$)");
      242     4268
      243     4269    1       DCL XSL$QCLOSE ENTRY(2) ALTRET;
      244     4270    1       DCL XSL$CL_OPEN ENTRY(3) ALTRET;
      245     4271    1       DCL XSL$CL_READ ENTRY(3) ALTRET;
      246     4272    1       DCL XSL$CL_WRITE ENTRY(4) ALTRET;
      247     4273    1       DCL XSL$GETSOCK ENTRY(2) ALTRET;
      248     4274
      249     4275    1       DCL XSL_ERRNO SBIN SYMREF;
      250     4276    1       DCL XSL_SOCK$ REDEF XSL_ERRNO PTR;
      251     4277    1       DCL XSL_KEYBUF$ PTR SYMREF READONLY;
      252     4278    1       DCL XSL_SN CHAR(6) SYMREF;
      253     4279    1       DCL XSL_SOCK$$ PTR SYMREF;
      254     4280
      255     4281    1       DCL NAMELEN SBIN;
      256     4282    1       DCL NEWSOCK$ PTR;
      257     4283    1       DCL QUICK BIT(1) UNAL;
      258     4284    1       DCL SOCK# SBIN;
      259     4285    1       DCL INETD$ PTR;
      260     4286    1       DCL 1 INETDPTR REDEF INETD$,
      261     4287    1          2 OFFSET SBIN HALF UNAL,
      262     4288    1          2 SEGID UBIN HALF UNAL;
      263     4289            %FPT_OPEN( FPTN=OPEN_DS, STCLASS=AUTO);
      264     4398    1       DCL SAVSER CHAR(6);
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:30   
      265     4399
      266     4400    1       QUICK = '0'B;
      267     4401    1       GOTO COMMON;
      268     4402
      269     4403    1   XSL$QACCEPT_SRVR: ENTRY( SOCK#, NAME, NAMELEN) ALTRET;
      270     4404
      271     4405    1       QUICK = '1'B;
      272     4406    1   COMMON:
      273     4407    1       SOCK# = -1;
      274     4408    1       INETDPTR = '0'B; /* First find the INETD context for this user */
      275     4409    1       OPEN_DS = COPEN_DS;
      276     4410    1       ADDR( OPEN_DS.V_) -> VLP_VECTOR.PTR$ = ADDR( OPEN_DS.V);
      277     4411    2       CALL M$OPEN( OPEN_DS) WHENALTRETURN DO; /* Get the data segment open */
      278     4412    2           OPEN_DS.V.ACS# = OPEN_DS.V.ACS#-1; /* Try another DS */
      279     4413    2           IF OPEN_DS.V.ACS# >= %DS2# THEN CALL M$RETRY;
      280     4414    2           ELSE GOTO MONERR;
      281     4415    2           END;
      282     4416    1       INETDPTR.SEGID = 6*512+OPEN_DS.V.ACS#;
      283     4417    1       CALL XSL$GETSOCK( SOCK#, NEWSOCK$) ALTRET( BAILOUT);
      284     4418    2       DO WHILE '1'B;
      285     4419    2           IF INETD_DS.SYSID = B$JIT.SYSID OR INETD_DS.OFFSET = 0 THEN EXIT;
      286     4420    2           INETD$ = PINCRW( INETD$, SIZEW( INETD_DS));
      287     4421    2           END;
      288     4422    2       IF INETD_DS.OFFSET = 0 THEN DO;
      289     4423    2           INETDPTR = '0'B;
      290     4424    2   MONERR: ;
      291     4425    2           XSL_ERRNO = %E$FAILURE;
      292     4426    2   BAILOUT: ;
      293     4427    3           IF INETDPTR THEN DO;
      294     4428    3               IF XSL_ERRNO = %E$FAILURE THEN
      295     4429    3                   INETD.ERRNO = BITBIN( B$TCB.ALT$->B$ALT.ERR);
      296     4430    3               ELSE INETD.ERRNO = XSL_ERRNO;
      297     4431    3               INETD.FPT_RUE.STATE = 2;
      298     4432    3               CALL M$CLOSE( CLOSE_DS);
      299     4433    3               END;
      300     4434    2           IF SOCK# >= 0 THEN CALL XSL$QCLOSE (SOCK#, SOCK#);
      301     4435    2           SOCK# = %E$FAILURE;
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:31   
      302     4436    2           ALTRETURN;
      303     4437    2           END;
      304     4438    1       INETDPTR.OFFSET = INETD_DS.OFFSET;
      305     4439    1       NEWSOCK.TYPE = %XSL_SOCK_STREAM;
      306     4440    1       NEWSOCK.FLAGS.BLOCKING = '1'B;
      307     4441    1       NEWSOCK.SERNUM = INETD.SERNUM;  /* inherit network number */
      308     4442    1       SAVSER = XSL_SN;
      309     4443    1       XSL_SN = INETD.SERNUM; /* get open to the right fep */
      310     4444
      311     4445    2       CALL XSL$CL_OPEN( NEWSOCK) WHENALTRETURN DO;
      312     4446    2           XSL_SN = SAVSER;
      313     4447    2           GOTO MONERR;
      314     4448    2           END;
      315     4449    1       XSL_SN = SAVSER;
      316     4450    1       XSL$GIVEUPRQS = XSL_GIVEUPRQS;
      317     4451    1       CALL XSL$CL_WRITE( NEWSOCK, LENGTHC( XSL$GIVEUPRQS));
      318     4452    1       NEWSOCK.FLAGS.MUSTREAD = '1'B;  /* force WAIT=YES read */
      319     4453    1       CALL XSL$CL_READ( NEWSOCK);
      320     4454    1       INETD.LDCTX = XSL$GIVEUPRSP.XPSLDCTX;
      321     4455    1       XSL$DETACHRQS = XSL_DETACHRQS;
      322     4456    1       CALL XSL$CL_WRITE( NEWSOCK, LENGTHC( XSL$DETACHRQS));
      323     4457    1       INETD.FPT_RUE.STATE = 1;
      324     4458    2       DO UNTIL INETD.FPT_RUE.STATE ~= 1;
      325     4459    2           CALL M$WAIT( WAIT_A_BIT);
      326     4460    2           IF INETD.FPT_RUE.SYSID ~= B$JIT.SYSID THEN CALL M$XXX;
      327     4461    2           END;
      328     4462    2       IF INETD.ERRNO ~= 0 THEN DO;
      329     4463    2           XSL_ERRNO = INETD.ERRNO;
      330     4464    2           GOTO BAILOUT;
      331     4465    2           END;
      332     4466    1       NEWSOCK.PEERNAME = INETD.NAME;
      333     4467    2       IF ADDR( NAME) ~= ADDR( NIL) AND ADDR( NAMELEN) ~= ADDR( NIL) THEN DO;
      334     4468    2           IF NAMELEN <= 0 THEN EXIT;
      335     4469    2           NAMELEN = INETD.NAMELEN;
      336     4470    2           NAME = INETD.NAME;
      337     4471    2           END;
      338     4472    1       NEWSOCK.FLAGS.SOCKET = '1'B;
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:32   
      339     4473    1       NEWSOCK.FLAGS.BIND = '1'B;
      340     4474    1       NEWSOCK.FLAGS.CONNECT = '1'B;
      341     4475    1       NEWSOCK.FLAGS.SELWRITE = '1'B;
      342     4476    1       IF NOT QUICK THEN
      343     4477    1           SOCK# = NEWSOCK.DCB#;
      344     4478    1       CALL M$CLOSE( CLOSE_DS);
      345     4479    1       RETURN;
      346     4480
      347     4481    1       END XSL$ACCEPT_SRVR;

PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:33   
--  Include file information  --

   XSL_SOCKMSGS_M.:TCA2TOU  is referenced.
   XSL_SOCKMSGS_E.:TCA2TOU  is referenced.
   XSL_INTERNAL_M.:TCA2TOU  is referenced.
   XSL_PERR_C.:TCA2TOU  is referenced.
   XSL_SOCKET_M.:TCA2TOU  is referenced.
   XSL_SOCKET_E.:TCA2TOU  is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure XSL$ACCEPT_SRVR.

   Procedure XSL$ACCEPT_SRVR requires 217 words for executable code.
   Procedure XSL$ACCEPT_SRVR requires 72 words of local(AUTO) storage.

    No errors detected in file XSL$INETD.:TCA2TSI    .

PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:34   

 Object Unit name= XSL$ACCEPT_SRVR                            File name= XSL$INETD.:TCA2TOU
 UTS= NOV 16 '97 14:30:03.80 SUN                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none    98    142  F$INETD
    2  RoData even  UTS     94    136  XSL$ACCEPT_SRVR
    3   Proc  even  none   217    331  XSL$ACCEPT_SRVR
    4  RoData even  none     1      1  XSL$ACCEPT_SRVR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        3  XSL$ACCEPT_SRVR
     3      4          yes     yes      Std        3  XSL$QACCEPT_SRVR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XSL$MSGSDEFS
 yes     yes           Std       3 XSL$CL_OPEN
 yes     yes           Std       2 XSL$GETSOCK
 yes     yes           Std       4 XSL$CL_WRITE
 yes     yes           Std       2 XSL$QCLOSE
 yes     yes           Std       3 XSL$CL_READ
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:35   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  F$INETD                          r    B$TCB$
r    B$JIT$                                XSL_GIVEUPRQS                         XSL_DETACHRQS
     XSL_ERRNO                        r    XSL_KEYBUF$                           XSL_SN
     XSL_SOCK$$                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:36   


       80        1        /*T***********************************************************/
       81        2        /*T*                                                         */
       82        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       83        4        /*T*                                                         */
       84        5        /*T***********************************************************/
       85        6        /*F* NAME: XSL$ACCEPT_SRVR
       86        7             PARAMETERS:
       87        8              SOCK# - returns socket of accepted connection or negative if failure.
       88        9              NAME - returns socketname of the remote socket.
       89       10              NAMELEN - returns the length of NAME.
       90       11             DESCRIPTION: This routine should be called by an INETD server instead of
       91       12              socket, listen, and accept.  It performs the half of the accept interface
       92       13              dealing with the new socket.  XSL$ACCEPT_INETD does the other half.
       93       14        */
       94       15        /*F* NAME: accept_srvr() and XSL$ACCEPT_SRVR  --  Accept from INETD
       95       16        ..::IT "Purpose:"
       96       17        .INL +4
       97       18        Accepts from the INETD Ghost an incoming connection request from another
       98       19        socket elsewhere in the network.
       99       20        ..::IT "C Usage:"
      100       21        .INL 4
      101       22        .FIF
      102       23        status = accept_srvr( name, &namelen );
      103       24        ..::IT "PL6 Usage:"
      104       25        .INL 4
      105       26        .FIF
      106       27        CALL XSL$ACCEPT_SRVR( status, name, namelen );
      107       28        ..::IT "Parameters:"
      108       29        .INL 4
      109       30        .FIF
      110       31        name        sockaddr structure
      111       32
      112       33        namelen     integer size of name in characters
      113       34        ..::IT "Results:"
      114       35        .INL 4
      115       36        .FIF
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:37   
      116       37        status      integer new socket descriptor or error code
      117       38
      118       39        name        sockaddr structure
      119       40
      120       41        namelen     integer number of significant characters in name
      121       42        ..::IT "Description:"
      122       43        The accept_srvr() function performs the "second half" of incoming connection
      123       44        setup when the INETD Ghost has performed the "first half" for the application.
      124       45        ..::IX "INETD"
      125       46        .SPB
      126       47        On systems such as UNIX where INETD can pass its environment to subprocesses,
      127       48        this function is not needed.  The subprocess inherits socket descriptors from
      128       49        INETD.
      129       50        .SPB
      130       51        On CP-6 systems, however, subprocesses are totally independent of INETD.  INETD
      131       52        takes care of socket(), bind(), listen(), and the initial work of accept().
      132       53        When an incoming connection request arrives, INETD starts up the application
      133       54        as a Ghost job, and the application issues accept_srvr() to complete the
      134       55        connection setup.  To avoid the overhead of
      135       56        starting a new ghost for every request, the application can use close() to end
      136       57        each request, and then accept_srvr() to wait for the next request.  The
      137       58        INETD STATUS command will display such waiting servers in state 1.  If a
      138       59        request arrives when the server is between accept_srvr() calls, a new ghost
      139       60        will be started.  If INETD is restarted while a server is in accept_srvr(),
      140       61        the server will abort (M$XXX in XSL$ACCEPT_SRVR).
      141       62        .SPB
      142       63        The name parameter specifies an application-defined buffer to receive the
      143       64        address of the socket that initiated the connection.
      144       65        .SPB
      145       66        The namelen parameter specifies how large the name buffer is, expressed as
      146       67        the number of characters it can hold.
      147       68        .SPB
      148       69        If the accept_srvr() function is successful, the status result contains the
      149       70        descriptor of the new socket allocated for the new connection.  The
      150       71        descriptor is a small non-negative integer, equivalent to the DCBNUM of the
      151       72        DCB allocated for the new socket.  The name and namelen parameters are
      152       73        modified to identify the initiator of the connection request.
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:38   
      153       74        .SPB
      154       75        If the accept_srvr() function is unsuccessful, the status result contains
      155       76        EFAILURE or E$FAILURE.  The XSL$ACCEPT_SRVR procedure additionally
      156       77        ALTRETURNs if it is unsuccessful; it is otherwise identical
      157       78        to the accept_srvr() function.
      158       79        .SPB
      159       80        If no connection requests are pending when accept_srvr() is invoked, the action
      160       81        taken depends on the socket mode.  The mode of a socket is defined to be
      161       82        either "blocking" or "nonblocking".  If the socket is blocking (which is
      162       83        the default mode) the application is blocked (i.e., suspended) until an
      163       84        incoming connection request is received from the network.  If the
      164       85        socket is nonblocking, the condition is treated as an EWOULDBLOCK error.
      165       86        ..::IX "blocking"
      166       87        ..::IX "non-blocking"
      167       88        .SPB
      168       89        The mode of a socket can be changed with either fcntl() or ioctl().
      169       90        .SPB
      170       91        The accept_srvr() function applies only to "stream" sockets.
      171       92        ..::IT "Errors:"
      172       93        Following are the possible error conditions reported when the accept_srvr()
      173       94        function is unsuccessful.  Equates for the possible values can be found in
      174       95        <xsl_errno.h> or XSL_PERR_C for C and PL6 source respectively.
      175       96
      176       97        .FIF
      177       98
      178       99        C #define               PL6 %EQU
      179      100        ----------------------- -----------------------
      180      101        EBADF                   E$BADF
      181      102        .FIN
      182      103        The descriptor s is inappropriate to identify a socket.
      183      104        .FIF
      184      105
      185      106        EINVAL                  E$INVAL
      186      107        .FIN
      187      108        The listen() function has not been invoked for this socket.
      188      109        .FIF
      189      110
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:39   
      190      111        EMFILE                  E$MFILE
      191      112        .FIN
      192      113        M$GETDCB failed.  Unable to allocate DCB for new socket.
      193      114        .FIF
      194      115
      195      116        ENOTSOCK                E$NOTSOCK
      196      117        .FIN
      197      118        The descriptor s is no longer valid to identify a socket.
      198      119        .FIF
      199      120
      200      121        EOPNOTSUPP              E$OPNOTSUPP
      201      122        .FIN
      202      123        This is not a "stream" socket.
      203      124        .FIF
      204      125
      205      126        EWOULDBLOCK             E$WOULDBLOCK
      206      127        .FIN
      207      128        No connections are pending for this nonblocking socket.
      208      129        .FIF
      209      130        */
      210      131        XSL$ACCEPT_SRVR: PROC( SOCK#, NAME, NAMELEN) ALTRET;

    131  3 000000   000000 700200 xent  XSL$ACCEPT_* TSX0  ! X66_AUTO_3
         3 000001   000110 000003                    ZERO    72,3

      211      132        %INCLUDE CP_6;
      212      213        %INCLUDE CP_6_SUBS;
      213      753            %M$DCB( DCBN=F$INETD, ASN=FILE, ACS=DS8, FUN=UPDATE, SHARE=ALL,
      214      754              NAME='inetd:', ACCT=':SYS');
      215      828            %FPT_CLOSE( FPTN=CLOSE_DS, STCLASS=CONSTANT, DCB=F$INETD);
      216      870            %FPT_OPEN( FPTN=COPEN_DS, STCLASS=CONSTANT, DCB=F$INETD,
      217      871              FUN=CREATE, EXIST=OLDFILE, ACS=DS8);
      218      980            %VLP_VECTOR( STCLASS=BASED);
      219      995            %FPT_WAIT( FPTN=WAIT_A_BIT, UNITS=20, STCLASS=CONSTANT);
      220     1009            %B$ALT;
      221     1017            %B$TCB( STCLASS="BASED(B$TCB$)");
      222     1020    1       DCL B$TCB$ PTR SYMREF READONLY;
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:40   
      223     1021        %INCLUDE B$JIT;
      224     1311    1       DCL B$JIT$ PTR SYMREF READONLY;
      225     1312        %INCLUDE XSL_SOCKET_E;
      226     1570        %INCLUDE XSL_SOCKET_M;
      227     2331            %XSL$SOCKADDR( FPTN=NAME, STCLASS=);
      228     2371        %INCLUDE XSL_PERR_C;
      229     2426        %INCLUDE XSL_INTERNAL_M;
      230     2677            %XSL$INETD_DS( FPTN=INETD_DS, STCLASS="BASED( INETD$)");
      231     2703            %XSL$INETD( FPTN=INETD, STCLASS="BASED( INETD$)");
      232     2783            %XSL$SOCKINFO( FPTN=NEWSOCK, STCLASS="BASED( NEWSOCK$)");
      233     2927            %XSL$SOCKHD( STCLASS="BASED( XSL_SOCK$$)");
      234     2960        %INCLUDE XSL_SOCKMSGS_E;
      235     3006        %INCLUDE XSL_SOCKMSGS_M;
      236     4139            %XSL_REFMSGS;
      237     4142            %XSL$GIVEUPRQS( FPTN=XSL_GIVEUPRQS, STCLASS=SYMREF);
      238     4167            %XSL$GIVEUPRQS( STCLASS="BASED( XSL_KEYBUF$)");
      239     4192            %XSL$GIVEUPRSP( STCLASS="BASED( XSL_KEYBUF$)");
      240     4218            %XSL$DETACHRQS( FPTN=XSL_DETACHRQS, STCLASS=SYMREF);
      241     4243            %XSL$DETACHRQS( STCLASS="BASED( XSL_KEYBUF$)");
      242     4268
      243     4269    1       DCL XSL$QCLOSE ENTRY(2) ALTRET;
      244     4270    1       DCL XSL$CL_OPEN ENTRY(3) ALTRET;
      245     4271    1       DCL XSL$CL_READ ENTRY(3) ALTRET;
      246     4272    1       DCL XSL$CL_WRITE ENTRY(4) ALTRET;
      247     4273    1       DCL XSL$GETSOCK ENTRY(2) ALTRET;
      248     4274
      249     4275    1       DCL XSL_ERRNO SBIN SYMREF;
      250     4276    1       DCL XSL_SOCK$ REDEF XSL_ERRNO PTR;
      251     4277    1       DCL XSL_KEYBUF$ PTR SYMREF READONLY;
      252     4278    1       DCL XSL_SN CHAR(6) SYMREF;
      253     4279    1       DCL XSL_SOCK$$ PTR SYMREF;
      254     4280
      255     4281    1       DCL NAMELEN SBIN;
      256     4282    1       DCL NEWSOCK$ PTR;
      257     4283    1       DCL QUICK BIT(1) UNAL;
      258     4284    1       DCL SOCK# SBIN;
      259     4285    1       DCL INETD$ PTR;
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:41   
      260     4286    1       DCL 1 INETDPTR REDEF INETD$,
      261     4287    1          2 OFFSET SBIN HALF UNAL,
      262     4288    1          2 SEGID UBIN HALF UNAL;
      263     4289            %FPT_OPEN( FPTN=OPEN_DS, STCLASS=AUTO);
      264     4398    1       DCL SAVSER CHAR(6);
      265     4399
      266     4400    1       QUICK = '0'B;

   4400  3 000002   200007 450100                    STZ     QUICK,,AUTO

      267     4401    1       GOTO COMMON;

   4401  3 000003   000010 710000 3                  TRA     COMMON

      268     4402
      269     4403    1   XSL$QACCEPT_SRVR: ENTRY( SOCK#, NAME, NAMELEN) ALTRET;

   4403  3 000004   000000 700200 xent  XSL$QACCEPT* TSX0  ! X66_AUTO_3
         3 000005   000110 000003                    ZERO    72,3

      270     4404
      271     4405    1       QUICK = '1'B;

   4405  3 000006   400000 236003                    LDQ     -131072,DU
         3 000007   200007 756100                    STQ     QUICK,,AUTO

      272     4406    1   COMMON:
      273     4407    1       SOCK# = -1;

   4407  3 000010   000001 335007       COMMON       LCA     1,DL
         3 000011   200003 470500                    LDP0    @SOCK#,,AUTO
         3 000012   000000 755100                    STA     0,,PR0

      274     4408    1       INETDPTR = '0'B; /* First find the INETD context for this user */

   4408  3 000013   200010 450100                    STZ     INETD$,,AUTO

PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:42   
      275     4409    1       OPEN_DS = COPEN_DS;

   4409  3 000014   000100 100400                    MLR     fill='000'O
         3 000015   000036 000350 2                  ADSC9   COPEN_DS                 cn=0,n=232
         3 000016   200012 000350                    ADSC9   OPEN_DS,,AUTO            cn=0,n=232

      276     4410    1       ADDR( OPEN_DS.V_) -> VLP_VECTOR.PTR$ = ADDR( OPEN_DS.V);

   4410  3 000017   200056 631500                    EPPR1   OPEN_DS+36,,AUTO
         3 000020   200013 451500                    STP1    OPEN_DS+1,,AUTO

      277     4411    2       CALL M$OPEN( OPEN_DS) WHENALTRETURN DO; /* Get the data segment open */

   4411  3 000021   200012 630500                    EPPR0   OPEN_DS,,AUTO
         3 000022   450000 713400                    CLIMB   alt,open
         3 000023   410400 401760                    pmme    nvectors=18
         3 000024   000026 702000 3                  TSX2    s:4412
         3 000025   000040 710000 3                  TRA     s:4416

      278     4412    2           OPEN_DS.V.ACS# = OPEN_DS.V.ACS#-1; /* Try another DS */

   4412  3 000026   200060 236100                    LDQ     OPEN_DS+38,,AUTO
         3 000027   000777 036007                    ADLQ    511,DL
         3 000030   200060 552104                    STBQ    OPEN_DS+38,'04'O,AUTO

      279     4413    2           IF OPEN_DS.V.ACS# >= %DS2# THEN CALL M$RETRY;

   4413  3 000031   200060 236100                    LDQ     OPEN_DS+38,,AUTO
         3 000032   000777 376007                    ANQ     511,DL
         3 000033   000005 116007                    CMPQ    5,DL
         3 000034   000072 602000 3                  TNC     MONERR

   4413  3 000035   010010 713400                    CLIMB   4104
         3 000036   000000 401760                    pmme    nvectors=0
         3 000037   000040 710000 3                  TRA     s:4416

      280     4414    2           ELSE GOTO MONERR;
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:43   
      281     4415    2           END;
      282     4416    1       INETDPTR.SEGID = 6*512+OPEN_DS.V.ACS#;

   4416  3 000040   200060 720100                    LXL0    OPEN_DS+38,,AUTO
         3 000041   000777 360003                    ANX0    511,DU
         3 000042   006000 621010                    EAX1    3072,X0
         3 000043   200010 441100                    SXL1    INETD$,,AUTO

      283     4417    1       CALL XSL$GETSOCK( SOCK#, NEWSOCK$) ALTRET( BAILOUT);

   4417  3 000044   200006 630500                    EPPR0   NEWSOCK$,,AUTO
         3 000045   200107 450500                    STP0    SAVSER+3,,AUTO
         3 000046   200003 236100                    LDQ     @SOCK#,,AUTO
         3 000047   200106 756100                    STQ     SAVSER+2,,AUTO
         3 000050   200106 630500                    EPPR0   SAVSER+2,,AUTO
         3 000051   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000052   000000 701000 xent               TSX1    XSL$GETSOCK
         3 000053   000074 702000 3                  TSX2    BAILOUT

      284     4418    2       DO WHILE '1'B;

      285     4419    2           IF INETD_DS.SYSID = B$JIT.SYSID OR INETD_DS.OFFSET = 0 THEN EXIT;

   4419  3 000054   000000 470400 xsym               LDP0    B$JIT$
         3 000055   000000 720100                    LXL0    0,,PR0
         3 000056   200010 471500                    LDP1    INETD$,,AUTO
         3 000057   100000 100100                    CMPX0   0,,PR1
         3 000060   000067 600000 3                  TZE     s:4422
         3 000061   100000 721100                    LXL1    0,,PR1
         3 000062   000067 600000 3                  TZE     s:4422

      286     4420    2           INETD$ = PINCRW( INETD$, SIZEW( INETD_DS));

   4420  3 000063   200010 236100                    LDQ     INETD$,,AUTO
         3 000064   000001 036003                    ADLQ    1,DU
         3 000065   200010 756100                    STQ     INETD$,,AUTO

PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:44   
      287     4421    2           END;

   4421  3 000066   000054 710000 3                  TRA     s:4419

      288     4422    2       IF INETD_DS.OFFSET = 0 THEN DO;

   4422  3 000067   100000 721100                    LXL1    0,,PR1
         3 000070   000135 601000 3                  TNZ     s:4438

      289     4423    2           INETDPTR = '0'B;

   4423  3 000071   200010 450100                    STZ     INETD$,,AUTO

   4423  3 000072                       MONERR       null
      290     4424    2   MONERR: ;
      291     4425    2           XSL_ERRNO = %E$FAILURE;

   4425  3 000072   000001 335007                    LCA     1,DL
         3 000073   000000 755000 xsym               STA     XSL_ERRNO

   4425  3 000074                       BAILOUT      null
      292     4426    2   BAILOUT: ;
      293     4427    3           IF INETDPTR THEN DO;

   4427  3 000074   200010 235100                    LDA     INETD$,,AUTO
         3 000075   000117 600000 3                  TZE     s:4434

      294     4428    3               IF XSL_ERRNO = %E$FAILURE THEN

   4428  3 000076   000000 236000 xsym               LDQ     XSL_ERRNO
         3 000077   000027 116000 xsym               CMPQ    B_VECTNIL+23
         3 000100   000107 601000 3                  TNZ     s:4430

      295     4429    3                   INETD.ERRNO = BITBIN( B$TCB.ALT$->B$ALT.ERR);

   4429  3 000101   000000 470400 xsym               LDP0    B$TCB$
         3 000102   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:45   
         3 000103   100102 235100                    LDA     66,,PR1
         3 000104   200010 473500                    LDP3    INETD$,,AUTO
         3 000105   300006 755100                    STA     6,,PR3
         3 000106   000111 710000 3                  TRA     s:4431

      296     4430    3               ELSE INETD.ERRNO = XSL_ERRNO;

   4430  3 000107   200010 470500                    LDP0    INETD$,,AUTO
         3 000110   000006 756100                    STQ     6,,PR0

      297     4431    3               INETD.FPT_RUE.STATE = 2;

   4431  3 000111   200010 470500                    LDP0    INETD$,,AUTO
         3 000112   000002 236007                    LDQ     2,DL
         3 000113   000002 552104                    STBQ    2,'04'O,PR0

      298     4432    3               CALL M$CLOSE( CLOSE_DS);

   4432  3 000114   000000 630400 2                  EPPR0   CLOSE_DS
         3 000115   050001 713400                    CLIMB   close
         3 000116   406000 401760                    pmme    nvectors=13

      299     4433    3               END;

      300     4434    2           IF SOCK# >= 0 THEN CALL XSL$QCLOSE (SOCK#, SOCK#);

   4434  3 000117   200003 470500                    LDP0    @SOCK#,,AUTO
         3 000120   000000 235100                    LDA     0,,PR0
         3 000121   000131 604000 3                  TMI     s:4435

   4434  3 000122   200003 236100                    LDQ     @SOCK#,,AUTO
         3 000123   200003 235100                    LDA     @SOCK#,,AUTO
         3 000124   200106 757100                    STAQ    SAVSER+2,,AUTO
         3 000125   200106 630500                    EPPR0   SAVSER+2,,AUTO
         3 000126   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000127   000000 701000 xent               TSX1    XSL$QCLOSE
         3 000130   000000 011000                    NOP     0
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:46   

      301     4435    2           SOCK# = %E$FAILURE;

   4435  3 000131   000001 335007                    LCA     1,DL
         3 000132   200003 470500                    LDP0    @SOCK#,,AUTO
         3 000133   000000 755100                    STA     0,,PR0

      302     4436    2           ALTRETURN;

   4436  3 000134   000000 702200 xent               TSX2  ! X66_AALT

      303     4437    2           END;
      304     4438    1       INETDPTR.OFFSET = INETD_DS.OFFSET;

   4438  3 000135   200010 741100                    STX1    INETD$,,AUTO

      305     4439    1       NEWSOCK.TYPE = %XSL_SOCK_STREAM;

   4439  3 000136   200006 471500                    LDP1    NEWSOCK$,,AUTO
         3 000137   000001 236003                    LDQ     1,DU
         3 000140   100000 552120                    STBQ    0,'20'O,PR1

      306     4440    1       NEWSOCK.FLAGS.BLOCKING = '1'B;

   4440  3 000141   200006 471500                    LDP1    NEWSOCK$,,AUTO
         3 000142   001000 236003                    LDQ     512,DU
         3 000143   100001 256100                    ORSQ    1,,PR1

      307     4441    1       NEWSOCK.SERNUM = INETD.SERNUM;  /* inherit network number */

   4441  3 000144   200010 471500                    LDP1    INETD$,,AUTO
         3 000145   200006 473500                    LDP3    NEWSOCK$,,AUTO
         3 000146   040100 100500                    MLR     fill='040'O
         3 000147   100004 400006                    ADSC9   4,,PR1                   cn=2,n=6
         3 000150   300002 000006                    ADSC9   2,,PR3                   cn=0,n=6

      308     4442    1       SAVSER = XSL_SN;
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:47   

   4442  3 000151   040100 100400                    MLR     fill='040'O
         3 000152   000000 000006 xsym               ADSC9   XSL_SN                   cn=0,n=6
         3 000153   200104 000006                    ADSC9   SAVSER,,AUTO             cn=0,n=6

      309     4443    1       XSL_SN = INETD.SERNUM; /* get open to the right fep */

   4443  3 000154   040000 100500                    MLR     fill='040'O
         3 000155   100004 400006                    ADSC9   4,,PR1                   cn=2,n=6
         3 000156   000000 000006 xsym               ADSC9   XSL_SN                   cn=0,n=6

      310     4444
      311     4445    2       CALL XSL$CL_OPEN( NEWSOCK) WHENALTRETURN DO;

   4445  3 000157   200006 630500                    EPPR0   NEWSOCK$,,AUTO
         3 000160   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000161   000000 701000 xent               TSX1    XSL$CL_OPEN
         3 000162   000164 702000 3                  TSX2    s:4446
         3 000163   000170 710000 3                  TRA     s:4449

      312     4446    2           XSL_SN = SAVSER;

   4446  3 000164   040000 100500                    MLR     fill='040'O
         3 000165   200104 000006                    ADSC9   SAVSER,,AUTO             cn=0,n=6
         3 000166   000000 000006 xsym               ADSC9   XSL_SN                   cn=0,n=6

      313     4447    2           GOTO MONERR;

   4447  3 000167   000072 710000 3                  TRA     MONERR

      314     4448    2           END;
      315     4449    1       XSL_SN = SAVSER;

   4449  3 000170   040000 100500                    MLR     fill='040'O
         3 000171   200104 000006                    ADSC9   SAVSER,,AUTO             cn=0,n=6
         3 000172   000000 000006 xsym               ADSC9   XSL_SN                   cn=0,n=6

PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:48   
      316     4450    1       XSL$GIVEUPRQS = XSL_GIVEUPRQS;

   4450  3 000173   000000 220000 xsym               LDX0    XSL_GIVEUPRQS
         3 000174   000000 470400 xsym               LDP0    XSL_KEYBUF$
         3 000175   000000 740100                    STX0    0,,PR0

      317     4451    1       CALL XSL$CL_WRITE( NEWSOCK, LENGTHC( XSL$GIVEUPRQS));

   4451  3 000176   000000 236000 4                  LDQ     0
         3 000177   200006 235100                    LDA     NEWSOCK$,,AUTO
         3 000200   200106 757100                    STAQ    SAVSER+2,,AUTO
         3 000201   200106 630500                    EPPR0   SAVSER+2,,AUTO
         3 000202   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000203   000000 701000 xent               TSX1    XSL$CL_WRITE
         3 000204   000000 011000                    NOP     0

      318     4452    1       NEWSOCK.FLAGS.MUSTREAD = '1'B;  /* force WAIT=YES read */

   4452  3 000205   200006 470500                    LDP0    NEWSOCK$,,AUTO
         3 000206   000001 236003                    LDQ     1,DU
         3 000207   000001 256100                    ORSQ    1,,PR0

      319     4453    1       CALL XSL$CL_READ( NEWSOCK);

   4453  3 000210   200006 630500                    EPPR0   NEWSOCK$,,AUTO
         3 000211   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000212   000000 701000 xent               TSX1    XSL$CL_READ
         3 000213   000000 011000                    NOP     0

      320     4454    1       INETD.LDCTX = XSL$GIVEUPRSP.XPSLDCTX;

   4454  3 000214   000000 470400 xsym               LDP0    XSL_KEYBUF$
         3 000215   000000 720100                    LXL0    0,,PR0
         3 000216   200010 471500                    LDP1    INETD$,,AUTO
         3 000217   100004 740100                    STX0    4,,PR1

      321     4455    1       XSL$DETACHRQS = XSL_DETACHRQS;
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:49   

   4455  3 000220   000000 221000 xsym               LDX1    XSL_DETACHRQS
         3 000221   000000 741100                    STX1    0,,PR0

      322     4456    1       CALL XSL$CL_WRITE( NEWSOCK, LENGTHC( XSL$DETACHRQS));

   4456  3 000222   000000 236000 4                  LDQ     0
         3 000223   200006 235100                    LDA     NEWSOCK$,,AUTO
         3 000224   200106 757100                    STAQ    SAVSER+2,,AUTO
         3 000225   200106 630500                    EPPR0   SAVSER+2,,AUTO
         3 000226   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000227   000000 701000 xent               TSX1    XSL$CL_WRITE
         3 000230   000000 011000                    NOP     0

      323     4457    1       INETD.FPT_RUE.STATE = 1;

   4457  3 000231   200010 470500                    LDP0    INETD$,,AUTO
         3 000232   000001 236007                    LDQ     1,DL
         3 000233   000002 552104                    STBQ    2,'04'O,PR0

      324     4458    2       DO UNTIL INETD.FPT_RUE.STATE ~= 1;

      325     4459    2           CALL M$WAIT( WAIT_A_BIT);

   4459  3 000234   000130 630400 2                  EPPR0   WAIT_A_BIT
         3 000235   020006 713400                    CLIMB   8198
         3 000236   400400 401760                    pmme    nvectors=2

      326     4460    2           IF INETD.FPT_RUE.SYSID ~= B$JIT.SYSID THEN CALL M$XXX;

   4460  3 000237   000000 470400 xsym               LDP0    B$JIT$
         3 000240   000000 720100                    LXL0    0,,PR0
         3 000241   200010 471500                    LDP1    INETD$,,AUTO
         3 000242   100002 100100                    CMPX0   2,,PR1
         3 000243   000246 600000 3                  TZE     s:4461

   4460  3 000244   000003 713400                    CLIMB   3
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:50   
         3 000245   000000 401760                    pmme    nvectors=0

      327     4461    2           END;

   4461  3 000246   200010 470500                    LDP0    INETD$,,AUTO
         3 000247   000002 236100                    LDQ     2,,PR0
         3 000250   000777 376007                    ANQ     511,DL
         3 000251   000001 116007                    CMPQ    1,DL
         3 000252   000234 600000 3                  TZE     s:4459

      328     4462    2       IF INETD.ERRNO ~= 0 THEN DO;

   4462  3 000253   000006 235100                    LDA     6,,PR0
         3 000254   000257 600000 3                  TZE     s:4466

      329     4463    2           XSL_ERRNO = INETD.ERRNO;

   4463  3 000255   000000 755000 xsym               STA     XSL_ERRNO

      330     4464    2           GOTO BAILOUT;

   4464  3 000256   000074 710000 3                  TRA     BAILOUT

      331     4465    2           END;
      332     4466    1       NEWSOCK.PEERNAME = INETD.NAME;

   4466  3 000257   200006 471500                    LDP1    NEWSOCK$,,AUTO
         3 000260   000100 100500                    MLR     fill='000'O
         3 000261   000010 000024                    ADSC9   8,,PR0                   cn=0,n=20
         3 000262   100011 000024                    ADSC9   9,,PR1                   cn=0,n=20

      333     4467    2       IF ADDR( NAME) ~= ADDR( NIL) AND ADDR( NAMELEN) ~= ADDR( NIL) THEN DO;

   4467  3 000263   200004 236100                    LDQ     @NAME,,AUTO
         3 000264   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000265   000302 600000 3                  TZE     s:4472
         3 000266   200005 236100                    LDQ     @NAMELEN,,AUTO
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:51   
         3 000267   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000270   000302 600000 3                  TZE     s:4472

      334     4468    2           IF NAMELEN <= 0 THEN EXIT;

   4468  3 000271   200005 473500                    LDP3    @NAMELEN,,AUTO
         3 000272   300000 235100                    LDA     0,,PR3
         3 000273   000302 604400 3                  TMOZ    s:4472

      335     4469    2           NAMELEN = INETD.NAMELEN;

   4469  3 000274   000007 235100                    LDA     7,,PR0
         3 000275   300000 755100                    STA     0,,PR3

      336     4470    2           NAME = INETD.NAME;

   4470  3 000276   200004 471500                    LDP1    @NAME,,AUTO
         3 000277   000100 100500                    MLR     fill='000'O
         3 000300   000010 000024                    ADSC9   8,,PR0                   cn=0,n=20
         3 000301   100000 000024                    ADSC9   0,,PR1                   cn=0,n=20

      337     4471    2           END;

      338     4472    1       NEWSOCK.FLAGS.SOCKET = '1'B;

   4472  3 000302   200006 471500                    LDP1    NEWSOCK$,,AUTO
         3 000303   002000 236003                    LDQ     1024,DU
         3 000304   100001 256100                    ORSQ    1,,PR1

      339     4473    1       NEWSOCK.FLAGS.BIND = '1'B;

   4473  3 000305   200006 471500                    LDP1    NEWSOCK$,,AUTO
         3 000306   004000 236003                    LDQ     2048,DU
         3 000307   100001 256100                    ORSQ    1,,PR1

      340     4474    1       NEWSOCK.FLAGS.CONNECT = '1'B;

PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:52   
   4474  3 000310   200006 471500                    LDP1    NEWSOCK$,,AUTO
         3 000311   040000 236003                    LDQ     16384,DU
         3 000312   100001 256100                    ORSQ    1,,PR1

      341     4475    1       NEWSOCK.FLAGS.SELWRITE = '1'B;

   4475  3 000313   200006 471500                    LDP1    NEWSOCK$,,AUTO
         3 000314   000020 236003                    LDQ     16,DU
         3 000315   100001 256100                    ORSQ    1,,PR1

      342     4476    1       IF NOT QUICK THEN

   4476  3 000316   200007 234100                    SZN     QUICK,,AUTO
         3 000317   000325 604000 3                  TMI     s:4478

      343     4477    1           SOCK# = NEWSOCK.DCB#;

   4477  3 000320   200006 471500                    LDP1    NEWSOCK$,,AUTO
         3 000321   100003 236100                    LDQ     3,,PR1
         3 000322   777777 376007                    ANQ     -1,DL
         3 000323   200003 473500                    LDP3    @SOCK#,,AUTO
         3 000324   300000 756100                    STQ     0,,PR3

      344     4478    1       CALL M$CLOSE( CLOSE_DS);

   4478  3 000325   000000 630400 2                  EPPR0   CLOSE_DS
         3 000326   050001 713400                    CLIMB   close
         3 000327   406000 401760                    pmme    nvectors=13

      345     4479    1       RETURN;

   4479  3 000330   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 000000   000000 000000   000000 000000   000000 000501    ................
   1     004   000000 000000   000000 000000   000000 006014   000000 006014    ................
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:53   
   1     010   006151 156145   164144 072040   040040 040040   040040 040040    .inetd:
   1     014   040040 040040   040040 040040   040040 040040   040040 040040
   1     020   072123 131123   040040 040040   040040 040040   040040 040040    :SYS
   1     024   040040 040040   040040 040040   115105 040040   040040 040040            ME
   1     030   040040 040040   000000 203215   000001 001000   000000 000000        ............
   1     034   000000 000000   000000 000000   000000 000013   000002 776003    ................
   1     040   001000 000000   000000 000002   000000 000000   000000 000000    ................
   1     044   000000 000111   040040 040040   000000 006014   000000 006014    ...I    ........
   1     050   000000 006014   000000 000000   000000 000000   000000 006014    ................
   1     054   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     060   000000 010000   000000 000000   000000 000000   000000 000000    ................
   1     064   000000 000020   000000 000000   000000 006014   000000 000000    ................
   1     070   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     074   000000 000000   000000 006014   000000 000000   000000 000000    ................
   1     100   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     104   ****** ******   ****** ******   000000 000000   ****** ******    ................
   1     110   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     124*  000000 000000   000000 000000   000000 000000   ****** ******    ................
   1     134*  ****** ******   ****** ******   ****** ******   000000 070707    ..............8.
   1     140   ****** ******   ****** ******                                    ........

CLOSE_DS
 Sect OctLoc
   2     000   000003 777640   000032 006000   000000 177640   000000 006014    ................
   2     004   000000 177640   000000 006014   000000 177640   000000 006014    ................
   2     030*  000000 177640   000000 006014   000000 000000   000000 000040    ...............
   2     034   000220 000000   000000 000000                                    ........

COPEN_DS
 Sect OctLoc
   2     036   000025 777640   000102 006000   000000 177640   000000 006014    .....B..........
   2     042   000000 177640   000000 006014   000000 177640   000000 006014    ................
   2     102*  000000 000442   000000 003000   252525 000013   000040 252520    ............. ..
   2     106   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   2     112   000000 000000   000000 000000   000000 000000   000000 000000    ................
   2     116   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   2     122   040040 040040   000000 000000   000000 000000   000000 000000        ............
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:54   
   2     126   000000 000000   ****** ******                                    ........

WAIT_A_BIT
 Sect OctLoc
   2     130   000001 777640   000134 006000   000000 177640   000000 006014    .....\..........
   2     134   000000 000024   000000 000001                                    ........

(unnamed)
 Sect OctLoc
   4     000   000004 006000                                                    ....
      346     4480
      347     4481    1       END XSL$ACCEPT_SRVR;

PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:55   
--  Include file information  --

   XSL_SOCKMSGS_M.:TCA2TOU  is referenced.
   XSL_SOCKMSGS_E.:TCA2TOU  is referenced.
   XSL_INTERNAL_M.:TCA2TOU  is referenced.
   XSL_PERR_C.:TCA2TOU  is referenced.
   XSL_SOCKET_M.:TCA2TOU  is referenced.
   XSL_SOCKET_E.:TCA2TOU  is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure XSL$ACCEPT_SRVR.
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:56   

 **** Variables and constants ****

  ****  Section 002 RoData XSL$ACCEPT_SRVR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1080)  r     1 CLOSE_DS                  36-0-0/d STRC(2088)  r     1 COPEN_DS
   130-0-0/d STRC(216)   r     1 WAIT_A_BIT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @NAME                      5-0-0/w PTR         r     1 @NAMELEN
     3-0-0/w PTR         r     1 @SOCK#                    10-0-0/w PTR         r     1 INETD$
    10-0-0/w STRC        r     1 INETDPTR                  *0-0-0/w STRC(180)   r     1 NAME
    *0-0-0/w SBIN        r     1 NAMELEN                    6-0-0/w PTR         r     1 NEWSOCK$
    12-0-0/d STRC(2088)  r     1 OPEN_DS                    7-0-0/b BIT         r     1 QUICK
   104-0-0/c CHAR(6)     r     1 SAVSER                    *0-0-0/w SBIN        r     1 SOCK#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w STRC(18)    r     1 XSL_DETACHRQS              0-0-0/w SBIN        r     1 XSL_ERRNO
     0-0-0/w STRC(18)    r     1 XSL_GIVEUPRQS              0-0-0/w PTR         r     1 XSL_KEYBUF$
     0-0-0/c CHAR(6)     r     1 XSL_SN                     0-0-0/w PTR         r     1 XSL_SOCK$$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:57   
     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d ASTR(3528)  r     1 F$INETD
     0-0-0/d STRC(468)   r     1 INETD                      0-0-0/w STRC        r     1 INETD_DS
     0-0-0/w STRC(720)   r     1 NEWSOCK                    0-0-0/d STRC(72)    r     1 VLP_VECTOR
     0-0-0/w STRC(18)    r     1 XSL$DETACHRQS              0-0-0/w STRC(18)    r     1 XSL$GIVEUPRQS
     0-0-0/w STRC        r     1 XSL$GIVEUPRSP


   Procedure XSL$ACCEPT_SRVR requires 217 words for executable code.
   Procedure XSL$ACCEPT_SRVR requires 72 words of local(AUTO) storage.

    No errors detected in file XSL$INETD.:TCA2TSI    .
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:58   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:59   
          MINI XREF LISTING

B$ALT.CODE
      1011**DCL      1011--REDEF    1012--REDEF    1012--REDEF
B$ALT.ERR
      1012**DCL      4429>>ASSIGN
B$ALT.ERR.ERR#
      1013**DCL      1013--REDEF
B$ALT.EVID
      1012**DCL      1012--REDEF    1012--REDEF
B$JIT.CPFLAGS1.SLEAZE
      1129**DCL      1129--REDEF
B$JIT.ERR.MID
      1036**DCL      1036--REDEF
B$JIT.JRESPEAK
      1197**DCL      1198--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      1306**DCL      1306--REDEF    1307--REDEF
B$JIT.PNR
      1210**DCL      1210--REDEF
B$JIT.SYSID
      1035**DCL      4419>>IF       4460>>IF
B$JIT.TSLINE
      1304**DCL      1305--REDEF
B$JIT$
      1311**DCL      1030--IMP-PTR  4419>>IF       4460>>IF
B$TCB.ALT$
      1018**DCL      4429>>ASSIGN
B$TCB$
      1020**DCL      1018--IMP-PTR  4429>>ASSIGN
BAILOUT
      4425**LABEL    4417--CALLALT  4464--GOTO
CLOSE_DS
       851**DCL      4432<>CALL     4478<>CALL
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:60   
CLOSE_DS.SN_
       851**DCL       851--REDEF
CLOSE_DS.UTL_
       852**DCL       852--REDEF
CLOSE_DS.V
       856**DCL       851--DCLINIT
CLOSE_DS.V.EXPIRE#
       866**DCL       866--REDEF
CLOSE_DS.V.TYPE#
       864**DCL       864--REDEF
CLOSE_DS.V.XTNSIZE#
       861**DCL       861--REDEF     863--REDEF
COMMON
      4407**LABEL    4401--GOTO
COPEN_DS
       936**DCL      4409>>ASSIGN
COPEN_DS.ACSVEH_
       938**DCL       939--REDEF
COPEN_DS.ALTKEYS_
       944**DCL       945--REDEF     945--REDEF
COPEN_DS.HDR_
       943**DCL       944--REDEF
COPEN_DS.TAB_
       942**DCL       943--REDEF
COPEN_DS.UHL_
       936**DCL       937--REDEF     937--REDEF
COPEN_DS.V
       945**DCL       936--DCLINIT
COPEN_DS.V.FSN#
       976**DCL       976--REDEF     976--REDEF
COPEN_DS.WSN_
       942**DCL       942--REDEF
F$INETD.ACTPOS
       796**DCL       796--REDEF
F$INETD.ARS#
       755**DCL       755--REDEF
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:61   
F$INETD.ATTR#
       785**DCL       785--REDEF     787--REDEF
F$INETD.BORROW
       807**DCL       807--REDEF     807--REDEF     807--REDEF
F$INETD.DCBNAME.L
       826**DCL       826--IMP-SIZ
F$INETD.EOMCHAR#
       762**DCL       763--REDEF
F$INETD.FLDID
       799**DCL       800--REDEF
F$INETD.FORM$
       791**DCL       791--REDEF
F$INETD.FSECT
       814**DCL       814--REDEF
F$INETD.FSN#
       781**DCL       781--REDEF     781--REDEF     782--REDEF
F$INETD.HEADER$
       790**DCL       791--REDEF
F$INETD.IXTNSIZE#
       787**DCL       788--REDEF
F$INETD.LASTSTA$
       771**DCL       771--REDEF
F$INETD.LVL
       808**DCL       808--REDEF
F$INETD.NAME#.C
       771**DCL       772--REDEF
F$INETD.NOEOF
       803**DCL       803--REDEF
F$INETD.NRECS#
       788**DCL       788--REDEF
F$INETD.NRECX
       815**DCL       815--REDEF
F$INETD.OHDR
       804**DCL       804--REDEF
F$INETD.ORG#
       779**DCL       780--REDEF
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:62   
F$INETD.PRECNO
       812**DCL       812--REDEF
F$INETD.RCSZ
       820**DCL       820--REDEF
F$INETD.RES#
       773**DCL       773--REDEF
F$INETD.SETX
       792**DCL       792--REDEF
F$INETD.TAB$
       791**DCL       791--REDEF
F$INETD.TDA
       811**DCL       812--REDEF
F$INETD.WSN#
       773**DCL       774--REDEF
INETD.ERRNO
      2740**DCL      4429<<ASSIGN   4430<<ASSIGN   4462>>IF       4463>>ASSIGN
INETD.FPT_RUE.STATE
      2735**DCL      4431<<ASSIGN   4457<<ASSIGN   4458>>DOUNTIL
INETD.FPT_RUE.SYSID
      2733**DCL      4460>>IF
INETD.LDCTX
      2738**DCL      4454<<ASSIGN
INETD.NAME
      2761**DCL      4466>>ASSIGN   4470>>ASSIGN
INETD.NAMELEN
      2741**DCL      4469>>ASSIGN
INETD.SERNUM
      2739**DCL      4441>>ASSIGN   4443>>ASSIGN
INETD$
      4285**DCL      2695--IMP-PTR  2725--IMP-PTR  4286--REDEF    4419>>IF       4419>>IF       4420<<ASSIGN
      4420>>ASSIGN   4422>>IF       4429>>ASSIGN   4430>>ASSIGN   4431>>ASSIGN   4438>>ASSIGN   4441>>ASSIGN
      4443>>ASSIGN   4454>>ASSIGN   4457>>ASSIGN   4458>>DOUNTIL  4460>>IF       4462>>IF       4463>>ASSIGN
      4466>>ASSIGN   4469>>ASSIGN   4470>>ASSIGN
INETDPTR
      4286**DCL      4408<<ASSIGN   4423<<ASSIGN   4427>>IF
INETDPTR.OFFSET
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:63   
      4287**DCL      4438<<ASSIGN
INETDPTR.SEGID
      4288**DCL      4416<<ASSIGN
INETD_DS
      2695**DCL      4420--ASSIGN
INETD_DS.OFFSET
      2701**DCL      4419>>IF       4422>>IF       4438>>ASSIGN
INETD_DS.SYSID
      2700**DCL      4419>>IF
M$CLOSE
       141**DCL-ENT  4432--CALL     4478--CALL
M$OPEN
       141**DCL-ENT  4411--CALL
M$RETRY
       198**DCL-ENT  4413--CALL
M$WAIT
       199**DCL-ENT  4459--CALL
M$XXX
       153**DCL-ENT  4460--CALL
MONERR
      4423**LABEL    4414--GOTO     4447--GOTO
NAME
      2348**DCL       131--PROC     4403--ENTRY    4467--IF       4470<<ASSIGN
NAMELEN
      4281**DCL       131--PROC     4403--ENTRY    4467--IF       4468>>IF       4469<<ASSIGN
NEWSOCK
      2801**DCL      4445<>CALL     4451<>CALL     4453<>CALL     4456<>CALL
NEWSOCK.DCB#
      2834**DCL      4477>>ASSIGN
NEWSOCK.FLAGS.BIND
      2818**DCL      4473<<ASSIGN
NEWSOCK.FLAGS.BLOCKING
      2820**DCL      4440<<ASSIGN
NEWSOCK.FLAGS.CONNECT
      2815**DCL      4474<<ASSIGN
NEWSOCK.FLAGS.MUSTREAD
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:64   
      2829**DCL      4452<<ASSIGN
NEWSOCK.FLAGS.SELWRITE
      2825**DCL      4475<<ASSIGN
NEWSOCK.FLAGS.SOCKET
      2819**DCL      4472<<ASSIGN
NEWSOCK.NBACCEPT_SOCK$
      2923**DCL      2924--REDEF
NEWSOCK.PEERNAME
      2894**DCL      4466<<ASSIGN
NEWSOCK.SERNUM
      2833**DCL      4441<<ASSIGN
NEWSOCK.TYPE
      2808**DCL      4439<<ASSIGN
NEWSOCK$
      4282**DCL      2801--IMP-PTR  4417<>CALL     4439>>ASSIGN   4440>>ASSIGN   4441>>ASSIGN   4445>>CALL
      4451>>CALL     4452>>ASSIGN   4453>>CALL     4456>>CALL     4466>>ASSIGN   4472>>ASSIGN   4473>>ASSIGN
      4474>>ASSIGN   4475>>ASSIGN   4477>>ASSIGN
OPEN_DS
      4354**DCL      4409<<ASSIGN   4411<>CALL
OPEN_DS.ACSVEH_
      4356**DCL      4357--REDEF
OPEN_DS.ALTKEYS_
      4362**DCL      4363--REDEF    4363--REDEF
OPEN_DS.HDR_
      4361**DCL      4362--REDEF
OPEN_DS.TAB_
      4360**DCL      4361--REDEF
OPEN_DS.UHL_
      4354**DCL      4355--REDEF    4355--REDEF
OPEN_DS.V
      4363**DCL      4410--ASSIGN
OPEN_DS.V.ACS#
      4374**DCL      4412<<ASSIGN   4412>>ASSIGN   4413>>IF       4416>>ASSIGN
OPEN_DS.V.FSN#
      4394**DCL      4394--REDEF    4394--REDEF
OPEN_DS.V_
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:65   
      4354**DCL      4410--ASSIGN
OPEN_DS.WSN_
      4360**DCL      4360--REDEF
QUICK
      4283**DCL      4400<<ASSIGN   4405<<ASSIGN   4476>>IF
SAVSER
      4398**DCL      4442<<ASSIGN   4446>>ASSIGN   4449>>ASSIGN
SOCK#
      4284**DCL       131--PROC     4403--ENTRY    4407<<ASSIGN   4417<>CALL     4434>>IF       4434<>CALL
      4434<>CALL     4435<<ASSIGN   4477<<ASSIGN
VLP_VECTOR.PTR$
       993**DCL      4410<<ASSIGN
VLP_VECTOR.W2
       992**DCL       993--REDEF
WAIT_A_BIT
      1006**DCL      4459<>CALL
WAIT_A_BIT.V
      1007**DCL      1006--DCLINIT
XSL$CL_OPEN
      4270**DCL-ENT  4445--CALL
XSL$CL_READ
      4271**DCL-ENT  4453--CALL
XSL$CL_WRITE
      4272**DCL-ENT  4451--CALL     4456--CALL
XSL$DETACHRQS
      4260**DCL      4455<<ASSIGN   4456--CALL
XSL$GETSOCK
      4273**DCL-ENT  4417--CALL
XSL$GIVEUPRQS
      4184**DCL      4450<<ASSIGN   4451--CALL
XSL$GIVEUPRSP.XPSLDCTX
      4216**DCL      4454>>ASSIGN
XSL$QCLOSE
      4269**DCL-ENT  4434--CALL
XSL_DETACHRQS
      4235**DCL      4455>>ASSIGN
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:66   
XSL_ERRNO
      4275**DCL      4276--REDEF    4425<<ASSIGN   4428>>IF       4430>>ASSIGN   4463<<ASSIGN
XSL_GIVEUPRQS
      4159**DCL      4450>>ASSIGN
XSL_KEYBUF$
      4277**DCL      4184--IMP-PTR  4209--IMP-PTR  4260--IMP-PTR  4450>>ASSIGN   4454>>ASSIGN   4455>>ASSIGN
XSL_SN
      4278**DCL      4442>>ASSIGN   4443<<ASSIGN   4446<<ASSIGN   4449<<ASSIGN
XSL_SOCK$$
      4279**DCL      2944--IMP-PTR
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:67   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:68   
              MINI UREF LISTING

M$ACCT     158**DCL-ENT
M$ACTIVATE     161**DCL-ENT
M$ALIB     154**DCL-ENT
M$ASUSER     156**DCL-ENT
M$ATTACH     163**DCL-ENT
M$BADPP     181**DCL-ENT
M$CGCTL     162**DCL-ENT
M$CGINFO     162**DCL-ENT
M$CHECK     143**DCL-ENT
M$CHGUNIT     201**DCL-ENT
M$CLRSTK     199**DCL-ENT
M$CMDVAR     210**DCL-ENT
M$CONFIG     171**DCL-ENT
M$CORRES     146**DCL-ENT
M$CPEXIT     155**DCL-ENT
M$CVM     179**DCL-ENT
M$CVOL     144**DCL-ENT
M$DCLFLD     171**DCL-ENT
M$DEACTIVATE     161**DCL-ENT
M$DELREC     143**DCL-ENT
M$DEQ     208**DCL-ENT
M$DETACH     163**DCL-ENT
M$DEVICE     145**DCL-ENT
M$DISPLAY     208**DCL-ENT
M$DISPRES     148**DCL-ENT
M$DLIB     154**DCL-ENT
M$DRIBBLE     171**DCL-ENT
M$DRTN     199**DCL-ENT
M$DSUSER     156**DCL-ENT
M$ENQ     207**DCL-ENT
M$EOM     166**DCL-ENT
M$ERASE     172**DCL-ENT
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:69   
M$ERR     153**DCL-ENT
M$ERRMSG     204**DCL-ENT
M$EVENT     196**DCL-ENT
M$EXHUME     205**DCL-ENT
M$EXIT     153**DCL-ENT
M$EXTEND     145**DCL-ENT
M$FDP     177**DCL-ENT
M$FDS     176**DCL-ENT
M$FEBOOT     169**DCL-ENT
M$FECTL     170**DCL-ENT
M$FEDUMP     169**DCL-ENT
M$FID     204**DCL-ENT
M$FINDPROC     158**DCL-ENT
M$FSUSER     156**DCL-ENT
M$FVP     178**DCL-ENT
M$FWCG     162**DCL-ENT
M$GBPL     182**DCL-ENT
M$GDDL     178**DCL-ENT
M$GDP     177**DCL-ENT
M$GDS     176**DCL-ENT
M$GETDCB     147**DCL-ENT
M$GETMOUSE     187**DCL-ENT
M$GETPM     188**DCL-ENT
M$GJOB     206**DCL-ENT
M$GLINEATTR     166**DCL-ENT
M$GOODPP     181**DCL-ENT
M$GPLATEN     174**DCL-ENT
M$GPROMPT     173**DCL-ENT
M$GTRMATTR     167**DCL-ENT
M$GTRMCTL     165**DCL-ENT
M$GTRMTAB     168**DCL-ENT
M$GVP     177**DCL-ENT
M$HELP     204**DCL-ENT
M$INT     196**DCL-ENT
M$INTRTN     157**DCL-ENT
M$IOQ     192**DCL-ENT
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:70   
M$JOBSTATS     206**DCL-ENT
M$KEYIN     146**DCL-ENT
M$LDEV     141**DCL-ENT
M$LDTRC     154**DCL-ENT
M$LIMIT     147**DCL-ENT
M$LINES     146**DCL-ENT
M$LINK     153**DCL-ENT
M$MADMUCK     149**DCL-ENT
M$MAKUSER     180**DCL-ENT
M$MBS     148**DCL-ENT
M$MDFFLD     172**DCL-ENT
M$MERC     197**DCL-ENT
M$MERCS     198**DCL-ENT
M$MIRROR     192**DCL-ENT
M$MONINFO     209**DCL-ENT
M$MPL     182**DCL-ENT
M$NODEINFO     173**DCL-ENT
M$NXTUSR     207**DCL-ENT
M$OCMSG     205**DCL-ENT
M$OLAY     153**DCL-ENT
M$PAS     182**DCL-ENT
M$PATHCON     205**DCL-ENT
M$PDS     176**DCL-ENT
M$PFIL     143**DCL-ENT
M$PLATEN     167**DCL-ENT
M$PRECORD     145**DCL-ENT
M$PROCNAME     158**DCL-ENT
M$PROFILE     169**DCL-ENT
M$PROMPT     165**DCL-ENT
M$RACST     149**DCL-ENT
M$RDSYSLOG     190**DCL-ENT
M$READ     142**DCL-ENT
M$RELDCB     147**DCL-ENT
M$RELRES     148**DCL-ENT
M$RELSTARF     150**DCL-ENT
M$REM     150**DCL-ENT
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:71   
M$RENV     197**DCL-ENT
M$REQUIRE     149**DCL-ENT
M$RETRYS     198**DCL-ENT
M$REW     144**DCL-ENT
M$RLSFLD     172**DCL-ENT
M$RPRIV     200**DCL-ENT
M$RSPP     179**DCL-ENT
M$RSWITCH     201**DCL-ENT
M$RUE     207**DCL-ENT
M$SAD     180**DCL-ENT
M$SAVE     156**DCL-ENT
M$SCON     157**DCL-ENT
M$SCREECH     155**DCL-ENT
M$SENV     197**DCL-ENT
M$SETFMA     141**DCL-ENT
M$SETFP     170**DCL-ENT
M$SINPUT     168**DCL-ENT
M$SLCFLD     173**DCL-ENT
M$SMOUSE     187**DCL-ENT
M$SMPRT     179**DCL-ENT
M$SPRIV     200**DCL-ENT
M$SSC     180**DCL-ENT
M$SSWITCH     200**DCL-ENT
M$STATE     209**DCL-ENT
M$STD     181**DCL-ENT
M$STIMER     195**DCL-ENT
M$STLPP     178**DCL-ENT
M$STRAP     195**DCL-ENT
M$STRMATTR     167**DCL-ENT
M$STRMCTL     165**DCL-ENT
M$STRMTAB     168**DCL-ENT
M$SYMBIO     206**DCL-ENT
M$SYSCON     192**DCL-ENT
M$SYSID     210**DCL-ENT
M$TDCLOSE     191**DCL-ENT
M$TDIO     191**DCL-ENT
PL6.E3A0      #002=XSL$ACCEPT_SRVR File=XSL$INETD.:TCA2TSI                       SUN 11/16/97 14:30 Page:72   
M$TDOPEN     190**DCL-ENT
M$TDREQCPU     191**DCL-ENT
M$TEMPWROC     185**DCL-ENT
M$TIME     208**DCL-ENT
M$TRAP     195**DCL-ENT
M$TRMISC     170**DCL-ENT
M$TRMPRG     166**DCL-ENT
M$TRTN     199**DCL-ENT
M$TRUNC     142**DCL-ENT
M$TTIMER     195**DCL-ENT
M$UC     165**DCL
M$UMPL     182**DCL-ENT
M$UNFID     204**DCL-ENT
M$UNLATCH     161**DCL-ENT
M$UNSHARE     158**DCL-ENT
M$USRFIELD     201**DCL-ENT
M$VIRTUAL     176**DCL-ENT
M$WEOF     144**DCL-ENT
M$WRITE     142**DCL-ENT
M$WRSYSLOG     190**DCL-ENT
M$XCON     196**DCL-ENT
M$XCONRTN     157**DCL-ENT
M$XEQTIME     209**DCL-ENT
M$XFLUSH     150**DCL-ENT
M$XMOUSE     187**DCL-ENT
M$YC     155**DCL-ENT
XSL$ACCEPT_SRVR     131**PROC
XSL$MSGSDEFS    4140**DCL-ENT
XSL$QACCEPT_SRVR    4403**ENTRY
XSL$SOCKHD    2944**DCL
XSL_SOCK$    4276**DCL
