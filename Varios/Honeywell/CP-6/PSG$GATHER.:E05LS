VERSION E05

PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:1    
        1        1        /*M*  PSG$GATHER  Gather statistics for STATS summary functions               */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        PSG$GATHER: PROC ALTRET;
        9        9        %INCLUDE CP_6;
       10       90        %INCLUDE PS_DATA_R;
       11     5386        %INCLUDE PS_PERR_C;
       12     5417        %DUMMY_BUCKET (NAME=BASED_BUCKET,
       13     5418                       STCLASS=BASED);
       14     5424        %REF_RPN (NAME=BASED_RPN,
       15     5425                  STCLASS=BASED);
       16     5436    1   DCL SELECT_VALUE SBIN;
       17     5437    1   DCL STARTUP UBIN;
       18     5438    1   DCL OLD_STARTUP UBIN;
       19     5439    1   DCL I UBIN;
       20     5440    1   DCL RESULT SBIN STATIC;
       21     5441    1   DCL SCRATCH UBIN;
       22     5442    1   DCL X_AXIS_VALUE (0:9) SBIN;
       23     5443    1   DCL Y_AXIS_VALUE (0:9) SBIN;
       24     5444    1   DCL X_AXIS_INDEX UBIN;
       25     5445    1   DCL Y_AXIS_INDEX UBIN;
       26     5446    1   DCL POINT UBIN;
       27     5447    1   DCL POINT_VAL UBIN;
       28     5448    1   DCL BAR CHAR (40) STATIC;
       29     5449    1   DCL BAR_STUFF (0:39) CHAR (1) CONSTANT INIT ('*' * 0);
       30     5450    1   DCL BAR_CHARS REDEF BAR_STUFF CHAR (40);
       31     5451    1   DCL P$ PTR;
       32     5452    1   DCL PSE$ERRMSG ENTRY (5);
       33     5453    1   DCL PSL$TIME ENTRY (2);
       34     5454    1   DCL PSL$EVAL ENTRY (3);
       35     5455    1   DCL PSP$POLISH ENTRY (2);
       36     5456        %INCLUDE XUF_ENTRY;
       37     5464
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:2    
       38     5465    1   DCL GRAPH_FORMAT CHAR (0) CONSTANT INIT ('%A %8D |%A| %A   ');
       39     5466
       40     5467        %EXT_TIME (NAME=STARTUP_TIME, STCLASS=STATIC);
       41     5475        %EXT_TIME (NAME=THEN_TIME);
       42     5483        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:3    
       43     5484    1   FIND: PROC (VALUE, BUCKETS, N, I);
       44     5485
       45     5486    2   DCL VALUE SBIN;
       46     5487    2   DCL BUCKETS (0:0) UBIN;
       47     5488    2   DCL N UBIN;
       48     5489    2   DCL I UBIN;
       49     5490
       50     5491    2      I = 0;
       51     5492
       52     5493    3      DO WHILE (I < N-1 AND VALUE > BUCKETS(I));
       53     5494
       54     5495    3         I = I + 1;
       55     5496
       56     5497    3         END;
       57     5498
       58     5499    2      RETURN;
       59     5500
       60     5501    2   END FIND;
       61     5502        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:4    
       62     5503    1      IF PS_LOGFILE_KEY.UTS > PS_END_UTS
       63     5504    2        THEN DO;                         /* we've passed the end of the interval */
       64     5505
       65     5506    2         PS_PUNT_COUNT = 0;                 /* force termination of process loop */
       66     5507    2         ALTRETURN;                               /* and thus skip this interval */
       67     5508    2         END;
       68     5509
       69     5510    1      CALL PSL$EVAL (P_STARTUP#, STARTUP, OLD_STARTUP);
       70     5511
       71     5512    1      IF STARTUP ~= OLD_STARTUP         /* system re-booted during this interval */
       72     5513    2        THEN DO;
       73     5514
       74     5515    2         IF PS_MODE = GLOM_MODE#
       75     5516    3           THEN DO;
       76     5517
       77     5518    3            CALL PSL$TIME (STARTUP, STARTUP_TIME);
       78     5519
       79     5520    3            CALL PSE$ERRMSG (E$PS_REBOOTED, WARNING#,
       80     5521    3             VECTOR(STARTUP_TIME));
       81     5522
       82     5523        /*E*  ERROR: PS-E$PS_REBOOTED
       83     5524              MESSAGE: No can do - system was rebooted on %U1.
       84     5525              MESSAGE1:
       85     5526        I can't GLOM the time interval that you indicated, because the
       86     5527        system was rebooted on %U1, and
       87     5528        the parameters that STATS uses for measurement were reset
       88     5529        to zero during the re-boot.
       89     5530        */
       90     5531    3            END;
       91     5532
       92     5533    2         PS_COLLECT.UTS = PS_OLD_COLLECT.UTS;
       93     5534
       94     5535    2         ALTRETURN;
       95     5536
       96     5537    2         END;
       97     5538
       98     5539    1      IF PS_SELECT_RPN.INFO.USED# ~= 0          /* some selection criteria given */
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:5    
       99     5540    1       AND PS_MODE ~= GLOM_MODE#            /* selection isn't done for GLOMming */
      100     5541    2        THEN DO;
      101     5542
      102     5543    2         CALL PSP$POLISH (PS_SELECT_RPN, SELECT_VALUE);     /* evaluate criteria */
      103     5544
      104     5545    2         IF SELECT_VALUE = 0                   /* result of criteria was "false" */
      105     5546    3           THEN DO;
      106     5547
      107     5548    3            PS_COLLECT.UTS = PS_OLD_COLLECT.UTS;
      108     5549    3            ALTRETURN;
      109     5550    3            END;
      110     5551
      111     5552    2         END;
      112     5553
      113     5554    1      PS_STATS_HITS = PS_STATS_HITS + 1;
      114     5555        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:6    
      115     5556    1      IF PS_MODE > GLOM_MODE#
      116     5557    2        THEN DO;
      117     5558
      118     5559    2         CALL PSL$TIME (PS_COLLECT.UTS, STARTUP_TIME);
      119     5560
      120     5561    3         DO I = 0 TO PS_STATS_EXPRESSIONS - 1;
      121     5562
      122     5563    3            CALL PSP$POLISH (PS_STATS.RPN$(I) -> BASED_RPN, RESULT);
      123     5564
      124     5565    4            DO CASE (MOD(I, 2));
      125     5566
      126     5567    4             CASE (0);
      127     5568
      128     5569    4               Y_AXIS_VALUE(I/2) = RESULT;
      129     5570
      130     5571    4             CASE (1);
      131     5572
      132     5573    4               X_AXIS_VALUE(I/2) = RESULT;
      133     5574
      134     5575    4             END;
      135     5576
      136     5577    3            P$ = PS_STATS.BUCKET$(I);
      137     5578                 %UPDATE_BUCKET (BUCKET="P$->BASED_BUCKET",
      138     5579                 DIST_VAL=RESULT);
      139     5588    3            PS_STATS.SIGMA_X(I) = PS_STATS.SIGMA_X(I) + RESULT;
      140     5589    3            PS_STATS.SIGMA_X_SQUARED(I) = PS_STATS.SIGMA_X_SQUARED(I) +
      141     5590    3             (RESULT * RESULT);
      142     5591
      143     5592    3            IF PS_STATS.MIN(I) > RESULT
      144     5593    3              THEN
      145     5594    3               PS_STATS.MIN(I) = RESULT;
      146     5595
      147     5596    3            IF PS_STATS.MAX(I) < RESULT
      148     5597    3              THEN
      149     5598    3               PS_STATS.MAX(I) = RESULT;
      150     5599
      151     5600    3            END;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:7    
      152     5601        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:8    
      153     5602    3         DO CASE (PS_MODE);
      154     5603
      155     5604    3          CASE (PLOT_MODE#);
      156     5605
      157     5606    4            DO I = 0 TO PS_GRAPHS - 1;
      158     5607
      159     5608    4               CALL FIND (X_AXIS_VALUE(I), PS_STATS.PLOT$(I*2+1) -> PS_PLOT_VALUES,
      160     5609    4                X_AXIS_POINTS#, X_AXIS_INDEX);
      161     5610
      162     5611    4               CALL FIND (Y_AXIS_VALUE(I), PS_STATS.PLOT$(I*2) -> PS_PLOT_VALUES,
      163     5612    4                Y_AXIS_POINTS#, Y_AXIS_INDEX);
      164     5613
      165     5614    4               POINT = (Y_AXIS_INDEX * X_AXIS_POINTS#) + X_AXIS_INDEX;
      166     5615
      167     5616    4               POINT_VAL = PS_GRAPH$(I) -> PS_GRAPH_POINTS(POINT);
      168     5617
      169     5618    4               IF POINT_VAL < 511
      170     5619    5                 THEN DO;
      171     5620
      172     5621    5                  POINT_VAL = POINT_VAL + 1;
      173     5622    5                  PS_GRAPH$(I) -> PS_GRAPH_POINTS(POINT) = POINT_VAL;
      174     5623
      175     5624    5                  IF PS_GRAPH_PEAK(I) < POINT_VAL
      176     5625    5                    THEN
      177     5626    5                     PS_GRAPH_PEAK(I) = POINT_VAL;
      178     5627
      179     5628    5                  END;
      180     5629
      181     5630    4               END;
      182     5631        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:9    
      183     5632    3          CASE (BARGRAPH_MODE#);
      184     5633
      185     5634    3            CALL FIND (RESULT, PS_STATS.PLOT$(0) -> PS_PLOT_VALUES,
      186     5635    3             X_AXIS_POINTS#, X_AXIS_INDEX);
      187     5636
      188     5637    3            BAR = SUBSTR(BAR_CHARS, 0, X_AXIS_INDEX+1);
      189     5638
      190     5639    3            CALL PSL$TIME (PS_OLD_COLLECT.UTS, THEN_TIME);
      191     5640
      192     5641    3            IF STARTUP_TIME.DATE@ = THEN_TIME.DATE@
      193     5642    3              THEN
      194     5643    3               STARTUP_TIME.DATE@ = ' ';
      195     5644
      196     5645    3            CALL X$WRITE (PS_FDS, VECTOR(GRAPH_FORMAT),
      197     5646    3             VECTOR(STARTUP_TIME.TIME@), VECTOR(RESULT), VECTOR(BAR),
      198     5647    3             VECTOR(STARTUP_TIME.DATE@));
      199     5648        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:10   
      200     5649    3          END;
      201     5650
      202     5651    2         END;
      203     5652        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:11   
      204     5653    1      RETURN;
      205     5654
      206     5655    1   END PSG$GATHER;

PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:12   
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   PS_PERR_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSG$GATHER.

   Procedure PSG$GATHER requires 277 words for executable code.
   Procedure PSG$GATHER requires 44 words of local(AUTO) storage.

    No errors detected in file PSG$GATHER.:E05TSI    .

PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:13   

 Object Unit name= PSG$GATHER                                 File name= PSG$GATHER.:E05TOU
 UTS= JUL 30 '97 04:34:52.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$SI
    4   DCB   even  none     0      0  F$LOG
    5   DCB   even  none     0      0  M$ME
    6   DCB   even  none     0      0  M$HLPCG
    7  RtLbCm even  none    30     36  PS_FDS
    8  RtLbCm even  none    32     40  PS_SELECT_RPN
    9  RtLbCm even  none    17     21  PS_STATS_RPN
   10  RtLbCm even  none    34     42  PS_STATS_BUCKET
   11   Data  even  none    27     33  PSG$GATHER
   12  RoData even  UTS     15     17  PSG$GATHER
   13   Proc  even  none   277    425  PSG$GATHER
   14  RoData even  none    34     42  PSG$GATHER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    13      0   yes    yes     yes      Std        0  PSG$GATHER
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:14   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 PSL$EVAL
         yes           Std       2 PSL$TIME
         yes           Std       2 PSP$POLISH
         yes           Std       5 PSE$ERRMSG
         yes           Std      22 X$WRITE
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  M$DO
     M$SI                                  F$LOG                                 M$ME
     M$HLPCG                               PS_LOGFILE_KEY                        PS_BUFFER
     PS_PUNT_COUNT                         PS_COLLECT                            PS_OLD_COLLECT
     PS_STATS$                             PS_GRAPH$                             PS_STATS_HITS
     PS_STATS_EXPRESSIONS                  PS_GRAPHS                             PS_GRAPH_PEAK
     PS_MODE                               PS_END_UTS                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:15   


        1        1        /*M*  PSG$GATHER  Gather statistics for STATS summary functions               */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        PSG$GATHER: PROC ALTRET;

      8 13 000000   000000 700200 xent  PSG$GATHER   TSX0  ! X66_AUTO_0
        13 000001   000054 000000                    ZERO    44,0
        13 000002   000033 710000 13                 TRA     s:5503

        9        9        %INCLUDE CP_6;
       10       90        %INCLUDE PS_DATA_R;
       11     5386        %INCLUDE PS_PERR_C;
       12     5417        %DUMMY_BUCKET (NAME=BASED_BUCKET,
       13     5418                       STCLASS=BASED);
       14     5424        %REF_RPN (NAME=BASED_RPN,
       15     5425                  STCLASS=BASED);
       16     5436    1   DCL SELECT_VALUE SBIN;
       17     5437    1   DCL STARTUP UBIN;
       18     5438    1   DCL OLD_STARTUP UBIN;
       19     5439    1   DCL I UBIN;
       20     5440    1   DCL RESULT SBIN STATIC;
       21     5441    1   DCL SCRATCH UBIN;
       22     5442    1   DCL X_AXIS_VALUE (0:9) SBIN;
       23     5443    1   DCL Y_AXIS_VALUE (0:9) SBIN;
       24     5444    1   DCL X_AXIS_INDEX UBIN;
       25     5445    1   DCL Y_AXIS_INDEX UBIN;
       26     5446    1   DCL POINT UBIN;
       27     5447    1   DCL POINT_VAL UBIN;
       28     5448    1   DCL BAR CHAR (40) STATIC;
       29     5449    1   DCL BAR_STUFF (0:39) CHAR (1) CONSTANT INIT ('*' * 0);
       30     5450    1   DCL BAR_CHARS REDEF BAR_STUFF CHAR (40);
       31     5451    1   DCL P$ PTR;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:16   
       32     5452    1   DCL PSE$ERRMSG ENTRY (5);
       33     5453    1   DCL PSL$TIME ENTRY (2);
       34     5454    1   DCL PSL$EVAL ENTRY (3);
       35     5455    1   DCL PSP$POLISH ENTRY (2);
       36     5456        %INCLUDE XUF_ENTRY;
       37     5464
       38     5465    1   DCL GRAPH_FORMAT CHAR (0) CONSTANT INIT ('%A %8D |%A| %A   ');
       39     5466
       40     5467        %EXT_TIME (NAME=STARTUP_TIME, STCLASS=STATIC);
       41     5475        %EXT_TIME (NAME=THEN_TIME);
       42     5483        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:17   
       43     5484    1   FIND: PROC (VALUE, BUCKETS, N, I);

   5484 13 000003   200042 741300       FIND         STX1  ! P$+1,,AUTO

       44     5485
       45     5486    2   DCL VALUE SBIN;
       46     5487    2   DCL BUCKETS (0:0) UBIN;
       47     5488    2   DCL N UBIN;
       48     5489    2   DCL I UBIN;
       49     5490
       50     5491    2      I = 0;

   5491 13 000004   200046 470500                    LDP0    @I,,AUTO
        13 000005   000000 450100                    STZ     0,,PR0

       51     5492
       52     5493    3      DO WHILE (I < N-1 AND VALUE > BUCKETS(I));

   5493 13 000006   000013 710000 13                 TRA     s:5497

       53     5494
       54     5495    3         I = I + 1;

   5495 13 000007   200046 470500                    LDP0    @I,,AUTO
        13 000010   000000 235100                    LDA     0,,PR0
        13 000011   000001 035007                    ADLA    1,DL
        13 000012   000000 755100                    STA     0,,PR0

       55     5496
       56     5497    3         END;

   5497 13 000013   200045 471500                    LDP1    @N,,AUTO
        13 000014   100000 236100                    LDQ     0,,PR1
        13 000015   000001 136007                    SBLQ    1,DL
        13 000016   000031 604000 13                 TMI     s:5499
        13 000017   000000 116100                    CMPQ    0,,PR0
        13 000020   000031 602000 13                 TNC     s:5499
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:18   
        13 000021   000031 600000 13                 TZE     s:5499
        13 000022   000000 720100                    LXL0    0,,PR0
        13 000023   200043 473500                    LDP3    @VALUE,,AUTO
        13 000024   200044 474500                    LDP4    @BUCKETS,,AUTO
        13 000025   400000 236110                    LDQ     0,X0,PR4
        13 000026   000031 604000 13                 TMI     s:5499
        13 000027   300000 116100                    CMPQ    0,,PR3
        13 000030   000007 604000 13                 TMI     s:5495

       57     5498
       58     5499    2      RETURN;

   5499 13 000031   200042 221300                    LDX1  ! P$+1,,AUTO
        13 000032   000001 702211                    TSX2  ! 1,X1

       59     5500
       60     5501    2   END FIND;
       61     5502        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:19   
       62     5503    1      IF PS_LOGFILE_KEY.UTS > PS_END_UTS

   5503 13 000033   000000 235000 xsym               LDA     PS_LOGFILE_KEY
        13 000034   000001 236000 xsym               LDQ     PS_LOGFILE_KEY+1
        13 000035   000033 773000                    LRL     27
        13 000036   000000 116000 xsym               CMPQ    PS_END_UTS
        13 000037   000043 602000 13                 TNC     s:5510
        13 000040   000043 600000 13                 TZE     s:5510

       63     5504    2        THEN DO;                         /* we've passed the end of the interval */

       64     5505
       65     5506    2         PS_PUNT_COUNT = 0;                 /* force termination of process loop */

   5506 13 000041   000000 450000 xsym               STZ     PS_PUNT_COUNT

       66     5507    2         ALTRETURN;                               /* and thus skip this interval */

   5507 13 000042   000000 702200 xent               TSX2  ! X66_AALT

       67     5508    2         END;
       68     5509
       69     5510    1      CALL PSL$EVAL (P_STARTUP#, STARTUP, OLD_STARTUP);

   5510 13 000043   200006 630500                    EPPR0   OLD_STARTUP,,AUTO
        13 000044   200052 450500                    STP0    @I+4,,AUTO
        13 000045   200005 631500                    EPPR1   STARTUP,,AUTO
        13 000046   200051 451500                    STP1    @I+3,,AUTO
        13 000047   000000 236000 14                 LDQ     0
        13 000050   200050 756100                    STQ     @I+2,,AUTO
        13 000051   200050 630500                    EPPR0   @I+2,,AUTO
        13 000052   000021 631400 xsym               EPPR1   B_VECTNIL+17
        13 000053   000000 701000 xent               TSX1    PSL$EVAL
        13 000054   000000 011000                    NOP     0

       70     5511
       71     5512    1      IF STARTUP ~= OLD_STARTUP         /* system re-booted during this interval */
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:20   

   5512 13 000055   200005 236100                    LDQ     STARTUP,,AUTO
        13 000056   200006 116100                    CMPQ    OLD_STARTUP,,AUTO
        13 000057   000102 600000 13                 TZE     s:5539

       72     5513    2        THEN DO;

       73     5514
       74     5515    2         IF PS_MODE = GLOM_MODE#

   5515 13 000060   000000 235000 xsym               LDA     PS_MODE
        13 000061   000002 115007                    CMPA    2,DL
        13 000062   000077 601000 13                 TNZ     s:5533

       75     5516    3           THEN DO;

       76     5517
       77     5518    3            CALL PSL$TIME (STARTUP, STARTUP_TIME);

   5518 13 000063   000001 236000 14                 LDQ     1
        13 000064   200051 756100                    STQ     @I+3,,AUTO
        13 000065   200005 630500                    EPPR0   STARTUP,,AUTO
        13 000066   200050 450500                    STP0    @I+2,,AUTO
        13 000067   200050 630500                    EPPR0   @I+2,,AUTO
        13 000070   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000071   000000 701000 xent               TSX1    PSL$TIME
        13 000072   000000 011000                    NOP     0

       78     5519
       79     5520    3            CALL PSE$ERRMSG (E$PS_REBOOTED, WARNING#,

   5520 13 000073   000005 630400 14                 EPPR0   5
        13 000074   000021 631400 xsym               EPPR1   B_VECTNIL+17
        13 000075   000000 701000 xent               TSX1    PSE$ERRMSG
        13 000076   000000 011000                    NOP     0

       80     5521    3             VECTOR(STARTUP_TIME));
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:21   
       81     5522
       82     5523        /*E*  ERROR: PS-E$PS_REBOOTED
       83     5524              MESSAGE: No can do - system was rebooted on %U1.
       84     5525              MESSAGE1:
       85     5526        I can't GLOM the time interval that you indicated, because the
       86     5527        system was rebooted on %U1, and
       87     5528        the parameters that STATS uses for measurement were reset
       88     5529        to zero during the re-boot.
       89     5530        */
       90     5531    3            END;

       91     5532
       92     5533    2         PS_COLLECT.UTS = PS_OLD_COLLECT.UTS;

   5533 13 000077   000022 235000 xsym               LDA     PS_OLD_COLLECT+18
        13 000100   000022 755000 xsym               STA     PS_COLLECT+18

       93     5534
       94     5535    2         ALTRETURN;

   5535 13 000101   000000 702200 xent               TSX2  ! X66_AALT

       95     5536
       96     5537    2         END;
       97     5538
       98     5539    1      IF PS_SELECT_RPN.INFO.USED# ~= 0          /* some selection criteria given */

   5539 13 000102   000000 236000 8                  LDQ     PS_SELECT_RPN
        13 000103   000777 316003                    CANQ    511,DU
        13 000104   000125 600000 13                 TZE     s:5554
        13 000105   000000 235000 xsym               LDA     PS_MODE
        13 000106   000002 115007                    CMPA    2,DL
        13 000107   000125 600000 13                 TZE     s:5554

       99     5540    1       AND PS_MODE ~= GLOM_MODE#            /* selection isn't done for GLOMming */
      100     5541    2        THEN DO;

PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:22   
      101     5542
      102     5543    2         CALL PSP$POLISH (PS_SELECT_RPN, SELECT_VALUE);     /* evaluate criteria */

   5543 13 000110   200004 630500                    EPPR0   SELECT_VALUE,,AUTO
        13 000111   200051 450500                    STP0    @I+3,,AUTO
        13 000112   000010 236000 14                 LDQ     8
        13 000113   200050 756100                    STQ     @I+2,,AUTO
        13 000114   200050 630500                    EPPR0   @I+2,,AUTO
        13 000115   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000116   000000 701000 xent               TSX1    PSP$POLISH
        13 000117   000000 011000                    NOP     0

      103     5544
      104     5545    2         IF SELECT_VALUE = 0                   /* result of criteria was "false" */

   5545 13 000120   200004 235100                    LDA     SELECT_VALUE,,AUTO
        13 000121   000125 601000 13                 TNZ     s:5554

      105     5546    3           THEN DO;

      106     5547
      107     5548    3            PS_COLLECT.UTS = PS_OLD_COLLECT.UTS;

   5548 13 000122   000022 236000 xsym               LDQ     PS_OLD_COLLECT+18
        13 000123   000022 756000 xsym               STQ     PS_COLLECT+18

      108     5549    3            ALTRETURN;

   5549 13 000124   000000 702200 xent               TSX2  ! X66_AALT

      109     5550    3            END;
      110     5551
      111     5552    2         END;
      112     5553
      113     5554    1      PS_STATS_HITS = PS_STATS_HITS + 1;

   5554 13 000125   000000 054000 xsym               AOS     PS_STATS_HITS
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:23   

      114     5555        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:24   
      115     5556    1      IF PS_MODE > GLOM_MODE#

   5556 13 000126   000000 235000 xsym               LDA     PS_MODE
        13 000127   000003 115007                    CMPA    3,DL
        13 000130   000424 602000 13                 TNC     s:5653

      116     5557    2        THEN DO;

      117     5558
      118     5559    2         CALL PSL$TIME (PS_COLLECT.UTS, STARTUP_TIME);

   5559 13 000131   000011 630400 14                 EPPR0   9
        13 000132   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000133   000000 701000 xent               TSX1    PSL$TIME
        13 000134   000000 011000                    NOP     0

      119     5560
      120     5561    3         DO I = 0 TO PS_STATS_EXPRESSIONS - 1;

   5561 13 000135   200007 450100                    STZ     I,,AUTO
        13 000136   000260 710000 13                 TRA     s:5600+3

      121     5562
      122     5563    3            CALL PSP$POLISH (PS_STATS.RPN$(I) -> BASED_RPN, RESULT);

   5563 13 000137   200007 236100                    LDQ     I,,AUTO
        13 000140   000014 402007                    MPY     12,DL
        13 000141   000000 470400 xsym               LDP0    PS_STATS$
        13 000142   000013 471506                    LDP1    11,QL,PR0
        13 000143   000013 236000 14                 LDQ     11
        13 000144   200051 756100                    STQ     @I+3,,AUTO
        13 000145   200050 451500                    STP1    @I+2,,AUTO
        13 000146   200050 630500                    EPPR0   @I+2,,AUTO
        13 000147   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000150   000000 701000 xent               TSX1    PSP$POLISH
        13 000151   000000 011000                    NOP     0

PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:25   
      123     5564
      124     5565    4            DO CASE (MOD(I, 2));

   5565 13 000152   200007 236100                    LDQ     I,,AUTO
        13 000153   000001 376007                    ANQ     1,DL
        13 000154   000002 116007                    CMPQ    2,DL
        13 000155   000157 602006 13                 TNC     s:5565+5,QL
        13 000156   000172 710000 13                 TRA     s:5577
        13 000157   000161 710000 13                 TRA     s:5569
        13 000160   000166 710000 13                 TRA     s:5573

      125     5566
      126     5567    4             CASE (0);

      127     5568
      128     5569    4               Y_AXIS_VALUE(I/2) = RESULT;

   5569 13 000161   200007 236100                    LDQ     I,,AUTO
        13 000162   000001 772000                    QRL     1
        13 000163   000000 235000 11                 LDA     RESULT
        13 000164   200023 755106                    STA     Y_AXIS_VALUE,QL,AUTO
        13 000165   000172 710000 13                 TRA     s:5577

      129     5570
      130     5571    4             CASE (1);

      131     5572
      132     5573    4               X_AXIS_VALUE(I/2) = RESULT;

   5573 13 000166   200007 236100                    LDQ     I,,AUTO
        13 000167   000001 772000                    QRL     1
        13 000170   000000 235000 11                 LDA     RESULT
        13 000171   200011 755106                    STA     X_AXIS_VALUE,QL,AUTO

      133     5574
      134     5575    4             END;

PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:26   
      135     5576
      136     5577    3            P$ = PS_STATS.BUCKET$(I);

   5577 13 000172   200007 236100                    LDQ     I,,AUTO
        13 000173   000014 402007                    MPY     12,DL
        13 000174   000000 470400 xsym               LDP0    PS_STATS$
        13 000175   000012 236106                    LDQ     10,QL,PR0
        13 000176   200041 756100                    STQ     P$,,AUTO

      137     5578                 %UPDATE_BUCKET (BUCKET="P$->BASED_BUCKET",
      138     5579                 DIST_VAL=RESULT);

   5580 13 000177   200010 450100                    STZ     SCRATCH,,AUTO

   5581 13 000200   000204 710000 13                 TRA     s:5584

   5583 13 000201   200010 235100                    LDA     SCRATCH,,AUTO
        13 000202   000001 035007                    ADLA    1,DL
        13 000203   200010 755100                    STA     SCRATCH,,AUTO

   5584 13 000204   200041 470500                    LDP0    P$,,AUTO
        13 000205   200010 236100                    LDQ     SCRATCH,,AUTO
        13 000206   000000 116100                    CMPQ    0,,PR0
        13 000207   000214 603000 13                 TRC     s:5585
        13 000210   000000 620006                    EAX0    0,QL
        13 000211   000000 236000 11                 LDQ     RESULT
        13 000212   000002 116110                    CMPQ    2,X0,PR0
        13 000213   000201 605400 13                 TPNZ    s:5583

   5585 13 000214   200010 236100                    LDQ     SCRATCH,,AUTO
        13 000215   000000 036100                    ADLQ    0,,PR0
        13 000216   200050 756100                    STQ     @I+2,,AUTO
        13 000217   200010 236100                    LDQ     SCRATCH,,AUTO
        13 000220   000000 036100                    ADLQ    0,,PR0
        13 000221   200050 720100                    LXL0    @I+2,,AUTO
        13 000222   000003 235106                    LDA     3,QL,PR0
        13 000223   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:27   
        13 000224   000003 755110                    STA     3,X0,PR0

      139     5588    3            PS_STATS.SIGMA_X(I) = PS_STATS.SIGMA_X(I) + RESULT;

   5588 13 000225   200007 236100                    LDQ     I,,AUTO
        13 000226   000014 402007                    MPY     12,DL
        13 000227   000000 471400 xsym               LDP1    PS_STATS$
        13 000230   000000 620006                    EAX0    0,QL
        13 000231   100000 236106                    LDQ     0,QL,PR1
        13 000232   000000 036000 11                 ADLQ    RESULT
        13 000233   100000 756110                    STQ     0,X0,PR1

      140     5589    3            PS_STATS.SIGMA_X_SQUARED(I) = PS_STATS.SIGMA_X_SQUARED(I) +

   5589 13 000234   000000 236000 11                 LDQ     RESULT
        13 000235   000000 402000 11                 MPY     RESULT
        13 000236   000000 471400 xsym               LDP1    PS_STATS$
        13 000237   100001 036110                    ADLQ    1,X0,PR1
        13 000240   100001 756110                    STQ     1,X0,PR1

      141     5590    3             (RESULT * RESULT);
      142     5591
      143     5592    3            IF PS_STATS.MIN(I) > RESULT

   5592 13 000241   000000 471400 xsym               LDP1    PS_STATS$
        13 000242   100002 236110                    LDQ     2,X0,PR1
        13 000243   000000 116000 11                 CMPQ    RESULT
        13 000244   000247 604400 13                 TMOZ    s:5596

      144     5593    3              THEN
      145     5594    3               PS_STATS.MIN(I) = RESULT;

   5594 13 000245   000000 235000 11                 LDA     RESULT
        13 000246   100002 755110                    STA     2,X0,PR1

      146     5595
      147     5596    3            IF PS_STATS.MAX(I) < RESULT
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:28   

   5596 13 000247   000000 471400 xsym               LDP1    PS_STATS$
        13 000250   100003 236110                    LDQ     3,X0,PR1
        13 000251   000000 116000 11                 CMPQ    RESULT
        13 000252   000255 605000 13                 TPL     s:5600

      148     5597    3              THEN
      149     5598    3               PS_STATS.MAX(I) = RESULT;

   5598 13 000253   000000 235000 11                 LDA     RESULT
        13 000254   100003 755110                    STA     3,X0,PR1

      150     5599
      151     5600    3            END;

   5600 13 000255   200007 235100                    LDA     I,,AUTO
        13 000256   000001 035007                    ADLA    1,DL
        13 000257   200007 755100                    STA     I,,AUTO
        13 000260   200007 236100                    LDQ     I,,AUTO
        13 000261   000000 116000 xsym               CMPQ    PS_STATS_EXPRESSIONS
        13 000262   000137 602000 13                 TNC     s:5563

      152     5601        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:29   
      153     5602    3         DO CASE (PS_MODE);

   5602 13 000263   000000 235000 xsym               LDA     PS_MODE
        13 000264   000005 135007                    SBLA    5,DL
        13 000265   000002 115007                    CMPA    2,DL
        13 000266   000270 602005 13                 TNC     s:5602+5,AL
        13 000267   000424 710000 13                 TRA     s:5653
        13 000270   000365 710000 13                 TRA     s:5634
        13 000271   000272 710000 13                 TRA     s:5606

      154     5603
      155     5604    3          CASE (PLOT_MODE#);

      156     5605
      157     5606    4            DO I = 0 TO PS_GRAPHS - 1;

   5606 13 000272   200007 450100                    STZ     I,,AUTO
        13 000273   000361 710000 13                 TRA     s:5630+3

      158     5607
      159     5608    4               CALL FIND (X_AXIS_VALUE(I), PS_STATS.PLOT$(I*2+1) -> PS_PLOT_VALUES,

   5608 13 000274   200007 236100                    LDQ     I,,AUTO
        13 000275   000030 402007                    MPY     24,DL
        13 000276   000000 470400 xsym               LDP0    PS_STATS$
        13 000277   000025 471506                    LDP1    21,QL,PR0
        13 000300   200035 633500                    EPPR3   X_AXIS_INDEX,,AUTO
        13 000301   200046 453500                    STP3    @N+1,,AUTO
        13 000302   000015 236000 14                 LDQ     13
        13 000303   200045 756100                    STQ     @BUCKETS+1,,AUTO
        13 000304   200044 451500                    STP1    @VALUE+1,,AUTO
        13 000305   200007 720100                    LXL0    I,,AUTO
        13 000306   200011 634510                    EPPR4   X_AXIS_VALUE,X0,AUTO
        13 000307   200043 454500                    STP4    P$+2,,AUTO
        13 000310   000003 701000 13                 TSX1    FIND
        13 000311   000000 011000                    NOP     0

PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:30   
      160     5609    4                X_AXIS_POINTS#, X_AXIS_INDEX);
      161     5610
      162     5611    4               CALL FIND (Y_AXIS_VALUE(I), PS_STATS.PLOT$(I*2) -> PS_PLOT_VALUES,

   5611 13 000312   200007 236100                    LDQ     I,,AUTO
        13 000313   000030 402007                    MPY     24,DL
        13 000314   000000 470400 xsym               LDP0    PS_STATS$
        13 000315   000011 471506                    LDP1    9,QL,PR0
        13 000316   200036 633500                    EPPR3   Y_AXIS_INDEX,,AUTO
        13 000317   200046 453500                    STP3    @N+1,,AUTO
        13 000320   000017 236000 14                 LDQ     15
        13 000321   200045 756100                    STQ     @BUCKETS+1,,AUTO
        13 000322   200044 451500                    STP1    @VALUE+1,,AUTO
        13 000323   200007 720100                    LXL0    I,,AUTO
        13 000324   200023 634510                    EPPR4   Y_AXIS_VALUE,X0,AUTO
        13 000325   200043 454500                    STP4    P$+2,,AUTO
        13 000326   000003 701000 13                 TSX1    FIND
        13 000327   000000 011000                    NOP     0

      163     5612    4                Y_AXIS_POINTS#, Y_AXIS_INDEX);
      164     5613
      165     5614    4               POINT = (Y_AXIS_INDEX * X_AXIS_POINTS#) + X_AXIS_INDEX;

   5614 13 000330   200036 236100                    LDQ     Y_AXIS_INDEX,,AUTO
        13 000331   000050 402007                    MPY     40,DL
        13 000332   200035 036100                    ADLQ    X_AXIS_INDEX,,AUTO
        13 000333   200037 756100                    STQ     POINT,,AUTO

      166     5615
      167     5616    4               POINT_VAL = PS_GRAPH$(I) -> PS_GRAPH_POINTS(POINT);

   5616 13 000334   200007 720100                    LXL0    I,,AUTO
        13 000335   000000 470410 xsym               LDP0    PS_GRAPH$,X0
        13 000336   000100 101506                    MRL     fill='000'O
        13 000337   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
        13 000340   200040 000004                    ADSC9   POINT_VAL,,AUTO          cn=0,n=4

PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:31   
      168     5617
      169     5618    4               IF POINT_VAL < 511

   5618 13 000341   200040 235100                    LDA     POINT_VAL,,AUTO
        13 000342   000777 115007                    CMPA    511,DL
        13 000343   000356 603000 13                 TRC     s:5630

      170     5619    5                 THEN DO;

      171     5620
      172     5621    5                  POINT_VAL = POINT_VAL + 1;

   5621 13 000344   000001 035007                    ADLA    1,DL
        13 000345   200040 755100                    STA     POINT_VAL,,AUTO

      173     5622    5                  PS_GRAPH$(I) -> PS_GRAPH_POINTS(POINT) = POINT_VAL;

   5622 13 000346   000106 101500                    MRL     fill='000'O
        13 000347   200040 000004                    ADSC9   POINT_VAL,,AUTO          cn=0,n=4
        13 000350   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1

      174     5623
      175     5624    5                  IF PS_GRAPH_PEAK(I) < POINT_VAL

   5624 13 000351   000000 236010 xsym               LDQ     PS_GRAPH_PEAK,X0
        13 000352   000355 604000 13                 TMI     s:5626
        13 000353   200040 116100                    CMPQ    POINT_VAL,,AUTO
        13 000354   000356 603000 13                 TRC     s:5630

      176     5625    5                    THEN
      177     5626    5                     PS_GRAPH_PEAK(I) = POINT_VAL;

   5626 13 000355   000000 755010 xsym               STA     PS_GRAPH_PEAK,X0

      178     5627
      179     5628    5                  END;

PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:32   
      180     5629
      181     5630    4               END;

   5630 13 000356   200007 236100                    LDQ     I,,AUTO
        13 000357   000001 036007                    ADLQ    1,DL
        13 000360   200007 756100                    STQ     I,,AUTO
        13 000361   200007 236100                    LDQ     I,,AUTO
        13 000362   000000 116000 xsym               CMPQ    PS_GRAPHS
        13 000363   000274 602000 13                 TNC     s:5608
        13 000364   000424 710000 13                 TRA     s:5653

      182     5631        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:33   
      183     5632    3          CASE (BARGRAPH_MODE#);

      184     5633
      185     5634    3            CALL FIND (RESULT, PS_STATS.PLOT$(0) -> PS_PLOT_VALUES,

   5634 13 000365   000000 470400 xsym               LDP0    PS_STATS$
        13 000366   000011 471500                    LDP1    9,,PR0
        13 000367   200035 633500                    EPPR3   X_AXIS_INDEX,,AUTO
        13 000370   200046 453500                    STP3    @N+1,,AUTO
        13 000371   000015 236000 14                 LDQ     13
        13 000372   200045 756100                    STQ     @BUCKETS+1,,AUTO
        13 000373   200044 451500                    STP1    @VALUE+1,,AUTO
        13 000374   000013 236000 14                 LDQ     11
        13 000375   200043 756100                    STQ     P$+2,,AUTO
        13 000376   000003 701000 13                 TSX1    FIND
        13 000377   000000 011000                    NOP     0

      186     5635    3             X_AXIS_POINTS#, X_AXIS_INDEX);
      187     5636
      188     5637    3            BAR = SUBSTR(BAR_CHARS, 0, X_AXIS_INDEX+1);

   5637 13 000400   200035 720100                    LXL0    X_AXIS_INDEX,,AUTO
        13 000401   000001 621010                    EAX1    1,X0
        13 000402   040000 100440                    MLR     fill='040'O
        13 000403   000000 000011 12                 ADSC9   BAR_STUFF                cn=0,n=*X1
        13 000404   000001 000050 11                 ADSC9   BAR                      cn=0,n=40

      189     5638
      190     5639    3            CALL PSL$TIME (PS_OLD_COLLECT.UTS, THEN_TIME);

   5639 13 000405   000020 630400 14                 EPPR0   16
        13 000406   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000407   000000 701000 xent               TSX1    PSL$TIME
        13 000410   000000 011000                    NOP     0

      191     5640
      192     5641    3            IF STARTUP_TIME.DATE@ = THEN_TIME.DATE@
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:34   

   5641 13 000411   040000 106400                    CMPC    fill='040'O
        13 000412   000014 200012 11                 ADSC9   STARTUP_TIME+1           cn=1,n=10
        13 000413   000024 200012 11                 ADSC9   THEN_TIME+1              cn=1,n=10
        13 000414   000420 601000 13                 TNZ     s:5645

      193     5642    3              THEN
      194     5643    3               STARTUP_TIME.DATE@ = ' ';

   5643 13 000415   040000 100400                    MLR     fill='040'O
        13 000416   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        13 000417   000014 200012 11                 ADSC9   STARTUP_TIME+1           cn=1,n=10

      195     5644
      196     5645    3            CALL X$WRITE (PS_FDS, VECTOR(GRAPH_FORMAT),

   5645 13 000420   000034 630400 14                 EPPR0   28
        13 000421   000024 631400 xsym               EPPR1   B_VECTNIL+20
        13 000422   000000 701000 xent               TSX1    X$WRITE
        13 000423   000000 011000                    NOP     0

      197     5646    3             VECTOR(STARTUP_TIME.TIME@), VECTOR(RESULT), VECTOR(BAR),
      198     5647    3             VECTOR(STARTUP_TIME.DATE@));
      199     5648        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:35   
      200     5649    3          END;

      201     5650
      202     5651    2         END;

      203     5652        %EJECT;
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:36   
      204     5653    1      RETURN;

   5653 13 000424   000000 702200 xent               TSX2  ! X66_ARET
      205     5654
      206     5655    1   END PSG$GATHER;

PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:37   
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   PS_PERR_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSG$GATHER.
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:38   

 **** Variables and constants ****

  ****  Section 007 RtLmCm PS_FDS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1080)  r     1 PS_FDS

  ****  Section 008 RtLmCm PS_SELECT_RPN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1152)  r     1 PS_SELECT_RPN

  ****  Section 011  Data  PSG$GATHER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c CHAR(40)    r     1 BAR                        0-0-0/w SBIN        r     1 RESULT
    13-0-0/c STRC(270)   r     1 STARTUP_TIME              23-0-0/c STRC(270)   r     1 THEN_TIME

  ****  Section 012 RoData PSG$GATHER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(40)    r     1 BAR_CHARS
     0-0-0/c CHAR        r     1 BAR_STUFF(0:39)
    12-0-0/c CHAR(17)    r     1 GRAPH_FORMAT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:39   

    44-0-0/w PTR         r     1 @BUCKETS                  46-0-0/w PTR         r     1 @I
    45-0-0/w PTR         r     1 @N                        43-0-0/w PTR         r     1 @VALUE
    *0-0-0/w UBIN        r     1 BUCKETS(0:0)
     7-0-0/w UBIN        r     1 I                         *0-0-0/w UBIN        r     1 I
    *0-0-0/w UBIN        r     1 N                          6-0-0/w UBIN        r     1 OLD_STARTUP
    41-0-0/w PTR         r     1 P$                        37-0-0/w UBIN        r     1 POINT
    40-0-0/w UBIN        r     1 POINT_VAL                 10-0-0/w UBIN        r     1 SCRATCH
     4-0-0/w SBIN        r     1 SELECT_VALUE               5-0-0/w UBIN        r     1 STARTUP
    *0-0-0/w SBIN        r     1 VALUE                     35-0-0/w UBIN        r     1 X_AXIS_INDEX
    11-0-0/w SBIN        r     1 X_AXIS_VALUE(0:9)
    36-0-0/w UBIN        r     1 Y_AXIS_INDEX
    23-0-0/w SBIN        r     1 Y_AXIS_VALUE(0:9)

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(140)   r     1 PS_BUFFER                  0-0-0/w STRC(936)   r     1 PS_COLLECT
     0-0-0/w UBIN        r     1 PS_END_UTS
     0-0-0/w PTR         r     1 PS_GRAPH$(0:9)
     0-0-0/w UBIN        r     1 PS_GRAPHS
     0-0-0/w SBIN        r     1 PS_GRAPH_PEAK(0:9)
     0-0-0/c STRC(252)   r     1 PS_LOGFILE_KEY             0-0-0/w UBIN        r     1 PS_MODE
     0-0-0/w STRC(936)   r     1 PS_OLD_COLLECT             0-0-0/w UBIN        r     1 PS_PUNT_COUNT
     0-0-0/w PTR         r     1 PS_STATS$                  0-0-0/w UBIN        r     1 PS_STATS_EXPRESSIONS
     0-0-0/w SBIN        r     1 PS_STATS_HITS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(108)   r     1 BASED_BUCKET               0-0-0/w STRC(72)    r     1 BASED_RPN
     0-0-0N  NULL        r     1 M$LO
     0-0-0/c UBIN(9)     r     1 PS_GRAPH_POINTS(0:0)
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:40   
     0-0-0/w UBIN        r     1 PS_PLOT_VALUES(0:0)
     0-0-0/w STRC(432)   r     1 PS_STATS(0:0)
     0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure PSG$GATHER requires 277 words for executable code.
   Procedure PSG$GATHER requires 44 words of local(AUTO) storage.

    No errors detected in file PSG$GATHER.:E05TSI    .
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:41   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:42   
          MINI XREF LISTING

BAR
      5448**DCL      5637<<ASSIGN   5645--CALL
BAR_CHARS
      5450**DCL      5637>>ASSIGN
BAR_STUFF
      5449**DCL      5450--REDEF
BASED_BUCKET.DATA
      5422**DCL      5581>>DOWHILE  5585<<ASSIGN   5585>>ASSIGN
BASED_BUCKET.SIZE
      5420**DCL      5581>>DOWHILE  5585>>ASSIGN   5585>>ASSIGN
BASED_RPN
      5426**DCL      5563<>CALL
BUCKETS IN PROCEDURE FIND
      5487**DCL      5484--PROC     5493>>DOWHILE
FIND
      5484**PROC     5608--CALL     5611--CALL     5634--CALL
GRAPH_FORMAT
      5465**DCL      5645--CALL
I
      5439**DCL      5561<<DOINDEX  5563>>CALL     5565>>DOCASE   5569>>ASSIGN   5573>>ASSIGN   5577>>ASSIGN
      5588>>ASSIGN   5588>>ASSIGN   5589>>ASSIGN   5589>>ASSIGN   5592>>IF       5594>>ASSIGN   5596>>IF
      5598>>ASSIGN   5606<<DOINDEX  5608>>CALL     5608>>CALL     5611>>CALL     5611>>CALL     5616>>ASSIGN
      5622>>ASSIGN   5624>>IF       5626>>ASSIGN
I IN PROCEDURE FIND
      5489**DCL      5484--PROC     5491<<ASSIGN   5493>>DOWHILE  5493>>DOWHILE  5495<<ASSIGN   5495>>ASSIGN
N IN PROCEDURE FIND
      5488**DCL      5484--PROC     5493>>DOWHILE
OLD_STARTUP
      5438**DCL      5510<>CALL     5512>>IF
P$
      5451**DCL      5577<<ASSIGN   5581>>DOWHILE  5581>>DOWHILE  5585>>ASSIGN   5585>>ASSIGN   5585>>ASSIGN
      5585>>ASSIGN
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:43   
POINT
      5446**DCL      5614<<ASSIGN   5616>>ASSIGN   5622>>ASSIGN
POINT_VAL
      5447**DCL      5616<<ASSIGN   5618>>IF       5621<<ASSIGN   5621>>ASSIGN   5622>>ASSIGN   5624>>IF
      5626>>ASSIGN
PSE$ERRMSG
      5452**DCL-ENT  5520--CALL
PSL$EVAL
      5454**DCL-ENT  5510--CALL
PSL$TIME
      5453**DCL-ENT  5518--CALL     5559--CALL     5639--CALL
PSP$POLISH
      5455**DCL-ENT  5543--CALL     5563--CALL
PS_BUFFER
      4921**DCL      4956--DCLINIT  4958--DCLINIT
PS_COLLECT.CALCNT
      5076**DCL      5076--REDEF
PS_COLLECT.USRSRV
      5073**DCL      5074--REDEF
PS_COLLECT.UTS
      5076**DCL      5533<<ASSIGN   5548<<ASSIGN   5559<>CALL
PS_END_UTS
      5089**DCL      5503>>IF
PS_FDS
      4938**DCL      5645<>CALL
PS_GRAPH$
      5082**DCL      5616>>ASSIGN   5622>>ASSIGN
PS_GRAPHS
      5083**DCL      5606>>DOINDEX
PS_GRAPH_PEAK
      5084**DCL      5624>>IF       5626<<ASSIGN
PS_GRAPH_POINTS
      5084**DCL      5616>>ASSIGN   5622<<ASSIGN
PS_HLPCGBUF.DSPMSK
      5333**DCL      5339--REDEF
PS_HLPCGBUF.SLCMSK
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:44   
      5374**DCL      5381--REDEF
PS_LOGFILE_KEY.UTS
      4918**DCL      5503>>IF
PS_MODE
      5088**DCL      5515>>IF       5539>>IF       5556>>IF       5602>>DOCASE
PS_OLD_COLLECT.CALCNT
      5080**DCL      5081--REDEF
PS_OLD_COLLECT.USRSRV
      5078**DCL      5078--REDEF
PS_OLD_COLLECT.UTS
      5081**DCL      5533>>ASSIGN   5548>>ASSIGN   5639<>CALL
PS_PLOT_VALUES
      5083**DCL      5608<>CALL     5611<>CALL     5634<>CALL
PS_PUNT_COUNT
      4923**DCL      5506<<ASSIGN
PS_SELECT_RPN
      5038**DCL      5543<>CALL
PS_SELECT_RPN.INFO.USED#
      5041**DCL      5539>>IF
PS_STATS.BUCKET$
      5086**DCL      5577>>ASSIGN
PS_STATS.MAX
      5085**DCL      5596>>IF       5598<<ASSIGN
PS_STATS.MIN
      5085**DCL      5592>>IF       5594<<ASSIGN
PS_STATS.PLOT$
      5085**DCL      5608>>CALL     5611>>CALL     5634>>CALL
PS_STATS.RPN$
      5086**DCL      5563>>CALL
PS_STATS.SIGMA_X
      5084**DCL      5588<<ASSIGN   5588>>ASSIGN
PS_STATS.SIGMA_X_SQUARED
      5085**DCL      5589<<ASSIGN   5589>>ASSIGN
PS_STATS$
      5082**DCL      5084--IMP-PTR  5563>>CALL     5577>>ASSIGN   5588>>ASSIGN   5588>>ASSIGN   5589>>ASSIGN
      5589>>ASSIGN   5592>>IF       5594>>ASSIGN   5596>>IF       5598>>ASSIGN   5608>>CALL     5611>>CALL
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:45   
      5634>>CALL
PS_STATS_EXPRESSIONS
      5083**DCL      5561>>DOINDEX
PS_STATS_HITS
      5083**DCL      5554<<ASSIGN   5554>>ASSIGN
RESULT
      5440**DCL      5563<>CALL     5569>>ASSIGN   5573>>ASSIGN   5581>>DOWHILE  5588>>ASSIGN   5589>>ASSIGN
      5589>>ASSIGN   5592>>IF       5594>>ASSIGN   5596>>IF       5598>>ASSIGN   5634<>CALL     5645--CALL
SCRATCH
      5441**DCL      5580<<ASSIGN   5581>>DOWHILE  5581>>DOWHILE  5583<<ASSIGN   5583>>ASSIGN   5585>>ASSIGN
      5585>>ASSIGN
SELECT_VALUE
      5436**DCL      5543<>CALL     5545>>IF
STARTUP
      5437**DCL      5510<>CALL     5512>>IF       5518<>CALL
STARTUP_TIME
      5468**DCL      5518<>CALL     5520--CALL     5559<>CALL
STARTUP_TIME.DATE@
      5471**DCL      5641>>IF       5643<<ASSIGN   5645--CALL
STARTUP_TIME.TIME@
      5473**DCL      5645--CALL
TEXTC.LEN
      5086**DCL      5086--IMP-SIZ
THEN_TIME
      5476**DCL      5639<>CALL
THEN_TIME.DATE@
      5479**DCL      5641>>IF
VALUE IN PROCEDURE FIND
      5486**DCL      5484--PROC     5493>>DOWHILE
X$WRITE
      5462**DCL-ENT  5645--CALL
X_AXIS_INDEX
      5444**DCL      5608<>CALL     5614>>ASSIGN   5634<>CALL     5637>>ASSIGN
X_AXIS_VALUE
      5442**DCL      5573<<ASSIGN   5608<>CALL
Y_AXIS_INDEX
PL6.E3A0      #001=PSG$GATHER File=PSG$GATHER.:E05TSI                            WED 07/30/97 04:34 Page:46   
      5445**DCL      5611<>CALL     5614>>ASSIGN
Y_AXIS_VALUE
      5443**DCL      5569<<ASSIGN   5611<>CALL
