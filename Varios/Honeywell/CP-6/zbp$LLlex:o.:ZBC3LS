

CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=1  
        1         1             /*
        2         2              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        3         3              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        4         4              */
        5         5             /* $Header: LLlex.c,v 1.3 87/03/17 22:31:01 ceriel Exp $ */
        6         6             /*         L E X I C A L   A N A L Y Z E R       */
        7         7
        8         8             #include "idfsize:h"
        9         9             #include "numsize:h"
       10        10             #include "strsize:h"
       11        11
       12        12             #include <alloc:h>
       13        13             #include "input:h"
       14        14             #include "idf:h"
       15        15             #include "LLlex:h"
       16        16             #include "Lpars:h"
       17        17             #include "class:h"
       18        18             #include "bits:h"
       19        19             #include "macro:h"
       20        20             #include "textsize:h"
       21        21
       22        22             /* Data about the token yielded */
       23        23             struct token dot;
       24        24
       25        25             int ReplaceMacros = 1;      /* replacing macros        */
       26        26             int AccFileSpecifier = 0;   /* return filespecifier <...>    */
       27        27             int AccDefined = 0;      /* accept "defined(...)"      */
       28        28             int UnknownIdIsZero = 0; /* interpret unknown id as integer 0 */
       29        29
       30        30             char *string_token();
       31        31
       32        32             PushLex()
       33        33             {
       34        34    1         DOT = 0;
       35        35    1        }
       36        36
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=2  
       37        37             PopLex()
       38        38             {}
       39        39
       40        40             int
       41        41             LLlex()
       42        42             {
       43        43    1         return (DOT != EOF) ? GetToken(&dot) : EOF;
       44        44    1        }
       45        45
       46        46             #define BUFSIZ 1024
       47        47             #define LoadMapChar(c)  LoadChar(c)
       48        48             #define check_more_concat {\
       49        48             if (c != DBL_POUND) {\
       50        48               if (class(c) == STSKIP || c == EOR) {\
       51        48                  while (class(c) == STSKIP || c == EOR) LoadChar(c);\
       52        48                  if (c != DBL_POUND) {\
       53        48                     concat = 0;\
       54        48                     PushBack();\
       55        48                     InsertBuffer;\
       56        48                     goto go_on;\
       57        48                  }\
       58        48               }\
       59        48               else{\
       60        48                 PushBack ();\
       61        48                 concat = 0;\
       62        48                 InsertBuffer;\
       63        48                 goto go_on;\
       64        48               }\
       65        48             }\
       66        48             }
       67        67             #define InsertBuffer  {\
       68        67              void Fake_ReplaceList();\
       69        67             text[indx] ='\0';\
       70        67             if(stringization &&insert_pos){\
       71        67                InsertText(text+insert_pos, strlen(text)- insert_pos);\
       72        67                indx = insert_pos;\
       73        67             }\
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=3  
       74        67             else{\
       75        67                InsertText(text, strlen(text));\
       76        67                indx = 0;\
       77        67             }\
       78        67              Fake_ReplaceList () ;\
       79        67              LoadChar (c);\
       80        67              concat = 0;\
       81        67             }
       82        82
       83        83
       84        84             int
       85        85             GetToken(ptok)
       86        86              register struct token *ptok;
       87        87             {
       88        88    1         char buf[BUFSIZ];
       89        89    1         register int nch;
       90        90    1         static int c;
       91        91    1
       92        92    1         static int recursive_marker;
       93        93    1         register int expanding_param = 0;
       94        94    1         static   int indx;
       95        95    1         char text[BUFSIZ];
       96        96    1         static   int concat;
       97        97    1        #define push_text(a){text[indx++]=a;if(indx==BUFSIZ){/*truncating*/}}
       98        98    1         register int stringization = 0;
       99        99    1         register int insert_pos = 0;
      100       100    1         extern int dont_skip_spaces;
      101       101    1
      102       102    1        indx = recursive_marker = concat = 0;
      103       103    1        again: /* rescan the input after an error or replacement  */
      104       104    1         LoadMapChar(c);
      105       105    1        go_on:
      106       106    1           if (c & 0200) {
      107       107    2            if (c == DBL_POUND) {    /* catenation */
      108       108    3             if (!concat) concat = 1;
      109       109    3             goto again;
      110       110    3            }
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=4  
      111       111    2            else
      112       112    2            /* the outermost single pound is replaced by a
      113       113    2               special marker SGL_POUND, which will be replaced
      114       114    2               by '"' if we encounter the matching double quote.
      115       115    2               The other single pounds are replaced by '"'
      116       116    2               at this time which will cause the insertion
      117       117    2               of ecsape characters.    Note no insertions
      118       118    2               after the replacement of a macro name.
      119       119    2            */
      120       120    2            if (c == SGL_POUND) {    /* stringization */
      121       121    3             if (!concat) {
      122       122    4                if (stringization) {
      123       123    5                   push_text('"');
      124       124    5                }
      125       125    4                else { /* not stringization */
      126       126    5                   if (indx) { /* something left in the buffer */
      127       127    6                      PushBack();  /* for SGL_POUND */
      128       128    6                      InsertBuffer;
      129       129    6                      goto again;
      130       130    6                   }
      131       131    5                   else {
      132       132    6                      push_text(SGL_POUND);
      133       133    6                   }
      134       134    5                } /* not stringization */
      135       135    4             } /* not concat */
      136       136    3             else { /* in catenations */
      137       137    4                if (concat == 2) { /* already catenating strings */
      138       138    5                   while ((class(text[--indx]) == STSKIP || text[indx] == '\n') && ind
                               x);
      139       139    5                   concat = 0; /* pos now points the last '"' */
      140       140    5                }
      141       141    4                else { /* try to catenate a string */
      142       142    5                   error("catenating string literals and non-string literals");
      143       143    5                   if (concat) concat = 2; /* e.g. A"B" */
      144       144    5                   if (stringization) {
      145       145    6                      push_text('"');
      146       146    6                   }
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=5  
      147       147    5                   else {
      148       148    6                      push_text(SGL_POUND);
      149       149    6                   }
      150       150    5                } /* try to catenating a string */
      151       151    4             } /* in catenations */
      152       152    3             stringization ++;
      153       153    3             goto again;
      154       154    3            }
      155       155    2            else
      156       156    2            if (c == RECURSION) {    /* recursive marker */
      157       157    3             recursive_marker = 1;
      158       158    3             goto again;
      159       159    3            }
      160       160    2            else
      161       161    2            if (c == EXPAND_PARAM) {    /* expand parameters first */
      162       162    3             LoadMapChar(c);
      163       163    3             expanding_param = 1;
      164       164    3             if (c == EXPAND_PARAM) {
      165       165    4              while(c == EXPAND_PARAM)
      166       166    4               LoadMapChar(c);
      167       167    4              expanding_param ++;
      168       168    4             }
      169       169    3             goto go_on;
      170       170    3            }
      171       171    2            else
      172       172    2            if (c == FORMAL_OPEN) {
      173       173    3             goto again;
      174       174    3            }
      175       175    2            else
      176       176    2            if (c == EOR) {    /* end of replacement list */
      177       177    3             goto again;
      178       178    3            }
      179       179    2            else
      180       180    2            if (c == 0371) {
      181       181    3             LoadChar(c);
      182       182    3             while (class(c) == STSKIP || c == EOR) LoadChar(c);
      183       183    3             if (c == DBL_POUND){
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=6  
      184       184    4                concat = 2;
      185       185    4             }
      186       186    3             else { concat = 0; PushBack(); }
      187       187    3             if (stringization > 1) {
      188       188    4               push_text('"');
      189       189    4             }
      190       190    3             else {
      191       191    4               push_text(SGL_POUND);
      192       192    4             }
      193       193    3             if (stringization == 1 && !concat) {
      194       194    4               void Fake_ReplaceList();
      195       195    4               char buf[BUFSIZ];
      196       196    4               char *tg = text;
      197       197    4        #define push_buf(a) \
      198       197    4        {buf[i++]=a;if(i==BUFSIZ){/*truncating*/}}
      199       199    4               int  i = 0;
      200       200    4               text[indx] = '\0';
      201       201    4               while(*tg) {
      202       202    5                 if (*tg == SGL_POUND) {
      203       203    6                    push_buf('"');
      204       204    6                 }
      205       205    5                 else
      206       206    5                 if (*tg == '"') {
      207       207    6                    push_buf('\\');
      208       208    6                    push_buf('"');
      209       209    6                 }
      210       210    5                 else {
      211       211    6                    push_buf(*tg);
      212       212    6                 }
      213       213    5                 tg++;
      214       214    5               }
      215       215    4               buf[i] = '\0';
      216       216    4               tg = Malloc(i + 1);
      217       217    4               strcpy(tg, buf);
      218       218    4               InsertText(tg, i+1);
      219       219    4               Fake_ReplaceList();
      220       220    4               indx = i = 0;
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=7  
      221       221    4               insert_pos = 0;
      222       222    4             }
      223       223    3             stringization --;
      224       224    3             goto again;
      225       225    3            }
      226       226    2            else
      227       227    2            if (c != EOI)
      228       228    2             fatal("non-ascii '%03o' read", c & 0377);
      229       229    2           }
      230       230    1         switch (class(c)) {  /* detect character class  */
      231       231    2         case STNL:
      232       232    2            LineNumber++;
      233       233    2            return ptok->tk_symb = EOF;
      234       234    2         case STSKIP:
      235       235    2            goto again;
      236       236    2         case STGARB:      /* garbage character       */
      237       237    2          if (!stringization && !concat) {
      238       238    3            if (c == '\\') {
      239       239    4               /* a '\\' is allowed in #if/#elif expression */
      240       240    4           LoadMapChar(c);
      241       241    4               if (class(c) == STNL) { /* vt , ff ?   */
      242       242    5                  ++LineNumber;
      243       243    5                  goto again;
      244       244    5               }
      245       245    4               PushBack();
      246       246    4               c = '\\';
      247       247    4            }
      248       248    3            if (040 < c && c < 0177)
      249       249    3               error("garbage char %c", c);
      250       250    3            else
      251       251    3               error("garbage char \\%03o", c);
      252       252    3          }
      253       253    2          else {
      254       254    3           push_text(c);
      255       255    3           if (concat) check_more_concat;
      256       256    3          }
      257       257    2            goto again;
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=8  
      258       258    2         case STSIMP:   /* a simple character, no part of compound token*/
      259       259    2            if (c == '/') { /* probably the start of comment   */
      260       260    3               LoadChar(c);
      261       261    3               if (c == '*') { /* start of comment */
      262       262    4                  skipcomment();
      263       263    4                  goto again;
      264       264    4               }
      265       265    3               else {
      266       266    4                  PushBack();
      267       267    4                  c = '/'; /* restore c   */
      268       268    4               }
      269       269    3            }
      270       270    2          if (stringization || concat) {
      271       271    3           push_text(c);
      272       272    3           if (concat) check_more_concat;
      273       273    3           goto again;
      274       274    3          }
      275       275    2          else
      276       276    2            return ptok->tk_symb = c;
      277       277    2         case STCOMP:   /* maybe the start of a compound token    */
      278       278    2          if (!stringization && !concat) {
      279       279    3          LoadMapChar(nch);
      280       280    3            switch (c) {
      281       281    4            case '!':
      282       282    4               if (nch == '=')
      283       283    4                  return ptok->tk_symb = NOTEQUAL;
      284       284    4               PushBack();
      285       285    4               return ptok->tk_symb = c;
      286       286    4            case '&':
      287       287    4               if (nch == '&')
      288       288    4                  return ptok->tk_symb = AND;
      289       289    4               PushBack();
      290       290    4               return ptok->tk_symb = c;
      291       291    4            case '<':
      292       292    4               if (AccFileSpecifier) {
      293       293    5                  PushBack(); /* pushback nch */
      294       294    5                  ptok->tk_str =
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=9  
      295       295    5                     string_token("file specifier", '>', stringization, concat);
      296       296    5                  return ptok->tk_symb = FILESPECIFIER;
      297       297    5               }
      298       298    4               if (nch == '<')
      299       299    4                  return ptok->tk_symb = LEFT;
      300       300    4               if (nch == '=')
      301       301    4                  return ptok->tk_symb = LESSEQ;
      302       302    4               PushBack();
      303       303    4               return ptok->tk_symb = c;
      304       304    4            case '=':
      305       305    4               if (nch == '=')
      306       306    4                  return ptok->tk_symb = EQUAL;
      307       307    4               /* The following piece of code tries to recognise
      308       308    4                  old-fashioned assignment operators `=op'
      309       309    4               */
      310       310    4               error("illegal character");
      311       311    4               goto go_on;
      312       312    4            case '>':
      313       313    4               if (nch == '=')
      314       314    4                  return ptok->tk_symb = GREATEREQ;
      315       315    4               if (nch == '>')
      316       316    4                  return ptok->tk_symb = RIGHT;
      317       317    4               PushBack();
      318       318    4               return ptok->tk_symb = c;
      319       319    4            case '|':
      320       320    4               if (nch == '|')
      321       321    4                  return ptok->tk_symb = OR;
      322       322    4               PushBack();
      323       323    4               return ptok->tk_symb = c;
      324       324    4            }
      325       325    3          } /* if (!stringization) */
      326       326    2          else {
      327       327    3           push_text(c);
      328       328    3           if (concat) check_more_concat;
      329       329    3           goto again;
      330       330    3          }
      331       331    2         case STIDF:
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=10 
      332       332    2         {
      333       333    3            extern int idfsize;     /* ??? */
      334       334    3          extern int dont_replace_directives; /* set in domacro() */
      335       335    3            register char *tg = &buf[0];
      336       336    3            register char *maxpos = &buf[idfsize];
      337       337    3            register struct idf *idef;
      338       338    3
      339       339    3        #define tstmac(bx) if (!(bits[c] & bx)) goto nomac
      340       340    3        #define cpy     if (Unstacked) EnableMacros(); *tg++ = c
      341       341    3        #define load    LoadChar(c); if (!in_idf(c)) goto endidf
      342       342    3
      343       343    3          if (recursive_marker)
      344       344    3            for (;;) {
      345       345    4               if (tg < maxpos)
      346       346    4                 *tg++ = c;
      347       347    4               load;
      348       348    4            }
      349       349    3        #ifdef DOBITS
      350       350    3            cpy; tstmac(bit0); load;
      351       351    3            cpy; tstmac(bit1); load;
      352       352    3            cpy; tstmac(bit2); load;
      353       353    3            cpy; tstmac(bit3); load;
      354       354    3            cpy; tstmac(bit4); load;
      355       355    3            cpy; tstmac(bit5); load;
      356       356    3            cpy; tstmac(bit6); load;
      357       357    3            cpy; tstmac(bit7); load;
      358       358    3        #endif
      359       359    3
      360       360    3            for(;;) {
      361       361    4               if (tg < maxpos) {
      362       362    5                  cpy;
      363       363    5               }
      364       364    4               load;
      365       365    4            }
      366       366    3         endidf:
      367       367    3            PushBack();
      368       368    3            *tg = '\0'; /* mark the end of the identifier */
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=11 
      369       369    3            if (!recursive_marker) {
      370       370    4             if (expanding_param > 1
      371       371    4                || (!expanding_param && c != DBL_POUND && !concat)
      372       372    4                || (expanding_param == 1  && c != DBL_POUND && !concat && !stringizati
                               on )
      373       373    4                ){
      374       374    5              if (ReplaceMacros) {
      375       375    6                 idef = findidf(buf);
      376       376    6                 expanding_param = 0;
      377       377    6                 if (idef && !(dont_replace_directives && idef->id_resmac) && idef->id
                               _macro && replace(idef)) {
      378       378    7                    goto again;
      379       379    7                 }
      380       380    6              }
      381       381    5             }
      382       382    4             else {
      383       383    5              expanding_param = 0;
      384       384    5             }
      385       385    4            }
      386       386    3            else {
      387       387    4             recursive_marker = 0;
      388       388    4            }
      389       389    3        nomac:
      390       390    3
      391       391    3            *tg = 0;
      392       392    3            tg = buf;
      393       393    3
      394       394    3             if (indx && !text[indx] && !concat && !stringization) {
      395       395    4                text[indx = 0] = '\0';
      396       396    4             }
      397       397    3             if (stringization && !concat) insert_pos = indx;
      398       398    3             while (*tg) {
      399       399    4                push_text(*tg++);
      400       400    4             }
      401       401    3
      402       402    3             LoadMapChar(c);
      403       403    3             while (in_idf(c)) {
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=12 
      404       404    4                push_text(c);
      405       405    4                LoadMapChar(c);
      406       406    4             }
      407       407    3
      408       408    3             if (!dont_skip_spaces) {while (c == EOR || class(c) == STSKIP) LoadChar(c
                               );}
      409       409    3             if (c != DBL_POUND) {
      410       410    4                PushBack();
      411       411    4                if (stringization) {
      412       412    5                   if (concat) {
      413       413    6                      void Fake_ReplaceList();
      414       414    6                      text[indx] = '\0';
      415       415    6                      InsertText(text+insert_pos, strlen(text)-insert_pos);
      416       416    6                      indx = insert_pos;
      417       417    6                      Fake_ReplaceList();
      418       418    6                      concat = 0;
      419       419    6                      goto again;
      420       420    6                   }
      421       421    5                   else { /* in stringization but no concat */
      422       422    6                      LoadMapChar(c);
      423       423    6                      goto go_on;
      424       424    6                   }
      425       425    5                }
      426       426    4                else { /* not in a stringization */
      427       427    5                   if (concat) {
      428       428    6                      void Fake_ReplaceList();
      429       429    6                      text[indx] = '\0';
      430       430    6                      InsertText(text, strlen(text));
      431       431    6                      indx = 0;
      432       432    6                      Fake_ReplaceList();
      433       433    6                      concat = 0;
      434       434    6                      goto again;
      435       435    6                   }
      436       436    5                   else { /* not in stringization nor in catenation */
      437       437    6                      text[indx] = '\0';
      438       438    6                      goto done;
      439       439    6                   }
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=13 
      440       440    5                } /* not in a stringization */
      441       441    4            }
      442       442    3            else {  /* concatenation required */
      443       443    4             concat = 1;
      444       444    4             if (indx) {
      445       445    5                while ((class(text[--indx]) == STSKIP || text[indx] == '\n') && indx);

      446       446    5                indx++;
      447       447    5             }
      448       448    4             goto again;
      449       449    4            }
      450       450    3
      451       451    3        done:
      452       452    3            if (UnknownIdIsZero) {
      453       453    4               ptok->tk_val = 0;
      454       454    4               return ptok->tk_symb = INTEGER;
      455       455    4            }
      456       456    3          ptok->tk_str = Malloc(indx+1);
      457       457    3            strcpy(ptok->tk_str, text);
      458       458    3            return ptok->tk_symb = IDENTIFIER;
      459       459    3         }
      460       460    2         case STCHAR:            /* character constant   */
      461       461    2         {
      462       462    3            register int val = 0, size = 0;
      463       463    3
      464       464    3          LoadMapChar(c);
      465       465    3            if (c == '\'')
      466       466    3               error("character constant too short");
      467       467    3            else {
      468       468    4          if (stringization || concat) push_text('\'');
      469       469    4            while (c != '\'') {
      470       470    5               if (c == '\n') {
      471       471    6                  error("newline in character constant");
      472       472    6                  LineNumber++;
      473       473    6                  break;
      474       474    6               }
      475       475    5               if (c == '\\') {
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=14 
      476       476    6            if (concat) {
      477       477    7               push_text('\\');
      478       478    7            }
      479       479    6            else
      480       480    6            if (stringization) {
      481       481    7               push_text('\\');
      482       482    7               push_text('\\');
      483       483    7            }
      484       484    6            LoadMapChar(c);
      485       485    6                  if (c == '\n') {
      486       486    7                     LoadChar(c);
      487       487    7                     LineNumber++;
      488       488    7                     continue;
      489       489    7                  }
      490       490    6            if (stringization || concat) {
      491       491    7               push_text(c);
      492       492    7            }
      493       493    6            else {
      494       494    7               c = quoted(c);
      495       495    7            }
      496       496    6               }
      497       497    5               val = val*256 + c;
      498       498    5               size++;
      499       499    5           LoadMapChar(c);
      500       500    5            }
      501       501    4          } /* else */
      502       502    3            if (size > sizeof(int))
      503       503    3               error("character constant too long");
      504       504    3          if (stringization || concat) {
      505       505    4             push_text('\'');
      506       506    4             if (concat) check_more_concat;
      507       507    4             goto go_on;
      508       508    4          }
      509       509    3            ptok->tk_val = val;
      510       510    3            return ptok->tk_symb = INTEGER;
      511       511    3         }
      512       512    2         case STNUM:
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=15 
      513       513    2         {
      514       514    3            register char *np = &buf[1];
      515       515    3            register int base = 10;
      516       516    3            register int vch;
      517       517    3            register int val = 0, oldv = 0, ovfl = 0;
      518       518    3
      519       519    3          if (!concat && !stringization) {
      520       520    4            if (c == '0') {
      521       521    5               *np++ = c;
      522       522    5               LoadChar(c);
      523       523    5               if (c == 'x' || c == 'X') {
      524       524    6                  base = 16;
      525       525    6                  LoadChar(c);
      526       526    6               }
      527       527    5               else
      528       528    5                  base = 8;
      529       529    5            }
      530       530    4            while (vch = val_in_base(c, base), vch >= 0) {
      531       531    5               val = val*base + vch;
      532       532    5               if (oldv && val <= oldv) ovfl++;
      533       533    5               oldv = val;
      534       534    5               if (np < &buf[NUMSIZE])
      535       535    5                  *np++ = c;
      536       536    5               LoadChar(c);
      537       537    5            }
      538       538    4            if (base == 16 && np <= &buf[2])
      539       539    4              warning("no digits in hexadecimal constant");
      540       540    4            if (c == 'l' || c == 'L' || c == 'u' || c == 'U')  {
      541       541    5               int found = 0;
      542       542    5               while (c) {
      543       543    6                 if (c == 'l' || c == 'L') {
      544       544    7                    if (found & 1)
      545       545    7                       warning("duplicate \"l\" integer qualifiers");
      546       546    7                    found |= 1;
      547       547    7                    }
      548       548    6                 else if (c == 'u' || c == 'U') {
      549       549    7                    if (found & 2)
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=16 
      550       550    7                       warning("duplicate \"u\" integer qualifiers");
      551       551    7                    found |= 2;
      552       552    7                    }
      553       553    6                 else break;
      554       554    6                 LoadChar(c);
      555       555    6                 }
      556       556    5               }
      557       557    4            if (in_idf(c)) {
      558       558    5              warning("illegal integer constant");
      559       559    5              while (in_idf(c))
      560       560    5                 LoadChar(c);
      561       561    5              }
      562       562    4            else if (ovfl)
      563       563    4              warning("Overflow in integer constant");
      564       564    4            PushBack();
      565       565    4            ptok->tk_val = val;
      566       566    4            return ptok->tk_symb = INTEGER;
      567       567    4          }
      568       568    3            else {  /* need catenation  or  in a stringization */
      569       569    4            if (stringization && !concat) insert_pos = indx;
      570       570    4            if (c == '0') {
      571       571    5               *np++; push_text(c);
      572       572    5               LoadChar(c);
      573       573    5               if (c == 'x' || c == 'X') {
      574       574    6                  base = 16;
      575       575    6                  push_text(c);
      576       576    6                  LoadChar(c);
      577       577    6               }
      578       578    5               else
      579       579    5                  base = 8;
      580       580    5             }
      581       581    4            while (vch = val_in_base(c, base), vch >= 0) {
      582       582    5               val = val * base + vch;
      583       583    5               if (np < &buf[NUMSIZE]) {
      584       584    6                  *np++; push_text(c);
      585       585    6               }
      586       586    5               LoadChar(c);
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=17 
      587       587    5            }
      588       588    4            if (c == 'l' || c == 'L' || c == 'u' || c == 'U') {
      589       589    5               push_text(c);
      590       590    5               LoadChar(c);
      591       591    5            }
      592       592    4             if (concat) check_more_concat;
      593       593    4             goto go_on;
      594       594    4            }
      595       595    3         }
      596       596    2         case STSTR:
      597       597    2           if (stringization || concat){
      598       598    3             char *tg;
      599       599    3             push_text('"');
      600       600    3             tg = string_token("string", '"', stringization, concat);
      601       601    3             while (*tg)  push_text(*tg++);
      602       602    3             push_text('"');
      603       603    3             goto again;
      604       604    3           }
      605       605    2           else {
      606       606    3            ptok->tk_str = string_token("string", '"', stringization, concat);
      607       607    3            return ptok->tk_symb = STRING;
      608       608    3           }
      609       609    2         case STEOI:       /* end of text on source file */
      610       610    2            return ptok->tk_symb = EOF;
      611       611    2         default:
      612       612    2            crash("Impossible character class");
      613       613    2         }
      614       614    1         /*NOTREACHED*/
      615       615    1        }
      616       616
      617       617             skipcomment()
      618       618             {
      619       619    1         register int c;
      620       620    1
      621       621    1         NoUnstack++;
      622       622    1         LoadChar(c);
      623       623    1         do {
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=18 
      624       624    2            while (c != '*') {
      625       625    3               if (class(c) == STNL)
      626       626    3                  ++LineNumber;
      627       627    3               else
      628       628    3               if (c == EOI) {
      629       629    4                  NoUnstack--;
      630       630    4                  return;
      631       631    4               }
      632       632    3               LoadChar(c);
      633       633    3            }
      634       634    2            /* Last Character seen was '*' */
      635       635    2            LoadChar(c);
      636       636    2         } while (c != '/');
      637       637    1         NoUnstack--;
      638       638    1        }
      639       639
      640       640             char *
      641       641             string_token(nm, stop_char, stringization, concat)
      642       642              char *nm;
      643       643             {
      644       644    1         register int c = '"';
      645       645    1         register unsigned int str_size;
      646       646    1         register char *str = Malloc(str_size = ISTRSIZE);
      647       647    1         register int pos = 0;
      648       648    1        #define push_str(a) \
      649       648    1         { str[pos++] = a;\
      650       648    1           if (pos == str_size) \
      651       648    1           { str = Srealloc(str, str_size << 1);} \
      652       648    1         }
      653       653    1
      654       654    1         while (c == '"') {
      655       655    2         LoadMapChar(c);
      656       656    2         while (c != stop_char) {
      657       657    3            if (c == '\n') {
      658       658    4               error("newline in %s", nm);
      659       659    4               LineNumber++;
      660       660    4               break;
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=19 
      661       661    4            }
      662       662    3            if (c == EOI) {
      663       663    4               error("end-of-file inside %s", nm);
      664       664    4               break;
      665       665    4            }
      666       666    3            if (c == '\\') {
      667       667    4           LoadMapChar(c);
      668       668    4               if (c == '\n') {
      669       669    5                  LineNumber++;
      670       670    5            LoadMapChar(c);
      671       671    5                  continue;
      672       672    5               }
      673       673    4               if (!stringization && !concat) c = quoted(c);
      674       674    4            }
      675       675    3          if (c > 0370) {
      676       676    4             if (c == DBL_POUND) { /* replace DBL_POUND by '##' */
      677       677    5                 str[pos++] = '#';
      678       678    5                 if (pos == str_size) str = Srealloc(str, str_size <<= 1);
      679       679    5                 c = '#';
      680       680    5             }
      681       681    4             else if (c == SGL_POUND) { /* replace it by '#' */
      682       682    5                 c = '#';
      683       683    5             }
      684       684    4             else { /* drop special characters */
      685       685    5                 LoadMapChar(c);
      686       686    5                 continue;
      687       687    5             }
      688       688    4          }
      689       689    3            str[pos++] = c;
      690       690    3            if (pos == str_size)
      691       691    3               str = Srealloc(str, str_size <<= 1);
      692       692    3           LoadMapChar(c);
      693       693    3         }
      694       694    2         do{
      695       695    3          LoadMapChar(c);
      696       696    3          if(c == '\n'){
      697       697    4             if(AccFileSpecifier) break;
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=20 
      698       698    4             LineNumber++;
      699       699    4             c = ' ';
      700       700    4          }
      701       701    3         } while (class(c) == STSKIP);
      702       702    2         }
      703       703    1         PushBack();
      704       704    1         str[pos++] = '\0'; /* for filenames etc. */
      705       705    1         return str;
      706       706    1        }
      707       707
      708       708             int
      709       709             quoted(c)
      710       710              register int c;
      711       711             {
      712       712    1         /* quoted() replaces an escaped character sequence by the
      713       713    1            character meant.
      714       714    1         */
      715       715    1         /* first char after backslash already in c */
      716       716    1         if (!is_oct(c)) {    /* a quoted char */
      717       717    2            switch (c) {
      718       718    3            case 'n':
      719       719    3               c = '\n';
      720       720    3               break;
      721       721    3            case 't':
      722       722    3               c = '\t';
      723       723    3               break;
      724       724    3            case 'b':
      725       725    3               c = '\b';
      726       726    3               break;
      727       727    3            case 'r':
      728       728    3               c = '\r';
      729       729    3               break;
      730       730    3            case 'f':
      731       731    3               c = '\f';
      732       732    3               break;
      733       733    3            }
      734       734    2         }
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=21 
      735       735    1         else {            /* a quoted octal */
      736       736    2            register int oct = 0, cnt = 0;
      737       737    2
      738       738    2            do {
      739       739    3               oct = oct*8 + (c-'0');
      740       740    3               LoadChar(c);
      741       741    3            } while (is_oct(c) && ++cnt < 3);
      742       742    2            PushBack();
      743       743    2            c = oct;
      744       744    2         }
      745       745    1         return c&0377;
      746       746    1        }
      747       747
      748       748             /* provisional */
      749       749             int
      750       750             val_in_base(c, base)
      751       751              register int c;
      752       752             {
      753       753    1         return
      754       754    1            is_dig(c) ? c - '0' :
      755       755    1            base != 16 ? -1 :
      756       756    1            is_hex(c) ? (c - 'a' + 10) & 017 :
      757       757    1            -1;
      758       758    1        }
      759       759             #define TRICASE(A,B) case A: c = B; break
      760       760
      761       761             int trigraph() {
      762       762    1         register char c;
      763       763    1
      764       764    1         LoadChar(c);
      765       765    1         if (c != '?'){
      766       766    2           PushBack();
      767       767    2           return '?';
      768       768    2         }
      769       769    1         LoadChar(c);
      770       770    1         switch(c) {
      771       771    2
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=22 
      772       772    2           TRICASE('=','#');
      773       773    2           TRICASE('(','[');
      774       774    2           TRICASE('/','\\');
      775       775    2           TRICASE(')',']');
      776       776    2           TRICASE('\'','^');
      777       777    2           TRICASE('<','{');
      778       778    2           TRICASE('!','|');
      779       779    2           TRICASE('>','}');
      780       780    2           TRICASE('-','~');
      781       781    2
      782       782    2         default:
      783       783    2           PushBack();
      784       784    2           PushBack();
      785       785    2           c = '?';
      786       786    2           break;
      787       787    2         }
      788       788    1         return c;
      789       789    1        }
---  Include file information  ---

   zbp$idfsize:h.:ZBC3TOU. is referenced
   zbp$numsize:h.:ZBC3TOU. is referenced
   zbp$strsize:h.:ZBC3TOU. is referenced
   alloc:h.:ZBC3TOU. is referenced
   zbp$input:h.:ZBC3TOU. is referenced
   zbp$inputtype:h.:ZBC3TOU. is referenced
   inp_pkg:spec.:ZBC3TOU. is referenced
   zbp$idf:h.:ZBC3TOU. is referenced
   idf_pkg:spec.:ZBC3TOU. is referenced
   zbp$LLlex:h.:ZBC3TOU. is referenced
   zbp$file_info:h.:ZBC3TOU. is referenced
   zbp$Lpars:h.:ZBC3TOU. is referenced
   zbp$class:h.:ZBC3TOU. is referenced
   charoffset:h.:ZBC3TOU. is referenced
   zbp$bits:h.:ZBC3TOU. is referenced
   zbp$dobits:h.:ZBC3TOU. is referenced
   zbp$macro:h.:ZBC3TOU. is referenced
CC.C03    File=zbp$LLlex:c.:ZBC3TSI                                                 Fri Aug 22 1997  Page=23 
   zbp$textsize:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbp$LLlex:c.:ZBC3TSI
