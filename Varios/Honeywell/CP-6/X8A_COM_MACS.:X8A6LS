

09:06 AUG 09 '97 X8A_COM_MACS.:X8A6SI/X8A_COM_MACS.:X8A6TUI                1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      /*  X8A_COM_MACS:   Library and Compiler  common macros             */
    7
    8      %MACRO DESCRIPTOR(LVL=2, ENDING(YES='1'B,NO='0'B)='0'B);
    9
   10          %(LVL) SA     UBIN HALF UNAL, /* STORAGE ADDRESS    */
   11          %(LVL) SA_BIT REDEF SA BIT(18) UNAL, /* FOR BOOLEAN */
   12          %(LVL) SIGNED_SA REDEF SA SBIN HALF UNAL, /* Use carefully!!!   */
   13    *     %(LVL) P      REDEF SA BIT(1) HALIGNED, /* EIS descr. P bit */
   14          %(LVL) DESCL  UBIN HALF UNAL, /* DESCRIPTOR LOWER HALF */
   15
   16          %(LVL) BDSC   REDEF DESCL,    /* BIT DESCRIPTOR     */
   17          %(LVL+1) C      UBIN  (2) UNAL, /* CHARACTER POSITION */
   18          %(LVL+1) B      UBIN  (4) UNAL, /* BIT WITHIN BYTE    */
   19          %(LVL+1) N      UBIN (12) UNAL, /* LENGTH             */
   20          %(LVL) ADSC   REDEF DESCL,    /* ALPHA DESCRIPTOR   */
   21          %(LVL+1) CN     UBIN  (2) UNAL, /* CHARACTER NUMBER   */
   22          %(LVL+1) MBZ1   BIT   (1) UNAL, /* MBZ FOR 9-BIT      */
   23          %(LVL+1) TA     BIT   (2) UNAL, /* TYPE (00 = 9-BIT)  */
   24          %(LVL+1) MBZ2   BIT   (1) UNAL, /* MUST BE ZERO       */
   25          %(LVL+1) N      UBIN (12) UNAL, /* LENGTH             */
   26          %(LVL) NDSC   REDEF DESCL,    /* NUMERIC DESCRIPTOR */
   27          %(LVL+1) CN     UBIN  (3) UNAL, /* CHARACTER NUMBER   */
   28          %(LVL+1) TN     BIT   (1) UNAL, /* 0=9-BIT, 1=4-BIT   */
   29          %(LVL+1) S      BIT   (2) UNAL, /* SIGN: 11=NO-SIGN   */
   30          %(LVL+1) SF     SBIN  (6) UNAL, /* SCALE FACTOR       */
   31          %(LVL+1) N      UBIN  (6) UNAL  /* LENGTH             */
   32                                        %IF ENDING;
   33                                          ;
   34                                        %ELSE;
   35                                          ,
   36                                        %ENDIF;
   37
09:06 AUG 09 '97 X8A_COM_MACS.:X8A6SI/X8A_COM_MACS.:X8A6TUI                2    
   38      %MEND;
   39      %EJECT;

09:06 AUG 09 '97 X8A_COM_MACS.:X8A6SI/X8A_COM_MACS.:X8A6TUI                3    
   40      %MACRO PACK_NDSC ( @DESC    = ,
   41                         @SA      = 0 ,
   42                         @LENGTH  = ,
   43                         @TYPE    = %TYD,
   44                         @SIGN    = ,
   45                         @CN      = 0 ,
   46                         @TN      = %NDSC4 ,
   47                         @SCALE   = 0 );
   48
   49           %ERROR(TEXTCHAR(@DESC) = '','Missing DESC parameter',2);
   50           %ERROR(TEXTCHAR(@LENGTH) = '','Missing LENGTH parameter',2);
   51           %ERROR(TEXTCHAR(@SIGN) = '','Missing SIGN parameter', 2);
   52
   53           DO;
   54             @DESC.SA = @SA;
   55             @DESC.NDSC.CN = @CN;
   56             @DESC.NDSC.TN = @TN;
   57             @DESC.NDSC.S = @SIGN;
   58             @DESC.NDSC.SF = @SCALE;
   59
   60             DO CASE(BITBIN(@SIGN));
   61               CASE(%(BITBIN(%NO_SIGN)));
   62                 @DESC.NDSC.N = @LENGTH;
   63
   64               CASE(%(BITBIN(%TRAILING_SIGN)),%(BITBIN(%LEADING_SIGN)));
   65                 %IF TEXTCHAR(@TYPE) = 'TYO';
   66                   @DESC.NDSC.N = @LENGTH;
   67                 %ELSEIF TEXTCHAR(@TYPE) = 'TYD';
   68                   @DESC.NDSC.N = @LENGTH + 1;
   69                 %ELSEIF TEXTCHAR(@TYPE) = 'TYF' OR TEXTCHAR(@TYPE) = 'TYC';
   70                    IF @TN = %NDSC4 /* Overpunched */ THEN
   71                      @DESC.NDSC.N = @LENGTH;
   72                    ELSE
   73                      @DESC.NDSC.N = @LENGTH + 1;
   74                 %ELSE;
   75                   IF @TYPE = %TYO THEN
   76                     @DESC.NDSC.N = @LENGTH;
09:06 AUG 09 '97 X8A_COM_MACS.:X8A6SI/X8A_COM_MACS.:X8A6TUI                4    
   77                   ELSE IF @TYPE = %TYD THEN
   78                     @DESC.NDSC.N = @LENGTH + 1;
   79                   ELSE IF @TN = %NDSC4 /* Overpunched */ THEN
   80                     @DESC.NDSC.N = @LENGTH;
   81                   ELSE
   82                     @DESC.NDSC.N = @LENGTH + 1;
   83                 %ENDIF;
   84
   85               CASE(%(BITBIN(%FLOATING_POINT_LEADING_SIGN)));
   86                 %IF TEXTCHAR(@TN) ~= 'NDSC4';
   87                   %IF TEXTCHAR(@TN) ~= 'NDSC9';
   88                     IF @TN = %NDSC4 THEN
   89                       @DESC.NDSC.N = @LENGTH + 3;
   90                     ELSE
   91                       @DESC.NDSC.N = @LENGTH + 2;
   92                   %ELSE;
   93                     @DESC.NDSC.N = @LENGTH + 2;
   94                   %ENDIF;
   95                 %ELSE;
   96                   @DESC.NDSC.N = @LENGTH + 3;
   97                 %ENDIF;
   98
   99             END /* Case */;
  100           END;
  101
  102      %MEND;
  103      %EJECT;


