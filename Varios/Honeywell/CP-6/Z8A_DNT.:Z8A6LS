

09:11 AUG 09 '97 Z8A_DNT.:Z8A6SI                                           1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      /* INCLUDE FILE "DNT" (DATA NAME TABLE) */
    7
    8      DCL   DNT$    PTR EXT ;
    9
   10      DCL 1 DNT_    EXT ALIGNED,
   11            2 TOP     PTR INIT (ADDR(NIL)),
   12            2 FIRST   PTR,          /* FIRST ITEM IN PAGE  */
   13            2 BOTTOM  UBIN INIT(0), /* NEXT AVAILABLE WORD */
   14            2 FLOOR   UBIN INIT(0), /* LAST WORD IN PAGE   */
   15            2 SIZE    UBIN INIT(0); /* SIZE IN #PAGES      */
   16
   17      DCL 1 DNT     BASED (DNT$) ALIGNED,
   18            2 ID      UBIN (18) UNAL, /* IDENTIFICATION CODE   */
   19            2 N       UBIN (18) UNAL, /* LENGTH OF ITEM (WORDS)*/
   20            2 ST$     PTR,            /* PTR TO ST ITEM        */
   21            2 NEXT    PTR,            /* NEXT LEXEME FOR HASH */
   22            2 ATTR    BIT (18) UNAL,  /* ATTRIBUTE BITS        */
   23
   24            2 B       REDEF ATTR UNAL,/* IF 1, THEN IT'S A ... */
   25              3 RW             BIT (1), /* RESERVED WORD         */
   26              3 USER_WORD      BIT (1), /* DECLARED-BY-USER WORD */
   27              3 SYSTEM_NAME    BIT (1), /* (ALL 3 MAY BE "ON")   */
   28              3 DUPLICATE      BIT (1), /* MULTI ST ITEMS EXIST  */
   29              3 NUMERIC_LITERAL        BIT (1),
   30              3 REPLACE_TOKEN           BIT(1),
   31              3 ALPHA_LITERAL           BIT (1),
   32              3 FIGURATIVE_CONSTANT     BIT (1),
   33              3 ALL                     BIT (1),
   34              3 VERB                    BIT (1),
   35              3 ACCEPT_AREA_A           BIT (1), /* Allowable in columns 8-11 */
   36              3 ERROR_VARIABLE          BIT (1), /* Created by error recovery */
   37              3 MUST_AREA_A             BIT (1),
09:11 AUG 09 '97 Z8A_DNT.:Z8A6SI                                           2    
   38              3 REP_COUNTER             BIT (1),
   39              3 KANJI                   BIT (1), /* "<KS> ... <KE>" */
   40              3 *                       BIT (3),
   41
   42            2 RW_NO   UBIN (18) UNAL, /* RESERVED WORD #      */
   43            2 TEXT ALIGNED,
   44              3 LENGTH  UBIN (18) UNAL, /* NAME SIZE IN BYTES   */
   45              3 NAME    CHAR (DNT.TEXT.LENGTH) UNAL;
   46
   47
   48
   49      %MACRO RESERVE_DNT (ITEM=%LEXEME, POINTER=DNT$, SIZE=1);
   50
   51             DO ;
   52               ITERATION = (SIZE+21)/4 ;
   53               IF DNT_.BOTTOM + ITERATION >= DNT_.FLOOR THEN
   54                 CALL Z8AR$RESERVER(ADDR(DNT_));
   55               POINTER                  = PINCRW (DNT_.FIRST, DNT_.BOTTOM);
   56               DNT_.BOTTOM              = DNT_.BOTTOM + ITERATION ;
   57               POINTER->DNT.ID          = ITEM ;
   58               POINTER->DNT.N           = ITERATION ;
   59               POINTER->DNT.TEXT.LENGTH = SIZE;
   60             END ;
   61
   62      %MEND ;
   63
   64      %MACRO TOP_DNT (POINTER=DNT$) ;
   65
   66             DO ;
   67               POINTER = DNT_.TOP ;
   68             END ;
   69
   70      %MEND ;
   71
   72      %MACRO STEP_DNT (POINTER=DNT$) ;
   73
   74             DO ;
09:11 AUG 09 '97 Z8A_DNT.:Z8A6SI                                           3    
   75               POINTER = PINCRW (POINTER, POINTER->DNT.N) ;
   76               IF POINTER = PINCRW (DNT_.FIRST, DNT_.BOTTOM) THEN
   77                 POINTER = ADDR(NIL) ;
   78               ELSE
   79                 IF POINTER->DNT.ID = %CONTINUE THEN
   80                   POINTER = POINTER -> CONT.NEXT ;
   81             END ;
   82
   83      %MEND ;
   84
   85      %MACRO DNT_INFO   ( @STNAME            = ,
   86                          @STCLASS           = STATIC,
   87                          @SIZE              = 1);
   88
   89        DCL 1 @STNAME        ALIGNED @STCLASS,
   90            2 ID      UBIN (18) UNAL, /* IDENTIFICATION CODE   */
   91            2 N       UBIN (18) UNAL, /* LENGTH OF ITEM (WORDS)*/
   92            2 ST$     PTR,            /* PTR TO ST ITEM        */
   93            2 NEXT    PTR,            /* NEXT LEXEME FOR HASH */
   94            2 ATTR    BIT (18) UNAL,  /* ATTRIBUTE BITS        */
   95
   96            2 B       REDEF ATTR UNAL,/* IF 1, THEN IT'S A ... */
   97              3 RW             BIT (1), /* RESERVED WORD         */
   98              3 USER_WORD      BIT (1), /* DECLARED-BY-USER WORD */
   99              3 SYSTEM_NAME    BIT (1), /* (ALL 3 MAY BE "ON")   */
  100              3 DUPLICATE      BIT (1), /* MULTI ST ITEMS EXIST  */
  101              3 NUMERIC_LITERAL        BIT (1),
  102              3 REPLACE_TOKEN           BIT(1),
  103              3 ALPHA_LITERAL           BIT (1),
  104              3 FIGURATIVE_CONSTANT     BIT (1),
  105              3 ALL                     BIT (1),
  106              3 VERB                    BIT (1),
  107              3 ACCEPT_AREA_A           BIT (1), /* Allowable in columns 8-11 */
  108              3 ERROR_VARIABLE          BIT (1), /* Created by error recovery */
  109              3 MUST_AREA_A             BIT (1),
  110              3 REP_COUNTER             BIT (1),
  111              3 KANJI                   BIT (1), /* "<KS> ... <KE>" */
09:11 AUG 09 '97 Z8A_DNT.:Z8A6SI                                           4    
  112              3 *                       BIT (3),
  113
  114            2 RW_NO   UBIN (18) UNAL, /* RESERVED WORD #      */
  115            2 TEXT ALIGNED,
  116              3 LENGTH  UBIN (18) UNAL, /* NAME SIZE IN BYTES   */
  117              3 NAME    CHAR (@SIZE) UNAL;
  118
  119
  120      %MEND;
  121
  122      %MACRO NEW_DNT ( @POINTER           = DNT$,
  123                          @SIZE              = 1,
  124                          @NAME              = "' '",
  125                          @ST$               = "ADDR(NIL)",
  126                          @NEXT              = "ADDR(NIL)",
  127                          @RW                (YES='1'B, NO='0'B) = '0'B,
  128                          @USER_WORD         (YES='1'B, NO='0'B) = '0'B,
  129                          @SYSTEM_NAME       (YES='1'B, NO='0'B) = '0'B,
  130                          @DUPLICATE         (YES='1'B, NO='0'B) = '0'B,
  131                          @NUMERIC_LITERAL   (YES='1'B, NO='0'B) = '0'B,
  132                          @REPLACE_TOKEN     (YES='1'B, NO='0'B) = '0'B,
  133                          @ALPHA_LITERAL     (YES='1'B, NO='0'B) = '0'B,
  134                          @FIGURATIVE_CONSTANT(YES='1'B, NO='0'B) = '0'B,
  135                          @ALL               (YES='1'B, NO='0'B) = '0'B,
  136                          @VERB              (YES='1'B, NO='0'B) = '0'B,
  137                          @ACCEPT_AREA_A     (YES='1'B, NO='0'B) = '0'B,
  138                          @ERROR_VARIABLE    (YES='1'B, NO='0'B) = '0'B,
  139                          @MUST_AREA_A       (YES='1'B, NO='0'B) = '0'B,
  140                          @RW_NO             = 0);
  141
  142        %RESERVE_DNT(POINTER = @POINTER,  SIZE = @SIZE);
  143        @POINTER -> DNT.ST$        = @ST$;
  144        @POINTER -> DNT.NEXT       = @NEXT;
  145        @POINTER -> DNT.ATTR       = '0'B;
  146        @POINTER -> DNT.RW_NO      = @RW_NO;
  147        @POINTER -> DNT.TEXT.NAME  = @NAME;
  148
09:11 AUG 09 '97 Z8A_DNT.:Z8A6SI                                           5    
  149        %IF @RW;
  150          @POINTER -> DNT.B.RW = '1'B;
  151        %ENDIF;
  152
  153        %IF @USER_WORD;
  154          @POINTER -> DNT.B.USER_WORD = '1'B;
  155        %ENDIF;
  156
  157        %IF @SYSTEM_NAME;
  158          @POINTER -> DNT.B.SYSTEM_NAME = '1'B;
  159        %ENDIF;
  160
  161        %IF @DUPLICATE;
  162          @POINTER -> DNT.B.DUPLICATE = '1'B;
  163        %ENDIF;
  164
  165        %IF @NUMERIC_LITERAL;
  166          @POINTER -> DNT.B.NUMERIC_LITERAL = '1'B;
  167        %ENDIF;
  168
  169        %IF @REPLACE_TOKEN;
  170          @POINTER -> DNT.B.REPLACE_TOKEN = '1'B;
  171        %ENDIF;
  172
  173        %IF @ALPHA_LITERAL;
  174          @POINTER -> DNT.B.ALPHA_LITERAL = '1'B;
  175        %ENDIF;
  176
  177        %IF @FIGURATIVE_CONSTANT;
  178          @POINTER -> DNT.B.FIGURATIVE_CONSTANT = '1'B;
  179        %ENDIF;
  180
  181        %IF @ALL;
  182          @POINTER -> DNT.B.ALL = '1'B;
  183        %ENDIF;
  184
  185        %IF @VERB;
09:11 AUG 09 '97 Z8A_DNT.:Z8A6SI                                           6    
  186          @POINTER -> DNT.B.VERB = '1'B;
  187        %ENDIF;
  188
  189        %IF @ACCEPT_AREA_A;
  190          @POINTER -> DNT.B.ACCEPT_AREA_A = '1'B;
  191        %ENDIF;
  192
  193        %IF @ERROR_VARIABLE;
  194          @POINTER -> DNT.B.ERROR_VARIABLE = '1'B;
  195        %ENDIF;
  196        %IF @MUST_AREA_A;
  197          @POINTER -> DNT.B.MUST_AREA_A = '1'B;
  198        %ENDIF;
  199
  200      %MEND;
  201
  202
  203
  204
  205      %EQU NOSIGN = '00'B;
  206      %EQU PLUS_SIGN = '01'B;
  207      %EQU MINUS_SIGN = '10'B;
  208
  209      %EQU NUMBER_DNT_BUCKETS = 1129;
  210
  211      %MACRO DEF_BUCKETS;
  212        DCL DNT_BUCKETS (0:%(NUMBER_DNT_BUCKETS-1)) PTR SYMREF;
  213      %MEND;
  214
  215      DCL DNT_BUCKET_NUMBER UBIN WORD EXT;
  216
  217
  218      /* Address of DNT of number '1' -- used for error correction in Z8EL */
  219      DCL DNT_OF_1$ PTR EXT;
  220      %EJECT;


