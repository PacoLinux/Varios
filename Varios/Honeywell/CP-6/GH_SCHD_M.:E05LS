

14:34 JUL 28 '97 GH_SCHD_M.:E05SI                                          1    
    1      /*M* GH_SCHD_M  Macros for FEP Scheduler data */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7
    8                          /*F* NAME: G$USER
    9
   10                          The G$USER macro define the LCP-6 User Table structure.
   11                          The User Table is contained in the BOBCAT data segment.
   12                          The size of the table is specified by the MUIS parameter
   13                          in NETCON.
   14                          */
   15      %MACRO G$USER (FPTN=G$U,STCLASS=BASED);
   16
   17       %LSET LISTDIR='0'B;
   18       %LSET LISTEXP='1'B;
   19       %LSET LISTCOM='0'B;
   20       %LSET LISTSUB='1'B;
   21      DCL 1 FPTN STCLASS ALIGNED,
   22           2 FLG CALIGNED,
   23              3 CPIC BIT(1) UNAL,        /* CP in control */
   24              3 DIC BIT(1) UNAL,         /* DELTA in control */
   25              3 BLK BIT(1) UNAL,         /* Unblock before Block */
   26              3 COBLK BIT(1) UNAL,       /* Communications Unblock Before Block */
   27              3 SCIO BIT(1) UNAL,        /* Communications I/O in progress */
   28              3 WBLK BIT(1) UNAL,        /* Wake up before sleep */
   29              3 * BIT(10) UNAL,
   30           2 ASYNCH BIT(16) CALIGNED,    /* Asynchronous event flags */
   31           2 US UBIN(16) CALIGNED,       /* Users current state */
   32           2 FL UBIN(16) CALIGNED,       /* State queue forward link */
   33           2 BL UBIN(16) CALIGNED,       /* State queue backward link */
   34           2 MISC UBIN(32) CALIGNED,  /* UTS when user state is SW */
   35           2 MISC$ REDEF MISC PTR CALIGNED, /* LDCT$ when G$U.FLG.SCIO */
   36           2 UTS UBIN(32) CALIGNED,      /* Clock event time */
   37           2 CLOCK UBIN(16) CALIGNED,    /* Clock queue link */
14:34 JUL 28 '97 GH_SCHD_M.:E05SI                                          2    
   38           2 PCT UBIN(16) CALIGNED,      /* Page count */
   39           2 MF UBIN BYTE CALIGNED,      /* Master function count */
   40           2 * UBIN BYTE CALIGNED,
   41           2 MODE UBIN BYTE CALIGNED,    /* User mode, as in JIT*/
   42           2 * UBIN BYTE CALIGNED,
   43           2 DL$ PTR CALIGNED,           /* Dolist link pointer    */
   44           2 PRIO UBIN(16) CALIGNED,     /* Current execution priority  */
   45           2 PRIOB UBIN(16) CALIGNED,    /* Base execution priority    */
   46           2 UHJITPP UBIN(32) CALIGNED,  /* UHJIT Phys Pg              */
   47           2 SYSID UBIN(16) CALIGNED,    /* System ID number           */
   48           2 HMI$ PTR CALIGNED,     /* Address of  KNH$HMI */
   49           2 * UBIN(16) CALIGNED,
   50           2 * UBIN(16) CALIGNED;        /* Filler                     */
   51      %MEND;
   52
   53
   54
   55
   56                          /*F* NAME: G_USRFLG_TEXT
   57
   58                          The G_USRFLG_TEXT macro generates the text for the
   59                          bit settings in G$USER.FLG.
   60                          */
   61
   62      %MACRO G_USRFLG_TEXT (NAME=G_USRFLG_TEXT, STCLASS=CONSTANT);
   63
   64      %LSET LISTDIR='0'B;
   65      %LSET LISTEXP='1'B;
   66      %LSET LISTCOM='0'B;
   67      %LSET LISTSUB='1'B;
   68
   69      DCL 1 NAME STCLASS,
   70            2 * CHAR(0) INIT('FLAGS  '),
   71            2 SREST CHAR(0) UNAL INIT('set:     '),
   72            2 * CHAR(0) INIT('%1N(%)'),
   73            2 * CHAR(0) INIT('%1N(CPIC    %)'),
   74            2 * CHAR(0) INIT('%1N(DIC     %)'),
14:34 JUL 28 '97 GH_SCHD_M.:E05SI                                          3    
   75            2 * CHAR(0) INIT('%1N(BLK     %)'),
   76            2 * CHAR(0) INIT('%1N(COBLK   %)'),
   77            2 * CHAR(0) INIT('%1N(SCIO    %)'),
   78            2 * CHAR(0) INIT('%1N(WU_BBLK %)'),
   79            2 * CHAR(0) INIT('%S');
   80      %MEND;
   81
   82
   83
   84
   85
   86                          /*F* NAME: G_ASYNC_TEXT
   87
   88                          The G_ASYNC_TEXT macro generates the text for the
   89                          bit settings in G$USER.ASYNC.
   90                          */
   91
   92      %MACRO G_ASYNC_TEXT (NAME=G_ASYNC_TEXT, STCLASS=CONSTANT);
   93
   94      %LSET LISTDIR='0'B;
   95      %LSET LISTEXP='1'B;
   96      %LSET LISTCOM='0'B;
   97      %LSET LISTSUB='1'B;
   98
   99      DCL 1 NAME STCLASS,
  100            2 * CHAR(0) INIT('ASYNC  '),
  101            2 SREST CHAR(0) UNAL INIT('set:     '),
  102            2 * CHAR(0) INIT('%1N(%)'),
  103            2 * CHAR(0) INIT('%1N(Abt_key %)'),
  104            2 * CHAR(0) INIT('%1N(Err_key %)'),
  105            2 * CHAR(0) INIT('%1N(Brk     %)'),
  106            2 * CHAR(0) INIT('%1N(YC      %)'),
  107            2 * CHAR(0) INIT('%1N(Alib_FD %)'),
  108            2 * CHAR(0) INIT('%1N(DSC     %)'),
  109            2 * CHAR(0) INIT('%1N(Fepcrsh %)'),
  110            2 * CHAR(0) INIT('%1N(Intabrt %)'),
  111            2 * CHAR(0) INIT('%S');
14:34 JUL 28 '97 GH_SCHD_M.:E05SI                                          4    
  112      %MEND;
  113
  114                          /*F* NAME: G$DO
  115
  116                          The G$DO macro define the LCP-6 DO List structure.
  117                          The DO LIST is contained in the BOBCAT data segment.
  118                          There is one DO List entry allocated for each user
  119                          table entry, so the size of the table is specified via
  120                          the MUIS parameter in NETCON.
  121                          */
  122      %MACRO G$DO (FPTN=G$DO,STCLASS=BASED);
  123
  124       %LSET LISTDIR='0'B;
  125       %LSET LISTEXP='1'B;
  126       %LSET LISTCOM='0'B;
  127       %LSET LISTSUB='1'B;
  128
  129      DCL 1 FPTN STCLASS CALIGNED,
  130           2 LNK$ PTR CALIGNED,                   /* Link to next entry */
  131      %IF NOT(MODE_FEP);
  132           2 * BIT(1) UNAL,
  133      %ENDIF;
  134           2 BUSY BIT(1) UNAL,           /* True if not ready to dispatch */
  135           2 CONT BIT(1) UNAL,           /* True if data continued in next*/
  136           2 SCHDDO BIT(1) UNAL,         /* True if INITDO/SCHDDO         */
  137           2 SAVE BIT(1) UNAL,           /* Don't dispatch if no user     */
  138           2 * BIT(4) UNAL,
  139           2 DMAIN UBIN BYTE CALIGNED,        /* Domain of receiver            */
  140           2 ENTER EPTR CALIGNED,                 /* Monitor event procedure entry */
  141           2 ECCSC UBIN BYTE CALIGNED,        /* ECC Subcode for EXC frame     */
  142           2 * UBIN BYTE CALIGNED,
  143           2 EVID UBIN BYTE CALIGNED,    /* Event identifier              */
  144      %IF MODE_FEP;
  145           %VLP_ERRCODE (FPTN=ERRC,STCLASS=STCLASS,LVL=2,LAST=",");
  146      %ELSE;
  147             2 ERR CALIGNED,
  148               3 FCG BIT(12) UNAL,
14:34 JUL 28 '97 GH_SCHD_M.:E05SI                                          5    
  149               3 MID BIT(6) UNAL,
  150               3 MON BIT(1) UNAL,
  151               3 ERR# UBIN(14) UNAL,
  152               3 SEV UBIN(3) UNAL,
  153      %ENDIF;
  154           2 ECCSZ UBIN(16) CALIGNED,    /* Number of words following     */
  155           2 ECCINFO(0:5) UBIN(16) CALIGNED; /* Event data                    */
  156      %MEND;
  157
  158                          /*F* NAME: G$DOCONT
  159
  160                          The G$DOCONT macro define the format of a continued
  161                          LCP-6 DO List structure.
  162                          */
  163      %MACRO G$DOCONT (FPTN=G$DOCONT,STCLASS=BASED);
  164
  165       %LSET LISTDIR='0'B;
  166       %LSET LISTEXP='1'B;
  167       %LSET LISTCOM='0'B;
  168       %LSET LISTSUB='1'B;
  169      DCL 1 FPTN STCLASS ALIGNED,
  170           2 LNK$ PTR,                   /* Link to nexr entry            */
  171           2 BUSY BIT(1) UNAL,
  172           2 CONT BIT(1) UNAL,
  173           2 * BIT(14) UNAL,
  174           2 ECCINFO(0:11) UBIN;
  175      %MEND;
  176
  177
  178                          /*F* NAME: G_EVBUF
  179
  180                          The G_EVBUF macro generates the structure
  181                          for an entry in the schedulers's Event Buffer.
  182                          */
  183
  184      %MACRO G_EVBUF (FPTN=G_EVBUF, STCLASS=CONSTANT);
  185
14:34 JUL 28 '97 GH_SCHD_M.:E05SI                                          6    
  186      %LSET LISTDIR='0'B;
  187      %LSET LISTEXP='1'B;
  188      %LSET LISTCOM='0'B;
  189      %LSET LISTSUB='1'B;
  190
  191      DCL 1 FPTN STCLASS,
  192            2 USR UBIN BYTE CALIGNED,
  193            2 EVENT UBIN BYTE CALIGNED,
  194            2 STATE UBIN BYTE CALIGNED,
  195            2 PORT  UBIN BYTE CALIGNED,
  196            2 TIME UBIN(32) CALIGNED;
  197      %MEND;
  198
  199
  200
  201                          /*F* NAME: GH$TMR_BLK
  202
  203                          The GH$TMR_BLK macro generates the structure
  204                          for a monitor timer block.
  205
  206                          A timer block is to be initialized by the routine
  207                          making the GHS$SET_TMR request as follows:
  208                          */
  209
  210      %MACRO GH$TMR_BLK (FPTN=GH$TMR_BLK, STCLASS=BASED, ALGN=ALIGNED, LVL=1,
  211                         LAST(YES=";",NO=",",ANY)=";",
  212                         PROC$=NIL, ARG=0, INTERVAL=0);
  213
  214       %LSET LISTDIR='0'B;
  215       %LSET LISTEXP='1'B;
  216       %LSET LISTCOM='0'B;
  217       %LSET LISTSUB='1'B;
  218
  219      %LSET STR=SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
  220      %IF (STR='STA') OR (STR='CON') OR STR = 'EXT';
  221      %LSET INIT=CHARTEXT('INIT');
  222      %LSET EINIT=CHARTEXT('');
14:34 JUL 28 '97 GH_SCHD_M.:E05SI                                          7    
  223      %ELSE;
  224      %LSET INIT=CHARTEXT('/*');
  225      %LSET EINIT=CHARTEXT('*/');
  226      %ENDIF;
  227
  228      %IF LVL=1;
  229      DCL 1 FPTN STCLASS ALGN,
  230      %ELSE;
  231            %(LVL) FPTN ALGN,
  232      %ENDIF;
  233             %(LVL+1) %CHARTEXT('PROC$') EPTR CALIGNED %INIT(ENTADDR(PROC$))%EINIT,
  234                          /*K* PROC$ - EPTR.
  235                          Specifies the procedure to be entered when the
  236                          clock expires.
  237                          */
  238            %(LVL+1) %CHARTEXT('ARG') UBIN(16) CALIGNED %INIT(ARG)%EINIT,
  239            %(LVL+1) CLOCK_ID REDEF %CHARTEXT('ARG'),
  240                     %(LVL+2) TCTX UBIN(8) CALIGNED,
  241                     %(LVL+2) TMR UBIN(8) CALIGNED,
  242                          /*K* ARG - UBIN.
  243                          Specifies the argument to be passed on the call
  244                          to PROC$.
  245                          */
  246            %(LVL+1) %CHARTEXT('INTERVAL') UBIN(16) CALIGNED %INIT(INTERVAL)%EINIT,
  247                          /*K* INTERVAL - UBIN.
  248                          Specifies the time interval from the current time
  249                          when the specified procedure is to be called.
  250                          Interval is to be expressed in TICS (.133 seconds).
  251                          */
  252            %(LVL+1) WAKEUP UBIN(32) CALIGNED %INIT(0)%EINIT,
  253            %(LVL+1) FLINK$ PTR CALIGNED %INIT(ADDR(NIL))%EINIT,
  254            %(LVL+1) BLINK$ PTR CALIGNED %INIT(ADDR(NIL))%EINIT LAST
  255      %MEND;
  256
  257
  258                          /*F* NAME: G_STTTXT
  259
14:34 JUL 28 '97 GH_SCHD_M.:E05SI                                          8    
  260                          The G_STTTXT macro generates the TEXT for the
  261                          various scheduler states.
  262                          */
  263
  264      %MACRO G_STTTXT (NAME=G_STTTXT,STCLASS=CONSTANT);
  265
  266      %LSET LISTDIR='0'B;
  267      %LSET LISTEXP='1'B;
  268      %LSET LISTCOM='0'B;
  269      %LSET LISTSUB='1'B;
  270      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  271      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  272      %LSET INIT=CHARTEXT('INIT');
  273      %LSET EINIT=CHARTEXT('');
  274      %ELSE;
  275      %LSET INIT=CHARTEXT('/*');
  276      %LSET EINIT=CHARTEXT('*/');
  277      %ENDIF;
  278
  279      DCL NAME(0:31) CHAR(4) STCLASS %INIT(
  280            '    ',
  281            'SC1 ',
  282            'SC2 ',
  283            'SC3 ',
  284            'SC4 ',
  285            'SC5 ',
  286            'SC6 ',
  287            'SC7 ',
  288            'SC8 ',
  289            'SC9 ',
  290            'SC10',
  291            'SC11',
  292            'SCU ',
  293            'SIOW',
  294            'SW  ',
  295            'SQFI',
  296            'SMEM',
14:34 JUL 28 '97 GH_SCHD_M.:E05SI                                          9    
  297            'SMF ',
  298            'ILGL',
  299            'SQA ',
  300            'SQFP',
  301            'SCOB',
  302            'SCI ',
  303            'SCW ',
  304            'ILGL','ILGL','ILGL','ILGL','ILGL','ILGL','ILGL',
  305            'SNUL') %EINIT;
  306      %MEND;
  307
  308
  309
  310
  311                          /*F* NAME: G_EVENT_TXT
  312
  313                          The G_EVENT_TXT macro generates the TEXT for
  314                          the LCP-6 Scheduler events.
  315                          */
  316
  317      %MACRO G_EVENT_TXT (NAME=G_EVENT_TXT, STCLASS=CONSTANT);
  318
  319      %LSET LISTDIR='0'B;
  320      %LSET LISTEXP='1'B;
  321      %LSET LISTCOM='0'B;
  322      %LSET LISTSUB='1'B;
  323      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  324      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  325      %LSET INIT=CHARTEXT('INIT');
  326      %LSET EINIT=CHARTEXT('');
  327      %ELSE;
  328      %LSET INIT=CHARTEXT('/*');
  329      %LSET EINIT=CHARTEXT('*/');
  330      %ENDIF;
  331
  332      DCL NAME(0:39) CHAR(6) STCLASS %INIT(
  333          '  0   ',
14:34 JUL 28 '97 GH_SCHD_M.:E05SI                                          10   
  334          'SLEEP ',
  335          'WAKEUP',
  336          'QFI   ',
  337          'UNQ   ',
  338          'IO_IP ',
  339          'IOCOMP',
  340          'MEM   ',
  341          'MEMAV ',
  342          'BREAK ',
  343          'YC    ',
  344          'PARK  ',
  345          'NEWUSR',
  346          'QA    ',
  347          'UQA   ',
  348          'IOCUNB',
  349          'QFPROC',
  350          'UQFPRC',
  351          'ALIBFD',
  352          'WAKEFD',
  353          'DELUSR',
  354          'CW    ',
  355          'CRD   ',
  356          'CIC   ',
  357          'CICCU ',
  358          'CBL   ',
  359          'CUB   ',
  360          'CUBEX ',
  361          'CBK   ',
  362          'CBKEX ',
  363          'CEC   ',
  364          'CECEX ',
  365          'DSC   ',
  366          'DSCEX ',
  367          'CRASH ',
  368          'ERR   ',
  369          'ERREX ',
  370          'ABRT  ',
14:34 JUL 28 '97 GH_SCHD_M.:E05SI                                          11   
  371          'ABRTEX',
  372          '  ??  ') %EINIT;
  373      %MEND;
  374
  375
  376
  377
  378
  379                          /*F* NAME: G_INTRVL_TXT
  380
  381                          The G_INTRVL_TXT macro generates the TEXT for
  382                          the interval type code that is maintained in the
  383                          LCP-6 Monitor's HJIT.
  384                          */
  385
  386      %MACRO G_INTRVL_TXT (NAME=G_INTRVL_TXT, STCLASS=CONSTANT);
  387
  388      %LSET LISTDIR='0'B;
  389      %LSET LISTEXP='1'B;
  390      %LSET LISTCOM='0'B;
  391      %LSET LISTSUB='1'B;
  392      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  393      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  394      %LSET INIT=CHARTEXT('INIT');
  395      %LSET EINIT=CHARTEXT('');
  396      %ELSE;
  397      %LSET INIT=CHARTEXT('/*');
  398      %LSET EINIT=CHARTEXT('*/');
  399      %ENDIF;
  400
  401      DCL NAME(0:3) CHAR(20) STCLASS %INIT(
  402          '0 - User Execution  ',
  403          '1 - User Service    ',
  404          '2 - Mon Execution   ',
  405          '3 - Idle            ') %EINIT;
  406      %MEND;

