VERSION E05

PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:1    
        1        1        /*M* FMC$CACHE - File caching system                                          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*F*     NAME:     FMC$CACHE
        9        9                 PURPOSE:  To cache heavily used disk granules and to share
       10       10                           shared granules in memory.
       11       11                 DESCRIPTION:
       12       12
       13       13                      When the system starts up the user specifies a portion
       14       14                 of the TIGR data area to be used for the cache table.
       15       15                 Ideally, this table should contain entries for all granules
       16       16                 that are in use in the system as well as the granules that
       17       17                 we are caching.  Cached granules are granules that are in
       18       18                 memory but no one is currently using.  There is no set
       19       19                 limit on the number of granules that are cached.  We will
       20       20                 just get pages until memory management asks for them back.
       21       21
       22       22                      When a user wants to read a granule we always consult
       23       23                 the cache table.  If the granule is in the cache table, then
       24       24                 we just map this user onto the page of memory.  If it is not
       25       25                 in the cache table, then we will read the granule, and then
       26       26                 attempt to put the granule into the cache table.
       27       27
       28       28        */
       29       29                 %EJECT;
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:2    
       30       30        /*D*     NAME:     FMC$ADD
       31       31                 PARAMETERS:
       32       32                      HASH - The cache table entry that we want to add to
       33       33                             the linked list.
       34       34
       35       35                 External Procedures:
       36       36                      SSS$SYSTIME - Get the current UTS
       37       37
       38       38                 DESCRIPTION:
       39       39
       40       40                      When no one is currently using a granule that is still
       41       41                 being cached, then we add this granule to a linked list.
       42       42                 This linked list is ordered from oldest to newest, so we
       43       43                 can easily release the oldest pages of memory when memory
       44       44                 management wants them back.
       45       45
       46       46                      We link the granule onto the end of the cache table,
       47       47                 and set the time.  Then we increment the number of pages
       48       48                 that we have cached for memory management's use.
       49       49        */
       50       50                 %EJECT;
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:3    
       51       51        FMC$ADD: PROC(HASH);
       52       52    1          DCL HASH SBIN;
       53       53        /* */
       54       54               %INCLUDE FM_CACHE_R;
       55       66               %INCLUDE FM_CACHE_C;
       56      132               %FMC$CACHE(ARRAY=YES);
       57      155               %FMC$TYPTBL;
       58      160               %FMC$STATS;
       59      169        /* */
       60      170    1          DCL BLINK SBIN;
       61      171    1          DCL FLINK SBIN;
       62      172    1          DCL CURTIME UBIN;
       63      173    1          DCL TYPE SBIN;
       64      174        /* */
       65      175    1          DCL SSS$SYSTIME ENTRY(1);
       66      176    1          DCL SC_FMC96 ENTRY CONV(2, 0);
       67      177        /* */
       68      178    1          TYPE=FMC$CACHETBL.TYPE(HASH);
       69      179
       70      180    1          BLINK=FMC$TYPTBL.NEWEST(TYPE);
       71      181    1          FLINK=FMC$TYPTBL.OLDEST(TYPE);
       72      182
       73      183    1          IF BLINK ~= 0 THEN
       74      184    1             IF TYPE ~= FMC$CACHETBL.TYPE(BLINK) THEN
       75      185    1                CALL SC_FMC96;
       76      186    1          IF FLINK ~= 0 THEN
       77      187    1             IF TYPE ~= FMC$CACHETBL.TYPE(FLINK) THEN
       78      188    1                CALL SC_FMC96;
       79      189    1          IF BLINK=HASH THEN
       80      190    1             CALL SC_FMC96;
       81      191
       82      192        /*S*   SCREECH_CODE: FMC-S$FM96
       83      193               TYPE:  SCREECH
       84      194               MESSAGE: Anomaly detected in I/O cache tables
       85      195               DESCRIPTION:  A problem has been detected in a cache free chain. */
       86      196
       87      197    1          FMC$CACHETBL.FLINK(HASH)=0;
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:4    
       88      198    1          FMC$CACHETBL.BLINK(HASH)=BLINK;
       89      199    1          CALL SSS$SYSTIME(CURTIME);
       90      200    1          FMC$CACHETBL.AGE(HASH)=CURTIME;
       91      201
       92      202    1          FMC$CACHETBL.FLINK(BLINK)=HASH;
       93      203    1          FMC$TYPTBL.NEWEST(TYPE)=HASH;
       94      204
       95      205    1          IF FMC$TYPTBL.OLDEST(TYPE) = 0 THEN
       96      206    1             FMC$TYPTBL.OLDEST(TYPE)=HASH;
       97      207
       98      208    1          FMC$CACHEPGCNT=FMC$CACHEPGCNT+1;
       99      209    1          FMC$STATS.UNUSED(TYPE)=FMC$STATS.UNUSED(TYPE)+1;
      100      210
      101      211    1          RETURN;
      102      212    1          END FMC$ADD;
      103      213               %EOD;

PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:5    
--  Include file information  --

   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$ADD.

   Procedure FMC$ADD requires 95 words for executable code.
   Procedure FMC$ADD requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:6    

 Object Unit name= FMC$ADD                                    File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:38:59.40 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    95    137  FMC$ADD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMC$ADD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 SSS$SYSTIME
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_FMC96                              FMC_CACHE$                            FMC_TYPTBL$
     FMC_STATS$                            FMC_CACHEPGCNT$                       B_VECTNIL
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:7    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:8    


        1        1        /*M* FMC$CACHE - File caching system                                          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*F*     NAME:     FMC$CACHE
        9        9                 PURPOSE:  To cache heavily used disk granules and to share
       10       10                           shared granules in memory.
       11       11                 DESCRIPTION:
       12       12
       13       13                      When the system starts up the user specifies a portion
       14       14                 of the TIGR data area to be used for the cache table.
       15       15                 Ideally, this table should contain entries for all granules
       16       16                 that are in use in the system as well as the granules that
       17       17                 we are caching.  Cached granules are granules that are in
       18       18                 memory but no one is currently using.  There is no set
       19       19                 limit on the number of granules that are cached.  We will
       20       20                 just get pages until memory management asks for them back.
       21       21
       22       22                      When a user wants to read a granule we always consult
       23       23                 the cache table.  If the granule is in the cache table, then
       24       24                 we just map this user onto the page of memory.  If it is not
       25       25                 in the cache table, then we will read the granule, and then
       26       26                 attempt to put the granule into the cache table.
       27       27
       28       28        */
       29       29                 %EJECT;
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:9    
       30       30        /*D*     NAME:     FMC$ADD
       31       31                 PARAMETERS:
       32       32                      HASH - The cache table entry that we want to add to
       33       33                             the linked list.
       34       34
       35       35                 External Procedures:
       36       36                      SSS$SYSTIME - Get the current UTS
       37       37
       38       38                 DESCRIPTION:
       39       39
       40       40                      When no one is currently using a granule that is still
       41       41                 being cached, then we add this granule to a linked list.
       42       42                 This linked list is ordered from oldest to newest, so we
       43       43                 can easily release the oldest pages of memory when memory
       44       44                 management wants them back.
       45       45
       46       46                      We link the granule onto the end of the cache table,
       47       47                 and set the time.  Then we increment the number of pages
       48       48                 that we have cached for memory management's use.
       49       49        */
       50       50                 %EJECT;
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:10   
       51       51        FMC$ADD: PROC(HASH);

     51  0 000000   000000 700200 xent  FMC$ADD      TSX0  ! X66_AUTO_1
         0 000001   000012 000001                    ZERO    10,1

       52       52    1          DCL HASH SBIN;
       53       53        /* */
       54       54               %INCLUDE FM_CACHE_R;
       55       66               %INCLUDE FM_CACHE_C;
       56      132               %FMC$CACHE(ARRAY=YES);
       57      155               %FMC$TYPTBL;
       58      160               %FMC$STATS;
       59      169        /* */
       60      170    1          DCL BLINK SBIN;
       61      171    1          DCL FLINK SBIN;
       62      172    1          DCL CURTIME UBIN;
       63      173    1          DCL TYPE SBIN;
       64      174        /* */
       65      175    1          DCL SSS$SYSTIME ENTRY(1);
       66      176    1          DCL SC_FMC96 ENTRY CONV(2, 0);
       67      177        /* */
       68      178    1          TYPE=FMC$CACHETBL.TYPE(HASH);

    178  0 000002   200003 470500                    LDP0    @HASH,,AUTO
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   000006 402007                    MPY     6,DL
         0 000005   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000006   100000 236106                    LDQ     0,QL,PR1
         0 000007   000033 772000                    QRL     27
         0 000010   200007 756100                    STQ     TYPE,,AUTO

       69      179
       70      180    1          BLINK=FMC$TYPTBL.NEWEST(TYPE);

    180  0 000011   200007 235100                    LDA     TYPE,,AUTO
         0 000012   000001 735000                    ALS     1
         0 000013   000000 473400 xsym               LDP3    FMC_TYPTBL$
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:11   
         0 000014   300001 235105                    LDA     1,AL,PR3
         0 000015   200004 755100                    STA     BLINK,,AUTO

       71      181    1          FLINK=FMC$TYPTBL.OLDEST(TYPE);

    181  0 000016   200007 235100                    LDA     TYPE,,AUTO
         0 000017   000001 735000                    ALS     1
         0 000020   300000 235105                    LDA     0,AL,PR3
         0 000021   200005 755100                    STA     FLINK,,AUTO

       72      182
       73      183    1          IF BLINK ~= 0 THEN

    183  0 000022   200004 235100                    LDA     BLINK,,AUTO
         0 000023   000034 600000 0                  TZE     s:186

       74      184    1             IF TYPE ~= FMC$CACHETBL.TYPE(BLINK) THEN

    184  0 000024   200004 236100                    LDQ     BLINK,,AUTO
         0 000025   000006 402007                    MPY     6,DL
         0 000026   100000 236106                    LDQ     0,QL,PR1
         0 000027   000033 772000                    QRL     27
         0 000030   200007 116100                    CMPQ    TYPE,,AUTO
         0 000031   000034 600000 0                  TZE     s:186

       75      185    1                CALL SC_FMC96;

    185  0 000032   000000 713400 xsym               CLIMB   SC_FMC96
         0 000033   000000 600000 xsid               climb   nvectors=         0

       76      186    1          IF FLINK ~= 0 THEN

    186  0 000034   200005 235100                    LDA     FLINK,,AUTO
         0 000035   000047 600000 0                  TZE     s:189

       77      187    1             IF TYPE ~= FMC$CACHETBL.TYPE(FLINK) THEN

PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:12   
    187  0 000036   200005 236100                    LDQ     FLINK,,AUTO
         0 000037   000006 402007                    MPY     6,DL
         0 000040   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000041   000000 236106                    LDQ     0,QL,PR0
         0 000042   000033 772000                    QRL     27
         0 000043   200007 116100                    CMPQ    TYPE,,AUTO
         0 000044   000047 600000 0                  TZE     s:189

       78      188    1                CALL SC_FMC96;

    188  0 000045   000000 713400 xsym               CLIMB   SC_FMC96
         0 000046   000000 600000 xsid               climb   nvectors=         0

       79      189    1          IF BLINK=HASH THEN

    189  0 000047   200003 470500                    LDP0    @HASH,,AUTO
         0 000050   200004 236100                    LDQ     BLINK,,AUTO
         0 000051   000000 116100                    CMPQ    0,,PR0
         0 000052   000055 601000 0                  TNZ     s:197

       80      190    1             CALL SC_FMC96;

    190  0 000053   000000 713400 xsym               CLIMB   SC_FMC96
         0 000054   000000 600000 xsid               climb   nvectors=         0

       81      191
       82      192        /*S*   SCREECH_CODE: FMC-S$FM96
       83      193               TYPE:  SCREECH
       84      194               MESSAGE: Anomaly detected in I/O cache tables
       85      195               DESCRIPTION:  A problem has been detected in a cache free chain. */
       86      196
       87      197    1          FMC$CACHETBL.FLINK(HASH)=0;

    197  0 000055   200003 470500                    LDP0    @HASH,,AUTO
         0 000056   000000 236100                    LDQ     0,,PR0
         0 000057   000006 402007                    MPY     6,DL
         0 000060   000000 220003                    LDX0    0,DU
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:13   
         0 000061   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000062   100001 740106                    STX0    1,QL,PR1

       88      198    1          FMC$CACHETBL.BLINK(HASH)=BLINK;

    198  0 000063   000000 236100                    LDQ     0,,PR0
         0 000064   000006 402007                    MPY     6,DL
         0 000065   200004 721100                    LXL1    BLINK,,AUTO
         0 000066   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000067   100001 441106                    SXL1    1,QL,PR1

       89      199    1          CALL SSS$SYSTIME(CURTIME);

    199  0 000070   200006 631500                    EPPR1   CURTIME,,AUTO
         0 000071   200010 451500                    STP1    TYPE+1,,AUTO
         0 000072   200010 630500                    EPPR0   TYPE+1,,AUTO
         0 000073   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000074   000000 701000 xent               TSX1    SSS$SYSTIME
         0 000075   000000 011000                    NOP     0

       90      200    1          FMC$CACHETBL.AGE(HASH)=CURTIME;

    200  0 000076   200003 470500                    LDP0    @HASH,,AUTO
         0 000077   000000 236100                    LDQ     0,,PR0
         0 000100   000006 402007                    MPY     6,DL
         0 000101   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000102   200006 235100                    LDA     CURTIME,,AUTO
         0 000103   100005 755106                    STA     5,QL,PR1

       91      201
       92      202    1          FMC$CACHETBL.FLINK(BLINK)=HASH;

    202  0 000104   200004 236100                    LDQ     BLINK,,AUTO
         0 000105   000006 402007                    MPY     6,DL
         0 000106   000000 720100                    LXL0    0,,PR0
         0 000107   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000110   100001 740106                    STX0    1,QL,PR1
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:14   

       93      203    1          FMC$TYPTBL.NEWEST(TYPE)=HASH;

    203  0 000111   200007 235100                    LDA     TYPE,,AUTO
         0 000112   000001 735000                    ALS     1
         0 000113   000000 620005                    EAX0    0,AL
         0 000114   000000 235100                    LDA     0,,PR0
         0 000115   000000 471400 xsym               LDP1    FMC_TYPTBL$
         0 000116   100001 755110                    STA     1,X0,PR1

       94      204
       95      205    1          IF FMC$TYPTBL.OLDEST(TYPE) = 0 THEN

    205  0 000117   200007 235100                    LDA     TYPE,,AUTO
         0 000120   000001 735000                    ALS     1
         0 000121   000000 471400 xsym               LDP1    FMC_TYPTBL$
         0 000122   100000 235105                    LDA     0,AL,PR1
         0 000123   000131 601000 0                  TNZ     s:208

       96      206    1             FMC$TYPTBL.OLDEST(TYPE)=HASH;

    206  0 000124   200007 235100                    LDA     TYPE,,AUTO
         0 000125   000001 735000                    ALS     1
         0 000126   000000 620005                    EAX0    0,AL
         0 000127   000000 235100                    LDA     0,,PR0
         0 000130   100000 755110                    STA     0,X0,PR1

       97      207
       98      208    1          FMC$CACHEPGCNT=FMC$CACHEPGCNT+1;

    208  0 000131   000000 471400 xsym               LDP1    FMC_CACHEPGCNT$
         0 000132   100000 054100                    AOS     0,,PR1

       99      209    1          FMC$STATS.UNUSED(TYPE)=FMC$STATS.UNUSED(TYPE)+1;

    209  0 000133   000000 471400 xsym               LDP1    FMC_STATS$
         0 000134   200007 720100                    LXL0    TYPE,,AUTO
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:15   
         0 000135   100067 054110                    AOS     55,X0,PR1

      100      210
      101      211    1          RETURN;

    211  0 000136   000000 702200 xent               TSX2  ! X66_ARET
      102      212    1          END FMC$ADD;
      103      213               %EOD;

PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:16   
--  Include file information  --

   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$ADD.
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:17   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @HASH                      4-0-0/w SBIN        r     1 BLINK
     6-0-0/w UBIN        r     1 CURTIME                    5-0-0/w SBIN        r     1 FLINK
    *0-0-0/w SBIN        r     1 HASH                       7-0-0/w SBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 FMC_CACHE$                 0-0-0/w PTR         r     1 FMC_CACHEPGCNT$
     0-0-0/w PTR         r     1 FMC_STATS$                 0-0-0/w PTR         r     1 FMC_TYPTBL$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 FMC$CACHEPGCNT
     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(2376)  r     1 FMC$STATS
     0-0-0/w STRC(72)    r     1 FMC$TYPTBL(0:10)


   Procedure FMC$ADD requires 95 words for executable code.
   Procedure FMC$ADD requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:18   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:19   
          MINI XREF LISTING

BLINK
       170**DCL       180<<ASSIGN    183>>IF        184>>IF        189>>IF        198>>ASSIGN    202>>ASSIGN
CURTIME
       172**DCL       199<>CALL      200>>ASSIGN
FLINK
       171**DCL       181<<ASSIGN    186>>IF        187>>IF
FMC$CACHEPGCNT
        63**DCL       208<<ASSIGN    208>>ASSIGN
FMC$CACHETBL.AGE
       153**DCL       200<<ASSIGN
FMC$CACHETBL.BLINK
       141**DCL       198<<ASSIGN
FMC$CACHETBL.FLINK
       140**DCL       197<<ASSIGN    202<<ASSIGN
FMC$CACHETBL.TYPE
       138**DCL       178>>ASSIGN    184>>IF        187>>IF
FMC$STATS.UNUSED
       167**DCL       209<<ASSIGN    209>>ASSIGN
FMC$TYPTBL.NEWEST
       158**DCL       180>>ASSIGN    203<<ASSIGN
FMC$TYPTBL.OLDEST
       157**DCL       181>>ASSIGN    205>>IF        206<<ASSIGN
FMC_CACHE$
        62**DCL       134--IMP-PTR   178>>ASSIGN    184>>IF        187>>IF        197>>ASSIGN    198>>ASSIGN
       200>>ASSIGN    202>>ASSIGN
FMC_CACHEPGCNT$
        63**DCL        63--IMP-PTR    63--REDEF     208>>ASSIGN    208>>ASSIGN
FMC_STATS$
        62**DCL       161--IMP-PTR   209>>ASSIGN    209>>ASSIGN
FMC_TYPTBL$
        62**DCL       156--IMP-PTR   180>>ASSIGN    181>>ASSIGN    203>>ASSIGN    205>>IF        206>>ASSIGN
HASH
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:20   
        52**DCL        51--PROC      178>>ASSIGN    189>>IF        197>>ASSIGN    198>>ASSIGN    200>>ASSIGN
       202>>ASSIGN    203>>ASSIGN    206>>ASSIGN
SC_FMC96
       176**DCL-ENT   185--CALL      188--CALL      190--CALL
SSS$SYSTIME
       175**DCL-ENT   199--CALL
TYPE
       173**DCL       178<<ASSIGN    180>>ASSIGN    181>>ASSIGN    184>>IF        187>>IF        203>>ASSIGN
       205>>IF        206>>ASSIGN    209>>ASSIGN    209>>ASSIGN
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:21   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMC$ADD File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:38 Page:22   
              MINI UREF LISTING

FMC$ADD      51**PROC
FMC_CACHEPGCNT      63**DCL
FMC_CACHEPGCNT$R      63**DCL
FMC_CACHESIZ      62**DCL
FMC_CACHESIZN      62**DCL
FMC_LOCK      64**DCL
FMC_MASK      64**DCL
FMC_MASKTBL      64**DCL

PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:23   
      104        1        /*T***********************************************************/
      105        2        /*T*                                                         */
      106        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      107        4        /*T*                                                         */
      108        5        /*T***********************************************************/
      109        6        /*D*     NAME:     FMC$CLRFILE
      110        7                 PURPOSE:  To clear out all DAs associated with a file,
      111        8                           except for the FIT.
      112        9
      113       10                 INPUT:    DA (FMC$CLR1 and FMC$CLR1EXT)
      114       11                 OUTPUT:   The entries associated with the cache are cleared
      115       12                           out.
      116       13
      117       14                 DESCRIPTION:
      118       15
      119       16                 Loop through the CFU extent list searching for all of the
      120       17                 extents associated with the file.  The loop through the
      121       18                 extent, calling CHECK_CACHE to clear out the SRDAs.
      122       19        */
      123       20               %EJECT;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:24   
      124       21        FMC$CLRFILE: PROC(PRAM);
      125       22    1          DCL PRAM(0:1) UBIN;
      126       23        /* */
      127       24               %INCLUDE FM_CACHE_R;
      128       36               %INCLUDE FM_CACHE_C;
      129      102               %INCLUDE FM_DATA_R;
      130      116               %INCLUDE P_PMDAT_R;
      131      424               %INCLUDE FM$FIT;
      132      645               %INCLUDE FM$CFU;
      133      690               %INCLUDE HF_LOCK_C;
      134      704               %INCLUDE B$JIT;
      135     1307               %MACRO F$DCB(BASED=BASED);
      136     1308               %INCLUDE F$DCB;
      137     1357               %MEND;
      138     1358        /* */
      139     1359    1          DCL B$JIT$ PTR SYMREF;
      140     1360        /* */
      141     1361               %F$DCB;
      142     1411               %CODE01(BASED="BASED(EXT$)");
      143     1415               %FM$FIT(BASED="BASED(FPTR$)");
      144     1418               %FMC$CACHE;
      145     1441               %FM$CFU;
      146     1447        /* */
      147     1448    1          DCL FPTR UBIN;
      148     1449    1          DCL FPTR$ REDEF FPTR PTR;
      149     1450        /* */
      150     1451    1          DCL SETX SBIN;
      151     1452    1          DCL SRDA SBIN;
      152     1453    1          DCL SDA SBIN;
      153     1454    1          DCL XTNSIZ SBIN;
      154     1455    1          DCL HASH SBIN;
      155     1456    1          DCL EXT$ PTR;
      156     1457    1          DCL N SBIN;
      157     1458    1          DCL NWORDS SBIN;
      158     1459    1          DCL I SBIN;
      159     1460    1          DCL PP SBIN;
      160     1461    1          DCL TEMP UBIN;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:25   
      161     1462    1          DCL FOUND SBIN;
      162     1463    1          DCL FITDA UBIN;
      163     1464    1          DCL 1 XT,
      164     1465    1               2 XTNSIZE UBIN(9) CALIGNED,
      165     1466    1               2 XTNSDA UBIN(27) CALIGNED;
      166     1467        /* */
      167     1468    1          DCL MMJ$FIOP ENTRY(1);
      168     1469    1          DCL FMC$REMOVE ENTRY(1);
      169     1470    1          DCL FAF$FRTOSR ENTRY(3) ALTRET;
      170     1471        /* */
      171     1472    1          IF FMC_CACHESIZ = 0 THEN
      172     1473    1             RETURN;
      173     1474
      174     1475    1          SETX=B$JIT.DCB$->F$DCB.SETX;
      175     1476    1          IF B$JIT.DCB$->F$DCB.CFU$ ~= ADDR(NIL) THEN
      176     1477    1             FITDA=B$JIT.DCB$->F$DCB.CFU$->FM$CFU.FITSDA;
      177     1478    1          ELSE
      178     1479    1             FITDA=0;
      179     1480
      180     1481    1          FPTR=PRAM(0);
      181     1482    1          EXT$=PINCRW(FPTR$, FM$FIT.CODES.ITEMX(1));
      182     1483    1          NWORDS=FM$FIT.CODES.NDW(1)-1;
      183     1484
      184     1485    1          I=0;
      185     1486    2          DO WHILE (I < NWORDS);
      186     1487    2             SDA=CODE01.XTNT.XTNSDA(I);
      187     1488    2             IF CODE01.XTNT.XTNSIZE(I) = 0 THEN
      188     1489    3                DO;
      189     1490    3                XTNSIZ=CODE01.EXTNT.XTNSIZE(I);
      190     1491    3                I=I+2;
      191     1492    3                END;
      192     1493    2             ELSE
      193     1494    3                DO;
      194     1495    3                XTNSIZ=CODE01.XTNT.XTNSIZE(I);
      195     1496    3                I=I+1;
      196     1497    3                END;
      197     1498
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:26   
      198     1499    2             TEMP=SDA+XTNSIZ-1;
      199     1500                  %LOCK(G=FMC_LOCK);
      200     1503    3             DO SRDA=SDA TO TEMP;
      201     1504    3                CALL CHECK_CACHE;
      202     1505    3             END;
      203     1506                  %UNLOCK(G=FMC_LOCK);
      204     1509
      205     1510    2          END;  /* WHILE */
      206     1511
      207     1512    1          RETURN;
      208     1513               %EJECT;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:27   
      209     1514    1   FMC$CLR1: ENTRY(PRAM);
      210     1515        /* */
      211     1516    1          IF FMC_CACHESIZ = 0 THEN
      212     1517    1             RETURN;
      213     1518
      214     1519    1          SETX=B$JIT.DCB$->F$DCB.SETX;
      215     1520    1          FITDA=0;
      216     1521               %LOCK(G=FMC_LOCK);
      217     1524    1          SDA=PRAM(0);
      218     1525    1          IF SDA < FM_SRZERO THEN
      219     1526    1             CALL FAF$FRTOSR(SDA, SRDA, I);
      220     1527    1          ELSE
      221     1528    1             SRDA=SDA;
      222     1529    1          CALL CHECK_CACHE;
      223     1530               %UNLOCK(G=FMC_LOCK);
      224     1533    1          RETURN;
      225     1534               %EJECT;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:28   
      226     1535    1   FMC$CLR1EXT: ENTRY(PRAM);
      227     1536        /* */
      228     1537    1          IF FMC_CACHESIZ = 0 THEN
      229     1538    1             RETURN;
      230     1539
      231     1540    1          SETX=B$JIT.DCB$->F$DCB.SETX;
      232     1541    1          IF B$JIT.DCB$->F$DCB.CFU$ ~= ADDR(NIL) THEN
      233     1542    1             FITDA=B$JIT.DCB$->F$DCB.CFU$->FM$CFU.FITSDA;
      234     1543    1          ELSE
      235     1544    1             FITDA=0;
      236     1545               %LOCK(G=FMC_LOCK);
      237     1548
      238     1549    1          XT=BINBIT(PRAM(0), 36);
      239     1550    1          SDA=XT.XTNSDA;
      240     1551    1          IF XT.XTNSIZE = 0 THEN
      241     1552    1             XTNSIZ=PRAM(1);
      242     1553    1          ELSE
      243     1554    1             XTNSIZ=XT.XTNSIZE;
      244     1555
      245     1556    2          DO I=0 TO XTNSIZ-1;
      246     1557    2             SRDA=SDA+I;
      247     1558    2             CALL CHECK_CACHE;
      248     1559    2          END;  /* DO I */
      249     1560
      250     1561               %UNLOCK(G=FMC_LOCK);
      251     1564    1          RETURN;
      252     1565               %EJECT;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:29   
      253     1566        /*I*     NAME:     CHECK_CACHE
      254     1567                 PURPOSE:  To clear out SRDA from the cache.
      255     1568
      256     1569                 DESCRIPTION:
      257     1570
      258     1571                 Hash to a row.  Then loop through the row until we hit the
      259     1572                 end, or find the entry.  If we find it, throw the entry
      260     1573                 away.  If someone else is using it, it is an error, mark
      261     1574                 the cache entry, and then return
      262     1575        */
      263     1576               %EJECT;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:30   
      264     1577    1   CHECK_CACHE: PROC;
      265     1578        /* */
      266     1579
      267     1580    2          IF SRDA = FITDA THEN
      268     1581    2             RETURN;
      269     1582
      270     1583    2          N=0;
      271     1584    2          FOUND=0;
      272     1585               %HASH;
      273     1588    3          DO UNTIL (N > 3 OR FOUND = 1);
      274     1589    3             IF FMC$CACHETBL.SRDA(HASH+N) = SRDA AND
      275     1590    3                FMC$CACHETBL.SETX(HASH+N) = SETX THEN
      276     1591    4                DO;   /* REMOVE ENTRY */
      277     1592    4                FOUND=1;
      278     1593    4                IF FMC$CACHETBL.USECNT(HASH+N) = 0 THEN
      279     1594    5                   DO;   /* REMOVE IT */
      280     1595    5                   CALL FMC$REMOVE(HASH+N);
      281     1596    5                   PP=FMC$CACHETBL.PAGE(HASH+N);
      282     1597    5                   FMC$CACHETBL(HASH+N)='0'B;
      283     1598                        %DEC_COUNTER(ITEM=IOCACHE);
      284     1604    5                   CALL MMJ$FIOP(PP);
      285     1605    5                   END;  /* REMOVE IT */
      286     1606    4                ELSE
      287     1607    5                   DO;   /* SHOULDN'T BE A USER */
      288     1608    5                   IF FMC$CACHETBL.FLAGS.ERR(HASH+N) THEN
      289     1609    5                      FOUND=0;   /* JUST IN CASE */
      290     1610    5                   FMC$CACHETBL.FLAGS.ERR(HASH+N)='1'B;
      291     1611    5                   END;  /* SHOULDN'T BE A USER */
      292     1612    4                END;  /* REMOVE ENTRY */
      293     1613    3             N=N+1;
      294     1614    3          END;  /* WHILE */
      295     1615
      296     1616    2          RETURN;
      297     1617    2          END CHECK_CACHE;
      298     1618    1          END FMC$CLRFILE;
      299     1619               %EOD;

PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:31   
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM$CFU.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$CLRFILE.

   Procedure FMC$CLRFILE requires 268 words for executable code.
   Procedure FMC$CLRFILE requires 26 words of local(AUTO) storage.

PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:32   

 Object Unit name= FMC$CLRFILE                                File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:39:04.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   268    414  FMC$CLRFILE
    1  RoData even  none     1      1  FMC$CLRFILE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMC$CLRFILE
     0    117                  yes      Std        1  FMC$CLR1
     0    170                  yes      Std        1  FMC$CLR1EXT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       3 FAF$FRTOSR
         yes           Std       1 FMC$REMOVE
         yes           Std       1 MMJ$FIOP
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:33   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHE$                            FMC_CACHESIZ                          FMC_CACHEPGCNT$
     FMC_LOCK                              FMC_MASK                         r    FM_SRZERO
     P_RESOURCE$                           P_UPTIME                              P_NSCPU
     B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:34   


      104        1        /*T***********************************************************/
      105        2        /*T*                                                         */
      106        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      107        4        /*T*                                                         */
      108        5        /*T***********************************************************/
      109        6        /*D*     NAME:     FMC$CLRFILE
      110        7                 PURPOSE:  To clear out all DAs associated with a file,
      111        8                           except for the FIT.
      112        9
      113       10                 INPUT:    DA (FMC$CLR1 and FMC$CLR1EXT)
      114       11                 OUTPUT:   The entries associated with the cache are cleared
      115       12                           out.
      116       13
      117       14                 DESCRIPTION:
      118       15
      119       16                 Loop through the CFU extent list searching for all of the
      120       17                 extents associated with the file.  The loop through the
      121       18                 extent, calling CHECK_CACHE to clear out the SRDAs.
      122       19        */
      123       20               %EJECT;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:35   
      124       21        FMC$CLRFILE: PROC(PRAM);

     21  0 000000   000000 700200 xent  FMC$CLRFILE  TSX0  ! X66_AUTO_1
         0 000001   000032 000001                    ZERO    26,1

      125       22    1          DCL PRAM(0:1) UBIN;
      126       23        /* */
      127       24               %INCLUDE FM_CACHE_R;
      128       36               %INCLUDE FM_CACHE_C;
      129      102               %INCLUDE FM_DATA_R;
      130      116               %INCLUDE P_PMDAT_R;
      131      424               %INCLUDE FM$FIT;
      132      645               %INCLUDE FM$CFU;
      133      690               %INCLUDE HF_LOCK_C;
      134      704               %INCLUDE B$JIT;
      135     1307               %MACRO F$DCB(BASED=BASED);
      136     1308               %INCLUDE F$DCB;
      137     1357               %MEND;
      138     1358        /* */
      139     1359    1          DCL B$JIT$ PTR SYMREF;
      140     1360        /* */
      141     1361               %F$DCB;
      142     1411               %CODE01(BASED="BASED(EXT$)");
      143     1415               %FM$FIT(BASED="BASED(FPTR$)");
      144     1418               %FMC$CACHE;
      145     1441               %FM$CFU;
      146     1447        /* */
      147     1448    1          DCL FPTR UBIN;
      148     1449    1          DCL FPTR$ REDEF FPTR PTR;
      149     1450        /* */
      150     1451    1          DCL SETX SBIN;
      151     1452    1          DCL SRDA SBIN;
      152     1453    1          DCL SDA SBIN;
      153     1454    1          DCL XTNSIZ SBIN;
      154     1455    1          DCL HASH SBIN;
      155     1456    1          DCL EXT$ PTR;
      156     1457    1          DCL N SBIN;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:36   
      157     1458    1          DCL NWORDS SBIN;
      158     1459    1          DCL I SBIN;
      159     1460    1          DCL PP SBIN;
      160     1461    1          DCL TEMP UBIN;
      161     1462    1          DCL FOUND SBIN;
      162     1463    1          DCL FITDA UBIN;
      163     1464    1          DCL 1 XT,
      164     1465    1               2 XTNSIZE UBIN(9) CALIGNED,
      165     1466    1               2 XTNSDA UBIN(27) CALIGNED;
      166     1467        /* */
      167     1468    1          DCL MMJ$FIOP ENTRY(1);
      168     1469    1          DCL FMC$REMOVE ENTRY(1);
      169     1470    1          DCL FAF$FRTOSR ENTRY(3) ALTRET;
      170     1471        /* */
      171     1472    1          IF FMC_CACHESIZ = 0 THEN

   1472  0 000002   000000 235000 xsym               LDA     FMC_CACHESIZ
         0 000003   000005 601000 0                  TNZ     s:1475

      172     1473    1             RETURN;

   1473  0 000004   000000 702200 xent               TSX2  ! X66_ARET

      173     1474
      174     1475    1          SETX=B$JIT.DCB$->F$DCB.SETX;

   1475  0 000005   000000 470400 xsym               LDP0    B$JIT$
         0 000006   000232 471500                    LDP1    154,,PR0
         0 000007   100051 236100                    LDQ     41,,PR1
         0 000010   777777 376007                    ANQ     -1,DL
         0 000011   200005 756100                    STQ     SETX,,AUTO

      175     1476    1          IF B$JIT.DCB$->F$DCB.CFU$ ~= ADDR(NIL) THEN

   1476  0 000012   100066 236100                    LDQ     54,,PR1
         0 000013   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000014   000022 600000 0                  TZE     s:1479
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:37   

      176     1477    1             FITDA=B$JIT.DCB$->F$DCB.CFU$->FM$CFU.FITSDA;

   1477  0 000015   100066 473500                    LDP3    54,,PR1
         0 000016   300000 236100                    LDQ     0,,PR3
         0 000017   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000020   200021 756100                    STQ     FITDA,,AUTO
         0 000021   000023 710000 0                  TRA     s:1481

      177     1478    1          ELSE
      178     1479    1             FITDA=0;

   1479  0 000022   200021 450100                    STZ     FITDA,,AUTO

      179     1480
      180     1481    1          FPTR=PRAM(0);

   1481  0 000023   200003 473500                    LDP3    @PRAM,,AUTO
         0 000024   300000 235100                    LDA     0,,PR3
         0 000025   200004 755100                    STA     FPTR,,AUTO

      181     1482    1          EXT$=PINCRW(FPTR$, FM$FIT.CODES.ITEMX(1));

   1482  0 000026   200004 474500                    LDP4    FPTR,,AUTO
         0 000027   400001 720100                    LXL0    1,,PR4
         0 000030   001777 360003                    ANX0    1023,DU
         0 000031   000000 636010                    EAQ     0,X0
         0 000032   200004 036100                    ADLQ    FPTR,,AUTO
         0 000033   200012 756100                    STQ     EXT$,,AUTO

      182     1483    1          NWORDS=FM$FIT.CODES.NDW(1)-1;

   1483  0 000034   400001 236100                    LDQ     1,,PR4
         0 000035   000012 772000                    QRL     10
         0 000036   001777 376007                    ANQ     1023,DL
         0 000037   000001 136007                    SBLQ    1,DL
         0 000040   200014 756100                    STQ     NWORDS,,AUTO
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:38   

      183     1484
      184     1485    1          I=0;

   1485  0 000041   200015 450100                    STZ     I,,AUTO

      185     1486    2          DO WHILE (I < NWORDS);

   1486  0 000042   200015 116100                    CMPQ    I,,AUTO
         0 000043   000116 604400 0                  TMOZ    s:1512

      186     1487    2             SDA=CODE01.XTNT.XTNSDA(I);

   1487  0 000044   200012 470500                    LDP0    EXT$,,AUTO
         0 000045   200015 720100                    LXL0    I,,AUTO
         0 000046   000001 236110                    LDQ     1,X0,PR0
         0 000047   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000050   200007 756100                    STQ     SDA,,AUTO

      187     1488    2             IF CODE01.XTNT.XTNSIZE(I) = 0 THEN

   1488  0 000051   000001 236110                    LDQ     1,X0,PR0
         0 000052   777000 316003                    CANQ    -512,DU
         0 000053   000061 601000 0                  TNZ     s:1495

      188     1489    3                DO;

      189     1490    3                XTNSIZ=CODE01.EXTNT.XTNSIZE(I);

   1490  0 000054   000002 235110                    LDA     2,X0,PR0
         0 000055   200010 755100                    STA     XTNSIZ,,AUTO

      190     1491    3                I=I+2;

   1491  0 000056   000002 236007                    LDQ     2,DL
         0 000057   200015 056100                    ASQ     I,,AUTO

PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:39   
      191     1492    3                END;

   1492  0 000060   000065 710000 0                  TRA     s:1499

      192     1493    2             ELSE
      193     1494    3                DO;

      194     1495    3                XTNSIZ=CODE01.XTNT.XTNSIZE(I);

   1495  0 000061   000001 236110                    LDQ     1,X0,PR0
         0 000062   000033 772000                    QRL     27
         0 000063   200010 756100                    STQ     XTNSIZ,,AUTO

      195     1496    3                I=I+1;

   1496  0 000064   200015 054100                    AOS     I,,AUTO

      196     1497    3                END;

      197     1498
      198     1499    2             TEMP=SDA+XTNSIZ-1;

   1499  0 000065   200007 236100                    LDQ     SDA,,AUTO
         0 000066   200010 036100                    ADLQ    XTNSIZ,,AUTO
         0 000067   000001 136007                    SBLQ    1,DL
         0 000070   200017 756100                    STQ     TEMP,,AUTO

      199     1500                  %LOCK(G=FMC_LOCK);

   1501  0 000071   000000 630400 1                  EPPR0   0
         0 000072   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000073   000000 701000 xent               TSX1    HFC$LOCK
         0 000074   000000 011000                    NOP     0

      200     1503    3             DO SRDA=SDA TO TEMP;

   1503  0 000075   200007 235100                    LDA     SDA,,AUTO
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:40   
         0 000076   200006 755100                    STA     SRDA,,AUTO
         0 000077   000103 710000 0                  TRA     s:1505+1

      201     1504    3                CALL CHECK_CACHE;

   1504  0 000100   000256 701000 0                  TSX1    CHECK_CACHE
         0 000101   000000 011000                    NOP     0

      202     1505    3             END;

   1505  0 000102   200006 054100                    AOS     SRDA,,AUTO
         0 000103   200017 236100                    LDQ     TEMP,,AUTO
         0 000104   000100 604000 0                  TMI     s:1504
         0 000105   200006 116100                    CMPQ    SRDA,,AUTO
         0 000106   000100 605000 0                  TPL     s:1504

      203     1506                  %UNLOCK(G=FMC_LOCK);

   1507  0 000107   000000 630400 1                  EPPR0   0
         0 000110   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000111   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000112   000000 011000                    NOP     0

      204     1509
      205     1510    2          END;  /* WHILE */

   1510  0 000113   200015 236100                    LDQ     I,,AUTO
         0 000114   200014 116100                    CMPQ    NWORDS,,AUTO
         0 000115   000044 604000 0                  TMI     s:1487

      206     1511
      207     1512    1          RETURN;

   1512  0 000116   000000 702200 xent               TSX2  ! X66_ARET

      208     1513               %EJECT;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:41   
      209     1514    1   FMC$CLR1: ENTRY(PRAM);

   1514  0 000117   000000 700200 xent  FMC$CLR1     TSX0  ! X66_AUTO_1
         0 000120   000032 000001                    ZERO    26,1

      210     1515        /* */
      211     1516    1          IF FMC_CACHESIZ = 0 THEN

   1516  0 000121   000000 235000 xsym               LDA     FMC_CACHESIZ
         0 000122   000124 601000 0                  TNZ     s:1519

      212     1517    1             RETURN;

   1517  0 000123   000000 702200 xent               TSX2  ! X66_ARET

      213     1518
      214     1519    1          SETX=B$JIT.DCB$->F$DCB.SETX;

   1519  0 000124   000000 470400 xsym               LDP0    B$JIT$
         0 000125   000232 471500                    LDP1    154,,PR0
         0 000126   100051 236100                    LDQ     41,,PR1
         0 000127   777777 376007                    ANQ     -1,DL
         0 000130   200005 756100                    STQ     SETX,,AUTO

      215     1520    1          FITDA=0;

   1520  0 000131   200021 450100                    STZ     FITDA,,AUTO

      216     1521               %LOCK(G=FMC_LOCK);

   1522  0 000132   000000 630400 1                  EPPR0   0
         0 000133   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000134   000000 701000 xent               TSX1    HFC$LOCK
         0 000135   000000 011000                    NOP     0

      217     1524    1          SDA=PRAM(0);

PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:42   
   1524  0 000136   200003 470500                    LDP0    @PRAM,,AUTO
         0 000137   000000 235100                    LDA     0,,PR0
         0 000140   200007 755100                    STA     SDA,,AUTO

      218     1525    1          IF SDA < FM_SRZERO THEN

   1525  0 000141   200007 236100                    LDQ     SDA,,AUTO
         0 000142   000145 604000 0                  TMI     s:1526
         0 000143   000000 116000 xsym               CMPQ    FM_SRZERO
         0 000144   000160 603000 0                  TRC     s:1528

      219     1526    1             CALL FAF$FRTOSR(SDA, SRDA, I);

   1526  0 000145   200015 631500                    EPPR1   I,,AUTO
         0 000146   200030 451500                    STP1    XT+6,,AUTO
         0 000147   200006 633500                    EPPR3   SRDA,,AUTO
         0 000150   200027 453500                    STP3    XT+5,,AUTO
         0 000151   200007 634500                    EPPR4   SDA,,AUTO
         0 000152   200026 454500                    STP4    XT+4,,AUTO
         0 000153   200026 630500                    EPPR0   XT+4,,AUTO
         0 000154   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000155   000000 701000 xent               TSX1    FAF$FRTOSR
         0 000156   000000 011000                    NOP     0
         0 000157   000161 710000 0                  TRA     s:1529

      220     1527    1          ELSE
      221     1528    1             SRDA=SDA;

   1528  0 000160   200006 756100                    STQ     SRDA,,AUTO

      222     1529    1          CALL CHECK_CACHE;

   1529  0 000161   000256 701000 0                  TSX1    CHECK_CACHE
         0 000162   000000 011000                    NOP     0

      223     1530               %UNLOCK(G=FMC_LOCK);

PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:43   
   1531  0 000163   000000 630400 1                  EPPR0   0
         0 000164   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000165   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000166   000000 011000                    NOP     0

      224     1533    1          RETURN;

   1533  0 000167   000000 702200 xent               TSX2  ! X66_ARET

      225     1534               %EJECT;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:44   
      226     1535    1   FMC$CLR1EXT: ENTRY(PRAM);

   1535  0 000170   000000 700200 xent  FMC$CLR1EXT  TSX0  ! X66_AUTO_1
         0 000171   000032 000001                    ZERO    26,1

      227     1536        /* */
      228     1537    1          IF FMC_CACHESIZ = 0 THEN

   1537  0 000172   000000 235000 xsym               LDA     FMC_CACHESIZ
         0 000173   000175 601000 0                  TNZ     s:1540

      229     1538    1             RETURN;

   1538  0 000174   000000 702200 xent               TSX2  ! X66_ARET

      230     1539
      231     1540    1          SETX=B$JIT.DCB$->F$DCB.SETX;

   1540  0 000175   000000 470400 xsym               LDP0    B$JIT$
         0 000176   000232 471500                    LDP1    154,,PR0
         0 000177   100051 236100                    LDQ     41,,PR1
         0 000200   777777 376007                    ANQ     -1,DL
         0 000201   200005 756100                    STQ     SETX,,AUTO

      232     1541    1          IF B$JIT.DCB$->F$DCB.CFU$ ~= ADDR(NIL) THEN

   1541  0 000202   100066 236100                    LDQ     54,,PR1
         0 000203   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000204   000212 600000 0                  TZE     s:1544

      233     1542    1             FITDA=B$JIT.DCB$->F$DCB.CFU$->FM$CFU.FITSDA;

   1542  0 000205   100066 473500                    LDP3    54,,PR1
         0 000206   300000 236100                    LDQ     0,,PR3
         0 000207   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000210   200021 756100                    STQ     FITDA,,AUTO
         0 000211   000213 710000 0                  TRA     s:1546
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:45   

      234     1543    1          ELSE
      235     1544    1             FITDA=0;

   1544  0 000212   200021 450100                    STZ     FITDA,,AUTO

      236     1545               %LOCK(G=FMC_LOCK);

   1546  0 000213   000000 630400 1                  EPPR0   0
         0 000214   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000215   000000 701000 xent               TSX1    HFC$LOCK
         0 000216   000000 011000                    NOP     0

      237     1548
      238     1549    1          XT=BINBIT(PRAM(0), 36);

   1549  0 000217   200003 470500                    LDP0    @PRAM,,AUTO
         0 000220   000000 236100                    LDQ     0,,PR0
         0 000221   200022 756100                    STQ     XT,,AUTO

      239     1550    1          SDA=XT.XTNSDA;

   1550  0 000222   200022 236100                    LDQ     XT,,AUTO
         0 000223   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000224   200007 756100                    STQ     SDA,,AUTO

      240     1551    1          IF XT.XTNSIZE = 0 THEN

   1551  0 000225   200022 236100                    LDQ     XT,,AUTO
         0 000226   777000 316003                    CANQ    -512,DU
         0 000227   000233 601000 0                  TNZ     s:1554

      241     1552    1             XTNSIZ=PRAM(1);

   1552  0 000230   000001 235100                    LDA     1,,PR0
         0 000231   200010 755100                    STA     XTNSIZ,,AUTO
         0 000232   000236 710000 0                  TRA     s:1556
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:46   

      242     1553    1          ELSE
      243     1554    1             XTNSIZ=XT.XTNSIZE;

   1554  0 000233   200022 236100                    LDQ     XT,,AUTO
         0 000234   000033 772000                    QRL     27
         0 000235   200010 756100                    STQ     XTNSIZ,,AUTO

      244     1555
      245     1556    2          DO I=0 TO XTNSIZ-1;

   1556  0 000236   200015 450100                    STZ     I,,AUTO
         0 000237   000246 710000 0                  TRA     s:1559+1

      246     1557    2             SRDA=SDA+I;

   1557  0 000240   200007 236100                    LDQ     SDA,,AUTO
         0 000241   200015 036100                    ADLQ    I,,AUTO
         0 000242   200006 756100                    STQ     SRDA,,AUTO

      247     1558    2             CALL CHECK_CACHE;

   1558  0 000243   000256 701000 0                  TSX1    CHECK_CACHE
         0 000244   000000 011000                    NOP     0

      248     1559    2          END;  /* DO I */

   1559  0 000245   200015 054100                    AOS     I,,AUTO
         0 000246   200015 236100                    LDQ     I,,AUTO
         0 000247   200010 116100                    CMPQ    XTNSIZ,,AUTO
         0 000250   000240 604000 0                  TMI     s:1557

      249     1560
      250     1561               %UNLOCK(G=FMC_LOCK);

   1562  0 000251   000000 630400 1                  EPPR0   0
         0 000252   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:47   
         0 000253   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000254   000000 011000                    NOP     0

      251     1564    1          RETURN;

   1564  0 000255   000000 702200 xent               TSX2  ! X66_ARET

      252     1565               %EJECT;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:48   
      253     1566        /*I*     NAME:     CHECK_CACHE
      254     1567                 PURPOSE:  To clear out SRDA from the cache.
      255     1568
      256     1569                 DESCRIPTION:
      257     1570
      258     1571                 Hash to a row.  Then loop through the row until we hit the
      259     1572                 end, or find the entry.  If we find it, throw the entry
      260     1573                 away.  If someone else is using it, it is an error, mark
      261     1574                 the cache entry, and then return
      262     1575        */
      263     1576               %EJECT;
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:49   
      264     1577    1   CHECK_CACHE: PROC;

   1577  0 000256   200024 741300       CHECK_CACHE  STX1  ! XT+2,,AUTO

      265     1578        /* */
      266     1579
      267     1580    2          IF SRDA = FITDA THEN

   1580  0 000257   200006 236100                    LDQ     SRDA,,AUTO
         0 000260   000264 604000 0                  TMI     s:1583
         0 000261   200021 116100                    CMPQ    FITDA,,AUTO
         0 000262   000264 601000 0                  TNZ     s:1583

      268     1581    2             RETURN;

   1581  0 000263   000001 702211                    TSX2  ! 1,X1

      269     1582
      270     1583    2          N=0;

   1583  0 000264   200013 450100                    STZ     N,,AUTO

      271     1584    2          FOUND=0;

   1584  0 000265   200020 450100                    STZ     FOUND,,AUTO

      272     1585               %HASH;

   1586  0 000266   200005 036100                    ADLQ    SETX,,AUTO
         0 000267   000000 376000 xsym               ANQ     FMC_MASK
         0 000270   000002 736000                    QLS     2
         0 000271   000001 036007                    ADLQ    1,DL
         0 000272   200011 756100                    STQ     HASH,,AUTO

      273     1588    3          DO UNTIL (N > 3 OR FOUND = 1);

      274     1589    3             IF FMC$CACHETBL.SRDA(HASH+N) = SRDA AND
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:50   

   1589  0 000273   200011 236100                    LDQ     HASH,,AUTO
         0 000274   200013 036100                    ADLQ    N,,AUTO
         0 000275   000006 402007                    MPY     6,DL
         0 000276   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000277   000000 236106                    LDQ     0,QL,PR0
         0 000300   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000301   200006 116100                    CMPQ    SRDA,,AUTO
         0 000302   000403 601000 0                  TNZ     s:1613
         0 000303   200011 236100                    LDQ     HASH,,AUTO
         0 000304   200013 036100                    ADLQ    N,,AUTO
         0 000305   000006 402007                    MPY     6,DL
         0 000306   000004 236106                    LDQ     4,QL,PR0
         0 000307   000022 772000                    QRL     18
         0 000310   200005 116100                    CMPQ    SETX,,AUTO
         0 000311   000403 601000 0                  TNZ     s:1613

      275     1590    3                FMC$CACHETBL.SETX(HASH+N) = SETX THEN
      276     1591    4                DO;   /* REMOVE ENTRY */

      277     1592    4                FOUND=1;

   1592  0 000312   000001 235007                    LDA     1,DL
         0 000313   200020 755100                    STA     FOUND,,AUTO

      278     1593    4                IF FMC$CACHETBL.USECNT(HASH+N) = 0 THEN

   1593  0 000314   200011 236100                    LDQ     HASH,,AUTO
         0 000315   200013 036100                    ADLQ    N,,AUTO
         0 000316   000006 402007                    MPY     6,DL
         0 000317   000002 720106                    LXL0    2,QL,PR0
         0 000320   000366 601000 0                  TNZ     s:1608

      279     1594    5                   DO;   /* REMOVE IT */

      280     1595    5                   CALL FMC$REMOVE(HASH+N);

PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:51   
   1595  0 000321   200011 236100                    LDQ     HASH,,AUTO
         0 000322   200013 036100                    ADLQ    N,,AUTO
         0 000323   200026 756100                    STQ     XT+4,,AUTO
         0 000324   200026 631500                    EPPR1   XT+4,,AUTO
         0 000325   200027 451500                    STP1    XT+5,,AUTO
         0 000326   200027 630500                    EPPR0   XT+5,,AUTO
         0 000327   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000330   000000 701000 xent               TSX1    FMC$REMOVE
         0 000331   000000 011000                    NOP     0

      281     1596    5                   PP=FMC$CACHETBL.PAGE(HASH+N);

   1596  0 000332   200011 236100                    LDQ     HASH,,AUTO
         0 000333   200013 036100                    ADLQ    N,,AUTO
         0 000334   000006 402007                    MPY     6,DL
         0 000335   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000336   000002 236106                    LDQ     2,QL,PR0
         0 000337   000022 772000                    QRL     18
         0 000340   200016 756100                    STQ     PP,,AUTO

      282     1597    5                   FMC$CACHETBL(HASH+N)='0'B;

   1597  0 000341   200011 236100                    LDQ     HASH,,AUTO
         0 000342   200013 036100                    ADLQ    N,,AUTO
         0 000343   000030 402007                    MPY     24,DL
         0 000344   000106 100400                    MLR     fill='000'O
         0 000345   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000346   000000 000030                    ADSC9   0,Q,PR0                  cn=0,n=24

      283     1598                        %DEC_COUNTER(ITEM=IOCACHE);

   1599  0 000347   000000 470400 xsym               LDP0    P_RESOURCE$
         0 000350   000055 235100                    LDA     45,,PR0
         0 000351   000001 135007                    SBLA    1,DL
         0 000352   000055 755100                    STA     45,,PR0

   1600  0 000353   000055 236100                    LDQ     45,,PR0
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:52   
         0 000354   000057 116100                    CMPQ    47,,PR0
         0 000355   000357 603000 0                  TRC     s:1604

   1602  0 000356   000057 756100                    STQ     47,,PR0

      284     1604    5                   CALL MMJ$FIOP(PP);

   1604  0 000357   200016 631500                    EPPR1   PP,,AUTO
         0 000360   200026 451500                    STP1    XT+4,,AUTO
         0 000361   200026 630500                    EPPR0   XT+4,,AUTO
         0 000362   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000363   000000 701000 xent               TSX1    MMJ$FIOP
         0 000364   000000 011000                    NOP     0

      285     1605    5                   END;  /* REMOVE IT */

   1605  0 000365   000403 710000 0                  TRA     s:1613

      286     1606    4                ELSE
      287     1607    5                   DO;   /* SHOULDN'T BE A USER */

      288     1608    5                   IF FMC$CACHETBL.FLAGS.ERR(HASH+N) THEN

   1608  0 000366   200011 236100                    LDQ     HASH,,AUTO
         0 000367   200013 036100                    ADLQ    N,,AUTO
         0 000370   000006 402007                    MPY     6,DL
         0 000371   000004 236106                    LDQ     4,QL,PR0
         0 000372   000002 316007                    CANQ    2,DL
         0 000373   000375 600000 0                  TZE     s:1610

      289     1609    5                      FOUND=0;   /* JUST IN CASE */

   1609  0 000374   200020 450100                    STZ     FOUND,,AUTO

      290     1610    5                   FMC$CACHETBL.FLAGS.ERR(HASH+N)='1'B;

   1610  0 000375   200011 236100                    LDQ     HASH,,AUTO
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:53   
         0 000376   200013 036100                    ADLQ    N,,AUTO
         0 000377   000006 402007                    MPY     6,DL
         0 000400   000000 620006                    EAX0    0,QL
         0 000401   000002 236007                    LDQ     2,DL
         0 000402   000004 256110                    ORSQ    4,X0,PR0

      291     1611    5                   END;  /* SHOULDN'T BE A USER */

      292     1612    4                END;  /* REMOVE ENTRY */

      293     1613    3             N=N+1;

   1613  0 000403   200013 054100                    AOS     N,,AUTO

      294     1614    3          END;  /* WHILE */

   1614  0 000404   200013 235100                    LDA     N,,AUTO
         0 000405   000003 115007                    CMPA    3,DL
         0 000406   000412 605400 0                  TPNZ    s:1616
         0 000407   200020 236100                    LDQ     FOUND,,AUTO
         0 000410   000001 116007                    CMPQ    1,DL
         0 000411   000273 601000 0                  TNZ     s:1589

      295     1615
      296     1616    2          RETURN;

   1616  0 000412   200024 221300                    LDX1  ! XT+2,,AUTO
         0 000413   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   1     000   000000 006000                                                    ....
      297     1617    2          END CHECK_CACHE;
      298     1618    1          END FMC$CLRFILE;
      299     1619               %EOD;

PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:54   
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM$CFU.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$CLRFILE.
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:55   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PRAM                     12-0-0/w PTR         r     1 EXT$
    21-0-0/w UBIN        r     1 FITDA                     20-0-0/w SBIN        r     1 FOUND
     4-0-0/w UBIN        r     1 FPTR                       4-0-0/w PTR         r     1 FPTR$
    11-0-0/w SBIN        r     1 HASH                      15-0-0/w SBIN        r     1 I
    13-0-0/w SBIN        r     1 N                         14-0-0/w SBIN        r     1 NWORDS
    16-0-0/w SBIN        r     1 PP                        *0-0-0/w UBIN        r     1 PRAM(0:1)
     7-0-0/w SBIN        r     1 SDA                        5-0-0/w SBIN        r     1 SETX
     6-0-0/w SBIN        r     1 SRDA                      17-0-0/w UBIN        r     1 TEMP
    22-0-0/c STRC        r     1 XT                        10-0-0/w SBIN        r     1 XTNSIZ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FMC_CACHE$
     0-0-0/w PTR         r     1 FMC_CACHEPGCNT$            0-0-0/w SBIN        r     1 FMC_CACHESIZ
     0-0-0/b BIT (72)    r     1 FMC_LOCK                   0-0-0/b BIT         r     1 FMC_MASK
     0-0-0/w UBIN        r     1 FM_SRZERO                  0-0-0/w PTR         r     1 P_RESOURCE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(576)   r     1 CODE01
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(288)   r     1 FM$CFU
     0-0-0/w STRC(1116)  r     1 FM$FIT
     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(2268)  r     1 P_RESOURCE
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:56   


   Procedure FMC$CLRFILE requires 268 words for executable code.
   Procedure FMC$CLRFILE requires 26 words of local(AUTO) storage.
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:57   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:58   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      1125**DCL      1125--REDEF
B$JIT.DCB$
      1199**DCL      1475>>ASSIGN   1476>>IF       1477>>ASSIGN   1519>>ASSIGN   1540>>ASSIGN   1541>>IF
      1542>>ASSIGN
B$JIT.ERR.MID
      1032**DCL      1032--REDEF
B$JIT.JRESPEAK
      1193**DCL      1194--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      1302**DCL      1302--REDEF    1303--REDEF
B$JIT.PNR
      1206**DCL      1206--REDEF
B$JIT.TSLINE
      1300**DCL      1301--REDEF
B$JIT$
      1359**DCL      1026--IMP-PTR  1475>>ASSIGN   1476>>IF       1477>>ASSIGN   1519>>ASSIGN   1540>>ASSIGN
      1541>>IF       1542>>ASSIGN
CHECK_CACHE
      1577**PROC     1504--CALL     1529--CALL     1558--CALL
CODE01.EXTNT.XTNSIZE
      1413**DCL      1490>>ASSIGN
CODE01.XTNT
      1412**DCL      1413--REDEF
CODE01.XTNT.XTNSDA
      1412**DCL      1487>>ASSIGN
CODE01.XTNT.XTNSIZE
      1412**DCL      1488>>IF       1495>>ASSIGN
EXT$
      1456**DCL      1412--IMP-PTR  1482<<ASSIGN   1487>>ASSIGN   1488>>IF       1490>>ASSIGN   1495>>ASSIGN
F$DCB.ACTPOS
      1387**DCL      1387--REDEF
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:59   
F$DCB.ARS
      1362**DCL      1362--REDEF
F$DCB.ATTR
      1380**DCL      1381--REDEF
F$DCB.BORROW
      1395**DCL      1395--REDEF    1395--REDEF    1395--REDEF
F$DCB.CFU$
      1396**DCL      1476>>IF       1477>>ASSIGN   1541>>IF       1542>>ASSIGN
F$DCB.DCBNAME.L
      1409**DCL      1409--IMP-SIZ
F$DCB.EOMCHAR
      1366**DCL      1366--REDEF
F$DCB.FLDID
      1390**DCL      1390--REDEF
F$DCB.FORM$
      1384**DCL      1384--REDEF
F$DCB.FSECT
      1400**DCL      1400--REDEF
F$DCB.FSN
      1377**DCL      1377--REDEF    1377--REDEF    1378--REDEF
F$DCB.HEADER$
      1383**DCL      1383--REDEF
F$DCB.IXTNSIZE
      1381**DCL      1381--REDEF
F$DCB.LASTSTA$
      1371**DCL      1371--REDEF
F$DCB.LVL
      1396**DCL      1396--REDEF
F$DCB.NAME.C
      1371**DCL      1371--REDEF
F$DCB.NOEOF
      1392**DCL      1392--REDEF
F$DCB.NRECS
      1382**DCL      1382--REDEF
F$DCB.NRECX
      1401**DCL      1401--REDEF
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:60   
F$DCB.OHDR
      1393**DCL      1393--REDEF
F$DCB.ORG
      1376**DCL      1376--REDEF
F$DCB.PRECNO
      1399**DCL      1399--REDEF
F$DCB.RCSZ
      1404**DCL      1404--REDEF
F$DCB.RES
      1372**DCL      1372--REDEF
F$DCB.SETX
      1384**DCL      1384--REDEF    1475>>ASSIGN   1519>>ASSIGN   1540>>ASSIGN
F$DCB.TAB$
      1383**DCL      1384--REDEF
F$DCB.TDA
      1398**DCL      1398--REDEF
F$DCB.WSN
      1373**DCL      1373--REDEF
FAF$FRTOSR
      1470**DCL-ENT  1526--CALL
FITDA
      1463**DCL      1477<<ASSIGN   1479<<ASSIGN   1520<<ASSIGN   1542<<ASSIGN   1544<<ASSIGN   1580>>IF
FM$CFU.ACCTX
      1443**DCL      1443--REDEF
FM$CFU.FITSDA
      1443**DCL      1477>>ASSIGN   1542>>ASSIGN
FM$FIT.CODES.ITEMX
      1416**DCL      1482>>ASSIGN
FM$FIT.CODES.NDW
      1416**DCL      1483>>ASSIGN
FMC$CACHETBL
      1420**DCL      1597<<ASSIGN
FMC$CACHETBL.FLAGS.ERR
      1437**DCL      1608>>IF       1610<<ASSIGN
FMC$CACHETBL.PAGE
      1428**DCL      1596>>ASSIGN
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:61   
FMC$CACHETBL.SETX
      1431**DCL      1589>>IF
FMC$CACHETBL.SRDA
      1425**DCL      1589>>IF
FMC$CACHETBL.USECNT
      1429**DCL      1593>>IF
FMC$REMOVE
      1469**DCL-ENT  1595--CALL
FMC_CACHE$
        32**DCL      1420--IMP-PTR  1589>>IF       1589>>IF       1593>>IF       1596>>ASSIGN   1597>>ASSIGN
      1608>>IF       1610>>ASSIGN
FMC_CACHEPGCNT$
        33**DCL        33--IMP-PTR    33--REDEF
FMC_CACHESIZ
        32**DCL      1472>>IF       1516>>IF       1537>>IF
FMC_LOCK
        34**DCL      1501<>CALL     1507<>CALL     1522<>CALL     1531<>CALL     1546<>CALL     1562<>CALL
FMC_MASK
        34**DCL      1586>>ASSIGN
FM_SRZERO
       110**DCL      1525>>IF
FOUND
      1462**DCL      1584<<ASSIGN   1588>>DOUNTIL  1592<<ASSIGN   1609<<ASSIGN
FPTR
      1448**DCL      1449--REDEF    1481<<ASSIGN
FPTR$
      1449**DCL      1416--IMP-PTR  1482>>ASSIGN   1482>>ASSIGN   1483>>ASSIGN
HASH
      1455**DCL      1586<<ASSIGN   1589>>IF       1589>>IF       1593>>IF       1595>>CALL     1596>>ASSIGN
      1597>>ASSIGN   1608>>IF       1610>>ASSIGN
HFC$LOCK
       703**DCL-ENT  1501--CALL     1522--CALL     1546--CALL
HFC$UNLOCK
       703**DCL-ENT  1507--CALL     1531--CALL     1562--CALL
I
      1459**DCL      1485<<ASSIGN   1486>>DOWHILE  1487>>ASSIGN   1488>>IF       1490>>ASSIGN   1491<<ASSIGN
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:62   
      1491>>ASSIGN   1495>>ASSIGN   1496<<ASSIGN   1496>>ASSIGN   1526<>CALL     1556<<DOINDEX  1557>>ASSIGN
MMJ$FIOP
      1468**DCL-ENT  1604--CALL
N
      1457**DCL      1583<<ASSIGN   1588>>DOUNTIL  1589>>IF       1589>>IF       1593>>IF       1595>>CALL
      1596>>ASSIGN   1597>>ASSIGN   1608>>IF       1610>>ASSIGN   1613<<ASSIGN   1613>>ASSIGN
NWORDS
      1458**DCL      1483<<ASSIGN   1486>>DOWHILE
PP
      1460**DCL      1596<<ASSIGN   1604<>CALL
PRAM
        22**DCL        21--PROC     1481>>ASSIGN   1514--ENTRY    1524>>ASSIGN   1535--ENTRY    1549>>ASSIGN
      1552>>ASSIGN
P_NSCPU
       404**DCL       405--REDEF
P_RESOURCE.RES
       277**DCL       344--REDEF
P_RESOURCE.RES.IOCACHE.CURRENT
       306**DCL      1599<<ASSIGN   1599>>ASSIGN   1600>>IF       1602>>ASSIGN
P_RESOURCE.RES.IOCACHE.MIN
       308**DCL      1600>>IF       1602<<ASSIGN
P_RESOURCE$
       357**DCL       245--IMP-PTR  1599>>ASSIGN   1599>>ASSIGN   1600>>IF       1600>>IF       1602>>ASSIGN
      1602>>ASSIGN
P_UPTIME
       393**DCL       394--REDEF
SDA
      1453**DCL      1487<<ASSIGN   1499>>ASSIGN   1503>>DOINDEX  1524<<ASSIGN   1525>>IF       1526<>CALL
      1528>>ASSIGN   1550<<ASSIGN   1557>>ASSIGN
SETX
      1451**DCL      1475<<ASSIGN   1519<<ASSIGN   1540<<ASSIGN   1586>>ASSIGN   1589>>IF
SRDA
      1452**DCL      1503<<DOINDEX  1526<>CALL     1528<<ASSIGN   1557<<ASSIGN   1580>>IF       1586>>ASSIGN
      1589>>IF
TEMP
      1461**DCL      1499<<ASSIGN   1503>>DOINDEX
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:63   
XT
      1464**DCL      1549<<ASSIGN
XT.XTNSDA
      1466**DCL      1550>>ASSIGN
XT.XTNSIZE
      1465**DCL      1551>>IF       1554>>ASSIGN
XTNSIZ
      1454**DCL      1490<<ASSIGN   1495<<ASSIGN   1499>>ASSIGN   1552<<ASSIGN   1554<<ASSIGN   1556>>DOINDEX
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:64   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:65   
              MINI UREF LISTING

F$CFU$     113**DCL
FM$SET$     114**DCL
FMC$CACHEPGCNT      33**DCL
FMC$CLR1    1514**ENTRY
FMC$CLR1EXT    1535**ENTRY
FMC$CLRFILE      21**PROC
FMC_CACHEPGCNT      33**DCL
FMC_CACHEPGCNT$R      33**DCL
FMC_CACHESIZN      32**DCL
FMC_MASKTBL      34**DCL
FMC_STATS$      32**DCL
FMC_TYPTBL$      32**DCL
FM_CFUWAIT     113**DCL
FM_CFUWGRB     113**DCL
FM_EOP     111**DCL
FM_FRMAX     110**DCL
FM_FRZERO     110**DCL
FM_GCT     114**DCL
FM_GIP     114**DCL
FM_GPSDA     111**DCL
FM_HASH     112**DCL
FM_MADSDA     111**DCL
FM_PADSDA     111**DCL
FM_SRMAX     110**DCL
FM_SYSACCTX     114**DCL
FM_SYSSETX     114**DCL
FM_TRUNC     112**DCL
FM_WSQ     112**DCL
F_CWLK     113**DCL
F_CWUSER     113**DCL
F_DCBLOCK     112**DCL
P$IODATA     358**DCL
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:66   
P$TABLE     367**DCL
PH_CPU_MOUSED     422**DCL
PH_JIT_ENTRY     418**DCL
PH_MOUSE_ENTRY     414**DCL
PH_MOUSE_LOCK     421**DCL
PH_MOUSE_USERS     411**DCL
PH_MOUSE_USER_NUMBER     423**DCL
PH_MUS_PAGES     413**DCL
P_AUIS     399**DCL
P_AVAIL_MEM     406**DCL
P_AVGAVAIL_MEM     407**DCL
P_AVGETMF     396**DCL
P_AVGIOL     398**DCL
P_AVGRT90     395**DCL
P_CALCNT     383**DCL
P_CALCOMP     384**DCL
P_DCTXMAX     400**DCL
P_ETMF     377**DCL
P_GATE     403**DCL
P_IOLOAD     397**DCL
P_IOS     392**DCL
P_NINTS     378**DCL
P_NOW     402**DCL
P_NSCPU_SBIN     405**DCL
P_RT90     379**DCL
P_RUE#     375**DCL
P_SCHD#     376**DCL
P_STARTUP     380**DCL
P_STOPTIME     401**DCL
P_S_MIDLTIME     388**DCL
P_S_MIDLWIO     389**DCL
P_S_MIDLWRES     390**DCL
P_S_MIDLWRESIO     391**DCL
P_S_MXEQTIME     387**DCL
P_S_USRVTIME     386**DCL
P_S_UXEQTIME     385**DCL
PL6.E3A0      #002=FMC$CLRFILE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:39 Page:67   
P_UPTIME_SBIN     394**DCL
P_USRVTIME     382**DCL
P_UXEQTIME     381**DCL
WORD_     412**DCL

PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:68   
      300        1        /*T***********************************************************/
      301        2        /*T*                                                         */
      302        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      303        4        /*T*                                                         */
      304        5        /*T***********************************************************/
      305        6        /*D*     NAME:     FMC$EA
      306        7                 PURPOSE:  End action routine for cache writes.
      307        8                 INPUT:    N$REQ - end action packet
      308        9
      309       10                 DESCRIPTION:
      310       11
      311       12                      If the buffer has been updated again while we were
      312       13                 writing the page out, then we need to write it again.
      313       14                      Otherwise, if there are no users on the page, then we
      314       15                 add the page to the linked list.  If the expire time is
      315       16                 zero, then we don't cache any pages, we just release it.
      316       17        */
      317       18                 %EJECT;
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:69   
      318       19        FMC$EA: PROC(N$REQ);
      319       20               %INCLUDE N$REQ;
      320       94               %INCLUDE FM_CACHE_R;
      321      106               %INCLUDE FM_CACHE_C;
      322      172               %INCLUDE FM_CNTRL_R;
      323      181               %INCLUDE FM_BUF_R;
      324      190               %INCLUDE FM$MACROS;
      325      565               %INCLUDE B_STRINGS_C;
      326      694               %INCLUDE B_MLSMAC_C;
      327     1636               %INCLUDE HF_LOCK_C;
      328     1650               %INCLUDE N_FC_C;
      329     1687               %INCLUDE P_PMDAT_R;
      330     1995        /* */
      331     1996    1          DCL B$LS$ PTR SYMREF;
      332     1997    1          DCL B$MISC$ PTR SYMREF READONLY;
      333     1998        /* */
      334     1999               %N$REQ(STCLASS="");
      335     2057               %FMC$CACHE;
      336     2080               %FMC$CACHE(FPTN=FMC$CACHE, ARRAY=NO, STCLASS="BASED(CACHE$)");
      337     2103               %FMC$TYPTBL;
      338     2108               %FM$GRAN(BASED="BASED(BUF$)");
      339     2112               %B_MLS(FPTN=B$MLNK, STCLASS=BASED);
      340     2927        /* */
      341     2928    1          DCL 1 DESCINIT CONSTANT,
      342     2929    1               2 BOUND UBIN(20) UNAL INIT(4095),  /* FRAME A PAGE */
      343     2930    1               2 FLGS BIT(3) INIT('7'O),          /* ALLOW READ/WRITE */
      344     2931    1               2 WSQ UBIN(9) UNAL INIT(0),        /* REAL PAGE NO */
      345     2932    1               2 TYP UBIN(4) UNAL INIT(2);        /* WSQ TYPE DESC */
      346     2933        /* */
      347     2934    1          DCL CACHE$ PTR;
      348     2935    1          DCL 1 EAINFO,
      349     2936    1               2 HASH UBIN(18) HALIGNED,
      350     2937    1               2 * UBIN(18) HALIGNED;
      351     2938    1          DCL EAINFOWD REDEF EAINFO SBIN;
      352     2939    1          DCL PP SBIN;
      353     2940    1          DCL HASH SBIN;
      354     2941    1          DCL BUF$ PTR;
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:70   
      355     2942    1          DCL VPNO SBIN;
      356     2943        /* */
      357     2944    1          DCL FMC$ADD ENTRY(1);
      358     2945    1          DCL FMC$REMOVE ENTRY(1);
      359     2946    1          DCL MMJ$FIOP ENTRY(1);
      360     2947    1          DCL MMJ$MAPIOP ENTRY(2);
      361     2948        /* */
      362     2949               %LOCK(G=FMC_LOCK);
      363     2952    1          EAINFOWD=N$REQ.EAINFO;
      364     2953
      365     2954    1          CACHE$=ADDR(FMC$CACHETBL(EAINFO.HASH));
      366     2955
      367     2956    1          IF FMC$CACHE.FLAGS.BUFUP AND NOT FMC$CACHE.FLAGS.ERR AND
      368     2957    1             (FMC$CACHE.USECNT = 1 OR
      369     2958    1              FMC$CACHE.UPCOUNT > FMC_LIMITS.UPLIMIT(FMC$CACHE.TYPE)) THEN
      370     2959    2             DO;   /* NEEDS TO BE WRITTEN AGAIN */
      371     2960    2             B$LS$->B$MLNK.MISC=DESCINIT;
      372     2961    2             B$LS$->B$MLNK.MISC.BASE=FMC$CACHE.PAGE*4096;
      373     2962    2             IF B$MISC$->FM$GRAN.NAVX+B$MISC$->FM$GRAN.AVAIL ~= 1024 THEN
      374     2963    2                N$REQ.BUFSIZE=4096;
      375     2964    2             ELSE
      376     2965    2                N$REQ.BUFSIZE=B$MISC$->FM$GRAN.NAVX*4;
      377     2966    2             N$REQ.OPFLG.REQ='1'B;
      378     2967    2             FMC$CACHE.FLAGS.BUFUP='0'B;
      379     2968                  %UNLOCK(G=FMC_LOCK);
      380     2971    2             END;  /* NEEDS TO BE WRITTEN AGAIN */
      381     2972    1          ELSE
      382     2973    2             DO;
      383     2974    2             FMC$CACHE.USECNT=FMC$CACHE.USECNT-1;
      384     2975    2             IF FMC$CACHE.USECNT = 0 THEN
      385     2976    2                IF FMC_LIMITS.EXPIRE(FMC$CACHE.TYPE) = 0 OR
      386     2977    2                   FMC$CACHE.FLAGS.ERR THEN
      387     2978    3                   DO;   /* RELEASE PAGE */
      388     2979    3                   PP=FMC$CACHE.PAGE;
      389     2980    3                   CALL MMJ$FIOP(PP);
      390     2981    3                   FMC$CACHE='0'B;
      391     2982                        %DEC_COUNTER(ITEM=IOCACHE);
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:71   
      392     2988    3                   END;  /* RELEASE PAGE */
      393     2989    2                ELSE
      394     2990    3                   DO;  /* ADD ENTRY */
      395     2991    3                   HASH=EAINFO.HASH;
      396     2992    3                   CALL FMC$ADD(HASH);
      397     2993    3                   END;  /* ADD ENTRY */
      398     2994                  %UNLOCK(G=FMC_LOCK);
      399     2997    2             END;
      400     2998
      401     2999    1          RETURN;
      402     3000    1          END FMC$EA;
      403     3001               %EOD;

PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:72   
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   FM_BUF_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure FMC$EA.

   Procedure FMC$EA requires 117 words for executable code.
   Procedure FMC$EA requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:73   

 Object Unit name= FMC$EA                                     File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:39:23.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  FMC$EA
    1   Proc  even  none   117    165  FMC$EA
    2  RoData even  none     4      4  FMC$EA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  FMC$EA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 HFC$UNLOCK
         yes           Std       1 MMJ$FIOP
         yes           Std       1 FMC$ADD
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:74   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHE$                            FMC_TYPTBL$                           FMC_CACHEPGCNT$
     FMC_LOCK                              FMC_LIMITS                            P_RESOURCE$
     P_UPTIME                              P_NSCPU                               B$LS$
r    B$MISC$                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:75   


      300        1        /*T***********************************************************/
      301        2        /*T*                                                         */
      302        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      303        4        /*T*                                                         */
      304        5        /*T***********************************************************/
      305        6        /*D*     NAME:     FMC$EA
      306        7                 PURPOSE:  End action routine for cache writes.
      307        8                 INPUT:    N$REQ - end action packet
      308        9
      309       10                 DESCRIPTION:
      310       11
      311       12                      If the buffer has been updated again while we were
      312       13                 writing the page out, then we need to write it again.
      313       14                      Otherwise, if there are no users on the page, then we
      314       15                 add the page to the linked list.  If the expire time is
      315       16                 zero, then we don't cache any pages, we just release it.
      316       17        */
      317       18                 %EJECT;
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:76   
      318       19        FMC$EA: PROC(N$REQ);

     19  1 000000   000000 700200 xent  FMC$EA       TSX0  ! X66_AUTO_1
         1 000001   000014 000001                    ZERO    12,1

      319       20               %INCLUDE N$REQ;
      320       94               %INCLUDE FM_CACHE_R;
      321      106               %INCLUDE FM_CACHE_C;
      322      172               %INCLUDE FM_CNTRL_R;
      323      181               %INCLUDE FM_BUF_R;
      324      190               %INCLUDE FM$MACROS;
      325      565               %INCLUDE B_STRINGS_C;
      326      694               %INCLUDE B_MLSMAC_C;
      327     1636               %INCLUDE HF_LOCK_C;
      328     1650               %INCLUDE N_FC_C;
      329     1687               %INCLUDE P_PMDAT_R;
      330     1995        /* */
      331     1996    1          DCL B$LS$ PTR SYMREF;
      332     1997    1          DCL B$MISC$ PTR SYMREF READONLY;
      333     1998        /* */
      334     1999               %N$REQ(STCLASS="");
      335     2057               %FMC$CACHE;
      336     2080               %FMC$CACHE(FPTN=FMC$CACHE, ARRAY=NO, STCLASS="BASED(CACHE$)");
      337     2103               %FMC$TYPTBL;
      338     2108               %FM$GRAN(BASED="BASED(BUF$)");
      339     2112               %B_MLS(FPTN=B$MLNK, STCLASS=BASED);
      340     2927        /* */
      341     2928    1          DCL 1 DESCINIT CONSTANT,
      342     2929    1               2 BOUND UBIN(20) UNAL INIT(4095),  /* FRAME A PAGE */
      343     2930    1               2 FLGS BIT(3) INIT('7'O),          /* ALLOW READ/WRITE */
      344     2931    1               2 WSQ UBIN(9) UNAL INIT(0),        /* REAL PAGE NO */
      345     2932    1               2 TYP UBIN(4) UNAL INIT(2);        /* WSQ TYPE DESC */
      346     2933        /* */
      347     2934    1          DCL CACHE$ PTR;
      348     2935    1          DCL 1 EAINFO,
      349     2936    1               2 HASH UBIN(18) HALIGNED,
      350     2937    1               2 * UBIN(18) HALIGNED;
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:77   
      351     2938    1          DCL EAINFOWD REDEF EAINFO SBIN;
      352     2939    1          DCL PP SBIN;
      353     2940    1          DCL HASH SBIN;
      354     2941    1          DCL BUF$ PTR;
      355     2942    1          DCL VPNO SBIN;
      356     2943        /* */
      357     2944    1          DCL FMC$ADD ENTRY(1);
      358     2945    1          DCL FMC$REMOVE ENTRY(1);
      359     2946    1          DCL MMJ$FIOP ENTRY(1);
      360     2947    1          DCL MMJ$MAPIOP ENTRY(2);
      361     2948        /* */
      362     2949               %LOCK(G=FMC_LOCK);

   2950  1 000002   000000 630400 2                  EPPR0   0
         1 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000004   000000 701000 xent               TSX1    HFC$LOCK
         1 000005   000000 011000                    NOP     0

      363     2952    1          EAINFOWD=N$REQ.EAINFO;

   2952  1 000006   200003 470500                    LDP0    @N$REQ,,AUTO
         1 000007   000024 235100                    LDA     20,,PR0
         1 000010   200005 755100                    STA     EAINFO,,AUTO

      364     2953
      365     2954    1          CACHE$=ADDR(FMC$CACHETBL(EAINFO.HASH));

   2954  1 000011   200005 236100                    LDQ     EAINFO,,AUTO
         1 000012   000022 772000                    QRL     18
         1 000013   000006 402003                    MPY     6,DU
         1 000014   000000 036000 xsym               ADLQ    FMC_CACHE$
         1 000015   200004 756100                    STQ     CACHE$,,AUTO

      366     2955
      367     2956    1          IF FMC$CACHE.FLAGS.BUFUP AND NOT FMC$CACHE.FLAGS.ERR AND

   2956  1 000016   200004 471500                    LDP1    CACHE$,,AUTO
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:78   
         1 000017   100004 236100                    LDQ     4,,PR1
         1 000020   000001 316007                    CANQ    1,DL
         1 000021   000105 600000 1                  TZE     s:2974
         1 000022   000002 316007                    CANQ    2,DL
         1 000023   000105 601000 1                  TNZ     s:2974
         1 000024   100002 720100                    LXL0    2,,PR1
         1 000025   000001 100003                    CMPX0   1,DU
         1 000026   000037 600000 1                  TZE     s:2960
         1 000027   100000 236100                    LDQ     0,,PR1
         1 000030   000032 772000                    QRL     26
         1 000031   001776 376007                    ANQ     1022,DL
         1 000032   000000 621006                    EAX1    0,QL
         1 000033   100003 236100                    LDQ     3,,PR1
         1 000034   000037 604000 1                  TMI     s:2960
         1 000035   000001 116011 xsym               CMPQ    FMC_LIMITS+1,X1
         1 000036   000105 604400 1                  TMOZ    s:2974

      368     2957    1             (FMC$CACHE.USECNT = 1 OR
      369     2958    1              FMC$CACHE.UPCOUNT > FMC_LIMITS.UPLIMIT(FMC$CACHE.TYPE)) THEN
      370     2959    2             DO;   /* NEEDS TO BE WRITTEN AGAIN */

      371     2960    2             B$LS$->B$MLNK.MISC=DESCINIT;

   2960  1 000037   000000 235000 0                  LDA     DESCINIT
         1 000040   000000 236003                    LDQ     0,DU
         1 000041   000000 473400 xsym               LDP3    B$LS$
         1 000042   300130 757100                    STAQ    88,,PR3

      372     2961    2             B$LS$->B$MLNK.MISC.BASE=FMC$CACHE.PAGE*4096;

   2961  1 000043   100002 236100                    LDQ     2,,PR1
         1 000044   000006 772000                    QRL     6
         1 000045   000001 376000 2                  ANQ     1
         1 000046   300131 756100                    STQ     89,,PR3

      373     2962    2             IF B$MISC$->FM$GRAN.NAVX+B$MISC$->FM$GRAN.AVAIL ~= 1024 THEN

PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:79   
   2962  1 000047   000000 474400 xsym               LDP4    B$MISC$
         1 000050   400001 236100                    LDQ     1,,PR4
         1 000051   001777 376007                    ANQ     1023,DL
         1 000052   200012 756100                    STQ     BUF$+2,,AUTO
         1 000053   400001 236100                    LDQ     1,,PR4
         1 000054   000022 772000                    QRL     18
         1 000055   200012 036100                    ADLQ    BUF$+2,,AUTO
         1 000056   002000 116007                    CMPQ    1024,DL
         1 000057   000065 600000 1                  TZE     s:2965

      374     2963    2                N$REQ.BUFSIZE=4096;

   2963  1 000060   000004 236100                    LDQ     4,,PR0
         1 000061   177777 376007                    ANQ     65535,DL
         1 000062   002000 276003                    ORQ     1024,DU
         1 000063   000004 756100                    STQ     4,,PR0
         1 000064   000074 710000 1                  TRA     s:2966

      375     2964    2             ELSE
      376     2965    2                N$REQ.BUFSIZE=B$MISC$->FM$GRAN.NAVX*4;

   2965  1 000065   400001 236100                    LDQ     1,,PR4
         1 000066   000020 772000                    QRL     16
         1 000067   000002 376000 2                  ANQ     2
         1 000070   000020 736000                    QLS     16
         1 000071   000004 676100                    ERQ     4,,PR0
         1 000072   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 000073   000004 656100                    ERSQ    4,,PR0

      377     2966    2             N$REQ.OPFLG.REQ='1'B;

   2966  1 000074   000002 236007                    LDQ     2,DL
         1 000075   000004 256100                    ORSQ    4,,PR0

      378     2967    2             FMC$CACHE.FLAGS.BUFUP='0'B;

   2967  1 000076   000003 236000 2                  LDQ     3
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:80   
         1 000077   100004 356100                    ANSQ    4,,PR1

      379     2968                  %UNLOCK(G=FMC_LOCK);

   2969  1 000100   000000 630400 2                  EPPR0   0
         1 000101   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000102   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000103   000000 011000                    NOP     0

      380     2971    2             END;  /* NEEDS TO BE WRITTEN AGAIN */

   2971  1 000104   000164 710000 1                  TRA     s:2999

      381     2972    1          ELSE
      382     2973    2             DO;

      383     2974    2             FMC$CACHE.USECNT=FMC$CACHE.USECNT-1;

   2974  1 000105   100002 720100                    LXL0    2,,PR1
         1 000106   777777 621010                    EAX1    -1,X0
         1 000107   100002 441100                    SXL1    2,,PR1

      384     2975    2             IF FMC$CACHE.USECNT = 0 THEN

   2975  1 000110   000160 601000 1                  TNZ     s:2995

      385     2976    2                IF FMC_LIMITS.EXPIRE(FMC$CACHE.TYPE) = 0 OR

   2976  1 000111   100000 236100                    LDQ     0,,PR1
         1 000112   000032 772000                    QRL     26
         1 000113   001776 376007                    ANQ     1022,DL
         1 000114   000000 235006 xsym               LDA     FMC_LIMITS,QL
         1 000115   000121 600000 1                  TZE     s:2979
         1 000116   100004 236100                    LDQ     4,,PR1
         1 000117   000002 316007                    CANQ    2,DL
         1 000120   000147 600000 1                  TZE     s:2991

PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:81   
      386     2977    2                   FMC$CACHE.FLAGS.ERR THEN
      387     2978    3                   DO;   /* RELEASE PAGE */

      388     2979    3                   PP=FMC$CACHE.PAGE;

   2979  1 000121   100002 236100                    LDQ     2,,PR1
         1 000122   000022 772000                    QRL     18
         1 000123   200006 756100                    STQ     PP,,AUTO

      389     2980    3                   CALL MMJ$FIOP(PP);

   2980  1 000124   200006 633500                    EPPR3   PP,,AUTO
         1 000125   200012 453500                    STP3    BUF$+2,,AUTO
         1 000126   200012 630500                    EPPR0   BUF$+2,,AUTO
         1 000127   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000130   000000 701000 xent               TSX1    MMJ$FIOP
         1 000131   000000 011000                    NOP     0

      390     2981    3                   FMC$CACHE='0'B;

   2981  1 000132   200004 470500                    LDP0    CACHE$,,AUTO
         1 000133   000100 100400                    MLR     fill='000'O
         1 000134   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000135   000000 000030                    ADSC9   0,,PR0                   cn=0,n=24

      391     2982                        %DEC_COUNTER(ITEM=IOCACHE);

   2983  1 000136   000000 471400 xsym               LDP1    P_RESOURCE$
         1 000137   100055 235100                    LDA     45,,PR1
         1 000140   000001 135007                    SBLA    1,DL
         1 000141   100055 755100                    STA     45,,PR1

   2984  1 000142   100055 236100                    LDQ     45,,PR1
         1 000143   100057 116100                    CMPQ    47,,PR1
         1 000144   000160 603000 1                  TRC     s:2995

   2986  1 000145   100057 756100                    STQ     47,,PR1
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:82   

      392     2988    3                   END;  /* RELEASE PAGE */

   2988  1 000146   000160 710000 1                  TRA     s:2995

      393     2989    2                ELSE
      394     2990    3                   DO;  /* ADD ENTRY */

      395     2991    3                   HASH=EAINFO.HASH;

   2991  1 000147   200005 235100                    LDA     EAINFO,,AUTO
         1 000150   000022 771000                    ARL     18
         1 000151   200007 755100                    STA     HASH,,AUTO

      396     2992    3                   CALL FMC$ADD(HASH);

   2992  1 000152   200007 633500                    EPPR3   HASH,,AUTO
         1 000153   200012 453500                    STP3    BUF$+2,,AUTO
         1 000154   200012 630500                    EPPR0   BUF$+2,,AUTO
         1 000155   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000156   000000 701000 xent               TSX1    FMC$ADD
         1 000157   000000 011000                    NOP     0

      397     2993    3                   END;  /* ADD ENTRY */

      398     2994                  %UNLOCK(G=FMC_LOCK);

   2995  1 000160   000000 630400 2                  EPPR0   0
         1 000161   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000162   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000163   000000 011000                    NOP     0

      399     2997    2             END;

      400     2998
      401     2999    1          RETURN;

PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:83   
   2999  1 000164   000000 702200 xent               TSX2  ! X66_ARET

DESCINIT
 Sect OctLoc
   0     000   001777 760002                                                    ....

(unnamed)
 Sect OctLoc
   2     000   000000 006000   007777 770000   000003 777774   777777 777776    ................
      402     3000    1          END FMC$EA;
      403     3001               %EOD;

PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:84   
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   FM_BUF_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure FMC$EA.
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:85   

 **** Variables and constants ****

  ****  Section 000 RoData FMC$EA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 DESCINIT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @N$REQ                    10-0-0/w PTR         r     1 BUF$
     4-0-0/w PTR         r     1 CACHE$                     5-0-0/h STRC        r     1 EAINFO
     5-0-0/w SBIN        r     1 EAINFOWD                   7-0-0/w SBIN        r     1 HASH
    *0-0-0/d STRC(1080)  r     1 N$REQ                      6-0-0/w SBIN        r     1 PP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$LS$                      0-0-0/w PTR         r     1 B$MISC$
     0-0-0/w PTR         r     1 FMC_CACHE$                 0-0-0/w PTR         r     1 FMC_CACHEPGCNT$
     0-0-0/w STRC(72)    r     1 FMC_LIMITS(0:8191)
     0-0-0/b BIT (72)    r     1 FMC_LOCK                   0-0-0/w PTR         r     1 FMC_TYPTBL$
     0-0-0/w PTR         r     1 P_RESOURCE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(10368) r     1 B$MLNK                     0-0-0/w STRC(180)   r     1 FM$GRAN
     0-0-0/w STRC(216)   r     1 FMC$CACHE
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:86   
     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(2268)  r     1 P_RESOURCE


   Procedure FMC$EA requires 117 words for executable code.
   Procedure FMC$EA requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:87   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:88   
          MINI XREF LISTING

B$LS$
      1996**DCL      2960>>ASSIGN   2961>>ASSIGN
B$MISC$
      1997**DCL      2962>>IF       2962>>IF       2965>>ASSIGN
B$MLNK.MISC
      2424**DCL      2960<<ASSIGN
B$MLNK.MISC.BASE
      2429**DCL      2961<<ASSIGN
BUF$
      2941**DCL      2109--IMP-PTR
CACHE$
      2934**DCL      2084--IMP-PTR  2954<<ASSIGN   2956>>IF       2956>>IF       2956>>IF       2956>>IF
      2956>>IF       2961>>ASSIGN   2967>>ASSIGN   2974>>ASSIGN   2974>>ASSIGN   2975>>IF       2976>>IF
      2976>>IF       2979>>ASSIGN   2981>>ASSIGN
DESCINIT
      2928**DCL      2960>>ASSIGN
EAINFO
      2935**DCL      2938--REDEF
EAINFO.HASH
      2936**DCL      2954>>ASSIGN   2991>>ASSIGN
EAINFOWD
      2938**DCL      2952<<ASSIGN
FM$GRAN.AVAIL
      2110**DCL      2962>>IF
FM$GRAN.NAVX
      2109**DCL      2962>>IF       2965>>ASSIGN
FMC$ADD
      2944**DCL-ENT  2992--CALL
FMC$CACHE
      2084**DCL      2981<<ASSIGN
FMC$CACHE.FLAGS.BUFUP
      2100**DCL      2956>>IF       2967<<ASSIGN
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:89   
FMC$CACHE.FLAGS.ERR
      2099**DCL      2956>>IF       2976>>IF
FMC$CACHE.PAGE
      2090**DCL      2961>>ASSIGN   2979>>ASSIGN
FMC$CACHE.TYPE
      2086**DCL      2956>>IF       2976>>IF
FMC$CACHE.UPCOUNT
      2092**DCL      2956>>IF
FMC$CACHE.USECNT
      2091**DCL      2956>>IF       2974<<ASSIGN   2974>>ASSIGN   2975>>IF
FMC$CACHETBL
      2059**DCL      2954--ASSIGN
FMC_CACHE$
       102**DCL      2059--IMP-PTR  2954>>ASSIGN
FMC_CACHEPGCNT$
       103**DCL       103--IMP-PTR   103--REDEF
FMC_LIMITS.EXPIRE
       180**DCL      2976>>IF
FMC_LIMITS.UPLIMIT
       180**DCL      2956>>IF
FMC_LOCK
       104**DCL      2950<>CALL     2969<>CALL     2995<>CALL
FMC_TYPTBL$
       102**DCL      2104--IMP-PTR
HASH
      2940**DCL      2991<<ASSIGN   2992<>CALL
HFC$LOCK
      1649**DCL-ENT  2950--CALL
HFC$UNLOCK
      1649**DCL-ENT  2969--CALL     2995--CALL
MMJ$FIOP
      2946**DCL-ENT  2980--CALL
N$REQ
      2008**DCL        19--PROC
N$REQ.BUFADDR
      2017**DCL      2018--REDEF    2018--REDEF
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:90   
N$REQ.BUFSIZE
      2011**DCL      2963<<ASSIGN   2965<<ASSIGN
N$REQ.DLA.DRELADDR
      2009**DCL      2009--REDEF
N$REQ.DVE.EOMCHAR
      2046**DCL      2047--REDEF
N$REQ.EAINFO
      2040**DCL      2040--REDEF    2952>>ASSIGN
N$REQ.EAINFOX
      2040**DCL      2041--REDEF
N$REQ.EVNTINFO
      2041**DCL      2041--REDEF
N$REQ.OPFLG.REQ
      2016**DCL      2966<<ASSIGN
N$REQ.STATUS
      2022**DCL      2028--REDEF
PP
      2939**DCL      2979<<ASSIGN   2980<>CALL
P_NSCPU
      1975**DCL      1976--REDEF
P_RESOURCE.RES
      1848**DCL      1915--REDEF
P_RESOURCE.RES.IOCACHE.CURRENT
      1877**DCL      2983<<ASSIGN   2983>>ASSIGN   2984>>IF       2986>>ASSIGN
P_RESOURCE.RES.IOCACHE.MIN
      1879**DCL      2984>>IF       2986<<ASSIGN
P_RESOURCE$
      1928**DCL      1816--IMP-PTR  2983>>ASSIGN   2983>>ASSIGN   2984>>IF       2984>>IF       2986>>ASSIGN
      2986>>ASSIGN
P_UPTIME
      1964**DCL      1965--REDEF
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:91   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:92   
              MINI UREF LISTING

FM$BUF$     189**DCL
FMC$CACHEPGCNT     103**DCL
FMC$EA      19**PROC
FMC$REMOVE    2945**DCL-ENT
FMC$TYPTBL    2104**DCL
FMC_CACHEPGCNT     103**DCL
FMC_CACHEPGCNT$R     103**DCL
FMC_CACHESIZ     102**DCL
FMC_CACHESIZN     102**DCL
FMC_MASK     104**DCL
FMC_MASKTBL     104**DCL
FMC_STATS$     102**DCL
FM_WRCMP     180**DCL
MMJ$MAPIOP    2947**DCL-ENT
NI_IOLEAPERS     180**DCL
P$IODATA    1929**DCL
P$TABLE    1938**DCL
PH_CPU_MOUSED    1993**DCL
PH_JIT_ENTRY    1989**DCL
PH_MOUSE_ENTRY    1985**DCL
PH_MOUSE_LOCK    1992**DCL
PH_MOUSE_USERS    1982**DCL
PH_MOUSE_USER_NUMBER    1994**DCL
PH_MUS_PAGES    1984**DCL
P_AUIS    1970**DCL
P_AVAIL_MEM    1977**DCL
P_AVGAVAIL_MEM    1978**DCL
P_AVGETMF    1967**DCL
P_AVGIOL    1969**DCL
P_AVGRT90    1966**DCL
P_CALCNT    1954**DCL
P_CALCOMP    1955**DCL
PL6.E3A0      #003=FMC$EA File=FMC$CACHE.:E05TSI                                 TUE 07/29/97 16:39 Page:93   
P_DCTXMAX    1971**DCL
P_ETMF    1948**DCL
P_GATE    1974**DCL
P_IOLOAD    1968**DCL
P_IOS    1963**DCL
P_NINTS    1949**DCL
P_NOW    1973**DCL
P_NSCPU_SBIN    1976**DCL
P_RT90    1950**DCL
P_RUE#    1946**DCL
P_SCHD#    1947**DCL
P_STARTUP    1951**DCL
P_STOPTIME    1972**DCL
P_S_MIDLTIME    1959**DCL
P_S_MIDLWIO    1960**DCL
P_S_MIDLWRES    1961**DCL
P_S_MIDLWRESIO    1962**DCL
P_S_MXEQTIME    1958**DCL
P_S_USRVTIME    1957**DCL
P_S_UXEQTIME    1956**DCL
P_UPTIME_SBIN    1965**DCL
P_USRVTIME    1953**DCL
P_UXEQTIME    1952**DCL
VPNO    2942**DCL
WORD_    1983**DCL

PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:94   
      404        1        /*T***********************************************************/
      405        2        /*T*                                                         */
      406        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      407        4        /*T*                                                         */
      408        5        /*T***********************************************************/
      409        6        /*D*     NAME:     FMC$FINISH
      410        7                 PURPOSE:  To do whatever when a user finishes using a page.
      411        8                 INPUT:    BUFNUM - Buffer number
      412        9                           BYTES - Number of bytes to write, if we need to
      413       10                           FC - What kind of write to do
      414       11                 OUTPUT:   FLAG - 1 if we could do the write
      415       12                                  0 if we couldn't do the write
      416       13                 DESCRIPTION:
      417       14                      If the page is in the cache table, then take the user
      418       15                 off of the page, and finish off the user.
      419       16                      Otherwise, if the expire time is greater than zero
      420       17                 see if we can find a slot for the user.  If we can, then
      421       18                 set up a cache table entry and finish off the user.
      422       19        */
      423       20                 %EJECT;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:95   
      424       21        FMC$FINISH: PROC(BUFNUM, BYTES, FC, FLAG) ALTRET;
      425       22    1          DCL BUFNUM SBIN;
      426       23    1          DCL BYTES SBIN;
      427       24    1          DCL FC SBIN;
      428       25    1          DCL FLAG SBIN;
      429       26        /* */
      430       27               %INCLUDE FM_CACHE_R;
      431       39               %INCLUDE FM_CACHE_C;
      432      105               %INCLUDE FM_CNTRL_R;
      433      114               %INCLUDE FM_DATA_R;
      434      128               %INCLUDE FM$CFU;
      435      173               %INCLUDE CP_6_SUBS;
      436      713               %INCLUDE HF_LOCK_C;
      437      727               %INCLUDE N_FC_C;
      438      764               %INCLUDE B$JIT;
      439     1367               %MACRO F$DCB(BASED=BASED);
      440     1368               %INCLUDE F$DCB;
      441     1417               %MEND;
      442     1418               %INCLUDE P_PMDAT_R;
      443     1726        /* */
      444     1727    1          DCL FMC$GETTYPE ENTRY(1);
      445     1728    1          DCL FAF$FRTOSR ENTRY(3) ALTRET;
      446     1729    1          DCL FMC$GETSLOT ENTRY(4) ALTRET;
      447     1730    1          DCL FMC$ADD ENTRY(1);
      448     1731    1          DCL FMC$CLR1 ENTRY(1);
      449     1732    1          DCL MMJ$FIOP ENTRY(1);
      450     1733    1          DCL MMJ$FBTOIOPM ENTRY(2);
      451     1734    1          DCL FMB$RIO ENTRY(9) ALTRET;
      452     1735    1          DCL FMC$EA ENTRY(1);
      453     1736    1          DCL MMJ$UNMAPIOP ENTRY(1);
      454     1737        /* */
      455     1738    1          DCL B$JIT$ PTR SYMREF;
      456     1739        /* */
      457     1740               %F$DCB(BASED="BASED(JDCB$)");
      458     1790               %FMC$CACHE;
      459     1813               %FMC$CACHE(FPTN=FMC$CACHE, ARRAY=NO, STCLASS="BASED(CACHE$)");
      460     1836               %FMC$TYPTBL;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:96   
      461     1841               %FM$CFU(BASED="BASED(CFU$)");
      462     1847        /* */
      463     1848    1          DCL JDCB$ PTR;
      464     1849    1          DCL CFU$ PTR;
      465     1850    1          DCL CACHE$ PTR;
      466     1851    1          DCL DA SBIN;
      467     1852    1          DCL SETX SBIN;
      468     1853    1          DCL SRDA SBIN;
      469     1854    1          DCL VPNO SBIN;
      470     1855    1          DCL TYPE SBIN;
      471     1856    1          DCL PP SBIN;
      472     1857    1          DCL GRANS SBIN;
      473     1858    1          DCL END_ACTION BIT(1) ALIGNED;
      474     1859    1          DCL HASH SBIN;
      475     1860    1          DCL 1 EAINFO,
      476     1861    1               2 HASH UBIN(18) HALIGNED,
      477     1862    1               2 * UBIN(18) HALIGNED;
      478     1863        /* */
      479     1864    1          JDCB$=B$JIT.DCB$;
      480     1865    1          FLAG=0;
      481     1866    1          HASH=F$DCB.BFR1.CX(BUFNUM);
      482     1867
      483     1868    1          IF FMC_CACHESIZ = 0 THEN
      484     1869    1             RETURN;
      485     1870
      486     1871    1          IF HASH > 0 THEN
      487     1872    2             DO;   /* GET USER OFF OF CACHE PAGE */
      488     1873    2             VPNO=F$DCB.BFR.BUFX(BUFNUM);
      489     1874    2             CALL FINISH ALTRET(ERR);
      490     1875    2             END;  /* GET USER OFF OF CACHE PAGE */
      491     1876    1          ELSE
      492     1877    2             DO;   /* CAN WE CACHE IT */
      493     1878    2             IF F$DCB.CFU$ = ADDR(NIL) THEN
      494     1879    2                RETURN;
      495     1880    2             CFU$=F$DCB.CFU$;
      496     1881    2             IF FM$CFU.SHARE = %ALL# AND
      497     1882    2                (FM$CFU.MODCNT ~= F$DCB.MODCNT) THEN
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:97   
      498     1883    2                RETURN;
      499     1884    2             CALL FMC$GETTYPE(TYPE);
      500     1885    2             DA=F$DCB.BFR.DA(BUFNUM);
      501     1886    2             IF DA < FM_SRZERO THEN
      502     1887    2                CALL FAF$FRTOSR(DA, SRDA, GRANS) ALTRET(ERR);
      503     1888    2             ELSE
      504     1889    2                SRDA=DA;
      505     1890    2             IF FMC_LIMITS.EXPIRE(TYPE) > 0 THEN
      506     1891    3                DO;   /* YES WE CAN */
      507     1892    3                SETX=F$DCB.SETX;
      508     1893                     %HASH;
      509     1896    3                IF TYPE <= %CTYP_FIT THEN
      510     1897    3                   CALL FMC$CLR1(SRDA);
      511     1898
      512     1899                     %LOCK(G=FMC_LOCK);
      513     1902    3                CALL FMC$GETSLOT(HASH, TYPE, SRDA, CACHE$) ALTRET(NOCACHE);
      514     1903    3                VPNO=F$DCB.BFR.BUFX(BUFNUM);
      515     1904    3                CALL MMJ$FBTOIOPM(VPNO, PP);
      516     1905    3                FMC$CACHE.SRDA=SRDA;
      517     1906    3                FMC$CACHE.USECNT=1;
      518     1907    3                FMC$CACHE.PAGE=PP;
      519     1908    3                FMC$CACHE.SETX=F$DCB.SETX;
      520     1909    3                FMC$CACHE.TYPE=TYPE;
      521     1910                     %INC_COUNTER(ITEM=IOCACHE);
      522     1916                     %UNLOCK(G=FMC_LOCK);
      523     1919    3                CALL FINISH ALTRET(ERR);
      524     1920    3                END;  /* YES WE CAN */
      525     1921    2             END;   /* CAN WE CACHE IT */
      526     1922
      527     1923    1          RETURN;
      528     1924    1   ERR:   ALTRETURN;
      529     1925    1   NOCACHE: ;
      530     1926               %UNLOCK(G=FMC_LOCK);
      531     1929    1          RETURN;
      532     1930               %EJECT;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:98   
      533     1931        /*D*     ENTRY:    FMC$UPLIMIT
      534     1932                 PURPOSE:  To check UPLIMIT on the current granule, and, if
      535     1933                           necessary, write the granule.
      536     1934                 DESCRIPTION:
      537     1935                      The page is guaranteed to be updated, and is guaranteed
      538     1936                 to be in the cache.  If UPCOUNT for the page is greater than
      539     1937                 UPLIMIT for this type, write the page.  Else just return.
      540     1938        */
      541     1939    1   FMC$UPLIMIT: ENTRY(BUFNUM,BYTES,FC,FLAG) ALTRET;
      542     1940
      543     1941    1           JDCB$ = B$JIT.DCB$;
      544     1942    1           HASH = F$DCB.BFR1.CX(BUFNUM);
      545     1943    1           IF FMC_CACHESIZ = 0 THEN
      546     1944    1              RETURN;
      547     1945                %LOCK(G=FMC_LOCK);
      548     1948    1           CACHE$ = ADDR(FMC$CACHETBL(HASH));
      549     1949    1           FMC$CACHE.FLAGS.BUFUP = '1'B;
      550     1950    1           FMC$CACHE.UPCOUNT = FMC$CACHE.UPCOUNT + 1;
      551     1951    1           IF NOT FMC$CACHE.FLAGS.ERR AND
      552     1952    2                  FMC$CACHE.UPCOUNT > FMC_LIMITS.UPLIMIT(FMC$CACHE.TYPE) THEN DO;
      553     1953    2              PP = FMC$CACHE.PAGE;
      554     1954    2              FMC$CACHE.FLAGS.BUFUP = '0'B;
      555     1955    2              FMC$CACHE.UPCOUNT = 0;
      556     1956                   %UNLOCK(G=FMC_LOCK);
      557     1959    2              SRDA = FMC$CACHE.SRDA;
      558     1960    2              CALL FMB$RIO(0,PP,BYTES,SRDA,FC,-1,ENTADDR(NIL),0) ALTRET(IOERR);
      559     1961    2              RETURN;
      560     1962    2              END;
      561     1963                %UNLOCK(G=FMC_LOCK);
      562     1966    1           RETURN;
      563     1967    1   IOERR:  IF SRDA ~= -1 THEN
      564     1968    1              ALTRETURN;
      565     1969    1           RETURN;
      566     1970               %EJECT;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:99   
      567     1971        /*I*     NAME:     FINISH
      568     1972                 PURPOSE:  To finish off a user that has a page in the
      569     1973                           cache table.
      570     1974
      571     1975                 DESCRIPTION:
      572     1976
      573     1977                      If the page has been updated, then write the page out.
      574     1978                 Otherwise, just decrement the usecount.  If the page has
      575     1979                 the error bit set, or the expire time is zero, then get
      576     1980                 rid of the page.
      577     1981        */
      578     1982                 %EJECT;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:100  
      579     1983    1   FINISH: PROC ALTRET;
      580     1984        /* */
      581     1985               %LOCK(G=FMC_LOCK);
      582     1988
      583     1989    2          END_ACTION='0'B;
      584     1990    2          CACHE$=ADDR(FMC$CACHETBL(HASH));
      585     1991    2          IF F$DCB.BFR.BUFUP(BUFNUM) THEN
      586     1992    2             FMC$CACHE.FLAGS.BUFUP='1'B;
      587     1993
      588     1994    2          IF FMC$CACHE.FLAGS.BUFUP THEN
      589     1995    3             DO;   /* CACHE UPDATED */
      590     1996    3             IF F$DCB.BFR.BUFUP(BUFNUM) THEN
      591     1997    3                FMC$CACHE.UPCOUNT=FMC$CACHE.UPCOUNT+1;
      592     1998    3             ELSE
      593     1999    3                B$JIT.ACCESS.PACKS=B$JIT.ACCESS.PACKS-1;
      594     2000    3             END;  /* CACHE UPDATED */
      595     2001
      596     2002    2          IF FMC$CACHE.FLAGS.BUFUP AND NOT FMC$CACHE.FLAGS.ERR THEN
      597     2003    3             DO;   /* AN I/O */
      598     2004    3             IF FMC$CACHE.USECNT = 1 OR
      599     2005    3              FMC$CACHE.UPCOUNT > FMC_LIMITS.UPLIMIT(FMC$CACHE.TYPE) THEN
      600     2006    4                DO;   /* WRITE IT OUT */
      601     2007    4                END_ACTION='1'B;
      602     2008    4                PP=FMC$CACHE.PAGE;
      603     2009    4                EAINFO.HASH=HASH;
      604     2010    4                FMC$CACHE.FLAGS.BUFUP='0'B;
      605     2011    4                FMC$CACHE.UPCOUNT=0;
      606     2012                     %UNLOCK(G=FMC_LOCK);
      607     2015    4                SRDA=FMC$CACHE.SRDA;
      608     2016    4                CALL FMB$RIO(0, PP, BYTES, SRDA, FC, 0, ENTADDR(FMC$EA),
      609     2017    4                   EAINFO) ALTRET(IOERR);
      610     2018                     %LOCK(G=FMC_LOCK);
      611     2021    4                END;  /* WRITE IT OUT */
      612     2022    3             ELSE
      613     2023    4                DO;   /* FAKE AN I/O */
      614     2024    4                B$JIT.ACCESS.PACKS=B$JIT.ACCESS.PACKS+1;
      615     2025    4                FMC$CACHE.USECNT=FMC$CACHE.USECNT-1;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:101  
      616     2026    4                END;  /* FAKE AN I/O */
      617     2027    3             END;  /* AN I/O */
      618     2028    2          ELSE
      619     2029    2             FMC$CACHE.USECNT=FMC$CACHE.USECNT-1;
      620     2030
      621     2031    2          F$DCB.BFR1(BUFNUM)='0'B;
      622     2032    2          F$DCB.BFR(BUFNUM)=F$DCB.BFR(BUFNUM)&'000777777777'O;
      623     2033    2          CALL MMJ$UNMAPIOP(VPNO);
      624     2034
      625     2035    2          IF FMC$CACHE.USECNT = 0 AND NOT END_ACTION THEN
      626     2036    2             IF FMC$CACHE.FLAGS.ERR OR
      627     2037    2                FMC_LIMITS.EXPIRE(FMC$CACHE.TYPE) = 0 THEN
      628     2038    3                DO;   /* THROW PAGE AWAY */
      629     2039    3                PP=FMC$CACHE.PAGE;
      630     2040    3                CALL MMJ$FIOP(PP);
      631     2041    3                FMC$CACHE='0'B;
      632     2042                     %DEC_COUNTER(ITEM=IOCACHE);
      633     2048    3                END;  /* THROW PAGE AWAY */
      634     2049    2             ELSE
      635     2050    2                CALL FMC$ADD(HASH);
      636     2051
      637     2052    2          FLAG=1;
      638     2053               %UNLOCK(G=FMC_LOCK);
      639     2056
      640     2057    2          RETURN;
      641     2058
      642     2059    2   IOERR: IF SRDA ~= -1 THEN
      643     2060    2             ALTRETURN;
      644     2061               %LOCK(G=FMC_LOCK);
      645     2064    2          FMC$CACHE.USECNT = FMC$CACHE.USECNT - 1;
      646     2065    2          F$DCB.BFR1(BUFNUM)='0'B;
      647     2066    2          F$DCB.BFR(BUFNUM)=F$DCB.BFR(BUFNUM)&'000777777777'O;
      648     2067    2          CALL MMJ$UNMAPIOP(VPNO);
      649     2068    2          IF FMC$CACHE.USECNT = 0 THEN
      650     2069    2             CALL FMC$ADD(HASH);
      651     2070               %UNLOCK(G=FMC_LOCK);
      652     2073    2          RETURN;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:102  
      653     2074
      654     2075    2          END FINISH;
      655     2076    1          END FMC$FINISH;
      656     2077               %EOD;

PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:103  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$FINISH.

   Procedure FMC$FINISH requires 455 words for executable code.
   Procedure FMC$FINISH requires 32 words of local(AUTO) storage.

PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:104  

 Object Unit name= FMC$FINISH                                 File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:39:47.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   455    707  FMC$FINISH
    1  RoData even  none     5      5  FMC$FINISH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        4  FMC$FINISH
     0    242          yes     yes      Std        4  FMC$UPLIMIT
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:105  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 FMC$GETTYPE
 yes     yes           Std       4 FMC$GETSLOT
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       3 FAF$FRTOSR
         yes           Std       1 FMC$CLR1
         yes           Std       1 HFC$LOCK
 yes     yes           Std       9 FMB$RIO
         yes           Std       2 MMJ$FBTOIOPM
         yes           Std       1 FMC$EA
         yes           Std       1 MMJ$UNMAPIOP
         yes           Std       1 MMJ$FIOP
         yes           Std       1 FMC$ADD
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHE$                            FMC_TYPTBL$                           FMC_CACHESIZ
     FMC_CACHEPGCNT$                       FMC_LOCK                              FMC_MASK
     FMC_LIMITS                       r    FM_SRZERO                             P_RESOURCE$
     P_UPTIME                              P_NSCPU                               B$JIT$
     B_VECTNIL
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:106  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:107  


      404        1        /*T***********************************************************/
      405        2        /*T*                                                         */
      406        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      407        4        /*T*                                                         */
      408        5        /*T***********************************************************/
      409        6        /*D*     NAME:     FMC$FINISH
      410        7                 PURPOSE:  To do whatever when a user finishes using a page.
      411        8                 INPUT:    BUFNUM - Buffer number
      412        9                           BYTES - Number of bytes to write, if we need to
      413       10                           FC - What kind of write to do
      414       11                 OUTPUT:   FLAG - 1 if we could do the write
      415       12                                  0 if we couldn't do the write
      416       13                 DESCRIPTION:
      417       14                      If the page is in the cache table, then take the user
      418       15                 off of the page, and finish off the user.
      419       16                      Otherwise, if the expire time is greater than zero
      420       17                 see if we can find a slot for the user.  If we can, then
      421       18                 set up a cache table entry and finish off the user.
      422       19        */
      423       20                 %EJECT;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:108  
      424       21        FMC$FINISH: PROC(BUFNUM, BYTES, FC, FLAG) ALTRET;

     21  0 000000   000000 700200 xent  FMC$FINISH   TSX0  ! X66_AUTO_4
         0 000001   000040 000004                    ZERO    32,4

      425       22    1          DCL BUFNUM SBIN;
      426       23    1          DCL BYTES SBIN;
      427       24    1          DCL FC SBIN;
      428       25    1          DCL FLAG SBIN;
      429       26        /* */
      430       27               %INCLUDE FM_CACHE_R;
      431       39               %INCLUDE FM_CACHE_C;
      432      105               %INCLUDE FM_CNTRL_R;
      433      114               %INCLUDE FM_DATA_R;
      434      128               %INCLUDE FM$CFU;
      435      173               %INCLUDE CP_6_SUBS;
      436      713               %INCLUDE HF_LOCK_C;
      437      727               %INCLUDE N_FC_C;
      438      764               %INCLUDE B$JIT;
      439     1367               %MACRO F$DCB(BASED=BASED);
      440     1368               %INCLUDE F$DCB;
      441     1417               %MEND;
      442     1418               %INCLUDE P_PMDAT_R;
      443     1726        /* */
      444     1727    1          DCL FMC$GETTYPE ENTRY(1);
      445     1728    1          DCL FAF$FRTOSR ENTRY(3) ALTRET;
      446     1729    1          DCL FMC$GETSLOT ENTRY(4) ALTRET;
      447     1730    1          DCL FMC$ADD ENTRY(1);
      448     1731    1          DCL FMC$CLR1 ENTRY(1);
      449     1732    1          DCL MMJ$FIOP ENTRY(1);
      450     1733    1          DCL MMJ$FBTOIOPM ENTRY(2);
      451     1734    1          DCL FMB$RIO ENTRY(9) ALTRET;
      452     1735    1          DCL FMC$EA ENTRY(1);
      453     1736    1          DCL MMJ$UNMAPIOP ENTRY(1);
      454     1737        /* */
      455     1738    1          DCL B$JIT$ PTR SYMREF;
      456     1739        /* */
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:109  
      457     1740               %F$DCB(BASED="BASED(JDCB$)");
      458     1790               %FMC$CACHE;
      459     1813               %FMC$CACHE(FPTN=FMC$CACHE, ARRAY=NO, STCLASS="BASED(CACHE$)");
      460     1836               %FMC$TYPTBL;
      461     1841               %FM$CFU(BASED="BASED(CFU$)");
      462     1847        /* */
      463     1848    1          DCL JDCB$ PTR;
      464     1849    1          DCL CFU$ PTR;
      465     1850    1          DCL CACHE$ PTR;
      466     1851    1          DCL DA SBIN;
      467     1852    1          DCL SETX SBIN;
      468     1853    1          DCL SRDA SBIN;
      469     1854    1          DCL VPNO SBIN;
      470     1855    1          DCL TYPE SBIN;
      471     1856    1          DCL PP SBIN;
      472     1857    1          DCL GRANS SBIN;
      473     1858    1          DCL END_ACTION BIT(1) ALIGNED;
      474     1859    1          DCL HASH SBIN;
      475     1860    1          DCL 1 EAINFO,
      476     1861    1               2 HASH UBIN(18) HALIGNED,
      477     1862    1               2 * UBIN(18) HALIGNED;
      478     1863        /* */
      479     1864    1          JDCB$=B$JIT.DCB$;

   1864  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200007 756100                    STQ     JDCB$,,AUTO

      480     1865    1          FLAG=0;

   1865  0 000005   200006 471500                    LDP1    @FLAG,,AUTO
         0 000006   100000 450100                    STZ     0,,PR1

      481     1866    1          HASH=F$DCB.BFR1.CX(BUFNUM);

   1866  0 000007   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000010   000000 235100                    LDA     0,,PR0
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:110  
         0 000011   200007 473500                    LDP3    JDCB$,,AUTO
         0 000012   300122 236105                    LDQ     82,AL,PR3
         0 000013   777777 376007                    ANQ     -1,DL
         0 000014   200022 756100                    STQ     HASH,,AUTO

      482     1867
      483     1868    1          IF FMC_CACHESIZ = 0 THEN

   1868  0 000015   000000 235000 xsym               LDA     FMC_CACHESIZ
         0 000016   000020 601000 0                  TNZ     s:1871

      484     1869    1             RETURN;

   1869  0 000017   000000 702200 xent               TSX2  ! X66_ARET

      485     1870
      486     1871    1          IF HASH > 0 THEN

   1871  0 000020   000000 116003                    CMPQ    0,DU
         0 000021   000032 604400 0                  TMOZ    s:1878

      487     1872    2             DO;   /* GET USER OFF OF CACHE PAGE */

      488     1873    2             VPNO=F$DCB.BFR.BUFX(BUFNUM);

   1873  0 000022   000000 235100                    LDA     0,,PR0
         0 000023   300115 236105                    LDQ     77,AL,PR3
         0 000024   000033 772000                    QRL     27
         0 000025   000037 376007                    ANQ     31,DL
         0 000026   200015 756100                    STQ     VPNO,,AUTO

      489     1874    2             CALL FINISH ALTRET(ERR);

   1874  0 000027   000366 701000 0                  TSX1    FINISH
         0 000030   000234 702000 0                  TSX2    ERR

      490     1875    2             END;  /* GET USER OFF OF CACHE PAGE */
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:111  

   1875  0 000031   000233 710000 0                  TRA     s:1923

      491     1876    1          ELSE
      492     1877    2             DO;   /* CAN WE CACHE IT */

      493     1878    2             IF F$DCB.CFU$ = ADDR(NIL) THEN

   1878  0 000032   300066 236100                    LDQ     54,,PR3
         0 000033   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000034   000036 601000 0                  TNZ     s:1880

      494     1879    2                RETURN;

   1879  0 000035   000000 702200 xent               TSX2  ! X66_ARET

      495     1880    2             CFU$=F$DCB.CFU$;

   1880  0 000036   200010 756100                    STQ     CFU$,,AUTO

      496     1881    2             IF FM$CFU.SHARE = %ALL# AND

   1881  0 000037   200010 474500                    LDP4    CFU$,,AUTO
         0 000040   400000 236100                    LDQ     0,,PR4
         0 000041   060000 376003                    ANQ     24576,DU
         0 000042   020000 116003                    CMPQ    8192,DU
         0 000043   000054 601000 0                  TNZ     s:1884
         0 000044   300100 236100                    LDQ     64,,PR3
         0 000045   000022 772000                    QRL     18
         0 000046   200026 756100                    STQ     EAINFO+3,,AUTO
         0 000047   400006 236100                    LDQ     6,,PR4
         0 000050   000025 772000                    QRL     21
         0 000051   200026 116100                    CMPQ    EAINFO+3,,AUTO
         0 000052   000054 600000 0                  TZE     s:1884

      497     1882    2                (FM$CFU.MODCNT ~= F$DCB.MODCNT) THEN
      498     1883    2                RETURN;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:112  

   1883  0 000053   000000 702200 xent               TSX2  ! X66_ARET

      499     1884    2             CALL FMC$GETTYPE(TYPE);

   1884  0 000054   200016 635500                    EPPR5   TYPE,,AUTO
         0 000055   200026 455500                    STP5    EAINFO+3,,AUTO
         0 000056   200026 630500                    EPPR0   EAINFO+3,,AUTO
         0 000057   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000060   000000 701000 xent               TSX1    FMC$GETTYPE
         0 000061   000000 011000                    NOP     0

      500     1885    2             DA=F$DCB.BFR.DA(BUFNUM);

   1885  0 000062   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000063   000000 235100                    LDA     0,,PR0
         0 000064   200007 471500                    LDP1    JDCB$,,AUTO
         0 000065   100115 236105                    LDQ     77,AL,PR1
         0 000066   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000067   200012 756100                    STQ     DA,,AUTO

      501     1886    2             IF DA < FM_SRZERO THEN

   1886  0 000070   000073 604000 0                  TMI     s:1887
         0 000071   000000 116000 xsym               CMPQ    FM_SRZERO
         0 000072   000106 603000 0                  TRC     s:1889

      502     1887    2                CALL FAF$FRTOSR(DA, SRDA, GRANS) ALTRET(ERR);

   1887  0 000073   200020 633500                    EPPR3   GRANS,,AUTO
         0 000074   200030 453500                    STP3    EAINFO+5,,AUTO
         0 000075   200014 634500                    EPPR4   SRDA,,AUTO
         0 000076   200027 454500                    STP4    EAINFO+4,,AUTO
         0 000077   200012 635500                    EPPR5   DA,,AUTO
         0 000100   200026 455500                    STP5    EAINFO+3,,AUTO
         0 000101   200026 630500                    EPPR0   EAINFO+3,,AUTO
         0 000102   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:113  
         0 000103   000000 701000 xent               TSX1    FAF$FRTOSR
         0 000104   000234 702000 0                  TSX2    ERR
         0 000105   000107 710000 0                  TRA     s:1890

      503     1888    2             ELSE
      504     1889    2                SRDA=DA;

   1889  0 000106   200014 756100                    STQ     SRDA,,AUTO

      505     1890    2             IF FMC_LIMITS.EXPIRE(TYPE) > 0 THEN

   1890  0 000107   200016 235100                    LDA     TYPE,,AUTO
         0 000110   000001 735000                    ALS     1
         0 000111   000000 235005 xsym               LDA     FMC_LIMITS,AL
         0 000112   000233 604400 0                  TMOZ    s:1923

      506     1891    3                DO;   /* YES WE CAN */

      507     1892    3                SETX=F$DCB.SETX;

   1892  0 000113   200007 470500                    LDP0    JDCB$,,AUTO
         0 000114   000051 236100                    LDQ     41,,PR0
         0 000115   777777 376007                    ANQ     -1,DL
         0 000116   200013 756100                    STQ     SETX,,AUTO

      508     1893                     %HASH;

   1894  0 000117   200014 036100                    ADLQ    SRDA,,AUTO
         0 000120   000000 376000 xsym               ANQ     FMC_MASK
         0 000121   000002 736000                    QLS     2
         0 000122   000001 036007                    ADLQ    1,DL
         0 000123   200022 756100                    STQ     HASH,,AUTO

      509     1896    3                IF TYPE <= %CTYP_FIT THEN

   1896  0 000124   200016 235100                    LDA     TYPE,,AUTO
         0 000125   000004 115007                    CMPA    4,DL
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:114  
         0 000126   000135 605400 0                  TPNZ    s:1900

      510     1897    3                   CALL FMC$CLR1(SRDA);

   1897  0 000127   200014 631500                    EPPR1   SRDA,,AUTO
         0 000130   200026 451500                    STP1    EAINFO+3,,AUTO
         0 000131   200026 630500                    EPPR0   EAINFO+3,,AUTO
         0 000132   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000133   000000 701000 xent               TSX1    FMC$CLR1
         0 000134   000000 011000                    NOP     0

      511     1898
      512     1899                     %LOCK(G=FMC_LOCK);

   1900  0 000135   000000 630400 1                  EPPR0   0
         0 000136   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000137   000000 701000 xent               TSX1    HFC$LOCK
         0 000140   000000 011000                    NOP     0

      513     1902    3                CALL FMC$GETSLOT(HASH, TYPE, SRDA, CACHE$) ALTRET(NOCACHE);

   1902  0 000141   200011 630500                    EPPR0   CACHE$,,AUTO
         0 000142   200031 450500                    STP0    EAINFO+6,,AUTO
         0 000143   200014 631500                    EPPR1   SRDA,,AUTO
         0 000144   200030 451500                    STP1    EAINFO+5,,AUTO
         0 000145   200016 633500                    EPPR3   TYPE,,AUTO
         0 000146   200027 453500                    STP3    EAINFO+4,,AUTO
         0 000147   200022 634500                    EPPR4   HASH,,AUTO
         0 000150   200026 454500                    STP4    EAINFO+3,,AUTO
         0 000151   200026 630500                    EPPR0   EAINFO+3,,AUTO
         0 000152   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000153   000000 701000 xent               TSX1    FMC$GETSLOT
         0 000154   000235 702000 0                  TSX2    NOCACHE

      514     1903    3                VPNO=F$DCB.BFR.BUFX(BUFNUM);

   1903  0 000155   200003 470500                    LDP0    @BUFNUM,,AUTO
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:115  
         0 000156   000000 235100                    LDA     0,,PR0
         0 000157   200007 471500                    LDP1    JDCB$,,AUTO
         0 000160   100115 236105                    LDQ     77,AL,PR1
         0 000161   000033 772000                    QRL     27
         0 000162   000037 376007                    ANQ     31,DL
         0 000163   200015 756100                    STQ     VPNO,,AUTO

      515     1904    3                CALL MMJ$FBTOIOPM(VPNO, PP);

   1904  0 000164   200017 633500                    EPPR3   PP,,AUTO
         0 000165   200027 453500                    STP3    EAINFO+4,,AUTO
         0 000166   200015 634500                    EPPR4   VPNO,,AUTO
         0 000167   200026 454500                    STP4    EAINFO+3,,AUTO
         0 000170   200026 630500                    EPPR0   EAINFO+3,,AUTO
         0 000171   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000172   000000 701000 xent               TSX1    MMJ$FBTOIOPM
         0 000173   000000 011000                    NOP     0

      516     1905    3                FMC$CACHE.SRDA=SRDA;

   1905  0 000174   200011 470500                    LDP0    CACHE$,,AUTO
         0 000175   200014 236100                    LDQ     SRDA,,AUTO
         0 000176   000000 552134                    STBQ    0,'34'O,PR0

      517     1906    3                FMC$CACHE.USECNT=1;

   1906  0 000177   000001 220003                    LDX0    1,DU
         0 000200   200011 470500                    LDP0    CACHE$,,AUTO
         0 000201   000002 440100                    SXL0    2,,PR0

      518     1907    3                FMC$CACHE.PAGE=PP;

   1907  0 000202   200017 721100                    LXL1    PP,,AUTO
         0 000203   200011 470500                    LDP0    CACHE$,,AUTO
         0 000204   000002 741100                    STX1    2,,PR0

      519     1908    3                FMC$CACHE.SETX=F$DCB.SETX;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:116  

   1908  0 000205   200007 470500                    LDP0    JDCB$,,AUTO
         0 000206   000051 721100                    LXL1    41,,PR0
         0 000207   200011 471500                    LDP1    CACHE$,,AUTO
         0 000210   100004 741100                    STX1    4,,PR1

      520     1909    3                FMC$CACHE.TYPE=TYPE;

   1909  0 000211   200011 471500                    LDP1    CACHE$,,AUTO
         0 000212   200016 236100                    LDQ     TYPE,,AUTO
         0 000213   000033 736000                    QLS     27
         0 000214   100000 552140                    STBQ    0,'40'O,PR1

      521     1910                     %INC_COUNTER(ITEM=IOCACHE);

   1911  0 000215   000000 471400 xsym               LDP1    P_RESOURCE$
         0 000216   100055 235100                    LDA     45,,PR1
         0 000217   000001 035007                    ADLA    1,DL
         0 000220   100055 755100                    STA     45,,PR1

   1912  0 000221   100056 236100                    LDQ     46,,PR1
         0 000222   100055 116100                    CMPQ    45,,PR1
         0 000223   000225 603000 0                  TRC     s:1917

   1914  0 000224   100056 755100                    STA     46,,PR1

      522     1916                     %UNLOCK(G=FMC_LOCK);

   1917  0 000225   000000 630400 1                  EPPR0   0
         0 000226   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000227   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000230   000000 011000                    NOP     0

      523     1919    3                CALL FINISH ALTRET(ERR);

   1919  0 000231   000366 701000 0                  TSX1    FINISH
         0 000232   000234 702000 0                  TSX2    ERR
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:117  

      524     1920    3                END;  /* YES WE CAN */

      525     1921    2             END;   /* CAN WE CACHE IT */

      526     1922
      527     1923    1          RETURN;

   1923  0 000233   000000 702200 xent               TSX2  ! X66_ARET

      528     1924    1   ERR:   ALTRETURN;

   1924  0 000234   000000 702200 xent  ERR          TSX2  ! X66_AALT

   1912  0 000235                       NOCACHE      null
      529     1925    1   NOCACHE: ;
      530     1926               %UNLOCK(G=FMC_LOCK);

   1927  0 000235   000000 630400 1                  EPPR0   0
         0 000236   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000237   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000240   000000 011000                    NOP     0

      531     1929    1          RETURN;

   1929  0 000241   000000 702200 xent               TSX2  ! X66_ARET

      532     1930               %EJECT;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:118  
      533     1931        /*D*     ENTRY:    FMC$UPLIMIT
      534     1932                 PURPOSE:  To check UPLIMIT on the current granule, and, if
      535     1933                           necessary, write the granule.
      536     1934                 DESCRIPTION:
      537     1935                      The page is guaranteed to be updated, and is guaranteed
      538     1936                 to be in the cache.  If UPCOUNT for the page is greater than
      539     1937                 UPLIMIT for this type, write the page.  Else just return.
      540     1938        */
      541     1939    1   FMC$UPLIMIT: ENTRY(BUFNUM,BYTES,FC,FLAG) ALTRET;

   1939  0 000242   000000 700200 xent  FMC$UPLIMIT  TSX0  ! X66_AUTO_4
         0 000243   000040 000004                    ZERO    32,4

      542     1940
      543     1941    1           JDCB$ = B$JIT.DCB$;

   1941  0 000244   000000 470400 xsym               LDP0    B$JIT$
         0 000245   000232 236100                    LDQ     154,,PR0
         0 000246   200007 756100                    STQ     JDCB$,,AUTO

      544     1942    1           HASH = F$DCB.BFR1.CX(BUFNUM);

   1942  0 000247   200003 471500                    LDP1    @BUFNUM,,AUTO
         0 000250   100000 235100                    LDA     0,,PR1
         0 000251   200007 473500                    LDP3    JDCB$,,AUTO
         0 000252   300122 236105                    LDQ     82,AL,PR3
         0 000253   777777 376007                    ANQ     -1,DL
         0 000254   200022 756100                    STQ     HASH,,AUTO

      545     1943    1           IF FMC_CACHESIZ = 0 THEN

   1943  0 000255   000000 235000 xsym               LDA     FMC_CACHESIZ
         0 000256   000260 601000 0                  TNZ     s:1946

      546     1944    1              RETURN;

   1944  0 000257   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:119  

      547     1945                %LOCK(G=FMC_LOCK);

   1946  0 000260   000000 630400 1                  EPPR0   0
         0 000261   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000262   000000 701000 xent               TSX1    HFC$LOCK
         0 000263   000000 011000                    NOP     0

      548     1948    1           CACHE$ = ADDR(FMC$CACHETBL(HASH));

   1948  0 000264   200022 236100                    LDQ     HASH,,AUTO
         0 000265   000006 402003                    MPY     6,DU
         0 000266   000000 036000 xsym               ADLQ    FMC_CACHE$
         0 000267   200011 756100                    STQ     CACHE$,,AUTO

      549     1949    1           FMC$CACHE.FLAGS.BUFUP = '1'B;

   1949  0 000270   200011 470500                    LDP0    CACHE$,,AUTO
         0 000271   000001 236007                    LDQ     1,DL
         0 000272   000004 256100                    ORSQ    4,,PR0

      550     1950    1           FMC$CACHE.UPCOUNT = FMC$CACHE.UPCOUNT + 1;

   1950  0 000273   200011 470500                    LDP0    CACHE$,,AUTO
         0 000274   000003 235100                    LDA     3,,PR0
         0 000275   000001 035007                    ADLA    1,DL
         0 000276   000003 755100                    STA     3,,PR0

      551     1951    1           IF NOT FMC$CACHE.FLAGS.ERR AND

   1951  0 000277   200011 470500                    LDP0    CACHE$,,AUTO
         0 000300   000004 236100                    LDQ     4,,PR0
         0 000301   000002 316007                    CANQ    2,DL
         0 000302   000354 601000 0                  TNZ     s:1964
         0 000303   000000 236100                    LDQ     0,,PR0
         0 000304   000032 772000                    QRL     26
         0 000305   001776 376007                    ANQ     1022,DL
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:120  
         0 000306   000000 620006                    EAX0    0,QL
         0 000307   000003 236100                    LDQ     3,,PR0
         0 000310   000313 604000 0                  TMI     s:1953
         0 000311   000001 116010 xsym               CMPQ    FMC_LIMITS+1,X0
         0 000312   000354 604400 0                  TMOZ    s:1964

      552     1952    2                  FMC$CACHE.UPCOUNT > FMC_LIMITS.UPLIMIT(FMC$CACHE.TYPE) THEN DO;

      553     1953    2              PP = FMC$CACHE.PAGE;

   1953  0 000313   000002 236100                    LDQ     2,,PR0
         0 000314   000022 772000                    QRL     18
         0 000315   200017 756100                    STQ     PP,,AUTO

      554     1954    2              FMC$CACHE.FLAGS.BUFUP = '0'B;

   1954  0 000316   000001 236000 1                  LDQ     1
         0 000317   000004 356100                    ANSQ    4,,PR0

      555     1955    2              FMC$CACHE.UPCOUNT = 0;

   1955  0 000320   200011 470500                    LDP0    CACHE$,,AUTO
         0 000321   000003 450100                    STZ     3,,PR0

      556     1956                   %UNLOCK(G=FMC_LOCK);

   1957  0 000322   000000 630400 1                  EPPR0   0
         0 000323   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000324   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000325   000000 011000                    NOP     0

      557     1959    2              SRDA = FMC$CACHE.SRDA;

   1959  0 000326   200011 470500                    LDP0    CACHE$,,AUTO
         0 000327   000000 236100                    LDQ     0,,PR0
         0 000330   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000331   200014 756100                    STQ     SRDA,,AUTO
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:121  

      558     1960    2              CALL FMB$RIO(0,PP,BYTES,SRDA,FC,-1,ENTADDR(NIL),0) ALTRET(IOERR);

   1960  0 000332   000002 237000 1                  LDAQ    2
         0 000333   200034 757100                    STAQ    EAINFO+9,,AUTO
         0 000334   000004 236000 1                  LDQ     4
         0 000335   200005 235100                    LDA     @FC,,AUTO
         0 000336   200032 757100                    STAQ    EAINFO+7,,AUTO
         0 000337   200014 631500                    EPPR1   SRDA,,AUTO
         0 000340   200031 451500                    STP1    EAINFO+6,,AUTO
         0 000341   200004 236100                    LDQ     @BYTES,,AUTO
         0 000342   200030 756100                    STQ     EAINFO+5,,AUTO
         0 000343   200017 633500                    EPPR3   PP,,AUTO
         0 000344   200027 453500                    STP3    EAINFO+4,,AUTO
         0 000345   000002 236000 1                  LDQ     2
         0 000346   200026 756100                    STQ     EAINFO+3,,AUTO
         0 000347   200026 630500                    EPPR0   EAINFO+3,,AUTO
         0 000350   000026 631400 xsym               EPPR1   B_VECTNIL+22
         0 000351   000000 701000 xent               TSX1    FMB$RIO
         0 000352   000361 702000 0                  TSX2    IOERR

      559     1961    2              RETURN;

   1961  0 000353   000000 702200 xent               TSX2  ! X66_ARET

      560     1962    2              END;
      561     1963                %UNLOCK(G=FMC_LOCK);

   1964  0 000354   000000 630400 1                  EPPR0   0
         0 000355   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000356   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000357   000000 011000                    NOP     0

      562     1966    1           RETURN;

   1966  0 000360   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:122  
      563     1967    1   IOERR:  IF SRDA ~= -1 THEN

   1967  0 000361   200014 235100       IOERR        LDA     SRDA,,AUTO
         0 000362   000027 115000 xsym               CMPA    B_VECTNIL+23
         0 000363   000365 600000 0                  TZE     s:1969

      564     1968    1              ALTRETURN;

   1968  0 000364   000000 702200 xent               TSX2  ! X66_AALT

      565     1969    1           RETURN;

   1969  0 000365   000000 702200 xent               TSX2  ! X66_ARET

      566     1970               %EJECT;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:123  
      567     1971        /*I*     NAME:     FINISH
      568     1972                 PURPOSE:  To finish off a user that has a page in the
      569     1973                           cache table.
      570     1974
      571     1975                 DESCRIPTION:
      572     1976
      573     1977                      If the page has been updated, then write the page out.
      574     1978                 Otherwise, just decrement the usecount.  If the page has
      575     1979                 the error bit set, or the expire time is zero, then get
      576     1980                 rid of the page.
      577     1981        */
      578     1982                 %EJECT;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:124  
      579     1983    1   FINISH: PROC ALTRET;

   1983  0 000366   200024 741300       FINISH       STX1  ! EAINFO+1,,AUTO

      580     1984        /* */
      581     1985               %LOCK(G=FMC_LOCK);

   1986  0 000367   000000 630400 1                  EPPR0   0
         0 000370   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000371   000000 701000 xent               TSX1    HFC$LOCK
         0 000372   000000 011000                    NOP     0

      582     1988
      583     1989    2          END_ACTION='0'B;

   1989  0 000373   200021 450100                    STZ     END_ACTION,,AUTO

      584     1990    2          CACHE$=ADDR(FMC$CACHETBL(HASH));

   1990  0 000374   200022 236100                    LDQ     HASH,,AUTO
         0 000375   000006 402003                    MPY     6,DU
         0 000376   000000 036000 xsym               ADLQ    FMC_CACHE$
         0 000377   200011 756100                    STQ     CACHE$,,AUTO

      585     1991    2          IF F$DCB.BFR.BUFUP(BUFNUM) THEN

   1991  0 000400   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000401   000000 235100                    LDA     0,,PR0
         0 000402   200007 471500                    LDP1    JDCB$,,AUTO
         0 000403   100115 234105                    SZN     77,AL,PR1
         0 000404   000410 605000 0                  TPL     s:1994

      586     1992    2             FMC$CACHE.FLAGS.BUFUP='1'B;

   1992  0 000405   200011 473500                    LDP3    CACHE$,,AUTO
         0 000406   000001 236007                    LDQ     1,DL
         0 000407   300004 256100                    ORSQ    4,,PR3
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:125  

      587     1993
      588     1994    2          IF FMC$CACHE.FLAGS.BUFUP THEN

   1994  0 000410   200011 473500                    LDP3    CACHE$,,AUTO
         0 000411   300004 236100                    LDQ     4,,PR3
         0 000412   000001 316007                    CANQ    1,DL
         0 000413   000426 600000 0                  TZE     s:2002

      589     1995    3             DO;   /* CACHE UPDATED */

      590     1996    3             IF F$DCB.BFR.BUFUP(BUFNUM) THEN

   1996  0 000414   000000 235100                    LDA     0,,PR0
         0 000415   100115 234105                    SZN     77,AL,PR1
         0 000416   000423 605000 0                  TPL     s:1999

      591     1997    3                FMC$CACHE.UPCOUNT=FMC$CACHE.UPCOUNT+1;

   1997  0 000417   300003 235100                    LDA     3,,PR3
         0 000420   000001 035007                    ADLA    1,DL
         0 000421   300003 755100                    STA     3,,PR3
         0 000422   000426 710000 0                  TRA     s:2002

      592     1998    3             ELSE
      593     1999    3                B$JIT.ACCESS.PACKS=B$JIT.ACCESS.PACKS-1;

   1999  0 000423   000000 474400 xsym               LDP4    B$JIT$
         0 000424   000001 336007                    LCQ     1,DL
         0 000425   400327 056100                    ASQ     215,,PR4

      594     2000    3             END;  /* CACHE UPDATED */

      595     2001
      596     2002    2          IF FMC$CACHE.FLAGS.BUFUP AND NOT FMC$CACHE.FLAGS.ERR THEN

   2002  0 000426   200011 473500                    LDP3    CACHE$,,AUTO
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:126  
         0 000427   300004 236100                    LDQ     4,,PR3
         0 000430   000001 316007                    CANQ    1,DL
         0 000431   000532 600000 0                  TZE     s:2029
         0 000432   000002 316007                    CANQ    2,DL
         0 000433   000532 601000 0                  TNZ     s:2029

      597     2003    3             DO;   /* AN I/O */

      598     2004    3             IF FMC$CACHE.USECNT = 1 OR

   2004  0 000434   300002 720100                    LXL0    2,,PR3
         0 000435   000001 100003                    CMPX0   1,DU
         0 000436   000447 600000 0                  TZE     s:2007
         0 000437   300000 236100                    LDQ     0,,PR3
         0 000440   000032 772000                    QRL     26
         0 000441   001776 376007                    ANQ     1022,DL
         0 000442   000000 621006                    EAX1    0,QL
         0 000443   300003 236100                    LDQ     3,,PR3
         0 000444   000447 604000 0                  TMI     s:2007
         0 000445   000001 116011 xsym               CMPQ    FMC_LIMITS+1,X1
         0 000446   000524 604400 0                  TMOZ    s:2024

      599     2005    3              FMC$CACHE.UPCOUNT > FMC_LIMITS.UPLIMIT(FMC$CACHE.TYPE) THEN
      600     2006    4                DO;   /* WRITE IT OUT */

      601     2007    4                END_ACTION='1'B;

   2007  0 000447   400000 236003                    LDQ     -131072,DU
         0 000450   200021 756100                    STQ     END_ACTION,,AUTO

      602     2008    4                PP=FMC$CACHE.PAGE;

   2008  0 000451   300002 236100                    LDQ     2,,PR3
         0 000452   000022 772000                    QRL     18
         0 000453   200017 756100                    STQ     PP,,AUTO

      603     2009    4                EAINFO.HASH=HASH;
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:127  

   2009  0 000454   200022 720100                    LXL0    HASH,,AUTO
         0 000455   200023 740100                    STX0    EAINFO,,AUTO

      604     2010    4                FMC$CACHE.FLAGS.BUFUP='0'B;

   2010  0 000456   000001 236000 1                  LDQ     1
         0 000457   300004 356100                    ANSQ    4,,PR3

      605     2011    4                FMC$CACHE.UPCOUNT=0;

   2011  0 000460   200011 473500                    LDP3    CACHE$,,AUTO
         0 000461   300003 450100                    STZ     3,,PR3

      606     2012                     %UNLOCK(G=FMC_LOCK);

   2013  0 000462   000000 630400 1                  EPPR0   0
         0 000463   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000464   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000465   000000 011000                    NOP     0

      607     2015    4                SRDA=FMC$CACHE.SRDA;

   2015  0 000466   200011 470500                    LDP0    CACHE$,,AUTO
         0 000467   000000 236100                    LDQ     0,,PR0
         0 000470   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000471   200014 756100                    STQ     SRDA,,AUTO

      608     2016    4                CALL FMB$RIO(0, PP, BYTES, SRDA, FC, 0, ENTADDR(FMC$EA),

   2016  0 000472   000000 636000 xent               EAQ     FMC$EA
         0 000473   200026 756100                    STQ     EAINFO+3,,AUTO
         0 000474   200023 631500                    EPPR1   EAINFO,,AUTO
         0 000475   200037 451500                    STP1    EAINFO+12,,AUTO
         0 000476   200026 633500                    EPPR3   EAINFO+3,,AUTO
         0 000477   200036 453500                    STP3    EAINFO+11,,AUTO
         0 000500   000002 236000 1                  LDQ     2
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:128  
         0 000501   200005 235100                    LDA     @FC,,AUTO
         0 000502   200034 757100                    STAQ    EAINFO+9,,AUTO
         0 000503   200014 634500                    EPPR4   SRDA,,AUTO
         0 000504   200033 454500                    STP4    EAINFO+8,,AUTO
         0 000505   200004 236100                    LDQ     @BYTES,,AUTO
         0 000506   200032 756100                    STQ     EAINFO+7,,AUTO
         0 000507   200017 635500                    EPPR5   PP,,AUTO
         0 000510   200031 455500                    STP5    EAINFO+6,,AUTO
         0 000511   000002 236000 1                  LDQ     2
         0 000512   200030 756100                    STQ     EAINFO+5,,AUTO
         0 000513   200030 630500                    EPPR0   EAINFO+5,,AUTO
         0 000514   000026 631400 xsym               EPPR1   B_VECTNIL+22
         0 000515   000000 701000 xent               TSX1    FMB$RIO
         0 000516   000635 702000 0                  TSX2    IOERR

      609     2017    4                   EAINFO) ALTRET(IOERR);
      610     2018                     %LOCK(G=FMC_LOCK);

   2019  0 000517   000000 630400 1                  EPPR0   0
         0 000520   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000521   000000 701000 xent               TSX1    HFC$LOCK
         0 000522   000000 011000                    NOP     0

      611     2021    4                END;  /* WRITE IT OUT */

   2021  0 000523   000535 710000 0                  TRA     s:2031

      612     2022    3             ELSE
      613     2023    4                DO;   /* FAKE AN I/O */

      614     2024    4                B$JIT.ACCESS.PACKS=B$JIT.ACCESS.PACKS+1;

   2024  0 000524   000000 474400 xsym               LDP4    B$JIT$
         0 000525   400327 054100                    AOS     215,,PR4

      615     2025    4                FMC$CACHE.USECNT=FMC$CACHE.USECNT-1;

PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:129  
   2025  0 000526   300002 720100                    LXL0    2,,PR3
         0 000527   777777 621010                    EAX1    -1,X0
         0 000530   300002 441100                    SXL1    2,,PR3

      616     2026    4                END;  /* FAKE AN I/O */

      617     2027    3             END;  /* AN I/O */

   2027  0 000531   000535 710000 0                  TRA     s:2031

      618     2028    2          ELSE
      619     2029    2             FMC$CACHE.USECNT=FMC$CACHE.USECNT-1;

   2029  0 000532   300002 720100                    LXL0    2,,PR3
         0 000533   777777 621010                    EAX1    -1,X0
         0 000534   300002 441100                    SXL1    2,,PR3

      620     2030
      621     2031    2          F$DCB.BFR1(BUFNUM)='0'B;

   2031  0 000535   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000536   000000 235100                    LDA     0,,PR0
         0 000537   200007 471500                    LDP1    JDCB$,,AUTO
         0 000540   100122 450105                    STZ     82,AL,PR1

      622     2032    2          F$DCB.BFR(BUFNUM)=F$DCB.BFR(BUFNUM)&'000777777777'O;

   2032  0 000541   000000 235100                    LDA     0,,PR0
         0 000542   100115 236105                    LDQ     77,AL,PR1
         0 000543   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000544   100115 756105                    STQ     77,AL,PR1

      623     2033    2          CALL MMJ$UNMAPIOP(VPNO);

   2033  0 000545   200015 633500                    EPPR3   VPNO,,AUTO
         0 000546   200026 453500                    STP3    EAINFO+3,,AUTO
         0 000547   200026 630500                    EPPR0   EAINFO+3,,AUTO
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:130  
         0 000550   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000551   000000 701000 xent               TSX1    MMJ$UNMAPIOP
         0 000552   000000 011000                    NOP     0

      624     2034
      625     2035    2          IF FMC$CACHE.USECNT = 0 AND NOT END_ACTION THEN

   2035  0 000553   200011 470500                    LDP0    CACHE$,,AUTO
         0 000554   000002 720100                    LXL0    2,,PR0
         0 000555   000624 601000 0                  TNZ     s:2052
         0 000556   200021 234100                    SZN     END_ACTION,,AUTO
         0 000557   000624 604000 0                  TMI     s:2052

      626     2036    2             IF FMC$CACHE.FLAGS.ERR OR

   2036  0 000560   000004 236100                    LDQ     4,,PR0
         0 000561   000002 316007                    CANQ    2,DL
         0 000562   000570 601000 0                  TNZ     s:2039
         0 000563   000000 236100                    LDQ     0,,PR0
         0 000564   000032 772000                    QRL     26
         0 000565   001776 376007                    ANQ     1022,DL
         0 000566   000000 235006 xsym               LDA     FMC_LIMITS,QL
         0 000567   000616 601000 0                  TNZ     s:2050

      627     2037    2                FMC_LIMITS.EXPIRE(FMC$CACHE.TYPE) = 0 THEN
      628     2038    3                DO;   /* THROW PAGE AWAY */

      629     2039    3                PP=FMC$CACHE.PAGE;

   2039  0 000570   000002 236100                    LDQ     2,,PR0
         0 000571   000022 772000                    QRL     18
         0 000572   200017 756100                    STQ     PP,,AUTO

      630     2040    3                CALL MMJ$FIOP(PP);

   2040  0 000573   200017 631500                    EPPR1   PP,,AUTO
         0 000574   200026 451500                    STP1    EAINFO+3,,AUTO
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:131  
         0 000575   200026 630500                    EPPR0   EAINFO+3,,AUTO
         0 000576   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000577   000000 701000 xent               TSX1    MMJ$FIOP
         0 000600   000000 011000                    NOP     0

      631     2041    3                FMC$CACHE='0'B;

   2041  0 000601   200011 470500                    LDP0    CACHE$,,AUTO
         0 000602   000100 100400                    MLR     fill='000'O
         0 000603   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000604   000000 000030                    ADSC9   0,,PR0                   cn=0,n=24

      632     2042                     %DEC_COUNTER(ITEM=IOCACHE);

   2043  0 000605   000000 470400 xsym               LDP0    P_RESOURCE$
         0 000606   000055 235100                    LDA     45,,PR0
         0 000607   000001 135007                    SBLA    1,DL
         0 000610   000055 755100                    STA     45,,PR0

   2044  0 000611   000055 236100                    LDQ     45,,PR0
         0 000612   000057 116100                    CMPQ    47,,PR0
         0 000613   000624 603000 0                  TRC     s:2052

   2046  0 000614   000057 756100                    STQ     47,,PR0

      633     2048    3                END;  /* THROW PAGE AWAY */

   2048  0 000615   000624 710000 0                  TRA     s:2052

      634     2049    2             ELSE
      635     2050    2                CALL FMC$ADD(HASH);

   2050  0 000616   200022 631500                    EPPR1   HASH,,AUTO
         0 000617   200026 451500                    STP1    EAINFO+3,,AUTO
         0 000620   200026 630500                    EPPR0   EAINFO+3,,AUTO
         0 000621   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000622   000000 701000 xent               TSX1    FMC$ADD
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:132  
         0 000623   000000 011000                    NOP     0

      636     2051
      637     2052    2          FLAG=1;

   2052  0 000624   000001 235007                    LDA     1,DL
         0 000625   200006 470500                    LDP0    @FLAG,,AUTO
         0 000626   000000 755100                    STA     0,,PR0

      638     2053               %UNLOCK(G=FMC_LOCK);

   2054  0 000627   000000 630400 1                  EPPR0   0
         0 000630   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000631   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000632   000000 011000                    NOP     0

      639     2056
      640     2057    2          RETURN;

   2057  0 000633   200024 221300                    LDX1  ! EAINFO+1,,AUTO
         0 000634   000001 702211                    TSX2  ! 1,X1

      641     2058
      642     2059    2   IOERR: IF SRDA ~= -1 THEN

   2059  0 000635   200014 235100       IOERR        LDA     SRDA,,AUTO
         0 000636   000027 115000 xsym               CMPA    B_VECTNIL+23
         0 000637   000642 600000 0                  TZE     s:2062

      643     2060    2             ALTRETURN;

   2060  0 000640   200024 221300                    LDX1  ! EAINFO+1,,AUTO
         0 000641   000000 702211                    TSX2  ! 0,X1

      644     2061               %LOCK(G=FMC_LOCK);

   2062  0 000642   000000 630400 1                  EPPR0   0
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:133  
         0 000643   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000644   000000 701000 xent               TSX1    HFC$LOCK
         0 000645   000000 011000                    NOP     0

      645     2064    2          FMC$CACHE.USECNT = FMC$CACHE.USECNT - 1;

   2064  0 000646   200011 470500                    LDP0    CACHE$,,AUTO
         0 000647   000002 720100                    LXL0    2,,PR0
         0 000650   777777 621010                    EAX1    -1,X0
         0 000651   000002 441100                    SXL1    2,,PR0

      646     2065    2          F$DCB.BFR1(BUFNUM)='0'B;

   2065  0 000652   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000653   000000 235100                    LDA     0,,PR0
         0 000654   200007 471500                    LDP1    JDCB$,,AUTO
         0 000655   100122 450105                    STZ     82,AL,PR1

      647     2066    2          F$DCB.BFR(BUFNUM)=F$DCB.BFR(BUFNUM)&'000777777777'O;

   2066  0 000656   000000 235100                    LDA     0,,PR0
         0 000657   100115 236105                    LDQ     77,AL,PR1
         0 000660   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000661   100115 756105                    STQ     77,AL,PR1

      648     2067    2          CALL MMJ$UNMAPIOP(VPNO);

   2067  0 000662   200015 633500                    EPPR3   VPNO,,AUTO
         0 000663   200026 453500                    STP3    EAINFO+3,,AUTO
         0 000664   200026 630500                    EPPR0   EAINFO+3,,AUTO
         0 000665   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000666   000000 701000 xent               TSX1    MMJ$UNMAPIOP
         0 000667   000000 011000                    NOP     0

      649     2068    2          IF FMC$CACHE.USECNT = 0 THEN

   2068  0 000670   200011 470500                    LDP0    CACHE$,,AUTO
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:134  
         0 000671   000002 720100                    LXL0    2,,PR0
         0 000672   000701 601000 0                  TNZ     s:2071

      650     2069    2             CALL FMC$ADD(HASH);

   2069  0 000673   200022 631500                    EPPR1   HASH,,AUTO
         0 000674   200026 451500                    STP1    EAINFO+3,,AUTO
         0 000675   200026 630500                    EPPR0   EAINFO+3,,AUTO
         0 000676   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000677   000000 701000 xent               TSX1    FMC$ADD
         0 000700   000000 011000                    NOP     0

      651     2070               %UNLOCK(G=FMC_LOCK);

   2071  0 000701   000000 630400 1                  EPPR0   0
         0 000702   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000703   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000704   000000 011000                    NOP     0

      652     2073    2          RETURN;

   2073  0 000705   200024 221300                    LDX1  ! EAINFO+1,,AUTO
         0 000706   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   1     000   000000 006000   777777 777776   000002 006000   000002 006000    ................
   1     004   000027 006000                                                    ....
      653     2074
      654     2075    2          END FINISH;
      655     2076    1          END FMC$FINISH;
      656     2077               %EOD;

PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:135  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$FINISH.
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:136  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUFNUM                    4-0-0/w PTR         r     1 @BYTES
     5-0-0/w PTR         r     1 @FC                        6-0-0/w PTR         r     1 @FLAG
    *0-0-0/w SBIN        r     1 BUFNUM                    *0-0-0/w SBIN        r     1 BYTES
    11-0-0/w PTR         r     1 CACHE$                    10-0-0/w PTR         r     1 CFU$
    12-0-0/w SBIN        r     1 DA                        23-0-0/h STRC        r     1 EAINFO
    21-0-0/w BIT         r     1 END_ACTION                *0-0-0/w SBIN        r     1 FC
    *0-0-0/w SBIN        r     1 FLAG                      20-0-0/w SBIN        r     1 GRANS
    22-0-0/w SBIN        r     1 HASH                       7-0-0/w PTR         r     1 JDCB$
    17-0-0/w SBIN        r     1 PP                        13-0-0/w SBIN        r     1 SETX
    14-0-0/w SBIN        r     1 SRDA                      16-0-0/w SBIN        r     1 TYPE
    15-0-0/w SBIN        r     1 VPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FMC_CACHE$
     0-0-0/w PTR         r     1 FMC_CACHEPGCNT$            0-0-0/w SBIN        r     1 FMC_CACHESIZ
     0-0-0/w STRC(72)    r     1 FMC_LIMITS(0:8191)
     0-0-0/b BIT (72)    r     1 FMC_LOCK                   0-0-0/b BIT         r     1 FMC_MASK
     0-0-0/w PTR         r     1 FMC_TYPTBL$                0-0-0/w UBIN        r     1 FM_SRZERO
     0-0-0/w PTR         r     1 P_RESOURCE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:137  
     0-0-0/w STRC(288)   r     1 FM$CFU                     0-0-0/w STRC(216)   r     1 FMC$CACHE
     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(2268)  r     1 P_RESOURCE


   Procedure FMC$FINISH requires 455 words for executable code.
   Procedure FMC$FINISH requires 32 words of local(AUTO) storage.
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:138  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:139  
          MINI XREF LISTING

B$JIT.ACCESS.PACKS
      1359**DCL      1999<<ASSIGN   1999>>ASSIGN   2024<<ASSIGN   2024>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      1185**DCL      1185--REDEF
B$JIT.DCB$
      1259**DCL      1864>>ASSIGN   1941>>ASSIGN
B$JIT.ERR.MID
      1092**DCL      1092--REDEF
B$JIT.JRESPEAK
      1253**DCL      1254--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      1362**DCL      1362--REDEF    1363--REDEF
B$JIT.PNR
      1266**DCL      1266--REDEF
B$JIT.TSLINE
      1360**DCL      1361--REDEF
B$JIT$
      1738**DCL      1086--IMP-PTR  1864>>ASSIGN   1941>>ASSIGN   1999>>ASSIGN   1999>>ASSIGN   2024>>ASSIGN
      2024>>ASSIGN
BUFNUM
        22**DCL        21--PROC     1866>>ASSIGN   1873>>ASSIGN   1885>>ASSIGN   1903>>ASSIGN   1939--ENTRY
      1942>>ASSIGN   1991>>IF       1996>>IF       2031>>ASSIGN   2032>>ASSIGN   2032>>ASSIGN   2065>>ASSIGN
      2066>>ASSIGN   2066>>ASSIGN
BYTES
        23**DCL        21--PROC     1939--ENTRY    1960<>CALL     2016<>CALL
CACHE$
      1850**DCL      1817--IMP-PTR  1902<>CALL     1905>>ASSIGN   1906>>ASSIGN   1907>>ASSIGN   1908>>ASSIGN
      1909>>ASSIGN   1948<<ASSIGN   1949>>ASSIGN   1950>>ASSIGN   1950>>ASSIGN   1951>>IF       1951>>IF
      1951>>IF       1953>>ASSIGN   1954>>ASSIGN   1955>>ASSIGN   1959>>ASSIGN   1990<<ASSIGN   1992>>ASSIGN
      1994>>IF       1997>>ASSIGN   1997>>ASSIGN   2002>>IF       2002>>IF       2004>>IF       2004>>IF
      2004>>IF       2008>>ASSIGN   2010>>ASSIGN   2011>>ASSIGN   2015>>ASSIGN   2025>>ASSIGN   2025>>ASSIGN
      2029>>ASSIGN   2029>>ASSIGN   2035>>IF       2036>>IF       2036>>IF       2039>>ASSIGN   2041>>ASSIGN
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:140  
      2064>>ASSIGN   2064>>ASSIGN   2068>>IF
CFU$
      1849**DCL      1842--IMP-PTR  1880<<ASSIGN   1881>>IF       1881>>IF
DA
      1851**DCL      1885<<ASSIGN   1886>>IF       1887<>CALL     1889>>ASSIGN
EAINFO
      1860**DCL      2016<>CALL
EAINFO.HASH
      1861**DCL      2009<<ASSIGN
END_ACTION
      1858**DCL      1989<<ASSIGN   2007<<ASSIGN   2035>>IF
ERR
      1924**LABEL    1874--CALLALT  1887--CALLALT  1919--CALLALT
F$DCB.ACTPOS
      1766**DCL      1766--REDEF
F$DCB.ARS
      1741**DCL      1741--REDEF
F$DCB.ATTR
      1759**DCL      1760--REDEF
F$DCB.BFR
      1785**DCL      2032<<ASSIGN   2032>>ASSIGN   2066<<ASSIGN   2066>>ASSIGN
F$DCB.BFR.BUFUP
      1785**DCL      1991>>IF       1996>>IF
F$DCB.BFR.BUFX
      1786**DCL      1873>>ASSIGN   1903>>ASSIGN
F$DCB.BFR.DA
      1786**DCL      1885>>ASSIGN
F$DCB.BFR1
      1786**DCL      2031<<ASSIGN   2065<<ASSIGN
F$DCB.BFR1.CX
      1787**DCL      1866>>ASSIGN   1942>>ASSIGN
F$DCB.BORROW
      1774**DCL      1774--REDEF    1774--REDEF    1774--REDEF
F$DCB.CFU$
      1775**DCL      1878>>IF       1880>>ASSIGN
F$DCB.DCBNAME.L
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:141  
      1788**DCL      1788--IMP-SIZ
F$DCB.EOMCHAR
      1745**DCL      1745--REDEF
F$DCB.FLDID
      1769**DCL      1769--REDEF
F$DCB.FORM$
      1763**DCL      1763--REDEF
F$DCB.FSECT
      1779**DCL      1779--REDEF
F$DCB.FSN
      1756**DCL      1756--REDEF    1756--REDEF    1757--REDEF
F$DCB.HEADER$
      1762**DCL      1762--REDEF
F$DCB.IXTNSIZE
      1760**DCL      1760--REDEF
F$DCB.LASTSTA$
      1750**DCL      1750--REDEF
F$DCB.LVL
      1775**DCL      1775--REDEF
F$DCB.MODCNT
      1780**DCL      1881>>IF
F$DCB.NAME.C
      1750**DCL      1750--REDEF
F$DCB.NOEOF
      1771**DCL      1771--REDEF
F$DCB.NRECS
      1761**DCL      1761--REDEF
F$DCB.NRECX
      1780**DCL      1780--REDEF
F$DCB.OHDR
      1772**DCL      1772--REDEF
F$DCB.ORG
      1755**DCL      1755--REDEF
F$DCB.PRECNO
      1778**DCL      1778--REDEF
F$DCB.RCSZ
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:142  
      1783**DCL      1783--REDEF
F$DCB.RES
      1751**DCL      1751--REDEF
F$DCB.SETX
      1763**DCL      1763--REDEF    1892>>ASSIGN   1908>>ASSIGN
F$DCB.TAB$
      1762**DCL      1763--REDEF
F$DCB.TDA
      1777**DCL      1777--REDEF
F$DCB.WSN
      1752**DCL      1752--REDEF
FAF$FRTOSR
      1728**DCL-ENT  1887--CALL
FC
        24**DCL        21--PROC     1939--ENTRY    1960<>CALL     2016<>CALL
FINISH
      1983**PROC     1874--CALL     1919--CALL
FLAG
        25**DCL        21--PROC     1865<<ASSIGN   1939--ENTRY    2052<<ASSIGN
FM$CFU.ACCTX
      1843**DCL      1843--REDEF
FM$CFU.MODCNT
      1844**DCL      1881>>IF
FM$CFU.SHARE
      1842**DCL      1881>>IF
FMB$RIO
      1734**DCL-ENT  1960--CALL     2016--CALL
FMC$ADD
      1730**DCL-ENT  2050--CALL     2069--CALL
FMC$CACHE
      1817**DCL      2041<<ASSIGN
FMC$CACHE.FLAGS.BUFUP
      1833**DCL      1949<<ASSIGN   1954<<ASSIGN   1992<<ASSIGN   1994>>IF       2002>>IF       2010<<ASSIGN
FMC$CACHE.FLAGS.ERR
      1832**DCL      1951>>IF       2002>>IF       2036>>IF
FMC$CACHE.PAGE
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:143  
      1823**DCL      1907<<ASSIGN   1953>>ASSIGN   2008>>ASSIGN   2039>>ASSIGN
FMC$CACHE.SETX
      1826**DCL      1908<<ASSIGN
FMC$CACHE.SRDA
      1820**DCL      1905<<ASSIGN   1959>>ASSIGN   2015>>ASSIGN
FMC$CACHE.TYPE
      1819**DCL      1909<<ASSIGN   1951>>IF       2004>>IF       2036>>IF
FMC$CACHE.UPCOUNT
      1825**DCL      1950<<ASSIGN   1950>>ASSIGN   1951>>IF       1955<<ASSIGN   1997<<ASSIGN   1997>>ASSIGN
      2004>>IF       2011<<ASSIGN
FMC$CACHE.USECNT
      1824**DCL      1906<<ASSIGN   2004>>IF       2025<<ASSIGN   2025>>ASSIGN   2029<<ASSIGN   2029>>ASSIGN
      2035>>IF       2064<<ASSIGN   2064>>ASSIGN   2068>>IF
FMC$CACHETBL
      1792**DCL      1948--ASSIGN   1990--ASSIGN
FMC$CLR1
      1731**DCL-ENT  1897--CALL
FMC$EA
      1735**DCL-ENT  2016--CALL
FMC$GETSLOT
      1729**DCL-ENT  1902--CALL
FMC$GETTYPE
      1727**DCL-ENT  1884--CALL
FMC_CACHE$
        35**DCL      1792--IMP-PTR  1948>>ASSIGN   1990>>ASSIGN
FMC_CACHEPGCNT$
        36**DCL        36--IMP-PTR    36--REDEF
FMC_CACHESIZ
        35**DCL      1868>>IF       1943>>IF
FMC_LIMITS.EXPIRE
       113**DCL      1890>>IF       2036>>IF
FMC_LIMITS.UPLIMIT
       113**DCL      1951>>IF       2004>>IF
FMC_LOCK
        37**DCL      1900<>CALL     1917<>CALL     1927<>CALL     1946<>CALL     1957<>CALL     1964<>CALL
      1986<>CALL     2013<>CALL     2019<>CALL     2054<>CALL     2062<>CALL     2071<>CALL
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:144  
FMC_MASK
        37**DCL      1894>>ASSIGN
FMC_TYPTBL$
        35**DCL      1837--IMP-PTR
FM_SRZERO
       122**DCL      1886>>IF
GRANS
      1857**DCL      1887<>CALL
HASH
      1859**DCL      1866<<ASSIGN   1871>>IF       1894<<ASSIGN   1902<>CALL     1942<<ASSIGN   1948>>ASSIGN
      1990>>ASSIGN   2009>>ASSIGN   2050<>CALL     2069<>CALL
HFC$LOCK
       726**DCL-ENT  1900--CALL     1946--CALL     1986--CALL     2019--CALL     2062--CALL
HFC$UNLOCK
       726**DCL-ENT  1917--CALL     1927--CALL     1957--CALL     1964--CALL     2013--CALL     2054--CALL
      2071--CALL
IOERR
      1967**LABEL    1960--CALLALT
IOERR IN PROCEDURE FINISH
      2059**LABEL    2016--CALLALT
JDCB$
      1848**DCL      1741--IMP-PTR  1864<<ASSIGN   1866>>ASSIGN   1873>>ASSIGN   1878>>IF       1880>>ASSIGN
      1881>>IF       1885>>ASSIGN   1892>>ASSIGN   1903>>ASSIGN   1908>>ASSIGN   1941<<ASSIGN   1942>>ASSIGN
      1991>>IF       1996>>IF       2031>>ASSIGN   2032>>ASSIGN   2032>>ASSIGN   2065>>ASSIGN   2066>>ASSIGN
      2066>>ASSIGN
MMJ$FBTOIOPM
      1733**DCL-ENT  1904--CALL
MMJ$FIOP
      1732**DCL-ENT  2040--CALL
MMJ$UNMAPIOP
      1736**DCL-ENT  2033--CALL     2067--CALL
NOCACHE
      1912**LABEL    1902--CALLALT
PP
      1856**DCL      1904<>CALL     1907>>ASSIGN   1953<<ASSIGN   1960<>CALL     2008<<ASSIGN   2016<>CALL
      2039<<ASSIGN   2040<>CALL
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:145  
P_NSCPU
      1706**DCL      1707--REDEF
P_RESOURCE.RES
      1579**DCL      1646--REDEF
P_RESOURCE.RES.IOCACHE.CURRENT
      1608**DCL      1911<<ASSIGN   1911>>ASSIGN   1912>>IF       1914>>ASSIGN   2043<<ASSIGN   2043>>ASSIGN
      2044>>IF       2046>>ASSIGN
P_RESOURCE.RES.IOCACHE.MIN
      1610**DCL      2044>>IF       2046<<ASSIGN
P_RESOURCE.RES.IOCACHE.PEAK
      1609**DCL      1912>>IF       1914<<ASSIGN
P_RESOURCE$
      1659**DCL      1547--IMP-PTR  1911>>ASSIGN   1911>>ASSIGN   1912>>IF       1912>>IF       1914>>ASSIGN
      1914>>ASSIGN   2043>>ASSIGN   2043>>ASSIGN   2044>>IF       2044>>IF       2046>>ASSIGN   2046>>ASSIGN
P_UPTIME
      1695**DCL      1696--REDEF
SETX
      1852**DCL      1892<<ASSIGN   1894>>ASSIGN
SRDA
      1853**DCL      1887<>CALL     1889<<ASSIGN   1894>>ASSIGN   1897<>CALL     1902<>CALL     1905>>ASSIGN
      1959<<ASSIGN   1960<>CALL     1967>>IF       2015<<ASSIGN   2016<>CALL     2059>>IF
TYPE
      1855**DCL      1884<>CALL     1890>>IF       1896>>IF       1902<>CALL     1909>>ASSIGN
VPNO
      1854**DCL      1873<<ASSIGN   1903<<ASSIGN   1904<>CALL     2033<>CALL     2067<>CALL
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:146  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:147  
              MINI UREF LISTING

F$CFU$     125**DCL
FM$SET$     126**DCL
FMC$CACHEPGCNT      36**DCL
FMC$FINISH      21**PROC
FMC$TYPTBL    1837**DCL
FMC$UPLIMIT    1939**ENTRY
FMC_CACHEPGCNT      36**DCL
FMC_CACHEPGCNT$R      36**DCL
FMC_CACHESIZN      35**DCL
FMC_MASKTBL      37**DCL
FMC_STATS$      35**DCL
FM_CFUWAIT     125**DCL
FM_CFUWGRB     125**DCL
FM_EOP     123**DCL
FM_FRMAX     122**DCL
FM_FRZERO     122**DCL
FM_GCT     126**DCL
FM_GIP     126**DCL
FM_GPSDA     123**DCL
FM_HASH     124**DCL
FM_MADSDA     123**DCL
FM_PADSDA     123**DCL
FM_SRMAX     122**DCL
FM_SYSACCTX     126**DCL
FM_SYSSETX     126**DCL
FM_TRUNC     124**DCL
FM_WRCMP     113**DCL
FM_WSQ     124**DCL
F_CWLK     125**DCL
F_CWUSER     125**DCL
F_DCBLOCK     124**DCL
NI_IOLEAPERS     113**DCL
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:148  
P$IODATA    1660**DCL
P$TABLE    1669**DCL
PH_CPU_MOUSED    1724**DCL
PH_JIT_ENTRY    1720**DCL
PH_MOUSE_ENTRY    1716**DCL
PH_MOUSE_LOCK    1723**DCL
PH_MOUSE_USERS    1713**DCL
PH_MOUSE_USER_NUMBER    1725**DCL
PH_MUS_PAGES    1715**DCL
P_AUIS    1701**DCL
P_AVAIL_MEM    1708**DCL
P_AVGAVAIL_MEM    1709**DCL
P_AVGETMF    1698**DCL
P_AVGIOL    1700**DCL
P_AVGRT90    1697**DCL
P_CALCNT    1685**DCL
P_CALCOMP    1686**DCL
P_DCTXMAX    1702**DCL
P_ETMF    1679**DCL
P_GATE    1705**DCL
P_IOLOAD    1699**DCL
P_IOS    1694**DCL
P_NINTS    1680**DCL
P_NOW    1704**DCL
P_NSCPU_SBIN    1707**DCL
P_RT90    1681**DCL
P_RUE#    1677**DCL
P_SCHD#    1678**DCL
P_STARTUP    1682**DCL
P_STOPTIME    1703**DCL
P_S_MIDLTIME    1690**DCL
P_S_MIDLWIO    1691**DCL
P_S_MIDLWRES    1692**DCL
P_S_MIDLWRESIO    1693**DCL
P_S_MXEQTIME    1689**DCL
P_S_USRVTIME    1688**DCL
PL6.E3A0      #004=FMC$FINISH File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:39 Page:149  
P_S_UXEQTIME    1687**DCL
P_UPTIME_SBIN    1696**DCL
P_USRVTIME    1684**DCL
P_UXEQTIME    1683**DCL
WORD_    1714**DCL

PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:150  
      657        1        /*T***********************************************************/
      658        2        /*T*                                                         */
      659        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      660        4        /*T*                                                         */
      661        5        /*T***********************************************************/
      662        6        /*D*     NAME:     FMC$FLUSHSET
      663        7                 PURPOSE:  To flush any cache pages associated with the
      664        8                           specified set that are unwritten due to the
      665        9                           set having been down.
      666       10                 INPUT:    SETX - setx of the set we want to write pages for
      667       11                 DESCRIPTION:
      668       12                      Make a long loop through the cache table, looking
      669       13                 at each entry to see if the setx matches.  If it does,
      670       14                 then if USECNT is zero and BUFUP is set, write the
      671       15                 associated page out and clear BUFUP.
      672       16        */
      673       17                 %EJECT;
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:151  
      674       18        FMC$FLUSHSET: PROC(SETX) ALTRET;
      675       19
      676       20    1     DCL SETX SBIN;
      677       21    1     DCL I UBIN;
      678       22    1     DCL FC UBIN;
      679       23    1     DCL PP UBIN;
      680       24    1     DCL SRDA UBIN;
      681       25    1     DCL B$JIT$ PTR SYMREF READONLY;
      682       26    1     DCL FMB$RIO ENTRY(9) ALTRET;
      683       27
      684       28        %INCLUDE B$JIT_C;
      685      342        %B$JIT0;
      686      431        %U$JIT1X;
      687      434        %M$JIT2X;
      688      437        %F$JIT3;
      689      442        %S$JIT4X;
      690      445        %J$JIT5X;
      691      448        %A$JIT6;
      692      458        %INCLUDE F$DCB;
      693      507        %INCLUDE FM_CACHE_R;
      694      519        %INCLUDE FM_CACHE_C;
      695      585        %INCLUDE HF_LOCK_C;
      696      599        %INCLUDE P_PMDAT_R;
      697      907        %INCLUDE N_FC_C;
      698      944        %FMC$CACHE;
      699      967        /* */
      700      968        /* */
      701      969    1          IF FMC_CACHESIZ = 0 THEN
      702      970    1             RETURN;
      703      971    1          B$JIT$->B$JIT.DCB$->F$DCB.SETX = SETX;
      704      972               %LOCK(G=FMC_LOCK);
      705      975    2          DO I = 1 TO FMC_CACHESIZ;
      706      976    2             IF FMC$CACHETBL.SETX(I) = SETX AND FMC$CACHETBL.USECNT(I) = 0
      707      977    3                  AND FMC$CACHETBL.FLAGS.BUFUP(I) THEN DO;
      708      978    3                PP = FMC$CACHETBL.PAGE(I);
      709      979    3                SRDA = FMC$CACHETBL.SRDA(I);
      710      980                     %UNLOCK(G=FMC_LOCK);
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:152  
      711      983    3                CALL FMB$RIO(0,PP,4096,SRDA,%N_WRBIN,-1,ENTADDR(NIL),0) ALTRET(IOERR);
      712      984                     %LOCK(G=FMC_LOCK);
      713      987    3                FMC$CACHETBL.FLAGS.BUFUP(I) = '0'B;
      714      988    3                FMC$CACHETBL.UPCOUNT(I) = 0;
      715      989    3                END;
      716      990    2             END;
      717      991               %UNLOCK(G=FMC_LOCK);
      718      994
      719      995    1          RETURN;
      720      996
      721      997    1   IOERR: ALTRETURN;
      722      998
      723      999    1          END FMC$FLUSHSET;
      724     1000               %EOD;

PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:153  
--  Include file information  --

   N_FC_C.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FMC$FLUSHSET.

   Procedure FMC$FLUSHSET requires 87 words for executable code.
   Procedure FMC$FLUSHSET requires 16 words of local(AUTO) storage.

PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:154  

 Object Unit name= FMC$FLUSHSET                               File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:40:13.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    87    127  FMC$FLUSHSET
    1  RoData even  none     8     10  FMC$FLUSHSET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  FMC$FLUSHSET

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       9 FMB$RIO
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:155  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                                FMC_CACHE$                            FMC_CACHESIZ
     FMC_CACHEPGCNT$                       FMC_LOCK                              P_RESOURCE$
     P_UPTIME                              P_NSCPU                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:156  


      657        1        /*T***********************************************************/
      658        2        /*T*                                                         */
      659        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      660        4        /*T*                                                         */
      661        5        /*T***********************************************************/
      662        6        /*D*     NAME:     FMC$FLUSHSET
      663        7                 PURPOSE:  To flush any cache pages associated with the
      664        8                           specified set that are unwritten due to the
      665        9                           set having been down.
      666       10                 INPUT:    SETX - setx of the set we want to write pages for
      667       11                 DESCRIPTION:
      668       12                      Make a long loop through the cache table, looking
      669       13                 at each entry to see if the setx matches.  If it does,
      670       14                 then if USECNT is zero and BUFUP is set, write the
      671       15                 associated page out and clear BUFUP.
      672       16        */
      673       17                 %EJECT;
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:157  
      674       18        FMC$FLUSHSET: PROC(SETX) ALTRET;

     18  0 000000   000000 700200 xent  FMC$FLUSHSET TSX0  ! X66_AUTO_1
         0 000001   000020 000001                    ZERO    16,1

      675       19
      676       20    1     DCL SETX SBIN;
      677       21    1     DCL I UBIN;
      678       22    1     DCL FC UBIN;
      679       23    1     DCL PP UBIN;
      680       24    1     DCL SRDA UBIN;
      681       25    1     DCL B$JIT$ PTR SYMREF READONLY;
      682       26    1     DCL FMB$RIO ENTRY(9) ALTRET;
      683       27
      684       28        %INCLUDE B$JIT_C;
      685      342        %B$JIT0;
      686      431        %U$JIT1X;
      687      434        %M$JIT2X;
      688      437        %F$JIT3;
      689      442        %S$JIT4X;
      690      445        %J$JIT5X;
      691      448        %A$JIT6;
      692      458        %INCLUDE F$DCB;
      693      507        %INCLUDE FM_CACHE_R;
      694      519        %INCLUDE FM_CACHE_C;
      695      585        %INCLUDE HF_LOCK_C;
      696      599        %INCLUDE P_PMDAT_R;
      697      907        %INCLUDE N_FC_C;
      698      944        %FMC$CACHE;
      699      967        /* */
      700      968        /* */
      701      969    1          IF FMC_CACHESIZ = 0 THEN

    969  0 000002   000000 235000 xsym               LDA     FMC_CACHESIZ
         0 000003   000005 601000 0                  TNZ     s:971

      702      970    1             RETURN;
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:158  

    970  0 000004   000000 702200 xent               TSX2  ! X66_ARET

      703      971    1          B$JIT$->B$JIT.DCB$->F$DCB.SETX = SETX;

    971  0 000005   000000 470400 xsym               LDP0    B$JIT$
         0 000006   000232 471500                    LDP1    154,,PR0
         0 000007   200003 473500                    LDP3    @SETX,,AUTO
         0 000010   300000 720100                    LXL0    0,,PR3
         0 000011   100051 440100                    SXL0    41,,PR1

      704      972               %LOCK(G=FMC_LOCK);

    973  0 000012   000000 630400 1                  EPPR0   0
         0 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000014   000000 701000 xent               TSX1    HFC$LOCK
         0 000015   000000 011000                    NOP     0

      705      975    2          DO I = 1 TO FMC_CACHESIZ;

    975  0 000016   000001 235007                    LDA     1,DL
         0 000017   200004 755100                    STA     I,,AUTO
         0 000020   000115 710000 0                  TRA     s:990+3

      706      976    2             IF FMC$CACHETBL.SETX(I) = SETX AND FMC$CACHETBL.USECNT(I) = 0

    976  0 000021   200003 470500                    LDP0    @SETX,,AUTO
         0 000022   200004 236100                    LDQ     I,,AUTO
         0 000023   000006 402007                    MPY     6,DL
         0 000024   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000025   100004 236106                    LDQ     4,QL,PR1
         0 000026   000022 772000                    QRL     18
         0 000027   000000 116100                    CMPQ    0,,PR0
         0 000030   000112 601000 0                  TNZ     s:990
         0 000031   200004 236100                    LDQ     I,,AUTO
         0 000032   000006 402007                    MPY     6,DL
         0 000033   100002 720106                    LXL0    2,QL,PR1
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:159  
         0 000034   000112 601000 0                  TNZ     s:990
         0 000035   100004 236106                    LDQ     4,QL,PR1
         0 000036   000001 316007                    CANQ    1,DL
         0 000037   000112 600000 0                  TZE     s:990

      707      977    3                  AND FMC$CACHETBL.FLAGS.BUFUP(I) THEN DO;

      708      978    3                PP = FMC$CACHETBL.PAGE(I);

    978  0 000040   200004 236100                    LDQ     I,,AUTO
         0 000041   000006 402007                    MPY     6,DL
         0 000042   100002 236106                    LDQ     2,QL,PR1
         0 000043   000022 772000                    QRL     18
         0 000044   200006 756100                    STQ     PP,,AUTO

      709      979    3                SRDA = FMC$CACHETBL.SRDA(I);

    979  0 000045   200004 236100                    LDQ     I,,AUTO
         0 000046   000006 402007                    MPY     6,DL
         0 000047   100000 236106                    LDQ     0,QL,PR1
         0 000050   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000051   200007 756100                    STQ     SRDA,,AUTO

      710      980                     %UNLOCK(G=FMC_LOCK);

    981  0 000052   000000 630400 1                  EPPR0   0
         0 000053   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000054   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000055   000000 011000                    NOP     0

      711      983    3                CALL FMB$RIO(0,PP,4096,SRDA,%N_WRBIN,-1,ENTADDR(NIL),0) ALTRET(IOERR);

    983  0 000056   000002 237000 1                  LDAQ    2
         0 000057   200016 757100                    STAQ    SRDA+7,,AUTO
         0 000060   000004 237000 1                  LDAQ    4
         0 000061   200014 757100                    STAQ    SRDA+5,,AUTO
         0 000062   200007 630500                    EPPR0   SRDA,,AUTO
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:160  
         0 000063   200013 450500                    STP0    SRDA+4,,AUTO
         0 000064   000006 236000 1                  LDQ     6
         0 000065   200012 756100                    STQ     SRDA+3,,AUTO
         0 000066   200006 631500                    EPPR1   PP,,AUTO
         0 000067   200011 451500                    STP1    SRDA+2,,AUTO
         0 000070   000002 236000 1                  LDQ     2
         0 000071   200010 756100                    STQ     SRDA+1,,AUTO
         0 000072   200010 630500                    EPPR0   SRDA+1,,AUTO
         0 000073   000026 631400 xsym               EPPR1   B_VECTNIL+22
         0 000074   000000 701000 xent               TSX1    FMB$RIO
         0 000075   000126 702000 0                  TSX2    IOERR

      712      984                     %LOCK(G=FMC_LOCK);

    985  0 000076   000000 630400 1                  EPPR0   0
         0 000077   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000100   000000 701000 xent               TSX1    HFC$LOCK
         0 000101   000000 011000                    NOP     0

      713      987    3                FMC$CACHETBL.FLAGS.BUFUP(I) = '0'B;

    987  0 000102   200004 236100                    LDQ     I,,AUTO
         0 000103   000006 402007                    MPY     6,DL
         0 000104   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000105   000000 620006                    EAX0    0,QL
         0 000106   000007 236000 1                  LDQ     7
         0 000107   000004 356110                    ANSQ    4,X0,PR0

      714      988    3                FMC$CACHETBL.UPCOUNT(I) = 0;

    988  0 000110   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000111   000003 450110                    STZ     3,X0,PR0

      715      989    3                END;

      716      990    2             END;

PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:161  
    990  0 000112   200004 235100                    LDA     I,,AUTO
         0 000113   000001 035007                    ADLA    1,DL
         0 000114   200004 755100                    STA     I,,AUTO
         0 000115   200004 236100                    LDQ     I,,AUTO
         0 000116   000121 604000 0                  TMI     s:992
         0 000117   000000 116000 xsym               CMPQ    FMC_CACHESIZ
         0 000120   000021 604400 0                  TMOZ    s:976

      717      991               %UNLOCK(G=FMC_LOCK);

    992  0 000121   000000 630400 1                  EPPR0   0
         0 000122   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000123   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000124   000000 011000                    NOP     0

      718      994
      719      995    1          RETURN;

    995  0 000125   000000 702200 xent               TSX2  ! X66_ARET

      720      996
      721      997    1   IOERR: ALTRETURN;

    997  0 000126   000000 702200 xent  IOERR        TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
   1     000   000000 006000   000000 010000   000002 006000   000002 006000    ................
   1     004   000005 006000   000027 006000   000001 006000   777777 777776    ................
      722      998
      723      999    1          END FMC$FLUSHSET;
      724     1000               %EOD;

PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:162  
--  Include file information  --

   N_FC_C.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FMC$FLUSHSET.
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:163  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SETX                      4-0-0/w UBIN        r     1 I
     6-0-0/w UBIN        r     1 PP                        *0-0-0/w SBIN        r     1 SETX
     7-0-0/w UBIN        r     1 SRDA

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FMC_CACHE$
     0-0-0/w PTR         r     1 FMC_CACHEPGCNT$            0-0-0/w SBIN        r     1 FMC_CACHESIZ
     0-0-0/b BIT (72)    r     1 FMC_LOCK                   0-0-0/w PTR         r     1 P_RESOURCE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)


   Procedure FMC$FLUSHSET requires 87 words for executable code.
   Procedure FMC$FLUSHSET requires 16 words of local(AUTO) storage.
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:164  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:165  
          MINI XREF LISTING

B$JIT.DCB$
       438**DCL       971>>ASSIGN
B$JIT.ERR.MID
       349**DCL       349--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       453**DCL       453--REDEF     454--REDEF
B$JIT.TSLINE
       451**DCL       452--REDEF
B$JIT$
        25**DCL       343--IMP-PTR   971>>ASSIGN
F$DCB.ACTPOS
       484**DCL       484--REDEF
F$DCB.ARS
       459**DCL       459--REDEF
F$DCB.ATTR
       477**DCL       478--REDEF
F$DCB.BORROW
       492**DCL       492--REDEF     492--REDEF     492--REDEF
F$DCB.DCBNAME.L
       506**DCL       506--IMP-SIZ
F$DCB.EOMCHAR
       463**DCL       463--REDEF
F$DCB.FLDID
       487**DCL       487--REDEF
F$DCB.FORM$
       481**DCL       481--REDEF
F$DCB.FSECT
       497**DCL       497--REDEF
F$DCB.FSN
       474**DCL       474--REDEF     474--REDEF     475--REDEF
F$DCB.HEADER$
       480**DCL       480--REDEF
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:166  
F$DCB.IXTNSIZE
       478**DCL       478--REDEF
F$DCB.LASTSTA$
       468**DCL       468--REDEF
F$DCB.LVL
       493**DCL       493--REDEF
F$DCB.NAME.C
       468**DCL       468--REDEF
F$DCB.NOEOF
       489**DCL       489--REDEF
F$DCB.NRECS
       479**DCL       479--REDEF
F$DCB.NRECX
       498**DCL       498--REDEF
F$DCB.OHDR
       490**DCL       490--REDEF
F$DCB.ORG
       473**DCL       473--REDEF
F$DCB.PRECNO
       496**DCL       496--REDEF
F$DCB.RCSZ
       501**DCL       501--REDEF
F$DCB.RES
       469**DCL       469--REDEF
F$DCB.SETX
       481**DCL       481--REDEF     971<<ASSIGN
F$DCB.TAB$
       480**DCL       481--REDEF
F$DCB.TDA
       495**DCL       495--REDEF
F$DCB.WSN
       470**DCL       470--REDEF
FMB$RIO
        26**DCL-ENT   983--CALL
FMC$CACHETBL.FLAGS.BUFUP
       964**DCL       976>>IF        987<<ASSIGN
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:167  
FMC$CACHETBL.PAGE
       954**DCL       978>>ASSIGN
FMC$CACHETBL.SETX
       957**DCL       976>>IF
FMC$CACHETBL.SRDA
       951**DCL       979>>ASSIGN
FMC$CACHETBL.UPCOUNT
       956**DCL       988<<ASSIGN
FMC$CACHETBL.USECNT
       955**DCL       976>>IF
FMC_CACHE$
       515**DCL       946--IMP-PTR   976>>IF        976>>IF        976>>IF        978>>ASSIGN    979>>ASSIGN
       987>>ASSIGN    988>>ASSIGN
FMC_CACHEPGCNT$
       516**DCL       516--IMP-PTR   516--REDEF
FMC_CACHESIZ
       515**DCL       969>>IF        975>>DOINDEX
FMC_LOCK
       517**DCL       973<>CALL      981<>CALL      985<>CALL      992<>CALL
HFC$LOCK
       598**DCL-ENT   973--CALL      985--CALL
HFC$UNLOCK
       598**DCL-ENT   981--CALL      992--CALL
I
        21**DCL       975<<DOINDEX   976>>IF        976>>IF        976>>IF        978>>ASSIGN    979>>ASSIGN
       987>>ASSIGN    988>>ASSIGN
IOERR
       997**LABEL     983--CALLALT
PP
        23**DCL       978<<ASSIGN    983<>CALL
P_NSCPU
       887**DCL       888--REDEF
P_RESOURCE.RES
       760**DCL       827--REDEF
P_RESOURCE$
       840**DCL       728--IMP-PTR
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:168  
P_UPTIME
       876**DCL       877--REDEF
SETX
        20**DCL        18--PROC      971>>ASSIGN    976>>IF
SRDA
        24**DCL       979<<ASSIGN    983<>CALL
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:169  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:170  
              MINI UREF LISTING

FC      22**DCL
FMC$CACHEPGCNT     516**DCL
FMC$FLUSHSET      18**PROC
FMC_CACHEPGCNT     516**DCL
FMC_CACHEPGCNT$R     516**DCL
FMC_CACHESIZN     515**DCL
FMC_MASK     517**DCL
FMC_MASKTBL     517**DCL
FMC_STATS$     515**DCL
FMC_TYPTBL$     515**DCL
P$IODATA     841**DCL
P$TABLE     850**DCL
PH_CPU_MOUSED     905**DCL
PH_JIT_ENTRY     901**DCL
PH_MOUSE_ENTRY     897**DCL
PH_MOUSE_LOCK     904**DCL
PH_MOUSE_USERS     894**DCL
PH_MOUSE_USER_NUMBER     906**DCL
PH_MUS_PAGES     896**DCL
P_AUIS     882**DCL
P_AVAIL_MEM     889**DCL
P_AVGAVAIL_MEM     890**DCL
P_AVGETMF     879**DCL
P_AVGIOL     881**DCL
P_AVGRT90     878**DCL
P_CALCNT     866**DCL
P_CALCOMP     867**DCL
P_DCTXMAX     883**DCL
P_ETMF     860**DCL
P_GATE     886**DCL
P_IOLOAD     880**DCL
P_IOS     875**DCL
PL6.E3A0      #005=FMC$FLUSHSET File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:40 Page:171  
P_NINTS     861**DCL
P_NOW     885**DCL
P_NSCPU_SBIN     888**DCL
P_RT90     862**DCL
P_RUE#     858**DCL
P_SCHD#     859**DCL
P_STARTUP     863**DCL
P_STOPTIME     884**DCL
P_S_MIDLTIME     871**DCL
P_S_MIDLWIO     872**DCL
P_S_MIDLWRES     873**DCL
P_S_MIDLWRESIO     874**DCL
P_S_MXEQTIME     870**DCL
P_S_USRVTIME     869**DCL
P_S_UXEQTIME     868**DCL
P_UPTIME_SBIN     877**DCL
P_USRVTIME     865**DCL
P_UXEQTIME     864**DCL
WORD_     895**DCL

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:172  
      725        1        /*T***********************************************************/
      726        2        /*T*                                                         */
      727        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      728        4        /*T*                                                         */
      729        5        /*T***********************************************************/
      730        6        /*D*     NAME:     FMC$GET
      731        7                 PURPOSE:  To get a cached page for the user.
      732        8                 INPUT:    BUFNUM - Buffer number
      733        9                           DA - Disk address we want
      734       10                 OUTPUT:   BUF$ - Pointer to the buffer
      735       11                           FLAG - 1 if we could get the cached page
      736       12                                  0 if we couldn't
      737       13
      738       14                 DESCRIPTION:
      739       15
      740       16                      Set up the SRDA, granule type, and hash to the table
      741       17                 row that we want.
      742       18                      Check to see if the page is already in the cache, if
      743       19                 it was, then just return.
      744       20
      745       21                      Otherwise, try to get a slot in the cache table.  If
      746       22                 we could, then set up the cache table entry.  Then we get
      747       23                 a cache page, map the user onto it, and read the granule.
      748       24                 It is possible that another user will want a page while
      749       25                 we are actually in the process of reading the granule.  If
      750       26                 that happens, we set FMC$CACHE.FLAGS.WAIT.  Then we call
      751       27                 the scheduler routines to wake up any waiting users.
      752       28        */
      753       29                 %EJECT;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:173  
      754       30        FMC$GET: PROC(BUF$, BUFNUM, DA, FLAG) ALTRET;
      755       31    1          DCL BUF$ PTR;
      756       32    1          DCL BUFNUM SBIN;
      757       33    1          DCL DA SBIN;
      758       34    1          DCL FLAG SBIN;
      759       35        /* */
      760       36               %INCLUDE FM_CACHE_R;
      761       48               %INCLUDE FM_CACHE_C;
      762      114               %INCLUDE FM_CNTRL_R;
      763      123               %INCLUDE FM_DATA_R;
      764      137               %INCLUDE FM_BUF_R;
      765      146               %INCLUDE N_FC_C;
      766      183               %INCLUDE N$REQ;
      767      257               %INCLUDE FM$MACROS;
      768      632               %INCLUDE F_ERRORS_C;
      769      872               %INCLUDE HF_LOCK_C;
      770      886               %INCLUDE SS_SCHED_C;
      771     1119               %INCLUDE B$JIT;
      772     1722               %MACRO F$DCB(BASED=BASED);
      773     1723               %INCLUDE F$DCB;
      774     1772               %MEND;
      775     1773               %INCLUDE P_PMDAT_R;
      776     2081               %INCLUDE B_STRINGS_C;
      777     2210               %INCLUDE B_MLSMAC_C;
      778     3152        /* */
      779     3153    1          DCL SSR$REG ENTRY(3) ALTRET;
      780     3154    1          DCL SSR$RUE ENTRY(4);
      781     3155    1          DCL MMJ$GIOP ENTRY(1);
      782     3156    1          DCL MMJ$FBTOIOP ENTRY(2);
      783     3157    1          DCL MMJ$MAPIOP ENTRY(2);
      784     3158    1          DCL MMJ$UNMAPIOP ENTRY(1);
      785     3159    1          DCL NIQ$REL ENTRY(1) ALTRET;
      786     3160    1          DCL FMD$FLSHBUF ENTRY(1);
      787     3161    1          DCL FMD$FLSHBUFNR ENTRY(1);
      788     3162    1          DCL FMD$GETBUF ENTRY(3);
      789     3163    1          DCL FMB$QUEUE ENTRY(9) ALTRET;
      790     3164    1          DCL FMB$ERRTYP ENTRY(1);
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:174  
      791     3165    1          DCL FMB$LOGERR ENTRY(11);
      792     3166    1          DCL FAF$FRTOSR ENTRY(3) ALTRET;
      793     3167    1          DCL FMC$GETTYPE ENTRY(1);
      794     3168    1          DCL FMC$GETSLOT ENTRY(4) ALTRET;
      795     3169    1          DCL FMC$ADD ENTRY(1);
      796     3170    1          DCL FMC$REMOVE ENTRY(1);
      797     3171    1          DCL FMC$RELCACHE ENTRY(1);
      798     3172        /* */
      799     3173    1          DCL 1 DESCINIT CONSTANT,
      800     3174    1               2 BOUND UBIN(20) UNAL INIT(4095),  /* FRAME A PAGE */
      801     3175    1               2 FLGS BIT(3) INIT('7'O),          /* ALLOW READ/WRITE */
      802     3176    1               2 WSQ UBIN(9) UNAL INIT(0),        /* REAL PAGE NO */
      803     3177    1               2 TYP UBIN(4) UNAL INIT(2);        /* WSQ TYPE DESC */
      804     3178    1          DCL ZAPBUF(0:4) CONSTANT BIT(36)
      805     3179    1             INIT('111111111111'O,'222222222222'O,'333333333333'O,
      806     3180    1                  '444444444444'O,'555555555555'O);
      807     3181        /* */
      808     3182    1          DCL B$JIT$ PTR SYMREF;
      809     3183    1          DCL S_CUN UBIN(36) SYMREF;
      810     3184    1          DCL B$LS$ PTR SYMREF;
      811     3185    1          DCL B$MISC$ PTR SYMREF READONLY;
      812     3186        /* */
      813     3187    1          DCL BUFFER CHAR(4096) BASED;
      814     3188        /* */
      815     3189    1          DCL JDCB$ PTR;
      816     3190    1          DCL SRDA SBIN;
      817     3191    1          DCL GRANS SBIN;
      818     3192    1          DCL HASH SBIN;
      819     3193    1          DCL I SBIN;
      820     3194    1          DCL N SBIN;
      821     3195    1          DCL CACHE$ PTR;
      822     3196    1          DCL TYPE SBIN;
      823     3197    1          DCL NEWPP SBIN;
      824     3198    1          DCL VPNO SBIN;
      825     3199    1          DCL SETX SBIN;
      826     3200    1          DCL PP SBIN;
      827     3201    1          DCL USER UBIN(9) CALIGNED;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:175  
      828     3202    1          DCL Q$ PTR;
      829     3203    1          DCL CODE SBIN;
      830     3204    1          DCL MISC SBIN;
      831     3205    1          DCL NOCACHE SBIN;
      832     3206        /* */
      833     3207               %SUB FCG#='0615'O;
      834     3208               %SUB MID#='04'O;
      835     3209        /* */
      836     3210               %FMC$CACHE;
      837     3233               %FMC$CACHE(FPTN=FMC$CACHE, ARRAY=NO, STCLASS="BASED(CACHE$)");
      838     3256               %FMC$STATS;
      839     3265               %F$DCB(BASED="BASED(JDCB$)");
      840     3315               %FM$GRAN(BASED="BASED(BUF$)");
      841     3319               %N$REQ(STCLASS="BASED(Q$)");
      842     3377               %ERRCODE(NAME=ERRWD, COD#=0);
      843     3381               %FM$CFU;
      844     3387               %B_MLS(FPTN=B$MLNK, STCLASS=BASED);
      845     4202        /* */
      846     4203    1          NOCACHE=0;
      847     4204    1          GOTO COMMON;
      848     4205    1   FMC$NOCACHE: ENTRY(BUF$, BUFNUM, DA, FLAG) ALTRET;
      849     4206    1          NOCACHE=1;
      850     4207
      851     4208    1   COMMON: ;
      852     4209    1          IF FMC_CACHESIZ = 0 THEN
      853     4210    2             DO;
      854     4211    2             FLAG=0;
      855     4212    2             RETURN;
      856     4213    2             END;
      857     4214
      858     4215    1          JDCB$=B$JIT.DCB$;
      859     4216    1          IF DA < FM_SRZERO THEN
      860     4217    1             CALL FAF$FRTOSR(DA, SRDA, GRANS) ALTRET(DAERR);
      861     4218    1          ELSE
      862     4219    1             SRDA=DA;
      863     4220    1          SETX=F$DCB.SETX;
      864     4221    1          CALL FMC$GETTYPE(TYPE);
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:176  
      865     4222    1          FMC$STATS.ATTGET(TYPE)=FMC$STATS.ATTGET(TYPE)+1;
      866     4223
      867     4224               %HASH;
      868     4227
      869     4228    1          CALL CHECK_CACHE(FLAG);
      870     4229
      871     4230    1          IF FLAG = 1 OR NOCACHE = 1 THEN
      872     4231    1             RETURN;
      873     4232
      874     4233               %LOCK(G=FMC_LOCK);
      875     4236    1          CALL FMC$GETSLOT(HASH, TYPE, SRDA, CACHE$) ALTRET(NOCACHE);
      876     4237
      877     4238    1          FMC$CACHE.FLAGS.IO='1'B;
      878     4239    1          FMC$CACHE.SRDA=SRDA;
      879     4240    1          FMC$CACHE.USECNT=1;
      880     4241    1          FMC$CACHE.SETX=F$DCB.SETX;
      881     4242    1          FMC$CACHE.TYPE=TYPE;
      882     4243               %INC_COUNTER(ITEM=IOCACHE);
      883     4249               %UNLOCK(G=FMC_LOCK);
      884     4252
      885     4253    1          CALL FMD$FLSHBUF(BUFNUM);
      886     4254    1          CALL MMJ$GIOP(PP);
      887     4255    1          FMC$CACHE.PAGE=PP;
      888     4256    1          CALL MMJ$MAPIOP(VPNO, PP);
      889     4257    1          F$DCB.BFR.BUFX(BUFNUM)=VPNO;
      890     4258    1          F$DCB.BFR1.SIZ(BUFNUM)=1;
      891     4259    1          F$DCB.BFR1.CX(BUFNUM)=HASH;
      892     4260    1          F$DCB.BFR.DA(BUFNUM) = 0;
      893     4261    1          BUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));
      894     4262    1          FM$GRAN=ZAPBUF;
      895     4263    1          Q$=ADDR(NIL);
      896     4264    1          CALL FMB$QUEUE(BUF$, 1, 4096, SRDA, %N_RDBIN, -1,
      897     4265    1             ENTADDR(NIL), 0, Q$) ALTRET(ERR1);
      898     4266    1          IF N$REQ.TYC ~= '1'B THEN
      899     4267    1             CALL LOGERR(2) ALTRET(ERR);
      900     4268    1          IF Q$ ~= ADDR(NIL) THEN
      901     4269    1             CALL NIQ$REL(Q$);
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:177  
      902     4270
      903     4271               %LOCK(G=FMC_LOCK);
      904     4274    1          FMC$CACHE.FLAGS.IO='0'B;
      905     4275
      906     4276    1          IF FMC$CACHE.FLAGS.WAIT THEN
      907     4277    2             DO;   /* THERE WERE OTHERS WAITING */
      908     4278    2             CALL SSR$RUE(%SS_UQC, FMC$CACHE.USER);
      909     4279    2             END;  /* THERE WERE OTHERS WAITING */
      910     4280
      911     4281               %UNLOCK(G=FMC_LOCK);
      912     4284    1          FLAG=2;
      913     4285    1          RETURN;
      914     4286
      915     4287    1   DAERR: FLAG=0;
      916     4288    1          ALTRETURN;
      917     4289    1   ERR1:  CALL LOGERR(1);
      918     4290    1   ERR:   FLAG=0;
      919     4291    1          IF FMC$CACHE.FLAGS.WAIT THEN
      920     4292    1             CALL SSR$RUE(%SS_UQC, FMC$CACHE.USER);
      921     4293    1          ALTRETURN;
      922     4294    1   NOCACHE: FLAG=0;
      923     4295               %UNLOCK(G=FMC_LOCK);
      924     4298    1          RETURN;
      925     4299               %EJECT;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:178  
      926     4300        /*I*     NAME:     CHECK_CACHE
      927     4301                 PURPOSE:  To check to see if a page we want is already in
      928     4302                           the cache table.
      929     4303
      930     4304                 DESCRIPTION:
      931     4305
      932     4306                      Check all four entries in the row that we hashed to.
      933     4307                 If we didn't find it, then set the flag to zero, and return.
      934     4308
      935     4309                      If the usecount is zero, then remove the page from the
      936     4310                 linked list.
      937     4311
      938     4312                      If we are still actually reading the page, then call
      939     4313                 the scheduler routines to REG the user.  When we wake up
      940     4314                 do a quick check to see if everything is okay.
      941     4315
      942     4316                      If the NOCACHE flag is zero, then map the user onto
      943     4317                 the page.  If the NOCACHE flag is set, then the caller
      944     4318                 actually wants a copy of the granule that he can muck with.
      945     4319                 Get another page and make a copy of the granule that won't
      946     4320                 be the the cache table.
      947     4321        */
      948     4322                 %EJECT;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:179  
      949     4323    1   CHECK_CACHE: PROC(FLAG);
      950     4324    2          DCL FLAG SBIN;
      951     4325        /* */
      952     4326               %LOCK(G=FMC_LOCK);
      953     4329    2          I=0;
      954     4330    3          DO WHILE (I <= 3 AND
      955     4331    3             (FMC$CACHETBL.SRDA(HASH+I) ~= SRDA OR
      956     4332    3              FMC$CACHETBL.SETX(HASH+I) ~= SETX OR
      957     4333    3              FMC$CACHETBL.FLAGS.ERR(HASH+I)));
      958     4334    3             I=I+1;
      959     4335    3          END;  /* WHILE */
      960     4336
      961     4337    2          IF FMC$CACHETBL.SRDA(HASH+I) ~= SRDA OR
      962     4338    2             FMC$CACHETBL.SETX(HASH+I) ~= SETX OR
      963     4339    2             FMC$CACHETBL.FLAGS.ERR(HASH+I) THEN
      964     4340    3             DO;   /* NOT FOUND */
      965     4341                  %UNLOCK(G=FMC_LOCK);
      966     4344    3             FLAG=0;
      967     4345    3             RETURN;
      968     4346    3             END;  /* NOT FOUND */
      969     4347
      970     4348    2          HASH=HASH+I;
      971     4349    2          CACHE$=ADDR(FMC$CACHETBL(HASH));
      972     4350
      973     4351    2          IF FMC$CACHE.TYPE ~= TYPE THEN
      974     4352    3             DO;  /* Keep stats for type we found */
      975     4353                  /* ACS=BLOCK reads (e.g., from EFT) could cause types of
      976     4354                  Keyed, Indexed, or IREL files to be set differently than
      977     4355                  usual since F$DCB.LVL would probably be 0.              */
      978     4356    3             FMC$STATS.ATTGET(TYPE)=FMC$STATS.ATTGET(TYPE)-1;
      979     4357    3             TYPE=FMC$CACHE.TYPE;
      980     4358    3             FMC$STATS.ATTGET(TYPE)=FMC$STATS.ATTGET(TYPE)+1;
      981     4359    3             END; /* Keep stats for type we found */
      982     4360
      983     4361    2          IF FMC$CACHE.USECNT = 0 THEN
      984     4362    3             DO;
      985     4363    3             FMC$STATS.HITZERO(TYPE)=FMC$STATS.HITZERO(TYPE)+1;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:180  
      986     4364    3             CALL FMC$REMOVE(HASH);
      987     4365    3             END;
      988     4366    2          ELSE
      989     4367    2             FMC$STATS.HITNONZERO(TYPE)=FMC$STATS.HITNONZERO(TYPE)+1;
      990     4368
      991     4369    2          FMC$CACHE.USECNT=FMC$CACHE.USECNT+1;
      992     4370
      993     4371    2          IF FMC$CACHE.FLAGS.IO THEN
      994     4372    3             DO;   /* WE GOTTA WAIT */
      995     4373    3             USER=FMC$CACHE.USER;
      996     4374    3             IF USER = 0 THEN
      997     4375    4                DO;   /* FIRST ONE TO WAIT */
      998     4376    4                FMC$CACHE.USER=S_CUN;
      999     4377    4                FMC$CACHE.FLAGS.WAIT='1'B;
     1000     4378    4                END;  /* FIRST ONE TO WAIT */
     1001     4379    3             CALL SSR$REG(%SS_QC, USER, FMC_LOCK);
     1002     4380                  %LOCK(G=FMC_LOCK);
     1003     4383    3             IF FMC$CACHE.FLAGS.ERR OR FMC$CACHE.FLAGS.IO THEN
     1004     4384    4                DO;
     1005     4385                     %UNLOCK(G=FMC_LOCK);
     1006     4388    4                FLAG=0;
     1007     4389    4                CALL FMD$FLSHBUF(BUFNUM);
     1008     4390    4                F$DCB.BFR1.CX(BUFNUM)=HASH;
     1009     4391    4                CALL FMC$RELCACHE(BUFNUM);
     1010     4392    4                RETURN;
     1011     4393    4                END;
     1012     4394    3             END;  /* WE GOTTA WAIT */
     1013     4395
     1014     4396    2          IF NOCACHE = 0 THEN
     1015     4397    3             DO;   /* NORMAL */
     1016     4398                  %UNLOCK(G=FMC_LOCK);
     1017     4401    3             CALL FMD$FLSHBUF(BUFNUM);
     1018     4402    3             F$DCB.BFR1.CX(BUFNUM)=HASH;
     1019     4403    3             NEWPP=FMC$CACHE.PAGE;
     1020     4404    3             CALL MMJ$MAPIOP(VPNO, NEWPP);
     1021     4405    3             F$DCB.BFR.BUFX(BUFNUM)=VPNO;
     1022     4406    3             F$DCB.BFR1.SIZ(BUFNUM)=1;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:181  
     1023     4407    3             END;  /* NORMAL */
     1024     4408    2          ELSE
     1025     4409    3             DO;   /* MAKE AN UNCACHED COPY */
     1026     4410                  %UNLOCK(G=FMC_LOCK);
     1027     4413    3             CALL FMD$FLSHBUFNR(BUFNUM);
     1028     4414    3             CALL FMD$GETBUF(BUFNUM, 1, BUF$);
     1029     4415                  %LOCK(G=FMC_LOCK);
     1030     4418    3             B$LS$->B$MLNK.MISC=DESCINIT;
     1031     4419    3             B$LS$->B$MLNK.MISC.BASE=FMC$CACHE.PAGE*4096;
     1032     4420    3             BUF$->BUFFER=B$MISC$->BUFFER;
     1033     4421    3             FMC$CACHE.USECNT=FMC$CACHE.USECNT-1;
     1034     4422    3             IF FMC$CACHE.USECNT = 0 THEN
     1035     4423    3                CALL FMC$ADD(HASH);
     1036     4424    3             F$DCB.BFR.CVM(BUFNUM)='0'B;
     1037     4425                  %UNLOCK(G=FMC_LOCK);
     1038     4428    3             END;  /* MAKE AN UNCACHED COPY */
     1039     4429    2          B$JIT.ACCESS.PACKS=B$JIT.ACCESS.PACKS+1;
     1040     4430    2          FLAG=1;
     1041     4431
     1042     4432    2          RETURN;
     1043     4433    2          END CHECK_CACHE;
     1044     4434               %EJECT;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:182  
     1045     4435    1   LOGERR: PROC(ERR) ALTRET;
     1046     4436    2          DCL ERR SBIN;
     1047     4437        /* */
     1048     4438    2          FMC$CACHE.FLAGS.ERR='1'B;
     1049     4439    2          CALL FMB$ERRTYP(CODE);
     1050     4440    2          IF ERR = 2 THEN
     1051     4441    2             MISC=BITBIN(N$REQ.TYC);
     1052     4442    2          ELSE
     1053     4443    2             IF F$DCB.CFU$ = ADDR(NIL) THEN
     1054     4444    2                MISC=-1;
     1055     4445    2             ELSE
     1056     4446    2                MISC=F$DCB.CFU$->FM$CFU.UGRANS;
     1057     4447
     1058     4448    2          CALL FMB$LOGERR(CODE, ERR, 8, SRDA, BUF$, 0, 1, 2, MISC,,Q$);
     1059     4449
     1060     4450    2          IF Q$ ~= ADDR(NIL) THEN
     1061     4451    3             DO;
     1062     4452    3             CALL NIQ$REL(Q$);
     1063     4453    3             Q$=ADDR(NIL);
     1064     4454    3             END;
     1065     4455    2          IF CODE ~= %E$DI AND ERR = 2 THEN
     1066     4456    2             CODE=CODE-%E$MI+%E$MIIO;
     1067     4457    2          B$JIT.ERR=ERRWD;
     1068     4458    2          B$JIT.ERR.CODE=CODE;
     1069     4459    2          F$DCB.BFR.DA(BUFNUM)=SRDA;
     1070     4460    2          CALL FMC$RELCACHE(BUFNUM);
     1071     4461
     1072     4462    2          ALTRETURN;
     1073     4463    2          END LOGERR;
     1074     4464    1          END FMC$GET;
     1075     4465               %EOD;

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:183  
--  Include file information  --

   B_MLSMAC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   FM_BUF_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$GET.

   Procedure FMC$GET requires 616 words for executable code.
   Procedure FMC$GET requires 38 words of local(AUTO) storage.

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:184  

 Object Unit name= FMC$GET                                    File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:40:26.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      7      7  FMC$GET
    1   Proc  even  none   616   1150  FMC$GET
    2  RoData even  none    22     26  FMC$GET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        4  FMC$GET
     1      4          yes     yes      Std        4  FMC$NOCACHE
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:185  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 FAF$FRTOSR
         yes           Std       1 FMC$GETTYPE
 yes     yes           Std       4 FMC$GETSLOT
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       9 FMB$QUEUE
         yes           Std       2 MMJ$MAPIOP
         yes           Std       1 FMD$FLSHBUF
 yes     yes           Std       1 NIQ$REL
         yes           Std       1 HFC$LOCK
         yes           Std       1 MMJ$GIOP
         yes           Std       4 SSR$RUE
 yes     yes           Std       3 SSR$REG
         yes           Std       1 FMC$REMOVE
         yes           Std       1 FMC$RELCACHE
         yes           Std       1 FMD$FLSHBUFNR
         yes           Std       3 FMD$GETBUF
         yes           Std       1 FMC$ADD
         yes           Std       1 FMB$ERRTYP
         yes           Std      11 FMB$LOGERR
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:186  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHE$                            FMC_STATS$                            FMC_CACHESIZ
     FMC_CACHEPGCNT$                       FMC_LOCK                              FMC_MASK
r    FM_SRZERO                             FM$BUF$                               P_RESOURCE$
     P_UPTIME                              P_NSCPU                               B$JIT$
     S_CUN                                 B$LS$                            r    B$MISC$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:187  


      725        1        /*T***********************************************************/
      726        2        /*T*                                                         */
      727        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      728        4        /*T*                                                         */
      729        5        /*T***********************************************************/
      730        6        /*D*     NAME:     FMC$GET
      731        7                 PURPOSE:  To get a cached page for the user.
      732        8                 INPUT:    BUFNUM - Buffer number
      733        9                           DA - Disk address we want
      734       10                 OUTPUT:   BUF$ - Pointer to the buffer
      735       11                           FLAG - 1 if we could get the cached page
      736       12                                  0 if we couldn't
      737       13
      738       14                 DESCRIPTION:
      739       15
      740       16                      Set up the SRDA, granule type, and hash to the table
      741       17                 row that we want.
      742       18                      Check to see if the page is already in the cache, if
      743       19                 it was, then just return.
      744       20
      745       21                      Otherwise, try to get a slot in the cache table.  If
      746       22                 we could, then set up the cache table entry.  Then we get
      747       23                 a cache page, map the user onto it, and read the granule.
      748       24                 It is possible that another user will want a page while
      749       25                 we are actually in the process of reading the granule.  If
      750       26                 that happens, we set FMC$CACHE.FLAGS.WAIT.  Then we call
      751       27                 the scheduler routines to wake up any waiting users.
      752       28        */
      753       29                 %EJECT;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:188  
      754       30        FMC$GET: PROC(BUF$, BUFNUM, DA, FLAG) ALTRET;

     30  1 000000   000000 700200 xent  FMC$GET      TSX0  ! X66_AUTO_4
         1 000001   000046 000004                    ZERO    38,4

      755       31    1          DCL BUF$ PTR;
      756       32    1          DCL BUFNUM SBIN;
      757       33    1          DCL DA SBIN;
      758       34    1          DCL FLAG SBIN;
      759       35        /* */
      760       36               %INCLUDE FM_CACHE_R;
      761       48               %INCLUDE FM_CACHE_C;
      762      114               %INCLUDE FM_CNTRL_R;
      763      123               %INCLUDE FM_DATA_R;
      764      137               %INCLUDE FM_BUF_R;
      765      146               %INCLUDE N_FC_C;
      766      183               %INCLUDE N$REQ;
      767      257               %INCLUDE FM$MACROS;
      768      632               %INCLUDE F_ERRORS_C;
      769      872               %INCLUDE HF_LOCK_C;
      770      886               %INCLUDE SS_SCHED_C;
      771     1119               %INCLUDE B$JIT;
      772     1722               %MACRO F$DCB(BASED=BASED);
      773     1723               %INCLUDE F$DCB;
      774     1772               %MEND;
      775     1773               %INCLUDE P_PMDAT_R;
      776     2081               %INCLUDE B_STRINGS_C;
      777     2210               %INCLUDE B_MLSMAC_C;
      778     3152        /* */
      779     3153    1          DCL SSR$REG ENTRY(3) ALTRET;
      780     3154    1          DCL SSR$RUE ENTRY(4);
      781     3155    1          DCL MMJ$GIOP ENTRY(1);
      782     3156    1          DCL MMJ$FBTOIOP ENTRY(2);
      783     3157    1          DCL MMJ$MAPIOP ENTRY(2);
      784     3158    1          DCL MMJ$UNMAPIOP ENTRY(1);
      785     3159    1          DCL NIQ$REL ENTRY(1) ALTRET;
      786     3160    1          DCL FMD$FLSHBUF ENTRY(1);
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:189  
      787     3161    1          DCL FMD$FLSHBUFNR ENTRY(1);
      788     3162    1          DCL FMD$GETBUF ENTRY(3);
      789     3163    1          DCL FMB$QUEUE ENTRY(9) ALTRET;
      790     3164    1          DCL FMB$ERRTYP ENTRY(1);
      791     3165    1          DCL FMB$LOGERR ENTRY(11);
      792     3166    1          DCL FAF$FRTOSR ENTRY(3) ALTRET;
      793     3167    1          DCL FMC$GETTYPE ENTRY(1);
      794     3168    1          DCL FMC$GETSLOT ENTRY(4) ALTRET;
      795     3169    1          DCL FMC$ADD ENTRY(1);
      796     3170    1          DCL FMC$REMOVE ENTRY(1);
      797     3171    1          DCL FMC$RELCACHE ENTRY(1);
      798     3172        /* */
      799     3173    1          DCL 1 DESCINIT CONSTANT,
      800     3174    1               2 BOUND UBIN(20) UNAL INIT(4095),  /* FRAME A PAGE */
      801     3175    1               2 FLGS BIT(3) INIT('7'O),          /* ALLOW READ/WRITE */
      802     3176    1               2 WSQ UBIN(9) UNAL INIT(0),        /* REAL PAGE NO */
      803     3177    1               2 TYP UBIN(4) UNAL INIT(2);        /* WSQ TYPE DESC */
      804     3178    1          DCL ZAPBUF(0:4) CONSTANT BIT(36)
      805     3179    1             INIT('111111111111'O,'222222222222'O,'333333333333'O,
      806     3180    1                  '444444444444'O,'555555555555'O);
      807     3181        /* */
      808     3182    1          DCL B$JIT$ PTR SYMREF;
      809     3183    1          DCL S_CUN UBIN(36) SYMREF;
      810     3184    1          DCL B$LS$ PTR SYMREF;
      811     3185    1          DCL B$MISC$ PTR SYMREF READONLY;
      812     3186        /* */
      813     3187    1          DCL BUFFER CHAR(4096) BASED;
      814     3188        /* */
      815     3189    1          DCL JDCB$ PTR;
      816     3190    1          DCL SRDA SBIN;
      817     3191    1          DCL GRANS SBIN;
      818     3192    1          DCL HASH SBIN;
      819     3193    1          DCL I SBIN;
      820     3194    1          DCL N SBIN;
      821     3195    1          DCL CACHE$ PTR;
      822     3196    1          DCL TYPE SBIN;
      823     3197    1          DCL NEWPP SBIN;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:190  
      824     3198    1          DCL VPNO SBIN;
      825     3199    1          DCL SETX SBIN;
      826     3200    1          DCL PP SBIN;
      827     3201    1          DCL USER UBIN(9) CALIGNED;
      828     3202    1          DCL Q$ PTR;
      829     3203    1          DCL CODE SBIN;
      830     3204    1          DCL MISC SBIN;
      831     3205    1          DCL NOCACHE SBIN;
      832     3206        /* */
      833     3207               %SUB FCG#='0615'O;
      834     3208               %SUB MID#='04'O;
      835     3209        /* */
      836     3210               %FMC$CACHE;
      837     3233               %FMC$CACHE(FPTN=FMC$CACHE, ARRAY=NO, STCLASS="BASED(CACHE$)");
      838     3256               %FMC$STATS;
      839     3265               %F$DCB(BASED="BASED(JDCB$)");
      840     3315               %FM$GRAN(BASED="BASED(BUF$)");
      841     3319               %N$REQ(STCLASS="BASED(Q$)");
      842     3377               %ERRCODE(NAME=ERRWD, COD#=0);
      843     3381               %FM$CFU;
      844     3387               %B_MLS(FPTN=B$MLNK, STCLASS=BASED);
      845     4202        /* */
      846     4203    1          NOCACHE=0;

   4203  1 000002   200027 450100                    STZ     NOCACHE,,AUTO

      847     4204    1          GOTO COMMON;

   4204  1 000003   000010 710000 1                  TRA     COMMON

      848     4205    1   FMC$NOCACHE: ENTRY(BUF$, BUFNUM, DA, FLAG) ALTRET;

   4205  1 000004   000000 700200 xent  FMC$NOCACHE  TSX0  ! X66_AUTO_4
         1 000005   000046 000004                    ZERO    38,4

      849     4206    1          NOCACHE=1;

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:191  
   4206  1 000006   000001 235007                    LDA     1,DL
         1 000007   200027 755100                    STA     NOCACHE,,AUTO

   4206  1 000010                       COMMON       null
      850     4207
      851     4208    1   COMMON: ;
      852     4209    1          IF FMC_CACHESIZ = 0 THEN

   4209  1 000010   000000 235000 xsym               LDA     FMC_CACHESIZ
         1 000011   000015 601000 1                  TNZ     s:4215

      853     4210    2             DO;

      854     4211    2             FLAG=0;

   4211  1 000012   200006 470500                    LDP0    @FLAG,,AUTO
         1 000013   000000 450100                    STZ     0,,PR0

      855     4212    2             RETURN;

   4212  1 000014   000000 702200 xent               TSX2  ! X66_ARET

      856     4213    2             END;
      857     4214
      858     4215    1          JDCB$=B$JIT.DCB$;

   4215  1 000015   000000 470400 xsym               LDP0    B$JIT$
         1 000016   000232 236100                    LDQ     154,,PR0
         1 000017   200007 756100                    STQ     JDCB$,,AUTO

      859     4216    1          IF DA < FM_SRZERO THEN

   4216  1 000020   200005 471500                    LDP1    @DA,,AUTO
         1 000021   100000 236100                    LDQ     0,,PR1
         1 000022   000025 604000 1                  TMI     s:4217
         1 000023   000000 116000 xsym               CMPQ    FM_SRZERO
         1 000024   000040 603000 1                  TRC     s:4219
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:192  

      860     4217    1             CALL FAF$FRTOSR(DA, SRDA, GRANS) ALTRET(DAERR);

   4217  1 000025   200011 633500                    EPPR3   GRANS,,AUTO
         1 000026   200034 453500                    STP3    @ERR+3,,AUTO
         1 000027   200010 634500                    EPPR4   SRDA,,AUTO
         1 000030   200033 454500                    STP4    @ERR+2,,AUTO
         1 000031   200005 236100                    LDQ     @DA,,AUTO
         1 000032   200032 756100                    STQ     @ERR+1,,AUTO
         1 000033   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000034   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000035   000000 701000 xent               TSX1    FAF$FRTOSR
         1 000036   000337 702000 1                  TSX2    DAERR
         1 000037   000041 710000 1                  TRA     s:4220

      861     4218    1          ELSE
      862     4219    1             SRDA=DA;

   4219  1 000040   200010 756100                    STQ     SRDA,,AUTO

      863     4220    1          SETX=F$DCB.SETX;

   4220  1 000041   200007 470500                    LDP0    JDCB$,,AUTO
         1 000042   000051 236100                    LDQ     41,,PR0
         1 000043   777777 376007                    ANQ     -1,DL
         1 000044   200021 756100                    STQ     SETX,,AUTO

      864     4221    1          CALL FMC$GETTYPE(TYPE);

   4221  1 000045   200016 631500                    EPPR1   TYPE,,AUTO
         1 000046   200032 451500                    STP1    @ERR+1,,AUTO
         1 000047   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000050   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000051   000000 701000 xent               TSX1    FMC$GETTYPE
         1 000052   000000 011000                    NOP     0

      865     4222    1          FMC$STATS.ATTGET(TYPE)=FMC$STATS.ATTGET(TYPE)+1;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:193  

   4222  1 000053   000000 470400 xsym               LDP0    FMC_STATS$
         1 000054   200016 720100                    LXL0    TYPE,,AUTO
         1 000055   000041 054110                    AOS     33,X0,PR0

      866     4223
      867     4224               %HASH;

   4225  1 000056   200010 236100                    LDQ     SRDA,,AUTO
         1 000057   200021 036100                    ADLQ    SETX,,AUTO
         1 000060   000000 376000 xsym               ANQ     FMC_MASK
         1 000061   000002 736000                    QLS     2
         1 000062   000001 036007                    ADLQ    1,DL
         1 000063   200012 756100                    STQ     HASH,,AUTO

      868     4227
      869     4228    1          CALL CHECK_CACHE(FLAG);

   4228  1 000064   200006 236100                    LDQ     @FLAG,,AUTO
         1 000065   200031 756100                    STQ     NOCACHE+2,,AUTO
         1 000066   000374 701000 1                  TSX1    CHECK_CACHE
         1 000067   000000 011000                    NOP     0

      870     4229
      871     4230    1          IF FLAG = 1 OR NOCACHE = 1 THEN

   4230  1 000070   200006 470500                    LDP0    @FLAG,,AUTO
         1 000071   000000 235100                    LDA     0,,PR0
         1 000072   000001 115007                    CMPA    1,DL
         1 000073   000077 600000 1                  TZE     s:4231
         1 000074   200027 236100                    LDQ     NOCACHE,,AUTO
         1 000075   000001 116007                    CMPQ    1,DL
         1 000076   000100 601000 1                  TNZ     s:4234

      872     4231    1             RETURN;

   4231  1 000077   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:194  

      873     4232
      874     4233               %LOCK(G=FMC_LOCK);

   4234  1 000100   000000 630400 2                  EPPR0   0
         1 000101   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000102   000000 701000 xent               TSX1    HFC$LOCK
         1 000103   000000 011000                    NOP     0

      875     4236    1          CALL FMC$GETSLOT(HASH, TYPE, SRDA, CACHE$) ALTRET(NOCACHE);

   4236  1 000104   200015 630500                    EPPR0   CACHE$,,AUTO
         1 000105   200035 450500                    STP0    @ERR+4,,AUTO
         1 000106   200010 631500                    EPPR1   SRDA,,AUTO
         1 000107   200034 451500                    STP1    @ERR+3,,AUTO
         1 000110   200016 633500                    EPPR3   TYPE,,AUTO
         1 000111   200033 453500                    STP3    @ERR+2,,AUTO
         1 000112   200012 634500                    EPPR4   HASH,,AUTO
         1 000113   200032 454500                    STP4    @ERR+1,,AUTO
         1 000114   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000115   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000116   000000 701000 xent               TSX1    FMC$GETSLOT
         1 000117   000365 702000 1                  TSX2    NOCACHE

      876     4237
      877     4238    1          FMC$CACHE.FLAGS.IO='1'B;

   4238  1 000120   200015 470500                    LDP0    CACHE$,,AUTO
         1 000121   000010 236007                    LDQ     8,DL
         1 000122   000004 256100                    ORSQ    4,,PR0

      878     4239    1          FMC$CACHE.SRDA=SRDA;

   4239  1 000123   200015 470500                    LDP0    CACHE$,,AUTO
         1 000124   200010 236100                    LDQ     SRDA,,AUTO
         1 000125   000000 552134                    STBQ    0,'34'O,PR0

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:195  
      879     4240    1          FMC$CACHE.USECNT=1;

   4240  1 000126   000001 220003                    LDX0    1,DU
         1 000127   200015 470500                    LDP0    CACHE$,,AUTO
         1 000130   000002 440100                    SXL0    2,,PR0

      880     4241    1          FMC$CACHE.SETX=F$DCB.SETX;

   4241  1 000131   200007 470500                    LDP0    JDCB$,,AUTO
         1 000132   000051 721100                    LXL1    41,,PR0
         1 000133   200015 471500                    LDP1    CACHE$,,AUTO
         1 000134   100004 741100                    STX1    4,,PR1

      881     4242    1          FMC$CACHE.TYPE=TYPE;

   4242  1 000135   200015 471500                    LDP1    CACHE$,,AUTO
         1 000136   200016 236100                    LDQ     TYPE,,AUTO
         1 000137   000033 736000                    QLS     27
         1 000140   100000 552140                    STBQ    0,'40'O,PR1

      882     4243               %INC_COUNTER(ITEM=IOCACHE);

   4244  1 000141   000000 471400 xsym               LDP1    P_RESOURCE$
         1 000142   100055 235100                    LDA     45,,PR1
         1 000143   000001 035007                    ADLA    1,DL
         1 000144   100055 755100                    STA     45,,PR1

   4245  1 000145   100056 236100                    LDQ     46,,PR1
         1 000146   100055 116100                    CMPQ    45,,PR1
         1 000147   000151 603000 1                  TRC     s:4250

   4247  1 000150   100056 755100                    STA     46,,PR1

      883     4249               %UNLOCK(G=FMC_LOCK);

   4250  1 000151   000000 630400 2                  EPPR0   0
         1 000152   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:196  
         1 000153   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000154   000000 011000                    NOP     0

      884     4252
      885     4253    1          CALL FMD$FLSHBUF(BUFNUM);

   4253  1 000155   200004 630500                    EPPR0   @BUFNUM,,AUTO
         1 000156   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000157   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 000160   000000 011000                    NOP     0

      886     4254    1          CALL MMJ$GIOP(PP);

   4254  1 000161   200022 630500                    EPPR0   PP,,AUTO
         1 000162   200032 450500                    STP0    @ERR+1,,AUTO
         1 000163   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000164   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000165   000000 701000 xent               TSX1    MMJ$GIOP
         1 000166   000000 011000                    NOP     0

      887     4255    1          FMC$CACHE.PAGE=PP;

   4255  1 000167   200022 720100                    LXL0    PP,,AUTO
         1 000170   200015 470500                    LDP0    CACHE$,,AUTO
         1 000171   000002 740100                    STX0    2,,PR0

      888     4256    1          CALL MMJ$MAPIOP(VPNO, PP);

   4256  1 000172   200022 630500                    EPPR0   PP,,AUTO
         1 000173   200033 450500                    STP0    @ERR+2,,AUTO
         1 000174   200020 631500                    EPPR1   VPNO,,AUTO
         1 000175   200032 451500                    STP1    @ERR+1,,AUTO
         1 000176   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000177   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000200   000000 701000 xent               TSX1    MMJ$MAPIOP
         1 000201   000000 011000                    NOP     0

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:197  
      889     4257    1          F$DCB.BFR.BUFX(BUFNUM)=VPNO;

   4257  1 000202   200004 470500                    LDP0    @BUFNUM,,AUTO
         1 000203   000000 235100                    LDA     0,,PR0
         1 000204   200007 471500                    LDP1    JDCB$,,AUTO
         1 000205   200020 236100                    LDQ     VPNO,,AUTO
         1 000206   000033 736000                    QLS     27
         1 000207   100115 676105                    ERQ     77,AL,PR1
         1 000210   037000 376003                    ANQ     15872,DU
         1 000211   100115 656105                    ERSQ    77,AL,PR1

      890     4258    1          F$DCB.BFR1.SIZ(BUFNUM)=1;

   4258  1 000212   000000 235100                    LDA     0,,PR0
         1 000213   100122 236105                    LDQ     82,AL,PR1
         1 000214   000001 376000 2                  ANQ     1
         1 000215   000001 276003                    ORQ     1,DU
         1 000216   100122 756105                    STQ     82,AL,PR1

      891     4259    1          F$DCB.BFR1.CX(BUFNUM)=HASH;

   4259  1 000217   000000 235100                    LDA     0,,PR0
         1 000220   200012 720100                    LXL0    HASH,,AUTO
         1 000221   100122 440105                    SXL0    82,AL,PR1

      892     4260    1          F$DCB.BFR.DA(BUFNUM) = 0;

   4260  1 000222   000000 235100                    LDA     0,,PR0
         1 000223   777000 236003                    LDQ     -512,DU
         1 000224   100115 356105                    ANSQ    77,AL,PR1

      893     4261    1          BUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));

   4261  1 000225   000000 235100                    LDA     0,,PR0
         1 000226   100115 236105                    LDQ     77,AL,PR1
         1 000227   000033 772000                    QRL     27
         1 000230   000037 376007                    ANQ     31,DL
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:198  
         1 000231   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 000232   200003 473500                    LDP3    @BUF$,,AUTO
         1 000233   300000 756100                    STQ     0,,PR3

      894     4262    1          FM$GRAN=ZAPBUF;

   4262  1 000234   300000 474500                    LDP4    0,,PR3
         1 000235   000100 100400                    MLR     fill='000'O
         1 000236   000001 000024 0                  ADSC9   ZAPBUF                   cn=0,n=20
         1 000237   400000 000024                    ADSC9   0,,PR4                   cn=0,n=20

      895     4263    1          Q$=ADDR(NIL);

   4263  1 000240   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000241   200024 756100                    STQ     Q$,,AUTO

      896     4264    1          CALL FMB$QUEUE(BUF$, 1, 4096, SRDA, %N_RDBIN, -1,

   4264  1 000242   200024 634500                    EPPR4   Q$,,AUTO
         1 000243   200042 454500                    STP4    @ERR+9,,AUTO
         1 000244   000004 237000 2                  LDAQ    4
         1 000245   200040 757100                    STAQ    @ERR+7,,AUTO
         1 000246   000006 237000 2                  LDAQ    6
         1 000247   200036 757100                    STAQ    @ERR+5,,AUTO
         1 000250   200010 635500                    EPPR5   SRDA,,AUTO
         1 000251   200035 455500                    STP5    @ERR+4,,AUTO
         1 000252   000010 236000 2                  LDQ     8
         1 000253   200034 756100                    STQ     @ERR+3,,AUTO
         1 000254   000011 236000 2                  LDQ     9
         1 000255   200003 235100                    LDA     @BUF$,,AUTO
         1 000256   200032 757100                    STAQ    @ERR+1,,AUTO
         1 000257   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000260   000002 631400 2                  EPPR1   2
         1 000261   000000 701000 xent               TSX1    FMB$QUEUE
         1 000262   000342 702000 1                  TSX2    ERR1

      897     4265    1             ENTADDR(NIL), 0, Q$) ALTRET(ERR1);
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:199  
      898     4266    1          IF N$REQ.TYC ~= '1'B THEN

   4266  1 000263   200024 470500                    LDP0    Q$,,AUTO
         1 000264   000021 236100                    LDQ     17,,PR0
         1 000265   400000 116003                    CMPQ    -131072,DU
         1 000266   000273 600000 1                  TZE     s:4268

      899     4267    1             CALL LOGERR(2) ALTRET(ERR);

   4267  1 000267   000006 236000 2                  LDQ     6
         1 000270   200031 756100                    STQ     NOCACHE+2,,AUTO
         1 000271   001013 701000 1                  TSX1    LOGERR
         1 000272   000346 702000 1                  TSX2    ERR

      900     4268    1          IF Q$ ~= ADDR(NIL) THEN

   4268  1 000273   200024 236100                    LDQ     Q$,,AUTO
         1 000274   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000275   000304 600000 1                  TZE     s:4272

      901     4269    1             CALL NIQ$REL(Q$);

   4269  1 000276   200024 630500                    EPPR0   Q$,,AUTO
         1 000277   200032 450500                    STP0    @ERR+1,,AUTO
         1 000300   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000301   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000302   000000 701000 xent               TSX1    NIQ$REL
         1 000303   000000 011000                    NOP     0

      902     4270
      903     4271               %LOCK(G=FMC_LOCK);

   4272  1 000304   000000 630400 2                  EPPR0   0
         1 000305   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000306   000000 701000 xent               TSX1    HFC$LOCK
         1 000307   000000 011000                    NOP     0

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:200  
      904     4274    1          FMC$CACHE.FLAGS.IO='0'B;

   4274  1 000310   200015 470500                    LDP0    CACHE$,,AUTO
         1 000311   000012 236000 2                  LDQ     10
         1 000312   000004 356100                    ANSQ    4,,PR0

      905     4275
      906     4276    1          IF FMC$CACHE.FLAGS.WAIT THEN

   4276  1 000313   200015 470500                    LDP0    CACHE$,,AUTO
         1 000314   000004 236100                    LDQ     4,,PR0
         1 000315   000004 316007                    CANQ    4,DL
         1 000316   000327 600000 1                  TZE     s:4282

      907     4277    2             DO;   /* THERE WERE OTHERS WAITING */

      908     4278    2             CALL SSR$RUE(%SS_UQC, FMC$CACHE.USER);

   4278  1 000317   200015 236100                    LDQ     CACHE$,,AUTO
         1 000320   000014 036000 2                  ADLQ    12
         1 000321   000015 235000 2                  LDA     13
         1 000322   200032 757100                    STAQ    @ERR+1,,AUTO
         1 000323   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000324   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000325   000000 701000 xent               TSX1    SSR$RUE
         1 000326   000000 011000                    NOP     0

      909     4279    2             END;  /* THERE WERE OTHERS WAITING */

      910     4280
      911     4281               %UNLOCK(G=FMC_LOCK);

   4282  1 000327   000000 630400 2                  EPPR0   0
         1 000330   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000331   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000332   000000 011000                    NOP     0

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:201  
      912     4284    1          FLAG=2;

   4284  1 000333   000002 235007                    LDA     2,DL
         1 000334   200006 470500                    LDP0    @FLAG,,AUTO
         1 000335   000000 755100                    STA     0,,PR0

      913     4285    1          RETURN;

   4285  1 000336   000000 702200 xent               TSX2  ! X66_ARET

      914     4286
      915     4287    1   DAERR: FLAG=0;

   4287  1 000337   200006 470500       DAERR        LDP0    @FLAG,,AUTO
         1 000340   000000 450100                    STZ     0,,PR0

      916     4288    1          ALTRETURN;

   4288  1 000341   000000 702200 xent               TSX2  ! X66_AALT

      917     4289    1   ERR1:  CALL LOGERR(1);

   4289  1 000342   000011 236000 2     ERR1         LDQ     9
         1 000343   200031 756100                    STQ     NOCACHE+2,,AUTO
         1 000344   001013 701000 1                  TSX1    LOGERR
         1 000345   000000 011000                    NOP     0

      918     4290    1   ERR:   FLAG=0;

   4290  1 000346   200006 470500       ERR          LDP0    @FLAG,,AUTO
         1 000347   000000 450100                    STZ     0,,PR0

      919     4291    1          IF FMC$CACHE.FLAGS.WAIT THEN

   4291  1 000350   200015 471500                    LDP1    CACHE$,,AUTO
         1 000351   100004 236100                    LDQ     4,,PR1
         1 000352   000004 316007                    CANQ    4,DL
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:202  
         1 000353   000364 600000 1                  TZE     s:4293

      920     4292    1             CALL SSR$RUE(%SS_UQC, FMC$CACHE.USER);

   4292  1 000354   200015 236100                    LDQ     CACHE$,,AUTO
         1 000355   000014 036000 2                  ADLQ    12
         1 000356   000015 235000 2                  LDA     13
         1 000357   200032 757100                    STAQ    @ERR+1,,AUTO
         1 000360   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000361   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000362   000000 701000 xent               TSX1    SSR$RUE
         1 000363   000000 011000                    NOP     0

      921     4293    1          ALTRETURN;

   4293  1 000364   000000 702200 xent               TSX2  ! X66_AALT

      922     4294    1   NOCACHE: FLAG=0;

   4294  1 000365   200006 470500       NOCACHE      LDP0    @FLAG,,AUTO
         1 000366   000000 450100                    STZ     0,,PR0

      923     4295               %UNLOCK(G=FMC_LOCK);

   4296  1 000367   000000 630400 2                  EPPR0   0
         1 000370   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000371   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000372   000000 011000                    NOP     0

      924     4298    1          RETURN;

   4298  1 000373   000000 702200 xent               TSX2  ! X66_ARET

      925     4299               %EJECT;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:203  
      926     4300        /*I*     NAME:     CHECK_CACHE
      927     4301                 PURPOSE:  To check to see if a page we want is already in
      928     4302                           the cache table.
      929     4303
      930     4304                 DESCRIPTION:
      931     4305
      932     4306                      Check all four entries in the row that we hashed to.
      933     4307                 If we didn't find it, then set the flag to zero, and return.
      934     4308
      935     4309                      If the usecount is zero, then remove the page from the
      936     4310                 linked list.
      937     4311
      938     4312                      If we are still actually reading the page, then call
      939     4313                 the scheduler routines to REG the user.  When we wake up
      940     4314                 do a quick check to see if everything is okay.
      941     4315
      942     4316                      If the NOCACHE flag is zero, then map the user onto
      943     4317                 the page.  If the NOCACHE flag is set, then the caller
      944     4318                 actually wants a copy of the granule that he can muck with.
      945     4319                 Get another page and make a copy of the granule that won't
      946     4320                 be the the cache table.
      947     4321        */
      948     4322                 %EJECT;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:204  
      949     4323    1   CHECK_CACHE: PROC(FLAG);

   4323  1 000374   200030 741300       CHECK_CACHE  STX1  ! NOCACHE+1,,AUTO

      950     4324    2          DCL FLAG SBIN;
      951     4325        /* */
      952     4326               %LOCK(G=FMC_LOCK);

   4327  1 000375   000000 630400 2                  EPPR0   0
         1 000376   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000377   000000 701000 xent               TSX1    HFC$LOCK
         1 000400   000000 011000                    NOP     0

      953     4329    2          I=0;

   4329  1 000401   200013 450100                    STZ     I,,AUTO

      954     4330    3          DO WHILE (I <= 3 AND

   4330  1 000402   000404 710000 1                  TRA     s:4335

      955     4331    3             (FMC$CACHETBL.SRDA(HASH+I) ~= SRDA OR
      956     4332    3              FMC$CACHETBL.SETX(HASH+I) ~= SETX OR
      957     4333    3              FMC$CACHETBL.FLAGS.ERR(HASH+I)));
      958     4334    3             I=I+1;

   4334  1 000403   200013 054100                    AOS     I,,AUTO

      959     4335    3          END;  /* WHILE */

   4335  1 000404   200013 235100                    LDA     I,,AUTO
         1 000405   000003 115007                    CMPA    3,DL
         1 000406   000434 605400 1                  TPNZ    s:4337
         1 000407   200012 236100                    LDQ     HASH,,AUTO
         1 000410   200013 036100                    ADLQ    I,,AUTO
         1 000411   000006 402007                    MPY     6,DL
         1 000412   000000 470400 xsym               LDP0    FMC_CACHE$
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:205  
         1 000413   000000 236106                    LDQ     0,QL,PR0
         1 000414   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000415   200010 116100                    CMPQ    SRDA,,AUTO
         1 000416   000403 601000 1                  TNZ     s:4334
         1 000417   200012 236100                    LDQ     HASH,,AUTO
         1 000420   200013 036100                    ADLQ    I,,AUTO
         1 000421   000006 402007                    MPY     6,DL
         1 000422   000004 236106                    LDQ     4,QL,PR0
         1 000423   000022 772000                    QRL     18
         1 000424   200021 116100                    CMPQ    SETX,,AUTO
         1 000425   000403 601000 1                  TNZ     s:4334
         1 000426   200012 236100                    LDQ     HASH,,AUTO
         1 000427   200013 036100                    ADLQ    I,,AUTO
         1 000430   000006 402007                    MPY     6,DL
         1 000431   000004 236106                    LDQ     4,QL,PR0
         1 000432   000002 316007                    CANQ    2,DL
         1 000433   000403 601000 1                  TNZ     s:4334

      960     4336
      961     4337    2          IF FMC$CACHETBL.SRDA(HASH+I) ~= SRDA OR

   4337  1 000434   200012 236100                    LDQ     HASH,,AUTO
         1 000435   200013 036100                    ADLQ    I,,AUTO
         1 000436   000006 402007                    MPY     6,DL
         1 000437   000000 470400 xsym               LDP0    FMC_CACHE$
         1 000440   000000 236106                    LDQ     0,QL,PR0
         1 000441   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000442   200010 116100                    CMPQ    SRDA,,AUTO
         1 000443   000461 601000 1                  TNZ     s:4342
         1 000444   200012 236100                    LDQ     HASH,,AUTO
         1 000445   200013 036100                    ADLQ    I,,AUTO
         1 000446   000006 402007                    MPY     6,DL
         1 000447   000004 236106                    LDQ     4,QL,PR0
         1 000450   000022 772000                    QRL     18
         1 000451   200021 116100                    CMPQ    SETX,,AUTO
         1 000452   000461 601000 1                  TNZ     s:4342
         1 000453   200012 236100                    LDQ     HASH,,AUTO
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:206  
         1 000454   200013 036100                    ADLQ    I,,AUTO
         1 000455   000006 402007                    MPY     6,DL
         1 000456   000004 236106                    LDQ     4,QL,PR0
         1 000457   000002 316007                    CANQ    2,DL
         1 000460   000471 600000 1                  TZE     s:4348

      962     4338    2             FMC$CACHETBL.SETX(HASH+I) ~= SETX OR
      963     4339    2             FMC$CACHETBL.FLAGS.ERR(HASH+I) THEN
      964     4340    3             DO;   /* NOT FOUND */

      965     4341                  %UNLOCK(G=FMC_LOCK);

   4342  1 000461   000000 630400 2                  EPPR0   0
         1 000462   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000463   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000464   000000 011000                    NOP     0

      966     4344    3             FLAG=0;

   4344  1 000465   200031 470500                    LDP0    @FLAG,,AUTO
         1 000466   000000 450100                    STZ     0,,PR0

      967     4345    3             RETURN;

   4345  1 000467   200030 221300                    LDX1  ! NOCACHE+1,,AUTO
         1 000470   000001 702211                    TSX2  ! 1,X1

      968     4346    3             END;  /* NOT FOUND */
      969     4347
      970     4348    2          HASH=HASH+I;

   4348  1 000471   200012 236100                    LDQ     HASH,,AUTO
         1 000472   200013 036100                    ADLQ    I,,AUTO
         1 000473   200012 756100                    STQ     HASH,,AUTO

      971     4349    2          CACHE$=ADDR(FMC$CACHETBL(HASH));

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:207  
   4349  1 000474   000006 402003                    MPY     6,DU
         1 000475   000000 036000 xsym               ADLQ    FMC_CACHE$
         1 000476   200015 756100                    STQ     CACHE$,,AUTO

      972     4350
      973     4351    2          IF FMC$CACHE.TYPE ~= TYPE THEN

   4351  1 000477   200015 471500                    LDP1    CACHE$,,AUTO
         1 000500   100000 236100                    LDQ     0,,PR1
         1 000501   000033 772000                    QRL     27
         1 000502   200016 116100                    CMPQ    TYPE,,AUTO
         1 000503   000521 600000 1                  TZE     s:4361

      974     4352    3             DO;  /* Keep stats for type we found */

      975     4353                  /* ACS=BLOCK reads (e.g., from EFT) could cause types of
      976     4354                  Keyed, Indexed, or IREL files to be set differently than
      977     4355                  usual since F$DCB.LVL would probably be 0.              */
      978     4356    3             FMC$STATS.ATTGET(TYPE)=FMC$STATS.ATTGET(TYPE)-1;

   4356  1 000504   000000 473400 xsym               LDP3    FMC_STATS$
         1 000505   200016 720100                    LXL0    TYPE,,AUTO
         1 000506   000001 336007                    LCQ     1,DL
         1 000507   300041 056110                    ASQ     33,X0,PR3

      979     4357    3             TYPE=FMC$CACHE.TYPE;

   4357  1 000510   200015 470500                    LDP0    CACHE$,,AUTO
         1 000511   000000 236100                    LDQ     0,,PR0
         1 000512   000033 772000                    QRL     27
         1 000513   200016 756100                    STQ     TYPE,,AUTO

      980     4358    3             FMC$STATS.ATTGET(TYPE)=FMC$STATS.ATTGET(TYPE)+1;

   4358  1 000514   000000 471400 xsym               LDP1    FMC_STATS$
         1 000515   200016 720100                    LXL0    TYPE,,AUTO
         1 000516   100041 235106                    LDA     33,QL,PR1
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:208  
         1 000517   000001 035007                    ADLA    1,DL
         1 000520   100041 755110                    STA     33,X0,PR1

      981     4359    3             END; /* Keep stats for type we found */

      982     4360
      983     4361    2          IF FMC$CACHE.USECNT = 0 THEN

   4361  1 000521   200015 470500                    LDP0    CACHE$,,AUTO
         1 000522   000002 720100                    LXL0    2,,PR0
         1 000523   000536 601000 1                  TNZ     s:4367

      984     4362    3             DO;

      985     4363    3             FMC$STATS.HITZERO(TYPE)=FMC$STATS.HITZERO(TYPE)+1;

   4363  1 000524   000000 471400 xsym               LDP1    FMC_STATS$
         1 000525   200016 721100                    LXL1    TYPE,,AUTO
         1 000526   100000 054111                    AOS     0,X1,PR1

      986     4364    3             CALL FMC$REMOVE(HASH);

   4364  1 000527   200012 630500                    EPPR0   HASH,,AUTO
         1 000530   200032 450500                    STP0    @ERR+1,,AUTO
         1 000531   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000532   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000533   000000 701000 xent               TSX1    FMC$REMOVE
         1 000534   000000 011000                    NOP     0

      987     4365    3             END;

   4365  1 000535   000541 710000 1                  TRA     s:4369

      988     4366    2          ELSE
      989     4367    2             FMC$STATS.HITNONZERO(TYPE)=FMC$STATS.HITNONZERO(TYPE)+1;

   4367  1 000536   000000 471400 xsym               LDP1    FMC_STATS$
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:209  
         1 000537   200016 721100                    LXL1    TYPE,,AUTO
         1 000540   100013 054111                    AOS     11,X1,PR1

      990     4368
      991     4369    2          FMC$CACHE.USECNT=FMC$CACHE.USECNT+1;

   4369  1 000541   200015 470500                    LDP0    CACHE$,,AUTO
         1 000542   000002 720100                    LXL0    2,,PR0
         1 000543   000001 621010                    EAX1    1,X0
         1 000544   000002 441100                    SXL1    2,,PR0

      992     4370
      993     4371    2          IF FMC$CACHE.FLAGS.IO THEN

   4371  1 000545   200015 470500                    LDP0    CACHE$,,AUTO
         1 000546   000004 236100                    LDQ     4,,PR0
         1 000547   000010 316007                    CANQ    8,DL
         1 000550   000640 600000 1                  TZE     s:4396

      994     4372    3             DO;   /* WE GOTTA WAIT */

      995     4373    3             USER=FMC$CACHE.USER;

   4373  1 000551   000004 236100                    LDQ     4,,PR0
         1 000552   000011 772000                    QRL     9
         1 000553   000777 376007                    ANQ     511,DL
         1 000554   000033 736000                    QLS     27
         1 000555   200023 756100                    STQ     USER,,AUTO

      996     4374    3             IF USER = 0 THEN

   4374  1 000556   200023 236100                    LDQ     USER,,AUTO
         1 000557   777000 316003                    CANQ    -512,DU
         1 000560   000567 601000 1                  TNZ     s:4379

      997     4375    4                DO;   /* FIRST ONE TO WAIT */

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:210  
      998     4376    4                FMC$CACHE.USER=S_CUN;

   4376  1 000561   000000 236000 xsym               LDQ     S_CUN
         1 000562   000011 736000                    QLS     9
         1 000563   000004 552110                    STBQ    4,'10'O,PR0

      999     4377    4                FMC$CACHE.FLAGS.WAIT='1'B;

   4377  1 000564   200015 470500                    LDP0    CACHE$,,AUTO
         1 000565   000004 236007                    LDQ     4,DL
         1 000566   000004 256100                    ORSQ    4,,PR0

     1000     4378    4                END;  /* FIRST ONE TO WAIT */

     1001     4379    3             CALL SSR$REG(%SS_QC, USER, FMC_LOCK);

   4379  1 000567   000000 236000 2                  LDQ     0
         1 000570   200034 756100                    STQ     @ERR+3,,AUTO
         1 000571   200023 630500                    EPPR0   USER,,AUTO
         1 000572   200033 450500                    STP0    @ERR+2,,AUTO
         1 000573   000017 236000 2                  LDQ     15
         1 000574   200032 756100                    STQ     @ERR+1,,AUTO
         1 000575   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000576   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000577   000000 701000 xent               TSX1    SSR$REG
         1 000600   000000 011000                    NOP     0

     1002     4380                  %LOCK(G=FMC_LOCK);

   4381  1 000601   000000 630400 2                  EPPR0   0
         1 000602   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000603   000000 701000 xent               TSX1    HFC$LOCK
         1 000604   000000 011000                    NOP     0

     1003     4383    3             IF FMC$CACHE.FLAGS.ERR OR FMC$CACHE.FLAGS.IO THEN

   4383  1 000605   200015 470500                    LDP0    CACHE$,,AUTO
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:211  
         1 000606   000004 236100                    LDQ     4,,PR0
         1 000607   000002 316007                    CANQ    2,DL
         1 000610   000613 601000 1                  TNZ     s:4386
         1 000611   000010 316007                    CANQ    8,DL
         1 000612   000640 600000 1                  TZE     s:4396

     1004     4384    4                DO;

     1005     4385                     %UNLOCK(G=FMC_LOCK);

   4386  1 000613   000000 630400 2                  EPPR0   0
         1 000614   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000615   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000616   000000 011000                    NOP     0

     1006     4388    4                FLAG=0;

   4388  1 000617   200031 470500                    LDP0    @FLAG,,AUTO
         1 000620   000000 450100                    STZ     0,,PR0

     1007     4389    4                CALL FMD$FLSHBUF(BUFNUM);

   4389  1 000621   200004 630500                    EPPR0   @BUFNUM,,AUTO
         1 000622   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000623   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 000624   000000 011000                    NOP     0

     1008     4390    4                F$DCB.BFR1.CX(BUFNUM)=HASH;

   4390  1 000625   200004 470500                    LDP0    @BUFNUM,,AUTO
         1 000626   000000 235100                    LDA     0,,PR0
         1 000627   200012 720100                    LXL0    HASH,,AUTO
         1 000630   200007 471500                    LDP1    JDCB$,,AUTO
         1 000631   100122 440105                    SXL0    82,AL,PR1

     1009     4391    4                CALL FMC$RELCACHE(BUFNUM);

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:212  
   4391  1 000632   200004 630500                    EPPR0   @BUFNUM,,AUTO
         1 000633   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000634   000000 701000 xent               TSX1    FMC$RELCACHE
         1 000635   000000 011000                    NOP     0

     1010     4392    4                RETURN;

   4392  1 000636   200030 221300                    LDX1  ! NOCACHE+1,,AUTO
         1 000637   000001 702211                    TSX2  ! 1,X1

     1011     4393    4                END;
     1012     4394    3             END;  /* WE GOTTA WAIT */
     1013     4395
     1014     4396    2          IF NOCACHE = 0 THEN

   4396  1 000640   200027 235100                    LDA     NOCACHE,,AUTO
         1 000641   000711 601000 1                  TNZ     s:4411

     1015     4397    3             DO;   /* NORMAL */

     1016     4398                  %UNLOCK(G=FMC_LOCK);

   4399  1 000642   000000 630400 2                  EPPR0   0
         1 000643   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000644   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000645   000000 011000                    NOP     0

     1017     4401    3             CALL FMD$FLSHBUF(BUFNUM);

   4401  1 000646   200004 630500                    EPPR0   @BUFNUM,,AUTO
         1 000647   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000650   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 000651   000000 011000                    NOP     0

     1018     4402    3             F$DCB.BFR1.CX(BUFNUM)=HASH;

   4402  1 000652   200004 470500                    LDP0    @BUFNUM,,AUTO
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:213  
         1 000653   000000 235100                    LDA     0,,PR0
         1 000654   200012 720100                    LXL0    HASH,,AUTO
         1 000655   200007 471500                    LDP1    JDCB$,,AUTO
         1 000656   100122 440105                    SXL0    82,AL,PR1

     1019     4403    3             NEWPP=FMC$CACHE.PAGE;

   4403  1 000657   200015 473500                    LDP3    CACHE$,,AUTO
         1 000660   300002 236100                    LDQ     2,,PR3
         1 000661   000022 772000                    QRL     18
         1 000662   200017 756100                    STQ     NEWPP,,AUTO

     1020     4404    3             CALL MMJ$MAPIOP(VPNO, NEWPP);

   4404  1 000663   200017 634500                    EPPR4   NEWPP,,AUTO
         1 000664   200033 454500                    STP4    @ERR+2,,AUTO
         1 000665   200020 635500                    EPPR5   VPNO,,AUTO
         1 000666   200032 455500                    STP5    @ERR+1,,AUTO
         1 000667   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000670   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000671   000000 701000 xent               TSX1    MMJ$MAPIOP
         1 000672   000000 011000                    NOP     0

     1021     4405    3             F$DCB.BFR.BUFX(BUFNUM)=VPNO;

   4405  1 000673   200004 470500                    LDP0    @BUFNUM,,AUTO
         1 000674   000000 235100                    LDA     0,,PR0
         1 000675   200007 471500                    LDP1    JDCB$,,AUTO
         1 000676   200020 236100                    LDQ     VPNO,,AUTO
         1 000677   000033 736000                    QLS     27
         1 000700   100115 676105                    ERQ     77,AL,PR1
         1 000701   037000 376003                    ANQ     15872,DU
         1 000702   100115 656105                    ERSQ    77,AL,PR1

     1022     4406    3             F$DCB.BFR1.SIZ(BUFNUM)=1;

   4406  1 000703   000000 235100                    LDA     0,,PR0
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:214  
         1 000704   100122 236105                    LDQ     82,AL,PR1
         1 000705   000001 376000 2                  ANQ     1
         1 000706   000001 276003                    ORQ     1,DU
         1 000707   100122 756105                    STQ     82,AL,PR1

     1023     4407    3             END;  /* NORMAL */

   4407  1 000710   001004 710000 1                  TRA     s:4429

     1024     4408    2          ELSE
     1025     4409    3             DO;   /* MAKE AN UNCACHED COPY */

     1026     4410                  %UNLOCK(G=FMC_LOCK);

   4411  1 000711   000000 630400 2                  EPPR0   0
         1 000712   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000713   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000714   000000 011000                    NOP     0

     1027     4413    3             CALL FMD$FLSHBUFNR(BUFNUM);

   4413  1 000715   200004 630500                    EPPR0   @BUFNUM,,AUTO
         1 000716   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000717   000000 701000 xent               TSX1    FMD$FLSHBUFNR
         1 000720   000000 011000                    NOP     0

     1028     4414    3             CALL FMD$GETBUF(BUFNUM, 1, BUF$);

   4414  1 000721   200003 236100                    LDQ     @BUF$,,AUTO
         1 000722   200034 756100                    STQ     @ERR+3,,AUTO
         1 000723   000011 236000 2                  LDQ     9
         1 000724   200004 235100                    LDA     @BUFNUM,,AUTO
         1 000725   200032 757100                    STAQ    @ERR+1,,AUTO
         1 000726   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000727   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000730   000000 701000 xent               TSX1    FMD$GETBUF
         1 000731   000000 011000                    NOP     0
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:215  

     1029     4415                  %LOCK(G=FMC_LOCK);

   4416  1 000732   000000 630400 2                  EPPR0   0
         1 000733   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000734   000000 701000 xent               TSX1    HFC$LOCK
         1 000735   000000 011000                    NOP     0

     1030     4418    3             B$LS$->B$MLNK.MISC=DESCINIT;

   4418  1 000736   000000 235000 0                  LDA     DESCINIT
         1 000737   000000 236003                    LDQ     0,DU
         1 000740   000000 470400 xsym               LDP0    B$LS$
         1 000741   000130 757100                    STAQ    88,,PR0

     1031     4419    3             B$LS$->B$MLNK.MISC.BASE=FMC$CACHE.PAGE*4096;

   4419  1 000742   200015 471500                    LDP1    CACHE$,,AUTO
         1 000743   100002 236100                    LDQ     2,,PR1
         1 000744   000006 772000                    QRL     6
         1 000745   000020 376000 2                  ANQ     16
         1 000746   000131 756100                    STQ     89,,PR0

     1032     4420    3             BUF$->BUFFER=B$MISC$->BUFFER;

   4420  1 000747   200003 473500                    LDP3    @BUF$,,AUTO
         1 000750   300000 474500                    LDP4    0,,PR3
         1 000751   000000 475400 xsym               LDP5    B$MISC$
         1 000752   010000 220003                    LDX0    4096,DU
         1 000753   040140 100540                    MLR     fill='040'O
         1 000754   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0
         1 000755   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0

     1033     4421    3             FMC$CACHE.USECNT=FMC$CACHE.USECNT-1;

   4421  1 000756   200015 470500                    LDP0    CACHE$,,AUTO
         1 000757   000002 721100                    LXL1    2,,PR0
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:216  
         1 000760   777777 622011                    EAX2    -1,X1
         1 000761   000002 442100                    SXL2    2,,PR0

     1034     4422    3             IF FMC$CACHE.USECNT = 0 THEN

   4422  1 000762   200015 470500                    LDP0    CACHE$,,AUTO
         1 000763   000002 721100                    LXL1    2,,PR0
         1 000764   000773 601000 1                  TNZ     s:4424

     1035     4423    3                CALL FMC$ADD(HASH);

   4423  1 000765   200012 631500                    EPPR1   HASH,,AUTO
         1 000766   200032 451500                    STP1    @ERR+1,,AUTO
         1 000767   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 000770   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000771   000000 701000 xent               TSX1    FMC$ADD
         1 000772   000000 011000                    NOP     0

     1036     4424    3             F$DCB.BFR.CVM(BUFNUM)='0'B;

   4424  1 000773   200004 470500                    LDP0    @BUFNUM,,AUTO
         1 000774   000000 235100                    LDA     0,,PR0
         1 000775   200007 471500                    LDP1    JDCB$,,AUTO
         1 000776   000021 236000 2                  LDQ     17
         1 000777   100115 356105                    ANSQ    77,AL,PR1

     1037     4425                  %UNLOCK(G=FMC_LOCK);

   4426  1 001000   000000 630400 2                  EPPR0   0
         1 001001   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001002   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001003   000000 011000                    NOP     0

     1038     4428    3             END;  /* MAKE AN UNCACHED COPY */

     1039     4429    2          B$JIT.ACCESS.PACKS=B$JIT.ACCESS.PACKS+1;

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:217  
   4429  1 001004   000000 470400 xsym               LDP0    B$JIT$
         1 001005   000327 054100                    AOS     215,,PR0

     1040     4430    2          FLAG=1;

   4430  1 001006   000001 235007                    LDA     1,DL
         1 001007   200031 471500                    LDP1    @FLAG,,AUTO
         1 001010   100000 755100                    STA     0,,PR1

     1041     4431
     1042     4432    2          RETURN;

   4432  1 001011   200030 221300                    LDX1  ! NOCACHE+1,,AUTO
         1 001012   000001 702211                    TSX2  ! 1,X1

     1043     4433    2          END CHECK_CACHE;
     1044     4434               %EJECT;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:218  
     1045     4435    1   LOGERR: PROC(ERR) ALTRET;

   4435  1 001013   200030 741300       LOGERR       STX1  ! NOCACHE+1,,AUTO

     1046     4436    2          DCL ERR SBIN;
     1047     4437        /* */
     1048     4438    2          FMC$CACHE.FLAGS.ERR='1'B;

   4438  1 001014   200015 470500                    LDP0    CACHE$,,AUTO
         1 001015   000002 236007                    LDQ     2,DL
         1 001016   000004 256100                    ORSQ    4,,PR0

     1049     4439    2          CALL FMB$ERRTYP(CODE);

   4439  1 001017   200025 630500                    EPPR0   CODE,,AUTO
         1 001020   200032 450500                    STP0    @ERR+1,,AUTO
         1 001021   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 001022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001023   000000 701000 xent               TSX1    FMB$ERRTYP
         1 001024   000000 011000                    NOP     0

     1050     4440    2          IF ERR = 2 THEN

   4440  1 001025   200031 470500                    LDP0    @ERR,,AUTO
         1 001026   000000 235100                    LDA     0,,PR0
         1 001027   000002 115007                    CMPA    2,DL
         1 001030   001035 601000 1                  TNZ     s:4443

     1051     4441    2             MISC=BITBIN(N$REQ.TYC);

   4441  1 001031   200024 471500                    LDP1    Q$,,AUTO
         1 001032   100021 235100                    LDA     17,,PR1
         1 001033   200026 755100                    STA     MISC,,AUTO
         1 001034   001050 710000 1                  TRA     s:4448

     1052     4442    2          ELSE
     1053     4443    2             IF F$DCB.CFU$ = ADDR(NIL) THEN
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:219  

   4443  1 001035   200007 471500                    LDP1    JDCB$,,AUTO
         1 001036   100066 236100                    LDQ     54,,PR1
         1 001037   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001040   001044 601000 1                  TNZ     s:4446

     1054     4444    2                MISC=-1;

   4444  1 001041   000001 335007                    LCA     1,DL
         1 001042   200026 755100                    STA     MISC,,AUTO
         1 001043   001050 710000 1                  TRA     s:4448

     1055     4445    2             ELSE
     1056     4446    2                MISC=F$DCB.CFU$->FM$CFU.UGRANS;

   4446  1 001044   100066 473500                    LDP3    54,,PR1
         1 001045   300004 236100                    LDQ     4,,PR3
         1 001046   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001047   200026 756100                    STQ     MISC,,AUTO

     1057     4447
     1058     4448    2          CALL FMB$LOGERR(CODE, ERR, 8, SRDA, BUF$, 0, 1, 2, MISC,,Q$);

   4448  1 001050   200024 631500                    EPPR1   Q$,,AUTO
         1 001051   200044 451500                    STP1    @ERR+11,,AUTO
         1 001052   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001053   200043 756100                    STQ     @ERR+10,,AUTO
         1 001054   200026 633500                    EPPR3   MISC,,AUTO
         1 001055   200042 453500                    STP3    @ERR+9,,AUTO
         1 001056   000024 237000 2                  LDAQ    20
         1 001057   200040 757100                    STAQ    @ERR+7,,AUTO
         1 001060   000004 236000 2                  LDQ     4
         1 001061   200003 235100                    LDA     @BUF$,,AUTO
         1 001062   200036 757100                    STAQ    @ERR+5,,AUTO
         1 001063   200010 634500                    EPPR4   SRDA,,AUTO
         1 001064   200035 454500                    STP4    @ERR+4,,AUTO
         1 001065   000023 236000 2                  LDQ     19
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:220  
         1 001066   200034 756100                    STQ     @ERR+3,,AUTO
         1 001067   200031 236100                    LDQ     @ERR,,AUTO
         1 001070   200033 756100                    STQ     @ERR+2,,AUTO
         1 001071   200025 635500                    EPPR5   CODE,,AUTO
         1 001072   200032 455500                    STP5    @ERR+1,,AUTO
         1 001073   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 001074   000022 631400 2                  EPPR1   18
         1 001075   000000 701000 xent               TSX1    FMB$LOGERR
         1 001076   000000 011000                    NOP     0

     1059     4449
     1060     4450    2          IF Q$ ~= ADDR(NIL) THEN

   4450  1 001077   200024 236100                    LDQ     Q$,,AUTO
         1 001100   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001101   001112 600000 1                  TZE     s:4455

     1061     4451    3             DO;

     1062     4452    3             CALL NIQ$REL(Q$);

   4452  1 001102   200024 630500                    EPPR0   Q$,,AUTO
         1 001103   200032 450500                    STP0    @ERR+1,,AUTO
         1 001104   200032 630500                    EPPR0   @ERR+1,,AUTO
         1 001105   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001106   000000 701000 xent               TSX1    NIQ$REL
         1 001107   000000 011000                    NOP     0

     1063     4453    3             Q$=ADDR(NIL);

   4453  1 001110   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001111   200024 756100                    STQ     Q$,,AUTO

     1064     4454    3             END;

     1065     4455    2          IF CODE ~= %E$DI AND ERR = 2 THEN

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:221  
   4455  1 001112   200025 235100                    LDA     CODE,,AUTO
         1 001113   000011 115007                    CMPA    9,DL
         1 001114   001123 600000 1                  TZE     s:4457
         1 001115   200031 470500                    LDP0    @ERR,,AUTO
         1 001116   000000 235100                    LDA     0,,PR0
         1 001117   000002 115007                    CMPA    2,DL
         1 001120   001123 601000 1                  TNZ     s:4457

     1066     4456    2             CODE=CODE-%E$MI+%E$MIIO;

   4456  1 001121   000007 236007                    LDQ     7,DL
         1 001122   200025 056100                    ASQ     CODE,,AUTO

     1067     4457    2          B$JIT.ERR=ERRWD;

   4457  1 001123   000006 236000 0                  LDQ     ERRWD
         1 001124   000000 470400 xsym               LDP0    B$JIT$
         1 001125   000012 756100                    STQ     10,,PR0

     1068     4458    2          B$JIT.ERR.CODE=CODE;

   4458  1 001126   200025 236100                    LDQ     CODE,,AUTO
         1 001127   000003 736000                    QLS     3
         1 001130   000012 676100                    ERQ     10,,PR0
         1 001131   377770 376007                    ANQ     131064,DL
         1 001132   000012 656100                    ERSQ    10,,PR0

     1069     4459    2          F$DCB.BFR.DA(BUFNUM)=SRDA;

   4459  1 001133   200004 471500                    LDP1    @BUFNUM,,AUTO
         1 001134   100000 235100                    LDA     0,,PR1
         1 001135   200007 473500                    LDP3    JDCB$,,AUTO
         1 001136   200010 236100                    LDQ     SRDA,,AUTO
         1 001137   300115 676105                    ERQ     77,AL,PR3
         1 001140   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001141   300115 656105                    ERSQ    77,AL,PR3

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:222  
     1070     4460    2          CALL FMC$RELCACHE(BUFNUM);

   4460  1 001142   200004 630500                    EPPR0   @BUFNUM,,AUTO
         1 001143   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001144   000000 701000 xent               TSX1    FMC$RELCACHE
         1 001145   000000 011000                    NOP     0

     1071     4461
     1072     4462    2          ALTRETURN;

   4462  1 001146   200030 221300                    LDX1  ! NOCACHE+1,,AUTO
         1 001147   000000 702211                    TSX2  ! 0,X1

DESCINIT
 Sect OctLoc
   0     000   001777 760002                                                    ....

ZAPBUF
 Sect OctLoc
   0     001   111111 111111   222222 222222   333333 333333   444444 444444    IIII............
   0     005   555555 555555                                                    ....

ERRWD
 Sect OctLoc
   0     006   061504 000002                                                    1...

(unnamed)
 Sect OctLoc
   2     000   000000 006000   777000 777777   000011 000000   000000 010000    ................
   2     004   000002 006000   000002 006000   000004 006000   000027 006000    ................
   2     010   000003 006000   000003 006000   777777 777767   000000 000046    ...............&
   2     014   000004 400000   000013 006000   000000 000045   000016 006000    ...........%....
   2     020   007777 770000   737777 777777   000013 000000   000012 006000    ................
   2     024   000003 006000   000004 006000                                    ........
     1073     4463    2          END LOGERR;
     1074     4464    1          END FMC$GET;
     1075     4465               %EOD;
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:223  

PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:224  
--  Include file information  --

   B_MLSMAC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   FM_BUF_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$GET.
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:225  

 **** Variables and constants ****

  ****  Section 000 RoData FMC$GET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 DESCINIT                   6-0-0/b STRC        r     1 ERRWD
     1-0-0/b BIT         r     1 ZAPBUF(0:4)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUF$                      4-0-0/w PTR         r     1 @BUFNUM
     5-0-0/w PTR         r     1 @DA                       31-0-0/w PTR         r     1 @ERR
     6-0-0/w PTR         r     1 @FLAG                     31-0-0/w PTR         r     1 @FLAG
    *0-0-0/w PTR         r     1 BUF$                      *0-0-0/w SBIN        r     1 BUFNUM
    15-0-0/w PTR         r     1 CACHE$                    25-0-0/w SBIN        r     1 CODE
    *0-0-0/w SBIN        r     1 DA                        *0-0-0/w SBIN        r     1 ERR
    *0-0-0/w SBIN        r     1 FLAG                      *0-0-0/w SBIN        r     1 FLAG
    11-0-0/w SBIN        r     1 GRANS                     12-0-0/w SBIN        r     1 HASH
    13-0-0/w SBIN        r     1 I                          7-0-0/w PTR         r     1 JDCB$
    26-0-0/w SBIN        r     1 MISC                      17-0-0/w SBIN        r     1 NEWPP
    27-0-0/w SBIN        r     1 NOCACHE                   22-0-0/w SBIN        r     1 PP
    24-0-0/w PTR         r     1 Q$                        21-0-0/w SBIN        r     1 SETX
    10-0-0/w SBIN        r     1 SRDA                      16-0-0/w SBIN        r     1 TYPE
    23-0-0/c UBIN(9)     r     1 USER                      20-0-0/w SBIN        r     1 VPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$LS$
     0-0-0/w PTR         r     1 B$MISC$                    0-0-0/w PTR         r     1 FM$BUF$(0:31)
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:226  
     0-0-0/w PTR         r     1 FMC_CACHE$                 0-0-0/w PTR         r     1 FMC_CACHEPGCNT$
     0-0-0/w SBIN        r     1 FMC_CACHESIZ               0-0-0/b BIT (72)    r     1 FMC_LOCK
     0-0-0/b BIT         r     1 FMC_MASK                   0-0-0/w PTR         r     1 FMC_STATS$
     0-0-0/w UBIN        r     1 FM_SRZERO                  0-0-0/w PTR         r     1 P_RESOURCE$
     0-0-0/w UBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(10368) r     1 B$MLNK
     0-0-0/c CHAR(4096)  r     1 BUFFER                     0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFU                     0-0-0/w STRC(180)   r     1 FM$GRAN
     0-0-0/w STRC(216)   r     1 FMC$CACHE
     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(2376)  r     1 FMC$STATS                  0-0-0/d STRC(1080)  r     1 N$REQ
     0-0-0/w STRC(2268)  r     1 P_RESOURCE


   Procedure FMC$GET requires 616 words for executable code.
   Procedure FMC$GET requires 38 words of local(AUTO) storage.
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:227  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:228  
          MINI XREF LISTING

B$JIT.ACCESS.PACKS
      1714**DCL      4429<<ASSIGN   4429>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      1540**DCL      1540--REDEF
B$JIT.DCB$
      1614**DCL      4215>>ASSIGN
B$JIT.ERR
      1446**DCL      4457<<ASSIGN
B$JIT.ERR.CODE
      1447**DCL      4458<<ASSIGN
B$JIT.ERR.MID
      1447**DCL      1447--REDEF
B$JIT.JRESPEAK
      1608**DCL      1609--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      1717**DCL      1717--REDEF    1718--REDEF
B$JIT.PNR
      1621**DCL      1621--REDEF
B$JIT.TSLINE
      1715**DCL      1716--REDEF
B$JIT$
      3182**DCL      1441--IMP-PTR  4215>>ASSIGN   4429>>ASSIGN   4429>>ASSIGN   4457>>ASSIGN   4458>>ASSIGN
B$LS$
      3184**DCL      4418>>ASSIGN   4419>>ASSIGN
B$MISC$
      3185**DCL      4420>>ASSIGN
B$MLNK.MISC
      3699**DCL      4418<<ASSIGN
B$MLNK.MISC.BASE
      3704**DCL      4419<<ASSIGN
BUF$
        31**DCL        30--PROC     3316--IMP-PTR  4205--ENTRY    4261<<ASSIGN   4262>>ASSIGN   4264<>CALL
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:229  
      4414<>CALL     4420>>ASSIGN   4448<>CALL
BUFFER
      3187**DCL      4420<<ASSIGN   4420>>ASSIGN
BUFNUM
        32**DCL        30--PROC     4205--ENTRY    4253<>CALL     4257>>ASSIGN   4258>>ASSIGN   4259>>ASSIGN
      4260>>ASSIGN   4261>>ASSIGN   4389<>CALL     4390>>ASSIGN   4391<>CALL     4401<>CALL     4402>>ASSIGN
      4405>>ASSIGN   4406>>ASSIGN   4413<>CALL     4414<>CALL     4424>>ASSIGN   4459>>ASSIGN   4460<>CALL
CACHE$
      3195**DCL      3237--IMP-PTR  4236<>CALL     4238>>ASSIGN   4239>>ASSIGN   4240>>ASSIGN   4241>>ASSIGN
      4242>>ASSIGN   4255>>ASSIGN   4274>>ASSIGN   4276>>IF       4278>>CALL     4291>>IF       4292>>CALL
      4349<<ASSIGN   4351>>IF       4357>>ASSIGN   4361>>IF       4369>>ASSIGN   4369>>ASSIGN   4371>>IF
      4373>>ASSIGN   4376>>ASSIGN   4377>>ASSIGN   4383>>IF       4383>>IF       4403>>ASSIGN   4419>>ASSIGN
      4421>>ASSIGN   4421>>ASSIGN   4422>>IF       4438>>ASSIGN
CHECK_CACHE
      4323**PROC     4228--CALL
CODE
      3203**DCL      4439<>CALL     4448<>CALL     4455>>IF       4456<<ASSIGN   4456>>ASSIGN   4458>>ASSIGN
COMMON
      4206**LABEL    4204--GOTO
DA
        33**DCL        30--PROC     4205--ENTRY    4216>>IF       4217<>CALL     4219>>ASSIGN
DAERR
      4287**LABEL    4217--CALLALT
DESCINIT
      3173**DCL      4418>>ASSIGN
ERR
      4290**LABEL    4267--CALLALT
ERR IN PROCEDURE LOGERR
      4436**DCL      4435--PROC     4440>>IF       4448<>CALL     4455>>IF
ERR1
      4289**LABEL    4264--CALLALT
ERRWD
      3378**DCL      4457>>ASSIGN
F$DCB.ACTPOS
      3291**DCL      3291--REDEF
F$DCB.ARS
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:230  
      3266**DCL      3266--REDEF
F$DCB.ATTR
      3284**DCL      3285--REDEF
F$DCB.BFR.BUFX
      3311**DCL      4257<<ASSIGN   4261>>ASSIGN   4405<<ASSIGN
F$DCB.BFR.CVM
      3311**DCL      4424<<ASSIGN
F$DCB.BFR.DA
      3311**DCL      4260<<ASSIGN   4459<<ASSIGN
F$DCB.BFR1.CX
      3312**DCL      4259<<ASSIGN   4390<<ASSIGN   4402<<ASSIGN
F$DCB.BFR1.SIZ
      3311**DCL      4258<<ASSIGN   4406<<ASSIGN
F$DCB.BORROW
      3299**DCL      3299--REDEF    3299--REDEF    3299--REDEF
F$DCB.CFU$
      3300**DCL      4443>>IF       4446>>ASSIGN
F$DCB.DCBNAME.L
      3313**DCL      3313--IMP-SIZ
F$DCB.EOMCHAR
      3270**DCL      3270--REDEF
F$DCB.FLDID
      3294**DCL      3294--REDEF
F$DCB.FORM$
      3288**DCL      3288--REDEF
F$DCB.FSECT
      3304**DCL      3304--REDEF
F$DCB.FSN
      3281**DCL      3281--REDEF    3281--REDEF    3282--REDEF
F$DCB.HEADER$
      3287**DCL      3287--REDEF
F$DCB.IXTNSIZE
      3285**DCL      3285--REDEF
F$DCB.LASTSTA$
      3275**DCL      3275--REDEF
F$DCB.LVL
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:231  
      3300**DCL      3300--REDEF
F$DCB.NAME.C
      3275**DCL      3275--REDEF
F$DCB.NOEOF
      3296**DCL      3296--REDEF
F$DCB.NRECS
      3286**DCL      3286--REDEF
F$DCB.NRECX
      3305**DCL      3305--REDEF
F$DCB.OHDR
      3297**DCL      3297--REDEF
F$DCB.ORG
      3280**DCL      3280--REDEF
F$DCB.PRECNO
      3303**DCL      3303--REDEF
F$DCB.RCSZ
      3308**DCL      3308--REDEF
F$DCB.RES
      3276**DCL      3276--REDEF
F$DCB.SETX
      3288**DCL      3288--REDEF    4220>>ASSIGN   4241>>ASSIGN
F$DCB.TAB$
      3287**DCL      3288--REDEF
F$DCB.TDA
      3302**DCL      3302--REDEF
F$DCB.WSN
      3277**DCL      3277--REDEF
FAF$FRTOSR
      3166**DCL-ENT  4217--CALL
FLAG
        34**DCL        30--PROC     4205--ENTRY    4211<<ASSIGN   4228<>CALL     4230>>IF       4284<<ASSIGN
      4287<<ASSIGN   4290<<ASSIGN   4294<<ASSIGN
FLAG IN PROCEDURE CHECK_CACHE
      4324**DCL      4323--PROC     4344<<ASSIGN   4388<<ASSIGN   4430<<ASSIGN
FM$BUF$
       145**DCL      4261>>ASSIGN
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:232  
FM$CFU.ACCTX
      3383**DCL      3383--REDEF
FM$CFU.UGRANS
      3384**DCL      4446>>ASSIGN
FM$GRAN
      3316**DCL      4262<<ASSIGN
FMB$ERRTYP
      3164**DCL-ENT  4439--CALL
FMB$LOGERR
      3165**DCL-ENT  4448--CALL
FMB$QUEUE
      3163**DCL-ENT  4264--CALL
FMC$ADD
      3169**DCL-ENT  4423--CALL
FMC$CACHE.FLAGS.ERR
      3252**DCL      4383>>IF       4438<<ASSIGN
FMC$CACHE.FLAGS.IO
      3250**DCL      4238<<ASSIGN   4274<<ASSIGN   4371>>IF       4383>>IF
FMC$CACHE.FLAGS.WAIT
      3251**DCL      4276>>IF       4291>>IF       4377<<ASSIGN
FMC$CACHE.PAGE
      3243**DCL      4255<<ASSIGN   4403>>ASSIGN   4419>>ASSIGN
FMC$CACHE.SETX
      3246**DCL      4241<<ASSIGN
FMC$CACHE.SRDA
      3240**DCL      4239<<ASSIGN
FMC$CACHE.TYPE
      3239**DCL      4242<<ASSIGN   4351>>IF       4357>>ASSIGN
FMC$CACHE.USECNT
      3244**DCL      4240<<ASSIGN   4361>>IF       4369<<ASSIGN   4369>>ASSIGN   4421<<ASSIGN   4421>>ASSIGN
      4422>>IF
FMC$CACHE.USER
      3247**DCL      4278<>CALL     4292<>CALL     4373>>ASSIGN   4376<<ASSIGN
FMC$CACHETBL
      3212**DCL      4349--ASSIGN
FMC$CACHETBL.FLAGS.ERR
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:233  
      3229**DCL      4330>>DOWHILE  4337>>IF
FMC$CACHETBL.SETX
      3223**DCL      4330>>DOWHILE  4337>>IF
FMC$CACHETBL.SRDA
      3217**DCL      4330>>DOWHILE  4337>>IF
FMC$GETSLOT
      3168**DCL-ENT  4236--CALL
FMC$GETTYPE
      3167**DCL-ENT  4221--CALL
FMC$RELCACHE
      3171**DCL-ENT  4391--CALL     4460--CALL
FMC$REMOVE
      3170**DCL-ENT  4364--CALL
FMC$STATS.ATTGET
      3261**DCL      4222<<ASSIGN   4222>>ASSIGN   4356<<ASSIGN   4356>>ASSIGN   4358<<ASSIGN   4358>>ASSIGN
FMC$STATS.HITNONZERO
      3259**DCL      4367<<ASSIGN   4367>>ASSIGN
FMC$STATS.HITZERO
      3258**DCL      4363<<ASSIGN   4363>>ASSIGN
FMC_CACHE$
        44**DCL      3212--IMP-PTR  4330>>DOWHILE  4330>>DOWHILE  4330>>DOWHILE  4337>>IF       4337>>IF
      4337>>IF       4349>>ASSIGN
FMC_CACHEPGCNT$
        45**DCL        45--IMP-PTR    45--REDEF
FMC_CACHESIZ
        44**DCL      4209>>IF
FMC_LOCK
        46**DCL      4234<>CALL     4250<>CALL     4272<>CALL     4282<>CALL     4296<>CALL     4327<>CALL
      4342<>CALL     4379<>CALL     4381<>CALL     4386<>CALL     4399<>CALL     4411<>CALL     4416<>CALL
      4426<>CALL
FMC_MASK
        46**DCL      4225>>ASSIGN
FMC_STATS$
        44**DCL      3257--IMP-PTR  4222>>ASSIGN   4222>>ASSIGN   4356>>ASSIGN   4356>>ASSIGN   4358>>ASSIGN
      4358>>ASSIGN   4363>>ASSIGN   4363>>ASSIGN   4367>>ASSIGN   4367>>ASSIGN
FMD$FLSHBUF
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:234  
      3160**DCL-ENT  4253--CALL     4389--CALL     4401--CALL
FMD$FLSHBUFNR
      3161**DCL-ENT  4413--CALL
FMD$GETBUF
      3162**DCL-ENT  4414--CALL
FM_SRZERO
       131**DCL      4216>>IF
GRANS
      3191**DCL      4217<>CALL
HASH
      3192**DCL      4225<<ASSIGN   4236<>CALL     4259>>ASSIGN   4330>>DOWHILE  4330>>DOWHILE  4330>>DOWHILE
      4337>>IF       4337>>IF       4337>>IF       4348<<ASSIGN   4348>>ASSIGN   4349>>ASSIGN   4364<>CALL
      4390>>ASSIGN   4402>>ASSIGN   4423<>CALL
HFC$LOCK
       885**DCL-ENT  4234--CALL     4272--CALL     4327--CALL     4381--CALL     4416--CALL
HFC$UNLOCK
       885**DCL-ENT  4250--CALL     4282--CALL     4296--CALL     4342--CALL     4386--CALL     4399--CALL
      4411--CALL     4426--CALL
I
      3193**DCL      4329<<ASSIGN   4330>>DOWHILE  4330>>DOWHILE  4330>>DOWHILE  4330>>DOWHILE  4334<<ASSIGN
      4334>>ASSIGN   4337>>IF       4337>>IF       4337>>IF       4348>>ASSIGN
JDCB$
      3189**DCL      3266--IMP-PTR  4215<<ASSIGN   4220>>ASSIGN   4241>>ASSIGN   4257>>ASSIGN   4258>>ASSIGN
      4259>>ASSIGN   4260>>ASSIGN   4261>>ASSIGN   4390>>ASSIGN   4402>>ASSIGN   4405>>ASSIGN   4406>>ASSIGN
      4424>>ASSIGN   4443>>IF       4446>>ASSIGN   4459>>ASSIGN
LOGERR
      4435**PROC     4267--CALL     4289--CALL
MISC
      3204**DCL      4441<<ASSIGN   4444<<ASSIGN   4446<<ASSIGN   4448<>CALL
MMJ$GIOP
      3155**DCL-ENT  4254--CALL
MMJ$MAPIOP
      3157**DCL-ENT  4256--CALL     4404--CALL
N$REQ.BUFADDR
      3337**DCL      3338--REDEF    3338--REDEF
N$REQ.DLA.DRELADDR
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:235  
      3329**DCL      3329--REDEF
N$REQ.DVE.EOMCHAR
      3366**DCL      3367--REDEF
N$REQ.EAINFO
      3360**DCL      3360--REDEF
N$REQ.EAINFOX
      3360**DCL      3361--REDEF
N$REQ.EVNTINFO
      3361**DCL      3361--REDEF
N$REQ.STATUS
      3342**DCL      3348--REDEF
N$REQ.TYC
      3350**DCL      4266>>IF       4441>>ASSIGN
NEWPP
      3197**DCL      4403<<ASSIGN   4404<>CALL
NIQ$REL
      3159**DCL-ENT  4269--CALL     4452--CALL
NOCACHE
      4294**LABEL    4203<<ASSIGN   4206<<ASSIGN   4230>>IF       4236--CALLALT  4396>>IF
PP
      3200**DCL      4254<>CALL     4255>>ASSIGN   4256<>CALL
P_NSCPU
      2061**DCL      2062--REDEF
P_RESOURCE.RES
      1934**DCL      2001--REDEF
P_RESOURCE.RES.IOCACHE.CURRENT
      1963**DCL      4244<<ASSIGN   4244>>ASSIGN   4245>>IF       4247>>ASSIGN
P_RESOURCE.RES.IOCACHE.PEAK
      1964**DCL      4245>>IF       4247<<ASSIGN
P_RESOURCE$
      2014**DCL      1902--IMP-PTR  4244>>ASSIGN   4244>>ASSIGN   4245>>IF       4245>>IF       4247>>ASSIGN
      4247>>ASSIGN
P_UPTIME
      2050**DCL      2051--REDEF
Q$
      3202**DCL      3328--IMP-PTR  4263<<ASSIGN   4264<>CALL     4266>>IF       4268>>IF       4269<>CALL
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:236  
      4441>>ASSIGN   4448<>CALL     4450>>IF       4452<>CALL     4453<<ASSIGN
SETX
      3199**DCL      4220<<ASSIGN   4225>>ASSIGN   4330>>DOWHILE  4337>>IF
SRDA
      3190**DCL      4217<>CALL     4219<<ASSIGN   4225>>ASSIGN   4236<>CALL     4239>>ASSIGN   4264<>CALL
      4330>>DOWHILE  4337>>IF       4448<>CALL     4459>>ASSIGN
SSR$REG
      3153**DCL-ENT  4379--CALL
SSR$RUE
      3154**DCL-ENT  4278--CALL     4292--CALL
S_CUN
      3183**DCL      4376>>ASSIGN
TYPE
      3196**DCL      4221<>CALL     4222>>ASSIGN   4222>>ASSIGN   4236<>CALL     4242>>ASSIGN   4351>>IF
      4356>>ASSIGN   4356>>ASSIGN   4357<<ASSIGN   4358>>ASSIGN   4358>>ASSIGN   4363>>ASSIGN   4363>>ASSIGN
      4367>>ASSIGN   4367>>ASSIGN
USER
      3201**DCL      4373<<ASSIGN   4374>>IF       4379<>CALL
VPNO
      3198**DCL      4256<>CALL     4257>>ASSIGN   4404<>CALL     4405>>ASSIGN
ZAPBUF
      3178**DCL      4262>>ASSIGN
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:237  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:238  
              MINI UREF LISTING

F$CFU$     134**DCL
FM$SET$     135**DCL
FMC$CACHEPGCNT      45**DCL
FMC$GET      30**PROC
FMC$NOCACHE    4205**ENTRY
FMC_CACHEPGCNT      45**DCL
FMC_CACHEPGCNT$R      45**DCL
FMC_CACHESIZN      44**DCL
FMC_LIMITS     122**DCL
FMC_MASKTBL      46**DCL
FMC_TYPTBL$      44**DCL
FM_CFUWAIT     134**DCL
FM_CFUWGRB     134**DCL
FM_EOP     132**DCL
FM_FRMAX     131**DCL
FM_FRZERO     131**DCL
FM_GCT     135**DCL
FM_GIP     135**DCL
FM_GPSDA     132**DCL
FM_HASH     133**DCL
FM_MADSDA     132**DCL
FM_PADSDA     132**DCL
FM_SRMAX     131**DCL
FM_SYSACCTX     135**DCL
FM_SYSSETX     135**DCL
FM_TRUNC     133**DCL
FM_WRCMP     122**DCL
FM_WSQ     133**DCL
F_CWLK     134**DCL
F_CWUSER     134**DCL
F_DCBLOCK     133**DCL
MMJ$FBTOIOP    3156**DCL-ENT
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:239  
MMJ$UNMAPIOP    3158**DCL-ENT
N    3194**DCL
NI_IOLEAPERS     122**DCL
P$IODATA    2015**DCL
P$TABLE    2024**DCL
PH_CPU_MOUSED    2079**DCL
PH_JIT_ENTRY    2075**DCL
PH_MOUSE_ENTRY    2071**DCL
PH_MOUSE_LOCK    2078**DCL
PH_MOUSE_USERS    2068**DCL
PH_MOUSE_USER_NUMBER    2080**DCL
PH_MUS_PAGES    2070**DCL
P_AUIS    2056**DCL
P_AVAIL_MEM    2063**DCL
P_AVGAVAIL_MEM    2064**DCL
P_AVGETMF    2053**DCL
P_AVGIOL    2055**DCL
P_AVGRT90    2052**DCL
P_CALCNT    2040**DCL
P_CALCOMP    2041**DCL
P_DCTXMAX    2057**DCL
P_ETMF    2034**DCL
P_GATE    2060**DCL
P_IOLOAD    2054**DCL
P_IOS    2049**DCL
P_NINTS    2035**DCL
P_NOW    2059**DCL
P_NSCPU_SBIN    2062**DCL
P_RT90    2036**DCL
P_RUE#    2032**DCL
P_SCHD#    2033**DCL
P_STARTUP    2037**DCL
P_STOPTIME    2058**DCL
P_S_MIDLTIME    2045**DCL
P_S_MIDLWIO    2046**DCL
P_S_MIDLWRES    2047**DCL
PL6.E3A0      #006=FMC$GET File=FMC$CACHE.:E05TSI                                TUE 07/29/97 16:40 Page:240  
P_S_MIDLWRESIO    2048**DCL
P_S_MXEQTIME    2044**DCL
P_S_USRVTIME    2043**DCL
P_S_UXEQTIME    2042**DCL
P_UPTIME_SBIN    2051**DCL
P_USRVTIME    2039**DCL
P_UXEQTIME    2038**DCL
WORD_    2069**DCL

PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:241  
     1076        1        /*T***********************************************************/
     1077        2        /*T*                                                         */
     1078        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1079        4        /*T*                                                         */
     1080        5        /*T***********************************************************/
     1081        6        /*D*     NAME:     FMC$GETSLOT
     1082        7                 PURPOSE:  To try to find a free slot in the specified row.
     1083        8
     1084        9                 INPUT:    HASH - Row number we are looking at.
     1085       10                           TYPE - Granule type we are looking at
     1086       11                 OUTPUT:   CACHE$ - Pointer to the cache table entry we
     1087       12                                found
     1088       13
     1089       14                 DESCRIPTION:
     1090       15
     1091       16                      Loop until we find a cache table entry that unused, or
     1092       17                 we hit the end of the row.
     1093       18
     1094       19                      We can't free an entry that someone is currently using.
     1095       20                 So we try to free the entry that has a usecount of zero that
     1096       21                 is "most expired", or "closest to expiring".
     1097       22
     1098       23                      If we found an entry, then free the old entry if one
     1099       24                 exists, and return.
     1100       25
     1101       26                      Otherwise, we failed, altreturn.
     1102       27        */
     1103       28                 %EJECT;
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:242  
     1104       29        FMC$GETSLOT: PROC(HASH, TYPE, SRDA, CACHE$) ALTRET;
     1105       30    1          DCL HASH SBIN;
     1106       31    1          DCL TYPE SBIN;
     1107       32    1          DCL CACHE$ PTR;
     1108       33    1          DCL SRDA SBIN;
     1109       34        /* */
     1110       35               %INCLUDE FM_CACHE_R;
     1111       47               %INCLUDE FM_CACHE_C;
     1112      113               %INCLUDE FM_CNTRL_R;
     1113      122               %INCLUDE HF_LOCK_C;
     1114      136               %INCLUDE B$JIT;
     1115      739               %MACRO F$DCB(BASED=BASED);
     1116      740               %INCLUDE F$DCB;
     1117      789               %MEND;
     1118      790               %INCLUDE P_PMDAT_R;
     1119     1098        /* */
     1120     1099               %FMC$CACHE;
     1121     1122               %FMC$CACHE(FPTN=FMC$CACHE, ARRAY=NO, STCLASS="BASED(CACHE$)");
     1122     1145               %FMC$TYPTBL;
     1123     1150               %FMC$STATS;
     1124     1159               %F$DCB;
     1125     1209        /* */
     1126     1210    1          DCL SSS$SYSTIME ENTRY(1);
     1127     1211    1          DCL FMC$REMOVE ENTRY(1);
     1128     1212    1          DCL FMC$CLR1 ENTRY(1);
     1129     1213    1          DCL MMJ$FIOP ENTRY(1);
     1130     1214        /* */
     1131     1215    1          DCL B$JIT$ PTR SYMREF;
     1132     1216        /* */
     1133     1217    1          DCL CURTIME UBIN;
     1134     1218    1          DCL N SBIN;
     1135     1219    1          DCL I SBIN;
     1136     1220    1          DCL ETIME SBIN;
     1137     1221    1          DCL TEMPTIME SBIN;
     1138     1222    1          DCL PP SBIN;
     1139     1223        /* TEMPORARY FLAG */
     1140     1224    1          DCL FLAG STATIC SBIN INIT(0);
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:243  
     1141     1225        /* */
     1142     1226    1          FMC$STATS.ATTPUT(TYPE)=FMC$STATS.ATTPUT(TYPE)+1;
     1143     1227    1          CALL SSS$SYSTIME(CURTIME);
     1144     1228
     1145     1229    2   CLR:   DO I=0 TO 3;
     1146     1230    2             IF FMC$CACHETBL.SRDA(HASH+I) = SRDA AND
     1147     1231    2                FMC$CACHETBL.SETX(HASH+I) = B$JIT.DCB$->F$DCB.SETX THEN
     1148     1232    3                DO;   /* CLEAR ENTRY OUT */
     1149     1233                     %UNLOCK(G=FMC_LOCK);
     1150     1236    3                CALL FMC$CLR1(SRDA);
     1151     1237                     %LOCK(G=FMC_LOCK);
     1152     1240    3                EXIT CLR;
     1153     1241    3                END;  /* CLEAR ENTRY OUT */
     1154     1242    2          END;  /* DO I */
     1155     1243
     1156     1244    1          N=-1;
     1157     1245    2   SRCH:  DO I=0 TO 3;
     1158     1246    2             IF FMC$CACHETBL.SRDA(HASH+I) = 0 THEN
     1159     1247    3                DO;   /* USE FIRST EMPTY SLOT */
     1160     1248    3                N=I;
     1161     1249    3                EXIT SRCH;
     1162     1250    3                END;  /* USE FIRST EMPTY SLOT */
     1163     1251    2             ELSE
     1164     1252    2                IF FMC$CACHETBL.USECNT(HASH+I) = 0 AND
     1165     1253    2                   NOT FMC$CACHETBL.FLAGS.BUFUP(HASH+I) THEN
     1166     1254    3                   DO;   /* TRY TO USE THE SLOT */
     1167     1255    3                   TEMPTIME=CURTIME-FMC$CACHETBL.AGE(HASH+I)-
     1168     1256    3                            FMC_LIMITS.EXPIRE(FMC$CACHETBL.TYPE(HASH+I));
     1169     1257    3                   IF N < 0 OR (N >= 0 AND TEMPTIME > ETIME) THEN
     1170     1258    4                      DO;   /* BEST GUESS */
     1171     1259    4                      N=I;
     1172     1260    4                      ETIME=TEMPTIME;
     1173     1261    4                      END;  /* BEST GUESS */
     1174     1262    3                   END;  /* TRY TO USE THE SLOT */
     1175     1263    2          END;  /* DO I */
     1176     1264
     1177     1265    1          IF N >= 0 THEN
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:244  
     1178     1266    2             DO;   /* WE HAVE A WINNER */
     1179     1267    2             HASH=HASH+N;
     1180     1268    2             CACHE$=ADDR(FMC$CACHETBL(HASH));
     1181     1269    2             IF FMC$CACHE.SRDA > 0 THEN
     1182     1270    3                DO;   /* GET RID OF OLD ENTRY */
     1183     1271    3                CALL FMC$REMOVE(HASH);
     1184     1272    3                PP=FMC$CACHE.PAGE;
     1185     1273    3                CALL MMJ$FIOP(PP);
     1186     1274    3                FMC$CACHETBL(HASH)='0'B;
     1187     1275                     %DEC_COUNTER(ITEM=IOCACHE);
     1188     1281    3                END;  /* GET RID OF OLD ENTRY */
     1189     1282    2             RETURN;
     1190     1283    2             END;  /* WE HAVE A WINNER */
     1191     1284
     1192     1285    1          FMC$STATS.FAILED(TYPE)=FMC$STATS.FAILED(TYPE)+1;
     1193     1286    1          ALTRETURN;
     1194     1287    1          END FMC$GETSLOT;
     1195     1288               %EOD;

PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:245  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$GETSLOT.

   Procedure FMC$GETSLOT requires 152 words for executable code.
   Procedure FMC$GETSLOT requires 16 words of local(AUTO) storage.

PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:246  

 Object Unit name= FMC$GETSLOT                                File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:41:09.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     1      1  FMC$GETSLOT
    1   Proc  even  none   152    230  FMC$GETSLOT
    2  RoData even  none     1      1  FMC$GETSLOT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        4  FMC$GETSLOT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 SSS$SYSTIME
         yes           Std       1 HFC$UNLOCK
         yes           Std       1 FMC$CLR1
         yes           Std       1 HFC$LOCK
         yes           Std       1 FMC$REMOVE
         yes           Std       1 MMJ$FIOP
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:247  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHE$                            FMC_TYPTBL$                           FMC_STATS$
     FMC_CACHEPGCNT$                       FMC_LOCK                              FMC_LIMITS
     P_RESOURCE$                           P_UPTIME                              P_NSCPU
     B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:248  


     1076        1        /*T***********************************************************/
     1077        2        /*T*                                                         */
     1078        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1079        4        /*T*                                                         */
     1080        5        /*T***********************************************************/
     1081        6        /*D*     NAME:     FMC$GETSLOT
     1082        7                 PURPOSE:  To try to find a free slot in the specified row.
     1083        8
     1084        9                 INPUT:    HASH - Row number we are looking at.
     1085       10                           TYPE - Granule type we are looking at
     1086       11                 OUTPUT:   CACHE$ - Pointer to the cache table entry we
     1087       12                                found
     1088       13
     1089       14                 DESCRIPTION:
     1090       15
     1091       16                      Loop until we find a cache table entry that unused, or
     1092       17                 we hit the end of the row.
     1093       18
     1094       19                      We can't free an entry that someone is currently using.
     1095       20                 So we try to free the entry that has a usecount of zero that
     1096       21                 is "most expired", or "closest to expiring".
     1097       22
     1098       23                      If we found an entry, then free the old entry if one
     1099       24                 exists, and return.
     1100       25
     1101       26                      Otherwise, we failed, altreturn.
     1102       27        */
     1103       28                 %EJECT;
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:249  
     1104       29        FMC$GETSLOT: PROC(HASH, TYPE, SRDA, CACHE$) ALTRET;

     29  1 000000   000000 700200 xent  FMC$GETSLOT  TSX0  ! X66_AUTO_4
         1 000001   000020 000004                    ZERO    16,4

     1105       30    1          DCL HASH SBIN;
     1106       31    1          DCL TYPE SBIN;
     1107       32    1          DCL CACHE$ PTR;
     1108       33    1          DCL SRDA SBIN;
     1109       34        /* */
     1110       35               %INCLUDE FM_CACHE_R;
     1111       47               %INCLUDE FM_CACHE_C;
     1112      113               %INCLUDE FM_CNTRL_R;
     1113      122               %INCLUDE HF_LOCK_C;
     1114      136               %INCLUDE B$JIT;
     1115      739               %MACRO F$DCB(BASED=BASED);
     1116      740               %INCLUDE F$DCB;
     1117      789               %MEND;
     1118      790               %INCLUDE P_PMDAT_R;
     1119     1098        /* */
     1120     1099               %FMC$CACHE;
     1121     1122               %FMC$CACHE(FPTN=FMC$CACHE, ARRAY=NO, STCLASS="BASED(CACHE$)");
     1122     1145               %FMC$TYPTBL;
     1123     1150               %FMC$STATS;
     1124     1159               %F$DCB;
     1125     1209        /* */
     1126     1210    1          DCL SSS$SYSTIME ENTRY(1);
     1127     1211    1          DCL FMC$REMOVE ENTRY(1);
     1128     1212    1          DCL FMC$CLR1 ENTRY(1);
     1129     1213    1          DCL MMJ$FIOP ENTRY(1);
     1130     1214        /* */
     1131     1215    1          DCL B$JIT$ PTR SYMREF;
     1132     1216        /* */
     1133     1217    1          DCL CURTIME UBIN;
     1134     1218    1          DCL N SBIN;
     1135     1219    1          DCL I SBIN;
     1136     1220    1          DCL ETIME SBIN;
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:250  
     1137     1221    1          DCL TEMPTIME SBIN;
     1138     1222    1          DCL PP SBIN;
     1139     1223        /* TEMPORARY FLAG */
     1140     1224    1          DCL FLAG STATIC SBIN INIT(0);
     1141     1225        /* */
     1142     1226    1          FMC$STATS.ATTPUT(TYPE)=FMC$STATS.ATTPUT(TYPE)+1;

   1226  1 000002   200004 470500                    LDP0    @TYPE,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
         1 000004   000000 471400 xsym               LDP1    FMC_STATS$
         1 000005   100054 054105                    AOS     44,AL,PR1

     1143     1227    1          CALL SSS$SYSTIME(CURTIME);

   1227  1 000006   200007 631500                    EPPR1   CURTIME,,AUTO
         1 000007   200016 451500                    STP1    PP+2,,AUTO
         1 000010   200016 630500                    EPPR0   PP+2,,AUTO
         1 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000012   000000 701000 xent               TSX1    SSS$SYSTIME
         1 000013   000000 011000                    NOP     0

     1144     1228
     1145     1229    2   CLR:   DO I=0 TO 3;

   1229  1 000014   200011 450100       CLR          STZ     I,,AUTO

     1146     1230    2             IF FMC$CACHETBL.SRDA(HASH+I) = SRDA AND

   1230  1 000015   200003 470500                    LDP0    @HASH,,AUTO
         1 000016   000000 236100                    LDQ     0,,PR0
         1 000017   200011 036100                    ADLQ    I,,AUTO
         1 000020   200005 471500                    LDP1    @SRDA,,AUTO
         1 000021   000006 402007                    MPY     6,DL
         1 000022   000000 473400 xsym               LDP3    FMC_CACHE$
         1 000023   300000 236106                    LDQ     0,QL,PR3
         1 000024   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000025   100000 116100                    CMPQ    0,,PR1
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:251  
         1 000026   000054 601000 1                  TNZ     s:1242
         1 000027   000000 236100                    LDQ     0,,PR0
         1 000030   200011 036100                    ADLQ    I,,AUTO
         1 000031   000000 474400 xsym               LDP4    B$JIT$
         1 000032   400232 475500                    LDP5    154,,PR4
         1 000033   500051 720100                    LXL0    41,,PR5
         1 000034   000006 402007                    MPY     6,DL
         1 000035   300004 100106                    CMPX0   4,QL,PR3
         1 000036   000054 601000 1                  TNZ     s:1242

     1147     1231    2                FMC$CACHETBL.SETX(HASH+I) = B$JIT.DCB$->F$DCB.SETX THEN
     1148     1232    3                DO;   /* CLEAR ENTRY OUT */

     1149     1233                     %UNLOCK(G=FMC_LOCK);

   1234  1 000037   000000 630400 2                  EPPR0   0
         1 000040   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000041   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000042   000000 011000                    NOP     0

     1150     1236    3                CALL FMC$CLR1(SRDA);

   1236  1 000043   200005 630500                    EPPR0   @SRDA,,AUTO
         1 000044   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000045   000000 701000 xent               TSX1    FMC$CLR1
         1 000046   000000 011000                    NOP     0

     1151     1237                     %LOCK(G=FMC_LOCK);

   1238  1 000047   000000 630400 2                  EPPR0   0
         1 000050   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000051   000000 701000 xent               TSX1    HFC$LOCK
         1 000052   000000 011000                    NOP     0

     1152     1240    3                EXIT CLR;

   1240  1 000053   000060 710000 1                  TRA     s:1244
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:252  

     1153     1241    3                END;  /* CLEAR ENTRY OUT */
     1154     1242    2          END;  /* DO I */

   1242  1 000054   200011 054100                    AOS     I,,AUTO
         1 000055   200011 235100                    LDA     I,,AUTO
         1 000056   000003 115007                    CMPA    3,DL
         1 000057   000015 604400 1                  TMOZ    s:1230

     1155     1243
     1156     1244    1          N=-1;

   1244  1 000060   000001 335007                    LCA     1,DL
         1 000061   200010 755100                    STA     N,,AUTO

     1157     1245    2   SRCH:  DO I=0 TO 3;

   1245  1 000062   200011 450100       SRCH         STZ     I,,AUTO

     1158     1246    2             IF FMC$CACHETBL.SRDA(HASH+I) = 0 THEN

   1246  1 000063   200003 470500                    LDP0    @HASH,,AUTO
         1 000064   000000 236100                    LDQ     0,,PR0
         1 000065   200011 036100                    ADLQ    I,,AUTO
         1 000066   000006 402007                    MPY     6,DL
         1 000067   000000 471400 xsym               LDP1    FMC_CACHE$
         1 000070   100000 236106                    LDQ     0,QL,PR1
         1 000071   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 000072   000076 601000 1                  TNZ     s:1252

     1159     1247    3                DO;   /* USE FIRST EMPTY SLOT */

     1160     1248    3                N=I;

   1248  1 000073   200011 235100                    LDA     I,,AUTO
         1 000074   200010 755100                    STA     N,,AUTO

PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:253  
     1161     1249    3                EXIT SRCH;

   1249  1 000075   000146 710000 1                  TRA     s:1265

     1162     1250    3                END;  /* USE FIRST EMPTY SLOT */
     1163     1251    2             ELSE
     1164     1252    2                IF FMC$CACHETBL.USECNT(HASH+I) = 0 AND

   1252  1 000076   000000 236100                    LDQ     0,,PR0
         1 000077   200011 036100                    ADLQ    I,,AUTO
         1 000100   000006 402007                    MPY     6,DL
         1 000101   100002 720106                    LXL0    2,QL,PR1
         1 000102   000142 601000 1                  TNZ     s:1263
         1 000103   000000 236100                    LDQ     0,,PR0
         1 000104   200011 036100                    ADLQ    I,,AUTO
         1 000105   000006 402007                    MPY     6,DL
         1 000106   100004 236106                    LDQ     4,QL,PR1
         1 000107   000001 316007                    CANQ    1,DL
         1 000110   000142 601000 1                  TNZ     s:1263

     1165     1253    2                   NOT FMC$CACHETBL.FLAGS.BUFUP(HASH+I) THEN
     1166     1254    3                   DO;   /* TRY TO USE THE SLOT */

     1167     1255    3                   TEMPTIME=CURTIME-FMC$CACHETBL.AGE(HASH+I)-

   1255  1 000111   000000 236100                    LDQ     0,,PR0
         1 000112   200011 036100                    ADLQ    I,,AUTO
         1 000113   000006 402007                    MPY     6,DL
         1 000114   000000 620006                    EAX0    0,QL
         1 000115   200007 236100                    LDQ     CURTIME,,AUTO
         1 000116   100005 136110                    SBLQ    5,X0,PR1
         1 000117   200016 756100                    STQ     PP+2,,AUTO
         1 000120   000000 236100                    LDQ     0,,PR0
         1 000121   200011 036100                    ADLQ    I,,AUTO
         1 000122   000006 402007                    MPY     6,DL
         1 000123   100000 236106                    LDQ     0,QL,PR1
         1 000124   000032 772000                    QRL     26
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:254  
         1 000125   001776 376007                    ANQ     1022,DL
         1 000126   000000 620006                    EAX0    0,QL
         1 000127   200016 236100                    LDQ     PP+2,,AUTO
         1 000130   000000 136010 xsym               SBLQ    FMC_LIMITS,X0
         1 000131   200013 756100                    STQ     TEMPTIME,,AUTO

     1168     1256    3                            FMC_LIMITS.EXPIRE(FMC$CACHETBL.TYPE(HASH+I));
     1169     1257    3                   IF N < 0 OR (N >= 0 AND TEMPTIME > ETIME) THEN

   1257  1 000132   200010 235100                    LDA     N,,AUTO
         1 000133   000137 604000 1                  TMI     s:1259
         1 000134   000142 604000 1                  TMI     s:1263
         1 000135   200012 116100                    CMPQ    ETIME,,AUTO
         1 000136   000142 604400 1                  TMOZ    s:1263

     1170     1258    4                      DO;   /* BEST GUESS */

     1171     1259    4                      N=I;

   1259  1 000137   200011 235100                    LDA     I,,AUTO
         1 000140   200010 755100                    STA     N,,AUTO

     1172     1260    4                      ETIME=TEMPTIME;

   1260  1 000141   200012 756100                    STQ     ETIME,,AUTO

     1173     1261    4                      END;  /* BEST GUESS */

     1174     1262    3                   END;  /* TRY TO USE THE SLOT */

     1175     1263    2          END;  /* DO I */

   1263  1 000142   200011 054100                    AOS     I,,AUTO
         1 000143   200011 235100                    LDA     I,,AUTO
         1 000144   000003 115007                    CMPA    3,DL
         1 000145   000063 604400 1                  TMOZ    s:1246

PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:255  
     1176     1264
     1177     1265    1          IF N >= 0 THEN

   1265  1 000146   200010 236100                    LDQ     N,,AUTO
         1 000147   000223 604000 1                  TMI     s:1285

     1178     1266    2             DO;   /* WE HAVE A WINNER */

     1179     1267    2             HASH=HASH+N;

   1267  1 000150   000000 036100                    ADLQ    0,,PR0
         1 000151   000000 756100                    STQ     0,,PR0

     1180     1268    2             CACHE$=ADDR(FMC$CACHETBL(HASH));

   1268  1 000152   000006 402007                    MPY     6,DL
         1 000153   000022 736000                    QLS     18
         1 000154   000000 036000 xsym               ADLQ    FMC_CACHE$
         1 000155   200006 471500                    LDP1    @CACHE$,,AUTO
         1 000156   100000 756100                    STQ     0,,PR1

     1181     1269    2             IF FMC$CACHE.SRDA > 0 THEN

   1269  1 000157   100000 473500                    LDP3    0,,PR1
         1 000160   300000 236100                    LDQ     0,,PR3
         1 000161   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 000162   000222 600000 1                  TZE     s:1282

     1182     1270    3                DO;   /* GET RID OF OLD ENTRY */

     1183     1271    3                CALL FMC$REMOVE(HASH);

   1271  1 000163   200003 630500                    EPPR0   @HASH,,AUTO
         1 000164   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000165   000000 701000 xent               TSX1    FMC$REMOVE
         1 000166   000000 011000                    NOP     0

PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:256  
     1184     1272    3                PP=FMC$CACHE.PAGE;

   1272  1 000167   200006 470500                    LDP0    @CACHE$,,AUTO
         1 000170   000000 471500                    LDP1    0,,PR0
         1 000171   100002 236100                    LDQ     2,,PR1
         1 000172   000022 772000                    QRL     18
         1 000173   200014 756100                    STQ     PP,,AUTO

     1185     1273    3                CALL MMJ$FIOP(PP);

   1273  1 000174   200014 631500                    EPPR1   PP,,AUTO
         1 000175   200016 451500                    STP1    PP+2,,AUTO
         1 000176   200016 630500                    EPPR0   PP+2,,AUTO
         1 000177   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000200   000000 701000 xent               TSX1    MMJ$FIOP
         1 000201   000000 011000                    NOP     0

     1186     1274    3                FMC$CACHETBL(HASH)='0'B;

   1274  1 000202   200003 470500                    LDP0    @HASH,,AUTO
         1 000203   000000 236100                    LDQ     0,,PR0
         1 000204   000006 402007                    MPY     6,DL
         1 000205   000002 736000                    QLS     2
         1 000206   000000 471400 xsym               LDP1    FMC_CACHE$
         1 000207   000106 100400                    MLR     fill='000'O
         1 000210   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000211   100000 000030                    ADSC9   0,Q,PR1                  cn=0,n=24

     1187     1275                     %DEC_COUNTER(ITEM=IOCACHE);

   1276  1 000212   000000 471400 xsym               LDP1    P_RESOURCE$
         1 000213   100055 235100                    LDA     45,,PR1
         1 000214   000001 135007                    SBLA    1,DL
         1 000215   100055 755100                    STA     45,,PR1

   1277  1 000216   100055 236100                    LDQ     45,,PR1
         1 000217   100057 116100                    CMPQ    47,,PR1
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:257  
         1 000220   000222 603000 1                  TRC     s:1282

   1279  1 000221   100057 756100                    STQ     47,,PR1

     1188     1281    3                END;  /* GET RID OF OLD ENTRY */

     1189     1282    2             RETURN;

   1282  1 000222   000000 702200 xent               TSX2  ! X66_ARET

     1190     1283    2             END;  /* WE HAVE A WINNER */
     1191     1284
     1192     1285    1          FMC$STATS.FAILED(TYPE)=FMC$STATS.FAILED(TYPE)+1;

   1285  1 000223   200004 473500                    LDP3    @TYPE,,AUTO
         1 000224   300000 235100                    LDA     0,,PR3
         1 000225   000000 474400 xsym               LDP4    FMC_STATS$
         1 000226   400026 054105                    AOS     22,AL,PR4

     1193     1286    1          ALTRETURN;

   1286  1 000227   000000 702200 xent               TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
   0     000   000000 000000                                                    ....

(unnamed)
 Sect OctLoc
   2     000   000000 006000                                                    ....
     1194     1287    1          END FMC$GETSLOT;
     1195     1288               %EOD;

PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:258  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$GETSLOT.
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:259  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @CACHE$                    3-0-0/w PTR         r     1 @HASH
     5-0-0/w PTR         r     1 @SRDA                      4-0-0/w PTR         r     1 @TYPE
    *0-0-0/w PTR         r     1 CACHE$                     7-0-0/w UBIN        r     1 CURTIME
    12-0-0/w SBIN        r     1 ETIME                     *0-0-0/w SBIN        r     1 HASH
    11-0-0/w SBIN        r     1 I                         10-0-0/w SBIN        r     1 N
    14-0-0/w SBIN        r     1 PP                        *0-0-0/w SBIN        r     1 SRDA
    13-0-0/w SBIN        r     1 TEMPTIME                  *0-0-0/w SBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FMC_CACHE$
     0-0-0/w PTR         r     1 FMC_CACHEPGCNT$
     0-0-0/w STRC(72)    r     1 FMC_LIMITS(0:8191)
     0-0-0/b BIT (72)    r     1 FMC_LOCK                   0-0-0/w PTR         r     1 FMC_STATS$
     0-0-0/w PTR         r     1 FMC_TYPTBL$                0-0-0/w PTR         r     1 P_RESOURCE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(216)   r     1 FMC$CACHE
     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(2376)  r     1 FMC$STATS                  0-0-0/w STRC(2268)  r     1 P_RESOURCE

PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:260  

   Procedure FMC$GETSLOT requires 152 words for executable code.
   Procedure FMC$GETSLOT requires 16 words of local(AUTO) storage.
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:261  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:262  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       557**DCL       557--REDEF
B$JIT.DCB$
       631**DCL      1230>>IF
B$JIT.ERR.MID
       464**DCL       464--REDEF
B$JIT.JRESPEAK
       625**DCL       626--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       734**DCL       734--REDEF     735--REDEF
B$JIT.PNR
       638**DCL       638--REDEF
B$JIT.TSLINE
       732**DCL       733--REDEF
B$JIT$
      1215**DCL       458--IMP-PTR  1230>>IF
CACHE$
        32**DCL        29--PROC     1126--IMP-PTR  1268<<ASSIGN   1269>>IF       1272>>ASSIGN
CLR
      1229**LABEL    1240--EXIT
CURTIME
      1217**DCL      1227<>CALL     1255>>ASSIGN
ETIME
      1220**DCL      1257>>IF       1260<<ASSIGN
F$DCB.ACTPOS
      1185**DCL      1185--REDEF
F$DCB.ARS
      1160**DCL      1160--REDEF
F$DCB.ATTR
      1178**DCL      1179--REDEF
F$DCB.BORROW
      1193**DCL      1193--REDEF    1193--REDEF    1193--REDEF
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:263  
F$DCB.DCBNAME.L
      1207**DCL      1207--IMP-SIZ
F$DCB.EOMCHAR
      1164**DCL      1164--REDEF
F$DCB.FLDID
      1188**DCL      1188--REDEF
F$DCB.FORM$
      1182**DCL      1182--REDEF
F$DCB.FSECT
      1198**DCL      1198--REDEF
F$DCB.FSN
      1175**DCL      1175--REDEF    1175--REDEF    1176--REDEF
F$DCB.HEADER$
      1181**DCL      1181--REDEF
F$DCB.IXTNSIZE
      1179**DCL      1179--REDEF
F$DCB.LASTSTA$
      1169**DCL      1169--REDEF
F$DCB.LVL
      1194**DCL      1194--REDEF
F$DCB.NAME.C
      1169**DCL      1169--REDEF
F$DCB.NOEOF
      1190**DCL      1190--REDEF
F$DCB.NRECS
      1180**DCL      1180--REDEF
F$DCB.NRECX
      1199**DCL      1199--REDEF
F$DCB.OHDR
      1191**DCL      1191--REDEF
F$DCB.ORG
      1174**DCL      1174--REDEF
F$DCB.PRECNO
      1197**DCL      1197--REDEF
F$DCB.RCSZ
      1202**DCL      1202--REDEF
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:264  
F$DCB.RES
      1170**DCL      1170--REDEF
F$DCB.SETX
      1182**DCL      1182--REDEF    1230>>IF
F$DCB.TAB$
      1181**DCL      1182--REDEF
F$DCB.TDA
      1196**DCL      1196--REDEF
F$DCB.WSN
      1171**DCL      1171--REDEF
FMC$CACHE.PAGE
      1132**DCL      1272>>ASSIGN
FMC$CACHE.SRDA
      1129**DCL      1269>>IF
FMC$CACHETBL
      1101**DCL      1268--ASSIGN   1274<<ASSIGN
FMC$CACHETBL.AGE
      1120**DCL      1255>>ASSIGN
FMC$CACHETBL.FLAGS.BUFUP
      1119**DCL      1252>>IF
FMC$CACHETBL.SETX
      1112**DCL      1230>>IF
FMC$CACHETBL.SRDA
      1106**DCL      1230>>IF       1246>>IF
FMC$CACHETBL.TYPE
      1105**DCL      1255>>ASSIGN
FMC$CACHETBL.USECNT
      1110**DCL      1252>>IF
FMC$CLR1
      1212**DCL-ENT  1236--CALL
FMC$REMOVE
      1211**DCL-ENT  1271--CALL
FMC$STATS.ATTPUT
      1156**DCL      1226<<ASSIGN   1226>>ASSIGN
FMC$STATS.FAILED
      1154**DCL      1285<<ASSIGN   1285>>ASSIGN
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:265  
FMC_CACHE$
        43**DCL      1101--IMP-PTR  1230>>IF       1230>>IF       1246>>IF       1252>>IF       1252>>IF
      1255>>ASSIGN   1255>>ASSIGN   1268>>ASSIGN   1274>>ASSIGN
FMC_CACHEPGCNT$
        44**DCL        44--IMP-PTR    44--REDEF
FMC_LIMITS.EXPIRE
       121**DCL      1255>>ASSIGN
FMC_LOCK
        45**DCL      1234<>CALL     1238<>CALL
FMC_STATS$
        43**DCL      1151--IMP-PTR  1226>>ASSIGN   1226>>ASSIGN   1285>>ASSIGN   1285>>ASSIGN
FMC_TYPTBL$
        43**DCL      1146--IMP-PTR
HASH
        30**DCL        29--PROC     1230>>IF       1230>>IF       1246>>IF       1252>>IF       1252>>IF
      1255>>ASSIGN   1255>>ASSIGN   1267<<ASSIGN   1267>>ASSIGN   1268>>ASSIGN   1271<>CALL     1274>>ASSIGN
HFC$LOCK
       135**DCL-ENT  1238--CALL
HFC$UNLOCK
       135**DCL-ENT  1234--CALL
I
      1219**DCL      1229<<DOINDEX  1230>>IF       1230>>IF       1245<<DOINDEX  1246>>IF       1248>>ASSIGN
      1252>>IF       1252>>IF       1255>>ASSIGN   1255>>ASSIGN   1259>>ASSIGN
MMJ$FIOP
      1213**DCL-ENT  1273--CALL
N
      1218**DCL      1244<<ASSIGN   1248<<ASSIGN   1257>>IF       1257>>IF       1259<<ASSIGN   1265>>IF
      1267>>ASSIGN
PP
      1222**DCL      1272<<ASSIGN   1273<>CALL
P_NSCPU
      1078**DCL      1079--REDEF
P_RESOURCE.RES
       951**DCL      1018--REDEF
P_RESOURCE.RES.IOCACHE.CURRENT
       980**DCL      1276<<ASSIGN   1276>>ASSIGN   1277>>IF       1279>>ASSIGN
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:266  
P_RESOURCE.RES.IOCACHE.MIN
       982**DCL      1277>>IF       1279<<ASSIGN
P_RESOURCE$
      1031**DCL       919--IMP-PTR  1276>>ASSIGN   1276>>ASSIGN   1277>>IF       1277>>IF       1279>>ASSIGN
      1279>>ASSIGN
P_UPTIME
      1067**DCL      1068--REDEF
SRCH
      1245**LABEL    1249--EXIT
SRDA
        33**DCL        29--PROC     1230>>IF       1236<>CALL
SSS$SYSTIME
      1210**DCL-ENT  1227--CALL
TEMPTIME
      1221**DCL      1255<<ASSIGN   1257>>IF       1260>>ASSIGN
TYPE
        31**DCL        29--PROC     1226>>ASSIGN   1226>>ASSIGN   1285>>ASSIGN   1285>>ASSIGN
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:267  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:268  
              MINI UREF LISTING

FLAG    1224**DCL
FMC$CACHEPGCNT      44**DCL
FMC$GETSLOT      29**PROC
FMC$TYPTBL    1146**DCL
FMC_CACHEPGCNT      44**DCL
FMC_CACHEPGCNT$R      44**DCL
FMC_CACHESIZ      43**DCL
FMC_CACHESIZN      43**DCL
FMC_MASK      45**DCL
FMC_MASKTBL      45**DCL
FM_WRCMP     121**DCL
NI_IOLEAPERS     121**DCL
P$IODATA    1032**DCL
P$TABLE    1041**DCL
PH_CPU_MOUSED    1096**DCL
PH_JIT_ENTRY    1092**DCL
PH_MOUSE_ENTRY    1088**DCL
PH_MOUSE_LOCK    1095**DCL
PH_MOUSE_USERS    1085**DCL
PH_MOUSE_USER_NUMBER    1097**DCL
PH_MUS_PAGES    1087**DCL
P_AUIS    1073**DCL
P_AVAIL_MEM    1080**DCL
P_AVGAVAIL_MEM    1081**DCL
P_AVGETMF    1070**DCL
P_AVGIOL    1072**DCL
P_AVGRT90    1069**DCL
P_CALCNT    1057**DCL
P_CALCOMP    1058**DCL
P_DCTXMAX    1074**DCL
P_ETMF    1051**DCL
P_GATE    1077**DCL
PL6.E3A0      #007=FMC$GETSLOT File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:269  
P_IOLOAD    1071**DCL
P_IOS    1066**DCL
P_NINTS    1052**DCL
P_NOW    1076**DCL
P_NSCPU_SBIN    1079**DCL
P_RT90    1053**DCL
P_RUE#    1049**DCL
P_SCHD#    1050**DCL
P_STARTUP    1054**DCL
P_STOPTIME    1075**DCL
P_S_MIDLTIME    1062**DCL
P_S_MIDLWIO    1063**DCL
P_S_MIDLWRES    1064**DCL
P_S_MIDLWRESIO    1065**DCL
P_S_MXEQTIME    1061**DCL
P_S_USRVTIME    1060**DCL
P_S_UXEQTIME    1059**DCL
P_UPTIME_SBIN    1068**DCL
P_USRVTIME    1056**DCL
P_UXEQTIME    1055**DCL
WORD_    1086**DCL

PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:270  
     1196        1        /*T***********************************************************/
     1197        2        /*T*                                                         */
     1198        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1199        4        /*T*                                                         */
     1200        5        /*T***********************************************************/
     1201        6        /*D*     NAME:     FMC$GETTYPE
     1202        7                 PURPOSE:  To set the granule type
     1203        8
     1204        9                 OUTPUT:   TYPE - granule type
     1205       10
     1206       11                 DESCRIPTION:
     1207       12                      We use a buncha DO CASEs to set the granule type to
     1208       13                 be used for caching purposes.
     1209       14        */
     1210       15                 %EJECT;
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:271  
     1211       16        FMC$GETTYPE: PROC(TYPE);
     1212       17    1          DCL TYPE SBIN;
     1213       18        /* */
     1214       19               %INCLUDE FM_CACHE_R;
     1215       31               %INCLUDE FM_CACHE_C;
     1216       97               %INCLUDE FM$GRAN;
     1217      166               %INCLUDE CP_6_SUBS;
     1218      706               %INCLUDE B$JIT;
     1219     1309               %MACRO F$DCB(BASED=BASED);
     1220     1310               %INCLUDE F$DCB;
     1221     1359               %MEND;
     1222     1360        /* */
     1223     1361               %F$DCB(BASED="BASED(JDCB$)");
     1224     1411        /* */
     1225     1412    1          DCL B$JIT$ PTR SYMREF;
     1226     1413        /* */
     1227     1414    1          DCL JDCB$ PTR;
     1228     1415        /* */
     1229     1416    1          JDCB$=B$JIT.DCB$;
     1230     1417    2          DO CASE(F$DCB.GTYP);
     1231     1418    2             CASE(FMGTMAD);
     1232     1419    2                TYPE=%CTYP_MAD;
     1233     1420
     1234     1421    2             CASE(FMGTPAD);
     1235     1422    2                TYPE=%CTYP_PAD;
     1236     1423
     1237     1424    2             CASE(FMGTGP);
     1238     1425    2                TYPE=%CTYP_GP;
     1239     1426
     1240     1427    2             CASE(FMGTFD, FMGTFDSTAR);
     1241     1428    2                TYPE=%CTYP_FD;
     1242     1429
     1243     1430    2             CASE(FMGTFIT);
     1244     1431    2                TYPE=%CTYP_FIT;
     1245     1432
     1246     1433    2             CASE(FMGTFILE);
     1247     1434    3                DO CASE(F$DCB.ORG);
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:272  
     1248     1435    3                   CASE(%CONSEC#);
     1249     1436    3                      TYPE=%CTYP_CONSEC;
     1250     1437
     1251     1438    3                   CASE(%RELATIVE#);
     1252     1439    3                      TYPE=%CTYP_REL;
     1253     1440
     1254     1441    3                   CASE(%KEYED#, %INDEXED#, %IREL#);
     1255     1442    4                      DO CASE(F$DCB.LVL);
     1256     1443    4                         CASE(0);
     1257     1444    4                            TYPE=%CTYP_INDEX;
     1258     1445
     1259     1446    4                         CASE(7);
     1260     1447    4                            TYPE=%CTYP_DATA;
     1261     1448
     1262     1449    4                         CASE(ELSE);
     1263     1450    4                            TYPE=%CTYP_UL;
     1264     1451    4                      END;
     1265     1452
     1266     1453    3                   CASE(ELSE);
     1267     1454    3                      TYPE=%CTYP_ELSE;
     1268     1455    3                END;
     1269     1456    2          END;
     1270     1457
     1271     1458    1          RETURN;
     1272     1459    1          END FMC$GETTYPE;
     1273     1460               %EOD;

PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:273  
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$GETTYPE.

   Procedure FMC$GETTYPE requires 96 words for executable code.
   Procedure FMC$GETTYPE requires 6 words of local(AUTO) storage.

PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:274  

 Object Unit name= FMC$GETTYPE                                File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:41:26.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    96    140  FMC$GETTYPE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMC$GETTYPE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHEPGCNT$                       B$JIT$
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:275  


     1196        1        /*T***********************************************************/
     1197        2        /*T*                                                         */
     1198        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1199        4        /*T*                                                         */
     1200        5        /*T***********************************************************/
     1201        6        /*D*     NAME:     FMC$GETTYPE
     1202        7                 PURPOSE:  To set the granule type
     1203        8
     1204        9                 OUTPUT:   TYPE - granule type
     1205       10
     1206       11                 DESCRIPTION:
     1207       12                      We use a buncha DO CASEs to set the granule type to
     1208       13                 be used for caching purposes.
     1209       14        */
     1210       15                 %EJECT;
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:276  
     1211       16        FMC$GETTYPE: PROC(TYPE);

     16  0 000000   000000 700200 xent  FMC$GETTYPE  TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

     1212       17    1          DCL TYPE SBIN;
     1213       18        /* */
     1214       19               %INCLUDE FM_CACHE_R;
     1215       31               %INCLUDE FM_CACHE_C;
     1216       97               %INCLUDE FM$GRAN;
     1217      166               %INCLUDE CP_6_SUBS;
     1218      706               %INCLUDE B$JIT;
     1219     1309               %MACRO F$DCB(BASED=BASED);
     1220     1310               %INCLUDE F$DCB;
     1221     1359               %MEND;
     1222     1360        /* */
     1223     1361               %F$DCB(BASED="BASED(JDCB$)");
     1224     1411        /* */
     1225     1412    1          DCL B$JIT$ PTR SYMREF;
     1226     1413        /* */
     1227     1414    1          DCL JDCB$ PTR;
     1228     1415        /* */
     1229     1416    1          JDCB$=B$JIT.DCB$;

   1416  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200004 756100                    STQ     JDCB$,,AUTO

     1230     1417    2          DO CASE(F$DCB.GTYP);

   1417  0 000005   200004 471500                    LDP1    JDCB$,,AUTO
         0 000006   100064 236100                    LDQ     52,,PR1
         0 000007   000035 772000                    QRL     29
         0 000010   000007 376007                    ANQ     7,DL
         0 000011   000010 116007                    CMPQ    8,DL
         0 000012   000014 602006 0                  TNC     s:1417+7,QL
         0 000013   000137 710000 0                  TRA     s:1458
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:277  
         0 000014   000137 710000 0                  TRA     s:1458
         0 000015   000033 710000 0                  TRA     s:1425
         0 000016   000024 710000 0                  TRA     s:1419
         0 000017   000027 710000 0                  TRA     s:1422
         0 000020   000037 710000 0                  TRA     s:1428
         0 000021   000043 710000 0                  TRA     s:1431
         0 000022   000047 710000 0                  TRA     s:1434
         0 000023   000037 710000 0                  TRA     s:1428

     1231     1418    2             CASE(FMGTMAD);

     1232     1419    2                TYPE=%CTYP_MAD;

   1419  0 000024   200003 473500                    LDP3    @TYPE,,AUTO
         0 000025   300000 450100                    STZ     0,,PR3
         0 000026   000137 710000 0                  TRA     s:1458

     1233     1420
     1234     1421    2             CASE(FMGTPAD);

     1235     1422    2                TYPE=%CTYP_PAD;

   1422  0 000027   000001 235007                    LDA     1,DL
         0 000030   200003 473500                    LDP3    @TYPE,,AUTO
         0 000031   300000 755100                    STA     0,,PR3
         0 000032   000137 710000 0                  TRA     s:1458

     1236     1423
     1237     1424    2             CASE(FMGTGP);

     1238     1425    2                TYPE=%CTYP_GP;

   1425  0 000033   000002 235007                    LDA     2,DL
         0 000034   200003 473500                    LDP3    @TYPE,,AUTO
         0 000035   300000 755100                    STA     0,,PR3
         0 000036   000137 710000 0                  TRA     s:1458

PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:278  
     1239     1426
     1240     1427    2             CASE(FMGTFD, FMGTFDSTAR);

     1241     1428    2                TYPE=%CTYP_FD;

   1428  0 000037   000003 235007                    LDA     3,DL
         0 000040   200003 473500                    LDP3    @TYPE,,AUTO
         0 000041   300000 755100                    STA     0,,PR3
         0 000042   000137 710000 0                  TRA     s:1458

     1242     1429
     1243     1430    2             CASE(FMGTFIT);

     1244     1431    2                TYPE=%CTYP_FIT;

   1431  0 000043   000004 235007                    LDA     4,DL
         0 000044   200003 473500                    LDP3    @TYPE,,AUTO
         0 000045   300000 755100                    STA     0,,PR3
         0 000046   000137 710000 0                  TRA     s:1458

     1245     1432
     1246     1433    2             CASE(FMGTFILE);

     1247     1434    3                DO CASE(F$DCB.ORG);

   1434  0 000047   100032 236100                    LDQ     26,,PR1
         0 000050   000033 772000                    QRL     27
         0 000051   000016 116007                    CMPQ    14,DL
         0 000052   000054 602006 0                  TNC     s:1434+5,QL
         0 000053   000134 710000 0                  TRA     s:1454
         0 000054   000134 710000 0                  TRA     s:1454
         0 000055   000072 710000 0                  TRA     s:1436
         0 000056   000102 710000 0                  TRA     s:1442
         0 000057   000134 710000 0                  TRA     s:1454
         0 000060   000134 710000 0                  TRA     s:1454
         0 000061   000076 710000 0                  TRA     s:1439
         0 000062   000102 710000 0                  TRA     s:1442
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:279  
         0 000063   000134 710000 0                  TRA     s:1454
         0 000064   000134 710000 0                  TRA     s:1454
         0 000065   000134 710000 0                  TRA     s:1454
         0 000066   000134 710000 0                  TRA     s:1454
         0 000067   000134 710000 0                  TRA     s:1454
         0 000070   000134 710000 0                  TRA     s:1454
         0 000071   000102 710000 0                  TRA     s:1442

     1248     1435    3                   CASE(%CONSEC#);

     1249     1436    3                      TYPE=%CTYP_CONSEC;

   1436  0 000072   000011 235007                    LDA     9,DL
         0 000073   200003 473500                    LDP3    @TYPE,,AUTO
         0 000074   300000 755100                    STA     0,,PR3
         0 000075   000137 710000 0                  TRA     s:1458

     1250     1437
     1251     1438    3                   CASE(%RELATIVE#);

     1252     1439    3                      TYPE=%CTYP_REL;

   1439  0 000076   000010 235007                    LDA     8,DL
         0 000077   200003 473500                    LDP3    @TYPE,,AUTO
         0 000100   300000 755100                    STA     0,,PR3
         0 000101   000137 710000 0                  TRA     s:1458

     1253     1440
     1254     1441    3                   CASE(%KEYED#, %INDEXED#, %IREL#);

     1255     1442    4                      DO CASE(F$DCB.LVL);

   1442  0 000102   100067 236100                    LDQ     55,,PR1
         0 000103   000036 772000                    QRL     30
         0 000104   000007 376007                    ANQ     7,DL
         0 000105   000010 116007                    CMPQ    8,DL
         0 000106   000110 602006 0                  TNC     s:1442+6,QL
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:280  
         0 000107   000130 710000 0                  TRA     s:1450
         0 000110   000120 710000 0                  TRA     s:1444
         0 000111   000130 710000 0                  TRA     s:1450
         0 000112   000130 710000 0                  TRA     s:1450
         0 000113   000130 710000 0                  TRA     s:1450
         0 000114   000130 710000 0                  TRA     s:1450
         0 000115   000130 710000 0                  TRA     s:1450
         0 000116   000130 710000 0                  TRA     s:1450
         0 000117   000124 710000 0                  TRA     s:1447

     1256     1443    4                         CASE(0);

     1257     1444    4                            TYPE=%CTYP_INDEX;

   1444  0 000120   000006 235007                    LDA     6,DL
         0 000121   200003 473500                    LDP3    @TYPE,,AUTO
         0 000122   300000 755100                    STA     0,,PR3
         0 000123   000137 710000 0                  TRA     s:1458

     1258     1445
     1259     1446    4                         CASE(7);

     1260     1447    4                            TYPE=%CTYP_DATA;

   1447  0 000124   000007 235007                    LDA     7,DL
         0 000125   200003 473500                    LDP3    @TYPE,,AUTO
         0 000126   300000 755100                    STA     0,,PR3
         0 000127   000137 710000 0                  TRA     s:1458

     1261     1448
     1262     1449    4                         CASE(ELSE);

     1263     1450    4                            TYPE=%CTYP_UL;

   1450  0 000130   000005 235007                    LDA     5,DL
         0 000131   200003 473500                    LDP3    @TYPE,,AUTO
         0 000132   300000 755100                    STA     0,,PR3
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:281  

     1264     1451    4                      END;

   1451  0 000133   000137 710000 0                  TRA     s:1458

     1265     1452
     1266     1453    3                   CASE(ELSE);

     1267     1454    3                      TYPE=%CTYP_ELSE;

   1454  0 000134   000012 235007                    LDA     10,DL
         0 000135   200003 473500                    LDP3    @TYPE,,AUTO
         0 000136   300000 755100                    STA     0,,PR3

     1268     1455    3                END;

     1269     1456    2          END;

     1270     1457
     1271     1458    1          RETURN;

   1458  0 000137   000000 702200 xent               TSX2  ! X66_ARET
     1272     1459    1          END FMC$GETTYPE;
     1273     1460               %EOD;

PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:282  
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$GETTYPE.
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:283  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @TYPE                      4-0-0/w PTR         r     1 JDCB$
    *0-0-0/w SBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FMC_CACHEPGCNT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure FMC$GETTYPE requires 96 words for executable code.
   Procedure FMC$GETTYPE requires 6 words of local(AUTO) storage.
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:284  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:285  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      1127**DCL      1127--REDEF
B$JIT.DCB$
      1201**DCL      1416>>ASSIGN
B$JIT.ERR.MID
      1034**DCL      1034--REDEF
B$JIT.JRESPEAK
      1195**DCL      1196--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      1304**DCL      1304--REDEF    1305--REDEF
B$JIT.PNR
      1208**DCL      1208--REDEF
B$JIT.TSLINE
      1302**DCL      1303--REDEF
B$JIT$
      1412**DCL      1028--IMP-PTR  1416>>ASSIGN
F$DCB.ACTPOS
      1387**DCL      1387--REDEF
F$DCB.ARS
      1362**DCL      1362--REDEF
F$DCB.ATTR
      1380**DCL      1381--REDEF
F$DCB.BORROW
      1395**DCL      1395--REDEF    1395--REDEF    1395--REDEF
F$DCB.DCBNAME.L
      1409**DCL      1409--IMP-SIZ
F$DCB.EOMCHAR
      1366**DCL      1366--REDEF
F$DCB.FLDID
      1390**DCL      1390--REDEF
F$DCB.FORM$
      1384**DCL      1384--REDEF
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:286  
F$DCB.FSECT
      1400**DCL      1400--REDEF
F$DCB.FSN
      1377**DCL      1377--REDEF    1377--REDEF    1378--REDEF
F$DCB.GTYP
      1391**DCL      1417>>DOCASE
F$DCB.HEADER$
      1383**DCL      1383--REDEF
F$DCB.IXTNSIZE
      1381**DCL      1381--REDEF
F$DCB.LASTSTA$
      1371**DCL      1371--REDEF
F$DCB.LVL
      1396**DCL      1396--REDEF    1442>>DOCASE
F$DCB.NAME.C
      1371**DCL      1371--REDEF
F$DCB.NOEOF
      1392**DCL      1392--REDEF
F$DCB.NRECS
      1382**DCL      1382--REDEF
F$DCB.NRECX
      1401**DCL      1401--REDEF
F$DCB.OHDR
      1393**DCL      1393--REDEF
F$DCB.ORG
      1376**DCL      1376--REDEF    1434>>DOCASE
F$DCB.PRECNO
      1399**DCL      1399--REDEF
F$DCB.RCSZ
      1404**DCL      1404--REDEF
F$DCB.RES
      1372**DCL      1372--REDEF
F$DCB.SETX
      1384**DCL      1384--REDEF
F$DCB.TAB$
      1383**DCL      1384--REDEF
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:287  
F$DCB.TDA
      1398**DCL      1398--REDEF
F$DCB.WSN
      1373**DCL      1373--REDEF
FMC_CACHEPGCNT$
        28**DCL        28--IMP-PTR    28--REDEF
JDCB$
      1414**DCL      1362--IMP-PTR  1416<<ASSIGN   1417>>DOCASE   1434>>DOCASE   1442>>DOCASE
TYPE
        17**DCL        16--PROC     1419<<ASSIGN   1422<<ASSIGN   1425<<ASSIGN   1428<<ASSIGN   1431<<ASSIGN
      1436<<ASSIGN   1439<<ASSIGN   1444<<ASSIGN   1447<<ASSIGN   1450<<ASSIGN   1454<<ASSIGN
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:288  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #008=FMC$GETTYPE File=FMC$CACHE.:E05TSI                            TUE 07/29/97 16:41 Page:289  
              MINI UREF LISTING

FMC$CACHEPGCNT      28**DCL
FMC$GETTYPE      16**PROC
FMC_CACHE$      27**DCL
FMC_CACHEPGCNT      28**DCL
FMC_CACHEPGCNT$R      28**DCL
FMC_CACHESIZ      27**DCL
FMC_CACHESIZN      27**DCL
FMC_LOCK      29**DCL
FMC_MASK      29**DCL
FMC_MASKTBL      29**DCL
FMC_STATS$      27**DCL
FMC_TYPTBL$      27**DCL

PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:290  
     1274        1        /*T***********************************************************/
     1275        2        /*T*                                                         */
     1276        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1277        4        /*T*                                                         */
     1278        5        /*T***********************************************************/
     1279        6        /*D*     NAME:     FMC$RELCACHE
     1280        7                 PURPOSE:  To get rid a cache table entry.
     1281        8                 INPUT:    BUFNUM - buffer number
     1282        9
     1283       10                 DESCRIPTION:
     1284       11                      If the buffer has a cached granule, then take the
     1285       12                 user off of the page.  If the usecount is zero, then
     1286       13                 free the page.
     1287       14        */
     1288       15                 %EJECT;
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:291  
     1289       16        FMC$RELCACHE: PROC(BUFNUM);
     1290       17    1          DCL BUFNUM SBIN;
     1291       18        /* */
     1292       19               %INCLUDE FM_CACHE_R;
     1293       31               %INCLUDE FM_CACHE_C;
     1294       97               %INCLUDE FM_DATA_R;
     1295      111               %INCLUDE HF_LOCK_C;
     1296      125               %MACRO F$DCB(BASED=BASED);
     1297      126               %INCLUDE F$DCB;
     1298      175               %MEND;
     1299      176               %INCLUDE B$JIT;
     1300      779               %INCLUDE P_PMDAT_R;
     1301     1087        /* */
     1302     1088    1          DCL B$JIT$ PTR SYMREF;
     1303     1089        /* */
     1304     1090               %FMC$CACHE;
     1305     1113               %FMC$CACHE(FPTN=FMC$CACHE,ARRAY=NO,STCLASS="BASED(CACHE$)");
     1306     1136               %F$DCB(BASED="BASED(JDCB$)");
     1307     1186        /* */
     1308     1187    1          DCL HASH SBIN;
     1309     1188    1          DCL JDCB$ PTR;
     1310     1189    1          DCL PAGE SBIN;
     1311     1190    1          DCL VPNO SBIN;
     1312     1191    1          DCL CACHE$ PTR;
     1313     1192    1          DCL N SBIN;
     1314     1193        /* */
     1315     1194    1          DCL MMJ$FIOP ENTRY(1);
     1316     1195    1          DCL MMJ$UNMAPIOP ENTRY(1);
     1317     1196        /* */
     1318     1197    1          JDCB$=B$JIT.DCB$;
     1319     1198    1          HASH=F$DCB.BFR1.CX(BUFNUM);
     1320     1199    1          IF HASH = 0 THEN
     1321     1200    1             RETURN;
     1322     1201
     1323     1202               %LOCK(G=FMC_LOCK);
     1324     1205    1          CACHE$=ADDR(FMC$CACHETBL(HASH));
     1325     1206    1          FMC$CACHE.USECNT=FMC$CACHE.USECNT-1;
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:292  
     1326     1207    1          PAGE=FMC$CACHE.PAGE;
     1327     1208    1          VPNO=F$DCB.BFR.BUFX(BUFNUM);
     1328     1209    1          IF VPNO ~= 0 THEN
     1329     1210    1             CALL MMJ$UNMAPIOP(VPNO);
     1330     1211
     1331     1212    1          IF FMC$CACHE.USECNT = 0 THEN
     1332     1213    2             DO;   /* GET RID OF PAGE */
     1333     1214    2             CALL MMJ$FIOP(PAGE);
     1334     1215    2             FMC$CACHE='0'B;
     1335     1216                  %DEC_COUNTER(ITEM=IOCACHE);
     1336     1222    2             END;  /* GET RID OF PAGE */
     1337     1223
     1338     1224               %UNLOCK(G=FMC_LOCK);
     1339     1227    1          F$DCB.BFR(BUFNUM)=F$DCB.BFR(BUFNUM)&'000777777777'O;
     1340     1228    1          F$DCB.BFR1(BUFNUM)='0'B;
     1341     1229
     1342     1230    1          RETURN;
     1343     1231    1          END FMC$RELCACHE;
     1344     1232               %EOD;

PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:293  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$RELCACHE.

   Procedure FMC$RELCACHE requires 76 words for executable code.
   Procedure FMC$RELCACHE requires 12 words of local(AUTO) storage.

PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:294  

 Object Unit name= FMC$RELCACHE                               File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:41:39.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    76    114  FMC$RELCACHE
    1  RoData even  none     1      1  FMC$RELCACHE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMC$RELCACHE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 MMJ$UNMAPIOP
         yes           Std       1 HFC$UNLOCK
         yes           Std       1 MMJ$FIOP
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:295  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHE$                            FMC_CACHEPGCNT$                       FMC_LOCK
     P_RESOURCE$                           P_UPTIME                              P_NSCPU
     B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:296  


     1274        1        /*T***********************************************************/
     1275        2        /*T*                                                         */
     1276        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1277        4        /*T*                                                         */
     1278        5        /*T***********************************************************/
     1279        6        /*D*     NAME:     FMC$RELCACHE
     1280        7                 PURPOSE:  To get rid a cache table entry.
     1281        8                 INPUT:    BUFNUM - buffer number
     1282        9
     1283       10                 DESCRIPTION:
     1284       11                      If the buffer has a cached granule, then take the
     1285       12                 user off of the page.  If the usecount is zero, then
     1286       13                 free the page.
     1287       14        */
     1288       15                 %EJECT;
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:297  
     1289       16        FMC$RELCACHE: PROC(BUFNUM);

     16  0 000000   000000 700200 xent  FMC$RELCACHE TSX0  ! X66_AUTO_1
         0 000001   000014 000001                    ZERO    12,1

     1290       17    1          DCL BUFNUM SBIN;
     1291       18        /* */
     1292       19               %INCLUDE FM_CACHE_R;
     1293       31               %INCLUDE FM_CACHE_C;
     1294       97               %INCLUDE FM_DATA_R;
     1295      111               %INCLUDE HF_LOCK_C;
     1296      125               %MACRO F$DCB(BASED=BASED);
     1297      126               %INCLUDE F$DCB;
     1298      175               %MEND;
     1299      176               %INCLUDE B$JIT;
     1300      779               %INCLUDE P_PMDAT_R;
     1301     1087        /* */
     1302     1088    1          DCL B$JIT$ PTR SYMREF;
     1303     1089        /* */
     1304     1090               %FMC$CACHE;
     1305     1113               %FMC$CACHE(FPTN=FMC$CACHE,ARRAY=NO,STCLASS="BASED(CACHE$)");
     1306     1136               %F$DCB(BASED="BASED(JDCB$)");
     1307     1186        /* */
     1308     1187    1          DCL HASH SBIN;
     1309     1188    1          DCL JDCB$ PTR;
     1310     1189    1          DCL PAGE SBIN;
     1311     1190    1          DCL VPNO SBIN;
     1312     1191    1          DCL CACHE$ PTR;
     1313     1192    1          DCL N SBIN;
     1314     1193        /* */
     1315     1194    1          DCL MMJ$FIOP ENTRY(1);
     1316     1195    1          DCL MMJ$UNMAPIOP ENTRY(1);
     1317     1196        /* */
     1318     1197    1          JDCB$=B$JIT.DCB$;

   1197  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:298  
         0 000004   200005 756100                    STQ     JDCB$,,AUTO

     1319     1198    1          HASH=F$DCB.BFR1.CX(BUFNUM);

   1198  0 000005   200003 471500                    LDP1    @BUFNUM,,AUTO
         0 000006   100000 235100                    LDA     0,,PR1
         0 000007   200005 473500                    LDP3    JDCB$,,AUTO
         0 000010   300122 236105                    LDQ     82,AL,PR3
         0 000011   777777 376007                    ANQ     -1,DL
         0 000012   200004 756100                    STQ     HASH,,AUTO

     1320     1199    1          IF HASH = 0 THEN

   1199  0 000013   000015 601000 0                  TNZ     s:1203

     1321     1200    1             RETURN;

   1200  0 000014   000000 702200 xent               TSX2  ! X66_ARET

     1322     1201
     1323     1202               %LOCK(G=FMC_LOCK);

   1203  0 000015   000000 630400 1                  EPPR0   0
         0 000016   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000017   000000 701000 xent               TSX1    HFC$LOCK
         0 000020   000000 011000                    NOP     0

     1324     1205    1          CACHE$=ADDR(FMC$CACHETBL(HASH));

   1205  0 000021   200004 236100                    LDQ     HASH,,AUTO
         0 000022   000006 402003                    MPY     6,DU
         0 000023   000000 036000 xsym               ADLQ    FMC_CACHE$
         0 000024   200010 756100                    STQ     CACHE$,,AUTO

     1325     1206    1          FMC$CACHE.USECNT=FMC$CACHE.USECNT-1;

   1206  0 000025   200010 470500                    LDP0    CACHE$,,AUTO
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:299  
         0 000026   000002 720100                    LXL0    2,,PR0
         0 000027   777777 621010                    EAX1    -1,X0
         0 000030   000002 441100                    SXL1    2,,PR0

     1326     1207    1          PAGE=FMC$CACHE.PAGE;

   1207  0 000031   000002 236100                    LDQ     2,,PR0
         0 000032   000022 772000                    QRL     18
         0 000033   200006 756100                    STQ     PAGE,,AUTO

     1327     1208    1          VPNO=F$DCB.BFR.BUFX(BUFNUM);

   1208  0 000034   200003 471500                    LDP1    @BUFNUM,,AUTO
         0 000035   100000 235100                    LDA     0,,PR1
         0 000036   200005 473500                    LDP3    JDCB$,,AUTO
         0 000037   300115 236105                    LDQ     77,AL,PR3
         0 000040   000033 772000                    QRL     27
         0 000041   000037 376007                    ANQ     31,DL
         0 000042   200007 756100                    STQ     VPNO,,AUTO

     1328     1209    1          IF VPNO ~= 0 THEN

   1209  0 000043   000052 600000 0                  TZE     s:1212

     1329     1210    1             CALL MMJ$UNMAPIOP(VPNO);

   1210  0 000044   200007 634500                    EPPR4   VPNO,,AUTO
         0 000045   200012 454500                    STP4    CACHE$+2,,AUTO
         0 000046   200012 630500                    EPPR0   CACHE$+2,,AUTO
         0 000047   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000050   000000 701000 xent               TSX1    MMJ$UNMAPIOP
         0 000051   000000 011000                    NOP     0

     1330     1211
     1331     1212    1          IF FMC$CACHE.USECNT = 0 THEN

   1212  0 000052   200010 470500                    LDP0    CACHE$,,AUTO
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:300  
         0 000053   000002 720100                    LXL0    2,,PR0
         0 000054   000077 601000 0                  TNZ     s:1225

     1332     1213    2             DO;   /* GET RID OF PAGE */

     1333     1214    2             CALL MMJ$FIOP(PAGE);

   1214  0 000055   200006 631500                    EPPR1   PAGE,,AUTO
         0 000056   200012 451500                    STP1    CACHE$+2,,AUTO
         0 000057   200012 630500                    EPPR0   CACHE$+2,,AUTO
         0 000060   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000061   000000 701000 xent               TSX1    MMJ$FIOP
         0 000062   000000 011000                    NOP     0

     1334     1215    2             FMC$CACHE='0'B;

   1215  0 000063   200010 470500                    LDP0    CACHE$,,AUTO
         0 000064   000100 100400                    MLR     fill='000'O
         0 000065   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000066   000000 000030                    ADSC9   0,,PR0                   cn=0,n=24

     1335     1216                  %DEC_COUNTER(ITEM=IOCACHE);

   1217  0 000067   000000 471400 xsym               LDP1    P_RESOURCE$
         0 000070   100055 235100                    LDA     45,,PR1
         0 000071   000001 135007                    SBLA    1,DL
         0 000072   100055 755100                    STA     45,,PR1

   1218  0 000073   100055 236100                    LDQ     45,,PR1
         0 000074   100057 116100                    CMPQ    47,,PR1
         0 000075   000077 603000 0                  TRC     s:1225

   1220  0 000076   100057 756100                    STQ     47,,PR1

     1336     1222    2             END;  /* GET RID OF PAGE */

     1337     1223
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:301  
     1338     1224               %UNLOCK(G=FMC_LOCK);

   1225  0 000077   000000 630400 1                  EPPR0   0
         0 000100   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000101   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000102   000000 011000                    NOP     0

     1339     1227    1          F$DCB.BFR(BUFNUM)=F$DCB.BFR(BUFNUM)&'000777777777'O;

   1227  0 000103   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000104   000000 235100                    LDA     0,,PR0
         0 000105   200005 471500                    LDP1    JDCB$,,AUTO
         0 000106   100115 236105                    LDQ     77,AL,PR1
         0 000107   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000110   100115 756105                    STQ     77,AL,PR1

     1340     1228    1          F$DCB.BFR1(BUFNUM)='0'B;

   1228  0 000111   000000 235100                    LDA     0,,PR0
         0 000112   100122 450105                    STZ     82,AL,PR1

     1341     1229
     1342     1230    1          RETURN;

   1230  0 000113   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 006000                                                    ....
     1343     1231    1          END FMC$RELCACHE;
     1344     1232               %EOD;

PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:302  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$RELCACHE.
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:303  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUFNUM                   *0-0-0/w SBIN        r     1 BUFNUM
    10-0-0/w PTR         r     1 CACHE$                     4-0-0/w SBIN        r     1 HASH
     5-0-0/w PTR         r     1 JDCB$                      6-0-0/w SBIN        r     1 PAGE
     7-0-0/w SBIN        r     1 VPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FMC_CACHE$
     0-0-0/w PTR         r     1 FMC_CACHEPGCNT$            0-0-0/b BIT (72)    r     1 FMC_LOCK
     0-0-0/w PTR         r     1 P_RESOURCE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(216)   r     1 FMC$CACHE
     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(2268)  r     1 P_RESOURCE


   Procedure FMC$RELCACHE requires 76 words for executable code.
   Procedure FMC$RELCACHE requires 12 words of local(AUTO) storage.
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:304  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:305  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       597**DCL       597--REDEF
B$JIT.DCB$
       671**DCL      1197>>ASSIGN
B$JIT.ERR.MID
       504**DCL       504--REDEF
B$JIT.JRESPEAK
       665**DCL       666--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       774**DCL       774--REDEF     775--REDEF
B$JIT.PNR
       678**DCL       678--REDEF
B$JIT.TSLINE
       772**DCL       773--REDEF
B$JIT$
      1088**DCL       498--IMP-PTR  1197>>ASSIGN
BUFNUM
        17**DCL        16--PROC     1198>>ASSIGN   1208>>ASSIGN   1227>>ASSIGN   1227>>ASSIGN   1228>>ASSIGN
CACHE$
      1191**DCL      1117--IMP-PTR  1205<<ASSIGN   1206>>ASSIGN   1206>>ASSIGN   1207>>ASSIGN   1212>>IF
      1215>>ASSIGN
F$DCB.ACTPOS
      1162**DCL      1162--REDEF
F$DCB.ARS
      1137**DCL      1137--REDEF
F$DCB.ATTR
      1155**DCL      1156--REDEF
F$DCB.BFR
      1181**DCL      1227<<ASSIGN   1227>>ASSIGN
F$DCB.BFR.BUFX
      1182**DCL      1208>>ASSIGN
F$DCB.BFR1
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:306  
      1182**DCL      1228<<ASSIGN
F$DCB.BFR1.CX
      1183**DCL      1198>>ASSIGN
F$DCB.BORROW
      1170**DCL      1170--REDEF    1170--REDEF    1170--REDEF
F$DCB.DCBNAME.L
      1184**DCL      1184--IMP-SIZ
F$DCB.EOMCHAR
      1141**DCL      1141--REDEF
F$DCB.FLDID
      1165**DCL      1165--REDEF
F$DCB.FORM$
      1159**DCL      1159--REDEF
F$DCB.FSECT
      1175**DCL      1175--REDEF
F$DCB.FSN
      1152**DCL      1152--REDEF    1152--REDEF    1153--REDEF
F$DCB.HEADER$
      1158**DCL      1158--REDEF
F$DCB.IXTNSIZE
      1156**DCL      1156--REDEF
F$DCB.LASTSTA$
      1146**DCL      1146--REDEF
F$DCB.LVL
      1171**DCL      1171--REDEF
F$DCB.NAME.C
      1146**DCL      1146--REDEF
F$DCB.NOEOF
      1167**DCL      1167--REDEF
F$DCB.NRECS
      1157**DCL      1157--REDEF
F$DCB.NRECX
      1176**DCL      1176--REDEF
F$DCB.OHDR
      1168**DCL      1168--REDEF
F$DCB.ORG
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:307  
      1151**DCL      1151--REDEF
F$DCB.PRECNO
      1174**DCL      1174--REDEF
F$DCB.RCSZ
      1179**DCL      1179--REDEF
F$DCB.RES
      1147**DCL      1147--REDEF
F$DCB.SETX
      1159**DCL      1159--REDEF
F$DCB.TAB$
      1158**DCL      1159--REDEF
F$DCB.TDA
      1173**DCL      1173--REDEF
F$DCB.WSN
      1148**DCL      1148--REDEF
FMC$CACHE
      1117**DCL      1215<<ASSIGN
FMC$CACHE.PAGE
      1123**DCL      1207>>ASSIGN
FMC$CACHE.USECNT
      1124**DCL      1206<<ASSIGN   1206>>ASSIGN   1212>>IF
FMC$CACHETBL
      1092**DCL      1205--ASSIGN
FMC_CACHE$
        27**DCL      1092--IMP-PTR  1205>>ASSIGN
FMC_CACHEPGCNT$
        28**DCL        28--IMP-PTR    28--REDEF
FMC_LOCK
        29**DCL      1203<>CALL     1225<>CALL
HASH
      1187**DCL      1198<<ASSIGN   1199>>IF       1205>>ASSIGN
HFC$LOCK
       124**DCL-ENT  1203--CALL
HFC$UNLOCK
       124**DCL-ENT  1225--CALL
JDCB$
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:308  
      1188**DCL      1137--IMP-PTR  1197<<ASSIGN   1198>>ASSIGN   1208>>ASSIGN   1227>>ASSIGN   1227>>ASSIGN
      1228>>ASSIGN
MMJ$FIOP
      1194**DCL-ENT  1214--CALL
MMJ$UNMAPIOP
      1195**DCL-ENT  1210--CALL
PAGE
      1189**DCL      1207<<ASSIGN   1214<>CALL
P_NSCPU
      1067**DCL      1068--REDEF
P_RESOURCE.RES
       940**DCL      1007--REDEF
P_RESOURCE.RES.IOCACHE.CURRENT
       969**DCL      1217<<ASSIGN   1217>>ASSIGN   1218>>IF       1220>>ASSIGN
P_RESOURCE.RES.IOCACHE.MIN
       971**DCL      1218>>IF       1220<<ASSIGN
P_RESOURCE$
      1020**DCL       908--IMP-PTR  1217>>ASSIGN   1217>>ASSIGN   1218>>IF       1218>>IF       1220>>ASSIGN
      1220>>ASSIGN
P_UPTIME
      1056**DCL      1057--REDEF
VPNO
      1190**DCL      1208<<ASSIGN   1209>>IF       1210<>CALL
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:309  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:310  
              MINI UREF LISTING

F$CFU$     108**DCL
FM$SET$     109**DCL
FMC$CACHEPGCNT      28**DCL
FMC$RELCACHE      16**PROC
FMC_CACHEPGCNT      28**DCL
FMC_CACHEPGCNT$R      28**DCL
FMC_CACHESIZ      27**DCL
FMC_CACHESIZN      27**DCL
FMC_MASK      29**DCL
FMC_MASKTBL      29**DCL
FMC_STATS$      27**DCL
FMC_TYPTBL$      27**DCL
FM_CFUWAIT     108**DCL
FM_CFUWGRB     108**DCL
FM_EOP     106**DCL
FM_FRMAX     105**DCL
FM_FRZERO     105**DCL
FM_GCT     109**DCL
FM_GIP     109**DCL
FM_GPSDA     106**DCL
FM_HASH     107**DCL
FM_MADSDA     106**DCL
FM_PADSDA     106**DCL
FM_SRMAX     105**DCL
FM_SRZERO     105**DCL
FM_SYSACCTX     109**DCL
FM_SYSSETX     109**DCL
FM_TRUNC     107**DCL
FM_WSQ     107**DCL
F_CWLK     108**DCL
F_CWUSER     108**DCL
F_DCBLOCK     107**DCL
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:311  
N    1192**DCL
P$IODATA    1021**DCL
P$TABLE    1030**DCL
PH_CPU_MOUSED    1085**DCL
PH_JIT_ENTRY    1081**DCL
PH_MOUSE_ENTRY    1077**DCL
PH_MOUSE_LOCK    1084**DCL
PH_MOUSE_USERS    1074**DCL
PH_MOUSE_USER_NUMBER    1086**DCL
PH_MUS_PAGES    1076**DCL
P_AUIS    1062**DCL
P_AVAIL_MEM    1069**DCL
P_AVGAVAIL_MEM    1070**DCL
P_AVGETMF    1059**DCL
P_AVGIOL    1061**DCL
P_AVGRT90    1058**DCL
P_CALCNT    1046**DCL
P_CALCOMP    1047**DCL
P_DCTXMAX    1063**DCL
P_ETMF    1040**DCL
P_GATE    1066**DCL
P_IOLOAD    1060**DCL
P_IOS    1055**DCL
P_NINTS    1041**DCL
P_NOW    1065**DCL
P_NSCPU_SBIN    1068**DCL
P_RT90    1042**DCL
P_RUE#    1038**DCL
P_SCHD#    1039**DCL
P_STARTUP    1043**DCL
P_STOPTIME    1064**DCL
P_S_MIDLTIME    1051**DCL
P_S_MIDLWIO    1052**DCL
P_S_MIDLWRES    1053**DCL
P_S_MIDLWRESIO    1054**DCL
P_S_MXEQTIME    1050**DCL
PL6.E3A0      #009=FMC$RELCACHE File=FMC$CACHE.:E05TSI                           TUE 07/29/97 16:41 Page:312  
P_S_USRVTIME    1049**DCL
P_S_UXEQTIME    1048**DCL
P_UPTIME_SBIN    1057**DCL
P_USRVTIME    1045**DCL
P_UXEQTIME    1044**DCL
WORD_    1075**DCL

PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:313  
     1345        1        /*T***********************************************************/
     1346        2        /*T*                                                         */
     1347        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1348        4        /*T*                                                         */
     1349        5        /*T***********************************************************/
     1350        6        /*D*     NAME:     FMC$RELSCU
     1351        7                 PURPOSE:  To free one or more pages of memory at the
     1352        8                           request of memory management.
     1353        9                 DESCRIPTION:
     1354       10                      We loop once through the type table to release
     1355       11                 any pages in the requested range.
     1356       12
     1357       13        */
     1358       14                 %EJECT;
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:314  
     1359       15        FMC$RELSCU: PROC(LOWER_PAGE,UPPER_PAGE,PAGES_RELEASED) ALTRET;
     1360       16
     1361       17    1   DCL LOWER_PAGE UBIN WORD;
     1362       18    1   DCL UPPER_PAGE UBIN WORD;
     1363       19    1   DCL PAGES_RELEASED UBIN WORD;
     1364       20        %INCLUDE FM_CACHE_R;
     1365       32        %INCLUDE FM_CACHE_C;
     1366       98        %INCLUDE FM_CNTRL_R;
     1367      107        %INCLUDE P_PMDAT_R;
     1368      415        /* */
     1369      416        %FMC$CACHE;
     1370      439        %FMC$TYPTBL;
     1371      444        /* */
     1372      445    1   DCL HFC$LOCK ENTRY(1);
     1373      446    1   DCL HFC$UNLOCK ENTRY(1);
     1374      447    1   DCL FMC$REMOVE ENTRY(1);
     1375      448    1   DCL MMJ$FIOP ENTRY(1);
     1376      449        /* */
     1377      450    1   DCL TYPE SBIN;
     1378      451    1   DCL FLINK SBIN;
     1379      452    1   DCL NEWFLINK SBIN;
     1380      453    1   DCL PP SBIN;
     1381      454    1   DCL I SBIN ;
     1382      455        /**/
     1383      456    1          PAGES_RELEASED = 0;
     1384      457    1          CALL HFC$LOCK(FMC_LOCK);
     1385      458    2          DO TYPE = 0 TO %CACHETYPES - 1;
     1386      459    2             FLINK = FMC$TYPTBL.OLDEST(TYPE);
     1387      460    3             DO WHILE (FLINK > 0);
     1388      461    3               PP = FMC$CACHETBL.PAGE(FLINK);
     1389      462    4               IF PP >= LOWER_PAGE AND PP <= UPPER_PAGE THEN DO;
     1390      463    4                  CALL FMC$REMOVE(FLINK);
     1391      464    4                  CALL MMJ$FIOP(PP);
     1392      465    4                  PAGES_RELEASED = PAGES_RELEASED+1;
     1393      466    4                  NEWFLINK = FMC$CACHETBL.FLINK(FLINK);
     1394      467    4                  FMC$CACHETBL(FLINK) = '0'B;
     1395      468                       %DEC_COUNTER(ITEM=IOCACHE);
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:315  
     1396      474    4                  FLINK = NEWFLINK;
     1397      475    4                  END;
     1398      476    3               ELSE
     1399      477    3                  FLINK = FMC$CACHETBL.FLINK(FLINK);
     1400      478    3               END;
     1401      479    2             END;
     1402      480    1          CALL HFC$UNLOCK(FMC_LOCK);
     1403      481    1          RETURN;
     1404      482    1   END FMC$RELSCU;
     1405      483        %EOD;

PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:316  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$RELSCU.

   Procedure FMC$RELSCU requires 86 words for executable code.
   Procedure FMC$RELSCU requires 14 words of local(AUTO) storage.

PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:317  

 Object Unit name= FMC$RELSCU                                 File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:41:53.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    86    126  FMC$RELSCU
    1  RoData even  none     1      1  FMC$RELSCU

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  FMC$RELSCU

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 FMC$REMOVE
         yes           Std       1 MMJ$FIOP
         yes           Std       1 HFC$UNLOCK
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:318  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHE$                            FMC_TYPTBL$                           FMC_CACHEPGCNT$
     FMC_LOCK                              P_RESOURCE$                           P_UPTIME
     P_NSCPU                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:319  


     1345        1        /*T***********************************************************/
     1346        2        /*T*                                                         */
     1347        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1348        4        /*T*                                                         */
     1349        5        /*T***********************************************************/
     1350        6        /*D*     NAME:     FMC$RELSCU
     1351        7                 PURPOSE:  To free one or more pages of memory at the
     1352        8                           request of memory management.
     1353        9                 DESCRIPTION:
     1354       10                      We loop once through the type table to release
     1355       11                 any pages in the requested range.
     1356       12
     1357       13        */
     1358       14                 %EJECT;
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:320  
     1359       15        FMC$RELSCU: PROC(LOWER_PAGE,UPPER_PAGE,PAGES_RELEASED) ALTRET;

     15  0 000000   000000 700200 xent  FMC$RELSCU   TSX0  ! X66_AUTO_3
         0 000001   000016 000003                    ZERO    14,3

     1360       16
     1361       17    1   DCL LOWER_PAGE UBIN WORD;
     1362       18    1   DCL UPPER_PAGE UBIN WORD;
     1363       19    1   DCL PAGES_RELEASED UBIN WORD;
     1364       20        %INCLUDE FM_CACHE_R;
     1365       32        %INCLUDE FM_CACHE_C;
     1366       98        %INCLUDE FM_CNTRL_R;
     1367      107        %INCLUDE P_PMDAT_R;
     1368      415        /* */
     1369      416        %FMC$CACHE;
     1370      439        %FMC$TYPTBL;
     1371      444        /* */
     1372      445    1   DCL HFC$LOCK ENTRY(1);
     1373      446    1   DCL HFC$UNLOCK ENTRY(1);
     1374      447    1   DCL FMC$REMOVE ENTRY(1);
     1375      448    1   DCL MMJ$FIOP ENTRY(1);
     1376      449        /* */
     1377      450    1   DCL TYPE SBIN;
     1378      451    1   DCL FLINK SBIN;
     1379      452    1   DCL NEWFLINK SBIN;
     1380      453    1   DCL PP SBIN;
     1381      454    1   DCL I SBIN ;
     1382      455        /**/
     1383      456    1          PAGES_RELEASED = 0;

    456  0 000002   200005 470500                    LDP0    @PAGES_RELEASED,,AUTO
         0 000003   000000 450100                    STZ     0,,PR0

     1384      457    1          CALL HFC$LOCK(FMC_LOCK);

    457  0 000004   000000 630400 1                  EPPR0   0
         0 000005   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:321  
         0 000006   000000 701000 xent               TSX1    HFC$LOCK
         0 000007   000000 011000                    NOP     0

     1385      458    2          DO TYPE = 0 TO %CACHETYPES - 1;

    458  0 000010   200006 450100                    STZ     TYPE,,AUTO
         0 000011   000116 710000 0                  TRA     s:479+1

     1386      459    2             FLINK = FMC$TYPTBL.OLDEST(TYPE);

    459  0 000012   200006 235100                    LDA     TYPE,,AUTO
         0 000013   000001 735000                    ALS     1
         0 000014   000000 470400 xsym               LDP0    FMC_TYPTBL$
         0 000015   000000 235105                    LDA     0,AL,PR0
         0 000016   200007 755100                    STA     FLINK,,AUTO

     1387      460    3             DO WHILE (FLINK > 0);

    460  0 000017   000115 604400 0                  TMOZ    s:479

     1388      461    3               PP = FMC$CACHETBL.PAGE(FLINK);

    461  0 000020   200007 236100                    LDQ     FLINK,,AUTO
         0 000021   000006 402007                    MPY     6,DL
         0 000022   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000023   000002 236106                    LDQ     2,QL,PR0
         0 000024   000022 772000                    QRL     18
         0 000025   200011 756100                    STQ     PP,,AUTO

     1389      462    4               IF PP >= LOWER_PAGE AND PP <= UPPER_PAGE THEN DO;

    462  0 000026   200003 471500                    LDP1    @LOWER_PAGE,,AUTO
         0 000027   000106 604000 0                  TMI     s:477
         0 000030   100000 116100                    CMPQ    0,,PR1
         0 000031   000106 602000 0                  TNC     s:477
         0 000032   200004 473500                    LDP3    @UPPER_PAGE,,AUTO
         0 000033   000000 116003                    CMPQ    0,DU
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:322  
         0 000034   000040 604000 0                  TMI     s:463
         0 000035   300000 116100                    CMPQ    0,,PR3
         0 000036   000040 600000 0                  TZE     s:463
         0 000037   000106 603000 0                  TRC     s:477

     1390      463    4                  CALL FMC$REMOVE(FLINK);

    463  0 000040   200007 634500                    EPPR4   FLINK,,AUTO
         0 000041   200014 454500                    STP4    PP+3,,AUTO
         0 000042   200014 630500                    EPPR0   PP+3,,AUTO
         0 000043   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000044   000000 701000 xent               TSX1    FMC$REMOVE
         0 000045   000000 011000                    NOP     0

     1391      464    4                  CALL MMJ$FIOP(PP);

    464  0 000046   200011 630500                    EPPR0   PP,,AUTO
         0 000047   200014 450500                    STP0    PP+3,,AUTO
         0 000050   200014 630500                    EPPR0   PP+3,,AUTO
         0 000051   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000052   000000 701000 xent               TSX1    MMJ$FIOP
         0 000053   000000 011000                    NOP     0

     1392      465    4                  PAGES_RELEASED = PAGES_RELEASED+1;

    465  0 000054   200005 470500                    LDP0    @PAGES_RELEASED,,AUTO
         0 000055   000000 235100                    LDA     0,,PR0
         0 000056   000001 035007                    ADLA    1,DL
         0 000057   000000 755100                    STA     0,,PR0

     1393      466    4                  NEWFLINK = FMC$CACHETBL.FLINK(FLINK);

    466  0 000060   200007 236100                    LDQ     FLINK,,AUTO
         0 000061   000006 402007                    MPY     6,DL
         0 000062   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000063   100001 236106                    LDQ     1,QL,PR1
         0 000064   000022 772000                    QRL     18
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:323  
         0 000065   200010 756100                    STQ     NEWFLINK,,AUTO

     1394      467    4                  FMC$CACHETBL(FLINK) = '0'B;

    467  0 000066   200007 236100                    LDQ     FLINK,,AUTO
         0 000067   000030 402007                    MPY     24,DL
         0 000070   000106 100400                    MLR     fill='000'O
         0 000071   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000072   100000 000030                    ADSC9   0,Q,PR1                  cn=0,n=24

     1395      468                       %DEC_COUNTER(ITEM=IOCACHE);

    469  0 000073   000000 471400 xsym               LDP1    P_RESOURCE$
         0 000074   100055 235100                    LDA     45,,PR1
         0 000075   000001 135007                    SBLA    1,DL
         0 000076   100055 755100                    STA     45,,PR1

    470  0 000077   100055 236100                    LDQ     45,,PR1
         0 000100   100057 116100                    CMPQ    47,,PR1
         0 000101   000103 603000 0                  TRC     s:474

    472  0 000102   100057 756100                    STQ     47,,PR1

     1396      474    4                  FLINK = NEWFLINK;

    474  0 000103   200010 235100                    LDA     NEWFLINK,,AUTO
         0 000104   200007 755100                    STA     FLINK,,AUTO

     1397      475    4                  END;

    475  0 000105   000113 710000 0                  TRA     s:478

     1398      476    3               ELSE
     1399      477    3                  FLINK = FMC$CACHETBL.FLINK(FLINK);

    477  0 000106   200007 236100                    LDQ     FLINK,,AUTO
         0 000107   000006 402007                    MPY     6,DL
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:324  
         0 000110   000001 236106                    LDQ     1,QL,PR0
         0 000111   000022 772000                    QRL     18
         0 000112   200007 756100                    STQ     FLINK,,AUTO

     1400      478    3               END;

    478  0 000113   200007 235100                    LDA     FLINK,,AUTO
         0 000114   000020 605400 0                  TPNZ    s:461

     1401      479    2             END;

    479  0 000115   200006 054100                    AOS     TYPE,,AUTO
         0 000116   200006 235100                    LDA     TYPE,,AUTO
         0 000117   000012 115007                    CMPA    10,DL
         0 000120   000012 604400 0                  TMOZ    s:459

     1402      480    1          CALL HFC$UNLOCK(FMC_LOCK);

    480  0 000121   000000 630400 1                  EPPR0   0
         0 000122   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000123   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000124   000000 011000                    NOP     0

     1403      481    1          RETURN;

    481  0 000125   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 006000                                                    ....
     1404      482    1   END FMC$RELSCU;
     1405      483        %EOD;

PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:325  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$RELSCU.
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:326  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @LOWER_PAGE                5-0-0/w PTR         r     1 @PAGES_RELEASED
     4-0-0/w PTR         r     1 @UPPER_PAGE                7-0-0/w SBIN        r     1 FLINK
    *0-0-0/w UBIN        r     1 LOWER_PAGE                10-0-0/w SBIN        r     1 NEWFLINK
    *0-0-0/w UBIN        r     1 PAGES_RELEASED            11-0-0/w SBIN        r     1 PP
     6-0-0/w SBIN        r     1 TYPE                      *0-0-0/w UBIN        r     1 UPPER_PAGE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 FMC_CACHE$                 0-0-0/w PTR         r     1 FMC_CACHEPGCNT$
     0-0-0/b BIT (72)    r     1 FMC_LOCK                   0-0-0/w PTR         r     1 FMC_TYPTBL$
     0-0-0/w PTR         r     1 P_RESOURCE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(72)    r     1 FMC$TYPTBL(0:10)
     0-0-0/w STRC(2268)  r     1 P_RESOURCE


   Procedure FMC$RELSCU requires 86 words for executable code.
   Procedure FMC$RELSCU requires 14 words of local(AUTO) storage.
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:327  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:328  
          MINI XREF LISTING

FLINK
       451**DCL       459<<ASSIGN    460>>DOWHILE   461>>ASSIGN    463<>CALL      466>>ASSIGN    467>>ASSIGN
       474<<ASSIGN    477<<ASSIGN    477>>ASSIGN
FMC$CACHETBL
       418**DCL       467<<ASSIGN
FMC$CACHETBL.FLINK
       424**DCL       466>>ASSIGN    477>>ASSIGN
FMC$CACHETBL.PAGE
       426**DCL       461>>ASSIGN
FMC$REMOVE
       447**DCL-ENT   463--CALL
FMC$TYPTBL.OLDEST
       441**DCL       459>>ASSIGN
FMC_CACHE$
        28**DCL       418--IMP-PTR   461>>ASSIGN    466>>ASSIGN    467>>ASSIGN    477>>ASSIGN
FMC_CACHEPGCNT$
        29**DCL        29--IMP-PTR    29--REDEF
FMC_LOCK
        30**DCL       457<>CALL      480<>CALL
FMC_TYPTBL$
        28**DCL       440--IMP-PTR   459>>ASSIGN
HFC$LOCK
       445**DCL-ENT   457--CALL
HFC$UNLOCK
       446**DCL-ENT   480--CALL
LOWER_PAGE
        17**DCL        15--PROC      462>>IF
MMJ$FIOP
       448**DCL-ENT   464--CALL
NEWFLINK
       452**DCL       466<<ASSIGN    474>>ASSIGN
PAGES_RELEASED
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:329  
        19**DCL        15--PROC      456<<ASSIGN    465<<ASSIGN    465>>ASSIGN
PP
       453**DCL       461<<ASSIGN    462>>IF        462>>IF        464<>CALL
P_NSCPU
       395**DCL       396--REDEF
P_RESOURCE.RES
       268**DCL       335--REDEF
P_RESOURCE.RES.IOCACHE.CURRENT
       297**DCL       469<<ASSIGN    469>>ASSIGN    470>>IF        472>>ASSIGN
P_RESOURCE.RES.IOCACHE.MIN
       299**DCL       470>>IF        472<<ASSIGN
P_RESOURCE$
       348**DCL       236--IMP-PTR   469>>ASSIGN    469>>ASSIGN    470>>IF        470>>IF        472>>ASSIGN
       472>>ASSIGN
P_UPTIME
       384**DCL       385--REDEF
TYPE
       450**DCL       458<<DOINDEX   459>>ASSIGN
UPPER_PAGE
        18**DCL        15--PROC      462>>IF
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:330  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:331  
              MINI UREF LISTING

FMC$CACHEPGCNT      29**DCL
FMC$RELSCU      15**PROC
FMC_CACHEPGCNT      29**DCL
FMC_CACHEPGCNT$R      29**DCL
FMC_CACHESIZ      28**DCL
FMC_CACHESIZN      28**DCL
FMC_LIMITS     106**DCL
FMC_MASK      30**DCL
FMC_MASKTBL      30**DCL
FMC_STATS$      28**DCL
FM_WRCMP     106**DCL
I     454**DCL
NI_IOLEAPERS     106**DCL
P$IODATA     349**DCL
P$TABLE     358**DCL
PH_CPU_MOUSED     413**DCL
PH_JIT_ENTRY     409**DCL
PH_MOUSE_ENTRY     405**DCL
PH_MOUSE_LOCK     412**DCL
PH_MOUSE_USERS     402**DCL
PH_MOUSE_USER_NUMBER     414**DCL
PH_MUS_PAGES     404**DCL
P_AUIS     390**DCL
P_AVAIL_MEM     397**DCL
P_AVGAVAIL_MEM     398**DCL
P_AVGETMF     387**DCL
P_AVGIOL     389**DCL
P_AVGRT90     386**DCL
P_CALCNT     374**DCL
P_CALCOMP     375**DCL
P_DCTXMAX     391**DCL
P_ETMF     368**DCL
PL6.E3A0      #010=FMC$RELSCU File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:41 Page:332  
P_GATE     394**DCL
P_IOLOAD     388**DCL
P_IOS     383**DCL
P_NINTS     369**DCL
P_NOW     393**DCL
P_NSCPU_SBIN     396**DCL
P_RT90     370**DCL
P_RUE#     366**DCL
P_SCHD#     367**DCL
P_STARTUP     371**DCL
P_STOPTIME     392**DCL
P_S_MIDLTIME     379**DCL
P_S_MIDLWIO     380**DCL
P_S_MIDLWRES     381**DCL
P_S_MIDLWRESIO     382**DCL
P_S_MXEQTIME     378**DCL
P_S_USRVTIME     377**DCL
P_S_UXEQTIME     376**DCL
P_UPTIME_SBIN     385**DCL
P_USRVTIME     373**DCL
P_UXEQTIME     372**DCL
WORD_     403**DCL

PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:333  
     1406        1        /*T***********************************************************/
     1407        2        /*T*                                                         */
     1408        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1409        4        /*T*                                                         */
     1410        5        /*T***********************************************************/
     1411        6        /*D*     NAME:     FMC$RELPG
     1412        7                 PURPOSE:  To free one or more pages of memory at the
     1413        8                           request of memory management.
     1414        9                 DESCRIPTION:
     1415       10                      First we loop once through the type table to release
     1416       11                 any pages that have expired.
     1417       12
     1418       13                      If we haven't freed anything, then we will try to
     1419       14                 free the "most expired" page.  Loop through the type table
     1420       15                 again, looking at the oldest entries, remembering which
     1421       16                 one is "most expired".  Then free that page.
     1422       17        */
     1423       18                 %EJECT;
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:334  
     1424       19        FMC$RELPG: PROC ALTRET;
     1425       20               %INCLUDE FM_CACHE_R;
     1426       32               %INCLUDE FM_CACHE_C;
     1427       98               %INCLUDE FM_CNTRL_R;
     1428      107               %INCLUDE P_PMDAT_R;
     1429      415        /* */
     1430      416               %FMC$CACHE;
     1431      439               %FMC$TYPTBL;
     1432      444        /* */
     1433      445    1          DCL SSS$SYSTIME ENTRY(1);
     1434      446    1          DCL FMC$REMOVE ENTRY(1);
     1435      447    1          DCL MMJ$FIOP ENTRY(1);
     1436      448        /* */
     1437      449    1          DCL N SBIN;
     1438      450    1          DCL TYPE SBIN;
     1439      451    1          DCL FLINK SBIN;
     1440      452    1          DCL NEWFLINK SBIN;
     1441      453    1          DCL CURTIME UBIN;
     1442      454    1          DCL PP SBIN;
     1443      455    1          DCL I SBIN;
     1444      456    1          DCL J SBIN;
     1445      457    1          DCL OLDEXP SBIN;
     1446      458    1          DCL NEWEXP SBIN;
     1447      459        /* */
     1448      460    1          N=0;
     1449      461    1          CALL SSS$SYSTIME(CURTIME);
     1450      462               /*FMC$RELPG is called with FMC_LOCK locked, and leaves with it locked*/
     1451      463
     1452      464    2          DO TYPE=0 TO %CACHETYPES-1;
     1453      465    2             FLINK=FMC$TYPTBL.OLDEST(TYPE);
     1454      466    3             DO WHILE(FLINK > 0);
     1455      467    3                IF CURTIME-FMC$CACHETBL.AGE(FLINK) > FMC_LIMITS.EXPIRE(TYPE) THEN
     1456      468    4                   DO;   /* FREE ENTRY */
     1457      469    4                   CALL FMC$REMOVE(FLINK);
     1458      470    4                   PP=FMC$CACHETBL.PAGE(FLINK);
     1459      471    4                   CALL MMJ$FIOP(PP);
     1460      472    4                   N=N+1;
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:335  
     1461      473    4                   NEWFLINK=FMC$CACHETBL.FLINK(FLINK);
     1462      474    4                   FMC$CACHETBL(FLINK)='0'B;
     1463      475                        %DEC_COUNTER(ITEM=IOCACHE);
     1464      481    4                   FLINK=NEWFLINK;
     1465      482    4                   END;  /* FREE ENTRY */
     1466      483    3                ELSE
     1467      484    3                   FLINK=-1;
     1468      485    3             END;  /* WHILE */
     1469      486    2          END;  /* DO TYPE */
     1470      487
     1471      488    1          IF N = 0 THEN
     1472      489    2             DO;  /* FREE "MOST EXPIRED" PAGE */
     1473      490    2             N=-1;
     1474      491    2             OLDEXP=0;
     1475      492    3             DO I=0 TO %CACHETYPES-1;
     1476      493    3                J=FMC$TYPTBL.OLDEST(I);
     1477      494    3                IF J > 0 THEN
     1478      495    4                   DO;   /* CHECK FOR OLDEST */
     1479      496    4                   NEWEXP=CURTIME-FMC$CACHETBL.AGE(J)-FMC_LIMITS.EXPIRE(I);
     1480      497    4                   IF N < 0 OR (NEWEXP > OLDEXP) THEN
     1481      498    5                      DO;   /* OLDEST */
     1482      499    5                      N=J;
     1483      500    5                      OLDEXP=NEWEXP;
     1484      501    5                      END;  /* OLDEST */
     1485      502    4                   END;  /* CHECK FOR OLDEST */
     1486      503    3             END;  /* DO I */
     1487      504    2             CALL FMC$REMOVE(N);
     1488      505    2             PP=FMC$CACHETBL.PAGE(N);
     1489      506    2             CALL MMJ$FIOP(PP);
     1490      507    2             FMC$CACHETBL(N)='0'B;
     1491      508                  %DEC_COUNTER(ITEM=IOCACHE);
     1492      514    2             END;  /* FREE "MOST EXPIRED" PAGE */
     1493      515
     1494      516    1          RETURN;
     1495      517    1          END FMC$RELPG;
     1496      518               %EOD;

PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:336  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$RELPG.

   Procedure FMC$RELPG requires 143 words for executable code.
   Procedure FMC$RELPG requires 16 words of local(AUTO) storage.

PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:337  

 Object Unit name= FMC$RELPG                                  File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:42:00.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   143    217  FMC$RELPG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  FMC$RELPG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 SSS$SYSTIME
         yes           Std       1 FMC$REMOVE
         yes           Std       1 MMJ$FIOP
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHE$                            FMC_TYPTBL$                           FMC_CACHEPGCNT$
     FMC_LIMITS                            P_RESOURCE$                           P_UPTIME
     P_NSCPU                               B_VECTNIL
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:338  


     1406        1        /*T***********************************************************/
     1407        2        /*T*                                                         */
     1408        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1409        4        /*T*                                                         */
     1410        5        /*T***********************************************************/
     1411        6        /*D*     NAME:     FMC$RELPG
     1412        7                 PURPOSE:  To free one or more pages of memory at the
     1413        8                           request of memory management.
     1414        9                 DESCRIPTION:
     1415       10                      First we loop once through the type table to release
     1416       11                 any pages that have expired.
     1417       12
     1418       13                      If we haven't freed anything, then we will try to
     1419       14                 free the "most expired" page.  Loop through the type table
     1420       15                 again, looking at the oldest entries, remembering which
     1421       16                 one is "most expired".  Then free that page.
     1422       17        */
     1423       18                 %EJECT;
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:339  
     1424       19        FMC$RELPG: PROC ALTRET;

     19  0 000000   000000 700200 xent  FMC$RELPG    TSX0  ! X66_AUTO_0
         0 000001   000020 000000                    ZERO    16,0

     1425       20               %INCLUDE FM_CACHE_R;
     1426       32               %INCLUDE FM_CACHE_C;
     1427       98               %INCLUDE FM_CNTRL_R;
     1428      107               %INCLUDE P_PMDAT_R;
     1429      415        /* */
     1430      416               %FMC$CACHE;
     1431      439               %FMC$TYPTBL;
     1432      444        /* */
     1433      445    1          DCL SSS$SYSTIME ENTRY(1);
     1434      446    1          DCL FMC$REMOVE ENTRY(1);
     1435      447    1          DCL MMJ$FIOP ENTRY(1);
     1436      448        /* */
     1437      449    1          DCL N SBIN;
     1438      450    1          DCL TYPE SBIN;
     1439      451    1          DCL FLINK SBIN;
     1440      452    1          DCL NEWFLINK SBIN;
     1441      453    1          DCL CURTIME UBIN;
     1442      454    1          DCL PP SBIN;
     1443      455    1          DCL I SBIN;
     1444      456    1          DCL J SBIN;
     1445      457    1          DCL OLDEXP SBIN;
     1446      458    1          DCL NEWEXP SBIN;
     1447      459        /* */
     1448      460    1          N=0;

    460  0 000002   200003 450100                    STZ     N,,AUTO

     1449      461    1          CALL SSS$SYSTIME(CURTIME);

    461  0 000003   200007 630500                    EPPR0   CURTIME,,AUTO
         0 000004   200016 450500                    STP0    NEWEXP+2,,AUTO
         0 000005   200016 630500                    EPPR0   NEWEXP+2,,AUTO
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:340  
         0 000006   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000007   000000 701000 xent               TSX1    SSS$SYSTIME
         0 000010   000000 011000                    NOP     0

     1450      462               /*FMC$RELPG is called with FMC_LOCK locked, and leaves with it locked*/
     1451      463
     1452      464    2          DO TYPE=0 TO %CACHETYPES-1;

    464  0 000011   200004 450100                    STZ     TYPE,,AUTO
         0 000012   000111 710000 0                  TRA     s:486+1

     1453      465    2             FLINK=FMC$TYPTBL.OLDEST(TYPE);

    465  0 000013   200004 235100                    LDA     TYPE,,AUTO
         0 000014   000001 735000                    ALS     1
         0 000015   000000 470400 xsym               LDP0    FMC_TYPTBL$
         0 000016   000000 235105                    LDA     0,AL,PR0
         0 000017   200005 755100                    STA     FLINK,,AUTO

     1454      466    3             DO WHILE(FLINK > 0);

    466  0 000020   000110 604400 0                  TMOZ    s:486

     1455      467    3                IF CURTIME-FMC$CACHETBL.AGE(FLINK) > FMC_LIMITS.EXPIRE(TYPE) THEN

    467  0 000021   200005 236100                    LDQ     FLINK,,AUTO
         0 000022   000006 402007                    MPY     6,DL
         0 000023   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000024   000000 620006                    EAX0    0,QL
         0 000025   200007 236100                    LDQ     CURTIME,,AUTO
         0 000026   000005 136110                    SBLQ    5,X0,PR0
         0 000027   200004 235100                    LDA     TYPE,,AUTO
         0 000030   000001 735000                    ALS     1
         0 000031   000000 116005 xsym               CMPQ    FMC_LIMITS,AL
         0 000032   000104 604400 0                  TMOZ    s:484

     1456      468    4                   DO;   /* FREE ENTRY */
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:341  

     1457      469    4                   CALL FMC$REMOVE(FLINK);

    469  0 000033   200005 631500                    EPPR1   FLINK,,AUTO
         0 000034   200016 451500                    STP1    NEWEXP+2,,AUTO
         0 000035   200016 630500                    EPPR0   NEWEXP+2,,AUTO
         0 000036   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000037   000000 701000 xent               TSX1    FMC$REMOVE
         0 000040   000000 011000                    NOP     0

     1458      470    4                   PP=FMC$CACHETBL.PAGE(FLINK);

    470  0 000041   200005 236100                    LDQ     FLINK,,AUTO
         0 000042   000006 402007                    MPY     6,DL
         0 000043   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000044   000002 236106                    LDQ     2,QL,PR0
         0 000045   000022 772000                    QRL     18
         0 000046   200010 756100                    STQ     PP,,AUTO

     1459      471    4                   CALL MMJ$FIOP(PP);

    471  0 000047   200010 631500                    EPPR1   PP,,AUTO
         0 000050   200016 451500                    STP1    NEWEXP+2,,AUTO
         0 000051   200016 630500                    EPPR0   NEWEXP+2,,AUTO
         0 000052   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000053   000000 701000 xent               TSX1    MMJ$FIOP
         0 000054   000000 011000                    NOP     0

     1460      472    4                   N=N+1;

    472  0 000055   200003 054100                    AOS     N,,AUTO

     1461      473    4                   NEWFLINK=FMC$CACHETBL.FLINK(FLINK);

    473  0 000056   200005 236100                    LDQ     FLINK,,AUTO
         0 000057   000006 402007                    MPY     6,DL
         0 000060   000000 470400 xsym               LDP0    FMC_CACHE$
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:342  
         0 000061   000001 236106                    LDQ     1,QL,PR0
         0 000062   000022 772000                    QRL     18
         0 000063   200006 756100                    STQ     NEWFLINK,,AUTO

     1462      474    4                   FMC$CACHETBL(FLINK)='0'B;

    474  0 000064   200005 236100                    LDQ     FLINK,,AUTO
         0 000065   000030 402007                    MPY     24,DL
         0 000066   000106 100400                    MLR     fill='000'O
         0 000067   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000070   000000 000030                    ADSC9   0,Q,PR0                  cn=0,n=24

     1463      475                        %DEC_COUNTER(ITEM=IOCACHE);

    476  0 000071   000000 470400 xsym               LDP0    P_RESOURCE$
         0 000072   000055 235100                    LDA     45,,PR0
         0 000073   000001 135007                    SBLA    1,DL
         0 000074   000055 755100                    STA     45,,PR0

    477  0 000075   000055 236100                    LDQ     45,,PR0
         0 000076   000057 116100                    CMPQ    47,,PR0
         0 000077   000101 603000 0                  TRC     s:481

    479  0 000100   000057 756100                    STQ     47,,PR0

     1464      481    4                   FLINK=NEWFLINK;

    481  0 000101   200006 235100                    LDA     NEWFLINK,,AUTO
         0 000102   200005 755100                    STA     FLINK,,AUTO

     1465      482    4                   END;  /* FREE ENTRY */

    482  0 000103   000106 710000 0                  TRA     s:485

     1466      483    3                ELSE
     1467      484    3                   FLINK=-1;

PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:343  
    484  0 000104   000001 336007                    LCQ     1,DL
         0 000105   200005 756100                    STQ     FLINK,,AUTO

     1468      485    3             END;  /* WHILE */

    485  0 000106   200005 235100                    LDA     FLINK,,AUTO
         0 000107   000021 605400 0                  TPNZ    s:467

     1469      486    2          END;  /* DO TYPE */

    486  0 000110   200004 054100                    AOS     TYPE,,AUTO
         0 000111   200004 235100                    LDA     TYPE,,AUTO
         0 000112   000012 115007                    CMPA    10,DL
         0 000113   000013 604400 0                  TMOZ    s:465

     1470      487
     1471      488    1          IF N = 0 THEN

    488  0 000114   200003 236100                    LDQ     N,,AUTO
         0 000115   000216 601000 0                  TNZ     s:516

     1472      489    2             DO;  /* FREE "MOST EXPIRED" PAGE */

     1473      490    2             N=-1;

    490  0 000116   000001 335007                    LCA     1,DL
         0 000117   200003 755100                    STA     N,,AUTO

     1474      491    2             OLDEXP=0;

    491  0 000120   200013 450100                    STZ     OLDEXP,,AUTO

     1475      492    3             DO I=0 TO %CACHETYPES-1;

    492  0 000121   200011 450100                    STZ     I,,AUTO
         0 000122   000153 710000 0                  TRA     s:503+1

PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:344  
     1476      493    3                J=FMC$TYPTBL.OLDEST(I);

    493  0 000123   200011 235100                    LDA     I,,AUTO
         0 000124   000001 735000                    ALS     1
         0 000125   000000 470400 xsym               LDP0    FMC_TYPTBL$
         0 000126   000000 235105                    LDA     0,AL,PR0
         0 000127   200012 755100                    STA     J,,AUTO

     1477      494    3                IF J > 0 THEN

    494  0 000130   000152 604400 0                  TMOZ    s:503

     1478      495    4                   DO;   /* CHECK FOR OLDEST */

     1479      496    4                   NEWEXP=CURTIME-FMC$CACHETBL.AGE(J)-FMC_LIMITS.EXPIRE(I);

    496  0 000131   200012 236100                    LDQ     J,,AUTO
         0 000132   000006 402007                    MPY     6,DL
         0 000133   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000134   000000 620006                    EAX0    0,QL
         0 000135   200007 236100                    LDQ     CURTIME,,AUTO
         0 000136   100005 136110                    SBLQ    5,X0,PR1
         0 000137   200011 235100                    LDA     I,,AUTO
         0 000140   000001 735000                    ALS     1
         0 000141   000000 136005 xsym               SBLQ    FMC_LIMITS,AL
         0 000142   200014 756100                    STQ     NEWEXP,,AUTO

     1480      497    4                   IF N < 0 OR (NEWEXP > OLDEXP) THEN

    497  0 000143   200003 235100                    LDA     N,,AUTO
         0 000144   000147 604000 0                  TMI     s:499
         0 000145   200013 116100                    CMPQ    OLDEXP,,AUTO
         0 000146   000152 604400 0                  TMOZ    s:503

     1481      498    5                      DO;   /* OLDEST */

     1482      499    5                      N=J;
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:345  

    499  0 000147   200012 235100                    LDA     J,,AUTO
         0 000150   200003 755100                    STA     N,,AUTO

     1483      500    5                      OLDEXP=NEWEXP;

    500  0 000151   200013 756100                    STQ     OLDEXP,,AUTO

     1484      501    5                      END;  /* OLDEST */

     1485      502    4                   END;  /* CHECK FOR OLDEST */

     1486      503    3             END;  /* DO I */

    503  0 000152   200011 054100                    AOS     I,,AUTO
         0 000153   200011 235100                    LDA     I,,AUTO
         0 000154   000012 115007                    CMPA    10,DL
         0 000155   000123 604400 0                  TMOZ    s:493

     1487      504    2             CALL FMC$REMOVE(N);

    504  0 000156   200003 630500                    EPPR0   N,,AUTO
         0 000157   200016 450500                    STP0    NEWEXP+2,,AUTO
         0 000160   200016 630500                    EPPR0   NEWEXP+2,,AUTO
         0 000161   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000162   000000 701000 xent               TSX1    FMC$REMOVE
         0 000163   000000 011000                    NOP     0

     1488      505    2             PP=FMC$CACHETBL.PAGE(N);

    505  0 000164   200003 236100                    LDQ     N,,AUTO
         0 000165   000006 402007                    MPY     6,DL
         0 000166   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000167   000002 236106                    LDQ     2,QL,PR0
         0 000170   000022 772000                    QRL     18
         0 000171   200010 756100                    STQ     PP,,AUTO

PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:346  
     1489      506    2             CALL MMJ$FIOP(PP);

    506  0 000172   200010 631500                    EPPR1   PP,,AUTO
         0 000173   200016 451500                    STP1    NEWEXP+2,,AUTO
         0 000174   200016 630500                    EPPR0   NEWEXP+2,,AUTO
         0 000175   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000176   000000 701000 xent               TSX1    MMJ$FIOP
         0 000177   000000 011000                    NOP     0

     1490      507    2             FMC$CACHETBL(N)='0'B;

    507  0 000200   200003 236100                    LDQ     N,,AUTO
         0 000201   000030 402007                    MPY     24,DL
         0 000202   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000203   000106 100400                    MLR     fill='000'O
         0 000204   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000205   000000 000030                    ADSC9   0,Q,PR0                  cn=0,n=24

     1491      508                  %DEC_COUNTER(ITEM=IOCACHE);

    509  0 000206   000000 470400 xsym               LDP0    P_RESOURCE$
         0 000207   000055 235100                    LDA     45,,PR0
         0 000210   000001 135007                    SBLA    1,DL
         0 000211   000055 755100                    STA     45,,PR0

    510  0 000212   000055 236100                    LDQ     45,,PR0
         0 000213   000057 116100                    CMPQ    47,,PR0
         0 000214   000216 603000 0                  TRC     s:516

    512  0 000215   000057 756100                    STQ     47,,PR0

     1492      514    2             END;  /* FREE "MOST EXPIRED" PAGE */

     1493      515
     1494      516    1          RETURN;

    516  0 000216   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:347  
     1495      517    1          END FMC$RELPG;
     1496      518               %EOD;

PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:348  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$RELPG.
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:349  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w UBIN        r     1 CURTIME                    5-0-0/w SBIN        r     1 FLINK
    11-0-0/w SBIN        r     1 I                         12-0-0/w SBIN        r     1 J
     3-0-0/w SBIN        r     1 N                         14-0-0/w SBIN        r     1 NEWEXP
     6-0-0/w SBIN        r     1 NEWFLINK                  13-0-0/w SBIN        r     1 OLDEXP
    10-0-0/w SBIN        r     1 PP                         4-0-0/w SBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 FMC_CACHE$                 0-0-0/w PTR         r     1 FMC_CACHEPGCNT$
     0-0-0/w STRC(72)    r     1 FMC_LIMITS(0:8191)
     0-0-0/w PTR         r     1 FMC_TYPTBL$                0-0-0/w PTR         r     1 P_RESOURCE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(72)    r     1 FMC$TYPTBL(0:10)
     0-0-0/w STRC(2268)  r     1 P_RESOURCE


   Procedure FMC$RELPG requires 143 words for executable code.
   Procedure FMC$RELPG requires 16 words of local(AUTO) storage.
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:350  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:351  
          MINI XREF LISTING

CURTIME
       453**DCL       461<>CALL      467>>IF        496>>ASSIGN
FLINK
       451**DCL       465<<ASSIGN    466>>DOWHILE   467>>IF        469<>CALL      470>>ASSIGN    473>>ASSIGN
       474>>ASSIGN    481<<ASSIGN    484<<ASSIGN
FMC$CACHETBL
       418**DCL       474<<ASSIGN    507<<ASSIGN
FMC$CACHETBL.AGE
       437**DCL       467>>IF        496>>ASSIGN
FMC$CACHETBL.FLINK
       424**DCL       473>>ASSIGN
FMC$CACHETBL.PAGE
       426**DCL       470>>ASSIGN    505>>ASSIGN
FMC$REMOVE
       446**DCL-ENT   469--CALL      504--CALL
FMC$TYPTBL.OLDEST
       441**DCL       465>>ASSIGN    493>>ASSIGN
FMC_CACHE$
        28**DCL       418--IMP-PTR   467>>IF        470>>ASSIGN    473>>ASSIGN    474>>ASSIGN    496>>ASSIGN
       505>>ASSIGN    507>>ASSIGN
FMC_CACHEPGCNT$
        29**DCL        29--IMP-PTR    29--REDEF
FMC_LIMITS.EXPIRE
       106**DCL       467>>IF        496>>ASSIGN
FMC_TYPTBL$
        28**DCL       440--IMP-PTR   465>>ASSIGN    493>>ASSIGN
I
       455**DCL       492<<DOINDEX   493>>ASSIGN    496>>ASSIGN
J
       456**DCL       493<<ASSIGN    494>>IF        496>>ASSIGN    499>>ASSIGN
MMJ$FIOP
       447**DCL-ENT   471--CALL      506--CALL
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:352  
N
       449**DCL       460<<ASSIGN    472<<ASSIGN    472>>ASSIGN    488>>IF        490<<ASSIGN    497>>IF
       499<<ASSIGN    504<>CALL      505>>ASSIGN    507>>ASSIGN
NEWEXP
       458**DCL       496<<ASSIGN    497>>IF        500>>ASSIGN
NEWFLINK
       452**DCL       473<<ASSIGN    481>>ASSIGN
OLDEXP
       457**DCL       491<<ASSIGN    497>>IF        500<<ASSIGN
PP
       454**DCL       470<<ASSIGN    471<>CALL      505<<ASSIGN    506<>CALL
P_NSCPU
       395**DCL       396--REDEF
P_RESOURCE.RES
       268**DCL       335--REDEF
P_RESOURCE.RES.IOCACHE.CURRENT
       297**DCL       476<<ASSIGN    476>>ASSIGN    477>>IF        479>>ASSIGN    509<<ASSIGN    509>>ASSIGN
       510>>IF        512>>ASSIGN
P_RESOURCE.RES.IOCACHE.MIN
       299**DCL       477>>IF        479<<ASSIGN    510>>IF        512<<ASSIGN
P_RESOURCE$
       348**DCL       236--IMP-PTR   476>>ASSIGN    476>>ASSIGN    477>>IF        477>>IF        479>>ASSIGN
       479>>ASSIGN    509>>ASSIGN    509>>ASSIGN    510>>IF        510>>IF        512>>ASSIGN    512>>ASSIGN
P_UPTIME
       384**DCL       385--REDEF
SSS$SYSTIME
       445**DCL-ENT   461--CALL
TYPE
       450**DCL       464<<DOINDEX   465>>ASSIGN    467>>IF
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:353  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:354  
              MINI UREF LISTING

FMC$CACHEPGCNT      29**DCL
FMC$RELPG      19**PROC
FMC_CACHEPGCNT      29**DCL
FMC_CACHEPGCNT$R      29**DCL
FMC_CACHESIZ      28**DCL
FMC_CACHESIZN      28**DCL
FMC_LOCK      30**DCL
FMC_MASK      30**DCL
FMC_MASKTBL      30**DCL
FMC_STATS$      28**DCL
FM_WRCMP     106**DCL
NI_IOLEAPERS     106**DCL
P$IODATA     349**DCL
P$TABLE     358**DCL
PH_CPU_MOUSED     413**DCL
PH_JIT_ENTRY     409**DCL
PH_MOUSE_ENTRY     405**DCL
PH_MOUSE_LOCK     412**DCL
PH_MOUSE_USERS     402**DCL
PH_MOUSE_USER_NUMBER     414**DCL
PH_MUS_PAGES     404**DCL
P_AUIS     390**DCL
P_AVAIL_MEM     397**DCL
P_AVGAVAIL_MEM     398**DCL
P_AVGETMF     387**DCL
P_AVGIOL     389**DCL
P_AVGRT90     386**DCL
P_CALCNT     374**DCL
P_CALCOMP     375**DCL
P_DCTXMAX     391**DCL
P_ETMF     368**DCL
P_GATE     394**DCL
PL6.E3A0      #011=FMC$RELPG File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:355  
P_IOLOAD     388**DCL
P_IOS     383**DCL
P_NINTS     369**DCL
P_NOW     393**DCL
P_NSCPU_SBIN     396**DCL
P_RT90     370**DCL
P_RUE#     366**DCL
P_SCHD#     367**DCL
P_STARTUP     371**DCL
P_STOPTIME     392**DCL
P_S_MIDLTIME     379**DCL
P_S_MIDLWIO     380**DCL
P_S_MIDLWRES     381**DCL
P_S_MIDLWRESIO     382**DCL
P_S_MXEQTIME     378**DCL
P_S_USRVTIME     377**DCL
P_S_UXEQTIME     376**DCL
P_UPTIME_SBIN     385**DCL
P_USRVTIME     373**DCL
P_UXEQTIME     372**DCL
WORD_     403**DCL

PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:356  
     1497        1        /*T***********************************************************/
     1498        2        /*T*                                                         */
     1499        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1500        4        /*T*                                                         */
     1501        5        /*T***********************************************************/
     1502        6        /*D*     NAME:     FMC$RELSET
     1503        7                 PURPOSE:  To free any cache pages associated with the
     1504        8                           specified set.
     1505        9                 INPUT:    SETX - setx of the set we want to free pages for
     1506       10                 DESCRIPTION:
     1507       11                      Make a long loop through the cache table, looking at
     1508       12                 each entry to see of the setx matches.  If it does, then
     1509       13                 free it.  If there are still users on it, then we have
     1510       14                 a problem.
     1511       15        */
     1512       16                 %EJECT;
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:357  
     1513       17        FMC$RELSET: PROC(SETX) ALTRET;
     1514       18    1          DCL SETX SBIN;
     1515       19        /* */
     1516       20               %INCLUDE FM_CACHE_R;
     1517       32               %INCLUDE FM_CACHE_C;
     1518       98               %INCLUDE HF_LOCK_C;
     1519      112               %INCLUDE P_PMDAT_R;
     1520      420        /* */
     1521      421               %FMC$CACHE;
     1522      444        /* */
     1523      445    1          DCL FMC$REMOVE ENTRY(1);
     1524      446    1          DCL MMJ$FIOP ENTRY(1);
     1525      447        /* */
     1526      448    1          DCL I SBIN;
     1527      449    1          DCL PP SBIN;
     1528      450        /* */
     1529      451    1          IF FMC_CACHESIZ = 0 THEN
     1530      452    1             RETURN;
     1531      453
     1532      454               %LOCK(G=FMC_LOCK);
     1533      457    2          DO I=1 TO FMC_CACHESIZ;
     1534      458    2             IF FMC$CACHETBL.SETX(I) = SETX THEN
     1535      459    3                DO;   /* FOUND A SETX */
     1536      460    3                IF FMC$CACHETBL.USECNT(I) ~= 0 OR FMC$CACHETBL.FLAGS.BUFUP(I) THEN
     1537      461    3                   FMC$CACHETBL.FLAGS.ERR(I)='1'B;
     1538      462    3                ELSE
     1539      463    4                   DO;   /* RELEASE THE ENTRY */
     1540      464    4                   CALL FMC$REMOVE(I);
     1541      465    4                   PP=FMC$CACHETBL.PAGE(I);
     1542      466    4                   CALL MMJ$FIOP(PP);
     1543      467    4                   FMC$CACHETBL(I)='0'B;
     1544      468                        %DEC_COUNTER(ITEM=IOCACHE);
     1545      474    4                   END;  /* RELEASE THE ENTRY */
     1546      475    3                END;  /* FOUND A SETX */
     1547      476    2          END;  /* DO I */
     1548      477               %UNLOCK(G=FMC_LOCK);
     1549      480
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:358  
     1550      481    1          RETURN;
     1551      482    1          END FMC$RELSET;
     1552      483               %EOD;

PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:359  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$RELSET.

   Procedure FMC$RELSET requires 74 words for executable code.
   Procedure FMC$RELSET requires 8 words of local(AUTO) storage.

PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:360  

 Object Unit name= FMC$RELSET                                 File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:42:08.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    74    112  FMC$RELSET
    1  RoData even  none     1      1  FMC$RELSET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  FMC$RELSET

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 FMC$REMOVE
         yes           Std       1 MMJ$FIOP
         yes           Std       1 HFC$UNLOCK
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:361  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHE$                            FMC_CACHESIZ                          FMC_CACHEPGCNT$
     FMC_LOCK                              P_RESOURCE$                           P_UPTIME
     P_NSCPU                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:362  


     1497        1        /*T***********************************************************/
     1498        2        /*T*                                                         */
     1499        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1500        4        /*T*                                                         */
     1501        5        /*T***********************************************************/
     1502        6        /*D*     NAME:     FMC$RELSET
     1503        7                 PURPOSE:  To free any cache pages associated with the
     1504        8                           specified set.
     1505        9                 INPUT:    SETX - setx of the set we want to free pages for
     1506       10                 DESCRIPTION:
     1507       11                      Make a long loop through the cache table, looking at
     1508       12                 each entry to see of the setx matches.  If it does, then
     1509       13                 free it.  If there are still users on it, then we have
     1510       14                 a problem.
     1511       15        */
     1512       16                 %EJECT;
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:363  
     1513       17        FMC$RELSET: PROC(SETX) ALTRET;

     17  0 000000   000000 700200 xent  FMC$RELSET   TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

     1514       18    1          DCL SETX SBIN;
     1515       19        /* */
     1516       20               %INCLUDE FM_CACHE_R;
     1517       32               %INCLUDE FM_CACHE_C;
     1518       98               %INCLUDE HF_LOCK_C;
     1519      112               %INCLUDE P_PMDAT_R;
     1520      420        /* */
     1521      421               %FMC$CACHE;
     1522      444        /* */
     1523      445    1          DCL FMC$REMOVE ENTRY(1);
     1524      446    1          DCL MMJ$FIOP ENTRY(1);
     1525      447        /* */
     1526      448    1          DCL I SBIN;
     1527      449    1          DCL PP SBIN;
     1528      450        /* */
     1529      451    1          IF FMC_CACHESIZ = 0 THEN

    451  0 000002   000000 235000 xsym               LDA     FMC_CACHESIZ
         0 000003   000005 601000 0                  TNZ     s:455

     1530      452    1             RETURN;

    452  0 000004   000000 702200 xent               TSX2  ! X66_ARET

     1531      453
     1532      454               %LOCK(G=FMC_LOCK);

    455  0 000005   000000 630400 1                  EPPR0   0
         0 000006   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000007   000000 701000 xent               TSX1    HFC$LOCK
         0 000010   000000 011000                    NOP     0

PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:364  
     1533      457    2          DO I=1 TO FMC_CACHESIZ;

    457  0 000011   000001 235007                    LDA     1,DL
         0 000012   200004 755100                    STA     I,,AUTO
         0 000013   000102 710000 0                  TRA     s:476+1

     1534      458    2             IF FMC$CACHETBL.SETX(I) = SETX THEN

    458  0 000014   200003 470500                    LDP0    @SETX,,AUTO
         0 000015   200004 236100                    LDQ     I,,AUTO
         0 000016   000006 402007                    MPY     6,DL
         0 000017   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000020   100004 236106                    LDQ     4,QL,PR1
         0 000021   000022 772000                    QRL     18
         0 000022   000000 116100                    CMPQ    0,,PR0
         0 000023   000101 601000 0                  TNZ     s:476

     1535      459    3                DO;   /* FOUND A SETX */

     1536      460    3                IF FMC$CACHETBL.USECNT(I) ~= 0 OR FMC$CACHETBL.FLAGS.BUFUP(I) THEN

    460  0 000024   200004 236100                    LDQ     I,,AUTO
         0 000025   000006 402007                    MPY     6,DL
         0 000026   100002 720106                    LXL0    2,QL,PR1
         0 000027   000033 601000 0                  TNZ     s:461
         0 000030   100004 236106                    LDQ     4,QL,PR1
         0 000031   000001 316007                    CANQ    1,DL
         0 000032   000041 600000 0                  TZE     s:464

     1537      461    3                   FMC$CACHETBL.FLAGS.ERR(I)='1'B;

    461  0 000033   200004 236100                    LDQ     I,,AUTO
         0 000034   000006 402007                    MPY     6,DL
         0 000035   000000 620006                    EAX0    0,QL
         0 000036   000002 236007                    LDQ     2,DL
         0 000037   100004 256110                    ORSQ    4,X0,PR1
         0 000040   000101 710000 0                  TRA     s:476
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:365  

     1538      462    3                ELSE
     1539      463    4                   DO;   /* RELEASE THE ENTRY */

     1540      464    4                   CALL FMC$REMOVE(I);

    464  0 000041   200004 633500                    EPPR3   I,,AUTO
         0 000042   200006 453500                    STP3    PP+1,,AUTO
         0 000043   200006 630500                    EPPR0   PP+1,,AUTO
         0 000044   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000045   000000 701000 xent               TSX1    FMC$REMOVE
         0 000046   000000 011000                    NOP     0

     1541      465    4                   PP=FMC$CACHETBL.PAGE(I);

    465  0 000047   200004 236100                    LDQ     I,,AUTO
         0 000050   000006 402007                    MPY     6,DL
         0 000051   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000052   000002 236106                    LDQ     2,QL,PR0
         0 000053   000022 772000                    QRL     18
         0 000054   200005 756100                    STQ     PP,,AUTO

     1542      466    4                   CALL MMJ$FIOP(PP);

    466  0 000055   200005 631500                    EPPR1   PP,,AUTO
         0 000056   200006 451500                    STP1    PP+1,,AUTO
         0 000057   200006 630500                    EPPR0   PP+1,,AUTO
         0 000060   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000061   000000 701000 xent               TSX1    MMJ$FIOP
         0 000062   000000 011000                    NOP     0

     1543      467    4                   FMC$CACHETBL(I)='0'B;

    467  0 000063   200004 236100                    LDQ     I,,AUTO
         0 000064   000030 402007                    MPY     24,DL
         0 000065   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000066   000106 100400                    MLR     fill='000'O
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:366  
         0 000067   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000070   000000 000030                    ADSC9   0,Q,PR0                  cn=0,n=24

     1544      468                        %DEC_COUNTER(ITEM=IOCACHE);

    469  0 000071   000000 470400 xsym               LDP0    P_RESOURCE$
         0 000072   000055 235100                    LDA     45,,PR0
         0 000073   000001 135007                    SBLA    1,DL
         0 000074   000055 755100                    STA     45,,PR0

    470  0 000075   000055 236100                    LDQ     45,,PR0
         0 000076   000057 116100                    CMPQ    47,,PR0
         0 000077   000101 603000 0                  TRC     s:476

    472  0 000100   000057 756100                    STQ     47,,PR0

     1545      474    4                   END;  /* RELEASE THE ENTRY */

     1546      475    3                END;  /* FOUND A SETX */

     1547      476    2          END;  /* DO I */

    476  0 000101   200004 054100                    AOS     I,,AUTO
         0 000102   200004 236100                    LDQ     I,,AUTO
         0 000103   000000 116000 xsym               CMPQ    FMC_CACHESIZ
         0 000104   000014 604400 0                  TMOZ    s:458

     1548      477               %UNLOCK(G=FMC_LOCK);

    478  0 000105   000000 630400 1                  EPPR0   0
         0 000106   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000107   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000110   000000 011000                    NOP     0

     1549      480
     1550      481    1          RETURN;

PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:367  
    481  0 000111   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 006000                                                    ....
     1551      482    1          END FMC$RELSET;
     1552      483               %EOD;

PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:368  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$RELSET.
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:369  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SETX                      4-0-0/w SBIN        r     1 I
     5-0-0/w SBIN        r     1 PP                        *0-0-0/w SBIN        r     1 SETX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 FMC_CACHE$                 0-0-0/w PTR         r     1 FMC_CACHEPGCNT$
     0-0-0/w SBIN        r     1 FMC_CACHESIZ               0-0-0/b BIT (72)    r     1 FMC_LOCK
     0-0-0/w PTR         r     1 P_RESOURCE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(2268)  r     1 P_RESOURCE


   Procedure FMC$RELSET requires 74 words for executable code.
   Procedure FMC$RELSET requires 8 words of local(AUTO) storage.
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:370  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:371  
          MINI XREF LISTING

FMC$CACHETBL
       423**DCL       467<<ASSIGN
FMC$CACHETBL.FLAGS.BUFUP
       441**DCL       460>>IF
FMC$CACHETBL.FLAGS.ERR
       440**DCL       461<<ASSIGN
FMC$CACHETBL.PAGE
       431**DCL       465>>ASSIGN
FMC$CACHETBL.SETX
       434**DCL       458>>IF
FMC$CACHETBL.USECNT
       432**DCL       460>>IF
FMC$REMOVE
       445**DCL-ENT   464--CALL
FMC_CACHE$
        28**DCL       423--IMP-PTR   458>>IF        460>>IF        460>>IF        461>>ASSIGN    465>>ASSIGN
       467>>ASSIGN
FMC_CACHEPGCNT$
        29**DCL        29--IMP-PTR    29--REDEF
FMC_CACHESIZ
        28**DCL       451>>IF        457>>DOINDEX
FMC_LOCK
        30**DCL       455<>CALL      478<>CALL
HFC$LOCK
       111**DCL-ENT   455--CALL
HFC$UNLOCK
       111**DCL-ENT   478--CALL
I
       448**DCL       457<<DOINDEX   458>>IF        460>>IF        460>>IF        461>>ASSIGN    464<>CALL
       465>>ASSIGN    467>>ASSIGN
MMJ$FIOP
       446**DCL-ENT   466--CALL
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:372  
PP
       449**DCL       465<<ASSIGN    466<>CALL
P_NSCPU
       400**DCL       401--REDEF
P_RESOURCE.RES
       273**DCL       340--REDEF
P_RESOURCE.RES.IOCACHE.CURRENT
       302**DCL       469<<ASSIGN    469>>ASSIGN    470>>IF        472>>ASSIGN
P_RESOURCE.RES.IOCACHE.MIN
       304**DCL       470>>IF        472<<ASSIGN
P_RESOURCE$
       353**DCL       241--IMP-PTR   469>>ASSIGN    469>>ASSIGN    470>>IF        470>>IF        472>>ASSIGN
       472>>ASSIGN
P_UPTIME
       389**DCL       390--REDEF
SETX
        18**DCL        17--PROC      458>>IF
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:373  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:374  
              MINI UREF LISTING

FMC$CACHEPGCNT      29**DCL
FMC$RELSET      17**PROC
FMC_CACHEPGCNT      29**DCL
FMC_CACHEPGCNT$R      29**DCL
FMC_CACHESIZN      28**DCL
FMC_MASK      30**DCL
FMC_MASKTBL      30**DCL
FMC_STATS$      28**DCL
FMC_TYPTBL$      28**DCL
P$IODATA     354**DCL
P$TABLE     363**DCL
PH_CPU_MOUSED     418**DCL
PH_JIT_ENTRY     414**DCL
PH_MOUSE_ENTRY     410**DCL
PH_MOUSE_LOCK     417**DCL
PH_MOUSE_USERS     407**DCL
PH_MOUSE_USER_NUMBER     419**DCL
PH_MUS_PAGES     409**DCL
P_AUIS     395**DCL
P_AVAIL_MEM     402**DCL
P_AVGAVAIL_MEM     403**DCL
P_AVGETMF     392**DCL
P_AVGIOL     394**DCL
P_AVGRT90     391**DCL
P_CALCNT     379**DCL
P_CALCOMP     380**DCL
P_DCTXMAX     396**DCL
P_ETMF     373**DCL
P_GATE     399**DCL
P_IOLOAD     393**DCL
P_IOS     388**DCL
P_NINTS     374**DCL
PL6.E3A0      #012=FMC$RELSET File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:375  
P_NOW     398**DCL
P_NSCPU_SBIN     401**DCL
P_RT90     375**DCL
P_RUE#     371**DCL
P_SCHD#     372**DCL
P_STARTUP     376**DCL
P_STOPTIME     397**DCL
P_S_MIDLTIME     384**DCL
P_S_MIDLWIO     385**DCL
P_S_MIDLWRES     386**DCL
P_S_MIDLWRESIO     387**DCL
P_S_MXEQTIME     383**DCL
P_S_USRVTIME     382**DCL
P_S_UXEQTIME     381**DCL
P_UPTIME_SBIN     390**DCL
P_USRVTIME     378**DCL
P_UXEQTIME     377**DCL
WORD_     408**DCL

PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:376  
     1553        1        /*T***********************************************************/
     1554        2        /*T*                                                         */
     1555        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1556        4        /*T*                                                         */
     1557        5        /*T***********************************************************/
     1558        6        /*D*     NAME:     FMC$REMOVE
     1559        7                 PURPOSE:  To remove an entry from the linked list.
     1560        8                 INPUT:    HASH - Entry we want to remove
     1561        9                 DESCRIPTION:
     1562       10                      When we remove an entry it could be out of the
     1563       11                 middle of a list, so make sure the FLINKs and BLINKs
     1564       12                 if the surrounding entries point to the right place.
     1565       13                 Also, make sure that the type table oldest and newest
     1566       14                 are pointing to the right place.  Finally, decrement
     1567       15                 the cache page count.
     1568       16        */
     1569       17                 %EJECT;
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:377  
     1570       18        FMC$REMOVE: PROC(HASH);
     1571       19    1          DCL HASH SBIN;
     1572       20        /* */
     1573       21               %INCLUDE FM_CACHE_R;
     1574       33               %INCLUDE FM_CACHE_C;
     1575       99        /* */
     1576      100               %FMC$CACHE;
     1577      123               %FMC$TYPTBL;
     1578      128               %FMC$STATS;
     1579      137        /* */
     1580      138    1          DCL SC_FMC96 ENTRY CONV(2, 0);
     1581      139        /* */
     1582      140    1          DCL TYPE SBIN;
     1583      141    1          DCL FLINK SBIN;
     1584      142    1          DCL BLINK SBIN;
     1585      143        /* */
     1586      144    1          TYPE=FMC$CACHETBL.TYPE(HASH);
     1587      145    1          BLINK=FMC$TYPTBL.NEWEST(TYPE);
     1588      146    1          FLINK=FMC$TYPTBL.OLDEST(TYPE);
     1589      147    1          IF BLINK ~= 0 THEN
     1590      148    1             IF TYPE ~= FMC$CACHETBL.TYPE(BLINK) THEN
     1591      149    1                CALL SC_FMC96;
     1592      150    1          IF FLINK ~= 0 THEN
     1593      151    1             IF TYPE ~= FMC$CACHETBL.TYPE(FLINK) THEN
     1594      152    1                CALL SC_FMC96;
     1595      153
     1596      154    1          FLINK=FMC$CACHETBL.FLINK(HASH);
     1597      155    1          BLINK=FMC$CACHETBL.BLINK(HASH);
     1598      156
     1599      157    1          IF BLINK ~= 0 THEN
     1600      158    1             IF TYPE ~= FMC$CACHETBL.TYPE(BLINK) THEN
     1601      159    1                CALL SC_FMC96;
     1602      160    1          IF FLINK ~= 0 THEN
     1603      161    1             IF TYPE ~= FMC$CACHETBL.TYPE(FLINK) THEN
     1604      162    1                CALL SC_FMC96;
     1605      163
     1606      164    1          FMC$CACHETBL.BLINK(FLINK)=BLINK;
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:378  
     1607      165
     1608      166    1          FMC$CACHETBL.FLINK(BLINK)=FLINK;
     1609      167
     1610      168    1          IF HASH = FMC$TYPTBL.OLDEST(TYPE) THEN
     1611      169    1             FMC$TYPTBL.OLDEST(TYPE)=FLINK;
     1612      170
     1613      171    1          IF HASH = FMC$TYPTBL.NEWEST(TYPE) THEN
     1614      172    1             FMC$TYPTBL.NEWEST(TYPE)=BLINK;
     1615      173
     1616      174    1          FMC$CACHETBL.FLINK(HASH)=0;
     1617      175    1          FMC$CACHETBL.BLINK(HASH)=0;
     1618      176
     1619      177    1          FMC$CACHEPGCNT=FMC$CACHEPGCNT-1;
     1620      178    1          FMC$STATS.UNUSED(TYPE)=FMC$STATS.UNUSED(TYPE)-1;
     1621      179
     1622      180    1          RETURN;
     1623      181    1          END FMC$REMOVE;
     1624      182               %EOD;

PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:379  
--  Include file information  --

   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$REMOVE.

   Procedure FMC$REMOVE requires 113 words for executable code.
   Procedure FMC$REMOVE requires 8 words of local(AUTO) storage.

PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:380  

 Object Unit name= FMC$REMOVE                                 File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:42:15.32 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   113    161  FMC$REMOVE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMC$REMOVE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_FMC96                              FMC_CACHE$                            FMC_TYPTBL$
     FMC_STATS$                            FMC_CACHEPGCNT$
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:381  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:382  


     1553        1        /*T***********************************************************/
     1554        2        /*T*                                                         */
     1555        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1556        4        /*T*                                                         */
     1557        5        /*T***********************************************************/
     1558        6        /*D*     NAME:     FMC$REMOVE
     1559        7                 PURPOSE:  To remove an entry from the linked list.
     1560        8                 INPUT:    HASH - Entry we want to remove
     1561        9                 DESCRIPTION:
     1562       10                      When we remove an entry it could be out of the
     1563       11                 middle of a list, so make sure the FLINKs and BLINKs
     1564       12                 if the surrounding entries point to the right place.
     1565       13                 Also, make sure that the type table oldest and newest
     1566       14                 are pointing to the right place.  Finally, decrement
     1567       15                 the cache page count.
     1568       16        */
     1569       17                 %EJECT;
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:383  
     1570       18        FMC$REMOVE: PROC(HASH);

     18  0 000000   000000 700200 xent  FMC$REMOVE   TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

     1571       19    1          DCL HASH SBIN;
     1572       20        /* */
     1573       21               %INCLUDE FM_CACHE_R;
     1574       33               %INCLUDE FM_CACHE_C;
     1575       99        /* */
     1576      100               %FMC$CACHE;
     1577      123               %FMC$TYPTBL;
     1578      128               %FMC$STATS;
     1579      137        /* */
     1580      138    1          DCL SC_FMC96 ENTRY CONV(2, 0);
     1581      139        /* */
     1582      140    1          DCL TYPE SBIN;
     1583      141    1          DCL FLINK SBIN;
     1584      142    1          DCL BLINK SBIN;
     1585      143        /* */
     1586      144    1          TYPE=FMC$CACHETBL.TYPE(HASH);

    144  0 000002   200003 470500                    LDP0    @HASH,,AUTO
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   000006 402007                    MPY     6,DL
         0 000005   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000006   100000 236106                    LDQ     0,QL,PR1
         0 000007   000033 772000                    QRL     27
         0 000010   200004 756100                    STQ     TYPE,,AUTO

     1587      145    1          BLINK=FMC$TYPTBL.NEWEST(TYPE);

    145  0 000011   200004 235100                    LDA     TYPE,,AUTO
         0 000012   000001 735000                    ALS     1
         0 000013   000000 473400 xsym               LDP3    FMC_TYPTBL$
         0 000014   300001 235105                    LDA     1,AL,PR3
         0 000015   200006 755100                    STA     BLINK,,AUTO
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:384  

     1588      146    1          FLINK=FMC$TYPTBL.OLDEST(TYPE);

    146  0 000016   200004 235100                    LDA     TYPE,,AUTO
         0 000017   000001 735000                    ALS     1
         0 000020   300000 235105                    LDA     0,AL,PR3
         0 000021   200005 755100                    STA     FLINK,,AUTO

     1589      147    1          IF BLINK ~= 0 THEN

    147  0 000022   200006 235100                    LDA     BLINK,,AUTO
         0 000023   000034 600000 0                  TZE     s:150

     1590      148    1             IF TYPE ~= FMC$CACHETBL.TYPE(BLINK) THEN

    148  0 000024   200006 236100                    LDQ     BLINK,,AUTO
         0 000025   000006 402007                    MPY     6,DL
         0 000026   100000 236106                    LDQ     0,QL,PR1
         0 000027   000033 772000                    QRL     27
         0 000030   200004 116100                    CMPQ    TYPE,,AUTO
         0 000031   000034 600000 0                  TZE     s:150

     1591      149    1                CALL SC_FMC96;

    149  0 000032   000000 713400 xsym               CLIMB   SC_FMC96
         0 000033   000000 600000 xsid               climb   nvectors=         0

     1592      150    1          IF FLINK ~= 0 THEN

    150  0 000034   200005 235100                    LDA     FLINK,,AUTO
         0 000035   000047 600000 0                  TZE     s:154

     1593      151    1             IF TYPE ~= FMC$CACHETBL.TYPE(FLINK) THEN

    151  0 000036   200005 236100                    LDQ     FLINK,,AUTO
         0 000037   000006 402007                    MPY     6,DL
         0 000040   000000 470400 xsym               LDP0    FMC_CACHE$
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:385  
         0 000041   000000 236106                    LDQ     0,QL,PR0
         0 000042   000033 772000                    QRL     27
         0 000043   200004 116100                    CMPQ    TYPE,,AUTO
         0 000044   000047 600000 0                  TZE     s:154

     1594      152    1                CALL SC_FMC96;

    152  0 000045   000000 713400 xsym               CLIMB   SC_FMC96
         0 000046   000000 600000 xsid               climb   nvectors=         0

     1595      153
     1596      154    1          FLINK=FMC$CACHETBL.FLINK(HASH);

    154  0 000047   200003 470500                    LDP0    @HASH,,AUTO
         0 000050   000000 236100                    LDQ     0,,PR0
         0 000051   000006 402007                    MPY     6,DL
         0 000052   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000053   100001 236106                    LDQ     1,QL,PR1
         0 000054   000022 772000                    QRL     18
         0 000055   200005 756100                    STQ     FLINK,,AUTO

     1597      155    1          BLINK=FMC$CACHETBL.BLINK(HASH);

    155  0 000056   000000 236100                    LDQ     0,,PR0
         0 000057   000006 402007                    MPY     6,DL
         0 000060   100001 236106                    LDQ     1,QL,PR1
         0 000061   777777 376007                    ANQ     -1,DL
         0 000062   200006 756100                    STQ     BLINK,,AUTO

     1598      156
     1599      157    1          IF BLINK ~= 0 THEN

    157  0 000063   000073 600000 0                  TZE     s:160

     1600      158    1             IF TYPE ~= FMC$CACHETBL.TYPE(BLINK) THEN

    158  0 000064   000006 402007                    MPY     6,DL
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:386  
         0 000065   100000 236106                    LDQ     0,QL,PR1
         0 000066   000033 772000                    QRL     27
         0 000067   200004 116100                    CMPQ    TYPE,,AUTO
         0 000070   000073 600000 0                  TZE     s:160

     1601      159    1                CALL SC_FMC96;

    159  0 000071   000000 713400 xsym               CLIMB   SC_FMC96
         0 000072   000000 600000 xsid               climb   nvectors=         0

     1602      160    1          IF FLINK ~= 0 THEN

    160  0 000073   200005 235100                    LDA     FLINK,,AUTO
         0 000074   000106 600000 0                  TZE     s:164

     1603      161    1             IF TYPE ~= FMC$CACHETBL.TYPE(FLINK) THEN

    161  0 000075   200005 236100                    LDQ     FLINK,,AUTO
         0 000076   000006 402007                    MPY     6,DL
         0 000077   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000100   000000 236106                    LDQ     0,QL,PR0
         0 000101   000033 772000                    QRL     27
         0 000102   200004 116100                    CMPQ    TYPE,,AUTO
         0 000103   000106 600000 0                  TZE     s:164

     1604      162    1                CALL SC_FMC96;

    162  0 000104   000000 713400 xsym               CLIMB   SC_FMC96
         0 000105   000000 600000 xsid               climb   nvectors=         0

     1605      163
     1606      164    1          FMC$CACHETBL.BLINK(FLINK)=BLINK;

    164  0 000106   200005 236100                    LDQ     FLINK,,AUTO
         0 000107   000006 402007                    MPY     6,DL
         0 000110   200006 720100                    LXL0    BLINK,,AUTO
         0 000111   000000 470400 xsym               LDP0    FMC_CACHE$
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:387  
         0 000112   000001 440106                    SXL0    1,QL,PR0

     1607      165
     1608      166    1          FMC$CACHETBL.FLINK(BLINK)=FLINK;

    166  0 000113   200006 236100                    LDQ     BLINK,,AUTO
         0 000114   000006 402007                    MPY     6,DL
         0 000115   200005 721100                    LXL1    FLINK,,AUTO
         0 000116   000000 470400 xsym               LDP0    FMC_CACHE$
         0 000117   000001 741106                    STX1    1,QL,PR0

     1609      167
     1610      168    1          IF HASH = FMC$TYPTBL.OLDEST(TYPE) THEN

    168  0 000120   200003 470500                    LDP0    @HASH,,AUTO
         0 000121   200004 235100                    LDA     TYPE,,AUTO
         0 000122   000001 735000                    ALS     1
         0 000123   000000 471400 xsym               LDP1    FMC_TYPTBL$
         0 000124   000000 236100                    LDQ     0,,PR0
         0 000125   000132 604000 0                  TMI     s:171
         0 000126   100000 116105                    CMPQ    0,AL,PR1
         0 000127   000132 601000 0                  TNZ     s:171

     1611      169    1             FMC$TYPTBL.OLDEST(TYPE)=FLINK;

    169  0 000130   200005 236100                    LDQ     FLINK,,AUTO
         0 000131   100000 756105                    STQ     0,AL,PR1

     1612      170
     1613      171    1          IF HASH = FMC$TYPTBL.NEWEST(TYPE) THEN

    171  0 000132   000000 471400 xsym               LDP1    FMC_TYPTBL$
         0 000133   000000 236100                    LDQ     0,,PR0
         0 000134   000141 604000 0                  TMI     s:174
         0 000135   100001 116105                    CMPQ    1,AL,PR1
         0 000136   000141 601000 0                  TNZ     s:174

PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:388  
     1614      172    1             FMC$TYPTBL.NEWEST(TYPE)=BLINK;

    172  0 000137   200006 236100                    LDQ     BLINK,,AUTO
         0 000140   100001 756105                    STQ     1,AL,PR1

     1615      173
     1616      174    1          FMC$CACHETBL.FLINK(HASH)=0;

    174  0 000141   000000 236100                    LDQ     0,,PR0
         0 000142   000006 402007                    MPY     6,DL
         0 000143   000000 222003                    LDX2    0,DU
         0 000144   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000145   100001 742106                    STX2    1,QL,PR1

     1617      175    1          FMC$CACHETBL.BLINK(HASH)=0;

    175  0 000146   000000 236100                    LDQ     0,,PR0
         0 000147   000006 402007                    MPY     6,DL
         0 000150   000000 471400 xsym               LDP1    FMC_CACHE$
         0 000151   100001 442106                    SXL2    1,QL,PR1

     1618      176
     1619      177    1          FMC$CACHEPGCNT=FMC$CACHEPGCNT-1;

    177  0 000152   000000 471400 xsym               LDP1    FMC_CACHEPGCNT$
         0 000153   000001 336007                    LCQ     1,DL
         0 000154   100000 056100                    ASQ     0,,PR1

     1620      178    1          FMC$STATS.UNUSED(TYPE)=FMC$STATS.UNUSED(TYPE)-1;

    178  0 000155   000000 471400 xsym               LDP1    FMC_STATS$
         0 000156   200004 723100                    LXL3    TYPE,,AUTO
         0 000157   100067 056113                    ASQ     55,X3,PR1

     1621      179
     1622      180    1          RETURN;

PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:389  
    180  0 000160   000000 702200 xent               TSX2  ! X66_ARET
     1623      181    1          END FMC$REMOVE;
     1624      182               %EOD;

PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:390  
--  Include file information  --

   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$REMOVE.
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:391  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @HASH                      6-0-0/w SBIN        r     1 BLINK
     5-0-0/w SBIN        r     1 FLINK                     *0-0-0/w SBIN        r     1 HASH
     4-0-0/w SBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 FMC_CACHE$                 0-0-0/w PTR         r     1 FMC_CACHEPGCNT$
     0-0-0/w PTR         r     1 FMC_STATS$                 0-0-0/w PTR         r     1 FMC_TYPTBL$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 FMC$CACHEPGCNT
     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(2376)  r     1 FMC$STATS
     0-0-0/w STRC(72)    r     1 FMC$TYPTBL(0:10)


   Procedure FMC$REMOVE requires 113 words for executable code.
   Procedure FMC$REMOVE requires 8 words of local(AUTO) storage.
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:392  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:393  
          MINI XREF LISTING

BLINK
       142**DCL       145<<ASSIGN    147>>IF        148>>IF        155<<ASSIGN    157>>IF        158>>IF
       164>>ASSIGN    166>>ASSIGN    172>>ASSIGN
FLINK
       141**DCL       146<<ASSIGN    150>>IF        151>>IF        154<<ASSIGN    160>>IF        161>>IF
       164>>ASSIGN    166>>ASSIGN    169>>ASSIGN
FMC$CACHEPGCNT
        30**DCL       177<<ASSIGN    177>>ASSIGN
FMC$CACHETBL.BLINK
       109**DCL       155>>ASSIGN    164<<ASSIGN    175<<ASSIGN
FMC$CACHETBL.FLINK
       108**DCL       154>>ASSIGN    166<<ASSIGN    174<<ASSIGN
FMC$CACHETBL.TYPE
       106**DCL       144>>ASSIGN    148>>IF        151>>IF        158>>IF        161>>IF
FMC$STATS.UNUSED
       135**DCL       178<<ASSIGN    178>>ASSIGN
FMC$TYPTBL.NEWEST
       126**DCL       145>>ASSIGN    171>>IF        172<<ASSIGN
FMC$TYPTBL.OLDEST
       125**DCL       146>>ASSIGN    168>>IF        169<<ASSIGN
FMC_CACHE$
        29**DCL       102--IMP-PTR   144>>ASSIGN    148>>IF        151>>IF        154>>ASSIGN    155>>ASSIGN
       158>>IF        161>>IF        164>>ASSIGN    166>>ASSIGN    174>>ASSIGN    175>>ASSIGN
FMC_CACHEPGCNT$
        30**DCL        30--IMP-PTR    30--REDEF     177>>ASSIGN    177>>ASSIGN
FMC_STATS$
        29**DCL       129--IMP-PTR   178>>ASSIGN    178>>ASSIGN
FMC_TYPTBL$
        29**DCL       124--IMP-PTR   145>>ASSIGN    146>>ASSIGN    168>>IF        169>>ASSIGN    171>>IF
       172>>ASSIGN
HASH
        19**DCL        18--PROC      144>>ASSIGN    154>>ASSIGN    155>>ASSIGN    168>>IF        171>>IF
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:394  
       174>>ASSIGN    175>>ASSIGN
SC_FMC96
       138**DCL-ENT   149--CALL      152--CALL      159--CALL      162--CALL
TYPE
       140**DCL       144<<ASSIGN    145>>ASSIGN    146>>ASSIGN    148>>IF        151>>IF        158>>IF
       161>>IF        168>>IF        169>>ASSIGN    171>>IF        172>>ASSIGN    178>>ASSIGN    178>>ASSIGN
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:395  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #013=FMC$REMOVE File=FMC$CACHE.:E05TSI                             TUE 07/29/97 16:42 Page:396  
              MINI UREF LISTING

FMC$REMOVE      18**PROC
FMC_CACHEPGCNT      30**DCL
FMC_CACHEPGCNT$R      30**DCL
FMC_CACHESIZ      29**DCL
FMC_CACHESIZN      29**DCL
FMC_LOCK      31**DCL
FMC_MASK      31**DCL
FMC_MASKTBL      31**DCL

PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:397  
     1625        1        /*T***********************************************************/
     1626        2        /*T*                                                         */
     1627        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1628        4        /*T*                                                         */
     1629        5        /*T***********************************************************/
     1630        6        /*D*     NAME:     FMC$STASH
     1631        7                 PURPOSE:  To try to cache a buffer page without affecting
     1632        8                           the user's map.
     1633        9                 INPUT:    BUFNUM - Buffer number
     1634       10
     1635       11                 DESCRIPTION:
     1636       12                      First, hash to a row, then call GETSLOT to try
     1637       13                 to find a slot for it.  If there is one, then call
     1638       14                 FBTOIOPM to change the file buffer to an I/O page
     1639       15                 without changing the map.  Then, set up the cache
     1640       16                 table entry, and return.
     1641       17        */
     1642       18               %EJECT;
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:398  
     1643       19        FMC$STASH: PROC(BUFNUM);
     1644       20    1          DCL BUFNUM SBIN;
     1645       21        /* */
     1646       22               %INCLUDE FM_CACHE_R;
     1647       34               %INCLUDE FM_CACHE_C;
     1648      100               %INCLUDE B$JIT;
     1649      703               %INCLUDE HF_LOCK_C;
     1650      717               %MACRO F$DCB(BASED=BASED);
     1651      718               %INCLUDE F$DCB;
     1652      767               %MEND;
     1653      768               %INCLUDE P_PMDAT_R;
     1654     1076        /* */
     1655     1077               %F$DCB(BASED="BASED(JDCB$)");
     1656     1127               %FMC$CACHE(FPTN=FMC$CACHE, ARRAY=NO, STCLASS="BASED(CACHE$)");
     1657     1150        /* */
     1658     1151    1          DCL FAF$FRTOSR ENTRY(3) ALTRET;
     1659     1152    1          DCL FMC$GETSLOT ENTRY(4) ALTRET;
     1660     1153    1          DCL FMC$GETTYPE ENTRY(1);
     1661     1154    1          DCL MMJ$FBTOIOPM ENTRY(2);
     1662     1155        /* */
     1663     1156    1          DCL B$JIT$ PTR SYMREF;
     1664     1157    1          DCL FM_SRZERO UBIN SYMREF;
     1665     1158        /* */
     1666     1159    1          DCL JDCB$ PTR;
     1667     1160    1          DCL DA UBIN;
     1668     1161    1          DCL SRDA UBIN;
     1669     1162    1          DCL CACHE$ PTR;
     1670     1163    1          DCL SETX UBIN;
     1671     1164    1          DCL GRANS SBIN;
     1672     1165    1          DCL TYPE SBIN;
     1673     1166    1          DCL HASH SBIN;
     1674     1167    1          DCL VPNO SBIN;
     1675     1168    1          DCL PP SBIN;
     1676     1169        /* */
     1677     1170    1          IF FMC_CACHESIZ = 0 THEN
     1678     1171    1             RETURN;
     1679     1172
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:399  
     1680     1173    1          JDCB$=B$JIT.DCB$;
     1681     1174    1          DA=F$DCB.BFR.DA(BUFNUM);
     1682     1175    1          IF DA < FM_SRZERO THEN
     1683     1176    1             CALL FAF$FRTOSR(DA, SRDA, GRANS) ALTRET(NOCACHE);
     1684     1177    1          ELSE
     1685     1178    1             SRDA=DA;
     1686     1179
     1687     1180    1          SETX=F$DCB.SETX;
     1688     1181    1          CALL FMC$GETTYPE(TYPE);
     1689     1182               %HASH;
     1690     1185               %LOCK(G=FMC_LOCK);
     1691     1188
     1692     1189    1          CALL FMC$GETSLOT(HASH, TYPE, SRDA, CACHE$) ALTRET(NOCACHE1);
     1693     1190
     1694     1191    1          VPNO=F$DCB.BFR.BUFX(BUFNUM);
     1695     1192    1          CALL MMJ$FBTOIOPM(VPNO, PP);
     1696     1193
     1697     1194    1          FMC$CACHE.SRDA=SRDA;
     1698     1195    1          FMC$CACHE.USECNT=1;
     1699     1196    1          FMC$CACHE.SETX=SETX;
     1700     1197    1          FMC$CACHE.PAGE=PP;
     1701     1198    1          FMC$CACHE.TYPE=TYPE;
     1702     1199               %INC_COUNTER(ITEM=IOCACHE);
     1703     1205
     1704     1206               %UNLOCK(G=FMC_LOCK);
     1705     1209    1          F$DCB.BFR1.CX(BUFNUM)=HASH;
     1706     1210
     1707     1211    1   NOCACHE: ;
     1708     1212    1          RETURN;
     1709     1213    1   NOCACHE1: ;
     1710     1214               %UNLOCK(G=FMC_LOCK);
     1711     1217    1          RETURN;
     1712     1218    1          END FMC$STASH;

PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:400  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$STASH.

   Procedure FMC$STASH requires 114 words for executable code.
   Procedure FMC$STASH requires 18 words of local(AUTO) storage.

    No errors detected in file FMC$CACHE.:E05TSI    .

PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:401  

 Object Unit name= FMC$STASH                                  File name= FMC$CACHE.:E05TOU
 UTS= JUL 29 '97 16:42:21.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   114    162  FMC$STASH
    1  RoData even  none     1      1  FMC$STASH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMC$STASH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 FAF$FRTOSR
         yes           Std       1 FMC$GETTYPE
 yes     yes           Std       4 FMC$GETSLOT
         yes           Std       1 HFC$UNLOCK
         yes           Std       1 HFC$LOCK
         yes           Std       2 MMJ$FBTOIOPM
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:402  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHESIZ                          FMC_CACHEPGCNT$                       FMC_LOCK
     FMC_MASK                              P_RESOURCE$                           P_UPTIME
     P_NSCPU                               B$JIT$                                FM_SRZERO
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:403  


     1625        1        /*T***********************************************************/
     1626        2        /*T*                                                         */
     1627        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1628        4        /*T*                                                         */
     1629        5        /*T***********************************************************/
     1630        6        /*D*     NAME:     FMC$STASH
     1631        7                 PURPOSE:  To try to cache a buffer page without affecting
     1632        8                           the user's map.
     1633        9                 INPUT:    BUFNUM - Buffer number
     1634       10
     1635       11                 DESCRIPTION:
     1636       12                      First, hash to a row, then call GETSLOT to try
     1637       13                 to find a slot for it.  If there is one, then call
     1638       14                 FBTOIOPM to change the file buffer to an I/O page
     1639       15                 without changing the map.  Then, set up the cache
     1640       16                 table entry, and return.
     1641       17        */
     1642       18               %EJECT;
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:404  
     1643       19        FMC$STASH: PROC(BUFNUM);

     19  0 000000   000000 700200 xent  FMC$STASH    TSX0  ! X66_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

     1644       20    1          DCL BUFNUM SBIN;
     1645       21        /* */
     1646       22               %INCLUDE FM_CACHE_R;
     1647       34               %INCLUDE FM_CACHE_C;
     1648      100               %INCLUDE B$JIT;
     1649      703               %INCLUDE HF_LOCK_C;
     1650      717               %MACRO F$DCB(BASED=BASED);
     1651      718               %INCLUDE F$DCB;
     1652      767               %MEND;
     1653      768               %INCLUDE P_PMDAT_R;
     1654     1076        /* */
     1655     1077               %F$DCB(BASED="BASED(JDCB$)");
     1656     1127               %FMC$CACHE(FPTN=FMC$CACHE, ARRAY=NO, STCLASS="BASED(CACHE$)");
     1657     1150        /* */
     1658     1151    1          DCL FAF$FRTOSR ENTRY(3) ALTRET;
     1659     1152    1          DCL FMC$GETSLOT ENTRY(4) ALTRET;
     1660     1153    1          DCL FMC$GETTYPE ENTRY(1);
     1661     1154    1          DCL MMJ$FBTOIOPM ENTRY(2);
     1662     1155        /* */
     1663     1156    1          DCL B$JIT$ PTR SYMREF;
     1664     1157    1          DCL FM_SRZERO UBIN SYMREF;
     1665     1158        /* */
     1666     1159    1          DCL JDCB$ PTR;
     1667     1160    1          DCL DA UBIN;
     1668     1161    1          DCL SRDA UBIN;
     1669     1162    1          DCL CACHE$ PTR;
     1670     1163    1          DCL SETX UBIN;
     1671     1164    1          DCL GRANS SBIN;
     1672     1165    1          DCL TYPE SBIN;
     1673     1166    1          DCL HASH SBIN;
     1674     1167    1          DCL VPNO SBIN;
     1675     1168    1          DCL PP SBIN;
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:405  
     1676     1169        /* */
     1677     1170    1          IF FMC_CACHESIZ = 0 THEN

   1170  0 000002   000000 235000 xsym               LDA     FMC_CACHESIZ
         0 000003   000005 601000 0                  TNZ     s:1173

     1678     1171    1             RETURN;

   1171  0 000004   000000 702200 xent               TSX2  ! X66_ARET

     1679     1172
     1680     1173    1          JDCB$=B$JIT.DCB$;

   1173  0 000005   000000 470400 xsym               LDP0    B$JIT$
         0 000006   000232 236100                    LDQ     154,,PR0
         0 000007   200004 756100                    STQ     JDCB$,,AUTO

     1681     1174    1          DA=F$DCB.BFR.DA(BUFNUM);

   1174  0 000010   200003 471500                    LDP1    @BUFNUM,,AUTO
         0 000011   100000 235100                    LDA     0,,PR1
         0 000012   200004 473500                    LDP3    JDCB$,,AUTO
         0 000013   300115 236105                    LDQ     77,AL,PR3
         0 000014   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000015   200005 756100                    STQ     DA,,AUTO

     1682     1175    1          IF DA < FM_SRZERO THEN

   1175  0 000016   000000 116000 xsym               CMPQ    FM_SRZERO
         0 000017   000033 603000 0                  TRC     s:1178

     1683     1176    1             CALL FAF$FRTOSR(DA, SRDA, GRANS) ALTRET(NOCACHE);

   1176  0 000020   200011 634500                    EPPR4   GRANS,,AUTO
         0 000021   200020 454500                    STP4    PP+3,,AUTO
         0 000022   200006 635500                    EPPR5   SRDA,,AUTO
         0 000023   200017 455500                    STP5    PP+2,,AUTO
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:406  
         0 000024   200005 636500                    EPPR6   DA,,AUTO
         0 000025   200016 456500                    STP6    PP+1,,AUTO
         0 000026   200016 630500                    EPPR0   PP+1,,AUTO
         0 000027   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000030   000000 701000 xent               TSX1    FAF$FRTOSR
         0 000031   000154 702000 0                  TSX2    NOCACHE
         0 000032   000034 710000 0                  TRA     s:1180

     1684     1177    1          ELSE
     1685     1178    1             SRDA=DA;

   1178  0 000033   200006 756100                    STQ     SRDA,,AUTO

     1686     1179
     1687     1180    1          SETX=F$DCB.SETX;

   1180  0 000034   200004 470500                    LDP0    JDCB$,,AUTO
         0 000035   000051 236100                    LDQ     41,,PR0
         0 000036   777777 376007                    ANQ     -1,DL
         0 000037   200010 756100                    STQ     SETX,,AUTO

     1688     1181    1          CALL FMC$GETTYPE(TYPE);

   1181  0 000040   200012 631500                    EPPR1   TYPE,,AUTO
         0 000041   200016 451500                    STP1    PP+1,,AUTO
         0 000042   200016 630500                    EPPR0   PP+1,,AUTO
         0 000043   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000044   000000 701000 xent               TSX1    FMC$GETTYPE
         0 000045   000000 011000                    NOP     0

     1689     1182               %HASH;

   1183  0 000046   200006 236100                    LDQ     SRDA,,AUTO
         0 000047   200010 036100                    ADLQ    SETX,,AUTO
         0 000050   000000 376000 xsym               ANQ     FMC_MASK
         0 000051   000002 736000                    QLS     2
         0 000052   000001 036007                    ADLQ    1,DL
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:407  
         0 000053   200013 756100                    STQ     HASH,,AUTO

     1690     1185               %LOCK(G=FMC_LOCK);

   1186  0 000054   000000 630400 1                  EPPR0   0
         0 000055   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000056   000000 701000 xent               TSX1    HFC$LOCK
         0 000057   000000 011000                    NOP     0

     1691     1188
     1692     1189    1          CALL FMC$GETSLOT(HASH, TYPE, SRDA, CACHE$) ALTRET(NOCACHE1);

   1189  0 000060   200007 630500                    EPPR0   CACHE$,,AUTO
         0 000061   200021 450500                    STP0    PP+4,,AUTO
         0 000062   200006 631500                    EPPR1   SRDA,,AUTO
         0 000063   200020 451500                    STP1    PP+3,,AUTO
         0 000064   200012 633500                    EPPR3   TYPE,,AUTO
         0 000065   200017 453500                    STP3    PP+2,,AUTO
         0 000066   200013 634500                    EPPR4   HASH,,AUTO
         0 000067   200016 454500                    STP4    PP+1,,AUTO
         0 000070   200016 630500                    EPPR0   PP+1,,AUTO
         0 000071   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000072   000000 701000 xent               TSX1    FMC$GETSLOT
         0 000073   000155 702000 0                  TSX2    NOCACHE1

     1693     1190
     1694     1191    1          VPNO=F$DCB.BFR.BUFX(BUFNUM);

   1191  0 000074   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000075   000000 235100                    LDA     0,,PR0
         0 000076   200004 471500                    LDP1    JDCB$,,AUTO
         0 000077   100115 236105                    LDQ     77,AL,PR1
         0 000100   000033 772000                    QRL     27
         0 000101   000037 376007                    ANQ     31,DL
         0 000102   200014 756100                    STQ     VPNO,,AUTO

     1695     1192    1          CALL MMJ$FBTOIOPM(VPNO, PP);
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:408  

   1192  0 000103   200015 633500                    EPPR3   PP,,AUTO
         0 000104   200017 453500                    STP3    PP+2,,AUTO
         0 000105   200014 634500                    EPPR4   VPNO,,AUTO
         0 000106   200016 454500                    STP4    PP+1,,AUTO
         0 000107   200016 630500                    EPPR0   PP+1,,AUTO
         0 000110   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000111   000000 701000 xent               TSX1    MMJ$FBTOIOPM
         0 000112   000000 011000                    NOP     0

     1696     1193
     1697     1194    1          FMC$CACHE.SRDA=SRDA;

   1194  0 000113   200007 470500                    LDP0    CACHE$,,AUTO
         0 000114   200006 236100                    LDQ     SRDA,,AUTO
         0 000115   000000 552134                    STBQ    0,'34'O,PR0

     1698     1195    1          FMC$CACHE.USECNT=1;

   1195  0 000116   000001 220003                    LDX0    1,DU
         0 000117   200007 470500                    LDP0    CACHE$,,AUTO
         0 000120   000002 440100                    SXL0    2,,PR0

     1699     1196    1          FMC$CACHE.SETX=SETX;

   1196  0 000121   200010 721100                    LXL1    SETX,,AUTO
         0 000122   200007 470500                    LDP0    CACHE$,,AUTO
         0 000123   000004 741100                    STX1    4,,PR0

     1700     1197    1          FMC$CACHE.PAGE=PP;

   1197  0 000124   200015 722100                    LXL2    PP,,AUTO
         0 000125   200007 470500                    LDP0    CACHE$,,AUTO
         0 000126   000002 742100                    STX2    2,,PR0

     1701     1198    1          FMC$CACHE.TYPE=TYPE;

PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:409  
   1198  0 000127   200007 470500                    LDP0    CACHE$,,AUTO
         0 000130   200012 236100                    LDQ     TYPE,,AUTO
         0 000131   000033 736000                    QLS     27
         0 000132   000000 552140                    STBQ    0,'40'O,PR0

     1702     1199               %INC_COUNTER(ITEM=IOCACHE);

   1200  0 000133   000000 470400 xsym               LDP0    P_RESOURCE$
         0 000134   000055 235100                    LDA     45,,PR0
         0 000135   000001 035007                    ADLA    1,DL
         0 000136   000055 755100                    STA     45,,PR0

   1201  0 000137   000056 236100                    LDQ     46,,PR0
         0 000140   000055 116100                    CMPQ    45,,PR0
         0 000141   000143 603000 0                  TRC     s:1207

   1203  0 000142   000056 755100                    STA     46,,PR0

     1703     1205
     1704     1206               %UNLOCK(G=FMC_LOCK);

   1207  0 000143   000000 630400 1                  EPPR0   0
         0 000144   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000145   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000146   000000 011000                    NOP     0

     1705     1209    1          F$DCB.BFR1.CX(BUFNUM)=HASH;

   1209  0 000147   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000150   000000 235100                    LDA     0,,PR0
         0 000151   200013 720100                    LXL0    HASH,,AUTO
         0 000152   200004 471500                    LDP1    JDCB$,,AUTO
         0 000153   100122 440105                    SXL0    82,AL,PR1

   1209  0 000154                       NOCACHE      null
     1706     1210
     1707     1211    1   NOCACHE: ;
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:410  
     1708     1212    1          RETURN;

   1212  0 000154   000000 702200 xent               TSX2  ! X66_ARET

   1209  0 000155                       NOCACHE1     null
     1709     1213    1   NOCACHE1: ;
     1710     1214               %UNLOCK(G=FMC_LOCK);

   1215  0 000155   000000 630400 1                  EPPR0   0
         0 000156   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000157   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000160   000000 011000                    NOP     0

     1711     1217    1          RETURN;

   1217  0 000161   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 006000                                                    ....
     1712     1218    1          END FMC$STASH;

PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:411  
--  Include file information  --

   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMC$STASH.
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:412  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUFNUM                   *0-0-0/w SBIN        r     1 BUFNUM
     7-0-0/w PTR         r     1 CACHE$                     5-0-0/w UBIN        r     1 DA
    11-0-0/w SBIN        r     1 GRANS                     13-0-0/w SBIN        r     1 HASH
     4-0-0/w PTR         r     1 JDCB$                     15-0-0/w SBIN        r     1 PP
    10-0-0/w UBIN        r     1 SETX                       6-0-0/w UBIN        r     1 SRDA
    12-0-0/w SBIN        r     1 TYPE                      14-0-0/w SBIN        r     1 VPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FMC_CACHEPGCNT$
     0-0-0/w SBIN        r     1 FMC_CACHESIZ               0-0-0/b BIT (72)    r     1 FMC_LOCK
     0-0-0/b BIT         r     1 FMC_MASK                   0-0-0/w UBIN        r     1 FM_SRZERO
     0-0-0/w PTR         r     1 P_RESOURCE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(216)   r     1 FMC$CACHE                  0-0-0/w STRC(2268)  r     1 P_RESOURCE


   Procedure FMC$STASH requires 114 words for executable code.
   Procedure FMC$STASH requires 18 words of local(AUTO) storage.
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:413  

    No errors detected in file FMC$CACHE.:E05TSI    .
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:414  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:415  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       521**DCL       521--REDEF
B$JIT.DCB$
       595**DCL      1173>>ASSIGN
B$JIT.ERR.MID
       428**DCL       428--REDEF
B$JIT.JRESPEAK
       589**DCL       590--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       698**DCL       698--REDEF     699--REDEF
B$JIT.PNR
       602**DCL       602--REDEF
B$JIT.TSLINE
       696**DCL       697--REDEF
B$JIT$
      1156**DCL       422--IMP-PTR  1173>>ASSIGN
BUFNUM
        20**DCL        19--PROC     1174>>ASSIGN   1191>>ASSIGN   1209>>ASSIGN
CACHE$
      1162**DCL      1131--IMP-PTR  1189<>CALL     1194>>ASSIGN   1195>>ASSIGN   1196>>ASSIGN   1197>>ASSIGN
      1198>>ASSIGN
DA
      1160**DCL      1174<<ASSIGN   1175>>IF       1176<>CALL     1178>>ASSIGN
F$DCB.ACTPOS
      1103**DCL      1103--REDEF
F$DCB.ARS
      1078**DCL      1078--REDEF
F$DCB.ATTR
      1096**DCL      1097--REDEF
F$DCB.BFR.BUFX
      1123**DCL      1191>>ASSIGN
F$DCB.BFR.DA
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:416  
      1123**DCL      1174>>ASSIGN
F$DCB.BFR1.CX
      1124**DCL      1209<<ASSIGN
F$DCB.BORROW
      1111**DCL      1111--REDEF    1111--REDEF    1111--REDEF
F$DCB.DCBNAME.L
      1125**DCL      1125--IMP-SIZ
F$DCB.EOMCHAR
      1082**DCL      1082--REDEF
F$DCB.FLDID
      1106**DCL      1106--REDEF
F$DCB.FORM$
      1100**DCL      1100--REDEF
F$DCB.FSECT
      1116**DCL      1116--REDEF
F$DCB.FSN
      1093**DCL      1093--REDEF    1093--REDEF    1094--REDEF
F$DCB.HEADER$
      1099**DCL      1099--REDEF
F$DCB.IXTNSIZE
      1097**DCL      1097--REDEF
F$DCB.LASTSTA$
      1087**DCL      1087--REDEF
F$DCB.LVL
      1112**DCL      1112--REDEF
F$DCB.NAME.C
      1087**DCL      1087--REDEF
F$DCB.NOEOF
      1108**DCL      1108--REDEF
F$DCB.NRECS
      1098**DCL      1098--REDEF
F$DCB.NRECX
      1117**DCL      1117--REDEF
F$DCB.OHDR
      1109**DCL      1109--REDEF
F$DCB.ORG
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:417  
      1092**DCL      1092--REDEF
F$DCB.PRECNO
      1115**DCL      1115--REDEF
F$DCB.RCSZ
      1120**DCL      1120--REDEF
F$DCB.RES
      1088**DCL      1088--REDEF
F$DCB.SETX
      1100**DCL      1100--REDEF    1180>>ASSIGN
F$DCB.TAB$
      1099**DCL      1100--REDEF
F$DCB.TDA
      1114**DCL      1114--REDEF
F$DCB.WSN
      1089**DCL      1089--REDEF
FAF$FRTOSR
      1151**DCL-ENT  1176--CALL
FMC$CACHE.PAGE
      1137**DCL      1197<<ASSIGN
FMC$CACHE.SETX
      1140**DCL      1196<<ASSIGN
FMC$CACHE.SRDA
      1134**DCL      1194<<ASSIGN
FMC$CACHE.TYPE
      1133**DCL      1198<<ASSIGN
FMC$CACHE.USECNT
      1138**DCL      1195<<ASSIGN
FMC$GETSLOT
      1152**DCL-ENT  1189--CALL
FMC$GETTYPE
      1153**DCL-ENT  1181--CALL
FMC_CACHEPGCNT$
        31**DCL        31--IMP-PTR    31--REDEF
FMC_CACHESIZ
        30**DCL      1170>>IF
FMC_LOCK
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:418  
        32**DCL      1186<>CALL     1207<>CALL     1215<>CALL
FMC_MASK
        32**DCL      1183>>ASSIGN
FM_SRZERO
      1157**DCL      1175>>IF
GRANS
      1164**DCL      1176<>CALL
HASH
      1166**DCL      1183<<ASSIGN   1189<>CALL     1209>>ASSIGN
HFC$LOCK
       716**DCL-ENT  1186--CALL
HFC$UNLOCK
       716**DCL-ENT  1207--CALL     1215--CALL
JDCB$
      1159**DCL      1078--IMP-PTR  1173<<ASSIGN   1174>>ASSIGN   1180>>ASSIGN   1191>>ASSIGN   1209>>ASSIGN
MMJ$FBTOIOPM
      1154**DCL-ENT  1192--CALL
NOCACHE
      1209**LABEL    1176--CALLALT
NOCACHE1
      1209**LABEL    1189--CALLALT
PP
      1168**DCL      1192<>CALL     1197>>ASSIGN
P_NSCPU
      1056**DCL      1057--REDEF
P_RESOURCE.RES
       929**DCL       996--REDEF
P_RESOURCE.RES.IOCACHE.CURRENT
       958**DCL      1200<<ASSIGN   1200>>ASSIGN   1201>>IF       1203>>ASSIGN
P_RESOURCE.RES.IOCACHE.PEAK
       959**DCL      1201>>IF       1203<<ASSIGN
P_RESOURCE$
      1009**DCL       897--IMP-PTR  1200>>ASSIGN   1200>>ASSIGN   1201>>IF       1201>>IF       1203>>ASSIGN
      1203>>ASSIGN
P_UPTIME
      1045**DCL      1046--REDEF
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:419  
SETX
      1163**DCL      1180<<ASSIGN   1183>>ASSIGN   1196>>ASSIGN
SRDA
      1161**DCL      1176<>CALL     1178<<ASSIGN   1183>>ASSIGN   1189<>CALL     1194>>ASSIGN
TYPE
      1165**DCL      1181<>CALL     1189<>CALL     1198>>ASSIGN
VPNO
      1167**DCL      1191<<ASSIGN   1192<>CALL
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:420  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:421  
              MINI UREF LISTING

FMC$CACHEPGCNT      31**DCL
FMC$STASH      19**PROC
FMC_CACHE$      30**DCL
FMC_CACHEPGCNT      31**DCL
FMC_CACHEPGCNT$R      31**DCL
FMC_CACHESIZN      30**DCL
FMC_MASKTBL      32**DCL
FMC_STATS$      30**DCL
FMC_TYPTBL$      30**DCL
P$IODATA    1010**DCL
P$TABLE    1019**DCL
PH_CPU_MOUSED    1074**DCL
PH_JIT_ENTRY    1070**DCL
PH_MOUSE_ENTRY    1066**DCL
PH_MOUSE_LOCK    1073**DCL
PH_MOUSE_USERS    1063**DCL
PH_MOUSE_USER_NUMBER    1075**DCL
PH_MUS_PAGES    1065**DCL
P_AUIS    1051**DCL
P_AVAIL_MEM    1058**DCL
P_AVGAVAIL_MEM    1059**DCL
P_AVGETMF    1048**DCL
P_AVGIOL    1050**DCL
P_AVGRT90    1047**DCL
P_CALCNT    1035**DCL
P_CALCOMP    1036**DCL
P_DCTXMAX    1052**DCL
P_ETMF    1029**DCL
P_GATE    1055**DCL
P_IOLOAD    1049**DCL
P_IOS    1044**DCL
P_NINTS    1030**DCL
PL6.E3A0      #014=FMC$STASH File=FMC$CACHE.:E05TSI                              TUE 07/29/97 16:42 Page:422  
P_NOW    1054**DCL
P_NSCPU_SBIN    1057**DCL
P_RT90    1031**DCL
P_RUE#    1027**DCL
P_SCHD#    1028**DCL
P_STARTUP    1032**DCL
P_STOPTIME    1053**DCL
P_S_MIDLTIME    1040**DCL
P_S_MIDLWIO    1041**DCL
P_S_MIDLWRES    1042**DCL
P_S_MIDLWRESIO    1043**DCL
P_S_MXEQTIME    1039**DCL
P_S_USRVTIME    1038**DCL
P_S_UXEQTIME    1037**DCL
P_UPTIME_SBIN    1046**DCL
P_USRVTIME    1034**DCL
P_UXEQTIME    1033**DCL
WORD_    1064**DCL
