VERSION E05

PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:1    
        1        1        /*M* CXC$READAM, CXC$WRITEAM */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /*F*   NAME:   CXC$READAM
        9        9               PURPOSE: To read an assign merge record contained in the *A file
       10       10               DESCRIPTION: CXC$READAM reads in the assign merge record
       11       11                       for a specified dcb.
       12       12        */
       13       13        /*D*   NAME:   CXC$READAM
       14       14               CALL:   CALL CXC$READAM(dcbname$,dcbnum#,cpsl_param)
       15       15               INPUT:  dcbname$ - pointer to DCB name
       16       16                       dcbnum# - a DCB to use to read/write amr through.
       17       17                       cpsl_param - The Command Processor Shared Library Paramenter.
       18       18               OUTPUT:  specified assign merge record in buffer
       19       19               DESCRIPTION: Data segment #3 is acquired and the specified
       20       20                       assign merge record is read from the *A file. The dcb
       21       21                       name is used as the key for reading the record.
       22       22        */
       23       23        /**********************************************************************/
       24       24        CXC$READAM: PROC(DCBNAME$,DCBNUM#,CPSL_PARAM) ;
       25       25                   %INCLUDE B$JIT;
       26      315                   %INCLUDE CP_6;
       27      396                   %INCLUDE CX_MACROS_M;
       28      447                   %INCLUDE XU_MACRO_C;
       29     3553                   %INCLUDE CX_DATA_R;
       30     4487                   %INCLUDE B_MACROS_C;
       31     4598                   %INCLUDE B_ERRORS_C;
       32     5725                   %INCLUDE CX_SUBS_C;
       33     5738                   %INCLUDE CX_PERR_C;
       34     5809                   %INCLUDE CP_6_SUBS;
       35     6349                   %INCLUDE CXG_ENTRY ;
       36     6361    1   DCL DCBNAME$ PTR;                       /*Pointer to dcb*/
       37     6362    1   DCL DCBNUM# SBIN;                       /*Work dcb*/
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:2    
       38     6363        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
       39     6381        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
       40     6490        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
       41     6532        %FPT_READ(FPTN=FPT_READAM,STCLASS=AUTO);
       42     6571    1   DCL ACTIVE_PRIVS BIT(36) ;
       43     6572          /***** Based structures *****/
       44     6573        %TEXTC;
       45     6578        %B$TCB (STCLASS="BASED(B$TCB$)");
       46     6581        %B$ALT;
       47     6589          /***** External routines *****/
       48     6590    1   DCL CXC$GETSEG ENTRY(2) ;               /*Get spec'd seg*/
       49     6591    1   DCL CXC$RELSEG ENTRY(1);
       50     6592    1   DCL CXC$SCREECH ENTRY(2);                        /*Screech*/
       51     6593          /***** Error Code *****/
       52     6594        %VLP_ERRCODE (FPTN=E_NONXDCB,FCG=CX,MID=C,ERR#=E$NONXDCB,STCLASS=CONSTANT);
       53     6639        %VLP_ERRCODE (FPTN=ERR_CODE,STCLASS=AUTO);
       54     6684        %EJECT;
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:3    
       55     6685        /*
       56     6686             ***** Setup for open of *A file ...
       57     6687        */
       58     6688          %SAVE_ACTIVE_PRIVS;
       59     6692    1     FPT_OPEN=CPSL_CFPT_OPEN; /*Init. Open fpt*/
       60     6693    1     FPT_OPEN.V_=VECTOR(FPT_OPEN.V);
       61     6694    1     FPT_OPEN.NAME_=VECTOR(CPSL_STARA);   /*File name*/
       62     6695    1     FPT_OPEN.V.DCB#=DCBNUM# ;
       63     6696    1     FPT_OPEN.V.ASN#=%FILE#;
       64     6697    1     FPT_OPEN.V.FUN#=%UPDATE#;
       65     6698    1     FPT_OPEN.V.ORG#=%KEYED#;
       66     6699    1     FPT_CLOSE = CPSL_CFPT_CLOSE ;
       67     6700    1     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V) ;
       68     6701                                                /*Open *A file*/
       69     6702    1     CALL M$OPEN(FPT_OPEN) ALTRET(CXC$READAM70);
       70     6703          %RESTORE_ACTIVE_PRIVS;
       71     6706                                                /*Get buffer for record*/
       72     6707    1     CALL CXC$GETSEG(CPSL_SEG3$) ;
       73     6708    1     IF B$JIT.USRERR ~= %NO#
       74     6709    1         THEN
       75     6710    1             GOTO CXC$READAM60 ;
       76     6711                                                /*Init. Read fpt*/
       77     6712    1     FPT_READAM=CPSL_CFPT_READ;
       78     6713    1     FPT_READAM.V_=VECTOR(FPT_READAM.V);
       79     6714    1     FPT_READAM.V.DCB#=DCBNUM# ;
       80     6715    1     FPT_READAM.BUF_.BUF$=CPSL_SEG3$;
       81     6716    1     FPT_READAM.BUF_.BOUND=4095;
       82     6717    1     FPT_READAM.KEY_=VECTOR(DCBNAME$->TEXTC);
       83     6718    1     FPT_READAM.V.KEYS#=%YES#;
       84     6719    1     CALL M$READ(FPT_READAM) ALTRET(CXC$READAM65); /*Read in record*/
       85     6720    1     FPT_CLOSE.V.DCB#=DCBNUM# ;
       86     6721    1     FPT_CLOSE.V.DISP#=%SAVE#;
       87     6722    1     CALL M$CLOSE(FPT_CLOSE) ALTRET(CXC$READAM65);
       88     6723    1   READAMRET:
       89     6724    1     RETURN;
       90     6725
       91     6726    1   CXC$READAM60:;
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:4    
       92     6727    1     CALL CXC$SCREECH(E$SUASEG,'C');
       93     6728        /*E*    ERROR:   CXC-E$SUASEG-A
       94     6729                MESSAGE:  IBEX ABORT:  Unable to obtain data segment.  JIT.ERR
       95     6730                                       follows.
       96     6731                DESCRIPTION: IBEX was unable to get a data segment used for the
       97     6732                             purpose of reading the assign merge record.
       98     6733        */
       99     6734    1   CXC$READAM70:
      100     6735          %RESTORE_ACTIVE_PRIVS;
      101     6738    1   CXC$READAM65:;
      102     6739    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;
      103     6740    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      104     6741        /* Check if a/m record for specified dcb existed */
      105     6742    1     ERR_CODE = CPSL_PARAM.ERRCODE ;
      106     6743    1     IF (ERR_CODE.ERR#=%E$NOKEY)
      107     6744    1        THEN
      108     6745    1           CPSL_PARAM.ERRCODE = E_NONXDCB ;
      109     6746    1           CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      110     6747                   /*E* ERROR: CXC-E$NONXDCB-E
      111     6748                        MESSAGE: Dcb doesn't exist
      112     6749                        DESCRIPTION: The dcb specified does not exist in the
      113     6750                                users' program.
      114     6751        */
      115     6752    1     FPT_CLOSE.V.DCB#=DCBNUM# ;
      116     6753    1     FPT_CLOSE.V.DISP#=%SAVE#;
      117     6754    1     CALL M$CLOSE(FPT_CLOSE); /*Close the dcb*/
      118     6755    1     CALL CXC$RELSEG (CPSL_SEG3$);
      119     6756    1     GOTO READAMRET;
      120     6757    1   END CXC$READAM;
      121     6758                   %EOD;

PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:5    
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXC$READAM.

   Procedure CXC$READAM requires 130 words for executable code.
   Procedure CXC$READAM requires 112 words of local(AUTO) storage.

PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:6    

 Object Unit name= CXC$READAM                                 File name= CXC$SUBR2.:E05TOU
 UTS= JUL 29 '97 12:26:16.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  CXC$READAM
    2   Proc  even  none   130    202  CXC$READAM
    3  RoData even  none    12     14  CXC$READAM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        3  CXC$READAM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 CXC$GETSEG
         yes           Std       2 CXC$SCREECH
         yes           Std       1 CXC$RELSEG
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CPSL_CFPT_OPEN                        CPSL_CFPT_CLOSE
     CPSL_CFPT_READ                   r    B$JIT$                           r    B$TCB$
r    CPSL_SEG3$                            CPSL_STARA                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:8    


        1        1        /*M* CXC$READAM, CXC$WRITEAM */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /*F*   NAME:   CXC$READAM
        9        9               PURPOSE: To read an assign merge record contained in the *A file
       10       10               DESCRIPTION: CXC$READAM reads in the assign merge record
       11       11                       for a specified dcb.
       12       12        */
       13       13        /*D*   NAME:   CXC$READAM
       14       14               CALL:   CALL CXC$READAM(dcbname$,dcbnum#,cpsl_param)
       15       15               INPUT:  dcbname$ - pointer to DCB name
       16       16                       dcbnum# - a DCB to use to read/write amr through.
       17       17                       cpsl_param - The Command Processor Shared Library Paramenter.
       18       18               OUTPUT:  specified assign merge record in buffer
       19       19               DESCRIPTION: Data segment #3 is acquired and the specified
       20       20                       assign merge record is read from the *A file. The dcb
       21       21                       name is used as the key for reading the record.
       22       22        */
       23       23        /**********************************************************************/
       24       24        CXC$READAM: PROC(DCBNAME$,DCBNUM#,CPSL_PARAM) ;

     24  2 000000   000000 700200 xent  CXC$READAM   TSX0  ! X66_AUTO_3
         2 000001   000160 000003                    ZERO    112,3

       25       25                   %INCLUDE B$JIT;
       26      315                   %INCLUDE CP_6;
       27      396                   %INCLUDE CX_MACROS_M;
       28      447                   %INCLUDE XU_MACRO_C;
       29     3553                   %INCLUDE CX_DATA_R;
       30     4487                   %INCLUDE B_MACROS_C;
       31     4598                   %INCLUDE B_ERRORS_C;
       32     5725                   %INCLUDE CX_SUBS_C;
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:9    
       33     5738                   %INCLUDE CX_PERR_C;
       34     5809                   %INCLUDE CP_6_SUBS;
       35     6349                   %INCLUDE CXG_ENTRY ;
       36     6361    1   DCL DCBNAME$ PTR;                       /*Pointer to dcb*/
       37     6362    1   DCL DCBNUM# SBIN;                       /*Work dcb*/
       38     6363        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
       39     6381        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
       40     6490        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
       41     6532        %FPT_READ(FPTN=FPT_READAM,STCLASS=AUTO);
       42     6571    1   DCL ACTIVE_PRIVS BIT(36) ;
       43     6572          /***** Based structures *****/
       44     6573        %TEXTC;
       45     6578        %B$TCB (STCLASS="BASED(B$TCB$)");
       46     6581        %B$ALT;
       47     6589          /***** External routines *****/
       48     6590    1   DCL CXC$GETSEG ENTRY(2) ;               /*Get spec'd seg*/
       49     6591    1   DCL CXC$RELSEG ENTRY(1);
       50     6592    1   DCL CXC$SCREECH ENTRY(2);                        /*Screech*/
       51     6593          /***** Error Code *****/
       52     6594        %VLP_ERRCODE (FPTN=E_NONXDCB,FCG=CX,MID=C,ERR#=E$NONXDCB,STCLASS=CONSTANT);
       53     6639        %VLP_ERRCODE (FPTN=ERR_CODE,STCLASS=AUTO);
       54     6684        %EJECT;
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:10   
       55     6685        /*
       56     6686             ***** Setup for open of *A file ...
       57     6687        */
       58     6688          %SAVE_ACTIVE_PRIVS;

   6689  2 000002   000000 470400 xsym               LDP0    B$JIT$
         2 000003   000013 236100                    LDQ     11,,PR0
         2 000004   200154 756100                    STQ     ACTIVE_PRIVS,,AUTO

   6690  2 000005   000013 450100                    STZ     11,,PR0

       59     6692    1     FPT_OPEN=CPSL_CFPT_OPEN; /*Init. Open fpt*/

   6692  2 000006   000100 100400                    MLR     fill='000'O
         2 000007   000000 000350 xsym               ADSC9   CPSL_CFPT_OPEN           cn=0,n=232
         2 000010   200006 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

       60     6693    1     FPT_OPEN.V_=VECTOR(FPT_OPEN.V);

   6693  2 000011   000000 235000 3                  LDA     0
         2 000012   200156 452500                    STP2    ERR_CODE+1,,AUTO
         2 000013   200156 236100                    LDQ     ERR_CODE+1,,AUTO
         2 000014   000052 036003                    ADLQ    42,DU
         2 000015   200006 757100                    STAQ    FPT_OPEN,,AUTO

       61     6694    1     FPT_OPEN.NAME_=VECTOR(CPSL_STARA);   /*File name*/

   6694  2 000016   000002 237000 3                  LDAQ    2
         2 000017   200014 757100                    STAQ    FPT_OPEN+6,,AUTO

       62     6695    1     FPT_OPEN.V.DCB#=DCBNUM# ;

   6695  2 000020   200004 471500                    LDP1    @DCBNUM#,,AUTO
         2 000021   100000 720100                    LXL0    0,,PR1
         2 000022   200052 740100                    STX0    FPT_OPEN+36,,AUTO

       63     6696    1     FPT_OPEN.V.ASN#=%FILE#;
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:11   

   6696  2 000023   000001 236007                    LDQ     1,DL
         2 000024   200053 552104                    STBQ    FPT_OPEN+37,'04'O,AUTO

       64     6697    1     FPT_OPEN.V.FUN#=%UPDATE#;

   6697  2 000025   001000 236007                    LDQ     512,DL
         2 000026   200053 552110                    STBQ    FPT_OPEN+37,'10'O,AUTO

       65     6698    1     FPT_OPEN.V.ORG#=%KEYED#;

   6698  2 000027   002000 236007                    LDQ     1024,DL
         2 000030   200054 552110                    STBQ    FPT_OPEN+38,'10'O,AUTO

       66     6699    1     FPT_CLOSE = CPSL_CFPT_CLOSE ;

   6699  2 000031   000100 100400                    MLR     fill='000'O
         2 000032   000000 000170 xsym               ADSC9   CPSL_CFPT_CLOSE          cn=0,n=120
         2 000033   200100 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

       67     6700    1     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V) ;

   6700  2 000034   000001 235000 3                  LDA     1
         2 000035   200156 452500                    STP2    ERR_CODE+1,,AUTO
         2 000036   200156 236100                    LDQ     ERR_CODE+1,,AUTO
         2 000037   000132 036003                    ADLQ    90,DU
         2 000040   200100 757100                    STAQ    FPT_CLOSE,,AUTO

       68     6701                                                /*Open *A file*/
       69     6702    1     CALL M$OPEN(FPT_OPEN) ALTRET(CXC$READAM70);

   6702  2 000041   200006 630500                    EPPR0   FPT_OPEN,,AUTO
         2 000042   450000 713400                    CLIMB   alt,open
         2 000043   410400 401760                    pmme    nvectors=18
         2 000044   000141 702000 2                  TSX2    CXC$READAM70

       70     6703          %RESTORE_ACTIVE_PRIVS;
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:12   

   6704  2 000045   200154 236100                    LDQ     ACTIVE_PRIVS,,AUTO
         2 000046   000000 470400 xsym               LDP0    B$JIT$
         2 000047   000013 756100                    STQ     11,,PR0

       71     6706                                                /*Get buffer for record*/
       72     6707    1     CALL CXC$GETSEG(CPSL_SEG3$) ;

   6707  2 000050   000004 630400 3                  EPPR0   4
         2 000051   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000052   000000 701000 xent               TSX1    CXC$GETSEG
         2 000053   000000 011000                    NOP     0

       73     6708    1     IF B$JIT.USRERR ~= %NO#

   6708  2 000054   000000 470400 xsym               LDP0    B$JIT$
         2 000055   000144 235100                    LDA     100,,PR0
         2 000056   000135 601000 2                  TNZ     CXC$READAM60

       74     6709    1         THEN
       75     6710    1             GOTO CXC$READAM60 ;
       76     6711                                                /*Init. Read fpt*/
       77     6712    1     FPT_READAM=CPSL_CFPT_READ;

   6712  2 000057   000100 100400                    MLR     fill='000'O
         2 000060   000000 000070 xsym               ADSC9   CPSL_CFPT_READ           cn=0,n=56
         2 000061   200136 000070                    ADSC9   FPT_READAM,,AUTO         cn=0,n=56

       78     6713    1     FPT_READAM.V_=VECTOR(FPT_READAM.V);

   6713  2 000062   000005 235000 3                  LDA     5
         2 000063   200156 452500                    STP2    ERR_CODE+1,,AUTO
         2 000064   200156 236100                    LDQ     ERR_CODE+1,,AUTO
         2 000065   000146 036003                    ADLQ    102,DU
         2 000066   200136 757100                    STAQ    FPT_READAM,,AUTO

       79     6714    1     FPT_READAM.V.DCB#=DCBNUM# ;
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:13   

   6714  2 000067   200004 471500                    LDP1    @DCBNUM#,,AUTO
         2 000070   100000 720100                    LXL0    0,,PR1
         2 000071   200146 740100                    STX0    FPT_READAM+8,,AUTO

       80     6715    1     FPT_READAM.BUF_.BUF$=CPSL_SEG3$;

   6715  2 000072   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 000073   200143 756100                    STQ     FPT_READAM+5,,AUTO

       81     6716    1     FPT_READAM.BUF_.BOUND=4095;

   6716  2 000074   200142 236100                    LDQ     FPT_READAM+4,,AUTO
         2 000075   177777 376007                    ANQ     65535,DL
         2 000076   000006 276000 3                  ORQ     6
         2 000077   200142 756100                    STQ     FPT_READAM+4,,AUTO

       82     6717    1     FPT_READAM.KEY_=VECTOR(DCBNAME$->TEXTC);

   6717  2 000100   200003 473500                    LDP3    @DCBNAME$,,AUTO
         2 000101   300000 474500                    LDP4    0,,PR3
         2 000102   000100 101500                    MRL     fill='000'O
         2 000103   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 000104   200156 000002                    ADSC9   ERR_CODE+1,,AUTO         cn=0,n=2
         2 000105   200156 221100                    LDX1    ERR_CODE+1,,AUTO
         2 000106   000001 622011                    EAX2    1,X1
         2 000107   000000 635012                    EAA     0,X2
         2 000110   000002 771000                    ARL     2
         2 000111   000140 135007                    SBLA    96,DL
         2 000112   200157 454500                    STP4    ERR_CODE+2,,AUTO
         2 000113   200157 236100                    LDQ     ERR_CODE+2,,AUTO
         2 000114   200140 757100                    STAQ    FPT_READAM+2,,AUTO

       83     6718    1     FPT_READAM.V.KEYS#=%YES#;

   6718  2 000115   200000 236007                    LDQ     65536,DL
         2 000116   200146 256100                    ORSQ    FPT_READAM+8,,AUTO
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:14   

       84     6719    1     CALL M$READ(FPT_READAM) ALTRET(CXC$READAM65); /*Read in record*/

   6719  2 000117   200136 630500                    EPPR0   FPT_READAM,,AUTO
         2 000120   440000 713400                    CLIMB   alt,read
         2 000121   401400 401760                    pmme    nvectors=4
         2 000122   000144 702000 2                  TSX2    CXC$READAM65

       85     6720    1     FPT_CLOSE.V.DCB#=DCBNUM# ;

   6720  2 000123   200004 470500                    LDP0    @DCBNUM#,,AUTO
         2 000124   000000 720100                    LXL0    0,,PR0
         2 000125   200132 740100                    STX0    FPT_CLOSE+26,,AUTO

       86     6721    1     FPT_CLOSE.V.DISP#=%SAVE#;

   6721  2 000126   000002 236007                    LDQ     2,DL
         2 000127   200132 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

       87     6722    1     CALL M$CLOSE(FPT_CLOSE) ALTRET(CXC$READAM65);

   6722  2 000130   200100 630500                    EPPR0   FPT_CLOSE,,AUTO
         2 000131   450001 713400                    CLIMB   alt,close
         2 000132   406000 401760                    pmme    nvectors=13
         2 000133   000144 702000 2                  TSX2    CXC$READAM65

       88     6723    1   READAMRET:
       89     6724    1     RETURN;

   6724  2 000134   000000 702200 xent  READAMRET    TSX2  ! X66_ARET

   6721  2 000135                       CXC$READAM60 null
       90     6725
       91     6726    1   CXC$READAM60:;
       92     6727    1     CALL CXC$SCREECH(E$SUASEG,'C');

   6727  2 000135   000011 630400 3                  EPPR0   9
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:15   
         2 000136   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000137   000000 701000 xent               TSX1    CXC$SCREECH
         2 000140   000000 011000                    NOP     0

       93     6728        /*E*    ERROR:   CXC-E$SUASEG-A
       94     6729                MESSAGE:  IBEX ABORT:  Unable to obtain data segment.  JIT.ERR
       95     6730                                       follows.
       96     6731                DESCRIPTION: IBEX was unable to get a data segment used for the
       97     6732                             purpose of reading the assign merge record.
       98     6733        */
       99     6734    1   CXC$READAM70:
      100     6735          %RESTORE_ACTIVE_PRIVS;

   6736  2 000141   200154 236100       CXC$READAM70 LDQ     ACTIVE_PRIVS,,AUTO
         2 000142   000000 470400 xsym               LDP0    B$JIT$
         2 000143   000013 756100                    STQ     11,,PR0

   6721  2 000144                       CXC$READAM65 null
      101     6738    1   CXC$READAM65:;
      102     6739    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;

   6739  2 000144   000000 470400 xsym               LDP0    B$TCB$
         2 000145   000000 471500                    LDP1    0,,PR0
         2 000146   100102 236100                    LDQ     66,,PR1
         2 000147   200005 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 000150   300002 756100                    STQ     2,,PR3

      103     6740    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   6740  2 000151   000013 236000 3                  LDQ     11
         2 000152   300001 356100                    ANSQ    1,,PR3

      104     6741        /* Check if a/m record for specified dcb existed */
      105     6742    1     ERR_CODE = CPSL_PARAM.ERRCODE ;

   6742  2 000153   300002 236100                    LDQ     2,,PR3
         2 000154   200155 756100                    STQ     ERR_CODE,,AUTO
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:16   

      106     6743    1     IF (ERR_CODE.ERR#=%E$NOKEY)

   6743  2 000155   200155 236100                    LDQ     ERR_CODE,,AUTO
         2 000156   377770 376007                    ANQ     131064,DL
         2 000157   001020 116007                    CMPQ    528,DL
         2 000160   000163 601000 2                  TNZ     s:6746

      107     6744    1        THEN
      108     6745    1           CPSL_PARAM.ERRCODE = E_NONXDCB ;

   6745  2 000161   000000 236000 1                  LDQ     E_NONXDCB
         2 000162   300002 756100                    STQ     2,,PR3

      109     6746    1           CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   6746  2 000163   000013 236000 3                  LDQ     11
         2 000164   300001 356100                    ANSQ    1,,PR3

      110     6747                   /*E* ERROR: CXC-E$NONXDCB-E
      111     6748                        MESSAGE: Dcb doesn't exist
      112     6749                        DESCRIPTION: The dcb specified does not exist in the
      113     6750                                users' program.
      114     6751        */
      115     6752    1     FPT_CLOSE.V.DCB#=DCBNUM# ;

   6752  2 000165   200004 471500                    LDP1    @DCBNUM#,,AUTO
         2 000166   100000 720100                    LXL0    0,,PR1
         2 000167   200132 740100                    STX0    FPT_CLOSE+26,,AUTO

      116     6753    1     FPT_CLOSE.V.DISP#=%SAVE#;

   6753  2 000170   000002 236007                    LDQ     2,DL
         2 000171   200132 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      117     6754    1     CALL M$CLOSE(FPT_CLOSE); /*Close the dcb*/

PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:17   
   6754  2 000172   200100 630500                    EPPR0   FPT_CLOSE,,AUTO
         2 000173   050001 713400                    CLIMB   close
         2 000174   406000 401760                    pmme    nvectors=13

      118     6755    1     CALL CXC$RELSEG (CPSL_SEG3$);

   6755  2 000175   000004 630400 3                  EPPR0   4
         2 000176   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000177   000000 701000 xent               TSX1    CXC$RELSEG
         2 000200   000000 011000                    NOP     0

      119     6756    1     GOTO READAMRET;

   6756  2 000201   000134 710000 2                  TRA     READAMRET
      120     6757    1   END CXC$READAM;
      121     6758                   %EOD;

PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:18   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXC$READAM.
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:19   

 **** Variables and constants ****

  ****  Section 001 RoData CXC$READAM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_NONXDCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @CPSL_PARAM                3-0-0/w PTR         r     1 @DCBNAME$
     4-0-0/w PTR         r     1 @DCBNUM#                 154-0-0/b BIT         r     1 ACTIVE_PRIVS
    *0-0-0/w STRC(180)   r     1 CPSL_PARAM                *0-0-0/w PTR         r     1 DCBNAME$
    *0-0-0/w SBIN        r     1 DCBNUM#                  155-0-0/w STRC        r     1 ERR_CODE
   100-0-0/d STRC(1080)  r     1 FPT_CLOSE                  6-0-0/d STRC(2088)  r     1 FPT_OPEN
   136-0-0/d STRC(504)   r     1 FPT_READAM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(1080)  r     1 CPSL_CFPT_CLOSE            0-0-0/d STRC(2088)  r     1 CPSL_CFPT_OPEN
     0-0-0/d STRC(504)   r     1 CPSL_CFPT_READ             0-0-0/w PTR         r     1 CPSL_SEG3$
     0-0-0/c STRC(27)    r     1 CPSL_STARA

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:20   
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure CXC$READAM requires 130 words for executable code.
   Procedure CXC$READAM requires 112 words of local(AUTO) storage.
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:21   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:22   
          MINI XREF LISTING

ACTIVE_PRIVS
      6571**DCL      6689<<ASSIGN   6704>>ASSIGN   6736>>ASSIGN
B$ALT.CODE
      6583**DCL      6583--REDEF    6584--REDEF    6584--REDEF
B$ALT.ERR
      6584**DCL      6739>>ASSIGN
B$ALT.ERR.ERR#
      6585**DCL      6585--REDEF
B$ALT.EVID
      6584**DCL      6584--REDEF    6584--REDEF
B$JIT.CPFLAGS1.SLEAZE
       133**DCL       133--REDEF
B$JIT.ERR.MID
        40**DCL        40--REDEF
B$JIT.JRESPEAK
       201**DCL       202--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       310**DCL       310--REDEF     311--REDEF
B$JIT.PNR
       214**DCL       214--REDEF
B$JIT.PRIV.ACTIVE
        40**DCL      6689>>ASSIGN   6690<<ASSIGN   6704<<ASSIGN   6736<<ASSIGN
B$JIT.TSLINE
       308**DCL       309--REDEF
B$JIT.USRERR
       175**DCL      6708>>IF
B$JIT$
      4454**DCL        34--IMP-PTR  6689>>ASSIGN   6690>>ASSIGN   6704>>ASSIGN   6708>>IF       6736>>ASSIGN
B$TCB.ALT$
      6579**DCL      6739>>ASSIGN
B$TCB$
      4455**DCL      6579--IMP-PTR  6739>>ASSIGN
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:23   
CPSL_CAMR_REC.ACSVEH_
      3742**DCL      3743--REDEF
CPSL_CAMR_REC.ALTKEYS_
      3748**DCL      3749--REDEF    3749--REDEF
CPSL_CAMR_REC.HDR_
      3747**DCL      3748--REDEF
CPSL_CAMR_REC.TAB_
      3746**DCL      3747--REDEF
CPSL_CAMR_REC.UHL_
      3740**DCL      3741--REDEF    3741--REDEF
CPSL_CAMR_REC.V.FSN#
      3780**DCL      3780--REDEF    3780--REDEF
CPSL_CAMR_REC.WSN_
      3746**DCL      3746--REDEF
CPSL_CFPT_CLOSE
      3807**DCL      6699>>ASSIGN
CPSL_CFPT_CLOSE.SN_
      3807**DCL      3807--REDEF
CPSL_CFPT_CLOSE.UTL_
      3808**DCL      3808--REDEF
CPSL_CFPT_CLOSE.V.EXPIRE#
      3822**DCL      3822--REDEF
CPSL_CFPT_CLOSE.V.TYPE#
      3820**DCL      3820--REDEF
CPSL_CFPT_CLOSE.V.XTNSIZE#
      3817**DCL      3817--REDEF    3819--REDEF
CPSL_CFPT_OPEN
      3631**DCL      6692>>ASSIGN
CPSL_CFPT_OPEN.ACSVEH_
      3633**DCL      3634--REDEF
CPSL_CFPT_OPEN.ALTKEYS_
      3639**DCL      3640--REDEF    3640--REDEF
CPSL_CFPT_OPEN.HDR_
      3638**DCL      3639--REDEF
CPSL_CFPT_OPEN.TAB_
      3637**DCL      3638--REDEF
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:24   
CPSL_CFPT_OPEN.UHL_
      3631**DCL      3632--REDEF    3632--REDEF
CPSL_CFPT_OPEN.V.FSN#
      3671**DCL      3671--REDEF    3671--REDEF
CPSL_CFPT_OPEN.WSN_
      3637**DCL      3637--REDEF
CPSL_CFPT_READ
      3843**DCL      6712>>ASSIGN
CPSL_CFPT_READ.STATION_
      3846**DCL      3847--REDEF
CPSL_CFPT_READ.V.DVBYTE.REREAD#
      3858**DCL      3858--REDEF
CPSL_CFPT_READ.V.INDX#
      3856**DCL      3856--REDEF
CPSL_CFPT_WRITE.STATION_
      3884**DCL      3884--REDEF
CPSL_CFPT_WRITE.V.DVBYTE.VFC#
      3891**DCL      3891--REDEF
CPSL_CVLP_TRMCTL.BREAKCOUNT
      4275**DCL      4276--REDEF
CPSL_CVLP_WINDOW.FWINDOW#
      4371**DCL      4371--REDEF    4372--REDEF
CPSL_PARAM
      6364**DCL        24--PROC
CPSL_PARAM.ERRCODE
      6372**DCL      6739<<ASSIGN   6742>>ASSIGN   6745<<ASSIGN
CPSL_PARAM.FLAGS.REPORTED_TO_USER
      6369**DCL      6740<<ASSIGN   6746<<ASSIGN
CPSL_SEG3$
      4457**DCL      6707<>CALL     6715>>ASSIGN   6755<>CALL
CPSL_STARA
      4481**DCL      6694--ASSIGN
CXC$GETSEG
      6590**DCL-ENT  6707--CALL
CXC$READAM60
      6721**LABEL    6710--GOTO
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:25   
CXC$READAM65
      6721**LABEL    6719--CALLALT  6722--CALLALT
CXC$READAM70
      6736**LABEL    6702--CALLALT
CXC$RELSEG
      6591**DCL-ENT  6755--CALL
CXC$SCREECH
      6592**DCL-ENT  6727--CALL
DCBNAME$
      6361**DCL        24--PROC     6717>>ASSIGN   6717>>ASSIGN
DCBNUM#
      6362**DCL        24--PROC     6695>>ASSIGN   6714>>ASSIGN   6720>>ASSIGN   6752>>ASSIGN
ERR_CODE
      6651**DCL      6742<<ASSIGN
ERR_CODE.ERR#
      6681**DCL      6743>>IF
E_NONXDCB
      6606**DCL      6745>>ASSIGN
FPT_CLOSE
      6513**DCL      6699<<ASSIGN   6722<>CALL     6754<>CALL
FPT_CLOSE.SN_
      6513**DCL      6513--REDEF
FPT_CLOSE.UTL_
      6514**DCL      6514--REDEF
FPT_CLOSE.V
      6518**DCL      6700--ASSIGN
FPT_CLOSE.V.DCB#
      6519**DCL      6720<<ASSIGN   6752<<ASSIGN
FPT_CLOSE.V.DISP#
      6522**DCL      6721<<ASSIGN   6753<<ASSIGN
FPT_CLOSE.V.EXPIRE#
      6528**DCL      6528--REDEF
FPT_CLOSE.V.TYPE#
      6526**DCL      6526--REDEF
FPT_CLOSE.V.XTNSIZE#
      6523**DCL      6523--REDEF    6525--REDEF
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:26   
FPT_CLOSE.V_
      6513**DCL      6700<<ASSIGN
FPT_OPEN
      6446**DCL      6692<<ASSIGN   6702<>CALL
FPT_OPEN.ACSVEH_
      6448**DCL      6449--REDEF
FPT_OPEN.ALTKEYS_
      6454**DCL      6455--REDEF    6455--REDEF
FPT_OPEN.HDR_
      6453**DCL      6454--REDEF
FPT_OPEN.NAME_
      6447**DCL      6694<<ASSIGN
FPT_OPEN.TAB_
      6452**DCL      6453--REDEF
FPT_OPEN.UHL_
      6446**DCL      6447--REDEF    6447--REDEF
FPT_OPEN.V
      6455**DCL      6693--ASSIGN
FPT_OPEN.V.ASN#
      6465**DCL      6696<<ASSIGN
FPT_OPEN.V.DCB#
      6455**DCL      6695<<ASSIGN
FPT_OPEN.V.FSN#
      6486**DCL      6486--REDEF    6486--REDEF
FPT_OPEN.V.FUN#
      6465**DCL      6697<<ASSIGN
FPT_OPEN.V.ORG#
      6466**DCL      6698<<ASSIGN
FPT_OPEN.V_
      6446**DCL      6693<<ASSIGN
FPT_OPEN.WSN_
      6452**DCL      6452--REDEF
FPT_READAM
      6549**DCL      6712<<ASSIGN   6719<>CALL
FPT_READAM.BUF_.BOUND
      6551**DCL      6716<<ASSIGN
PL6.E3A0      #001=CXC$READAM File=CXC$SUBR2.:E05TSI                             TUE 07/29/97 12:26 Page:27   
FPT_READAM.BUF_.BUF$
      6552**DCL      6715<<ASSIGN
FPT_READAM.KEY_
      6549**DCL      6717<<ASSIGN
FPT_READAM.STATION_
      6552**DCL      6553--REDEF
FPT_READAM.V
      6553**DCL      6713--ASSIGN
FPT_READAM.V.DCB#
      6553**DCL      6714<<ASSIGN
FPT_READAM.V.DVBYTE.REREAD#
      6564**DCL      6564--REDEF
FPT_READAM.V.INDX#
      6562**DCL      6562--REDEF
FPT_READAM.V.KEYS#
      6554**DCL      6718<<ASSIGN
FPT_READAM.V_
      6549**DCL      6713<<ASSIGN
M$CLOSE
       324**DCL-ENT  6722--CALL     6754--CALL
M$OPEN
       324**DCL-ENT  6702--CALL
M$READ
       325**DCL-ENT  6719--CALL
READAMRET
      6724**LABEL    6756--GOTO
TEXTC
      6574**DCL      6717--ASSIGN
TEXTC.SIZ
      6575**DCL      6576--IMP-SIZ  6717>>ASSIGN

PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:28   
      122        1        /*T***********************************************************/
      123        2        /*T*                                                         */
      124        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      125        4        /*T*                                                         */
      126        5        /*T***********************************************************/
      127        6        /**********************************************************************/
      128        7        /*F*   NAME:   CXC$WRITEAM
      129        8               PURPOSE: To write an assign merge record to the *A file
      130        9               DESCRIPTION: The assign merge record, which is expected in
      131       10                       data segment #3, is written to the *A file.
      132       11        */
      133       12        /*D*   NAME:   CXC$WRITEAM
      134       13               CALL:   CALL CXC$WRITEAM(dcbname$,dcbnum#,cpsl_param)
      135       14               INPUT:  dcbname$ - pointer to dcb name
      136       15                       A/M record assumed in segment 3
      137       16                       dcbnum# - a DCB to use to read/write amr through.
      138       17                       cpsl_param - Command Processor Shared Library Parameters.
      139       18               OUTPUT: A/M record to *A file
      140       19               DESCRIPTION: CXC$WRITEAM uses the dcbnum# dcb for writing the
      141       20                       A/M record to the *A file. The dcb name passed as a
      142       21                       parameter is used as the key in generating the keyed
      143       22                       record. The  size of the assign-merge record is calculated
      144       23                       by using the highest allocated address in the assign-merge
      145       24                       record.
      146       25        */
      147       26        /**************************************************************************/
      148       27        CXC$WRITEAM: PROC(DCBNAME$,DCBNUM#,CPSL_PARAM) ;
      149       28                   %INCLUDE B$JIT;
      150      318                   %INCLUDE CP_6;
      151      399                   %INCLUDE CX_MACROS_M;
      152      450                   %INCLUDE XU_MACRO_C;
      153     3556                   %INCLUDE B_MACROS_C;
      154     3667                   %INCLUDE CX_SUBS_C;
      155     3680                   %INCLUDE CX_PERR_C;
      156     3751                   %INCLUDE CX_DATA_R;
      157     4685                   %INCLUDE CP_6_SUBS;
      158     5225                   %INCLUDE CXG_ENTRY ;
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:29   
      159     5237    1   DCL DCBNAME$ PTR;                       /*Ptr to dcb name*/
      160     5238    1   DCL DCBNUM# SBIN;                       /*Work dcb*/
      161     5239    1   DCL TEMP$ PTR;                                   /*Temp ptr*/
      162     5240    1   DCL ACTIVE_PRIVS BIT(36) ;
      163     5241        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
      164     5259          /***** Based structures and FPTS *****/
      165     5260        %TEXTC;
      166     5265        %B$ALT;
      167     5273        %B$TCB (STCLASS="BASED(B$TCB$)");
      168     5276        %EJECT;
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:30   
      169     5277        %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(CPSL_SEG3$)",PFMT="PTR");
      170     5386        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
      171     5495        %FPT_WRITE(FPTN=FPT_WRITE,STCLASS=AUTO);
      172     5526        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
      173     5568        %CPSL_AMR$PTRS(NAME=AMR$PTRS,STCLASS=BASED);
      174     5573    1   DCL CXC$GETSEG ENTRY(2) ;               /*Get data segment*/
      175     5574    1   DCL CXC$RELSEG ENTRY(1);
      176     5575                                                                                    /**/
      177     5576          %SAVE_ACTIVE_PRIVS;
      178     5580                                                /*Init open fpt*/
      179     5581    1     FPT_OPEN=CPSL_CFPT_OPEN;
      180     5582    1     FPT_OPEN.V_=VECTOR(FPT_OPEN.V);
      181     5583    1     FPT_OPEN.NAME_=VECTOR(CPSL_STARA);   /*File name*/
      182     5584    1     FPT_OPEN.V.DCB#=DCBNUM# ; /*Dcb number*/
      183     5585    1     FPT_OPEN.V.ASN#=%FILE#;
      184     5586    1     FPT_OPEN.V.FUN#=%CREATE#;
      185     5587    1     FPT_OPEN.V.EXIST#=%OLDFILE#;
      186     5588    1     FPT_OPEN.V.ORG#=%KEYED#;
      187     5589    1     FPT_OPEN.V.ACS#=%DIRECT#;
      188     5590                                                /*Init close fpt*/
      189     5591    1     FPT_CLOSE = CPSL_CFPT_CLOSE ;
      190     5592    1     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V) ;
      191     5593                                                /*Open the *A file*/
      192     5594    1     CALL M$OPEN(FPT_OPEN) ALTRET(CXC$WRITEAM50);
      193     5595          %RESTORE_ACTIVE_PRIVS;
      194     5598                                                /*Init. Write fpt*/
      195     5599    1     FPT_WRITE=CPSL_CFPT_WRITE;
      196     5600    1     FPT_WRITE.V_=VECTOR(FPT_WRITE.V);
      197     5601    1     FPT_WRITE.BUF_.BUF$=CPSL_SEG3$;
      198     5602        /*
      199     5603          ****  Set the bits in the jit if this is a set of #1,#2,#3,#4
      200     5604        */
      201     5605    1     IF (DCBNAME$ -> TEXTC = CPSL_SOURCEDCB)
      202     5606    1        THEN
      203     5607    1           B$JIT.PRFLAGS.SI = %YES#;
      204     5608    1        ELSE IF (DCBNAME$ -> TEXTC = CPSL_UPDATEDCB)
      205     5609    1              THEN
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:31   
      206     5610    1                 B$JIT.PRFLAGS.UI = %YES#;
      207     5611    1              ELSE IF (DCBNAME$ -> TEXTC = CPSL_OBJECTDCB)
      208     5612    1                    THEN
      209     5613    1                        B$JIT.PRFLAGS.OU = %YES#;
      210     5614    1                    ELSE IF (DCBNAME$ -> TEXTC = CPSL_LISTDCB)
      211     5615    1                          THEN
      212     5616    1                             B$JIT.PRFLAGS.LS = %YES#;
      213     5617        /*
      214     5618          ****  Calculate actual size of record
      215     5619        */
      216     5620    1     TEMP$=PINCRW(AMR$REC$.V_,SIZEW(AMR$REC$.V));
      217     5621    1     FPT_WRITE.BUF_.BOUND=POFFC(TEMP$->
      218     5622    1          AMR$PTRS.HI_SEGMENT$,CPSL_SEG3$);
      219     5623    1     FPT_WRITE.KEY_=VECTOR(DCBNAME$->TEXTC);
      220     5624    1     FPT_WRITE.V.ONEWKEY#=%YES#;
      221     5625    1     FPT_WRITE.V.DCB#=DCBNUM# ;
      222     5626    1     CALL M$WRITE(FPT_WRITE) ALTRET(CXC$WRITEAM55);
      223     5627                                                /*Init. Close dcb*/
      224     5628    1     FPT_CLOSE.V.DCB#=DCBNUM# ;
      225     5629    1     FPT_CLOSE.V.DISP#=%SAVE#;
      226     5630    1     CALL M$CLOSE(FPT_CLOSE) ALTRET(CXC$WRITEAM55);
      227     5631    1     CALL CXC$RELSEG (CPSL_SEG3$);
      228     5632    1     RETURN;
      229     5633    1   CXC$WRITEAM50:
      230     5634          %RESTORE_ACTIVE_PRIVS;
      231     5637    1   CXC$WRITEAM55:;
      232     5638    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;
      233     5639    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      234     5640    1     FPT_CLOSE.V.DCB#=DCBNUM# ;
      235     5641    1     FPT_CLOSE.V.DISP#=%SAVE#;
      236     5642    1     CALL M$CLOSE(FPT_CLOSE);
      237     5643    1     CALL CXC$RELSEG (CPSL_SEG3$);
      238     5644    1     RETURN;
      239     5645    1   END CXC$WRITEAM;

PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:32   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXC$WRITEAM.

   Procedure CXC$WRITEAM requires 181 words for executable code.
   Procedure CXC$WRITEAM requires 110 words of local(AUTO) storage.

    No errors detected in file CXC$SUBR2.:E05TSI    .

PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:33   

 Object Unit name= CXC$WRITEAM                                File name= CXC$SUBR2.:E05TOU
 UTS= JUL 29 '97 12:27:16.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none   181    265  CXC$WRITEAM
    2  RoData even  none     7      7  CXC$WRITEAM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        3  CXC$WRITEAM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 CXC$RELSEG
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:34   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CPSL_CFPT_OPEN                        CPSL_CFPT_CLOSE
     CPSL_CFPT_WRITE                  r    B$JIT$                           r    B$TCB$
r    CPSL_SEG3$                            CPSL_SOURCEDCB                        CPSL_UPDATEDCB
     CPSL_OBJECTDCB                        CPSL_LISTDCB                          CPSL_STARA
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:35   


      122        1        /*T***********************************************************/
      123        2        /*T*                                                         */
      124        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      125        4        /*T*                                                         */
      126        5        /*T***********************************************************/
      127        6        /**********************************************************************/
      128        7        /*F*   NAME:   CXC$WRITEAM
      129        8               PURPOSE: To write an assign merge record to the *A file
      130        9               DESCRIPTION: The assign merge record, which is expected in
      131       10                       data segment #3, is written to the *A file.
      132       11        */
      133       12        /*D*   NAME:   CXC$WRITEAM
      134       13               CALL:   CALL CXC$WRITEAM(dcbname$,dcbnum#,cpsl_param)
      135       14               INPUT:  dcbname$ - pointer to dcb name
      136       15                       A/M record assumed in segment 3
      137       16                       dcbnum# - a DCB to use to read/write amr through.
      138       17                       cpsl_param - Command Processor Shared Library Parameters.
      139       18               OUTPUT: A/M record to *A file
      140       19               DESCRIPTION: CXC$WRITEAM uses the dcbnum# dcb for writing the
      141       20                       A/M record to the *A file. The dcb name passed as a
      142       21                       parameter is used as the key in generating the keyed
      143       22                       record. The  size of the assign-merge record is calculated
      144       23                       by using the highest allocated address in the assign-merge
      145       24                       record.
      146       25        */
      147       26        /**************************************************************************/
      148       27        CXC$WRITEAM: PROC(DCBNAME$,DCBNUM#,CPSL_PARAM) ;

     27  1 000000   000000 700200 xent  CXC$WRITEAM  TSX0  ! X66_AUTO_3
         1 000001   000156 000003                    ZERO    110,3

      149       28                   %INCLUDE B$JIT;
      150      318                   %INCLUDE CP_6;
      151      399                   %INCLUDE CX_MACROS_M;
      152      450                   %INCLUDE XU_MACRO_C;
      153     3556                   %INCLUDE B_MACROS_C;
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:36   
      154     3667                   %INCLUDE CX_SUBS_C;
      155     3680                   %INCLUDE CX_PERR_C;
      156     3751                   %INCLUDE CX_DATA_R;
      157     4685                   %INCLUDE CP_6_SUBS;
      158     5225                   %INCLUDE CXG_ENTRY ;
      159     5237    1   DCL DCBNAME$ PTR;                       /*Ptr to dcb name*/
      160     5238    1   DCL DCBNUM# SBIN;                       /*Work dcb*/
      161     5239    1   DCL TEMP$ PTR;                                   /*Temp ptr*/
      162     5240    1   DCL ACTIVE_PRIVS BIT(36) ;
      163     5241        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
      164     5259          /***** Based structures and FPTS *****/
      165     5260        %TEXTC;
      166     5265        %B$ALT;
      167     5273        %B$TCB (STCLASS="BASED(B$TCB$)");
      168     5276        %EJECT;
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:37   
      169     5277        %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(CPSL_SEG3$)",PFMT="PTR");
      170     5386        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
      171     5495        %FPT_WRITE(FPTN=FPT_WRITE,STCLASS=AUTO);
      172     5526        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
      173     5568        %CPSL_AMR$PTRS(NAME=AMR$PTRS,STCLASS=BASED);
      174     5573    1   DCL CXC$GETSEG ENTRY(2) ;               /*Get data segment*/
      175     5574    1   DCL CXC$RELSEG ENTRY(1);
      176     5575                                                                                    /**/
      177     5576          %SAVE_ACTIVE_PRIVS;

   5577  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000013 236100                    LDQ     11,,PR0
         1 000004   200007 756100                    STQ     ACTIVE_PRIVS,,AUTO

   5578  1 000005   000013 450100                    STZ     11,,PR0

      178     5580                                                /*Init open fpt*/
      179     5581    1     FPT_OPEN=CPSL_CFPT_OPEN;

   5581  1 000006   000100 100400                    MLR     fill='000'O
         1 000007   000000 000350 xsym               ADSC9   CPSL_CFPT_OPEN           cn=0,n=232
         1 000010   200010 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      180     5582    1     FPT_OPEN.V_=VECTOR(FPT_OPEN.V);

   5582  1 000011   000000 235000 2                  LDA     0
         1 000012   200154 452500                    STP2    FPT_CLOSE+30,,AUTO
         1 000013   200154 236100                    LDQ     FPT_CLOSE+30,,AUTO
         1 000014   000054 036003                    ADLQ    44,DU
         1 000015   200010 757100                    STAQ    FPT_OPEN,,AUTO

      181     5583    1     FPT_OPEN.NAME_=VECTOR(CPSL_STARA);   /*File name*/

   5583  1 000016   000002 237000 2                  LDAQ    2
         1 000017   200016 757100                    STAQ    FPT_OPEN+6,,AUTO

      182     5584    1     FPT_OPEN.V.DCB#=DCBNUM# ; /*Dcb number*/
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:38   

   5584  1 000020   200004 471500                    LDP1    @DCBNUM#,,AUTO
         1 000021   100000 720100                    LXL0    0,,PR1
         1 000022   200054 740100                    STX0    FPT_OPEN+36,,AUTO

      183     5585    1     FPT_OPEN.V.ASN#=%FILE#;

   5585  1 000023   000001 236007                    LDQ     1,DL
         1 000024   200055 552104                    STBQ    FPT_OPEN+37,'04'O,AUTO

      184     5586    1     FPT_OPEN.V.FUN#=%CREATE#;

   5586  1 000025   003000 236007                    LDQ     1536,DL
         1 000026   200055 552110                    STBQ    FPT_OPEN+37,'10'O,AUTO

      185     5587    1     FPT_OPEN.V.EXIST#=%OLDFILE#;

   5587  1 000027   200054 236100                    LDQ     FPT_OPEN+36,,AUTO
         1 000030   000001 376000 2                  ANQ     1
         1 000031   000400 276007                    ORQ     256,DL
         1 000032   200054 756100                    STQ     FPT_OPEN+36,,AUTO

      186     5588    1     FPT_OPEN.V.ORG#=%KEYED#;

   5588  1 000033   002000 236007                    LDQ     1024,DL
         1 000034   200056 552110                    STBQ    FPT_OPEN+38,'10'O,AUTO

      187     5589    1     FPT_OPEN.V.ACS#=%DIRECT#;

   5589  1 000035   000002 236007                    LDQ     2,DL
         1 000036   200056 552104                    STBQ    FPT_OPEN+38,'04'O,AUTO

      188     5590                                                /*Init close fpt*/
      189     5591    1     FPT_CLOSE = CPSL_CFPT_CLOSE ;

   5591  1 000037   000100 100400                    MLR     fill='000'O
         1 000040   000000 000170 xsym               ADSC9   CPSL_CFPT_CLOSE          cn=0,n=120
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:39   
         1 000041   200116 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

      190     5592    1     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V) ;

   5592  1 000042   000004 235000 2                  LDA     4
         1 000043   200154 452500                    STP2    FPT_CLOSE+30,,AUTO
         1 000044   200154 236100                    LDQ     FPT_CLOSE+30,,AUTO
         1 000045   000150 036003                    ADLQ    104,DU
         1 000046   200116 757100                    STAQ    FPT_CLOSE,,AUTO

      191     5593                                                /*Open the *A file*/
      192     5594    1     CALL M$OPEN(FPT_OPEN) ALTRET(CXC$WRITEAM50);

   5594  1 000047   200010 630500                    EPPR0   FPT_OPEN,,AUTO
         1 000050   450000 713400                    CLIMB   alt,open
         1 000051   410400 401760                    pmme    nvectors=18
         1 000052   000236 702000 1                  TSX2    CXC$WRITEAM50

      193     5595          %RESTORE_ACTIVE_PRIVS;

   5596  1 000053   200007 236100                    LDQ     ACTIVE_PRIVS,,AUTO
         1 000054   000000 470400 xsym               LDP0    B$JIT$
         1 000055   000013 756100                    STQ     11,,PR0

      194     5598                                                /*Init. Write fpt*/
      195     5599    1     FPT_WRITE=CPSL_CFPT_WRITE;

   5599  1 000056   000100 100400                    MLR     fill='000'O
         1 000057   000000 000060 xsym               ADSC9   CPSL_CFPT_WRITE          cn=0,n=48
         1 000060   200102 000060                    ADSC9   FPT_WRITE,,AUTO          cn=0,n=48

      196     5600    1     FPT_WRITE.V_=VECTOR(FPT_WRITE.V);

   5600  1 000061   000004 235000 2                  LDA     4
         1 000062   200154 452500                    STP2    FPT_CLOSE+30,,AUTO
         1 000063   200154 236100                    LDQ     FPT_CLOSE+30,,AUTO
         1 000064   000112 036003                    ADLQ    74,DU
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:40   
         1 000065   200102 757100                    STAQ    FPT_WRITE,,AUTO

      197     5601    1     FPT_WRITE.BUF_.BUF$=CPSL_SEG3$;

   5601  1 000066   000000 236000 xsym               LDQ     CPSL_SEG3$
         1 000067   200107 756100                    STQ     FPT_WRITE+5,,AUTO

      198     5602        /*
      199     5603          ****  Set the bits in the jit if this is a set of #1,#2,#3,#4
      200     5604        */
      201     5605    1     IF (DCBNAME$ -> TEXTC = CPSL_SOURCEDCB)

   5605  1 000070   200003 471500                    LDP1    @DCBNAME$,,AUTO
         1 000071   100000 473500                    LDP3    0,,PR1
         1 000072   000100 101500                    MRL     fill='000'O
         1 000073   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000074   200154 000002                    ADSC9   FPT_CLOSE+30,,AUTO       cn=0,n=2
         1 000075   200154 220100                    LDX0    FPT_CLOSE+30,,AUTO
         1 000076   000001 621010                    EAX1    1,X0
         1 000077   000000 106540                    CMPC    fill='000'O
         1 000100   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         1 000101   000000 000003 xsym               ADSC9   CPSL_SOURCEDCB           cn=0,n=3
         1 000102   000106 601000 1                  TNZ     s:5608

      202     5606    1        THEN
      203     5607    1           B$JIT.PRFLAGS.SI = %YES#;

   5607  1 000103   400000 236003                    LDQ     -131072,DU
         1 000104   000030 256100                    ORSQ    24,,PR0
         1 000105   000154 710000 1                  TRA     s:5620

      204     5608    1        ELSE IF (DCBNAME$ -> TEXTC = CPSL_UPDATEDCB)

   5608  1 000106   100000 473500                    LDP3    0,,PR1
         1 000107   000100 101500                    MRL     fill='000'O
         1 000110   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000111   200154 000002                    ADSC9   FPT_CLOSE+30,,AUTO       cn=0,n=2
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:41   
         1 000112   200154 220100                    LDX0    FPT_CLOSE+30,,AUTO
         1 000113   000001 621010                    EAX1    1,X0
         1 000114   000000 106540                    CMPC    fill='000'O
         1 000115   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         1 000116   000000 000003 xsym               ADSC9   CPSL_UPDATEDCB           cn=0,n=3
         1 000117   000123 601000 1                  TNZ     s:5611

      205     5609    1              THEN
      206     5610    1                 B$JIT.PRFLAGS.UI = %YES#;

   5610  1 000120   200000 236003                    LDQ     65536,DU
         1 000121   000030 256100                    ORSQ    24,,PR0
         1 000122   000154 710000 1                  TRA     s:5620

      207     5611    1              ELSE IF (DCBNAME$ -> TEXTC = CPSL_OBJECTDCB)

   5611  1 000123   100000 473500                    LDP3    0,,PR1
         1 000124   000100 101500                    MRL     fill='000'O
         1 000125   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000126   200154 000002                    ADSC9   FPT_CLOSE+30,,AUTO       cn=0,n=2
         1 000127   200154 220100                    LDX0    FPT_CLOSE+30,,AUTO
         1 000130   000001 621010                    EAX1    1,X0
         1 000131   000000 106540                    CMPC    fill='000'O
         1 000132   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         1 000133   000000 000003 xsym               ADSC9   CPSL_OBJECTDCB           cn=0,n=3
         1 000134   000140 601000 1                  TNZ     s:5614

      208     5612    1                    THEN
      209     5613    1                        B$JIT.PRFLAGS.OU = %YES#;

   5613  1 000135   100000 236003                    LDQ     32768,DU
         1 000136   000030 256100                    ORSQ    24,,PR0
         1 000137   000154 710000 1                  TRA     s:5620

      210     5614    1                    ELSE IF (DCBNAME$ -> TEXTC = CPSL_LISTDCB)

   5614  1 000140   100000 473500                    LDP3    0,,PR1
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:42   
         1 000141   000100 101500                    MRL     fill='000'O
         1 000142   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000143   200154 000002                    ADSC9   FPT_CLOSE+30,,AUTO       cn=0,n=2
         1 000144   200154 220100                    LDX0    FPT_CLOSE+30,,AUTO
         1 000145   000001 621010                    EAX1    1,X0
         1 000146   000000 106540                    CMPC    fill='000'O
         1 000147   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         1 000150   000000 000003 xsym               ADSC9   CPSL_LISTDCB             cn=0,n=3
         1 000151   000154 601000 1                  TNZ     s:5620

      211     5615    1                          THEN
      212     5616    1                             B$JIT.PRFLAGS.LS = %YES#;

   5616  1 000152   040000 236003                    LDQ     16384,DU
         1 000153   000030 256100                    ORSQ    24,,PR0

      213     5617        /*
      214     5618          ****  Calculate actual size of record
      215     5619        */
      216     5620    1     TEMP$=PINCRW(AMR$REC$.V_,SIZEW(AMR$REC$.V));

   5620  1 000154   000000 473400 xsym               LDP3    CPSL_SEG3$
         1 000155   300000 236100                    LDQ     0,,PR3
         1 000156   000026 036003                    ADLQ    22,DU
         1 000157   200006 756100                    STQ     TEMP$,,AUTO

      217     5621    1     FPT_WRITE.BUF_.BOUND=POFFC(TEMP$->

   5621  1 000160   000000 236000 xsym               LDQ     CPSL_SEG3$
         1 000161   000020 772000                    QRL     16
         1 000162   200154 756100                    STQ     FPT_CLOSE+30,,AUTO
         1 000163   200006 474500                    LDP4    TEMP$,,AUTO
         1 000164   400000 236100                    LDQ     0,,PR4
         1 000165   000020 772000                    QRL     16
         1 000166   200154 136100                    SBLQ    FPT_CLOSE+30,,AUTO
         1 000167   000020 736000                    QLS     16
         1 000170   200106 676100                    ERQ     FPT_WRITE+4,,AUTO
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:43   
         1 000171   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 000172   200106 656100                    ERSQ    FPT_WRITE+4,,AUTO

      218     5622    1          AMR$PTRS.HI_SEGMENT$,CPSL_SEG3$);
      219     5623    1     FPT_WRITE.KEY_=VECTOR(DCBNAME$->TEXTC);

   5623  1 000173   100000 475500                    LDP5    0,,PR1
         1 000174   000100 101500                    MRL     fill='000'O
         1 000175   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         1 000176   200154 000002                    ADSC9   FPT_CLOSE+30,,AUTO       cn=0,n=2
         1 000177   200154 220100                    LDX0    FPT_CLOSE+30,,AUTO
         1 000200   000001 621010                    EAX1    1,X0
         1 000201   000000 635011                    EAA     0,X1
         1 000202   000002 771000                    ARL     2
         1 000203   000140 135007                    SBLA    96,DL
         1 000204   200155 455500                    STP5    FPT_CLOSE+31,,AUTO
         1 000205   200155 236100                    LDQ     FPT_CLOSE+31,,AUTO
         1 000206   200104 757100                    STAQ    FPT_WRITE+2,,AUTO

      220     5624    1     FPT_WRITE.V.ONEWKEY#=%YES#;

   5624  1 000207   000400 236007                    LDQ     256,DL
         1 000210   200112 256100                    ORSQ    FPT_WRITE+8,,AUTO

      221     5625    1     FPT_WRITE.V.DCB#=DCBNUM# ;

   5625  1 000211   200004 475500                    LDP5    @DCBNUM#,,AUTO
         1 000212   500000 720100                    LXL0    0,,PR5
         1 000213   200112 740100                    STX0    FPT_WRITE+8,,AUTO

      222     5626    1     CALL M$WRITE(FPT_WRITE) ALTRET(CXC$WRITEAM55);

   5626  1 000214   200102 630500                    EPPR0   FPT_WRITE,,AUTO
         1 000215   440001 713400                    CLIMB   alt,write
         1 000216   401400 401760                    pmme    nvectors=4
         1 000217   000241 702000 1                  TSX2    CXC$WRITEAM55

PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:44   
      223     5627                                                /*Init. Close dcb*/
      224     5628    1     FPT_CLOSE.V.DCB#=DCBNUM# ;

   5628  1 000220   200004 470500                    LDP0    @DCBNUM#,,AUTO
         1 000221   000000 720100                    LXL0    0,,PR0
         1 000222   200150 740100                    STX0    FPT_CLOSE+26,,AUTO

      225     5629    1     FPT_CLOSE.V.DISP#=%SAVE#;

   5629  1 000223   000002 236007                    LDQ     2,DL
         1 000224   200150 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      226     5630    1     CALL M$CLOSE(FPT_CLOSE) ALTRET(CXC$WRITEAM55);

   5630  1 000225   200116 630500                    EPPR0   FPT_CLOSE,,AUTO
         1 000226   450001 713400                    CLIMB   alt,close
         1 000227   406000 401760                    pmme    nvectors=13
         1 000230   000241 702000 1                  TSX2    CXC$WRITEAM55

      227     5631    1     CALL CXC$RELSEG (CPSL_SEG3$);

   5631  1 000231   000005 630400 2                  EPPR0   5
         1 000232   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000233   000000 701000 xent               TSX1    CXC$RELSEG
         1 000234   000000 011000                    NOP     0

      228     5632    1     RETURN;

   5632  1 000235   000000 702200 xent               TSX2  ! X66_ARET

      229     5633    1   CXC$WRITEAM50:
      230     5634          %RESTORE_ACTIVE_PRIVS;

   5635  1 000236   200007 236100       CXC$WRITEAM* LDQ     ACTIVE_PRIVS,,AUTO
         1 000237   000000 470400 xsym               LDP0    B$JIT$
         1 000240   000013 756100                    STQ     11,,PR0

PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:45   
   5629  1 000241                       CXC$WRITEAM* null
      231     5637    1   CXC$WRITEAM55:;
      232     5638    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;

   5638  1 000241   000000 470400 xsym               LDP0    B$TCB$
         1 000242   000000 471500                    LDP1    0,,PR0
         1 000243   100102 236100                    LDQ     66,,PR1
         1 000244   200005 473500                    LDP3    @CPSL_PARAM,,AUTO
         1 000245   300002 756100                    STQ     2,,PR3

      233     5639    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   5639  1 000246   000006 236000 2                  LDQ     6
         1 000247   300001 356100                    ANSQ    1,,PR3

      234     5640    1     FPT_CLOSE.V.DCB#=DCBNUM# ;

   5640  1 000250   200004 471500                    LDP1    @DCBNUM#,,AUTO
         1 000251   100000 720100                    LXL0    0,,PR1
         1 000252   200150 740100                    STX0    FPT_CLOSE+26,,AUTO

      235     5641    1     FPT_CLOSE.V.DISP#=%SAVE#;

   5641  1 000253   000002 236007                    LDQ     2,DL
         1 000254   200150 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      236     5642    1     CALL M$CLOSE(FPT_CLOSE);

   5642  1 000255   200116 630500                    EPPR0   FPT_CLOSE,,AUTO
         1 000256   050001 713400                    CLIMB   close
         1 000257   406000 401760                    pmme    nvectors=13

      237     5643    1     CALL CXC$RELSEG (CPSL_SEG3$);

   5643  1 000260   000005 630400 2                  EPPR0   5
         1 000261   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000262   000000 701000 xent               TSX1    CXC$RELSEG
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:46   
         1 000263   000000 011000                    NOP     0

      238     5644    1     RETURN;

   5644  1 000264   000000 702200 xent               TSX2  ! X66_ARET
      239     5645    1   END CXC$WRITEAM;

PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:47   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXC$WRITEAM.
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:48   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @CPSL_PARAM                3-0-0/w PTR         r     1 @DCBNAME$
     4-0-0/w PTR         r     1 @DCBNUM#                   7-0-0/b BIT         r     1 ACTIVE_PRIVS
    *0-0-0/w STRC(180)   r     1 CPSL_PARAM                *0-0-0/w PTR         r     1 DCBNAME$
    *0-0-0/w SBIN        r     1 DCBNUM#                  116-0-0/d STRC(1080)  r     1 FPT_CLOSE
    10-0-0/d STRC(2088)  r     1 FPT_OPEN                 102-0-0/d STRC(432)   r     1 FPT_WRITE
     6-0-0/w PTR         r     1 TEMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(1080)  r     1 CPSL_CFPT_CLOSE            0-0-0/d STRC(2088)  r     1 CPSL_CFPT_OPEN
     0-0-0/d STRC(432)   r     1 CPSL_CFPT_WRITE            0-0-0/d STRC(27)    r     1 CPSL_LISTDCB
     0-0-0/d STRC(27)    r     1 CPSL_OBJECTDCB             0-0-0/w PTR         r     1 CPSL_SEG3$
     0-0-0/d STRC(27)    r     1 CPSL_SOURCEDCB             0-0-0/c STRC(27)    r     1 CPSL_STARA
     0-0-0/d STRC(27)    r     1 CPSL_UPDATEDCB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 AMR$PTRS                   0-0-0/d STRC(1440)  r     1 AMR$REC$
     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/c ASTR(9)     r     1 TEXTC

PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:49   

   Procedure CXC$WRITEAM requires 181 words for executable code.
   Procedure CXC$WRITEAM requires 110 words of local(AUTO) storage.

    No errors detected in file CXC$SUBR2.:E05TSI    .
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:50   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:51   
          MINI XREF LISTING

ACTIVE_PRIVS
      5240**DCL      5577<<ASSIGN   5596>>ASSIGN   5635>>ASSIGN
AMR$PTRS.HI_SEGMENT$
      5570**DCL      5621>>ASSIGN
AMR$REC$.ACSVEH_
      5344**DCL      5345--REDEF
AMR$REC$.ALTKEYS_
      5350**DCL      5351--REDEF    5351--REDEF
AMR$REC$.HDR_
      5349**DCL      5350--REDEF
AMR$REC$.TAB_
      5348**DCL      5349--REDEF
AMR$REC$.UHL_
      5342**DCL      5343--REDEF    5343--REDEF
AMR$REC$.V
      5351**DCL      5620--ASSIGN
AMR$REC$.V.FSN#
      5382**DCL      5382--REDEF    5382--REDEF
AMR$REC$.V_
      5342**DCL      5620>>ASSIGN
AMR$REC$.WSN_
      5348**DCL      5348--REDEF
B$ALT.CODE
      5267**DCL      5267--REDEF    5268--REDEF    5268--REDEF
B$ALT.ERR
      5268**DCL      5638>>ASSIGN
B$ALT.ERR.ERR#
      5269**DCL      5269--REDEF
B$ALT.EVID
      5268**DCL      5268--REDEF    5268--REDEF
B$JIT.CPFLAGS1.SLEAZE
       136**DCL       136--REDEF
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:52   
B$JIT.ERR.MID
        43**DCL        43--REDEF
B$JIT.JRESPEAK
       204**DCL       205--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       313**DCL       313--REDEF     314--REDEF
B$JIT.PNR
       217**DCL       217--REDEF
B$JIT.PRFLAGS.LS
       126**DCL      5616<<ASSIGN
B$JIT.PRFLAGS.OU
       126**DCL      5613<<ASSIGN
B$JIT.PRFLAGS.SI
       126**DCL      5607<<ASSIGN
B$JIT.PRFLAGS.UI
       126**DCL      5610<<ASSIGN
B$JIT.PRIV.ACTIVE
        43**DCL      5577>>ASSIGN   5578<<ASSIGN   5596<<ASSIGN   5635<<ASSIGN
B$JIT.TSLINE
       311**DCL       312--REDEF
B$JIT$
      4652**DCL        37--IMP-PTR  5577>>ASSIGN   5578>>ASSIGN   5596>>ASSIGN   5607>>ASSIGN   5610>>ASSIGN
      5613>>ASSIGN   5616>>ASSIGN   5635>>ASSIGN
B$TCB.ALT$
      5274**DCL      5638>>ASSIGN
B$TCB$
      4653**DCL      5274--IMP-PTR  5638>>ASSIGN
CPSL_CAMR_REC.ACSVEH_
      3940**DCL      3941--REDEF
CPSL_CAMR_REC.ALTKEYS_
      3946**DCL      3947--REDEF    3947--REDEF
CPSL_CAMR_REC.HDR_
      3945**DCL      3946--REDEF
CPSL_CAMR_REC.TAB_
      3944**DCL      3945--REDEF
CPSL_CAMR_REC.UHL_
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:53   
      3938**DCL      3939--REDEF    3939--REDEF
CPSL_CAMR_REC.V.FSN#
      3978**DCL      3978--REDEF    3978--REDEF
CPSL_CAMR_REC.WSN_
      3944**DCL      3944--REDEF
CPSL_CFPT_CLOSE
      4005**DCL      5591>>ASSIGN
CPSL_CFPT_CLOSE.SN_
      4005**DCL      4005--REDEF
CPSL_CFPT_CLOSE.UTL_
      4006**DCL      4006--REDEF
CPSL_CFPT_CLOSE.V.EXPIRE#
      4020**DCL      4020--REDEF
CPSL_CFPT_CLOSE.V.TYPE#
      4018**DCL      4018--REDEF
CPSL_CFPT_CLOSE.V.XTNSIZE#
      4015**DCL      4015--REDEF    4017--REDEF
CPSL_CFPT_OPEN
      3829**DCL      5581>>ASSIGN
CPSL_CFPT_OPEN.ACSVEH_
      3831**DCL      3832--REDEF
CPSL_CFPT_OPEN.ALTKEYS_
      3837**DCL      3838--REDEF    3838--REDEF
CPSL_CFPT_OPEN.HDR_
      3836**DCL      3837--REDEF
CPSL_CFPT_OPEN.TAB_
      3835**DCL      3836--REDEF
CPSL_CFPT_OPEN.UHL_
      3829**DCL      3830--REDEF    3830--REDEF
CPSL_CFPT_OPEN.V.FSN#
      3869**DCL      3869--REDEF    3869--REDEF
CPSL_CFPT_OPEN.WSN_
      3835**DCL      3835--REDEF
CPSL_CFPT_READ.STATION_
      4044**DCL      4045--REDEF
CPSL_CFPT_READ.V.DVBYTE.REREAD#
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:54   
      4056**DCL      4056--REDEF
CPSL_CFPT_READ.V.INDX#
      4054**DCL      4054--REDEF
CPSL_CFPT_WRITE
      4080**DCL      5599>>ASSIGN
CPSL_CFPT_WRITE.STATION_
      4082**DCL      4082--REDEF
CPSL_CFPT_WRITE.V.DVBYTE.VFC#
      4089**DCL      4089--REDEF
CPSL_CVLP_TRMCTL.BREAKCOUNT
      4473**DCL      4474--REDEF
CPSL_CVLP_WINDOW.FWINDOW#
      4569**DCL      4569--REDEF    4570--REDEF
CPSL_LISTDCB
      4667**DCL      5614>>IF
CPSL_OBJECTDCB
      4664**DCL      5611>>IF
CPSL_PARAM
      5242**DCL        27--PROC
CPSL_PARAM.ERRCODE
      5250**DCL      5638<<ASSIGN
CPSL_PARAM.FLAGS.REPORTED_TO_USER
      5247**DCL      5639<<ASSIGN
CPSL_SEG3$
      4655**DCL      5342--IMP-PTR  5601>>ASSIGN   5620>>ASSIGN   5621>>ASSIGN   5631<>CALL     5643<>CALL
CPSL_SOURCEDCB
      4658**DCL      5605>>IF
CPSL_STARA
      4679**DCL      5583--ASSIGN
CPSL_UPDATEDCB
      4661**DCL      5608>>IF
CXC$RELSEG
      5574**DCL-ENT  5631--CALL     5643--CALL
CXC$WRITEAM50
      5635**LABEL    5594--CALLALT
CXC$WRITEAM55
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:55   
      5629**LABEL    5626--CALLALT  5630--CALLALT
DCBNAME$
      5237**DCL        27--PROC     5605>>IF       5605>>IF       5608>>IF       5608>>IF       5611>>IF
      5611>>IF       5614>>IF       5614>>IF       5623>>ASSIGN   5623>>ASSIGN
DCBNUM#
      5238**DCL        27--PROC     5584>>ASSIGN   5625>>ASSIGN   5628>>ASSIGN   5640>>ASSIGN
FPT_CLOSE
      5549**DCL      5591<<ASSIGN   5630<>CALL     5642<>CALL
FPT_CLOSE.SN_
      5549**DCL      5549--REDEF
FPT_CLOSE.UTL_
      5550**DCL      5550--REDEF
FPT_CLOSE.V
      5554**DCL      5592--ASSIGN
FPT_CLOSE.V.DCB#
      5555**DCL      5628<<ASSIGN   5640<<ASSIGN
FPT_CLOSE.V.DISP#
      5558**DCL      5629<<ASSIGN   5641<<ASSIGN
FPT_CLOSE.V.EXPIRE#
      5564**DCL      5564--REDEF
FPT_CLOSE.V.TYPE#
      5562**DCL      5562--REDEF
FPT_CLOSE.V.XTNSIZE#
      5559**DCL      5559--REDEF    5561--REDEF
FPT_CLOSE.V_
      5549**DCL      5592<<ASSIGN
FPT_OPEN
      5451**DCL      5581<<ASSIGN   5594<>CALL
FPT_OPEN.ACSVEH_
      5453**DCL      5454--REDEF
FPT_OPEN.ALTKEYS_
      5459**DCL      5460--REDEF    5460--REDEF
FPT_OPEN.HDR_
      5458**DCL      5459--REDEF
FPT_OPEN.NAME_
      5452**DCL      5583<<ASSIGN
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:56   
FPT_OPEN.TAB_
      5457**DCL      5458--REDEF
FPT_OPEN.UHL_
      5451**DCL      5452--REDEF    5452--REDEF
FPT_OPEN.V
      5460**DCL      5582--ASSIGN
FPT_OPEN.V.ACS#
      5471**DCL      5589<<ASSIGN
FPT_OPEN.V.ASN#
      5470**DCL      5585<<ASSIGN
FPT_OPEN.V.DCB#
      5460**DCL      5584<<ASSIGN
FPT_OPEN.V.EXIST#
      5464**DCL      5587<<ASSIGN
FPT_OPEN.V.FSN#
      5491**DCL      5491--REDEF    5491--REDEF
FPT_OPEN.V.FUN#
      5470**DCL      5586<<ASSIGN
FPT_OPEN.V.ORG#
      5471**DCL      5588<<ASSIGN
FPT_OPEN.V_
      5451**DCL      5582<<ASSIGN
FPT_OPEN.WSN_
      5457**DCL      5457--REDEF
FPT_WRITE
      5512**DCL      5599<<ASSIGN   5626<>CALL
FPT_WRITE.BUF_.BOUND
      5512**DCL      5621<<ASSIGN
FPT_WRITE.BUF_.BUF$
      5514**DCL      5601<<ASSIGN
FPT_WRITE.KEY_
      5512**DCL      5623<<ASSIGN
FPT_WRITE.STATION_
      5514**DCL      5514--REDEF
FPT_WRITE.V
      5515**DCL      5600--ASSIGN
PL6.E3A0      #002=CXC$WRITEAM File=CXC$SUBR2.:E05TSI                            TUE 07/29/97 12:27 Page:57   
FPT_WRITE.V.DCB#
      5515**DCL      5625<<ASSIGN
FPT_WRITE.V.DVBYTE.VFC#
      5521**DCL      5521--REDEF
FPT_WRITE.V.ONEWKEY#
      5517**DCL      5624<<ASSIGN
FPT_WRITE.V_
      5512**DCL      5600<<ASSIGN
M$CLOSE
       327**DCL-ENT  5630--CALL     5642--CALL
M$OPEN
       327**DCL-ENT  5594--CALL
M$WRITE
       328**DCL-ENT  5626--CALL
TEMP$
      5239**DCL      5620<<ASSIGN   5621>>ASSIGN
TEXTC
      5261**DCL      5605>>IF       5608>>IF       5611>>IF       5614>>IF       5623--ASSIGN
TEXTC.SIZ
      5262**DCL      5263--IMP-SIZ  5605>>IF       5608>>IF       5611>>IF       5614>>IF       5623>>ASSIGN
