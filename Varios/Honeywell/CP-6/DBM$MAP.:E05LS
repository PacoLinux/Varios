VERSION E05

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:1    
        1        1        /*M* DBM$GETMEM - FEP memory management routines for ANLZ */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
        8        8
        9        9        DBM$GETMEM: PROC(L6ADDR,UBUF,SYSID,L6BYTES,ARS,MINBYTES,DOMAYN,USECACHE,CACHEIT,
                 9            CACHEPGS) ALTRET;
       10       10        /**/
       11       11        /*F*    NAME:  DBM$GETMEM
       12       12                CALL:  CALL DBM$GETMEM(L6ADDR,UBUF,SYSID,L6BYTES,ARS,MINBYTES) ALTRET;
       13       13                INPUT:  L6ADDR - Level 6 memory address (word address).
       14       14                        UBUF - Buffer in which to return fetched memory contents.
       15       15                        SYSID - Determines which user's address space the memory
       16       16                                is to be fetched from.  A value of zero specifies
       17       17                                the monitor address space.  A positive value is
       18       18                                a user's SYSID.  A negative value is minus the
       19       19                                user number.  If DOMAYN is DB#DOMAIN_ASDT then SYSID
       20       20                                is the real memory address of the ASDT.
       21       21                        L6BYTES - The number of bytes of memory to be fetched.
       22       22                        MINBYTES - Minimum number of bytes to return.
       23       23                        DOMAYN - Which domain.  Equates for this parameter are
       24       24                                 DB#DOMAIN_? in DB_MACRO_M.  Default is DB#DOMAIN_MONUSR
       25       25                                 which means monitor domain if SYSID is zero and user
       26       26                                 domain if SYSID is non-zero.
       27       27                OUTPUT: UBUF - Contents of specified memory area.
       28       28                        ARS - Actual number of bytes fetched.
       29       29                DESCRIPTION:
       30       30                   Moves the contents of the specified FEP memory locations
       31       31                to a user supplied buffer.  The memory contents are retained
       32       32                in unpacked format.  The user buffer is filled until the number
       33       33                of bytes specified in L6BYTES have been transfered or a missing
       34       34                page is encountered.  If less that MINBYTES are transfered the
       35       35                alternate return is taken.  Otherwise a normal return is taken.
       36       36                MINBYTES is optional.
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:2    
       37       37        */
       38       38        /**/
       39       39    1   DCL L6ADDR UBIN;
       40       40    1   DCL UBUF CHAR(L6BYTES) CALIGNED;
       41       41    1   DCL SYSID SBIN;
       42       42    1   DCL L6BYTES UBIN;
       43       43    1   DCL ARS UBIN;
       44       44    1   DCL MINBYTES SBIN;
       45       45    1   DCL DOMAYN SBIN;
       46       46    1   DCL USECACHE UBIN ;
       47       47    1   DCL CACHEIT UBIN ;
       48       48    1   DCL CACHEPGS UBIN ;
       49       49        /**/
       50       50        %INCLUDE CP_6;
       51     5609        %INCLUDE DA_MAP_R;
       52     5639        %INCLUDE DB_MACRO_M;
       53     5670        %DB$MAP_EQUS;
       54     5680        %INCLUDE XUR_ENTRY;
       55     5712        %INCLUDE B$TABLES_C;
       56     5820        /**/
       57     5821    1   DCL M$FPRG DCB;
       58     5822        /**/
       59     5823    1   DCL DBM$SYSID2UN ENTRY(1) ALTRET;
       60     5824    1   DCL DBM$CHECKUN ENTRY(1) ALTRET;
       61     5825    1   DCL DBM$GETMLCP ENTRY(5) ALTRET;
       62     5826    1   DCL DBM$READ_PAGE ENTRY(1) ALTRET;
       63     5827    1   DCL DBM$VIRT2REAL ENTRY(4) ALTRET;
       64     5828    1   DCL DBM$PACK1 ENTRY(2);
       65     5829    1   DCL DBM$PACK2 ENTRY(2);
       66     5830    1   DCL DBM$PACK4 ENTRY(2);
       67     5831    1   DCL DBM$PACK ENTRY(3);
       68     5832    1   DCL DBM$UNPACK ENTRY(3);
       69     5833    1   DCL DBB$HEXDUMP ENTRY(4);
       70     5834        /**/
       71     5835    1   DCL U# UBIN;
       72     5836    1   DCL ASDT$ PTR;
       73     5837    1   DCL LARS SBIN WORD;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:3    
       74     5838    1   DCL MOVESIZE UBIN WORD;
       75     5839    1   DCL REMSIZE SBIN WORD;
       76     5840    1   DCL BYTEOFFSET SBIN WORD;
       77     5841    1   DCL CURPAGE SBIN WORD;
       78     5842    1   DCL L6BA UBIN;
       79     5843    1   DCL LUSECACHE UBIN;
       80     5844    1   DCL LCACHEIT UBIN;
       81     5845    1   DCL LCACHEPGS UBIN;
       82     5846    1   DCL MBYTES SBIN;
       83     5847    1   DCL ABYTES SBIN;
       84     5848    1   DCL PPAGE UBIN;
       85     5849    1   DCL PAGECNT UBIN;
       86     5850    1   DCL LSYSID SBIN;
       87     5851    1   DCL LDOM SBIN;
       88     5852        /**/
       89     5853    1   DCL DB_MONASDT UBIN SYMREF;
       90     5854    1   DCL DB_USERASDT UBIN SYMREF;
       91     5855    1   DCL DB_DUMP_BUFFER CHAR(512) SYMREF;
       92     5856    1   DCL DB_CUN UBIN SYMREF;
       93     5857
       94     5858    1   DCL DB_DUMP_MSG BIT(1) STATIC SYMDEF INIT('0'B);
       95     5859        /**/
       96     5860        %B$XL_ASC_DUMP (NAME=DA_PRINTABLE_TBL);
       97     5864        /**/
       98     5865    1   DCL ASDT UBIN BASED(ASDT$);
       99     5866        /**/
      100     5867    1   DCL B$TCB$ PTR SYMREF READONLY;
      101     5868        %B$TCB;
      102     5871        %B$ALT;
      103     5879        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      104     5880        /**/
      105     5881        %EQU K64=1024*64;
      106     5882        %EJECT;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:4    
      107     5883        /**/
      108     5884    1      IF ADDR(ARS)~=ADDR(NIL) THEN ARS=0;
      109     5885    1      IF ADDR(SYSID)=ADDR(NIL) THEN
      110     5886    1           LSYSID=0;
      111     5887    1      ELSE
      112     5888    1           LSYSID=SYSID;
      113     5889        /**/
      114     5890    1      IF ADDR(DOMAYN)=ADDR(NIL) THEN
      115     5891    1           LDOM=%DB#DOMAIN_MONUSR;
      116     5892    1      ELSE
      117     5893    1           LDOM=DOMAYN;
      118     5894        /**/
      119     5895    1      LUSECACHE=0;
      120     5896    1      LCACHEIT=0;
      121     5897    1      LCACHEPGS=0;
      122     5898    1      IF ADDR(USECACHE)~=ADDR(NIL) THEN
      123     5899    1           LUSECACHE=USECACHE;
      124     5900    1      IF ADDR(CACHEIT)~=ADDR(NIL) THEN
      125     5901    1           LCACHEIT=CACHEIT;
      126     5902    1      IF ADDR(CACHEPGS)~=ADDR(NIL) THEN
      127     5903    1           LCACHEPGS=CACHEPGS;
      128     5904        /**/
      129     5905    1      LARS=0;
      130     5906    2      IF DA_DUMPFILE THEN DO;
      131     5907    3           CALL ASK_DUMPFILE WHENALTRETURN DO; ALTRETURN; END;
      132     5908    2           END;
      133     5909    2      ELSE DO;
      134     5910    3           CALL ASK_FEP(LDOM) WHENALTRETURN DO; ALTRETURN; END;
      135     5911    2           END;
      136     5912        /**/
      137     5913    1      IF ADDR(ARS)~=ADDR(NIL) THEN ARS=LARS;
      138     5914    1      IF ADDR(MINBYTES)~=ADDR(NIL) AND LARS<MINBYTES THEN
      139     5915    1           ALTRETURN;
      140     5916    1      ELSE
      141     5917    1           RETURN;
      142     5918        /**/
      143     5919        %EJECT;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:5    
      144     5920    1   DBM$GETLCT: ENTRY(L6ADDR,UBUF,SYSID,L6BYTES) ALTRET;
      145     5921
      146     5922    1      LSYSID=0;
      147     5923    1      LARS=0;
      148     5924
      149     5925    2      CALL ASK_FEP(%DB#DOMAIN_LCT) WHENALTRETURN DO;
      150     5926    2           ALTRETURN;
      151     5927    2           END;
      152     5928    1      RETURN;
      153     5929        /**/
      154     5930        %EJECT;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:6    
      155     5931        /**/
      156     5932
      157     5933    1   ASK_DUMPFILE: PROC ALTRET;
      158     5934        /**/
      159     5935    3      DO CASE(LDOM);
      160     5936    3       CASE(%DB#DOMAIN_MONUSR,%DB#DOMAIN_MON,%DB#DOMAIN_USR);
      161     5937    4         IF LSYSID~=0 THEN DO;
      162     5938    5              IF LSYSID>0 THEN DO;
      163     5939    6                   CALL DBM$SYSID2UN(LSYSID) WHENRETURN DO;
      164     5940    6                        U#=DB_CUN;
      165     5941    6                        END;
      166     5942    6                   WHENALTRETURN DO;
      167     5943    6                        ALTRETURN;
      168     5944    6                        END;
      169     5945    5                   END;
      170     5946    5              ELSE DO;
      171     5947    5                   U#=-LSYSID;
      172     5948    6                   CALL DBM$CHECKUN(U#) WHENALTRETURN DO;
      173     5949    6                        ALTRETURN;
      174     5950    6                        END;
      175     5951    5                   END;
      176     5952    4              ASDT$=ADDR(DB_USERASDT);
      177     5953    4              END;
      178     5954    4         ELSE DO;
      179     5955    4              ASDT$=ADDR(DB_MONASDT);
      180     5956    4              END;
      181     5957    3       CASE(%DB#DOMAIN_ASDT);
      182     5958    3         PPAGE=SYSID/256;
      183     5959    3         L6BA=2*MOD(SYSID,256);
      184     5960    4         CALL DBM$READ_PAGE(PPAGE) WHENALTRETURN DO;
      185     5961    4              ALTRETURN;
      186     5962    4              END;
      187     5963    3         CALL DBM$PACK(SUBSTR(DB_DUMP_BUFFER,L6BA),DB_USERASDT,31*4);
      188     5964    3         DB_CUN=512;
      189     5965    3         ASDT$=ADDR(DB_USERASDT);
      190     5966    3       CASE(%DB#DOMAIN_REAL);
      191     5967    3         ASDT$=ADDR(NIL);
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:7    
      192     5968    3       CASE(%DB#DOMAIN_LCT);
      193     5969    3         CALL DBM$GETMLCP( L6ADDR,UBUF,MOD(L6ADDR,1024)/2,L6BYTES,LARS)
      194     5970    4         WHENALTRETURN DO; ALTRETURN; END;
      195     5971    3         RETURN;
      196     5972    3       CASE(ELSE);
      197     5973    3         CALL M$XXX;
      198     5974    3         END;
      199     5975        /**/
      200     5976        /**/
      201     5977    2      REMSIZE=L6BYTES;
      202     5978    2      L6BA=L6ADDR*2;
      203     5979    2      BYTEOFFSET=MOD(L6BA,512);
      204     5980    3      DO WHILE(REMSIZE>0);
      205     5981    3           CURPAGE=(L6BA+LARS)/512;
      206     5982    4           CALL DBM$VIRT2REAL(ASDT,CURPAGE,PPAGE,PAGECNT) WHENRETURN DO;
      207     5983    4                ABYTES=PAGECNT*512-BYTEOFFSET;
      208     5984    5                DO WHILE(ABYTES>0 AND REMSIZE>0);
      209     5985    6                     CALL DBM$READ_PAGE(PPAGE) WHENRETURN DO;
      210     5986    6                          MBYTES=MINIMUM(512-BYTEOFFSET,REMSIZE);
      211     5987    6                          SUBSTR(UBUF,LARS,MBYTES)=SUBSTR(DB_DUMP_BUFFER,BYTEOFFSET,
              5987                                   MBYTES);
      212     5988    6                          LARS=LARS+MBYTES;
      213     5989    6                          REMSIZE=REMSIZE-MBYTES;
      214     5990    6                          ABYTES=ABYTES-MBYTES;
      215     5991    6                          END;
      216     5992    6                     WHENALTRETURN DO;
      217     5993    6                          ABYTES=0;
      218     5994    6                          REMSIZE=0;
      219     5995    6                          END;
      220     5996    5                     BYTEOFFSET=0;
      221     5997    5                     PPAGE=PPAGE+1;
      222     5998    5                     END;
      223     5999    4                END;
      224     6000    4           WHENALTRETURN DO;
      225     6001    4                REMSIZE=0;
      226     6002    4                END;
      227     6003    3           END;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:8    
      228     6004        /**/
      229     6005    2   END ASK_DUMPFILE;
      230     6006        /**/
      231     6007        %EJECT;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:9    
      232     6008        /**/
      233     6009    1   ASK_FEP: PROC(DOM) ALTRET;
      234     6010
      235     6011    2   DCL DOM UBIN;
      236     6012
      237     6013        /**/
      238     6014    2   DCL UBIN24 UBIN(24);
      239     6015    2   DCL UBIN32 UBIN(32);
      240     6016    2   DCL UBIN8 UBIN(8);
      241     6017    2   DCL UBIN16 UBIN(16);
      242     6018        /**/
      243     6019        %FPT_WRITE (FPTN=FPT_WRTRQST,DCB=M$FPRG,BUF=REQUEST,BP=YES);
      244     6050        %FPT_READ (FPTN=FPT_RDRPLY,DCB=M$FPRG);
      245     6089        %DB$MAP_REQUEST (FPTN=REQUEST,STCLASS=STATIC,ALGN=CALIGNED);
      246     6093        %DB$MAP_REPLY (FPTN=REPLY,DATASIZE=256,STCLASS=AUTO);
      247     6147        /**/
      248     6148    2      UBIN24=L6ADDR;
      249     6149    2      CALL DBM$UNPACK(UBIN24,REQUEST.L6ADR,3);
      250     6150    2      UBIN8=DOM;
      251     6151    2      CALL DBM$UNPACK(UBIN8,REQUEST.DOMAYN,1);
      252     6152    2      UBIN32=LSYSID;
      253     6153    2      CALL DBM$UNPACK(UBIN32,REQUEST.SYSID,4);
      254     6154    2      UBIN16=L6BYTES;
      255     6155    2      CALL DBM$UNPACK(UBIN16,REQUEST.SIZE,2);
      256     6156    2      UBIN8=LUSECACHE;
      257     6157    2      CALL DBM$UNPACK(UBIN8,REQUEST.USECACHE,1);
      258     6158    2      UBIN8=LCACHEIT;
      259     6159    2      CALL DBM$UNPACK(UBIN8,REQUEST.CACHEIT,1);
      260     6160    2      UBIN16=LCACHEPGS;
      261     6161    2      CALL DBM$UNPACK(UBIN16,REQUEST.CACHEPGS,2);
      262     6162        /**/
      263     6163    2      IF DB_DUMP_MSG THEN
      264     6164    2           CALL DBB$HEXDUMP(REQUEST,SIZEC(REQUEST)/2,0,DA_PRINTABLE_TBL);
      265     6165    2      CALL XUR$DISABLE;
      266     6166    2      CALL M$WRITE(FPT_WRTRQST);
      267     6167    2      FPT_RDRPLY.BUF_=VECTOR(REPLY);
      268     6168        /**/
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:10   
      269     6169    2      REMSIZE=L6BYTES;
      270     6170    3      DO WHILE(REMSIZE>0);
      271     6171    4           CALL M$READ(FPT_RDRPLY) WHENRETURN DO;
      272     6172    5                IF DB_DUMP_MSG THEN DO;
      273     6173    5                     ABYTES=512;
      274     6174    5                     CALL DBB$HEXDUMP(REPLY,SIZEC(REPLY)/2,0,DA_PRINTABLE_TBL);
      275     6175    5                     END;
      276     6176    5                IF REPLY.ERROR THEN DO;
      277     6177    5                     CALL XUR$ERRCNVRT(REPLY.ERROR,DA_MAPERR);
      278     6178    5                     CALL XUR$ENABLE;
      279     6179    5                     ALTRETURN;
      280     6180    5                     END;
      281     6181    4                CALL DBM$PACK1(REPLY.CONT,PPAGE);
      282     6182    4                CALL DBM$PACK2(REPLY.ARS,ABYTES);
      283     6183    5                IF ABYTES>0 THEN DO;
      284     6184    5                     MBYTES=MINIMUM(ABYTES,REMSIZE);
      285     6185    5                     SUBSTR(UBUF,LARS,MBYTES)=SUBSTR(REPLY.DATA,0,MBYTES);
      286     6186    5                     LARS=LARS+MBYTES;
      287     6187    5                     REMSIZE=REMSIZE-MBYTES;
      288     6188    5                     END;
      289     6189    5                IF PPAGE /* CONT */ = 0 THEN DO;
      290     6190    5                     REMSIZE=0;
      291     6191    5                     END;
      292     6192    4                END;
      293     6193    4           WHENALTRETURN DO;
      294     6194    4                DA_MAPERR=B$ALT.ERR;
      295     6195    4                CALL XUR$ENABLE;
      296     6196    4                ALTRETURN;
      297     6197    4                END;
      298     6198    3           END;
      299     6199    2      CALL XUR$ENABLE;
      300     6200        /**/
      301     6201    2   END ASK_FEP;
      302     6202        /**/
      303     6203    1   END DBM$GETMEM;
      304     6204        %EOD;

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:11   
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   XUR_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   DB_MACRO_M.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DBM$GETMEM.

   Procedure DBM$GETMEM requires 490 words for executable code.
   Procedure DBM$GETMEM requires 110 words of local(AUTO) storage.

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:12   

 Object Unit name= DBM$GETMEM                                 File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:13:30.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$FPRG
    2   Data  even  none    32     40  DBM$GETMEM
    3   Proc  even  none   490    752  DBM$GETMEM
    4  RoData even  none    25     31  DBM$GETMEM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std       10  DBM$GETMEM
     3    111          yes     yes      Std        4  DBM$GETLCT

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2      0  DB_DUMP_MSG
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:13   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
 yes     yes           Std       1 DBM$SYSID2UN
 yes     yes           Std       1 DBM$CHECKUN
 yes     yes           Std       1 DBM$READ_PAGE
         yes           Std       3 DBM$PACK
 yes     yes           Std       4 DBM$VIRT2REAL
 yes     yes           Std       5 DBM$GETMLCP
         yes           Std       3 DBM$UNPACK
         yes           Std       0 XUR$DISABLE
         yes           Std       2 DBM$PACK1
         yes           Std       2 DBM$PACK2
         yes           Std       4 DBB$HEXDUMP
         yes           Std       2 XUR$ERRCNVRT
         yes           Std       0 XUR$ENABLE
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  DA_DUMPFILE                           DA_MAPERR
     M$FPRG                                DB_MONASDT                            DB_USERASDT
     DB_DUMP_BUFFER                        DB_CUN                           r    B$XL_ASC_DUMP$
r    B$TCB$                                B_VECTNIL
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:14   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:15   


        1        1        /*M* DBM$GETMEM - FEP memory management routines for ANLZ */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
        8        8
        9        9        DBM$GETMEM: PROC(L6ADDR,UBUF,SYSID,L6BYTES,ARS,MINBYTES,DOMAYN,USECACHE,CACHEIT,
                 9            CACHEPGS) ALTRET;

      9  3 000000   000000 700200 xent  DBM$GETMEM   TSX0  ! X66_AUTO_N
         3 000001   000156 000012                    ZERO    110,10

       10       10        /**/
       11       11        /*F*    NAME:  DBM$GETMEM
       12       12                CALL:  CALL DBM$GETMEM(L6ADDR,UBUF,SYSID,L6BYTES,ARS,MINBYTES) ALTRET;
       13       13                INPUT:  L6ADDR - Level 6 memory address (word address).
       14       14                        UBUF - Buffer in which to return fetched memory contents.
       15       15                        SYSID - Determines which user's address space the memory
       16       16                                is to be fetched from.  A value of zero specifies
       17       17                                the monitor address space.  A positive value is
       18       18                                a user's SYSID.  A negative value is minus the
       19       19                                user number.  If DOMAYN is DB#DOMAIN_ASDT then SYSID
       20       20                                is the real memory address of the ASDT.
       21       21                        L6BYTES - The number of bytes of memory to be fetched.
       22       22                        MINBYTES - Minimum number of bytes to return.
       23       23                        DOMAYN - Which domain.  Equates for this parameter are
       24       24                                 DB#DOMAIN_? in DB_MACRO_M.  Default is DB#DOMAIN_MONUSR
       25       25                                 which means monitor domain if SYSID is zero and user
       26       26                                 domain if SYSID is non-zero.
       27       27                OUTPUT: UBUF - Contents of specified memory area.
       28       28                        ARS - Actual number of bytes fetched.
       29       29                DESCRIPTION:
       30       30                   Moves the contents of the specified FEP memory locations
       31       31                to a user supplied buffer.  The memory contents are retained
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:16   
       32       32                in unpacked format.  The user buffer is filled until the number
       33       33                of bytes specified in L6BYTES have been transfered or a missing
       34       34                page is encountered.  If less that MINBYTES are transfered the
       35       35                alternate return is taken.  Otherwise a normal return is taken.
       36       36                MINBYTES is optional.
       37       37        */
       38       38        /**/
       39       39    1   DCL L6ADDR UBIN;
       40       40    1   DCL UBUF CHAR(L6BYTES) CALIGNED;
       41       41    1   DCL SYSID SBIN;
       42       42    1   DCL L6BYTES UBIN;
       43       43    1   DCL ARS UBIN;
       44       44    1   DCL MINBYTES SBIN;
       45       45    1   DCL DOMAYN SBIN;
       46       46    1   DCL USECACHE UBIN ;
       47       47    1   DCL CACHEIT UBIN ;
       48       48    1   DCL CACHEPGS UBIN ;
       49       49        /**/
       50       50        %INCLUDE CP_6;
       51     5609        %INCLUDE DA_MAP_R;
       52     5639        %INCLUDE DB_MACRO_M;
       53     5670        %DB$MAP_EQUS;
       54     5680        %INCLUDE XUR_ENTRY;
       55     5712        %INCLUDE B$TABLES_C;
       56     5820        /**/
       57     5821    1   DCL M$FPRG DCB;
       58     5822        /**/
       59     5823    1   DCL DBM$SYSID2UN ENTRY(1) ALTRET;
       60     5824    1   DCL DBM$CHECKUN ENTRY(1) ALTRET;
       61     5825    1   DCL DBM$GETMLCP ENTRY(5) ALTRET;
       62     5826    1   DCL DBM$READ_PAGE ENTRY(1) ALTRET;
       63     5827    1   DCL DBM$VIRT2REAL ENTRY(4) ALTRET;
       64     5828    1   DCL DBM$PACK1 ENTRY(2);
       65     5829    1   DCL DBM$PACK2 ENTRY(2);
       66     5830    1   DCL DBM$PACK4 ENTRY(2);
       67     5831    1   DCL DBM$PACK ENTRY(3);
       68     5832    1   DCL DBM$UNPACK ENTRY(3);
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:17   
       69     5833    1   DCL DBB$HEXDUMP ENTRY(4);
       70     5834        /**/
       71     5835    1   DCL U# UBIN;
       72     5836    1   DCL ASDT$ PTR;
       73     5837    1   DCL LARS SBIN WORD;
       74     5838    1   DCL MOVESIZE UBIN WORD;
       75     5839    1   DCL REMSIZE SBIN WORD;
       76     5840    1   DCL BYTEOFFSET SBIN WORD;
       77     5841    1   DCL CURPAGE SBIN WORD;
       78     5842    1   DCL L6BA UBIN;
       79     5843    1   DCL LUSECACHE UBIN;
       80     5844    1   DCL LCACHEIT UBIN;
       81     5845    1   DCL LCACHEPGS UBIN;
       82     5846    1   DCL MBYTES SBIN;
       83     5847    1   DCL ABYTES SBIN;
       84     5848    1   DCL PPAGE UBIN;
       85     5849    1   DCL PAGECNT UBIN;
       86     5850    1   DCL LSYSID SBIN;
       87     5851    1   DCL LDOM SBIN;
       88     5852        /**/
       89     5853    1   DCL DB_MONASDT UBIN SYMREF;
       90     5854    1   DCL DB_USERASDT UBIN SYMREF;
       91     5855    1   DCL DB_DUMP_BUFFER CHAR(512) SYMREF;
       92     5856    1   DCL DB_CUN UBIN SYMREF;
       93     5857
       94     5858    1   DCL DB_DUMP_MSG BIT(1) STATIC SYMDEF INIT('0'B);
       95     5859        /**/
       96     5860        %B$XL_ASC_DUMP (NAME=DA_PRINTABLE_TBL);
       97     5864        /**/
       98     5865    1   DCL ASDT UBIN BASED(ASDT$);
       99     5866        /**/
      100     5867    1   DCL B$TCB$ PTR SYMREF READONLY;
      101     5868        %B$TCB;
      102     5871        %B$ALT;
      103     5879        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      104     5880        /**/
      105     5881        %EQU K64=1024*64;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:18   
      106     5882        %EJECT;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:19   
      107     5883        /**/
      108     5884    1      IF ADDR(ARS)~=ADDR(NIL) THEN ARS=0;

   5884  3 000002   200007 236100                    LDQ     @ARS,,AUTO
         3 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000004   000007 600000 3                  TZE     s:5885

   5884  3 000005   200007 470500                    LDP0    @ARS,,AUTO
         3 000006   000000 450100                    STZ     0,,PR0

      109     5885    1      IF ADDR(SYSID)=ADDR(NIL) THEN

   5885  3 000007   200005 236100                    LDQ     @SYSID,,AUTO
         3 000010   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000011   000014 601000 3                  TNZ     s:5888

      110     5886    1           LSYSID=0;

   5886  3 000012   200034 450100                    STZ     LSYSID,,AUTO
         3 000013   000017 710000 3                  TRA     s:5890

      111     5887    1      ELSE
      112     5888    1           LSYSID=SYSID;

   5888  3 000014   200005 470500                    LDP0    @SYSID,,AUTO
         3 000015   000000 235100                    LDA     0,,PR0
         3 000016   200034 755100                    STA     LSYSID,,AUTO

      113     5889        /**/
      114     5890    1      IF ADDR(DOMAYN)=ADDR(NIL) THEN

   5890  3 000017   200011 236100                    LDQ     @DOMAYN,,AUTO
         3 000020   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000021   000024 601000 3                  TNZ     s:5893

      115     5891    1           LDOM=%DB#DOMAIN_MONUSR;

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:20   
   5891  3 000022   200035 450100                    STZ     LDOM,,AUTO
         3 000023   000027 710000 3                  TRA     s:5895

      116     5892    1      ELSE
      117     5893    1           LDOM=DOMAYN;

   5893  3 000024   200011 470500                    LDP0    @DOMAYN,,AUTO
         3 000025   000000 235100                    LDA     0,,PR0
         3 000026   200035 755100                    STA     LDOM,,AUTO

      118     5894        /**/
      119     5895    1      LUSECACHE=0;

   5895  3 000027   200025 450100                    STZ     LUSECACHE,,AUTO

      120     5896    1      LCACHEIT=0;

   5896  3 000030   200026 450100                    STZ     LCACHEIT,,AUTO

      121     5897    1      LCACHEPGS=0;

   5897  3 000031   200027 450100                    STZ     LCACHEPGS,,AUTO

      122     5898    1      IF ADDR(USECACHE)~=ADDR(NIL) THEN

   5898  3 000032   200012 236100                    LDQ     @USECACHE,,AUTO
         3 000033   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000034   000040 600000 3                  TZE     s:5900

      123     5899    1           LUSECACHE=USECACHE;

   5899  3 000035   200012 470500                    LDP0    @USECACHE,,AUTO
         3 000036   000000 235100                    LDA     0,,PR0
         3 000037   200025 755100                    STA     LUSECACHE,,AUTO

      124     5900    1      IF ADDR(CACHEIT)~=ADDR(NIL) THEN

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:21   
   5900  3 000040   200013 236100                    LDQ     @CACHEIT,,AUTO
         3 000041   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000042   000046 600000 3                  TZE     s:5902

      125     5901    1           LCACHEIT=CACHEIT;

   5901  3 000043   200013 470500                    LDP0    @CACHEIT,,AUTO
         3 000044   000000 235100                    LDA     0,,PR0
         3 000045   200026 755100                    STA     LCACHEIT,,AUTO

      126     5902    1      IF ADDR(CACHEPGS)~=ADDR(NIL) THEN

   5902  3 000046   200014 236100                    LDQ     @CACHEPGS,,AUTO
         3 000047   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000050   000054 600000 3                  TZE     s:5905

      127     5903    1           LCACHEPGS=CACHEPGS;

   5903  3 000051   200014 470500                    LDP0    @CACHEPGS,,AUTO
         3 000052   000000 235100                    LDA     0,,PR0
         3 000053   200027 755100                    STA     LCACHEPGS,,AUTO

      128     5904        /**/
      129     5905    1      LARS=0;

   5905  3 000054   200017 450100                    STZ     LARS,,AUTO

      130     5906    2      IF DA_DUMPFILE THEN DO;

   5906  3 000055   000000 234000 xsym               SZN     DA_DUMPFILE
         3 000056   000064 605000 3                  TPL     s:5910

      131     5907    3           CALL ASK_DUMPFILE WHENALTRETURN DO; ALTRETURN; END;

   5907  3 000057   000124 701000 3                  TSX1    ASK_DUMPFILE
         3 000060   000062 702000 3                  TSX2    s:5907+3
         3 000061   000063 710000 3                  TRA     s:5908
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:22   

   5907  3 000062   000000 702200 xent               TSX2  ! X66_AALT

      132     5908    2           END;

   5908  3 000063   000072 710000 3                  TRA     s:5913

      133     5909    2      ELSE DO;

      134     5910    3           CALL ASK_FEP(LDOM) WHENALTRETURN DO; ALTRETURN; END;

   5910  3 000064   200035 630500                    EPPR0   LDOM,,AUTO
         3 000065   200037 450500                    STP0    LDOM+2,,AUTO
         3 000066   000423 701000 3                  TSX1    ASK_FEP
         3 000067   000071 702000 3                  TSX2    s:5910+5
         3 000070   000072 710000 3                  TRA     s:5913

   5910  3 000071   000000 702200 xent               TSX2  ! X66_AALT

      135     5911    2           END;

      136     5912        /**/
      137     5913    1      IF ADDR(ARS)~=ADDR(NIL) THEN ARS=LARS;

   5913  3 000072   200007 236100                    LDQ     @ARS,,AUTO
         3 000073   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000074   000100 600000 3                  TZE     s:5914

   5913  3 000075   200017 235100                    LDA     LARS,,AUTO
         3 000076   200007 470500                    LDP0    @ARS,,AUTO
         3 000077   000000 755100                    STA     0,,PR0

      138     5914    1      IF ADDR(MINBYTES)~=ADDR(NIL) AND LARS<MINBYTES THEN

   5914  3 000100   200010 236100                    LDQ     @MINBYTES,,AUTO
         3 000101   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000102   000110 600000 3                  TZE     s:5917
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:23   
         3 000103   200010 470500                    LDP0    @MINBYTES,,AUTO
         3 000104   200017 236100                    LDQ     LARS,,AUTO
         3 000105   000000 116100                    CMPQ    0,,PR0
         3 000106   000110 605000 3                  TPL     s:5917

      139     5915    1           ALTRETURN;

   5915  3 000107   000000 702200 xent               TSX2  ! X66_AALT

      140     5916    1      ELSE
      141     5917    1           RETURN;

   5917  3 000110   000000 702200 xent               TSX2  ! X66_ARET

      142     5918        /**/
      143     5919        %EJECT;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:24   
      144     5920    1   DBM$GETLCT: ENTRY(L6ADDR,UBUF,SYSID,L6BYTES) ALTRET;

   5920  3 000111   000000 700200 xent  DBM$GETLCT   TSX0  ! X66_AUTO_N
         3 000112   000156 000012                    ZERO    110,10

      145     5921
      146     5922    1      LSYSID=0;

   5922  3 000113   200034 450100                    STZ     LSYSID,,AUTO

      147     5923    1      LARS=0;

   5923  3 000114   200017 450100                    STZ     LARS,,AUTO

      148     5924
      149     5925    2      CALL ASK_FEP(%DB#DOMAIN_LCT) WHENALTRETURN DO;

   5925  3 000115   000000 236000 4                  LDQ     0
         3 000116   200037 756100                    STQ     LDOM+2,,AUTO
         3 000117   000423 701000 3                  TSX1    ASK_FEP
         3 000120   000122 702000 3                  TSX2    s:5926
         3 000121   000123 710000 3                  TRA     s:5928

      150     5926    2           ALTRETURN;

   5926  3 000122   000000 702200 xent               TSX2  ! X66_AALT

      151     5927    2           END;
      152     5928    1      RETURN;

   5928  3 000123   000000 702200 xent               TSX2  ! X66_ARET

      153     5929        /**/
      154     5930        %EJECT;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:25   
      155     5931        /**/
      156     5932
      157     5933    1   ASK_DUMPFILE: PROC ALTRET;

   5933  3 000124   200036 741300       ASK_DUMPFILE STX1  ! LDOM+1,,AUTO

      158     5934        /**/
      159     5935    3      DO CASE(LDOM);

   5935  3 000125   200035 235100                    LDA     LDOM,,AUTO
         3 000126   000007 115007                    CMPA    7,DL
         3 000127   000131 602005 3                  TNC     s:5935+4,AL
         3 000130   000275 710000 3                  TRA     s:5973
         3 000131   000140 710000 3                  TRA     s:5937
         3 000132   000140 710000 3                  TRA     s:5937
         3 000133   000275 710000 3                  TRA     s:5973
         3 000134   000140 710000 3                  TRA     s:5937
         3 000135   000242 710000 3                  TRA     s:5967
         3 000136   000200 710000 3                  TRA     s:5958
         3 000137   000245 710000 3                  TRA     s:5969

      160     5936    3       CASE(%DB#DOMAIN_MONUSR,%DB#DOMAIN_MON,%DB#DOMAIN_USR);

      161     5937    4         IF LSYSID~=0 THEN DO;

   5937  3 000140   200034 236100                    LDQ     LSYSID,,AUTO
         3 000141   000175 600000 3                  TZE     s:5955

      162     5938    5              IF LSYSID>0 THEN DO;

   5938  3 000142   000157 604400 3                  TMOZ    s:5947

      163     5939    6                   CALL DBM$SYSID2UN(LSYSID) WHENRETURN DO;

   5939  3 000143   200034 630500                    EPPR0   LSYSID,,AUTO
         3 000144   200150 450500                    STP0    REPLY+68,,AUTO
         3 000145   200150 630500                    EPPR0   REPLY+68,,AUTO
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:26   
         3 000146   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000147   000000 701000 xent               TSX1    DBM$SYSID2UN
         3 000150   000154 702000 3                  TSX2    s:5943

      164     5940    6                        U#=DB_CUN;

   5940  3 000151   000000 235000 xsym               LDA     DB_CUN
         3 000152   200015 755100                    STA     U#,,AUTO

      165     5941    6                        END;

   5941  3 000153   000156 710000 3                  TRA     s:5945

      166     5942    6                   WHENALTRETURN DO;

      167     5943    6                        ALTRETURN;

   5943  3 000154   200036 221300                    LDX1  ! LDOM+1,,AUTO
         3 000155   000000 702211                    TSX2  ! 0,X1

      168     5944    6                        END;
      169     5945    5                   END;

   5945  3 000156   000172 710000 3                  TRA     s:5952

      170     5946    5              ELSE DO;

      171     5947    5                   U#=-LSYSID;

   5947  3 000157   200034 335100                    LCA     LSYSID,,AUTO
         3 000160   200015 755100                    STA     U#,,AUTO

      172     5948    6                   CALL DBM$CHECKUN(U#) WHENALTRETURN DO;

   5948  3 000161   200015 630500                    EPPR0   U#,,AUTO
         3 000162   200150 450500                    STP0    REPLY+68,,AUTO
         3 000163   200150 630500                    EPPR0   REPLY+68,,AUTO
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:27   
         3 000164   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000165   000000 701000 xent               TSX1    DBM$CHECKUN
         3 000166   000170 702000 3                  TSX2    s:5949
         3 000167   000172 710000 3                  TRA     s:5952

      173     5949    6                        ALTRETURN;

   5949  3 000170   200036 221300                    LDX1  ! LDOM+1,,AUTO
         3 000171   000000 702211                    TSX2  ! 0,X1

      174     5950    6                        END;
      175     5951    5                   END;

      176     5952    4              ASDT$=ADDR(DB_USERASDT);

   5952  3 000172   000001 236000 4                  LDQ     1
         3 000173   200016 756100                    STQ     ASDT$,,AUTO

      177     5953    4              END;

   5953  3 000174   000277 710000 3                  TRA     s:5977

      178     5954    4         ELSE DO;

      179     5955    4              ASDT$=ADDR(DB_MONASDT);

   5955  3 000175   000002 236000 4                  LDQ     2
         3 000176   200016 756100                    STQ     ASDT$,,AUTO

      180     5956    4              END;

   5956  3 000177   000277 710000 3                  TRA     s:5977

      181     5957    3       CASE(%DB#DOMAIN_ASDT);

      182     5958    3         PPAGE=SYSID/256;

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:28   
   5958  3 000200   200005 470500                    LDP0    @SYSID,,AUTO
         3 000201   000000 236100                    LDQ     0,,PR0
         3 000202   000400 506007                    DIV     256,DL
         3 000203   200032 756100                    STQ     PPAGE,,AUTO

      183     5959    3         L6BA=2*MOD(SYSID,256);

   5959  3 000204   000000 236100                    LDQ     0,,PR0
         3 000205   000400 506007                    DIV     256,DL
         3 000206   000001 735000                    ALS     1
         3 000207   200024 755100                    STA     L6BA,,AUTO

      184     5960    4         CALL DBM$READ_PAGE(PPAGE) WHENALTRETURN DO;

   5960  3 000210   200032 631500                    EPPR1   PPAGE,,AUTO
         3 000211   200150 451500                    STP1    REPLY+68,,AUTO
         3 000212   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000213   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000214   000000 701000 xent               TSX1    DBM$READ_PAGE
         3 000215   000217 702000 3                  TSX2    s:5961
         3 000216   000221 710000 3                  TRA     s:5963

      185     5961    4              ALTRETURN;

   5961  3 000217   200036 221300                    LDX1  ! LDOM+1,,AUTO
         3 000220   000000 702211                    TSX2  ! 0,X1

      186     5962    4              END;
      187     5963    3         CALL DBM$PACK(SUBSTR(DB_DUMP_BUFFER,L6BA),DB_USERASDT,31*4);

   5963  3 000221   000004 236000 4                  LDQ     4
         3 000222   200152 756100                    STQ     REPLY+70,,AUTO
         3 000223   000001 236000 4                  LDQ     1
         3 000224   200151 756100                    STQ     REPLY+69,,AUTO
         3 000225   200024 236100                    LDQ     L6BA,,AUTO
         3 000226   000020 736000                    QLS     16
         3 000227   000005 036000 4                  ADLQ    5
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:29   
         3 000230   200150 756100                    STQ     REPLY+68,,AUTO
         3 000231   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000232   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000233   000000 701000 xent               TSX1    DBM$PACK
         3 000234   000000 011000                    NOP     0

      188     5964    3         DB_CUN=512;

   5964  3 000235   001000 235007                    LDA     512,DL
         3 000236   000000 755000 xsym               STA     DB_CUN

      189     5965    3         ASDT$=ADDR(DB_USERASDT);

   5965  3 000237   000001 236000 4                  LDQ     1
         3 000240   200016 756100                    STQ     ASDT$,,AUTO
         3 000241   000277 710000 3                  TRA     s:5977

      190     5966    3       CASE(%DB#DOMAIN_REAL);

      191     5967    3         ASDT$=ADDR(NIL);

   5967  3 000242   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000243   200016 756100                    STQ     ASDT$,,AUTO
         3 000244   000277 710000 3                  TRA     s:5977

      192     5968    3       CASE(%DB#DOMAIN_LCT);

      193     5969    3         CALL DBM$GETMLCP( L6ADDR,UBUF,MOD(L6ADDR,1024)/2,L6BYTES,LARS)

   5969  3 000245   200003 470500                    LDP0    @L6ADDR,,AUTO
         3 000246   000000 236100                    LDQ     0,,PR0
         3 000247   001777 376007                    ANQ     1023,DL
         3 000250   000001 772000                    QRL     1
         3 000251   200150 756100                    STQ     REPLY+68,,AUTO
         3 000252   200017 631500                    EPPR1   LARS,,AUTO
         3 000253   200155 451500                    STP1    REPLY+73,,AUTO
         3 000254   200006 236100                    LDQ     @L6BYTES,,AUTO
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:30   
         3 000255   200154 756100                    STQ     REPLY+72,,AUTO
         3 000256   200150 633500                    EPPR3   REPLY+68,,AUTO
         3 000257   200153 453500                    STP3    REPLY+71,,AUTO
         3 000260   200004 236100                    LDQ     @UBUF,,AUTO
         3 000261   200152 756100                    STQ     REPLY+70,,AUTO
         3 000262   200003 236100                    LDQ     @L6ADDR,,AUTO
         3 000263   200151 756100                    STQ     REPLY+69,,AUTO
         3 000264   200151 630500                    EPPR0   REPLY+69,,AUTO
         3 000265   000023 631400 xsym               EPPR1   B_VECTNIL+19
         3 000266   000000 701000 xent               TSX1    DBM$GETMLCP
         3 000267   000271 702000 3                  TSX2    s:5970
         3 000270   000273 710000 3                  TRA     s:5971

      194     5970    4         WHENALTRETURN DO; ALTRETURN; END;

   5970  3 000271   200036 221300                    LDX1  ! LDOM+1,,AUTO
         3 000272   000000 702211                    TSX2  ! 0,X1

      195     5971    3         RETURN;

   5971  3 000273   200036 221300                    LDX1  ! LDOM+1,,AUTO
         3 000274   000001 702211                    TSX2  ! 1,X1

      196     5972    3       CASE(ELSE);

      197     5973    3         CALL M$XXX;

   5973  3 000275   000003 713400                    CLIMB   3
         3 000276   000000 401760                    pmme    nvectors=0

      198     5974    3         END;

      199     5975        /**/
      200     5976        /**/
      201     5977    2      REMSIZE=L6BYTES;

   5977  3 000277   200006 470500                    LDP0    @L6BYTES,,AUTO
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:31   
         3 000300   000000 235100                    LDA     0,,PR0
         3 000301   200021 755100                    STA     REMSIZE,,AUTO

      202     5978    2      L6BA=L6ADDR*2;

   5978  3 000302   200003 471500                    LDP1    @L6ADDR,,AUTO
         3 000303   100000 235100                    LDA     0,,PR1
         3 000304   000001 735000                    ALS     1
         3 000305   200024 755100                    STA     L6BA,,AUTO

      203     5979    2      BYTEOFFSET=MOD(L6BA,512);

   5979  3 000306   200024 236100                    LDQ     L6BA,,AUTO
         3 000307   000777 376007                    ANQ     511,DL
         3 000310   200022 756100                    STQ     BYTEOFFSET,,AUTO

      204     5980    3      DO WHILE(REMSIZE>0);

   5980  3 000311   200021 235100                    LDA     REMSIZE,,AUTO
         3 000312   000421 604400 3                  TMOZ    s:6005

      205     5981    3           CURPAGE=(L6BA+LARS)/512;

   5981  3 000313   200024 236100                    LDQ     L6BA,,AUTO
         3 000314   200017 036100                    ADLQ    LARS,,AUTO
         3 000315   001000 506007                    DIV     512,DL
         3 000316   200023 756100                    STQ     CURPAGE,,AUTO

      206     5982    4           CALL DBM$VIRT2REAL(ASDT,CURPAGE,PPAGE,PAGECNT) WHENRETURN DO;

   5982  3 000317   200033 630500                    EPPR0   PAGECNT,,AUTO
         3 000320   200153 450500                    STP0    REPLY+71,,AUTO
         3 000321   200032 631500                    EPPR1   PPAGE,,AUTO
         3 000322   200152 451500                    STP1    REPLY+70,,AUTO
         3 000323   200023 633500                    EPPR3   CURPAGE,,AUTO
         3 000324   200151 453500                    STP3    REPLY+69,,AUTO
         3 000325   200016 236100                    LDQ     ASDT$,,AUTO
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:32   
         3 000326   200150 756100                    STQ     REPLY+68,,AUTO
         3 000327   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000330   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000331   000000 701000 xent               TSX1    DBM$VIRT2REAL
         3 000332   000416 702000 3                  TSX2    s:6001

      207     5983    4                ABYTES=PAGECNT*512-BYTEOFFSET;

   5983  3 000333   000000 236003                    LDQ     0,DU
         3 000334   200033 136100                    SBLQ    PAGECNT,,AUTO
         3 000335   000011 736000                    QLS     9
         3 000336   200022 036100                    ADLQ    BYTEOFFSET,,AUTO
         3 000337   000027 676000 xsym               ERQ     B_VECTNIL+23
         3 000340   000001 036007                    ADLQ    1,DL
         3 000341   200031 756100                    STQ     ABYTES,,AUTO

      208     5984    5                DO WHILE(ABYTES>0 AND REMSIZE>0);

   5984  3 000342   000411 710000 3                  TRA     s:5998

      209     5985    6                     CALL DBM$READ_PAGE(PPAGE) WHENRETURN DO;

   5985  3 000343   200032 630500                    EPPR0   PPAGE,,AUTO
         3 000344   200150 450500                    STP0    REPLY+68,,AUTO
         3 000345   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000346   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000347   000000 701000 xent               TSX1    DBM$READ_PAGE
         3 000350   000403 702000 3                  TSX2    s:5993

      210     5986    6                          MBYTES=MINIMUM(512-BYTEOFFSET,REMSIZE);

   5986  3 000351   001000 236007                    LDQ     512,DL
         3 000352   200022 136100                    SBLQ    BYTEOFFSET,,AUTO
         3 000353   200021 116100                    CMPQ    REMSIZE,,AUTO
         3 000354   000356 604400 3                  TMOZ    s:5986+5
         3 000355   200021 236100                    LDQ     REMSIZE,,AUTO
         3 000356   200030 756100                    STQ     MBYTES,,AUTO
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:33   

      211     5987    6                          SUBSTR(UBUF,LARS,MBYTES)=SUBSTR(DB_DUMP_BUFFER,BYTEOFFSET,
              5987                                   MBYTES);

   5987  3 000357   200006 470500                    LDP0    @L6BYTES,,AUTO
         3 000360   000000 720100                    LXL0    0,,PR0
         3 000361   000000 621006                    EAX1    0,QL
         3 000362   200022 235100                    LDA     BYTEOFFSET,,AUTO
         3 000363   200004 471500                    LDP1    @UBUF,,AUTO
         3 000364   200030 722100                    LXL2    MBYTES,,AUTO
         3 000365   200017 236100                    LDQ     LARS,,AUTO
         3 000366   040146 100445                    MLR     fill='040'O
         3 000367   000000 000011 xsym               ADSC9   DB_DUMP_BUFFER,A         cn=0,n=*X1
         3 000370   100000 000012                    ADSC9   0,Q,PR1                  cn=0,n=*X2

      212     5988    6                          LARS=LARS+MBYTES;

   5988  3 000371   200017 236100                    LDQ     LARS,,AUTO
         3 000372   200030 036100                    ADLQ    MBYTES,,AUTO
         3 000373   200017 756100                    STQ     LARS,,AUTO

      213     5989    6                          REMSIZE=REMSIZE-MBYTES;

   5989  3 000374   200021 236100                    LDQ     REMSIZE,,AUTO
         3 000375   200030 136100                    SBLQ    MBYTES,,AUTO
         3 000376   200021 756100                    STQ     REMSIZE,,AUTO

      214     5990    6                          ABYTES=ABYTES-MBYTES;

   5990  3 000377   200031 236100                    LDQ     ABYTES,,AUTO
         3 000400   200030 136100                    SBLQ    MBYTES,,AUTO
         3 000401   200031 756100                    STQ     ABYTES,,AUTO

      215     5991    6                          END;

   5991  3 000402   000405 710000 3                  TRA     s:5996

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:34   
      216     5992    6                     WHENALTRETURN DO;

      217     5993    6                          ABYTES=0;

   5993  3 000403   200031 450100                    STZ     ABYTES,,AUTO

      218     5994    6                          REMSIZE=0;

   5994  3 000404   200021 450100                    STZ     REMSIZE,,AUTO

      219     5995    6                          END;

      220     5996    5                     BYTEOFFSET=0;

   5996  3 000405   200022 450100                    STZ     BYTEOFFSET,,AUTO

      221     5997    5                     PPAGE=PPAGE+1;

   5997  3 000406   200032 235100                    LDA     PPAGE,,AUTO
         3 000407   000001 035007                    ADLA    1,DL
         3 000410   200032 755100                    STA     PPAGE,,AUTO

      222     5998    5                     END;

   5998  3 000411   200031 235100                    LDA     ABYTES,,AUTO
         3 000412   000415 604400 3                  TMOZ    s:5999
         3 000413   200021 236100                    LDQ     REMSIZE,,AUTO
         3 000414   000343 605400 3                  TPNZ    s:5985

      223     5999    4                END;

   5999  3 000415   000417 710000 3                  TRA     s:6003

      224     6000    4           WHENALTRETURN DO;

      225     6001    4                REMSIZE=0;

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:35   
   6001  3 000416   200021 450100                    STZ     REMSIZE,,AUTO

      226     6002    4                END;

      227     6003    3           END;

   6003  3 000417   200021 235100                    LDA     REMSIZE,,AUTO
         3 000420   000313 605400 3                  TPNZ    s:5981

      228     6004        /**/
      229     6005    2   END ASK_DUMPFILE;

   6005  3 000421   200036 221300                    LDX1  ! LDOM+1,,AUTO
         3 000422   000001 702211                    TSX2  ! 1,X1

      230     6006        /**/
      231     6007        %EJECT;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:36   
      232     6008        /**/
      233     6009    1   ASK_FEP: PROC(DOM) ALTRET;

   6009  3 000423   200036 741300       ASK_FEP      STX1  ! LDOM+1,,AUTO

      234     6010
      235     6011    2   DCL DOM UBIN;
      236     6012
      237     6013        /**/
      238     6014    2   DCL UBIN24 UBIN(24);
      239     6015    2   DCL UBIN32 UBIN(32);
      240     6016    2   DCL UBIN8 UBIN(8);
      241     6017    2   DCL UBIN16 UBIN(16);
      242     6018        /**/
      243     6019        %FPT_WRITE (FPTN=FPT_WRTRQST,DCB=M$FPRG,BUF=REQUEST,BP=YES);
      244     6050        %FPT_READ (FPTN=FPT_RDRPLY,DCB=M$FPRG);
      245     6089        %DB$MAP_REQUEST (FPTN=REQUEST,STCLASS=STATIC,ALGN=CALIGNED);
      246     6093        %DB$MAP_REPLY (FPTN=REPLY,DATASIZE=256,STCLASS=AUTO);
      247     6147        /**/
      248     6148    2      UBIN24=L6ADDR;

   6148  3 000424   200003 470500                    LDP0    @L6ADDR,,AUTO
         3 000425   000000 235100                    LDA     0,,PR0
         3 000426   000014 735000                    ALS     12
         3 000427   200040 755100                    STA     UBIN24,,AUTO

      249     6149    2      CALL DBM$UNPACK(UBIN24,REQUEST.L6ADR,3);

   6149  3 000430   000006 236000 4                  LDQ     6
         3 000431   200152 756100                    STQ     REPLY+70,,AUTO
         3 000432   000007 236000 4                  LDQ     7
         3 000433   200151 756100                    STQ     REPLY+69,,AUTO
         3 000434   200040 631500                    EPPR1   UBIN24,,AUTO
         3 000435   200150 451500                    STP1    REPLY+68,,AUTO
         3 000436   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000437   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000440   000000 701000 xent               TSX1    DBM$UNPACK
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:37   
         3 000441   000000 011000                    NOP     0

      250     6150    2      UBIN8=DOM;

   6150  3 000442   200037 470500                    LDP0    @DOM,,AUTO
         3 000443   000000 235100                    LDA     0,,PR0
         3 000444   000034 735000                    ALS     28
         3 000445   200042 755100                    STA     UBIN8,,AUTO

      251     6151    2      CALL DBM$UNPACK(UBIN8,REQUEST.DOMAYN,1);

   6151  3 000446   000010 236000 4                  LDQ     8
         3 000447   200152 756100                    STQ     REPLY+70,,AUTO
         3 000450   000011 236000 4                  LDQ     9
         3 000451   200151 756100                    STQ     REPLY+69,,AUTO
         3 000452   200042 631500                    EPPR1   UBIN8,,AUTO
         3 000453   200150 451500                    STP1    REPLY+68,,AUTO
         3 000454   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000455   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000456   000000 701000 xent               TSX1    DBM$UNPACK
         3 000457   000000 011000                    NOP     0

      252     6152    2      UBIN32=LSYSID;

   6152  3 000460   200034 235100                    LDA     LSYSID,,AUTO
         3 000461   000004 735000                    ALS     4
         3 000462   200041 755100                    STA     UBIN32,,AUTO

      253     6153    2      CALL DBM$UNPACK(UBIN32,REQUEST.SYSID,4);

   6153  3 000463   000012 236000 4                  LDQ     10
         3 000464   200152 756100                    STQ     REPLY+70,,AUTO
         3 000465   000013 236000 4                  LDQ     11
         3 000466   200151 756100                    STQ     REPLY+69,,AUTO
         3 000467   200041 630500                    EPPR0   UBIN32,,AUTO
         3 000470   200150 450500                    STP0    REPLY+68,,AUTO
         3 000471   200150 630500                    EPPR0   REPLY+68,,AUTO
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:38   
         3 000472   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000473   000000 701000 xent               TSX1    DBM$UNPACK
         3 000474   000000 011000                    NOP     0

      254     6154    2      UBIN16=L6BYTES;

   6154  3 000475   200006 470500                    LDP0    @L6BYTES,,AUTO
         3 000476   000000 235100                    LDA     0,,PR0
         3 000477   000024 735000                    ALS     20
         3 000500   200043 755100                    STA     UBIN16,,AUTO

      255     6155    2      CALL DBM$UNPACK(UBIN16,REQUEST.SIZE,2);

   6155  3 000501   000014 236000 4                  LDQ     12
         3 000502   200152 756100                    STQ     REPLY+70,,AUTO
         3 000503   000015 236000 4                  LDQ     13
         3 000504   200151 756100                    STQ     REPLY+69,,AUTO
         3 000505   200043 631500                    EPPR1   UBIN16,,AUTO
         3 000506   200150 451500                    STP1    REPLY+68,,AUTO
         3 000507   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000510   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000511   000000 701000 xent               TSX1    DBM$UNPACK
         3 000512   000000 011000                    NOP     0

      256     6156    2      UBIN8=LUSECACHE;

   6156  3 000513   200025 235100                    LDA     LUSECACHE,,AUTO
         3 000514   000034 735000                    ALS     28
         3 000515   200042 755100                    STA     UBIN8,,AUTO

      257     6157    2      CALL DBM$UNPACK(UBIN8,REQUEST.USECACHE,1);

   6157  3 000516   000010 236000 4                  LDQ     8
         3 000517   200152 756100                    STQ     REPLY+70,,AUTO
         3 000520   000016 236000 4                  LDQ     14
         3 000521   200151 756100                    STQ     REPLY+69,,AUTO
         3 000522   200042 630500                    EPPR0   UBIN8,,AUTO
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:39   
         3 000523   200150 450500                    STP0    REPLY+68,,AUTO
         3 000524   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000525   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000526   000000 701000 xent               TSX1    DBM$UNPACK
         3 000527   000000 011000                    NOP     0

      258     6158    2      UBIN8=LCACHEIT;

   6158  3 000530   200026 235100                    LDA     LCACHEIT,,AUTO
         3 000531   000034 735000                    ALS     28
         3 000532   200042 755100                    STA     UBIN8,,AUTO

      259     6159    2      CALL DBM$UNPACK(UBIN8,REQUEST.CACHEIT,1);

   6159  3 000533   000010 236000 4                  LDQ     8
         3 000534   200152 756100                    STQ     REPLY+70,,AUTO
         3 000535   000017 236000 4                  LDQ     15
         3 000536   200151 756100                    STQ     REPLY+69,,AUTO
         3 000537   200042 630500                    EPPR0   UBIN8,,AUTO
         3 000540   200150 450500                    STP0    REPLY+68,,AUTO
         3 000541   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000542   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000543   000000 701000 xent               TSX1    DBM$UNPACK
         3 000544   000000 011000                    NOP     0

      260     6160    2      UBIN16=LCACHEPGS;

   6160  3 000545   200027 235100                    LDA     LCACHEPGS,,AUTO
         3 000546   000024 735000                    ALS     20
         3 000547   200043 755100                    STA     UBIN16,,AUTO

      261     6161    2      CALL DBM$UNPACK(UBIN16,REQUEST.CACHEPGS,2);

   6161  3 000550   000014 236000 4                  LDQ     12
         3 000551   200152 756100                    STQ     REPLY+70,,AUTO
         3 000552   000020 236000 4                  LDQ     16
         3 000553   200151 756100                    STQ     REPLY+69,,AUTO
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:40   
         3 000554   200043 630500                    EPPR0   UBIN16,,AUTO
         3 000555   200150 450500                    STP0    REPLY+68,,AUTO
         3 000556   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000557   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000560   000000 701000 xent               TSX1    DBM$UNPACK
         3 000561   000000 011000                    NOP     0

      262     6162        /**/
      263     6163    2      IF DB_DUMP_MSG THEN

   6163  3 000562   000000 234000 2                  SZN     DB_DUMP_MSG
         3 000563   000575 605000 3                  TPL     s:6165

      264     6164    2           CALL DBB$HEXDUMP(REQUEST,SIZEC(REQUEST)/2,0,DA_PRINTABLE_TBL);

   6164  3 000564   000000 236000 xsym               LDQ     B$XL_ASC_DUMP$
         3 000565   000021 235000 4                  LDA     17
         3 000566   200152 757100                    STAQ    REPLY+70,,AUTO
         3 000567   000022 237000 4                  LDAQ    18
         3 000570   200150 757100                    STAQ    REPLY+68,,AUTO
         3 000571   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000572   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000573   000000 701000 xent               TSX1    DBB$HEXDUMP
         3 000574   000000 011000                    NOP     0

      265     6165    2      CALL XUR$DISABLE;

   6165  3 000575   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000576   000000 701000 xent               TSX1    XUR$DISABLE
         3 000577   000000 011000                    NOP     0

      266     6166    2      CALL M$WRITE(FPT_WRTRQST);

   6166  3 000600   000002 630400 2                  EPPR0   FPT_WRTRQST
         3 000601   040001 713400                    CLIMB   write
         3 000602   401400 401760                    pmme    nvectors=4

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:41   
      267     6167    2      FPT_RDRPLY.BUF_=VECTOR(REPLY);

   6167  3 000603   000024 235000 4                  LDA     20
         3 000604   200150 452500                    STP2    REPLY+68,,AUTO
         3 000605   200150 236100                    LDQ     REPLY+68,,AUTO
         3 000606   000044 036003                    ADLQ    36,DU
         3 000607   000022 757000 2                  STAQ    FPT_RDRPLY+4

      268     6168        /**/
      269     6169    2      REMSIZE=L6BYTES;

   6169  3 000610   200006 470500                    LDP0    @L6BYTES,,AUTO
         3 000611   000000 235100                    LDA     0,,PR0
         3 000612   200021 755100                    STA     REMSIZE,,AUTO

      270     6170    3      DO WHILE(REMSIZE>0);

   6170  3 000613   000745 604400 3                  TMOZ    s:6199

      271     6171    4           CALL M$READ(FPT_RDRPLY) WHENRETURN DO;

   6171  3 000614   000016 630400 2                  EPPR0   FPT_RDRPLY
         3 000615   440000 713400                    CLIMB   alt,read
         3 000616   401400 401760                    pmme    nvectors=4
         3 000617   000732 702000 3                  TSX2    s:6194

      272     6172    5                IF DB_DUMP_MSG THEN DO;

   6172  3 000620   000000 234000 2                  SZN     DB_DUMP_MSG
         3 000621   000637 605000 3                  TPL     s:6176

      273     6173    5                     ABYTES=512;

   6173  3 000622   001000 235007                    LDA     512,DL
         3 000623   200031 755100                    STA     ABYTES,,AUTO

      274     6174    5                     CALL DBB$HEXDUMP(REPLY,SIZEC(REPLY)/2,0,DA_PRINTABLE_TBL);
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:42   

   6174  3 000624   000000 236000 xsym               LDQ     B$XL_ASC_DUMP$
         3 000625   000021 235000 4                  LDA     17
         3 000626   200152 757100                    STAQ    REPLY+70,,AUTO
         3 000627   000026 236000 4                  LDQ     22
         3 000630   200151 756100                    STQ     REPLY+69,,AUTO
         3 000631   200044 630500                    EPPR0   REPLY,,AUTO
         3 000632   200150 450500                    STP0    REPLY+68,,AUTO
         3 000633   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000634   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000635   000000 701000 xent               TSX1    DBB$HEXDUMP
         3 000636   000000 011000                    NOP     0

      275     6175    5                     END;

      276     6176    5                IF REPLY.ERROR THEN DO;

   6176  3 000637   200045 235100                    LDA     REPLY+1,,AUTO
         3 000640   000656 600000 3                  TZE     s:6181

      277     6177    5                     CALL XUR$ERRCNVRT(REPLY.ERROR,DA_MAPERR);

   6177  3 000641   000027 236000 4                  LDQ     23
         3 000642   200151 756100                    STQ     REPLY+69,,AUTO
         3 000643   200045 630500                    EPPR0   REPLY+1,,AUTO
         3 000644   200150 450500                    STP0    REPLY+68,,AUTO
         3 000645   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000646   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000647   000000 701000 xent               TSX1    XUR$ERRCNVRT
         3 000650   000000 011000                    NOP     0

      278     6178    5                     CALL XUR$ENABLE;

   6178  3 000651   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000652   000000 701000 xent               TSX1    XUR$ENABLE
         3 000653   000000 011000                    NOP     0

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:43   
      279     6179    5                     ALTRETURN;

   6179  3 000654   200036 221300                    LDX1  ! LDOM+1,,AUTO
         3 000655   000000 702211                    TSX2  ! 0,X1

      280     6180    5                     END;
      281     6181    4                CALL DBM$PACK1(REPLY.CONT,PPAGE);

   6181  3 000656   200032 630500                    EPPR0   PPAGE,,AUTO
         3 000657   200151 450500                    STP0    REPLY+69,,AUTO
         3 000660   200152 452500                    STP2    REPLY+70,,AUTO
         3 000661   200152 236100                    LDQ     REPLY+70,,AUTO
         3 000662   000030 036000 4                  ADLQ    24
         3 000663   200150 756100                    STQ     REPLY+68,,AUTO
         3 000664   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000665   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000666   000000 701000 xent               TSX1    DBM$PACK1
         3 000667   000000 011000                    NOP     0

      282     6182    4                CALL DBM$PACK2(REPLY.ARS,ABYTES);

   6182  3 000670   200031 630500                    EPPR0   ABYTES,,AUTO
         3 000671   200151 450500                    STP0    REPLY+69,,AUTO
         3 000672   200046 631500                    EPPR1   REPLY+2,,AUTO
         3 000673   200150 451500                    STP1    REPLY+68,,AUTO
         3 000674   200150 630500                    EPPR0   REPLY+68,,AUTO
         3 000675   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000676   000000 701000 xent               TSX1    DBM$PACK2
         3 000677   000000 011000                    NOP     0

      283     6183    5                IF ABYTES>0 THEN DO;

   6183  3 000700   200031 235100                    LDA     ABYTES,,AUTO
         3 000701   000726 604400 3                  TMOZ    s:6189

      284     6184    5                     MBYTES=MINIMUM(ABYTES,REMSIZE);

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:44   
   6184  3 000702   200021 236100                    LDQ     REMSIZE,,AUTO
         3 000703   200031 116100                    CMPQ    ABYTES,,AUTO
         3 000704   000706 604400 3                  TMOZ    s:6184+4
         3 000705   200031 236100                    LDQ     ABYTES,,AUTO
         3 000706   200030 756100                    STQ     MBYTES,,AUTO

      285     6185    5                     SUBSTR(UBUF,LARS,MBYTES)=SUBSTR(REPLY.DATA,0,MBYTES);

   6185  3 000707   200006 470500                    LDP0    @L6BYTES,,AUTO
         3 000710   000000 720100                    LXL0    0,,PR0
         3 000711   000000 621006                    EAX1    0,QL
         3 000712   200004 471500                    LDP1    @UBUF,,AUTO
         3 000713   200030 722100                    LXL2    MBYTES,,AUTO
         3 000714   200017 236100                    LDQ     LARS,,AUTO
         3 000715   040146 100540                    MLR     fill='040'O
         3 000716   200046 400011                    ADSC9   REPLY+2,,AUTO            cn=2,n=*X1
         3 000717   100000 000012                    ADSC9   0,Q,PR1                  cn=0,n=*X2

      286     6186    5                     LARS=LARS+MBYTES;

   6186  3 000720   200017 236100                    LDQ     LARS,,AUTO
         3 000721   200030 036100                    ADLQ    MBYTES,,AUTO
         3 000722   200017 756100                    STQ     LARS,,AUTO

      287     6187    5                     REMSIZE=REMSIZE-MBYTES;

   6187  3 000723   200021 236100                    LDQ     REMSIZE,,AUTO
         3 000724   200030 136100                    SBLQ    MBYTES,,AUTO
         3 000725   200021 756100                    STQ     REMSIZE,,AUTO

      288     6188    5                     END;

      289     6189    5                IF PPAGE /* CONT */ = 0 THEN DO;

   6189  3 000726   200032 235100                    LDA     PPAGE,,AUTO
         3 000727   000731 601000 3                  TNZ     s:6192

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:45   
      290     6190    5                     REMSIZE=0;

   6190  3 000730   200021 450100                    STZ     REMSIZE,,AUTO

      291     6191    5                     END;

      292     6192    4                END;

   6192  3 000731   000743 710000 3                  TRA     s:6198

      293     6193    4           WHENALTRETURN DO;

      294     6194    4                DA_MAPERR=B$ALT.ERR;

   6194  3 000732   000000 470400 xsym               LDP0    B$TCB$
         3 000733   000000 471500                    LDP1    0,,PR0
         3 000734   100102 236100                    LDQ     66,,PR1
         3 000735   000000 756000 xsym               STQ     DA_MAPERR

      295     6195    4                CALL XUR$ENABLE;

   6195  3 000736   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000737   000000 701000 xent               TSX1    XUR$ENABLE
         3 000740   000000 011000                    NOP     0

      296     6196    4                ALTRETURN;

   6196  3 000741   200036 221300                    LDX1  ! LDOM+1,,AUTO
         3 000742   000000 702211                    TSX2  ! 0,X1

      297     6197    4                END;
      298     6198    3           END;

   6198  3 000743   200021 236100                    LDQ     REMSIZE,,AUTO
         3 000744   000614 605400 3                  TPNZ    s:6171

      299     6199    2      CALL XUR$ENABLE;
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:46   

   6199  3 000745   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000746   000000 701000 xent               TSX1    XUR$ENABLE
         3 000747   000000 011000                    NOP     0

      300     6200        /**/
      301     6201    2   END ASK_FEP;

   6201  3 000750   200036 221300                    LDX1  ! LDOM+1,,AUTO
         3 000751   000001 702211                    TSX2  ! 1,X1
      302     6202        /**/
      303     6203    1   END DBM$GETMEM;
      304     6204        %EOD;

PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:47   
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   XUR_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   DB_MACRO_M.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DBM$GETMEM.
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:48   

 **** Variables and constants ****

  ****  Section 002  Data  DBM$GETMEM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 DB_DUMP_MSG               16-0-0/d STRC(504)   r     1 FPT_RDRPLY
     2-0-0/d STRC(432)   r     1 FPT_WRTRQST               34-0-0/c STRC(126)   r     1 REQUEST

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 @ARS                      13-0-0/w PTR         r     1 @CACHEIT
    14-0-0/w PTR         r     1 @CACHEPGS                 37-0-0/w PTR         r     1 @DOM
    11-0-0/w PTR         r     1 @DOMAYN                    3-0-0/w PTR         r     1 @L6ADDR
     6-0-0/w PTR         r     1 @L6BYTES                  10-0-0/w PTR         r     1 @MINBYTES
     5-0-0/w PTR         r     1 @SYSID                     4-0-0/w PTR         r     1 @UBUF
    12-0-0/w PTR         r     1 @USECACHE                 31-0-0/w SBIN        r     1 ABYTES
    *0-0-0/w UBIN        r     1 ARS                       16-0-0/w PTR         r     1 ASDT$
    22-0-0/w SBIN        r     1 BYTEOFFSET                *0-0-0/w UBIN        r     1 CACHEIT
    *0-0-0/w UBIN        r     1 CACHEPGS                  23-0-0/w SBIN        r     1 CURPAGE
    *0-0-0/w UBIN        r     1 DOM                       *0-0-0/w SBIN        r     1 DOMAYN
    *0-0-0/w UBIN        r     1 L6ADDR                    24-0-0/w UBIN        r     1 L6BA
    *0-0-0/w UBIN        r     1 L6BYTES                   17-0-0/w SBIN        r     1 LARS
    26-0-0/w UBIN        r     1 LCACHEIT                  27-0-0/w UBIN        r     1 LCACHEPGS
    35-0-0/w SBIN        r     1 LDOM                      34-0-0/w SBIN        r     1 LSYSID
    25-0-0/w UBIN        r     1 LUSECACHE                 30-0-0/w SBIN        r     1 MBYTES
    *0-0-0/w SBIN        r     1 MINBYTES                  33-0-0/w UBIN        r     1 PAGECNT
    32-0-0/w UBIN        r     1 PPAGE                     21-0-0/w SBIN        r     1 REMSIZE
    44-0-0/w STRC(2394)  r     1 REPLY                     *0-0-0/w SBIN        r     1 SYSID
    15-0-0/w UBIN        r     1 U#                        43-0-0/w UBIN(16)    r     1 UBIN16
    40-0-0/w UBIN(24)    r     1 UBIN24                    41-0-0/w UBIN(32)    r     1 UBIN32
    42-0-0/w UBIN(8)     r     1 UBIN8                     *0-0-0/c ACHR        r     1 UBUF
    *0-0-0/w UBIN        r     1 USECACHE
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:49   

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 B$XL_ASC_DUMP$
     0-0-0/w BIT         r     1 DA_DUMPFILE                0-0-0/w STRC        r     1 DA_MAPERR
     0-0-0/w UBIN        r     1 DB_CUN                     0-0-0/c CHAR(512)   r     1 DB_DUMP_BUFFER
     0-0-0/w UBIN        r     1 DB_MONASDT                 0-0-0/w UBIN        r     1 DB_USERASDT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 ASDT                       0-0-0/w STRC(2448)  r     1 B$ALT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d STRC(4608)  r     1 DA_PRINTABLE_TBL
     0-0-0N  NULL        r     1 M$FPRG


   Procedure DBM$GETMEM requires 490 words for executable code.
   Procedure DBM$GETMEM requires 110 words of local(AUTO) storage.
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:50   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:51   
          MINI XREF LISTING

ABYTES
      5847**DCL      5983<<ASSIGN   5984>>DOWHILE  5990<<ASSIGN   5990>>ASSIGN   5993<<ASSIGN   6173<<ASSIGN
      6182<>CALL     6183>>IF       6184>>ASSIGN
ARS
        43**DCL         9--PROC     5884--IF       5884<<ASSIGN   5913--IF       5913<<ASSIGN
ASDT
      5865**DCL      5982<>CALL
ASDT$
      5836**DCL      5865--IMP-PTR  5952<<ASSIGN   5955<<ASSIGN   5965<<ASSIGN   5967<<ASSIGN   5982>>CALL
ASK_DUMPFILE
      5933**PROC     5907--CALL
ASK_FEP
      6009**PROC     5910--CALL     5925--CALL
B$ALT.CODE
      5873**DCL      5873--REDEF    5874--REDEF    5874--REDEF
B$ALT.ERR
      5874**DCL      6194>>ASSIGN
B$ALT.ERR.ERR#
      5875**DCL      5875--REDEF
B$ALT.EVID
      5874**DCL      5874--REDEF    5874--REDEF
B$TCB.ALT$
      5869**DCL      6194>>ASSIGN
B$TCB$
      5867**DCL      6194>>ASSIGN
B$XL_ASC_DUMP$
      5861**DCL      5862--IMP-PTR  6164>>CALL     6174>>CALL
BYTEOFFSET
      5840**DCL      5979<<ASSIGN   5983>>ASSIGN   5986>>ASSIGN   5987>>ASSIGN   5996<<ASSIGN
CACHEIT
        47**DCL         9--PROC     5900--IF       5901>>ASSIGN
CACHEPGS
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:52   
        48**DCL         9--PROC     5902--IF       5903>>ASSIGN
CURPAGE
      5841**DCL      5981<<ASSIGN   5982<>CALL
DA_DUMPFILE
      5624**DCL      5906>>IF
DA_MAPERR
      5633**DCL      6177<>CALL     6194<<ASSIGN
DA_MAPSEG.P
      5634**DCL      5635--REDEF
DA_PRINTABLE_TBL
      5862**DCL      6164<>CALL     6174<>CALL
DA_SDASN.DESC.TYPE0
      5619**DCL      5619--REDEF
DA_TIGRSEG.P
      5635**DCL      5636--REDEF
DBB$HEXDUMP
      5833**DCL-ENT  6164--CALL     6174--CALL
DBM$CHECKUN
      5824**DCL-ENT  5948--CALL
DBM$GETMLCP
      5825**DCL-ENT  5969--CALL
DBM$PACK
      5831**DCL-ENT  5963--CALL
DBM$PACK1
      5828**DCL-ENT  6181--CALL
DBM$PACK2
      5829**DCL-ENT  6182--CALL
DBM$READ_PAGE
      5826**DCL-ENT  5960--CALL     5985--CALL
DBM$SYSID2UN
      5823**DCL-ENT  5939--CALL
DBM$UNPACK
      5832**DCL-ENT  6149--CALL     6151--CALL     6153--CALL     6155--CALL     6157--CALL     6159--CALL
      6161--CALL
DBM$VIRT2REAL
      5827**DCL-ENT  5982--CALL
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:53   
DB_CUN
      5856**DCL      5940>>ASSIGN   5964<<ASSIGN
DB_DUMP_BUFFER
      5855**DCL      5963<>CALL     5987>>ASSIGN
DB_DUMP_MSG
      5858**DCL      6163>>IF       6172>>IF
DB_MONASDT
      5853**DCL      5955--ASSIGN
DB_USERASDT
      5854**DCL      5952--ASSIGN   5963<>CALL     5965--ASSIGN
DOM IN PROCEDURE ASK_FEP
      6011**DCL      6009--PROC     6150>>ASSIGN
DOMAYN
        45**DCL         9--PROC     5890--IF       5893>>ASSIGN
FPT_RDRPLY IN PROCEDURE ASK_FEP
      6067**DCL      6171<>CALL
FPT_RDRPLY.BUF_ IN PROCEDURE ASK_FEP
      6069**DCL      6167<<ASSIGN
FPT_RDRPLY.STATION_ IN PROCEDURE ASK_FEP
      6070**DCL      6071--REDEF
FPT_RDRPLY.V IN PROCEDURE ASK_FEP
      6071**DCL      6067--DCLINIT
FPT_RDRPLY.V.DVBYTE.REREAD# IN PROCEDURE ASK_FEP
      6082**DCL      6082--REDEF
FPT_RDRPLY.V.INDX# IN PROCEDURE ASK_FEP
      6080**DCL      6080--REDEF
FPT_WRTRQST IN PROCEDURE ASK_FEP
      6036**DCL      6166<>CALL
FPT_WRTRQST.STATION_ IN PROCEDURE ASK_FEP
      6038**DCL      6038--REDEF
FPT_WRTRQST.V IN PROCEDURE ASK_FEP
      6039**DCL      6036--DCLINIT
FPT_WRTRQST.V.DVBYTE.VFC# IN PROCEDURE ASK_FEP
      6045**DCL      6045--REDEF
L6ADDR
        39**DCL         9--PROC     5920--ENTRY    5969<>CALL     5969>>CALL     5978>>ASSIGN   6148>>ASSIGN
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:54   
L6BA
      5842**DCL      5959<<ASSIGN   5963>>CALL     5978<<ASSIGN   5979>>ASSIGN   5981>>ASSIGN
L6BYTES
        42**DCL         9--PROC       40--IMP-SIZ  5920--ENTRY    5969>>CALL     5969<>CALL     5977>>ASSIGN
      5987>>ASSIGN   6154>>ASSIGN   6169>>ASSIGN   6185>>ASSIGN
LARS
      5837**DCL      5905<<ASSIGN   5913>>ASSIGN   5914>>IF       5923<<ASSIGN   5969<>CALL     5981>>ASSIGN
      5987>>ASSIGN   5988<<ASSIGN   5988>>ASSIGN   6185>>ASSIGN   6186<<ASSIGN   6186>>ASSIGN
LCACHEIT
      5844**DCL      5896<<ASSIGN   5901<<ASSIGN   6158>>ASSIGN
LCACHEPGS
      5845**DCL      5897<<ASSIGN   5903<<ASSIGN   6160>>ASSIGN
LDOM
      5851**DCL      5891<<ASSIGN   5893<<ASSIGN   5910<>CALL     5935>>DOCASE
LSYSID
      5850**DCL      5886<<ASSIGN   5888<<ASSIGN   5922<<ASSIGN   5937>>IF       5938>>IF       5939<>CALL
      5947>>ASSIGN   6152>>ASSIGN
LUSECACHE
      5843**DCL      5895<<ASSIGN   5899<<ASSIGN   6156>>ASSIGN
M$READ
      5538**DCL-ENT  6171--CALL
M$WRITE
      5538**DCL-ENT  6166--CALL
M$XXX
      5549**DCL-ENT  5973--CALL
MBYTES
      5846**DCL      5986<<ASSIGN   5987>>ASSIGN   5987>>ASSIGN   5988>>ASSIGN   5989>>ASSIGN   5990>>ASSIGN
      6184<<ASSIGN   6185>>ASSIGN   6185>>ASSIGN   6186>>ASSIGN   6187>>ASSIGN
MINBYTES
        44**DCL         9--PROC     5914--IF       5914>>IF
PAGECNT
      5849**DCL      5982<>CALL     5983>>ASSIGN
PPAGE
      5848**DCL      5958<<ASSIGN   5960<>CALL     5982<>CALL     5985<>CALL     5997<<ASSIGN   5997>>ASSIGN
      6181<>CALL     6189>>IF
REMSIZE
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:55   
      5839**DCL      5977<<ASSIGN   5980>>DOWHILE  5984>>DOWHILE  5986>>ASSIGN   5989<<ASSIGN   5989>>ASSIGN
      5994<<ASSIGN   6001<<ASSIGN   6169<<ASSIGN   6170>>DOWHILE  6184>>ASSIGN   6187<<ASSIGN   6187>>ASSIGN
      6190<<ASSIGN
REPLY IN PROCEDURE ASK_FEP
      6099**DCL      6167--ASSIGN   6174<>CALL     6174--CALL
REPLY.ARS IN PROCEDURE ASK_FEP
      6145**DCL      6182<>CALL
REPLY.CONT IN PROCEDURE ASK_FEP
      6099**DCL      6181<>CALL
REPLY.DATA IN PROCEDURE ASK_FEP
      6145**DCL      6185>>ASSIGN
REPLY.ERROR IN PROCEDURE ASK_FEP
      6114**DCL      6176>>IF       6177<>CALL
REQUEST IN PROCEDURE ASK_FEP
      6090**DCL      6037--DCLINIT  6038--DCLINIT  6164<>CALL     6164--CALL
REQUEST.CACHEIT IN PROCEDURE ASK_FEP
      6091**DCL      6159<>CALL
REQUEST.CACHEPGS IN PROCEDURE ASK_FEP
      6091**DCL      6161<>CALL
REQUEST.DOMAYN IN PROCEDURE ASK_FEP
      6090**DCL      6151<>CALL
REQUEST.L6ADR IN PROCEDURE ASK_FEP
      6090**DCL      6149<>CALL
REQUEST.SIZE IN PROCEDURE ASK_FEP
      6090**DCL      6155<>CALL
REQUEST.SYSID IN PROCEDURE ASK_FEP
      6090**DCL      6153<>CALL
REQUEST.USECACHE IN PROCEDURE ASK_FEP
      6090**DCL      6157<>CALL
SYSID
        41**DCL         9--PROC     5885--IF       5888>>ASSIGN   5920--ENTRY    5958>>ASSIGN   5959>>ASSIGN
U#
      5835**DCL      5940<<ASSIGN   5947<<ASSIGN   5948<>CALL
UBIN16 IN PROCEDURE ASK_FEP
      6017**DCL      6154<<ASSIGN   6155<>CALL     6160<<ASSIGN   6161<>CALL
UBIN24 IN PROCEDURE ASK_FEP
PL6.E3A0      #001=DBM$GETMEM File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:56   
      6014**DCL      6148<<ASSIGN   6149<>CALL
UBIN32 IN PROCEDURE ASK_FEP
      6015**DCL      6152<<ASSIGN   6153<>CALL
UBIN8 IN PROCEDURE ASK_FEP
      6016**DCL      6150<<ASSIGN   6151<>CALL     6156<<ASSIGN   6157<>CALL     6158<<ASSIGN   6159<>CALL
UBUF
        40**DCL         9--PROC     5920--ENTRY    5969<>CALL     5987<<ASSIGN   6185<<ASSIGN
USECACHE
        46**DCL         9--PROC     5898--IF       5899>>ASSIGN
XUR$DISABLE
      5700**DCL-ENT  6165--CALL
XUR$ENABLE
      5701**DCL-ENT  6178--CALL     6195--CALL     6199--CALL
XUR$ERRCNVRT
      5710**DCL-ENT  6177--CALL

PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:57   
      305        1        /*M* DBM$SELECT - Select current FEP */
      306        2        /*T***********************************************************/
      307        3        /*T*                                                         */
      308        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      309        5        /*T*                                                         */
      310        6        /*T***********************************************************/
      311        7        /**/
      312        8        DBM$SELECT: PROC(NODEIDX) ALTRET;
      313        9        /**/
      314       10    1   DCL NODEIDX UBIN;
      315       11        /**/
      316       12        %INCLUDE DA_MAP_R;
      317       42        %INCLUDE IR_DATA_M;
      318      206        %INCLUDE G$BOBCAT_M;
      319      226        %INCLUDE GM_VIRTUAL_E;
      320      436        %INCLUDE CP_6;
      321     5995        /**/
      322     5996    1   DCL DBM$GETMEM ENTRY(10) ALTRET;
      323     5997    1   DCL DBM$GETCUN ENTRY(1);
      324     5998    1   DCL DBM$PACK2 ENTRY(2);
      325     5999    1   DCL DBM$PACK4 ENTRY(2);
      326     6000    1   DCL DBM$READ_PAGE ENTRY(1) ALTRET;
      327     6001    1   DCL DBM$PACK ENTRY(3);
      328     6002        /**/
      329     6003    1   DCL HJITPP UBIN;
      330     6004        %G$BOBCAT (FPTN=G$BOBCAT,STCLASS=AUTO);
      331     6017        /**/
      332     6018        /**/
      333     6019        %RV_DFSUBS;
      334     6046        /**/
      335     6047        %RV_DFKEY (NAME=DB_DFKEY,STCLASS=SYMREF);
      336     6065        %RV_FEP_BUFF (FPTN=DB_RVBUF,STCLASS=SYMREF);
      337     6098    1   DCL DB_DUMP_BUFFER CHAR(512) SYMREF;
      338     6099    1   DCL DB_MONASDT UBIN SYMREF;
      339     6100    1   DCL DB_CUN SBIN SYMREF;
      340     6101    1   DCL DB_CURPP SBIN SYMREF;
      341     6102    1   DCL DB_USRT$ UBIN SYMREF;
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:58   
      342     6103    1   DCL DB_MUIS UBIN SYMREF;
      343     6104    1   DCL DB_CURRENT_USER SBIN SYMREF;
      344     6105        /**/
      345     6106    1   DCL M$DUMPFILE DCB;
      346     6107        /**/
      347     6108        %FPT_READ (FPTN=RDRVB,DCB=M$DUMPFILE,KEY=DB_DFKEY,KEYS=YES,
      348     6109                   BUF=DB_RVBUF);
      349     6148        /**/
      350     6149    1   DCL B$TCB$ PTR SYMREF;
      351     6150        %B$TCB;
      352     6153        %B$ALT;
      353     6161        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      354     6162        /**/
      355     6163        %EJECT;
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:59   
      356     6164        /**/
      357     6165    1      DA_NODEIDX=NODEIDX;
      358     6166        /**/
      359     6167    2      IF DA_DUMPFILE THEN DO;
      360     6168    2           DB_DFKEY.L=SIZEC(DB_DFKEY.K);
      361     6169    2           DB_DFKEY.K='0'B;
      362     6170    2           DB_DFKEY.K.NODEIDX=DA_NODEIDX;
      363     6171    3           CALL M$READ(RDRVB) WHENALTRETURN DO;
      364     6172    3                DA_MAPERR=B$ALT.ERR;
      365     6173    3                ALTRETURN;
      366     6174    3                END;
      367     6175    2           CALL DBM$PACK2(DB_RVBUF.MHJITPP,HJITPP);
      368     6176    3           CALL DBM$READ_PAGE(HJITPP) WHENALTRETURN DO; ALTRETURN; END;
      369     6177    2           CALL DBM$PACK(DB_DUMP_BUFFER,DB_MONASDT,31*4);
      370     6178    2           END;
      371     6179        /**/
      372     6180    2      CALL DBM$GETMEM(%GM_BOBCAT_BASE,G$BOBCAT,0,LENGTHC(G$BOBCAT),,LENGTHC(G$BOBCAT))
              6180               WHENRETURN DO;
      373     6181    2           CALL DBM$PACK4(G$BOBCAT.USRT$,DB_USRT$);
      374     6182    2           CALL DBM$PACK2(G$BOBCAT.MUIS,DB_MUIS);
      375     6183    2           END;
      376     6184    2      WHENALTRETURN DO;
      377     6185    2           ALTRETURN;
      378     6186    2           END;
      379     6187    1      DB_CUN=-1;
      380     6188    1      DB_CURPP=-1;
      381     6189    1      IF DA_DUMPFILE THEN
      382     6190    1           CALL DBM$GETCUN(DB_CURRENT_USER);
      383     6191    1      ELSE
      384     6192    1           DB_CURRENT_USER=0;
      385     6193    1      RETURN;
      386     6194    1   END DBM$SELECT;
      387     6195        %EOD;

PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:60   
--  Include file information  --

   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DBM$SELECT.

   Procedure DBM$SELECT requires 88 words for executable code.
   Procedure DBM$SELECT requires 64 words of local(AUTO) storage.

PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:61   

 Object Unit name= DBM$SELECT                                 File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:13:47.32 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$DUMPFILE
    2   Data  even  none    14     16  DBM$SELECT
    3   Proc  even  none    88    130  DBM$SELECT
    4  RoData even  none    14     16  DBM$SELECT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  DBM$SELECT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 DBM$PACK2
 yes     yes           Std       1 DBM$READ_PAGE
         yes           Std       3 DBM$PACK
 yes     yes           Std      10 DBM$GETMEM
         yes           Std       2 DBM$PACK4
         yes           Std       1 DBM$GETCUN
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:62   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DA_DUMPFILE                           DA_NODEIDX                            DA_MAPERR
     M$UC                                  DB_DFKEY                              DB_RVBUF
     DB_DUMP_BUFFER                        DB_MONASDT                            DB_CUN
     DB_CURPP                              DB_USRT$                              DB_MUIS
     DB_CURRENT_USER                       M$DUMPFILE                            B$TCB$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:63   


      305        1        /*M* DBM$SELECT - Select current FEP */
      306        2        /*T***********************************************************/
      307        3        /*T*                                                         */
      308        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      309        5        /*T*                                                         */
      310        6        /*T***********************************************************/
      311        7        /**/
      312        8        DBM$SELECT: PROC(NODEIDX) ALTRET;

      8  3 000000   000000 700200 xent  DBM$SELECT   TSX0  ! X66_AUTO_1
         3 000001   000100 000001                    ZERO    64,1

      313        9        /**/
      314       10    1   DCL NODEIDX UBIN;
      315       11        /**/
      316       12        %INCLUDE DA_MAP_R;
      317       42        %INCLUDE IR_DATA_M;
      318      206        %INCLUDE G$BOBCAT_M;
      319      226        %INCLUDE GM_VIRTUAL_E;
      320      436        %INCLUDE CP_6;
      321     5995        /**/
      322     5996    1   DCL DBM$GETMEM ENTRY(10) ALTRET;
      323     5997    1   DCL DBM$GETCUN ENTRY(1);
      324     5998    1   DCL DBM$PACK2 ENTRY(2);
      325     5999    1   DCL DBM$PACK4 ENTRY(2);
      326     6000    1   DCL DBM$READ_PAGE ENTRY(1) ALTRET;
      327     6001    1   DCL DBM$PACK ENTRY(3);
      328     6002        /**/
      329     6003    1   DCL HJITPP UBIN;
      330     6004        %G$BOBCAT (FPTN=G$BOBCAT,STCLASS=AUTO);
      331     6017        /**/
      332     6018        /**/
      333     6019        %RV_DFSUBS;
      334     6046        /**/
      335     6047        %RV_DFKEY (NAME=DB_DFKEY,STCLASS=SYMREF);
      336     6065        %RV_FEP_BUFF (FPTN=DB_RVBUF,STCLASS=SYMREF);
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:64   
      337     6098    1   DCL DB_DUMP_BUFFER CHAR(512) SYMREF;
      338     6099    1   DCL DB_MONASDT UBIN SYMREF;
      339     6100    1   DCL DB_CUN SBIN SYMREF;
      340     6101    1   DCL DB_CURPP SBIN SYMREF;
      341     6102    1   DCL DB_USRT$ UBIN SYMREF;
      342     6103    1   DCL DB_MUIS UBIN SYMREF;
      343     6104    1   DCL DB_CURRENT_USER SBIN SYMREF;
      344     6105        /**/
      345     6106    1   DCL M$DUMPFILE DCB;
      346     6107        /**/
      347     6108        %FPT_READ (FPTN=RDRVB,DCB=M$DUMPFILE,KEY=DB_DFKEY,KEYS=YES,
      348     6109                   BUF=DB_RVBUF);
      349     6148        /**/
      350     6149    1   DCL B$TCB$ PTR SYMREF;
      351     6150        %B$TCB;
      352     6153        %B$ALT;
      353     6161        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      354     6162        /**/
      355     6163        %EJECT;
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:65   
      356     6164        /**/
      357     6165    1      DA_NODEIDX=NODEIDX;

   6165  3 000002   200003 470500                    LDP0    @NODEIDX,,AUTO
         3 000003   000000 235100                    LDA     0,,PR0
         3 000004   000000 755000 xsym               STA     DA_NODEIDX

      358     6166        /**/
      359     6167    2      IF DA_DUMPFILE THEN DO;

   6167  3 000005   000000 234000 xsym               SZN     DA_DUMPFILE
         3 000006   000055 605000 3                  TPL     s:6180

      360     6168    2           DB_DFKEY.L=SIZEC(DB_DFKEY.K);

   6168  3 000007   007000 236003                    LDQ     3584,DU
         3 000010   000000 552040 xsym               STBQ    DB_DFKEY,'40'O

      361     6169    2           DB_DFKEY.K='0'B;

   6169  3 000011   000000 100400                    MLR     fill='000'O
         3 000012   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000013   000000 200007 xsym               ADSC9   DB_DFKEY                 cn=1,n=7

      362     6170    2           DB_DFKEY.K.NODEIDX=DA_NODEIDX;

   6170  3 000014   000000 236000 xsym               LDQ     DA_NODEIDX
         3 000015   000022 736000                    QLS     18
         3 000016   000000 552020 xsym               STBQ    DB_DFKEY,'20'O

      363     6171    3           CALL M$READ(RDRVB) WHENALTRETURN DO;

   6171  3 000017   000000 630400 2                  EPPR0   RDRVB
         3 000020   440000 713400                    CLIMB   alt,read
         3 000021   401400 401760                    pmme    nvectors=4
         3 000022   000024 702000 3                  TSX2    s:6172
         3 000023   000031 710000 3                  TRA     s:6175
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:66   

      364     6172    3                DA_MAPERR=B$ALT.ERR;

   6172  3 000024   000000 470400 xsym               LDP0    B$TCB$
         3 000025   000000 471500                    LDP1    0,,PR0
         3 000026   100102 236100                    LDQ     66,,PR1
         3 000027   000000 756000 xsym               STQ     DA_MAPERR

      365     6173    3                ALTRETURN;

   6173  3 000030   000000 702200 xent               TSX2  ! X66_AALT

      366     6174    3                END;
      367     6175    2           CALL DBM$PACK2(DB_RVBUF.MHJITPP,HJITPP);

   6175  3 000031   200004 630500                    EPPR0   HJITPP,,AUTO
         3 000032   200073 450500                    STP0    G$BOBCAT+54,,AUTO
         3 000033   000000 236000 4                  LDQ     0
         3 000034   200072 756100                    STQ     G$BOBCAT+53,,AUTO
         3 000035   200072 630500                    EPPR0   G$BOBCAT+53,,AUTO
         3 000036   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000037   000000 701000 xent               TSX1    DBM$PACK2
         3 000040   000000 011000                    NOP     0

      368     6176    3           CALL DBM$READ_PAGE(HJITPP) WHENALTRETURN DO; ALTRETURN; END;

   6176  3 000041   200004 630500                    EPPR0   HJITPP,,AUTO
         3 000042   200072 450500                    STP0    G$BOBCAT+53,,AUTO
         3 000043   200072 630500                    EPPR0   G$BOBCAT+53,,AUTO
         3 000044   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000045   000000 701000 xent               TSX1    DBM$READ_PAGE
         3 000046   000050 702000 3                  TSX2    s:6176+7
         3 000047   000051 710000 3                  TRA     s:6177

   6176  3 000050   000000 702200 xent               TSX2  ! X66_AALT

      369     6177    2           CALL DBM$PACK(DB_DUMP_BUFFER,DB_MONASDT,31*4);
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:67   

   6177  3 000051   000002 630400 4                  EPPR0   2
         3 000052   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000053   000000 701000 xent               TSX1    DBM$PACK
         3 000054   000000 011000                    NOP     0

      370     6178    2           END;

      371     6179        /**/
      372     6180    2      CALL DBM$GETMEM(%GM_BOBCAT_BASE,G$BOBCAT,0,LENGTHC(G$BOBCAT),,LENGTHC(G$BOBCAT))
              6180               WHENRETURN DO;

   6180  3 000055   000006 236000 4                  LDQ     6
         3 000056   000001 235000 xsym               LDA     B_VECTNIL+1
         3 000057   200076 757100                    STAQ    G$BOBCAT+57,,AUTO
         3 000060   000010 237000 4                  LDAQ    8
         3 000061   200074 757100                    STAQ    G$BOBCAT+55,,AUTO
         3 000062   200005 630500                    EPPR0   G$BOBCAT,,AUTO
         3 000063   200073 450500                    STP0    G$BOBCAT+54,,AUTO
         3 000064   000012 236000 4                  LDQ     10
         3 000065   200072 756100                    STQ     G$BOBCAT+53,,AUTO
         3 000066   200072 630500                    EPPR0   G$BOBCAT+53,,AUTO
         3 000067   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 000070   000000 701000 xent               TSX1    DBM$GETMEM
         3 000071   000113 702000 3                  TSX2    s:6185

      373     6181    2           CALL DBM$PACK4(G$BOBCAT.USRT$,DB_USRT$);

   6181  3 000072   000013 236000 4                  LDQ     11
         3 000073   200073 756100                    STQ     G$BOBCAT+54,,AUTO
         3 000074   200021 630500                    EPPR0   G$BOBCAT+12,,AUTO
         3 000075   200072 450500                    STP0    G$BOBCAT+53,,AUTO
         3 000076   200072 630500                    EPPR0   G$BOBCAT+53,,AUTO
         3 000077   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000100   000000 701000 xent               TSX1    DBM$PACK4
         3 000101   000000 011000                    NOP     0

PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:68   
      374     6182    2           CALL DBM$PACK2(G$BOBCAT.MUIS,DB_MUIS);

   6182  3 000102   000014 236000 4                  LDQ     12
         3 000103   200073 756100                    STQ     G$BOBCAT+54,,AUTO
         3 000104   200012 630500                    EPPR0   G$BOBCAT+5,,AUTO
         3 000105   200072 450500                    STP0    G$BOBCAT+53,,AUTO
         3 000106   200072 630500                    EPPR0   G$BOBCAT+53,,AUTO
         3 000107   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000110   000000 701000 xent               TSX1    DBM$PACK2
         3 000111   000000 011000                    NOP     0

      375     6183    2           END;

   6183  3 000112   000114 710000 3                  TRA     s:6187

      376     6184    2      WHENALTRETURN DO;

      377     6185    2           ALTRETURN;

   6185  3 000113   000000 702200 xent               TSX2  ! X66_AALT

      378     6186    2           END;
      379     6187    1      DB_CUN=-1;

   6187  3 000114   000001 335007                    LCA     1,DL
         3 000115   000000 755000 xsym               STA     DB_CUN

      380     6188    1      DB_CURPP=-1;

   6188  3 000116   000000 755000 xsym               STA     DB_CURPP

      381     6189    1      IF DA_DUMPFILE THEN

   6189  3 000117   000000 234000 xsym               SZN     DA_DUMPFILE
         3 000120   000126 605000 3                  TPL     s:6192

      382     6190    1           CALL DBM$GETCUN(DB_CURRENT_USER);
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:69   

   6190  3 000121   000015 630400 4                  EPPR0   13
         3 000122   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000123   000000 701000 xent               TSX1    DBM$GETCUN
         3 000124   000000 011000                    NOP     0
         3 000125   000127 710000 3                  TRA     s:6193

      383     6191    1      ELSE
      384     6192    1           DB_CURRENT_USER=0;

   6192  3 000126   000000 450000 xsym               STZ     DB_CURRENT_USER

      385     6193    1      RETURN;

   6193  3 000127   000000 702200 xent               TSX2  ! X66_ARET
      386     6194    1   END DBM$SELECT;
      387     6195        %EOD;

PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:70   
--  Include file information  --

   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DBM$SELECT.
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:71   

 **** Variables and constants ****

  ****  Section 002  Data  DBM$SELECT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 RDRVB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @NODEIDX                   5-0-0/w STRC(1908)  r     1 G$BOBCAT
     4-0-0/w UBIN        r     1 HJITPP                    *0-0-0/w UBIN        r     1 NODEIDX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w BIT         r     1 DA_DUMPFILE
     0-0-0/w STRC        r     1 DA_MAPERR                  0-0-0/w SBIN        r     1 DA_NODEIDX
     0-0-0/w SBIN        r     1 DB_CUN                     0-0-0/w SBIN        r     1 DB_CURPP
     0-0-0/w SBIN        r     1 DB_CURRENT_USER            0-0-0/d STRC(72)    r     1 DB_DFKEY
     0-0-0/c CHAR(512)   r     1 DB_DUMP_BUFFER             0-0-0/w UBIN        r     1 DB_MONASDT
     0-0-0/w UBIN        r     1 DB_MUIS                    0-0-0/w STRC(4824)  r     1 DB_RVBUF
     0-0-0/w UBIN        r     1 DB_USRT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0N  NULL        r     1 M$DUMPFILE
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:72   


   Procedure DBM$SELECT requires 88 words for executable code.
   Procedure DBM$SELECT requires 64 words of local(AUTO) storage.
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:73   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:74   
          MINI XREF LISTING

B$ALT.CODE
      6155**DCL      6155--REDEF    6156--REDEF    6156--REDEF
B$ALT.ERR
      6156**DCL      6172>>ASSIGN
B$ALT.ERR.ERR#
      6157**DCL      6157--REDEF
B$ALT.EVID
      6156**DCL      6156--REDEF    6156--REDEF
B$TCB.ALT$
      6151**DCL      6172>>ASSIGN
B$TCB$
      6149**DCL      6172>>ASSIGN
DA_DUMPFILE
        27**DCL      6167>>IF       6189>>IF
DA_MAPERR
        36**DCL      6172<<ASSIGN
DA_MAPSEG.P
        37**DCL        38--REDEF
DA_NODEIDX
        28**DCL      6165<<ASSIGN   6170>>ASSIGN
DA_SDASN.DESC.TYPE0
        22**DCL        22--REDEF
DA_TIGRSEG.P
        38**DCL        39--REDEF
DBM$GETCUN
      5997**DCL-ENT  6190--CALL
DBM$GETMEM
      5996**DCL-ENT  6180--CALL
DBM$PACK
      6001**DCL-ENT  6177--CALL
DBM$PACK2
      5998**DCL-ENT  6175--CALL     6182--CALL
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:75   
DBM$PACK4
      5999**DCL-ENT  6181--CALL
DBM$READ_PAGE
      6000**DCL-ENT  6176--CALL
DB_CUN
      6100**DCL      6187<<ASSIGN
DB_CURPP
      6101**DCL      6188<<ASSIGN
DB_CURRENT_USER
      6104**DCL      6190<>CALL     6192<<ASSIGN
DB_DFKEY
      6058**DCL      6126--DCLINIT  6127--DCLINIT
DB_DFKEY.K
      6062**DCL      6168--ASSIGN   6169<<ASSIGN
DB_DFKEY.K.NODEIDX
      6062**DCL      6170<<ASSIGN
DB_DFKEY.L
      6062**DCL      6168<<ASSIGN
DB_DUMP_BUFFER
      6098**DCL      6177<>CALL
DB_MONASDT
      6099**DCL      6177<>CALL
DB_MUIS
      6103**DCL      6182<>CALL
DB_RVBUF
      6078**DCL      6128--DCLINIT  6129--DCLINIT
DB_RVBUF.MHJITPP
      6096**DCL      6175<>CALL
DB_USRT$
      6102**DCL      6181<>CALL
G$BOBCAT
      6005**DCL      6180<>CALL     6180--CALL     6180--CALL
G$BOBCAT.MUIS
      6006**DCL      6182<>CALL
G$BOBCAT.USRT$
      6008**DCL      6181<>CALL
PL6.E3A0      #002=DBM$SELECT File=DBM$MAP.:E05TSI                               TUE 07/29/97 13:13 Page:76   
HJITPP
      6003**DCL      6175<>CALL     6176<>CALL
M$READ
      5924**DCL-ENT  6171--CALL
NODEIDX
        10**DCL         8--PROC     6165>>ASSIGN
RDRVB
      6126**DCL      6171<>CALL
RDRVB.STATION_
      6129**DCL      6130--REDEF
RDRVB.V
      6130**DCL      6126--DCLINIT
RDRVB.V.DVBYTE.REREAD#
      6141**DCL      6141--REDEF
RDRVB.V.INDX#
      6139**DCL      6139--REDEF

PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:77   
      388        1        /*T***********************************************************/
      389        2        /*T*                                                         */
      390        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      391        4        /*T*                                                         */
      392        5        /*T***********************************************************/
      393        6        DBM$PACK: PROC(INSTR,OUTSTR,SIZE);
      394        7        /**/
      395        8        /*F*    NAME:  DBM$PACK
      396        9                CALL:  CALL DBM$PACK(INSTRING,OUTSTRING,SIZE);
      397       10                PURPOSE:  Packs a string of nine bit bytes into an output
      398       11                          string of eight bit bytes, deleting the top bit
      399       12                          from each byte.
      400       13        */
      401       14        /**/
      402       15    1   DCL INSTR BIT(1) UNAL;
      403       16    1   DCL OUTSTR BIT(1) UNAL;
      404       17    1   DCL SIZE SBIN WORD;
      405       18        /**/
      406       19    1   DCL EIGHT$ PTR;
      407       20    1   DCL EIGHT(0:0) UBIN(8) UNAL BASED(EIGHT$);
      408       21        /**/
      409       22    1   DCL NINE$ PTR;
      410       23    1   DCL NINE(0:0) UBIN(9) UNAL BASED(NINE$);
      411       24        /**/
      412       25    1   DCL I SBIN;
      413       26        /**/
      414       27        %EJECT;
PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:78   
      415       28        /**/
      416       29    1      NINE$=ADDR(INSTR);
      417       30    1      EIGHT$=ADDR(OUTSTR);
      418       31    2      DO I=0 TO SIZE-1;
      419       32    2           EIGHT(I)=NINE(I);
      420       33    2           END;
      421       34    1      RETURN;
      422       35        /**/
      423       36        %EJECT;
PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:79   
      424       37        /**/
      425       38        /*F*    NAME:  DBM$UNPACK
      426       39                CALL:  CALL DBM$UNPACK(INSTRING,OUTSTRING,SIZE);
      427       40                PURPOSE:  Unpacks a string of eight bit bytes into a string of
      428       41                          nine bit bytes, adding a zero bit to the top of each
      429       42                          byte.
      430       43        */
      431       44        /**/
      432       45    1   DBM$UNPACK: ENTRY(INSTR,OUTSTR,SIZE);
      433       46        /**/
      434       47    1      EIGHT$=ADDR(INSTR);
      435       48    1      NINE$=ADDR(OUTSTR);
      436       49    2      DO I=0 TO SIZE-1;
      437       50    2           NINE(I)=EIGHT(I);
      438       51    2           END;
      439       52    1      RETURN;
      440       53        /**/
      441       54    1   END DBM$PACK;
      442       55        %EOD;

PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:80   
      No diagnostics issued in procedure DBM$PACK.

   Procedure DBM$PACK requires 58 words for executable code.
   Procedure DBM$PACK requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:81   

 Object Unit name= DBM$PACK                                   File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:13:58.96 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    58     72  DBM$PACK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  DBM$PACK
     0     34                  yes      Std        3  DBM$UNPACK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:82   


      388        1        /*T***********************************************************/
      389        2        /*T*                                                         */
      390        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      391        4        /*T*                                                         */
      392        5        /*T***********************************************************/
      393        6        DBM$PACK: PROC(INSTR,OUTSTR,SIZE);

      6  0 000000   000000 700200 xent  DBM$PACK     TSX0  ! X66_AUTO_3
         0 000001   000014 000003                    ZERO    12,3

      394        7        /**/
      395        8        /*F*    NAME:  DBM$PACK
      396        9                CALL:  CALL DBM$PACK(INSTRING,OUTSTRING,SIZE);
      397       10                PURPOSE:  Packs a string of nine bit bytes into an output
      398       11                          string of eight bit bytes, deleting the top bit
      399       12                          from each byte.
      400       13        */
      401       14        /**/
      402       15    1   DCL INSTR BIT(1) UNAL;
      403       16    1   DCL OUTSTR BIT(1) UNAL;
      404       17    1   DCL SIZE SBIN WORD;
      405       18        /**/
      406       19    1   DCL EIGHT$ PTR;
      407       20    1   DCL EIGHT(0:0) UBIN(8) UNAL BASED(EIGHT$);
      408       21        /**/
      409       22    1   DCL NINE$ PTR;
      410       23    1   DCL NINE(0:0) UBIN(9) UNAL BASED(NINE$);
      411       24        /**/
      412       25    1   DCL I SBIN;
      413       26        /**/
      414       27        %EJECT;
PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:83   
      415       28        /**/
      416       29    1      NINE$=ADDR(INSTR);

     29  0 000002   200003 236100                    LDQ     @INSTR,,AUTO
         0 000003   200007 756100                    STQ     NINE$,,AUTO

      417       30    1      EIGHT$=ADDR(OUTSTR);

     30  0 000004   200004 236100                    LDQ     @OUTSTR,,AUTO
         0 000005   200006 756100                    STQ     EIGHT$,,AUTO

      418       31    2      DO I=0 TO SIZE-1;

     31  0 000006   200010 450100                    STZ     I,,AUTO
         0 000007   000027 710000 0                  TRA     s:33+1

      419       32    2           EIGHT(I)=NINE(I);

     32  0 000010   200010 236100                    LDQ     I,,AUTO
         0 000011   000011 402007                    MPY     9,DL
         0 000012   000000 116003                    CMPQ    0,DU
         0 000013   000015 605000 0                  TPL     s:32+5
         0 000014   000044 036003                    ADLQ    36,DU
         0 000015   200010 235100                    LDA     I,,AUTO
         0 000016   000003 735000                    ALS     3
         0 000017   000021 605000 0                  TPL     s:32+9
         0 000020   000044 035003                    ADLA    36,DU
         0 000021   200007 470500                    LDP0    NINE$,,AUTO
         0 000022   200006 471500                    LDP1    EIGHT$,,AUTO
         0 000023   003105 061506                    CSR     bolr='003'O
         0 000024   000000 000011                    BDSC    0,Q,PR0                  by=0,bit=0,n=9
         0 000025   100000 000010                    BDSC    0,A,PR1                  by=0,bit=0,n=8

      420       33    2           END;

     33  0 000026   200010 054100                    AOS     I,,AUTO
         0 000027   200005 470500                    LDP0    @SIZE,,AUTO
PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:84   
         0 000030   200010 236100                    LDQ     I,,AUTO
         0 000031   000000 116100                    CMPQ    0,,PR0
         0 000032   000010 604000 0                  TMI     s:32

      421       34    1      RETURN;

     34  0 000033   000000 702200 xent               TSX2  ! X66_ARET

      422       35        /**/
      423       36        %EJECT;
PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:85   
      424       37        /**/
      425       38        /*F*    NAME:  DBM$UNPACK
      426       39                CALL:  CALL DBM$UNPACK(INSTRING,OUTSTRING,SIZE);
      427       40                PURPOSE:  Unpacks a string of eight bit bytes into a string of
      428       41                          nine bit bytes, adding a zero bit to the top of each
      429       42                          byte.
      430       43        */
      431       44        /**/
      432       45    1   DBM$UNPACK: ENTRY(INSTR,OUTSTR,SIZE);

     45  0 000034   000000 700200 xent  DBM$UNPACK   TSX0  ! X66_AUTO_3
         0 000035   000014 000003                    ZERO    12,3

      433       46        /**/
      434       47    1      EIGHT$=ADDR(INSTR);

     47  0 000036   200003 236100                    LDQ     @INSTR,,AUTO
         0 000037   200006 756100                    STQ     EIGHT$,,AUTO

      435       48    1      NINE$=ADDR(OUTSTR);

     48  0 000040   200004 236100                    LDQ     @OUTSTR,,AUTO
         0 000041   200007 756100                    STQ     NINE$,,AUTO

      436       49    2      DO I=0 TO SIZE-1;

     49  0 000042   200010 450100                    STZ     I,,AUTO
         0 000043   000065 710000 0                  TRA     s:51+1

      437       50    2           NINE(I)=EIGHT(I);

     50  0 000044   200010 235100                    LDA     I,,AUTO
         0 000045   000003 735000                    ALS     3
         0 000046   000050 605000 0                  TPL     s:50+4
         0 000047   000044 035003                    ADLA    36,DU
         0 000050   200010 236100                    LDQ     I,,AUTO
         0 000051   200012 755100                    STA     I+2,,AUTO
PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:86   
         0 000052   000011 402007                    MPY     9,DL
         0 000053   000000 116003                    CMPQ    0,DU
         0 000054   000056 605000 0                  TPL     s:50+10
         0 000055   000044 036003                    ADLQ    36,DU
         0 000056   200006 470500                    LDP0    EIGHT$,,AUTO
         0 000057   200012 235100                    LDA     I+2,,AUTO
         0 000060   200007 471500                    LDP1    NINE$,,AUTO
         0 000061   003106 061505                    CSR     bolr='003'O
         0 000062   000000 000010                    BDSC    0,A,PR0                  by=0,bit=0,n=8
         0 000063   100000 000011                    BDSC    0,Q,PR1                  by=0,bit=0,n=9

      438       51    2           END;

     51  0 000064   200010 054100                    AOS     I,,AUTO
         0 000065   200005 470500                    LDP0    @SIZE,,AUTO
         0 000066   200010 236100                    LDQ     I,,AUTO
         0 000067   000000 116100                    CMPQ    0,,PR0
         0 000070   000044 604000 0                  TMI     s:50

      439       52    1      RETURN;

     52  0 000071   000000 702200 xent               TSX2  ! X66_ARET
      440       53        /**/
      441       54    1   END DBM$PACK;
      442       55        %EOD;

PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:87   
      No diagnostics issued in procedure DBM$PACK.
PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:88   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @INSTR                     4-0-0/w PTR         r     1 @OUTSTR
     5-0-0/w PTR         r     1 @SIZE                      6-0-0/w PTR         r     1 EIGHT$
    10-0-0/w SBIN        r     1 I                         *0-0-0/b BIT         r     1 INSTR
     7-0-0/w PTR         r     1 NINE$                     *0-0-0/b BIT         r     1 OUTSTR
    *0-0-0/w SBIN        r     1 SIZE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b UBIN(8)     r     1 EIGHT(0:0)                 0-0-0/b UBIN(9)     r     1 NINE(0:0)


   Procedure DBM$PACK requires 58 words for executable code.
   Procedure DBM$PACK requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:89   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=DBM$PACK File=DBM$MAP.:E05TSI                                 TUE 07/29/97 13:13 Page:90   
          MINI XREF LISTING

EIGHT
        20**DCL        32<<ASSIGN     50>>ASSIGN
EIGHT$
        19**DCL        20--IMP-PTR    30<<ASSIGN     32>>ASSIGN     47<<ASSIGN     50>>ASSIGN
I
        25**DCL        31<<DOINDEX    32>>ASSIGN     32>>ASSIGN     49<<DOINDEX    50>>ASSIGN     50>>ASSIGN
INSTR
        15**DCL         6--PROC       29--ASSIGN     45--ENTRY      47--ASSIGN
NINE
        23**DCL        32>>ASSIGN     50<<ASSIGN
NINE$
        22**DCL        23--IMP-PTR    29<<ASSIGN     32>>ASSIGN     48<<ASSIGN     50>>ASSIGN
OUTSTR
        16**DCL         6--PROC       30--ASSIGN     45--ENTRY      48--ASSIGN
SIZE
        17**DCL         6--PROC       31>>DOINDEX    45--ENTRY      49>>DOINDEX

PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:91   
      443        1        /*T***********************************************************/
      444        2        /*T*                                                         */
      445        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      446        4        /*T*                                                         */
      447        5        /*T***********************************************************/
      448        6        /**/
      449        7        DBM$PACK1: PROC(INSTR,OUTWORD);
      450        8        /**/
      451        9        /*F*    NAME:  DBM$PACK1
      452       10                CALL:  CALL DBM$PACK1(INSTR,OUTWORD);
      453       11                PURPOSE:
      454       12                   Packs one 8 of 9 byte of data into a right justified
      455       13                UBIN(36).
      456       14        */
      457       15        /**/
      458       16    1   DCL INSTR(0:0) UBIN(9) CALIGNED;
      459       17    1   DCL OUTWORD UBIN;
      460       18        /**/
      461       19    1   DCL DBM$PACK ENTRY(3);
      462       20        /**/
      463       21    1      CALL DBM$PACK(INSTR,OUTWORD,1);
      464       22    1      OUTWORD=OUTWORD/%BITBIN('2000000000'O);
      465       23    1      RETURN;
      466       24        /**/
      467       25        /*F*    NAME:  DBM$PACK2
      468       26                CALL:  CALL DBM$PACK2(INSTR,OUTWORD);
      469       27                PURPOSE:
      470       28                   Packs two 8 of 9 bytes of data into a right justified
      471       29                UBIN(36).
      472       30        */
      473       31        /**/
      474       32    1   DBM$PACK2: ENTRY(INSTR,OUTWORD);
      475       33    1      CALL DBM$PACK(INSTR,OUTWORD,2);
      476       34    1      OUTWORD=OUTWORD/%BITBIN('4000000'O);
      477       35    1      RETURN;
      478       36        /**/
      479       37        /*F*    NAME:  DBM$PACK4
PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:92   
      480       38                CALL:  CALL DBM$PACK4(INSTR,OUTWORD);
      481       39                PURPOSE:
      482       40                   Packs four 8 of 9 bytes of data into a right justified
      483       41                UBIN(36).
      484       42        */
      485       43        /**/
      486       44    1   DBM$PACK4: ENTRY(INSTR,OUTWORD);
      487       45    1      CALL DBM$PACK(INSTR,OUTWORD,4);
      488       46    1      OUTWORD=OUTWORD/16;
      489       47    1      RETURN;
      490       48        /**/
      491       49    1   END DBM$PACK1;
      492       50        %EOD;

PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:93   
      No diagnostics issued in procedure DBM$PACK1.

   Procedure DBM$PACK1 requires 48 words for executable code.
   Procedure DBM$PACK1 requires 10 words of local(AUTO) storage.

PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:94   

 Object Unit name= DBM$PACK1                                  File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:14:01.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    48     60  DBM$PACK1
    1  RoData even  none     3      3  DBM$PACK1

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  DBM$PACK1
     0     20                  yes      Std        2  DBM$PACK2
     0     40                  yes      Std        2  DBM$PACK4

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 DBM$PACK
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:95   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:96   


      443        1        /*T***********************************************************/
      444        2        /*T*                                                         */
      445        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      446        4        /*T*                                                         */
      447        5        /*T***********************************************************/
      448        6        /**/
      449        7        DBM$PACK1: PROC(INSTR,OUTWORD);

      7  0 000000   000000 700200 xent  DBM$PACK1    TSX0  ! X66_AUTO_2
         0 000001   000012 000002                    ZERO    10,2

      450        8        /**/
      451        9        /*F*    NAME:  DBM$PACK1
      452       10                CALL:  CALL DBM$PACK1(INSTR,OUTWORD);
      453       11                PURPOSE:
      454       12                   Packs one 8 of 9 byte of data into a right justified
      455       13                UBIN(36).
      456       14        */
      457       15        /**/
      458       16    1   DCL INSTR(0:0) UBIN(9) CALIGNED;
      459       17    1   DCL OUTWORD UBIN;
      460       18        /**/
      461       19    1   DCL DBM$PACK ENTRY(3);
      462       20        /**/
      463       21    1      CALL DBM$PACK(INSTR,OUTWORD,1);

     21  0 000002   000000 236000 1                  LDQ     0
         0 000003   200010 756100                    STQ     @OUTWORD+4,,AUTO
         0 000004   200004 236100                    LDQ     @OUTWORD,,AUTO
         0 000005   200003 235100                    LDA     @INSTR,,AUTO
         0 000006   200006 757100                    STAQ    @OUTWORD+2,,AUTO
         0 000007   200006 630500                    EPPR0   @OUTWORD+2,,AUTO
         0 000010   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000011   000000 701000 xent               TSX1    DBM$PACK
         0 000012   000000 011000                    NOP     0

PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:97   
      464       22    1      OUTWORD=OUTWORD/%BITBIN('2000000000'O);

     22  0 000013   200004 470500                    LDP0    @OUTWORD,,AUTO
         0 000014   000000 236100                    LDQ     0,,PR0
         0 000015   000034 772000                    QRL     28
         0 000016   000000 756100                    STQ     0,,PR0

      465       23    1      RETURN;

     23  0 000017   000000 702200 xent               TSX2  ! X66_ARET

      466       24        /**/
      467       25        /*F*    NAME:  DBM$PACK2
      468       26                CALL:  CALL DBM$PACK2(INSTR,OUTWORD);
      469       27                PURPOSE:
      470       28                   Packs two 8 of 9 bytes of data into a right justified
      471       29                UBIN(36).
      472       30        */
      473       31        /**/
      474       32    1   DBM$PACK2: ENTRY(INSTR,OUTWORD);

     32  0 000020   000000 700200 xent  DBM$PACK2    TSX0  ! X66_AUTO_2
         0 000021   000012 000002                    ZERO    10,2

      475       33    1      CALL DBM$PACK(INSTR,OUTWORD,2);

     33  0 000022   000001 236000 1                  LDQ     1
         0 000023   200010 756100                    STQ     @OUTWORD+4,,AUTO
         0 000024   200004 236100                    LDQ     @OUTWORD,,AUTO
         0 000025   200003 235100                    LDA     @INSTR,,AUTO
         0 000026   200006 757100                    STAQ    @OUTWORD+2,,AUTO
         0 000027   200006 630500                    EPPR0   @OUTWORD+2,,AUTO
         0 000030   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000031   000000 701000 xent               TSX1    DBM$PACK
         0 000032   000000 011000                    NOP     0

      476       34    1      OUTWORD=OUTWORD/%BITBIN('4000000'O);
PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:98   

     34  0 000033   200004 470500                    LDP0    @OUTWORD,,AUTO
         0 000034   000000 236100                    LDQ     0,,PR0
         0 000035   000024 772000                    QRL     20
         0 000036   000000 756100                    STQ     0,,PR0

      477       35    1      RETURN;

     35  0 000037   000000 702200 xent               TSX2  ! X66_ARET

      478       36        /**/
      479       37        /*F*    NAME:  DBM$PACK4
      480       38                CALL:  CALL DBM$PACK4(INSTR,OUTWORD);
      481       39                PURPOSE:
      482       40                   Packs four 8 of 9 bytes of data into a right justified
      483       41                UBIN(36).
      484       42        */
      485       43        /**/
      486       44    1   DBM$PACK4: ENTRY(INSTR,OUTWORD);

     44  0 000040   000000 700200 xent  DBM$PACK4    TSX0  ! X66_AUTO_2
         0 000041   000012 000002                    ZERO    10,2

      487       45    1      CALL DBM$PACK(INSTR,OUTWORD,4);

     45  0 000042   000002 236000 1                  LDQ     2
         0 000043   200010 756100                    STQ     @OUTWORD+4,,AUTO
         0 000044   200004 236100                    LDQ     @OUTWORD,,AUTO
         0 000045   200003 235100                    LDA     @INSTR,,AUTO
         0 000046   200006 757100                    STAQ    @OUTWORD+2,,AUTO
         0 000047   200006 630500                    EPPR0   @OUTWORD+2,,AUTO
         0 000050   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000051   000000 701000 xent               TSX1    DBM$PACK
         0 000052   000000 011000                    NOP     0

      488       46    1      OUTWORD=OUTWORD/16;

PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:99   
     46  0 000053   200004 470500                    LDP0    @OUTWORD,,AUTO
         0 000054   000000 236100                    LDQ     0,,PR0
         0 000055   000004 772000                    QRL     4
         0 000056   000000 756100                    STQ     0,,PR0

      489       47    1      RETURN;

     47  0 000057   000000 702200 xent               TSX2  ! X66_ARET
      490       48        /**/
      491       49    1   END DBM$PACK1;
      492       50        %EOD;

PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:100  
      No diagnostics issued in procedure DBM$PACK1.
PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:101  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @INSTR                     4-0-0/w PTR         r     1 @OUTWORD
    *0-0-0/c UBIN(9)     r     1 INSTR(0:0)                *0-0-0/w UBIN        r     1 OUTWORD


   Procedure DBM$PACK1 requires 48 words for executable code.
   Procedure DBM$PACK1 requires 10 words of local(AUTO) storage.
PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:102  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=DBM$PACK1 File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:103  
          MINI XREF LISTING

DBM$PACK
        19**DCL-ENT    21--CALL       33--CALL       45--CALL
INSTR
        16**DCL         7--PROC       21<>CALL       32--ENTRY      33<>CALL       44--ENTRY      45<>CALL
OUTWORD
        17**DCL         7--PROC       21<>CALL       22<<ASSIGN     22>>ASSIGN     32--ENTRY      33<>CALL
        34<<ASSIGN     34>>ASSIGN     44--ENTRY      45<>CALL       46<<ASSIGN     46>>ASSIGN

PL6.E3A0      #005=DBM$PACKB File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:104  
      493        1        /*T***********************************************************/
      494        2        /*T*                                                         */
      495        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      496        4        /*T*                                                         */
      497        5        /*T***********************************************************/
      498        6        DBM$PACKB: PROC(INSTR,OUTSTR);
      499        7        /**/
      500        8        /*F*  NAME:  DBM$PACKB
      501        9              CALL:  CALL DBM$PACKB(INSTR,OUTSTR);
      502       10              PURPOSE:  Packs 36 bits from INSTR into OUTSTR.
      503       11        */
      504       12        /**/
      505       13    1   DCL INSTR UBIN CALIGNED;
      506       14    1   DCL OUTSTR UBIN CALIGNED;
      507       15        /**/
      508       16    1   DCL TEMP(0:1) UBIN;
      509       17        /**/
      510       18    1   DCL DBM$PACK ENTRY(3);
      511       19        /**/
      512       20        /**/
      513       21    1      CALL DBM$PACK(INSTR,TEMP,5);
      514       22    1      OUTSTR=TEMP(0);
      515       23    1      RETURN;
      516       24        /**/
      517       25    1   END DBM$PACKB;
      518       26        %EOD;

PL6.E3A0      #005=DBM$PACKB File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:105  
      No diagnostics issued in procedure DBM$PACKB.

   Procedure DBM$PACKB requires 17 words for executable code.
   Procedure DBM$PACKB requires 12 words of local(AUTO) storage.

PL6.E3A0      #005=DBM$PACKB File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:106  

 Object Unit name= DBM$PACKB                                  File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:14:04.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    17     21  DBM$PACKB
    1  RoData even  none     1      1  DBM$PACKB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  DBM$PACKB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 DBM$PACK
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #005=DBM$PACKB File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:107  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=DBM$PACKB File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:108  


      493        1        /*T***********************************************************/
      494        2        /*T*                                                         */
      495        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      496        4        /*T*                                                         */
      497        5        /*T***********************************************************/
      498        6        DBM$PACKB: PROC(INSTR,OUTSTR);

      6  0 000000   000000 700200 xent  DBM$PACKB    TSX0  ! X66_AUTO_2
         0 000001   000014 000002                    ZERO    12,2

      499        7        /**/
      500        8        /*F*  NAME:  DBM$PACKB
      501        9              CALL:  CALL DBM$PACKB(INSTR,OUTSTR);
      502       10              PURPOSE:  Packs 36 bits from INSTR into OUTSTR.
      503       11        */
      504       12        /**/
      505       13    1   DCL INSTR UBIN CALIGNED;
      506       14    1   DCL OUTSTR UBIN CALIGNED;
      507       15        /**/
      508       16    1   DCL TEMP(0:1) UBIN;
      509       17        /**/
      510       18    1   DCL DBM$PACK ENTRY(3);
      511       19        /**/
      512       20        /**/
      513       21    1      CALL DBM$PACK(INSTR,TEMP,5);

     21  0 000002   000000 236000 1                  LDQ     0
         0 000003   200012 756100                    STQ     TEMP+5,,AUTO
         0 000004   200005 630500                    EPPR0   TEMP,,AUTO
         0 000005   200011 450500                    STP0    TEMP+4,,AUTO
         0 000006   200003 236100                    LDQ     @INSTR,,AUTO
         0 000007   200010 756100                    STQ     TEMP+3,,AUTO
         0 000010   200010 630500                    EPPR0   TEMP+3,,AUTO
         0 000011   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000012   000000 701000 xent               TSX1    DBM$PACK
         0 000013   000000 011000                    NOP     0
PL6.E3A0      #005=DBM$PACKB File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:109  

      514       22    1      OUTSTR=TEMP(0);

     22  0 000014   200004 470500                    LDP0    @OUTSTR,,AUTO
         0 000015   000100 100500                    MLR     fill='000'O
         0 000016   200005 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4
         0 000017   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      515       23    1      RETURN;

     23  0 000020   000000 702200 xent               TSX2  ! X66_ARET
      516       24        /**/
      517       25    1   END DBM$PACKB;
      518       26        %EOD;

PL6.E3A0      #005=DBM$PACKB File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:110  
      No diagnostics issued in procedure DBM$PACKB.
PL6.E3A0      #005=DBM$PACKB File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:111  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @INSTR                     4-0-0/w PTR         r     1 @OUTSTR
    *0-0-0/c UBIN        r     1 INSTR                     *0-0-0/c UBIN        r     1 OUTSTR
     5-0-0/w UBIN        r     1 TEMP(0:1)


   Procedure DBM$PACKB requires 17 words for executable code.
   Procedure DBM$PACKB requires 12 words of local(AUTO) storage.
PL6.E3A0      #005=DBM$PACKB File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:112  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=DBM$PACKB File=DBM$MAP.:E05TSI                                TUE 07/29/97 13:14 Page:113  
          MINI XREF LISTING

DBM$PACK
        18**DCL-ENT    21--CALL
INSTR
        13**DCL         6--PROC       21<>CALL
OUTSTR
        14**DCL         6--PROC       22<<ASSIGN
TEMP
        16**DCL        21<>CALL       22>>ASSIGN

PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:114  
      519        1        /*T***********************************************************/
      520        2        /*T*                                                         */
      521        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      522        4        /*T*                                                         */
      523        5        /*T***********************************************************/
      524        6        DBM$READ_PAGE: PROC(PPNO) ALTRET;
      525        7        /**/
      526        8    1   DCL PPNO UBIN;
      527        9        /**/
      528       10        %INCLUDE CP_6;
      529     5569        %INCLUDE IR_DATA_M;
      530     5733        %INCLUDE DA_MAP_R;
      531     5763        /**/
      532     5764        %RV_DFSUBS;
      533     5791        %RV_DFKEY (NAME=DB_DFKEY,STCLASS=SYMREF);
      534     5809    1   DCL DB_DUMP_BUFFER CHAR(512) SYMREF;
      535     5810    1   DCL DB_CURPP UBIN SYMREF;
      536     5811        /**/
      537     5812    1   DCL M$DUMPFILE DCB;
      538     5813        %FPT_READ (FPTN=RDDUMP,DCB=M$DUMPFILE,KEY=DB_DFKEY,KEYS=YES,
      539     5814                   BUF=DB_DUMP_BUFFER);
      540     5853        /**/
      541     5854    1   DCL B$TCB$ PTR SYMREF;
      542     5855        %B$TCB;
      543     5858        %B$ALT;
      544     5866        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      545     5867        /**/
      546     5868        /**/
      547     5869    1      IF PPNO=DB_CURPP THEN RETURN;
      548     5870    1      DB_DFKEY.K.TYP=%R_LRMEM#;
      549     5871    1      DB_DFKEY.K.STYP=0;
      550     5872    1      DB_DFKEY.K.USR#=0;
      551     5873    1      DB_DFKEY.K.VP#=PPNO;
      552     5874    2      CALL M$READ(RDDUMP) WHENALTRETURN DO;
      553     5875    2           DA_MAPERR=B$ALT.ERR;
      554     5876    2           ALTRETURN;
      555     5877    2           END;
PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:115  
      556     5878    1      DB_CURPP=PPNO;
      557     5879    1      RETURN;
      558     5880        /**/
      559     5881    1   END DBM$READ_PAGE;
      560     5882        %EOD;

PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:116  
--  Include file information  --

   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DBM$READ_PAGE.

   Procedure DBM$READ_PAGE requires 28 words for executable code.
   Procedure DBM$READ_PAGE requires 4 words of local(AUTO) storage.

PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:117  

 Object Unit name= DBM$READ_PAGE                              File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:14:06.40 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$DUMPFILE
    2   Data  even  none    14     16  DBM$READ_PAGE
    3   Proc  even  none    28     34  DBM$READ_PAGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  DBM$READ_PAGE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  DA_MAPERR                             DB_DFKEY
     DB_DUMP_BUFFER                        DB_CURPP                              M$DUMPFILE
     B$TCB$
PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:118  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:119  


      519        1        /*T***********************************************************/
      520        2        /*T*                                                         */
      521        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      522        4        /*T*                                                         */
      523        5        /*T***********************************************************/
      524        6        DBM$READ_PAGE: PROC(PPNO) ALTRET;

      6  3 000000   000000 700200 xent  DBM$READ_PA* TSX0  ! X66_AUTO_1
         3 000001   000004 000001                    ZERO    4,1

      525        7        /**/
      526        8    1   DCL PPNO UBIN;
      527        9        /**/
      528       10        %INCLUDE CP_6;
      529     5569        %INCLUDE IR_DATA_M;
      530     5733        %INCLUDE DA_MAP_R;
      531     5763        /**/
      532     5764        %RV_DFSUBS;
      533     5791        %RV_DFKEY (NAME=DB_DFKEY,STCLASS=SYMREF);
      534     5809    1   DCL DB_DUMP_BUFFER CHAR(512) SYMREF;
      535     5810    1   DCL DB_CURPP UBIN SYMREF;
      536     5811        /**/
      537     5812    1   DCL M$DUMPFILE DCB;
      538     5813        %FPT_READ (FPTN=RDDUMP,DCB=M$DUMPFILE,KEY=DB_DFKEY,KEYS=YES,
      539     5814                   BUF=DB_DUMP_BUFFER);
      540     5853        /**/
      541     5854    1   DCL B$TCB$ PTR SYMREF;
      542     5855        %B$TCB;
      543     5858        %B$ALT;
      544     5866        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      545     5867        /**/
      546     5868        /**/
      547     5869    1      IF PPNO=DB_CURPP THEN RETURN;

   5869  3 000002   200003 470500                    LDP0    @PPNO,,AUTO
         3 000003   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:120  
         3 000004   000000 116000 xsym               CMPQ    DB_CURPP
         3 000005   000007 601000 3                  TNZ     s:5870

   5869  3 000006   000000 702200 xent               TSX2  ! X66_ARET

      548     5870    1      DB_DFKEY.K.TYP=%R_LRMEM#;

   5870  3 000007   001000 236007                    LDQ     512,DL
         3 000010   000000 552010 xsym               STBQ    DB_DFKEY,'10'O

      549     5871    1      DB_DFKEY.K.STYP=0;

   5871  3 000011   000000 236003                    LDQ     0,DU
         3 000012   000000 552004 xsym               STBQ    DB_DFKEY,'04'O

      550     5872    1      DB_DFKEY.K.USR#=0;

   5872  3 000013   000001 552040 xsym               STBQ    DB_DFKEY+1,'40'O

      551     5873    1      DB_DFKEY.K.VP#=PPNO;

   5873  3 000014   000000 236100                    LDQ     0,,PR0
         3 000015   000001 552034 xsym               STBQ    DB_DFKEY+1,'34'O

      552     5874    2      CALL M$READ(RDDUMP) WHENALTRETURN DO;

   5874  3 000016   000000 630400 2                  EPPR0   RDDUMP
         3 000017   440000 713400                    CLIMB   alt,read
         3 000020   401400 401760                    pmme    nvectors=4
         3 000021   000023 702000 3                  TSX2    s:5875
         3 000022   000030 710000 3                  TRA     s:5878

      553     5875    2           DA_MAPERR=B$ALT.ERR;

   5875  3 000023   000000 470400 xsym               LDP0    B$TCB$
         3 000024   000000 471500                    LDP1    0,,PR0
         3 000025   100102 236100                    LDQ     66,,PR1
PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:121  
         3 000026   000000 756000 xsym               STQ     DA_MAPERR

      554     5876    2           ALTRETURN;

   5876  3 000027   000000 702200 xent               TSX2  ! X66_AALT

      555     5877    2           END;
      556     5878    1      DB_CURPP=PPNO;

   5878  3 000030   200003 470500                    LDP0    @PPNO,,AUTO
         3 000031   000000 235100                    LDA     0,,PR0
         3 000032   000000 755000 xsym               STA     DB_CURPP

      557     5879    1      RETURN;

   5879  3 000033   000000 702200 xent               TSX2  ! X66_ARET
      558     5880        /**/
      559     5881    1   END DBM$READ_PAGE;
      560     5882        %EOD;

PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:122  
--  Include file information  --

   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DBM$READ_PAGE.
PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:123  

 **** Variables and constants ****

  ****  Section 002  Data  DBM$READ_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 RDDUMP

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PPNO                     *0-0-0/w UBIN        r     1 PPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC        r     1 DA_MAPERR
     0-0-0/w UBIN        r     1 DB_CURPP                   0-0-0/d STRC(72)    r     1 DB_DFKEY
     0-0-0/c CHAR(512)   r     1 DB_DUMP_BUFFER

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0N  NULL        r     1 M$DUMPFILE


   Procedure DBM$READ_PAGE requires 28 words for executable code.
   Procedure DBM$READ_PAGE requires 4 words of local(AUTO) storage.
PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:124  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:125  
          MINI XREF LISTING

B$ALT.CODE
      5860**DCL      5860--REDEF    5861--REDEF    5861--REDEF
B$ALT.ERR
      5861**DCL      5875>>ASSIGN
B$ALT.ERR.ERR#
      5862**DCL      5862--REDEF
B$ALT.EVID
      5861**DCL      5861--REDEF    5861--REDEF
B$TCB.ALT$
      5856**DCL      5875>>ASSIGN
B$TCB$
      5854**DCL      5875>>ASSIGN
DA_MAPERR
      5757**DCL      5875<<ASSIGN
DA_MAPSEG.P
      5758**DCL      5759--REDEF
DA_SDASN.DESC.TYPE0
      5743**DCL      5743--REDEF
DA_TIGRSEG.P
      5759**DCL      5760--REDEF
DB_CURPP
      5810**DCL      5869>>IF       5878<<ASSIGN
DB_DFKEY
      5802**DCL      5831--DCLINIT  5832--DCLINIT
DB_DFKEY.K.STYP
      5806**DCL      5871<<ASSIGN
DB_DFKEY.K.TYP
      5806**DCL      5870<<ASSIGN
DB_DFKEY.K.USR#
      5806**DCL      5872<<ASSIGN
DB_DFKEY.K.VP#
      5807**DCL      5873<<ASSIGN
PL6.E3A0      #006=DBM$READ_PAGE File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:126  
DB_DUMP_BUFFER
      5809**DCL      5833--DCLINIT  5834--DCLINIT
M$READ
      5498**DCL-ENT  5874--CALL
PPNO
         8**DCL         6--PROC     5869>>IF       5873>>ASSIGN   5878>>ASSIGN
RDDUMP
      5831**DCL      5874<>CALL
RDDUMP.STATION_
      5834**DCL      5835--REDEF
RDDUMP.V
      5835**DCL      5831--DCLINIT
RDDUMP.V.DVBYTE.REREAD#
      5846**DCL      5846--REDEF
RDDUMP.V.INDX#
      5844**DCL      5844--REDEF

PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:127  
      561        1        /*T***********************************************************/
      562        2        /*T*                                                         */
      563        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      564        4        /*T*                                                         */
      565        5        /*T***********************************************************/
      566        6        DBM$VIRT2REAL: PROC(ASDT,VIRTPG,REALPG,PGS) ALTRET;
      567        7        /**/
      568        8    1   DCL 1 ASDT(0:30) UNAL,
      569        9    1         2 V BIT(1),
      570       10    1         2 BASE UBIN(15) UNAL,
      571       11    1         2 * BIT(6),
      572       12    1         2 * BIT(1),
      573       13    1         2 SIZE UBIN(9) UNAL;
      574       14    1   DCL VIRTPG UBIN;
      575       15    1   DCL REALPG UBIN;
      576       16    1   DCL PGS UBIN;
      577       17        /**/
      578       18    1   DCL SEGX UBIN;
      579       19    1   DCL SEGPG UBIN;
      580       20    1   DCL X SBIN;
      581       21        /**/
      582       22        %EJECT;
PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:128  
      583       23        /**/
      584       24    2      IF ADDR(ASDT)=ADDR(NIL) THEN DO;
      585       25    2           REALPG=VIRTPG;
      586       26    2           PGS=256;
      587       27    2           END;
      588       28    2      ELSE DO;
      589       29    3           IF VIRTPG>=4096 THEN DO;
      590       30    3                REALPG=0;
      591       31    3                PGS=0;
      592       32    3                END;
      593       33    3           ELSE DO;
      594       34    4                IF VIRTPG>=256 THEN DO;
      595       35    4                     SEGX=15+VIRTPG/256;
      596       36    4                     SEGPG=MOD(VIRTPG,256);
      597       37    4                     END;
      598       38    4                ELSE DO;
      599       39    4                     SEGX=VIRTPG/16;
      600       40    4                     SEGPG=MOD(VIRTPG,16);
      601       41    4                     END;
      602       42    3                REALPG=ASDT.BASE(SEGX)+SEGPG;
      603       43    3                X=ASDT.SIZE(SEGX)-SEGPG+1;
      604       44    3                IF X<0 OR NOT ASDT.V(SEGX) THEN
      605       45    3                     PGS=0;
      606       46    3                ELSE
      607       47    3                     PGS=X;
      608       48    3                END;
      609       49    2           END;
      610       50    1      IF PGS>0 THEN
      611       51    1           RETURN;
      612       52    1      ELSE
      613       53    1           ALTRETURN;
      614       54        /**/
      615       55    1   END DBM$VIRT2REAL;
      616       56        /**/
      617       57        %EOD;

PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:129  
      No diagnostics issued in procedure DBM$VIRT2REAL.

   Procedure DBM$VIRT2REAL requires 70 words for executable code.
   Procedure DBM$VIRT2REAL requires 12 words of local(AUTO) storage.

PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:130  

 Object Unit name= DBM$VIRT2REAL                              File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:14:25.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    70    106  DBM$VIRT2REAL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        4  DBM$VIRT2REAL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:131  


      561        1        /*T***********************************************************/
      562        2        /*T*                                                         */
      563        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      564        4        /*T*                                                         */
      565        5        /*T***********************************************************/
      566        6        DBM$VIRT2REAL: PROC(ASDT,VIRTPG,REALPG,PGS) ALTRET;

      6  0 000000   000000 700200 xent  DBM$VIRT2RE* TSX0  ! X66_AUTO_4
         0 000001   000014 000004                    ZERO    12,4

      567        7        /**/
      568        8    1   DCL 1 ASDT(0:30) UNAL,
      569        9    1         2 V BIT(1),
      570       10    1         2 BASE UBIN(15) UNAL,
      571       11    1         2 * BIT(6),
      572       12    1         2 * BIT(1),
      573       13    1         2 SIZE UBIN(9) UNAL;
      574       14    1   DCL VIRTPG UBIN;
      575       15    1   DCL REALPG UBIN;
      576       16    1   DCL PGS UBIN;
      577       17        /**/
      578       18    1   DCL SEGX UBIN;
      579       19    1   DCL SEGPG UBIN;
      580       20    1   DCL X SBIN;
      581       21        /**/
      582       22        %EJECT;
PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:132  
      583       23        /**/
      584       24    2      IF ADDR(ASDT)=ADDR(NIL) THEN DO;

     24  0 000002   200003 236100                    LDQ     @ASDT,,AUTO
         0 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000004   000015 601000 0                  TNZ     s:29

      585       25    2           REALPG=VIRTPG;

     25  0 000005   200004 470500                    LDP0    @VIRTPG,,AUTO
         0 000006   200005 471500                    LDP1    @REALPG,,AUTO
         0 000007   000000 235100                    LDA     0,,PR0
         0 000010   100000 755100                    STA     0,,PR1

      586       26    2           PGS=256;

     26  0 000011   000400 235007                    LDA     256,DL
         0 000012   200006 473500                    LDP3    @PGS,,AUTO
         0 000013   300000 755100                    STA     0,,PR3

      587       27    2           END;

     27  0 000014   000101 710000 0                  TRA     s:50

      588       28    2      ELSE DO;

      589       29    3           IF VIRTPG>=4096 THEN DO;

     29  0 000015   200004 470500                    LDP0    @VIRTPG,,AUTO
         0 000016   000000 235100                    LDA     0,,PR0
         0 000017   010000 115007                    CMPA    4096,DL
         0 000020   000026 602000 0                  TNC     s:34

      590       30    3                REALPG=0;

     30  0 000021   200005 471500                    LDP1    @REALPG,,AUTO
         0 000022   100000 450100                    STZ     0,,PR1
PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:133  

      591       31    3                PGS=0;

     31  0 000023   200006 473500                    LDP3    @PGS,,AUTO
         0 000024   300000 450100                    STZ     0,,PR3

      592       32    3                END;

     32  0 000025   000101 710000 0                  TRA     s:50

      593       33    3           ELSE DO;

      594       34    4                IF VIRTPG>=256 THEN DO;

     34  0 000026   000400 115007                    CMPA    256,DL
         0 000027   000040 602000 0                  TNC     s:39

      595       35    4                     SEGX=15+VIRTPG/256;

     35  0 000030   000000 236100                    LDQ     0,,PR0
         0 000031   000010 772000                    QRL     8
         0 000032   000017 036007                    ADLQ    15,DL
         0 000033   200007 756100                    STQ     SEGX,,AUTO

      596       36    4                     SEGPG=MOD(VIRTPG,256);

     36  0 000034   000000 236100                    LDQ     0,,PR0
         0 000035   000377 376007                    ANQ     255,DL
         0 000036   200010 756100                    STQ     SEGPG,,AUTO

      597       37    4                     END;

     37  0 000037   000046 710000 0                  TRA     s:42

      598       38    4                ELSE DO;

      599       39    4                     SEGX=VIRTPG/16;
PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:134  

     39  0 000040   000000 236100                    LDQ     0,,PR0
         0 000041   000004 772000                    QRL     4
         0 000042   200007 756100                    STQ     SEGX,,AUTO

      600       40    4                     SEGPG=MOD(VIRTPG,16);

     40  0 000043   000000 236100                    LDQ     0,,PR0
         0 000044   000017 376007                    ANQ     15,DL
         0 000045   200010 756100                    STQ     SEGPG,,AUTO

      601       41    4                     END;

      602       42    3                REALPG=ASDT.BASE(SEGX)+SEGPG;

     42  0 000046   200007 235100                    LDA     SEGX,,AUTO
         0 000047   000005 735000                    ALS     5
         0 000050   200003 471500                    LDP1    @ASDT,,AUTO
         0 000051   003100 061505                    CSR     bolr='003'O
         0 000052   100000 010017                    BDSC    0,A,PR1                  by=0,bit=1,n=15
         0 000053   200012 000044                    BDSC    X+1,,AUTO                by=0,bit=0,n=36
         0 000054   200012 236100                    LDQ     X+1,,AUTO
         0 000055   200010 036100                    ADLQ    SEGPG,,AUTO
         0 000056   200005 473500                    LDP3    @REALPG,,AUTO
         0 000057   300000 756100                    STQ     0,,PR3

      603       43    3                X=ASDT.SIZE(SEGX)-SEGPG+1;

     43  0 000060   003100 061505                    CSR     bolr='003'O
         0 000061   100000 450011                    BDSC    0,A,PR1                  by=2,bit=5,n=9
         0 000062   200012 000044                    BDSC    X+1,,AUTO                by=0,bit=0,n=36
         0 000063   200012 236100                    LDQ     X+1,,AUTO
         0 000064   200010 136100                    SBLQ    SEGPG,,AUTO
         0 000065   000001 036007                    ADLQ    1,DL
         0 000066   200011 756100                    STQ     X,,AUTO

      604       44    3                IF X<0 OR NOT ASDT.V(SEGX) THEN
PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:135  

     44  0 000067   000074 604000 0                  TMI     s:45
         0 000070   000000 066505                    CMPB    filb='0'B
         0 000071   100000 000001                    BDSC    0,A,PR1                  by=0,bit=0,n=1
         0 000072   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         0 000073   000077 601000 0                  TNZ     s:47

      605       45    3                     PGS=0;

     45  0 000074   200006 474500                    LDP4    @PGS,,AUTO
         0 000075   400000 450100                    STZ     0,,PR4
         0 000076   000101 710000 0                  TRA     s:50

      606       46    3                ELSE
      607       47    3                     PGS=X;

     47  0 000077   200006 474500                    LDP4    @PGS,,AUTO
         0 000100   400000 756100                    STQ     0,,PR4

      608       48    3                END;

      609       49    2           END;

      610       50    1      IF PGS>0 THEN

     50  0 000101   200006 471500                    LDP1    @PGS,,AUTO
         0 000102   100000 235100                    LDA     0,,PR1
         0 000103   000105 600000 0                  TZE     s:53

      611       51    1           RETURN;

     51  0 000104   000000 702200 xent               TSX2  ! X66_ARET

      612       52    1      ELSE
      613       53    1           ALTRETURN;

     53  0 000105   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:136  
      614       54        /**/
      615       55    1   END DBM$VIRT2REAL;
      616       56        /**/
      617       57        %EOD;

PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:137  
      No diagnostics issued in procedure DBM$VIRT2REAL.
PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:138  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ASDT                      6-0-0/w PTR         r     1 @PGS
     5-0-0/w PTR         r     1 @REALPG                    4-0-0/w PTR         r     1 @VIRTPG
    *0-0-0/b STRC(32)    r     1 ASDT(0:30)                *0-0-0/w UBIN        r     1 PGS
    *0-0-0/w UBIN        r     1 REALPG                    10-0-0/w UBIN        r     1 SEGPG
     7-0-0/w UBIN        r     1 SEGX                      *0-0-0/w UBIN        r     1 VIRTPG
    11-0-0/w SBIN        r     1 X


   Procedure DBM$VIRT2REAL requires 70 words for executable code.
   Procedure DBM$VIRT2REAL requires 12 words of local(AUTO) storage.
PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:139  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=DBM$VIRT2REAL File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:140  
          MINI XREF LISTING

ASDT
         8**DCL         6--PROC       24--IF
ASDT.BASE
        10**DCL        42>>ASSIGN
ASDT.SIZE
        13**DCL        43>>ASSIGN
ASDT.V
         9**DCL        44>>IF
PGS
        16**DCL         6--PROC       26<<ASSIGN     31<<ASSIGN     45<<ASSIGN     47<<ASSIGN     50>>IF
REALPG
        15**DCL         6--PROC       25<<ASSIGN     30<<ASSIGN     42<<ASSIGN
SEGPG
        19**DCL        36<<ASSIGN     40<<ASSIGN     42>>ASSIGN     43>>ASSIGN
SEGX
        18**DCL        35<<ASSIGN     39<<ASSIGN     42>>ASSIGN     43>>ASSIGN     44>>IF
VIRTPG
        14**DCL         6--PROC       25>>ASSIGN     29>>IF         34>>IF         35>>ASSIGN     36>>ASSIGN
        39>>ASSIGN     40>>ASSIGN
X
        20**DCL        43<<ASSIGN     44>>IF         47>>ASSIGN

PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:141  
      618        1        /*T***********************************************************/
      619        2        /*T*                                                         */
      620        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      621        4        /*T*                                                         */
      622        5        /*T***********************************************************/
      623        6        /**/
      624        7        DBM$CHECKUN: PROC(USERNO) ALTRET;
      625        8        /**/
      626        9        /*F*    NAME:  DBM$CHECKUN
      627       10                CALL:  CALL DBM$CHECKUN(USER_NUMBER) ALTRET;
      628       11                PURPOSE:
      629       12                   Determines whether or not the specified user exists.  If
      630       13                the user does not exist the alternate return is taken with
      631       14                a no such user error in DA_MAPERR.  If the user exists his
      632       15                ASDT is put in DB_USERASDT and the normal return is taken.
      633       16        */
      634       17        /**/
      635       18    1   DCL USERNO UBIN;
      636       19        /**/
      637       20        %INCLUDE DA_MAP_R;
      638       50        %INCLUDE GH_SCHD_M;
      639      194        %INCLUDE GH_SCHD_E;
      640      290        %INCLUDE DB_PERR_C;
      641      308        /**/
      642      309    1   DCL DBM$GETMEM ENTRY(10) ALTRET;
      643      310    1   DCL DBM$READ_PAGE ENTRY(1) ALTRET;
      644      311    1   DCL DBM$PACK2 ENTRY(2);
      645      312    1   DCL DBM$PACK4 ENTRY(2);
      646      313    1   DCL DBM$PACK ENTRY(3);
      647      314        /**/
      648      315    1   DCL DB_DUMP_BUFFER UBIN SYMREF;
      649      316    1   DCL DB_USERASDT UBIN SYMREF;
      650      317    1   DCL DB_USRT$ UBIN SYMREF;
      651      318    1   DCL DB_MUIS UBIN SYMREF;
      652      319    1   DCL DB_CUN UBIN SYMREF;
      653      320    1   DCL DB_SYSID UBIN SYMREF;
      654      321    1   DCL DBM_ERR BIT(36) SYMREF;
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:142  
      655      322        /**/
      656      323    1   DCL STATE UBIN;
      657      324    1   DCL UHJITPP UBIN;
      658      325        %G$USER (FPTN=G$U,STCLASS=AUTO);
      659      336        /**/
      660      337        %EJECT;
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:143  
      661      338        /**/
      662      339    1      IF USERNO=DB_CUN THEN RETURN;
      663      340    1      IF USERNO=0 OR USERNO>DB_MUIS THEN GOTO NO_USER;
      664      341    2      CALL DBM$GETMEM(DB_USRT$+(LENGTHC(G$U)/2)*USERNO,G$U,0,LENGTHC(G$U),,LENGTHC(G$U)
               341               ) WHENRETURN DO;
      665      342    2           CALL DBM$PACK2(G$U.US,STATE);
      666      343    2           IF STATE=%GH_NULL THEN GOTO NO_USER;
      667      344    3           IF DA_DUMPFILE THEN DO;
      668      345    3                CALL DBM$PACK4(G$U.UHJITPP,UHJITPP);
      669      346    4                CALL DBM$READ_PAGE(UHJITPP) WHENALTRETURN DO;
      670      347    4                     ALTRETURN;
      671      348    4                     END;
      672      349    3                CALL DBM$PACK(DB_DUMP_BUFFER,DB_USERASDT,31*4);
      673      350    3                END;
      674      351    2           DB_CUN=USERNO;
      675      352    2           CALL DBM$PACK2(G$U.SYSID,DB_SYSID);
      676      353    2           RETURN;
      677      354    2           END;
      678      355    2      WHENALTRETURN DO;
      679      356    2           ALTRETURN;
      680      357    2           END;
      681      358        /**/
      682      359    1   NO_USER:
      683      360    1      DA_MAPERR=DBM_ERR;
      684      361    1      DA_MAPERR.CODE=%E$DB_NO_USER;
      685      362    1      ALTRETURN;
      686      363        /*E*    ERROR: DBM-E$DB_NO_USER
      687      364                MESSAGE: No such user.
      688      365        */
      689      366        /**/
      690      367    1   END DBM$CHECKUN;
      691      368        %EOD;

PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:144  
--  Include file information  --

   DB_PERR_C.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DBM$CHECKUN.

   Procedure DBM$CHECKUN requires 84 words for executable code.
   Procedure DBM$CHECKUN requires 26 words of local(AUTO) storage.

PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:145  

 Object Unit name= DBM$CHECKUN                                File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:14:28.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    84    124  DBM$CHECKUN
    1  RoData even  none    12     14  DBM$CHECKUN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  DBM$CHECKUN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std      10 DBM$GETMEM
         yes           Std       2 DBM$PACK2
 yes     yes           Std       1 DBM$READ_PAGE
         yes           Std       3 DBM$PACK
         yes           Std       2 DBM$PACK4
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:146  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DA_DUMPFILE                           DA_MAPERR                             DB_DUMP_BUFFER
     DB_USERASDT                           DB_USRT$                              DB_MUIS
     DB_CUN                                DB_SYSID                              DBM_ERR
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:147  


      618        1        /*T***********************************************************/
      619        2        /*T*                                                         */
      620        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      621        4        /*T*                                                         */
      622        5        /*T***********************************************************/
      623        6        /**/
      624        7        DBM$CHECKUN: PROC(USERNO) ALTRET;

      7  0 000000   000000 700200 xent  DBM$CHECKUN  TSX0  ! X66_AUTO_1
         0 000001   000032 000001                    ZERO    26,1

      625        8        /**/
      626        9        /*F*    NAME:  DBM$CHECKUN
      627       10                CALL:  CALL DBM$CHECKUN(USER_NUMBER) ALTRET;
      628       11                PURPOSE:
      629       12                   Determines whether or not the specified user exists.  If
      630       13                the user does not exist the alternate return is taken with
      631       14                a no such user error in DA_MAPERR.  If the user exists his
      632       15                ASDT is put in DB_USERASDT and the normal return is taken.
      633       16        */
      634       17        /**/
      635       18    1   DCL USERNO UBIN;
      636       19        /**/
      637       20        %INCLUDE DA_MAP_R;
      638       50        %INCLUDE GH_SCHD_M;
      639      194        %INCLUDE GH_SCHD_E;
      640      290        %INCLUDE DB_PERR_C;
      641      308        /**/
      642      309    1   DCL DBM$GETMEM ENTRY(10) ALTRET;
      643      310    1   DCL DBM$READ_PAGE ENTRY(1) ALTRET;
      644      311    1   DCL DBM$PACK2 ENTRY(2);
      645      312    1   DCL DBM$PACK4 ENTRY(2);
      646      313    1   DCL DBM$PACK ENTRY(3);
      647      314        /**/
      648      315    1   DCL DB_DUMP_BUFFER UBIN SYMREF;
      649      316    1   DCL DB_USERASDT UBIN SYMREF;
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:148  
      650      317    1   DCL DB_USRT$ UBIN SYMREF;
      651      318    1   DCL DB_MUIS UBIN SYMREF;
      652      319    1   DCL DB_CUN UBIN SYMREF;
      653      320    1   DCL DB_SYSID UBIN SYMREF;
      654      321    1   DCL DBM_ERR BIT(36) SYMREF;
      655      322        /**/
      656      323    1   DCL STATE UBIN;
      657      324    1   DCL UHJITPP UBIN;
      658      325        %G$USER (FPTN=G$U,STCLASS=AUTO);
      659      336        /**/
      660      337        %EJECT;
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:149  
      661      338        /**/
      662      339    1      IF USERNO=DB_CUN THEN RETURN;

    339  0 000002   200003 470500                    LDP0    @USERNO,,AUTO
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   000000 116000 xsym               CMPQ    DB_CUN
         0 000005   000007 601000 0                  TNZ     s:340

    339  0 000006   000000 702200 xent               TSX2  ! X66_ARET

      663      340    1      IF USERNO=0 OR USERNO>DB_MUIS THEN GOTO NO_USER;

    340  0 000007   000000 116003                    CMPQ    0,DU
         0 000010   000116 600000 0                  TZE     NO_USER
         0 000011   000000 116000 xsym               CMPQ    DB_MUIS
         0 000012   000014 600000 0                  TZE     s:341
         0 000013   000116 603000 0                  TRC     NO_USER

      664      341    2     CALL DBM$GETMEM(DB_USRT$+(LENGTHC(G$U)/2)*USERNO,G$U,0,LENGTHC(G$U),,LENGTHC(G$U)
               341               ) WHENRETURN DO;

    341  0 000014   000030 402007                    MPY     24,DL
         0 000015   000000 036000 xsym               ADLQ    DB_USRT$
         0 000016   200022 756100                    STQ     G$U+12,,AUTO
         0 000017   000001 236000 1                  LDQ     1
         0 000020   000001 235000 xsym               LDA     B_VECTNIL+1
         0 000021   200030 757100                    STAQ    G$U+18,,AUTO
         0 000022   000002 237000 1                  LDAQ    2
         0 000023   200026 757100                    STAQ    G$U+16,,AUTO
         0 000024   200006 631500                    EPPR1   G$U,,AUTO
         0 000025   200025 451500                    STP1    G$U+15,,AUTO
         0 000026   200022 633500                    EPPR3   G$U+12,,AUTO
         0 000027   200024 453500                    STP3    G$U+14,,AUTO
         0 000030   200024 630500                    EPPR0   G$U+14,,AUTO
         0 000031   000024 631400 xsym               EPPR1   B_VECTNIL+20
         0 000032   000000 701000 xent               TSX1    DBM$GETMEM
         0 000033   000115 702000 0                  TSX2    s:356
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:150  

      665      342    2           CALL DBM$PACK2(G$U.US,STATE);

    342  0 000034   200004 630500                    EPPR0   STATE,,AUTO
         0 000035   200023 450500                    STP0    G$U+13,,AUTO
         0 000036   200007 631500                    EPPR1   G$U+1,,AUTO
         0 000037   200022 451500                    STP1    G$U+12,,AUTO
         0 000040   200022 630500                    EPPR0   G$U+12,,AUTO
         0 000041   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000042   000000 701000 xent               TSX1    DBM$PACK2
         0 000043   000000 011000                    NOP     0

      666      343    2           IF STATE=%GH_NULL THEN GOTO NO_USER;

    343  0 000044   200004 235100                    LDA     STATE,,AUTO
         0 000045   000037 115007                    CMPA    31,DL
         0 000046   000116 600000 0                  TZE     NO_USER

      667      344    3           IF DA_DUMPFILE THEN DO;

    344  0 000047   000000 234000 xsym               SZN     DA_DUMPFILE
         0 000050   000077 605000 0                  TPL     s:351

      668      345    3                CALL DBM$PACK4(G$U.UHJITPP,UHJITPP);

    345  0 000051   200005 630500                    EPPR0   UHJITPP,,AUTO
         0 000052   200023 450500                    STP0    G$U+13,,AUTO
         0 000053   200024 452500                    STP2    G$U+14,,AUTO
         0 000054   200024 236100                    LDQ     G$U+14,,AUTO
         0 000055   000004 036000 1                  ADLQ    4
         0 000056   200022 756100                    STQ     G$U+12,,AUTO
         0 000057   200022 630500                    EPPR0   G$U+12,,AUTO
         0 000060   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000061   000000 701000 xent               TSX1    DBM$PACK4
         0 000062   000000 011000                    NOP     0

      669      346    4                CALL DBM$READ_PAGE(UHJITPP) WHENALTRETURN DO;
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:151  

    346  0 000063   200005 630500                    EPPR0   UHJITPP,,AUTO
         0 000064   200022 450500                    STP0    G$U+12,,AUTO
         0 000065   200022 630500                    EPPR0   G$U+12,,AUTO
         0 000066   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000067   000000 701000 xent               TSX1    DBM$READ_PAGE
         0 000070   000072 702000 0                  TSX2    s:347
         0 000071   000073 710000 0                  TRA     s:349

      670      347    4                     ALTRETURN;

    347  0 000072   000000 702200 xent               TSX2  ! X66_AALT

      671      348    4                     END;
      672      349    3                CALL DBM$PACK(DB_DUMP_BUFFER,DB_USERASDT,31*4);

    349  0 000073   000006 630400 1                  EPPR0   6
         0 000074   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000075   000000 701000 xent               TSX1    DBM$PACK
         0 000076   000000 011000                    NOP     0

      673      350    3                END;

      674      351    2           DB_CUN=USERNO;

    351  0 000077   200003 470500                    LDP0    @USERNO,,AUTO
         0 000100   000000 235100                    LDA     0,,PR0
         0 000101   000000 755000 xsym               STA     DB_CUN

      675      352    2           CALL DBM$PACK2(G$U.SYSID,DB_SYSID);

    352  0 000102   000011 236000 1                  LDQ     9
         0 000103   200023 756100                    STQ     G$U+13,,AUTO
         0 000104   200024 452500                    STP2    G$U+14,,AUTO
         0 000105   200024 236100                    LDQ     G$U+14,,AUTO
         0 000106   000012 036000 1                  ADLQ    10
         0 000107   200022 756100                    STQ     G$U+12,,AUTO
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:152  
         0 000110   200022 630500                    EPPR0   G$U+12,,AUTO
         0 000111   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000112   000000 701000 xent               TSX1    DBM$PACK2
         0 000113   000000 011000                    NOP     0

      676      353    2           RETURN;

    353  0 000114   000000 702200 xent               TSX2  ! X66_ARET

      677      354    2           END;
      678      355    2      WHENALTRETURN DO;

      679      356    2           ALTRETURN;

    356  0 000115   000000 702200 xent               TSX2  ! X66_AALT

      680      357    2           END;
      681      358        /**/
      682      359    1   NO_USER:
      683      360    1      DA_MAPERR=DBM_ERR;

    360  0 000116   000000 236000 xsym  NO_USER      LDQ     DBM_ERR
         0 000117   000000 756000 xsym               STQ     DA_MAPERR

      684      361    1      DA_MAPERR.CODE=%E$DB_NO_USER;

    361  0 000120   000013 376000 1                  ANQ     11
         0 000121   000020 276007                    ORQ     16,DL
         0 000122   000000 756000 xsym               STQ     DA_MAPERR

      685      362    1      ALTRETURN;

    362  0 000123   000000 702200 xent               TSX2  ! X66_AALT
      686      363        /*E*    ERROR: DBM-E$DB_NO_USER
      687      364                MESSAGE: No such user.
      688      365        */
      689      366        /**/
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:153  
      690      367    1   END DBM$CHECKUN;
      691      368        %EOD;

PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:154  
--  Include file information  --

   DB_PERR_C.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DBM$CHECKUN.
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:155  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @USERNO                    6-0-0/w STRC(432)   r     1 G$U
     4-0-0/w UBIN        r     1 STATE                      5-0-0/w UBIN        r     1 UHJITPP
    *0-0-0/w UBIN        r     1 USERNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 DA_DUMPFILE                0-0-0/w STRC        r     1 DA_MAPERR
     0-0-0/b BIT         r     1 DBM_ERR                    0-0-0/w UBIN        r     1 DB_CUN
     0-0-0/w UBIN        r     1 DB_DUMP_BUFFER             0-0-0/w UBIN        r     1 DB_MUIS
     0-0-0/w UBIN        r     1 DB_SYSID                   0-0-0/w UBIN        r     1 DB_USERASDT
     0-0-0/w UBIN        r     1 DB_USRT$


   Procedure DBM$CHECKUN requires 84 words for executable code.
   Procedure DBM$CHECKUN requires 26 words of local(AUTO) storage.
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:156  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:157  
          MINI XREF LISTING

DA_DUMPFILE
        35**DCL       344>>IF
DA_MAPERR
        44**DCL       360<<ASSIGN
DA_MAPERR.CODE
        44**DCL       361<<ASSIGN
DA_MAPSEG.P
        45**DCL        46--REDEF
DA_SDASN.DESC.TYPE0
        30**DCL        30--REDEF
DA_TIGRSEG.P
        46**DCL        47--REDEF
DBM$GETMEM
       309**DCL-ENT   341--CALL
DBM$PACK
       313**DCL-ENT   349--CALL
DBM$PACK2
       311**DCL-ENT   342--CALL      352--CALL
DBM$PACK4
       312**DCL-ENT   345--CALL
DBM$READ_PAGE
       310**DCL-ENT   346--CALL
DBM_ERR
       321**DCL       360>>ASSIGN
DB_CUN
       319**DCL       339>>IF        351<<ASSIGN
DB_DUMP_BUFFER
       315**DCL       349<>CALL
DB_MUIS
       318**DCL       340>>IF
DB_SYSID
       320**DCL       352<>CALL
PL6.E3A0      #008=DBM$CHECKUN File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:158  
DB_USERASDT
       316**DCL       349<>CALL
DB_USRT$
       317**DCL       341>>CALL
G$U
       330**DCL       341--CALL      341<>CALL      341--CALL      341--CALL
G$U.MISC
       331**DCL       331--REDEF
G$U.SYSID
       334**DCL       352<>CALL
G$U.UHJITPP
       333**DCL       345<>CALL
G$U.US
       331**DCL       342<>CALL
NO_USER
       360**LABEL     340--GOTO      343--GOTO
STATE
       323**DCL       342<>CALL      343>>IF
UHJITPP
       324**DCL       345<>CALL      346<>CALL
USERNO
        18**DCL         7--PROC      339>>IF        340>>IF        340>>IF        341>>CALL      351>>ASSIGN

PL6.E3A0      #009=DBM$SYSID2UN File=DBM$MAP.:E05TSI                             TUE 07/29/97 13:14 Page:159  
      692        1        /*T***********************************************************/
      693        2        /*T*                                                         */
      694        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      695        4        /*T*                                                         */
      696        5        /*T***********************************************************/
      697        6        DBM$SYSID2UN: PROC(SYSID) ALTRET;
      698        7        /**/
      699        8        /*F*    NAME: DBM$SYSID2UN
      700        9                CALL: CALL DBM$SYSID2UN(SYSID) ALTRET;
      701       10                DESCRIPTION:
      702       11                   Finds the user with the specified SYSID.  If found the user
      703       12                number is returned in DB_CUN.  Otherwise the alternate return
      704       13                is taken.
      705       14        */
      706       15        /**/
      707       16    1   DCL SYSID UBIN;
      708       17        /**/
      709       18    1   DCL I UBIN;
      710       19        /**/
      711       20    1   DCL DBM$CHECKUN ENTRY(1) ALTRET;
      712       21        /**/
      713       22    1   DCL DB_MUIS UBIN SYMREF;
      714       23    1   DCL DB_SYSID UBIN SYMREF;
      715       24        /**/
      716       25        %EJECT;
PL6.E3A0      #009=DBM$SYSID2UN File=DBM$MAP.:E05TSI                             TUE 07/29/97 13:14 Page:160  
      717       26        /**/
      718       27    2      DO I=1 TO DB_MUIS;
      719       28    3           CALL DBM$CHECKUN(I) WHENRETURN DO;
      720       29    3                IF SYSID=DB_SYSID THEN RETURN;
      721       30    3                END;
      722       31    2           END;
      723       32    1      ALTRETURN;
      724       33        /**/
      725       34    1   END DBM$SYSID2UN;
      726       35        %EOD;

PL6.E3A0      #009=DBM$SYSID2UN File=DBM$MAP.:E05TSI                             TUE 07/29/97 13:14 Page:161  
      No diagnostics issued in procedure DBM$SYSID2UN.

   Procedure DBM$SYSID2UN requires 23 words for executable code.
   Procedure DBM$SYSID2UN requires 8 words of local(AUTO) storage.

PL6.E3A0      #009=DBM$SYSID2UN File=DBM$MAP.:E05TSI                             TUE 07/29/97 13:14 Page:162  

 Object Unit name= DBM$SYSID2UN                               File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:14:34.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    23     27  DBM$SYSID2UN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  DBM$SYSID2UN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 DBM$CHECKUN
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DB_MUIS                               DB_SYSID                              B_VECTNIL
PL6.E3A0      #009=DBM$SYSID2UN File=DBM$MAP.:E05TSI                             TUE 07/29/97 13:14 Page:163  


      692        1        /*T***********************************************************/
      693        2        /*T*                                                         */
      694        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      695        4        /*T*                                                         */
      696        5        /*T***********************************************************/
      697        6        DBM$SYSID2UN: PROC(SYSID) ALTRET;

      6  0 000000   000000 700200 xent  DBM$SYSID2UN TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

      698        7        /**/
      699        8        /*F*    NAME: DBM$SYSID2UN
      700        9                CALL: CALL DBM$SYSID2UN(SYSID) ALTRET;
      701       10                DESCRIPTION:
      702       11                   Finds the user with the specified SYSID.  If found the user
      703       12                number is returned in DB_CUN.  Otherwise the alternate return
      704       13                is taken.
      705       14        */
      706       15        /**/
      707       16    1   DCL SYSID UBIN;
      708       17        /**/
      709       18    1   DCL I UBIN;
      710       19        /**/
      711       20    1   DCL DBM$CHECKUN ENTRY(1) ALTRET;
      712       21        /**/
      713       22    1   DCL DB_MUIS UBIN SYMREF;
      714       23    1   DCL DB_SYSID UBIN SYMREF;
      715       24        /**/
      716       25        %EJECT;
PL6.E3A0      #009=DBM$SYSID2UN File=DBM$MAP.:E05TSI                             TUE 07/29/97 13:14 Page:164  
      717       26        /**/
      718       27    2      DO I=1 TO DB_MUIS;

     27  0 000002   000001 235007                    LDA     1,DL
         0 000003   200004 755100                    STA     I,,AUTO
         0 000004   000023 710000 0                  TRA     s:31+3

      719       28    3           CALL DBM$CHECKUN(I) WHENRETURN DO;

     28  0 000005   200004 630500                    EPPR0   I,,AUTO
         0 000006   200006 450500                    STP0    I+2,,AUTO
         0 000007   200006 630500                    EPPR0   I+2,,AUTO
         0 000010   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000011   000000 701000 xent               TSX1    DBM$CHECKUN
         0 000012   000020 702000 0                  TSX2    s:31

      720       29    3                IF SYSID=DB_SYSID THEN RETURN;

     29  0 000013   200003 470500                    LDP0    @SYSID,,AUTO
         0 000014   000000 236100                    LDQ     0,,PR0
         0 000015   000000 116000 xsym               CMPQ    DB_SYSID
         0 000016   000020 601000 0                  TNZ     s:31

     29  0 000017   000000 702200 xent               TSX2  ! X66_ARET

      721       30    3                END;
      722       31    2           END;

     31  0 000020   200004 235100                    LDA     I,,AUTO
         0 000021   000001 035007                    ADLA    1,DL
         0 000022   200004 755100                    STA     I,,AUTO
         0 000023   000000 236000 xsym               LDQ     DB_MUIS
         0 000024   200004 116100                    CMPQ    I,,AUTO
         0 000025   000005 603000 0                  TRC     s:28

      723       32    1      ALTRETURN;

PL6.E3A0      #009=DBM$SYSID2UN File=DBM$MAP.:E05TSI                             TUE 07/29/97 13:14 Page:165  
     32  0 000026   000000 702200 xent               TSX2  ! X66_AALT
      724       33        /**/
      725       34    1   END DBM$SYSID2UN;
      726       35        %EOD;

PL6.E3A0      #009=DBM$SYSID2UN File=DBM$MAP.:E05TSI                             TUE 07/29/97 13:14 Page:166  
      No diagnostics issued in procedure DBM$SYSID2UN.
PL6.E3A0      #009=DBM$SYSID2UN File=DBM$MAP.:E05TSI                             TUE 07/29/97 13:14 Page:167  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SYSID                     4-0-0/w UBIN        r     1 I
    *0-0-0/w UBIN        r     1 SYSID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 DB_MUIS                    0-0-0/w UBIN        r     1 DB_SYSID


   Procedure DBM$SYSID2UN requires 23 words for executable code.
   Procedure DBM$SYSID2UN requires 8 words of local(AUTO) storage.
PL6.E3A0      #009=DBM$SYSID2UN File=DBM$MAP.:E05TSI                             TUE 07/29/97 13:14 Page:168  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=DBM$SYSID2UN File=DBM$MAP.:E05TSI                             TUE 07/29/97 13:14 Page:169  
          MINI XREF LISTING

DBM$CHECKUN
        20**DCL-ENT    28--CALL
DB_MUIS
        22**DCL        27>>DOINDEX
DB_SYSID
        23**DCL        29>>IF
I
        18**DCL        27<<DOINDEX    28<>CALL
SYSID
        16**DCL         6--PROC       29>>IF

PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:170  
      727        1        /*T***********************************************************/
      728        2        /*T*                                                         */
      729        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      730        4        /*T*                                                         */
      731        5        /*T***********************************************************/
      732        6        DBM$GETMLCP: PROC(CHANNEL,BUF,MEMADR,SIZE,ARS) ALTRET;
      733        7        /**/
      734        8    1   DCL CHANNEL UBIN;
      735        9    1   DCL BUF CHAR(ISIZE);
      736       10    1   DCL MEMADR UBIN;
      737       11    1   DCL SIZE UBIN;
      738       12    1   DCL ARS UBIN;
      739       13        /**/
      740       14        %INCLUDE CP_6;
      741     5573        %INCLUDE IR_DATA_M;
      742     5737        %INCLUDE DA_MAP_R;
      743     5767        %INCLUDE DB_PERR_C;
      744     5785        /**/
      745     5786    1   DCL BUFFER CHAR(4096);
      746     5787    1   DCL ISIZE UBIN;
      747     5788    1   DCL CHAN UBIN;
      748     5789        /**/
      749     5790        %RV_DFSUBS;
      750     5817        %RV_DFKEY (NAME=DB_DFKEY,STCLASS=SYMREF);
      751     5835        /**/
      752     5836    1   DCL M$DUMPFILE DCB;
      753     5837        %FPT_READ (FPTN=RDDUMP,DCB=M$DUMPFILE,KEY=DB_DFKEY,KEYS=YES);
      754     5876        /**/
      755     5877    1   DCL B$TCB$ PTR SYMREF;
      756     5878        %B$TCB;
      757     5881        %B$ALT;
      758     5889        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      759     5890        /**/
      760     5891    2      IF NOT DA_DUMPFILE THEN DO;
      761     5892    2           DA_MAPERR='040215000000'O;
      762     5893    2           DA_MAPERR.CODE=%E$DB_NO_MLCP;
      763     5894    2           ALTRETURN;
PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:171  
      764     5895    2           END;
      765     5896    1      IF ADDR(ARS)~=ADDR(NIL) THEN ARS=0;
      766     5897    1      CHAN=(CHANNEL/1024)*1024;
      767     5898    1      DB_DFKEY.K.TYP=%R_MLCP#;
      768     5899    1      DB_DFKEY.K.VP#=CHAN;
      769     5900    1      RDDUMP.BUF_=VECTOR(BUFFER);
      770     5901    2      CALL M$READ(RDDUMP) WHENALTRETURN DO;
      771     5902    2           DA_MAPERR='040215000000'O;
      772     5903    2           DA_MAPERR.CODE=%E$DB_NO_MLCP;
      773     5904
      774     5905        /*E*       ERROR:  DBM-E$DB_NO_MLCP
      775     5906                   MESSAGE:  MLC memory is not available for the specified channel.
      776     5907        */
      777     5908    2           ALTRETURN;
      778     5909    2           END;
      779     5910    1      IF MEMADR+SIZE>4096 THEN
      780     5911    1           ISIZE=4096-MEMADR;
      781     5912    1      ELSE
      782     5913    1           ISIZE=SIZE;
      783     5914    1      BUF=SUBSTR(BUFFER,MEMADR,ISIZE);
      784     5915    1      IF ADDR(ARS)~=ADDR(NIL) THEN ARS=ISIZE;
      785     5916    1      RETURN;
      786     5917        /**/
      787     5918    1   END DBM$GETMLCP;
      788     5919        %EOD;

PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:172  
--  Include file information  --

   DB_PERR_C.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DBM$GETMLCP.

   Procedure DBM$GETMLCP requires 66 words for executable code.
   Procedure DBM$GETMLCP requires 1036 words of local(AUTO) storage.

PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:173  

 Object Unit name= DBM$GETMLCP                                File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:14:36.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$DUMPFILE
    2   Data  even  none    14     16  DBM$GETMLCP
    3  RoData even  UTS      1      1  DBM$GETMLCP
    4   Proc  even  none    66    102  DBM$GETMLCP
    5  RoData even  none     2      2  DBM$GETMLCP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        5  DBM$GETMLCP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:174  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  DA_DUMPFILE                           DA_MAPERR
     DB_DFKEY                              M$DUMPFILE                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:175  


      727        1        /*T***********************************************************/
      728        2        /*T*                                                         */
      729        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      730        4        /*T*                                                         */
      731        5        /*T***********************************************************/
      732        6        DBM$GETMLCP: PROC(CHANNEL,BUF,MEMADR,SIZE,ARS) ALTRET;

      6  4 000000   000000 700200 xent  DBM$GETMLCP  TSX0  ! X66_AUTO_5
         4 000001   002014 000005                    ZERO    1036,5

      733        7        /**/
      734        8    1   DCL CHANNEL UBIN;
      735        9    1   DCL BUF CHAR(ISIZE);
      736       10    1   DCL MEMADR UBIN;
      737       11    1   DCL SIZE UBIN;
      738       12    1   DCL ARS UBIN;
      739       13        /**/
      740       14        %INCLUDE CP_6;
      741     5573        %INCLUDE IR_DATA_M;
      742     5737        %INCLUDE DA_MAP_R;
      743     5767        %INCLUDE DB_PERR_C;
      744     5785        /**/
      745     5786    1   DCL BUFFER CHAR(4096);
      746     5787    1   DCL ISIZE UBIN;
      747     5788    1   DCL CHAN UBIN;
      748     5789        /**/
      749     5790        %RV_DFSUBS;
      750     5817        %RV_DFKEY (NAME=DB_DFKEY,STCLASS=SYMREF);
      751     5835        /**/
      752     5836    1   DCL M$DUMPFILE DCB;
      753     5837        %FPT_READ (FPTN=RDDUMP,DCB=M$DUMPFILE,KEY=DB_DFKEY,KEYS=YES);
      754     5876        /**/
      755     5877    1   DCL B$TCB$ PTR SYMREF;
      756     5878        %B$TCB;
      757     5881        %B$ALT;
      758     5889        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:176  
      759     5890        /**/
      760     5891    2      IF NOT DA_DUMPFILE THEN DO;

   5891  4 000002   000000 234000 xsym               SZN     DA_DUMPFILE
         4 000003   000012 604000 4                  TMI     s:5896

      761     5892    2           DA_MAPERR='040215000000'O;

   5892  4 000004   000000 236000 3                  LDQ     0
         4 000005   000000 756000 xsym               STQ     DA_MAPERR

      762     5893    2           DA_MAPERR.CODE=%E$DB_NO_MLCP;

   5893  4 000006   000000 376000 5                  ANQ     0
         4 000007   000050 276007                    ORQ     40,DL
         4 000010   000000 756000 xsym               STQ     DA_MAPERR

      763     5894    2           ALTRETURN;

   5894  4 000011   000000 702200 xent               TSX2  ! X66_AALT

      764     5895    2           END;
      765     5896    1      IF ADDR(ARS)~=ADDR(NIL) THEN ARS=0;

   5896  4 000012   200007 236100                    LDQ     @ARS,,AUTO
         4 000013   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000014   000017 600000 4                  TZE     s:5897

   5896  4 000015   200007 470500                    LDP0    @ARS,,AUTO
         4 000016   000000 450100                    STZ     0,,PR0

      766     5897    1      CHAN=(CHANNEL/1024)*1024;

   5897  4 000017   200003 470500                    LDP0    @CHANNEL,,AUTO
         4 000020   000000 236100                    LDQ     0,,PR0
         4 000021   000012 772000                    QRL     10
         4 000022   000012 736000                    QLS     10
PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:177  
         4 000023   202011 756100                    STQ     CHAN,,AUTO

      767     5898    1      DB_DFKEY.K.TYP=%R_MLCP#;

   5898  4 000024   006000 236007                    LDQ     3072,DL
         4 000025   000000 552010 xsym               STBQ    DB_DFKEY,'10'O

      768     5899    1      DB_DFKEY.K.VP#=CHAN;

   5899  4 000026   202011 236100                    LDQ     CHAN,,AUTO
         4 000027   000001 552034 xsym               STBQ    DB_DFKEY+1,'34'O

      769     5900    1      RDDUMP.BUF_=VECTOR(BUFFER);

   5900  4 000030   000001 235000 5                  LDA     1
         4 000031   202012 452500                    STP2    CHAN+1,,AUTO
         4 000032   202012 236100                    LDQ     CHAN+1,,AUTO
         4 000033   000010 036003                    ADLQ    8,DU
         4 000034   000004 757000 2                  STAQ    RDDUMP+4

      770     5901    2      CALL M$READ(RDDUMP) WHENALTRETURN DO;

   5901  4 000035   000000 630400 2                  EPPR0   RDDUMP
         4 000036   440000 713400                    CLIMB   alt,read
         4 000037   401400 401760                    pmme    nvectors=4
         4 000040   000042 702000 4                  TSX2    s:5902
         4 000041   000050 710000 4                  TRA     s:5910

      771     5902    2           DA_MAPERR='040215000000'O;

   5902  4 000042   000000 236000 3                  LDQ     0
         4 000043   000000 756000 xsym               STQ     DA_MAPERR

      772     5903    2           DA_MAPERR.CODE=%E$DB_NO_MLCP;

   5903  4 000044   000000 376000 5                  ANQ     0
         4 000045   000050 276007                    ORQ     40,DL
PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:178  
         4 000046   000000 756000 xsym               STQ     DA_MAPERR

      773     5904
      774     5905        /*E*       ERROR:  DBM-E$DB_NO_MLCP
      775     5906                   MESSAGE:  MLC memory is not available for the specified channel.
      776     5907        */
      777     5908    2           ALTRETURN;

   5908  4 000047   000000 702200 xent               TSX2  ! X66_AALT

      778     5909    2           END;
      779     5910    1      IF MEMADR+SIZE>4096 THEN

   5910  4 000050   200005 470500                    LDP0    @MEMADR,,AUTO
         4 000051   200006 471500                    LDP1    @SIZE,,AUTO
         4 000052   000000 236100                    LDQ     0,,PR0
         4 000053   100000 036100                    ADLQ    0,,PR1
         4 000054   010001 116007                    CMPQ    4097,DL
         4 000055   000063 602000 4                  TNC     s:5913

      780     5911    1           ISIZE=4096-MEMADR;

   5911  4 000056   000000 235100                    LDA     0,,PR0
         4 000057   000027 675000 xsym               ERA     B_VECTNIL+23
         4 000060   010001 035007                    ADLA    4097,DL
         4 000061   202010 755100                    STA     ISIZE,,AUTO
         4 000062   000065 710000 4                  TRA     s:5914

      781     5912    1      ELSE
      782     5913    1           ISIZE=SIZE;

   5913  4 000063   100000 235100                    LDA     0,,PR1
         4 000064   202010 755100                    STA     ISIZE,,AUTO

      783     5914    1      BUF=SUBSTR(BUFFER,MEMADR,ISIZE);

   5914  4 000065   000000 235100                    LDA     0,,PR0
PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:179  
         4 000066   202010 720100                    LXL0    ISIZE,,AUTO
         4 000067   200004 473500                    LDP3    @BUF,,AUTO
         4 000070   040140 100545                    MLR     fill='040'O
         4 000071   200010 000010                    ADSC9   BUFFER,A,AUTO            cn=0,n=*X0
         4 000072   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

      784     5915    1      IF ADDR(ARS)~=ADDR(NIL) THEN ARS=ISIZE;

   5915  4 000073   200007 236100                    LDQ     @ARS,,AUTO
         4 000074   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000075   000101 600000 4                  TZE     s:5916

   5915  4 000076   200007 474500                    LDP4    @ARS,,AUTO
         4 000077   202010 235100                    LDA     ISIZE,,AUTO
         4 000100   400000 755100                    STA     0,,PR4

      785     5916    1      RETURN;

   5916  4 000101   000000 702200 xent               TSX2  ! X66_ARET
      786     5917        /**/
      787     5918    1   END DBM$GETMLCP;
      788     5919        %EOD;

PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:180  
--  Include file information  --

   DB_PERR_C.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DBM$GETMLCP.
PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:181  

 **** Variables and constants ****

  ****  Section 002  Data  DBM$GETMLCP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 RDDUMP

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 @ARS                       4-0-0/w PTR         r     1 @BUF
     3-0-0/w PTR         r     1 @CHANNEL                   5-0-0/w PTR         r     1 @MEMADR
     6-0-0/w PTR         r     1 @SIZE                     *0-0-0/w UBIN        r     1 ARS
    *0-0-0/c ACHR        r     1 BUF                       10-0-0/c CHAR(4096)  r     1 BUFFER
  2011-0-0/w UBIN        r     1 CHAN                      *0-0-0/w UBIN        r     1 CHANNEL
  2010-0-0/w UBIN        r     1 ISIZE                     *0-0-0/w UBIN        r     1 MEMADR
    *0-0-0/w UBIN        r     1 SIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 DA_DUMPFILE                0-0-0/w STRC        r     1 DA_MAPERR
     0-0-0/d STRC(72)    r     1 DB_DFKEY

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$DUMPFILE

PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:182  

   Procedure DBM$GETMLCP requires 66 words for executable code.
   Procedure DBM$GETMLCP requires 1036 words of local(AUTO) storage.
PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:183  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:184  
          MINI XREF LISTING

ARS
        12**DCL         6--PROC     5896--IF       5896<<ASSIGN   5915--IF       5915<<ASSIGN
B$ALT.CODE
      5883**DCL      5883--REDEF    5884--REDEF    5884--REDEF
B$ALT.ERR.ERR#
      5885**DCL      5885--REDEF
B$ALT.EVID
      5884**DCL      5884--REDEF    5884--REDEF
BUF
         9**DCL         6--PROC     5914<<ASSIGN
BUFFER
      5786**DCL      5900--ASSIGN   5914>>ASSIGN
CHAN
      5788**DCL      5897<<ASSIGN   5899>>ASSIGN
CHANNEL
         8**DCL         6--PROC     5897>>ASSIGN
DA_DUMPFILE
      5752**DCL      5891>>IF
DA_MAPERR
      5761**DCL      5892<<ASSIGN   5902<<ASSIGN
DA_MAPERR.CODE
      5761**DCL      5893<<ASSIGN   5903<<ASSIGN
DA_MAPSEG.P
      5762**DCL      5763--REDEF
DA_SDASN.DESC.TYPE0
      5747**DCL      5747--REDEF
DA_TIGRSEG.P
      5763**DCL      5764--REDEF
DB_DFKEY
      5828**DCL      5854--DCLINIT  5855--DCLINIT
DB_DFKEY.K.TYP
      5832**DCL      5898<<ASSIGN
PL6.E3A0      #010=DBM$GETMLCP File=DBM$MAP.:E05TSI                              TUE 07/29/97 13:14 Page:185  
DB_DFKEY.K.VP#
      5833**DCL      5899<<ASSIGN
ISIZE
      5787**DCL         9--IMP-SIZ  5911<<ASSIGN   5913<<ASSIGN   5914>>ASSIGN   5914>>ASSIGN   5915>>ASSIGN
M$READ
      5502**DCL-ENT  5901--CALL
MEMADR
        10**DCL         6--PROC     5910>>IF       5911>>ASSIGN   5914>>ASSIGN
RDDUMP
      5854**DCL      5901<>CALL
RDDUMP.BUF_
      5856**DCL      5900<<ASSIGN
RDDUMP.STATION_
      5857**DCL      5858--REDEF
RDDUMP.V
      5858**DCL      5854--DCLINIT
RDDUMP.V.DVBYTE.REREAD#
      5869**DCL      5869--REDEF
RDDUMP.V.INDX#
      5867**DCL      5867--REDEF
SIZE
        11**DCL         6--PROC     5910>>IF       5913>>ASSIGN

PL6.E3A0      #011=DBM$GETBOBCAT File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:186  
      789        1        /*T***********************************************************/
      790        2        /*T*                                                         */
      791        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      792        4        /*T*                                                         */
      793        5        /*T***********************************************************/
      794        6        /*F*    NAME:  DBM$GETBOBCAT
      795        7                CALL:  CALL DBM$GETBOBCAT(G$BOBCAT) ALTRET;
      796        8                DESCRIPTION:
      797        9                   Returns the contents of the base of Bobcat data (described
      798       10                by the G$BOBCAT structure) in the area specifed by the G$BOBCAT
      799       11                parameter.  ALTRETURNS if DBM$GETMEM ALTRETURNS.
      800       12        */
      801       13
      802       14        DBM$GETBOBCAT: PROC(G$BOBCAT) ALTRET;
      803       15
      804       16        %INCLUDE G$BOBCAT_M;
      805       36        %INCLUDE GM_VIRTUAL_E;
      806      246
      807      247        %G$BOBCAT (FPTN=G$BOBCAT,STCLASS=PARAM);
      808      260
      809      261    1   DCL DBM$GETMEM ENTRY(10) ALTRET;
      810      262
      811      263    1   DCL G$BOBCAT$ UBIN CONSTANT INIT(%GM_BOBCAT_BASE);
      812      264
      813      265    2      CALL DBM$GETMEM(G$BOBCAT$,G$BOBCAT,,SIZEC(G$BOBCAT),,SIZEC(G$BOBCAT))
               265               WHENALTRETURN DO;
      814      266    2           ALTRETURN;
      815      267    2           END;
      816      268    1      RETURN;
      817      269
      818      270    1   END DBM$GETBOBCAT;
      819      271        %EOD;

PL6.E3A0      #011=DBM$GETBOBCAT File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:187  
--  Include file information  --

   GM_VIRTUAL_E.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
      No diagnostics issued in procedure DBM$GETBOBCAT.

   Procedure DBM$GETBOBCAT requires 18 words for executable code.
   Procedure DBM$GETBOBCAT requires 10 words of local(AUTO) storage.

PL6.E3A0      #011=DBM$GETBOBCAT File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:188  

 Object Unit name= DBM$GETBOBCAT                              File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:14:56.32 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  DBM$GETBOBCAT
    1   Proc  even  none    18     22  DBM$GETBOBCAT
    2  RoData even  none     3      3  DBM$GETBOBCAT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  DBM$GETBOBCAT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std      10 DBM$GETMEM
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #011=DBM$GETBOBCAT File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:189  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #011=DBM$GETBOBCAT File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:190  


      789        1        /*T***********************************************************/
      790        2        /*T*                                                         */
      791        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      792        4        /*T*                                                         */
      793        5        /*T***********************************************************/
      794        6        /*F*    NAME:  DBM$GETBOBCAT
      795        7                CALL:  CALL DBM$GETBOBCAT(G$BOBCAT) ALTRET;
      796        8                DESCRIPTION:
      797        9                   Returns the contents of the base of Bobcat data (described
      798       10                by the G$BOBCAT structure) in the area specifed by the G$BOBCAT
      799       11                parameter.  ALTRETURNS if DBM$GETMEM ALTRETURNS.
      800       12        */
      801       13
      802       14        DBM$GETBOBCAT: PROC(G$BOBCAT) ALTRET;

     14  1 000000   000000 700200 xent  DBM$GETBOBC* TSX0  ! X66_AUTO_1
         1 000001   000012 000001                    ZERO    10,1

      803       15
      804       16        %INCLUDE G$BOBCAT_M;
      805       36        %INCLUDE GM_VIRTUAL_E;
      806      246
      807      247        %G$BOBCAT (FPTN=G$BOBCAT,STCLASS=PARAM);
      808      260
      809      261    1   DCL DBM$GETMEM ENTRY(10) ALTRET;
      810      262
      811      263    1   DCL G$BOBCAT$ UBIN CONSTANT INIT(%GM_BOBCAT_BASE);
      812      264
      813      265    2      CALL DBM$GETMEM(G$BOBCAT$,G$BOBCAT,,SIZEC(G$BOBCAT),,SIZEC(G$BOBCAT))
               265               WHENALTRETURN DO;

    265  1 000002   000001 236000 2                  LDQ     1
         1 000003   000001 235000 xsym               LDA     B_VECTNIL+1
         1 000004   200010 757100                    STAQ    @G$BOBCAT+5,,AUTO
         1 000005   000001 236000 2                  LDQ     1
         1 000006   000001 235000 xsym               LDA     B_VECTNIL+1
PL6.E3A0      #011=DBM$GETBOBCAT File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:191  
         1 000007   200006 757100                    STAQ    @G$BOBCAT+3,,AUTO
         1 000010   200003 236100                    LDQ     @G$BOBCAT,,AUTO
         1 000011   000002 235000 2                  LDA     2
         1 000012   200004 757100                    STAQ    @G$BOBCAT+1,,AUTO
         1 000013   200004 630500                    EPPR0   @G$BOBCAT+1,,AUTO
         1 000014   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000015   000000 701000 xent               TSX1    DBM$GETMEM
         1 000016   000020 702000 1                  TSX2    s:266
         1 000017   000021 710000 1                  TRA     s:268

      814      266    2           ALTRETURN;

    266  1 000020   000000 702200 xent               TSX2  ! X66_AALT

      815      267    2           END;
      816      268    1      RETURN;

    268  1 000021   000000 702200 xent               TSX2  ! X66_ARET
      817      269
      818      270    1   END DBM$GETBOBCAT;
      819      271        %EOD;

PL6.E3A0      #011=DBM$GETBOBCAT File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:192  
--  Include file information  --

   GM_VIRTUAL_E.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
      No diagnostics issued in procedure DBM$GETBOBCAT.
PL6.E3A0      #011=DBM$GETBOBCAT File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:193  

 **** Variables and constants ****

  ****  Section 000 RoData DBM$GETBOBCAT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 G$BOBCAT$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @G$BOBCAT                 *0-0-0/w STRC(1908)  r     1 G$BOBCAT


   Procedure DBM$GETBOBCAT requires 18 words for executable code.
   Procedure DBM$GETBOBCAT requires 10 words of local(AUTO) storage.
PL6.E3A0      #011=DBM$GETBOBCAT File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:194  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #011=DBM$GETBOBCAT File=DBM$MAP.:E05TSI                            TUE 07/29/97 13:14 Page:195  
          MINI XREF LISTING

DBM$GETMEM
       261**DCL-ENT   265--CALL
G$BOBCAT
       248**DCL        14--PROC      265<>CALL      265--CALL      265--CALL
G$BOBCAT$
       263**DCL       265<>CALL

PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:196  
      820        1        /*T***********************************************************/
      821        2        /*T*                                                         */
      822        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      823        4        /*T*                                                         */
      824        5        /*T***********************************************************/
      825        6        DBM$SETSYMBOLS: PROC(USERID);
      826        7
      827        8    1   DCL USERID SBIN;
      828        9
      829       10        %INCLUDE DB_MACRO_M;
      830       41        %DB$MAP_EQUS;
      831       51        %INCLUDE G_LCP6_E;
      832      309        %INCLUDE G_JIT_M;
      833      574        %INCLUDE GM_VIRTUAL_E;
      834      784        %INCLUDE G_SFILE_M;
      835      844        %INCLUDE G$BOBCAT_M;
      836      864
      837      865    1   DCL DAS$SYMINIT ENTRY(2) ALTRET;
      838      866    1   DCL DAA$ERRMSG ENTRY(1);
      839      867    1   DCL DBM$GETMEM ENTRY(10) ALTRET;
      840      868    1   DCL DBM$GETBOBCAT ENTRY(1) ALTRET;
      841      869    1   DCL DBM$PACK2 ENTRY(2);
      842      870    1   DCL DBM$PACK4 ENTRY(2);
      843      871
      844      872    1   DCL DA_DFLT_SYMBOLS BIT(1) SYMREF;
      845      873
      846      874    1   DCL 1 FEPRU CONSTANT,
      847      875    1         2 L UBIN BYTE CALIGNED INIT(SIZEC(FEPRU.C)),
      848      876    1         2 C CHAR(0) INIT('M:FEP.:SYS');
      849      877    1   DCL 1 USRRU,
      850      878    1         2 L UBIN BYTE CALIGNED,
      851      879    1         2 C CHAR(79);
      852      880    1   DCL I UBIN;
      853      881
      854      882    1   DCL DB_ROS$ UBIN SYMREF;
      855      883    1   DCL 1 ROSBASE AUTO,
      856      884    1         2 DCBPTR$ UBIN,
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:197  
      857      885    1         2 JIT$ UBIN,
      858      886    1         2 ALT$ UBIN,
      859      887    1         2 STK$ UBIN;
      860      888
      861      889    1   DCL DCBPTR UBIN;
      862      890    1   DCL SFILE$ UBIN;
      863      891    1   DCL SFILE_SIZE UBIN;
      864      892    1   DCL 1 FEPDCB AUTO,
      865      893    1         2 ARS UBIN HALF CALIGNED,
      866      894    1         2 TYC BIT(16) CALIGNED,
      867      895    1         2 DVBYTE BIT(9),
      868      896    1         2 EOMCHAR CHAR(1),
      869      897    1         2 FFLG BIT(9),
      870      898    1         2 DDEV BIT(9),
      871      899    1         2 WIDTH UBIN HALF CALIGNED,
      872      900    1         2 NAME,
      873      901    1           3 L UBIN BYTE CALIGNED,
      874      902    1           3 C CHAR(31),
      875      903    1         2 ACCT CHAR(8),
      876      904    1         2 RES CHAR(4),
      877      905    1         2 WSN CHAR(8);
      878      906
      879      907    1   DCL 1 DB_MONASDT(0:30) SYMREF,
      880      908    1         2 V BIT(1),
      881      909    1         2 * BIT(3),
      882      910    1         2 BASE UBIN(12) UNAL,
      883      911    1         2 * BIT(6),
      884      912    1         2 * BIT(1),
      885      913    1         2 SIZE UBIN(9) UNAL;
      886      914
      887      915        %G$JIT (FPTN=G$JIT,STCLASS=AUTO);
      888     1109        %G$BOBCAT (FPTN=G$BOBCAT, STCLASS=AUTO);
      889     1122        %G$SFILE (FPTN=G$SFILE, STCLASS=AUTO, ARRAYED=NO);
      890     1159
      891     1160    1   DCL ASDTADR UBIN;
      892     1161
      893     1162
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:198  
      894     1163        %EJECT;
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:199  
      895     1164    1      IF NOT DA_DFLT_SYMBOLS THEN RETURN;
      896     1165
      897     1166    1      IF USERID = 0
      898     1167    2      THEN DO;
      899     1168    2           CALL DBM$GETBOBCAT(G$BOBCAT) ALTRET(USE_SYS_FEP);
      900     1169    2           USRRU.C = G$BOBCAT.BOOTFID;
      901     1170    2           CALL INDEX(I,' ',USRRU.C);
      902     1171    2           USRRU.L = I;
      903     1172    2           CALL DAS$SYMINIT(USRRU)
      904     1173    3           WHENALTRETURN DO;
      905     1174    3                CALL DAA$ERRMSG;
      906     1175    3   USE_SYS_FEP: ;
      907     1176    3                CALL DAS$SYMINIT(FEPRU);
      908     1177    3                END/*whenaltreturn*/;
      909     1178    2           END/*do if userid=0*/;
      910     1179
      911     1180    2      ELSE DO;
      912     1181    2   USE_M$LM: ;
      913     1182    2           CALL DBM$GETMEM(DB_ROS$,ROSBASE,USERID,SIZEC(ROSBASE),,SIZEC(ROSBASE))
      914     1183    3           WHENRETURN DO;
      915     1184    3                CALL DBM$PACK4(ROSBASE.DCBPTR$,DCBPTR);
      916     1185    3                CALL DBM$GETMEM(DCBPTR+%(G_M$LM#*2),DCBPTR,USERID,SIZEC(DCBPTR));
      917     1186    3                CALL DBM$PACK4(DCBPTR,DCBPTR);
      918     1187    3                CALL DBM$GETMEM(DCBPTR,FEPDCB,USERID,SIZEC(FEPDCB));
      919     1188    3                CALL CONCAT(USRRU.C,SUBSTR(FEPDCB.NAME.C,0,FEPDCB.NAME.L),'.',FEPDCB.
              1188                         ACCT);
      920     1189    3   FINISH_USER: ;
      921     1190    3                CALL INDEX(I,' ',USRRU.C);
      922     1191    3                USRRU.L = I;
      923     1192    3                CALL DAS$SYMINIT(USRRU);
      924     1193    3                END;
      925     1194    2           END;
      926     1195    1      RETURN;
      927     1196
      928     1197        %EJECT;
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:200  
      929     1198    1   DBM$SETLIB_SYM: ENTRY(USERID);
      930     1199
      931     1200    1      IF NOT DA_DFLT_SYMBOLS THEN RETURN;
      932     1201
      933     1202    1      CALL DBM$GETMEM(DB_ROS$,ROSBASE,USERID,SIZEC(ROSBASE),,SIZEC(ROSBASE))
      934     1203    2      WHENRETURN DO;
      935     1204    2           CALL DBM$PACK4(ROSBASE.JIT$,DCBPTR);
      936     1205    2           CALL DBM$GETMEM(DCBPTR,G$JIT,USERID,SIZEC(G$JIT),,SIZEC(G$JIT));
      937     1206    2           IF G$JIT.SLIB# = 0
      938     1207    2           THEN GOTO USE_M$LM;
      939     1208
      940     1209    2           SFILE_SIZE = (SIZEC(G$SFILE)+1) /2;
      941     1210    2           CALL DBM$GETBOBCAT(G$BOBCAT) ALTRET(USE_M$LM);
      942     1211
      943     1212    2           CALL DBM$PACK4(G$BOBCAT.SFILE$,SFILE$);
      944     1213
      945     1214    2           SFILE$ = SFILE$ + (SFILE_SIZE * G$JIT.SLIB#);
      946     1215    2           CALL DBM$GETMEM(SFILE$,G$SFILE,0,SIZEC(G$SFILE)) ALTRET(USE_M$LM);
      947     1216
      948     1217    2           CALL CONCAT(USRRU.C,SUBSTR(G$SFILE.NAME.TEXT,0,G$SFILE.NAME.L),'.',G$SFILE.
              1217                    ACCT);
      949     1218    2           GOTO FINISH_USER;
      950     1219    2           END/*whenreturn do*/;
      951     1220
      952     1221        %EJECT;
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:201  
      953     1222    1   DBM$GETCUN: ENTRY(USERID);
      954     1223
      955     1224    1      USERID = 0;
      956     1225    2      IF DB_MONASDT.V(5) THEN DO;
      957     1226    2           ASDTADR = DB_MONASDT.BASE(5) * 256;
      958     1227    2           CALL DBM$GETMEM(DB_ROS$,ROSBASE,ASDTADR,SIZEC(ROSBASE),,SIZEC(ROSBASE),%
              1227                    DB#DOMAIN_ASDT)
      959     1228    3           WHENRETURN DO;
      960     1229    3                CALL DBM$PACK4(ROSBASE.JIT$,DCBPTR);
      961     1230    3                CALL DBM$GETMEM(DCBPTR,G$JIT,ASDTADR,SIZEC(G$JIT),,SIZEC(G$JIT),%
              1230                         DB#DOMAIN_ASDT);
      962     1231    3                USERID = G$JIT.USR#;
      963     1232    3                END;
      964     1233    2           END;
      965     1234    1      RETURN;
      966     1235
      967     1236    1   END DBM$SETSYMBOLS;

PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:202  
--  Include file information  --

   G$BOBCAT_M.:E05TOU  is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   DB_MACRO_M.:E05TOU  is referenced.
      No diagnostics issued in procedure DBM$SETSYMBOLS.

   Procedure DBM$SETSYMBOLS requires 286 words for executable code.
   Procedure DBM$SETSYMBOLS requires 310 words of local(AUTO) storage.

    No errors detected in file DBM$MAP.:E05TSI    .

PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:203  

 Object Unit name= DBM$SETSYMBOLS                             File name= DBM$MAP.:E05TOU
 UTS= JUL 29 '97 13:14:59.96 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      3      3  DBM$SETSYMBOLS
    1   Proc  even  none   286    436  DBM$SETSYMBOLS
    2  RoData even  none    15     17  DBM$SETSYMBOLS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  DBM$SETSYMBOLS
     1    201                  yes      Std        1  DBM$SETLIB_SYM
     1    343                  yes      Std        1  DBM$GETCUN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 DBM$GETBOBCAT
 yes     yes           Std       2 DAS$SYMINIT
 yes     yes           Std      10 DBM$GETMEM
         yes           Std       2 DBM$PACK4
         yes           Std       1 DAA$ERRMSG
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:204  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DA_DFLT_SYMBOLS                       DB_ROS$                               DB_MONASDT
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:205  


      820        1        /*T***********************************************************/
      821        2        /*T*                                                         */
      822        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      823        4        /*T*                                                         */
      824        5        /*T***********************************************************/
      825        6        DBM$SETSYMBOLS: PROC(USERID);

      6  1 000000   000000 700200 xent  DBM$SETSYMB* TSX0  ! X66_AUTO_1
         1 000001   000466 000001                    ZERO    310,1

      826        7
      827        8    1   DCL USERID SBIN;
      828        9
      829       10        %INCLUDE DB_MACRO_M;
      830       41        %DB$MAP_EQUS;
      831       51        %INCLUDE G_LCP6_E;
      832      309        %INCLUDE G_JIT_M;
      833      574        %INCLUDE GM_VIRTUAL_E;
      834      784        %INCLUDE G_SFILE_M;
      835      844        %INCLUDE G$BOBCAT_M;
      836      864
      837      865    1   DCL DAS$SYMINIT ENTRY(2) ALTRET;
      838      866    1   DCL DAA$ERRMSG ENTRY(1);
      839      867    1   DCL DBM$GETMEM ENTRY(10) ALTRET;
      840      868    1   DCL DBM$GETBOBCAT ENTRY(1) ALTRET;
      841      869    1   DCL DBM$PACK2 ENTRY(2);
      842      870    1   DCL DBM$PACK4 ENTRY(2);
      843      871
      844      872    1   DCL DA_DFLT_SYMBOLS BIT(1) SYMREF;
      845      873
      846      874    1   DCL 1 FEPRU CONSTANT,
      847      875    1         2 L UBIN BYTE CALIGNED INIT(SIZEC(FEPRU.C)),
      848      876    1         2 C CHAR(0) INIT('M:FEP.:SYS');
      849      877    1   DCL 1 USRRU,
      850      878    1         2 L UBIN BYTE CALIGNED,
      851      879    1         2 C CHAR(79);
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:206  
      852      880    1   DCL I UBIN;
      853      881
      854      882    1   DCL DB_ROS$ UBIN SYMREF;
      855      883    1   DCL 1 ROSBASE AUTO,
      856      884    1         2 DCBPTR$ UBIN,
      857      885    1         2 JIT$ UBIN,
      858      886    1         2 ALT$ UBIN,
      859      887    1         2 STK$ UBIN;
      860      888
      861      889    1   DCL DCBPTR UBIN;
      862      890    1   DCL SFILE$ UBIN;
      863      891    1   DCL SFILE_SIZE UBIN;
      864      892    1   DCL 1 FEPDCB AUTO,
      865      893    1         2 ARS UBIN HALF CALIGNED,
      866      894    1         2 TYC BIT(16) CALIGNED,
      867      895    1         2 DVBYTE BIT(9),
      868      896    1         2 EOMCHAR CHAR(1),
      869      897    1         2 FFLG BIT(9),
      870      898    1         2 DDEV BIT(9),
      871      899    1         2 WIDTH UBIN HALF CALIGNED,
      872      900    1         2 NAME,
      873      901    1           3 L UBIN BYTE CALIGNED,
      874      902    1           3 C CHAR(31),
      875      903    1         2 ACCT CHAR(8),
      876      904    1         2 RES CHAR(4),
      877      905    1         2 WSN CHAR(8);
      878      906
      879      907    1   DCL 1 DB_MONASDT(0:30) SYMREF,
      880      908    1         2 V BIT(1),
      881      909    1         2 * BIT(3),
      882      910    1         2 BASE UBIN(12) UNAL,
      883      911    1         2 * BIT(6),
      884      912    1         2 * BIT(1),
      885      913    1         2 SIZE UBIN(9) UNAL;
      886      914
      887      915        %G$JIT (FPTN=G$JIT,STCLASS=AUTO);
      888     1109        %G$BOBCAT (FPTN=G$BOBCAT, STCLASS=AUTO);
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:207  
      889     1122        %G$SFILE (FPTN=G$SFILE, STCLASS=AUTO, ARRAYED=NO);
      890     1159
      891     1160    1   DCL ASDTADR UBIN;
      892     1161
      893     1162
      894     1163        %EJECT;
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:208  
      895     1164    1      IF NOT DA_DFLT_SYMBOLS THEN RETURN;

   1164  1 000002   000000 234000 xsym               SZN     DA_DFLT_SYMBOLS
         1 000003   000005 604000 1                  TMI     s:1166

   1164  1 000004   000000 702200 xent               TSX2  ! X66_ARET

      896     1165
      897     1166    1      IF USERID = 0

   1166  1 000005   200003 470500                    LDP0    @USERID,,AUTO
         1 000006   000000 235100                    LDA     0,,PR0
         1 000007   000047 601000 1                  TNZ     USE_M$LM

      898     1167    2      THEN DO;

      899     1168    2           CALL DBM$GETBOBCAT(G$BOBCAT) ALTRET(USE_SYS_FEP);

   1168  1 000010   200340 631500                    EPPR1   G$BOBCAT,,AUTO
         1 000011   200456 451500                    STP1    ASDTADR+1,,AUTO
         1 000012   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000014   000000 701000 xent               TSX1    DBM$GETBOBCAT
         1 000015   000042 702000 1                  TSX2    USE_SYS_FEP

      900     1169    2           USRRU.C = G$BOBCAT.BOOTFID;

   1169  1 000016   040100 100500                    MLR     fill='040'O
         1 000017   200406 400050                    ADSC9   G$BOBCAT+38,,AUTO        cn=2,n=40
         1 000020   200004 200117                    ADSC9   USRRU,,AUTO              cn=1,n=79

      901     1170    2           CALL INDEX(I,' ',USRRU.C);

   1170  1 000021   000000 124500                    SCM     mask='000'O
         1 000022   200004 200117                    ADSC9   USRRU,,AUTO              cn=1,n=79
         1 000023   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000024   200030 000100                    ARG     I,,AUTO
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:209  

      902     1171    2           USRRU.L = I;

   1171  1 000025   200030 236100                    LDQ     I,,AUTO
         1 000026   000033 736000                    QLS     27
         1 000027   200004 552140                    STBQ    USRRU,'40'O,AUTO

      903     1172    2           CALL DAS$SYMINIT(USRRU)

   1172  1 000030   200004 630500                    EPPR0   USRRU,,AUTO
         1 000031   200456 450500                    STP0    ASDTADR+1,,AUTO
         1 000032   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000033   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000034   000000 701000 xent               TSX1    DAS$SYMINIT
         1 000035   000037 702000 1                  TSX2    s:1174
         1 000036   000046 710000 1                  TRA     s:1178

      904     1173    3           WHENALTRETURN DO;

      905     1174    3                CALL DAA$ERRMSG;

   1174  1 000037   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000040   000000 701000 xent               TSX1    DAA$ERRMSG
         1 000041   000000 011000                    NOP     0

   1174  1 000042                       USE_SYS_FEP  null
      906     1175    3   USE_SYS_FEP: ;
      907     1176    3                CALL DAS$SYMINIT(FEPRU);

   1176  1 000042   000000 630400 2                  EPPR0   0
         1 000043   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000044   000000 701000 xent               TSX1    DAS$SYMINIT
         1 000045   000000 011000                    NOP     0

      908     1177    3                END/*whenaltreturn*/;

      909     1178    2           END/*do if userid=0*/;
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:210  

   1178  1 000046   000200 710000 1                  TRA     s:1195

      910     1179
      911     1180    2      ELSE DO;

   1173  1 000047                       USE_M$LM     null
      912     1181    2   USE_M$LM: ;
      913     1182    2           CALL DBM$GETMEM(DB_ROS$,ROSBASE,USERID,SIZEC(ROSBASE),,SIZEC(ROSBASE))

   1182  1 000047   000002 236000 2                  LDQ     2
         1 000050   000001 235000 xsym               LDA     B_VECTNIL+1
         1 000051   200462 757100                    STAQ    ASDTADR+5,,AUTO
         1 000052   000002 236000 2                  LDQ     2
         1 000053   200003 235100                    LDA     @USERID,,AUTO
         1 000054   200460 757100                    STAQ    ASDTADR+3,,AUTO
         1 000055   200031 630500                    EPPR0   ROSBASE,,AUTO
         1 000056   200457 450500                    STP0    ASDTADR+2,,AUTO
         1 000057   000003 236000 2                  LDQ     3
         1 000060   200456 756100                    STQ     ASDTADR+1,,AUTO
         1 000061   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000062   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000063   000000 701000 xent               TSX1    DBM$GETMEM
         1 000064   000200 702000 1                  TSX2    s:1195

      914     1183    3           WHENRETURN DO;

      915     1184    3                CALL DBM$PACK4(ROSBASE.DCBPTR$,DCBPTR);

   1184  1 000065   200035 630500                    EPPR0   DCBPTR,,AUTO
         1 000066   200457 450500                    STP0    ASDTADR+2,,AUTO
         1 000067   200031 631500                    EPPR1   ROSBASE,,AUTO
         1 000070   200456 451500                    STP1    ASDTADR+1,,AUTO
         1 000071   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000072   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000073   000000 701000 xent               TSX1    DBM$PACK4
         1 000074   000000 011000                    NOP     0
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:211  

      916     1185    3                CALL DBM$GETMEM(DCBPTR+%(G_M$LM#*2),DCBPTR,USERID,SIZEC(DCBPTR));

   1185  1 000075   200035 235100                    LDA     DCBPTR,,AUTO
         1 000076   000004 035007                    ADLA    4,DL
         1 000077   200456 755100                    STA     ASDTADR+1,,AUTO
         1 000100   000004 236000 2                  LDQ     4
         1 000101   200003 235100                    LDA     @USERID,,AUTO
         1 000102   200462 757100                    STAQ    ASDTADR+5,,AUTO
         1 000103   200035 630500                    EPPR0   DCBPTR,,AUTO
         1 000104   200461 450500                    STP0    ASDTADR+4,,AUTO
         1 000105   200456 631500                    EPPR1   ASDTADR+1,,AUTO
         1 000106   200460 451500                    STP1    ASDTADR+3,,AUTO
         1 000107   200460 630500                    EPPR0   ASDTADR+3,,AUTO
         1 000110   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000111   000000 701000 xent               TSX1    DBM$GETMEM
         1 000112   000000 011000                    NOP     0

      917     1186    3                CALL DBM$PACK4(DCBPTR,DCBPTR);

   1186  1 000113   200035 630500                    EPPR0   DCBPTR,,AUTO
         1 000114   200457 450500                    STP0    ASDTADR+2,,AUTO
         1 000115   200035 631500                    EPPR1   DCBPTR,,AUTO
         1 000116   200456 451500                    STP1    ASDTADR+1,,AUTO
         1 000117   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000120   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000121   000000 701000 xent               TSX1    DBM$PACK4
         1 000122   000000 011000                    NOP     0

      918     1187    3                CALL DBM$GETMEM(DCBPTR,FEPDCB,USERID,SIZEC(FEPDCB));

   1187  1 000123   000006 236000 2                  LDQ     6
         1 000124   200003 235100                    LDA     @USERID,,AUTO
         1 000125   200460 757100                    STAQ    ASDTADR+3,,AUTO
         1 000126   200040 630500                    EPPR0   FEPDCB,,AUTO
         1 000127   200457 450500                    STP0    ASDTADR+2,,AUTO
         1 000130   200035 631500                    EPPR1   DCBPTR,,AUTO
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:212  
         1 000131   200456 451500                    STP1    ASDTADR+1,,AUTO
         1 000132   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000133   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000134   000000 701000 xent               TSX1    DBM$GETMEM
         1 000135   000000 011000                    NOP     0

      919     1188    3                CALL CONCAT(USRRU.C,SUBSTR(FEPDCB.NAME.C,0,FEPDCB.NAME.L),'.',FEPDCB.
              1188                         ACCT);

   1188  1 000136   200042 236100                    LDQ     FEPDCB+2,,AUTO
         1 000137   000011 772000                    QRL     9
         1 000140   000777 376007                    ANQ     511,DL
         1 000141   000000 620006                    EAX0    0,QL
         1 000142   040100 100540                    MLR     fill='040'O
         1 000143   200042 600010                    ADSC9   FEPDCB+2,,AUTO           cn=3,n=*X0
         1 000144   200004 200117                    ADSC9   USRRU,,AUTO              cn=1,n=79
         1 000145   000117 116007                    CMPQ    79,DL
         1 000146   000163 603000 1                  TRC     FINISH_USER
         1 000147   777660 620006                    EAX0    -80,QL
         1 000150   777777 660003                    ERX0    -1,DU
         1 000151   040146 100400                    MLR     fill='040'O
         1 000152   000007 000001 2                  ADSC9   7                        cn=0,n=1
         1 000153   200004 200010                    ADSC9   USRRU,Q,AUTO             cn=1,n=*X0
         1 000154   000116 116007                    CMPQ    78,DL
         1 000155   000163 603000 1                  TRC     FINISH_USER
         1 000156   777661 620006                    EAX0    -79,QL
         1 000157   777777 660003                    ERX0    -1,DU
         1 000160   040146 100500                    MLR     fill='040'O
         1 000161   200052 400010                    ADSC9   FEPDCB+10,,AUTO          cn=2,n=8
         1 000162   200004 400010                    ADSC9   USRRU,Q,AUTO             cn=2,n=*X0

   1188  1 000163                       FINISH_USER  null
      920     1189    3   FINISH_USER: ;
      921     1190    3                CALL INDEX(I,' ',USRRU.C);

   1190  1 000163   000000 124500                    SCM     mask='000'O
         1 000164   200004 200117                    ADSC9   USRRU,,AUTO              cn=1,n=79
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:213  
         1 000165   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000166   200030 000100                    ARG     I,,AUTO

      922     1191    3                USRRU.L = I;

   1191  1 000167   200030 236100                    LDQ     I,,AUTO
         1 000170   000033 736000                    QLS     27
         1 000171   200004 552140                    STBQ    USRRU,'40'O,AUTO

      923     1192    3                CALL DAS$SYMINIT(USRRU);

   1192  1 000172   200004 630500                    EPPR0   USRRU,,AUTO
         1 000173   200456 450500                    STP0    ASDTADR+1,,AUTO
         1 000174   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000175   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000176   000000 701000 xent               TSX1    DAS$SYMINIT
         1 000177   000000 011000                    NOP     0

      924     1193    3                END;

      925     1194    2           END;

      926     1195    1      RETURN;

   1195  1 000200   000000 702200 xent               TSX2  ! X66_ARET

      927     1196
      928     1197        %EJECT;
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:214  
      929     1198    1   DBM$SETLIB_SYM: ENTRY(USERID);

   1198  1 000201   000000 700200 xent  DBM$SETLIB_* TSX0  ! X66_AUTO_1
         1 000202   000466 000001                    ZERO    310,1

      930     1199
      931     1200    1      IF NOT DA_DFLT_SYMBOLS THEN RETURN;

   1200  1 000203   000000 234000 xsym               SZN     DA_DFLT_SYMBOLS
         1 000204   000206 604000 1                  TMI     s:1202

   1200  1 000205   000000 702200 xent               TSX2  ! X66_ARET

      932     1201
      933     1202    1      CALL DBM$GETMEM(DB_ROS$,ROSBASE,USERID,SIZEC(ROSBASE),,SIZEC(ROSBASE))

   1202  1 000206   000002 236000 2                  LDQ     2
         1 000207   000001 235000 xsym               LDA     B_VECTNIL+1
         1 000210   200462 757100                    STAQ    ASDTADR+5,,AUTO
         1 000211   000002 236000 2                  LDQ     2
         1 000212   200003 235100                    LDA     @USERID,,AUTO
         1 000213   200460 757100                    STAQ    ASDTADR+3,,AUTO
         1 000214   200031 630500                    EPPR0   ROSBASE,,AUTO
         1 000215   200457 450500                    STP0    ASDTADR+2,,AUTO
         1 000216   000003 236000 2                  LDQ     3
         1 000217   200456 756100                    STQ     ASDTADR+1,,AUTO
         1 000220   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000221   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000222   000000 701000 xent               TSX1    DBM$GETMEM
         1 000223   000342 702000 1                  TSX2    s:1218+1

      934     1203    2      WHENRETURN DO;

      935     1204    2           CALL DBM$PACK4(ROSBASE.JIT$,DCBPTR);

   1204  1 000224   200035 630500                    EPPR0   DCBPTR,,AUTO
         1 000225   200457 450500                    STP0    ASDTADR+2,,AUTO
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:215  
         1 000226   200032 631500                    EPPR1   ROSBASE+1,,AUTO
         1 000227   200456 451500                    STP1    ASDTADR+1,,AUTO
         1 000230   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000231   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000232   000000 701000 xent               TSX1    DBM$PACK4
         1 000233   000000 011000                    NOP     0

      936     1205    2           CALL DBM$GETMEM(DCBPTR,G$JIT,USERID,SIZEC(G$JIT),,SIZEC(G$JIT));

   1205  1 000234   000011 236000 2                  LDQ     9
         1 000235   000001 235000 xsym               LDA     B_VECTNIL+1
         1 000236   200462 757100                    STAQ    ASDTADR+5,,AUTO
         1 000237   000011 236000 2                  LDQ     9
         1 000240   200003 235100                    LDA     @USERID,,AUTO
         1 000241   200460 757100                    STAQ    ASDTADR+3,,AUTO
         1 000242   200060 630500                    EPPR0   G$JIT,,AUTO
         1 000243   200457 450500                    STP0    ASDTADR+2,,AUTO
         1 000244   200035 631500                    EPPR1   DCBPTR,,AUTO
         1 000245   200456 451500                    STP1    ASDTADR+1,,AUTO
         1 000246   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000247   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000250   000000 701000 xent               TSX1    DBM$GETMEM
         1 000251   000000 011000                    NOP     0

      937     1206    2           IF G$JIT.SLIB# = 0

   1206  1 000252   200166 236100                    LDQ     G$JIT+70,,AUTO
         1 000253   000777 316003                    CANQ    511,DU
         1 000254   000047 600000 1                  TZE     USE_M$LM

      938     1207    2           THEN GOTO USE_M$LM;
      939     1208
      940     1209    2           SFILE_SIZE = (SIZEC(G$SFILE)+1) /2;

   1209  1 000255   000060 235007                    LDA     48,DL
         1 000256   200037 755100                    STA     SFILE_SIZE,,AUTO

PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:216  
      941     1210    2           CALL DBM$GETBOBCAT(G$BOBCAT) ALTRET(USE_M$LM);

   1210  1 000257   200340 630500                    EPPR0   G$BOBCAT,,AUTO
         1 000260   200456 450500                    STP0    ASDTADR+1,,AUTO
         1 000261   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000262   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000263   000000 701000 xent               TSX1    DBM$GETBOBCAT
         1 000264   000047 702000 1                  TSX2    USE_M$LM

      942     1211
      943     1212    2           CALL DBM$PACK4(G$BOBCAT.SFILE$,SFILE$);

   1212  1 000265   200036 630500                    EPPR0   SFILE$,,AUTO
         1 000266   200457 450500                    STP0    ASDTADR+2,,AUTO
         1 000267   200357 631500                    EPPR1   G$BOBCAT+15,,AUTO
         1 000270   200456 451500                    STP1    ASDTADR+1,,AUTO
         1 000271   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000272   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000273   000000 701000 xent               TSX1    DBM$PACK4
         1 000274   000000 011000                    NOP     0

      944     1213
      945     1214    2           SFILE$ = SFILE$ + (SFILE_SIZE * G$JIT.SLIB#);

   1214  1 000275   200166 236100                    LDQ     G$JIT+70,,AUTO
         1 000276   000022 772000                    QRL     18
         1 000277   000777 376007                    ANQ     511,DL
         1 000300   200037 402100                    MPY     SFILE_SIZE,,AUTO
         1 000301   200036 036100                    ADLQ    SFILE$,,AUTO
         1 000302   200036 756100                    STQ     SFILE$,,AUTO

      946     1215    2           CALL DBM$GETMEM(SFILE$,G$SFILE,0,SIZEC(G$SFILE)) ALTRET(USE_M$LM);

   1215  1 000303   000014 237000 2                  LDAQ    12
         1 000304   200460 757100                    STAQ    ASDTADR+3,,AUTO
         1 000305   200425 630500                    EPPR0   G$SFILE,,AUTO
         1 000306   200457 450500                    STP0    ASDTADR+2,,AUTO
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:217  
         1 000307   200036 631500                    EPPR1   SFILE$,,AUTO
         1 000310   200456 451500                    STP1    ASDTADR+1,,AUTO
         1 000311   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000312   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000313   000000 701000 xent               TSX1    DBM$GETMEM
         1 000314   000047 702000 1                  TSX2    USE_M$LM

      947     1216
      948     1217    2           CALL CONCAT(USRRU.C,SUBSTR(G$SFILE.NAME.TEXT,0,G$SFILE.NAME.L),'.',G$SFILE.
              1217                    ACCT);

   1217  1 000315   200425 236100                    LDQ     G$SFILE,,AUTO
         1 000316   000033 772000                    QRL     27
         1 000317   000000 620006                    EAX0    0,QL
         1 000320   040100 100540                    MLR     fill='040'O
         1 000321   200425 200010                    ADSC9   G$SFILE,,AUTO            cn=1,n=*X0
         1 000322   200004 200117                    ADSC9   USRRU,,AUTO              cn=1,n=79
         1 000323   000117 116007                    CMPQ    79,DL
         1 000324   000341 603000 1                  TRC     s:1218
         1 000325   777660 620006                    EAX0    -80,QL
         1 000326   777777 660003                    ERX0    -1,DU
         1 000327   040146 100400                    MLR     fill='040'O
         1 000330   000007 000001 2                  ADSC9   7                        cn=0,n=1
         1 000331   200004 200010                    ADSC9   USRRU,Q,AUTO             cn=1,n=*X0
         1 000332   000116 116007                    CMPQ    78,DL
         1 000333   000341 603000 1                  TRC     s:1218
         1 000334   777661 620006                    EAX0    -79,QL
         1 000335   777777 660003                    ERX0    -1,DU
         1 000336   040146 100500                    MLR     fill='040'O
         1 000337   200435 000010                    ADSC9   G$SFILE+8,,AUTO          cn=0,n=8
         1 000340   200004 400010                    ADSC9   USRRU,Q,AUTO             cn=2,n=*X0

      949     1218    2           GOTO FINISH_USER;

   1218  1 000341   000163 710000 1                  TRA     FINISH_USER
         1 000342   000345 710000 1                  TRA     s:1224

PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:218  
      950     1219    2           END/*whenreturn do*/;
      951     1220
      952     1221        %EJECT;
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:219  
      953     1222    1   DBM$GETCUN: ENTRY(USERID);

   1222  1 000343   000000 700200 xent  DBM$GETCUN   TSX0  ! X66_AUTO_1
         1 000344   000466 000001                    ZERO    310,1

      954     1223
      955     1224    1      USERID = 0;

   1224  1 000345   200003 470500                    LDP0    @USERID,,AUTO
         1 000346   000000 450100                    STZ     0,,PR0

      956     1225    2      IF DB_MONASDT.V(5) THEN DO;

   1225  1 000347   000004 236000 xsym               LDQ     DB_MONASDT+4
         1 000350   000002 316003                    CANQ    2,DU
         1 000351   000435 600000 1                  TZE     s:1234

      957     1226    2           ASDTADR = DB_MONASDT.BASE(5) * 256;

   1226  1 000352   000004 236000 xsym               LDQ     DB_MONASDT+4
         1 000353   000004 736000                    QLS     4
         1 000354   000013 376000 2                  ANQ     11
         1 000355   200455 756100                    STQ     ASDTADR,,AUTO

      958     1227    2           CALL DBM$GETMEM(DB_ROS$,ROSBASE,ASDTADR,SIZEC(ROSBASE),,SIZEC(ROSBASE),%
              1227                    DB#DOMAIN_ASDT)

   1227  1 000356   000016 236000 2                  LDQ     14
         1 000357   200464 756100                    STQ     ASDTADR+7,,AUTO
         1 000360   000002 236000 2                  LDQ     2
         1 000361   000001 235000 xsym               LDA     B_VECTNIL+1
         1 000362   200462 757100                    STAQ    ASDTADR+5,,AUTO
         1 000363   000002 236000 2                  LDQ     2
         1 000364   200461 756100                    STQ     ASDTADR+4,,AUTO
         1 000365   200455 631500                    EPPR1   ASDTADR,,AUTO
         1 000366   200460 451500                    STP1    ASDTADR+3,,AUTO
         1 000367   200031 633500                    EPPR3   ROSBASE,,AUTO
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:220  
         1 000370   200457 453500                    STP3    ASDTADR+2,,AUTO
         1 000371   000003 236000 2                  LDQ     3
         1 000372   200456 756100                    STQ     ASDTADR+1,,AUTO
         1 000373   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000374   000025 631400 xsym               EPPR1   B_VECTNIL+21
         1 000375   000000 701000 xent               TSX1    DBM$GETMEM
         1 000376   000435 702000 1                  TSX2    s:1234

      959     1228    3           WHENRETURN DO;

      960     1229    3                CALL DBM$PACK4(ROSBASE.JIT$,DCBPTR);

   1229  1 000377   200035 630500                    EPPR0   DCBPTR,,AUTO
         1 000400   200457 450500                    STP0    ASDTADR+2,,AUTO
         1 000401   200032 631500                    EPPR1   ROSBASE+1,,AUTO
         1 000402   200456 451500                    STP1    ASDTADR+1,,AUTO
         1 000403   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000404   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000405   000000 701000 xent               TSX1    DBM$PACK4
         1 000406   000000 011000                    NOP     0

      961     1230    3                CALL DBM$GETMEM(DCBPTR,G$JIT,ASDTADR,SIZEC(G$JIT),,SIZEC(G$JIT),%
              1230                         DB#DOMAIN_ASDT);

   1230  1 000407   000016 236000 2                  LDQ     14
         1 000410   200464 756100                    STQ     ASDTADR+7,,AUTO
         1 000411   000011 236000 2                  LDQ     9
         1 000412   000001 235000 xsym               LDA     B_VECTNIL+1
         1 000413   200462 757100                    STAQ    ASDTADR+5,,AUTO
         1 000414   000011 236000 2                  LDQ     9
         1 000415   200461 756100                    STQ     ASDTADR+4,,AUTO
         1 000416   200455 630500                    EPPR0   ASDTADR,,AUTO
         1 000417   200460 450500                    STP0    ASDTADR+3,,AUTO
         1 000420   200060 631500                    EPPR1   G$JIT,,AUTO
         1 000421   200457 451500                    STP1    ASDTADR+2,,AUTO
         1 000422   200035 633500                    EPPR3   DCBPTR,,AUTO
         1 000423   200456 453500                    STP3    ASDTADR+1,,AUTO
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:221  
         1 000424   200456 630500                    EPPR0   ASDTADR+1,,AUTO
         1 000425   000025 631400 xsym               EPPR1   B_VECTNIL+21
         1 000426   000000 701000 xent               TSX1    DBM$GETMEM
         1 000427   000000 011000                    NOP     0

      962     1231    3                USERID = G$JIT.USR#;

   1231  1 000430   200062 236100                    LDQ     G$JIT+2,,AUTO
         1 000431   000022 772000                    QRL     18
         1 000432   000777 376007                    ANQ     511,DL
         1 000433   200003 470500                    LDP0    @USERID,,AUTO
         1 000434   000000 756100                    STQ     0,,PR0

      963     1232    3                END;

      964     1233    2           END;

      965     1234    1      RETURN;

   1234  1 000435   000000 702200 xent               TSX2  ! X66_ARET
      966     1235
      967     1236    1   END DBM$SETSYMBOLS;

PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:222  
--  Include file information  --

   G$BOBCAT_M.:E05TOU  is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   DB_MACRO_M.:E05TOU  is referenced.
      No diagnostics issued in procedure DBM$SETSYMBOLS.
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:223  

 **** Variables and constants ****

  ****  Section 000 RoData DBM$SETSYMBOLS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(99)    r     1 FEPRU

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @USERID                  455-0-0/w UBIN        r     1 ASDTADR
    35-0-0/w UBIN        r     1 DCBPTR                    40-0-0/c STRC(558)   r     1 FEPDCB
   340-0-0/w STRC(1908)  r     1 G$BOBCAT                  60-0-0/w STRC(6318)  r     1 G$JIT
   425-0-0/w STRC(864)   r     1 G$SFILE                   30-0-0/w UBIN        r     1 I
    31-0-0/w STRC(144)   r     1 ROSBASE                   36-0-0/w UBIN        r     1 SFILE$
    37-0-0/w UBIN        r     1 SFILE_SIZE                *0-0-0/w SBIN        r     1 USERID
     4-0-0/c STRC(720)   r     1 USRRU

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 DA_DFLT_SYMBOLS
     0-0-0/b STRC(32)    r     1 DB_MONASDT(0:30)
     0-0-0/w UBIN        r     1 DB_ROS$


   Procedure DBM$SETSYMBOLS requires 286 words for executable code.
   Procedure DBM$SETSYMBOLS requires 310 words of local(AUTO) storage.
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:224  

    No errors detected in file DBM$MAP.:E05TSI    .
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:225  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:226  
          MINI XREF LISTING

ASDTADR
      1160**DCL      1226<<ASSIGN   1227<>CALL     1230<>CALL
DAA$ERRMSG
       866**DCL-ENT  1174--CALL
DAS$SYMINIT
       865**DCL-ENT  1172--CALL     1176--CALL     1192--CALL
DA_DFLT_SYMBOLS
       872**DCL      1164>>IF       1200>>IF
DBM$GETBOBCAT
       868**DCL-ENT  1168--CALL     1210--CALL
DBM$GETMEM
       867**DCL-ENT  1182--CALL     1185--CALL     1187--CALL     1202--CALL     1205--CALL     1215--CALL
      1227--CALL     1230--CALL
DBM$PACK4
       870**DCL-ENT  1184--CALL     1186--CALL     1204--CALL     1212--CALL     1229--CALL
DB_MONASDT.BASE
       910**DCL      1226>>ASSIGN
DB_MONASDT.V
       908**DCL      1225>>IF
DB_ROS$
       882**DCL      1182<>CALL     1202<>CALL     1227<>CALL
DCBPTR
       889**DCL      1184<>CALL     1185>>CALL     1185<>CALL     1185--CALL     1186<>CALL     1186<>CALL
      1187<>CALL     1204<>CALL     1205<>CALL     1229<>CALL     1230<>CALL
FEPDCB
       892**DCL      1187<>CALL     1187--CALL
FEPDCB.ACCT
       903**DCL      1188>>CALLBLT
FEPDCB.NAME.C
       902**DCL      1188>>CALLBLT
FEPDCB.NAME.L
       901**DCL      1188>>CALLBLT
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:227  
FEPRU
       874**DCL      1176<>CALL
FEPRU.C
       876**DCL       875--DCLINIT
FINISH_USER
      1188**LABEL    1218--GOTO
G$BOBCAT
      1110**DCL      1168<>CALL     1210<>CALL
G$BOBCAT.BOOTFID
      1119**DCL      1169>>ASSIGN
G$BOBCAT.SFILE$
      1114**DCL      1212<>CALL
G$JIT
       929**DCL      1205<>CALL     1205--CALL     1205--CALL     1230<>CALL     1230--CALL     1230--CALL
G$JIT.ERRLOG
      1084**DCL      1087--REDEF
G$JIT.JSUNIT
       998**DCL       999--REDEF
G$JIT.MCLS
       997**DCL       997--REDEF
G$JIT.SLIB#
      1041**DCL      1206>>IF       1214>>ASSIGN
G$JIT.TMRZ
      1091**DCL      1092--REDEF
G$JIT.USER_EXTIME
       990**DCL       991--REDEF
G$JIT.USER_MEMTIME
       993**DCL       993--REDEF
G$JIT.USER_SVTIME
       992**DCL       992--REDEF
G$JIT.USR#
       987**DCL      1231>>ASSIGN
G$SFILE
      1138**DCL      1209--ASSIGN   1215<>CALL     1215--CALL
G$SFILE.ACCT
      1140**DCL      1217>>CALLBLT
PL6.E3A0      #012=DBM$SETSYMBOLS File=DBM$MAP.:E05TSI                           TUE 07/29/97 13:14 Page:228  
G$SFILE.LIB_WDSZ_DATA
      1154**DCL      1155--REDEF
G$SFILE.NAME.L
      1140**DCL      1217>>CALLBLT
G$SFILE.NAME.TEXT
      1140**DCL      1217>>CALLBLT
I
       880**DCL      1170<<CALLBLT  1171>>ASSIGN   1190<<CALLBLT  1191>>ASSIGN
ROSBASE
       883**DCL      1182<>CALL     1182--CALL     1182--CALL     1202<>CALL     1202--CALL     1202--CALL
      1227<>CALL     1227--CALL     1227--CALL
ROSBASE.DCBPTR$
       884**DCL      1184<>CALL
ROSBASE.JIT$
       885**DCL      1204<>CALL     1229<>CALL
SFILE$
       890**DCL      1212<>CALL     1214<<ASSIGN   1214>>ASSIGN   1215<>CALL
SFILE_SIZE
       891**DCL      1209<<ASSIGN   1214>>ASSIGN
USERID
         8**DCL         6--PROC     1166>>IF       1182<>CALL     1185<>CALL     1187<>CALL     1198--ENTRY
      1202<>CALL     1205<>CALL     1222--ENTRY    1224<<ASSIGN   1231<<ASSIGN
USE_M$LM
      1173**LABEL    1207--GOTO     1210--CALLALT  1215--CALLALT
USE_SYS_FEP
      1174**LABEL    1168--CALLALT
USRRU
       877**DCL      1172<>CALL     1192<>CALL
USRRU.C
       879**DCL      1169<<ASSIGN   1170>>CALLBLT  1188<<CALLBLT  1190>>CALLBLT  1217<<CALLBLT
USRRU.L
       878**DCL      1171<<ASSIGN   1191<<ASSIGN
