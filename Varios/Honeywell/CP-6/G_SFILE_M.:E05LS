

14:37 JUL 28 '97 G_SFILE_M.:E05SI                                          1    
    1      /*M* G_SFILE_M    Macros for the Shared Processor Tables   */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7
    8      /*X*  MEC,MOC,EXM=20,CLM=30,CRM=85    */
    9
   10                          /*F*  NAME: G$SFILE.
   11
   12                          The G$SFILE macro generates the strucutre for the
   13                          LCP-6 Shared File Tables.
   14
   15                          A shared file may consist of up to 7 segments
   16                          (which happens to be the number of segments in
   17                          the LCP-6 user's virtual memory that may be
   18                          used for the program area).
   19                          */
   20
   21      %MACRO G$SFILE (FPTN=G$SFILE,
   22         NFILES=0,
   23         ALGN=WALIGNED,
   24         ARRAYED(YES=1,NO=0,ANY)=1,
   25         STCLASS=BASED);
   26
   27      %LSET LISTDIR='0'B;
   28      %LSET LISTEXP='1'B;
   29      %LSET LISTCOM='0'B;
   30      %LSET LISTSUB='1'B;
   31
   32      %LSET STR=SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
   33      %IF (STR='STA') OR (STR='CON') OR STR='EXT';
   34      %LSET INIT=CHARTEXT(' INIT');
   35      %LSET EINIT=CHARTEXT('');
   36      %ELSE;
   37      %LSET INIT=CHARTEXT('/*');
14:37 JUL 28 '97 G_SFILE_M.:E05SI                                          2    
   38      %LSET EINIT=CHARTEXT('*/');
   39      %ENDIF;
   40
   41      %IF ARRAYED=1;
   42      DCL 1 FPTN(0:NFILES) STCLASS ALGN,
   43      %ELSE;
   44      DCL 1 FPTN STCLASS ALGN,
   45      %ENDIF;
   46
   47            2 NAME CALIGNED,
   48              3 L UBIN BYTE UNAL,
   49              3 TEXT CHAR(31) UNAL,
   50                          /*K* NAME = TEXTC(31).  Contains the file NAME of the file.
   51                          */
   52            2 ACCT CHAR(8) CALIGNED,
   53                          /*K* ACCT = CHAR(8).  Contains the name of the ACCounT
   54                          in which the file resides.
   55                          */
   56            2 PASS CHAR(8) CALIGNED,
   57                          /*K* PASS = CHAR(8).  Contains the PASSword associated with
   58                          the file.
   59                          */
   60            2 PSN CHAR(6) CALIGNED,
   61                          /*K* PSN = CHAR(8).  Contains the Pack Set Name of the
   62                          pack set on which the file resides.
   63                          */
   64            2 MODTIME UBIN(32) CALIGNED,
   65                          /*K* MODTIME = VALUE-UBIN(32).  Contains the file's
   66                          latest MODification TIME.
   67                          */
   68            2 RU_FLGS CALIGNED,
   69      %IF NOT(MODE_FEP);
   70              3 * BIT(1) UNAL,
   71      %ENDIF;
   72              3 SHARE BIT(1) UNAL,
   73              3 LIB BIT(1) UNAL,
   74              3 EXONLY BIT(1) UNAL,
14:37 JUL 28 '97 G_SFILE_M.:E05SI                                          3    
   75              3 CP BIT(1) UNAL,
   76              3 DB BIT(1) UNAL,
   77              3 PROCACCT BIT(1) UNAL,
   78              3 NOCHGPMEM BIT(1) UNAL,
   79              3 PROCSURCHG BIT(1) UNAL,
   80      %IF NOT(MODE_FEP);
   81              3 * BIT(1) UNAL,
   82      %ENDIF;
   83              3 STD BIT(1) UNAL,
   84              3 * BIT(7) UNAL,
   85                          /*K* RU_FLGS = VALUE-BIT(16).  When the shared file
   86                          is a run-unit, RU_FLGS contains the flags assigned
   87                          by FEPLINK; when the shared file is a data file,
   88                          RU_FLGS will be set to zero.
   89
   90                          The following EQUs may be used to reference
   91                          bit settings in this word:
   92                          }
   93                          } RU_SHARE#        Run unit may be shared
   94                          } RU_LIB#          Run unit is a library
   95                          } RU_EXONLY#       Run unit is execute only
   96                          } RU_CP#           Run unit is a CP
   97                          } RU_DB#           Run unit is a debugger
   98                          } RU_PROCACC#      Processor acctg for auto_shr RU
   99                          } RU_NOCHGPMEM#    No charge for procedure
  100                          } RU_PROCSURCHG#   Processor surcharge
  101                          } RU_STD#          Run unit is a standard user program
  102                          }
  103                          */
  104
  105            2 LCP6_FLGS CALIGNED,
  106      %IF NOT(MODE_FEP);
  107              3 * BIT(1) UNAL,
  108      %ENDIF;
  109              3 * BIT(4) UNAL,
  110              3 INST_DATA BIT(1) UNAL,
  111              3 STATS BIT(1) UNAL,
14:37 JUL 28 '97 G_SFILE_M.:E05SI                                          4    
  112              3 INST BIT(1) UNAL,
  113              3 REP BIT(1) UNAL,
  114                          /*K* LCP6_FLGS = VALUE-BIT(16).  Contains the file flags as
  115                          set by LCP-6 activity.
  116
  117                          The following EQUs may be used to reference
  118                          bit settings in this word:
  119                          }
  120                          } LCP6_INSTDATA#     Copy processor data being installed
  121                          } LCP6_STATS#        Statistics being collected
  122                          } LCP6_INST#         File currently being installed
  123                          } LCP6_REP#          File currently being replaced
  124                          */
  125            2 PGSZ_ROS UBIN BYTE CALIGNED,
  126                          /*K* PGSZ_ROS = VALUE-UBIN BYTE.  Contains the
  127                          number of L6 pages for the initial copy of the
  128                          Read-Only segment.  Used only for FPRGs.
  129                          */
  130            2 UC UBIN BYTE CALIGNED,
  131                          /*K* UC = VALUE-UBIN BYTE.  Contains a count of the number
  132                          of users associated with this file.
  133                          */
  134            2 FRQ UBIN BYTE CALIGNED,
  135                          /*K* FRQ = VALUE-UBIN BYTE.  Contains a count of the number
  136                          of times this file has been associated.
  137                          */
  138            2 INSTTIME UBIN(32) CALIGNED,
  139                          /*K* INSTTIME = VALUE-UBIN(32).  Contains the file's
  140                          installation UTS.
  141                          */
  142            2 SEG_1ST_DATA UBIN(16) CALIGNED,
  143                          /*K* SEG_1ST_DATA = VALUE-UBIN.  Contains the index into
  144                          G$SFILE.PP_SEGn for the first data segment.
  145                          */
  146            2 SEG_1ST_PROC UBIN(16) CALIGNED,
  147                          /*K* SEG_1ST_PROC = VALUE-UBIN.  Contains the index into
  148                          G$SFILE.PP_SEGn for the first procedure segment.
14:37 JUL 28 '97 G_SFILE_M.:E05SI                                          5    
  149                          */
  150            2 LIB_WDSZ_DATA UBIN(32) CALIGNED,
  151                     /*K* LIB_WDSZ_DATA = VALUE-UBIN(32).  Contains the total number of
  152                     words of data.  Used only for libraries.
  153                     */
  154            2 USR_DATA REDEF LIB_WDSZ_DATA,
  155              3 COPY UBIN(16) CALIGNED,
  156                          /*K* USR_DATA.COPY = VALUE-UBIN.  Contains the
  157                          number of users currently in the process of copying
  158                          the initial data.  Used only for FPRGs.
  159                          */
  160              3 PGSZ_DATA1 UBIN(16) CALIGNED,
  161                          /*K* PGSZ_DATA1 = VALUE-UBIN.  Contains the number of L6
  162                          pages used for the first data segment.  Used only for FPRGS.
  163                          */
  164            2 PGSZ_DATA UBIN(16) CALIGNED,
  165                          /*K* PGSZ_DATA = VALUE-UBIN.  Contains the total number of
  166                          L6 pages for all data segments.
  167                          */
  168            2 PGSZ_PROC UBIN(16) CALIGNED,
  169                          /*K* PGSZ_PROC = VALUE-UBIN.  Contains the total number of
  170                          L6 pages for all procedure segments.
  171                          */
  172            2 PP_ROS UBIN(16) CALIGNED,
  173                          /*K* PP_ROS = VALUE-UBIN.  Contains the Physical
  174                          Page number of the first page of Read-Only Segment
  175                          Data.  Used only for FPRGs.
  176                          */
  177            2 PP_SEG1 UBIN(16) CALIGNED,
  178            2 PP_SEG2 UBIN(16) CALIGNED,
  179            2 PP_SEG3 UBIN(16) CALIGNED,
  180            2 PP_SEG4 UBIN(16) CALIGNED,
  181            2 PP_SEG5 UBIN(16) CALIGNED,
  182            2 PP_SEG6 UBIN(16) CALIGNED,
  183            2 PP_SEG7 UBIN(16) CALIGNED;
  184                          /*K* PP_SEGn = VALUE-UBIN.  where n = 1 -> 7.
  185                          Contains the Physical Page number of the first
14:37 JUL 28 '97 G_SFILE_M.:E05SI                                          6    
  186                          page in each SEGment.
  187                          */
  188
  189      %MEND;
  190
  191
  192      /*X*  MEC,MOC,EXM=20,CLM=30,CRM=70    */
  193
  194
  195                                    /* EQUs for RU_FLGS                   */
  196
  197      /* Bits from the head record.  */
  198      %EQU RU_SHARE#='8000'X;       /* Run unit may be shared             */
  199      %EQU RU_LIB#='4000'X;         /* Proc is a library                  */
  200      %EQU RU_EXONLY#='2000'X;      /* Run-unit is execute only           */
  201      %EQU RU_CP#='1000'X;          /* Proc is a CP                       */
  202      %EQU RU_DB#='0800'X;          /* Proc is a debugger                 */
  203      %EQU RU_PROCACC#='0400'X;     /* Processor acctg for auto_shr RU    */
  204      %EQU RU_NOCHGPMEM#='0200'X;   /* No charge for procedure            */
  205      %EQU RU_PROCSURCHG#='0100'X;  /* Processor surcharge                */
  206
  207      /* Set by LCP-6  */
  208      %EQU RU_STD#='0080'X;         /* Proc is a standard user run-unit   */
  209
  210      /* Masks */
  211      %EQU RU_SETFP#='FF00'X;       /* Mask out debug                     */
  212      %EQU RU_PROC#='5880'X;        /* RU_LIB# | RU_DB# | RU_CP# | RU_STD#*/
  213      %EQU RU_SPCL#='5800'X;        /* RU_LIB# | RU_DB# | RU_CP#          */
  214
  215                                    /* EQUs for LCP6_FLGS                 */
  216
  217      %EQU LCP6_STATS#='04'X;       /* Statistic being collected          */
  218      %EQU LCP6_INSTDATA#='08'X;    /* Copy of data being saved           */
  219      %EQU LCP6_INST#='02'X;        /* Processor being installed          */
  220      %EQU LCP6_REP#='01'X;         /* Processor being replaced           */
  221

