/*M* RUMSPLIT reads the ::RUM file and splits into little files */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*P*    NAME: RUMSPLIT
        PURPOSE: RUMSPLIT reads the ::RUM file and makes a bunch of
           little files each of which contains the RUMs for an
           individual processor.
        DESCRIPTION: RUMSPLIT is invoked by saying --
 
           !RUMSPLIT.wherever Rumfile OVER Template [(procname)]
 
           It reads the Rumfile looking for records which say
                 RUM procname,UTS=mm/dd/yy hh:mm:ss.hh
           When it finds one, it copies the RUM and subsequent
           records up to the next RUM into a file named --
              Templateprocnameyymmdd
           If (procname) is specified, it only makes a file for
           that processor, otherwise it does all of them.
*/
RUMSPLIT: PROC MAIN;
%INCLUDE CP_6;
%INCLUDE CP_6_SUBS;
%F$DCB;
/**/
DCL M$SI DCB;
DCL M$OU DCB;
DCL M$LO DCB;
DCL B$TCB$ PTR SYMREF;
%B$TCB(STCLASS="BASED(B$TCB$)");
%B$ALT;
DCL B$JIT$ PTR SYMREF;
%INCLUDE B$JIT;
/**/
DCL I SBIN STATIC;
DCL J SBIN STATIC;
DCL K SBIN STATIC;
DCL L SBIN STATIC;
DCL M SBIN STATIC;
DCL M$SI$ PTR STATIC;
DCL M$OU$ PTR STATIC;
DCL SKIPPING SBIN STATIC;
DCL SINRECS UBIN STATIC;
/**/
DCL SIBUF CHAR(256) STATIC;
DCL 1 LOBUF STATIC,
      2 * CHAR(2)INIT('  '),
      2 NRECS CHAR(5) INIT('     '),
      2 * CHAR(2) INIT('  '),
      2 FILENAME CHAR(31);
DCL FILENAMETEMPLATE CHAR(31) STATIC;
DCL FNTEMPLEN SBIN STATIC;
DCL PROCNAME CHAR(31) STATIC;
DCL SIARS SBIN STATIC;
DCL SIBUF$ PTR CONSTANT INIT(ADDR(SIBUF));
DCL BASEDBUF CHAR(SIARS)BASED(SIBUF$);
/**/
%FPT_READ(DCB=M$SI,STCLASS=STATIC,BUF=SIBUF,FPTN=READSI);
%FPT_WRITE(FPTN=WRITEOU,DCB=M$OU,STCLASS=STATIC,BUF=SIBUF);
%FPT_WRITE(FPTN=WRITELO,DCB=M$LO,STCLASS=STATIC,BUF=LOBUF);
%FPT_CLOSE(FPTN=SAVELO,STCLASS=STATIC,DCB=M$LO,DISP=SAVE);
%FPT_OPEN(FPTN=OPENOU,DCB=M$OU,NAME=OUFILENAME,FUN=CREATE,ORG=CONSEC);
%FPT_CLOSE(FPTN=CLOSEOU,DCB=M$OU,STCLASS=STATIC,DISP=SAVE);
%VLP_NAME(FPTN=OUFILENAME,STCLASS=STATIC,
        NAME='1234567890123456789012345678901');
%M$DCB (DCBN=M$TEMP,ASN=FILE,ORG=KEYED,DISP=SCRATCH,FUN=CREATE);
%FPT_WRITE (FPTN=WRTEMP,DCB=M$TEMP,BUF=SINRECS,KEY=OUFILENAME);
%FPT_READ (FPTN=RDTEMP,DCB=M$TEMP,BUF=SINRECS,KEY=OUFILENAME,KEYS=YES);
DCL OUEXIST UBIN STATIC;
%FPT_MERC(FPTN=FPTMERC,STCLASS=STATIC,JERR=MYERROR);
DCL 1 MYERROR STATIC,2 * BIT(33),2 SEV UBIN(3)UNAL;
DCL START_FLAG BIT(1) STATIC INIT('0'B);
/**/
%EJECT;
        IF B$JIT.CCARS>B$JIT.CCDISP+2 THEN DO;
           PROCNAME=SUBSTR(B$JIT.CCBUF,B$JIT.CCDISP+1,
              B$JIT.CCARS-B$JIT.CCDISP-2);
           END;
        ELSE PROCNAME=' ';
        M$SI$=DCBADDR(DCBNUM(M$SI));
        M$OU$=DCBADDR(DCBNUM(M$OU));
        FNTEMPLEN=M$OU$->F$DCB.NAME#.L;
        FILENAMETEMPLATE=M$OU$->F$DCB.NAME#.C;
        OUEXIST=M$OU$->F$DCB.EXIST#;
        SKIPPING=1;
NEXTSI:
        CALL M$READ(READSI)ALTRET(SIEOF);
        SIARS=M$SI$->F$DCB.ARS#;
        IF START_FLAG = '1'B AND SUBSTR(SIBUF,0,1) = '!' THEN DO;
           CALL FINISHOU;
           CALL M$EXIT;
           END;
        IF (SIARS>=4 AND SUBSTR(SIBUF,0,4)='RUM ') THEN GOTO CHUNKEND;
        IF SKIPPING ~= 0 THEN GOTO NEXTSI;
WRITERUM:
        SINRECS=SINRECS+1;
        IF SIARS=0 THEN WRITEOU.BUF_=VECTOR(NIL);
        ELSE WRITEOU.BUF_=VECTOR(BASEDBUF);
        CALL M$WRITE(WRITEOU);
        GOTO NEXTSI;
SIEOF: IF SKIPPING=0 THEN CALL FINISHOU;
        CALL M$EXIT;
CHUNKEND: IF SKIPPING=0 THEN CALL FINISHOU;
        SIBUF=BASEDBUF;
        J=4;
        DO WHILE(SUBSTR(SIBUF,J,1)=' ');
           J=J+1;
           IF J>SIARS THEN DO;
              SKIPPING=1; GOTO NEXTSI; END;
           END;
        CALL INDEX1(I,',',SUBSTR(SIBUF,J));
        IF PROCNAME~=' 'THEN IF PROCNAME~=SUBSTR(SIBUF,J,I) THEN DO;
           SKIPPING=1; GOTO NEXTSI; END;
        CALL INDEX(K,'UTS=',SUBSTR(SIBUF,J+I));
        K=K+J+I+4;
        DO WHILE(SUBSTR(SIBUF,K,1)=' ');
           K=K+1; END;
        CALL CONCAT(OUFILENAME.NAME#,SUBSTR(FILENAMETEMPLATE,0,FNTEMPLEN),
              SUBSTR(SIBUF,J,I),
              SUBSTR(SIBUF,K+6,2),
              SUBSTR(SIBUF,K,2),
              SUBSTR(SIBUF,K+3,2));
        CALL INDEX1(K,' ',OUFILENAME.NAME#);
        OUFILENAME.L#=K;
        SINRECS=0;
        OPENOU.V.EXIST#=OUEXIST;
        CALL M$READ (RDTEMP) WHENRETURN DO;
           OPENOU.V.EXIST#=%OLDFILE#;
        END;
        CALL M$OPEN(OPENOU)ALTRET(GODZILLA);
        SKIPPING=0; START_FLAG = '1'B; GOTO WRITERUM;
/*****/
GODZILLA: MYERROR=B$JIT.ERR;
        IF MYERROR.SEV=0 THEN MYERROR.SEV=1;
        CALL M$MERC(FPTMERC);
        CALL M$XXX;
/**********/
FINISHOU: PROC;
        CALL M$WRITE (WRTEMP) WHENRETURN DO; END;
        CALL M$CLOSE(CLOSEOU);
        CALL BINCHAR(LOBUF.NRECS,SINRECS);
        LOBUF.FILENAME=OUFILENAME.NAME#;
        CALL M$WRITE(WRITELO);
        RETURN;
        END FINISHOU;
END RUMSPLIT;
