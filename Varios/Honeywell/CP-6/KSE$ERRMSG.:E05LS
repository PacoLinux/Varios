VERSION E05

PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:1    
        1        1        /*M* KSE$ERRMSG - ERROR MESSAGE ROUTINE FOR NETCON */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        KSE$ERRMSG: PROC(CODE,F1,F2,F3);
        9        9        /**/
       10       10        /* PARAMS */
       11       11    1   DCL CODE UBIN WORD;
       12       12    1   DCL F1 VECTOR DALIGNED;
       13       13    1   DCL F2 VECTOR DALIGNED;
       14       14    1   DCL F3 VECTOR DALIGNED;
       15       15        /**/
       16       16        /* INCLUDES */
       17       17        %INCLUDE CP_6;
       18       98        %INCLUDE KL_MACRO_C;
       19     3450        %INCLUDE KS_MACRO_M;
       20     3647        %INCLUDE KS_SUBS_C;
       21     3890        %INCLUDE KS_DATA_R;
       22     3905        /**/
       23     3906        /* MACROS */
       24     3907        %B$TCB;
       25     3910        %B$ALT;
       26     3918        /**/
       27     3919        /* ENTRY DCLS */
       28     3920    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
       29     3921        /**/
       30     3922        /* SYMREFS */
       31     3923    1   DCL B$TCB$ PTR SYMREF;
       32     3924        /**/
       33     3925    1   DCL DCB# UBIN;
       34     3926        %EJECT;
PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:2    
       35     3927    2      IF CODE = 0 THEN DO;
       36     3928    2         KS_ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
       37     3929    2         KS_ERRCODE.SEV = 0;
       38     3930    2         DCB# = B$TCB$->B$TCB.ALT$->B$ALT.DCB#;
       39     3931    2         CALL XUR$ERRMSG(KS_ERRCODE,DCB#);
       40     3932    2         END;  /* IF CODE = 0 */
       41     3933    2      ELSE DO;
       42     3934    2         KS_ERRCODE = '132316000000'O;
       43     3935    2         KS_ERRCODE.CODE = CODE;
       44     3936    2         CALL XUR$ERRMSG(KS_ERRCODE,,,F1,F2,F3) WHENALTRETURN
       45     3937    3           DO;
       46     3938                /*N* what should we do when altreturn*/
       47     3939    3           KS_ERRCODE = '11111'O;
       48     3940    3           END;
       49     3941    2         END;  /* ELSE */
       50     3942    1      RETURN;
       51     3943    1   END KSE$ERRMSG;

PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:3    
--  Include file information  --

   KS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KS_SUBS_C.:E05TOU  is referenced.
   KS_MACRO_M.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSE$ERRMSG.

   Procedure KSE$ERRMSG requires 47 words for executable code.
   Procedure KSE$ERRMSG requires 14 words of local(AUTO) storage.

    No errors detected in file KSE$ERRMSG.:E05TSI    .

PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:4    

 Object Unit name= KSE$ERRMSG                                 File name= KSE$ERRMSG.:E05TOU
 UTS= JUL 30 '97 01:42:42.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  KSE$ERRMSG
    2   Proc  even  none    47     57  KSE$ERRMSG
    3  RoData even  none     2      2  KSE$ERRMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        4  KSE$ERRMSG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       7 XUR$ERRMSG
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KS_MYSTATION                          KS_ERRCODE
     KS_MSGBUF$                            B$TCB$                                B_VECTNIL
PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:5    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:6    


        1        1        /*M* KSE$ERRMSG - ERROR MESSAGE ROUTINE FOR NETCON */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        KSE$ERRMSG: PROC(CODE,F1,F2,F3);

      8  2 000000   000000 700200 xent  KSE$ERRMSG   TSX0  ! X66_AUTO_4
         2 000001   000016 000004                    ZERO    14,4

        9        9        /**/
       10       10        /* PARAMS */
       11       11    1   DCL CODE UBIN WORD;
       12       12    1   DCL F1 VECTOR DALIGNED;
       13       13    1   DCL F2 VECTOR DALIGNED;
       14       14    1   DCL F3 VECTOR DALIGNED;
       15       15        /**/
       16       16        /* INCLUDES */
       17       17        %INCLUDE CP_6;
       18       98        %INCLUDE KL_MACRO_C;
       19     3450        %INCLUDE KS_MACRO_M;
       20     3647        %INCLUDE KS_SUBS_C;
       21     3890        %INCLUDE KS_DATA_R;
       22     3905        /**/
       23     3906        /* MACROS */
       24     3907        %B$TCB;
       25     3910        %B$ALT;
       26     3918        /**/
       27     3919        /* ENTRY DCLS */
       28     3920    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
       29     3921        /**/
       30     3922        /* SYMREFS */
       31     3923    1   DCL B$TCB$ PTR SYMREF;
       32     3924        /**/
PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:7    
       33     3925    1   DCL DCB# UBIN;
       34     3926        %EJECT;
PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:8    
       35     3927    2      IF CODE = 0 THEN DO;

   3927  2 000002   200003 470500                    LDP0    @CODE,,AUTO
         2 000003   000000 235100                    LDA     0,,PR0
         2 000004   000027 601000 2                  TNZ     s:3934

       36     3928    2         KS_ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   3928  2 000005   000000 471400 xsym               LDP1    B$TCB$
         2 000006   100000 473500                    LDP3    0,,PR1
         2 000007   300102 236100                    LDQ     66,,PR3
         2 000010   000000 756000 xsym               STQ     KS_ERRCODE

       37     3929    2         KS_ERRCODE.SEV = 0;

   3929  2 000011   000000 236000 3                  LDQ     0
         2 000012   000000 356000 xsym               ANSQ    KS_ERRCODE

       38     3930    2         DCB# = B$TCB$->B$TCB.ALT$->B$ALT.DCB#;

   3930  2 000013   100000 473500                    LDP3    0,,PR1
         2 000014   300101 235100                    LDA     65,,PR3
         2 000015   200007 755100                    STA     DCB#,,AUTO

       39     3931    2         CALL XUR$ERRMSG(KS_ERRCODE,DCB#);

   3931  2 000016   200007 633500                    EPPR3   DCB#,,AUTO
         2 000017   200011 453500                    STP3    DCB#+2,,AUTO
         2 000020   000001 236000 3                  LDQ     1
         2 000021   200010 756100                    STQ     DCB#+1,,AUTO
         2 000022   200010 630500                    EPPR0   DCB#+1,,AUTO
         2 000023   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000024   000000 701000 xent               TSX1    XUR$ERRMSG
         2 000025   000000 011000                    NOP     0

       40     3932    2         END;  /* IF CODE = 0 */

PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:9    
   3932  2 000026   000056 710000 2                  TRA     s:3942

       41     3933    2      ELSE DO;

       42     3934    2         KS_ERRCODE = '132316000000'O;

   3934  2 000027   000000 236000 1                  LDQ     0
         2 000030   000000 756000 xsym               STQ     KS_ERRCODE

       43     3935    2         KS_ERRCODE.CODE = CODE;

   3935  2 000031   000000 236100                    LDQ     0,,PR0
         2 000032   000003 736000                    QLS     3
         2 000033   000000 676000 xsym               ERQ     KS_ERRCODE
         2 000034   377770 376007                    ANQ     131064,DL
         2 000035   000000 656000 xsym               ERSQ    KS_ERRCODE

       44     3936    2         CALL XUR$ERRMSG(KS_ERRCODE,,,F1,F2,F3) WHENALTRETURN

   3936  2 000036   200006 236100                    LDQ     @F3,,AUTO
         2 000037   200005 235100                    LDA     @F2,,AUTO
         2 000040   200014 757100                    STAQ    DCB#+5,,AUTO
         2 000041   200004 236100                    LDQ     @F1,,AUTO
         2 000042   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000043   200012 757100                    STAQ    DCB#+3,,AUTO
         2 000044   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000045   000001 235000 3                  LDA     1
         2 000046   200010 757100                    STAQ    DCB#+1,,AUTO
         2 000047   200010 630500                    EPPR0   DCB#+1,,AUTO
         2 000050   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000051   000000 701000 xent               TSX1    XUR$ERRMSG
         2 000052   000054 702000 2                  TSX2    s:3939
         2 000053   000056 710000 2                  TRA     s:3942

       45     3937    3           DO;

       46     3938                /*N* what should we do when altreturn*/
PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:10   
       47     3939    3           KS_ERRCODE = '11111'O;

   3939  2 000054   111110 236003                    LDQ     37448,DU
         2 000055   000000 756000 xsym               STQ     KS_ERRCODE

       48     3940    3           END;

       49     3941    2         END;  /* ELSE */

       50     3942    1      RETURN;

   3942  2 000056   000000 702200 xent               TSX2  ! X66_ARET
       51     3943    1   END KSE$ERRMSG;

PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:11   
--  Include file information  --

   KS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KS_SUBS_C.:E05TOU  is referenced.
   KS_MACRO_M.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSE$ERRMSG.
PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:12   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CODE                      4-0-0/w PTR         r     1 @F1
     5-0-0/w PTR         r     1 @F2                        6-0-0/w PTR         r     1 @F3
    *0-0-0/w UBIN        r     1 CODE                       7-0-0/w UBIN        r     1 DCB#
    *0-0-0/d VECT        r     1 F1                        *0-0-0/d VECT        r     1 F2
    *0-0-0/d VECT        r     1 F3

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC        r     1 KS_ERRCODE
     0-0-0/w PTR         r     1 KS_MSGBUF$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB


   Procedure KSE$ERRMSG requires 47 words for executable code.
   Procedure KSE$ERRMSG requires 14 words of local(AUTO) storage.

    No errors detected in file KSE$ERRMSG.:E05TSI    .
PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:13   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:14   
          MINI XREF LISTING

B$ALT.CODE
      3912**DCL      3912--REDEF    3913--REDEF    3913--REDEF
B$ALT.DCB#
      3913**DCL      3930>>ASSIGN
B$ALT.ERR
      3913**DCL      3928>>ASSIGN
B$ALT.ERR.ERR#
      3914**DCL      3914--REDEF
B$ALT.EVID
      3913**DCL      3913--REDEF    3913--REDEF
B$TCB.ALT$
      3908**DCL      3928>>ASSIGN   3930>>ASSIGN
B$TCB$
      3923**DCL      3928>>ASSIGN   3930>>ASSIGN
CODE
        11**DCL         8--PROC     3927>>IF       3935>>ASSIGN
DCB#
      3925**DCL      3930<<ASSIGN   3931<>CALL
F1
        12**DCL         8--PROC     3936<>CALL
F2
        13**DCL         8--PROC     3936<>CALL
F3
        14**DCL         8--PROC     3936<>CALL
KS_ERRCODE
      3900**DCL      3928<<ASSIGN   3931<>CALL     3934<<ASSIGN   3936<>CALL     3939<<ASSIGN
KS_ERRCODE.CODE
      3901**DCL      3935<<ASSIGN
KS_ERRCODE.SEV
      3901**DCL      3929<<ASSIGN
KS_MSGBUF$
      3902**DCL      3902--IMP-PTR
PL6.E3A0      #001=KSE$ERRMSG File=KSE$ERRMSG.:E05TSI                            WED 07/30/97 01:42 Page:15   
KS_MYSTATION
      3898**DCL      3898--REDEF
XUR$ERRMSG
      3920**DCL-ENT  3931--CALL     3936--CALL
