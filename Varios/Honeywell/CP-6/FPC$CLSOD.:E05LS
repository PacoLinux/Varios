VERSION E05

PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6
        7        7        FPC$CLSOD: PROC(PN$);
        8        8
        9        9        /*F*     NAME: FPC$CLSOD
       10       10                 PURPOSE: Close an OD DCB.
       11       11                 INPUT: PN$ - pointer to V area of FPT$CLOSE.
       12       12                    PN$.SN_ - pointer to serial number list if not ADDR(NIL).
       13       13         ***/
       14       14        /*P*     NAME: FPC$CLSOD
       15       15                 PURPOSE: Close an OD DCB.
       16       16                 DESCRIPTION: FPC$CLSOD is called with the pointer area
       17       17                    of the close FPT.  If the file is an output file,
       18       18                    EOF labels are written. The serial number
       19       19                    list is returned if requested.
       20       20         ***/
       21       21
       22       22         /***
       23       23          *** INCLUDE data:
       24       24          ***/
       25       25
       26       26        %INCLUDE B$JIT_C;
       27      340           %B$JIT0;
       28      429           %U$JIT1X;
       29      432           %M$JIT2X;
       30      435           %F$JIT3;
       31      440           %S$JIT4X;
       32      443           %J$JIT5X;
       33      446           %A$JIT6X;
       34      449        %INCLUDE B_PTRS_R;
       35      457        %INCLUDE CP_6_SUBS;
       36      997        %INCLUDE CP_6;
       37     6556        %INCLUDE F$CP6P_C;
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:2    
       38     6567        %INCLUDE F$CP6V_C;
       39     6793           %FPT$CLOSE_V;
       40     6802           %FPT$REM_V;
       41     6805           %FPT$REW_V;
       42     6808           %VLP$SN_V;
       43     6811        %MACRO F$DCBBJ(BASED=BASED);
       44     6812        %INCLUDE F$DCB;
       45     6861        %MEND;
       46     6862           %F$DCBBJ(BASED="BASED(JDCB$)");
       47     6912        %INCLUDE F_ERRORS_C;
       48     7152        %INCLUDE FM$CFU;
       49     7197           %FM$CFUJ;
       50     7202           %FT$CFUSN;
       51     7205        %INCLUDE FR_SUBS;
       52     7273        %MACRO FT$DDTBD(BASED=BASED);
       53     7274        %INCLUDE FT$DDT;
       54     7335        %MEND;
       55     7336           %FT$DDTBD(BASED="BASED(DDDT$)");
       56     7398        %INCLUDE FT_SUBS;
       57     7478        %INCLUDE NK$LDCT;
       58     7580           %NK$LDCT;
       59     7626        %INCLUDE NK_LDCT_R;
       60     7635
       61     7636         /***
       62     7637          *** External routines:
       63     7638          ***/
       64     7639
       65     7640    1   DCL FRB$CLS ENTRY;                      /* Close resource                     */
       66     7641    1   DCL FRB$CREL ENTRY;                     /* Close resource and release         */
       67     7642    1   DCL FRB$CREM ENTRY;                     /* Close resource and remove          */
       68     7643    1   DCL FRZ$RRR ENTRY(3) ALTRET;       /* Remove/release drive by serial number   */
       69     7644    1   DCL FSA$FSP ENTRY(2) ALTRET;            /* Free RO space                      */
       70     7645    1   DCL FTR$RELCFUS ENTRY ALTRET;           /* Release all CFUs                   */
       71     7646    1   DCL FTR$RELFPOOLS ENTRY ALTRET;         /* Release all FPOOL buffer           */
       72     7647    1   DCL FTL$CLOSE ENTRY(5) ALTRET;          /* Process end of file labels         */
       73     7648    1   DCL FTL$GETFSN ENTRY ALTRET;            /* Get FSN from next HDR1             */
       74     7649    1   DCL FTL$PBSN ENTRY(3) ALTRET;           /* Position to beginning of section   */
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:3    
       75     7650    1   DCL FTW$TRNCHLD ENTRY ALTRET;           /* Trunc but hold FPOOL buffer        */
       76     7651    1   DCL HFF$DSIZ ENTRY(2) ALTRET;           /* Determine size of segment          */
       77     7652
       78     7653         /***
       79     7654          *** SYMREF data:
       80     7655          ***/
       81     7656
       82     7657    1   DCL B$JIT$ PTR SYMREF;                  /* Pointer to JIT                     */
       83     7658    1   DCL F$CFU$ PTR SYMREF;                  /* Pointer to CFU area                */
       84     7659
       85     7660         /***
       86     7661          *** Parameter:
       87     7662          ***/
       88     7663
       89     7664        %FPT$CLOSE_P(FPTN=PN$,PFMT=PTR,STCLASS=" ");
       90     7668
       91     7669         /***
       92     7670          *** AUTO data:
       93     7671          ***/
       94     7672
       95     7673    1   DCL BUFSIZ SBIN WORD AUTO;              /* User buffer size                   */
       96     7674    1   DCL CFU$ PTR;                           /* Pointer to current SN CFU          */
       97     7675    1   DCL DCTX UBIN WORD AUTO;                /* Returned DCTX                      */
       98     7676    1   DCL DDDT$ PTR AUTO;                     /* Pointer to DDT entry for drive     */
       99     7677    1   DCL DFLTCLOSE SBIN AUTO;           /* Flag indicating if default close or not */
      100     7678    1   DCL DSRDLBL CHAR(3) AUTO;          /* Used to pass and receive label type     */
      101     7679    1   DCL ERRSAV BIT(36) AUTO;                /* To save JIT.ERR                    */
      102     7680    1   DCL FCN UBIN WORD AUTO;                 /* Function code                      */
      103     7681    1   DCL I SBIN AUTO;                        /* Indexing uses                      */
      104     7682    1   DCL J SBIN AUTO;                        /* Indexing uses                      */
      105     7683    1   DCL JDCB$ PTR AUTO;                     /* Pointer to DCB                     */
      106     7684    1   DCL POS SBIN AUTO;                      /* Positioning information            */
      107     7685    1   DCL SN$ PTR AUTO;                       /* Pointer to user's SN list          */
      108     7686    1   DCL TEMP SBIN AUTO;                     /* Temporary integer                  */
      109     7687    1   DCL TEMP$ PTR AUTO;                     /* Temp pointer                       */
      110     7688    1   DCL A_SN CHAR(6) AUTO;                  /* A serial number                    */
      111     7689    1   DCL TOTLEFT SBIN WORD AUTO;             /* Number of items left               */
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:4    
      112     7690
      113     7691         /***
      114     7692          *** EQUs:
      115     7693          ***/
      116     7694
      117     7695        %EQU SNSPERCFU=4;                       /* Number of serial number per CFU    */
      118     7696         /***
      119     7697          *** CONSTANT:
      120     7698          ***/
      121     7699
      122     7700        %FT$ERR( ERRNAME=E_PARTIALSN, MID='03'O, CODE=%E$PARTIALSN, SEV=0 );
      123     7708        /*E*     ERROR: FPO-E$PARTIALSN
      124     7709                 MESSAGE: Incomplete SN list returned% for DCB %DC%
      125     7710                 MESSAGE1: Not enough space was supplied to return the
      126     7711                           entire serial number list% for DCB %DC%.
      127     7712         ***/
      128     7713
      129     7714        /********************/
      130     7715
      131     7716    1      DFLTCLOSE = 0;                       /* Not default close                  */
      132     7717    1      GOTO BEGINCLOSE;
      133     7718
      134     7719    1   FPC$DFLTCLOSE: ENTRY;
      135     7720        /*F*     NAME: FPC$DFLTCLOSE
      136     7721                 PURPOSE: Close an OD DCB with no FPT.
      137     7722         ***/
      138     7723
      139     7724
      140     7725    1      DFLTCLOSE = 1;                       /* Default close                      */
      141     7726
      142     7727    1   BEGINCLOSE: ;
      143     7728
      144     7729         /***
      145     7730          *** Undo RECL for possible subsequent M$OPEN.
      146     7731          ***/
      147     7732
      148     7733    1      JDCB$ = B$JIT.DCB$;
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:5    
      149     7734    2      IF F$DCB.ORG = %VARIABLE# THEN DO;
      150     7735    2         IF F$DCB.RECL ~= 0 AND
      151     7736    2            F$DCB.SPANNED THEN
      152     7737    2               F$DCB.RECL = F$DCB.RECL - 5;
      153     7738    2          ELSE
      154     7739    2               F$DCB.RECL = F$DCB.RECL - 4;
      155     7740    2         END;
      156     7741
      157     7742    1      I = F$DCB.SETX;
      158     7743    1      IF I <= 0 THEN
      159     7744    1          GOTO FREEFPOOLS;
      160     7745    1      DDDT$ = NK$LDCT$(I)->NK$LDCT.DDT$;
      161     7746    2      IF F$DCB.ASN ~= %DEVICE# THEN DO;
      162     7747    2         DSRDLBL = 'EOF';
      163     7748    2         CALL FTL$CLOSE( DSRDLBL,ADDR(NIL),0, ,0);
      164     7749    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
      165     7750              /* If a buffer has been provided, return the serial number list. */
      166     7751
      167     7752    3         IF DFLTCLOSE = 0 THEN DO;
      168     7753    3              CALL HFF$DSIZ (POFFW(ADDR(PN$.SN_),
      169     7754    3                       ADDR(PN$.V_)),
      170     7755    3                       BUFSIZ)         ALTRET(FREEFPOOLS);
      171     7756    3               SN$ = PN$.SN_;    /* Get pointer to SN list buffer      */
      172     7757    3               CALL FPO_SNLIST;
      173     7758    3         END;
      174     7759
      175     7760              /* Free FPOOLs, CFUs, and any RO space.    */
      176     7761
      177     7762    2   FREEFPOOLS: ;
      178     7763    2         IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED# THEN
      179     7764    2            IF F$DCB.ACS = %SEQUEN# AND F$DCB.FUN = %CREATE# THEN
      180     7765                    /* Free RO space used for last key area */
      181     7766    2               CALL FSA$FSP(64,F$DCB.LASTKEY$);
      182     7767    2      END;
      183     7768    1      ELSE
      184     7769    1         IF F$DCB.PSN = ' ' THEN
      185     7770    1            RETURN;
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:6    
      186     7771
      187     7772    1      CALL FTR$RELFPOOLS;
      188     7773    1      CALL FTR$RELCFUS;
      189     7774
      190     7775    2      IF DFLTCLOSE = 1 THEN DO;
      191     7776    2         CALL FRB$CLS;
      192     7777    2         RETURN;
      193     7778    2         END;
      194     7779
      195     7780    1      IF PN$.V_ ~= ADDR(NIL) THEN
      196     7781    2         DO CASE (PN$.V_->FPT$CLOSE_V.POS);
      197     7782    2          CASE(%REM#);
      198     7783    2            CALL FRB$CREM;
      199     7784    2          CASE(%REL#);
      200     7785    2            CALL FRB$CREL;
      201     7786    2          CASE(ELSE);
      202     7787    2            CALL FRB$CLS;
      203     7788    2          END;
      204     7789    1      ELSE
      205     7790    1         CALL FRB$CLS;
      206     7791
      207     7792    1      RETURN;
      208     7793
      209     7794        %EJECT;
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:7    
      210     7795        /*********************************************************************/
      211     7796    1   FPO_SNLIST: PROC;
      212     7797        /*F*     NAME: FPO_SNLIST
      213     7798                 PURPOSE: Return serial number list in user buffer.
      214     7799         ***/
      215     7800
      216     7801        /********************/
      217     7802
      218     7803         /***
      219     7804          *** If no user buffer, just return.  If no CFU SN list,
      220     7805          *** just return single SN.
      221     7806          ***/
      222     7807
      223     7808    2      IF SN$=ADDR(NIL) OR BUFSIZ <= 0 THEN
      224     7809    2         RETURN;
      225     7810    2      BUFSIZ = (BUFSIZ - LENGTHC(SN$->VLP$SN_V.NUM))
      226     7811    2        / LENGTHC(SN$->VLP$SN_V.SN(0));    /* Calc number of SNs                 */
      227     7812    2      CFU$ = F$DCB.CFU$;                   /* Get CFU pointer                    */
      228     7813    3      IF CFU$ = ADDR(NIL) THEN DO;         /* Any SN list?                       */
      229     7814              /* No--return single SN only          */
      230     7815    3         SN$->VLP$SN_V.NUM = 1;
      231     7816    3         SN$->VLP$SN_V.SN(0) = F$DCB.PSN;
      232     7817    3         RETURN;
      233     7818    3         END;
      234     7819
      235     7820         /***
      236     7821          ***   We have a list of SNs.   Move as many as we can to the
      237     7822          ***   user's buffer.
      238     7823          ***/
      239     7824
      240     7825    2      I = 0;
      241     7826    2      TOTLEFT = BUFSIZ;                    /* Remember # that can be moved       */
      242     7827    3      DO WHILE( CFU$ ~= ADDR(NIL) );
      243     7828    3         TEMP = 0;
      244     7829    4         DO WHILE( TEMP < CFU$->FT$CFUSN.NUM );
      245     7830    4            SN$->VLP$SN_V.SN(I) = CFU$->FT$CFUSN.SN(TEMP);
      246     7831    4            I = I + 1;
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:8    
      247     7832    4            TEMP = TEMP + 1;
      248     7833    4            TOTLEFT = TOTLEFT - 1;
      249     7834    5            IF TOTLEFT <= 0 THEN DO;
      250     7835    6               IF TEMP < CFU$->FT$CFUSN.NUM OR CFU$->FT$CFUSN.LINKX ~= 0 THEN DO;
      251     7836                       /* No space for SNs                   */
      252     7837    6                  IF NOT B$JIT.ERR THEN
      253     7838    6                     B$JIT.ERR = E_PARTIALSN;
      254     7839                          /*E* ERROR: FPO-E$PARTIALSN */
      255     7840    6                  SN$->VLP$SN_V.NUM = BUFSIZ;
      256     7841    6                  RETURN;
      257     7842    6                  END;
      258     7843    5               END;
      259     7844    4            END;
      260     7845    3         J = CFU$->FT$CFUSN.LINKX;         /* On to next CFU                     */
      261     7846    3         IF J = 0 THEN
      262     7847    3            CFU$ = ADDR(NIL);
      263     7848    3         ELSE
      264     7849    3            CFU$ = PINCRW( F$CFU$, J );
      265     7850    3         END;
      266     7851
      267     7852         /***
      268     7853          *** Return number of SNs.
      269     7854          ***/
      270     7855
      271     7856    2      SN$->VLP$SN_V.NUM = BUFSIZ - TOTLEFT;
      272     7857    2      RETURN;
      273     7858
      274     7859    2   END FPO_SNLIST;
      275     7860    1   END FPC$CLSOD;

PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:9    
--  Include file information  --

   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FT$DDT.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F$CP6P_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_PTRS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FPC$CLSOD.

   Procedure FPC$CLSOD requires 257 words for executable code.
   Procedure FPC$CLSOD requires 30 words of local(AUTO) storage.

    No errors detected in file FPC$CLSOD.:E05TSI    .

PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:10   

 Object Unit name= FPC$CLSOD                                  File name= FPC$CLSOD.:E05TOU
 UTS= JUL 29 '97 17:17:43.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  FPC$CLSOD
    2   Proc  even  none   257    401  FPC$CLSOD
    3  RoData even  none     4      4  FPC$CLSOD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  FPC$CLSOD
     2      4                  yes      Std        0  FPC$DFLTCLOSE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       5 FTL$CLOSE
 yes     yes           Std       2 HFF$DSIZ
         yes           Std       0 FRB$CLS
 yes     yes           Std       2 FSA$FSP
 yes     yes           Std       0 FTR$RELFPOOLS
 yes     yes           Std       0 FTR$RELCFUS
         yes           Std       0 FRB$CREM
         yes           Std       0 FRB$CREL
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  N$DCT$$                               B$JIT$
     F$CFU$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:12   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6
        7        7        FPC$CLSOD: PROC(PN$);

      7  2 000000   000000 700200 xent  FPC$CLSOD    TSX0  ! X66_AUTO_1
         2 000001   000036 000001                    ZERO    30,1

        8        8
        9        9        /*F*     NAME: FPC$CLSOD
       10       10                 PURPOSE: Close an OD DCB.
       11       11                 INPUT: PN$ - pointer to V area of FPT$CLOSE.
       12       12                    PN$.SN_ - pointer to serial number list if not ADDR(NIL).
       13       13         ***/
       14       14        /*P*     NAME: FPC$CLSOD
       15       15                 PURPOSE: Close an OD DCB.
       16       16                 DESCRIPTION: FPC$CLSOD is called with the pointer area
       17       17                    of the close FPT.  If the file is an output file,
       18       18                    EOF labels are written. The serial number
       19       19                    list is returned if requested.
       20       20         ***/
       21       21
       22       22         /***
       23       23          *** INCLUDE data:
       24       24          ***/
       25       25
       26       26        %INCLUDE B$JIT_C;
       27      340           %B$JIT0;
       28      429           %U$JIT1X;
       29      432           %M$JIT2X;
       30      435           %F$JIT3;
       31      440           %S$JIT4X;
       32      443           %J$JIT5X;
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:13   
       33      446           %A$JIT6X;
       34      449        %INCLUDE B_PTRS_R;
       35      457        %INCLUDE CP_6_SUBS;
       36      997        %INCLUDE CP_6;
       37     6556        %INCLUDE F$CP6P_C;
       38     6567        %INCLUDE F$CP6V_C;
       39     6793           %FPT$CLOSE_V;
       40     6802           %FPT$REM_V;
       41     6805           %FPT$REW_V;
       42     6808           %VLP$SN_V;
       43     6811        %MACRO F$DCBBJ(BASED=BASED);
       44     6812        %INCLUDE F$DCB;
       45     6861        %MEND;
       46     6862           %F$DCBBJ(BASED="BASED(JDCB$)");
       47     6912        %INCLUDE F_ERRORS_C;
       48     7152        %INCLUDE FM$CFU;
       49     7197           %FM$CFUJ;
       50     7202           %FT$CFUSN;
       51     7205        %INCLUDE FR_SUBS;
       52     7273        %MACRO FT$DDTBD(BASED=BASED);
       53     7274        %INCLUDE FT$DDT;
       54     7335        %MEND;
       55     7336           %FT$DDTBD(BASED="BASED(DDDT$)");
       56     7398        %INCLUDE FT_SUBS;
       57     7478        %INCLUDE NK$LDCT;
       58     7580           %NK$LDCT;
       59     7626        %INCLUDE NK_LDCT_R;
       60     7635
       61     7636         /***
       62     7637          *** External routines:
       63     7638          ***/
       64     7639
       65     7640    1   DCL FRB$CLS ENTRY;                      /* Close resource                     */
       66     7641    1   DCL FRB$CREL ENTRY;                     /* Close resource and release         */
       67     7642    1   DCL FRB$CREM ENTRY;                     /* Close resource and remove          */
       68     7643    1   DCL FRZ$RRR ENTRY(3) ALTRET;       /* Remove/release drive by serial number   */
       69     7644    1   DCL FSA$FSP ENTRY(2) ALTRET;            /* Free RO space                      */
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:14   
       70     7645    1   DCL FTR$RELCFUS ENTRY ALTRET;           /* Release all CFUs                   */
       71     7646    1   DCL FTR$RELFPOOLS ENTRY ALTRET;         /* Release all FPOOL buffer           */
       72     7647    1   DCL FTL$CLOSE ENTRY(5) ALTRET;          /* Process end of file labels         */
       73     7648    1   DCL FTL$GETFSN ENTRY ALTRET;            /* Get FSN from next HDR1             */
       74     7649    1   DCL FTL$PBSN ENTRY(3) ALTRET;           /* Position to beginning of section   */
       75     7650    1   DCL FTW$TRNCHLD ENTRY ALTRET;           /* Trunc but hold FPOOL buffer        */
       76     7651    1   DCL HFF$DSIZ ENTRY(2) ALTRET;           /* Determine size of segment          */
       77     7652
       78     7653         /***
       79     7654          *** SYMREF data:
       80     7655          ***/
       81     7656
       82     7657    1   DCL B$JIT$ PTR SYMREF;                  /* Pointer to JIT                     */
       83     7658    1   DCL F$CFU$ PTR SYMREF;                  /* Pointer to CFU area                */
       84     7659
       85     7660         /***
       86     7661          *** Parameter:
       87     7662          ***/
       88     7663
       89     7664        %FPT$CLOSE_P(FPTN=PN$,PFMT=PTR,STCLASS=" ");
       90     7668
       91     7669         /***
       92     7670          *** AUTO data:
       93     7671          ***/
       94     7672
       95     7673    1   DCL BUFSIZ SBIN WORD AUTO;              /* User buffer size                   */
       96     7674    1   DCL CFU$ PTR;                           /* Pointer to current SN CFU          */
       97     7675    1   DCL DCTX UBIN WORD AUTO;                /* Returned DCTX                      */
       98     7676    1   DCL DDDT$ PTR AUTO;                     /* Pointer to DDT entry for drive     */
       99     7677    1   DCL DFLTCLOSE SBIN AUTO;           /* Flag indicating if default close or not */
      100     7678    1   DCL DSRDLBL CHAR(3) AUTO;          /* Used to pass and receive label type     */
      101     7679    1   DCL ERRSAV BIT(36) AUTO;                /* To save JIT.ERR                    */
      102     7680    1   DCL FCN UBIN WORD AUTO;                 /* Function code                      */
      103     7681    1   DCL I SBIN AUTO;                        /* Indexing uses                      */
      104     7682    1   DCL J SBIN AUTO;                        /* Indexing uses                      */
      105     7683    1   DCL JDCB$ PTR AUTO;                     /* Pointer to DCB                     */
      106     7684    1   DCL POS SBIN AUTO;                      /* Positioning information            */
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:15   
      107     7685    1   DCL SN$ PTR AUTO;                       /* Pointer to user's SN list          */
      108     7686    1   DCL TEMP SBIN AUTO;                     /* Temporary integer                  */
      109     7687    1   DCL TEMP$ PTR AUTO;                     /* Temp pointer                       */
      110     7688    1   DCL A_SN CHAR(6) AUTO;                  /* A serial number                    */
      111     7689    1   DCL TOTLEFT SBIN WORD AUTO;             /* Number of items left               */
      112     7690
      113     7691         /***
      114     7692          *** EQUs:
      115     7693          ***/
      116     7694
      117     7695        %EQU SNSPERCFU=4;                       /* Number of serial number per CFU    */
      118     7696         /***
      119     7697          *** CONSTANT:
      120     7698          ***/
      121     7699
      122     7700        %FT$ERR( ERRNAME=E_PARTIALSN, MID='03'O, CODE=%E$PARTIALSN, SEV=0 );
      123     7708        /*E*     ERROR: FPO-E$PARTIALSN
      124     7709                 MESSAGE: Incomplete SN list returned% for DCB %DC%
      125     7710                 MESSAGE1: Not enough space was supplied to return the
      126     7711                           entire serial number list% for DCB %DC%.
      127     7712         ***/
      128     7713
      129     7714        /********************/
      130     7715
      131     7716    1      DFLTCLOSE = 0;                       /* Not default close                  */

   7716  2 000002   200010 450100                    STZ     DFLTCLOSE,,AUTO

      132     7717    1      GOTO BEGINCLOSE;

   7717  2 000003   000010 710000 2                  TRA     BEGINCLOSE

      133     7718
      134     7719    1   FPC$DFLTCLOSE: ENTRY;

   7719  2 000004   000000 700200 xent  FPC$DFLTCLO* TSX0  ! X66_AUTO_1
         2 000005   000036 000001                    ZERO    30,1
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:16   

      135     7720        /*F*     NAME: FPC$DFLTCLOSE
      136     7721                 PURPOSE: Close an OD DCB with no FPT.
      137     7722         ***/
      138     7723
      139     7724
      140     7725    1      DFLTCLOSE = 1;                       /* Default close                      */

   7725  2 000006   000001 235007                    LDA     1,DL
         2 000007   200010 755100                    STA     DFLTCLOSE,,AUTO

   7725  2 000010                       BEGINCLOSE   null
      141     7726
      142     7727    1   BEGINCLOSE: ;
      143     7728
      144     7729         /***
      145     7730          *** Undo RECL for possible subsequent M$OPEN.
      146     7731          ***/
      147     7732
      148     7733    1      JDCB$ = B$JIT.DCB$;

   7733  2 000010   000000 470400 xsym               LDP0    B$JIT$
         2 000011   000232 236100                    LDQ     154,,PR0
         2 000012   200016 756100                    STQ     JDCB$,,AUTO

      149     7734    2      IF F$DCB.ORG = %VARIABLE# THEN DO;

   7734  2 000013   200016 471500                    LDP1    JDCB$,,AUTO
         2 000014   100032 236100                    LDQ     26,,PR1
         2 000015   777000 376003                    ANQ     -512,DU
         2 000016   020000 116003                    CMPQ    8192,DU
         2 000017   000032 601000 2                  TNZ     s:7742

      150     7735    2         IF F$DCB.RECL ~= 0 AND

   7735  2 000020   100033 720100                    LXL0    27,,PR1
         2 000021   000030 600000 2                  TZE     s:7739
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:17   
         2 000022   100031 236100                    LDQ     25,,PR1
         2 000023   000004 316007                    CANQ    4,DL
         2 000024   000030 600000 2                  TZE     s:7739

      151     7736    2            F$DCB.SPANNED THEN
      152     7737    2               F$DCB.RECL = F$DCB.RECL - 5;

   7737  2 000025   777773 621010                    EAX1    -5,X0
         2 000026   100033 441100                    SXL1    27,,PR1
         2 000027   000032 710000 2                  TRA     s:7742

      153     7738    2          ELSE
      154     7739    2               F$DCB.RECL = F$DCB.RECL - 4;

   7739  2 000030   777774 621010                    EAX1    -4,X0
         2 000031   100033 441100                    SXL1    27,,PR1

      155     7740    2         END;

      156     7741
      157     7742    1      I = F$DCB.SETX;

   7742  2 000032   100051 236100                    LDQ     41,,PR1
         2 000033   777777 376007                    ANQ     -1,DL
         2 000034   200014 756100                    STQ     I,,AUTO

      158     7743    1      IF I <= 0 THEN

   7743  2 000035   000126 604400 2                  TMOZ    FREEFPOOLS

      159     7744    1          GOTO FREEFPOOLS;
      160     7745    1      DDDT$ = NK$LDCT$(I)->NK$LDCT.DDT$;

   7745  2 000036   000000 473400 xsym               LDP3    N$DCT$$
         2 000037   300000 474506                    LDP4    0,QL,PR3
         2 000040   400004 236100                    LDQ     4,,PR4
         2 000041   200007 756100                    STQ     DDDT$,,AUTO
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:18   

      161     7746    2      IF F$DCB.ASN ~= %DEVICE# THEN DO;

   7746  2 000042   100032 236100                    LDQ     26,,PR1
         2 000043   777000 376007                    ANQ     -512,DL
         2 000044   003000 116007                    CMPQ    1536,DL
         2 000045   000156 600000 2                  TZE     s:7769

      162     7747    2         DSRDLBL = 'EOF';

   7747  2 000046   000001 236000 1                  LDQ     E_PARTIALSN+1
         2 000047   000000 376000 3                  ANQ     0
         2 000050   000040 276007                    ORQ     32,DL
         2 000051   200011 756100                    STQ     DSRDLBL,,AUTO

      163     7748    2         CALL FTL$CLOSE( DSRDLBL,ADDR(NIL),0, ,0);

   7748  2 000052   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000053   200030 756100                    STQ     TOTLEFT+3,,AUTO
         2 000054   000001 236000 3                  LDQ     1
         2 000055   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000056   200034 757100                    STAQ    TOTLEFT+7,,AUTO
         2 000057   000001 236000 3                  LDQ     1
         2 000060   200033 756100                    STQ     TOTLEFT+6,,AUTO
         2 000061   200030 634500                    EPPR4   TOTLEFT+3,,AUTO
         2 000062   200032 454500                    STP4    TOTLEFT+5,,AUTO
         2 000063   200011 635500                    EPPR5   DSRDLBL,,AUTO
         2 000064   200031 455500                    STP5    TOTLEFT+4,,AUTO
         2 000065   200031 630500                    EPPR0   TOTLEFT+4,,AUTO
         2 000066   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 000067   000000 701000 xent               TSX1    FTL$CLOSE
         2 000070   000000 011000                    NOP     0

      164     7749    2         DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

   7749  2 000071   200016 470500                    LDP0    JDCB$,,AUTO
         2 000072   000051 720100                    LXL0    41,,PR0
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:19   
         2 000073   000000 471400 xsym               LDP1    N$DCT$$
         2 000074   100000 473510                    LDP3    0,X0,PR1
         2 000075   300004 236100                    LDQ     4,,PR3
         2 000076   200007 756100                    STQ     DDDT$,,AUTO

      165     7750              /* If a buffer has been provided, return the serial number list. */
      166     7751
      167     7752    3         IF DFLTCLOSE = 0 THEN DO;

   7752  2 000077   200010 235100                    LDA     DFLTCLOSE,,AUTO
         2 000100   000126 601000 2                  TNZ     FREEFPOOLS

      168     7753    3              CALL HFF$DSIZ (POFFW(ADDR(PN$.SN_),

   7753  2 000101   200003 236100                    LDQ     @PN$,,AUTO
         2 000102   000022 772000                    QRL     18
         2 000103   200030 756100                    STQ     TOTLEFT+3,,AUTO
         2 000104   200003 236100                    LDQ     @PN$,,AUTO
         2 000105   000001 036003                    ADLQ    1,DU
         2 000106   000022 772000                    QRL     18
         2 000107   200030 136100                    SBLQ    TOTLEFT+3,,AUTO
         2 000110   200031 756100                    STQ     TOTLEFT+4,,AUTO
         2 000111   200004 633500                    EPPR3   BUFSIZ,,AUTO
         2 000112   200033 453500                    STP3    TOTLEFT+6,,AUTO
         2 000113   200031 634500                    EPPR4   TOTLEFT+4,,AUTO
         2 000114   200032 454500                    STP4    TOTLEFT+5,,AUTO
         2 000115   200032 630500                    EPPR0   TOTLEFT+5,,AUTO
         2 000116   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000117   000000 701000 xent               TSX1    HFF$DSIZ
         2 000120   000126 702000 2                  TSX2    FREEFPOOLS

      169     7754    3                       ADDR(PN$.V_)),
      170     7755    3                       BUFSIZ)         ALTRET(FREEFPOOLS);
      171     7756    3               SN$ = PN$.SN_;    /* Get pointer to SN list buffer      */

   7756  2 000121   200003 470500                    LDP0    @PN$,,AUTO
         2 000122   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:20   
         2 000123   200020 756100                    STQ     SN$,,AUTO

      172     7757    3               CALL FPO_SNLIST;

   7757  2 000124   000236 701000 2                  TSX1    FPO_SNLIST
         2 000125   000000 011000                    NOP     0

      173     7758    3         END;

   7752  2 000126                       FREEFPOOLS   null
      174     7759
      175     7760              /* Free FPOOLs, CFUs, and any RO space.    */
      176     7761
      177     7762    2   FREEFPOOLS: ;
      178     7763    2         IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED# THEN

   7763  2 000126   200016 470500                    LDP0    JDCB$,,AUTO
         2 000127   000032 236100                    LDQ     26,,PR0
         2 000130   777000 376003                    ANQ     -512,DU
         2 000131   002000 116003                    CMPQ    1024,DU
         2 000132   000135 600000 2                  TZE     s:7764
         2 000133   006000 116003                    CMPQ    3072,DU
         2 000134   000163 601000 2                  TNZ     s:7772

      179     7764    2            IF F$DCB.ACS = %SEQUEN# AND F$DCB.FUN = %CREATE# THEN

   7764  2 000135   000036 236100                    LDQ     30,,PR0
         2 000136   000777 376007                    ANQ     511,DL
         2 000137   000001 116007                    CMPQ    1,DL
         2 000140   000163 601000 2                  TNZ     s:7772
         2 000141   000032 236100                    LDQ     26,,PR0
         2 000142   000777 376003                    ANQ     511,DU
         2 000143   000003 116003                    CMPQ    3,DU
         2 000144   000163 601000 2                  TNZ     s:7772

      180     7765                    /* Free RO space used for last key area */
      181     7766    2               CALL FSA$FSP(64,F$DCB.LASTKEY$);
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:21   

   7766  2 000145   200016 236100                    LDQ     JDCB$,,AUTO
         2 000146   000065 036003                    ADLQ    53,DU
         2 000147   000003 235000 3                  LDA     3
         2 000150   200030 757100                    STAQ    TOTLEFT+3,,AUTO
         2 000151   200030 630500                    EPPR0   TOTLEFT+3,,AUTO
         2 000152   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000153   000000 701000 xent               TSX1    FSA$FSP
         2 000154   000000 011000                    NOP     0

      182     7767    2      END;

   7767  2 000155   000163 710000 2                  TRA     s:7772

      183     7768    1      ELSE
      184     7769    1         IF F$DCB.PSN = ' ' THEN

   7769  2 000156   040000 106500                    CMPC    fill='040'O
         2 000157   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
         2 000160   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000161   000163 601000 2                  TNZ     s:7772

      185     7770    1            RETURN;

   7770  2 000162   000000 702200 xent               TSX2  ! X66_ARET

      186     7771
      187     7772    1      CALL FTR$RELFPOOLS;

   7772  2 000163   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000164   000000 701000 xent               TSX1    FTR$RELFPOOLS
         2 000165   000000 011000                    NOP     0

      188     7773    1      CALL FTR$RELCFUS;

   7773  2 000166   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000167   000000 701000 xent               TSX1    FTR$RELCFUS
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:22   
         2 000170   000000 011000                    NOP     0

      189     7774
      190     7775    2      IF DFLTCLOSE = 1 THEN DO;

   7775  2 000171   200010 235100                    LDA     DFLTCLOSE,,AUTO
         2 000172   000001 115007                    CMPA    1,DL
         2 000173   000200 601000 2                  TNZ     s:7780

      191     7776    2         CALL FRB$CLS;

   7776  2 000174   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000175   000000 701000 xent               TSX1    FRB$CLS
         2 000176   000000 011000                    NOP     0

      192     7777    2         RETURN;

   7777  2 000177   000000 702200 xent               TSX2  ! X66_ARET

      193     7778    2         END;
      194     7779
      195     7780    1      IF PN$.V_ ~= ADDR(NIL) THEN

   7780  2 000200   200003 470500                    LDP0    @PN$,,AUTO
         2 000201   000000 236100                    LDQ     0,,PR0
         2 000202   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000203   000232 600000 2                  TZE     s:7790

      196     7781    2         DO CASE (PN$.V_->FPT$CLOSE_V.POS);

   7781  2 000204   000000 471500                    LDP1    0,,PR0
         2 000205   100002 236100                    LDQ     2,,PR1
         2 000206   000033 772000                    QRL     27
         2 000207   000004 116007                    CMPQ    4,DL
         2 000210   000212 602006 2                  TNC     s:7781+6,QL
         2 000211   000226 710000 2                  TRA     s:7787
         2 000212   000226 710000 2                  TRA     s:7787
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:23   
         2 000213   000226 710000 2                  TRA     s:7787
         2 000214   000216 710000 2                  TRA     s:7783
         2 000215   000222 710000 2                  TRA     s:7785

      197     7782    2          CASE(%REM#);

      198     7783    2            CALL FRB$CREM;

   7783  2 000216   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000217   000000 701000 xent               TSX1    FRB$CREM
         2 000220   000000 011000                    NOP     0
         2 000221   000235 710000 2                  TRA     s:7792

      199     7784    2          CASE(%REL#);

      200     7785    2            CALL FRB$CREL;

   7785  2 000222   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000223   000000 701000 xent               TSX1    FRB$CREL
         2 000224   000000 011000                    NOP     0
         2 000225   000235 710000 2                  TRA     s:7792

      201     7786    2          CASE(ELSE);

      202     7787    2            CALL FRB$CLS;

   7787  2 000226   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000227   000000 701000 xent               TSX1    FRB$CLS
         2 000230   000000 011000                    NOP     0

      203     7788    2          END;

   7788  2 000231   000235 710000 2                  TRA     s:7792

      204     7789    1      ELSE
      205     7790    1         CALL FRB$CLS;

PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:24   
   7790  2 000232   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000233   000000 701000 xent               TSX1    FRB$CLS
         2 000234   000000 011000                    NOP     0

      206     7791
      207     7792    1      RETURN;

   7792  2 000235   000000 702200 xent               TSX2  ! X66_ARET

      208     7793
      209     7794        %EJECT;
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:25   
      210     7795        /*********************************************************************/
      211     7796    1   FPO_SNLIST: PROC;

   7796  2 000236   200026 741300       FPO_SNLIST   STX1  ! TOTLEFT+1,,AUTO

      212     7797        /*F*     NAME: FPO_SNLIST
      213     7798                 PURPOSE: Return serial number list in user buffer.
      214     7799         ***/
      215     7800
      216     7801        /********************/
      217     7802
      218     7803         /***
      219     7804          *** If no user buffer, just return.  If no CFU SN list,
      220     7805          *** just return single SN.
      221     7806          ***/
      222     7807
      223     7808    2      IF SN$=ADDR(NIL) OR BUFSIZ <= 0 THEN

   7808  2 000237   200020 236100                    LDQ     SN$,,AUTO
         2 000240   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000241   000244 600000 2                  TZE     s:7809
         2 000242   200004 235100                    LDA     BUFSIZ,,AUTO
         2 000243   000245 605400 2                  TPNZ    s:7810

      224     7809    2         RETURN;

   7809  2 000244   000001 702211                    TSX2  ! 1,X1

      225     7810    2      BUFSIZ = (BUFSIZ - LENGTHC(SN$->VLP$SN_V.NUM))

   7810  2 000245   200004 236100                    LDQ     BUFSIZ,,AUTO
         2 000246   000004 136007                    SBLQ    4,DL
         2 000247   000006 506007                    DIV     6,DL
         2 000250   200004 756100                    STQ     BUFSIZ,,AUTO

      226     7811    2        / LENGTHC(SN$->VLP$SN_V.SN(0));    /* Calc number of SNs                 */
      227     7812    2      CFU$ = F$DCB.CFU$;                   /* Get CFU pointer                    */
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:26   

   7812  2 000251   200016 470500                    LDP0    JDCB$,,AUTO
         2 000252   000066 236100                    LDQ     54,,PR0
         2 000253   200005 756100                    STQ     CFU$,,AUTO

      228     7813    3      IF CFU$ = ADDR(NIL) THEN DO;         /* Any SN list?                       */

   7813  2 000254   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000255   000266 601000 2                  TNZ     s:7825

      229     7814              /* No--return single SN only          */
      230     7815    3         SN$->VLP$SN_V.NUM = 1;

   7815  2 000256   000001 235007                    LDA     1,DL
         2 000257   200020 471500                    LDP1    SN$,,AUTO
         2 000260   100000 755100                    STA     0,,PR1

      231     7816    3         SN$->VLP$SN_V.SN(0) = F$DCB.PSN;

   7816  2 000261   040100 100500                    MLR     fill='040'O
         2 000262   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         2 000263   100001 000006                    ADSC9   1,,PR1                   cn=0,n=6

      232     7817    3         RETURN;

   7817  2 000264   200026 221300                    LDX1  ! TOTLEFT+1,,AUTO
         2 000265   000001 702211                    TSX2  ! 1,X1

      233     7818    3         END;
      234     7819
      235     7820         /***
      236     7821          ***   We have a list of SNs.   Move as many as we can to the
      237     7822          ***   user's buffer.
      238     7823          ***/
      239     7824
      240     7825    2      I = 0;

PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:27   
   7825  2 000266   200014 450100                    STZ     I,,AUTO

      241     7826    2      TOTLEFT = BUFSIZ;                    /* Remember # that can be moved       */

   7826  2 000267   200004 235100                    LDA     BUFSIZ,,AUTO
         2 000270   200025 755100                    STA     TOTLEFT,,AUTO

      242     7827    3      DO WHILE( CFU$ ~= ADDR(NIL) );

   7827  2 000271   000371 710000 2                  TRA     s:7850

      243     7828    3         TEMP = 0;

   7828  2 000272   200021 450100                    STZ     TEMP,,AUTO

      244     7829    4         DO WHILE( TEMP < CFU$->FT$CFUSN.NUM );

   7829  2 000273   200005 470500                    LDP0    CFU$,,AUTO
         2 000274   000100 101500                    MRL     fill='000'O
         2 000275   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 000276   200030 000004                    ADSC9   TOTLEFT+3,,AUTO          cn=0,n=4
         2 000277   200030 236100                    LDQ     TOTLEFT+3,,AUTO
         2 000300   200021 116100                    CMPQ    TEMP,,AUTO
         2 000301   000355 604400 2                  TMOZ    s:7845

      245     7830    4            SN$->VLP$SN_V.SN(I) = CFU$->FT$CFUSN.SN(TEMP);

   7830  2 000302   200021 236100                    LDQ     TEMP,,AUTO
         2 000303   000006 402007                    MPY     6,DL
         2 000304   200030 756100                    STQ     TOTLEFT+3,,AUTO
         2 000305   200014 236100                    LDQ     I,,AUTO
         2 000306   000006 402007                    MPY     6,DL
         2 000307   200005 470500                    LDP0    CFU$,,AUTO
         2 000310   200030 235100                    LDA     TOTLEFT+3,,AUTO
         2 000311   200020 471500                    LDP1    SN$,,AUTO
         2 000312   040106 100505                    MLR     fill='040'O
         2 000313   000001 000006                    ADSC9   1,A,PR0                  cn=0,n=6
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:28   
         2 000314   100001 000006                    ADSC9   1,Q,PR1                  cn=0,n=6

      246     7831    4            I = I + 1;

   7831  2 000315   200014 054100                    AOS     I,,AUTO

      247     7832    4            TEMP = TEMP + 1;

   7832  2 000316   200021 054100                    AOS     TEMP,,AUTO

      248     7833    4            TOTLEFT = TOTLEFT - 1;

   7833  2 000317   000001 336007                    LCQ     1,DL
         2 000320   200025 056100                    ASQ     TOTLEFT,,AUTO

      249     7834    5            IF TOTLEFT <= 0 THEN DO;

   7834  2 000321   000347 605400 2                  TPNZ    s:7844

      250     7835    6               IF TEMP < CFU$->FT$CFUSN.NUM OR CFU$->FT$CFUSN.LINKX ~= 0 THEN DO;

   7835  2 000322   000100 101500                    MRL     fill='000'O
         2 000323   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 000324   200030 000004                    ADSC9   TOTLEFT+3,,AUTO          cn=0,n=4
         2 000325   200030 236100                    LDQ     TOTLEFT+3,,AUTO
         2 000326   200021 116100                    CMPQ    TEMP,,AUTO
         2 000327   000336 605400 2                  TPNZ    s:7837
         2 000330   000100 101500                    MRL     fill='000'O
         2 000331   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         2 000332   200031 000004                    ADSC9   TOTLEFT+4,,AUTO          cn=0,n=4
         2 000333   200031 236100                    LDQ     TOTLEFT+4,,AUTO
         2 000334   000000 116003                    CMPQ    0,DU
         2 000335   000347 600000 2                  TZE     s:7844

      251     7836                       /* No space for SNs                   */
      252     7837    6                  IF NOT B$JIT.ERR THEN

PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:29   
   7837  2 000336   000000 473400 xsym               LDP3    B$JIT$
         2 000337   300012 235100                    LDA     10,,PR3
         2 000340   000343 601000 2                  TNZ     s:7840

      253     7838    6                     B$JIT.ERR = E_PARTIALSN;

   7838  2 000341   000000 236000 1                  LDQ     E_PARTIALSN
         2 000342   300012 756100                    STQ     10,,PR3

      254     7839                          /*E* ERROR: FPO-E$PARTIALSN */
      255     7840    6                  SN$->VLP$SN_V.NUM = BUFSIZ;

   7840  2 000343   200004 235100                    LDA     BUFSIZ,,AUTO
         2 000344   100000 755100                    STA     0,,PR1

      256     7841    6                  RETURN;

   7841  2 000345   200026 221300                    LDX1  ! TOTLEFT+1,,AUTO
         2 000346   000001 702211                    TSX2  ! 1,X1

      257     7842    6                  END;
      258     7843    5               END;
      259     7844    4            END;

   7844  2 000347   000100 101500                    MRL     fill='000'O
         2 000350   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 000351   200030 000004                    ADSC9   TOTLEFT+3,,AUTO          cn=0,n=4
         2 000352   200030 236100                    LDQ     TOTLEFT+3,,AUTO
         2 000353   200021 116100                    CMPQ    TEMP,,AUTO
         2 000354   000302 605400 2                  TPNZ    s:7830

      260     7845    3         J = CFU$->FT$CFUSN.LINKX;         /* On to next CFU                     */

   7845  2 000355   000100 101500                    MRL     fill='000'O
         2 000356   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         2 000357   200015 000004                    ADSC9   J,,AUTO                  cn=0,n=4

PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:30   
      261     7846    3         IF J = 0 THEN

   7846  2 000360   200015 235100                    LDA     J,,AUTO
         2 000361   000365 601000 2                  TNZ     s:7849

      262     7847    3            CFU$ = ADDR(NIL);

   7847  2 000362   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000363   200005 756100                    STQ     CFU$,,AUTO
         2 000364   000371 710000 2                  TRA     s:7850

      263     7848    3         ELSE
      264     7849    3            CFU$ = PINCRW( F$CFU$, J );

   7849  2 000365   200015 236100                    LDQ     J,,AUTO
         2 000366   000022 736000                    QLS     18
         2 000367   000000 036000 xsym               ADLQ    F$CFU$
         2 000370   200005 756100                    STQ     CFU$,,AUTO

      265     7850    3         END;

   7850  2 000371   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000372   000272 601000 2                  TNZ     s:7828

      266     7851
      267     7852         /***
      268     7853          *** Return number of SNs.
      269     7854          ***/
      270     7855
      271     7856    2      SN$->VLP$SN_V.NUM = BUFSIZ - TOTLEFT;

   7856  2 000373   200004 236100                    LDQ     BUFSIZ,,AUTO
         2 000374   200025 136100                    SBLQ    TOTLEFT,,AUTO
         2 000375   200020 470500                    LDP0    SN$,,AUTO
         2 000376   000000 756100                    STQ     0,,PR0

      272     7857    2      RETURN;
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:31   

   7857  2 000377   200026 221300                    LDX1  ! TOTLEFT+1,,AUTO
         2 000400   000001 702211                    TSX2  ! 1,X1

E_PARTIALSN
 Sect OctLoc
   1     000   062403 412760                                                    2...

(unnamed)
 Sect OctLoc
   1     001   105117 106040                                                    EOF

(unnamed)
 Sect OctLoc
   3     000   777777 777000   000002 006000   000000 000100   000002 006000    ...........@....
      273     7858
      274     7859    2   END FPO_SNLIST;
      275     7860    1   END FPC$CLSOD;

PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:32   
--  Include file information  --

   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FT$DDT.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F$CP6P_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_PTRS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FPC$CLSOD.
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:33   

 **** Variables and constants ****

  ****  Section 001 RoData FPC$CLSOD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 E_PARTIALSN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PN$                       4-0-0/w SBIN        r     1 BUFSIZ
     5-0-0/w PTR         r     1 CFU$                       7-0-0/w PTR         r     1 DDDT$
    10-0-0/w SBIN        r     1 DFLTCLOSE                 11-0-0/c CHAR(3)     r     1 DSRDLBL
    14-0-0/w SBIN        r     1 I                         15-0-0/w SBIN        r     1 J
    16-0-0/w PTR         r     1 JDCB$                     *0-0-0/w STRC(504)   r     1 PN$
    20-0-0/w PTR         r     1 SN$                       21-0-0/w SBIN        r     1 TEMP
    25-0-0/w SBIN        r     1 TOTLEFT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 F$CFU$
     0-0-0/w PTR         r     1 N$DCT$$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/d STRC(144)   r     1 FPT$CLOSE_V                0-0-0/c STRC(288)   r     1 FT$CFUSN
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:34   
     0-0-0/d STRC(864)   r     1 NK$LDCT
     0-0-0/w PTR         r     1 NK$LDCT$(0:0)
     0-0-0/d STRC(90)    r     1 VLP$SN_V


   Procedure FPC$CLSOD requires 257 words for executable code.
   Procedure FPC$CLSOD requires 30 words of local(AUTO) storage.

    No errors detected in file FPC$CLSOD.:E05TSI    .
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:35   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:36   
          MINI XREF LISTING

B$JIT.DCB$
       436**DCL      7733>>ASSIGN
B$JIT.ERR
       346**DCL      7837>>IF       7838<<ASSIGN
B$JIT.ERR.MID
       347**DCL       347--REDEF
B$JIT$
      7657**DCL       341--IMP-PTR  7733>>ASSIGN   7837>>IF       7838>>ASSIGN
BEGINCLOSE
      7725**LABEL    7717--GOTO
BUFSIZ
      7673**DCL      7753<>CALL     7808>>IF       7810<<ASSIGN   7810>>ASSIGN   7826>>ASSIGN   7840>>ASSIGN
      7856>>ASSIGN
CFU$
      7674**DCL      7812<<ASSIGN   7813>>IF       7827>>DOWHILE  7829>>DOWHILE  7830>>ASSIGN   7835>>IF
      7835>>IF       7845>>ASSIGN   7847<<ASSIGN   7849<<ASSIGN
DDDT$
      7676**DCL      7344--IMP-PTR  7745<<ASSIGN   7749<<ASSIGN
DFLTCLOSE
      7677**DCL      7716<<ASSIGN   7725<<ASSIGN   7752>>IF       7775>>IF
DSRDLBL
      7678**DCL      7747<<ASSIGN   7748<>CALL
E_PARTIALSN
      7701**DCL      7838>>ASSIGN
F$CFU$
      7658**DCL      7849>>ASSIGN
F$DCB.ACS
      6880**DCL      7764>>IF
F$DCB.ACTPOS
      6888**DCL      6888--REDEF
F$DCB.ARS
      6863**DCL      6863--REDEF
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:37   
F$DCB.ASN
      6878**DCL      7746>>IF
F$DCB.ATTR
      6881**DCL      6882--REDEF
F$DCB.BORROW
      6896**DCL      6896--REDEF    6896--REDEF    6896--REDEF
F$DCB.CFU$
      6897**DCL      7812>>ASSIGN
F$DCB.DCBNAME.L
      6910**DCL      6910--IMP-SIZ
F$DCB.EOMCHAR
      6867**DCL      6867--REDEF
F$DCB.FLDID
      6891**DCL      6891--REDEF
F$DCB.FORM$
      6885**DCL      6885--REDEF
F$DCB.FSECT
      6901**DCL      6901--REDEF
F$DCB.FSN
      6878**DCL      6878--REDEF    6878--REDEF    6879--REDEF
F$DCB.FUN
      6877**DCL      7764>>IF
F$DCB.HEADER$
      6884**DCL      6884--REDEF
F$DCB.IXTNSIZE
      6882**DCL      6882--REDEF
F$DCB.LASTKEY$
      6896**DCL      7766<>CALL
F$DCB.LASTSTA$
      6872**DCL      6872--REDEF
F$DCB.LVL
      6897**DCL      6897--REDEF
F$DCB.NAME.C
      6872**DCL      6872--REDEF
F$DCB.NOEOF
      6893**DCL      6893--REDEF
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:38   
F$DCB.NRECS
      6883**DCL      6883--REDEF
F$DCB.NRECX
      6902**DCL      6902--REDEF
F$DCB.OHDR
      6894**DCL      6894--REDEF
F$DCB.ORG
      6877**DCL      6877--REDEF    7734>>IF       7763>>IF       7763>>IF
F$DCB.PRECNO
      6900**DCL      6900--REDEF
F$DCB.PSN
      6873**DCL      7769>>IF       7816>>ASSIGN
F$DCB.RCSZ
      6905**DCL      6905--REDEF
F$DCB.RECL
      6878**DCL      7735>>IF       7737<<ASSIGN   7737>>ASSIGN   7739<<ASSIGN   7739>>ASSIGN
F$DCB.RES
      6873**DCL      6873--REDEF
F$DCB.SETX
      6885**DCL      6885--REDEF    7742>>ASSIGN   7749>>ASSIGN
F$DCB.SPANNED
      6877**DCL      7735>>IF
F$DCB.TAB$
      6884**DCL      6885--REDEF
F$DCB.TDA
      6899**DCL      6899--REDEF
F$DCB.WSN
      6874**DCL      6874--REDEF
FPO_SNLIST
      7796**PROC     7757--CALL
FPT$CLOSE_V.EXPIRE
      6799**DCL      6799--REDEF
FPT$CLOSE_V.POS
      6798**DCL      7781>>DOCASE
FPT$CLOSE_V.TYPE
      6798**DCL      6798--REDEF
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:39   
FPT$CLOSE_V.XTNSIZE
      6795**DCL      6795--REDEF    6797--REDEF
FRB$CLS
      7640**DCL-ENT  7776--CALL     7787--CALL     7790--CALL
FRB$CREL
      7641**DCL-ENT  7785--CALL
FRB$CREM
      7642**DCL-ENT  7783--CALL
FREEFPOOLS
      7752**LABEL    7744--GOTO     7753--CALLALT
FSA$FSP
      7644**DCL-ENT  7766--CALL
FT$CFUSN.LINKX
      7203**DCL      7835>>IF       7845>>ASSIGN
FT$CFUSN.NUM
      7203**DCL      7829>>DOWHILE  7835>>IF
FT$CFUSN.SN
      7203**DCL      7830>>ASSIGN
FTL$CLOSE
      7647**DCL-ENT  7748--CALL
FTR$RELCFUS
      7645**DCL-ENT  7773--CALL
FTR$RELFPOOLS
      7646**DCL-ENT  7772--CALL
HFF$DSIZ
      7651**DCL-ENT  7753--CALL
I
      7681**DCL      7742<<ASSIGN   7743>>IF       7745>>ASSIGN   7825<<ASSIGN   7830>>ASSIGN   7831<<ASSIGN
      7831>>ASSIGN
J
      7682**DCL      7845<<ASSIGN   7846>>IF       7849>>ASSIGN
JDCB$
      7683**DCL      6863--IMP-PTR  7733<<ASSIGN   7734>>IF       7735>>IF       7735>>IF       7737>>ASSIGN
      7737>>ASSIGN   7739>>ASSIGN   7739>>ASSIGN   7742>>ASSIGN   7746>>IF       7749>>ASSIGN   7763>>IF
      7763>>IF       7764>>IF       7764>>IF       7766>>CALL     7769>>IF       7812>>ASSIGN   7816>>ASSIGN
N$DCT$$
PL6.E3A0      #001=FPC$CLSOD File=FPC$CLSOD.:E05TSI                              TUE 07/29/97 17:17 Page:40   
      7633**DCL      7633--IMP-PTR  7745>>ASSIGN   7749>>ASSIGN
NK$LDCT.DDT$
      7595**DCL      7595--REDEF    7745>>ASSIGN   7749>>ASSIGN
NK$LDCT.IOQ$
      7594**DCL      7595--REDEF
NK$LDCT.LDCTX
      7596**DCL      7596--REDEF
NK$LDCT.LKFLG.ABORTED
      7608**DCL      7609--REDEF
NK$LDCT.RLCID.LDCTX
      7618**DCL      7618--REDEF
NK$LDCT.STA$
      7614**DCL      7615--REDEF
NK$LDCT.SYMB$
      7593**DCL      7593--REDEF    7593--REDEF    7594--REDEF
NK$LDCT$
      7633**DCL      7745>>ASSIGN   7749>>ASSIGN
PN$
      7665**DCL         7--PROC
PN$.SN_
      7665**DCL      7665--REDEF    7753--CALL     7756>>ASSIGN
PN$.UTL_
      7665**DCL      7665--REDEF
PN$.V_
      7665**DCL      7753--CALL     7780>>IF       7781>>DOCASE
SN$
      7685**DCL      7756<<ASSIGN   7808>>IF       7810>>ASSIGN   7810>>ASSIGN   7815>>ASSIGN   7816>>ASSIGN
      7830>>ASSIGN   7840>>ASSIGN   7856>>ASSIGN
TEMP
      7686**DCL      7828<<ASSIGN   7829>>DOWHILE  7830>>ASSIGN   7832<<ASSIGN   7832>>ASSIGN   7835>>IF
TOTLEFT
      7689**DCL      7826<<ASSIGN   7833<<ASSIGN   7833>>ASSIGN   7834>>IF       7856>>ASSIGN
VLP$SN_V.NUM
      6809**DCL      7810--ASSIGN   7815<<ASSIGN   7840<<ASSIGN   7856<<ASSIGN
VLP$SN_V.SN
      6809**DCL      7810--ASSIGN   7816<<ASSIGN   7830<<ASSIGN
