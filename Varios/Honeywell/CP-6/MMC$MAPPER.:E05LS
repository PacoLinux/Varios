VERSION E05

PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        MMC$ONLY_IOM: PROC(WSQ,VPNO,DATA);        /* Data  = # of pages               */
        7        7        /*M* Level 0 MM routines for dealing with the page map */
        8        8
        9        9    1   DCL WSQ SBIN;                           /* Wsq making allocation request      */
       10       10    1   DCL VPNO SBIN;                          /* Virtual page number                */
       11       11    1   DCL DATA SBIN;                          /* Data info for various entries      */
       12       12    1   DCL I SBIN;
       13       13    1   DCL J SBIN;
       14       14
       15       15    1   DCL MAP$ PTR;
       16       16    1   DCL HFC$ASSOCCLR ENTRY(3);             /* Routine to clear associative mem   */
       17       17    1   DCL MM0$CHKVP ENTRY(1);                 /* Function to validate vp number     */
       18       18
       19       19        %INCLUDE MM_DATA_R;                     /* Include all mm data references     */
       20      539        %INCLUDE HF_DATA_R;
       21      582        %INCLUDE B$MAP;                    /* Structure definition for page table     */
       22      681
       23      682        /**/
       24      683        /*F*   NAME:   MMC$ONLY_IOM                                        */
       25      684        /*F*   PURPOSE: To set access to 'IOM Only' on a range of pages.   */
       26      685                %FINDMAP(P$ = MAP$);
       27      688    1           J = VPNO + DATA - 1;
       28      689    2           DO I = VPNO TO J;
       29      690    2             MAP$->B$MAP.CTRL(I) = (MAP$->B$MAP.CTRL(I) & ~%PGINMEM) | %PGIOM;
       30      691    2           END;
       31      692    1           CALL HFC$ASSOCCLR(WSQ,VPNO,DATA);
       32      693    1           RETURN;
       33      694        /**/
       34      695        %EJECT;
PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:2    
       35      696        /**/
       36      697        /*F*   NAME:   MMC$CP_IOM                                          */
       37      698        /*F*   PURPOSE: To give CPU & IOM access to a range of pages.      */
       38      699    1   MMC$CP_IOM: ENTRY(WSQ,VPNO,DATA);       /* Data  = # of pages                 */
       39      700                %FINDMAP(P$ = MAP$);
       40      703    1           J = VPNO + DATA - 1;
       41      704    2           DO I = VPNO TO J;
       42      705    2             MAP$->B$MAP.CTRL(I) = MAP$->B$MAP.CTRL(I) | (%PGINMEM | %PGIOM);
       43      706    2           END;
       44      707    1           RETURN;
       45      708        /**/
       46      709    1   END MMC$ONLY_IOM;
       47      710        %EOD;

PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:3    
--  Include file information  --

   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMC$ONLY_IOM.

   Procedure MMC$ONLY_IOM requires 66 words for executable code.
   Procedure MMC$ONLY_IOM requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:4    

 Object Unit name= MMC$ONLY_IOM                               File name= MMC$MAPPER.:E05TOU
 UTS= JUL 30 '97 03:19:54.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    66    102  MMC$ONLY_IOM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  MMC$ONLY_IOM
     0     45                  yes      Std        3  MMC$CP_IOM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 HFC$ASSOCCLR
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    MM_BYP$                          r    MM_PTPTRS$                            B_VECTNIL
PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:5    


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        MMC$ONLY_IOM: PROC(WSQ,VPNO,DATA);        /* Data  = # of pages               */

      6  0 000000   000000 700200 xent  MMC$ONLY_IOM TSX0  ! X66_AUTO_3
         0 000001   000012 000003                    ZERO    10,3

        7        7        /*M* Level 0 MM routines for dealing with the page map */
        8        8
        9        9    1   DCL WSQ SBIN;                           /* Wsq making allocation request      */
       10       10    1   DCL VPNO SBIN;                          /* Virtual page number                */
       11       11    1   DCL DATA SBIN;                          /* Data info for various entries      */
       12       12    1   DCL I SBIN;
       13       13    1   DCL J SBIN;
       14       14
       15       15    1   DCL MAP$ PTR;
       16       16    1   DCL HFC$ASSOCCLR ENTRY(3);             /* Routine to clear associative mem   */
       17       17    1   DCL MM0$CHKVP ENTRY(1);                 /* Function to validate vp number     */
       18       18
       19       19        %INCLUDE MM_DATA_R;                     /* Include all mm data references     */
       20      539        %INCLUDE HF_DATA_R;
       21      582        %INCLUDE B$MAP;                    /* Structure definition for page table     */
       22      681
       23      682        /**/
       24      683        /*F*   NAME:   MMC$ONLY_IOM                                        */
       25      684        /*F*   PURPOSE: To set access to 'IOM Only' on a range of pages.   */
       26      685                %FINDMAP(P$ = MAP$);

    686  0 000002   200003 470500                    LDP0    @WSQ,,AUTO
         0 000003   000000 720100                    LXL0    0,,PR0
         0 000004   000000 236010 xsym               LDQ     MM_PTPTRS$,X0
         0 000005   200010 756100                    STQ     MAP$,,AUTO

PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:6    
       27      688    1           J = VPNO + DATA - 1;

    688  0 000006   200004 471500                    LDP1    @VPNO,,AUTO
         0 000007   200005 473500                    LDP3    @DATA,,AUTO
         0 000010   100000 236100                    LDQ     0,,PR1
         0 000011   300000 036100                    ADLQ    0,,PR3
         0 000012   000001 136007                    SBLQ    1,DL
         0 000013   200007 756100                    STQ     J,,AUTO

       28      689    2           DO I = VPNO TO J;

    689  0 000014   100000 235100                    LDA     0,,PR1
         0 000015   200006 755100                    STA     I,,AUTO
         0 000016   000035 710000 0                  TRA     s:691+1

       29      690    2             MAP$->B$MAP.CTRL(I) = (MAP$->B$MAP.CTRL(I) & ~%PGINMEM) | %PGIOM;

    690  0 000017   200010 470500                    LDP0    MAP$,,AUTO
         0 000020   200006 720100                    LXL0    I,,AUTO
         0 000021   000000 236110                    LDQ     0,X0,PR0
         0 000022   000036 736000                    QLS     30
         0 000023   370000 376003                    ANQ     126976,DU
         0 000024   000022 772000                    QRL     18
         0 000025   000000 621006                    EAX1    0,QL
         0 000026   040000 261003                    ORX1    16384,DU
         0 000027   000000 636011                    EAQ     0,X1
         0 000030   000036 772000                    QRL     30
         0 000031   000000 676110                    ERQ     0,X0,PR0
         0 000032   000077 376007                    ANQ     63,DL
         0 000033   000000 656110                    ERSQ    0,X0,PR0

       30      691    2           END;

    691  0 000034   200006 054100                    AOS     I,,AUTO
         0 000035   200006 236100                    LDQ     I,,AUTO
         0 000036   200007 116100                    CMPQ    J,,AUTO
         0 000037   000017 604400 0                  TMOZ    s:690
PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:7    

       31      692    1           CALL HFC$ASSOCCLR(WSQ,VPNO,DATA);

    692  0 000040   200003 630500                    EPPR0   @WSQ,,AUTO
         0 000041   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000042   000000 701000 xent               TSX1    HFC$ASSOCCLR
         0 000043   000000 011000                    NOP     0

       32      693    1           RETURN;

    693  0 000044   000000 702200 xent               TSX2  ! X66_ARET

       33      694        /**/
       34      695        %EJECT;
PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:8    
       35      696        /**/
       36      697        /*F*   NAME:   MMC$CP_IOM                                          */
       37      698        /*F*   PURPOSE: To give CPU & IOM access to a range of pages.      */
       38      699    1   MMC$CP_IOM: ENTRY(WSQ,VPNO,DATA);       /* Data  = # of pages                 */

    699  0 000045   000000 700200 xent  MMC$CP_IOM   TSX0  ! X66_AUTO_3
         0 000046   000012 000003                    ZERO    10,3

       39      700                %FINDMAP(P$ = MAP$);

    701  0 000047   200003 470500                    LDP0    @WSQ,,AUTO
         0 000050   000000 720100                    LXL0    0,,PR0
         0 000051   000000 236010 xsym               LDQ     MM_PTPTRS$,X0
         0 000052   200010 756100                    STQ     MAP$,,AUTO

       40      703    1           J = VPNO + DATA - 1;

    703  0 000053   200004 471500                    LDP1    @VPNO,,AUTO
         0 000054   200005 473500                    LDP3    @DATA,,AUTO
         0 000055   100000 236100                    LDQ     0,,PR1
         0 000056   300000 036100                    ADLQ    0,,PR3
         0 000057   000001 136007                    SBLQ    1,DL
         0 000060   200007 756100                    STQ     J,,AUTO

       41      704    2           DO I = VPNO TO J;

    704  0 000061   100000 235100                    LDA     0,,PR1
         0 000062   200006 755100                    STA     I,,AUTO
         0 000063   000076 710000 0                  TRA     s:706+1

       42      705    2             MAP$->B$MAP.CTRL(I) = MAP$->B$MAP.CTRL(I) | (%PGINMEM | %PGIOM);

    705  0 000064   200010 470500                    LDP0    MAP$,,AUTO
         0 000065   200006 720100                    LXL0    I,,AUTO
         0 000066   000000 236110                    LDQ     0,X0,PR0
         0 000067   000036 736000                    QLS     30
         0 000070   440000 276003                    ORQ     -114688,DU
PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:9    
         0 000071   000036 772000                    QRL     30
         0 000072   000000 676110                    ERQ     0,X0,PR0
         0 000073   000077 376007                    ANQ     63,DL
         0 000074   000000 656110                    ERSQ    0,X0,PR0

       43      706    2           END;

    706  0 000075   200006 054100                    AOS     I,,AUTO
         0 000076   200006 236100                    LDQ     I,,AUTO
         0 000077   200007 116100                    CMPQ    J,,AUTO
         0 000100   000064 604400 0                  TMOZ    s:705

       44      707    1           RETURN;

    707  0 000101   000000 702200 xent               TSX2  ! X66_ARET
       45      708        /**/
       46      709    1   END MMC$ONLY_IOM;
       47      710        %EOD;

PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:10   
--  Include file information  --

   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMC$ONLY_IOM.
PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:11   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @DATA                      4-0-0/w PTR         r     1 @VPNO
     3-0-0/w PTR         r     1 @WSQ                      *0-0-0/w SBIN        r     1 DATA
     6-0-0/w SBIN        r     1 I                          7-0-0/w SBIN        r     1 J
    10-0-0/w PTR         r     1 MAP$                      *0-0-0/w SBIN        r     1 VPNO
    *0-0-0/w SBIN        r     1 WSQ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/w PTR         r     1 MM_PTPTRS$(0:16)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 B$MAP(0:1023)


   Procedure MMC$ONLY_IOM requires 66 words for executable code.
   Procedure MMC$ONLY_IOM requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:12   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=MMC$ONLY_IOM File=MMC$MAPPER.:E05TSI                          WED 07/30/97 03:19 Page:13   
          MINI XREF LISTING

B$MAP.CTRL
       628**DCL       690<<ASSIGN    690>>ASSIGN    705<<ASSIGN    705>>ASSIGN
B$MAP.SCTRL
       625**DCL       626--REDEF
DATA
        11**DCL         6--PROC      688>>ASSIGN    692<>CALL      699--ENTRY     703>>ASSIGN
HFC$ASSOCCLR
        16**DCL-ENT   692--CALL
I
        12**DCL       689<<DOINDEX   690>>ASSIGN    690>>ASSIGN    704<<DOINDEX   705>>ASSIGN    705>>ASSIGN
J
        13**DCL       688<<ASSIGN    689>>DOINDEX   703<<ASSIGN    704>>DOINDEX
MAP$
        15**DCL       686<<ASSIGN    690>>ASSIGN    690>>ASSIGN    701<<ASSIGN    705>>ASSIGN    705>>ASSIGN
MM$DESC.BOUND
       490**DCL       491--REDEF
MM$DESC.FLGS
       491**DCL       491--REDEF
MM$PPUT.USER#
       479**DCL       479--REDEF
MM_BYP$
       410**DCL       410--IMP-PTR
MM_PTPTRS$
       490**DCL       686>>ASSIGN    701>>ASSIGN
VPNO
        10**DCL         6--PROC      688>>ASSIGN    689>>DOINDEX   692<>CALL      699--ENTRY     703>>ASSIGN
       704>>DOINDEX
WSQ
         9**DCL         6--PROC      686>>ASSIGN    692<>CALL      699--ENTRY     701>>ASSIGN

PL6.E3A0      #002=MMC$MAPXLAT File=MMC$MAPPER.:E05TSI                           WED 07/30/97 03:20 Page:14   
       48        1        /*T***********************************************************/
       49        2        /*T*                                                         */
       50        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       51        4        /*T*                                                         */
       52        5        /*T***********************************************************/
       53        6        MMC$MAPXLAT: PROC (UMAP$);
       54        7    1   DCL UMAP$ PTR;
       55        8    1   DCL MMAP$ PTR;
       56        9    1   DCL B$MPT$ PTR SYMREF;
       57       10        %INCLUDE M_INFO_C;
       58      150    1   DCL HFC$ASSOCCLR ENTRY(3);
       59      151    1   DCL PTMOVE CHAR (24) BASED;
       60      152
       61      153    1            MMAP$ = PINCRW (B$MPT$ , %XLATNORMAL);
       62      154    1            GOTO MOVEIT;
       63      155
       64      156    1   MMC$MAPXLATALT: ENTRY (UMAP$);
       65      157    1            MMAP$ = PINCRW (B$MPT$ , %XLATALTERNATE);
       66      158    1   MOVEIT:
       67      159    1            PINCRW (UMAP$ , %UXLATLO) -> PTMOVE = MMAP$ -> PTMOVE;
       68      160    1            CALL HFC$ASSOCCLR;
       69      161    1   END MMC$MAPXLAT;

PL6.E3A0      #002=MMC$MAPXLAT File=MMC$MAPPER.:E05TSI                           WED 07/30/97 03:20 Page:15   
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure MMC$MAPXLAT.

   Procedure MMC$MAPXLAT requires 21 words for executable code.
   Procedure MMC$MAPXLAT requires 6 words of local(AUTO) storage.

    No errors detected in file MMC$MAPPER.:E05TSI    .

PL6.E3A0      #002=MMC$MAPXLAT File=MMC$MAPPER.:E05TSI                           WED 07/30/97 03:20 Page:16   

 Object Unit name= MMC$MAPXLAT                                File name= MMC$MAPPER.:E05TOU
 UTS= JUL 30 '97 03:20:05.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    21     25  MMC$MAPXLAT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  MMC$MAPXLAT
     0      6                  yes      Std        1  MMC$MAPXLATALT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 HFC$ASSOCCLR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$MPT$                                B_VECTNIL
PL6.E3A0      #002=MMC$MAPXLAT File=MMC$MAPPER.:E05TSI                           WED 07/30/97 03:20 Page:17   


       48        1        /*T***********************************************************/
       49        2        /*T*                                                         */
       50        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       51        4        /*T*                                                         */
       52        5        /*T***********************************************************/
       53        6        MMC$MAPXLAT: PROC (UMAP$);

      6  0 000000   000000 700200 xent  MMC$MAPXLAT  TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

       54        7    1   DCL UMAP$ PTR;
       55        8    1   DCL MMAP$ PTR;
       56        9    1   DCL B$MPT$ PTR SYMREF;
       57       10        %INCLUDE M_INFO_C;
       58      150    1   DCL HFC$ASSOCCLR ENTRY(3);
       59      151    1   DCL PTMOVE CHAR (24) BASED;
       60      152
       61      153    1            MMAP$ = PINCRW (B$MPT$ , %XLATNORMAL);

    153  0 000002   000000 236000 xsym               LDQ     B$MPT$
         0 000003   000020 036003                    ADLQ    16,DU
         0 000004   200004 756100                    STQ     MMAP$,,AUTO

       62      154    1            GOTO MOVEIT;

    154  0 000005   000013 710000 0                  TRA     MOVEIT

       63      155
       64      156    1   MMC$MAPXLATALT: ENTRY (UMAP$);

    156  0 000006   000000 700200 xent  MMC$MAPXLAT* TSX0  ! X66_AUTO_1
         0 000007   000006 000001                    ZERO    6,1

       65      157    1            MMAP$ = PINCRW (B$MPT$ , %XLATALTERNATE);

    157  0 000010   000000 236000 xsym               LDQ     B$MPT$
PL6.E3A0      #002=MMC$MAPXLAT File=MMC$MAPPER.:E05TSI                           WED 07/30/97 03:20 Page:18   
         0 000011   000026 036003                    ADLQ    22,DU
         0 000012   200004 756100                    STQ     MMAP$,,AUTO

       66      158    1   MOVEIT:
       67      159    1            PINCRW (UMAP$ , %UXLATLO) -> PTMOVE = MMAP$ -> PTMOVE;

    159  0 000013   200003 470500       MOVEIT       LDP0    @UMAP$,,AUTO
         0 000014   000000 471500                    LDP1    0,,PR0
         0 000015   200004 473500                    LDP3    MMAP$,,AUTO
         0 000016   040100 100500                    MLR     fill='040'O
         0 000017   300000 000030                    ADSC9   0,,PR3                   cn=0,n=24
         0 000020   100502 000030                    ADSC9   322,,PR1                 cn=0,n=24

       68      160    1            CALL HFC$ASSOCCLR;

    160  0 000021   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000022   000000 701000 xent               TSX1    HFC$ASSOCCLR
         0 000023   000000 011000                    NOP     0

       69      161    1   END MMC$MAPXLAT;

    161  0 000024   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #002=MMC$MAPXLAT File=MMC$MAPPER.:E05TSI                           WED 07/30/97 03:20 Page:19   
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure MMC$MAPXLAT.
PL6.E3A0      #002=MMC$MAPXLAT File=MMC$MAPPER.:E05TSI                           WED 07/30/97 03:20 Page:20   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @UMAP$                     4-0-0/w PTR         r     1 MMAP$
    *0-0-0/w PTR         r     1 UMAP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$MPT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(24)    r     1 PTMOVE


   Procedure MMC$MAPXLAT requires 21 words for executable code.
   Procedure MMC$MAPXLAT requires 6 words of local(AUTO) storage.

    No errors detected in file MMC$MAPPER.:E05TSI    .
PL6.E3A0      #002=MMC$MAPXLAT File=MMC$MAPPER.:E05TSI                           WED 07/30/97 03:20 Page:21   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=MMC$MAPXLAT File=MMC$MAPPER.:E05TSI                           WED 07/30/97 03:20 Page:22   
          MINI XREF LISTING

B$MPT$
         9**DCL       153>>ASSIGN    157>>ASSIGN
HFC$ASSOCCLR
       150**DCL-ENT   160--CALL
MMAP$
         8**DCL       153<<ASSIGN    157<<ASSIGN    159>>ASSIGN
MOVEIT
       159**LABEL     154--GOTO
PTMOVE
       151**DCL       159<<ASSIGN    159>>ASSIGN
UMAP$
         7**DCL         6--PROC      156--ENTRY     159>>ASSIGN
