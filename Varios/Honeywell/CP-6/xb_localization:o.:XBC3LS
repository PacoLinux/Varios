
PL6.E3A0      #001=SETLOCALE File=xb_localization:6.:XBC3TSI                     FRI 01/06/95 11:23 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        setlocale: PROC(P_category, locale);
        7        7           /*D*  NAME: setlocale
        8        8                 PROTOTYPE: char *setlocale (int category, const char *locale);
        9        9                 PURPOSE: Used to change or query the programs current locale.
       10       10           */
       11       11
       12       12           %INCLUDE xbi_locale_i6;
       13       44
       14       45    1      DCL P_category                SBIN;
       15       46    1      DCL locale                    CHAR (locale_length);
       16       47
       17       48    1      DCL category_as_ptr           PTR;
       18       49    1      DCL category REDEF category_as_ptr SBIN;
       19       50    1      DCL locale_length             UBIN;
       20       51    1      DCL 1 C_Locale CONSTANT UNAL,
       21       52    1         2  string               CHAR (0) INIT('C'),
       22       53    1         2  zero                 UBIN BYTE UNAL INIT (0);
       23       54    1      DCL 1 USA_Locale CONSTANT UNAL,
       24       55    1         2  string               CHAR (0) INIT ('USA'),
       25       56    1         2  zero                 UBIN BYTE UNAL INIT (0);
       26       57    1      DCL 1 English_Canada_Locale CONSTANT UNAL,
       27       58    1         2  string               CHAR (0) INIT ('ENGLISH_CANADA'),
       28       59    1         2  zero                 UBIN BYTE UNAL INIT (0);
       29       60    1      DCL i                      SBIN;
       30       61           %EQU max_result_size       = 50;
       31       62    1      DCL result                 CHAR (%max_result_size) STATIC;
       32       63    1      DCL result_size            SBIN;
       33       64    1      DCL used                   (0:%LOCALE_LAST) BIT (1) ALIGNED;
       34       65
       35       66    1      DCL XBI$LOCALE (0:%LC_LAST) UBIN STATIC SYMDEF INIT(%LOCALE_C*%LC_NUMB);
       36       67
       37       68    1      DCL XB_RETURN_ORDINAL_RESULT  ENTRY (1);
PL6.E3A0      #001=SETLOCALE File=xb_localization:6.:XBC3TSI                     FRI 01/06/95 11:23 Page:2    
       38       69    1      DCL XBI$STRLEN                ENTRY (2);
       39       70
       40       71    1      Append_Locale: PROC (locale);
       41       72    2         DCL locale              UBIN;
       42       73
       43       74    3         DO CASE (locale);
       44       75    3            CASE (%LOCALE_C);
       45       76    3               SUBSTR (result, result_size, 1) = 'C';
       46       77    3               result_size = result_size + 1;
       47       78    3            CASE (%LOCALE_USA);
       48       79    3               SUBSTR (result, result_size, 3) = 'USA';
       49       80    3               result_size = result_size + 3;
       50       81    3            CASE (%LOCALE_ENGLISH_CANADA);
       51       82    3               SUBSTR (result, result_size, 14) = 'ENGLISH_CANADA';
       52       83    3               result_size = result_size + 14;
       53       84    3         END;
       54       85    2         used (locale) = '1'B;
       55       86    2      END Append_Locale;
       56       87
       57       88    1      Update_Locale_Table: PROC (New_Locale);
       58       89    2         DCL New_Locale             UBIN;
       59       90    2         DCL i                      SBIN;
       60       91
       61       92    2         IF Category = %LC_ALL THEN
       62       93    3            DO i = %LC_FIRST TO %LC_LAST; XBI$LOCALE (i) = New_Locale; END;
       63       94    2         ELSE
       64       95    2            XBI$LOCALE (category) = New_Locale;
       65       96    2      END Update_Locale_Table;
       66       97
       67       98           /* usual kluge to get argument */
       68       99
       69      100    1      category_as_ptr = ADDR (P_category);
       70      101
       71      102           /* is category valid? */
       72      103
       73      104    1      IF category < %LC_ALL OR category > %LC_LAST THEN
       74      105              /* bum category */
PL6.E3A0      #001=SETLOCALE File=xb_localization:6.:XBC3TSI                     FRI 01/06/95 11:23 Page:3    
       75      106    1         CALL XB_RETURN_ORDINAL_RESULT (ADDR (NIL));
       76      107
       77      108    2      IF ADDR (locale) = ADDR(nil) THEN DO;
       78      109              /* user wants to know the current locale */
       79      110    2         result_size = 0;
       80      111    3         IF category = %LC_ALL THEN DO;
       81      112    4            DO i = %LOCALE_FIRST TO %LOCALE_LAST;
       82      113    4               used (i) = '0'B;
       83      114    4            END;
       84      115    3            CALL Append_Locale (XBI$LOCALE (%LC_FIRST));
       85      116    4            DO i = (%LC_FIRST + 1) TO %LC_LAST;
       86      117    5               IF NOT used (XBI$LOCALE (i)) THEN DO;
       87      118    5                  SUBSTR (result, result_size, 1) = ' ';
       88      119    5                  result_size = result_size + 1;
       89      120    5                  CALL Append_Locale (XBI$LOCALE (i));
       90      121    5               END;
       91      122    4            END;
       92      123    2         END; ELSE
       93      124    2            CALL Append_Locale (XBI$LOCALE (category));
       94      125    2         SUBSTR (result, result_size, 1) = BINASC (0);
       95      126    2         CALL XB_RETURN_ORDINAL_RESULT (ADDR (result));
       96      127    2      END;
       97      128
       98      129    1      CALL XBI$STRLEN (locale, locale_length);
       99      130    2      IF locale_length = 0 OR locale = 'USA' THEN DO;
      100      131    2         CALL Update_Locale_Table (%LOCALE_USA);
      101      132    2         CALL XB_RETURN_ORDINAL_RESULT (ADDR (USA_Locale));
      102      133    2      END; ELSE IF locale = 'ENGLISH_CANADA' THEN DO;
      103      134    2         CALL Update_Locale_Table (%LOCALE_ENGLISH_CANADA);
      104      135    2         CALL XB_RETURN_ORDINAL_RESULT (ADDR (English_Canada_Locale));
      105      136    2      END; ELSE IF locale = 'C' THEN DO;
      106      137    2         CALL Update_Locale_Table (%LOCALE_C);
      107      138    2         CALL XB_RETURN_ORDINAL_RESULT (ADDR (C_Locale));
      108      139    1      END; ELSE
      109      140    1         CALL XB_RETURN_ORDINAL_RESULT (ADDR (NIL));
      110      141    1   END setlocale;

PL6.E3A0      #001=SETLOCALE File=xb_localization:6.:XBC3TSI                     FRI 01/06/95 11:23 Page:4    
--  Include file information  --

   xbi_locale_i6.:XBC3TOU  is referenced.
      No diagnostics issued in procedure SETLOCALE.

   Procedure SETLOCALE requires 196 words for executable code.
   Procedure SETLOCALE requires 18 words of local(AUTO) storage.

    No errors detected in file xb_localization:6.:XBC3TSI    .

PL6.E3A0      #001=SETLOCALE File=xb_localization:6.:XBC3TSI                     FRI 01/06/95 11:23 Page:5    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=SETLOCALE File=xb_localization:6.:XBC3TSI                     FRI 01/06/95 11:23 Page:6    
          MINI XREF LISTING

APPEND_LOCALE
        71**PROC      115--CALL      120--CALL      124--CALL
CATEGORY
        49**DCL        92>>IF         95>>ASSIGN    104>>IF        104>>IF        111>>IF        124>>CALL
CATEGORY_AS_PTR
        48**DCL        49--REDEF     100<<ASSIGN
C_LOCALE
        51**DCL       138--CALL
ENGLISH_CANADA_LOCALE
        57**DCL       135--CALL
I
        60**DCL       112<<DOINDEX   113>>ASSIGN    116<<DOINDEX   117>>IF        120>>CALL
I IN PROCEDURE UPDATE_LOCALE_TABLE
        90**DCL        93<<DOINDEX    93>>ASSIGN
LOCALE
        46**DCL         6--PROC      108--IF        129<>CALL      130>>IF        133>>IF        136>>IF
LOCALE IN PROCEDURE APPEND_LOCALE
        72**DCL        71--PROC       74>>DOCASE     85>>ASSIGN
LOCALE_LENGTH
        50**DCL        46--IMP-SIZ   129>>CALL      129<>CALL      130>>IF        130>>IF        133>>IF
       136>>IF
NEW_LOCALE IN PROCEDURE UPDATE_LOCALE_TABLE
        89**DCL        88--PROC       93>>ASSIGN     95>>ASSIGN
P_CATEGORY
        45**DCL         6--PROC      100--ASSIGN
RESULT
        62**DCL        76<<ASSIGN     79<<ASSIGN     82<<ASSIGN    118<<ASSIGN    125<<ASSIGN    126--CALL
RESULT_SIZE
        63**DCL        76>>ASSIGN     77<<ASSIGN     77>>ASSIGN     79>>ASSIGN     80<<ASSIGN     80>>ASSIGN
        82>>ASSIGN     83<<ASSIGN     83>>ASSIGN    110<<ASSIGN    118>>ASSIGN    119<<ASSIGN    119>>ASSIGN
       125>>ASSIGN
UPDATE_LOCALE_TABLE
PL6.E3A0      #001=SETLOCALE File=xb_localization:6.:XBC3TSI                     FRI 01/06/95 11:23 Page:7    
        88**PROC      131--CALL      134--CALL      137--CALL
USA_LOCALE
        54**DCL       132--CALL
USED
        64**DCL        85<<ASSIGN    113<<ASSIGN    117>>IF
XBI$LOCALE
        66**DCL        93<<ASSIGN     95<<ASSIGN    115<>CALL      117>>IF        120<>CALL      124<>CALL
XBI$STRLEN
        69**DCL-ENT   129--CALL
XB_RETURN_ORDINAL_RESULT
        68**DCL-ENT   106--CALL      126--CALL      132--CALL      135--CALL      138--CALL      140--CALL
