VERSION E05

 05:43 07/30/97  FILE=QQD$BMAP.:E05TSI                                                                   1    BMAP - B00     
                                         1  *M* QQD$BMAP - Miscelaneous BMAP subroutines
                                         2  *T***********************************************************
                                         3  *T*                                                         *
                                         4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                         5  *T*                                                         *
                                         6  *T***********************************************************
                                         7          ENTDEF QQD$SLIDE       Move blocks of data left or right
                                         8          ENTDEF QQD$SEGSIZE     Obtain the size in words of a segment
                                         9          ENTDEF QQD$FS          Subtract 2 floating point #s
                                        10  *
                                        11          SEGREF PIASID
                                        12
                                        13  LDPARAM1 OPSYN LDP1
                                        14  *
             000000000001               15  PARAM1 EQU     1
             000000000003               16  PARAM2 EQU     3
             000000000004               17  PARAM3 EQU     4
             000000000000               18  PR0    EQU     0
             000000000001               19  PR1    EQU     1
             000000000002               20  PR2    EQU     2
             000000000003               21  PR3    EQU     3
             000000000004               22  PR4    EQU     4

 05:43 07/30/97  FILE=QQD$BMAP.:E05TSI           QQD$SLIDE Memory move                                   2    BMAP - B00     
                                        23          TTL       QQD$SLIDE Memory move
                                        24  *F*      NAME:    QQD$SLIDE
                                        25  *F*      PURPOSE: Use MLR or MRL instruction to move large pieces
                                        26  *F*               of data to an overlapping position.
                                        27  *D*      NAME:    QQD$SLIDE
                                        28  *D*      CALL:    CALL QQD$SLIDE(DATA$,DISP,SIZE);
                                        29  *D*      DESCRIPTION: DATA$ points to the data as follows:
                                        30  *D*               DISP and SIZE are in words. SIZE words of data are moved
                                        31  *D*               between DATA$ and PINCRW(DATA$,ABS(DISP)). If DISP is
                                        32  *D*               negative, MLR moves it to DATA$. If DISP is positive,
                                        33  *D*               MRL moves it from DATA$.
                                        34  *D*      ENVIRONMENT: The MRL instruction fails under the same conditions
                                        35  *D*               that bit-string instructions fail (non-DALIGNED DR).
                                        36  *D*
                                        37  *
 0 000000                               38         USE     QQD$SLIDE,1
                                        39  *
                                        40  *
   000000                               41  QQD$SLIDE NULL
   000000    0 00000 4715 00            42         LDP     PR1,0,,PR0      Ptr -> data pointer
   000001    0 00001 4735 00            43         LDP     PR3,1,,PR0      Ptr -> direction / disp
   000002    0 00002 4745 00            44         LDP     PR4,2,,PR0      Ptr -> size
   000003    1 00000 4715 00            45         LDPARAM1 0,,PARAM1      POINT TO THE DATA TO BE MOVED
   000004    4 00000 2361 00            46         LDQ     0,,PARAM3       SIZE (WDS) IN Q
   000005    3 00000 2351 00            47         LDA     0,,PARAM2       DISP (WDS) IN A
   000006    000002 7370 00             48         LLS     2               TO BYTES
   000007 (0)000014 6040 00             49         TMI     SLIDE1          SQUEEZE OPERATION, USE MLR
   000010    000 0 145 1015 40          50         MRL     (1,1,,),(1,1,,AL)
   000011    1 00000 0 0 0 0006         51         ADSC9   ,,QL,PARAM1
   000012    1 00000 0 0 0 0006         52         ADSC9   ,,QL,PARAM1
   000013    000001 7100 11             53         TRA     1,X1
                                        54  *
   000014    000000 5310 00             55  SLIDE1 NEG     0               COMPLEMENT DISPLACEMENT
   000015    000 0 140 1005 45          56         MLR     (1,1,,AL),(1,1,,)
   000016    1 00000 0 0 0 0006         57         ADSC9   ,,QL,PARAM1
   000017    1 00000 0 0 0 0006         58         ADSC9   ,,QL,PARAM1
   000020    000001 7100 11             59         TRA     1,X1

 05:43 07/30/97  FILE=QQD$BMAP.:E05TSI           QQD$SEGSIZE Determine segment size in words             3    BMAP - B00     
                                        60          TTL       QQD$SEGSIZE Determine segment size in words
                                        61  *F*      NAME:    QQD$SEGSIZE
                                        62  *        Get segment size of segment identified by segid of pointer
                                        63  *
                                        64  *                    PARAMETER      DEFINITION
                                        65  *                    ---------      ----------
                                        66  *        INPUT:          1          pointer identifing segment
                                        67  *        OUTPUT:         2          size of segment
                                        68  *
 2 000000                               69           USE      QQD$SEGSIZE,1
                                        70  *
   000000                               71  QQD$SEGSIZE NULL
   000000  X 000000 4714 07             72           LDP      PR1,PIASID,DL  Free space but be carful
   000001    0 00000 4735 00            73           LDP      PR3,0,,PR0     Get ptr -> to passed ptr
   000002    3 00000 4735 00            74           LDP      PR3,0,,PR3     Get actual pointer passed
                                        75           INHIB    ON
   000003    1 00000 0537 00            76           STD      PR3,0,,PR1     Store descriptor in PIA
   000004    1 00000 2353 00            77           LDA      0,,PR1         Get word 1 before interuppted
                                        78           INHIB    OFF
   000005    000020 7310 00             79           ARS      16             isolate bound
   000006    000001 0350 07             80           ADLA     1,DL           make into size
   000007    000002 7310 00             81           ARS      2              size in words
   000010    0 00001 4735 00            82           LDP      PR3,1,,PR0     Get ptr -> result area
   000011    3 00000 7551 00            83           STA      0,,PR3         return word count
   000012    000001 7100 11             84           TRA      1,X1           RETURN

 05:43 07/30/97  FILE=QQD$BMAP.:E05TSI           QQD$FS      Subtract 2 floating point #s                4    BMAP - B00     
                                        85           TTL      QQD$FS      Subtract 2 floating point #s
                                        86  *F*      NAME:    QQD$FS
                                        87  *        Subtract 2 #s and store the result
                                        88  *
                                        89  *                    PARAMETER      DEFINITION
                                        90  *                    ---------      ----------
                                        91  *        INPUT:          1          minuend
                                        92  *        INPUT:          2          Subtahend
                                        93  *        OUTPUT:         3          result
                                        94  *
 3 000000                               95           USE      QQD$FS,1
                                        96  *
   000000                               97  QQD$FS   NULL
   000000    0 00000 4715 00            98           LDP     PR1,0,,PR0      Ptr -> minuend
   000001    0 00001 4735 00            99           LDP     PR3,1,,PR0      Ptr -> subtrahend
   000002    0 00002 4745 00           100           LDP     PR4,2,,PR0      Ptr -> result
   000003    1 00000 4311 00           101           FLD     0,,PR1
   000004    3 00000 5751 00           102           FSB     0,,PR3
   000005    4 00000 4701 00           103           FSTR    0,,PR4
   000006    000001 7100 11            104           TRA     1,X1
                                       105           END

  CONTROL SECTION TABLE

   0 CODE   EVEN  000021 QQD$SLIDE
   1 RODATA EVEN  000000 LITERALS
   2 CODE   EVEN  000013 QQD$SEGSIZE
   3 CODE   EVEN  000007 QQD$FS

 05:43 07/30/97  FILE=QQD$BMAP.:E05TSI        SYMBOL TABLE                                               5    BMAP - B00     
 41000000 000000000001 PARAM1         *15        45        51        52        57        58
 41000000 000000000003 PARAM2         *16        47
 41000000 000000000004 PARAM3         *17        46
 03601000 000000000000 PIASID         *11        72
 41000000 000000000000 PR0            *18        42        43        44        73        82        98
                                       99       100
 41000000 000000000001 PR1            *19        42        72        76        77        98       101
 40000000 000000000002 PR2            *20
 41000000 000000000003 PR3            *21        43        73        74        76        82        83
                                       99       102
 41000000 000000000004 PR4            *22        44       100       103
 12101003 000000000000 QQD$FS           9       *97
 12101002 000000000000 QQD$SEGSIZE      8       *71
 12101000 000000000000 QQD$SLIDE        7       *41
 01101000 000000000014 SLIDE1          49       *55

      13 SYMBOLS

       0 MACROS

    SYMBOL SPACE USED   205 WORDS
     MACRO SPACE USED     0 WORDS
   INPUT RECORDS READ   210
 STATEMENTS PROCESSED    75
         ELAPSED TIME  0:01.20
             CPU TIME     0.80 SEC.
        ASSEMBLY RATE  5625 STATEMENTS/CPU MIN.

      NO ERRORS

