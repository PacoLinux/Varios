

14:09 JUL 28 '97 B$JIT_C.:E05SI                                            1    
    1      /*M*  B$JIT_C - Macros that describe the JIT */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* MEC,MOC,EXM=20,CLM=30,CRM=100   */
    8
    9                          /*F* NAME: D_B$JIT
   10                          .IBL D:B$JIT
   11                          */
   12                          /*F* NAME: Index to JIT Symbols
   13                          .IBL D:B$JIT_Symbols_Index
   14                          */
   15                          /*F*   NAME:   B$JIT
   16
   17                          ..::L1 "\\A"
   18                          The Job Information Table (JIT) contains system related
   19                          information about an individual CP-6 user.
   20                          From logon to logoff time, the JIT is used to accumulate
   21                          and retain facts about the user's session.
   22
   23                          The B$JIT file in :LIBRARY contains a BASED structure for
   24                          the JIT.  This structure my be addressed using the Linker
   25                          built pointer "B$JIT$".
   26                          ..::L1 "B$JIT Description\B$JIT\1"
   27
   28                          The following fields are contained in the JIT:
   29                          */
   30
   31      %MACRO B$JIT0 (B$JIT=B$JIT,STCLASS="BASED(B$JIT$)");
   32      DCL 1 B$JIT STCLASS DALIGNED,
   33            2 MODE UBIN(4) UNAL,
   34      /*K* MODE - UBIN(4).
   35      Specifies the type of user.  One of the
   36      following equated values will be contained in this field:
   37      }
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            2    
   38      } M_BATCH#   1      Batch User
   39      } M_GHOST#   2      Ghost User
   40      } M_INT#     3      Interactive User
   41      } M_TP#      4      Transaction Processing User
   42      */
   43      /* The following EQUs exist for reasons of security logging and
   44         are found in the B$JIT0_ES_MODES macro below.
   45
   46      } M_CG#      5      Comgroup
   47      } M_RES#     6      Resource
   48      */
   49      %EQU M_BATCH# = 1;
   50      %EQU M_GHOST# = 2;
   51      %EQU M_INT# = 3;
   52      %EQU M_TP# = 4;
   53            2 * BIT(5),
   54            2 USER UBIN(9) UNAL,
   55      /*K* USER - UBIN(9).
   56      Specifies the User Number that has been assigned
   57      to this user by the system.  This number is used internally as
   58      an index into the system user tables (B$USER) and is not used
   59      for any external user identification.
   60      */
   61            2 SYSID UBIN HALF UNAL,
   62      /*K* SYSID - UBIN HALF.
   63      Specifies the unique System Identification
   64      number that has been assigned to this user by the system.
   65      .XEQ
   66      This number is reset only on a cold boot or wrap around.
   67      All operator communication and external or printed form
   68      of user identification will use SYSID.
   69      */
   70            2 ACCN CHAR(8),
   71      /*K* ACCN - CHAR(8).
   72      The ACCouNt field contains the user's log on account.
   73      */
   74            2 UNAME CHAR(12),
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            3    
   75      /*K* UNAME - CHAR(12).
   76      The User NAME field contains the user's log on name.
   77      */
   78            2 FACCN CHAR(8),
   79      /*K* FACCN - CHAR(8).
   80      The File ACCouNt field contains the users default file account.
   81      This field is used as the account for any file reference made
   82      when an account is not explicitly specified. This field may
   83      be freely be changed by the user, and is not used to determine
   84      accessibility of files.
   85      See M$SETFMA, !DIRECTORY.
   86      */
   87            2 WOO CHAR(8),
   88      /*K* WOO - CHAR(8).
   89      The Workstation Of Origin field contains the name of the workstation
   90      from which this batch job originated. If the WSN option is specified
   91      on a !JOB record, that becomes the WOO for the job. Timesharing,
   92      ghost, and Transaction Processing jobs get their default WOO from
   93      the authorization file.
   94      .XEQ
   95      Regardless of the source of WOO, it is used
   96      as the default workstation for all unit record output if WSN is
   97      not specified. It can also be used for banners.
   98      */
   99            2 ERR,
  100      /*K* ERR.
  101      The ERR field in the JIT always contains the "current"
  102      error code reported on this user.  This field will be
  103      moved to the ALTRET or Stack Frame on the Task Control
  104      Block of the domain (user, alternate shared library,
  105      debugger or command processor) in control at the time
  106      of the error.  If this is the error to be reported to
  107      the user following all levels of exit control processing,
  108      this field will be moved to JIT.USRERR.  In any event
  109      JIT.ERR is subject to change on any change of domain
  110      and should therefore never be referenced by the user
  111      program.
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            4    
  112      JIT.ERR is in VLP_ERRCODE format and contains the
  113      following subfields:
  114      */
  115              3 FCG BIT(12) UNAL,
  116      /*K* ERR.FCG - BIT(12).  This field
  117      contains the two special six bit characters that
  118      identify the functional code group that is
  119      reporting the error.  Each character is composed
  120      of the low-order 6 bits of the ASCII code.
  121      */
  122              3 MID BIT(6) UNAL,
  123              3 UMID REDEF MID UBIN(6) UNAL,
  124      /*K* ERR.MID - BIT(6).  This field
  125      contains the special six bit character that identifies
  126      which module in the functional code group is
  127      reporting the error.  This character is composed
  128      of the low-order 6 bits of the ASCII code.
  129      */
  130              3 MON BIT(1) UNAL,
  131      /*K* ERR.MON - BIT(1).  This bit
  132      is set if this error is reported by the monitor;
  133      reset if reported by a processor.
  134      */
  135              3 CODE UBIN(14) UNAL,
  136      /*K* ERR.CODE - UBIN(14).  This field
  137      contains the number (0-16383) that identifies a particular
  138      error condition.  The file B_ERRORS_C contains a
  139      list of the error codes reported by the monitor.
  140      */
  141              3 SEV UBIN(3) UNAL,
  142      /*K* ERR.SEV - UBIN(3).  This field
  143      serves a double purpose.  Within the monitor it is
  144      used to indicate the seriousness of an error.  When
  145      passed by the user to M$ERRMSG it indicates the level
  146      of detail requested in the error message.
  147      SEV can range from 0 - 7.
  148      */
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            5    
  149            2 PRIV ,
  150      /*K* PRIV.
  151      There are five words that are defined in the JIT that are
  152      used to verify a user's privilege prior to performing
  153      certain system functions for this user.  A description of
  154      the contents of each of these words follows.  Within each
  155      of the words, the bit settings will correspond to
  156      a value for which an EQU statement is included in B$JIT_C.
  157      These are of the form:
  158      }
  159      }  %EQU PR_privname# = value;
  160      }
  161      where privname is the same as that of the sub-option available on
  162      the PRIVILEGE option of SUPER.  Please refer to the System
  163      Support Reference Manual for the names and meaning of these sub-options.
  164      */
  165              3 ACTIVE,
  166                4 FMEFT BIT(1) UNAL,
  167                4 FMBLK BIT(1) UNAL,
  168                4 FMSEC BIT(1) UNAL,
  169                4 FMDIAG BIT(1) UNAL,
  170                4 FMREAD BIT(1) UNAL,
  171                4 MODE BIT(1)  UNAL,/* reserved for sec logging*/
  172                4 SYSACCT BIT(1) UNAL,/* reserved for sec logging*/
  173                4 DOMANE BIT(1) UNAL,/* reserved for sec logging*/
  174                4 * BIT(1) UNAL,
  175                4 * BIT(1) UNAL,
  176                4 * BIT(1) UNAL,
  177                4 * BIT(1) UNAL,
  178                4 SNAP BIT(1) UNAL,
  179                4 SCREECH BIT(1) UNAL,
  180                4 DISPJOB BIT(1) UNAL,
  181                4 * BIT(1) UNAL,
  182                4 SYSCON BIT(1) UNAL,
  183                4 ASAVE BIT(1) UNAL,
  184                4 GPP BIT(1) UNAL,
  185                4 * BIT(1) UNAL,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            6    
  186                4 SYSLOG BIT(1) UNAL,
  187                4 MFEP BIT(1) UNAL,
  188                4 CFEP BIT(1) UNAL,
  189                4 CQ BIT(1) UNAL,
  190                4 INTCON BIT(1) UNAL,
  191                4 IOQW BIT(1) UNAL,
  192                4 IOQ BIT(1) UNAL,
  193                4 EXPM BIT(1) UNAL,
  194                4 PM BIT(1) UNAL,
  195                4 TND BIT(1) UNAL,
  196                4 JIT BIT(1) UNAL,
  197                4 * BIT(1) UNAL,
  198                4 MSYS BIT(1) UNAL,
  199                4 MAXMEM BIT(1) UNAL,
  200                4 EXMM BIT(1) UNAL,
  201                4 SPCLMM BIT(1) UNAL,
  202      /*K* PRIV.ACTIVE - BIT(36).
  203      Contains the privileges that are currently in effect.
  204      These active privileges are the combination of PRIV.JOB
  205      and PRIV.PRC.
  206      These privilege bits may also be set and reset by the
  207      M$SPRIV and M$RPRIV monitor service request.  Refer to
  208      the Monitor Services Reference Manual for a description
  209      of these requests.
  210      */
  211      %EQU PR_FMEFT#   = '400000000000'O;
  212      %EQU PR_FMBLK#   = '200000000000'O;
  213      %EQU PR_FMSEC#   = '100000000000'O;
  214      %EQU PR_FMDIAG#  = '040000000000'O;
  215      %EQU PR_FMREAD#  = '020000000000'O;
  216      %EQU PR_MODE# = '010000000000'O;/* not real priv-used as mask for sec logging*/
  217      %EQU PR_SYSACCT# = '004000000000'O;/* not real priv-used as mask for sec logging*/
  218      %EQU PR_DOMAIN# = '002000000000'O;/* not real priv-used as mask for sec logging*/
  219      /*               = '001000000000'O; */
  220      /*               = '000400000000'O; */
  221      /*               = '000200000000'O; */
  222      /*               = '000100000000'O; */
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            7    
  223      %EQU PR_SNAP#    = '000040000000'O;
  224      %EQU PR_SCREECH# = '000020000000'O;
  225      %EQU PR_DISPJOB# = '000010000000'O;
  226      /*               = '000004000000'O; */
  227      %EQU PR_SYSCON#  = '000002000000'O;
  228      %EQU PR_ASAVE#   = '000001000000'O;
  229      %EQU PR_GPP#     = '000000400000'O;
  230      /*               = '000000200000'O; */
  231      %EQU PR_SYSLOG#  = '000000100000'O;
  232      %EQU PR_MFEP#    = '000000040000'O;
  233      %EQU PR_CFEP#    = '000000020000'O;
  234      %EQU PR_CQ#      = '000000010000'O;
  235      %EQU PR_INTCON#  = '000000004000'O;
  236      %EQU PR_IOQW#    = '000000002000'O;
  237      %EQU PR_IOQ#     = '000000001000'O;
  238      %EQU PR_EXPM#    = '000000000400'O;
  239      %EQU PR_PM#      = '000000000200'O;
  240      %EQU PR_TND#     = '000000000100'O;
  241      %EQU PR_JIT#     = '000000000040'O;
  242      /*               = '000000000020'O; */
  243      %EQU PR_MSYS#    = '000000000010'O;
  244      %EQU PR_MAXMEM#  = '000000000004'O;
  245      %EQU PR_EXMM#    = '000000000002'O;
  246      %EQU PR_SPCLMM#  = '000000000001'O;
  247
  248      /* EQUs used by the monitor for masks.
  249      */
  250      %EQU PR_MM#      = '000000000003'O;
  251      %EQU PR_TDSYSCN# = '000002000100'O;
  252      %EQU PR_WRSYSLG# = '000002100100'O;
  253      %EQU PR_LCP6#    = '120060114117'O;
  254      %EQU PR_FGPP#    = '000002000000'O;
  255      %EQU PR_FEXPM#   = '000001000000'O;
  256              3 AUTH,
  257                4 FMEFT BIT(1) UNAL,
  258                4 FMBLK BIT(1) UNAL,
  259                4 FMSEC BIT(1) UNAL,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            8    
  260                4 FMDIAG BIT(1) UNAL,
  261                4 FMREAD BIT(1) UNAL,
  262                4 MODE BIT(1)  UNAL,/* reserved for sec logging*/
  263                4 SYSACCT BIT(1) UNAL,/* reserved for sec logging*/
  264                4 DOMANE BIT(1) UNAL,/* reserved for sec logging*/
  265                4 * BIT(1) UNAL,
  266                4 * BIT(1) UNAL,
  267                4 * BIT(1) UNAL,
  268                4 * BIT(1) UNAL,
  269                4 SNAP BIT(1) UNAL,
  270                4 SCREECH BIT(1) UNAL,
  271                4 DISPJOB BIT(1) UNAL,
  272                4 * BIT(1) UNAL,
  273                4 SYSCON BIT(1) UNAL,
  274                4 ASAVE BIT(1) UNAL,
  275                4 GPP BIT(1) UNAL,
  276                4 * BIT(1) UNAL,
  277                4 SYSLOG BIT(1) UNAL,
  278                4 MFEP BIT(1) UNAL,
  279                4 CFEP BIT(1) UNAL,
  280                4 CQ BIT(1) UNAL,
  281                4 INTCON BIT(1) UNAL,
  282                4 IOQW BIT(1) UNAL,
  283                4 IOQ BIT(1) UNAL,
  284                4 EXPM BIT(1) UNAL,
  285                4 PM BIT(1) UNAL,
  286                4 TND BIT(1) UNAL,
  287                4 JIT BIT(1) UNAL,
  288                4 * BIT(1) UNAL,
  289                4 MSYS BIT(1) UNAL,
  290                4 MAXMEM BIT(1) UNAL,
  291                4 EXMM BIT(1) UNAL,
  292                4 SPCLMM BIT(1) UNAL,
  293      /*K* PRIV.AUTH - BIT(36).
  294      Contains the user's privilege indicators as defined,
  295      via SUPER, in the :USERS file.
  296      */
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            9    
  297              3 JOB,
  298                4 FMEFT BIT(1) UNAL,
  299                4 FMBLK BIT(1) UNAL,
  300                4 FMSEC BIT(1) UNAL,
  301                4 FMDIAG BIT(1) UNAL,
  302                4 FMREAD BIT(1) UNAL,
  303                4 MODE BIT(1)  UNAL,/* reserved for sec logging*/
  304                4 SYSACCT BIT(1) UNAL,/* reserved for sec logging*/
  305                4 DOMANE BIT(1) UNAL,/* reserved for sec logging*/
  306                4 * BIT(1) UNAL,
  307                4 * BIT(1) UNAL,
  308                4 * BIT(1) UNAL,
  309                4 * BIT(1) UNAL,
  310                4 SNAP BIT(1) UNAL,
  311                4 SCREECH BIT(1) UNAL,
  312                4 DISPJOB BIT(1) UNAL,
  313                4 * BIT(1) UNAL,
  314                4 SYSCON BIT(1) UNAL,
  315                4 ASAVE BIT(1) UNAL,
  316                4 GPP BIT(1) UNAL,
  317                4 * BIT(1) UNAL,
  318                4 SYSLOG BIT(1) UNAL,
  319                4 MFEP BIT(1) UNAL,
  320                4 CFEP BIT(1) UNAL,
  321                4 CQ BIT(1) UNAL,
  322                4 INTCON BIT(1) UNAL,
  323                4 IOQW BIT(1) UNAL,
  324                4 IOQ BIT(1) UNAL,
  325                4 EXPM BIT(1) UNAL,
  326                4 PM BIT(1) UNAL,
  327                4 TND BIT(1) UNAL,
  328                4 JIT BIT(1) UNAL,
  329                4 * BIT(1) UNAL,
  330                4 MSYS BIT(1) UNAL,
  331                4 MAXMEM BIT(1) UNAL,
  332                4 EXMM BIT(1) UNAL,
  333                4 SPCLMM BIT(1) UNAL,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            10   
  334      /*K* PRIV.JOB - BIT(36).
  335      Contains the privileges that have been requested via
  336      the !PRIV command of IBEX.  The privilege must appear in
  337      JIT.AUTH before IBEX will set it in JIT.JOB.
  338      */
  339              3 PRC,
  340                4 FMEFT BIT(1) UNAL,
  341                4 FMBLK BIT(1) UNAL,
  342                4 FMSEC BIT(1) UNAL,
  343                4 FMDIAG BIT(1) UNAL,
  344                4 FMREAD BIT(1) UNAL,
  345                4 MODE BIT(1)  UNAL,/* reserved for sec logging*/
  346                4 SYSACCT BIT(1) UNAL,/* reserved for sec logging*/
  347                4 DOMANE BIT(1) UNAL,/* reserved for sec logging*/
  348                4 * BIT(1) UNAL,
  349                4 * BIT(1) UNAL,
  350                4 * BIT(1) UNAL,
  351                4 * BIT(1) UNAL,
  352                4 SNAP BIT(1) UNAL,
  353                4 SCREECH BIT(1) UNAL,
  354                4 DISPJOB BIT(1) UNAL,
  355                4 * BIT(1) UNAL,
  356                4 SYSCON BIT(1) UNAL,
  357                4 ASAVE BIT(1) UNAL,
  358                4 GPP BIT(1) UNAL,
  359                4 * BIT(1) UNAL,
  360                4 SYSLOG BIT(1) UNAL,
  361                4 MFEP BIT(1) UNAL,
  362                4 CFEP BIT(1) UNAL,
  363                4 CQ BIT(1) UNAL,
  364                4 INTCON BIT(1) UNAL,
  365                4 IOQW BIT(1) UNAL,
  366                4 IOQ BIT(1) UNAL,
  367                4 EXPM BIT(1) UNAL,
  368                4 PM BIT(1) UNAL,
  369                4 TND BIT(1) UNAL,
  370                4 JIT BIT(1) UNAL,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            11   
  371                4 * BIT(1) UNAL,
  372                4 MSYS BIT(1) UNAL,
  373                4 MAXMEM BIT(1) UNAL,
  374                4 EXMM BIT(1) UNAL,
  375                4 SPCLMM BIT(1) UNAL,
  376      /*K* PRIV.PRC - BIT(36).
  377      Contains the processor privilege bits, as defined by
  378      LINK options, from the :SYS processor's head record.
  379      If the currently executing run unit is not from :SYS,
  380      PRIV.PRC is set to zero.
  381      */
  382              3 SAVED,
  383                4 FMEFT BIT(1) UNAL,
  384                4 FMBLK BIT(1) UNAL,
  385                4 FMSEC BIT(1) UNAL,
  386                4 FMDIAG BIT(1) UNAL,
  387                4 FMREAD BIT(1) UNAL,
  388                4 MODE BIT(1)  UNAL,/* reserved for sec logging*/
  389                4 SYSACCT BIT(1) UNAL,/* reserved for sec logging*/
  390                4 DOMANE BIT(1) UNAL,/* reserved for sec logging*/
  391                4 * BIT(1) UNAL,
  392                4 * BIT(1) UNAL,
  393                4 * BIT(1) UNAL,
  394                4 * BIT(1) UNAL,
  395                4 SNAP BIT(1) UNAL,
  396                4 SCREECH BIT(1) UNAL,
  397                4 DISPJOB BIT(1) UNAL,
  398                4 * BIT(1) UNAL,
  399                4 SYSCON BIT(1) UNAL,
  400                4 ASAVE BIT(1) UNAL,
  401                4 GPP BIT(1) UNAL,
  402                4 * BIT(1) UNAL,
  403                4 SYSLOG BIT(1) UNAL,
  404                4 MFEP BIT(1) UNAL,
  405                4 CFEP BIT(1) UNAL,
  406                4 CQ BIT(1) UNAL,
  407                4 INTCON BIT(1) UNAL,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            12   
  408                4 IOQW BIT(1) UNAL,
  409                4 IOQ BIT(1) UNAL,
  410                4 EXPM BIT(1) UNAL,
  411                4 PM BIT(1) UNAL,
  412                4 TND BIT(1) UNAL,
  413                4 JIT BIT(1) UNAL,
  414                4 * BIT(1) UNAL,
  415                4 MSYS BIT(1) UNAL,
  416                4 MAXMEM BIT(1) UNAL,
  417                4 EXMM BIT(1) UNAL,
  418                4 SPCLMM BIT(1) UNAL,
  419      /*K* PRIV.SAVED - BIT(36).
  420      Contains the value from PRIV.ACTIVE while the associated
  421      Command Processor is in control.  This value is then
  422      restored to PRIV.ACTIVE when the command processor returns
  423      control to the user.
  424      */
  425            2 PPRIV,
  426              3 CNTRLD BIT(1) UNAL,
  427              3 CNTRLC BIT(1) UNAL,
  428              3 EFT BIT(1) UNAL,
  429              3 EL BIT(1) UNAL,
  430              3 LABEL BIT(1) UNAL,
  431              3 PIGD BIT(1) UNAL,
  432              3 PIGC BIT(1) UNAL,
  433              3 SPIDERD BIT(1) UNAL,
  434              3 SPIDERC BIT(1) UNAL,
  435              3 SUPER BIT(1) UNAL,
  436              3 NETCON BIT(1) UNAL,
  437              3 SUPERAUTH BIT(1) UNAL,
  438              3 SUPERWSN BIT(1) UNAL,
  439              3 SUPERFORM BIT(1) UNAL,
  440              3 PADMIN BIT(1) UNAL,
  441              3 SUPERD BIT(1) UNAL,
  442              3 VOLINIT BIT(1) UNAL,
  443              3 REPLAY BIT(1) UNAL,
  444              3 RATES BIT(1) UNAL,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            13   
  445              3 SYSCON BIT(1) UNAL,
  446              3 PIGETTE BIT(1) UNAL,
  447              3 * BIT(15) UNAL,
  448      /*K* PPRIV - BIT(36).
  449      Contains bit settings indicating which privileged
  450      processors may be put into execution by this user.
  451      Refer to the description of the PPRIVILEGE option
  452      of SUPER in the System Support Reference Manual for a description
  453      of the various processor privileges that may be set.
  454      Each of the processor privileges have an EQU defined here
  455      in the JIT that may be used to test the bit setting in
  456      JIT.PPRIV.  These are of the form:
  457      }
  458      }  %EQU PPR_pprivname# = value;
  459      }
  460      where pprivname is the same as that of the option.
  461      */
  462      %EQU PPR_CNTRLD#='400000000000'O;
  463      %EQU PPR_CNTRLC#='200000000000'O;
  464      %EQU PPR_EFT#='100000000000'O;
  465      %EQU PPR_EL#='040000000000'O;
  466      %EQU PPR_LABEL#='020000000000'O;
  467      %EQU PPR_PIGD#='010000000000'O;
  468      %EQU PPR_PIGC#='004000000000'O;
  469      %EQU PPR_SPIDERD#='002000000000'O;
  470      %EQU PPR_SPIDERC#='001000000000'O;
  471      %EQU PPR_SUPER#='000400000000'O;
  472      %EQU PPR_NETCON#='000200000000'O;
  473      %EQU PPR_SUPERAUTH#='000100000000'O;
  474      %EQU PPR_SUPERWSN#='000040000000'O;
  475      %EQU PPR_SUPERFORM#='000020000000'O;
  476      %EQU PPR_PADMIN#   ='000010000000'O;
  477      %EQU PPR_SUPERD#='000004000000'O;
  478      %EQU PPR_VOLINIT# ='000002000000'O;
  479      %EQU PPR_REPLAY# ='000001000000'O;
  480      %EQU PPR_RATES# ='000000400000'O;
  481      %EQU PPR_SYSCON# ='000000200000'O;
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            14   
  482      %EQU PPR_PIGETTE# ='000000100000'O;
  483            2 FPSN CHAR(6),
  484      /*K* FPSN - CHAR(6).
  485      The File PackSet Name field contains the packset name which is to
  486      be used in conjunction with FACCN for default file references.
  487      */
  488            2 OUTPRIO UBIN(9) UNAL,
  489      /*K* OUTPRIO - UBIN(9).
  490      The OUTput PRIOrity field contains the priority value to be
  491      assigned to output symbiont files generated by this job or session.
  492      */
  493            2 DCBNO UBIN(9)UNAL,
  494      /*K* DCBNO - UBIN(9).
  495      Contains the number of the DCB that was specified
  496      on the current monitor service request.  If the
  497      service request doesn't have a DCB associated with
  498      it, this value will be zero.  If an ALTRETURN is
  499      made to the user request, this field will be placed
  500      in the ALTRET frame along with the value from JIT.ERR.
  501      As with JIT.ERR, JIT.DCBNO should not be referenced by
  502      the user program.
  503      */
  504            2 *(0:4) UBIN,
  505      %MEND;
  506      %MACRO B$JIT0_ES_MODES;
  507      /*K* B$JIT0_ES_MODES.
  508      This macro specifies equates used for security logging. This is to
  509      accommodate additional attribute types known at logon which are never
  510      found in the JIT but may be interesting for security purposes.
  511      */
  512      /*
  513         SLUG has its own equates for these, but they conflict with equate
  514         values already used in the JIT.
  515      */
  516      %EQU M_CG#    = 5;            /* Comgroup                                                         */
  517      %EQU M_RES#   = 6;            /* Resource                                                         */
  518      %MEND;
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            15   
  519      %MACRO U$JIT1;
  520            2 PRFLAGS,
  521      /*K* PRFLAGS.
  522      The PRocessor FLAGS field contains a set of flags which are set
  523      by the command processor based on the run unit invocation line
  524      and other commands.
  525      */
  526              3 SI BIT(1) UNAL,
  527      /*K* PRFLAGS.SI - BIT(1).
  528      The Source Input field is a flag which is set if a fid was specified
  529      in the fid1 position of the run unit invocation.
  530      */
  531              3 UI BIT(1) UNAL,
  532      /*K* PRFLAGS.UI - BIT(1).
  533      The Update Input field is a flag which is set if a fid was specified
  534      in the fid2 position of the run unit invocation.
  535      */
  536              3 OU BIT(1) UNAL,
  537      /*K* PRFLAGS.OU - BIT(1).
  538      The Object Unit field is a flag which is set if a fid was specified
  539      in the fid3 position of the run unit invocation.
  540      */
  541              3 LS BIT(1) UNAL,
  542      /*K* PRFLAGS.LS - BIT(1).
  543      The List Source field is a flag which is set if a fid was specified
  544      in the fid4 position of the run unit invocation.
  545      */
  546              3 COMMENT BIT(1) UNAL,
  547      /*K* PRFLAGS.COMMENT - BIT(1).
  548      The COMMENT field is a flag which is set unless a !DONT COMMENT
  549      command was entered immediately prior to this job step.
  550      */
  551              3 LIST BIT(1) UNAL,
  552      /*K* PRFLAGS.LIST - BIT(1).
  553      The LIST field is a flag which is set unless a !DONT LIST
  554      command was entered immediately prior to this job step.
  555      */
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            16   
  556              3 OUTPUT BIT(1) UNAL,
  557      /*K* PRFLAGS.OUTPUT - BIT(1).
  558      This field is not currently used.
  559      */
  560              3 NSSYNTAX BIT(1) UNAL,
  561      /*K* PRFLAGS.NSSYNTAX - BIT(1).
  562      The Non-Standard SYNTAX field is a flag that is set by the command
  563      processor if a run unit invocation did not conform to the standard
  564      syntax.  When a program issues an M$LINK or M$LDTRC monitor service
  565      request with a CP_CMD command, the NSSYNTAX flag will be set or
  566      cleared based on the command passed to the command processor.
  567      When a program issues an M$LINK or M$LDTRC request without using
  568      the CP_CMD option, the NSSYNTAX bit will always be set.
  569      */
  570              3 CONTINUED BIT(1) UNAL,
  571      /*K* PRFLAGS.CONTINUED - BIT(1).
  572      The CONTINUED field is a flag which is set if a run unit invocation
  573      command is continued. The continuation records may be found in the
  574      file *CONTINUATION_COMMANDS.
  575      */
  576              3 NOSCAN BIT(1) UNAL,
  577      /*K* PRFLAGS.NOSCAN - BIT(1).
  578      The NOSCAN field is a flag that is set when the contents of CCBUF
  579      have not been scanned by the Command Processor.  When this bit is
  580      set the contents of PRFLAGS.NSYSNTAX has no meaning.
  581      */
  582              3 POINT BIT(1) UNAL,
  583      /*K* PRFLAGS.POINT - BIT(1).
  584      The POINT field is a flag which is reset until a !POINT
  585      command is entered.  It is queried by XUG$GETCMD and related routines
  586      to control the method used to point out errors in command lines.
  587      */
  588              3 EXPOUND BIT(1) UNAL,
  589      /*K* PRFLAGS.EXPOUND - BIT(1).
  590      The EXPOUND field is a flag which is set unless a !DONT EXPOUND
  591      command was entered.  It is queried by XUG$GETCMD to determine whether
  592      syntax error messages should be followed by "Type a ? for details".
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            17   
  593      */
  594              3 POSITION BIT (1),
  595      /*K*  PRFLAGS.POSITION - BIT(1).
  596      This flag, which is normally set, can be reset
  597      via the IBEX command !DONT POSITION.  If this flag is set, the XUG$GETCMD
  598      package will attempt to reload the user's reread (escape-D) buffer so that
  599      if the user types escape-D, the terminal's cursor will be positioned
  600      at the point of the first error reported via XUG$ERRPTR.
  601      */
  602              3 CORRECT BIT(1) UNAL, /*DAVE PLATT - Do you want this update??*/
  603              3 WHEN BIT(1) UNAL,
  604      /*K*  PRFLAGS.WHEN - BIT(1).
  605      This flag indicates that an IBEX WHEN command
  606      is in effect for this command stream level, B$JIT.CSLEV.  This flag
  607      can be reset via the IBEX command !DONT WHEN.
  608      */
  609              3 * BIT(21) UNAL,
  610
  611      %EQU PRF_LINK#='743400000000'O;/*restore SI, UI, OU, LS, NSSYNTAX, CONTINUED, NOSCAN*/
  612      %EQU PRF_CP# ='034340000000'O;/*preserve COMMENT, LIST, OUTPUT, EXPOUND, POINT, POSITION          */
  613
  614            2 SWITCH (0:35) BIT(1) UNAL,
  615      /*K* SWITCH - ARRAY(0:35) BIT(1).
  616      The SWITCH field contains a set of 36 pseudo sense switches which
  617      may be set/reset by !SWITCH and set/reset by M$SSWITCH/M$RSWITCH.
  618      */
  619            2 CCARS SBIN HALF UNAL,
  620      /*K* CCARS - SBIN HALF.
  621      The Control Command Actual Record Size field contains the size of
  622      the last run unit invocation command.
  623      */
  624            2 CCDISP SBIN HALF UNAL,
  625      /*K* CCDISP - SBIN HALF.
  626      The Control Command DISPlacement field contains the position within
  627      the last run unit invocation at which the beginning of options may
  628      be found.
  629      */
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            18   
  630            2 CCBUF CHAR(256),
  631      /*K* CCBUF - CHAR(256).
  632      The Control Command BUFfer contains the the text of the first record
  633      of the last run unit invocation.
  634      */
  635            2 USERWORD (0:3) UBIN(18) UNAL,
  636      /*K* USERWORD - ARRAY(0:3) UBIN(18).
  637      The USER WORD field is a set of four values available for user use.
  638      See M$USRFIELD.
  639      */
  640            2 INSTWORD (0:3) UBIN(18) UNAL,
  641      /*K* INSTWORD - ARRAY(0:3) UBIN(18).
  642      The INSTallation WORD field is a set of four values available for
  643      installation use. See M$USRFIELD.
  644      */
  645            2 JOBUNIT (0:3) UBIN(18) UNAL,
  646      /*K* JOBUNIT - ARRAY(0:3) UBIN(18).
  647      The JOB UNIT field is a set of four counters which are maintained
  648      through an entire job and may be used for 'transaction charging'.
  649      See M$CHGUNIT and RATES processor.
  650      */
  651            2 STEPUNIT (0:3) UBIN(18) UNAL,
  652      /*K* STEPUNIT - ARRAY(0:3) UBIN(18).
  653      The STEP UNIT field is a set of four counters which are maintained
  654      through a job step and reset to zero at the beginning of each
  655      job step. These may be used for 'transaction charging'.
  656      See M$CHGUNIT and RATES processor.
  657      */
  658            2 CPFLAGS1,
  659              3 LOGOFF BIT(1) UNAL,
  660              3 JSTEP BIT(1) UNAL,
  661              3 RUND BIT(1) UNAL,
  662
  663              3 YC BIT(1) UNAL,
  664              3 YCPMME BIT(1) UNAL,
  665              3 SSTART BIT(1) UNAL,
  666
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            19   
  667              3 LNKPMME BIT(1) UNAL,
  668              3 * BIT(1) UNAL,
  669              3 YCGET BIT(1) UNAL,
  670
  671              3 WHEN_INPUT BIT(1) UNAL,
  672              3 ECHO_LINK BIT(1) UNAL,
  673              3 DONTRFEXT3 BIT(1) UNAL,
  674
  675              3 SOMENOTIFY BIT(1) UNAL,
  676              3 STARSACC BIT(1) UNAL,
  677              3 LASTCPEXISTS BIT(1) UNAL,
  678
  679              3 LASTCP BIT(1) UNAL,
  680              3 FIRSTCP BIT(1) UNAL,
  681              3 STARPROC BIT(1) UNAL,
  682
  683              3 TESTMODE BIT(1) UNAL,
  684              3 INITIALIZE BIT(1) UNAL,
  685              3 DRIBBLE BIT(1) UNAL,
  686
  687              3 SKIPABORT BIT(1) UNAL,
  688              3 EXIT# BIT(1) UNAL,
  689              3 KEEPDS BIT(1) UNAL,
  690
  691              3 TRMNATE BIT(1) UNAL,
  692              3 NOTIFY BIT(1) UNAL,
  693              3 PROCACCT BIT(1) UNAL,
  694
  695              3 STEPACCT BIT(1) UNAL,
  696              3 STEPLMT BIT(1) UNAL,
  697              3 PROTECT BIT(1) UNAL,
  698
  699              3 BUFFULL BIT(1) UNAL,
  700              3 CFREAD BIT(1) UNAL,
  701              3 ECHO BIT(1) UNAL,
  702
  703              3 BRK BIT(1) UNAL,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            20   
  704              3 SCREECH BIT(1) UNAL,
  705              3 SLEAZE BIT(1) UNAL,
  706              3 DELTA REDEF SLEAZE BIT(1),
  707      /*K* CPFLAGS1 - BIT(36).
  708      CPFLAGS1 is used by the monitor to communicate with the
  709      command processor and is also available for use by the
  710      command processor as a word where he may remember user
  711      directives.
  712
  713      Bits 0 -> 8 are used by the monitor to communicate job step
  714      information to the command processor. These bits are not to
  715      be set or reset by the command processor. The meanings of
  716      these bit settings are:
  717      }
  718      }   CP_LOGOFF#     When set indicates that the system has
  719      }'400000000000'O   detected a line hang-up of a time-sharing
  720      }                  terminal or an operator abort of a user
  721      }                  and indicates to the command processor that
  722      }                  no more job steps are allowed.  This bit may
  723      }                  be set in conjunction with any of the other
  724      }                  CPFLAGS1 bits that are owned by the monitor.
  725      }
  726      }   CP_JSTEP#      Indicates that the user is at Job Step.
  727      }'200000000000'O   Unless the user is at Job Step, another
  728      }                  run unit may not be started.
  729      }
  730      }   CP_RUND#       Indicates that all levels of exit control
  731      }'100000000000'O   processing are completed and the user is
  732      }                  about to be rundown.  The program image is
  733      }                  intact; a debugger may be associated or
  734      }                  the program image may be SAVEd.
  735      }
  736      }   CP_YC#         Indicates that the command processor is
  737      }'040000000000'O   being entered because the time-sharing
  738      }                  user has typed the Control-Y sequence.
  739      }                  The user program image is intact; a debugger
  740      }                  may be associated or the program image may
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            21   
  741      }                  be SAVEd.
  742      }
  743      }   CP_YCPMME#     Indicates that the command processor is
  744      }'020000000000'O   being entered because of an M$YC monitor
  745      }                  service request.
  746      }
  747      }   CP_SSTART#     Used only by the monitor.  Indicates that
  748      }'010000000000'O   a Start Step Accounting record has been
  749      }                  written.  This bit is reset when the Stop
  750      }                  Step Accounting record is written.
  751      }
  752      }   CP_LNKPMME#    Indicates that the command processor is
  753      }'004000000000'O   being entered because of an M$LINK or M$LDTRC
  754      }                  monitor service request specifying a command
  755      }                  to be parsed by the command processor.  CP_JSTEP#
  756      }                  will also be set if the request were M$LDTRC.  In
  757      }                  either case, the user program will have been
  758      }                  rundown.
  759      }
  760      }
  761      }
  762      The following bits are also used for monitor / command processor
  763      or LOGON / command processor communication:
  764      }
  765      }   CP_YCGET#      Set in conjunction with CP_YC# after a successful M$CPEXIT
  766      }'001000000000'O   with GET specified.  The command processor should reset
  767      }                  this flag after using it.
  768      }
  769      }   CP_STARSACC#   Set by LOGON if the '*S_ACCOUNTING' option
  770      }'000020000000'O   of SUPER was specified for this user.  When
  771      }                  this bit is set, :ACCTLG records will be
  772      }                  written to the user's *S file as well.
  773      }
  774      } CP_LASTCPEXISTS# Set by LOGON if the 'LAST CPROC' option
  775      }'000010000000'O   of SUPER has been specified for this user.
  776      }                  Indicates that the default Command Processor is
  777      }                  to make its final M$CPEXIT to this user's logoff
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            22   
  778      }                  command processor as specified in the :USERS
  779      }                  file (AS$USERS.LASTCPROC.NAME, which is
  780      }                  indexed by mode) and not use the delete user
  781      }                  form of M$CPEXIT.
  782      }
  783      }   CP_LASTCP#     To be set by the command processor when issuing
  784      }'000004000000'O   an M$CPEXIT to the logoff command processor.
  785      }                  This allows one final job step after the monitor
  786      }                  has set CP_LOGOFF#.
  787      }
  788      }   CP_FIRSTCP#    LOGON sets this bit when exiting to the user's
  789      }'000002000000'O   command processor.  The command processor
  790      }                  finds this bit set should reset it.
  791      }
  792      }   CP_STARPROC#   Set by the monitor whenever a proprietary
  793      }'000001000000'O   accounting record is written to the *S file.
  794      }                  Refer to M$ACCT in the Host Monitor Services
  795      }                  Reference Manual.
  796      }
  797      }   CP_DRIBBLE#    To be set and reset by the command processor
  798      }'000000100000'O   to indicate to the monitor if interactive
  799      }                  terminal transactions are to be recorded on
  800      }                  the file or device assigned to the M$DRIBBLE
  801      }                  DCB.
  802      .spb 1
  803      }   CP_EXIT#       Set by the monitor to indicate that the error
  804      }'000000020000'O   in JIT.USRERR is not to be reported to the user.
  805      }                  The command processor should, however, use the
  806      }                  value of JIT.USRERR.SEV as the severity level
  807      }                  of the error message last reported to the user.
  808      }
  809      }   CP_KEEPDS#     This bit may be set by the command processor
  810      }'000000010000'O   to indicate that the monitor is not to release
  811      }                  the command processor dynamic data segments.
  812      }
  813      }   CP_PROCACCT#   Set by the monitor whenever a run unit from the
  814      }'000000001000'O   :SYS account that has been LINKed with the
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            23   
  815      }                  SURCHARGE option is put into execution.  When
  816      }                  this bit is set, the monitor will cause
  817      }                  proprietary start and stop records to be
  818      }                  written to the *S file.
  819      }
  820      }   CP_STEPACCT#   Set by LOGON if the 'STEPACCNT' option of
  821      }'000000000400'O   SUPER was specified for this user.  When set,
  822      }                  the monitor will cause job step start and stop
  823      }                  records to be written to the *S file.
  824      }
  825      }
  826      }
  827      The remainder of the bits in CPFLAGS1 may be used as seen fit
  828      by the command processor.  IBEX has predefined the bits for a
  829      specific use as follows:
  830      }
  831      }   CP_WHEN_INPUT# This flag is set by IBEX to indicate that the user
  832      }'000400000000'O   has input a WHEN command and that a WHEN control
  833      }                  record has been written to the *S file.
  834      }
  835      }   CP_ECHO_LINK#  This flag is set by the monitor for M$LINK with
  836      }'000200000000'O   both CP_CMD and ECHO set; reset if CP_CMD specified
  837      }                  and ECHO not specified.
  838      }
  839      }   CP_DONTRFEXT3# This flag tells IBEX not to RESET FEXT bit for #3
  840      }'000100000000'O   because the file name was *G.  This is for when
  841      }                  IBEX is at JOBSTEP.
  842      }
  843      }   CP_SOMENOTIFY# There is something to NOTIFY user.
  844      }'000040000000'O
  845      }
  846      }   CP_SKIPABORT#  Don't abort user at this time
  847      }'000000040000'O
  848      }
  849      }   CP_TRMNATE#    Logoff this user after rundown
  850      }'000000004000'O
  851      }
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            24   
  852      }   CP_NOTIFY#     NOTIFY user of changes in BATCH jobs
  853      }'000000002000'O
  854      }
  855      }   CP_STEPLMT#    Step limits in effect
  856      }'000000000200'O
  857      }
  858      }   CP_PROTECT#    Don't prompt !quit
  859      }'000000000100'O
  860      }
  861      }   CP_BUFFULL#    Command in B$JIT.CCBUF
  862      }'000000000040'O
  863      }
  864      }   CP_CFREAD#     Read from XEQ file
  865      }'000000000020'O
  866      }
  867      }   CP_ECHO#       Echo commands from XEQ
  868      }'000000000010'O
  869      }
  870      }   CP_BRK#        Break received
  871      }'000000000004'O
  872      }
  873      }   CP_SCREECH#    Prevent multiple snaps when IBEX aborts
  874      }'000000000002'O
  875      }
  876      }   CP_DELTA#      !U command found
  877      }'000000000001'O
  878      }
  879      */
  880      %EQU CP_DELTA#     = '000000000001'O;
  881      %EQU CP_SLEAZE#    = '000000000001'O;
  882      %EQU CP_SCREECH#   = '000000000002'O;
  883      %EQU CP_BRK#       = '000000000004'O;
  884      %EQU CP_ECHO#      = '000000000010'O;
  885      %EQU CP_CFREAD#    = '000000000020'O;
  886      %EQU CP_BUFFULL#   = '000000000040'O;
  887      %EQU CP_PROTECT#   = '000000000100'O;
  888      %EQU CP_STEPLMT#   = '000000000200'O;
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            25   
  889      %EQU CP_STEPACCT#  = '000000000400'O;
  890      %EQU CP_PROCACCT#  = '000000001000'O;
  891      %EQU CP_NOTIFY#    = '000000002000'O;
  892      %EQU CP_TRMNATE#   = '000000004000'O;
  893      %EQU CP_KEEPDS#    = '000000010000'O;
  894      %EQU CP_EXIT#      = '000000020000'O;
  895      %EQU CP_SKIPABORT# = '000000040000'O;
  896      %EQU CP_DRIBBLE#   = '000000100000'O;
  897      %EQU CP_INITIALIZE# ='000000200000'O;
  898      %EQU CP_TESTMODE#  = '000000400000'O;
  899      %EQU CP_STARPROC#  = '000001000000'O;
  900      %EQU CP_FIRSTCP#   = '000002000000'O;
  901      %EQU CP_LASTCP#    = '000004000000'O;
  902      %EQU CP_LASTCPEXISTS# = '000010000000'O;
  903      %EQU CP_STARSACC#  = '000020000000'O;
  904      %EQU CP_SOMENOTIFY#= '000040000000'O;
  905      %EQU CP_DONTRFEXT3#  = '000100000000'O;
  906      %EQU CP_ECHO_LINK#   = '000200000000'O;
  907      %EQU CP_WHEN_INPUT#  = '000400000000'O;
  908      %EQU CP_YCGET#       = '001000000000'O;
  909      %EQU CP_LNKPMME#   = '004000000000'O;
  910      %EQU CP_SSTART#    = '010000000000'O;
  911      %EQU CP_YCPMME#    = '020000000000'O;
  912      %EQU CP_YC#        = '040000000000'O;
  913      %EQU CP_RUND#      = '100000000000'O;
  914      %EQU CP_JSTEP#     = '200000000000'O;
  915      %EQU CP_LOGOFF#    = '400000000000'O;
  916      %EQU CP_USER# = '712777777777'O;/*reset YC,YCPMME,LNKPMME,YCGET*/
  917      %EQU CP_RMLINK# = '412777777777'O;/*reset JSTEP,RUND,YC,YCPMME,LNKPMME,YCGET*/
  918      %EQU CP_RESET# = '416777777777'O;/*reset JSTEP,RUND,YC,YCPMME,YCGET*/
  919      %EQU CP_RSSTART# = '406777777777'O;/*reset JSTEP,RUND,YC,YCPMME,SSTART,YCGET*/
  920      %EQU CP_FIRST# = '764000000000'O;/*check LOGOFF, JSTEP, RUND, YC, YCPMME & LNKPMME*/
  921            2 USRERR,
  922      /*K* USRERR.
  923      Contains the error code that reflects the exit condition of the
  924      user program.  JIT.USRERR is in VLP_ERRCODE format;  refer to
  925      ERR for an explanation of the FCG, MID, MON, CODE and SEV
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            26   
  926      subfields.  USRERR only reflects the exit condition of the
  927      user domain.
  928      */
  929              3 FCG BIT(12) UNAL,
  930              3 MID BIT(6) UNAL,
  931              3 MON BIT(1) UNAL,
  932              3 CODE UBIN(14) UNAL,
  933              3 SEV UBIN(3) UNAL,
  934            2 JORG UBIN(18) UNAL,   /* not used                                                         */
  935            2 USRRNST BIT(9) UNAL,
  936      /*K* USRRNST - BIT(9).
  937      Contains the run status to reflect the exit condition of the
  938      user program.  Refer to RNST for an explanation of the bit
  939      settings in this field.  Note that USRRNST only applies to the
  940      exit condition of the user domain.  For example, if the job
  941      step is terminated because a special shared processor aborts,
  942      RS_ABRT# would have been set JIT.RNST for that special shared
  943      processor's error processing, but JIT.USRRNST would have
  944      RS_ABORT# reset and RS_SSP# would be set instead.
  945      */
  946            2 LANG CHAR(1) UNAL,
  947      /*K* LANG - CHAR(1).
  948      The LANGuage field is a single character which specifies the native
  949      language of the user. This field is used to select the correct
  950      error message and help files for this user.
  951      */
  952            2 YC0SZ UBIN(18) UNAL,
  953      /*K* YC0SZ - UBIN(18).
  954      Contains the bound of the M$YC monitor service request
  955      CMD parameter.  This field has meaning only when the
  956      CP_YCPMME# bit is set in CPFLAGS1.
  957      */
  958            2 USRIC UBIN(18) UNAL,
  959      /*K* USRIC - UBIN(18).
  960      Contains the Instruction Counter at he time of the
  961      exit condition from the user program.
  962      */
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            27   
  963            2 BUDLIM SBIN,
  964      /*K* BUDLIM - SBIN.
  965      The BUDget LIMit field contains the amount of charges which this
  966      job or session is allowed to incur. This field is recorded in
  967      hundredths of pennies.
  968      */
  969            2 LOGONTIME UBIN,
  970      /*K* LOGONTIME - UBIN.
  971      The LOGON TIME field contains the time, in UTS units, when this
  972      job or session was initiated.
  973      */
  974            2 JSLEV UBIN(3) UNAL,
  975      /*K* JSLEV - UBIN(3).
  976      The Job Statistics LEVel field specifies the type of accounting
  977      summary which is to be displayed at the end of job or session.
  978      See !OFF.
  979      The field can contain the following values:
  980      }
  981      }  AZ_ALL#         1         Full Accounting Display
  982      }  AZ_SUMMARY#     2         One line Accounting Summary
  983      }  AZ_NONE#        3         No Accounting Display
  984      }
  985      */
  986            2 PSLEV UBIN(3) UNAL,
  987      /*K* PSLEV - UBIN(3).
  988      The Processor Statistics LEVel field specifies the type of
  989      accounting summary which is to be displayed when proprietary
  990      processor charging is in effect. See JSLEV for possible values.
  991      Also see RATES, CONTROL.
  992      */
  993            2 SSLEV UBIN(3) UNAL,
  994      /*K* SSLEV - UBIN(3).
  995      The Step Statistics LEVel field specifies the type of accounting
  996      summary which is to be displayed at each job step. See JSLEV for
  997      possible values. Also see !REPORT.
  998      */
  999      %EQU AZ_ALL#     = 1;
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            28   
 1000      %EQU AZ_SUMMARY# = 2;
 1001      %EQU AZ_NONE#    = 3;
 1002            2 NEXTCC UBIN(9) UNAL,
 1003      /*K* NEXTCC - UBIN(9).
 1004      The NEXT Control Command field specifies where the next command will
 1005      be obtained. The possible values are:
 1006      }
 1007      }  CC_FROMNO#      0         There are no more
 1008      }                            (end of batch job).
 1009      }  CC_FROMJOB#     1         Batch job not in XEQ file.
 1010      }  CC_FROMXEQ#     2         Execute file.
 1011      }  CC_FROMUC#      3         Time sharing terminal.
 1012      }
 1013      */
 1014      %EQU CC_FROMNO#=0;
 1015      %EQU CC_FROMJOB#=1;
 1016      %EQU CC_FROMXEQ#=2;
 1017      %EQU CC_FROMUC#=3;
 1018      %EQU CC_FROMXEQEND#=4;
 1019            2 BILL CHAR(6),
 1020      /*K* BILL - CHAR(6).
 1021      The BILL field is used to locate the user's charge rate record.
 1022      */
 1023            2 DEFPRI UBIN BYTE UNAL,
 1024      /*K* DEFPRI - UBIN BYTE.
 1025      The DEFault PRIority field contains the default batch priority to
 1026      assign to jobs batched by this job or session.
 1027      */
 1028            2 MAXPRI UBIN BYTE UNAL,
 1029      /*K* MAXPRI - UBIN BYTE.
 1030      The MAXimum PRIority field contains the maximum batch priority
 1031      which this job or session may assign to a submitted batch job.
 1032      */
 1033            2 BLINDACCTNG BIT(1) UNAL,
 1034      /*K* BLINDACCTNG - BIT(1).
 1035      The BLIND ACCounTiNG field is a flag which, if set, specifies that
 1036      this user is only to see resources used, and not charge rates or
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            29   
 1037      actual monetary units.
 1038      */
 1039            2 ACCEPT_FLAGS,
 1040      /*K* ACCEPT_FLAGS.
 1041      The ACCEPT_FLAGS field contains the items set either by M$TRMISC or
 1042      the ACCEPT, DONT ACCEPT IBEX commands.
 1043      */
 1044              3 SEND BIT(1) UNAL,
 1045      /*K* ACCEPT_FLAGS.SEND - BIT(1).
 1046      The SEND field is a flag which, if set, specifies the user will accept
 1047      operator messages sent via the SEND keyin.
 1048      */
 1049              3 ANNOUNCE BIT(1) UNAL,
 1050      /*K* ACCEPT_FLAGS.ANNOUNCE - BIT(1).
 1051      The ANNOUNCE field is a flag which, if set, specifies the user will accept
 1052      tape and disk mount announcements.
 1053      */
 1054              3 BROADCAST BIT(1) UNAL,
 1055      /*K* ACCEPT_FLAGS.BROADCAST - BIT(1).
 1056      The BROADCAST field is a flag which, if set, specifies the user will accept
 1057      operator messages sent via the BROADCAST and SENDALL keyins.
 1058      */
 1059            2 PROMPTS BIT(5) UNAL,
 1060      /*K* PROMPTS - BIT(5).
 1061      Has bits set if the user has defined new prompts (ie. NORMAL,
 1062      INTERACTIVE, CONTINUATION, REPLACEMENT) in IBEX.
 1063      Defaults are '!', '!!', '+!', '$' respectively.
 1064      */
 1065            2 USRDCB UBIN(9) UNAL,
 1066      /*K* USRDCB - UBIN(9).
 1067      Contains the value from DCBNO at the time of the exit
 1068      condition from the user program.  Thus, if there is a
 1069      DCB# associated with the error code in JIT.USRERR it
 1070      will be here.
 1071      */
 1072            2 LOCK(0:71) BIT(1) UNAL,
 1073      /*K* LOCK - ARRAY(0:71) BIT(1).
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            30   
 1074      The LOCK is really a "KEY".  This double word
 1075      contains bit settings that allow users to access
 1076      restricted processors.  The LOCK is initialized
 1077      from the :USERS record when the user enters the system.
 1078      Refer to the description of the KEY option of SUPER in
 1079      the System Support Reference Manual and to the description of the
 1080      SLOCK and WLOCK options of LINK in the Programmer
 1081      Reference Manual.
 1082      */
 1083            2 SINPUTSZ UBIN BYTE CALIGNED,
 1084      /*K* SINPUTSZ - UBIN BYTE.
 1085      This field contains (at least for time-sharing users) the most recently
 1086      specified value for the VLP_TRMCTL.SINPUTSZ option.
 1087      */
 1088            2 JOBNAME CHAR(31) ,
 1089      /*K* JOBNAME - CHAR(31).
 1090      The JOB NAME field contains the job name as specified by !JOB NAME=x.
 1091      .XEQ
 1092      Regardless of mode, this job name will be carried with any output
 1093      symbiont files generated. It may be subsequently used by a user
 1094      in interrogating the status of output. It will also be displayed
 1095      on operator displays.
 1096      */
 1097            2 MSGID,
 1098      /*K* MSGID.
 1099      The MeSsaGe IDentification field contains the message id of the last
 1100      comgroup read done by this job or session. This is used primarily
 1101      for Transaction Processing.
 1102      */
 1103              3 PRIMARY UBIN,
 1104      /*K* MSGID.PRIMARY - UBIN.
 1105      The PRIMARY subfield contains the primary identification of the
 1106      transaction. This value is the same for all spawned transactions
 1107      and identifies the parent transaction.
 1108      */
 1109              3 XT UBIN,
 1110      /*K* MSGID.XT - UBIN.
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            31   
 1111      The eXTension field provides a unique identifier for spawned
 1112      transactions.
 1113      */
 1114            2 PROG_ENTRY BIT(9) UNAL,
 1115      /*K* PROG_ENTRY - BIT(9).
 1116      Set to indicate how the currently executing run-unit
 1117      was put into execution as follows:
 1118      }
 1119      }  PE_CP#     '000'O    Started via M$CPEXIT;
 1120      }  PE_MLINK#  '030'O    Started via JLU$MLINK.
 1121      }  PE_LINK#   '020'O    Started via M$LINK.
 1122      }  PE_LDTRC#  '010'O    Started via M$LDTRC.
 1123      }
 1124      */
 1125      %EQU PE_CP#   = '000'O;
 1126      %EQU PE_MLINK#= '030'O;
 1127      %EQU PE_LINK# = '020'O;
 1128      %EQU PE_LDTRC#= '010'O;
 1129            2 CSLEV UBIN(9) UNAL,
 1130      /*K*  CSLEV - UBIN(9).
 1131      This field holds the Command Stream LEVel.  If file A is being
 1132      XEQed the command stream level would be 1.  If A XEQs a file B,
 1133      the command stream level for B would be 2.  If CSLEV is 0,
 1134      then the last command was not read from an XEQ file, i.e., a command
 1135      input by an on-line user.  (See mode to tell what type of user.)
 1136      This field is maintained by File Management.
 1137      */
 1138            2 YC2SZ UBIN(18) UNAL,
 1139      /*K* YC2SZ - UBIN(18).
 1140      Contains the bound of the M$YC monitor service request
 1141      REPLY parameter.  This field has meaning only when the
 1142      CP_YCPMME# bit is set in CPFLAGS1.
 1143      */
 1144            2 *(0:4) UBIN,
 1145      %MEND;
 1146      %MACRO M$JIT2;
 1147            2 PLL UBIN HALF HALIGNED,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            32   
 1148      /*K* PLL - UBIN HALF.
 1149      This field contains the Procedure Lower Limit,
 1150      which is the virtual page number of the first procedure page
 1151      of the run unit or standard shared processor currently executing.
 1152      */
 1153            2 PUL UBIN HALF HALIGNED,
 1154      /*K* PUL - UBIN HALF.
 1155      This field contains the Procedure Upper Limit,
 1156      which is the virtual page number of the last procedure page
 1157      of the run unit or standard shared processor currently executing.
 1158      If the user is at job step, JIT.PUL will be set to JIT.PLL -1.
 1159      */
 1160            2 DLL UBIN HALF HALIGNED,
 1161      /*K* DLL - UBIN HALF.
 1162      This field contains the Data Lower Limit,
 1163      which is the virtual page number of the first data page
 1164      of the run unit or standard shared processor currently executing.
 1165      */
 1166            2 DUL UBIN HALF HALIGNED,
 1167      /*K* DUL - UBIN HALF.
 1168      This field contains the Data Upper Limit,
 1169      which is the virtual page number of the last data page
 1170      of the run unit or standard shared processor currently executing.
 1171      If the user is at job step, JIT.DUL will be set to JIT.DLL -1.
 1172      */
 1173            2 DDLL UBIN HALF HALIGNED,
 1174      /*K* DDLL - UBIN HALF.
 1175      The Dynamic Data Lower Limit field contains the virtual page
 1176      number of the first page in the Instruction Segment that
 1177      may be used for dynamic data.
 1178      */
 1179            2 DDUL UBIN HALF HALIGNED,
 1180      /*K* DDUL - UBIN HALF.
 1181      The Dynamic Data Upper Limit field contains the virtual page
 1182      number of the last page in the Instruction Segment that
 1183      may be used for dynamic data.
 1184      */
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            33   
 1185            2 PCP UBIN HALF HALIGNED,
 1186      /*K* PCP - UBIN HALF.
 1187      The Page Count of Procedure field contains the number of
 1188      pages that have been allocated for procedure.  If a
 1189      shared processor is in execution, this number will not be
 1190      included in the PPC field.
 1191      */
 1192            2 PCD UBIN HALF HALIGNED,
 1193      /*K* PCD - UBIN HALF.
 1194      The Page Count of Data field contains the number of pages that
 1195      have been allocated for program data in the instruction segment.
 1196      */
 1197            2 PCDS UBIN HALF HALIGNED,
 1198      /*K* PCDS - UBIN HALF.
 1199      The Page Count Dynamic Segments field contains the number of
 1200      pages that the user has allocated in dynamic data segments.
 1201      See M$GDS.
 1202      */
 1203            2 PCC UBIN HALF HALIGNED,
 1204      /*K* PCC - UBIN HALF.
 1205      The Page Count of Context field contains the number of pages
 1206      the monitor has allocated for this user's context.  User
 1207      context includes HJIT, Page Table, Tstack, JIT, the first page
 1208      of the Read Only Segment(ROS), and the Command Processor Dynamic
 1209      Data Segment pages.
 1210      */
 1211            2 PCROS UBIN HALF HALIGNED,
 1212      /*K* PCROS - UBIN HALF.
 1213      The Page Count Read Only Segment is the total number of pages in
 1214      the Read Only Segment. This segment contains the TCB and DCBs.
 1215      The first page of this segment is also counted in PCC.
 1216      */
 1217            2 PCDD UBIN HALF HALIGNED,
 1218      /*K* PCDD - UBIN HALF.
 1219      The Page Count Dynamic Data field contains the number of pages
 1220      which have been allocated dynamically in the Instruction Segment.
 1221      See M$GDP, M$GVP.
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            34   
 1222      */
 1223            2 TDP UBIN HALF HALIGNED,
 1224      /*K* TDP - UBIN HALF.
 1225      The Top Dynamic Page field contains the virtual page number of
 1226      the highest dynamic page currently allocated.
 1227      */
 1228            2 EUP UBIN HALF HALIGNED,
 1229      /*K* EUP - UBIN HALF.
 1230      The End User Page field contains the highest virtual page number in
 1231      the instruction segment which is available for user allocation.
 1232      */
 1233            2 FBUC UBIN HALF HALIGNED,
 1234      /*K* FBUC - UBIN HALF.
 1235      The File Buffer Use Count field contains the total number of file
 1236      buffers (FPOOLs) currently in use by this user.
 1237      */
 1238            2 FBUL UBIN HALF HALIGNED,
 1239      /*K* FBUL - UBIN HALF.
 1240      The File Buffer Upper Limit field contains the maximum number of
 1241      file buffers which file management will use on this user's behalf.
 1242      See !LIMIT FPOOL=n.
 1243      */
 1244            2 MMFLGS,
 1245      /*K* MMFLGS.
 1246      The Memory Management FLaGS field contains a set of flags which
 1247      describe the current state of this user from a memory management
 1248      standpoint.
 1249      */
 1250              3 FREE_PPGS BIT(1) UNAL,
 1251      /*K* MMFLGS.FREE_PPGS - BIT(1).
 1252      The FREE Procedure PaGeS field indicates whether or not the
 1253      procedure pages in the currently executing run unit are to be
 1254      charged to this user. A value of '1'B specifies that the pages
 1255      are not to be charged.
 1256      */
 1257              3 * BIT(17) UNAL,
 1258            2 * UBIN HALF HALIGNED,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            35   
 1259            2 PRIOCORE UBIN HALF HALIGNED,
 1260      /*K* PRIOCORE - UBIN HALF.
 1261      The PRIOr CORE field contains the previous value of CURRCORE when
 1262      a run-unit is brought into execution via a monitor M$LINK.
 1263      */
 1264            2 PPC UBIN HALF HALIGNED,
 1265      /*K* PPC - UBIN HALF.
 1266      The Physical Page Count field contains the number of real memory
 1267      pages which are only recorded in the page table of this user.
 1268      The value in this field may or may not be equal to CURRCORE
 1269      depending on a variety of factors, such as shared procedure,
 1270      shared data segments, free procedure, etc.
 1271      */
 1272            2 MAXCORE UBIN HALF HALIGNED,
 1273      /*K* MAXCORE - UBIN HALF.
 1274      The MAXimum CORE field contains the maximum value which CURRCORE
 1275      will be allowed to reach. The word CORE is retained for nostalgia.
 1276      See !RESOURCE, !ORES, !LIMIT.
 1277      */
 1278            2 CURRCORE UBIN HALF HALIGNED,
 1279      /*K* CURRCORE - UBIN HALF.
 1280      The CURRent CORE field contains the current number of memory pages
 1281      chargeable to this user. This value is the result of the following
 1282      calculation. CURRCORE = PCD + PCDD + PCDS + PCDDS + PCADS + PCL +
 1283      PCV + PCROS - 1. PCP is also added unless MMFLGS.FREE_PPGS is set.
 1284      */
 1285            2 SPEAK UBIN HALF HALIGNED,
 1286      /*K* SPEAK - UBIN HALF.
 1287      The Step PEAK field contains the maximum value of CURRCORE attained
 1288      during the current job step.
 1289      */
 1290            2 JPEAK UBIN HALF HALIGNED,
 1291      /*K* JPEAK - UBIN HALF.
 1292      The Job PEAK field contains the maximum value of CURRCORE attained
 1293      during the job or session.
 1294      */
 1295            2 JRESPEAK UBIN HALF HALIGNED,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            36   
 1296      /*K* JRESPEAK - UBIN HALF.
 1297      The Job RESource PEAK field contains the value which must be specified
 1298      on a !RESOURCE or !ORES command to assure the job of successful
 1299      execution. This value may differ from JPEAK due to overlay path
 1300      considerations.
 1301      */
 1302            2 RESPEAK REDEF JRESPEAK UBIN HALF HALIGNED,
 1303      /*K* RESPEAK - REDEF JRESPEAK UBIN HALF.
 1304      See JRESPEAK.
 1305      */
 1306            2 PSEUDOPGS UBIN HALF HALIGNED,
 1307      /*K* PSEUDOPGS - UBIN HALF.
 1308      The PSEUDO PaGeS field contains the total number of pages which
 1309      the user is charged for but which are not reflected in PPC.
 1310      */
 1311            2 SRESPEAK UBIN HALF HALIGNED,
 1312      /*K* SRESPEAK - UBIN HALF.
 1313      The Step RESource PEAK field is the same as JRESPEAK for a job step.
 1314      */
 1315            2 PCDDS UBIN HALF UNAL,
 1316      /*K* PCDDS - UBIN HALF.
 1317      The Page Count Debugger Data Segments field contains the total
 1318      number of pages which a debugger has allocated on behalf of this
 1319      user.
 1320      */
 1321            2 PCADS UBIN HALF UNAL,
 1322      /*K* PCADS - UBIN HALF.
 1323      The Page Count ASL Data Segments field contains the total number
 1324      of pages which an ASL has allocated on behalf of this user.
 1325      */
 1326            2 LLL UBIN HALF UNAL,
 1327      /*K* LLL - UBIN HALF.
 1328      The Library Lower Limit field contains the virtual
 1329      page number of the first page of procedure of an
 1330      associated run-time library.
 1331      */
 1332            2 LUL UBIN HALF UNAL,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            37   
 1333      /*K* LUL - UBIN HALF.
 1334      The Library Upper Limit field contains the virtual
 1335      page number of the last page of procedure of an
 1336      associated run-time library.
 1337      */
 1338            2 PCL UBIN HALF UNAL,
 1339      /*K* PCL - UBIN HALF.
 1340      The Page Count of Library field contains zero if no
 1341      run-time library is associated, or if a shared run-time
 1342      library is associated.  If the run-library becomes
 1343      unshared, because of an M$DLIB or UNSHARELIB command to
 1344      DELTA, this field will contain the number of pages
 1345      that have been obtained for the run-time library procedure.
 1346      */
 1347            2 PCV UBIN HALF HALIGNED,
 1348      /*K* PCV - UBIN HALF.
 1349      The Page Count Virtual field contains the total number of real pages
 1350      allocated in the three virtual segments, as well as the page tables
 1351      and context necessary to support them.
 1352      */
 1353            2 PTSIZ UBIN HALF HALIGNED,
 1354      /*K* PTSIZ - UBIN HALF.
 1355      The Page Table Size field contains the total number of words of Page
 1356      Table that currently exist for this user.  This will usually be 1023,
 1357      but will expand to 2047 if required.
 1358      */
 1359            2 VIRTUAL,
 1360      /*K* VIRTUAL.
 1361      The VIRTUAL field is a structure defining currently open virtual
 1362      data segment files.
 1363      */
 1364              3  DCB#(0:2) UBIN(9) CALIGNED,
 1365      /*K* VIRTUAL.DCB# - ARRAY(0:2) UBIN(9).
 1366      The DCB# field contains the DCB number of the DCB open to the file
 1367      which defines each of the virtual data segments.
 1368      */
 1369              3  * UBIN(9) CALIGNED,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            38   
 1370      %MEND;
 1371      %MACRO F$JIT3;
 1372            2 FEXT (0:35) BIT(1) UNAL,
 1373      /*K* FEXT - ARRAY(0:35) BIT(1).
 1374      The File EXTension field contains bits which specify whether ('1'B)
 1375      or not automatic file extension is currently active on the four
 1376      command line DCBs as well as a number of DCBs of the form M$xx,
 1377      where xx is any of a set of CP-6 special names.
 1378      */
 1379            2 DEFEXP SBIN HALF UNAL,
 1380      /*K* DEFEXP - SBIN HALF.
 1381      The DEFault EXPire field contains the default value for the duration
 1382      that a file created by this user will be unexpired. This value is
 1383      used if no expiration date is specified when a file is created.
 1384      */
 1385            2 MAXEXP SBIN HALF UNAL,
 1386      /*K* MAXEXP - SBIN HALF.
 1387      The MAXimum EXPiration field contains the maximum expiration time
 1388      that this user may specify.
 1389      */
 1390            2 STAR (0:7),
 1391      /*K* STAR - ARRAY(0:7).
 1392      The STAR field contains information about several commonly used
 1393      star files. The entries are in the order: *T,*G,*L,*A,*S,*N,*X,*I.
 1394      */
 1395              3 DA UBIN,
 1396      /*K* STAR.DA - UBIN.
 1397      The Disk Address field contains the disk address of the file
 1398      information field for each of the abovementioned star files.
 1399      */
 1400            2 DCB$ PTR,
 1401      /*K* DCB$ - PTR.
 1402      Contains a pointer to the DCB that was specified
 1403      on the current monitor service request.  If the
 1404      service request doesn't have a DCB associated with
 1405      it, this value will be nil.
 1406      As with JIT.DCBNO, JIT.DCB$ should not be referenced by
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            39   
 1407      the user program.
 1408      */
 1409            2 DO$ PTR,
 1410      /*K* DO$ - PTR.
 1411      The DO$ field contains a pointer to an active do-list entry used
 1412      during several file management operations.
 1413      */
 1414            2 HPSN CHAR(6) UNAL,
 1415      /*K* HPSN - CHAR(6).
 1416      The Home Pack Set Name field contains the name of the home pack set
 1417      for this user. The principal use of this field is to determine
 1418      the pack set on which to create the user's account if it does not
 1419      already exist.
 1420      */
 1421            2 FACNACS BIT(18),
 1422      /*K* FACNACS - BIT(18).
 1423      The File ACcouNt ACceSs field contains the account permissions for
 1424      this user vis-a-vis his current file account (FACCN).
 1425      */
 1426            2 STMPDPPK SBIN,
 1427      /*K* STMPDPPK - SBIN.
 1428      The Step TeMP Disk Pack PeaK field contains the maximum amount of
 1429      temporary disk storage allocated during this job step.
 1430      */
 1431            2 JTMPDPPK SBIN,
 1432      /*K* JTMPDPPK - SBIN.
 1433      The Job TeMP Disk Pack PeaK field contains the maximum amount of
 1434      temporary disk storage allocated during this job or session.
 1435      */
 1436            2 CURTMPDP SBIN,
 1437      /*K* CURTMPDP - SBIN.
 1438      The CURrent TeMP Disk Pack field contains the current number of
 1439      granules of temporary disk space allocated.
 1440      */
 1441            2 MAXTMPDP SBIN,
 1442      /*K* MAXTMPDP - SBIN.
 1443      The MAXimum TeMP Disk Pack field contains the maximum number of
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            40   
 1444      granules of temporary disk space which this job or session is
 1445      allowed to use.
 1446      */
 1447            2 PRDPRM SBIN,
 1448      /*K* PRDPRM - SBIN.
 1449      The PeRmanent Disk Pack ReMaining field contains the number of
 1450      granules of permanent space which this job or session is still
 1451      allowed to allocate. Note that this is not the same as file
 1452      account limits.
 1453      */
 1454            2 GAC(0:2) UBIN,
 1455      /*K* GAC - ARRAY(0:2) UBIN.
 1456      The Granule ACcounting field contains accounting information for
 1457      files deleted during this job or session which had been created by
 1458      this user. Each entry contains a floating point number which is
 1459      the integral of granules times time. The three entries are for
 1460      the three charging classes of file granules:
 1461      }
 1462      }  AZ$GACBACKUP    0         Granules of files
 1463      }                            eligible for backup.
 1464      }  AZ$GACNOBACKUP  1         Granules of files
 1465      }                            not eligible for backup.
 1466      }  AZ$GACSTOWACT   2         Granules of stowed
 1467      }                            active files.
 1468      }
 1469      */
 1470            2 TMPGAC,
 1471      /*K* TMPGAC.
 1472      The TeMPorary Granule ACcounting field contains accounting information
 1473      for temporary files used in this job or session.
 1474      */
 1475              3 N UBIN,
 1476      /*K* TMPGAC.N - UBIN.
 1477      The TMPGAC.N field contains the integral of temporary granules times
 1478      time up to the time recorded in TMPGAC.TIME in floating point. This is
 1479      updated each time a temporary granule is allocated or deallocated.
 1480      */
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            41   
 1481              3 TIME UBIN,
 1482      /*K* TMPGAC.TIME - UBIN.
 1483      The TMPGAC.TIME field contains the time in UTS units of the last
 1484      update of TMPGAC.N.
 1485      */
 1486            2 FACNCM UBIN(9)UNAL,
 1487      /*K* FACNCM - UBIN(9).
 1488      The File ACcouNt Character Match field contains the number of
 1489      characters of FACCN which matched on a wild compare.
 1490      */
 1491            2 CHECK_CFU BIT(1),
 1492      /*K* CHECK_CFU - BIT (1).
 1493      This flag is set if a CFU is still associated with
 1494      an ALTKEY file that has gone through run down.
 1495      */
 1496            2 * BIT(26),
 1497            2 SAVEDCB$ PTR,
 1498      /*K* SAVEDCB$ - PTR.
 1499      This saves the value of B$JIT.DCB$ when linking
 1500      to ALTKEY_MON from within the monitor.
 1501      */
 1502            2 *(0:5) UBIN,
 1503      %MEND;
 1504      %MACRO S$JIT4;
 1505            2 QUAN SBIN HALF HALIGNED,
 1506      /*K* QUAN - SBIN(18).
 1507      The QUANtum field contains a signed offset, in microseconds, that is
 1508      combined with the system default QUAN value.  The result is the
 1509      number of microseconds to give this user each quantum.
 1510      */
 1511            2 PRIOB SBIN(9) CALIGNED,
 1512      /*K* PRIOB - SBIN(9).
 1513      The PRIOrity Base field contains a signed offset that is combined with
 1514      the system default PRIOB value.  The result is the value to use for
 1515      this user's scheduling priority.
 1516      */
 1517            2 * UBIN(9) CALIGNED,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            42   
 1518            2 STIME SBIN,
 1519      /*K* STIME - SBIN.
 1520      The Service TIME field contains the number of microseconds of
 1521      service time used this quantum.
 1522      */
 1523            2 XTIME SBIN,
 1524      /*K* XTIME - SBIN.
 1525      The eXecution TIME field contains the number of microseconds of
 1526      execution time used this quantum.
 1527      */
 1528            2 CTIME SBIN,
 1529      /*K* CTIME - SBIN.
 1530      The Compensatory TIME field contains the number of microseconds
 1531      by which this quantum will be shortened due to I/O operations.
 1532      This value is the number of physical I/O operations done this
 1533      quantum times the I/O Time Allowance (IOTA) for the user's mode.
 1534      */
 1535            2 INTTIME SBIN,
 1536      /*K* INTTIME - SBIN.
 1537      The INTeraction compute TIME field contains the time in microseconds
 1538      expended until the time of the last terminal read. This is used in
 1539      the calculation of compute time used per interaction. This field
 1540      is used for time sharing only. See also STATS HISTOGRAM.
 1541      */
 1542            2 SCHTIME SBIN,
 1543      /*K* SCHTIME - SBIN.
 1544      The SCHedule TIME field contains the sum of XTIME, STIME, and CTIME
 1545      as they existed the last time this user was scheduled for execution.
 1546      */
 1547            2 IDELTAT SBIN,
 1548      /*K* IDELTAT - SBIN.
 1549      The IDELTAT field contains the total quantum time allocated at the
 1550      last quantum end. This will normally be the quantum specified by
 1551      the system manager for this mode, partition, user, etc.
 1552      */
 1553            2 CALCNT SBIN,
 1554      /*K* CALCNT - SBIN.
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            43   
 1555      The CALCNT field contains the total number of monitor services
 1556      (PMMEs) executed during this job or session.
 1557      */
 1558            2 TPEXT SBIN,
 1559      /*K* TPEXT - SBIN.
 1560      The Total Processor EXecution Time field contains the processor
 1561      execution time used in this job or session prior to the current
 1562      quantum. This is maintained in UTS units.
 1563      */
 1564            2 TPSVT SBIN,
 1565      /*K* TPSVT - SBIN.
 1566      The Total Processor SerVice Time field contains the processor
 1567      service time used in this job or session prior to the current
 1568      quantum. This is maintained in UTS units.
 1569      */
 1570            2 PMEMTIM SBIN,
 1571      /*K* PMEMTIM - SBIN.
 1572      The Processor MEMory TIMe field contains the integral of (B$JIT.TPEXT +
 1573      B$JIT.TPSVT) * B$JIT.CURRCORE over all quanta of the entire job or session.
 1574      This is maintained in UTS * page units.
 1575      */
 1576            2 TUEXT SBIN,
 1577      /*K* TUEXT - SBIN.
 1578      The Total User EXecution Time field contains the user
 1579      execution time used in this job or session prior to the current
 1580      quantum. This is maintained in UTS units.
 1581      */
 1582            2 TUSVT SBIN,
 1583      /*K* TUSVT - SBIN.
 1584      The Total User SerVice Time field contains the user
 1585      service time used in this job or session prior to the current
 1586      quantum. This is maintained in UTS units.
 1587      */
 1588            2 UMEMTIM SBIN,
 1589      /*K* UMEMTIM - SBIN.
 1590      The User MEMory TIMe field contains the integral of (B$JIT.TUEXT +
 1591      B$JIT.TUSVT) * B$JIT.CURRCORE over all quanta of the entire job or session.
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            44   
 1592      This is maintained in UTS * page units.
 1593      */
 1594            2 MRT SBIN,
 1595      /*K* MRT - SBIN.
 1596      The Maximum Run Time field contains the maximum allowed execution
 1597      plus service time at the beginning of a job and when a !LIMIT
 1598      command is processed. At any other time it contains the amount of
 1599      time remaining within the limit. This field is maintained in UTS
 1600      units.
 1601      */
 1602            2 *(0:1) SBIN UNAL,
 1603            2 UTIMER UBIN UNAL,
 1604      /*K* UTIMER - UBIN.
 1605      The User TIMER field contains the time, in microseconds, remaining
 1606      before expiration of the timer which the user established with
 1607      M$STIMER. A value of zero means there is no timer currently
 1608      established.
 1609      */
 1610            2 PNR UBIN(9) UNAL,
 1611      /*K* PNR - UBIN(9).
 1612      The Partition NumbeR field contains, if batch, the batch partition
 1613      in which this user is running.
 1614      */
 1615            2 PRIINC REDEF PNR UBIN(9) UNAL,
 1616      /*K* PRIINC - REDEF PNR UBIN(9).
 1617      The PRIority INCrement field contains the execution priority
 1618      increment to be given to this system ghost over that established
 1619      for ghosts as a default.
 1620      */
 1621            2 RERUN BIT(1) UNAL,
 1622      /*K* RERUN - BIT(1).
 1623      The RERUN field specifies, if set, that this batch job is being
 1624      rerun as a result of some precipitate termination on a previous run.
 1625      */
 1626            2 NUTS BIT(1) UNAL,
 1627      /*K* NUTS - BIT(1).
 1628      The NUTS field specifies, if set, that this user was started when
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            45   
 1629      the 'new UTS' resolution of 1/25th second was in effect.
 1630      */
 1631            2 * UBIN(7) UNAL,
 1632            2 LBJID UBIN HALF UNAL,
 1633      /*K* LBJID - UBIN HALF.
 1634      The Last Batch Job ID field contains the sysid of the last batch
 1635      job submitted by this job or session.
 1636      */
 1637            2 EXTUS UBIN,
 1638      /*K* EXTUS - UBIN.
 1639      The EXecution Time microseconds field contains the number of microseconds
 1640      (0-9999) of execution time which were not able to be reflected in
 1641      TPEXT or TUEXT at the end of the previous quantum.
 1642      */
 1643            2 SVTUS UBIN,
 1644      /*K* SVTUS - UBIN.
 1645      The SerVice Time microseconds field contains the number of microseconds
 1646      (0-9999) of service time which were not able to be reflected in
 1647      TPSVT or TUSVT at the end of the previous quantum.
 1648      */
 1649            2 *(0:6) UBIN,
 1650      %MEND;
 1651      %MACRO J$JIT5;
 1652            2 RNST BIT(9) UNAL,
 1653      /*K* RNST - BIT(9).
 1654      This field contains one of the following equated values:
 1655      }
 1656      }  RS_EXIT#   '000'O   M$EXIT was issued.
 1657      }
 1658      }  RS_ERR#    '001'O   M$ERR was issued.
 1659      }
 1660      }  RS_XXX#    '002'O   M$XXX was issued.
 1661      }
 1662      }  RS_SSP#    '004'O   Aborted by Special Shared Processor.
 1663      }
 1664      }  RS_ABRT#   '010'O   Job step aborted by the monitor.  This
 1665      }                      may be because of program trap and no
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            46   
 1666      }                      trap control or an errored monitor service
 1667      }                      request and no ALTRET.
 1668      }
 1669      }  RS_EKEY#   '020'O   Aborted because of operator !E keyin
 1670      }                      or because on user Control-Y QUIT.
 1671      }
 1672      }  RS_CAN#    '021'O   Batch job has been canceled.
 1673      }
 1674      }  RS_OFF#    '040'O   Logoff by the command processor.
 1675      }
 1676      }  RS_LIMX#   '100'O   Abort because some limit has been exceeded.
 1677      }                      See description of XLIMFLG.
 1678      }
 1679      }  RS_DROP#   '200'O   Interactive user's line has disconnected.
 1680      }
 1681      }  RS_XKEY#   '400'O   Abort because of !X keyin by the operator.
 1682      }
 1683      Note that this field may have more than one bit set on to indicate
 1684      multiple exit conditions.
 1685      .XEQ
 1686
 1687      The RNST field in the JIT always contains the "current"
 1688      run status reported on this user.  This field will be
 1689      moved to the exit control frame on the Task Control
 1690      Block of the domain (user, alternate shared library,
 1691      debugger or command processor) in control at the time
 1692      of the exit condition.  If this is the status to be reported to
 1693      the user following all levels of exit control processing,
 1694      this field will be moved to JIT.USRRNST.
 1695      JIT.RNST is subject to change on any change of domain
 1696      and should therefore never be referenced by the user
 1697      program.
 1698
 1699      */
 1700      /*N*
 1701      }  RS_ATILA#  '440'O   Aborted by the ELEPHARK processor
 1702      }
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            47   
 1703      */
 1704      /* as of C00K, RS_OFF is never used by either IBEX or TPCP.
 1705      */
 1706      %EQU RS_EXIT# = '000'O;
 1707      %EQU RS_ERR# = '001'O;
 1708      %EQU RS_XXX# = '002'O;
 1709      %EQU RS_SSP# = '004'O;
 1710      %EQU RS_ABRT# = '010'O;
 1711      %EQU RS_EKEY# = '020'O;
 1712      %EQU RS_OFF# = '040'O;
 1713      %EQU RS_LIMX# = '100'O;
 1714      %EQU RS_DROP# = '200'O;
 1715      %EQU RS_XKEY# = '400'O;
 1716      %EQU RS_CAN# = '021'O;
 1717      %EQU RS_ATILA# ='440'O;
 1718      %EQU RS_PMME# = '774'O;
 1719      %EQU RS_CL23# = '740'O;
 1720      %EQU RS_CL3# = '640'O;
 1721      %EQU RS_XCON# = '760'O;
 1722            2 FRS BIT(9) UNAL,
 1723      /*K* FRS - BIT(9).
 1724      The Final Run Status field contains the accumulated abort flags.
 1725      This is a logical OR of all the flags that may appear in bits
 1726      0 through 4 of RNST as the job step is rundown through all the
 1727      various levels of exit control.  Refer to RNST for the EQUated values
 1728      and the meanings of the bit settings in this field.
 1729
 1730      For example, if a user is aborted by the operator, RS_XKEY will
 1731      appear in RNST until it is put in either the user's exit control
 1732      frame or USRRNST.  At that point the RS_XKEY flag is moved to
 1733      FRS and RNST is set to zero.  Should the user exceed MRT in the
 1734      exit control routine, RS_LIMX would temporarily appear in RNST,
 1735      and both RS_XKEY and RS_LIMX would be set in FRS.
 1736      */
 1737            2 RUNFLAGS BIT(9) UNAL,
 1738      /*K* RUNFLAGS - BIT(9).
 1739      Indicates the currently executing process as follows:
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            48   
 1740      }
 1741      } RUN_MON#    '001'O   Monitor or Command Processor
 1742      }
 1743      } RUN_PROC#   '002'O   Processor in :SYS linked with PROCACC
 1744      }
 1745      } RUN_USER#   '004'O   User program or processor not linked
 1746      }                      with the PROCACC option
 1747      }
 1748      */
 1749      %EQU RUN_MON#  = '001'O;
 1750      %EQU RUN_PROC# = '002'O;
 1751      %EQU RUN_USER# = '004'O;
 1752            2 LNKCNT UBIN(9) UNAL,
 1753      /*K* LNKCNT - UBIN(9).
 1754      Contains the current number of nested M$LINK service
 1755      requests.  This field is incremented on every M$LINK
 1756      request and decremented each time the linking program
 1757      is restored.
 1758      */
 1759            2 JUNK BIT(18) UNAL,
 1760      /*K* JUNK - BIT(18).
 1761      Bits in JIT.JUNK are used by job step processing
 1762      and help us keep track of what we are doing:
 1763      }
 1764      } JJ_MLINKIP#   Set while processing an M$LINK or M$LDTRC.
 1765      }  '000001'O    Reset when run-unit has been fetched or the
 1766      }               LINK/LDTRC process is aborted.
 1767      }
 1768      } JJ_LNKRETIP#  Set while the M$LINKing program is being restored.
 1769      }  '000002'O
 1770      }
 1771      } JJ_RTNXIT#    Set while an M$LINKed to run-unit is in execution.
 1772      }  '000100'O
 1773      }
 1774      } JJ_MONLINK#   Set while an M$LINK by the monitor is in progress.
 1775      }  '000020'O
 1776      }
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            49   
 1777      } JJ_ASYNCLINK# Set in conjunction with JJ_MONLINK if the M$LINK by
 1778      }  '000004'O    the monitor was initiated at quantum end instead of
 1779      }               during monitor service processing.
 1780      }               Also set in conjunction with JJ2_CP_LINK in JUNK2 if
 1781      }               the command processor issuing the M$CPEXIT with the
 1782      }               LINK option had been entered after the time sharing
 1783      }               user had typed the Control-Y sequence.
 1784      }
 1785      } JJ_SAVING#    Set while a program is being saved for M$SAVE or
 1786      }  '010000'O    the SAVE command via IBEX.
 1787      }
 1788      } JJ_GETTING#   Set while a SAVEd image is being restored.
 1789      }  '020000'O
 1790      }
 1791      } JJ_NOSAVE#    Set when an M$SCON service request has been issued
 1792      }  '040000'O    with SAVEFLG = NO specified.  When set, all requests
 1793      }               to SAVE the program are ignored.  Once set, this
 1794      }               bit may only be reset when the job step terminates.
 1795      }
 1796      } JJ_SCON#      Set when an M$SCON service request has been issued
 1797      }  '100000'O    with XCON = YES specified.  When set, the user's
 1798      }               exit control routine (if any) is entered prior to
 1799      }               writing the save image.  Reset only on job step
 1800      }               termination.
 1801      }
 1802      } JJ_SCCSET#    Set when an M$EXIT, M$ERR or M$XXX service request
 1803      }  '000040'O    with the STEPCC option is specified (from any
 1804      }               domain).  Reset when the trickle down for exit
 1805      }               control reaches the user level, thus allowing the
 1806      }               user to reset his STEPCC settings via his final
 1807      }               exit from exit control processing.
 1808      }
 1809      } JJ_LOGOFF#    Set on M$CPEXIT when CP_LASTCP# is set in CPFLAGS1
 1810      }  '000200'O    and the user is at job step.  Used to allow entry to
 1811      }               a Logoff Command Processor, and to prevent multiple
 1812      }               entries to same.
 1813      }
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            50   
 1814      } JJ_BYPASSD#   Set on M$DRTN when the Debugger indicates that the
 1815      }  '000400'O    user exit control routine is to be entered.  Reset
 1816      }               when entering the user exit control routine.
 1817      }
 1818      } JJ_EVENT#     Set on M$DRTN with EVENT = YES specified.  Causes
 1819      }  '400000'O    the Scheduler to defer events for this user until
 1820      }               after the user program has been re-entered.  Reset
 1821      }               by the scheduler.
 1822      }
 1823      } JJ_UDELTA#    Set when a run-unit is started under control of a
 1824      }  '200000'O    debugger and not set when a debugger is associated
 1825      }               via M$ALIB.  Control goes to the debugger on all
 1826      }               user exceptional conditions (break, traps, etc.)
 1827      }               when this bit is set.
 1828      }
 1829      } JJ_BAKIC#     Set by various monitor service processing routines
 1830      }  '001000'O    to indicate that control is to be returned to the
 1831      }               user with the IC in Safe-Store reset to the address
 1832      }               of the outstanding service request.  Used to back
 1833      }               out of reads when a break is received, for example.
 1834      }
 1835      } JJ_RUNXCON#   Set by the exit control logic when the user exit
 1836      }  '002000'O    control processing is complete and giving exit
 1837      }               control logic for the special shared processors
 1838      }               is to be entered.  Causes the subcode in the exit
 1839      }               control frame for the special shared processor to
 1840      }               be set to one.
 1841      }
 1842      } JJ_DLIB#      Set when a debugger or ASL is disassociated because
 1843      }  '004000'O    of an M$DLIB request.  Causes the exit control logic
 1844      }               to be entered (run-up) for the processor being
 1845      }               disassociated and indicates that the user program is
 1846      }               to be resumed following exit from the processor's
 1847      }               exit control routine.
 1848      }
 1849      } JJ_EXONLY#    Set when an execute-only run-unit is put into
 1850      }  '000010'O    execution.  Causes association of a debugger to
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            51   
 1851      }               be disallowed.
 1852      }
 1853      */
 1854      %EQU JJ_MLINKIP#  = '000001'O;
 1855      %EQU JJ_LNKRETIP# = '000002'O;
 1856      %EQU JJ_ASYNCLINK#= '000004'O;
 1857      %EQU JJ_EXONLY#   = '000010'O;
 1858      %EQU JJ_MONLINK#  = '000020'O;
 1859      %EQU JJ_SCCSET#   = '000040'O;
 1860      %EQU JJ_RTNXIT#   = '000100'O;
 1861      %EQU JJ_LOGOFF#   = '000200'O;
 1862      %EQU JJ_BYPASSD#  = '000400'O;
 1863      %EQU JJ_BAKIC#    = '001000'O;
 1864      %EQU JJ_RUNXCON#  = '002000'O;
 1865      %EQU JJ_DLIB#     = '004000'O;
 1866      %EQU JJ_SAVEING#  = '010000'O;
 1867      %EQU JJ_GETTING#  = '020000'O;
 1868      %EQU JJ_NOSAVE#   = '040000'O;
 1869      %EQU JJ_SCON#     = '100000'O;
 1870      %EQU JJ_UDELTA#   = '200000'O;
 1871      %EQU JJ_EVENT#    = '400000'O;
 1872      %EQU JJ_LDLNK#    = '000023'O;/* MLINKIP, LNKRETIP, MONLINK                                       */
 1873      %EQU JJ_LINK#     = '300134'O;/*restore UDELTA, SCON, RTNXIT,MONLINK, EXONLY, ASYNCLINK*/
 1874            2 STEPS SBIN HALF UNAL,
 1875      /*K* STEPS - SBIN HALF.
 1876      Contains the number of job steps that have been executed
 1877      since this user logged on.
 1878      */
 1879            2 XCONF BIT(9) UNAL,
 1880      /*K* XCONF - BIT(9).
 1881      Bits 6 through 8 of the XCONF field are used by the monitor to
 1882      keep track of the exit control activity as control passes from
 1883      one domain to another:
 1884      }
 1885      }  XC_URND     '004'O    Set when user level exit control processing
 1886      }                        is completed, or if the user has no request
 1887      }                        for exit control.
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            52   
 1888      }
 1889      }  XC_ASL#     '002'O    Set when ASL exit control processing
 1890      }                        is complete.
 1891      }
 1892      }  XC_QUIT     '001'O    Set on a QUIT command to DELTA or IBEX.
 1893      }
 1894      Bits 0 through 7 are used to record the prior RNST for multiple
 1895      entries to exit control within any domain.  Refer to RNST for the
 1896      EQUated values and meanings of these bits.
 1897      */
 1898      %EQU XC_QUIT# = '001'O;
 1899      %EQU XC_ASL#  = '002'O;
 1900      %EQU XC_URND# = '004'O;
 1901      %EQU XC_DOMAIN#='007'O;
 1902      %EQU XC_PRNST#= '770'O;
 1903            2 STEPCC UBIN(9) UNAL,
 1904      /*K* STEPCC - UBIN(9).
 1905      Contains the Step Condition Code.  This field
 1906      is set from the SEV field of the error code
 1907      at the time of the exit condition from the user
 1908      program:
 1909      }
 1910      }  CC_EXIT#   0    M$EXIT
 1911      }  CC_ERR#    4    Job step has been errored.
 1912      }  CC_XXX#    6    Job step has been aborted.
 1913      */
 1914      %EQU CC_EXIT# = 0;
 1915      %EQU CC_ERR#  = 4;
 1916      %EQU CC_XXX#  = 6;
 1917            2 XLIMFLG BIT(9) UNAL,
 1918      /*K* XLIMFLG - BIT(9).
 1919      When RS_LIMX# is set in RNST, one of the following bits
 1920      will be set in XLIMFLG to indicate what limit has been
 1921      exceeded:
 1922      }
 1923      }  XL_PO#     '400'O    Cards Punched
 1924      }
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            53   
 1925      }  XL_MEM#    '200'O    Memory -only causes abort if restoring a
 1926      }                               an M$LINK or SAVE program image.
 1927      }
 1928      }  XL_LO#     '100'O    M$LO pages
 1929      }
 1930      }  XL_DO#     '040'O    M$DO pages
 1931      }
 1932      }  XL_STACK#  '002'O    Safe-store Stack or Argument Stack
 1933      }
 1934      }  XL_TIME#   '001'O    Maximum Run Time exceeded
 1935      }
 1936      */
 1937      /* As of C00K, XL_TAPE, XL_TDISC and XL_PDISC are never set.
 1938         The only references to these are in AZA$LOGOFF, CPA$IBEX, CPJ$SUBR
 1939         and (indirectly) QXC$BLDMSG.
 1940      */
 1941      %EQU XL_TIME#  = '001'O;
 1942      %EQU XL_STACK# = '002'O;
 1943      %EQU XL_TAPE#  = '004'O;
 1944      %EQU XL_TDISC# = '010'O;
 1945      %EQU XL_PDISC# = '020'O;
 1946      %EQU XL_DO#    = '040'O;
 1947      %EQU XL_LO#    = '100'O;
 1948      %EQU XL_MEM#   = '200'O;
 1949      %EQU XL_PO#    = '400'O;
 1950            2 SVLDTF BIT(9) UNAL,
 1951      /*K* SVLDTF - BIT(9).
 1952      The SVLDT field contains bit settings to keep track of
 1953      various functions (exit control processing and association
 1954      of DELTA) in the course of M$LINK, M$LDTRC, SAVE and GET
 1955      processing:
 1956      }
 1957      }  SVL_DIC#    '200'O   DELTA was in control at the time of the SAVE.
 1958      }  SVL_EXIT#   '100'O   M$EXIT from exit control for SAVE - Saved
 1959      }                       program is now to be run down.
 1960      }  SVL_TRTN#   '040'O   M$TRTN from exit control for SAVE - Saved
 1961      }                       program is to continue execution.
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            54   
 1962      }  SVL_LINK#   '020'O   M$LINK in progress.
 1963      }  SVL_LDTRC#  '010'O   M$LDTRC in progress.
 1964      }  SVL_MSAVE#  '004'O   M$SAVE in progress.
 1965      }  SVL_YCSAVE# '002'O   Control-Y SAVE in progress.
 1966      }  SVL_GET#    '001'O   GET in progress.
 1967      }
 1968      */
 1969      %EQU SVL_DIC#    = '200'O;
 1970      %EQU SVL_EXIT#   = '100'O;
 1971      %EQU SVL_TRTN#   = '040'O;
 1972      %EQU SVL_READY#  = '140'O;
 1973      %EQU SVL_LINK#   = '020'O;
 1974      %EQU SVL_LDTRC#  = '010'O;
 1975      %EQU SVL_LYNX#   = '030'O;
 1976      %EQU SVL_MSAVE#  = '004'O;
 1977      %EQU SVL_YCSAVE# = '002'O;
 1978      %EQU SVL_SAVE#   = '006'O;
 1979      %EQU SVL_ECCB#   = '016'O;
 1980      %EQU SVL_GET#    = '001'O;
 1981            2 * BIT(36) ALIGNED,
 1982            2 CURPNUM SBIN HALF UNAL,
 1983      /*K* CURPNUM - SBIN HALF.
 1984      The CURPNUM field is incremented every time a run unit that
 1985      is the target of an M$LINK or M$LDTRC request is put into
 1986      execution.  This field is decremented when that run unit
 1987      exits.  CURPNUM and HIGHPNUM are used when processor accounting
 1988      is in effect.
 1989      */
 1990            2 HIGHPNUM SBIN HALF UNAL,
 1991      /*K* HIGHPNUM - SBIN HALF.
 1992      The HIGHPNUM field is incremented every time a run unit that is
 1993      the target of an M$LINK or M$LDTRC is put into execution and is
 1994      reset only on job step termination; thus, this is a count of the
 1995      number of "fetches" per job step.
 1996      */
 1997            2 JUNK2 BIT(18) UNAL,
 1998      /*K* JUNK2 - BIT(18).
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            55   
 1999      JUNK2 is the overflow of JIT.JUNK.  Bits in this word are
 2000      used as follows:
 2001      }
 2002      } JJ2_DBRK#     Set on M$DRTN when the DBRK = YES option is
 2003      }  '000001'O    specified.  Write access to data pages with the
 2004      }               SCDRRK bit set in the user's page table will be
 2005      }               disabled.  This bit will be reset and the write
 2006      }               access allowed on those pages when the debugger is
 2007      }               next entered.
 2008      }
 2009      } JJ2_PACCESS#  Set prior to transfer of control to the debugger if
 2010      }  '000002'O    the user page table has been modified to allow the
 2011      }               debugger to modify user procedure.  Will not be set
 2012      }               if ALIB.  Reset on M$DRTN when write access to
 2013      }               procedure is reset.
 2014      }
 2015      } JJ2_DFRBRK#  Set by the scheduler to defer break control to the
 2016      }  '000004'O   user when the break is received during M$YC PMME
 2017      }              processing.  This bit is reset when the command
 2018      }              processor issues the M$CPEXIT, at which time control
 2019      }              will be given to the user's break control routine.
 2020      }
 2021      } JJ2_CP_LINK# Set if the LINK option was specified on the M$CPEXIT
 2022      }  '000010'O   request.  If the Command Processor had been entered
 2023      }              because the time-sharing user had typed the
 2024      }              Control-Y sequence the JJ_ASYNCLINK bit in JUNK will
 2025      }              also be set.  If the Command Processor had been
 2026      }              entered for M$YC processing, JJ_ASYNCLINK will be
 2027      }              reset.
 2028      }
 2029      } JJ2_ASAVE_LNK# Set in the ASAVE logic prior to calling the M$LINK
 2030      }  '000020'O   handler to write the program image and free the
 2031      }              memory of a user whose timesharing line has failed.
 2032      }
 2033      } JJ2_NOSAVE_CP# Set when an M$SCON request has been issued by a CP
 2034      }  '000040'O   with SAVEFLG = NO specified.  When set, all requests
 2035      }              to SAVE the program are ignored.  Once set, this
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            56   
 2036      }              bit may only be reset by the CP.
 2037      }
 2038      } JJ2_MEM_ERR# Set if restoring an M$LINK image causes the user's
 2039      }  '000100'O   dynamic data segment space to be over allocated.
 2040      }
 2041      }
 2042      } JJ2_SKIP_QEND# Set if getting a page of user auto. Reset when the
 2043                     PMME to get page completes.
 2044      */
 2045      %EQU JJ2_DBRK#    = '000001'O;
 2046      %EQU JJ2_PACCESS# = '000002'O;
 2047      %EQU JJ2_DFRBRK#  = '000004'O;
 2048      %EQU JJ2_CP_LINK# = '000010'O;
 2049      %EQU JJ2_ASAVE_LNK#='000020'O;
 2050      %EQU JJ2_NOSAVE_CP#='000040'O;
 2051      %EQU JJ2_MEM_ERR#  ='000100'O;
 2052      %EQU JJ2_SKIP_QEND# = '000200'O;
 2053      %EQU JJ2_LINK#    = '000073'O;/*restore all but DBRK*/
 2054
 2055            2 PRIOR_CP UBIN(9) UNAL,
 2056      /*K* PRIOR_CP - UBIN(9).
 2057      Contains the processor number of the previous command processor.
 2058      When one command processor issues an M$CPEXIT service request to
 2059      associated a different command processor, the processor number of
 2060      the command processor making the request is put here.
 2061      */
 2062            2 PSEUDO_COUNT UBIN BYTE UNAL,
 2063      /*K* PSEUDO_COUNT - UBIN BYTE.
 2064      Contains the number of pseudo resources of the name specified
 2065      by PSEUDO_TEXT, which were acquired for this user by Job Step.
 2066      */
 2067            2 PSEUDO_TEXT CHAR(8),
 2068      /*K* PSEUDO_TEXT - CHAR(8).
 2069      Contains the pseudo resource name of the resource acquired
 2070      for this user by Job Step.
 2071      These pseudo resources are released when the currently executing
 2072      program is terminated.
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            57   
 2073      */
 2074      %MEND;
 2075      %MACRO A$JIT6;
 2076            2 * SBIN,
 2077            2 CLRES(0:2) BIT(1) UNAL,
 2078      /*K* CLRES - ARRAY(0:2) BIT(1).
 2079      The Communication Line RESource field contains permission bits
 2080      which allow users to use CL resources without reserving them via
 2081      !ORES.  Since !ORES CL is not valid, the last entry B$JIT.CLRES(2)
 2082      indicates that the user is allowed unlimited access to CL devices.
 2083      */
 2084            2 * BIT(8) UNAL,
 2085            2 NOLOEVER BIT (1) UNAL,
 2086      /*K* NOLOEVER - BIT (1).
 2087      This bit is set during logon.  If the user's MAXLO for this mode, as
 2088      defined in the user's record, is 0 then this bit is a 1.  The effect
 2089      of this bit being on is to inhibit any type of LO output.
 2090      */
 2091            2 NODOEVER BIT (1) UNAL,
 2092      /*K* NODOEVER - BIT (1).
 2093      This bit is set during logon.  If the user's MAXDO for this mode, as
 2094      defined in the user's record, is 0 then this bit is a 1.  The effect
 2095      of this bit being on is to inhibit any type of DO output.
 2096      */
 2097            2 NOPOEVER BIT (1) UNAL,
 2098      /*K* NOPOEVER - BIT (1).
 2099      This bit is set during logon.  If the user's MAXPO for this mode, as
 2100      defined in the user's record, is 0 then this bit is a 1.  The effect
 2101      of this bit being on is to inhibit any type of PO output.
 2102      */
 2103            2 ORIGINATOR_MODE UBIN(4) UNAL,
 2104      /*K* ORIGINATOR_MODE - UBIN(4).
 2105      Specifies the mode of the originator of the job stream
 2106      to which this job belongs.  One of the following EQUs
 2107      will be contained in this field:
 2108      }
 2109      } M_BATCH#   Originator was a card reader:
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            58   
 2110      }            B$JIT.ORIGINATOR_PORT.FROM_CR contains the
 2111      }            device name and TNAME of the originator.
 2112      }
 2113      } M_GHOST#   Originator was a ghost user:
 2114      }            B$JIT.ORIGINATOR_PORT.FROM_GHOST contains the
 2115      }            SYSID of the originator.
 2116      }
 2117      } M_INT#     Originator was an interactive user:
 2118      }            B$JIT.ORIGINATOR_PORT.FROM_INT contains the
 2119      }            TSLINE of the originator.
 2120      }
 2121      See B$JIT.MODE, B$JIT.ORIGINATOR_PORT.
 2122      */
 2123            2 INTER SBIN HALF UNAL,
 2124      /*K* INTER - SBIN HALF.
 2125      The INTERactions field contains the number of terminal interactions
 2126      which have occurred during this time sharing session.
 2127      */
 2128            2 STDLOPGS SBIN WORD,
 2129      /*K* STDLOPGS - SBIN WORD.
 2130      The STanDard LO PaGeS field contains the number of printed pages
 2131      of output which have been generated using the form STDLP.
 2132      */
 2133            2 ACCESS,
 2134      /*K* ACCESS.
 2135      The ACCESS field contains counts of various kinds of physical
 2136      accesses to devices.
 2137      */
 2138              3 PACKS SBIN,
 2139      /*K* ACCESS.PACKS - SBIN.
 2140      The PACKS field counts the number of physical accesses to files
 2141      during this job or session. Also included are requested physical
 2142      accesses which were satisfied by the I/O cache.
 2143      */
 2144              3 TAPES SBIN,
 2145      /*K* ACCESS.TAPES - SBIN.
 2146      The TAPES field counts the number of physical accesses to tapes
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            59   
 2147      during this job or session.
 2148      */
 2149              3 FORMS SBIN,
 2150      /*K* ACCESS.FORMS - SBIN.
 2151      The FORMS field counts the number of physical accesses to resource
 2152      devices other than disk or tape (e.g. resource Line Printer).
 2153      */
 2154            2 MOUNTS(0:2) SBIN HALF UNAL,
 2155      /*K* MOUNTS - ARRAY(0:2) SBIN HALF.
 2156      The MOUNTS field contains the number of operator mounts required
 2157      for various resource devices. The entries are used as follows:
 2158      disk=0, tape=1, other=2.
 2159      */
 2160            2 OLTA (0:1) BIT(1) UNAL,
 2161      /*K* OLTA - ARRAY(0:1) BIT(1).
 2162      The On Line TApe field contains permission bits which allow time
 2163      sharing users to use 0-2 tape drives without reserving them via
 2164      !ORES.
 2165      */
 2166            2 ARECX UBIN(16) UNAL,
 2167      /*K* ARECX - UBIN(16).
 2168      The Accounting RECord indeX field contains the key to be used in
 2169      the next resource accounting record to be written to *S. This field
 2170      is incremented each time a resource accounting record is written.
 2171      */
 2172            2 CURSUDO (0:7) UBIN BYTE UNAL,
 2173      /*K* CURSUDO - ARRAY(0:7) UBIN BYTE.
 2174      The CURrent pSeUDO field contains the current number of each
 2175      pseudo resource defined which is currently allocated to this job
 2176      or session. The order is as defined by TIGR.
 2177      */
 2178            2 RESCORE UBIN WORD,
 2179      /*K* RESCORE - UBIN WORD.
 2180      The RESource CORE field contains the current amount of resource
 2181      memory allocated (not necessarily physically allocated). The
 2182      MAXCORE field is always less than or equal to RESCORE.
 2183      See !RESOURCE, !ORES.
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            60   
 2184      */
 2185            2 TSLINE,
 2186      /*K* TSLINE.
 2187      The Time Sharing LINE field contains several attributes of a time
 2188      sharing users terminal connection.
 2189      */
 2190              3 FEX UBIN(9) UNAL,
 2191      /*K* TSLINE.FEX - UBIN(9).
 2192      The Front End indeX field contains the FEP number of the FEP to
 2193      which this user's terminal is connected.
 2194      */
 2195              3 SPEED UBIN(9) UNAL,
 2196      /*K* TSLINE.SPEED - UBIN(9).
 2197      The SPEED field contains a number signifying the line speed of this
 2198      user's terminal. The current values are:
 2199      }
 2200      }SPEED   baud      SPEED     baud      SPEED     baud
 2201      } 0        50       1          75       2         110
 2202      } 3       134       4         150       5         200
 2203      } 6       300       7         600       8        1050
 2204      } 9      1200      10        1800      11        2000
 2205      }12      2400      13        4800      14        9600
 2206      }15     19200
 2207      }
 2208      }Values 0, 1, 3, 8, 10, 11 are not currently supported.
 2209      */
 2210              3 PORT UBIN(18) UNAL,
 2211      /*K* TSLINE.PORT - UBIN(18).
 2212      The PORT field identifies the port or MLCP address on the FEP to
 2213      which this user's terminal is connected.
 2214      */
 2215              3 LEV UBIN BYTE UNAL,
 2216      /*K* TSLINE.LEV - UBIN (9).
 2217      The LEV defines what level of the line is valid. Values:
 2218           1 - Only the PORT is valid.
 2219           2 - The PORT-SUBDEVICE is valid.
 2220           3 - The PORT-SUBDEVICE-SUBSUBDEVICE is valid.
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            61   
 2221       */
 2222              3 TTYP UBIN BYTE UNAL,
 2223      /*K* TSLINE.TTYP - UBIN(9).
 2224      The TTYP field defines what type of device the connection is to.
 2225       */
 2226              3 SUBDEVICE UBIN(18) UNAL,
 2227      /*K* TSLINE.SUBDEVICE - UBIN(18).
 2228      The SUBDEVICE field identifies the subdevice for a given channel to
 2229      which this user's terminal is connected.
 2230       */
 2231              3 SUBSUBDEVICE UBIN(18) UNAL,
 2232      /*K* TSLINE.SUBSUBDEVICE - UBIN(18).
 2233      The SUBSUBDEVICE field identifies the subsubdevice for a given channel to
 2234      which this user's terminal is connected.
 2235       */
 2236              3 * UBIN(18) UNAL,
 2237            2 ORIGINATOR_PORT REDEF TSLINE,
 2238      /*K* ORIGINATOR_PORT.
 2239      The ORIGINATOR_PORT field contains information concerning
 2240      the originator of the job stream to which this job belongs.
 2241      This field is a REDEF of the TSLINE field.
 2242      */
 2243              3 FROM_CR,
 2244      /*K* ORIGINATOR_PORT.FROM_CR.
 2245      The ORIGINATOR_PORT.FROM_CR field contains information concerning
 2246      the originator of the job stream to which this job belongs,
 2247      if B$JIT.ORIGINATOR_MODE is M_BATCH#.
 2248      */
 2249                4 DEVICE CHAR(4),
 2250      /*K* ORIGINATOR_PORT.FROM_CR.DEVICE - CHAR(4).
 2251      Contains the device name of the card reader of origin.
 2252      */
 2253                4 TNAME CHAR(8),
 2254      /*K* ORIGINATOR_PORT.FROM_CR.TNAME - CHAR(8).
 2255      Contains the TNAME of the card reader of origin.
 2256      */
 2257              3 FROM_GHOST REDEF FROM_CR,
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            62   
 2258      /*K* ORIGINATOR_PORT.FROM_GHOST.
 2259      The ORIGINATOR_PORT.FROM_GHOST field contains information concerning
 2260      the originator of the job stream to which this job belongs,
 2261      if B$JIT.ORIGINATOR_MODE is M_GHOST#.
 2262      This field is a REDEF of the ORIGINATOR_PORT.FROM_CR field.
 2263      */
 2264                4 SYSID UBIN HALF UNAL,
 2265      /*K* ORIGINATOR_PORT.FROM_GHOST.SYSID - UBIN HALF.
 2266      Contains the SYSID of the originating ghost user.
 2267      */
 2268                4 * CHAR(10),
 2269              3 FROM_INT REDEF FROM_CR,
 2270      /*K* ORIGINATOR_PORT.FROM_INT.
 2271      The ORIGINATOR_PORT.FROM_INT field contains information concerning
 2272      the originator of the job stream to which this job belongs,
 2273      if B$JIT.ORIGINATOR_MODE is M_INT#.
 2274      This field is a REDEF of the ORIGINATOR_PORT.FROM_CR field.
 2275      */
 2276                4 TSLINE,
 2277      /*K* ORIGINATOR_PORT.FROM_INT.TSLINE.
 2278      The ORIGINATOR_PORT.FROM_INT.TSLINE field is a REDEF of the
 2279      TSLINE field.
 2280      */
 2281                  5 * CHAR(10),
 2282                4 SYSID SBIN(18) UNAL,
 2283      /*K* ORIGINATOR_PORT.FROM_INT.SYSID.
 2284      The ORIGINATOR_PORT.FROM_INT.SYSID field REDEFs a portion of the TSLINE field,
 2285      and contains the SYSID of the originating time-sharing user.
 2286      */
 2287            2 PMME_COUNT SBIN,
 2288      /*K* PMME_COUNT - SBIN.
 2289      The PMME_COUNT and PMME_DATA field are used in conjunction to gather
 2290      data on PMMEs executed when the MoUsE (Monitor Usage Evaluator)
 2291      feature of STATS is in use. The PMME_COUNT field contains the current
 2292      nesting level of a PMME, e.g. an M$ERRMSG PMME must invoke an M$OPEN
 2293      PMME to open the appropriate error message file.
 2294      */
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            63   
 2295            2 PMME_DATA(0:2),
 2296      /*K* PMME_DATA - ARRAY(0:2).
 2297      The PMME_DATA field contains various information about starting a
 2298      PMME for this user. When the PMME completes, the resultant information
 2299      is recorded in the system MOUSE tables. This field is indexed by
 2300      PMME_COUNT.
 2301      */
 2302              3 CPU UBIN,
 2303      /*K* PMME_DATA.CPU - UBIN.
 2304      The CPU field contains the service time used by this job or session
 2305      up to the start of this PMME.
 2306      */
 2307              3 I_O UBIN,
 2308      /*K* PMME_DATA.I_O - UBIN.
 2309      The I_O field contains the sum of the three ACCESS fields at the
 2310      start of this PMME.
 2311      */
 2312              3 MISC1 SBIN,
 2313      /*K* PMME_DATA.MISC1 - SBIN.
 2314      The MISCellaneous1 and MISC2 fields contain various information
 2315      about the PMME in progress, e.g. for file management operations,
 2316      the ASN field of the DCB.
 2317      */
 2318              3 MISC2 SBIN,
 2319      /*K* PMME_DATA.MISC2 - SBIN.
 2320      See MISC1.
 2321      */
 2322            2 ENQS UBIN(18) UNAL,
 2323      /*K* ENQS - UBIN(18).
 2324      The ENQS field contains the current number of ENQue resources
 2325      owned by this job or session.
 2326      */
 2327            2 APATTR BIT(18),
 2328      /*K* APATTR - BIT(18).
 2329      The APATTR field contains the attributes to be requested when a
 2330      floating point array processor is opened.  This field is set via
 2331      the !RES or !ORES command in IBEX.
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            64   
 2332      */
 2333            2 REMCPO SBIN,
 2334      /*K* REMCPO - SBIN.
 2335      This field contains the number of punched cards allowed
 2336      remaining for this job.
 2337      */
 2338            2 REMLO SBIN,
 2339      /*K* REMLO - SBIN.
 2340      This field contains the number of pages of LO output
 2341      remaining for this job.
 2342      */
 2343            2 REMDO SBIN,
 2344      /*K* REMDO - SBIN.
 2345      This field contains the number of pages of DO output
 2346      remaining for this job.
 2347      */
 2348            2 MAXENQ UBIN HALF HALIGNED,
 2349      /*K* MAXENQ - UBIN(18).
 2350      Defines the maximum number of ENQ/DEQ packets for this user.
 2351      */
 2352            2 * UBIN HALF HALIGNED,
 2353            2 * (0:1) UBIN WORD;
 2354      %MEND;
 2355
 2356      /*N*
 2357           NAME: B$JIT0
 2358           PURPOSE:
 2359                The B$JIT0 macro defines the portion of the JIT that is of interest
 2360                to all parts of the operating system.  This portion of the JIT
 2361                is located at relative location zero and is 24 words long.
 2362      */
 2363
 2364      %MACRO B$JIT0X (B$JIT0=B$JIT0,STCLASS=BASED);
 2365      DCL 1 B$JIT0 STCLASS DALIGNED,
 2366            2 * (0:23) UBIN WORD,
 2367      %MEND;
 2368
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            65   
 2369
 2370      /*F*
 2371           NAME: U$JIT1
 2372           PURPOSE:
 2373                The U$JIT1 macro defines the portion of the JIT that contains
 2374                the data that is most likely to be of interest to the user.
 2375                This portion of the JIT is currently 102 words long.
 2376      */
 2377
 2378
 2379      %MACRO U$JIT1X;
 2380            2 *(0:101) UBIN,
 2381      %MEND;
 2382
 2383
 2384      /*F*
 2385           NAME: M$JIT2
 2386           PURPOSE:
 2387                The M$JIT2 macro defines the portion of the JIT that is of interest
 2388                primarily to the Memory Management modules within CP-6.
 2389                This portion of the JIT is currently 18 words long.
 2390      */
 2391
 2392
 2393      %MACRO M$JIT2X;
 2394            2 *(0:17) UBIN,
 2395      %MEND;
 2396
 2397
 2398      /*F*
 2399           NAME: F$JIT3
 2400           PURPOSE:
 2401                The F$JIT3 macro defines the portion of the JIT that is of interest
 2402                primarily to the File Management modules within CP-6.
 2403                This portion of the JIT is currently 32 words long.
 2404      */
 2405
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            66   
 2406
 2407      %MACRO F$JIT3X;
 2408            2 *(0:31) UBIN,
 2409      %MEND;
 2410
 2411
 2412      /*F*
 2413           NAME: S$JIT4
 2414           PURPOSE:
 2415                The S$JIT4 macro defines the portion of the JIT that is of interest
 2416                primarily to the Execution Scheduling modules within CP-6.
 2417                This portion of the JIT is currently 28 words long.
 2418      */
 2419
 2420
 2421      %MACRO S$JIT4X;
 2422            2 *(0:27) UBIN,
 2423      %MEND;
 2424
 2425
 2426      /*F*
 2427           NAME: J$JIT5
 2428           PURPOSE:
 2429                The J$JIT5 macro defines the portion of the JIT that is of interest
 2430                primarily to the Job Step modules within CP-6.
 2431                This portion of the JIT is currently 8 words long.
 2432      */
 2433
 2434
 2435      %MACRO J$JIT5X;
 2436            2 *(0:7) UBIN,
 2437      %MEND;
 2438
 2439
 2440      /*F*
 2441           NAME: A$JIT6
 2442           PURPOSE:
14:09 JUL 28 '97 B$JIT_C.:E05SI                                            67   
 2443                The A$JIT6 macro defines the portion of the JIT that is of interest
 2444                primarily to the resource management modules within CP-6.
 2445                This portion of the JIT is currently 34 words long.
 2446      */
 2447
 2448
 2449      %MACRO A$JIT6X;
 2450            2 *(0:33) UBIN;
 2451      %MEND;

