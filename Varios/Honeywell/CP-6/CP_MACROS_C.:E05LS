

14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        1    
    1      /*M*   CP_MACROS_C  IBEX macros                  */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*P*   NAME:   CP_MACROS_C
    8             PURPOSE: To provide a common module containing macros which
    9                     are referenced by the various IBEX modules.
   10      */
   11      /**********************************************************************/
   12      %MACRO SEG$2(NAME=SEG$2,STCLASS="BASED(SEG2$)");
   13      DCL 1 NAME ALIGNED STCLASS,
   14            2 FLAGS,
   15              3 USERS BIT(1) UNAL,            /* SEG$2.USERS$ is valid              */
   16              3 HLP BIT(1) UNAL,              /* SEG$2.HLP$ is valid                */
   17              3 RES BIT(1) UNAL,              /* SEG$2.PSEUDO$ & SEG$2.PHYS valid   */
   18              3 SKIP_ECHO BIT(1) UNAL,        /* Do not echo this command           */
   19              3 NOM$LLDCB BIT(1) UNAL,        /* No M$LL dcb yet                    */
   20              3 IGNORE_XXX BIT(1) UNAL,       /* Ignore abort for M$XXX             */
   21              3 SKIP_ERRS BIT(1) UNAL,        /* Dont print errs                    */
   22              3 CONTINUED BIT(1) UNAL,        /* This command was continued         */
   23              3 RUNITCMD BIT(1) UNAL,         /* This is a RUN UNIT cmd.            */
   24              3 ABORT BIT(1) UNAL,            /* ABORT processing.                  */
   25              3 CMD_STR_INT BIT(1) UNAL,      /* COMMAND STREAM was interrupted     */
   26              3 YCPMME_INT BIT(1) UNAL,       /* M$YC was interrupted with a Y-C    */
   27              3 CPBUFFULL_AT_CSINT BIT(1) UNAL, /* CPBUFF was full when CS interupt.*/
   28              3 USE_REMEM BIT(1) UNAL,  /* Use the REMEMBER variable for UNWIND. */
   29              3 USE_CCBUF_IF_YC BIT(1) UNAL,  /* Use CCBUF if during YC. */
   30              3 IBEX_OWNS_M$LL BIT(1) UNAL,
   31              3 GOT_WHEN_CNTL_REC BIT(1) UNAL,/* We already got WHEN_CNTL_REC*/
   32              3 * BIT(1) UNAL,
   33            2 LLDCB# UBIN(18) UNAL,
   34            2 NCHARS UBIN(18) UNAL,          /* CURRENT RECD. SIZE (CHARS.)        */
   35            2 USERS_SZ UBIN(18) UNAL,        /* ACTUAL LEN IN CHARS OF :USERS REC  */
   36            2 HLP_SZ UBIN(18) UNAL,          /* ACTUAL LEN IN CHARS OF :HLP REC    */
   37            2 LASTPROMPT UBIN HALF UNAL,     /* Last prompt displayed */
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        2    
   38            2 ERRBUF (0:99) UBIN WORD,
   39            2 DBUG_NAME ALIGNED,
   40              3 CNT UBIN(9) UNAL,
   41              3 TXT CHAR(11),
   42            2 USERS$               PTR ALIGNED,
   43            2 HLP$                 PTR ALIGNED,
   44            2 PSEUDO$              PTR ALIGNED,
   45            2 PHYS$                PTR ALIGNED,
   46            2 FPT_READUC$          PTR ALIGNED,
   47            2 FPT_WRITEUC$         PTR ALIGNED,
   48            2 FPT_READCC$          PTR ALIGNED,
   49            2 FPT_WRITECC$         PTR ALIGNED,
   50            2 FPT_OPEN$            PTR ALIGNED,
   51            2 FPT_CLOSE$           PTR ALIGNED,
   52            2 FPT_READ$            PTR ALIGNED,
   53            2 FPT_WRITE$           PTR ALIGNED,
   54            2 FPT_CPEXIT$          PTR ALIGNED,
   55            2 FPT_FID$             PTR ALIGNED,
   56            2 FPT_TIME$            PTR ALIGNED,
   57            2 CPBUFF$              PTR ALIGNED,
   58            2 XUG_INIT$            PTR ALIGNED,
   59            2 GETCMD$              PTR ALIGNED,
   60            2 REMEM$               PTR ALIGNED,
   61            2 WHEN_CNTL_REC$       PTR ALIGNED,
   62            2 ACCUM_CHG            UBIN WORD ,
   63            2 SPROMPT$             PTR ALIGNED,
   64            2 PROMPT$              PTR ALIGNED,
   65            2 XUC$                 PTR ALIGNED,
   66            2 WRITTEN              BIT(1) ALIGNED,
   67            2 LINECOUNT            SBIN ALIGNED,
   68            2 TABVAL               SBIN ALIGNED,
   69            2 PROMPT_TYPE          UBIN ALIGNED,
   70            2 XUC_BUFF             CHAR(160) ALIGNED;
   71      %MEND;
   72      %MACRO ERR_CODE(NAME=ERR_CODE,STCLASS=AUTO,FCG#='0320'O,MID#='0'O,
   73                       MON#='0'B,CODE#=0,SEV#=0);
   74      %LSET LISTDIR='0'B;
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        3    
   75      %LSET LISTEXP='0'B;
   76      %LSET LISTCOM='0'B;
   77      %LSET LISTSUB='0'B;
   78      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   79      %IF (SUBSTR(STR,0,8)='CONSTANT') OR
   80          (SUBSTR(STR,0,6)='STATIC') OR
   81          (SUBSTR(STR,0,3)='EXT');
   82        %LSET INIT=CHARTEXT('INIT');
   83      %ELSE;
   84        %LSET INIT=CHARTEXT('/*');
   85      %ENDIF;
   86      DCL  1   NAME ALIGNED STCLASS,
   87           2  FCG BIT(12) UNAL %INIT(FCG#) %CHARTEXT('/**/'),
   88           2  MID BIT(6) UNAL %INIT(MID#) %CHARTEXT('/**/'),
   89           2  MON BIT(1) UNAL %INIT(MON#) %CHARTEXT('/**/'),
   90           2  CODE UBIN(14) UNAL %INIT(CODE#) %CHARTEXT('/**/'),
   91           2  SEV UBIN(3) UNAL %INIT(SEV#) %CHARTEXT('/**/');
   92      %MEND;
   93      %MACRO AMR$PTRS(NAME=AMR$PTRS,STCLASS=" ");
   94      DCL 1 NAME ALIGNED STCLASS,
   95            2 HI_SEGMENT$ PTR ALIGNED,
   96            2 FREE_HEAD$ PTR ALIGNED;
   97      %MEND;
   98      %MACRO CP_LIMREC(NAME=CP_LIMREC,STCLASS=" ");
   99      DCL 1 NAME ALIGNED STCLASS,
  100            2 USER_MAX,                       /*JOB MAXIMUM*/
  101              3 MAXCORE SBIN HALF UNAL,
  102              3 FBUL SBIN HALF UNAL,
  103              3 REMLO SBIN WORD,
  104              3 REMCPO SBIN WORD,
  105              3 REMDO SBIN WORD,
  106              3 PRDPRM SBIN,
  107              3 MAXTMPDP SBIN,
  108              3 MRT SBIN,
  109            2 CUR_MAX,                        /*CURRENT-DEFAULT MAXIMUM*/
  110                                              /*= TO JIT @ LOGON TIME*/
  111              3 MAXCORE SBIN HALF UNAL,
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        4    
  112              3 FBUL SBIN HALF UNAL,
  113              3 REMLO SBIN WORD,
  114              3 REMCPO SBIN WORD,
  115              3 REMDO SBIN WORD,
  116              3 PRDPRM SBIN,
  117              3 MAXTMPDP SBIN,
  118              3 MRT SBIN,
  119            2 STEP_MAX,                       /*JOB STEP MAXIMUM*/
  120              3 MAXCORE SBIN HALF UNAL,
  121              3 FBUL SBIN HALF UNAL,
  122              3 REMLO SBIN WORD,
  123              3 REMCPO SBIN WORD,
  124              3 REMDO SBIN WORD,
  125              3 PRDPRM SBIN,
  126              3 MAXTMPDP SBIN,
  127              3 MRT SBIN,
  128            2 CUMUL,                          /*JOB CUMULATIVE*/
  129              3 REMLO SBIN WORD,
  130              3 REMCPO SBIN WORD,
  131              3 REMDO SBIN WORD,
  132              3 MAXTMPDP SBIN,
  133              3 PRDPRM SBIN,
  134              3 MRT SBIN;
  135      %MEND;
  136      %MACRO U$PARAM (NAME=U$PARAM,STCLASS=AUTO);
  137      DCL 1   NAME  ALIGNED  STCLASS,
  138              2  ERRBUF$  PTR,
  139              2  USERS$   PTR,
  140              2  CNTU$$   EPTR,
  141              2  SPCL$$   EPTR,
  142              2  PSEUDO$ PTR,
  143              2  PHYS$ PTR,
  144              2  MODE  UBIN BYTE UNAL,
  145              2  FID_CNT UBIN BYTE UNAL,
  146              2  FID_BLK$ (0:%(MAX_FID_BLKS-1)) PTR ALIGNED,
  147              2  GETCMD$ PTR ALIGNED,
  148              2  PARAMS$ PTR ALIGNED,
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        5    
  149              2  REMEM$ PTR ALIGNED,
  150              2 REMEM_CONTEXT_ERR$ PTR ALIGNED;
  151      %MEND;
  152      /**/
  153      %MACRO CP$PARAM (NAME=CP$PARAM,STCLASS=" ");
  154      DCL 1 NAME STCLASS ALIGNED,
  155            2 SYM_HEAD$ PTR,
  156            2 VALUE SBIN WORD,
  157            2 SRCH UBIN BYTE UNAL,
  158            2 TYPE UBIN BYTE UNAL,
  159            2 NUM  UBIN HALF UNAL,
  160            2 TEXTC$ (0:1) PTR,
  161            2 ERR   ALIGNED,
  162              3 FCG BIT (12) UNAL,
  163              3 MID BIT (6) UNAL,
  164              3 MON BIT (1) UNAL,
  165              3 CODE UBIN (14) UNAL,
  166              3 SEV UBIN (3) UNAL,
  167            2 MAP$  PTR;
  168      %MEND;
  169      /**/
  170      %MACRO CP$COMVARS (NAME=CP$COMVARS,STCLASS=BASED);
  171      DCL  1  NAME  STCLASS ALIGNED,
  172              2  WKSZ_SAVE UBIN WORD,
  173              2  HI_SEGMENT_SAVE$ PTR,
  174              2  SYM_HEAD_SAVE$ PTR,
  175              2  FREE_HEAD_SAVE$ PTR,
  176              2  STRING_SPACE (0:0) UBIN WORD;
  177      %MEND;
  178      /**/
  179      %MACRO ERR_BLK (NAME=ERR_BLK,STCLASS=AUTO);
  180      %LSET LISTDIR='0'B;
  181      %LSET LISTEXP='0'B;
  182      %LSET LISTCOM='0'B;
  183      %LSET LISTSUB='0'B;
  184      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  185      %IF (SUBSTR(STR,0,8)='CONSTANT') OR
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        6    
  186          (SUBSTR(STR,0,6)='STATIC') OR
  187          (SUBSTR(STR,0,3)='EXT');
  188        %LSET INIT=CHARTEXT('INIT');
  189      %ELSE;
  190        %LSET INIT=CHARTEXT('/*');
  191      %ENDIF;
  192      /**/
  193      DCL  1  NAME STCLASS ALIGNED,
  194              2  SIZE UBIN WORD %INIT(10) %CHARTEXT('/**/'),   /* Max num of errors */
  195              2  FIRST UBIN WORD %INIT(0) %CHARTEXT('/**/'),   /* First error (sorted) */
  196              2  NEXT UBIN WORD %INIT(0) %CHARTEXT('/**/'),    /* Next avail error slot */
  197              2  BLK(0:9),
  198                 3  CHARPOS UBIN BYTE UNAL,
  199                 3  LINK UBIN BYTE UNAL,
  200                 3  DCB# UBIN BYTE UNAL,
  201                 3  * UBIN BYTE UNAL,
  202                 3  ERROR BIT(36) ALIGNED;
  203      %MEND;
  204      /**/
  205      %MACRO SUB$PARAMS (NAME=SUB$PARAMS,STCLASS=AUTO);
  206      DCL  1  NAME STCLASS ALIGNED,
  207              2  ONLINE_DEF_HEAD$ PTR,        /* PTR to list of ONLINE subs         */
  208              2  GLOBAL_DEF_HEAD$ PTR,        /* PTR to list of GLOBAL subs         */
  209              2  PROMPT_DEF_HEAD$ PTR,        /* PTR to list of PROMPT subs         */
  210              2  DEFAULT_DEF_HEAD$ PTR,       /* PTR to list of DEFAULT subs        */
  211              2  READBUF$ PTR,                /* PTR to READBUF                     */
  212              2  TEMPBUF$ PTR,                /* PTR to TEMPBUF                     */
  213              2  WRITEBUF$ PTR,               /* PTR to WRITEBUF                    */
  214              2  FPT_READ$ PTR,               /* FPT for reading JCL file           */
  215              2  FPT_WRITE$ PTR,              /* FPT for writing CMD STREAM         */
  216              2  X$MCB$ PTR,                  /* PTR to X$MCB for mem mgnt.         */
  217              2  X$PARAM$ PTR,                /* PTR to X$PARAM for string mgnt.    */
  218              2  BUF_LEN SBIN WORD,           /* LENGTHV of READBUF                 */
  219              2  REC_NUM SBIN WORD,           /* Number of this record              */
  220              2  SUB_MADE# BIT(1) UNAL,       /* Was a substitution made?           */
  221              2  PRINT_OPT# BIT(1) UNAL,      /* Was PRINT option specified?        */
  222              2  TEST_OPT# BIT(1) UNAL,       /* Was TEST option specified?         */
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        7    
  223              2  BATCH_ABORTED# BIT(1) UNAL,  /* Has there been any errors?         */
  224              2  NO_GLOBALS# BIT(1) UNAL;     /* Dont do any GLOBAL substitutions   */
  225      %MEND;
  226      /**/
  227      %MACRO CP$BUFF (NAME=CP$BUFF,STCLASS=BASED);
  228      DCL NAME STCLASS ALIGNED CHAR(%CPBUFFSIZE) ;
  229      %MEND;
  230      /**/
  231      %MACRO CP_CHKEYBUF  (FPTN = CP_CHKEYBUF, STCLASS = AUTO , KSIZ# = 8,
  232                          SYSID# = 0, NUM# = 0) ;
  233
  234      %LSET LISTDIR = '0'B ;
  235      %LSET LISTEXP = '1'B ;
  236      %LSET LISTCOM = '0'B ;
  237      %LSET LISTSUB = '1'B ;
  238      %LSET STR = CONCAT(TEXTCHAR(STCLASS),'        ') ;
  239
  240      %IF   (SUBSTR(STR,0,8)='CONSTANT')  OR
  241            (SUBSTR(STR,0,6)='STATIC')    OR
  242            (SUBSTR(STR,0,3)='EXT') ;
  243
  244            %LSET INIT=CHARTEXT('INIT') ;
  245      %ELSE ;
  246            %LSET INIT = CHARTEXT('/*') ;
  247      %ENDIF ;
  248
  249      DCL 1 FPTN ALIGNED STCLASS ,
  250            2 KSIZ UBIN BYTE UNAL %INIT(KSIZ#) %CHARTEXT('/**/') ,
  251            2 SYSID UBIN WORD UNAL %INIT(SYSID#) %CHARTEXT('/**/') ,
  252            2 NUM UBIN WORD UNAL %INIT(NUM#) %CHARTEXT('/**/') ;
  253      %MEND ;
  254      /**/
  255      %MACRO CP_CHFLAGS  (FPTN = CP_CHFLAGS, STCLASS = AUTO ,
  256            USE_ACCT#=' ', USE_NAME#=' ', USE_PASS#=' ', USE_WSN#=' ',
  257            USE_RESULTS#='0'B, SN_N#=3, SN#=' ', USE_RES#=' ', USE_ASN#=0,
  258            SYSTEM#(YES='1'B, NO='0'B)='0'B, SRCHQS#(YES='1'B, NO='0'B)='0'B,
  259            ACCT#(YES='1'B, NO='0'B)='1'B, SRCHID#(YES='1'B, NO='0'B)='1'B,
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        8    
  260            TERM#(YES='1'B, NO='0'B)='0'B, INPUT#(YES='1'B, NO='0'B)='1'B,
  261            OUTPUT#(YES='1'B, NO='0'B)='1'B, RUNNING#(YES='1'B, NO='0'B)='1'B,
  262            DEFER#(YES='1'B, NO='0'B)='0'B, NORUN#(YES='1'B, NO='0'B)='0'B,
  263            NSFORM#(YES='1'B, NO='0'B)='0'B, NUMBER#(YES='1'B, NO='0'B)='0'B,
  264            PRIO#(YES='1'B, NO='0'B)='0'B, EVERY#(YES='1'B, NO='0'B)='0'B,
  265            WAIT#(YES='1'B, NO='0'B)='0'B, FIND#(YES='1'B, NO='0'B)='0'B,
  266            WAIT_DONE#(YES='1'B, NO='0'B)='1'B, WAIT_INT#=15,
  267            INPUT_OPT#(ALL=0, READY=1, HELD=2)=0) ;
  268
  269      %LSET LISTDIR = '0'B ;
  270      %LSET LISTEXP = '1'B ;
  271      %LSET LISTCOM = '0'B ;
  272      %LSET LISTSUB = '1'B ;
  273      %LSET STR = CONCAT(TEXTCHAR(STCLASS),'        ') ;
  274
  275      %IF   (SUBSTR(STR,0,8)='CONSTANT')  OR
  276            (SUBSTR(STR,0,6)='STATIC')    OR
  277            (SUBSTR(STR,0,3)='EXT') ;
  278
  279            %LSET INIT=CHARTEXT('INIT') ;
  280      %ELSE ;
  281            %LSET INIT = CHARTEXT('/*') ;
  282      %ENDIF ;
  283
  284      DCL 1 FPTN ALIGNED STCLASS ,
  285            2 USE_ACCT CHAR(8) UNAL %INIT(USE_ACCT#) %CHARTEXT('/**/') ,
  286            2 USE_NAME,
  287              3 L# UBIN(9) UNAL %INIT(SIZEC(USE_NAME#)) %CHARTEXT('/**/') ,
  288              3 NAME# CHAR(31) %INIT(USE_NAME#) %CHARTEXT('/**/'),
  289            2 USE_PASS CHAR(8) UNAL %INIT(USE_PASS#) %CHARTEXT('/**/') ,
  290            2 USE_WSN CHAR(8) UNAL %INIT(USE_WSN#) %CHARTEXT('/**/') ,
  291            2 USE_RESULTS BIT(72) UNAL %INIT(USE_RESULTS#) %CHARTEXT('/**/') ,
  292            2 USE_SN ,
  293              3 N SBIN UNAL %INIT(SN_N#) %CHARTEXT('/**/') ,
  294              3 SN (0:SN_N#) CHAR(6) UNAL %INIT(SN#*0) %CHARTEXT('/**/') ,
  295            2 USE_RES CHAR(2) UNAL %INIT(USE_RES#) %CHARTEXT('/**/') ,
  296            2 USE_ASN UBIN(9) UNAL %INIT(USE_ASN#) %CHARTEXT('/**/') ,
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        9    
  297            2 * CHAR(1) UNAL %INIT(' ') %CHARTEXT('/**/') ,
  298            2 INPUT_OPT UBIN HALF UNAL %INIT(INPUT_OPT#) %CHARTEXT('/**/') ,
  299            2 SYSTEM BIT(1) UNAL %INIT(SYSTEM#) %CHARTEXT('/**/') ,
  300            2 WAIT_DONE BIT(1) UNAL %INIT(WAIT_DONE#) %CHARTEXT('/**/') ,
  301            2 * BIT(34) UNAL %INIT('0'B) %CHARTEXT('/**/') ,
  302            2 FLG,
  303              3 SRCHQS BIT(1) UNAL %INIT(SRCHQS#) %CHARTEXT('/**/') ,
  304              3 SRCHID BIT(1) UNAL %INIT(SRCHID#) %CHARTEXT('/**/') ,
  305              3 ACCT BIT(1) UNAL %INIT(ACCT#) %CHARTEXT('/**/') ,
  306              3 TERM BIT(1) UNAL %INIT(TERM#) %CHARTEXT('/**/') ,
  307              3 INPUT BIT(1) UNAL %INIT(INPUT#) %CHARTEXT('/**/') ,
  308              3 OUTPUT BIT(1) UNAL %INIT(OUTPUT#) %CHARTEXT('/**/') ,
  309              3 RUNNING BIT(1) UNAL %INIT(RUNNING#) %CHARTEXT('/**/') ,
  310              3 DEFER BIT(1) UNAL %INIT(DEFER#) %CHARTEXT('/**/') ,
  311              3 NORUN BIT(1) UNAL %INIT(NORUN#) %CHARTEXT('/**/') ,
  312              3 NSFORM BIT(1) UNAL %INIT(NSFORM#) %CHARTEXT('/**/') ,
  313              3 NUMBER BIT(1) UNAL %INIT(NUMBER#) %CHARTEXT('/**/') ,
  314              3 PRIO BIT(1) UNAL %INIT(PRIO#) %CHARTEXT('/**/') ,
  315              3 EVERY BIT(1) UNAL %INIT(EVERY#) %CHARTEXT('/**/') ,
  316              3 WAIT BIT(1) UNAL %INIT(WAIT#) %CHARTEXT('/**/') ,
  317              3 FIND BIT(1) UNAL %INIT(FIND#) %CHARTEXT('/**/') ,
  318              3 * BIT(21) UNAL %INIT('0'B) %CHARTEXT('/**/') ,
  319            2 WAIT_INT UBIN WORD UNAL %INIT(WAIT_INT#) %CHARTEXT('/**/') ,
  320      %VLP_CRITERIA(FPTN=I_CRITERIA,STCLASS=STCLASS,LVL=2,LAST=",") ;
  321      %VLP_CRITERIA(FPTN=O_CRITERIA,STCLASS=STCLASS,LVL=2,LAST=",") ;
  322      %VLP_CRITERIA(FPTN=SYSID_CRITERIA,STCLASS=STCLASS,LVL=2) ;
  323      %MEND ;
  324      /**/
  325      %MACRO CP_FIDVLPS (NAME=CP_FIDVLPS,STCLASS=AUTO);
  326      DCL  1  NAME STCLASS DALIGNED ,
  327              2  FID_ACCT_ BIT(72),
  328              2  FID_NAME_ BIT(72),
  329              2  FID_PASS_ BIT(72),
  330              2  FID_WSN_ BIT(72) ,
  331              2  FID_SN_ BIT(72) ,
  332              2  FID_RESULTS BIT(72) ,
  333              2  FID_RES CHAR(4),
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        10   
  334              2  FID_ASN UBIN(9) UNAL ;
  335      %MEND;
  336      /**/
  337      %MACRO CP_SYSIDBUF  (FPTN = CP_SYSIDBUF, STCLASS = AUTO , CODE# = 0,
  338                          PRIO# = 0, TORUN# = 0, ACCT# = ' ', JNAME# = ' ',
  339                          COMMENT# = ' ') ;
  340
  341      %LSET LISTDIR = '0'B ;
  342      %LSET LISTEXP = '1'B ;
  343      %LSET LISTCOM = '0'B ;
  344      %LSET LISTSUB = '1'B ;
  345      %LSET STR = CONCAT(TEXTCHAR(STCLASS),'        ') ;
  346
  347      %IF   (SUBSTR(STR,0,8)='CONSTANT')  OR
  348            (SUBSTR(STR,0,6)='STATIC')    OR
  349            (SUBSTR(STR,0,3)='EXT') ;
  350
  351            %LSET INIT=CHARTEXT('INIT') ;
  352      %ELSE ;
  353            %LSET INIT = CHARTEXT('/*') ;
  354      %ENDIF ;
  355
  356      DCL 1 FPTN ALIGNED STCLASS ,
  357            2 STATUS ,
  358              3 CODE UBIN WORD UNAL %INIT(CODE#) %CHARTEXT('/**/') ,
  359              3 PRIO UBIN WORD UNAL %INIT(PRIO#) %CHARTEXT('/**/') ,
  360              3 TORUN UBIN WORD UNAL %INIT(TORUN#) %CHARTEXT('/**/') ,
  361            2 ACCT CHAR(8) UNAL %INIT(ACCT#) %CHARTEXT('/**/') ,
  362            2 JNAME CHAR(31) UNAL %INIT(JNAME#) %CHARTEXT('/**/') ,
  363            2 COMMENT CHAR(24) UNAL %INIT(COMMENT#) %CHARTEXT('/**/') ;
  364      %MEND ;
  365      /**/
  366      %MACRO CH_XFORMAT   (FPTN = CH_XFORMAT, STCLASS = AUTO , MSG = 0,
  367                          SYSID = 0, ACCT = ' ', JOBNAME = ' ', NUM = 0,
  368                          BUF = NIL, STAT = NIL, COMMENT = ' ') ;
  369
  370      %LSET LISTDIR = '0'B ;
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        11   
  371      %LSET LISTEXP = '1'B ;
  372      %LSET LISTCOM = '0'B ;
  373      %LSET LISTSUB = '1'B ;
  374      %LSET STR = CONCAT(TEXTCHAR(STCLASS),'        ') ;
  375
  376      %IF   (SUBSTR(STR,0,8)='CONSTANT')  OR
  377            (SUBSTR(STR,0,6)='STATIC')    OR
  378            (SUBSTR(STR,0,3)='EXT') ;
  379
  380            %LSET INIT=CHARTEXT('INIT') ;
  381      %ELSE ;
  382            %LSET INIT = CHARTEXT('/*') ;
  383      %ENDIF ;
  384
  385      DCL 1 FPTN ALIGNED STCLASS ,
  386            2 MSG# UBIN WORD %INIT(MSG) %CHARTEXT('/**/') ,
  387            2 SYSID# UBIN WORD %INIT(SYSID) %CHARTEXT('/**/') ,
  388            2 ACCT# CHAR(8) %INIT(ACCT) %CHARTEXT('/**/') ,
  389            2 JOBNAME# CHAR(31) %INIT(JOBNAME) %CHARTEXT('/**/') ,
  390            2 * CHAR(1) UNAL %INIT(' ') %CHARTEXT('/**/') ,
  391            2 NUM# UBIN WORD %INIT(NUM) %CHARTEXT('/**/') ,
  392            2 BUF$ PTR %INIT(ADDR(BUF)) %CHARTEXT('/**/') ,
  393            2 STAT$ PTR %INIT(ADDR(STAT)) %CHARTEXT('/**/') ,
  394            2 COMMENT# CHAR(24) %INIT(COMMENT) %CHARTEXT('/**/') ;
  395      %MEND ;
  396      /**/
  397      %MACRO CP_BLANK_PASS_INFO (NAME=CP_BLANK_PASS_INFO,STCLASS=BASED);
  398        DCL   1  NAME STCLASS,
  399                 2  OFFSET UBIN BYTE UNAL,    /* Offset from P$S.CPOS */
  400                 2  LENGTH UBIN BYTE UNAL;    /* Length of PASSWORD field */
  401      %MEND;
  402      %MACRO CPH$MAP (NAME=X$MAP,STCLASS=BASED);
  403      /*
  404           ***** This macro describes the structure used by
  405                 CPH$GET_SYM, CPH$PUT_SYM and CPH$DELETE_SYM ...
  406      */
  407      DCL 1 NAME STCLASS ALIGNED,
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        12   
  408            2 LINK$ PTR,
  409            2 VALUE SBIN WORD UNAL,
  410            2 TYPE UBIN BYTE UNAL,
  411            2 TEXT CHAR(1);
  412      %MEND;
  413      /*
  414      *   CXP_AMR
  415      *   The Command Processor Shared Library parameter table for
  416      *         Assign-Merge records used in the ADJUST, RESET, and
  417      *         SET commands.
  418      */
  419
  420      %MACRO CXP_AMR (  FPTN = CXP_AMR,
  421                        STCLASS = AUTO,
  422                        LVL = 1,
  423                        LAST = ";",
  424                        AMR = NIL,
  425                        AMRSZ = 0,
  426                        TXT = NIL,
  427                        TXTLN = 0,
  428                        OFID = NIL) ;
  429      %LSET LISTDIR = '0'B ;
  430      %LSET LISTEXP = '1'B ;
  431      %LSET LISTCOM = '0'B ;
  432      %LSET LISTSUB = '1'B ;
  433      %LSET STR = CONCAT(TEXTCHAR(STCLASS),'        ') ;
  434      %IF (SUBSTR(STR,0,6) = 'STATIC') OR (SUBSTR(STR,0,8) = 'CONSTANT')
  435            OR (SUBSTR(STR,0,3) = 'EXT') ;
  436      %LSET INIT = CHARTEXT('INIT') ;
  437      %ELSE ;
  438      %LSET INIT = CHARTEXT('/*') ;
  439      %ENDIF ;
  440      %IF LVL = 1 ;
  441      DCL 1 FPTN STCLASS ALIGNED,
  442      %ELSE ;
  443      %LVL FPTN ALIGNED,
  444      %ENDIF ;
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        13   
  445      %(LVL+1) AMR$ PTR ALIGNED %INIT(ADDR(AMR)) %CHARTEXT('/**/'),
  446                /*
  447                    AMR$ - is points to the area where the Assign-Merge
  448                            record will end up.
  449                */
  450      %(LVL+1) AMRSZ# UBIN WORD ALIGNED %INIT(AMRSZ) %CHARTEXT('/**/'),
  451                /*
  452                    AMRSZ# - is the size of the area for the Assign-Merge
  453                              record in words.
  454                */
  455      %(LVL+1) TXT$ PTR ALIGNED %INIT(ADDR(TXT)) %CHARTEXT('/**/'),
  456                /*
  457                    TXT$ - points to the text input by the user.
  458                */
  459      %(LVL+1) TXTLN# UBIN WORD ALIGNED %INIT(TXTLN) %CHARTEXT('/**/'),
  460            /*
  461                TXTLN# - is the length of the text input.
  462            */
  463      %(LVL+1) OFID$ PTR ALIGNED %INIT(ADDR(OFID)) %CHARTEXT('/**/'),
  464            /*
  465                OFID$ - points to the fid where all the M$FID information
  466                        was stuffed. If equal to ADDR(NIL), the Shared
  467                        Library will use a local fid, and not return the
  468                        results to the calling routine.
  469            */
  470      %(LVL+1) AMR_ARS# UBIN WORD %INIT(0) %CHARTEXT('/**/'),
  471            /*
  472                AMR_ARS# - is the actual record size of the Assign-Merge
  473                            record size.
  474            */
  475      %(LVL+1) ERR,
  476      %(LVL+2) FCG BIT(12) %INIT('0'B) %CHARTEXT('/**/'),
  477      %(LVL+2) MID BIT(6) %INIT('0'B) %CHARTEXT('/**/'),
  478      %(LVL+2) MON BIT(1) UNAL %INIT('0'B) %CHARTEXT('/**/'),
  479      %(LVL+2) CODE UBIN(14) UNAL %INIT(0) %CHARTEXT('/**/'),
  480      %(LVL+2) SEV UBIN(3) UNAL %INIT(0) %CHARTEXT('/**/') LAST
  481            /*
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        14   
  482                ERR - is the error code to be returned to the caller.
  483            */
  484      %MEND ;
  485
  486      %MACRO CXR_PARAMS(NAME=CXR,STCLASS="BASED(CXR$)");
  487      /*
  488      */
  489
  490      DCL 1 NAME DALIGNED STCLASS,
  491               2 BUFVEC,                                    /* Buffer of Records */
  492                  3 BOUND UBIN(20) UNAL,
  493                  3 * BIT(16),
  494                  3 PTR$ PTR,
  495               2 READVEC,
  496                  3 BOUND UBIN(20) UNAL,
  497                  3 * BIT(16),
  498                  3 PTR$ PTR,
  499               2 GDSVEC,
  500                  3 BOUND UBIN(20) UNAL,
  501                  3 * BIT(16),
  502                  3 PTR$ PTR,
  503               2 LAST,
  504                  3 BOUND UBIN(20) UNAL,
  505                  3 * BIT(16),
  506                  3 PTR$ PTR,
  507               2 REM_PARSE BIT(72),
  508               2 REM_REPARSE BIT(72),
  509               2 ABORT EPTR,
  510               2 CONTINUE EPTR,
  511               2 BRKMSG EPTR,
  512               2 ROUTINE EPTR,                              /* Success Fail */
  513               2 SPHANDLER EPTR,                            /* Special Handler */
  514               2 POFF SBIN,
  515               2 PROMPT CHAR(32),
  516               2 RPROMPT CHAR(32),                          /* Replace PROMPT with */
  517               2 ERRSAVE ALIGNED,
  518                  3 FCG BIT(18),
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        15   
  519                  3 MON BIT(1),
  520                  3 CODE UBIN(14) UNAL,
  521                  3 SEV UBIN(3) UNAL,
  522               2 ERRDCB UBIN WORD,
  523               2 F1_ VECTOR,
  524               2 F2_ VECTOR,
  525               2 F3_ VECTOR,
  526               2 HELP,
  527                  3 LAST BIT(1),
  528                  3 TOPICS BIT(1),
  529               2 GOTCMD BIT (1),
  530               2 BREAK BIT(1),
  531               2 SYNTAX BIT(1),
  532               2 SYNERR BIT(1),
  533               2 PREPROCESS BIT(1),
  534               2 REQ_PROMPT BIT(1),                         /* Require Prompt */
  535               2 PROMPT_PRES BIT(1),                        /* Prompt Present */
  536               2 ECHO UBIN BYTE CALIGNED,
  537               2 P_PCB$ PTR ,
  538               2 PPCB$ PTR,
  539               2 PP_DCB UBIN,
  540               2 PP_ERR,
  541                  3 FCG BIT (12),
  542                  3 MID BIT (6),
  543                  3 MON BIT (1),
  544                  3 CODE UBIN (14) UNAL,
  545                  3 SEV UBIN (3) UNAL,
  546               2 BRKARS SBIN,
  547               2 BIP SBIN,
  548               2 DISLVL SBIN,
  549               2 CPOS SBIN,
  550               2 NLINES SBIN,
  551               2 LPOS (0:49) UBIN ,
  552               2 CXR_INDCB SBIN,
  553               2 CXR_OUTDCB SBIN,
  554               2 NDCBS SBIN,
  555               2 DCBS (0:9) ALIGNED,
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        16   
  556                  3 NUM UBIN HALF HALIGNED,
  557                  3 ERRPTR_CPOS SBIN HALF HALIGNED,
  558                  3 CPOS SBIN HALF HALIGNED,
  559                  3 * BIT (18),
  560               2 FILENAME,
  561                  3 C UBIN BYTE CALIGNED,
  562                  3 TX CHAR(31),
  563               2 FILEACCT CHAR(8),
  564               2 FILEPASS CHAR(8),
  565               2 BUF CHAR(300),
  566               2 BUFA(0:299) REDEF BUF CHAR(1);
  567      /*
  568      */
  569      %MEND;
  570      %MACRO CXR_INIT (NAME=CXR_INIT,
  571               ABORT = NIL,
  572               CONTINUE = NIL,
  573               SPHANDLER = NIL,
  574               BRKMSG = NIL,
  575               PREPROCESS(YES='1'B,NO='0'B)='0'B,
  576               ECHO(HONOR_FLAG=0,ALWAYS_ECHO=1,NEVER_ECHO=2)=0,
  577               SYNTAX (YES='1'B,NO='0'B)='1'B,
  578               REQ_PROMPT (YES='1'B,NO='0'B)='0'B,
  579               PCB = NIL,
  580               PPCB = NIL,
  581               PP_DCB = NIL,
  582               RPROMPT = NIL,
  583               STCLASS = STATIC);
  584
  585       %LSET LISTDIR='0'B;
  586       %LSET LISTEXP='1'B;
  587       %LSET LISTCOM='0'B;
  588       %LSET LISTSUB='1'B;
  589       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  590       %IF (SUBSTR(STR,0,6)='STATIC') OR
  591       (SUBSTR(STR,0,8)='CONSTANT') OR
  592       (SUBSTR(STR,0,3)='EXT');
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        17   
  593       %LSET INIT=CHARTEXT('INIT');
  594       %ELSE;
  595       %LSET INIT=CHARTEXT('/*');
  596       %ENDIF;
  597
  598      DCL 1 NAME DALIGNED STCLASS,
  599               2 SYNTAX# BIT(1) %INIT(SYNTAX)%CHARTEXT('/**/'),
  600               2 PREPROCESS# BIT(1) %INIT(PREPROCESS)%CHARTEXT('/**/'),
  601               2 REQ_PROMPT# BIT(1) %INIT(REQ_PROMPT)%CHARTEXT('/**/'),
  602               2 RFUBIT# BIT(33) %INIT('0'B)%CHARTEXT('/**/'),
  603               2 ABORT$ EPTR %INIT(ENTADDR(ABORT))%CHARTEXT('/**/'),
  604               2 CONTINUE$ EPTR %INIT(ENTADDR(CONTINUE))%CHARTEXT('/**/'),
  605               2 SPHANDLER$ EPTR %INIT(ENTADDR(SPHANDLER))%CHARTEXT('/**/'),
  606               2 BRKMSG$ EPTR %INIT(ENTADDR(BRKMSG))%CHARTEXT('/**/'),
  607               2 PCB$ PTR %INIT(ADDR(PCB))%CHARTEXT('/**/'),
  608               2 RFU4$ EPTR %INIT(ENTADDR(NIL))%CHARTEXT('/**/'),
  609               2 PPCB$ PTR %INIT(ADDR(PPCB))%CHARTEXT('/**/'),
  610               2 RPROMPT$ PTR %INIT(ADDR(RPROMPT))%CHARTEXT('/**/'),
  611               2 RFU7$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  612               2 RFU8$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  613               2 PP_DCB# UBIN HALF HALIGNED %INIT(DCBNUM(PP_DCB))%CHARTEXT('/**/'),
  614               2 ECHO# UBIN HALF HALIGNED %INIT(ECHO)%CHARTEXT('/**/'),
  615               2 RFU10# UBIN %INIT(0)%CHARTEXT('/**/'),
  616               2 RFU11# UBIN %INIT(0)%CHARTEXT('/**/'),
  617               2 RFU12# UBIN %INIT(0)%CHARTEXT('/**/');
  618      %MEND;
  619      %MACRO CXR$ (NAME=CXR$,
  620               DOMAIN(CPSL=0,USER=1,REF=2)=0,
  621               SID=%DS7SID,
  622               OFFSET=0,
  623               STCLASS=CONSTANT) ;
  624
  625       %LSET LISTDIR='0'B;
  626       %LSET LISTEXP='1'B;
  627       %LSET LISTCOM='0'B;
  628       %LSET LISTSUB='1'B;
  629       %LSET ZERO=0 ;
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        18   
  630       %LSET ONE=1 ;
  631       %IF DOMAIN=%ZERO ;
  632          %LSET DEFREF=CHARTEXT(CONCAT('CONSTANT', ' SYMDEF')) ;
  633          %LSET STR='CONSTANT  ' ;
  634       %ELSEIF DOMAIN=%ONE ;
  635          %LSET DEFREF=CHARTEXT(CONCAT(TEXTCHAR(STCLASS), ' SYMDEF')) ;
  636          %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  637       %ELSE;
  638           %LSET DEFREF=CHARTEXT('SYMREF') ;
  639           %LSET STR='          ' ;
  640       %ENDIF;
  641       %IF (SUBSTR(STR,0,6)='STATIC') OR
  642       (SUBSTR(STR,0,8)='CONSTANT') OR
  643       (SUBSTR(STR,0,3)='EXT');
  644          %LSET INIT=CHARTEXT('INIT');
  645       %ELSE;
  646          %LSET INIT=CHARTEXT('/*');
  647       %ENDIF;
  648       %LSET REDEF_NAME=CHARTEXT(CONCAT(TEXTCHAR(NAME),'_I')) ;
  649       %LSET SNAME='NAME' ;
  650
  651      DCL 1 %REDEF_NAME %DEFREF,
  652            2 OFFSET# UBIN(24) UNAL %INIT(OFFSET) %CHARTEXT('/**/'),
  653            2 SID# BIT(12) UNAL %INIT(SID) %CHARTEXT('/**/') ;
  654      DCL 1 NAME REDEF %REDEF_NAME PTR ;
  655      %MEND ;
  656      %MACRO CXR_SPHANDLER (  NAME=SPHANDLER,
  657                              SIZE = 0,
  658                              TEXT = ' ',
  659                              STCLASS = CONSTANT) ;
  660
  661       %LSET LISTDIR='0'B;
  662       %LSET LISTEXP='1'B;
  663       %LSET LISTCOM='0'B;
  664       %LSET LISTSUB='1'B;
  665       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  666       %IF (SUBSTR(STR,0,6)='STATIC') OR
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        19   
  667       (SUBSTR(STR,0,8)='CONSTANT') OR
  668       (SUBSTR(STR,0,3)='EXT');
  669       %LSET INIT=CHARTEXT('INIT');
  670       %ELSE;
  671       %LSET INIT=CHARTEXT('/*');
  672       %ENDIF;
  673
  674      DCL 1 NAME DALIGNED STCLASS,
  675            2 BUF,
  676              3 SZ UBIN BYTE CALIGNED %INIT (SIZE)%CHARTEXT('/**/'),
  677              3 TXT CHAR(300) CALIGNED %INIT (TEXT)%CHARTEXT('/**/') ;
  678      %MEND ;
  679      %MACRO WHEN_CNTL_REC (NAME=WHEN_CNTL_REC,
  680               LIMIT = 98,    /* LIMIT should be the upper limit of array */
  681               STCLASS = AUTO);
  682
  683       %LSET LISTDIR='0'B;
  684       %LSET LISTEXP='1'B;
  685       %LSET LISTCOM='0'B;
  686       %LSET LISTSUB='1'B;
  687       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  688       %IF (SUBSTR(STR,0,6)='STATIC') OR
  689       (SUBSTR(STR,0,8)='CONSTANT') OR
  690       (SUBSTR(STR,0,3)='EXT');
  691       %LSET INIT=CHARTEXT('INIT');
  692       %ELSE;
  693       %LSET INIT=CHARTEXT('/*');
  694       %ENDIF;
  695
  696      DCL 1 NAME DALIGNED STCLASS,
  697            2 CUR_LEV UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
  698            2 STATE_LEV UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
  699            2 * UBIN HALF CALIGNED %INIT(0)%CHARTEXT('/**/'),
  700            2 WHEN(0:LIMIT),
  701              3 OPT UBIN(2) UNAL %INIT(0*0)%CHARTEXT('/**/'),
  702              3 REC BIT(1) UNAL %INIT('0'B*0)%CHARTEXT('/**/');
  703      %MEND ;
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        20   
  704      %MACRO K_WHEN (NAME=K_WHEN,
  705               STCLASS = AUTO);
  706
  707       %LSET LISTDIR='0'B;
  708       %LSET LISTEXP='1'B;
  709       %LSET LISTCOM='0'B;
  710       %LSET LISTSUB='1'B;
  711       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  712       %IF (SUBSTR(STR,0,6)='STATIC') OR
  713       (SUBSTR(STR,0,8)='CONSTANT') OR
  714       (SUBSTR(STR,0,3)='EXT');
  715       %LSET INIT=CHARTEXT('INIT');
  716       %ELSE;
  717       %LSET INIT=CHARTEXT('/*');
  718       %ENDIF;
  719
  720      DCL 1 NAME DALIGNED STCLASS,
  721            2 L UBIN BYTE CALIGNED %INIT(5)%CHARTEXT('/**/'),
  722            2 N CHAR(4) CALIGNED %INIT('WHEN')%CHARTEXT('/**/'),
  723            2 NUM UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/');
  724      %MEND ;
  725      %MACRO CP_PROMPT (NAME=CP_PROMPT,
  726               LEN = 128,
  727               VFC = '@',
  728               TEXT = '!',
  729               TYPE = 0,
  730               STCLASS = AUTO);
  731
  732       %LSET LISTDIR='0'B;
  733       %LSET LISTEXP='1'B;
  734       %LSET LISTCOM='0'B;
  735       %LSET LISTSUB='1'B;
  736       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  737       %IF (SUBSTR(STR,0,6)='STATIC') OR
  738       (SUBSTR(STR,0,8)='CONSTANT') OR
  739       (SUBSTR(STR,0,3)='EXT');
  740       %LSET INIT=CHARTEXT('INIT');
14:15 JUL 28 '97 CP_MACROS_C.:E05SI                                        21   
  741       %ELSE;
  742       %LSET INIT=CHARTEXT('/*');
  743       %ENDIF;
  744
  745      DCL 1 NAME DALIGNED STCLASS,
  746            2 LEN_ UBIN BYTE CALIGNED %INIT(LEN)%CHARTEXT('/**/'),
  747            2 PPROCESS_ BIT(1) CALIGNED %INIT('0'B)%CHARTEXT('/**/'),
  748            2 TYPE_ UBIN HALF CALIGNED %INIT(TYPE)%CHARTEXT('/**/'),
  749            2 VFC_ CHAR(1) CALIGNED %INIT(VFC)%CHARTEXT('/**/'),
  750            2 TEXT_ CHAR(LEN) CALIGNED %INIT(TEXT)%CHARTEXT('/**/');
  751      %MEND ;

