VERSION A02

PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:1    
        1        1        /*M* FUM$MOUNT - NFS mount server code */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* plm=3 */
        8        8        /*P* NAME: FUM$MOUNT
        9        9             Purpose:
       10       10                   Does all the work for the MOUNT type requests.
       11       11        */
       12       12        /*F*  NAME: FUM$MOUNT
       13       13              Purpose:
       14       14                   To process each of the MOUNT type requests.
       15       15        */
       16       16        /*D*  NAME: FUM$MOUNT
       17       17              Inputs:
       18       18                   RQSCTX - contains the MOUNT request, and pertinent information.
       19       19              Outputs:
       20       20                   The return information NFS requires/requested.
       21       21        */
       22       22
       23       23        FUM$MOUNTRQS: PROC( RQSCTX);
       24       24
       25       25        %INCLUDE CP_6;
       26      106        %INCLUDE CP_6_SUBS;
       27      646        %INCLUDE FU_NFSSUBS_C;
       28      741        %INCLUDE FU_NFS_M;
       29     1256        %INCLUDE XSL_PERR_C;
       30     1311        %INCLUDE XSL_SOCKET_E;
       31     1569        %INCLUDE XSL_SOCKET_M;
       32     2317
       33     2318        %FU$RQSCTX( NAME=RQSCTX, STCLASS=PARAM);
       34     2407
       35     2408        %FPT_FID( RESULTS = VLR_FID, RES=RES, ASN=ASN, NAME=TRASH, ACCT=TRASH, PASS=TRASH,
       36     2409                  WSN=TRASH, SN=TRASH, SACCT=NO, SNAME=NO, SPASS=NO, SRES=NO, SSN=NO, SWSN=
              2409                      NO);
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:2    
       37     2432    1   DCL ASN UBIN(9) STATIC;
       38     2433    1   DCL RES CHAR(4) STATIC;
       39     2434    1   DCL TRASH CHAR(32) STATIC;
       40     2435        %VLR_FID;
       41     2454
       42     2455    1   DCL FU_MOUNTSOCKET SBIN SYMREF;
       43     2456
       44     2457    1   DCL FUN$GETSTAMP ENTRY(1);
       45     2458    1   DCL FUM$WR_MNTREC ENTRY(1) ALTRET;
       46     2459    1   DCL FUM$DE_MNTREC ENTRY(1) ALTRET;
       47     2460    1   DCL FUM$DELALL_MNTREC ENTRY(1) ALTRET;
       48     2461    1   DCL FUM$RDALL_MNTREC ENTRY(1) ALTRET;
       49     2462    1   DCL FUS$CHKMOUNT ENTRY(1) ALTRET;
       50     2463    1   DCL XSL$QSENDTO ENTRY(7) ALTRET;
       51     2464
       52     2465    1   DCL 1 REPLY BASED(REPLY$) ALIGNED,
       53     2466    1         2 STAT UBIN,
       54     2467         %FU$FHANDLE( NAME=FHANDLE, LVL=2, STCLASS=BASED);
       55     2488
       56     2489    1   DCL 1 TEXTW BASED(RQSCTX.BODY$) ALIGNED, 2 L UBIN,2 T CHAR(TEXTW.L);
       57     2490
       58     2491    1   DCL REPLY$ PTR;
       59     2492    1   DCL I UBIN;
       60     2493    1   DCL FID CHAR(64);
       61     2494
       62     2495        %EJECT;
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:3    
       63     2496    2      DO CASE( RQSCTX.PROC#);
       64     2497
       65     2498    2       CASE( %MOUNTPROC_MNT /* MOUNT */ );
       66     2499    2         IF RQSCTX.LEN < TEXTW.L+4 THEN GOTO BAD;
       67     2500    2         FID = TEXTW.T;
       68     2501    2         FPT_FID.TEXTFID_ = VECTOR( TEXTW.T);
       69     2502    2         REPLY$ = ADDR( RQSCTX.REPLYHDR.RESULTS);
       70     2503    2         CALL M$FID( FPT_FID) ALTRET( BAD); /* only mount a directory|packset    */
       71     2504    2         IF VLR_FID.NAME OR VLR_FID.PASS OR VLR_FID.WSN THEN GOTO BAD; /* NOTDIR */
       72     2505    2         IF VLR_FID.RES THEN
       73     2506    2            IF RES ~= 'DP' OR NOT VLR_FID.SN THEN GOTO BAD; /* RES ~= DP#xxxx    */
       74     2507    2         IF ASN ~= %FILE# AND ASN ~= %DEVICE# THEN GOTO BAD; /* BADARGS          */
       75     2508
       76     2509    2         RQSCTX.LEN = 32+SIZEC(REPLY);
       77     2510    2         REPLY.STAT = %NFS_OK;
       78     2511    2         REPLY.FHANDLE = '0'B;
       79     2512    2         REPLY.FHANDLE.PSNLNG = VLR_FID.CLENGTH.SN;
       80     2513    2         REPLY.FHANDLE.ACCTLNG = VLR_FID.CLENGTH.ACCT;
       81     2514    2         I = VLR_FID.CLENGTH.SN+VLR_FID.CLENGTH.ACCT;
       82     2515    2         CALL INSERT(REPLY.FHANDLE.TEXT,0,I,
       83     2516    2           SUBSTR( FID,  VLR_FID.SINDEX.SN, VLR_FID.CLENGTH.SN),
       84     2517    2           SUBSTR( FID,  VLR_FID.SINDEX.ACCT, VLR_FID.CLENGTH.ACCT));
       85     2518    3         IF I = 0 THEN DO;
       86     2519    3            IF VLR_FID.ACCT
       87     2520    3            THEN REPLY.FHANDLE.STAMP = %DEVICE#+512; /* "." -> mad               */
       88     2521    3            ELSE REPLY.FHANDLE.STAMP = %DEVICE#; /* "/" -> WHOLE SYSTEM          */
       89     2522    3            END;
       90     2523    2         ELSE CALL FUN$GETSTAMP( RQSCTX);  /* DP#xxx | .account | DP#xxx.account */
       91     2524    2         CALL FUS$CHKMOUNT( RQSCTX) ALTRET( OK2);
       92     2525    2         TEXTW.L = VBOUND( BITVECT( FPT_FID.TEXTFID_))+1;
              2525                  /* FHANDLE might've clobbered it */
       93     2526    2         CALL FUM$WR_MNTREC (RQSCTX);
       94     2527    2         TEXTW.L = 0;  /* Last word of FHANDLE is zero, and that's all it c'be   */
       95     2528
       96     2529    2       CASE( %MOUNTPROC_DUMP /* DUMP */);
       97     2530
       98     2531    2         CALL FUM$RDALL_MNTREC (RQSCTX) ALTRET (NONE);
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:4    
       99     2532
      100     2533    2       CASE( %MOUNTPROC_UMNT /* UMOUNT */);
      101     2534
      102     2535    2         CALL FUM$DE_MNTREC (RQSCTX);
      103     2536    2         RQSCTX.REPLYHDR.ACCEPT_STAT = %SUCCESS;
      104     2537    2         RQSCTX.LEN = 32;
      105     2538
      106     2539    2       CASE( %MOUNTPROC_UMNTALL /* UMOUNTALL */);
      107     2540
      108     2541    2         CALL FUM$DELALL_MNTREC;
      109     2542    2         RQSCTX.REPLYHDR.ACCEPT_STAT = %SUCCESS;
      110     2543    2         RQSCTX.LEN = 32;
      111     2544
      112     2545    2       CASE( ELSE);                        /* %MOUNTPROC_EXPORT                  */
      113     2546    2   NONE: RQSCTX.REPLYHDR.RESULT0 = 0; /* No entries in exportlist - we dont have one */
      114     2547    2   OK:   RQSCTX.LEN = 32+4;
      115     2548
      116     2549    2       END;
      117     2550    1   OK2: ;
      118     2551    1      CALL XSL$QSENDTO( RQSCTX.LEN, FU_MOUNTSOCKET, RQSCTX.REPLYHDR, RQSCTX.LEN,
      119     2552    1        0, RQSCTX.FROMADDR, 8);
      120     2553    1      RETURN;
      121     2554
      122     2555    1   BAD: ;
      123     2556    1      RQSCTX.REPLYHDR.RESULT0 = %NFSERR_PERM; /* s.b. badargs                    */
      124     2557    1      GOTO OK;
      125     2558
      126     2559    1   END FUM$MOUNTRQS;
      127     2560        %EOD;

PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:5    
--  Include file information  --

   XSL_SOCKET_M.:LIBRARY  is referenced.
   XSL_SOCKET_E.:LIBRARY  is referenced.
   XSL_PERR_C.:LIBRARY  is referenced.
   FU_NFS_M.:FUA2TOU  is referenced.
   FU_NFSSUBS_C.:FUA2TOU  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUM$MOUNTRQS.

   Procedure FUM$MOUNTRQS requires 198 words for executable code.
   Procedure FUM$MOUNTRQS requires 30 words of local(AUTO) storage.

PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:6    

 Object Unit name= FUM$MOUNTRQS                               File name= FUM$MOUNT.:FUA2TOU
 UTS= NOV 21 '97 11:33:46.76 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    44     54  FUM$MOUNTRQS
    2  RoData even  UTS      1      1  FUM$MOUNTRQS
    3   Proc  even  none   198    306  FUM$MOUNTRQS
    4  RoData even  none     3      3  FUM$MOUNTRQS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        1  FUM$MOUNTRQS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 FUN$GETSTAMP
 yes     yes           Std       1 FUM$WR_MNTREC
 yes     yes           Std       1 FUM$DELALL_MNTREC
 yes     yes           Std       7 XSL$QSENDTO
 yes     yes           Std       1 FUS$CHKMOUNT
 yes     yes           Std       1 FUM$DE_MNTREC
 yes     yes           Std       1 FUM$RDALL_MNTREC
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  FU_MOUNTSOCKET                        B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:8    


        1        1        /*M* FUM$MOUNT - NFS mount server code */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* plm=3 */
        8        8        /*P* NAME: FUM$MOUNT
        9        9             Purpose:
       10       10                   Does all the work for the MOUNT type requests.
       11       11        */
       12       12        /*F*  NAME: FUM$MOUNT
       13       13              Purpose:
       14       14                   To process each of the MOUNT type requests.
       15       15        */
       16       16        /*D*  NAME: FUM$MOUNT
       17       17              Inputs:
       18       18                   RQSCTX - contains the MOUNT request, and pertinent information.
       19       19              Outputs:
       20       20                   The return information NFS requires/requested.
       21       21        */
       22       22
       23       23        FUM$MOUNTRQS: PROC( RQSCTX);

     23  3 000000   000000 700200 xent  FUM$MOUNTRQS TSX0  ! X66_AUTO_1
         3 000001   000036 000001                    ZERO    30,1

       24       24
       25       25        %INCLUDE CP_6;
       26      106        %INCLUDE CP_6_SUBS;
       27      646        %INCLUDE FU_NFSSUBS_C;
       28      741        %INCLUDE FU_NFS_M;
       29     1256        %INCLUDE XSL_PERR_C;
       30     1311        %INCLUDE XSL_SOCKET_E;
       31     1569        %INCLUDE XSL_SOCKET_M;
       32     2317
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:9    
       33     2318        %FU$RQSCTX( NAME=RQSCTX, STCLASS=PARAM);
       34     2407
       35     2408        %FPT_FID( RESULTS = VLR_FID, RES=RES, ASN=ASN, NAME=TRASH, ACCT=TRASH, PASS=TRASH,
       36     2409                  WSN=TRASH, SN=TRASH, SACCT=NO, SNAME=NO, SPASS=NO, SRES=NO, SSN=NO, SWSN=
              2409                      NO);
       37     2432    1   DCL ASN UBIN(9) STATIC;
       38     2433    1   DCL RES CHAR(4) STATIC;
       39     2434    1   DCL TRASH CHAR(32) STATIC;
       40     2435        %VLR_FID;
       41     2454
       42     2455    1   DCL FU_MOUNTSOCKET SBIN SYMREF;
       43     2456
       44     2457    1   DCL FUN$GETSTAMP ENTRY(1);
       45     2458    1   DCL FUM$WR_MNTREC ENTRY(1) ALTRET;
       46     2459    1   DCL FUM$DE_MNTREC ENTRY(1) ALTRET;
       47     2460    1   DCL FUM$DELALL_MNTREC ENTRY(1) ALTRET;
       48     2461    1   DCL FUM$RDALL_MNTREC ENTRY(1) ALTRET;
       49     2462    1   DCL FUS$CHKMOUNT ENTRY(1) ALTRET;
       50     2463    1   DCL XSL$QSENDTO ENTRY(7) ALTRET;
       51     2464
       52     2465    1   DCL 1 REPLY BASED(REPLY$) ALIGNED,
       53     2466    1         2 STAT UBIN,
       54     2467         %FU$FHANDLE( NAME=FHANDLE, LVL=2, STCLASS=BASED);
       55     2488
       56     2489    1   DCL 1 TEXTW BASED(RQSCTX.BODY$) ALIGNED, 2 L UBIN,2 T CHAR(TEXTW.L);
       57     2490
       58     2491    1   DCL REPLY$ PTR;
       59     2492    1   DCL I UBIN;
       60     2493    1   DCL FID CHAR(64);
       61     2494
       62     2495        %EJECT;
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:10   
       63     2496    2      DO CASE( RQSCTX.PROC#);

   2496  3 000002   200003 470500                    LDP0    @RQSCTX,,AUTO
         3 000003   000005 235100                    LDA     5,,PR0
         3 000004   000005 115007                    CMPA    5,DL
         3 000005   000007 602005 3                  TNC     s:2496+5,AL
         3 000006   000247 710000 3                  TRA     NONE
         3 000007   000247 710000 3                  TRA     NONE
         3 000010   000014 710000 3                  TRA     s:2499
         3 000011   000221 710000 3                  TRA     s:2531
         3 000012   000226 710000 3                  TRA     s:2535
         3 000013   000237 710000 3                  TRA     s:2541

       64     2497
       65     2498    2       CASE( %MOUNTPROC_MNT /* MOUNT */ );

       66     2499    2         IF RQSCTX.LEN < TEXTW.L+4 THEN GOTO BAD;

   2499  3 000014   000003 471500                    LDP1    3,,PR0
         3 000015   100000 236100                    LDQ     0,,PR1
         3 000016   000004 036007                    ADLQ    4,DL
         3 000017   000002 116100                    CMPQ    2,,PR0
         3 000020   000022 600000 3                  TZE     s:2500
         3 000021   000302 603000 3                  TRC     BAD

       67     2500    2         FID = TEXTW.T;

   2500  3 000022   100000 720100                    LXL0    0,,PR1
         3 000023   040100 100540                    MLR     fill='040'O
         3 000024   100001 000010                    ADSC9   1,,PR1                   cn=0,n=*X0
         3 000025   200006 000100                    ADSC9   FID,,AUTO                cn=0,n=64

       68     2501    2         FPT_FID.TEXTFID_ = VECTOR( TEXTW.T);

   2501  3 000026   000000 635010                    EAA     0,X0
         3 000027   000002 771000                    ARL     2
         3 000030   000140 135007                    SBLA    96,DL
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:11   
         3 000031   200026 451500                    STP1    FID+16,,AUTO
         3 000032   200026 236100                    LDQ     FID+16,,AUTO
         3 000033   000001 036003                    ADLQ    1,DU
         3 000034   000002 757000 1                  STAQ    FPT_FID+2

       69     2502    2         REPLY$ = ADDR( RQSCTX.REPLYHDR.RESULTS);

   2502  3 000035   200003 236100                    LDQ     @RQSCTX,,AUTO
         3 000036   000023 036003                    ADLQ    19,DU
         3 000037   200004 756100                    STQ     REPLY$,,AUTO

       70     2503    2         CALL M$FID( FPT_FID) ALTRET( BAD); /* only mount a directory|packset    */

   2503  3 000040   000000 630400 1                  EPPR0   FPT_FID
         3 000041   420001 713400                    CLIMB   alt,+8193
         3 000042   404400 401760                    pmme    nvectors=10
         3 000043   000302 702000 3                  TSX2    BAD

       71     2504    2         IF VLR_FID.NAME OR VLR_FID.PASS OR VLR_FID.WSN THEN GOTO BAD; /* NOTDIR */

   2504  3 000044   000042 234000 1                  SZN     VLR_FID
         3 000045   000302 604000 3                  TMI     BAD
         3 000046   000042 236000 1                  LDQ     VLR_FID
         3 000047   100000 316003                    CANQ    32768,DU
         3 000050   000302 601000 3                  TNZ     BAD
         3 000051   020000 316003                    CANQ    8192,DU
         3 000052   000302 601000 3                  TNZ     BAD

       72     2505    2         IF VLR_FID.RES THEN

   2505  3 000053   004000 316003                    CANQ    2048,DU
         3 000054   000063 600000 3                  TZE     s:2507

       73     2506    2            IF RES ~= 'DP' OR NOT VLR_FID.SN THEN GOTO BAD; /* RES ~= DP#xxxx    */

   2506  3 000055   040000 106400                    CMPC    fill='040'O
         3 000056   000031 000004 1                  ADSC9   RES                      cn=0,n=4
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:12   
         3 000057   000000 000002 2                  ADSC9   0                        cn=0,n=2
         3 000060   000302 601000 3                  TNZ     BAD
         3 000061   040000 316003                    CANQ    16384,DU
         3 000062   000302 600000 3                  TZE     BAD

       74     2507    2         IF ASN ~= %FILE# AND ASN ~= %DEVICE# THEN GOTO BAD; /* BADARGS          */

   2507  3 000063   000030 236000 1                  LDQ     ASN
         3 000064   777000 376003                    ANQ     -512,DU
         3 000065   001000 116003                    CMPQ    512,DU
         3 000066   000071 600000 3                  TZE     s:2509
         3 000067   003000 116003                    CMPQ    1536,DU
         3 000070   000302 601000 3                  TNZ     BAD

       75     2508
       76     2509    2         RQSCTX.LEN = 32+SIZEC(REPLY);

   2509  3 000071   000104 235007                    LDA     68,DL
         3 000072   200003 470500                    LDP0    @RQSCTX,,AUTO
         3 000073   000002 755100                    STA     2,,PR0

       77     2510    2         REPLY.STAT = %NFS_OK;

   2510  3 000074   200004 471500                    LDP1    REPLY$,,AUTO
         3 000075   100000 450100                    STZ     0,,PR1

       78     2511    2         REPLY.FHANDLE = '0'B;

   2511  3 000076   000100 100400                    MLR     fill='000'O
         3 000077   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000100   100001 000040                    ADSC9   1,,PR1                   cn=0,n=32

       79     2512    2         REPLY.FHANDLE.PSNLNG = VLR_FID.CLENGTH.SN;

   2512  3 000101   000047 236000 1                  LDQ     VLR_FID+5
         3 000102   000015 736000                    QLS     13
         3 000103   100001 676100                    ERQ     1,,PR1
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:13   
         3 000104   160000 376007                    ANQ     57344,DL
         3 000105   100001 656100                    ERSQ    1,,PR1

       80     2513    2         REPLY.FHANDLE.ACCTLNG = VLR_FID.CLENGTH.ACCT;

   2513  3 000106   000047 236000 1                  LDQ     VLR_FID+5
         3 000107   000011 772000                    QRL     9
         3 000110   100001 676100                    ERQ     1,,PR1
         3 000111   017000 376007                    ANQ     7680,DL
         3 000112   100001 656100                    ERSQ    1,,PR1

       81     2514    2         I = VLR_FID.CLENGTH.SN+VLR_FID.CLENGTH.ACCT;

   2514  3 000113   000047 236000 1                  LDQ     VLR_FID+5
         3 000114   000022 772000                    QRL     18
         3 000115   000777 376007                    ANQ     511,DL
         3 000116   200026 756100                    STQ     FID+16,,AUTO
         3 000117   000047 236000 1                  LDQ     VLR_FID+5
         3 000120   000777 376007                    ANQ     511,DL
         3 000121   200026 036100                    ADLQ    FID+16,,AUTO
         3 000122   200005 756100                    STQ     I,,AUTO

       82     2515    2         CALL INSERT(REPLY.FHANDLE.TEXT,0,I,

   2515  3 000123   000045 236000 1                  LDQ     VLR_FID+3
         3 000124   000011 772000                    QRL     9
         3 000125   000777 376007                    ANQ     511,DL
         3 000126   000047 720000 1                  LXL0    VLR_FID+5
         3 000127   000777 360003                    ANX0    511,DU
         3 000130   200026 756100                    STQ     FID+16,,AUTO
         3 000131   000045 236000 1                  LDQ     VLR_FID+3
         3 000132   000033 772000                    QRL     27
         3 000133   000047 221000 1                  LDX1    VLR_FID+5
         3 000134   000777 361003                    ANX1    511,DU
         3 000135   200026 235100                    LDA     FID+16,,AUTO
         3 000136   200005 722100                    LXL2    I,,AUTO
         3 000137   040140 100545                    MLR     fill='040'O
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:14   
         3 000140   200006 000010                    ADSC9   FID,A,AUTO               cn=0,n=*X0
         3 000141   100001 600012                    ADSC9   1,,PR1                   cn=3,n=*X2
         3 000142   000000 635010                    EAA     0,X0
         3 000143   000022 771000                    ARL     18
         3 000144   200027 755100                    STA     FID+17,,AUTO
         3 000145   200030 756100                    STQ     FID+18,,AUTO
         3 000146   200005 236100                    LDQ     I,,AUTO
         3 000147   200027 136100                    SBLQ    FID+17,,AUTO
         3 000150   000160 604400 3                  TMOZ    s:2518
         3 000151   200030 235100                    LDA     FID+18,,AUTO
         3 000152   000000 623006                    EAX3    0,QL
         3 000153   000000 636010                    EAQ     0,X0
         3 000154   000022 772000                    QRL     18
         3 000155   040146 100545                    MLR     fill='040'O
         3 000156   200006 000011                    ADSC9   FID,A,AUTO               cn=0,n=*X1
         3 000157   100001 600013                    ADSC9   1,Q,PR1                  cn=3,n=*X3

       83     2516    2           SUBSTR( FID,  VLR_FID.SINDEX.SN, VLR_FID.CLENGTH.SN),
       84     2517    2           SUBSTR( FID,  VLR_FID.SINDEX.ACCT, VLR_FID.CLENGTH.ACCT));
       85     2518    3         IF I = 0 THEN DO;

   2518  3 000160   200005 235100                    LDA     I,,AUTO
         3 000161   000173 601000 3                  TNZ     s:2523

       86     2519    3            IF VLR_FID.ACCT

   2519  3 000162   000042 236000 1                  LDQ     VLR_FID
         3 000163   200000 316003                    CANQ    65536,DU
         3 000164   000170 600000 3                  TZE     s:2521

       87     2520    3            THEN REPLY.FHANDLE.STAMP = %DEVICE#+512; /* "." -> mad               */

   2520  3 000165   001003 220003                    LDX0    515,DU
         3 000166   100001 740100                    STX0    1,,PR1
         3 000167   000177 710000 3                  TRA     s:2524

       88     2521    3            ELSE REPLY.FHANDLE.STAMP = %DEVICE#; /* "/" -> WHOLE SYSTEM          */
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:15   

   2521  3 000170   000003 220003                    LDX0    3,DU
         3 000171   100001 740100                    STX0    1,,PR1

       89     2522    3            END;

   2522  3 000172   000177 710000 3                  TRA     s:2524

       90     2523    2         ELSE CALL FUN$GETSTAMP( RQSCTX);  /* DP#xxx | .account | DP#xxx.account */

   2523  3 000173   200003 630500                    EPPR0   @RQSCTX,,AUTO
         3 000174   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000175   000000 701000 xent               TSX1    FUN$GETSTAMP
         3 000176   000000 011000                    NOP     0

       91     2524    2         CALL FUS$CHKMOUNT( RQSCTX) ALTRET( OK2);

   2524  3 000177   200003 630500                    EPPR0   @RQSCTX,,AUTO
         3 000200   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000201   000000 701000 xent               TSX1    FUS$CHKMOUNT
         3 000202   000254 702000 3                  TSX2    OK2

       92     2525    2         TEXTW.L = VBOUND( BITVECT( FPT_FID.TEXTFID_))+1;
              2525                  /* FHANDLE might've clobbered it */

   2525  3 000203   200003 470500                    LDP0    @RQSCTX,,AUTO
         3 000204   000003 471500                    LDP1    3,,PR0
         3 000205   000002 236000 1                  LDQ     FPT_FID+2
         3 000206   000020 772000                    QRL     16
         3 000207   000001 036007                    ADLQ    1,DL
         3 000210   100000 756100                    STQ     0,,PR1

       93     2526    2         CALL FUM$WR_MNTREC (RQSCTX);

   2526  3 000211   200003 630500                    EPPR0   @RQSCTX,,AUTO
         3 000212   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000213   000000 701000 xent               TSX1    FUM$WR_MNTREC
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:16   
         3 000214   000000 011000                    NOP     0

       94     2527    2         TEXTW.L = 0;  /* Last word of FHANDLE is zero, and that's all it c'be   */

   2527  3 000215   200003 470500                    LDP0    @RQSCTX,,AUTO
         3 000216   000003 471500                    LDP1    3,,PR0
         3 000217   100000 450100                    STZ     0,,PR1
         3 000220   000254 710000 3                  TRA     OK2

       95     2528
       96     2529    2       CASE( %MOUNTPROC_DUMP /* DUMP */);

       97     2530
       98     2531    2         CALL FUM$RDALL_MNTREC (RQSCTX) ALTRET (NONE);

   2531  3 000221   200003 630500                    EPPR0   @RQSCTX,,AUTO
         3 000222   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000223   000000 701000 xent               TSX1    FUM$RDALL_MNTREC
         3 000224   000247 702000 3                  TSX2    NONE
         3 000225   000254 710000 3                  TRA     OK2

       99     2532
      100     2533    2       CASE( %MOUNTPROC_UMNT /* UMOUNT */);

      101     2534
      102     2535    2         CALL FUM$DE_MNTREC (RQSCTX);

   2535  3 000226   200003 630500                    EPPR0   @RQSCTX,,AUTO
         3 000227   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000230   000000 701000 xent               TSX1    FUM$DE_MNTREC
         3 000231   000000 011000                    NOP     0

      103     2536    2         RQSCTX.REPLYHDR.ACCEPT_STAT = %SUCCESS;

   2536  3 000232   200003 470500                    LDP0    @RQSCTX,,AUTO
         3 000233   000022 450100                    STZ     18,,PR0

PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:17   
      104     2537    2         RQSCTX.LEN = 32;

   2537  3 000234   000040 235007                    LDA     32,DL
         3 000235   000002 755100                    STA     2,,PR0
         3 000236   000254 710000 3                  TRA     OK2

      105     2538
      106     2539    2       CASE( %MOUNTPROC_UMNTALL /* UMOUNTALL */);

      107     2540
      108     2541    2         CALL FUM$DELALL_MNTREC;

   2541  3 000237   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000240   000000 701000 xent               TSX1    FUM$DELALL_MNTREC
         3 000241   000000 011000                    NOP     0

      109     2542    2         RQSCTX.REPLYHDR.ACCEPT_STAT = %SUCCESS;

   2542  3 000242   200003 470500                    LDP0    @RQSCTX,,AUTO
         3 000243   000022 450100                    STZ     18,,PR0

      110     2543    2         RQSCTX.LEN = 32;

   2543  3 000244   000040 235007                    LDA     32,DL
         3 000245   000002 755100                    STA     2,,PR0
         3 000246   000254 710000 3                  TRA     OK2

      111     2544
      112     2545    2       CASE( ELSE);                        /* %MOUNTPROC_EXPORT                  */

      113     2546    2  NONE: RQSCTX.REPLYHDR.RESULT0 = 0; /* No entries in exportlist - we dont have one */

   2546  3 000247   200003 470500       NONE         LDP0    @RQSCTX,,AUTO
         3 000250   000023 450100                    STZ     19,,PR0

      114     2547    2   OK:   RQSCTX.LEN = 32+4;

PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:18   
   2547  3 000251   000044 235007       OK           LDA     36,DL
         3 000252   200003 470500                    LDP0    @RQSCTX,,AUTO
         3 000253   000002 755100                    STA     2,,PR0

      115     2548
      116     2549    2       END;

   2543  3 000254                       OK2          null
      117     2550    1   OK2: ;
      118     2551    1      CALL XSL$QSENDTO( RQSCTX.LEN, FU_MOUNTSOCKET, RQSCTX.REPLYHDR, RQSCTX.LEN,

   2551  3 000254   000000 236000 4                  LDQ     0
         3 000255   200034 756100                    STQ     FID+22,,AUTO
         3 000256   200003 236100                    LDQ     @RQSCTX,,AUTO
         3 000257   000006 036003                    ADLQ    6,DU
         3 000260   000001 235000 4                  LDA     1
         3 000261   200032 757100                    STAQ    FID+20,,AUTO
         3 000262   200003 236100                    LDQ     @RQSCTX,,AUTO
         3 000263   000002 036003                    ADLQ    2,DU
         3 000264   200031 756100                    STQ     FID+19,,AUTO
         3 000265   200003 236100                    LDQ     @RQSCTX,,AUTO
         3 000266   000013 036003                    ADLQ    11,DU
         3 000267   200030 756100                    STQ     FID+18,,AUTO
         3 000270   000002 236000 4                  LDQ     2
         3 000271   200027 756100                    STQ     FID+17,,AUTO
         3 000272   200003 236100                    LDQ     @RQSCTX,,AUTO
         3 000273   000002 036003                    ADLQ    2,DU
         3 000274   200026 756100                    STQ     FID+16,,AUTO
         3 000275   200026 630500                    EPPR0   FID+16,,AUTO
         3 000276   000025 631400 xsym               EPPR1   B_VECTNIL+21
         3 000277   000000 701000 xent               TSX1    XSL$QSENDTO
         3 000300   000000 011000                    NOP     0

      119     2552    1        0, RQSCTX.FROMADDR, 8);
      120     2553    1      RETURN;

   2553  3 000301   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:19   

   2552  3 000302                       BAD          null
      121     2554
      122     2555    1   BAD: ;
      123     2556    1      RQSCTX.REPLYHDR.RESULT0 = %NFSERR_PERM; /* s.b. badargs                    */

   2556  3 000302   000001 235007                    LDA     1,DL
         3 000303   200003 470500                    LDP0    @RQSCTX,,AUTO
         3 000304   000023 755100                    STA     19,,PR0

      124     2557    1      GOTO OK;

   2557  3 000305   000251 710000 3                  TRA     OK
      125     2558
      126     2559    1   END FUM$MOUNTRQS;
      127     2560        %EOD;

PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:20   
--  Include file information  --

   XSL_SOCKET_M.:LIBRARY  is referenced.
   XSL_SOCKET_E.:LIBRARY  is referenced.
   XSL_PERR_C.:LIBRARY  is referenced.
   FU_NFS_M.:FUA2TOU  is referenced.
   FU_NFSSUBS_C.:FUA2TOU  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUM$MOUNTRQS.
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:21   

 **** Variables and constants ****

  ****  Section 001  Data  FUM$MOUNTRQS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    30-0-0/w UBIN(9)     r     1 ASN                        0-0-0/d STRC(864)   r     1 FPT_FID
    31-0-0/c CHAR(4)     r     1 RES                       32-0-0/c CHAR(32)    r     1 TRASH
    42-0-0/d STRC(324)   r     1 VLR_FID

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @RQSCTX                    6-0-0/c CHAR(64)    r     1 FID
     5-0-0/w UBIN        r     1 I                          4-0-0/w PTR         r     1 REPLY$
    *0-0-0/w STRC(74556) r     1 RQSCTX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 FU_MOUNTSOCKET

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(324)   r     1 REPLY                      0-0-0/w ASTR        r     1 TEXTW


   Procedure FUM$MOUNTRQS requires 198 words for executable code.
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:22   
   Procedure FUM$MOUNTRQS requires 30 words of local(AUTO) storage.
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:23   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:24   
          MINI XREF LISTING

ASN
      2432**DCL      2423--DCLINIT  2507>>IF       2507>>IF
BAD
      2552**LABEL    2499--GOTO     2503--CALLALT  2504--GOTO     2506--GOTO     2507--GOTO
FID
      2493**DCL      2500<<ASSIGN   2515>>CALLBLT  2515>>CALLBLT
FPT_FID
      2420**DCL      2503<>CALL
FPT_FID.TEXTFID_
      2420**DCL      2501<<ASSIGN   2525>>ASSIGN
FPT_FID.V
      2424**DCL      2420--DCLINIT
FUM$DELALL_MNTREC
      2460**DCL-ENT  2541--CALL
FUM$DE_MNTREC
      2459**DCL-ENT  2535--CALL
FUM$RDALL_MNTREC
      2461**DCL-ENT  2531--CALL
FUM$WR_MNTREC
      2458**DCL-ENT  2526--CALL
FUN$GETSTAMP
      2457**DCL-ENT  2523--CALL
FUS$CHKMOUNT
      2462**DCL-ENT  2524--CALL
FU_MOUNTSOCKET
      2455**DCL      2551<>CALL
I
      2492**DCL      2514<<ASSIGN   2515>>CALLBLT  2518>>IF
M$FID
        97**DCL-ENT  2503--CALL
NONE
      2546**LABEL    2531--CALLALT
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:25   
OK
      2547**LABEL    2557--GOTO
OK2
      2543**LABEL    2524--CALLALT
REPLY
      2465**DCL      2509--ASSIGN
REPLY.FHANDLE
      2483**DCL      2511<<ASSIGN
REPLY.FHANDLE.ACCTLNG
      2486**DCL      2513<<ASSIGN
REPLY.FHANDLE.PSNLNG
      2485**DCL      2512<<ASSIGN
REPLY.FHANDLE.STAMP
      2485**DCL      2520<<ASSIGN   2521<<ASSIGN
REPLY.FHANDLE.TEXT
      2486**DCL      2515<<CALLBLT
REPLY.STAT
      2466**DCL      2510<<ASSIGN
REPLY$
      2491**DCL      2465--IMP-PTR  2502<<ASSIGN   2510>>ASSIGN   2511>>ASSIGN   2512>>ASSIGN   2513>>ASSIGN
      2515>>CALLBLT  2520>>ASSIGN   2521>>ASSIGN
RES
      2433**DCL      2423--DCLINIT  2506>>IF
RQSCTX
      2332**DCL        23--PROC     2523<>CALL     2524<>CALL     2526<>CALL     2531<>CALL     2535<>CALL
RQSCTX.BODY$
      2336**DCL      2489--IMP-PTR  2499>>IF       2500>>ASSIGN   2500>>ASSIGN   2501>>ASSIGN   2501>>ASSIGN
      2525>>ASSIGN   2527>>ASSIGN
RQSCTX.CALLHDR
      2393**DCL      2398--REDEF
RQSCTX.CALLHDR.AUTH_CRED
      2395**DCL      2397--REDEF
RQSCTX.CALLHDR.XID
      2393**DCL      2393--REDEF
RQSCTX.FROMADDR
      2358**DCL      2551<>CALL
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:26   
RQSCTX.LEN
      2336**DCL      2499>>IF       2509<<ASSIGN   2537<<ASSIGN   2543<<ASSIGN   2547<<ASSIGN   2551<>CALL
      2551<>CALL
RQSCTX.PROC#
      2337**DCL      2496>>DOCASE
RQSCTX.REPLYHDR
      2398**DCL      2551<>CALL
RQSCTX.REPLYHDR.ACCEPT_STAT
      2403**DCL      2536<<ASSIGN   2542<<ASSIGN
RQSCTX.REPLYHDR.AUTH_VERF_HID
      2402**DCL      2402--REDEF    2402--REDEF
RQSCTX.REPLYHDR.PVERS_HIGH
      2404**DCL      2404--REDEF
RQSCTX.REPLYHDR.PVERS_LOW
      2403**DCL      2403--REDEF    2404--REDEF
RQSCTX.REPLYHDR.REJECT_STAT
      2399**DCL      2399--REDEF    2400--REDEF
RQSCTX.REPLYHDR.RESULT0
      2404**DCL      2546<<ASSIGN   2556<<ASSIGN
RQSCTX.REPLYHDR.RESULTS
      2403**DCL      2502--ASSIGN
RQSCTX.REPLYHDR.VERS_HIGH
      2401**DCL      2401--REDEF    2401--REDEF
RQSCTX.REPLYHDR.VERS_LOW
      2400**DCL      2400--REDEF    2401--REDEF
TEXTW.L
      2489**DCL      2489--IMP-SIZ  2499>>IF       2500>>ASSIGN   2501>>ASSIGN   2525<<ASSIGN   2527<<ASSIGN
TEXTW.T
      2489**DCL      2500>>ASSIGN   2501--ASSIGN
TRASH
      2434**DCL      2421--DCLINIT  2421--DCLINIT  2422--DCLINIT  2422--DCLINIT  2422--DCLINIT
VLR_FID
      2446**DCL      2424--DCLINIT
VLR_FID.ACCT
      2446**DCL      2519>>IF
VLR_FID.CLENGTH.ACCT
PL6.E3A0      #001=FUM$MOUNTRQS File=FUM$MOUNT.:FUA2TSI                          FRI 11/21/97 11:33 Page:27   
      2451**DCL      2513>>ASSIGN   2514>>ASSIGN   2515>>CALLBLT
VLR_FID.CLENGTH.SN
      2451**DCL      2512>>ASSIGN   2514>>ASSIGN   2515>>CALLBLT
VLR_FID.NAME
      2446**DCL      2504>>IF
VLR_FID.PASS
      2446**DCL      2504>>IF
VLR_FID.RES
      2446**DCL      2505>>IF
VLR_FID.SINDEX.ACCT
      2449**DCL      2515>>CALLBLT
VLR_FID.SINDEX.SN
      2449**DCL      2515>>CALLBLT
VLR_FID.SN
      2446**DCL      2506>>IF
VLR_FID.WSN
      2446**DCL      2504>>IF
XSL$QSENDTO
      2463**DCL-ENT  2551--CALL

PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:28   
      128        1        /*M* FUM$RMTAB - etc:rmtab file interface for the mount requests */
      129        2        /*T***********************************************************/
      130        3        /*T*                                                         */
      131        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      132        5        /*T*                                                         */
      133        6        /*T***********************************************************/
      134        7        /*P*  NAME: FUM$RMTAB
      135        8              Purpose:
      136        9                    Contains the routines to interface with the etc:rmtab file.
      137       10        */
      138       11        FUM$RMTAB: PROC (RQSCTX) ALTRET;
      139       12
      140       13        %INCLUDE CP_6;
      141       94        %INCLUDE CP_6_SUBS;
      142      634        %INCLUDE B_ERRORS_C;
      143     1761        %INCLUDE FU_NFS_M;
      144     2276        %INCLUDE FU_NFSSUBS_C;
      145     2371        %INCLUDE XSL_PERR_C;
      146     2426        %INCLUDE XSL_SOCKET_E;
      147     2684        %INCLUDE XSL_SOCKET_M;
      148     3432
      149     3433        %B$TCB;
      150     3436        %B$ALT;
      151     3444
      152     3445    1   DCL B$TCB$ PTR SYMREF;
      153     3446
      154     3447        %FU$UCTX (NAME=FU$UCTX, STCLASS=BASED);
      155     3500        %FU$HCTX (NAME=FU$HCTX, STCLASS=BASED);
      156     3523        %FU$RQSCTX (NAME=RQSCTX, STCLASS=PARAM);
      157     3612
      158     3613        %FPT_WRITE (FPTN=WR_MNTREC,
      159     3614                   KEY=MNTKEY,
      160     3615                   BUF=MNTREC,
      161     3616                   DCB=F$RMTAB);
      162     3647        %FPT_READ  (FPTN=RD_MNTREC,
      163     3648                   KEY=MNTKEY,
      164     3649                   BUF=MNTREC,
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:29   
      165     3650                   DCB=F$RMTAB);
      166     3689        %FPT_DELREC(FPTN=DE_MNTREC,
      167     3690                   KEY=MNTKEY,
      168     3691                   DCB=F$RMTAB);
      169     3710
      170     3711        %FPT_TIME(FPTN=FPT_TIME,
      171     3712                   SOURCE=CLOCK,
      172     3713                   DEST=UTS,
      173     3714                   TSTAMP=MNTREC.TIME);
      174     3733
      175     3734        %M$DCB (DCBN=F$RMTAB,
      176     3735                ASN =FILE,
      177     3736                NAME='etc:rmtab',
      178     3737                ACCT=':SYS',
      179     3738                FUN =CREATE,
      180     3739                EXIST=OLDFILE,
      181     3740                SHARE=ALL,
      182     3741                CTG =YES,
      183     3742                ORG =KEYED);
      184     3816
      185     3817    1   DCL KEY$ PTR;
      186     3818    1   DCL REPLY$ PTR;
      187     3819
      188     3820    1   DCL 1 MNTKEY STATIC,
      189     3821    1         2 LEN UBIN BYTE CALIGNED,
      190     3822    1         2 TXT CHAR(80) UNAL;
      191     3823
      192     3824    1   DCL 1 MNTREC STATIC,
      193     3825    1         2 COUNT SBIN WORD INIT(0),        /* number of times mounted            */
      194     3826    1         2 TIME UBIN WORD;                 /* last modification time             */
      195     3827
      196     3828    1   DCL 1 TEXTW BASED (REPLY$) ALIGNED,
      197     3829    1         2 L UBIN,
      198     3830    1         2 T CHAR(TEXTW.L) UNAL;
      199     3831
      200     3832    1   DCL 1 TEXTC BASED (KEY$),
      201     3833    1         2 L UBIN BYTE CALIGNED,
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:30   
      202     3834    1         2 T CHAR(TEXTC.L) UNAL;
      203     3835
      204     3836    1   DCL 1 KEY BASED (KEY$) CALIGNED,
      205     3837    1         2 L UBIN BYTE CALIGNED,
      206     3838    1         2 T CALIGNED,
      207     3839    1           3 C CHAR(CLEN) CALIGNED;
      208     3840
      209     3841    1   DCL 1 STRING BASED (REPLY$) ALIGNED,
      210     3842    1         2 L UBIN,
      211     3843    1         2 T ALIGNED,
      212     3844    1           3 C CHAR(WLEN);
      213     3845
      214     3846    1   DCL CLEN UBIN;
      215     3847    1   DCL WLEN UBIN;
      216     3848        %EJECT;
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:31   
      217     3849        /*F*  NAME: FUM$RDALL_MNTREC
      218     3850              Purpose:
      219     3851                    To read all the host/filesystem combinations in etc:rmtab, and pack
      220     3852                    the strings into the RQSCTX return buffer.
      221     3853        */
      222     3854        /*D*  NAME: FUM$RDALL_MNTREC
      223     3855              Outputs:
      224     3856                    RQSCTX.REPLY - the current host/filesystem name list.
      225     3857        */
      226     3858    1   FUM$RDALL_MNTREC: ENTRY (RQSCTX) ALTRET;
      227     3859
      228     3860    1      REPLY$ = ADDR(RQSCTX.REPLYHDR.RESULT1);
      229     3861    1      RQSCTX.LEN = 32+4;
      230     3862    1      RD_MNTREC.V.KEYR# = %YES#;
      231     3863    2      DO WHILE ('1'B);                /* read all of the records in etc:rmtab    */
      232     3864    2         CALL M$READ (RD_MNTREC)
      233     3865    3         WHENALTRETURN DO;
      234     3866    3            IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$EOF THEN GOTO OH_NO;
      235     3867    3            RQSCTX.REPLYHDR.RESULT0 = %NFS_OK;
      236     3868    3            RETURN;
      237     3869    3            END;
      238     3870    2         KEY$ = ADDR( MNTKEY.TXT);    /* pack host name as STRING into reply     */
      239     3871    2         CLEN = KEY.L;
      240     3872    2         WLEN = (CLEN+3)/4*4;
      241     3873    2         STRING.L = CLEN;
      242     3874    2         STRING.T = KEY.T;
      243     3875    2         RQSCTX.LEN = RQSCTX.LEN + LENGTHC( STRING);
      244     3876    2         REPLY$ = PINCRC(REPLY$, LENGTHC( STRING));
      245     3877
      246     3878    2         KEY$ = PINCRW( KEY$, LENGTHC( KEY)); /* pack filesystem name into reply */
      247     3879    2         CLEN = KEY.L;
      248     3880    2         WLEN = (CLEN+3)/4*4;
      249     3881    2         STRING.L = CLEN;
      250     3882    2         STRING.T = KEY.T;
      251     3883    2         RQSCTX.LEN = RQSCTX.LEN + LENGTHC( STRING);
      252     3884    2         REPLY$ = PINCRW(REPLY$, LENGTHW( STRING));
      253     3885    2         END;                              /* read all etc:rmtab records         */
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:32   
      254     3886
      255     3887        /*F*  NAME: FUM$WR_MNTREC
      256     3888              Purpose:
      257     3889                    To add the given mount entry into etc:rmtab.  If it already exists,
      258     3890                    bump its mount count.
      259     3891        */
      260     3892        /*D*  NAME: FUM$WR_MNTREC
      261     3893              Inputs:
      262     3894                    RQSCTX - contains the mount entry to record.
      263     3895              Outputs:
      264     3896                    etc:rmtab (file) - updated.
      265     3897        */
      266     3898    1   FUM$WR_MNTREC: ENTRY (RQSCTX) ALTRET;
      267     3899
      268     3900    1      CALL BUILD_KEY;
      269     3901    1      CALL M$READ (RD_MNTREC)
      270     3902    2      WHENALTRETURN DO;
      271     3903    2         MNTREC.COUNT = 0;
      272     3904    2         END;
      273     3905    1      CALL M$TIME (FPT_TIME);
      274     3906    1      MNTREC.COUNT = MNTREC.COUNT + 1;
      275     3907    1      CALL M$WRITE (WR_MNTREC) ALTRET (OH_NO);
      276     3908    1      GOTO OK;
      277     3909
      278     3910        /*F*  NAME: FUM$DELALL_MNTREC
      279     3911              Purpose:
      280     3912                    To delete all mount entries for this host.
      281     3913        */
      282     3914        /*D*  NAME: FUM$DELALL_MNTREC
      283     3915              Inputs:
      284     3916                    RQSCTX - contains the host that is issuing this request.
      285     3917              Outputs:
      286     3918                    etc:rmtab (file) - updated.
      287     3919        */
      288     3920    1   FUM$DELALL_MNTREC: ENTRY (RQSCTX) ALTRET;
      289     3921
      290     3922    1      RD_MNTREC.V.KEYR# = %YES#;
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:33   
      291     3923    2      DO WHILE ('1'B);                     /* look at all records in etc:rmtab   */
      292     3924    2         CALL M$READ (RD_MNTREC)
      293     3925    3         WHENALTRETURN DO;
      294     3926    3            IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$EOF THEN GOTO OH_NO;
      295     3927    3            RETURN;
      296     3928    3            END;
      297     3929    2         KEY$ = ADDR(MNTKEY.TXT);
      298     3930    2         IF KEY$->TEXTC.T = RQSCTX.UCTX$->FU$UCTX.HCTX$->FU$HCTX.NAME.T THEN
      299     3931    2            CALL M$DELREC (DE_MNTREC) ALTRET (OH_NO);
      300     3932    2         END;
      301     3933
      302     3934
      303     3935        /*F*  NAME: FUM$DE_MNTREC
      304     3936              Purpose:
      305     3937                    To delete a given mount entry from etc:rmtab.  If the entry exists
      306     3938                    more than once, we only delete one occurance.
      307     3939        */
      308     3940        /*D*  NAME: FUM$DE_MNTREC
      309     3941              Inputs:
      310     3942                    RQSCTX - contains the mount entry to delete.
      311     3943              Outputs:
      312     3944                    etc:rmtab (file) - updated.
      313     3945        */
      314     3946    1   FUM$DE_MNTREC: ENTRY (RQSCTX) ALTRET;
      315     3947
      316     3948    1      CALL BUILD_KEY;
      317     3949    1      CALL M$READ (RD_MNTREC)
      318     3950    2      WHENALTRETURN DO;
      319     3951    2         IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$EOF THEN GOTO OK;
      320     3952    2         MNTREC.COUNT = 0;
      321     3953    2         END;
      322     3954    1      MNTREC.COUNT = MNTREC.COUNT - 1;
      323     3955    1      IF MNTREC.COUNT <= 0 THEN
      324     3956    1         CALL M$DELREC (DE_MNTREC) ALTRET (OH_NO);
      325     3957    2      ELSE DO;
      326     3958    2         CALL M$TIME(FPT_TIME);
      327     3959    2         CALL M$WRITE (WR_MNTREC) ALTRET (OH_NO);
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:34   
      328     3960    2         END;
      329     3961    1      GOTO OK;
      330     3962
      331     3963    1   OK:
      332     3964    1      RETURN;
      333     3965
      334     3966    1   OH_NO:
      335     3967    1      ALTRETURN;
      336     3968
      337     3969        /*I*  NAME:    BUILD_KEY
      338     3970              Purpose: To build a key to reference into etc:rmtab.  The key is made of
      339     3971                       two textc strings; one for the host name and one for the CP6
      340     3972                       file system name.  MNTKEY.LEN is the length of the entire thing.
      341     3973              Inputs:  RQSCTX - contains host name and filesystem name.
      342     3974              Outputs: MNTKEY - contains the expected key.
      343     3975        */
      344     3976    1   BUILD_KEY: PROC;
      345     3977    2   DCL H$ PTR;
      346     3978
      347     3979    2      MNTKEY.TXT = ' ';
      348     3980    2      H$ = RQSCTX.UCTX$->FU$UCTX.HCTX$;    /* save some typing                   */
      349     3981
      350     3982           /* The key is made of two textc strings; one for the
      351     3983              host name and one for the CP6 file system name.
      352     3984              MNTKEY.LEN is the length of the entire thing.    */
      353     3985
      354     3986    2      KEY$ = ADDR(MNTKEY.TXT);
      355     3987    2      KEY$->TEXTC.L = H$->FU$HCTX.NAME.L;
      356     3988    2      KEY$->TEXTC.T = H$->FU$HCTX.NAME.T;
      357     3989    2      KEY$ = PINCRC(KEY$,H$->FU$HCTX.NAME.L+1);
      358     3990    2      KEY$->TEXTC.L = RQSCTX.BODY$->TEXTW.L;
      359     3991    2      KEY$->TEXTC.T = RQSCTX.BODY$->TEXTW.T;
      360     3992    2      MNTKEY.LEN = H$->FU$HCTX.NAME.L + RQSCTX.BODY$->TEXTW.L + 2;
      361     3993
      362     3994    2   END BUILD_KEY;
      363     3995    1   END FUM$RMTAB;

PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:35   
--  Include file information  --

   XSL_SOCKET_M.:LIBRARY  is referenced.
   XSL_SOCKET_E.:LIBRARY  is referenced.
   XSL_PERR_C.:LIBRARY  is referenced.
   FU_NFSSUBS_C.:FUA2TOU  is referenced.
   FU_NFS_M.:FUA2TOU  is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUM$RMTAB.

   Procedure FUM$RMTAB requires 230 words for executable code.
   Procedure FUM$RMTAB requires 12 words of local(AUTO) storage.

    No errors detected in file FUM$MOUNT.:FUA2TSI    .

PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:36   

 Object Unit name= FUM$RMTAB                                  File name= FUM$MOUNT.:FUA2TOU
 UTS= NOV 21 '97 11:34:06.12 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    71    107  FUM$RMTAB
    2   DCB   even  none    98    142  F$RMTAB
    3   Proc  even  none   230    346  FUM$RMTAB
    4  RoData even  none     1      1  FUM$RMTAB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  FUM$RMTAB
     3      3          yes     yes      Std        1  FUM$RDALL_MNTREC
     3    133          yes     yes      Std        1  FUM$WR_MNTREC
     3    156          yes     yes      Std        1  FUM$DELALL_MNTREC
     3    222          yes     yes      Std        1  FUM$DE_MNTREC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:37   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                F$RMTAB
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:38   


      128        1        /*M* FUM$RMTAB - etc:rmtab file interface for the mount requests */
      129        2        /*T***********************************************************/
      130        3        /*T*                                                         */
      131        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      132        5        /*T*                                                         */
      133        6        /*T***********************************************************/
      134        7        /*P*  NAME: FUM$RMTAB
      135        8              Purpose:
      136        9                    Contains the routines to interface with the etc:rmtab file.
      137       10        */
      138       11        FUM$RMTAB: PROC (RQSCTX) ALTRET;

     11  3 000000   000000 700200 xent  FUM$RMTAB    TSX0  ! X66_AUTO_1
         3 000001   000014 000001                    ZERO    12,1
         3 000002   000005 710000 3                  TRA     s:3860

      139       12
      140       13        %INCLUDE CP_6;
      141       94        %INCLUDE CP_6_SUBS;
      142      634        %INCLUDE B_ERRORS_C;
      143     1761        %INCLUDE FU_NFS_M;
      144     2276        %INCLUDE FU_NFSSUBS_C;
      145     2371        %INCLUDE XSL_PERR_C;
      146     2426        %INCLUDE XSL_SOCKET_E;
      147     2684        %INCLUDE XSL_SOCKET_M;
      148     3432
      149     3433        %B$TCB;
      150     3436        %B$ALT;
      151     3444
      152     3445    1   DCL B$TCB$ PTR SYMREF;
      153     3446
      154     3447        %FU$UCTX (NAME=FU$UCTX, STCLASS=BASED);
      155     3500        %FU$HCTX (NAME=FU$HCTX, STCLASS=BASED);
      156     3523        %FU$RQSCTX (NAME=RQSCTX, STCLASS=PARAM);
      157     3612
      158     3613        %FPT_WRITE (FPTN=WR_MNTREC,
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:39   
      159     3614                   KEY=MNTKEY,
      160     3615                   BUF=MNTREC,
      161     3616                   DCB=F$RMTAB);
      162     3647        %FPT_READ  (FPTN=RD_MNTREC,
      163     3648                   KEY=MNTKEY,
      164     3649                   BUF=MNTREC,
      165     3650                   DCB=F$RMTAB);
      166     3689        %FPT_DELREC(FPTN=DE_MNTREC,
      167     3690                   KEY=MNTKEY,
      168     3691                   DCB=F$RMTAB);
      169     3710
      170     3711        %FPT_TIME(FPTN=FPT_TIME,
      171     3712                   SOURCE=CLOCK,
      172     3713                   DEST=UTS,
      173     3714                   TSTAMP=MNTREC.TIME);
      174     3733
      175     3734        %M$DCB (DCBN=F$RMTAB,
      176     3735                ASN =FILE,
      177     3736                NAME='etc:rmtab',
      178     3737                ACCT=':SYS',
      179     3738                FUN =CREATE,
      180     3739                EXIST=OLDFILE,
      181     3740                SHARE=ALL,
      182     3741                CTG =YES,
      183     3742                ORG =KEYED);
      184     3816
      185     3817    1   DCL KEY$ PTR;
      186     3818    1   DCL REPLY$ PTR;
      187     3819
      188     3820    1   DCL 1 MNTKEY STATIC,
      189     3821    1         2 LEN UBIN BYTE CALIGNED,
      190     3822    1         2 TXT CHAR(80) UNAL;
      191     3823
      192     3824    1   DCL 1 MNTREC STATIC,
      193     3825    1         2 COUNT SBIN WORD INIT(0),        /* number of times mounted            */
      194     3826    1         2 TIME UBIN WORD;                 /* last modification time             */
      195     3827
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:40   
      196     3828    1   DCL 1 TEXTW BASED (REPLY$) ALIGNED,
      197     3829    1         2 L UBIN,
      198     3830    1         2 T CHAR(TEXTW.L) UNAL;
      199     3831
      200     3832    1   DCL 1 TEXTC BASED (KEY$),
      201     3833    1         2 L UBIN BYTE CALIGNED,
      202     3834    1         2 T CHAR(TEXTC.L) UNAL;
      203     3835
      204     3836    1   DCL 1 KEY BASED (KEY$) CALIGNED,
      205     3837    1         2 L UBIN BYTE CALIGNED,
      206     3838    1         2 T CALIGNED,
      207     3839    1           3 C CHAR(CLEN) CALIGNED;
      208     3840
      209     3841    1   DCL 1 STRING BASED (REPLY$) ALIGNED,
      210     3842    1         2 L UBIN,
      211     3843    1         2 T ALIGNED,
      212     3844    1           3 C CHAR(WLEN);
      213     3845
      214     3846    1   DCL CLEN UBIN;
      215     3847    1   DCL WLEN UBIN;
      216     3848        %EJECT;
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:41   
      217     3849        /*F*  NAME: FUM$RDALL_MNTREC
      218     3850              Purpose:
      219     3851                    To read all the host/filesystem combinations in etc:rmtab, and pack
      220     3852                    the strings into the RQSCTX return buffer.
      221     3853        */
      222     3854        /*D*  NAME: FUM$RDALL_MNTREC
      223     3855              Outputs:
      224     3856                    RQSCTX.REPLY - the current host/filesystem name list.
      225     3857        */
      226     3858    1   FUM$RDALL_MNTREC: ENTRY (RQSCTX) ALTRET;

   3858  3 000003   000000 700200 xent  FUM$RDALL_M* TSX0  ! X66_AUTO_1
         3 000004   000014 000001                    ZERO    12,1

      227     3859
      228     3860    1      REPLY$ = ADDR(RQSCTX.REPLYHDR.RESULT1);

   3860  3 000005   200003 236100                    LDQ     @RQSCTX,,AUTO
         3 000006   000024 036003                    ADLQ    20,DU
         3 000007   200005 756100                    STQ     REPLY$,,AUTO

      229     3861    1      RQSCTX.LEN = 32+4;

   3861  3 000010   000044 235007                    LDA     36,DL
         3 000011   200003 470500                    LDP0    @RQSCTX,,AUTO
         3 000012   000002 755100                    STA     2,,PR0

      230     3862    1      RD_MNTREC.V.KEYR# = %YES#;

   3862  3 000013   100000 236007                    LDQ     32768,DL
         3 000014   000024 256000 1                  ORSQ    RD_MNTREC+8

      231     3863    2      DO WHILE ('1'B);                /* read all of the records in etc:rmtab    */

      232     3864    2         CALL M$READ (RD_MNTREC)

   3864  3 000015   000014 630400 1                  EPPR0   RD_MNTREC
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:42   
         3 000016   440000 713400                    CLIMB   alt,read
         3 000017   401400 401760                    pmme    nvectors=4
         3 000020   000022 702000 3                  TSX2    s:3866
         3 000021   000033 710000 3                  TRA     s:3870

      233     3865    3         WHENALTRETURN DO;

      234     3866    3            IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$EOF THEN GOTO OH_NO;

   3866  3 000022   000000 470400 xsym               LDP0    B$TCB$
         3 000023   000000 471500                    LDP1    0,,PR0
         3 000024   100102 236100                    LDQ     66,,PR1
         3 000025   377770 376007                    ANQ     131064,DL
         3 000026   000060 116007                    CMPQ    48,DL
         3 000027   000263 601000 3                  TNZ     OH_NO

      235     3867    3            RQSCTX.REPLYHDR.RESULT0 = %NFS_OK;

   3867  3 000030   200003 473500                    LDP3    @RQSCTX,,AUTO
         3 000031   300023 450100                    STZ     19,,PR3

      236     3868    3            RETURN;

   3868  3 000032   000000 702200 xent               TSX2  ! X66_ARET

      237     3869    3            END;
      238     3870    2         KEY$ = ADDR( MNTKEY.TXT);    /* pack host name as STRING into reply     */

   3870  3 000033   000000 236000 4                  LDQ     0
         3 000034   200004 756100                    STQ     KEY$,,AUTO

      239     3871    2         CLEN = KEY.L;

   3871  3 000035   200004 470500                    LDP0    KEY$,,AUTO
         3 000036   000100 101500                    MRL     fill='000'O
         3 000037   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000040   200006 000004                    ADSC9   CLEN,,AUTO               cn=0,n=4
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:43   

      240     3872    2         WLEN = (CLEN+3)/4*4;

   3872  3 000041   200006 236100                    LDQ     CLEN,,AUTO
         3 000042   000003 036007                    ADLQ    3,DL
         3 000043   000002 772000                    QRL     2
         3 000044   000002 736000                    QLS     2
         3 000045   200007 756100                    STQ     WLEN,,AUTO

      241     3873    2         STRING.L = CLEN;

   3873  3 000046   200005 471500                    LDP1    REPLY$,,AUTO
         3 000047   200006 235100                    LDA     CLEN,,AUTO
         3 000050   100000 755100                    STA     0,,PR1

      242     3874    2         STRING.T = KEY.T;

   3874  3 000051   000000 620005                    EAX0    0,AL
         3 000052   000000 621006                    EAX1    0,QL
         3 000053   000140 100540                    MLR     fill='000'O
         3 000054   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000055   100001 000011                    ADSC9   1,,PR1                   cn=0,n=*X1

      243     3875    2         RQSCTX.LEN = RQSCTX.LEN + LENGTHC( STRING);

   3875  3 000056   200003 473500                    LDP3    @RQSCTX,,AUTO
         3 000057   300002 236100                    LDQ     2,,PR3
         3 000060   200007 036100                    ADLQ    WLEN,,AUTO
         3 000061   000004 036007                    ADLQ    4,DL
         3 000062   300002 756100                    STQ     2,,PR3

      244     3876    2         REPLY$ = PINCRC(REPLY$, LENGTHC( STRING));

   3876  3 000063   200007 236100                    LDQ     WLEN,,AUTO
         3 000064   000020 736000                    QLS     16
         3 000065   000001 036003                    ADLQ    1,DU
         3 000066   200005 036100                    ADLQ    REPLY$,,AUTO
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:44   
         3 000067   200005 756100                    STQ     REPLY$,,AUTO

      245     3877
      246     3878    2         KEY$ = PINCRW( KEY$, LENGTHC( KEY)); /* pack filesystem name into reply */

   3878  3 000070   200006 236100                    LDQ     CLEN,,AUTO
         3 000071   000022 736000                    QLS     18
         3 000072   000001 036003                    ADLQ    1,DU
         3 000073   200004 036100                    ADLQ    KEY$,,AUTO
         3 000074   200004 756100                    STQ     KEY$,,AUTO

      247     3879    2         CLEN = KEY.L;

   3879  3 000075   200004 470500                    LDP0    KEY$,,AUTO
         3 000076   000100 101500                    MRL     fill='000'O
         3 000077   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000100   200006 000004                    ADSC9   CLEN,,AUTO               cn=0,n=4

      248     3880    2         WLEN = (CLEN+3)/4*4;

   3880  3 000101   200006 236100                    LDQ     CLEN,,AUTO
         3 000102   000003 036007                    ADLQ    3,DL
         3 000103   000002 772000                    QRL     2
         3 000104   000002 736000                    QLS     2
         3 000105   200007 756100                    STQ     WLEN,,AUTO

      249     3881    2         STRING.L = CLEN;

   3881  3 000106   200005 471500                    LDP1    REPLY$,,AUTO
         3 000107   200006 235100                    LDA     CLEN,,AUTO
         3 000110   100000 755100                    STA     0,,PR1

      250     3882    2         STRING.T = KEY.T;

   3882  3 000111   000000 620005                    EAX0    0,AL
         3 000112   000000 621006                    EAX1    0,QL
         3 000113   000140 100540                    MLR     fill='000'O
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:45   
         3 000114   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000115   100001 000011                    ADSC9   1,,PR1                   cn=0,n=*X1

      251     3883    2         RQSCTX.LEN = RQSCTX.LEN + LENGTHC( STRING);

   3883  3 000116   300002 236100                    LDQ     2,,PR3
         3 000117   200007 036100                    ADLQ    WLEN,,AUTO
         3 000120   000004 036007                    ADLQ    4,DL
         3 000121   300002 756100                    STQ     2,,PR3

      252     3884    2         REPLY$ = PINCRW(REPLY$, LENGTHW( STRING));

   3884  3 000122   200007 236100                    LDQ     WLEN,,AUTO
         3 000123   000011 402007                    MPY     9,DL
         3 000124   000107 036007                    ADLQ    71,DL
         3 000125   000001 772000                    QRL     1
         3 000126   000022 506007                    DIV     18,DL
         3 000127   000022 736000                    QLS     18
         3 000130   200005 036100                    ADLQ    REPLY$,,AUTO
         3 000131   200005 756100                    STQ     REPLY$,,AUTO

      253     3885    2         END;                              /* read all etc:rmtab records         */

   3885  3 000132   000015 710000 3                  TRA     s:3864

      254     3886
      255     3887        /*F*  NAME: FUM$WR_MNTREC
      256     3888              Purpose:
      257     3889                    To add the given mount entry into etc:rmtab.  If it already exists,
      258     3890                    bump its mount count.
      259     3891        */
      260     3892        /*D*  NAME: FUM$WR_MNTREC
      261     3893              Inputs:
      262     3894                    RQSCTX - contains the mount entry to record.
      263     3895              Outputs:
      264     3896                    etc:rmtab (file) - updated.
      265     3897        */
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:46   
      266     3898    1   FUM$WR_MNTREC: ENTRY (RQSCTX) ALTRET;

   3898  3 000133   000000 700200 xent  FUM$WR_MNTR* TSX0  ! X66_AUTO_1
         3 000134   000014 000001                    ZERO    12,1

      267     3899
      268     3900    1      CALL BUILD_KEY;

   3900  3 000135   000264 701000 3                  TSX1    BUILD_KEY
         3 000136   000000 011000                    NOP     0

      269     3901    1      CALL M$READ (RD_MNTREC)

   3901  3 000137   000014 630400 1                  EPPR0   RD_MNTREC
         3 000140   440000 713400                    CLIMB   alt,read
         3 000141   401400 401760                    pmme    nvectors=4
         3 000142   000144 702000 3                  TSX2    s:3903
         3 000143   000145 710000 3                  TRA     s:3905

      270     3902    2      WHENALTRETURN DO;

      271     3903    2         MNTREC.COUNT = 0;

   3903  3 000144   000105 450000 1                  STZ     MNTREC

      272     3904    2         END;

      273     3905    1      CALL M$TIME (FPT_TIME);

   3905  3 000145   000044 630400 1                  EPPR0   FPT_TIME
         3 000146   020004 713400                    CLIMB   8196
         3 000147   402000 401760                    pmme    nvectors=5

      274     3906    1      MNTREC.COUNT = MNTREC.COUNT + 1;

   3906  3 000150   000105 054000 1                  AOS     MNTREC

PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:47   
      275     3907    1      CALL M$WRITE (WR_MNTREC) ALTRET (OH_NO);

   3907  3 000151   000000 630400 1                  EPPR0   WR_MNTREC
         3 000152   440001 713400                    CLIMB   alt,write
         3 000153   401400 401760                    pmme    nvectors=4
         3 000154   000263 702000 3                  TSX2    OH_NO

      276     3908    1      GOTO OK;

   3908  3 000155   000262 710000 3                  TRA     OK

      277     3909
      278     3910        /*F*  NAME: FUM$DELALL_MNTREC
      279     3911              Purpose:
      280     3912                    To delete all mount entries for this host.
      281     3913        */
      282     3914        /*D*  NAME: FUM$DELALL_MNTREC
      283     3915              Inputs:
      284     3916                    RQSCTX - contains the host that is issuing this request.
      285     3917              Outputs:
      286     3918                    etc:rmtab (file) - updated.
      287     3919        */
      288     3920    1   FUM$DELALL_MNTREC: ENTRY (RQSCTX) ALTRET;

   3920  3 000156   000000 700200 xent  FUM$DELALL_* TSX0  ! X66_AUTO_1
         3 000157   000014 000001                    ZERO    12,1

      289     3921
      290     3922    1      RD_MNTREC.V.KEYR# = %YES#;

   3922  3 000160   100000 236007                    LDQ     32768,DL
         3 000161   000024 256000 1                  ORSQ    RD_MNTREC+8

      291     3923    2      DO WHILE ('1'B);                     /* look at all records in etc:rmtab   */

      292     3924    2         CALL M$READ (RD_MNTREC)

PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:48   
   3924  3 000162   000014 630400 1                  EPPR0   RD_MNTREC
         3 000163   440000 713400                    CLIMB   alt,read
         3 000164   401400 401760                    pmme    nvectors=4
         3 000165   000167 702000 3                  TSX2    s:3926
         3 000166   000176 710000 3                  TRA     s:3929

      293     3925    3         WHENALTRETURN DO;

      294     3926    3            IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$EOF THEN GOTO OH_NO;

   3926  3 000167   000000 470400 xsym               LDP0    B$TCB$
         3 000170   000000 471500                    LDP1    0,,PR0
         3 000171   100102 236100                    LDQ     66,,PR1
         3 000172   377770 376007                    ANQ     131064,DL
         3 000173   000060 116007                    CMPQ    48,DL
         3 000174   000263 601000 3                  TNZ     OH_NO

      295     3927    3            RETURN;

   3927  3 000175   000000 702200 xent               TSX2  ! X66_ARET

      296     3928    3            END;
      297     3929    2         KEY$ = ADDR(MNTKEY.TXT);

   3929  3 000176   000000 236000 4                  LDQ     0
         3 000177   200004 756100                    STQ     KEY$,,AUTO

      298     3930    2         IF KEY$->TEXTC.T = RQSCTX.UCTX$->FU$UCTX.HCTX$->FU$HCTX.NAME.T THEN

   3930  3 000200   200004 470500                    LDP0    KEY$,,AUTO
         3 000201   000100 101500                    MRL     fill='000'O
         3 000202   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000203   200012 000002                    ADSC9   H$+1,,AUTO               cn=0,n=2
         3 000204   200012 220100                    LDX0    H$+1,,AUTO
         3 000205   200003 471500                    LDP1    @RQSCTX,,AUTO
         3 000206   100004 473500                    LDP3    4,,PR1
         3 000207   300001 474500                    LDP4    1,,PR3
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:49   
         3 000210   400030 721100                    LXL1    24,,PR4
         3 000211   040140 106540                    CMPC    fill='040'O
         3 000212   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000213   400031 000011                    ADSC9   25,,PR4                  cn=0,n=*X1
         3 000214   000162 601000 3                  TNZ     s:3924

      299     3931    2            CALL M$DELREC (DE_MNTREC) ALTRET (OH_NO);

   3931  3 000215   000032 630400 1                  EPPR0   DE_MNTREC
         3 000216   440002 713400                    CLIMB   alt,+16386
         3 000217   401400 401760                    pmme    nvectors=4
         3 000220   000263 702000 3                  TSX2    OH_NO

      300     3932    2         END;

   3932  3 000221   000162 710000 3                  TRA     s:3924

      301     3933
      302     3934
      303     3935        /*F*  NAME: FUM$DE_MNTREC
      304     3936              Purpose:
      305     3937                    To delete a given mount entry from etc:rmtab.  If the entry exists
      306     3938                    more than once, we only delete one occurance.
      307     3939        */
      308     3940        /*D*  NAME: FUM$DE_MNTREC
      309     3941              Inputs:
      310     3942                    RQSCTX - contains the mount entry to delete.
      311     3943              Outputs:
      312     3944                    etc:rmtab (file) - updated.
      313     3945        */
      314     3946    1   FUM$DE_MNTREC: ENTRY (RQSCTX) ALTRET;

   3946  3 000222   000000 700200 xent  FUM$DE_MNTR* TSX0  ! X66_AUTO_1
         3 000223   000014 000001                    ZERO    12,1

      315     3947
      316     3948    1      CALL BUILD_KEY;
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:50   

   3948  3 000224   000264 701000 3                  TSX1    BUILD_KEY
         3 000225   000000 011000                    NOP     0

      317     3949    1      CALL M$READ (RD_MNTREC)

   3949  3 000226   000014 630400 1                  EPPR0   RD_MNTREC
         3 000227   440000 713400                    CLIMB   alt,read
         3 000230   401400 401760                    pmme    nvectors=4
         3 000231   000233 702000 3                  TSX2    s:3951
         3 000232   000242 710000 3                  TRA     s:3954

      318     3950    2      WHENALTRETURN DO;

      319     3951    2         IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$EOF THEN GOTO OK;

   3951  3 000233   000000 470400 xsym               LDP0    B$TCB$
         3 000234   000000 471500                    LDP1    0,,PR0
         3 000235   100102 236100                    LDQ     66,,PR1
         3 000236   377770 376007                    ANQ     131064,DL
         3 000237   000060 116007                    CMPQ    48,DL
         3 000240   000262 600000 3                  TZE     OK

      320     3952    2         MNTREC.COUNT = 0;

   3952  3 000241   000105 450000 1                  STZ     MNTREC

      321     3953    2         END;

      322     3954    1      MNTREC.COUNT = MNTREC.COUNT - 1;

   3954  3 000242   000001 336007                    LCQ     1,DL
         3 000243   000105 056000 1                  ASQ     MNTREC

      323     3955    1      IF MNTREC.COUNT <= 0 THEN

   3955  3 000244   000252 605400 3                  TPNZ    s:3958
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:51   

      324     3956    1         CALL M$DELREC (DE_MNTREC) ALTRET (OH_NO);

   3956  3 000245   000032 630400 1                  EPPR0   DE_MNTREC
         3 000246   440002 713400                    CLIMB   alt,+16386
         3 000247   401400 401760                    pmme    nvectors=4
         3 000250   000263 702000 3                  TSX2    OH_NO
         3 000251   000261 710000 3                  TRA     s:3961

      325     3957    2      ELSE DO;

      326     3958    2         CALL M$TIME(FPT_TIME);

   3958  3 000252   000044 630400 1                  EPPR0   FPT_TIME
         3 000253   020004 713400                    CLIMB   8196
         3 000254   402000 401760                    pmme    nvectors=5

      327     3959    2         CALL M$WRITE (WR_MNTREC) ALTRET (OH_NO);

   3959  3 000255   000000 630400 1                  EPPR0   WR_MNTREC
         3 000256   440001 713400                    CLIMB   alt,write
         3 000257   401400 401760                    pmme    nvectors=4
         3 000260   000263 702000 3                  TSX2    OH_NO

      328     3960    2         END;

      329     3961    1      GOTO OK;

   3961  3 000261   000262 710000 3                  TRA     OK

      330     3962
      331     3963    1   OK:
      332     3964    1      RETURN;

   3964  3 000262   000000 702200 xent  OK           TSX2  ! X66_ARET

      333     3965
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:52   
      334     3966    1   OH_NO:
      335     3967    1      ALTRETURN;

   3967  3 000263   000000 702200 xent  OH_NO        TSX2  ! X66_AALT

      336     3968
      337     3969        /*I*  NAME:    BUILD_KEY
      338     3970              Purpose: To build a key to reference into etc:rmtab.  The key is made of
      339     3971                       two textc strings; one for the host name and one for the CP6
      340     3972                       file system name.  MNTKEY.LEN is the length of the entire thing.
      341     3973              Inputs:  RQSCTX - contains host name and filesystem name.
      342     3974              Outputs: MNTKEY - contains the expected key.
      343     3975        */
      344     3976    1   BUILD_KEY: PROC;

   3976  3 000264   200010 741300       BUILD_KEY    STX1  ! WLEN+1,,AUTO

      345     3977    2   DCL H$ PTR;
      346     3978
      347     3979    2      MNTKEY.TXT = ' ';

   3979  3 000265   040000 100400                    MLR     fill='040'O
         3 000266   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000267   000060 200120 1                  ADSC9   MNTKEY                   cn=1,n=80

      348     3980    2      H$ = RQSCTX.UCTX$->FU$UCTX.HCTX$;    /* save some typing                   */

   3980  3 000270   200003 470500                    LDP0    @RQSCTX,,AUTO
         3 000271   000004 471500                    LDP1    4,,PR0
         3 000272   100001 236100                    LDQ     1,,PR1
         3 000273   200011 756100                    STQ     H$,,AUTO

      349     3981
      350     3982           /* The key is made of two textc strings; one for the
      351     3983              host name and one for the CP6 file system name.
      352     3984              MNTKEY.LEN is the length of the entire thing.    */
      353     3985
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:53   
      354     3986    2      KEY$ = ADDR(MNTKEY.TXT);

   3986  3 000274   000000 236000 4                  LDQ     0
         3 000275   200004 756100                    STQ     KEY$,,AUTO

      355     3987    2      KEY$->TEXTC.L = H$->FU$HCTX.NAME.L;

   3987  3 000276   200011 473500                    LDP3    H$,,AUTO
         3 000277   200004 474500                    LDP4    KEY$,,AUTO
         3 000300   000100 101500                    MRL     fill='000'O
         3 000301   300030 000004                    ADSC9   24,,PR3                  cn=0,n=4
         3 000302   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1

      356     3988    2      KEY$->TEXTC.T = H$->FU$HCTX.NAME.T;

   3988  3 000303   000100 101500                    MRL     fill='000'O
         3 000304   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         3 000305   200012 000002                    ADSC9   H$+1,,AUTO               cn=0,n=2
         3 000306   200012 220100                    LDX0    H$+1,,AUTO
         3 000307   300030 721100                    LXL1    24,,PR3
         3 000310   040140 100540                    MLR     fill='040'O
         3 000311   300031 000011                    ADSC9   25,,PR3                  cn=0,n=*X1
         3 000312   400000 200010                    ADSC9   0,,PR4                   cn=1,n=*X0

      357     3989    2      KEY$ = PINCRC(KEY$,H$->FU$HCTX.NAME.L+1);

   3989  3 000313   300030 236100                    LDQ     24,,PR3
         3 000314   000020 736000                    QLS     16
         3 000315   200000 036007                    ADLQ    65536,DL
         3 000316   200004 036100                    ADLQ    KEY$,,AUTO
         3 000317   200004 756100                    STQ     KEY$,,AUTO

      358     3990    2      KEY$->TEXTC.L = RQSCTX.BODY$->TEXTW.L;

   3990  3 000320   000003 471500                    LDP1    3,,PR0
         3 000321   200004 474500                    LDP4    KEY$,,AUTO
         3 000322   000100 101500                    MRL     fill='000'O
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:54   
         3 000323   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         3 000324   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1

      359     3991    2      KEY$->TEXTC.T = RQSCTX.BODY$->TEXTW.T;

   3991  3 000325   000100 101500                    MRL     fill='000'O
         3 000326   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         3 000327   200012 000002                    ADSC9   H$+1,,AUTO               cn=0,n=2
         3 000330   200012 220100                    LDX0    H$+1,,AUTO
         3 000331   000003 471500                    LDP1    3,,PR0
         3 000332   100000 721100                    LXL1    0,,PR1
         3 000333   040140 100540                    MLR     fill='040'O
         3 000334   100001 000011                    ADSC9   1,,PR1                   cn=0,n=*X1
         3 000335   400000 200010                    ADSC9   0,,PR4                   cn=1,n=*X0

      360     3992    2      MNTKEY.LEN = H$->FU$HCTX.NAME.L + RQSCTX.BODY$->TEXTW.L + 2;

   3992  3 000336   000003 471500                    LDP1    3,,PR0
         3 000337   300030 236100                    LDQ     24,,PR3
         3 000340   100000 036100                    ADLQ    0,,PR1
         3 000341   000002 036007                    ADLQ    2,DL
         3 000342   000033 736000                    QLS     27
         3 000343   000060 552040 1                  STBQ    MNTKEY,'40'O

      361     3993
      362     3994    2   END BUILD_KEY;

   3994  3 000344   200010 221300                    LDX1  ! WLEN+1,,AUTO
         3 000345   000001 702211                    TSX2  ! 1,X1
      363     3995    1   END FUM$RMTAB;

PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:55   
--  Include file information  --

   XSL_SOCKET_M.:LIBRARY  is referenced.
   XSL_SOCKET_E.:LIBRARY  is referenced.
   XSL_PERR_C.:LIBRARY  is referenced.
   FU_NFSSUBS_C.:FUA2TOU  is referenced.
   FU_NFS_M.:FUA2TOU  is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FUM$RMTAB.
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:56   

 **** Variables and constants ****

  ****  Section 001  Data  FUM$RMTAB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    32-0-0/d STRC(360)   r     1 DE_MNTREC                 44-0-0/d STRC(432)   r     1 FPT_TIME
    60-0-0/c STRC(729)   r     1 MNTKEY                   105-0-0/w STRC(72)    r     1 MNTREC
    14-0-0/d STRC(504)   r     1 RD_MNTREC                  0-0-0/d STRC(432)   r     1 WR_MNTREC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @RQSCTX                    6-0-0/w UBIN        r     1 CLEN
    11-0-0/w PTR         r     1 H$                         4-0-0/w PTR         r     1 KEY$
     5-0-0/w PTR         r     1 REPLY$                    *0-0-0/w STRC(74556) r     1 RQSCTX
     7-0-0/w UBIN        r     1 WLEN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$RMTAB                    0-0-0/w ASTR(900)   r     1 FU$HCTX
     0-0-0/w STRC(1296)  r     1 FU$UCTX                    0-0-0/c ASTR(9)     r     1 KEY
     0-0-0/w ASTR        r     1 STRING                     0-0-0/c ASTR(9)     r     1 TEXTC
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:57   
     0-0-0/w ASTR        r     1 TEXTW


   Procedure FUM$RMTAB requires 230 words for executable code.
   Procedure FUM$RMTAB requires 12 words of local(AUTO) storage.

    No errors detected in file FUM$MOUNT.:FUA2TSI    .
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:58   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:59   
          MINI XREF LISTING

B$ALT.CODE
      3438**DCL      3438--REDEF    3439--REDEF    3439--REDEF
B$ALT.ERR.CODE
      3440**DCL      3866>>IF       3926>>IF       3951>>IF
B$ALT.ERR.ERR#
      3440**DCL      3440--REDEF
B$ALT.EVID
      3439**DCL      3439--REDEF    3439--REDEF
B$TCB.ALT$
      3434**DCL      3866>>IF       3926>>IF       3951>>IF
B$TCB$
      3445**DCL      3866>>IF       3926>>IF       3951>>IF
BUILD_KEY
      3976**PROC     3900--CALL     3948--CALL
CLEN
      3846**DCL      3839--IMP-SIZ  3871<<ASSIGN   3872>>ASSIGN   3873>>ASSIGN   3874>>ASSIGN   3878>>ASSIGN
      3879<<ASSIGN   3880>>ASSIGN   3881>>ASSIGN   3882>>ASSIGN
DE_MNTREC
      3702**DCL      3931<>CALL     3956<>CALL
DE_MNTREC.V
      3705**DCL      3702--DCLINIT
F$RMTAB.ACTPOS
      3784**DCL      3784--REDEF
F$RMTAB.ARS#
      3743**DCL      3743--REDEF
F$RMTAB.ATTR#
      3773**DCL      3773--REDEF    3775--REDEF
F$RMTAB.BORROW
      3795**DCL      3795--REDEF    3795--REDEF    3795--REDEF
F$RMTAB.DCBNAME.L
      3814**DCL      3814--IMP-SIZ
F$RMTAB.EOMCHAR#
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:60   
      3750**DCL      3751--REDEF
F$RMTAB.FLDID
      3787**DCL      3788--REDEF
F$RMTAB.FORM$
      3779**DCL      3779--REDEF
F$RMTAB.FSECT
      3802**DCL      3802--REDEF
F$RMTAB.FSN#
      3769**DCL      3769--REDEF    3769--REDEF    3770--REDEF
F$RMTAB.HEADER$
      3778**DCL      3779--REDEF
F$RMTAB.IXTNSIZE#
      3775**DCL      3776--REDEF
F$RMTAB.LASTSTA$
      3759**DCL      3759--REDEF
F$RMTAB.LVL
      3796**DCL      3796--REDEF
F$RMTAB.NAME#.C
      3759**DCL      3760--REDEF
F$RMTAB.NOEOF
      3791**DCL      3791--REDEF
F$RMTAB.NRECS#
      3776**DCL      3776--REDEF
F$RMTAB.NRECX
      3803**DCL      3803--REDEF
F$RMTAB.OHDR
      3792**DCL      3792--REDEF
F$RMTAB.ORG#
      3767**DCL      3768--REDEF
F$RMTAB.PRECNO
      3800**DCL      3800--REDEF
F$RMTAB.RCSZ
      3808**DCL      3808--REDEF
F$RMTAB.RES#
      3761**DCL      3761--REDEF
F$RMTAB.SETX
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:61   
      3780**DCL      3780--REDEF
F$RMTAB.TAB$
      3779**DCL      3779--REDEF
F$RMTAB.TDA
      3799**DCL      3800--REDEF
F$RMTAB.WSN#
      3761**DCL      3762--REDEF
FPT_TIME
      3725**DCL      3905<>CALL     3958<>CALL
FPT_TIME.V
      3729**DCL      3725--DCLINIT
FU$HCTX.NAME.L
      3520**DCL      3521--IMP-SIZ  3930>>IF       3987>>ASSIGN   3988>>ASSIGN   3989>>ASSIGN   3992>>ASSIGN
FU$HCTX.NAME.T
      3521**DCL      3930>>IF       3988>>ASSIGN
FU$UCTX.FFLG#
      3492**DCL      3492--REDEF
FU$UCTX.FILEPOS
      3496**DCL      3497--REDEF
FU$UCTX.FILEPOS.FOFFSET
      3496**DCL      3497--REDEF
FU$UCTX.HCTX$
      3466**DCL      3930>>IF       3930>>IF       3980>>ASSIGN
H$ IN PROCEDURE BUILD_KEY
      3977**DCL      3980<<ASSIGN   3987>>ASSIGN   3988>>ASSIGN   3988>>ASSIGN   3989>>ASSIGN   3992>>ASSIGN
KEY
      3836**DCL      3878--ASSIGN
KEY.L
      3837**DCL      3871>>ASSIGN   3879>>ASSIGN
KEY.T
      3838**DCL      3874>>ASSIGN   3882>>ASSIGN
KEY$
      3817**DCL      3832--IMP-PTR  3836--IMP-PTR  3870<<ASSIGN   3871>>ASSIGN   3874>>ASSIGN   3878<<ASSIGN
      3878>>ASSIGN   3879>>ASSIGN   3882>>ASSIGN   3929<<ASSIGN   3930>>IF       3930>>IF       3986<<ASSIGN
      3987>>ASSIGN   3988>>ASSIGN   3988>>ASSIGN   3989<<ASSIGN   3989>>ASSIGN   3990>>ASSIGN   3991>>ASSIGN
      3991>>ASSIGN
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:62   
M$DELREC
        24**DCL-ENT  3931--CALL     3956--CALL
M$READ
        23**DCL-ENT  3864--CALL     3901--CALL     3924--CALL     3949--CALL
M$TIME
        89**DCL-ENT  3905--CALL     3958--CALL
M$WRITE
        23**DCL-ENT  3907--CALL     3959--CALL
MNTKEY
      3820**DCL      3633--DCLINIT  3667--DCLINIT  3668--DCLINIT  3702--DCLINIT  3703--DCLINIT
MNTKEY.LEN
      3821**DCL      3992<<ASSIGN
MNTKEY.TXT
      3822**DCL      3870--ASSIGN   3929--ASSIGN   3979<<ASSIGN   3986--ASSIGN
MNTREC
      3824**DCL      3634--DCLINIT  3635--DCLINIT  3669--DCLINIT  3670--DCLINIT
MNTREC.COUNT
      3825**DCL      3903<<ASSIGN   3906<<ASSIGN   3906>>ASSIGN   3952<<ASSIGN   3954<<ASSIGN   3954>>ASSIGN
      3955>>IF
MNTREC.TIME
      3826**DCL      3729--DCLINIT
OH_NO
      3967**LABEL    3866--GOTO     3907--CALLALT  3926--GOTO     3931--CALLALT  3956--CALLALT  3959--CALLALT
OK
      3964**LABEL    3908--GOTO     3951--GOTO     3961--GOTO
RD_MNTREC
      3667**DCL      3864<>CALL     3901<>CALL     3924<>CALL     3949<>CALL
RD_MNTREC.STATION_
      3670**DCL      3671--REDEF
RD_MNTREC.V
      3671**DCL      3667--DCLINIT
RD_MNTREC.V.DVBYTE.REREAD#
      3682**DCL      3682--REDEF
RD_MNTREC.V.INDX#
      3680**DCL      3680--REDEF
RD_MNTREC.V.KEYR#
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:63   
      3672**DCL      3862<<ASSIGN   3922<<ASSIGN
REPLY$
      3818**DCL      3828--IMP-PTR  3841--IMP-PTR  3860<<ASSIGN   3873>>ASSIGN   3874>>ASSIGN   3876<<ASSIGN
      3876>>ASSIGN   3881>>ASSIGN   3882>>ASSIGN   3884<<ASSIGN   3884>>ASSIGN
RQSCTX
      3537**DCL        11--PROC     3858--ENTRY    3898--ENTRY    3920--ENTRY    3946--ENTRY
RQSCTX.BODY$
      3541**DCL      3990>>ASSIGN   3991>>ASSIGN   3991>>ASSIGN   3992>>ASSIGN
RQSCTX.CALLHDR
      3598**DCL      3603--REDEF
RQSCTX.CALLHDR.AUTH_CRED
      3600**DCL      3602--REDEF
RQSCTX.CALLHDR.XID
      3598**DCL      3598--REDEF
RQSCTX.LEN
      3541**DCL      3861<<ASSIGN   3875<<ASSIGN   3875>>ASSIGN   3883<<ASSIGN   3883>>ASSIGN
RQSCTX.REPLYHDR.AUTH_VERF_HID
      3607**DCL      3607--REDEF    3607--REDEF
RQSCTX.REPLYHDR.PVERS_HIGH
      3609**DCL      3609--REDEF
RQSCTX.REPLYHDR.PVERS_LOW
      3608**DCL      3608--REDEF    3609--REDEF
RQSCTX.REPLYHDR.REJECT_STAT
      3604**DCL      3604--REDEF    3605--REDEF
RQSCTX.REPLYHDR.RESULT0
      3609**DCL      3867<<ASSIGN
RQSCTX.REPLYHDR.RESULT1
      3609**DCL      3860--ASSIGN
RQSCTX.REPLYHDR.VERS_HIGH
      3606**DCL      3606--REDEF    3606--REDEF
RQSCTX.REPLYHDR.VERS_LOW
      3605**DCL      3605--REDEF    3606--REDEF
RQSCTX.UCTX$
      3542**DCL      3930>>IF       3930>>IF       3980>>ASSIGN
STRING
      3841**DCL      3875--ASSIGN   3876--ASSIGN   3883--ASSIGN   3884--ASSIGN
PL6.E3A0      #002=FUM$RMTAB File=FUM$MOUNT.:FUA2TSI                             FRI 11/21/97 11:34 Page:64   
STRING.L
      3842**DCL      3873<<ASSIGN   3881<<ASSIGN
STRING.T
      3843**DCL      3874<<ASSIGN   3882<<ASSIGN
TEXTC.L
      3833**DCL      3834--IMP-SIZ  3930>>IF       3987<<ASSIGN   3988>>ASSIGN   3990<<ASSIGN   3991>>ASSIGN
TEXTC.T
      3834**DCL      3930>>IF       3988<<ASSIGN   3991<<ASSIGN
TEXTW.L
      3829**DCL      3830--IMP-SIZ  3990>>ASSIGN   3991>>ASSIGN   3992>>ASSIGN
TEXTW.T
      3830**DCL      3991>>ASSIGN
WLEN
      3847**DCL      3844--IMP-SIZ  3872<<ASSIGN   3874>>ASSIGN   3875>>ASSIGN   3876>>ASSIGN   3880<<ASSIGN
      3882>>ASSIGN   3883>>ASSIGN   3884>>ASSIGN
WR_MNTREC
      3633**DCL      3907<>CALL     3959<>CALL
WR_MNTREC.STATION_
      3635**DCL      3635--REDEF
WR_MNTREC.V
      3636**DCL      3633--DCLINIT
WR_MNTREC.V.DVBYTE.VFC#
      3642**DCL      3642--REDEF
