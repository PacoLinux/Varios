VERSION E05

PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:1    
        1        1        /*M*      KFM$MAINFRG - main frog routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR */
        8        8        /*F* NAME:          KFM$MAINFRG
        9        9             PURPOSE:       Main entry point for frog
       10       10             DESCRIPTION:   This routine is the main driver for frog.  After
       11       11                            initialization, this routine sits in a loop waiting for
       12       12                            events to occur.  When an event occurs, this routine
       13       13                            decides what routine to call to handle it.  At the
       14       14                            beginning of the wait loop, M$WAIT is called to wait
       15       15                            for 100 secs.
       16       16        */
       17       17        /*D* NAME:          KFM$MAINFRG
       18       18             CALL:          Frog entry point
       19       19             INPUT:         None
       20       20             OUTPUT:        None
       21       21             REFERENCES:    KF_EVMSG_QUEUE
       22       22                            KF_UTBLE
       23       23             INTERFACE:     KFI$INIT
       24       24                            KFF$USRTRM
       25       25                            KFB$DEL_TBL
       26       26                            KFB$BLD_TBL
       27       27                            KFF$FECGMSG
       28       28                            KFC$CSCGMSG
       29       29                            KFE$ERP
       30       30                            KFE$ERRTXT
       31       31                            M$WAIT
       32       32                            M$READ
       33       33                            M$USRFIELD
       34       34                            M$CLOSE
       35       35             DESCRIPTION:   Call KFI$INIT to perform initialization.  Do initial
       36       36                            reads to fecg and cscg.  These are no-wait reads.  When
       37       37                            something happens, KFA$ASYNC will be entered.  Kfa will
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:2    
       38       38                            move some data in the event queue (KF_EVMSG_QUEUE) and
       39       39                            increment a count.
       40       40                                 Do a M$WAIT for 100 seconds.  After returning from
       41       41                            wait, call M$USRFIELD to clear an field in the jit.
       42       42                            This field is used to keep count of the # of times frog
       43       43                            has aborted.  This call clears that field so that only
       44       44                            if frog aborts rapidly, it will do a screech.
       45       45                                 Check if we need to perform a read to cscg.  This
       46       46                            is here because the initial need to cscg might have
       47       47                            failed because frog was brought in at boot time before
       48       48                            keyin.  Check the count of events.  This count is
       49       49                            incremented by kfa.  If non-zero, at least one event
       50       50                            has occured and kfa has put the event info on the event
       51       51                            queue.  KF_QREMOVE points the first event to be
       52       52                            processed.
       53       53                                 The event id is taken from the q and a do-case is
       54       54                            performed.  For an open event, check the subtype to
       55       55                            determine what occured.  Frog is administrative user
       56       56                            for the fecg and gets an event everytime someone opens
       57       57                            or closes to the fecg.
       58       58                                 For a terminal open, (a process in an fep), frog
       59       59                            call KFB$BLD_TBL to build an entry in the user table.
       60       60                            A bit is set in the table to indicate that this process
       61       61                            just opened.  Stats checks this bit to decide when to
       62       62                            perform some stuff (see KFS$STATS).
       63       63                                 For a dcb open, (a program in the host), frog
       64       64                            calls KFB$BLD_TBL to build an entry in the user table.
       65       65                                 For a terminal close call KFF$USRTM to send msg to
       66       66                            all dcbs connected to frog informing them that a
       67       67                            terminal went away.  Then call a routine to delete this
       68       68                            user from the user table
       69       69                                 for a dcb close, call KFF$USRTRM to inform all
       70       70                            feps that a user went away.  Then call KFB$DEL_TBL to
       71       71                            delete this user from the user table.
       72       72                                 For a fecg read complete event, call KFF$FECGMSG
       73       73                            to process the msg in the fecg read buffer.  Then issue
       74       74                            another read.
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:3    
       75       75                                 For a cscg read complete event, call KFC$CSCGMSG
       76       76                            to process the msg in the cscg read buffer.  Then issue
       77       77                            another read.
       78       78                                 The end of the do case, update the KF_QREMOVE
       79       79                            pointer and check if event count is non-zero, if so,
       80       80                            start at top of do case, otherwise drop to end of do
       81       81                            while.  If the run flag has been turned off by a
       82       82                            killfrog command, drop out of the do while, otherwise
       83       83                            go to top of do while and go to sleep.
       84       84        */
       85       85        KFM$MAINFRG: PROC MAIN;
       86       86        %INCLUDE CP_6;
       87      167        %INCLUDE KF$SUBS;
       88      234        %INCLUDE KF$MSG_C;
       89      301        %INCLUDE KF_DAT_R;
       90      320        %INCLUDE F$DCB;
       91      369        %INCLUDE JG_EVID_C;
       92      594        /**/
       93      595        /**/
       94      596        %FPT_READ (FPTN=RDFECGNW,DCB=M$FE,BUF=KF_FECGBUF,WAIT=NO,
       95      597                 EVENT=%EV_READ_FECG##,STATION=VLP_STAFE);
       96      636        %VLP_STATION (FPTN=VLP_STAFE,DIRONLY=YES);
       97      663        /**/
       98      664        %FPT_READ (FPTN=RDCSCGNW,DCB=M$CS,BUF=KF_CSCG_INBUF,
       99      665                 WAIT=NO,EVENT=%EV_READ_CSCG##,STATION=VLP_STACS);
      100      704        %VLP_STATION (FPTN=VLP_STACS,DIRONLY=YES);
      101      731        %VLP_STATION (FPTN=Y$VLP_STA,STCLASS=BASED);
      102      758        /**/
      103      759        %EQU_CG;
      104      807        %B$CGAURD;
      105      826        %SUB_EXC;
      106      873        /**/
      107      874        /**/
      108      875        %FPT_CLOSE (FPTN=CLSFECG,DCB=M$FE);
      109      917        /**/
      110      918        %FPT_CLOSE (FPTN=CLSCSCG,DCB=M$CS);
      111      960        /**/
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:4    
      112      961        %FPT_WAIT (FPTN=CGWAIT,UNITS=100);
      113      975        /**/
      114      976        %FPT_USRFIELD (FIELD0=0,USER=YES);
      115      993        %FPT_EXTEND (FPTN=EXTEND_FECG,
      116      994                      SIZ=50,
      117      995                      DCB=M$FE);
      118     1009        %FPT_CGCTL (DCB=M$FE,
      119     1010                    CGCP=VLP_CGCP);
      120     1033        %VLP_CGCP (STCLASS=STATIC,
      121     1034                   TRMRDSIZ=512,
      122     1035                   DISKWARN=25,
      123     1036                   MEMWARN=25,
      124     1037                   MAXPG=50,
      125     1038                   DATAPGS=10,
      126     1039                   MXACT=100,
      127     1040                   MAXMC=2048,
      128     1041                   DEFERBLKS=30,
      129     1042                   XSTALGL=YES,
      130     1043                   TERMCONAU=YES,
      131     1044                   DCBCONAU=YES,
      132     1045                   TERMCONNAU=YES,
      133     1046                   DCBCONNAU=YES,
      134     1047                   AUCONTERM=NC,
      135     1048                   AUCONDCB=NC,
      136     1049                   AUDCONTERM=NC,
      137     1050                   AUDCONDCB=DEACTIVATE,
      138     1051                   WAS=NO,
      139     1052                   RAS=NO,
      140     1053                   SMD=NO,
      141     1054                   CONMSG=YES,
      142     1055                   SECURE=NO,
      143     1056                   INPUT=YES,
      144     1057                   OUTPUT=YES,
      145     1058                   REREAD=NO,
      146     1059                   BIN=NO,
      147     1060                   TRANS=YES,
      148     1061                   TERMCONLGL=YES,
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:5    
      149     1062                   DCBCONLGL=YES,
      150     1063                   XTYPLGL=YES);
      151     1106        %FPT_RESCTL (RPSN=VLP_RPSN);
      152     1123        %VLP_RPSN (DISP=REL,N=20);
      153     1138        /**/
      154     1139        /**/
      155     1140        /**/
      156     1141        /**/
      157     1142    1   DCL Y_INIT_CSCG_READ_FLG UBIN WORD STATIC INIT(0);
      158     1143    1   DCL Y$INDEX UBIN WORD;
      159     1144    1   DCL Y$LPAR$ PTR;
      160     1145    1   DCL Y$LFLGS UBIN WORD;
      161     1146    1   DCL Y$TDTYP UBIN WORD;
      162     1147    1   DCL Y$STA CHAR(8);
      163     1148    1   DCL Y$EVID UBIN WORD;
      164     1149    1   DCL Y$BUF$ PTR;
      165     1150    1   DCL Y$UID UBIN WORD;
      166     1151    1   DCL Y$FEX UBIN WORD;
      167     1152    1   DCL ERR_CNT UBIN(36) STATIC INIT(0);
      168     1153    1   DCL 1 EMSG STATIC,
      169     1154    1         2 * CHAR(4) UNAL INIT('KFM$'),
      170     1155    1         2 NUM CHAR(4) UNAL INIT('    ');
      171     1156        /**/
      172     1157        /**/
      173     1158        /**/
      174     1159        /**/
      175     1160    1   DCL KFE$ERP ENTRY(1);
      176     1161    1   DCL KFI$INIT ENTRY;
      177     1162    1   DCL KFB$DEL_TBL ENTRY(1);
      178     1163    1   DCL KFB$BLD_TBL ENTRY(4);
      179     1164    1   DCL KFF$FECGMSG ENTRY;
      180     1165    1   DCL KFC$CSCGMSG ENTRY;
      181     1166    1   DCL KFE$ERRTXT ENTRY(1);
      182     1167    1   DCL KFF$USRTRM ENTRY(1);
      183     1168        %EJECT;
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:6    
      184     1169    1           CALL KFI$INIT;
      185     1170    2           DO WHILE (KF_RUN_FLAG = 1);
      186     1171    2              CALL SLEEP ALTRET(BDRD);
      187     1172    3              DO CASE(KF_EVMSG_QUEUE.SCOD(KF_QREMOVE));
      188     1173    3               CASE(%SUBC_IO#);
      189     1174    4                 DO CASE(KF_EVMSG_QUEUE.EVID(KF_QREMOVE));
      190     1175    4                  CASE(%EV_READ_FECG##);
      191     1176    4                    IF DCBADDR(DCBNUM(M$FE))->F$DCB.LASTSTA$->
      192     1177    5                      Y$VLP_STA.MSGTYP# = '*AUEV' THEN DO;
      193     1178    5                       Y$BUF$ = ADDR(KF_FECGBUF);
      194     1179    5                       Y$EVID = Y$BUF$->B$CGAURD.EVENT;
      195     1180    6                       DO CASE(Y$EVID);
      196     1181    6                        CASE(%CG_WARN#);   /* RUNNING OUT OF SPACE */
      197     1182    6                          CALL M$EXTEND(EXTEND_FECG) ALTRET(KEEP_GOING);
      198     1183    6                          VLP_CGCP.MAXPG# = VLP_CGCP.MAXPG# + 25;
      199     1184    6                          CALL M$CGCTL(FPT_CGCTL) ALTRET(KEEP_GOING);
      200     1185    6                        CASE(%CG_DOPN#);   /*DCB OPENED*/
      201     1186    6                          Y$STA = Y$BUF$->B$CGAURD.STATION;
      202     1187    6                          Y$TDTYP = Y$EVID;
      203     1188    6                          Y$LFLGS = Y$BUF$->B$CGAURD.INFO;
      204     1189    6                          CALL KFB$BLD_TBL(Y$STA,Y$TDTYP,Y$LFLGS,Y$UID);
      205     1190    6                        CASE(%CG_DCLS#);   /*DCB CLOSED*/
      206     1191    6                          Y$STA = Y$BUF$->B$CGAURD.STATION;
      207     1192    6                          CALL KFF$USRTRM(Y$STA);
      208     1193    6                          CALL KFB$DEL_TBL(Y$STA);
      209     1194    6                        CASE(%CG_TCON#);   /*TERM (FEP) CONNECT*/
      210     1195    6                          Y$STA = Y$BUF$->B$CGAURD.STATION;
      211     1196    6                          Y$TDTYP = Y$EVID;
      212     1197    6                          Y$LFLGS = Y$BUF$->B$CGAURD.INFO;
      213     1198    6                          CALL KFB$BLD_TBL(Y$STA,Y$TDTYP,Y$LFLGS,Y$UID);
      214     1199    6                          Y$FEX = KF_UTBL.FEX(Y$UID);
      215     1200    6                        CASE(%CG_TDSC#);   /*TERM (FEP) DISCONNECT*/
      216     1201    6                          Y$STA = Y$BUF$->B$CGAURD.STATION;
      217     1202    6                          CALL KFF$USRTRM(Y$STA);
      218     1203    6                          CALL KFB$DEL_TBL(Y$STA);
      219     1204    6                        END;               /*END OF DO CASE*/
      220     1205    5                       END;                /*END OF IF*/
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:7    
      221     1206    5                    ELSE DO;
      222     1207    5                       CALL KFF$FECGMSG;
      223     1208    5                       END;
      224     1209    4                    KF_FECG_READ = '0'B;
      225     1210    4                  CASE(%EV_READ_CSCG##);
      226     1211    4                    CALL KFC$CSCGMSG;
      227     1212    4                    KF_CSCG_READ = '0'B;
      228     1213    4                  CASE(ELSE);
      229     1214    4                    GOTO BDEV;
      230     1215    4                  END;                     /* DO CASE                  */
      231     1216    3               CASE(JG_SETDSMT#);          /* Release Packsets */
      232     1217    4                 CALL M$DISPRES(FPT_RESCTL) WHENALTRETURN DO; END;
      233     1218    4                 CALL M$RELRES(FPT_RESCTL) WHENALTRETURN DO; END;
      234     1219    3               CASE(ELSE);
      235     1220    3                 GOTO BDEV;
      236     1221    3               END;
      237     1222    2   KEEP_GOING:
      238     1223    2              END;                         /* DO WHILE KF_RUN_FLAG = 1 */
      239     1224    1           CALL KFE$ERRTXT('KFM$RNOF');    /* RUN FLAG TURNED OFF      */
      240     1225    1           CALL M$CLOSE (CLSFECG) ALTRET(NEXT);
      241     1226    1   NEXT:   CALL M$CLOSE (CLSCSCG) ALTRET(NEXT2);
      242     1227    1   NEXT2:  RETURN;
      243     1228        /**/
      244     1229        /*        ENTER HERE FOR ERRORS         */
      245     1230        /**/
      246     1231    1   BDEV:   CALL KFE$ERRTXT('KFM$BDEV');
      247     1232    1           RETURN;
      248     1233        /**/
      249     1234    1   BDRD:   ERR_CNT = ERR_CNT + 1;
      250     1235    1           CALL BINCHAR(EMSG.NUM,ERR_CNT);
      251     1236    1           CALL KFE$ERP (EMSG);
      252     1237    1           CALL M$CLOSE (CLSFECG) ALTRET(BDCLS);
      253     1238    1   BDCLS:  CALL M$CLOSE (CLSCSCG) ALTRET(BDCLS2);
      254     1239    1   BDCLS2:
      255     1240    1           RETURN;
      256     1241        %EJECT;
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:8    
      257     1242    1   SLEEP:  PROC ALTRET;
      258     1243        %FPT_TRUNC (FPTN = TRNETCON , DCB = M$NETCON , STCLASS = CONSTANT);
      259     1257        %FPT_TRUNC (FPTN = TRHLPF , DCB = M$HLPF , STCLASS = CONSTANT);
      260     1271        %FPT_TRUNC (FPTN = TRPROF , DCB = M$PROF , STCLASS = CONSTANT);
      261     1285    3           CALL M$TRUNC (TRNETCON) WHENALTRETURN DO; END;
      262     1286    3           CALL M$TRUNC (TRHLPF) WHENALTRETURN DO; END;
      263     1287    3           CALL M$TRUNC (TRPROF) WHENALTRETURN DO; END;
      264     1288    2   TOP:
      265     1289    3           IF NOT KF_FECG_READ THEN DO;
      266     1290    3              CALL M$READ(RDFECGNW) ALTRET(BAG_IT);
      267     1291    3              KF_FECG_READ = '1'B;
      268     1292    3              END;                         /* IF NOT KF_FECG_READ      */
      269     1293    3           IF NOT KF_CSCG_READ THEN DO;
      270     1294    3              CALL M$READ(RDCSCGNW) ALTRET(BAG_IT);
      271     1295    3              KF_CSCG_READ = '1'B;
      272     1296    3              END;                         /* IF NOT KF_CSCG_READ      */
      273     1297    3           DO INHIBIT;
      274     1298    4              IF KF_EVCOUNT = 0 THEN DO;
      275     1299    4                 CALL M$WAIT(CGWAIT);
      276     1300    4                 GOTO TOP;
      277     1301    4                 END;                      /* IF EVCOUNT = 0           */
      278     1302    4              ELSE DO;
      279     1303    4                 KF_EVCOUNT = KF_EVCOUNT - 1;
      280     1304    4                 IF KF_QREMOVE >= %KF_EVMAX##
      281     1305    4                 THEN KF_QREMOVE = 0;
      282     1306    4                 ELSE KF_QREMOVE = KF_QREMOVE + 1;
      283     1307    4                 RETURN;
      284     1308    4                 END;                      /* ELSE                     */
      285     1309    3              END;                         /* DO INHIBIT               */
      286     1310    2           RETURN;
      287     1311    2   BAG_IT: ALTRETURN;
      288     1312    2   END SLEEP;
      289     1313    1   END KFM$MAINFRG;
      290     1314        %EOD;

PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:9    
--  Include file information  --

   JG_EVID_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFM$MAINFRG.

   Procedure KFM$MAINFRG requires 266 words for executable code.
   Procedure KFM$MAINFRG requires 20 words of local(AUTO) storage.

PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:10   

 Object Unit name= KFM$MAINFRG                                File name= KFM$MAINFRG.:E05TOU
 UTS= JUL 30 '97 00:24:06.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$FE
    2   DCB   even  none     0      0  M$CS
    3   DCB   even  none     0      0  M$HLPF
    4   DCB   even  none     0      0  M$PROF
    5   DCB   even  none     0      0  M$NETCON
    6   Data  even  none   300    454  KFM$MAINFRG
    7  RoData even  UTS     18     22  KFM$MAINFRG
    8   Proc  even  none   266    412  KFM$MAINFRG
    9  RoData even  none     5      5  KFM$MAINFRG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes            yes      Main       0  KFM$MAINFRG
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:11   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KFI$INIT
         yes           Std       4 KFB$BLD_TBL
         yes           Std       0 KFC$CSCGMSG
         yes           Std       1 KFE$ERRTXT
         yes           Std       1 KFB$DEL_TBL
         yes           Std       0 KFF$FECGMSG
         yes           Std       1 KFE$ERP
         yes           Std       1 KFF$USRTRM
                       nStd      0 X66_MAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_MARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KF_EVMSG_QUEUE                        KF_QREMOVE
     KF_FECG_READ                          KF_CSCG_READ                          KF_EVCOUNT
     KF_RUN_FLAG                           KF_FECGBUF                            KF_CSCG_INBUF
     M$FE                                  M$CS                                  M$HLPF
     M$PROF                                M$NETCON                              KF_UTBL
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:12   


        1        1        /*M*      KFM$MAINFRG - main frog routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR */
        8        8        /*F* NAME:          KFM$MAINFRG
        9        9             PURPOSE:       Main entry point for frog
       10       10             DESCRIPTION:   This routine is the main driver for frog.  After
       11       11                            initialization, this routine sits in a loop waiting for
       12       12                            events to occur.  When an event occurs, this routine
       13       13                            decides what routine to call to handle it.  At the
       14       14                            beginning of the wait loop, M$WAIT is called to wait
       15       15                            for 100 secs.
       16       16        */
       17       17        /*D* NAME:          KFM$MAINFRG
       18       18             CALL:          Frog entry point
       19       19             INPUT:         None
       20       20             OUTPUT:        None
       21       21             REFERENCES:    KF_EVMSG_QUEUE
       22       22                            KF_UTBLE
       23       23             INTERFACE:     KFI$INIT
       24       24                            KFF$USRTRM
       25       25                            KFB$DEL_TBL
       26       26                            KFB$BLD_TBL
       27       27                            KFF$FECGMSG
       28       28                            KFC$CSCGMSG
       29       29                            KFE$ERP
       30       30                            KFE$ERRTXT
       31       31                            M$WAIT
       32       32                            M$READ
       33       33                            M$USRFIELD
       34       34                            M$CLOSE
       35       35             DESCRIPTION:   Call KFI$INIT to perform initialization.  Do initial
       36       36                            reads to fecg and cscg.  These are no-wait reads.  When
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:13   
       37       37                            something happens, KFA$ASYNC will be entered.  Kfa will
       38       38                            move some data in the event queue (KF_EVMSG_QUEUE) and
       39       39                            increment a count.
       40       40                                 Do a M$WAIT for 100 seconds.  After returning from
       41       41                            wait, call M$USRFIELD to clear an field in the jit.
       42       42                            This field is used to keep count of the # of times frog
       43       43                            has aborted.  This call clears that field so that only
       44       44                            if frog aborts rapidly, it will do a screech.
       45       45                                 Check if we need to perform a read to cscg.  This
       46       46                            is here because the initial need to cscg might have
       47       47                            failed because frog was brought in at boot time before
       48       48                            keyin.  Check the count of events.  This count is
       49       49                            incremented by kfa.  If non-zero, at least one event
       50       50                            has occured and kfa has put the event info on the event
       51       51                            queue.  KF_QREMOVE points the first event to be
       52       52                            processed.
       53       53                                 The event id is taken from the q and a do-case is
       54       54                            performed.  For an open event, check the subtype to
       55       55                            determine what occured.  Frog is administrative user
       56       56                            for the fecg and gets an event everytime someone opens
       57       57                            or closes to the fecg.
       58       58                                 For a terminal open, (a process in an fep), frog
       59       59                            call KFB$BLD_TBL to build an entry in the user table.
       60       60                            A bit is set in the table to indicate that this process
       61       61                            just opened.  Stats checks this bit to decide when to
       62       62                            perform some stuff (see KFS$STATS).
       63       63                                 For a dcb open, (a program in the host), frog
       64       64                            calls KFB$BLD_TBL to build an entry in the user table.
       65       65                                 For a terminal close call KFF$USRTM to send msg to
       66       66                            all dcbs connected to frog informing them that a
       67       67                            terminal went away.  Then call a routine to delete this
       68       68                            user from the user table
       69       69                                 for a dcb close, call KFF$USRTRM to inform all
       70       70                            feps that a user went away.  Then call KFB$DEL_TBL to
       71       71                            delete this user from the user table.
       72       72                                 For a fecg read complete event, call KFF$FECGMSG
       73       73                            to process the msg in the fecg read buffer.  Then issue
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:14   
       74       74                            another read.
       75       75                                 For a cscg read complete event, call KFC$CSCGMSG
       76       76                            to process the msg in the cscg read buffer.  Then issue
       77       77                            another read.
       78       78                                 The end of the do case, update the KF_QREMOVE
       79       79                            pointer and check if event count is non-zero, if so,
       80       80                            start at top of do case, otherwise drop to end of do
       81       81                            while.  If the run flag has been turned off by a
       82       82                            killfrog command, drop out of the do while, otherwise
       83       83                            go to top of do while and go to sleep.
       84       84        */
       85       85        KFM$MAINFRG: PROC MAIN;

     85  8 000000   000000 700200 xent  KFM$MAINFRG  TSX0  ! X66_MAUTO
         8 000001   000024 000000                    ZERO    20,0

       86       86        %INCLUDE CP_6;
       87      167        %INCLUDE KF$SUBS;
       88      234        %INCLUDE KF$MSG_C;
       89      301        %INCLUDE KF_DAT_R;
       90      320        %INCLUDE F$DCB;
       91      369        %INCLUDE JG_EVID_C;
       92      594        /**/
       93      595        /**/
       94      596        %FPT_READ (FPTN=RDFECGNW,DCB=M$FE,BUF=KF_FECGBUF,WAIT=NO,
       95      597                 EVENT=%EV_READ_FECG##,STATION=VLP_STAFE);
       96      636        %VLP_STATION (FPTN=VLP_STAFE,DIRONLY=YES);
       97      663        /**/
       98      664        %FPT_READ (FPTN=RDCSCGNW,DCB=M$CS,BUF=KF_CSCG_INBUF,
       99      665                 WAIT=NO,EVENT=%EV_READ_CSCG##,STATION=VLP_STACS);
      100      704        %VLP_STATION (FPTN=VLP_STACS,DIRONLY=YES);
      101      731        %VLP_STATION (FPTN=Y$VLP_STA,STCLASS=BASED);
      102      758        /**/
      103      759        %EQU_CG;
      104      807        %B$CGAURD;
      105      826        %SUB_EXC;
      106      873        /**/
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:15   
      107      874        /**/
      108      875        %FPT_CLOSE (FPTN=CLSFECG,DCB=M$FE);
      109      917        /**/
      110      918        %FPT_CLOSE (FPTN=CLSCSCG,DCB=M$CS);
      111      960        /**/
      112      961        %FPT_WAIT (FPTN=CGWAIT,UNITS=100);
      113      975        /**/
      114      976        %FPT_USRFIELD (FIELD0=0,USER=YES);
      115      993        %FPT_EXTEND (FPTN=EXTEND_FECG,
      116      994                      SIZ=50,
      117      995                      DCB=M$FE);
      118     1009        %FPT_CGCTL (DCB=M$FE,
      119     1010                    CGCP=VLP_CGCP);
      120     1033        %VLP_CGCP (STCLASS=STATIC,
      121     1034                   TRMRDSIZ=512,
      122     1035                   DISKWARN=25,
      123     1036                   MEMWARN=25,
      124     1037                   MAXPG=50,
      125     1038                   DATAPGS=10,
      126     1039                   MXACT=100,
      127     1040                   MAXMC=2048,
      128     1041                   DEFERBLKS=30,
      129     1042                   XSTALGL=YES,
      130     1043                   TERMCONAU=YES,
      131     1044                   DCBCONAU=YES,
      132     1045                   TERMCONNAU=YES,
      133     1046                   DCBCONNAU=YES,
      134     1047                   AUCONTERM=NC,
      135     1048                   AUCONDCB=NC,
      136     1049                   AUDCONTERM=NC,
      137     1050                   AUDCONDCB=DEACTIVATE,
      138     1051                   WAS=NO,
      139     1052                   RAS=NO,
      140     1053                   SMD=NO,
      141     1054                   CONMSG=YES,
      142     1055                   SECURE=NO,
      143     1056                   INPUT=YES,
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:16   
      144     1057                   OUTPUT=YES,
      145     1058                   REREAD=NO,
      146     1059                   BIN=NO,
      147     1060                   TRANS=YES,
      148     1061                   TERMCONLGL=YES,
      149     1062                   DCBCONLGL=YES,
      150     1063                   XTYPLGL=YES);
      151     1106        %FPT_RESCTL (RPSN=VLP_RPSN);
      152     1123        %VLP_RPSN (DISP=REL,N=20);
      153     1138        /**/
      154     1139        /**/
      155     1140        /**/
      156     1141        /**/
      157     1142    1   DCL Y_INIT_CSCG_READ_FLG UBIN WORD STATIC INIT(0);
      158     1143    1   DCL Y$INDEX UBIN WORD;
      159     1144    1   DCL Y$LPAR$ PTR;
      160     1145    1   DCL Y$LFLGS UBIN WORD;
      161     1146    1   DCL Y$TDTYP UBIN WORD;
      162     1147    1   DCL Y$STA CHAR(8);
      163     1148    1   DCL Y$EVID UBIN WORD;
      164     1149    1   DCL Y$BUF$ PTR;
      165     1150    1   DCL Y$UID UBIN WORD;
      166     1151    1   DCL Y$FEX UBIN WORD;
      167     1152    1   DCL ERR_CNT UBIN(36) STATIC INIT(0);
      168     1153    1   DCL 1 EMSG STATIC,
      169     1154    1         2 * CHAR(4) UNAL INIT('KFM$'),
      170     1155    1         2 NUM CHAR(4) UNAL INIT('    ');
      171     1156        /**/
      172     1157        /**/
      173     1158        /**/
      174     1159        /**/
      175     1160    1   DCL KFE$ERP ENTRY(1);
      176     1161    1   DCL KFI$INIT ENTRY;
      177     1162    1   DCL KFB$DEL_TBL ENTRY(1);
      178     1163    1   DCL KFB$BLD_TBL ENTRY(4);
      179     1164    1   DCL KFF$FECGMSG ENTRY;
      180     1165    1   DCL KFC$CSCGMSG ENTRY;
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:17   
      181     1166    1   DCL KFE$ERRTXT ENTRY(1);
      182     1167    1   DCL KFF$USRTRM ENTRY(1);
      183     1168        %EJECT;
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:18   
      184     1169    1           CALL KFI$INIT;

   1169  8 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000003   000000 701000 xent               TSX1    KFI$INIT
         8 000004   000000 011000                    NOP     0

      185     1170    2           DO WHILE (KF_RUN_FLAG = 1);

   1170  8 000005   000000 235000 xsym               LDA     KF_RUN_FLAG
         8 000006   000001 115007                    CMPA    1,DL
         8 000007   000257 601000 8                  TNZ     s:1224

      186     1171    2              CALL SLEEP ALTRET(BDRD);

   1171  8 000010   000326 701000 8                  TSX1    SLEEP
         8 000011   000301 702000 8                  TSX2    BDRD

      187     1172    3              DO CASE(KF_EVMSG_QUEUE.SCOD(KF_QREMOVE));

   1172  8 000012   000000 235000 xsym               LDA     KF_QREMOVE
         8 000013   000001 735000                    ALS     1
         8 000014   000001 235005 xsym               LDA     KF_EVMSG_QUEUE+1,AL
         8 000015   000011 115007                    CMPA    9,DL
         8 000016   000020 602005 8                  TNC     s:1172+6,AL
         8 000017   000253 710000 8                  TRA     s:1220
         8 000020   000253 710000 8                  TRA     s:1220
         8 000021   000031 710000 8                  TRA     s:1174
         8 000022   000253 710000 8                  TRA     s:1220
         8 000023   000253 710000 8                  TRA     s:1220
         8 000024   000253 710000 8                  TRA     s:1220
         8 000025   000253 710000 8                  TRA     s:1220
         8 000026   000253 710000 8                  TRA     s:1220
         8 000027   000253 710000 8                  TRA     s:1220
         8 000030   000240 710000 8                  TRA     s:1217

      188     1173    3               CASE(%SUBC_IO#);

PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:19   
      189     1174    4                 DO CASE(KF_EVMSG_QUEUE.EVID(KF_QREMOVE));

   1174  8 000031   000000 235000 xsym               LDA     KF_QREMOVE
         8 000032   000001 735000                    ALS     1
         8 000033   000000 235005 xsym               LDA     KF_EVMSG_QUEUE,AL
         8 000034   000004 115007                    CMPA    4,DL
         8 000035   000037 602005 8                  TNC     s:1174+6,AL
         8 000036   000237 710000 8                  TRA     s:1214
         8 000037   000237 710000 8                  TRA     s:1214
         8 000040   000237 710000 8                  TRA     s:1214
         8 000041   000043 710000 8                  TRA     s:1176
         8 000042   000232 710000 8                  TRA     s:1211

      190     1175    4                  CASE(%EV_READ_FECG##);

      191     1176    4                    IF DCBADDR(DCBNUM(M$FE))->F$DCB.LASTSTA$->

   1176  8 000043   000000 236007 xsym               LDQ     M$FE,DL
         8 000044   000000 470400 9                  LDP0    0
         8 000045   000000 471500                    LDP1    0,,PR0
         8 000046   100000 473506                    LDP3    0,QL,PR1
         8 000047   300007 474500                    LDP4    7,,PR3
         8 000050   040000 106500                    CMPC    fill='040'O
         8 000051   400002 000010                    ADSC9   2,,PR4                   cn=0,n=8
         8 000052   000014 000005 7                  ADSC9   TRPROF+4                 cn=0,n=5
         8 000053   000225 601000 8                  TNZ     s:1207

      192     1177    5                      Y$VLP_STA.MSGTYP# = '*AUEV' THEN DO;

      193     1178    5                       Y$BUF$ = ADDR(KF_FECGBUF);

   1178  8 000054   000001 236000 9                  LDQ     1
         8 000055   200012 756100                    STQ     Y$BUF$,,AUTO

      194     1179    5                       Y$EVID = Y$BUF$->B$CGAURD.EVENT;

   1179  8 000056   200012 473500                    LDP3    Y$BUF$,,AUTO
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:20   
         8 000057   300000 235100                    LDA     0,,PR3
         8 000060   200011 755100                    STA     Y$EVID,,AUTO

      195     1180    6                       DO CASE(Y$EVID);

   1180  8 000061   000012 115007                    CMPA    10,DL
         8 000062   000064 602005 8                  TNC     s:1180+3,AL
         8 000063   000230 710000 8                  TRA     s:1209
         8 000064   000112 710000 8                  TRA     s:1186
         8 000065   000135 710000 8                  TRA     s:1191
         8 000066   000155 710000 8                  TRA     s:1195
         8 000067   000205 710000 8                  TRA     s:1201
         8 000070   000224 710000 8                  TRA     s:1205
         8 000071   000224 710000 8                  TRA     s:1205
         8 000072   000224 710000 8                  TRA     s:1205
         8 000073   000224 710000 8                  TRA     s:1205
         8 000074   000224 710000 8                  TRA     s:1205
         8 000075   000076 710000 8                  TRA     s:1182

      196     1181    6                        CASE(%CG_WARN#);   /* RUNNING OUT OF SPACE */

      197     1182    6                          CALL M$EXTEND(EXTEND_FECG) ALTRET(KEEP_GOING);

   1182  8 000076   000164 630400 6                  EPPR0   EXTEND_FECG
         8 000077   440005 713400                    CLIMB   alt,+16389
         8 000100   400000 401760                    pmme    nvectors=1
         8 000101   000254 702000 8                  TSX2    KEEP_GOING

      198     1183    6                          VLP_CGCP.MAXPG# = VLP_CGCP.MAXPG# + 25;

   1183  8 000102   000262 220000 6                  LDX0    VLP_CGCP+6
         8 000103   000031 621010                    EAX1    25,X0
         8 000104   000262 741000 6                  STX1    VLP_CGCP+6

      199     1184    6                          CALL M$CGCTL(FPT_CGCTL) ALTRET(KEEP_GOING);

   1184  8 000105   000170 630400 6                  EPPR0   FPT_CGCTL
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:21   
         8 000106   500003 713400                    CLIMB   alt,+32771
         8 000107   411400 401760                    pmme    nvectors=20
         8 000110   000254 702000 8                  TSX2    KEEP_GOING
         8 000111   000230 710000 8                  TRA     s:1209

      200     1185    6                        CASE(%CG_DOPN#);   /*DCB OPENED*/

      201     1186    6                          Y$STA = Y$BUF$->B$CGAURD.STATION;

   1186  8 000112   040100 100500                    MLR     fill='040'O
         8 000113   300001 000010                    ADSC9   1,,PR3                   cn=0,n=8
         8 000114   200007 000010                    ADSC9   Y$STA,,AUTO              cn=0,n=8

      202     1187    6                          Y$TDTYP = Y$EVID;

   1187  8 000115   200006 755100                    STA     Y$TDTYP,,AUTO

      203     1188    6                          Y$LFLGS = Y$BUF$->B$CGAURD.INFO;

   1188  8 000116   300003 235100                    LDA     3,,PR3
         8 000117   200005 755100                    STA     Y$LFLGS,,AUTO

      204     1189    6                          CALL KFB$BLD_TBL(Y$STA,Y$TDTYP,Y$LFLGS,Y$UID);

   1189  8 000120   200013 634500                    EPPR4   Y$UID,,AUTO
         8 000121   200023 454500                    STP4    Y$FEX+7,,AUTO
         8 000122   200005 635500                    EPPR5   Y$LFLGS,,AUTO
         8 000123   200022 455500                    STP5    Y$FEX+6,,AUTO
         8 000124   200006 636500                    EPPR6   Y$TDTYP,,AUTO
         8 000125   200021 456500                    STP6    Y$FEX+5,,AUTO
         8 000126   200007 637500                    EPPR7   Y$STA,,AUTO
         8 000127   200020 457500                    STP7    Y$FEX+4,,AUTO
         8 000130   200020 630500                    EPPR0   Y$FEX+4,,AUTO
         8 000131   000022 631400 xsym               EPPR1   B_VECTNIL+18
         8 000132   000000 701000 xent               TSX1    KFB$BLD_TBL
         8 000133   000000 011000                    NOP     0
         8 000134   000230 710000 8                  TRA     s:1209
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:22   

      205     1190    6                        CASE(%CG_DCLS#);   /*DCB CLOSED*/

      206     1191    6                          Y$STA = Y$BUF$->B$CGAURD.STATION;

   1191  8 000135   040100 100500                    MLR     fill='040'O
         8 000136   300001 000010                    ADSC9   1,,PR3                   cn=0,n=8
         8 000137   200007 000010                    ADSC9   Y$STA,,AUTO              cn=0,n=8

      207     1192    6                          CALL KFF$USRTRM(Y$STA);

   1192  8 000140   200007 634500                    EPPR4   Y$STA,,AUTO
         8 000141   200020 454500                    STP4    Y$FEX+4,,AUTO
         8 000142   200020 630500                    EPPR0   Y$FEX+4,,AUTO
         8 000143   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000144   000000 701000 xent               TSX1    KFF$USRTRM
         8 000145   000000 011000                    NOP     0

      208     1193    6                          CALL KFB$DEL_TBL(Y$STA);

   1193  8 000146   200007 630500                    EPPR0   Y$STA,,AUTO
         8 000147   200020 450500                    STP0    Y$FEX+4,,AUTO
         8 000150   200020 630500                    EPPR0   Y$FEX+4,,AUTO
         8 000151   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000152   000000 701000 xent               TSX1    KFB$DEL_TBL
         8 000153   000000 011000                    NOP     0
         8 000154   000230 710000 8                  TRA     s:1209

      209     1194    6                        CASE(%CG_TCON#);   /*TERM (FEP) CONNECT*/

      210     1195    6                          Y$STA = Y$BUF$->B$CGAURD.STATION;

   1195  8 000155   040100 100500                    MLR     fill='040'O
         8 000156   300001 000010                    ADSC9   1,,PR3                   cn=0,n=8
         8 000157   200007 000010                    ADSC9   Y$STA,,AUTO              cn=0,n=8

      211     1196    6                          Y$TDTYP = Y$EVID;
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:23   

   1196  8 000160   200006 755100                    STA     Y$TDTYP,,AUTO

      212     1197    6                          Y$LFLGS = Y$BUF$->B$CGAURD.INFO;

   1197  8 000161   300003 235100                    LDA     3,,PR3
         8 000162   200005 755100                    STA     Y$LFLGS,,AUTO

      213     1198    6                          CALL KFB$BLD_TBL(Y$STA,Y$TDTYP,Y$LFLGS,Y$UID);

   1198  8 000163   200013 634500                    EPPR4   Y$UID,,AUTO
         8 000164   200023 454500                    STP4    Y$FEX+7,,AUTO
         8 000165   200005 635500                    EPPR5   Y$LFLGS,,AUTO
         8 000166   200022 455500                    STP5    Y$FEX+6,,AUTO
         8 000167   200006 636500                    EPPR6   Y$TDTYP,,AUTO
         8 000170   200021 456500                    STP6    Y$FEX+5,,AUTO
         8 000171   200007 637500                    EPPR7   Y$STA,,AUTO
         8 000172   200020 457500                    STP7    Y$FEX+4,,AUTO
         8 000173   200020 630500                    EPPR0   Y$FEX+4,,AUTO
         8 000174   000022 631400 xsym               EPPR1   B_VECTNIL+18
         8 000175   000000 701000 xent               TSX1    KFB$BLD_TBL
         8 000176   000000 011000                    NOP     0

      214     1199    6                          Y$FEX = KF_UTBL.FEX(Y$UID);

   1199  8 000177   200013 236100                    LDQ     Y$UID,,AUTO
         8 000200   000011 402007                    MPY     9,DL
         8 000201   000004 236006 xsym               LDQ     KF_UTBL+4,QL
         8 000202   777777 376007                    ANQ     -1,DL
         8 000203   200014 756100                    STQ     Y$FEX,,AUTO
         8 000204   000230 710000 8                  TRA     s:1209

      215     1200    6                        CASE(%CG_TDSC#);   /*TERM (FEP) DISCONNECT*/

      216     1201    6                          Y$STA = Y$BUF$->B$CGAURD.STATION;

   1201  8 000205   040100 100500                    MLR     fill='040'O
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:24   
         8 000206   300001 000010                    ADSC9   1,,PR3                   cn=0,n=8
         8 000207   200007 000010                    ADSC9   Y$STA,,AUTO              cn=0,n=8

      217     1202    6                          CALL KFF$USRTRM(Y$STA);

   1202  8 000210   200007 634500                    EPPR4   Y$STA,,AUTO
         8 000211   200020 454500                    STP4    Y$FEX+4,,AUTO
         8 000212   200020 630500                    EPPR0   Y$FEX+4,,AUTO
         8 000213   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000214   000000 701000 xent               TSX1    KFF$USRTRM
         8 000215   000000 011000                    NOP     0

      218     1203    6                          CALL KFB$DEL_TBL(Y$STA);

   1203  8 000216   200007 630500                    EPPR0   Y$STA,,AUTO
         8 000217   200020 450500                    STP0    Y$FEX+4,,AUTO
         8 000220   200020 630500                    EPPR0   Y$FEX+4,,AUTO
         8 000221   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000222   000000 701000 xent               TSX1    KFB$DEL_TBL
         8 000223   000000 011000                    NOP     0

      219     1204    6                        END;               /*END OF DO CASE*/

      220     1205    5                       END;                /*END OF IF*/

   1205  8 000224   000230 710000 8                  TRA     s:1209

      221     1206    5                    ELSE DO;

      222     1207    5                       CALL KFF$FECGMSG;

   1207  8 000225   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000226   000000 701000 xent               TSX1    KFF$FECGMSG
         8 000227   000000 011000                    NOP     0

      223     1208    5                       END;

PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:25   
      224     1209    4                    KF_FECG_READ = '0'B;

   1209  8 000230   000000 450000 xsym               STZ     KF_FECG_READ
         8 000231   000254 710000 8                  TRA     KEEP_GOING

      225     1210    4                  CASE(%EV_READ_CSCG##);

      226     1211    4                    CALL KFC$CSCGMSG;

   1211  8 000232   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000233   000000 701000 xent               TSX1    KFC$CSCGMSG
         8 000234   000000 011000                    NOP     0

      227     1212    4                    KF_CSCG_READ = '0'B;

   1212  8 000235   000000 450000 xsym               STZ     KF_CSCG_READ
         8 000236   000254 710000 8                  TRA     KEEP_GOING

      228     1213    4                  CASE(ELSE);

      229     1214    4                    GOTO BDEV;

   1214  8 000237   000274 710000 8                  TRA     BDEV

      230     1215    4                  END;                     /* DO CASE                  */

      231     1216    3               CASE(JG_SETDSMT#);          /* Release Packsets */

      232     1217    4                 CALL M$DISPRES(FPT_RESCTL) WHENALTRETURN DO; END;

   1217  8 000240   000300 630400 6                  EPPR0   FPT_RESCTL
         8 000241   550002 713400                    CLIMB   alt,+53250
         8 000242   402400 401760                    pmme    nvectors=6
         8 000243   000245 702000 8                  TSX2    s:1218
         8 000244   000245 710000 8                  TRA     s:1218

      233     1218    4                 CALL M$RELRES(FPT_RESCTL) WHENALTRETURN DO; END;
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:26   

   1218  8 000245   000300 630400 6                  EPPR0   FPT_RESCTL
         8 000246   550003 713400                    CLIMB   alt,+53251
         8 000247   402400 401760                    pmme    nvectors=6
         8 000250   000252 702000 8                  TSX2    s:1218+5
         8 000251   000252 710000 8                  TRA     s:1218+5

   1218  8 000252   000254 710000 8                  TRA     KEEP_GOING

      234     1219    3               CASE(ELSE);

      235     1220    3                 GOTO BDEV;

   1220  8 000253   000274 710000 8                  TRA     BDEV

      236     1221    3               END;

      237     1222    2   KEEP_GOING:
      238     1223    2              END;                         /* DO WHILE KF_RUN_FLAG = 1 */

   1223  8 000254   000000 235000 xsym  KEEP_GOING   LDA     KF_RUN_FLAG
         8 000255   000001 115007                    CMPA    1,DL
         8 000256   000010 600000 8                  TZE     s:1171

      239     1224    1           CALL KFE$ERRTXT('KFM$RNOF');    /* RUN FLAG TURNED OFF      */

   1224  8 000257   000002 630400 9                  EPPR0   2
         8 000260   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000261   000000 701000 xent               TSX1    KFE$ERRTXT
         8 000262   000000 011000                    NOP     0

      240     1225    1           CALL M$CLOSE (CLSFECG) ALTRET(NEXT);

   1225  8 000263   000054 630400 6                  EPPR0   CLSFECG
         8 000264   450001 713400                    CLIMB   alt,close
         8 000265   406000 401760                    pmme    nvectors=13
         8 000266   000267 702000 8                  TSX2    NEXT
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:27   

      241     1226    1   NEXT:   CALL M$CLOSE (CLSCSCG) ALTRET(NEXT2);

   1226  8 000267   000112 630400 6     NEXT         EPPR0   CLSCSCG
         8 000270   450001 713400                    CLIMB   alt,close
         8 000271   406000 401760                    pmme    nvectors=13
         8 000272   000273 702000 8                  TSX2    NEXT2

      242     1227    1   NEXT2:  RETURN;

   1227  8 000273   000000 702200 xent  NEXT2        TSX2  ! X66_MARET

      243     1228        /**/
      244     1229        /*        ENTER HERE FOR ERRORS         */
      245     1230        /**/
      246     1231    1   BDEV:   CALL KFE$ERRTXT('KFM$BDEV');

   1231  8 000274   000003 630400 9     BDEV         EPPR0   3
         8 000275   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000276   000000 701000 xent               TSX1    KFE$ERRTXT
         8 000277   000000 011000                    NOP     0

      247     1232    1           RETURN;

   1232  8 000300   000000 702200 xent               TSX2  ! X66_MARET

      248     1233        /**/
      249     1234    1   BDRD:   ERR_CNT = ERR_CNT + 1;

   1234  8 000301   000451 235000 6     BDRD         LDA     ERR_CNT
         8 000302   000001 035007                    ADLA    1,DL
         8 000303   000451 755000 6                  STA     ERR_CNT

      250     1235    1           CALL BINCHAR(EMSG.NUM,ERR_CNT);

   1235  8 000304   000044 773000                    LRL     36
         8 000305   200020 757100                    STAQ    Y$FEX+4,,AUTO
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:28   
         8 000306   000000 301500                    BTD
         8 000307   200020 000010                    NDSC9   Y$FEX+4,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         8 000310   000453 030004 6                  NDSC9   EMSG+1                   cn=0,s=nosgn,sf=0,n=4

      251     1236    1           CALL KFE$ERP (EMSG);

   1236  8 000311   000004 630400 9                  EPPR0   4
         8 000312   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000313   000000 701000 xent               TSX1    KFE$ERP
         8 000314   000000 011000                    NOP     0

      252     1237    1           CALL M$CLOSE (CLSFECG) ALTRET(BDCLS);

   1237  8 000315   000054 630400 6                  EPPR0   CLSFECG
         8 000316   450001 713400                    CLIMB   alt,close
         8 000317   406000 401760                    pmme    nvectors=13
         8 000320   000321 702000 8                  TSX2    BDCLS

      253     1238    1   BDCLS:  CALL M$CLOSE (CLSCSCG) ALTRET(BDCLS2);

   1238  8 000321   000112 630400 6     BDCLS        EPPR0   CLSCSCG
         8 000322   450001 713400                    CLIMB   alt,close
         8 000323   406000 401760                    pmme    nvectors=13
         8 000324   000325 702000 8                  TSX2    BDCLS2

      254     1239    1   BDCLS2:
      255     1240    1           RETURN;

   1240  8 000325   000000 702200 xent  BDCLS2       TSX2  ! X66_MARET

      256     1241        %EJECT;
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:29   
      257     1242    1   SLEEP:  PROC ALTRET;

   1242  8 000326   200016 741300       SLEEP        STX1  ! Y$FEX+2,,AUTO

      258     1243        %FPT_TRUNC (FPTN = TRNETCON , DCB = M$NETCON , STCLASS = CONSTANT);
      259     1257        %FPT_TRUNC (FPTN = TRHLPF , DCB = M$HLPF , STCLASS = CONSTANT);
      260     1271        %FPT_TRUNC (FPTN = TRPROF , DCB = M$PROF , STCLASS = CONSTANT);
      261     1285    3           CALL M$TRUNC (TRNETCON) WHENALTRETURN DO; END;

   1285  8 000327   000000 630400 7                  EPPR0   TRNETCON
         8 000330   450003 713400                    CLIMB   alt,+20483
         8 000331   400000 401760                    pmme    nvectors=1
         8 000332   000334 702000 8                  TSX2    s:1286
         8 000333   000334 710000 8                  TRA     s:1286

      262     1286    3           CALL M$TRUNC (TRHLPF) WHENALTRETURN DO; END;

   1286  8 000334   000004 630400 7                  EPPR0   TRHLPF
         8 000335   450003 713400                    CLIMB   alt,+20483
         8 000336   400000 401760                    pmme    nvectors=1
         8 000337   000341 702000 8                  TSX2    s:1287
         8 000340   000341 710000 8                  TRA     s:1287

      263     1287    3           CALL M$TRUNC (TRPROF) WHENALTRETURN DO; END;

   1287  8 000341   000010 630400 7                  EPPR0   TRPROF
         8 000342   450003 713400                    CLIMB   alt,+20483
         8 000343   400000 401760                    pmme    nvectors=1
         8 000344   000346 702000 8                  TSX2    TOP
         8 000345   000346 710000 8                  TRA     TOP

      264     1288    2   TOP:
      265     1289    3           IF NOT KF_FECG_READ THEN DO;

   1289  8 000346   000000 234000 xsym  TOP          SZN     KF_FECG_READ
         8 000347   000356 604000 8                  TMI     s:1293

PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:30   
      266     1290    3              CALL M$READ(RDFECGNW) ALTRET(BAG_IT);

   1290  8 000350   000000 630400 6                  EPPR0   RDFECGNW
         8 000351   440000 713400                    CLIMB   alt,read
         8 000352   401400 401760                    pmme    nvectors=4
         8 000353   000410 702000 8                  TSX2    BAG_IT

      267     1291    3              KF_FECG_READ = '1'B;

   1291  8 000354   400000 236003                    LDQ     -131072,DU
         8 000355   000000 756000 xsym               STQ     KF_FECG_READ

      268     1292    3              END;                         /* IF NOT KF_FECG_READ      */

      269     1293    3           IF NOT KF_CSCG_READ THEN DO;

   1293  8 000356   000000 234000 xsym               SZN     KF_CSCG_READ
         8 000357   000366 604000 8                  TMI     s:1298

      270     1294    3              CALL M$READ(RDCSCGNW) ALTRET(BAG_IT);

   1294  8 000360   000026 630400 6                  EPPR0   RDCSCGNW
         8 000361   440000 713400                    CLIMB   alt,read
         8 000362   401400 401760                    pmme    nvectors=4
         8 000363   000410 702000 8                  TSX2    BAG_IT

      271     1295    3              KF_CSCG_READ = '1'B;

   1295  8 000364   400000 236003                    LDQ     -131072,DU
         8 000365   000000 756000 xsym               STQ     KF_CSCG_READ

      272     1296    3              END;                         /* IF NOT KF_CSCG_READ      */

      273     1297    3           DO INHIBIT;

      274     1298    4              IF KF_EVCOUNT = 0 THEN DO;

PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:31   
   1298  8 000366   000000 235200 xsym               LDA   ! KF_EVCOUNT
         8 000367   000374 601200 8                  TNZ   ! s:1303

      275     1299    4                 CALL M$WAIT(CGWAIT);

   1299  8 000370   000150 630600 6                  EPPR0 ! CGWAIT
         8 000371   020006 713600                    CLIMB ! 8198
         8 000372   400400 401760                    pmme    nvectors=2

      276     1300    4                 GOTO TOP;

   1300  8 000373   000346 710200 8                  TRA   ! TOP

      277     1301    4                 END;                      /* IF EVCOUNT = 0           */
      278     1302    4              ELSE DO;

      279     1303    4                 KF_EVCOUNT = KF_EVCOUNT - 1;

   1303  8 000374   000001 135207                    SBLA  ! 1,DL
         8 000375   000000 755200 xsym               STA   ! KF_EVCOUNT

      280     1304    4                 IF KF_QREMOVE >= %KF_EVMAX##

   1304  8 000376   000000 236200 xsym               LDQ   ! KF_QREMOVE
         8 000377   000062 116207                    CMPQ  ! 50,DL
         8 000400   000403 602200 8                  TNC   ! s:1306

      281     1305    4                 THEN KF_QREMOVE = 0;

   1305  8 000401   000000 450200 xsym               STZ   ! KF_QREMOVE
         8 000402   000405 710200 8                  TRA   ! s:1307

      282     1306    4                 ELSE KF_QREMOVE = KF_QREMOVE + 1;

   1306  8 000403   000001 036207                    ADLQ  ! 1,DL
         8 000404   000000 756200 xsym               STQ   ! KF_QREMOVE

PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:32   
      283     1307    4                 RETURN;

   1307  8 000405   200016 221300                    LDX1  ! Y$FEX+2,,AUTO
         8 000406   000001 702211                    TSX2  ! 1,X1

      284     1308    4                 END;                      /* ELSE                     */
      285     1309    3              END;                         /* DO INHIBIT               */

      286     1310    2           RETURN;

   1310  8 000407   000001 702211                    TSX2  ! 1,X1

      287     1311    2   BAG_IT: ALTRETURN;

   1311  8 000410   200016 221300       BAG_IT       LDX1  ! Y$FEX+2,,AUTO
         8 000411   000000 702211                    TSX2  ! 0,X1
      288     1312    2   END SLEEP;
      289     1313    1   END KFM$MAINFRG;
      290     1314        %EOD;

PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:33   
--  Include file information  --

   JG_EVID_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFM$MAINFRG.
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:34   

 **** Variables and constants ****

  ****  Section 006  Data  KFM$MAINFRG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   150-0-0/d STRC(216)   r     1 CGWAIT                   112-0-0/d STRC(1080)  r     1 CLSCSCG
    54-0-0/d STRC(1080)  r     1 CLSFECG                  452-0-0/c STRC(72)    r     1 EMSG
   451-0-0/w UBIN        r     1 ERR_CNT                  164-0-0/d STRC(144)   r     1 EXTEND_FECG
   170-0-0/d STRC(1872)  r     1 FPT_CGCTL                300-0-0/d STRC(648)   r     1 FPT_RESCTL
   156-0-0/d STRC(216)   r     1 FPT_USRFIELD              26-0-0/d STRC(504)   r     1 RDCSCGNW
     0-0-0/d STRC(504)   r     1 RDFECGNW                 254-0-0/d STRC(720)   r     1 VLP_CGCP
   322-0-0/d STRC(3096)  r     1 VLP_RPSN                  44-0-0/w STRC(288)   r     1 VLP_STACS
    16-0-0/w STRC(288)   r     1 VLP_STAFE

  ****  Section 007 RoData KFM$MAINFRG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/d STRC(144)   r     1 TRHLPF                     0-0-0/d STRC(144)   r     1 TRNETCON
    10-0-0/d STRC(144)   r     1 TRPROF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    12-0-0/w PTR         r     1 Y$BUF$                    11-0-0/w UBIN        r     1 Y$EVID
    14-0-0/w UBIN        r     1 Y$FEX                      5-0-0/w UBIN        r     1 Y$LFLGS
     7-0-0/c CHAR(8)     r     1 Y$STA                      6-0-0/w UBIN        r     1 Y$TDTYP
    13-0-0/w UBIN        r     1 Y$UID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:35   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(1024)  r     1 KF_CSCG_INBUF              0-0-0/b BIT         r     1 KF_CSCG_READ
     0-0-0/w UBIN        r     1 KF_EVCOUNT
     0-0-0/w STRC(72)    r     1 KF_EVMSG_QUEUE(0:50)
     0-0-0/c CHAR(600)   r     1 KF_FECGBUF                 0-0-0/b BIT         r     1 KF_FECG_READ
     0-0-0/w UBIN        r     1 KF_QREMOVE                 0-0-0/w UBIN        r     1 KF_RUN_FLAG
     0-0-0/w STRC(306)   r     1 KF_UTBL(0:20)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 B$CGAURD                   0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0N  NULL        r     1 M$CS                       0-0-0N  NULL        r     1 M$FE
     0-0-0N  NULL        r     1 M$HLPF                     0-0-0N  NULL        r     1 M$NETCON
     0-0-0N  NULL        r     1 M$PROF                     0-0-0/w STRC(288)   r     1 Y$VLP_STA


   Procedure KFM$MAINFRG requires 266 words for executable code.
   Procedure KFM$MAINFRG requires 20 words of local(AUTO) storage.
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:36   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:37   
          MINI XREF LISTING

B$CGAURD.EVENT
       823**DCL      1179>>ASSIGN
B$CGAURD.INFO
       824**DCL      1188>>ASSIGN   1197>>ASSIGN
B$CGAURD.STATION
       823**DCL       823--REDEF    1186>>ASSIGN   1191>>ASSIGN   1195>>ASSIGN   1201>>ASSIGN
BAG_IT IN PROCEDURE SLEEP
      1311**LABEL    1290--CALLALT  1294--CALLALT
BDCLS
      1238**LABEL    1237--CALLALT
BDCLS2
      1240**LABEL    1238--CALLALT
BDEV
      1231**LABEL    1214--GOTO     1220--GOTO
BDRD
      1234**LABEL    1171--CALLALT
CGWAIT
       972**DCL      1299<>CALL
CGWAIT.V
       973**DCL       972--DCLINIT
CLSCSCG
       941**DCL      1226<>CALL     1238<>CALL
CLSCSCG.SN_
       941**DCL       941--REDEF
CLSCSCG.UTL_
       942**DCL       942--REDEF
CLSCSCG.V
       946**DCL       941--DCLINIT
CLSCSCG.V.EXPIRE#
       956**DCL       956--REDEF
CLSCSCG.V.TYPE#
       954**DCL       954--REDEF
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:38   
CLSCSCG.V.XTNSIZE#
       951**DCL       951--REDEF     953--REDEF
CLSFECG
       898**DCL      1225<>CALL     1237<>CALL
CLSFECG.SN_
       898**DCL       898--REDEF
CLSFECG.UTL_
       899**DCL       899--REDEF
CLSFECG.V
       903**DCL       898--DCLINIT
CLSFECG.V.EXPIRE#
       913**DCL       913--REDEF
CLSFECG.V.TYPE#
       911**DCL       911--REDEF
CLSFECG.V.XTNSIZE#
       908**DCL       908--REDEF     910--REDEF
EMSG
      1153**DCL      1236<>CALL
EMSG.NUM
      1155**DCL      1235<<CALLBLT
ERR_CNT
      1152**DCL      1234<<ASSIGN   1234>>ASSIGN   1235>>CALLBLT
EXTEND_FECG
      1006**DCL      1182<>CALL
EXTEND_FECG.V
      1006**DCL      1006--DCLINIT
F$DCB.ACTPOS
       346**DCL       346--REDEF
F$DCB.ARS
       321**DCL       321--REDEF
F$DCB.ATTR
       339**DCL       340--REDEF
F$DCB.BORROW
       354**DCL       354--REDEF     354--REDEF     354--REDEF
F$DCB.DCBNAME.L
       368**DCL       368--IMP-SIZ
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:39   
F$DCB.EOMCHAR
       325**DCL       325--REDEF
F$DCB.FLDID
       349**DCL       349--REDEF
F$DCB.FORM$
       343**DCL       343--REDEF
F$DCB.FSECT
       359**DCL       359--REDEF
F$DCB.FSN
       336**DCL       336--REDEF     336--REDEF     337--REDEF
F$DCB.HEADER$
       342**DCL       342--REDEF
F$DCB.IXTNSIZE
       340**DCL       340--REDEF
F$DCB.LASTSTA$
       330**DCL       330--REDEF    1176>>IF
F$DCB.LVL
       355**DCL       355--REDEF
F$DCB.NAME.C
       330**DCL       330--REDEF
F$DCB.NOEOF
       351**DCL       351--REDEF
F$DCB.NRECS
       341**DCL       341--REDEF
F$DCB.NRECX
       360**DCL       360--REDEF
F$DCB.OHDR
       352**DCL       352--REDEF
F$DCB.ORG
       335**DCL       335--REDEF
F$DCB.PRECNO
       358**DCL       358--REDEF
F$DCB.RCSZ
       363**DCL       363--REDEF
F$DCB.RES
       331**DCL       331--REDEF
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:40   
F$DCB.SETX
       343**DCL       343--REDEF
F$DCB.TAB$
       342**DCL       343--REDEF
F$DCB.TDA
       357**DCL       357--REDEF
F$DCB.WSN
       332**DCL       332--REDEF
FPT_CGCTL
      1021**DCL      1184<>CALL
FPT_CGCTL.V
      1026**DCL      1021--DCLINIT
FPT_RESCTL
      1117**DCL      1217<>CALL     1218<>CALL
FPT_RESCTL.V
      1119**DCL      1117--DCLINIT
FPT_USRFIELD.V
       987**DCL       987--DCLINIT
KEEP_GOING
      1223**LABEL    1182--CALLALT  1184--CALLALT
KFB$BLD_TBL
      1163**DCL-ENT  1189--CALL     1198--CALL
KFB$DEL_TBL
      1162**DCL-ENT  1193--CALL     1203--CALL
KFC$CSCGMSG
      1165**DCL-ENT  1211--CALL
KFE$ERP
      1160**DCL-ENT  1236--CALL
KFE$ERRTXT
      1166**DCL-ENT  1224--CALL     1231--CALL
KFF$FECGMSG
      1164**DCL-ENT  1207--CALL
KFF$USRTRM
      1167**DCL-ENT  1192--CALL     1202--CALL
KFI$INIT
      1161**DCL-ENT  1169--CALL
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:41   
KF_CSCG_INBUF
       312**DCL       684--DCLINIT   685--DCLINIT
KF_CSCG_READ
       310**DCL      1212<<ASSIGN   1293>>IF       1295<<ASSIGN
KF_EVCOUNT
       310**DCL      1298>>IF       1303<<ASSIGN   1303>>ASSIGN
KF_EVMSG_QUEUE.EVID
       309**DCL      1174>>DOCASE
KF_EVMSG_QUEUE.SCOD
       309**DCL      1172>>DOCASE
KF_FECGBUF
       311**DCL       616--DCLINIT   617--DCLINIT  1178--ASSIGN
KF_FECG_READ
       310**DCL      1209<<ASSIGN   1289>>IF       1291<<ASSIGN
KF_QREMOVE
       309**DCL      1172>>DOCASE   1174>>DOCASE   1304>>IF       1305<<ASSIGN   1306<<ASSIGN   1306>>ASSIGN
KF_RUN_FLAG
       310**DCL      1170>>DOWHILE
KF_UTBL.FEX
       315**DCL      1199>>ASSIGN
KF_UTBL.STATION
       314**DCL       314--REDEF
M$CGCTL
       116**DCL-ENT  1184--CALL
M$CLOSE
        95**DCL-ENT  1225--CALL     1226--CALL     1237--CALL     1238--CALL
M$DISPRES
       102**DCL-ENT  1217--CALL
M$EXTEND
        99**DCL-ENT  1182--CALL
M$FE
       313**DCL      1176--IF
M$READ
        96**DCL-ENT  1290--CALL     1294--CALL
M$RELRES
       102**DCL-ENT  1218--CALL
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:42   
M$TRUNC
        96**DCL-ENT  1285--CALL     1286--CALL     1287--CALL
M$WAIT
       153**DCL-ENT  1299--CALL
NEXT
      1226**LABEL    1225--CALLALT
NEXT2
      1227**LABEL    1226--CALLALT
RDCSCGNW
       682**DCL      1294<>CALL
RDCSCGNW.STATION_
       685**DCL       686--REDEF
RDCSCGNW.V
       686**DCL       682--DCLINIT
RDCSCGNW.V.DVBYTE.REREAD#
       697**DCL       697--REDEF
RDCSCGNW.V.INDX#
       695**DCL       695--REDEF
RDFECGNW
       614**DCL      1290<>CALL
RDFECGNW.STATION_
       617**DCL       618--REDEF
RDFECGNW.V
       618**DCL       614--DCLINIT
RDFECGNW.V.DVBYTE.REREAD#
       629**DCL       629--REDEF
RDFECGNW.V.INDX#
       627**DCL       627--REDEF
SLEEP
      1242**PROC     1171--CALL
TOP IN PROCEDURE SLEEP
      1289**LABEL    1300--GOTO
TRHLPF IN PROCEDURE SLEEP
      1268**DCL      1286<>CALL
TRHLPF.V IN PROCEDURE SLEEP
      1268**DCL      1268--DCLINIT
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:43   
TRNETCON IN PROCEDURE SLEEP
      1254**DCL      1285<>CALL
TRNETCON.V IN PROCEDURE SLEEP
      1254**DCL      1254--DCLINIT
TRPROF IN PROCEDURE SLEEP
      1282**DCL      1287<>CALL
TRPROF.V IN PROCEDURE SLEEP
      1282**DCL      1282--DCLINIT
VLP_CGCP
      1075**DCL      1022--DCLINIT
VLP_CGCP.DVBYTE.REREAD#
      1089**DCL      1090--REDEF
VLP_CGCP.MAXPG#
      1081**DCL      1183<<ASSIGN   1183>>ASSIGN
VLP_RPSN
      1134**DCL      1118--DCLINIT
VLP_STACS
       716**DCL       685--DCLINIT
VLP_STACS.MSGIDXT
       726**DCL       729--REDEF
VLP_STAFE
       648**DCL       617--DCLINIT
VLP_STAFE.MSGIDXT
       658**DCL       661--REDEF
Y$BUF$
      1149**DCL      1178<<ASSIGN   1179>>ASSIGN   1186>>ASSIGN   1188>>ASSIGN   1191>>ASSIGN   1195>>ASSIGN
      1197>>ASSIGN   1201>>ASSIGN
Y$EVID
      1148**DCL      1179<<ASSIGN   1180>>DOCASE   1187>>ASSIGN   1196>>ASSIGN
Y$FEX
      1151**DCL      1199<<ASSIGN
Y$LFLGS
      1145**DCL      1188<<ASSIGN   1189<>CALL     1197<<ASSIGN   1198<>CALL
Y$STA
      1147**DCL      1186<<ASSIGN   1189<>CALL     1191<<ASSIGN   1192<>CALL     1193<>CALL     1195<<ASSIGN
      1198<>CALL     1201<<ASSIGN   1202<>CALL     1203<>CALL
PL6.E3A0      #001=KFM$MAINFRG File=KFM$MAINFRG.:E05TSI                          WED 07/30/97 00:24 Page:44   
Y$TDTYP
      1146**DCL      1187<<ASSIGN   1189<>CALL     1196<<ASSIGN   1198<>CALL
Y$UID
      1150**DCL      1189<>CALL     1198<>CALL     1199>>ASSIGN
Y$VLP_STA.MSGIDXT
       753**DCL       756--REDEF
Y$VLP_STA.MSGTYP#
       747**DCL      1176>>IF

PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:45   
      291        1        /*M*      KFM$XCONENTRY - xconentry     */
      292        2        /*T***********************************************************/
      293        3        /*T*                                                         */
      294        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      295        5        /*T*                                                         */
      296        6        /*T***********************************************************/
      297        7        /*F* NAME:          KFM$XCONENTRY
      298        8             PURPOSE:       Entry for frog exit control
      299        9             DESCRIPTION:   Handle frog exit control.
      300       10                            Decide whether to:
      301       11                                 1) exit
      302       12                                 2) screech
      303       13                                 3) ldtrc to frog again
      304       14        */
      305       15        /*D* NAME:          KFM$XCONENTRY
      306       16             CALL:          Exit control for frog
      307       17             INPUT:         None
      308       18             OUTPUT:        None
      309       19             INTERFACE:     M$XCON
      310       20                            M$CLRSTK
      311       21                            M$CLOSE
      312       22                            M$SCREECH
      313       23                            M$USRFIELD
      314       24                            M$LDTRC
      315       25                            M$EXIT
      316       26             DESCRIPTION:   Call M$XCON to clear the xcon entry point for frog
      317       27                                 if we got here because of no tcb space, clear the
      318       28                            stack w/M$CLRSTK.  Close the dcbs to the comgroups.
      319       29                            This is because ldtrc won't work if we have them open.
      320       30                                 Check the count in the userfield of the jit.  If
      321       31                            it is .GE. a msg #, screech.  Otherwise update the
      322       32                            count in the user field with a call to M$USRFIELD.
      323       33                            Then call M$LDTRC to reload a fresh copy of frog.
      324       34        */
      325       35        KFM$XCONENTRY: PROC ASYNC;
      326       36        /**/
      327       37        %INCLUDE CP_6;
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:46   
      328      118        %B$TCB;
      329      121        %B$ECCB;
      330      129 S      %INCLUDE B$JIT_C;
      331      130        %B$JIT0;
      332      219        %U$JIT1;
      333      293        %A$JIT6X;
      334      296        %INCLUDE KF$SUBS;
      335      363        %INCLUDE KF$MSG_C;
      336      430        %INCLUDE K_SCODE_C;
      337      515        %INCLUDE KF_DAT_R;
      338      534        /**/
      339      535        %FPT_LDTRC (FPTN=LDTRCFPT,NAME=LDTRCNM,ACCT=ACCTNM);
      340      553        /**/
      341      554        %VLP_NAME (FPTN=LDTRCNM,NAME='FROG');
      342      581    1   DCL ACCTNM CHAR(8) STATIC INIT(':SYS    ');
      343      582        /**/
      344      583        %FPT_XCON (FPTN=XCONFPT,UENTRY=NIL);
      345      597        /**/
      346      598        %FPT_CLRSTK (FPTN=CLRSTKFPT,FRAMES=99);
      347      612        /**/
      348      613        %FPT_CLOSE (FPTN=CLSFECG_FPT,DCB=M$FE);
      349      655        /**/
      350      656        %FPT_CLOSE (FPTN=CLSCSCG_FPT,DCB=M$CS);
      351      698        /**/
      352      699        %VLP_ERRCODE;
      353      744        %FPT_USRFIELD (FIELD0=0,USER=YES);
      354      761        %FPT_SCREECH (JERR=VLP_ERRCODE,SCODE=FPT_SNAP);
      355      775        %VLP_SCODE (FPTN=FPT_SNAP,FCG=KF,
      356      776                 MID=M,MON=NO,
      357      777                 CODE=%S$FRGXCON,
      358      778                 SEV=SEV_SNAP,
      359      779                 CUSR=YES,
      360      780                 DDSEG=YES,
      361      781                 FMBUF=YES,
      362      782                 ROSEG=YES,
      363      783                 ISEG=YES);
      364      844        /**/
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:47   
      365      845    1   DCL B$ECCB$ PTR SYMREF;
      366      846    1   DCL B$JIT$ PTR SYMREF;
      367      847        /**/
      368      848    1           CALL M$XCON(XCONFPT);
      369      849    1           IF B$ECCB$->B$ECCB.XCONF.NOTCB THEN
      370      850    1              CALL M$CLRSTK(CLRSTKFPT) ALTRET(IGNOREN);
      371      851    1   IGNOREN:
      372      852        /*       WE HAVE TO CLOSE DCBS TO COMGROUPS OR
      373      853                 WE WILL HANG IN THE SYSTEM.
      374      854        */
      375      855    1           CALL M$CLOSE(CLSFECG_FPT) ALTRET(IGNORE1);
      376      856    1   IGNORE1:
      377      857    1           CALL M$CLOSE(CLSCSCG_FPT) ALTRET(IGNORE2);
      378      858    1   IGNORE2:
      379      859    2           IF ~KF_FLGS.KILLFROG THEN DO;
      380      860    2              FPT_USRFIELD.V.FIELD0# = B$JIT$->B$JIT.USERWORD(0) + 1;
      381      861    2              CALL M$USRFIELD(FPT_USRFIELD);
      382      862    2              CALL M$SCREECH(FPT_SCREECH);
      383      863        /*S*     SCREECH_CODE:  KFM-S$FRGXCON
      384      864                 TYPE:          Snap
      385      865                 MESSAGE: Frog abort
      386      866        */
      387      867    2              CALL M$LDTRC(LDTRCFPT) ALTRET(BDLDTRC);
      388      868    2   BDLDTRC:
      389      869    2              END;                         /* IF NOT KILLFROG          */
      390      870    1           CALL M$EXIT;
      391      871    1   END KFM$XCONENTRY;

PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:48   
--  Include file information  --

   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   K_SCODE_C.:E05TOU  is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFM$XCONENTRY.

   Procedure KFM$XCONENTRY requires 43 words for executable code.
   Procedure KFM$XCONENTRY requires 4 words of local(AUTO) storage.

    No errors detected in file KFM$MAINFRG.:E05TSI    .

PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:49   

 Object Unit name= KFM$XCONENTRY                              File name= KFM$MAINFRG.:E05TOU
 UTS= JUL 30 '97 00:24:26.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$FE
    2   DCB   even  none     0      0  M$CS
    3   DCB   even  none     0      0  M$HLPF
    4   DCB   even  none     0      0  M$PROF
    5   DCB   even  none     0      0  M$NETCON
    6   Data  even  none   106    152  KFM$XCONENTRY
    7   Proc  even  none    43     53  KFM$XCONENTRY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes     Async       0  KFM$XCONENTRY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AARET
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:50   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$FE                                  M$CS
     M$HLPF                                M$PROF                                M$NETCON
     KF_FLGS                               B$ECCB$                               B$JIT$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:51   


      291        1        /*M*      KFM$XCONENTRY - xconentry     */
      292        2        /*T***********************************************************/
      293        3        /*T*                                                         */
      294        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      295        5        /*T*                                                         */
      296        6        /*T***********************************************************/
      297        7        /*F* NAME:          KFM$XCONENTRY
      298        8             PURPOSE:       Entry for frog exit control
      299        9             DESCRIPTION:   Handle frog exit control.
      300       10                            Decide whether to:
      301       11                                 1) exit
      302       12                                 2) screech
      303       13                                 3) ldtrc to frog again
      304       14        */
      305       15        /*D* NAME:          KFM$XCONENTRY
      306       16             CALL:          Exit control for frog
      307       17             INPUT:         None
      308       18             OUTPUT:        None
      309       19             INTERFACE:     M$XCON
      310       20                            M$CLRSTK
      311       21                            M$CLOSE
      312       22                            M$SCREECH
      313       23                            M$USRFIELD
      314       24                            M$LDTRC
      315       25                            M$EXIT
      316       26             DESCRIPTION:   Call M$XCON to clear the xcon entry point for frog
      317       27                                 if we got here because of no tcb space, clear the
      318       28                            stack w/M$CLRSTK.  Close the dcbs to the comgroups.
      319       29                            This is because ldtrc won't work if we have them open.
      320       30                                 Check the count in the userfield of the jit.  If
      321       31                            it is .GE. a msg #, screech.  Otherwise update the
      322       32                            count in the user field with a call to M$USRFIELD.
      323       33                            Then call M$LDTRC to reload a fresh copy of frog.
      324       34        */
      325       35        KFM$XCONENTRY: PROC ASYNC;

PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:52   
     35  7 000000   000000 700200 xent  KFM$XCONENT* TSX0  ! X66_AAUTO
         7 000001   000004 000000                    ZERO    4,0

      326       36        /**/
      327       37        %INCLUDE CP_6;
      328      118        %B$TCB;
      329      121        %B$ECCB;
      330      129 S      %INCLUDE B$JIT_C;
      331      130        %B$JIT0;
      332      219        %U$JIT1;
      333      293        %A$JIT6X;
      334      296        %INCLUDE KF$SUBS;
      335      363        %INCLUDE KF$MSG_C;
      336      430        %INCLUDE K_SCODE_C;
      337      515        %INCLUDE KF_DAT_R;
      338      534        /**/
      339      535        %FPT_LDTRC (FPTN=LDTRCFPT,NAME=LDTRCNM,ACCT=ACCTNM);
      340      553        /**/
      341      554        %VLP_NAME (FPTN=LDTRCNM,NAME='FROG');
      342      581    1   DCL ACCTNM CHAR(8) STATIC INIT(':SYS    ');
      343      582        /**/
      344      583        %FPT_XCON (FPTN=XCONFPT,UENTRY=NIL);
      345      597        /**/
      346      598        %FPT_CLRSTK (FPTN=CLRSTKFPT,FRAMES=99);
      347      612        /**/
      348      613        %FPT_CLOSE (FPTN=CLSFECG_FPT,DCB=M$FE);
      349      655        /**/
      350      656        %FPT_CLOSE (FPTN=CLSCSCG_FPT,DCB=M$CS);
      351      698        /**/
      352      699        %VLP_ERRCODE;
      353      744        %FPT_USRFIELD (FIELD0=0,USER=YES);
      354      761        %FPT_SCREECH (JERR=VLP_ERRCODE,SCODE=FPT_SNAP);
      355      775        %VLP_SCODE (FPTN=FPT_SNAP,FCG=KF,
      356      776                 MID=M,MON=NO,
      357      777                 CODE=%S$FRGXCON,
      358      778                 SEV=SEV_SNAP,
      359      779                 CUSR=YES,
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:53   
      360      780                 DDSEG=YES,
      361      781                 FMBUF=YES,
      362      782                 ROSEG=YES,
      363      783                 ISEG=YES);
      364      844        /**/
      365      845    1   DCL B$ECCB$ PTR SYMREF;
      366      846    1   DCL B$JIT$ PTR SYMREF;
      367      847        /**/
      368      848    1           CALL M$XCON(XCONFPT);

    848  7 000002   000024 630400 6                  EPPR0   XCONFPT
         7 000003   010003 713400                    CLIMB   4099
         7 000004   400400 401760                    pmme    nvectors=2

      369      849    1           IF B$ECCB$->B$ECCB.XCONF.NOTCB THEN

    849  7 000005   000000 470400 xsym               LDP0    B$ECCB$
         7 000006   000004 236100                    LDQ     4,,PR0
         7 000007   000200 316003                    CANQ    128,DU
         7 000010   000015 600000 7                  TZE     IGNOREN

      370      850    1              CALL M$CLRSTK(CLRSTKFPT) ALTRET(IGNOREN);

    850  7 000011   000032 630400 6                  EPPR0   CLRSTKFPT
         7 000012   410013 713400                    CLIMB   alt,+4107
         7 000013   400000 401760                    pmme    nvectors=1
         7 000014   000015 702000 7                  TSX2    IGNOREN

      371      851    1   IGNOREN:
      372      852        /*       WE HAVE TO CLOSE DCBS TO COMGROUPS OR
      373      853                 WE WILL HANG IN THE SYSTEM.
      374      854        */
      375      855    1           CALL M$CLOSE(CLSFECG_FPT) ALTRET(IGNORE1);

    855  7 000015   000036 630400 6     IGNOREN      EPPR0   CLSFECG_FPT
         7 000016   450001 713400                    CLIMB   alt,close
         7 000017   406000 401760                    pmme    nvectors=13
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:54   
         7 000020   000021 702000 7                  TSX2    IGNORE1

      376      856    1   IGNORE1:
      377      857    1           CALL M$CLOSE(CLSCSCG_FPT) ALTRET(IGNORE2);

    857  7 000021   000074 630400 6     IGNORE1      EPPR0   CLSCSCG_FPT
         7 000022   450001 713400                    CLIMB   alt,close
         7 000023   406000 401760                    pmme    nvectors=13
         7 000024   000025 702000 7                  TSX2    IGNORE2

      378      858    1   IGNORE2:
      379      859    2           IF ~KF_FLGS.KILLFROG THEN DO;

    859  7 000025   000000 236000 xsym  IGNORE2      LDQ     KF_FLGS
         7 000026   000002 736000                    QLS     2
         7 000027   400000 376003                    ANQ     -131072,DU
         7 000030   400000 676003                    ERQ     -131072,DU
         7 000031   000050 600000 7                  TZE     BDLDTRC

      380      860    2              FPT_USRFIELD.V.FIELD0# = B$JIT$->B$JIT.USERWORD(0) + 1;

    860  7 000032   000000 470400 xsym               LDP0    B$JIT$
         7 000033   000133 220100                    LDX0    91,,PR0
         7 000034   000001 621010                    EAX1    1,X0
         7 000035   000137 741000 6                  STX1    FPT_USRFIELD+3

      381      861    2              CALL M$USRFIELD(FPT_USRFIELD);

    861  7 000036   000134 630400 6                  EPPR0   FPT_USRFIELD
         7 000037   020017 713400                    CLIMB   8207
         7 000040   400000 401760                    pmme    nvectors=1

      382      862    2              CALL M$SCREECH(FPT_SCREECH);

    862  7 000041   000142 630400 6                  EPPR0   FPT_SCREECH
         7 000042   000013 713400                    CLIMB   11
         7 000043   401000 401760                    pmme    nvectors=3
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:55   

      383      863        /*S*     SCREECH_CODE:  KFM-S$FRGXCON
      384      864                 TYPE:          Snap
      385      865                 MESSAGE: Frog abort
      386      866        */
      387      867    2              CALL M$LDTRC(LDTRCFPT) ALTRET(BDLDTRC);

    867  7 000044   000000 630400 6                  EPPR0   LDTRCFPT
         7 000045   400006 713400                    CLIMB   alt,+6
         7 000046   403000 401760                    pmme    nvectors=7
         7 000047   000050 702000 7                  TSX2    BDLDTRC

      388      868    2   BDLDTRC:
      389      869    2              END;                         /* IF NOT KILLFROG          */

    869  7 000050                       BDLDTRC      null
      390      870    1           CALL M$EXIT;

    870  7 000050   000001 713400                    CLIMB   exit
         7 000051   000000 401760                    pmme    nvectors=0

      391      871    1   END KFM$XCONENTRY;

    871  7 000052   000000 702200 xent               TSX2  ! X66_AARET

PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:56   
--  Include file information  --

   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   K_SCODE_C.:E05TOU  is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFM$XCONENTRY.
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:57   

 **** Variables and constants ****

  ****  Section 006  Data  KFM$XCONENTRY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    22-0-0/c CHAR(8)     r     1 ACCTNM                    32-0-0/d STRC(144)   r     1 CLRSTKFPT
    74-0-0/d STRC(1080)  r     1 CLSCSCG_FPT               36-0-0/d STRC(1080)  r     1 CLSFECG_FPT
   142-0-0/d STRC(216)   r     1 FPT_SCREECH              150-0-0/d STRC(72)    r     1 FPT_SNAP
   134-0-0/d STRC(216)   r     1 FPT_USRFIELD               0-0-0/d STRC(576)   r     1 LDTRCFPT
    20-0-0/c STRC(45)    r     1 LDTRCNM                  132-0-0/w STRC        r     1 VLP_ERRCODE
    24-0-0/d STRC(216)   r     1 XCONFPT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$ECCB$                    0-0-0/w PTR         r     1 B$JIT$
     0-0-0/b STRC(3)     r     1 KF_FLGS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 B$ECCB                     0-0-0/d STRC(5760)  r     1 B$JIT
     0-0-0N  NULL        r     1 M$CS                       0-0-0N  NULL        r     1 M$FE


   Procedure KFM$XCONENTRY requires 43 words for executable code.
   Procedure KFM$XCONENTRY requires 4 words of local(AUTO) storage.

    No errors detected in file KFM$MAINFRG.:E05TSI    .
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:58   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:59   
          MINI XREF LISTING

ACCTNM
       581**DCL       548--DCLINIT
B$ECCB.XCONF.NOTCB
       124**DCL       849>>IF
B$ECCB$
       845**DCL       849>>IF
B$JIT.CPFLAGS1.SLEAZE
       230**DCL       230--REDEF
B$JIT.ERR.MID
       137**DCL       137--REDEF
B$JIT.USERWORD
       224**DCL       860>>ASSIGN
B$JIT$
       846**DCL       131--IMP-PTR   860>>ASSIGN
BDLDTRC
       869**LABEL     867--CALLALT
CLRSTKFPT
       609**DCL       850<>CALL
CLRSTKFPT.V
       609**DCL       609--DCLINIT
CLSCSCG_FPT
       679**DCL       857<>CALL
CLSCSCG_FPT.SN_
       679**DCL       679--REDEF
CLSCSCG_FPT.UTL_
       680**DCL       680--REDEF
CLSCSCG_FPT.V
       684**DCL       679--DCLINIT
CLSCSCG_FPT.V.EXPIRE#
       694**DCL       694--REDEF
CLSCSCG_FPT.V.TYPE#
       692**DCL       692--REDEF
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:60   
CLSCSCG_FPT.V.XTNSIZE#
       689**DCL       689--REDEF     691--REDEF
CLSFECG_FPT
       636**DCL       855<>CALL
CLSFECG_FPT.SN_
       636**DCL       636--REDEF
CLSFECG_FPT.UTL_
       637**DCL       637--REDEF
CLSFECG_FPT.V
       641**DCL       636--DCLINIT
CLSFECG_FPT.V.EXPIRE#
       651**DCL       651--REDEF
CLSFECG_FPT.V.TYPE#
       649**DCL       649--REDEF
CLSFECG_FPT.V.XTNSIZE#
       646**DCL       646--REDEF     648--REDEF
FPT_SCREECH
       772**DCL       862<>CALL
FPT_SNAP
       798**DCL       772--DCLINIT
FPT_USRFIELD
       755**DCL       861<>CALL
FPT_USRFIELD.V
       755**DCL       755--DCLINIT
FPT_USRFIELD.V.FIELD0#
       757**DCL       860<<ASSIGN
IGNORE1
       857**LABEL     855--CALLALT
IGNORE2
       859**LABEL     857--CALLALT
IGNOREN
       855**LABEL     850--CALLALT
KF_FLGS.KILLFROG
       532**DCL       859>>IF
KF_UTBL.STATION
       528**DCL       528--REDEF
PL6.E3A0      #002=KFM$XCONENTRY File=KFM$MAINFRG.:E05TSI                        WED 07/30/97 00:24 Page:61   
LDTRCFPT
       548**DCL       867<>CALL
LDTRCFPT.V
       550**DCL       550--DCLINIT
LDTRCNM
       579**DCL       548--DCLINIT
M$CLOSE
        46**DCL-ENT   855--CALL      857--CALL
M$CLRSTK
       104**DCL-ENT   850--CALL
M$EXIT
        58**DCL-ENT   870--CALL
M$LDTRC
        59**DCL-ENT   867--CALL
M$SCREECH
        60**DCL-ENT   862--CALL
M$USRFIELD
       106**DCL-ENT   861--CALL
M$XCON
       101**DCL-ENT   848--CALL
VLP_ERRCODE
       711**DCL       772--DCLINIT
XCONFPT
       594**DCL       848<>CALL
XCONFPT.V
       595**DCL       594--DCLINIT
