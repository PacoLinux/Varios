VERSION E05

PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:1    
        1        1        /*M* KVO$PST VDH Positioning routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVO$PSTAFTHI_NONBLNPHSPST: PROC;
        9        9 S      %INCLUDE KV_GLBCNS_E;
       10       10 S      %INCLUDE KV$GLB;
       11       11 S      %INCLUDE KV$GLBCTX;
       12       12        %KV_PHSPSTMOD_E;
       13       19        %KV$MRD;                                /*  REAL DEVICE CONTEXT BLOCK         */
       14       66        %KV$MVD;
       15      110        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
       16      153        %KV$SRD;                                /*  SUBORDINATE REAL DEVICE CONTEXT   */
       17      428        %KV$VDI;                                /*  VDI CONTEXT                       */
       18      499
       19      500    1   DCL KV_VDH_PST_NEWLIN UBIN SYMREF;
       20      501        /* position after the highest non-blank position.                             */
       21      502
       22      503    1   DCL KVO$PST ENTRY(1);
       23      504    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
       24      505
       25      506        /* this group is exited if we are already beyond the highest
       26      507           non-blank position.                                                        */
       27      508
       28      509    2      IF (%KV_SRD.CRT_PST <= %KV_SRD.HI_NONBLN_PST) THEN DO;
       29      510
       30      511        /* we are positioned before or on the highest non-blank position.             */
       31      512
       32      513
       33      514        /* force positioning mode to skip                                             */
       34      515
       35      516    2         IF %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_BLN
       36      517    2           AND %KV_MRD.BLANKERASES THEN CALL KVV$CALUSR_PST;
       37      518    2         %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;
PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:2    
       38      519
       39      520    2         %KV_SRD.CRT = %KV_SRD.HI_NONBLN;
       40      521    2         %KV_MVD.FRMLIN = %KV_SRD.HI_NONBLN.LIN+%KV_MVD.FRSLIN;
       41      522    2         %KV_SRD.CRT.CLM = 1+%KV_SRD.CRT.CLM;
       42      523    3         IF (%KV_SRD.CRT.CLM > %KV_SRD.BTMRHT.CLM) THEN DO;
       43      524
       44      525        /* the highest non-blank position is on the right margin.
       45      526           position to the left margin on the next line.                              */
       46      527
       47      528    3            CALL KVO$PST(KV_VDH_PST_NEWLIN) ;
       48      529    3         END /* IF */;
       49      530    2      END /* IF */;
       50      531    1   END /* SUBROUTINE */;
       51      532        %EOD;

PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:3    
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$PSTAFTHI_NONBLNPHSPST.

   Procedure KVO$PSTAFTHI_NONBLNPHSPST requires 88 words for executable code.
   Procedure KVO$PSTAFTHI_NONBLNPHSPST requires 4 words of local(AUTO) storage.

PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:4    

 Object Unit name= KVO$PSTAFTHI_NONBLNPHSPST                  File name= KVO$PST.:E05TOU
 UTS= JUL 30 '97 02:10:49.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    88     58  KVO$PSTAFTHI_NONBLNPHSPST
    1  RoData even  none     2      2  KVO$PSTAFTHI_NONBLNPHSPST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  KVO$PSTAFTHI_NONBLNPHSPST

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 KVV$CALUSR_PST
         yes           Std       1 KVO$PST
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV_VDH_PST_NEWLIN                r    G$ROS$
PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:5    


        1        1        /*M* KVO$PST VDH Positioning routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVO$PSTAFTHI_NONBLNPHSPST: PROC;

      8   0 000000  D380 0000 0000  xent KVO$PSTAFTHI_NO*LNJ,B5   X6A_AUTO_0
          0 000003       0004 0000                       DC       4,0

        9        9 S      %INCLUDE KV_GLBCNS_E;
       10       10 S      %INCLUDE KV$GLB;
       11       11 S      %INCLUDE KV$GLBCTX;
       12       12        %KV_PHSPSTMOD_E;
       13       19        %KV$MRD;                                /*  REAL DEVICE CONTEXT BLOCK         */
       14       66        %KV$MVD;
       15      110        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
       16      153        %KV$SRD;                                /*  SUBORDINATE REAL DEVICE CONTEXT   */
       17      428        %KV$VDI;                                /*  VDI CONTEXT                       */
       18      499
       19      500    1   DCL KV_VDH_PST_NEWLIN UBIN SYMREF;
       20      501        /* position after the highest non-blank position.                             */
       21      502
       22      503    1   DCL KVO$PST ENTRY(1);
       23      504    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
       24      505
       25      506        /* this group is exited if we are already beyond the highest
       26      507           non-blank position.                                                        */
       27      508
       28      509    2      IF (%KV_SRD.CRT_PST <= %KV_SRD.HI_NONBLN_PST) THEN DO;

    509   0 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000008  DCC6 000A                            LDB,B5   10,B6
          0 00000A  8CC5 0015                            LDI      21,B5
PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:6    
          0 00000C  84C5 0017                            SID      23,B5
          0 00000E  6A01 0046                            BGZ,R6   s:531,PREL
          0 000010  6801 0003                            BLZ,R6   s:516,PREL
          0 000012  7981 0042                            BNEZ,R7  s:531,PREL

       29      510
       30      511        /* we are positioned before or on the highest non-blank position.             */
       31      512
       32      513
       33      514        /* force positioning mode to skip                                             */
       34      515
       35      516    2         IF %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_BLN

    516   0 000014  CC86                                 LDB,B4   ,B6
          0 000015  E844 001A                            LDR,R6   26,B4
          0 000017  6D02                                 CMV,R6   2
          0 000018  0981 000E                            BNE      s:518,PREL
          0 00001A  BCC6 0008                            LDB,B3   8,B6
          0 00001C  82C3 0016                            LB,'0002'X        22,B3
          0 00001E       0002
          0 00001F  0581 0007                            BBF      s:518,PREL

       36      517    2           AND %KV_MRD.BLANKERASES THEN CALL KVV$CALUSR_PST;

    517   0 000021  CBF0 0000                            LAB,B4   0,IMO
          0 000023  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_PST
          0 000026       0001                            DC       s:518,PREL

       37      518    2         %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;

    518   0 000027  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00002A  DC86                                 LDB,B5   ,B6
          0 00002B  6C01                                 LDV,R6   1
          0 00002C  EF45 001A                            STR,R6   26,B5

       38      519
       39      520    2         %KV_SRD.CRT = %KV_SRD.HI_NONBLN;
PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:7    

    520   0 00002E  DCC6 000A                            LDB,B5   10,B6
          0 000030  8CC5 0017                            LDI      23,B5
          0 000032  8D45 0015                            SDI      21,B5

       40      521    2         %KV_MVD.FRMLIN = %KV_SRD.HI_NONBLN.LIN+%KV_MVD.FRSLIN;

    521   0 000034  DCC6 0006                            LDB,B5   6,B6
          0 000036  CCC6 000A                            LDB,B4   10,B6
          0 000038  E845 001D                            LDR,R6   29,B5
          0 00003A  E570 00FF                            AND,R6   255,IMO
          0 00003C  EA44 0017                            ADD,R6   23,B4
          0 00003E  E7C5 001D                            STH,R6   29,B5

       41      522    2         %KV_SRD.CRT.CLM = 1+%KV_SRD.CRT.CLM;

    522   0 000040  DCC6 000A                            LDB,B5   10,B6
          0 000042  8AC5 0016                            INC      22,B5

       42      523    3         IF (%KV_SRD.CRT.CLM > %KV_SRD.BTMRHT.CLM) THEN DO;

    523   0 000044  DCC6 000A                            LDB,B5   10,B6
          0 000046  E845 0016                            LDR,R6   22,B5
          0 000048  E945 000C                            CMR,R6   12,B5
          0 00004A  0A81 000A                            BALE     s:531,PREL

       43      524
       44      525        /* the highest non-blank position is on the right margin.
       45      526           position to the left margin on the next line.                              */
       46      527
       47      528    3            CALL KVO$PST(KV_VDH_PST_NEWLIN) ;

    528   0 00004C  BB80 0000 0000  01                   LAB,B3   0
          0 00004F  CBF0 0100                            LAB,B4   256,IMO
          0 000051  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          0 000054       0001                            DC       s:531,PREL

PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:8    
       48      529    3         END /* IF */;

       49      530    2      END /* IF */;

       50      531    1   END /* SUBROUTINE */;

    531   0 000055  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
       51      532        %EOD;

PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:9    
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$PSTAFTHI_NONBLNPHSPST.
PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:10   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w UBIN(16)    r     1 KV_VDH_PST_NEWLIN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(496)   r     1 KV$SRD
     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KVO$PSTAFTHI_NONBLNPHSPST requires 88 words for executable code.
   Procedure KVO$PSTAFTHI_NONBLNPHSPST requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:11   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:12   
          MINI XREF LISTING

KV$MRD.BLANKERASES
        48**DCL       516>>IF
KV$MVD.FRMLIN
       106**DCL       521<<ASSIGN
KV$MVD.FRSLIN
       106**DCL       521>>ASSIGN
KV$PTR.INPCNDPND
       137**DCL       146--REDEF     150--REDEF
KV$PTR.LINLST$
       133**DCL       134--REDEF
KV$PTR.MRD$
       132**DCL       516>>IF
KV$PTR.MVD$
       132**DCL       521>>ASSIGN    521>>ASSIGN
KV$PTR.SRD$
       133**DCL       509>>IF        509>>IF        520>>ASSIGN    520>>ASSIGN    521>>ASSIGN    522>>ASSIGN
       522>>ASSIGN    523>>IF        523>>IF
KV$PTR.VDI$
       131**DCL       516>>IF        518>>ASSIGN
KV$PTR$
       125**DCL       131--IMP-PTR   509>>IF        509>>IF        516>>IF        516>>IF        518>>ASSIGN
       520>>ASSIGN    520>>ASSIGN    521>>ASSIGN    521>>ASSIGN    521>>ASSIGN    522>>ASSIGN    522>>ASSIGN
       523>>IF        523>>IF
KV$SRD.BTMRHT
       270**DCL       275--REDEF
KV$SRD.BTMRHT.CLM
       272**DCL       523>>IF
KV$SRD.CRT
       346**DCL       351--REDEF     520<<ASSIGN
KV$SRD.CRT.CLM
       348**DCL       522<<ASSIGN    522>>ASSIGN    523>>IF
KV$SRD.CRT_PST
PL6.E3A0      #001=KVO$PSTAFTHI_NONBLNPHSPST File=KVO$PST.:E05TSI                WED 07/30/97 02:10 Page:13   
       351**DCL       509>>IF
KV$SRD.FLDEND
       310**DCL       315--REDEF
KV$SRD.HI_NONBLN
       380**DCL       385--REDEF     520>>ASSIGN
KV$SRD.HI_NONBLN.LIN
       382**DCL       521>>ASSIGN
KV$SRD.HI_NONBLN_PST
       385**DCL       509>>IF
KV$SRD.ORG
       202**DCL       207--REDEF
KV$SRD.SRDEND
       415**DCL       420--REDEF
KV$SRD.TOPLFT
       236**DCL       241--REDEF
KV$VDI.OTPCNDPND.PST
       486**DCL       516>>IF        518<<ASSIGN
KVO$PST
       503**DCL-ENT   528--CALL
KVV$CALUSR_PST
       504**DCL-ENT   517--CALL
KV_VDH_PST_NEWLIN
       500**DCL       528<>CALL

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:14   
       52        1        /*T***********************************************************/
       53        2        /*T*                                                         */
       54        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       55        4        /*T*                                                         */
       56        5        /*T***********************************************************/
       57        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
       58        7        KVO$PST: PROC (VDH_PST);
       59        8
       60        9        /* position to specified virtual position                                     */
       61       10
       62       11 S      %INCLUDE KV$GLB;
       63       12 S      %INCLUDE KV_GLBCNS_E;
       64       13 S      %INCLUDE KV$GLBCTX;
       65       14 S      %INCLUDE KV$INT;
       66       15 S      %INCLUDE KV_PRMID_E;
       67       16 S      %INCLUDE KV$USR;
       68       17 S      %INCLUDE KV$VDH;
       69       18
       70       19    1   DCL KVE$INCFLD ENTRY ALTRET;
       71       20    1   DCL KVF$PST ENTRY(1);
       72       21    1   DCL KVI$RE_DSPINP ENTRY;
       73       22    1   DCL KVO$PAGBRK ENTRY;
       74       23    1   DCL KVO$SCREND ENTRY;
       75       24    1   DCL KVO$WRPBLN ENTRY;
       76       25    1   DCL KVO$ERSTO_ENDOF_INP ENTRY;
       77       26    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
       78       27
       79       28        %KV#VD_ORG_E;
       80       36        %KV_PRMID_E;                            /*  %KV_PRMID_HI                      */
       81      192        %KV_PHSPSTMOD_E;
       82      199        %KV_PSTUNT_E;
       83      205        %KV_PSTORG_E;
       84      210        %KV_VRTPSTMOD_E;
       85      216        %KV$MRD (STCLASS="BASED(Y@SRD$)");      /*  REAL DEVICE CONTEXT BLOCK         */
       86      263        %EQU KV_MRD=CHARTEXT('KV$SRD.MRD$->KV$MRD');
       87      264        %KV$MVD (STCLASS="BASED(Y@MVD$)");      /*  VIRTUAL DEVICE CONTEXT BLOCK      */
       88      308        %EQU KV_MVD=CHARTEXT('KV$MVD');
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:15   
       89      309        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
       90      352        %KV$SRD (STCLASS="BASED(Y@SRD$)");      /*  SUBORDINATE REAL DEVICE CONTEXT   */
       91      627        %EQU KV_SRD=CHARTEXT('KV$SRD');
       92      628        %KV$SSN;                                /*  SESSION CONTEXT                   */
       93      707        %KV$STR;                                /*  STREAM CONTEXT                    */
       94      794        %KV$USRPRM;                             /*  VDH-user parameters               */
       95      845        %KV$USR_ERS;                            /*  ERASE SPECIFIED AREA              */
       96      949        %KV$USR_EVT;                            /*  REPORT EVENT TO USER              */
       97      984        %KV$VDH_OTPLCL;                         /*  ARGUMENT STRUCTURE                */
       98     1057        %KV$VDH_PST;                            /*  ARGUMENT TO VDH POSITION ROUTINE  */
       99     1131        %KV$VDI (STCLASS="BASED(Y@VDI$)");      /*  VDI CONTEXT                       */
      100     1202        %EQU KV_VDI=CHARTEXT('KV$VDI');
      101     1203
      102     1204        %KV$VDH_PST(NAME = VDH_PST, STCLASS = "");
      103     1278    1   DCL KV_VDH_PST_WRAP UBIN SYMREF;
      104     1279
      105     1280        /* SRD pointer, since we use it so much */
      106     1281
      107     1282    1   DCL Y@SRD$ PTR;
      108     1283
      109     1284        /* MVD and VDI, too. */
      110     1285
      111     1286    1   DCL Y@MVD$ PTR;
      112     1287
      113     1288    1   DCL Y@VDI$ PTR;
      114     1289
      115     1290        /* Old virtual line.                                                          */
      116     1291
      117     1292    1   DCL OLDVRTLIN UBIN WORD ALIGNED;
      118     1293
      119     1294        /* physical line (relative; line of virtual column 1 = 0) of
      120     1295           the new virtual column.                                                    */
      121     1296
      122     1297    1   DCL NEWRLTPHSLIN UBIN WORD ALIGNED;
      123     1298
      124     1299        /* current physical column                                                    */
      125     1300
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:16   
      126     1301    1   DCL CRTPHSCLM UBIN WORD ALIGNED;
      127     1302
      128     1303        /* old virtual column.                                                        */
      129     1304
      130     1305    1   DCL OLDVRTCLM UBIN WORD ALIGNED;
      131     1306
      132     1307        /* number of lf's to get to proper position                                   */
      133     1308
      134     1309    1   DCL LF_CNT SBIN WORD ALIGNED;
      135     1310
      136     1311        /* erase to end of srd                                                        */
      137     1312
      138     1313    1   DCL ERS BIT(1) ALIGNED;
      139     1314
      140     1315    1   DCL LINVAL UBIN ALIGNED;
      141     1316
      142     1317    1   DCL PSTMOD UBIN ALIGNED;
      143     1318
      144     1319
      145     1320
      146     1321    1      Y@SRD$ = KV$PTR.SRD$;
      147     1322    1      Y@MVD$ = KV$PTR.MVD$;
      148     1323    1      Y@VDI$ = KV$PTR.VDI$;
      149     1324    1      IF %KV_VDI.OTPCNDPND.PST ~= 0 AND %KV_MRD.BLANKERASES
      150     1325    1        AND %KV_VDI.OTPCNDPND.PST ~= VDH_PST.PHSPSTMOD
      151     1326    1      THEN CALL KVV$CALUSR_PST;
      152     1327    1      %KV_VDI.OTPCNDPND.PST = VDH_PST.PHSPSTMOD;
      153     1328
      154     1329        /* if the positioning units indicate that form mode is needed on the
      155     1330           screen, call the forms positioning routine                                 */
      156     1331
      157     1332    2      IF VDH_PST.VRTPSTUNT=%KV_PSTUNT_FLD THEN DO;
      158     1333
      159     1334        /* The positioning request is asking for field-type addressing.               */
      160     1335
      161     1336    2         IF (%KV_MVD.ORG = %KV#VD_ORG_FORM)
      162     1337
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:17   
      163     1338        /* This virtual device's organization is form. Field positioning
      164     1339           is legal.                                                                  */
      165     1340
      166     1341    2         THEN CALL KVF$PST(VDH_PST);
      167     1342    2         RETURN;
      168     1343    2      END /* IF */;
      169     1344    1      ERS = '0'B;
      170     1345
      171     1346        /* The positioning request isn't asking for field-type addressing.            */
      172     1347
      173     1348        /* check for virtual or physical positioning information                      */
      174     1349
      175     1350    2      IF VDH_PST.VRT THEN DO;
      176     1351
      177     1352        /* virtual positioning                                                        */
      178     1353
      179     1354    2         LF_CNT = 0;
      180     1355    2         OLDVRTCLM = %KV_MVD.VRTCLM;
      181     1356
      182     1357        /* figure out which virtual column we wish to go to                           */
      183     1358
      184     1359    2         IF VDH_PST.HRZPSTORG~=%KV_PSTORG_CRTPST
      185     1360    2         THEN %KV_MVD.VRTCLM = VDH_PST.PSTVAL.CLM;
      186     1361    2         ELSE %KV_MVD.VRTCLM = OLDVRTCLM+VDH_PST.PSTVAL.CLM;
      187     1362
      188     1363    2         CRTPHSCLM = %KV_SRD.CRT.CLM;
      189     1364    2         NEWRLTPHSLIN = (%KV_MVD.VRTCLM-1) / %KV_SRD.WDT;
      190     1365    2         %KV_SRD.CRT.CLM = MOD(%KV_MVD.VRTCLM-1, %KV_SRD.WDT);
      191     1366
      192     1367    3         IF (NEWRLTPHSLIN ~= 0) AND %KV_SRD.TRUNCATE THEN DO;
      193     1368
      194     1369        /* no lfs if truncating                                                       */
      195     1370
      196     1371    3            NEWRLTPHSLIN = 0;
      197     1372    3            %KV_SRD.CRT.CLM = %KV_SRD.WDT;
      198     1373    3         END /* IF */;
      199     1374
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:18   
      200     1375    2         %KV_SRD.CRT.CLM = %KV_SRD.CRT.CLM + %KV_SRD.TOPLFT.CLM;
      201     1376
      202     1377        /* figure out what virtual line we are trying to go to                        */
      203     1378
      204     1379    2         OLDVRTLIN = %KV_MVD.VRTLIN;
      205     1380    2         IF VDH_PST.VRTPSTORG~=%KV_PSTORG_CRTPST
      206     1381    2         THEN %KV_MVD.VRTLIN = VDH_PST.PSTVAL.LIN;
      207     1382    2         ELSE %KV_MVD.VRTLIN = VDH_PST.PSTVAL.LIN+%KV_MVD.VRTLIN;
      208     1383    3         IF %KV_MVD.VRTLIN=OLDVRTLIN THEN DO;
      209     1384
      210     1385        /* We're staying on the same virtual line.                                    */
      211     1386
      212     1387    3            PSTMOD = VDH_PST.VRTPSTMOD;
      213     1388    4            IF VDH_PST.PSTIN_PLC THEN DO;
      214     1389    4               PSTMOD = %KV_VRTPSTMOD_IN_PLC;
      215     1390    4            END /* IF */;
      216     1391    4            IF (PSTMOD = %KV_VRTPSTMOD_RSTVRTPST) THEN DO;
      217     1392
      218     1393        /* were correcting the pst after esc-Q or esc-G, etc.                         */
      219     1394
      220     1395    5               IF %KV_MVD.RETYPOVR THEN DO;
      221     1396
      222     1397        /* in plc is the desired effect                                               */
      223     1398
      224     1399    5                  PSTMOD = %KV_VRTPSTMOD_IN_PLC;
      225     1400    6                  IF NOT %KV_SRD.HI_NONBLNVRT THEN DO;
      226     1401    6                     %KV_SRD.HI_NONBLNVRT = '1'B;
      227     1402    6                     ERS = '1'B;
      228     1403    6                  END /* IF */;
      229     1404    5               END; ELSE DO;
      230     1405    5                  PSTMOD = %KV_VRTPSTMOD_WHTSPCOVRSHT;
      231     1406    5               END /* IF */;
      232     1407    4            END /* IF */;
      233     1408    4            IF (PSTMOD = %KV_VRTPSTMOD_IN_PLC) THEN DO;
      234     1409
      235     1410    4               LF_CNT = %KV_SRD.CRTVRTLINPHSLIN+NEWRLTPHSLIN-%KV_SRD.CRT.LIN;
      236     1411
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:19   
      237     1412        /* we are to position in place (on top of existing text), if possible.        */
      238     1413
      239     1414    4               IF LF_CNT<0 AND NOT %KV_MRD.CURSORUP
      240     1415
      241     1416        /* we're going back up the page.
      242     1417           we dont need any line feeds to get where we're going                       */
      243     1418
      244     1419    4                 OR LF_CNT+%KV_SRD.CRT.LIN+%KV_SRD.DVCLINBIS<%KV_SRD.TOPLFT.LIN
      245     1420
      246     1421        /* either we would go off the top of the screen, or we can't position
      247     1422           upward.                                                                    */
      248     1423
      249     1424    4               THEN CALL Y$PSTWHTSPC;
      250     1425    4            END /* PSTMOD = IN_PLC */;
      251     1426
      252     1427    4            ELSE IF (PSTMOD = %KV_VRTPSTMOD_WHTSPCOVRSHT) THEN DO;
      253     1428
      254     1429        /* We are to go to white space if we over-shot the column we should
      255     1430           be going to.
      256     1431           Example: esc-q's were typed until the cursor was after the next
      257     1432           tab stop, then tab was hit.                                                */
      258     1433
      259     1434    4               IF NEWRLTPHSLIN > (OLDVRTCLM-1)/%KV_SRD.WDT
      260     1435
      261     1436        /* we're supposed to go to a new line, unless we slopped over.                */
      262     1437
      263     1438    4                 AND CRTPHSCLM >= %KV_SRD.TOPLFT.CLM+MOD(OLDVRTCLM-1,%KV_SRD.WDT)
      264     1439
      265     1440        /* we didn't already slop over to the next line. do 1 lf.                     */
      266     1441
      267     1442    4               THEN LF_CNT = 1;
      268     1443    4               ELSE IF CRTPHSCLM>%KV_SRD.CRT.CLM
      269     1444    4               THEN CALL Y$PSTWHTSPC;
      270     1445
      271     1446    4            END;
      272     1447    4            ELSE IF (PSTMOD = %KV_VRTPSTMOD_WHTSPC) THEN DO;
      273     1448
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:20   
      274     1449        /* we are to position to white space.
      275     1450           right of the point on the same line, and no characters below the
      276     1451           line the point is on.                                                      */
      277     1452
      278     1453    4               CALL Y$PSTWHTSPC;
      279     1454
      280     1455        /* no lf's are necessary                                                      */
      281     1456
      282     1457    4            END /* IF */;
      283     1458    3         END;
      284     1459        %EJECT;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:21   
      285     1460    3         ELSE DO;
      286     1461        /* We're moving up or down, virtually.                                       */
      287     1462
      288     1463    3            IF %KV_MVD.ORG=%KV#VD_ORG_X364 AND NOT %KV_SRD.SCROLL
      289     1464    4              AND %KV_SRD.LNG>0 AND VDH_PST.VRTSCRENB THEN DO;
      290     1465        /*
      291     1466           For non_scrolling X364 windows, scrolling operations wrap instead.
      292     1467        */
      293     1468    4               %KV_MVD.VRTLIN = MOD(%KV_MVD.VRTLIN-1,%KV_SRD.LNG)+1;
      294     1469    4            END;
      295     1470    3            LF_CNT = %KV_MVD.VRTLIN - OLDVRTLIN;
      296     1471
      297     1472    3            IF %KV_MVD.ORG=%KV#VD_ORG_UR
      298     1473    4              AND NOT VDH_PST.PSTIN_PLC THEN DO;
      299     1474
      300     1475        /* We don't want to write on existing characters */
      301     1476
      302     1477    4               IF %KV_SRD.CRT.LIN<=%KV_SRD.HI_NONBLN.LIN
      303     1478        /* We're in the thick of it.  Get below the characters. */
      304     1479
      305     1480    4               THEN LF_CNT = LF_CNT+%KV_SRD.HI_NONBLN.LIN-%KV_SRD.CRT.LIN;
      306     1481    4               ELSE IF CRTPHSCLM=%KV_SRD.TOPLFT.CLM
      307     1482    4                 AND %KV_SRD.CRTVRTLINPHSLIN<%KV_SRD.CRT.LIN
      308     1483    4                 AND NEWRLTPHSLIN=0
      309     1484        /* We're actually at the end of the previous line, and going to a new one. */
      310     1485
      311     1486    4               THEN LF_CNT=LF_CNT-1;
      312     1487    4            END /* IF */;
      313     1488
      314     1489    3            LF_CNT = LF_CNT+NEWRLTPHSLIN;
      315     1490
      316     1491    3         END /* IF */;
      317     1492    2         %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRT.LIN+LF_CNT-NEWRLTPHSLIN;
      318     1493    2         %KV_SRD.VRTPSTOK = '1'B;
      319     1494    2      END; ELSE DO;
      320     1495
      321     1496        /* the positioning units are physical                                         */
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:22   
      322     1497
      323     1498        /* determine what physical line we are going to                               */
      324     1499
      325     1500    3         DO CASE( VDH_PST.HRZPSTORG );
      326     1501    3         CASE(%KV_PSTORG_ABS );
      327     1502
      328     1503        /* The horizontal positioning is expressed as an absolute value.              */
      329     1504
      330     1505    3            %KV_SRD.CRT.CLM = VDH_PST.PSTVAL.CLM;
      331     1506    3         CASE(%KV_PSTORG_CRTPST );
      332     1507
      333     1508        /* The horizontal positioning is expressed as a value relative
      334     1509           to the current column.                                                     */
      335     1510
      336     1511    3            %KV_SRD.CRT.CLM = %KV_SRD.CRT.CLM+VDH_PST.PSTVAL.CLM;
      337     1512    3         CASE(%KV_PSTORG_SRD );
      338     1513
      339     1514        /* The horizontal positioning is expressed as a value relative
      340     1515           to the SRD margins.                                                        */
      341     1516
      342     1517    3            %KV_SRD.CRT.CLM = %KV_SRD.TOPLFT.CLM+VDH_PST.PSTVAL.CLM - 1;
      343     1518    3         END /* CASE */;
      344     1519    3         DO CASE( VDH_PST.VRTPSTORG );
      345     1520    3         CASE(%KV_PSTORG_ABS );
      346     1521
      347     1522        /* The vertical positioning is expressed as an absolute value.                */
      348     1523
      349     1524    3            LF_CNT = VDH_PST.PSTVAL.LIN - %KV_SRD.CRT.LIN;
      350     1525
      351     1526    3         CASE(%KV_PSTORG_CRTPST );
      352     1527
      353     1528        /* The vertical positioning is expressed as a value relative
      354     1529           to the current line.                                                       */
      355     1530
      356     1531    3            LF_CNT = VDH_PST.PSTVAL.LIN;
      357     1532    3         CASE(%KV_PSTORG_SRD );
      358     1533
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:23   
      359     1534        /* The vertical positioning is expressed as a value relative
      360     1535           to the SRD margins.                                                        */
      361     1536
      362     1537    3            LF_CNT = %KV_SRD.TOPLFT.LIN + VDH_PST.PSTVAL.LIN - %KV_SRD.CRT.LIN - 1;
      363     1538
      364     1539    3         END /* CASE */;
      365     1540
      366     1541    2         %KV_SRD.VRTPSTOK = '0'B;
      367     1542
      368     1543    2      END /* IF */;
      369     1544
      370     1545        /* if there are lf's to do, do them                                           */
      371     1546
      372     1547    2      IF (LF_CNT > 0) THEN DO;
      373     1548
      374     1549        /* check for logical page break                                               */
      375     1550
      376     1551    2         IF %KV_VDI.DVCPGNENB AND %KV_MVD.LNG>=12 AND %KV_MVD.ORG=%KV#VD_ORG_UR
      377     1552
      378     1553        /* but only if not already in a physical page break                           */
      379     1554
      380     1555    2         THEN IF %KV_MVD.FRMLIN+LF_CNT>=%KV_MVD.LNG
      381     1556    3           AND NOT %KV_MVD.FRMSCNINH THEN DO;
      382     1557
      383     1558    3            CALL KVO$PAGBRK;
      384     1559    3            RETURN;
      385     1560    3         END; ELSE DO;
      386     1561
      387     1562        /* we are not at page bottom. update the form page position.                  */
      388     1563
      389     1564    3            %KV_MVD.FRMLIN = %KV_MVD.FRMLIN+LF_CNT;
      390     1565    3         END /* IF */;
      391     1566
      392     1567        /* account for the lf's in physical position                                  */
      393     1568
      394     1569    2         IF %KV_MVD.ORG=%KV#VD_ORG_SE
      395     1570    3           AND %KV_SRD.CRT.LIN+LF_CNT>%KV_SRD.FLDEND.LIN THEN DO;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:24   
      396     1571        /*
      397     1572           We may need to increase the size of this record in the screen editor.
      398     1573        */
      399     1574    3            IF LF_CNT+%KV_SRD.CRT.LIN>%KV_SRD.FLDEND.LIN+1 THEN RETURN;
      400     1575    3            IF %KV_SRD.FLDEND.LIN=%KV_SRD.BTMRHT.LIN
      401     1576    3              AND %KV_SRD.CRTVRTLINPHSLIN=%KV_SRD.TOPLFT.LIN
      402     1577    3            THEN %KV_SRD.CRT.CLM = %KV_SRD.TOPLFT.CLM; /* The window shrank      */
      403     1578    3            ELSE IF %KV_SRD.CRT.CLM=%KV_SRD.TOPLFT.CLM
      404     1579    4              AND ADDR(VDH_PST)~=ADDR(KV_VDH_PST_WRAP) THEN DO;
      405     1580        /*
      406     1581           Position just past the last position - stay on the same line instead.
      407     1582        */
      408     1583    4               %KV_SRD.CRT_PST = %KV_SRD.FLDEND_PST+1;
      409     1584    4               LF_CNT = 0;
      410     1585    4            END; ELSE DO;
      411     1586    4               %KV_VDI.OTPCNDPND.PST = 0;
      412     1587    4               %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN+LF_CNT;
      413     1588    4               CALL KVE$INCFLD;
      414     1589    4               RETURN;
      415     1590    4            END;
      416     1591    3         END;
      417     1592
      418     1593    2         ELSE IF %KV_VDI.DVCPGNENB AND %KV_MVD.ORG=%KV#VD_ORG_UR
      419     1594    2           AND (%KV_SRD.CRT.LIN+LF_CNT>%KV_SRD.BTMRHT.LIN
      420     1595    2           OR %KV_SRD.CRT.LIN+LF_CNT=%KV_SRD.BTMRHT.LIN
      421     1596    3           AND %KV_SRD.PRINTHALT AND %KV_SRD.PAGEHALT) THEN DO;
      422     1597
      423     1598        /* the cursor is on the last line that is normally printed on.                */
      424     1599
      425     1600    3            CALL KVO$SCREND;
      426     1601    4            IF VDH_PST.VRT AND NOT %KV_SRD.VRTPSTOK THEN DO;
      427     1602    4               %KV_SRD.CRT.LIN = %KV_SRD.CRTVRTLINPHSLIN+NEWRLTPHSLIN;
      428     1603    4               IF %KV_SRD.CRT.LIN+1>=%KV_SRD.NXTNONBLNLIN
      429     1604    4               THEN CALL KVO$WRPBLN;
      430     1605    4               %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;
      431     1606    4            END;
      432     1607    3            RETURN;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:25   
      433     1608    3         END /* IF */;
      434     1609    2         %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN + LF_CNT;
      435     1610    2         LF_CNT = %KV_SRD.BTMRHT.LIN;
      436     1611    2         IF %KV_SRD.CRT.LIN>LF_CNT THEN CALL Y$FIXPST;
      437     1612    3         IF (%KV_SRD.CRT.LIN+1 >= %KV_SRD.NXTNONBLNLIN) THEN DO;
      438     1613
      439     1614
      440     1615    3            CALL KVO$WRPBLN;
      441     1616    3         END /* IF */;
      442     1617    2         RETURN;
      443     1618    2      END /* IF */;
      444     1619    2      IF (LF_CNT < 0) THEN DO;
      445     1620
      446     1621        /* We're to position back up the page.                                        */
      447     1622
      448     1623    2         IF %KV_MVD.LNG>=12
      449     1624    2         THEN %KV_MVD.FRMLIN = %KV_MVD.FRMLIN+LF_CNT;
      450     1625    2         %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN+LF_CNT;
      451     1626    2         LF_CNT = %KV_SRD.TOPLFT.LIN;
      452     1627    2         IF %KV_SRD.CRT.LIN<LF_CNT THEN CALL Y$FIXPST;
      453     1628    2      END /* IF */;
      454     1629    2      IF ERS THEN DO;
      455     1630    2         CALL KVO$ERSTO_ENDOF_INP;
      456     1631    2      END /* IF */;
      457     1632    1      RETURN;
      458     1633        %EJECT;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:26   
      459     1634        /*I* NAME:Y$FIXPST
      460     1635           PURPOSE: Adjusts the SRD line counters to keep CRT.LIN in the window.
      461     1636           LF_CNT contains the edgeline that has been exceeded.
      462     1637           This routine is normally only exercised in scrolling X364 windows.
      463     1638           Only X364 ones get past the call to KVO$SCREND at the end of KVO$PST.
      464     1639           For non-scrolling ones, we only get here for TRANSITION VFC and input
      465     1640           fields that extend past the bottom of the window.
      466     1641        */
      467     1642    1   Y$FIXPST: PROC;
      468     1643    2      LF_CNT = LF_CNT-%KV_SRD.CRT.LIN;
      469     1644    2      %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN+LF_CNT;
      470     1645    2      %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRTVRTLINPHSLIN+LF_CNT;
      471     1646    2      %KV_SRD.HI_NONBLN.LIN = %KV_SRD.HI_NONBLN.LIN+LF_CNT;
      472     1647    2      %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS-LF_CNT;
      473     1648    2      IF NOT %KV_SRD.SCROLL OR %KV_SRD.LNG=1
      474     1649    2      THEN %KV_SRD.DVCLINBIS = 0;     /* oneliners mustn't be asked to scroll    */
      475     1650    2   END Y$FIXPST;
      476     1651        %EJECT;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:27   
      477     1652        /*I* NAME:Y$PSTWHTSPC
      478     1653           PURPOSE: Position to white space.                                          */
      479     1654
      480     1655    1   Y$PSTWHTSPC: PROC;
      481     1656    2      LF_CNT = %KV_SRD.HI_NONBLN.LIN-%KV_SRD.CRT.LIN;
      482     1657    3      IF (LF_CNT >= 0) THEN DO;
      483     1658
      484     1659        /* The cursor isn't on a line below the highest non-blank line.               */
      485     1660
      486     1661    4         IF %KV_SRD.HI_NONBLN.CLM>=%KV_SRD.CRT.CLM THEN DO;
      487     1662
      488     1663        /* The highest non-blank character is to the right of the cursor;
      489     1664           space down an extra line to get beyond it.                                 */
      490     1665
      491     1666    4            LF_CNT = LF_CNT+1;
      492     1667    4         END /* IF */;
      493     1668    3         IF %KV_MVD.ORG=%KV#VD_ORG_X364 THEN LF_CNT = 1;
      494     1669    3      END;
      495     1670    2      ELSE
      496     1671    2      LF_CNT = 0;
      497     1672    2      RETURN;
      498     1673    2   END Y$PSTWHTSPC;
      499     1674    1   END KVO$PST;
      500     1675        %EOD;

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:28   
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$PST.

   Procedure KVO$PST requires 877 words for executable code.
   Procedure KVO$PST requires 22 words of local(AUTO) storage.

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:29   

 Object Unit name= KVO$PST                                    File name= KVO$PST.:E05TOU
 UTS= JUL 30 '97 02:10:57.76 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   877    36D  KVO$PST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KVO$PST

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 KVV$CALUSR_PST
         yes           Std       1 KVF$PST
 yes     yes           Std       0 KVE$INCFLD
         yes           Std       0 KVO$WRPBLN
         yes           Std       0 KVO$PAGBRK
         yes           Std       0 KVO$ERSTO_ENDOF_INP
         yes           Std       0 KVO$SCREND
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:30   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV_VDH_PST_WRAP                  r    G$ROS$
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:31   


       52        1        /*T***********************************************************/
       53        2        /*T*                                                         */
       54        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       55        4        /*T*                                                         */
       56        5        /*T***********************************************************/
       57        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
       58        7        KVO$PST: PROC (VDH_PST);

      7   0 000000  D380 0000 0000  xent KVO$PST         LNJ,B5   X6A_AUTO_1
          0 000003       0016 0001                       DC       22,1

       59        8
       60        9        /* position to specified virtual position                                     */
       61       10
       62       11 S      %INCLUDE KV$GLB;
       63       12 S      %INCLUDE KV_GLBCNS_E;
       64       13 S      %INCLUDE KV$GLBCTX;
       65       14 S      %INCLUDE KV$INT;
       66       15 S      %INCLUDE KV_PRMID_E;
       67       16 S      %INCLUDE KV$USR;
       68       17 S      %INCLUDE KV$VDH;
       69       18
       70       19    1   DCL KVE$INCFLD ENTRY ALTRET;
       71       20    1   DCL KVF$PST ENTRY(1);
       72       21    1   DCL KVI$RE_DSPINP ENTRY;
       73       22    1   DCL KVO$PAGBRK ENTRY;
       74       23    1   DCL KVO$SCREND ENTRY;
       75       24    1   DCL KVO$WRPBLN ENTRY;
       76       25    1   DCL KVO$ERSTO_ENDOF_INP ENTRY;
       77       26    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
       78       27
       79       28        %KV#VD_ORG_E;
       80       36        %KV_PRMID_E;                            /*  %KV_PRMID_HI                      */
       81      192        %KV_PHSPSTMOD_E;
       82      199        %KV_PSTUNT_E;
       83      205        %KV_PSTORG_E;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:32   
       84      210        %KV_VRTPSTMOD_E;
       85      216        %KV$MRD (STCLASS="BASED(Y@SRD$)");      /*  REAL DEVICE CONTEXT BLOCK         */
       86      263        %EQU KV_MRD=CHARTEXT('KV$SRD.MRD$->KV$MRD');
       87      264        %KV$MVD (STCLASS="BASED(Y@MVD$)");      /*  VIRTUAL DEVICE CONTEXT BLOCK      */
       88      308        %EQU KV_MVD=CHARTEXT('KV$MVD');
       89      309        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
       90      352        %KV$SRD (STCLASS="BASED(Y@SRD$)");      /*  SUBORDINATE REAL DEVICE CONTEXT   */
       91      627        %EQU KV_SRD=CHARTEXT('KV$SRD');
       92      628        %KV$SSN;                                /*  SESSION CONTEXT                   */
       93      707        %KV$STR;                                /*  STREAM CONTEXT                    */
       94      794        %KV$USRPRM;                             /*  VDH-user parameters               */
       95      845        %KV$USR_ERS;                            /*  ERASE SPECIFIED AREA              */
       96      949        %KV$USR_EVT;                            /*  REPORT EVENT TO USER              */
       97      984        %KV$VDH_OTPLCL;                         /*  ARGUMENT STRUCTURE                */
       98     1057        %KV$VDH_PST;                            /*  ARGUMENT TO VDH POSITION ROUTINE  */
       99     1131        %KV$VDI (STCLASS="BASED(Y@VDI$)");      /*  VDI CONTEXT                       */
      100     1202        %EQU KV_VDI=CHARTEXT('KV$VDI');
      101     1203
      102     1204        %KV$VDH_PST(NAME = VDH_PST, STCLASS = "");
      103     1278    1   DCL KV_VDH_PST_WRAP UBIN SYMREF;
      104     1279
      105     1280        /* SRD pointer, since we use it so much */
      106     1281
      107     1282    1   DCL Y@SRD$ PTR;
      108     1283
      109     1284        /* MVD and VDI, too. */
      110     1285
      111     1286    1   DCL Y@MVD$ PTR;
      112     1287
      113     1288    1   DCL Y@VDI$ PTR;
      114     1289
      115     1290        /* Old virtual line.                                                          */
      116     1291
      117     1292    1   DCL OLDVRTLIN UBIN WORD ALIGNED;
      118     1293
      119     1294        /* physical line (relative; line of virtual column 1 = 0) of
      120     1295           the new virtual column.                                                    */
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:33   
      121     1296
      122     1297    1   DCL NEWRLTPHSLIN UBIN WORD ALIGNED;
      123     1298
      124     1299        /* current physical column                                                    */
      125     1300
      126     1301    1   DCL CRTPHSCLM UBIN WORD ALIGNED;
      127     1302
      128     1303        /* old virtual column.                                                        */
      129     1304
      130     1305    1   DCL OLDVRTCLM UBIN WORD ALIGNED;
      131     1306
      132     1307        /* number of lf's to get to proper position                                   */
      133     1308
      134     1309    1   DCL LF_CNT SBIN WORD ALIGNED;
      135     1310
      136     1311        /* erase to end of srd                                                        */
      137     1312
      138     1313    1   DCL ERS BIT(1) ALIGNED;
      139     1314
      140     1315    1   DCL LINVAL UBIN ALIGNED;
      141     1316
      142     1317    1   DCL PSTMOD UBIN ALIGNED;
      143     1318
      144     1319
      145     1320
      146     1321    1      Y@SRD$ = KV$PTR.SRD$;

   1321   0 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000008  DCC6 000A                            LDB,B5   10,B6
          0 00000A  DFC7 0006                            STB,B5   Y@SRD$,AUTO

      147     1322    1      Y@MVD$ = KV$PTR.MVD$;

   1322   0 00000C  CCC6 0006                            LDB,B4   6,B6
          0 00000E  CFC7 0008                            STB,B4   Y@MVD$,AUTO

      148     1323    1      Y@VDI$ = KV$PTR.VDI$;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:34   

   1323   0 000010  BC86                                 LDB,B3   ,B6
          0 000011  BFC7 000A                            STB,B3   Y@VDI$,AUTO

      149     1324    1      IF %KV_VDI.OTPCNDPND.PST ~= 0 AND %KV_MRD.BLANKERASES

   1324   0 000013  E843 001A                            LDR,R6   26,B3
          0 000015  6901 0016                            BEZ,R6   s:1327,PREL
          0 000017  AC85                                 LDB,B2   ,B5
          0 000018  82C2 0016                            LB,'0002'X        22,B2
          0 00001A       0002
          0 00001B  0581 0010                            BBF      s:1327,PREL
          0 00001D  9CC7 0004                            LDB,B1   @VDH_PST,AUTO
          0 00001F  D801                                 LDR,R5   ,B1
          0 000020  5043                                 SOR,R5   3
          0 000021  D570 0003                            AND,R5   3,IMO
          0 000023  D956                                 CMR,R5   R6
          0 000024  0901 0007                            BE       s:1327,PREL

      150     1325    1        AND %KV_VDI.OTPCNDPND.PST ~= VDH_PST.PHSPSTMOD
      151     1326    1      THEN CALL KVV$CALUSR_PST;

   1326   0 000026  CBF0 0000                            LAB,B4   0,IMO
          0 000028  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_PST
          0 00002B       0001                            DC       s:1327,PREL

      152     1327    1      %KV_VDI.OTPCNDPND.PST = VDH_PST.PHSPSTMOD;

   1327   0 00002C  ECC7 000A                            LDB,B6   Y@VDI$,AUTO
          0 00002E  DCC7 0004                            LDB,B5   @VDH_PST,AUTO
          0 000030  E805                                 LDR,R6   ,B5
          0 000031  6043                                 SOR,R6   3
          0 000032  E570 0003                            AND,R6   3,IMO
          0 000034  EF46 001A                            STR,R6   26,B6

      153     1328
      154     1329        /* if the positioning units indicate that form mode is needed on the
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:35   
      155     1330           screen, call the forms positioning routine                                 */
      156     1331
      157     1332    2      IF VDH_PST.VRTPSTUNT=%KV_PSTUNT_FLD THEN DO;

   1332   0 000036  D845 0001                            LDR,R5   1,B5
          0 000038  5048                                 SOR,R5   8
          0 000039  D570 0003                            AND,R5   3,IMO
          0 00003B  5D02                                 CMV,R5   2
          0 00003C  0981 0013                            BNE      s:1344,PREL

      158     1333
      159     1334        /* The positioning request is asking for field-type addressing.               */
      160     1335
      161     1336    2         IF (%KV_MVD.ORG = %KV#VD_ORG_FORM)

   1336   0 00003E  CCC7 0008                            LDB,B4   Y@MVD$,AUTO
          0 000040  C2C4 0015                            LLH,R4   21,B4
          0 000042  4D04                                 CMV,R4   4
          0 000043  0981 0009                            BNE      s:1342,PREL

      162     1337
      163     1338        /* This virtual device's organization is form. Field positioning
      164     1339           is legal.                                                                  */
      165     1340
      166     1341    2         THEN CALL KVF$PST(VDH_PST);

   1341   0 000045  BBC7 0004                            LAB,B3   @VDH_PST,AUTO
          0 000047  CBF0 0100                            LAB,B4   256,IMO
          0 000049  E380 0000 0000  xent                 LNJ,B6   KVF$PST
          0 00004C       0001                            DC       s:1342,PREL

      167     1342    2         RETURN;

   1342   0 00004D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      168     1343    2      END /* IF */;
      169     1344    1      ERS = '0'B;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:36   

   1344   0 000050  8747 0011                            CL       ERS,AUTO

      170     1345
      171     1346        /* The positioning request isn't asking for field-type addressing.            */
      172     1347
      173     1348        /* check for virtual or physical positioning information                      */
      174     1349
      175     1350    2      IF VDH_PST.VRT THEN DO;

   1350   0 000052  8285                                 LB,'0080'X        ,B5
   1350   0 000053       0080
          0 000054  0581 013B                            BBF      s:1500,PREL

      176     1351
      177     1352        /* virtual positioning                                                        */
      178     1353
      179     1354    2         LF_CNT = 0;

   1354   0 000056  8747 0010                            CL       LF_CNT,AUTO

      180     1355    2         OLDVRTCLM = %KV_MVD.VRTCLM;

   1355   0 000058  CCC7 0008                            LDB,B4   Y@MVD$,AUTO
          0 00005A  C844 001B                            LDR,R4   27,B4
          0 00005C  CF47 000F                            STR,R4   OLDVRTCLM,AUTO

      181     1356
      182     1357        /* figure out which virtual column we wish to go to                           */
      183     1358
      184     1359    2         IF VDH_PST.HRZPSTORG~=%KV_PSTORG_CRTPST

   1359   0 00005E  B805                                 LDR,R3   ,B5
          0 00005F  B570 0003                            AND,R3   3,IMO
          0 000061  3D02                                 CMV,R3   2
          0 000062  0901 0007                            BE       s:1361,PREL

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:37   
      185     1360    2         THEN %KV_MVD.VRTCLM = VDH_PST.PSTVAL.CLM;

   1360   0 000064  C845 0003                            LDR,R4   3,B5
          0 000066  CF44 001B                            STR,R4   27,B4
          0 000068  0F81 0005                            B        s:1363,PREL

      186     1361    2         ELSE %KV_MVD.VRTCLM = OLDVRTCLM+VDH_PST.PSTVAL.CLM;

   1361   0 00006A  CA45 0003                            ADD,R4   3,B5
          0 00006C  CF44 001B                            STR,R4   27,B4

      187     1362
      188     1363    2         CRTPHSCLM = %KV_SRD.CRT.CLM;

   1363   0 00006E  BCC7 0006                            LDB,B3   Y@SRD$,AUTO
          0 000070  E843 0016                            LDR,R6   22,B3
          0 000072  EF47 000E                            STR,R6   CRTPHSCLM,AUTO

      189     1364    2         NEWRLTPHSLIN = (%KV_MVD.VRTCLM-1) / %KV_SRD.WDT;

   1364   0 000074  4EFF                                 ADV,R4   -1
          0 000075  C343 000D                            DIV,R4   13,B3
          0 000077  CF47 000D                            STR,R4   NEWRLTPHSLIN,AUTO

      190     1365    2         %KV_SRD.CRT.CLM = MOD(%KV_MVD.VRTCLM-1, %KV_SRD.WDT);

   1365   0 000079  E844 001B                            LDR,R6   27,B4
          0 00007B  70F0                                 DAR,R7   16
          0 00007C  8470 FFFF FFFF                       AID      -1,IMO
          0 00007F  F343 000D                            DIV,R7   13,B3
          0 000081  EF43 0016                            STR,R6   22,B3

      191     1366
      192     1367    3         IF (NEWRLTPHSLIN ~= 0) AND %KV_SRD.TRUNCATE THEN DO;

   1367   0 000083  4901 000C                            BEZ,R4   s:1375,PREL
          0 000085  82C3 000E                            LB,'0004'X        14,B3
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:38   
          0 000087       0004
          0 000088  0581 0007                            BBF      s:1375,PREL

      193     1368
      194     1369        /* no lfs if truncating                                                       */
      195     1370
      196     1371    3            NEWRLTPHSLIN = 0;

   1371   0 00008A  8747 000D                            CL       NEWRLTPHSLIN,AUTO

      197     1372    3            %KV_SRD.CRT.CLM = %KV_SRD.WDT;

   1372   0 00008C  E843 000D                            LDR,R6   13,B3
          0 00008E  EF43 0016                            STR,R6   22,B3

      198     1373    3         END /* IF */;

      199     1374
      200     1375    2         %KV_SRD.CRT.CLM = %KV_SRD.CRT.CLM + %KV_SRD.TOPLFT.CLM;

   1375   0 000090  EA43 000A                            ADD,R6   10,B3
          0 000092  EF43 0016                            STR,R6   22,B3

      201     1376
      202     1377        /* figure out what virtual line we are trying to go to                        */
      203     1378
      204     1379    2         OLDVRTLIN = %KV_MVD.VRTLIN;

   1379   0 000094  D844 001A                            LDR,R5   26,B4
          0 000096  DF47 000C                            STR,R5   OLDVRTLIN,AUTO

      205     1380    2         IF VDH_PST.VRTPSTORG~=%KV_PSTORG_CRTPST

   1380   0 000098  C845 0001                            LDR,R4   1,B5
          0 00009A  404B                                 SOR,R4   11
          0 00009B  C570 0003                            AND,R4   3,IMO
          0 00009D  4D02                                 CMV,R4   2
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:39   
          0 00009E  0901 0007                            BE       s:1382,PREL

      206     1381    2         THEN %KV_MVD.VRTLIN = VDH_PST.PSTVAL.LIN;

   1381   0 0000A0  D845 0002                            LDR,R5   2,B5
          0 0000A2  DF44 001A                            STR,R5   26,B4
          0 0000A4  0F81 0005                            B        s:1383,PREL

      207     1382    2         ELSE %KV_MVD.VRTLIN = VDH_PST.PSTVAL.LIN+%KV_MVD.VRTLIN;

   1382   0 0000A6  DA45 0002                            ADD,R5   2,B5
          0 0000A8  DF44 001A                            STR,R5   26,B4

      208     1383    3         IF %KV_MVD.VRTLIN=OLDVRTLIN THEN DO;

   1383   0 0000AA  D947 000C                            CMR,R5   OLDVRTLIN,AUTO
          0 0000AC  0981 0085                            BNE      s:1463,PREL

      209     1384
      210     1385        /* We're staying on the same virtual line.                                    */
      211     1386
      212     1387    3            PSTMOD = VDH_PST.VRTPSTMOD;

   1387   0 0000AE  E805                                 LDR,R6   ,B5
          0 0000AF  6045                                 SOR,R6   5
          0 0000B0  E570 0003                            AND,R6   3,IMO
          0 0000B2  EF47 0013                            STR,R6   PSTMOD,AUTO

      213     1388    4            IF VDH_PST.PSTIN_PLC THEN DO;

   1388   0 0000B4  8285                                 LB,'0004'X        ,B5
   1388   0 0000B5       0004
          0 0000B6  0581 0004                            BBF      s:1391,PREL

      214     1389    4               PSTMOD = %KV_VRTPSTMOD_IN_PLC;

   1389   0 0000B8  6C02                                 LDV,R6   2
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:40   
          0 0000B9  EF47 0013                            STR,R6   PSTMOD,AUTO

      215     1390    4            END /* IF */;

      216     1391    4            IF (PSTMOD = %KV_VRTPSTMOD_RSTVRTPST) THEN DO;

   1391   0 0000BB  6D03                                 CMV,R6   3
          0 0000BC  0981 0018                            BNE      s:1408,PREL

      217     1392
      218     1393        /* were correcting the pst after esc-Q or esc-G, etc.                         */
      219     1394
      220     1395    5               IF %KV_MVD.RETYPOVR THEN DO;

   1395   0 0000BE  82C4 0016                            LB,'0080'X        22,B4
   1395   0 0000C0       0080
          0 0000C1  0581 0011                            BBF      s:1405,PREL

      221     1396
      222     1397        /* in plc is the desired effect                                               */
      223     1398
      224     1399    5                  PSTMOD = %KV_VRTPSTMOD_IN_PLC;

   1399   0 0000C3  6C02                                 LDV,R6   2
          0 0000C4  EF47 0013                            STR,R6   PSTMOD,AUTO

      225     1400    6                  IF NOT %KV_SRD.HI_NONBLNVRT THEN DO;

   1400   0 0000C6  82C3 000E                            LB,'0002'X        14,B3
   1400   0 0000C8       0002
          0 0000C9  0501 000B                            BBT      s:1408,PREL

      226     1401    6                     %KV_SRD.HI_NONBLNVRT = '1'B;

   1401   0 0000CB  8943 000E                            LBT,'0002'X       14,B3
   1401   0 0000CD       0002

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:41   
      227     1402    6                     ERS = '1'B;

   1402   0 0000CE  8947 0011                            LBT,'8000'X       ERS,AUTO
   1402   0 0000D0       8000

      228     1403    6                  END /* IF */;

      229     1404    5               END; ELSE DO;

   1404   0 0000D1  0F81 0003                            B        s:1408,PREL

      230     1405    5                  PSTMOD = %KV_VRTPSTMOD_WHTSPCOVRSHT;

   1405   0 0000D3  8747 0013                            CL       PSTMOD,AUTO

      231     1406    5               END /* IF */;

      232     1407    4            END /* IF */;

      233     1408    4            IF (PSTMOD = %KV_VRTPSTMOD_IN_PLC) THEN DO;

   1408   0 0000D5  E847 0013                            LDR,R6   PSTMOD,AUTO
          0 0000D7  6D02                                 CMV,R6   2
          0 0000D8  0981 001E                            BNE      s:1427,PREL

      234     1409
      235     1410    4               LF_CNT = %KV_SRD.CRTVRTLINPHSLIN+NEWRLTPHSLIN-%KV_SRD.CRT.LIN;

   1410   0 0000DA  D843 0013                            LDR,R5   19,B3
          0 0000DC  DA47 000D                            ADD,R5   NEWRLTPHSLIN,AUTO
          0 0000DE  D243 0015                            SUB,R5   21,B3
          0 0000E0  DF47 0010                            STR,R5   LF_CNT,AUTO

      236     1411
      237     1412        /* we are to position in place (on top of existing text), if possible.        */
      238     1413
      239     1414    4               IF LF_CNT<0 AND NOT %KV_MRD.CURSORUP
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:42   

   1414   0 0000E2  5881 0007                            BGEZ,R5  s:1414+8,PREL
          0 0000E4  AC83                                 LDB,B2   ,B3
          0 0000E5  82C2 0017                            LB,'0002'X        23,B2
          0 0000E7       0002
          0 0000E8  0581 0009                            BBF      s:1424,PREL
          0 0000EA  DA43 0015                            ADD,R5   21,B3
          0 0000EC  DA43 0019                            ADD,R5   25,B3
          0 0000EE  D943 0009                            CMR,R5   9,B3
          0 0000F0  0881 0090                            BAGE     s:1492,PREL

      240     1415
      241     1416        /* we're going back up the page.
      242     1417           we dont need any line feeds to get where we're going                       */
      243     1418
      244     1419    4                 OR LF_CNT+%KV_SRD.CRT.LIN+%KV_SRD.DVCLINBIS<%KV_SRD.TOPLFT.LIN
      245     1420
      246     1421        /* either we would go off the top of the screen, or we can't position
      247     1422           upward.                                                                    */
      248     1423
      249     1424    4               THEN CALL Y$PSTWHTSPC;

   1424   0 0000F2  E3C0 0254                            LNJ,B6   s:0,PREL
          0 0000F4       0001                            DC       s:1425,PREL

      250     1425    4            END /* PSTMOD = IN_PLC */;

   1425   0 0000F5  0F81 008B                            B        s:1492,PREL

      251     1426
      252     1427    4            ELSE IF (PSTMOD = %KV_VRTPSTMOD_WHTSPCOVRSHT) THEN DO;

   1427   0 0000F7  6981 0032                            BNEZ,R6  s:1447,PREL

      253     1428
      254     1429        /* We are to go to white space if we over-shot the column we should
      255     1430           be going to.
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:43   
      256     1431           Example: esc-q's were typed until the cursor was after the next
      257     1432           tab stop, then tab was hit.                                                */
      258     1433
      259     1434    4               IF NEWRLTPHSLIN > (OLDVRTCLM-1)/%KV_SRD.WDT

   1434   0 0000F9  F847 000F                            LDR,R7   OLDVRTCLM,AUTO
          0 0000FB  6C00                                 LDV,R6   0
          0 0000FC  8470 FFFF FFFF                       AID      -1,IMO
          0 0000FF  F343 000D                            DIV,R7   13,B3
          0 000101  E857                                 LDR,R6   R7
          0 000102  6801 0005                            BLZ,R6   s:1434+15,PREL
          0 000104  E947 000D                            CMR,R6   NEWRLTPHSLIN,AUTO
          0 000106  0281 0016                            BGE      s:1443,PREL
          0 000108  F847 000F                            LDR,R7   OLDVRTCLM,AUTO
          0 00010A  6C00                                 LDV,R6   0
          0 00010B  8470 FFFF FFFF                       AID      -1,IMO
          0 00010E  F343 000D                            DIV,R7   13,B3
          0 000110  EA43 000A                            ADD,R6   10,B3
          0 000112  6801 0005                            BLZ,R6   s:1442,PREL
          0 000114  E947 000E                            CMR,R6   CRTPHSCLM,AUTO
          0 000116  0301 0006                            BG       s:1443,PREL

      260     1435
      261     1436        /* we're supposed to go to a new line, unless we slopped over.                */
      262     1437
      263     1438    4                 AND CRTPHSCLM >= %KV_SRD.TOPLFT.CLM+MOD(OLDVRTCLM-1,%KV_SRD.WDT)
      264     1439
      265     1440        /* we didn't already slop over to the next line. do 1 lf.                     */
      266     1441
      267     1442    4               THEN LF_CNT = 1;

   1442   0 000118  6C01                                 LDV,R6   1
          0 000119  EF47 0010                            STR,R6   LF_CNT,AUTO
          0 00011B  0F81 0065                            B        s:1492,PREL

      268     1443    4               ELSE IF CRTPHSCLM>%KV_SRD.CRT.CLM

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:44   
   1443   0 00011D  E847 000E                            LDR,R6   CRTPHSCLM,AUTO
          0 00011F  6801 0005                            BLZ,R6   s:1444,PREL
          0 000121  E943 0016                            CMR,R6   22,B3
          0 000123  0A81 005D                            BALE     s:1492,PREL

      269     1444    4               THEN CALL Y$PSTWHTSPC;

   1444   0 000125  E3C0 0221                            LNJ,B6   s:0,PREL
          0 000127       0001                            DC       s:1446,PREL

      270     1445
      271     1446    4            END;

   1446   0 000128  0F81 0058                            B        s:1492,PREL

      272     1447    4            ELSE IF (PSTMOD = %KV_VRTPSTMOD_WHTSPC) THEN DO;

   1447   0 00012A  6D01                                 CMV,R6   1
          0 00012B  0981 0055                            BNE      s:1492,PREL

      273     1448
      274     1449        /* we are to position to white space.
      275     1450           right of the point on the same line, and no characters below the
      276     1451           line the point is on.                                                      */
      277     1452
      278     1453    4               CALL Y$PSTWHTSPC;

   1453   0 00012D  E3C0 0219                            LNJ,B6   s:0,PREL
          0 00012F       0001                            DC       s:1458,PREL

      279     1454
      280     1455        /* no lf's are necessary                                                      */
      281     1456
      282     1457    4            END /* IF */;

      283     1458    3         END;

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:45   
   1458   0 000130  0F81 0050                            B        s:1492,PREL

      284     1459        %EJECT;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:46   
      285     1460    3         ELSE DO;

      286     1461        /* We're moving up or down, virtually.                                       */
      287     1462
      288     1463    3            IF %KV_MVD.ORG=%KV#VD_ORG_X364 AND NOT %KV_SRD.SCROLL

   1463   0 000132  E2C4 0015                            LLH,R6   21,B4
          0 000134  6D02                                 CMV,R6   2
          0 000135  0981 0019                            BNE      s:1470,PREL
          0 000137  82C3 000E                            LB,'0008'X        14,B3
          0 000139       0008
          0 00013A  0501 0014                            BBT      s:1470,PREL
          0 00013C  C2C3 000E                            LLH,R4   14,B3
          0 00013E  4901 0010                            BEZ,R4   s:1470,PREL
          0 000140  82C5 0001                            LB,'0400'X        1,B5
          0 000142       0400
          0 000143  0581 000B                            BBF      s:1470,PREL

      289     1464    4              AND %KV_SRD.LNG>0 AND VDH_PST.VRTSCRENB THEN DO;

      290     1465        /*
      291     1466           For non_scrolling X364 windows, scrolling operations wrap instead.
      292     1467        */
      293     1468    4               %KV_MVD.VRTLIN = MOD(%KV_MVD.VRTLIN-1,%KV_SRD.LNG)+1;

   1468   0 000145  F855                                 LDR,R7   R5
          0 000146  6C00                                 LDV,R6   0
          0 000147  8470 FFFF FFFF                       AID      -1,IMO
          0 00014A  F354                                 DIV,R7   R4
          0 00014B  D856                                 LDR,R5   R6
          0 00014C  5E01                                 ADV,R5   1
          0 00014D  DF44 001A                            STR,R5   26,B4

      294     1469    4            END;

      295     1470    3            LF_CNT = %KV_MVD.VRTLIN - OLDVRTLIN;

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:47   
   1470   0 00014F  D247 000C                            SUB,R5   OLDVRTLIN,AUTO
          0 000151  DF47 0010                            STR,R5   LF_CNT,AUTO

      296     1471
      297     1472    3            IF %KV_MVD.ORG=%KV#VD_ORG_UR

   1472   0 000153  E2C4 0015                            LLH,R6   21,B4
          0 000155  6D01                                 CMV,R6   1
          0 000156  0981 0024                            BNE      s:1489,PREL
          0 000158  8285                                 LB,'0004'X        ,B5
          0 000159       0004
          0 00015A  0501 0020                            BBT      s:1489,PREL

      298     1473    4              AND NOT VDH_PST.PSTIN_PLC THEN DO;

      299     1474
      300     1475        /* We don't want to write on existing characters */
      301     1476
      302     1477    4               IF %KV_SRD.CRT.LIN<=%KV_SRD.HI_NONBLN.LIN

   1477   0 00015C  C843 0015                            LDR,R4   21,B3
          0 00015E  C943 0017                            CMR,R4   23,B3
          0 000160  0A01 0008                            BAG      s:1481,PREL

      303     1478        /* We're in the thick of it.  Get below the characters. */
      304     1479
      305     1480    4               THEN LF_CNT = LF_CNT+%KV_SRD.HI_NONBLN.LIN-%KV_SRD.CRT.LIN;

   1480   0 000162  DA43 0017                            ADD,R5   23,B3
          0 000164  D254                                 SUB,R5   R4
          0 000165  DF47 0010                            STR,R5   LF_CNT,AUTO
          0 000167  0F81 0013                            B        s:1489,PREL

      306     1481    4               ELSE IF CRTPHSCLM=%KV_SRD.TOPLFT.CLM

   1481   0 000169  B847 000E                            LDR,R3   CRTPHSCLM,AUTO
          0 00016B  3801 000F                            BLZ,R3   s:1489,PREL
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:48   
          0 00016D  B943 000A                            CMR,R3   10,B3
          0 00016F  0981 000B                            BNE      s:1489,PREL
          0 000171  C943 0013                            CMR,R4   19,B3
          0 000173  0A81 0007                            BALE     s:1489,PREL
          0 000175  A847 000D                            LDR,R2   NEWRLTPHSLIN,AUTO
          0 000177  2981 0003                            BNEZ,R2  s:1489,PREL

      307     1482    4                 AND %KV_SRD.CRTVRTLINPHSLIN<%KV_SRD.CRT.LIN
      308     1483    4                 AND NEWRLTPHSLIN=0
      309     1484        /* We're actually at the end of the previous line, and going to a new one. */
      310     1485
      311     1486    4               THEN LF_CNT=LF_CNT-1;

   1486   0 000179  88C7 0010                            DEC      LF_CNT,AUTO

      312     1487    4            END /* IF */;

      313     1488
      314     1489    3            LF_CNT = LF_CNT+NEWRLTPHSLIN;

   1489   0 00017B  D847 0010                            LDR,R5   LF_CNT,AUTO
          0 00017D  DA47 000D                            ADD,R5   NEWRLTPHSLIN,AUTO
          0 00017F  DF47 0010                            STR,R5   LF_CNT,AUTO

      315     1490
      316     1491    3         END /* IF */;

      317     1492    2         %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRT.LIN+LF_CNT-NEWRLTPHSLIN;

   1492   0 000181  ECC7 0006                            LDB,B6   Y@SRD$,AUTO
          0 000183  E846 0015                            LDR,R6   21,B6
          0 000185  EA47 0010                            ADD,R6   LF_CNT,AUTO
          0 000187  E247 000D                            SUB,R6   NEWRLTPHSLIN,AUTO
          0 000189  EF46 0013                            STR,R6   19,B6

      318     1493    2         %KV_SRD.VRTPSTOK = '1'B;

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:49   
   1493   0 00018B  8946 000E                            LBT,'0010'X       14,B6
   1493   0 00018D       0010

      319     1494    2      END; ELSE DO;

   1494   0 00018E  0F81 005E                            B        s:1547,PREL

      320     1495
      321     1496        /* the positioning units are physical                                         */
      322     1497
      323     1498        /* determine what physical line we are going to                               */
      324     1499
      325     1500    3         DO CASE( VDH_PST.HRZPSTORG );

   1500   0 000190  B805                                 LDR,R3   ,B5
          0 000191  B570 0003                            AND,R3   3,IMO
          0 000193  3D04                                 CMV,R3   4
          0 000194  0281 0026                            BGE      s:1519,PREL
          0 000196  A830 0000 019C  00                   LDR,R2   s:1500+12,R3
          0 000199  83A0 0000 01A0  00                   JMP      s:1505,R2
          0 00019C       001B                            DC       s:1519,PREL
          0 00019D       0000                            DC       s:1505,PREL
          0 00019E       0008                            DC       s:1511,PREL
          0 00019F       0012                            DC       s:1517,PREL

      326     1501    3         CASE(%KV_PSTORG_ABS );

      327     1502
      328     1503        /* The horizontal positioning is expressed as an absolute value.              */
      329     1504
      330     1505    3            %KV_SRD.CRT.CLM = VDH_PST.PSTVAL.CLM;

   1505   0 0001A0  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
          0 0001A2  C845 0003                            LDR,R4   3,B5
          0 0001A4  CF44 0016                            STR,R4   22,B4
          0 0001A6  0F81 0014                            B        s:1519,PREL

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:50   
      331     1506    3         CASE(%KV_PSTORG_CRTPST );

      332     1507
      333     1508        /* The horizontal positioning is expressed as a value relative
      334     1509           to the current column.                                                     */
      335     1510
      336     1511    3            %KV_SRD.CRT.CLM = %KV_SRD.CRT.CLM+VDH_PST.PSTVAL.CLM;

   1511   0 0001A8  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
          0 0001AA  C844 0016                            LDR,R4   22,B4
          0 0001AC  CA45 0003                            ADD,R4   3,B5
          0 0001AE  CF44 0016                            STR,R4   22,B4
          0 0001B0  0F81 000A                            B        s:1519,PREL

      337     1512    3         CASE(%KV_PSTORG_SRD );

      338     1513
      339     1514        /* The horizontal positioning is expressed as a value relative
      340     1515           to the SRD margins.                                                        */
      341     1516
      342     1517    3            %KV_SRD.CRT.CLM = %KV_SRD.TOPLFT.CLM+VDH_PST.PSTVAL.CLM - 1;

   1517   0 0001B2  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
          0 0001B4  C844 000A                            LDR,R4   10,B4
          0 0001B6  CA45 0003                            ADD,R4   3,B5
          0 0001B8  4EFF                                 ADV,R4   -1
          0 0001B9  CF44 0016                            STR,R4   22,B4

      343     1518    3         END /* CASE */;

      344     1519    3         DO CASE( VDH_PST.VRTPSTORG );

   1519   0 0001BB  B845 0001                            LDR,R3   1,B5
          0 0001BD  304B                                 SOR,R3   11
          0 0001BE  B570 0003                            AND,R3   3,IMO
          0 0001C0  3D04                                 CMV,R3   4
          0 0001C1  0281 0026                            BGE      s:1541,PREL
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:51   
          0 0001C3  A830 0000 01C9  00                   LDR,R2   s:1519+14,R3
          0 0001C6  83A0 0000 01CD  00                   JMP      s:1524,R2
          0 0001C9       001B                            DC       s:1541,PREL
          0 0001CA       0000                            DC       s:1524,PREL
          0 0001CB       000A                            DC       s:1531,PREL
          0 0001CC       0010                            DC       s:1537,PREL

      345     1520    3         CASE(%KV_PSTORG_ABS );

      346     1521
      347     1522        /* The vertical positioning is expressed as an absolute value.                */
      348     1523
      349     1524    3            LF_CNT = VDH_PST.PSTVAL.LIN - %KV_SRD.CRT.LIN;

   1524   0 0001CD  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
          0 0001CF  E845 0002                            LDR,R6   2,B5
          0 0001D1  E244 0015                            SUB,R6   21,B4
          0 0001D3  EF47 0010                            STR,R6   LF_CNT,AUTO
          0 0001D5  0F81 0012                            B        s:1541,PREL

      350     1525
      351     1526    3         CASE(%KV_PSTORG_CRTPST );

      352     1527
      353     1528        /* The vertical positioning is expressed as a value relative
      354     1529           to the current line.                                                       */
      355     1530
      356     1531    3            LF_CNT = VDH_PST.PSTVAL.LIN;

   1531   0 0001D7  E845 0002                            LDR,R6   2,B5
          0 0001D9  EF47 0010                            STR,R6   LF_CNT,AUTO
          0 0001DB  0F81 000C                            B        s:1541,PREL

      357     1532    3         CASE(%KV_PSTORG_SRD );

      358     1533
      359     1534        /* The vertical positioning is expressed as a value relative
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:52   
      360     1535           to the SRD margins.                                                        */
      361     1536
      362     1537    3            LF_CNT = %KV_SRD.TOPLFT.LIN + VDH_PST.PSTVAL.LIN - %KV_SRD.CRT.LIN - 1;

   1537   0 0001DD  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
          0 0001DF  E844 0009                            LDR,R6   9,B4
          0 0001E1  EA45 0002                            ADD,R6   2,B5
          0 0001E3  E244 0015                            SUB,R6   21,B4
          0 0001E5  6EFF                                 ADV,R6   -1
          0 0001E6  EF47 0010                            STR,R6   LF_CNT,AUTO

      363     1538
      364     1539    3         END /* CASE */;

      365     1540
      366     1541    2         %KV_SRD.VRTPSTOK = '0'B;

   1541   0 0001E8  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
          0 0001EA  8844 000E                            LBF,'0010'X       14,B4
          0 0001EC       0010

      367     1542
      368     1543    2      END /* IF */;

      369     1544
      370     1545        /* if there are lf's to do, do them                                           */
      371     1546
      372     1547    2      IF (LF_CNT > 0) THEN DO;

   1547   0 0001ED  E847 0010                            LDR,R6   LF_CNT,AUTO
          0 0001EF  6A81 00FC                            BLEZ,R6  s:1619,PREL

      373     1548
      374     1549        /* check for logical page break                                               */
      375     1550
      376     1551    2         IF %KV_VDI.DVCPGNENB AND %KV_MVD.LNG>=12 AND %KV_MVD.ORG=%KV#VD_ORG_UR

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:53   
   1551   0 0001F1  ECC7 000A                            LDB,B6   Y@VDI$,AUTO
          0 0001F3  82C6 0019                            LB,'0004'X        25,B6
          0 0001F5       0004
          0 0001F6  0581 0026                            BBF      s:1569,PREL
          0 0001F8  DCC7 0008                            LDB,B5   Y@MVD$,AUTO
          0 0001FA  D2C5 0014                            LLH,R5   20,B5
          0 0001FC  5D0C                                 CMV,R5   12
          0 0001FD  0201 001F                            BL       s:1569,PREL
          0 0001FF  C2C5 0015                            LLH,R4   21,B5
          0 000201  4D01                                 CMV,R4   1
          0 000202  0981 001A                            BNE      s:1569,PREL

      377     1552
      378     1553        /* but only if not already in a physical page break                           */
      379     1554
      380     1555    2         THEN IF %KV_MVD.FRMLIN+LF_CNT>=%KV_MVD.LNG

   1555   0 000204  B2C5 001D                            LLH,R3   29,B5
          0 000206  BA56                                 ADD,R3   R6
          0 000207  D953                                 CMR,R5   R3
          0 000208  0A01 000F                            BAG      s:1564,PREL
          0 00020A  82C5 0016                            LB,'0010'X        22,B5
          0 00020C       0010
          0 00020D  0501 000A                            BBT      s:1564,PREL

      381     1556    3           AND NOT %KV_MVD.FRMSCNINH THEN DO;

      382     1557
      383     1558    3            CALL KVO$PAGBRK;

   1558   0 00020F  CBF0 0000                            LAB,B4   0,IMO
          0 000211  E380 0000 0000  xent                 LNJ,B6   KVO$PAGBRK
          0 000214       0001                            DC       s:1559,PREL

      384     1559    3            RETURN;

   1559   0 000215  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:54   

      385     1560    3         END; ELSE DO;

      386     1561
      387     1562        /* we are not at page bottom. update the form page position.                  */
      388     1563
      389     1564    3            %KV_MVD.FRMLIN = %KV_MVD.FRMLIN+LF_CNT;

   1564   0 000218  B2C5 001D                            LLH,R3   29,B5
          0 00021A  BA56                                 ADD,R3   R6
          0 00021B  B7C5 001D                            STH,R3   29,B5

      390     1565    3         END /* IF */;

      391     1566
      392     1567        /* account for the lf's in physical position                                  */
      393     1568
      394     1569    2         IF %KV_MVD.ORG=%KV#VD_ORG_SE

   1569   0 00021D  DCC7 0008                            LDB,B5   Y@MVD$,AUTO
          0 00021F  D2C5 0015                            LLH,R5   21,B5
          0 000221  5D05                                 CMV,R5   5
          0 000222  0981 0051                            BNE      s:1593,PREL
          0 000224  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
          0 000226  EA44 0015                            ADD,R6   21,B4
          0 000228  E944 0010                            CMR,R6   16,B4
          0 00022A  0A81 0049                            BALE     s:1593,PREL

      395     1570    3           AND %KV_SRD.CRT.LIN+LF_CNT>%KV_SRD.FLDEND.LIN THEN DO;

      396     1571        /*
      397     1572           We may need to increase the size of this record in the screen editor.
      398     1573        */
      399     1574    3            IF LF_CNT+%KV_SRD.CRT.LIN>%KV_SRD.FLDEND.LIN+1 THEN RETURN;

   1574   0 00022C  E847 0010                            LDR,R6   LF_CNT,AUTO
          0 00022E  EA44 0015                            ADD,R6   21,B4
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:55   
          0 000230  C844 0010                            LDR,R4   16,B4
          0 000232  4E01                                 ADV,R4   1
          0 000233  C956                                 CMR,R4   R6
          0 000234  0881 0004                            BAGE     s:1575,PREL

   1574   0 000236  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      400     1575    3            IF %KV_SRD.FLDEND.LIN=%KV_SRD.BTMRHT.LIN

   1575   0 000239  E844 0010                            LDR,R6   16,B4
          0 00023B  E944 000B                            CMR,R6   11,B4
          0 00023D  0981 000D                            BNE      s:1578,PREL
          0 00023F  B844 0013                            LDR,R3   19,B4
          0 000241  B944 0009                            CMR,R3   9,B4
          0 000243  0981 0007                            BNE      s:1578,PREL

      401     1576    3              AND %KV_SRD.CRTVRTLINPHSLIN=%KV_SRD.TOPLFT.LIN
      402     1577    3            THEN %KV_SRD.CRT.CLM = %KV_SRD.TOPLFT.CLM; /* The window shrank      */

   1577   0 000245  A844 000A                            LDR,R2   10,B4
          0 000247  AF44 0016                            STR,R2   22,B4
          0 000249  0F81 007C                            B        s:1609,PREL

      403     1578    3            ELSE IF %KV_SRD.CRT.CLM=%KV_SRD.TOPLFT.CLM

   1578   0 00024B  B844 0016                            LDR,R3   22,B4
          0 00024D  B944 000A                            CMR,R3   10,B4
          0 00024F  0981 0013                            BNE      s:1586,PREL
          0 000251  BB80 0000 0000  xsym                 LAB,B3   KV_VDH_PST_WRAP
          0 000254  BDC7 0004                            CMB,B3   @VDH_PST,AUTO
          0 000256  0901 000C                            BE       s:1586,PREL

      404     1579    4              AND ADDR(VDH_PST)~=ADDR(KV_VDH_PST_WRAP) THEN DO;

      405     1580        /*
      406     1581           Position just past the last position - stay on the same line instead.
      407     1582        */
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:56   
      408     1583    4               %KV_SRD.CRT_PST = %KV_SRD.FLDEND_PST+1;

   1583   0 000258  8CC4 0010                            LDI      16,B4
          0 00025A  8470 0000 0001                       AID      1,IMO
          0 00025D  8D44 0015                            SDI      21,B4

      409     1584    4               LF_CNT = 0;

   1584   0 00025F  8747 0010                            CL       LF_CNT,AUTO

      410     1585    4            END; ELSE DO;

   1585   0 000261  0F81 0064                            B        s:1609,PREL

      411     1586    4               %KV_VDI.OTPCNDPND.PST = 0;

   1586   0 000263  8746 001A                            CL       26,B6

      412     1587    4               %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN+LF_CNT;

   1587   0 000265  E844 0015                            LDR,R6   21,B4
          0 000267  EA47 0010                            ADD,R6   LF_CNT,AUTO
          0 000269  EF44 0015                            STR,R6   21,B4

      413     1588    4               CALL KVE$INCFLD;

   1588   0 00026B  CBF0 0000                            LAB,B4   0,IMO
          0 00026D  E380 0000 0000  xent                 LNJ,B6   KVE$INCFLD
          0 000270       0001                            DC       s:1589,PREL

      414     1589    4               RETURN;

   1589   0 000271  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      415     1590    4            END;
      416     1591    3         END;
      417     1592
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:57   
      418     1593    2         ELSE IF %KV_VDI.DVCPGNENB AND %KV_MVD.ORG=%KV#VD_ORG_UR

   1593   0 000274  82C6 0019                            LB,'0004'X        25,B6
   1593   0 000276       0004
          0 000277  0581 004E                            BBF      s:1609,PREL
          0 000279  5D01                                 CMV,R5   1
          0 00027A  0981 004B                            BNE      s:1609,PREL
          0 00027C  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
          0 00027E  E844 0015                            LDR,R6   21,B4
          0 000280  EA47 0010                            ADD,R6   LF_CNT,AUTO
          0 000282  E944 000B                            CMR,R6   11,B4
          0 000284  0A01 0013                            BAG      s:1600,PREL
          0 000286  E844 0015                            LDR,R6   21,B4
          0 000288  EA47 0010                            ADD,R6   LF_CNT,AUTO
          0 00028A  E944 000B                            CMR,R6   11,B4
          0 00028C  0981 0039                            BNE      s:1609,PREL
          0 00028E  82C4 000E                            LB,'0080'X        14,B4
          0 000290       0080
          0 000291  0581 0034                            BBF      s:1609,PREL
          0 000293  82C4 000E                            LB,'0020'X        14,B4
          0 000295       0020
          0 000296  0581 002F                            BBF      s:1609,PREL

      419     1594    2           AND (%KV_SRD.CRT.LIN+LF_CNT>%KV_SRD.BTMRHT.LIN
      420     1595    2           OR %KV_SRD.CRT.LIN+LF_CNT=%KV_SRD.BTMRHT.LIN
      421     1596    3           AND %KV_SRD.PRINTHALT AND %KV_SRD.PAGEHALT) THEN DO;

      422     1597
      423     1598        /* the cursor is on the last line that is normally printed on.                */
      424     1599
      425     1600    3            CALL KVO$SCREND;

   1600   0 000298  CBF0 0000                            LAB,B4   0,IMO
          0 00029A  E380 0000 0000  xent                 LNJ,B6   KVO$SCREND
          0 00029D       0001                            DC       s:1601,PREL

      426     1601    4            IF VDH_PST.VRT AND NOT %KV_SRD.VRTPSTOK THEN DO;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:58   

   1601   0 00029E  ECC7 0004                            LDB,B6   @VDH_PST,AUTO
          0 0002A0  8286                                 LB,'0080'X        ,B6
          0 0002A1       0080
          0 0002A2  0581 0020                            BBF      s:1607,PREL
          0 0002A4  DCC7 0006                            LDB,B5   Y@SRD$,AUTO
          0 0002A6  82C5 000E                            LB,'0010'X        14,B5
          0 0002A8       0010
          0 0002A9  0501 0019                            BBT      s:1607,PREL

      427     1602    4               %KV_SRD.CRT.LIN = %KV_SRD.CRTVRTLINPHSLIN+NEWRLTPHSLIN;

   1602   0 0002AB  E845 0013                            LDR,R6   19,B5
          0 0002AD  EA47 000D                            ADD,R6   NEWRLTPHSLIN,AUTO
          0 0002AF  EF45 0015                            STR,R6   21,B5

      428     1603    4               IF %KV_SRD.CRT.LIN+1>=%KV_SRD.NXTNONBLNLIN

   1603   0 0002B1  6E01                                 ADV,R6   1
          0 0002B2  6801 000B                            BLZ,R6   s:1605,PREL
          0 0002B4  E945 0014                            CMR,R6   20,B5
          0 0002B6  0201 0007                            BL       s:1605,PREL

      429     1604    4               THEN CALL KVO$WRPBLN;

   1604   0 0002B8  CBF0 0000                            LAB,B4   0,IMO
          0 0002BA  E380 0000 0000  xent                 LNJ,B6   KVO$WRPBLN
          0 0002BD       0001                            DC       s:1605,PREL

      430     1605    4               %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;

   1605   0 0002BE  ECC7 000A                            LDB,B6   Y@VDI$,AUTO
          0 0002C0  6C01                                 LDV,R6   1
          0 0002C1  EF46 001A                            STR,R6   26,B6

      431     1606    4            END;

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:59   
      432     1607    3            RETURN;

   1607   0 0002C3  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      433     1608    3         END /* IF */;
      434     1609    2         %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN + LF_CNT;

   1609   0 0002C6  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
          0 0002C8  E844 0015                            LDR,R6   21,B4
          0 0002CA  EA47 0010                            ADD,R6   LF_CNT,AUTO
          0 0002CC  EF44 0015                            STR,R6   21,B4

      435     1610    2         LF_CNT = %KV_SRD.BTMRHT.LIN;

   1610   0 0002CE  D844 000B                            LDR,R5   11,B4
          0 0002D0  DF47 0010                            STR,R5   LF_CNT,AUTO

      436     1611    2         IF %KV_SRD.CRT.LIN>LF_CNT THEN CALL Y$FIXPST;

   1611   0 0002D2  E955                                 CMR,R6   R5
          0 0002D3  0A81 0004                            BALE     s:1612,PREL

   1611   0 0002D5  E3C0 0041                            LNJ,B6   s:0,PREL
          0 0002D7       0001                            DC       s:1612,PREL

      437     1612    3         IF (%KV_SRD.CRT.LIN+1 >= %KV_SRD.NXTNONBLNLIN) THEN DO;

   1612   0 0002D8  ECC7 0006                            LDB,B6   Y@SRD$,AUTO
          0 0002DA  E846 0015                            LDR,R6   21,B6
          0 0002DC  6E01                                 ADV,R6   1
          0 0002DD  6801 000B                            BLZ,R6   s:1617,PREL
          0 0002DF  E946 0014                            CMR,R6   20,B6
          0 0002E1  0201 0007                            BL       s:1617,PREL

      438     1613
      439     1614
      440     1615    3            CALL KVO$WRPBLN;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:60   

   1615   0 0002E3  CBF0 0000                            LAB,B4   0,IMO
          0 0002E5  E380 0000 0000  xent                 LNJ,B6   KVO$WRPBLN
          0 0002E8       0001                            DC       s:1617,PREL

      441     1616    3         END /* IF */;

      442     1617    2         RETURN;

   1617   0 0002E9  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      443     1618    2      END /* IF */;
      444     1619    2      IF (LF_CNT < 0) THEN DO;

   1619   0 0002EC  6881 001D                            BGEZ,R6  s:1629,PREL

      445     1620
      446     1621        /* We're to position back up the page.                                        */
      447     1622
      448     1623    2         IF %KV_MVD.LNG>=12

   1623   0 0002EE  ECC7 0008                            LDB,B6   Y@MVD$,AUTO
          0 0002F0  D2C6 0014                            LLH,R5   20,B6
          0 0002F2  5D0C                                 CMV,R5   12
          0 0002F3  0201 0006                            BL       s:1625,PREL

      449     1624    2         THEN %KV_MVD.FRMLIN = %KV_MVD.FRMLIN+LF_CNT;

   1624   0 0002F5  C2C6 001D                            LLH,R4   29,B6
          0 0002F7  CA56                                 ADD,R4   R6
          0 0002F8  C7C6 001D                            STH,R4   29,B6

      450     1625    2         %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN+LF_CNT;

   1625   0 0002FA  DCC7 0006                            LDB,B5   Y@SRD$,AUTO
          0 0002FC  EA45 0015                            ADD,R6   21,B5
          0 0002FE  EF45 0015                            STR,R6   21,B5
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:61   

      451     1626    2         LF_CNT = %KV_SRD.TOPLFT.LIN;

   1626   0 000300  D845 0009                            LDR,R5   9,B5
          0 000302  DF47 0010                            STR,R5   LF_CNT,AUTO

      452     1627    2         IF %KV_SRD.CRT.LIN<LF_CNT THEN CALL Y$FIXPST;

   1627   0 000304  E955                                 CMR,R6   R5
          0 000305  0881 0004                            BAGE     s:1629,PREL

   1627   0 000307  E3C0 000F                            LNJ,B6   s:0,PREL
          0 000309       0001                            DC       s:1629,PREL

      453     1628    2      END /* IF */;

      454     1629    2      IF ERS THEN DO;

   1629   0 00030A  89C7 0011                            CMZ      ERS,AUTO
          0 00030C  0881 0007                            BAGE     s:1632,PREL

      455     1630    2         CALL KVO$ERSTO_ENDOF_INP;

   1630   0 00030E  CBF0 0000                            LAB,B4   0,IMO
          0 000310  E380 0000 0000  xent                 LNJ,B6   KVO$ERSTO_ENDOF_INP
          0 000313       0001                            DC       s:1632,PREL

      456     1631    2      END /* IF */;

      457     1632    1      RETURN;

   1632   0 000314  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      458     1633        %EJECT;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:62   
      459     1634        /*I* NAME:Y$FIXPST
      460     1635           PURPOSE: Adjusts the SRD line counters to keep CRT.LIN in the window.
      461     1636           LF_CNT contains the edgeline that has been exceeded.
      462     1637           This routine is normally only exercised in scrolling X364 windows.
      463     1638           Only X364 ones get past the call to KVO$SCREND at the end of KVO$PST.
      464     1639           For non-scrolling ones, we only get here for TRANSITION VFC and input
      465     1640           fields that extend past the bottom of the window.
      466     1641        */
      467     1642    1   Y$FIXPST: PROC;

   1642   0 000317  EFC7 0014            Y$FIXPST        STB,B6   PSTMOD+1,AUTO

      468     1643    2      LF_CNT = LF_CNT-%KV_SRD.CRT.LIN;

   1643   0 000319  DCC7 0006                            LDB,B5   Y@SRD$,AUTO
          0 00031B  E847 0010                            LDR,R6   LF_CNT,AUTO
          0 00031D  E245 0015                            SUB,R6   21,B5
          0 00031F  EF47 0010                            STR,R6   LF_CNT,AUTO

      469     1644    2      %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN+LF_CNT;

   1644   0 000321  EA45 0015                            ADD,R6   21,B5
          0 000323  EF45 0015                            STR,R6   21,B5

      470     1645    2      %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRTVRTLINPHSLIN+LF_CNT;

   1645   0 000325  D845 0013                            LDR,R5   19,B5
          0 000327  DA47 0010                            ADD,R5   LF_CNT,AUTO
          0 000329  DF45 0013                            STR,R5   19,B5

      471     1646    2      %KV_SRD.HI_NONBLN.LIN = %KV_SRD.HI_NONBLN.LIN+LF_CNT;

   1646   0 00032B  C845 0017                            LDR,R4   23,B5
          0 00032D  CA47 0010                            ADD,R4   LF_CNT,AUTO
          0 00032F  CF45 0017                            STR,R4   23,B5

      472     1647    2      %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS-LF_CNT;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:63   

   1647   0 000331  B845 0019                            LDR,R3   25,B5
          0 000333  B247 0010                            SUB,R3   LF_CNT,AUTO
          0 000335  BF45 0019                            STR,R3   25,B5

      473     1648    2      IF NOT %KV_SRD.SCROLL OR %KV_SRD.LNG=1

   1648   0 000337  82C5 000E                            LB,'0008'X        14,B5
   1648   0 000339       0008
          0 00033A  0581 0006                            BBF      s:1649,PREL
          0 00033C  A2C5 000E                            LLH,R2   14,B5
          0 00033E  2D01                                 CMV,R2   1
          0 00033F  0981 0003                            BNE      s:1650,PREL

      474     1649    2      THEN %KV_SRD.DVCLINBIS = 0;     /* oneliners mustn't be asked to scroll    */

   1649   0 000341  8745 0019                            CL       25,B5

      475     1650    2   END Y$FIXPST;

   1650   0 000343  ECC7 0014                            LDB,B6   PSTMOD+1,AUTO
          0 000345  C3C6 0001                            LNJ,B4   1,B6

      476     1651        %EJECT;
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:64   
      477     1652        /*I* NAME:Y$PSTWHTSPC
      478     1653           PURPOSE: Position to white space.                                          */
      479     1654
      480     1655    1   Y$PSTWHTSPC: PROC;

   1655   0 000347  EFC7 0014            Y$PSTWHTSPC     STB,B6   PSTMOD+1,AUTO

      481     1656    2      LF_CNT = %KV_SRD.HI_NONBLN.LIN-%KV_SRD.CRT.LIN;

   1656   0 000349  DCC7 0006                            LDB,B5   Y@SRD$,AUTO
          0 00034B  E845 0017                            LDR,R6   23,B5
          0 00034D  E245 0015                            SUB,R6   21,B5
          0 00034F  EF47 0010                            STR,R6   LF_CNT,AUTO

      482     1657    3      IF (LF_CNT >= 0) THEN DO;

   1657   0 000351  6801 0015                            BLZ,R6   s:1671,PREL

      483     1658
      484     1659        /* The cursor isn't on a line below the highest non-blank line.               */
      485     1660
      486     1661    4         IF %KV_SRD.HI_NONBLN.CLM>=%KV_SRD.CRT.CLM THEN DO;

   1661   0 000353  D845 0018                            LDR,R5   24,B5
          0 000355  D945 0016                            CMR,R5   22,B5
          0 000357  0801 0003                            BAL      s:1668,PREL

      487     1662
      488     1663        /* The highest non-blank character is to the right of the cursor;
      489     1664           space down an extra line to get beyond it.                                 */
      490     1665
      491     1666    4            LF_CNT = LF_CNT+1;

   1666   0 000359  8AC7 0010                            INC      LF_CNT,AUTO

      492     1667    4         END /* IF */;

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:65   
      493     1668    3         IF %KV_MVD.ORG=%KV#VD_ORG_X364 THEN LF_CNT = 1;

   1668   0 00035B  CCC7 0008                            LDB,B4   Y@MVD$,AUTO
          0 00035D  E2C4 0015                            LLH,R6   21,B4
          0 00035F  6D02                                 CMV,R6   2
          0 000360  0981 0008                            BNE      s:1672,PREL

   1668   0 000362  4C01                                 LDV,R4   1
          0 000363  CF47 0010                            STR,R4   LF_CNT,AUTO

      494     1669    3      END;

   1669   0 000365  0F81 0003                            B        s:1672,PREL

      495     1670    2      ELSE
      496     1671    2      LF_CNT = 0;

   1671   0 000367  8747 0010                            CL       LF_CNT,AUTO

      497     1672    2      RETURN;

   1672   0 000369  ECC7 0014                            LDB,B6   PSTMOD+1,AUTO
          0 00036B  C3C6 0001                            LNJ,B4   1,B6
      498     1673    2   END Y$PSTWHTSPC;
      499     1674    1   END KVO$PST;
      500     1675        %EOD;

PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:66   
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$PST.
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:67   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @VDH_PST                   E-0-0/w UBIN(16)    r     1 CRTPHSCLM
    11-0-0/w BIT         r     1 ERS                       10-0-0/w SBIN(16)    r     1 LF_CNT
     D-0-0/w UBIN(16)    r     1 NEWRLTPHSLIN               F-0-0/w UBIN(16)    r     1 OLDVRTCLM
     C-0-0/w UBIN(16)    r     1 OLDVRTLIN                 13-0-0/w UBIN(16)    r     1 PSTMOD
    *0-0-0/w STRC(64)    r     1 VDH_PST                    8-0-0/w PTR         r     1 Y@MVD$
     6-0-0/w PTR         r     1 Y@SRD$                     A-0-0/w PTR         r     1 Y@VDI$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w UBIN(16)    r     1 KV_VDH_PST_WRAP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(496)   r     1 KV$SRD
     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KVO$PST requires 877 words for executable code.
   Procedure KVO$PST requires 22 words of local(AUTO) storage.
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:68   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:69   
          MINI XREF LISTING

CRTPHSCLM
      1301**DCL      1363<<ASSIGN   1434>>IF       1443>>IF       1481>>IF
ERS
      1313**DCL      1344<<ASSIGN   1402<<ASSIGN   1629>>IF
KV$MRD.BLANKERASES
       245**DCL      1324>>IF
KV$MRD.CURSORUP
       249**DCL      1414>>IF
KV$MVD.FRMLIN
       304**DCL      1555>>IF       1564<<ASSIGN   1564>>ASSIGN   1624<<ASSIGN   1624>>ASSIGN
KV$MVD.FRMSCNINH
       295**DCL      1555>>IF
KV$MVD.LNG
       290**DCL      1551>>IF       1555>>IF       1623>>IF
KV$MVD.ORG
       291**DCL      1336>>IF       1463>>IF       1472>>IF       1551>>IF       1569>>IF       1593>>IF
      1668>>IF
KV$MVD.RETYPOVR
       294**DCL      1395>>IF
KV$MVD.VRTCLM
       303**DCL      1355>>ASSIGN   1360<<ASSIGN   1361<<ASSIGN   1364>>ASSIGN   1365>>ASSIGN
KV$MVD.VRTLIN
       303**DCL      1379>>ASSIGN   1381<<ASSIGN   1382<<ASSIGN   1382>>ASSIGN   1383>>IF       1468<<ASSIGN
      1468>>ASSIGN   1470>>ASSIGN
KV$PTR.INPCNDPND
       336**DCL       345--REDEF     349--REDEF
KV$PTR.LINLST$
       332**DCL       333--REDEF
KV$PTR.MVD$
       331**DCL      1322>>ASSIGN
KV$PTR.SRD$
       332**DCL      1321>>ASSIGN
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:70   
KV$PTR.VDI$
       330**DCL      1323>>ASSIGN
KV$PTR$
       324**DCL       330--IMP-PTR  1321>>ASSIGN   1322>>ASSIGN   1323>>ASSIGN
KV$SRD.BTMRHT
       469**DCL       474--REDEF
KV$SRD.BTMRHT.LIN
       471**DCL      1575>>IF       1593>>IF       1593>>IF       1610>>ASSIGN
KV$SRD.CRT
       545**DCL       550--REDEF
KV$SRD.CRT.CLM
       547**DCL      1363>>ASSIGN   1365<<ASSIGN   1372<<ASSIGN   1375<<ASSIGN   1375>>ASSIGN   1443>>IF
      1505<<ASSIGN   1511<<ASSIGN   1511>>ASSIGN   1517<<ASSIGN   1577<<ASSIGN   1578>>IF       1661>>IF
KV$SRD.CRT.LIN
       547**DCL      1410>>ASSIGN   1414>>IF       1477>>IF       1480>>ASSIGN   1481>>IF       1492>>ASSIGN
      1524>>ASSIGN   1537>>ASSIGN   1569>>IF       1574>>IF       1587<<ASSIGN   1587>>ASSIGN   1593>>IF
      1593>>IF       1602<<ASSIGN   1603>>IF       1609<<ASSIGN   1609>>ASSIGN   1611>>IF       1612>>IF
      1625<<ASSIGN   1625>>ASSIGN   1627>>IF       1643>>ASSIGN   1644<<ASSIGN   1644>>ASSIGN   1656>>ASSIGN
KV$SRD.CRTVRTLINPHSLIN
       517**DCL      1410>>ASSIGN   1481>>IF       1492<<ASSIGN   1575>>IF       1602>>ASSIGN   1645<<ASSIGN
      1645>>ASSIGN
KV$SRD.CRT_PST
       550**DCL      1583<<ASSIGN
KV$SRD.DVCLINBIS
       587**DCL      1414>>IF       1647<<ASSIGN   1647>>ASSIGN   1649<<ASSIGN
KV$SRD.FLDEND
       509**DCL       514--REDEF
KV$SRD.FLDEND.LIN
       511**DCL      1569>>IF       1574>>IF       1575>>IF
KV$SRD.FLDEND_PST
       514**DCL      1583>>ASSIGN
KV$SRD.HI_NONBLN
       579**DCL       584--REDEF
KV$SRD.HI_NONBLN.CLM
       581**DCL      1661>>IF
KV$SRD.HI_NONBLN.LIN
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:71   
       581**DCL      1477>>IF       1480>>ASSIGN   1646<<ASSIGN   1646>>ASSIGN   1656>>ASSIGN
KV$SRD.HI_NONBLNVRT
       479**DCL      1400>>IF       1401<<ASSIGN
KV$SRD.LNG
       477**DCL      1463>>IF       1468>>ASSIGN   1648>>IF
KV$SRD.MRD$
       373**DCL      1324>>IF       1414>>IF
KV$SRD.NXTNONBLNLIN
       517**DCL      1603>>IF       1612>>IF
KV$SRD.ORG
       401**DCL       406--REDEF
KV$SRD.PAGEHALT
       478**DCL      1593>>IF
KV$SRD.PRINTHALT
       477**DCL      1593>>IF
KV$SRD.SCROLL
       478**DCL      1463>>IF       1648>>IF
KV$SRD.SRDEND
       614**DCL       619--REDEF
KV$SRD.TOPLFT
       435**DCL       440--REDEF
KV$SRD.TOPLFT.CLM
       437**DCL      1375>>ASSIGN   1434>>IF       1481>>IF       1517>>ASSIGN   1577>>ASSIGN   1578>>IF
KV$SRD.TOPLFT.LIN
       437**DCL      1414>>IF       1537>>ASSIGN   1575>>IF       1626>>ASSIGN
KV$SRD.TRUNCATE
       479**DCL      1367>>IF
KV$SRD.VRTPSTOK
       478**DCL      1493<<ASSIGN   1541<<ASSIGN   1601>>IF
KV$SRD.WDT
       477**DCL      1364>>ASSIGN   1365>>ASSIGN   1372>>ASSIGN   1434>>IF       1434>>IF
KV$SSN.REDRSPCNT
       657**DCL       658--REDEF
KV$USR_ERS.BTMRHT
       939**DCL       944--REDEF
KV$USR_ERS.TOPLFT
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:72   
       905**DCL       910--REDEF
KV$VDH_PST.PSTVAL
      1122**DCL      1127--REDEF
KV$VDI.DVCPGNENB
      1188**DCL      1551>>IF       1593>>IF
KV$VDI.OTPCNDPND.PST
      1189**DCL      1324>>IF       1324>>IF       1327<<ASSIGN   1586<<ASSIGN   1605<<ASSIGN
KVE$INCFLD
        19**DCL-ENT  1588--CALL
KVF$PST
        20**DCL-ENT  1341--CALL
KVO$ERSTO_ENDOF_INP
        25**DCL-ENT  1630--CALL
KVO$PAGBRK
        22**DCL-ENT  1558--CALL
KVO$SCREND
        23**DCL-ENT  1600--CALL
KVO$WRPBLN
        24**DCL-ENT  1604--CALL     1615--CALL
KVV$CALUSR_PST
        26**DCL-ENT  1326--CALL
KV_VDH_PST_WRAP
      1278**DCL      1578--IF
LF_CNT
      1309**DCL      1354<<ASSIGN   1410<<ASSIGN   1414>>IF       1414>>IF       1442<<ASSIGN   1470<<ASSIGN
      1480<<ASSIGN   1480>>ASSIGN   1486<<ASSIGN   1486>>ASSIGN   1489<<ASSIGN   1489>>ASSIGN   1492>>ASSIGN
      1524<<ASSIGN   1531<<ASSIGN   1537<<ASSIGN   1547>>IF       1555>>IF       1564>>ASSIGN   1569>>IF
      1574>>IF       1584<<ASSIGN   1587>>ASSIGN   1593>>IF       1593>>IF       1609>>ASSIGN   1610<<ASSIGN
      1611>>IF       1619>>IF       1624>>ASSIGN   1625>>ASSIGN   1626<<ASSIGN   1627>>IF       1643<<ASSIGN
      1643>>ASSIGN   1644>>ASSIGN   1645>>ASSIGN   1646>>ASSIGN   1647>>ASSIGN   1656<<ASSIGN   1657>>IF
      1666<<ASSIGN   1666>>ASSIGN   1668<<ASSIGN   1671<<ASSIGN
NEWRLTPHSLIN
      1297**DCL      1364<<ASSIGN   1367>>IF       1371<<ASSIGN   1410>>ASSIGN   1434>>IF       1481>>IF
      1489>>ASSIGN   1492>>ASSIGN   1602>>ASSIGN
OLDVRTCLM
      1305**DCL      1355<<ASSIGN   1361>>ASSIGN   1434>>IF       1434>>IF
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:73   
OLDVRTLIN
      1292**DCL      1379<<ASSIGN   1383>>IF       1470>>ASSIGN
PSTMOD
      1317**DCL      1387<<ASSIGN   1389<<ASSIGN   1391>>IF       1399<<ASSIGN   1405<<ASSIGN   1408>>IF
      1427>>IF       1447>>IF
VDH_PST
      1231**DCL         7--PROC     1341<>CALL     1578--IF
VDH_PST.HRZPSTORG
      1238**DCL      1359>>IF       1500>>DOCASE
VDH_PST.PHSPSTMOD
      1237**DCL      1324>>IF       1327>>ASSIGN
VDH_PST.PSTIN_PLC
      1238**DCL      1388>>IF       1472>>IF
VDH_PST.PSTVAL
      1269**DCL      1274--REDEF
VDH_PST.PSTVAL.CLM
      1271**DCL      1360>>ASSIGN   1361>>ASSIGN   1505>>ASSIGN   1511>>ASSIGN   1517>>ASSIGN
VDH_PST.PSTVAL.LIN
      1271**DCL      1381>>ASSIGN   1382>>ASSIGN   1524>>ASSIGN   1531>>ASSIGN   1537>>ASSIGN
VDH_PST.VRT
      1237**DCL      1350>>IF       1601>>IF
VDH_PST.VRTPSTMOD
      1237**DCL      1387>>ASSIGN
VDH_PST.VRTPSTORG
      1239**DCL      1380>>IF       1519>>DOCASE
VDH_PST.VRTPSTUNT
      1240**DCL      1332>>IF
VDH_PST.VRTSCRENB
      1240**DCL      1463>>IF
Y$FIXPST
      1642**PROC     1611--CALL     1627--CALL
Y$PSTWHTSPC
      1655**PROC     1424--CALL     1444--CALL     1453--CALL
Y@MVD$
      1286**DCL       286--IMP-PTR  1322<<ASSIGN   1336>>IF       1355>>ASSIGN   1360>>ASSIGN   1361>>ASSIGN
      1364>>ASSIGN   1365>>ASSIGN   1379>>ASSIGN   1381>>ASSIGN   1382>>ASSIGN   1382>>ASSIGN   1383>>IF
PL6.E3A0      #002=KVO$PST File=KVO$PST.:E05TSI                                  WED 07/30/97 02:10 Page:74   
      1395>>IF       1463>>IF       1468>>ASSIGN   1468>>ASSIGN   1470>>ASSIGN   1472>>IF       1551>>IF
      1551>>IF       1555>>IF       1555>>IF       1555>>IF       1564>>ASSIGN   1564>>ASSIGN   1569>>IF
      1593>>IF       1623>>IF       1624>>ASSIGN   1624>>ASSIGN   1668>>IF
Y@SRD$
      1282**DCL       237--IMP-PTR   373--IMP-PTR  1321<<ASSIGN   1324>>IF       1363>>ASSIGN   1364>>ASSIGN
      1365>>ASSIGN   1365>>ASSIGN   1367>>IF       1372>>ASSIGN   1372>>ASSIGN   1375>>ASSIGN   1375>>ASSIGN
      1375>>ASSIGN   1400>>IF       1401>>ASSIGN   1410>>ASSIGN   1410>>ASSIGN   1414>>IF       1414>>IF
      1414>>IF       1414>>IF       1434>>IF       1434>>IF       1434>>IF       1443>>IF       1463>>IF
      1463>>IF       1468>>ASSIGN   1477>>IF       1477>>IF       1480>>ASSIGN   1480>>ASSIGN   1481>>IF
      1481>>IF       1481>>IF       1492>>ASSIGN   1492>>ASSIGN   1493>>ASSIGN   1505>>ASSIGN   1511>>ASSIGN
      1511>>ASSIGN   1517>>ASSIGN   1517>>ASSIGN   1524>>ASSIGN   1537>>ASSIGN   1537>>ASSIGN   1541>>ASSIGN
      1569>>IF       1569>>IF       1574>>IF       1574>>IF       1575>>IF       1575>>IF       1575>>IF
      1575>>IF       1577>>ASSIGN   1577>>ASSIGN   1578>>IF       1578>>IF       1583>>ASSIGN   1583>>ASSIGN
      1587>>ASSIGN   1587>>ASSIGN   1593>>IF       1593>>IF       1593>>IF       1593>>IF       1593>>IF
      1593>>IF       1601>>IF       1602>>ASSIGN   1602>>ASSIGN   1603>>IF       1603>>IF       1609>>ASSIGN
      1609>>ASSIGN   1610>>ASSIGN   1611>>IF       1612>>IF       1612>>IF       1625>>ASSIGN   1625>>ASSIGN
      1626>>ASSIGN   1627>>IF       1643>>ASSIGN   1644>>ASSIGN   1644>>ASSIGN   1645>>ASSIGN   1645>>ASSIGN
      1646>>ASSIGN   1646>>ASSIGN   1647>>ASSIGN   1647>>ASSIGN   1648>>IF       1648>>IF       1649>>ASSIGN
      1656>>ASSIGN   1656>>ASSIGN   1661>>IF       1661>>IF
Y@VDI$
      1288**DCL      1152--IMP-PTR  1323<<ASSIGN   1324>>IF       1324>>IF       1327>>ASSIGN   1551>>IF
      1586>>ASSIGN   1593>>IF       1605>>ASSIGN

PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:75   
      501        1        /*T***********************************************************/
      502        2        /*T*                                                         */
      503        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      504        4        /*T*                                                         */
      505        5        /*T***********************************************************/
      506        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      507        7        /* if we enter at the following entry, we want to guarantee that this
      508        8           upspace will not cause a top of form. what we do is just generate
      509        9           one lf, and set a flag indicating a page break is pending for this
      510       10           user                                                                       */
      511       11
      512       12        KVO$UP_SPC_NO_PAGBRK: PROC (LINE);
      513       13
      514       14 S      %INCLUDE KV$GLB;
      515       15 S      %INCLUDE KV_GLBCNS_E;
      516       16 S      %INCLUDE KV$GLBCTX;
      517       17 S      %INCLUDE KV$INT;
      518       18 S      %INCLUDE KV$USR;
      519       19 S      %INCLUDE KV$VDH;
      520       20        %KV$MVD;
      521       64        %KV$PTR;
      522      107        %KV$SRD;
      523      382
      524      383         %KV$VDH_PST(NAME = VDH_PST, STCLASS = AUTO);
      525      457         %KV$VDH_PST(NAME = KV_VDH_PST_LF_VRT, STCLASS = SYMREF);
      526      531
      527      532    1   DCL KVO$PST ENTRY(1);
      528      533
      529      534    1   DCL LINE CHAR(LIN) ALIGNED;             /* DUMMY PARAMETER FOR REDEFS         */
      530      535    1   DCL LIN REDEF LINE UBIN;
      531      536        %KV$VDH_PST(STCLASS = REDEF LINE);
      532      610
      533      611    1      VDH_PST = KV_VDH_PST_LF_VRT;
      534      612    1      VDH_PST.PSTVAL.LIN = LIN;
      535      613    1      GOTO SUB_COMMON;
      536      614    1   KVO$UP_SPC_NO_PAGBRK_PST: ENTRY(LINE);
      537      615    1      VDH_PST = KV$VDH_PST;
PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:76   
      538      616    1   SUB_COMMON:;
      539      617
      540      618        /* see if we would be past end of form, if we did all the lf's                */
      541      619
      542      620    1      IF VDH_PST.PSTVAL.LIN+%KV_MVD.FRMLIN>=%KV_MVD.LNG AND %KV_MVD.LNG>11
      543      621    1        OR VDH_PST.PSTVAL.LIN+%KV_MVD.FRMLIN>=%KV_SRD.LNG
      544      622    2        AND NOT %KV_SRD.SCROLL THEN DO;
      545      623
      546      624        /* we would be past end of form, so cut the number of lf's to get to limbo    */
      547      625
      548      626    2         VDH_PST.PSTVAL.LIN = MAXIMUM(%KV_MVD.LNG-%KV_MVD.FRMLIN-1,0);
      549      627    2         IF VDH_PST.PSTVAL.LIN=0 AND %KV_MVD.LNG<12
      550      628    2         THEN VDH_PST.PSTVAL.LIN = VDH_PST.PSTVAL.LIN+1;
      551      629    2         %KV_MVD.PAGBRKPND = '1'B;
      552      630    2      END /* IF */;
      553      631
      554      632    1      CALL KVO$PST(VDH_PST);
      555      633
      556      634    1   END /* SUBROUTINE */;

PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:77   
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$UP_SPC_NO_PAGBRK.

   Procedure KVO$UP_SPC_NO_PAGBRK requires 107 words for executable code.
   Procedure KVO$UP_SPC_NO_PAGBRK requires 12 words of local(AUTO) storage.

    No errors detected in file KVO$PST.:E05TSI    .

PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:78   

 Object Unit name= KVO$UP_SPC_NO_PAGBRK                       File name= KVO$PST.:E05TOU
 UTS= JUL 30 '97 02:11:33.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   107     6B  KVO$UP_SPC_NO_PAGBRK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KVO$UP_SPC_NO_PAGBRK
     0     14                  yes      Std        1  KVO$UP_SPC_NO_PAGBRK_PST

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KVO$PST
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV_VDH_PST_LF_VRT                r    G$ROS$
PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:79   


      501        1        /*T***********************************************************/
      502        2        /*T*                                                         */
      503        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      504        4        /*T*                                                         */
      505        5        /*T***********************************************************/
      506        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      507        7        /* if we enter at the following entry, we want to guarantee that this
      508        8           upspace will not cause a top of form. what we do is just generate
      509        9           one lf, and set a flag indicating a page break is pending for this
      510       10           user                                                                       */
      511       11
      512       12        KVO$UP_SPC_NO_PAGBRK: PROC (LINE);

     12   0 000000  D380 0000 0000  xent KVO$UP_SPC_NO_P*LNJ,B5   X6A_AUTO_1
          0 000003       000C 0001                       DC       12,1

      513       13
      514       14 S      %INCLUDE KV$GLB;
      515       15 S      %INCLUDE KV_GLBCNS_E;
      516       16 S      %INCLUDE KV$GLBCTX;
      517       17 S      %INCLUDE KV$INT;
      518       18 S      %INCLUDE KV$USR;
      519       19 S      %INCLUDE KV$VDH;
      520       20        %KV$MVD;
      521       64        %KV$PTR;
      522      107        %KV$SRD;
      523      382
      524      383         %KV$VDH_PST(NAME = VDH_PST, STCLASS = AUTO);
      525      457         %KV$VDH_PST(NAME = KV_VDH_PST_LF_VRT, STCLASS = SYMREF);
      526      531
      527      532    1   DCL KVO$PST ENTRY(1);
      528      533
      529      534    1   DCL LINE CHAR(LIN) ALIGNED;             /* DUMMY PARAMETER FOR REDEFS         */
      530      535    1   DCL LIN REDEF LINE UBIN;
      531      536        %KV$VDH_PST(STCLASS = REDEF LINE);
      532      610
PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:80   
      533      611    1      VDH_PST = KV_VDH_PST_LF_VRT;

    611   0 000005  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_PST_LF_VRT
          0 000008  2C00                                 LDV,R2   0
          0 000009  6C08                                 LDV,R6   8
          0 00000A  BB87                                 LAB,B3   ,AUTO
          0 00000B  3C0C                                 LDV,R3   12
          0 00000C  0008                                 MMM

      534      612    1      VDH_PST.PSTVAL.LIN = LIN;

    612   0 00000D  ECC7 0004                            LDB,B6   @LINE,AUTO
          0 00000F  E806                                 LDR,R6   ,B6
          0 000010  EF47 0008                            STR,R6   VDH_PST+2,AUTO

      535      613    1      GOTO SUB_COMMON;

    613   0 000012  0F81 000D                            B        s:615,PREL

      536      614    1   KVO$UP_SPC_NO_PAGBRK_PST: ENTRY(LINE);

    614   0 000014  D380 0000 0000  xent KVO$UP_SPC_NO_P*LNJ,B5   X6A_AUTO_1
          0 000017       000C 0001                       DC       12,1

      537      615    1      VDH_PST = KV$VDH_PST;

    615   0 000019  ACC7 0004                            LDB,B2   @LINE,AUTO
          0 00001B  2C00                                 LDV,R2   0
          0 00001C  6C08                                 LDV,R6   8
          0 00001D  BB87                                 LAB,B3   ,AUTO
          0 00001E  3C0C                                 LDV,R3   12
          0 00001F  0008                                 MMM

    615   0                              SUB_COMMON      null
      538      616    1   SUB_COMMON:;
      539      617
      540      618        /* see if we would be past end of form, if we did all the lf's                */
PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:81   
      541      619
      542      620    1      IF VDH_PST.PSTVAL.LIN+%KV_MVD.FRMLIN>=%KV_MVD.LNG AND %KV_MVD.LNG>11

    620   0 000020  EC80 0000 0000  xsym SUB_COMMON      LDB,B6   KV$PTR$
          0 000023  DCC6 0006                            LDB,B5   6,B6
          0 000025  E2C5 001D                            LLH,R6   29,B5
          0 000027  EA47 0008                            ADD,R6   VDH_PST+2,AUTO
          0 000029  D2C5 0014                            LLH,R5   20,B5
          0 00002B  D956                                 CMR,R5   R6
          0 00002C  0A01 0004                            BAG      s:615+17,PREL
          0 00002E  5D0B                                 CMV,R5   11
          0 00002F  0301 0011                            BG       s:626,PREL
          0 000031  E2C5 001D                            LLH,R6   29,B5
          0 000033  EA47 0008                            ADD,R6   VDH_PST+2,AUTO
          0 000035  CCC6 000A                            LDB,B4   10,B6
          0 000037  C2C4 000E                            LLH,R4   14,B4
          0 000039  C956                                 CMR,R4   R6
          0 00003A  0A01 0021                            BAG      s:632,PREL
          0 00003C  82C4 000E                            LB,'0008'X        14,B4
          0 00003E       0008
          0 00003F  0501 001C                            BBT      s:632,PREL

      543      621    1        OR VDH_PST.PSTVAL.LIN+%KV_MVD.FRMLIN>=%KV_SRD.LNG
      544      622    2        AND NOT %KV_SRD.SCROLL THEN DO;

      545      623
      546      624        /* we would be past end of form, so cut the number of lf's to get to limbo    */
      547      625
      548      626    2         VDH_PST.PSTVAL.LIN = MAXIMUM(%KV_MVD.LNG-%KV_MVD.FRMLIN-1,0);

    626   0 000041  E2C5 001D                            LLH,R6   29,B5
          0 000043  D256                                 SUB,R5   R6
          0 000044  5EFF                                 ADV,R5   -1
          0 000045  D970 0000                            CMR,R5   0,IMO
          0 000047  0881 0002                            BAGE     s:626+9,PREL
          0 000049  5C00                                 LDV,R5   0
          0 00004A  DF47 0008                            STR,R5   VDH_PST+2,AUTO
PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:82   

      549      627    2         IF VDH_PST.PSTVAL.LIN=0 AND %KV_MVD.LNG<12

    627   0 00004C  5981 000A                            BNEZ,R5  s:629,PREL
          0 00004E  DCC6 0006                            LDB,B5   6,B6
          0 000050  E2C5 0014                            LLH,R6   20,B5
          0 000052  6D0C                                 CMV,R6   12
          0 000053  0281 0003                            BGE      s:629,PREL

      550      628    2         THEN VDH_PST.PSTVAL.LIN = VDH_PST.PSTVAL.LIN+1;

    628   0 000055  8AC7 0008                            INC      VDH_PST+2,AUTO

      551      629    2         %KV_MVD.PAGBRKPND = '1'B;

    629   0 000057  DCC6 0006                            LDB,B5   6,B6
          0 000059  8945 0016                            LBT,'0001'X       22,B5
          0 00005B       0001

      552      630    2      END /* IF */;

      553      631
      554      632    1      CALL KVO$PST(VDH_PST);

    632   0 00005C  DBC7 0006                            LAB,B5   VDH_PST,AUTO
          0 00005E  DFC7 000A                            STB,B5   VDH_PST+4,AUTO
          0 000060  BBC7 000A                            LAB,B3   VDH_PST+4,AUTO
          0 000062  CBF0 0100                            LAB,B4   256,IMO
          0 000064  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          0 000067       0001                            DC       s:634,PREL

      555      633
      556      634    1   END /* SUBROUTINE */;

    634   0 000068  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:83   
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$UP_SPC_NO_PAGBRK.
PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:84   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @LINE                     *0-0-0/w STRC(64)    r     1 KV$VDH_PST
    *0-0-0/w UBIN(16)    r     1 LIN                       *0-0-0/w ACHR        r     1 LINE
     6-0-0/w STRC(64)    r     1 VDH_PST

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(64)    r     1 KV_VDH_PST_LF_VRT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KV$MVD                     0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(496)   r     1 KV$SRD


   Procedure KVO$UP_SPC_NO_PAGBRK requires 107 words for executable code.
   Procedure KVO$UP_SPC_NO_PAGBRK requires 12 words of local(AUTO) storage.

    No errors detected in file KVO$PST.:E05TSI    .
PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:85   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:86   
          MINI XREF LISTING

KV$MVD.FRMLIN
        60**DCL       620>>IF        620>>IF        626>>ASSIGN
KV$MVD.LNG
        46**DCL       620>>IF        620>>IF        626>>ASSIGN    627>>IF
KV$MVD.PAGBRKPND
        52**DCL       629<<ASSIGN
KV$PTR.INPCNDPND
        91**DCL       100--REDEF     104--REDEF
KV$PTR.LINLST$
        87**DCL        88--REDEF
KV$PTR.MVD$
        86**DCL       620>>IF        620>>IF        620>>IF        620>>IF        626>>ASSIGN    626>>ASSIGN
       627>>IF        629>>ASSIGN
KV$PTR.SRD$
        87**DCL       620>>IF        620>>IF
KV$PTR$
        79**DCL        85--IMP-PTR   620>>IF        620>>IF        620>>IF        620>>IF        620>>IF
       620>>IF        626>>ASSIGN    626>>ASSIGN    627>>IF        629>>ASSIGN
KV$SRD.BTMRHT
       224**DCL       229--REDEF
KV$SRD.CRT
       300**DCL       305--REDEF
KV$SRD.FLDEND
       264**DCL       269--REDEF
KV$SRD.HI_NONBLN
       334**DCL       339--REDEF
KV$SRD.LNG
       232**DCL       620>>IF
KV$SRD.ORG
       156**DCL       161--REDEF
KV$SRD.SCROLL
       233**DCL       620>>IF
PL6.E3A0      #003=KVO$UP_SPC_NO_PAGBRK File=KVO$PST.:E05TSI                     WED 07/30/97 02:11 Page:87   
KV$SRD.SRDEND
       369**DCL       374--REDEF
KV$SRD.TOPLFT
       190**DCL       195--REDEF
KV$VDH_PST
       563**DCL       615>>ASSIGN
KV$VDH_PST.PSTVAL
       601**DCL       606--REDEF
KVO$PST
       532**DCL-ENT   632--CALL
KV_VDH_PST_LF_VRT
       484**DCL       611>>ASSIGN
KV_VDH_PST_LF_VRT.PSTVAL
       522**DCL       527--REDEF
LIN
       535**DCL       534--IMP-SIZ   612>>ASSIGN
LINE
       534**DCL        12--PROC      535--REDEF     563--REDEF     614--ENTRY
SUB_COMMON
       615**LABEL     613--GOTO
VDH_PST
       410**DCL       611<<ASSIGN    615<<ASSIGN    632<>CALL
VDH_PST.PSTVAL
       448**DCL       453--REDEF
VDH_PST.PSTVAL.LIN
       450**DCL       612<<ASSIGN    620>>IF        620>>IF        626<<ASSIGN    627>>IF        628<<ASSIGN
       628>>ASSIGN
