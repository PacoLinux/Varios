
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:1    
        1        1        /*M* ZIU$KEYBLD   DRIVER FOR ASSOCIATED KEY FILE BUILD UTILITY     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*******************************************************************
        8        8           IDS ALTERNATE KEY FILE BUILD ROUTINE (using X$SORT  )
        9        9        ********************************************************************/
       10       10        ZIU$KEYBLD: PROC ALTRET;
       11       11    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET; /*D*  DBCS FIND DIRECT   */
       12       12    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET; /*D* DBCS FIND RELATIVE TO SET   */
       13       13    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET; /*D* DBCS FIND OWNER   */
       14       14    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
       15       15    1   DCL SYS_FUNC_OPEN ENTRY ALTRET; /*D* DBCS  MONITOR OOPEN  */
       16       16    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
       17       17    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
       18       18    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
       19       19    1   DCL SYS_FUNC_READ ENTRY ALTRET;
       20       20    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
       21       21    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
       22       22    1   DCL ZIU$KFILE ENTRY ALTRET; /* Reset kfile attribute bit */
       23       23    1   DCL SET_BUFS ENTRY(2) ALTRET;
       24       24    1   DCL ITEM$ PTR STATIC SYMDEF ALIGNED;
       25       25    1   DCL ITEM_TEMP BIT(ITEM_LN) BASED(ITEM$) ALIGNED;
                25            /*D* ITEM_TEMP = TEMP PLACE FOR MOVEMENT OF DATA*/
       26       26    1   DCL NO_DUPS_TBL (0:499) UBIN HALF INIT(0*500) STATIC SYMDEF ALIGNED;
       27       27    1   DCL NO_DUPS_INDX SBIN WORD INIT(0) STATIC SYMDEF ALIGNED;
       28       28    1   DCL KEYBLD_UNWIND REMEMBER STATIC SYMDEF;
       29       29    1   DCL 1 OUT_KEY STATIC SYMDEF ALIGNED,
                29            /*D* OUT_KEY = THE KEY THATS BEING BUILT TO WRITE OUT TO KEY FILE*/
       30       30    1         2 LEN UBIN(9) UNAL,
       31       31    1         2 IXID UBIN(18) UNAL,
       32       32    1         2 VALUE CHAR(252) UNAL;
       33       33    1   DCL BPLDBK UBIN(36) STATIC SYMDEF ALIGNED;
                33            /*D* BPLDBK= KEY SIZE IN BYTES FOR A SPECIFIC AREA*/
       34       34    1   DCL DBK_BIT_SZ UBIN WORD STATIC SYMDEF ALIGNED;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:2    
       35       35    1   DCL MAX_LDBK UBIN(36) STATIC SYMDEF ALIGNED;
                35            /*D* MAX_LDBK= MAX LOCAL DBK FOR A SPECIFIC AREA*/
       36       36    1   DCL REC_CNT SBIN(36) STATIC SYMDEF ALIGNED;
                36            /*D* REC_CNT =RECORD COUNT FOR THE PAGE THAT WE ON */
       37       37    1   DCL ITEM_LN UBIN(36) STATIC SYMDEF ALIGNED;
                37            /*D* ITEM_LN = SIZE IN BITS OF ITEM_TEMP*/
       38       38    1   DCL 1 SMESS_BUFF STATIC ALIGNED,
                38            /*D* SMESS_BUFF = START MESS FOR WHEN ROUTINE IS ENTERED*/
       39       39    1         2 CAR_CON BIT(9) INIT('001000011'B) UNAL,
       40       40    1         2 * CHAR(21) INIT('   Building keys for ') UNAL,
       41       41    1         2 AREA_NM CHAR(32) INIT(' ') UNAL;
       42       42    1   DCL 1 EMESS_BUFF STATIC ALIGNED,
                42            /*D* EMESS_BUFF = ENDING MESSAGE WHEN EXITING THIS ROUTINE*/
       43       43    1         2 CAR_CON BIT(9) INIT('001000011'B) UNAL,
       44       44    1         2 * CHAR(25) INIT('...Key building completed') UNAL;
       45       45    1   DCL TEMP_KEYFID CHAR(30) STATIC ALIGNED; /*D* TEMP_KEYFID = TEMP PLACE FOR KEY FID*/
       46       46    1   DCL INDX UBIN(36) STATIC SYMDEF ALIGNED; /* Indx = 'INDEX' varible*/
       47       47        /**/
       48       48        %INCLUDE ZI_GLOBAL_DBUTIL;
       49      226         %SYS_FUNC;
       50      318         %MISC_DCLS;
       51      371        %INCLUDE ZI$PG_STRUCTS;
       52      474         %ATBLK_PG;
       53      530         %DATA_PG;
       54      549        %INCLUDE ZI_UWA_C;
       55     1239        %ZI$UWAB;
       56     1579        %INCLUDE ZI_RVA_C;
       57     2260        %CAN_RVA_REF;
       58     2579        %INCLUDE CP_6;
       59     2660        %INCLUDE CP_6_SUBS;
       60     3200        %F$DCB;
       61     3257        %FPT_GDP(RESULTS=DYNMIC,
       62     3258         PAGES=1);
       63     3272        %VLP_VECTOR(FPTN=DYNMIC);
       64     3287        %INCLUDE ZI$DIR;
       65     3444        %DIR;
       66     3588        /**/
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:3    
       67     3589    1   DCL SCHEMA_TBL$ PTR STATIC SYMDEF ALIGNED; /* pointer to table */
       68     3590    1   DCL 1 SCHEMA_TBL (0:0) BASED(SCHEMA_TBL$) ALIGNED,
       69     3591    1         2 WRD1,
       70     3592    1           3 REC_TYP# UBIN HALF UNAL,
       71     3593    1           3 KEY_TYP# UBIN HALF UNAL,
       72     3594    1         2 SYN_FR_LOC REDEF WRD1 BIT(36) UNAL,
       73     3595
       74     3596    1         2 WRD2,
       75     3597    1           3 INDX# UBIN HALF UNAL,
       76     3598    1           3 NO_DUPS# BIT(1) UNAL,
       77     3599    1           3 SIZ# UBIN(8) UNAL,
       78     3600    1           3 CNT# UBIN BYTE UNAL,
       79     3601    1         2 DBK REDEF WRD2 UBIN WORD UNAL,
       80     3602    1         2 FR_LOC REDEF WRD2 BIT(36) UNAL;
       81     3603    1   DCL TEMP_DBK UBIN WORD STATIC ALIGNED;
       82     3604    1   DCL LAST_MEMBER SBIN WORD STATIC SYMDEF INIT(0); /* INDEX TO LAST REC_TYP# */
       83     3605    1   DCL TBL_SIZ SBIN WORD STATIC SYMDEF INIT(-1); /* CURRENT TABLE SIZE */
       84     3606    1   DCL CURR_INDX SBIN WORD STATIC SYMDEF INIT(-1); /* CURRENT TABLE POINTER */
       85     3607    1   DCL 1 EIS_TEMP STATIC SYMDEF ALIGNED,
       86     3608    1         2 BEIST BIT(1) UNAL,
       87     3609    1         2 * BIT(35) UNAL;
       88     3610    1   DCL 1 EIS_TEMP_RDEF REDEF EIS_TEMP UBIN WORD ALIGNED;
       89     3611    1   DCL TYP_ADSC9 BIT(1) CONSTANT SYMDEF INIT('0'B) UNAL;
       90     3612    1   DCL TYP_NDSC BIT(1) CONSTANT SYMDEF INIT('1'B) UNAL;
       91     3613    1   DCL TBL_BUILT BIT(1) STATIC INIT('0'B) UNAL;
       92     3614    1   DCL SRCEDCB UBIN HALF STATIC SYMDEF;
       93     3615    1   DCL DESTDCB UBIN HALF STATIC SYMDEF;
       94     3616    1   DCL MAX_KEY_SIZE SBIN WORD STATIC SYMDEF INIT(0);
       95     3617    1   DCL ZIU$BLDKEY ENTRY(2) ALTRET;
       96     3618    1   DCL ZIU$WRTKEY ENTRY(2) ALTRET;
       97     3619    1   DCL ZIU$CMPKEY ENTRY(3);
       98     3620    1   DCL X$SORT ENTRY(1) ALTRET;
       99     3621    1   DCL ZIU$SRTDCB ENTRY;
      100     3622        %INCLUDE ZL_MACRO_C;
      101     4272        %SORT_TABLE(ICE=ZIU$BLDKEY, /*Input routine builds key rec for sort*/
      102     4273        KCE=ZIU$CMPKEY, /*Comparison routine for sorting keys */
      103     4274        OCE=ZIU$WRTKEY, /*Output routine of sort to write file.*/
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:4    
      104     4275        STAT=YES, /* Write stats on the sort procedure */
      105     4276        DMP='D'); /* Dump SPT in case of abnormal end */
      106     4385        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:5    
      107     4386         /* *     * *      * *      PROCEDURE    * *        * *        * */
      108     4387        /* 1. Check to make that we have an area thats integrated, and has a
      109     4388         secondary key file, and is permanent.
      110     4389           2. Open the area as input and create a dcbname thats the same as
      111     4390         the area name only with a ":" concatinated on the end for the
      112     4391         open of the key file associated with it. The key file set
      113     4392        command is also merged in the merge open.
      114     4393        */
      115     4394    2       IF UWA.AC_REC.SEC_KEY ~= 1 THEN DO;
      116     4395    2    /**/   ERRCODESF.ERR# = 4001;
      117     4396    2    /**/   MSGCODE = ERRCODE_RDEF;
      118     4397    2    /**/   ERR_INSERT.CNT(0) = ZI$DIR.AREA_NM.NAME.CNT;
      119     4398    2    /**/   ERR_INSERT.TEXT(0) = ZI$DIR.AREA_NM.NAME.TEXT;
      120     4399    2    /**/   ERRFLGSF = 2;
      121     4400    2           CALL SYS_FUNC_ERRMSG;
      122     4401    2           RETURN;
      123     4402    2           END;
      124     4403    2       IF UWA.AC_REC.PERMTYPE = 1 THEN DO;
      125     4404    2    /**/   ERRCODESF.ERR# = 4002;
      126     4405    2    /**/   MSGCODE = ERRCODE_RDEF;
      127     4406    2    /**/   ERR_INSERT.CNT(0) = ZI$DIR.AREA_NM.NAME.CNT;
      128     4407    2    /**/   ERR_INSERT.TEXT(0) = ZI$DIR.AREA_NM.NAME.TEXT;
      129     4408    2    /**/   ERRFLGSF = 2;
      130     4409    2           CALL SYS_FUNC_ERRMSG;
      131     4410    2    /**/   ERRCODESF.ERR# = 4004;
      132     4411    2    /**/   MSGCODE = ERRCODE_RDEF;
      133     4412    2    /**/   ERRFLGSF = 2;
      134     4413    2           CALL SYS_FUNC_ERRMSG;
      135     4414    2           RETURN;
      136     4415    2           END;
      137     4416    2       IF UWA.AC_REC.P_TYP.P_MD > '0'B THEN DO;
      138     4417    3           IF UWA.AC_REC.P_TYP.P_MD = '11'B THEN DO;
      139     4418    3               ERRCODESF.ERR# = 4005;
      140     4419    3               MSGCODE = ERRCODE_RDEF;
      141     4420    3               ERR_INSERT.CNT(0) = ZI$DIR.AREA_NM.NAME.CNT;
      142     4421    3               ERR_INSERT.TEXT(0) = ZI$DIR.AREA_NM.NAME.TEXT;
      143     4422    3               CALL SYS_FUNC_ERRMSG;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:6    
      144     4423    3               RETURN;
      145     4424    3               END;
      146     4425    2    /**/   ERRCODESF.ERR# = 4003;
      147     4426    2    /**/   MSGCODE = ERRCODE_RDEF;
      148     4427    2    /**/   ERR_INSERT.CNT(0) = KEYFID.NM.CNT;
      149     4428    2    /**/   ERR_INSERT.TEXT(0) = KEYFID.NM.TEXT;
      150     4429    2           CALL SYS_FUNC_ERRMSG;
      151     4430    2    /**/   ERRCODESF.ERR# = 4004;
      152     4431    2    /**/   MSGCODE = ERRCODE_RDEF;
      153     4432    2           CALL SYS_FUNC_ERRMSG;
      154     4433    2    /**/   ERRCODESF.ERR# = 4004;
      155     4434    2    /**/   MSGCODE = ERRCODE_RDEF;
      156     4435    2           CALL SYS_FUNC_ERRMSG;
      157     4436    2           ALTRETURN;
      158     4437    2           END;
      159     4438    1       REMEMBER KEYBLD_UNW IN KEYBLD_UNWIND;
      160     4439    1       CALL OPEN_AREA ALTRET(ALT_EXIT);
      161     4440    1       CALL GET_DCB ALTRET(ALT_KEYBLD);
      162     4441    1       CALL GET_ATBLK_INFO ALTRET(ALT_KEYBLD);
      163     4442         /* Check attribute page of area */
      164     4443    1       IF BREAK_FLAG > 0 THEN
      165     4444    1           GOTO KEYBLD_UNW;
      166     4445    1       IF TBL_BUILT = %NO# THEN /* If first area then */
      167     4446    1           CALL SET_BUFS(,32); /* release all but 32 dyn bufs */
      168     4447    1       CALL BLD_KEY_TBL ALTRET(ALT_KEYBLD);
      169     4448    1       CALL OPEN_KEYFID ALTRET(ALT_KEYBLD);
      170     4449    1       SORT_TABLE.PRIMARY.INSIZ# = MAX_KEY_SIZE; /* MAX RECORD SIZE */
      171     4450    1       SORT_TABLE.PARTSIZ# = MAX_KEY_SIZE; /* MAX KEY SIZE */
      172     4451    1       TBL_BUILT = %YES#; /* Prevents redundant building of schema table */
      173     4452    1       IF BREAK_FLAG > 0 THEN
      174     4453    1           GOTO KEYBLD_UNW;
      175     4454    1       CALL X$SORT(SORT_TABLE) ALTRET(ALT_KEYBLD);
      176     4455         /*
      177     4456            CALL SORT -
      178     4457            INPUT RECORDS ARE GENERATED BY ZIU$BLDKEY,
      179     4458            OUTPUT FILE IS GENERATED BY ZIU$WRTKEY,
      180     4459            ACTUAL COMPARISON OF KYS FOR SORTING DONE BY ZIU$CMPKEY.
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:7    
      181     4460         */
      182     4461    1       CALL CLOSE_FILES;
      183     4462    1       CALL ZIU$KFILE; /* Reset keyfile built flag */
      184     4463    1   /**/ DCBSF = DCBNUM(M$LO);
      185     4464    1   /**/ BUFSF = VECTOR(EMESS_BUFF);
      186     4465    1   /**/ BUFLNSF = 26;
      187     4466    1       CALL SYS_FUNC_WRIT;
      188     4467    1       RETURN;
      189     4468    1   KEYBLD_UNW: ;
      190     4469    1       IF BREAK_FLAG > 0
      191     4470    2       THEN DO;
      192     4471    2           CALL CLOSE_FILES;
      193     4472    2           UNWIND TO RESTART;
      194     4473    2           END;
      195     4474    1   ALT_KEYBLD:
      196     4475    1       CALL CLOSE_FILES;
      197     4476    1   ALT_EXIT:
      198     4477    1       ALTRETURN;
      199     4478        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:8    
      200     4479    1   GET_DCB: PROC ALTRET;
      201     4480        /*
      202     4481              Retrieve DCB for key file.
      203     4482        */
      204     4483    2       KEYFID.NM = DCBADDR(SRCEDCB) -> F$DCB.NAME#;
      205     4484    2       I = KEYFID.NM.CNT;
      206     4485    2       CALL INSERT(KEYFID.NM.TEXT,I,1,':');
      207     4486    2       KEYFID.NM.CNT = I+1;
      208     4487    2   /**/ DCBNMSF = VECTOR(KEYFID.NM);
      209     4488    2       CALL SYS_FUNC_GETDCB ALTRET(ALT_DCB);
      210     4489    2       KEYFID.DCB# = DCBSF;
      211     4490    2       DESTDCB = KEYFID.DCB#;
      212     4491    2       RETURN;
      213     4492    2   ALT_DCB:
      214     4493    2       ALTRETURN;
      215     4494    2   END GET_DCB;
      216     4495        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:9    
      217     4496        /*****************************************************************/
      218     4497        /*          C H E C K   A T T R I B U T E    P A G E             */
      219     4498        /*****************************************************************/
      220     4499    1   GET_ATBLK_INFO: PROC ALTRET;
      221     4500        /*
      222     4501           The purpose of this procedure is to get attributes of the
      223     4502           area being printed. Information on the inventory pages and data
      224     4503           base keys may be inconsistent with the schema if the area is
      225     4504           defined as a template area since these things may change after
      226     4505           the schema was validated.
      227     4506        */
      228     4507    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;
      229     4508    2   /**/ BUFSF = VECTOR(I_O_BUF(0));
      230     4509    2   /**/ BUFLNSF = 4096;
      231     4510    2   /**/ FULLSF = %YES#;
      232     4511    2   /**/ KEYSF = %YES#;
      233     4512    2   /**/ ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;
      234     4513    2   /**/ KEYVSF.IDSKEY = 0; /*   ATTRIBUTE BLOCK */
      235     4514    2       CALL SYS_FUNC_READ ALTRET(ALT_READ);
      236     4515
      237     4516    2       ATBLK$ = ADDR(I_O_BUF(0));
      238     4517        /**/
      239     4518    2       IF UWA.AC_REC.SWS.TEMPLAT = %YES# THEN
      240     4519    3       DO;
      241     4520    3           UWA.AC_REC.CALC_HDRS = ATBLK_PG.TOT_CALC_HDRS;
      242     4521    3           UWA.AC_REC.MAX_PAGE = ATBLK_PG.NUM_DBPG;
      243     4522    3           UWA.AC_REC.INV_UNIT = ATBLK_PG.MISC_INFO.IUSZ;
      244     4523    3           UWA.AC_REC.FIR_INV_PG = ATBLK_PG.FIR_INV_PGNO;
      245     4524    3           END;
      246     4525    2       RETURN;
      247     4526        /**/
      248     4527    2   ALT_READ: ALTRETURN;
      249     4528    2   END GET_ATBLK_INFO;
      250     4529        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:10   
      251     4530    1   BLD_KEY_TBL: PROC ALTRET;
      252     4531        /*
      253     4532              This routine builds a table to be uesd by ZIU$BLDKEY which
      254     4533              will construct associated keys using area as input data file.
      255     4534        */
      256     4535        /**/
      257     4536         /*Initialize all values when entering this routine*/
      258     4537        /**/
      259     4538    2       OUT_INDX=7;
      260     4539    2       I_O_SIZE=0; /*  # of pages read in or writen out*/
      261     4540    2       DATA$ = ADDR(I_O_BUF(0));
      262     4541    2       DATA_PG.OFF_LN.SEC = 0;
              4541                /* Must be less the REC_CNT to initialize for ZIU$BLDKEY */
      263     4542         /*
      264     4543         Set to a higher value than I_O_SIZE to initiate the
      265     4544            start of this routine with a read.
      266     4545         */
      267     4546    2       REC_CNT=9999; /*Index to the location of the record on the data page*/
      268     4547    2       BPLDBK=0; /*Size of the local data base key foer this area in bytes*/
      269     4548    2   /**/ DCBSF=DCBNUM(M$LO);
      270     4549    2       SMESS_BUFF.AREA_NM = ZI$DIR.AREA_NM.NAME.TEXT;
      271     4550    2   /**/ BUFSF = VECTOR(SMESS_BUFF);
      272     4551    2   /**/ BUFLNSF = 54;
      273     4552    2       CALL SYS_FUNC_WRIT;
      274     4553         /*Set of the values of the data page range  and store them into varibles for the do
              4553         statment*
      275     4554            Rb - is the beginning page range
      276     4555            re - is the ending page range
      277     4556         */
      278     4557    2       RB=0; /*Beginning page #*/
      279     4558    2       IF UWA.AC_REC.FIR_INV_PG=0 THEN
      280     4559    2           RE=UWA.AC_REC.MAX_PAGE;
      281     4560    2       ELSE
      282     4561    2           RE=UWA.AC_REC.FIR_INV_PG-1;
      283     4562    2       MAX_LDBK = UWA.AC_REC.KEY_ALLOC + UWA.AC_REC.KEYS_RESER;
      284     4563    2       IF MAX_LDBK <= BITBIN('777777'O) THEN
      285     4564    2           BPLDBK = 2;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:11   
      286     4565    2       ELSE
      287     4566    2           IF MAX_LDBK <= BITBIN('777777777'O) THEN
      288     4567    2               BPLDBK=3;
      289     4568    2           ELSE BPLDBK=4;
      290     4569    2       DBK_BIT_SZ = BPLDBK * 9;
      291     4570    2       IF TBL_BUILT = %YES# THEN
      292     4571    2           RETURN; /* Initialized to be NO# */
      293     4572        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:12   
      294     4573        /*
      295     4574           Build a table of schema data in two steps-
      296     4575           1. Pass through the rc record chain building a table indx of record
      297     4576              types and storing them with the DBK of  the SM record that will
      298     4577              supply us with a link to the EIS descriptors we will need to
      299     4578              build the keys for that record. Once this pass is made, we know
      300     4579              how many keys we are working with (but still don't know how many
      301     4580              EIS descriptors we need to store.
      302     4581           2. Set the current index to the bottom of the table and return to
      303     4582              the schema retrieveing the data base keys stored in the above step
      304     4583              and following the SC-CF-FR chains to store the neccessary EIS
      305     4584              descriptors.
      306     4585        */
      307     4586    2       CALL GET_DYN_PGE_TBL ALTRET(SPACE_OUT);
      308     4587    2       SCHEMA_TBL$ = DYNMIC.PTR$;
      309     4588    2       CALL DB_FUNC_FDR(CAN_RVA.OAREC,UWA.SF_REC.DBKOA) ALTRET(ALT_DBCS);
      310     4589    2       CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(ALT_DBCS);
      311     4590    3       DO WHILE(UWA.DB_STATUS ~= '02100');
      312     4591    3           CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(ALT_DBCS);
      313     4592    3           IF UWA.RC_REC.KEY_PRESENT = 1 THEN
      314     4593    4           DO;
      315     4594    4               CALL DB_FUNC_FRS(CAN_RVA.SMREC.SEC,CAN_RVA.RCSOSM.SEC) ALTRET(ALT_DBCS);
      316     4595    5               DO WHILE(UWA.DB_STATUS ~= '02100');
      317     4596    5                   CALL DB_FUNC_GET(CAN_RVA.SMREC.SEC) ALTRET(ALT_DBCS);
      318     4597    5                   IF UWA.SM_REC.INSTYPE = 0 THEN
      319     4598    6                   DO;
      320     4599    6                       TEMP_DBK = UWA.DIR_REF; /* DBK of SM rec */
      321     4600    6                       CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC) ALTRET(ALT_DBCS);
      322     4601    6                       CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(ALT_DBCS);
      323     4602    6                       IF UWA.SC_REC.SETTYPE = 3 THEN
      324     4603    7                       DO;
      325     4604    7                           CURR_INDX = CURR_INDX +1;
      326     4605    7                           IF CURR_INDX > TBL_SIZ THEN
      327     4606    7                               CALL GET_DYN_PGE_TBL ALTRET(SPACE_OUT);
      328     4607    7                           SCHEMA_TBL.WRD1.REC_TYP#(CURR_INDX) = UWA.RC_REC.RTYPE;
      329     4608    7                           SCHEMA_TBL.WRD1.KEY_TYP#(CURR_INDX) = UWA.SC_REC.IXID;
      330     4609    7                           SCHEMA_TBL.DBK(CURR_INDX) = TEMP_DBK;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:13   
      331     4610    7                           END;
      332     4611    6                       END;
      333     4612    5                   CALL DB_FUNC_FRS(CAN_RVA.SMREC.SEC,CAN_RVA.RCSOSM.SEC) ALTRET(
              4612                            ALT_DBCS);
      334     4613    5                   END;
      335     4614    4               END;
      336     4615    3           CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(ALT_DBCS);
      337     4616    3           END;
      338     4617    2       LAST_MEMBER = CURR_INDX;
      339     4618        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:14   
      340     4619        /*
      341     4620           Build second half of table by starting at the last member in the
      342     4621           table adding eis descriptors. Pick up the search for them at
      343     4622           SCHEMA_TBL.DBK(0) and go through the whole table from 0 to LAST_MEMBER.
      344     4623        */
      345     4624    3       DO I=0 TO LAST_MEMBER;
      346     4625    3           UWA.DIR_REF = SCHEMA_TBL.DBK(I);
      347     4626    3           CALL DB_FUNC_FDR(CAN_RVA.SMREC.SEC,UWA.DIR_REF) ALTRET(ALT_DBCS);
      348     4627    3           CALL DB_FUNC_GET(CAN_RVA.SMREC.SEC) ALTRET(ALT_DBCS);
      349     4628    3           IF UWA.SM_REC.SEQDUP = 2 THEN
      350     4629    3               SCHEMA_TBL.WRD2.NO_DUPS#(I) = %YES#;
      351     4630    3           ELSE
      352     4631    3               SCHEMA_TBL.WRD2.NO_DUPS#(I) = %NO#;
      353     4632    3           CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC) ALTRET(ALT_DBCS);
      354     4633    3           CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(ALT_DBCS);
      355     4634    3           SCHEMA_TBL.WRD2.SIZ#(I) = UWA.SC_REC.KEY_LENGHT;
      356     4635    3           IF SCHEMA_TBL.WRD2.SIZ#(I) > MAX_KEY_SIZE THEN
      357     4636    3               MAX_KEY_SIZE = SCHEMA_TBL.WRD2.SIZ#(I);
      358     4637    3           SCHEMA_TBL.WRD2.INDX#(I) = CURR_INDX +1;
      359     4638    3           SCHEMA_TBL.WRD2.CNT#(I) = 0;
      360     4639    3           CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.SMSSCF.SEC) ALTRET(ALT_DBCS);
      361     4640    4           DO WHILE(UWA.DB_STATUS ~= '02100');
      362     4641    4               CALL DB_FUNC_GET(CAN_RVA.CFREC.SEC) ALTRET(ALT_DBCS);
      363     4642    4               IF UWA.CF_REC.SYN = 1 THEN
      364     4643    5               DO;
      365     4644    5                   CURR_INDX = CURR_INDX+1;
      366     4645    5                   IF CURR_INDX > TBL_SIZ THEN
      367     4646    5                       CALL GET_DYN_PGE_TBL ALTRET(SPACE_OUT);
      368     4647    5                   CALL DB_FUNC_FOR(CAN_RVA.FRCFS.SEC) ALTRET(ALT_DBCS);
      369     4648    5                   CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC) ALTRET(ALT_DBCS);
      370     4649    5                   SCHEMA_TBL.WRD2.CNT#(I) = SCHEMA_TBL.WRD2.CNT#(I) +1;
      371     4650    5                   EIS_TEMP_RDEF = UWA.FR_REC.BUFLOC;
      372     4651    5                   IF UWA.FR_REC.BEIST = 0 THEN
      373     4652    5                       EIS_TEMP.BEIST = TYP_ADSC9;
      374     4653    5                   ELSE
      375     4654    5                       EIS_TEMP.BEIST = TYP_NDSC;
      376     4655    5                   SCHEMA_TBL.SYN_FR_LOC(CURR_INDX) = EIS_TEMP;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:15   
      377     4656    5                   CALL DB_FUNC_FDR(CAN_RVA.FRREC.SEC,UWA.FR_REC.FRFRH) ALTRET(ALT_DBCS
              4656                            );
      378     4657    5                   CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC) ALTRET(ALT_DBCS);
      379     4658    5                   EIS_TEMP_RDEF = UWA.FR_REC.BUFLOC;
      380     4659    5                   IF UWA.FR_REC.BEIST = 0 THEN
      381     4660    5                       EIS_TEMP.BEIST = TYP_ADSC9;
      382     4661    5                   ELSE
      383     4662    5                       EIS_TEMP.BEIST = TYP_NDSC;
      384     4663    5                   SCHEMA_TBL.FR_LOC(CURR_INDX) = EIS_TEMP;
      385     4664    5                   END;
      386     4665    4               CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.SMSSCF.SEC) ALTRET(ALT_DBCS);
      387     4666    4               END;
      388     4667    3           END;
      389     4668    2       MAX_KEY_SIZE = MAX_KEY_SIZE + 7; /* 7=DBK+KEY_TYP+1 byte len */
      390     4669    2       RETURN;
      391     4670        /*
      392     4671                 GET  DYNAMIC PAGE OF  MEMORY  FOR  SCHEMA  TABLE
      393     4672        */
      394     4673    2   GET_DYN_PGE_TBL: PROC ALTRET;
      395     4674    3       CALL M$GDP(FPT_GDP) ALTRET(NO_SPACE);
      396     4675    3       TBL_SIZ = TBL_SIZ +(DYNMIC.W1.VSIZE# / 8);
      397     4676    3       RETURN;
      398     4677    3   NO_SPACE:
      399     4678    3       ALTRETURN;
      400     4679    3   END GET_DYN_PGE_TBL;
      401     4680    2   ALT_DBCS:
      402     4681    2       ALTRETURN;
      403     4682    2   SPACE_OUT:
      404     4683         /*E* ERROR: ZIU-04020-C
      405     4684           MESSAGE: Insufficient memory allocation to retrieve necessary schema data. */
      406     4685    2   /**/ ERRCODESF.ERR# = 4020;
      407     4686    2   /**/ MSGCODE = ERRCODE_RDEF;
      408     4687    2       CALL SYS_FUNC_ERRMSG;
      409     4688    2       ALTRETURN;
      410     4689    2   END BLD_KEY_TBL;
      411     4690        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:16   
      412     4691    1   OPEN_AREA: PROC ALTRET;
      413     4692        /*
      414     4693              Open IDS area (in) - used as a source of data for building keys.
      415     4694              Open KEYFID (create) - Result of keybld operation.
      416     4695        */
      417     4696    2       SRCEDCB = ZI$DIR.AREA_NM.DCB#;
      418     4697    2   /**/ DCBSF = SRCEDCB;
      419     4698    2   /**/ ORGSF = %IDS#;
      420     4699    2   /**/ FULLSF= %YES#;
      421     4700    2   /**/ FUNSF = %IN#;
      422     4701    2   /**/ SHARESF=%IN#;
      423     4702    2   /**/ ACSSF = %DIRECT#;
      424     4703    2   /**/ ASNSF = %FILE#;
      425     4704    2   /**/ FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;
      426     4705    2       CALL SYS_FUNC_OPEN ALTRET(ALT_OPEN);
      427     4706    2       RETURN;
      428     4707    2   ALT_OPEN: ALTRETURN;
      429     4708    2   END OPEN_AREA;
      430     4709        /**/
      431     4710    1   OPEN_KEYFID: PROC ALTRET;
      432     4711        /**/
      433     4712    2   /**/ DCBSF = DESTDCB;
      434     4713    2   /**/ ORGSF = %KEYED#;
      435     4714    2   /**/ ACSSF = %DIRECT#;
      436     4715    2   /**/ FUNSF = %CREATE#;
      437     4716    2   /**/ XTENSIZESF = (RE /15); /* APPROX .07 THE AREA SIXE */
      438     4717    2   /**/ SHARESF = %NONE#;
      439     4718    2   /**/ ASNSF = %FILE#;
      440     4719    2   /**/ FIDSF = KEYFID.NM.TEXT;
      441     4720    2   /**/ KEY_SHADWSF = SRCEDCB;
      442     4721    2   /**/ CARRY_ATTRIBUTESF = '0'B;
      443     4722    2   /**/ EXISTSF = %NEWFILE#;
      444     4723    2       CALL SYS_FUNC_OPEN ALTRET(ALT_OPEN);
      445     4724
      446     4725         /*   Call routine  to check and set sort dcb */
      447     4726    2       CALL ZIU$SRTDCB;
      448     4727
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:17   
      449     4728    2       RETURN;
      450     4729    2   ALT_OPEN:
      451     4730    2       ALTRETURN;
      452     4731    2   END OPEN_KEYFID;
      453     4732        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:18   
      454     4733    1   CLOSE_FILES: PROC;
      455     4734        /*
      456     4735              This routine closes the area and key files.
      457     4736        */
      458     4737    2   /**/ DCBSF = SRCEDCB;
      459     4738    2       IF DCBADDR(DCBSF)->F$DCB.FCD# = %YES# THEN
      460     4739    2           CALL SYS_FUNC_CLOS;
      461     4740    2       IF SRCEDCB = DESTDCB THEN
      462     4741    2           RETURN;
      463     4742    2   /**/ DCBSF = DESTDCB;
      464     4743    2       IF DCBADDR(DCBSF) -> F$DCB.FCD# = %YES# THEN
      465     4744    3       DO;
      466     4745    3           CALL SYS_FUNC_CLOS;
      467     4746    3           CALL SYS_FUNC_RELDCB;
      468     4747    3           END;
      469     4748    2       RETURN;
      470     4749    2   END CLOSE_FILES;
      471     4750    1   END ZIU$KEYBLD;
      472     4751        %EOD;

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:19   
--  Include file information  --

   ZL_MACRO_C.:TOOLE05  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$KEYBLD.

   Procedure ZIU$KEYBLD requires 665 words for executable code.
   Procedure ZIU$KEYBLD requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:20   

 Object Unit name= ZIU$KEYBLD                                 File name= ZIU$KEYBLD.:ZIC0TOU
 UTS= SEP 05 '97 13:16:40.00 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   658   1222  ZIU$KEYBLD
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$UC
    3  RoData even  UTS      5      5  ZIU$KEYBLD
    4   Proc  even  none   665   1231  ZIU$KEYBLD
    5  RoData even  none    35     43  ZIU$KEYBLD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        0  ZIU$KEYBLD
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:21   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  ITEM$                              0      1  NO_DUPS_TBL
    0    765  NO_DUPS_INDX                       0    766  KEYBLD_UNWIND
    0    770  OUT_KEY                            0   1070  BPLDBK
    0   1071  DBK_BIT_SZ                         0   1072  MAX_LDBK
    0   1073  REC_CNT                            0   1074  ITEM_LN
    0   1132  INDX                               0   1144  SCHEMA_TBL$
    0   1146  LAST_MEMBER                        0   1147  TBL_SIZ
    0   1150  CURR_INDX                          0   1151  EIS_TEMP
    3      0  TYP_ADSC9                          3      1  TYP_NDSC
    0   1153  SRCEDCB                            0   1154  DESTDCB
    0   1155  MAX_KEY_SIZE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 ZIU$BLDKEY
 yes     yes           Std       2 ZIU$WRTKEY
 yes     yes           Std       2 SET_BUFS
 yes     yes           Std       1 X$SORT
 yes     yes           Std       0 ZIU$KFILE
         yes           Std       3 ZIU$CMPKEY
 yes     yes           Std       0 SYS_FUNC_WRIT
 yes     yes           Std       0 SYS_FUNC_ERRMSG
 yes     yes           Std       0 SYS_FUNC_GETDCB
 yes     yes           Std       0 SYS_FUNC_READ
 yes     yes           Std       2 DB_FUNC_FDR
 yes     yes           Std       1 DB_FUNC_GET
 yes     yes           Std       2 DB_FUNC_FRS
 yes     yes           Std       1 DB_FUNC_FOR
 yes     yes           Std       0 SYS_FUNC_OPEN
         yes           Std       0 ZIU$SRTDCB
 yes     yes           Std       0 SYS_FUNC_CLOS
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:22   
 yes     yes           Std       0 SYS_FUNC_RELDCB
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       nStd      0 X66_AUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     BLKLSF                                KEYLSF                                KEYXSF
     DCBSF                                 ORGSF                                 KEYSF
     KEYVSF                                ACSSF                                 NOTIMESF
     FUNSF                                 ASNSF                                 TESTSF
     XTENSIZESF                            DISPSF                                WAITSF
     VFCSF                                 FULLSF                                BKUPSF
     BUFLNSF                               BUFSF                                 SOURCESF
     DESTSF                                DATESF                                TIMESF
     UTSSF                                 DAYSF                                 TSTAMPSF
     ENCRP_SEEDSF                          ERRCODESF                             MSGCODE
     INCL_ERR                              ERR_INSERT                            FIDSF_RD
     ACNT                                  EXISTSF                               SHARESF
     DCBNMSF                               KEYRSF                                NO_KEYSF
     REASGNSF                              CARRY_ATTRIBUTESF                     SUBMESSF
     SPKY_OPNSF                            POSSF                                 ERRFLGSF
     MERGESF                               FSA_FLAG                              RELGSF
     UNUSED                                HELPCODE                              COUNTSF
     INDEXSF                               GAP                                   PSNSF
     ACNTSF                                KEY_SHADWSF                           REC$
     RB                                    RE                                    IE
     IB                                    CNT                                   ICNT
     RCNT                                  SCNT                                  FIRST_SET
     RETCNT                                DMPCNT                                KCNT
     ACNT_IDX                              I                                     J
     K                                     X                                     STEPCC
     I_O_BUF$                              OUT_INDX                              I_O_SIZE
     REC_DATA_LN                           M$LO                                  B$TCB$
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:23   
     B$ROS$                                B$JIT$                                KEYFID
     I_O_KEY                               RESTART                               BREAK_FLAG
     ICHKSUM                               ITMCNT                                GAP1
     ATBLK$                                DATA$                                 UWA
     CAN_RVA                               M$UC                                  ZI$DIR
     SCHEMA_ACTIVE                         RECORD_LIST                           SET_LIST
     RETAIN_LIST                           DUMP_FID                              ALTKY
     INIT_RG                               KEY_RNG                               ITEM_LIST

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:24   


        1        1        /*M* ZIU$KEYBLD   DRIVER FOR ASSOCIATED KEY FILE BUILD UTILITY     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*******************************************************************
        8        8           IDS ALTERNATE KEY FILE BUILD ROUTINE (using X$SORT  )
        9        9        ********************************************************************/
       10       10        ZIU$KEYBLD: PROC ALTRET;

     10  4 000000   000000 700200 xent  ZIU$KEYBLD   TSX0  ! X66_AUTO_0
         4 000001   000012 000000                    ZERO    10,0

       11       11    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET; /*D*  DBCS FIND DIRECT   */
       12       12    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET; /*D* DBCS FIND RELATIVE TO SET   */
       13       13    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET; /*D* DBCS FIND OWNER   */
       14       14    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
       15       15    1   DCL SYS_FUNC_OPEN ENTRY ALTRET; /*D* DBCS  MONITOR OOPEN  */
       16       16    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
       17       17    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
       18       18    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
       19       19    1   DCL SYS_FUNC_READ ENTRY ALTRET;
       20       20    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
       21       21    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
       22       22    1   DCL ZIU$KFILE ENTRY ALTRET; /* Reset kfile attribute bit */
       23       23    1   DCL SET_BUFS ENTRY(2) ALTRET;
       24       24    1   DCL ITEM$ PTR STATIC SYMDEF ALIGNED;
       25       25    1   DCL ITEM_TEMP BIT(ITEM_LN) BASED(ITEM$) ALIGNED;
                25            /*D* ITEM_TEMP = TEMP PLACE FOR MOVEMENT OF DATA*/
       26       26    1   DCL NO_DUPS_TBL (0:499) UBIN HALF INIT(0*500) STATIC SYMDEF ALIGNED;
       27       27    1   DCL NO_DUPS_INDX SBIN WORD INIT(0) STATIC SYMDEF ALIGNED;
       28       28    1   DCL KEYBLD_UNWIND REMEMBER STATIC SYMDEF;
       29       29    1   DCL 1 OUT_KEY STATIC SYMDEF ALIGNED,
                29            /*D* OUT_KEY = THE KEY THATS BEING BUILT TO WRITE OUT TO KEY FILE*/
       30       30    1         2 LEN UBIN(9) UNAL,
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:25   
       31       31    1         2 IXID UBIN(18) UNAL,
       32       32    1         2 VALUE CHAR(252) UNAL;
       33       33    1   DCL BPLDBK UBIN(36) STATIC SYMDEF ALIGNED;
                33            /*D* BPLDBK= KEY SIZE IN BYTES FOR A SPECIFIC AREA*/
       34       34    1   DCL DBK_BIT_SZ UBIN WORD STATIC SYMDEF ALIGNED;
       35       35    1   DCL MAX_LDBK UBIN(36) STATIC SYMDEF ALIGNED;
                35            /*D* MAX_LDBK= MAX LOCAL DBK FOR A SPECIFIC AREA*/
       36       36    1   DCL REC_CNT SBIN(36) STATIC SYMDEF ALIGNED;
                36            /*D* REC_CNT =RECORD COUNT FOR THE PAGE THAT WE ON */
       37       37    1   DCL ITEM_LN UBIN(36) STATIC SYMDEF ALIGNED;
                37            /*D* ITEM_LN = SIZE IN BITS OF ITEM_TEMP*/
       38       38    1   DCL 1 SMESS_BUFF STATIC ALIGNED,
                38            /*D* SMESS_BUFF = START MESS FOR WHEN ROUTINE IS ENTERED*/
       39       39    1         2 CAR_CON BIT(9) INIT('001000011'B) UNAL,
       40       40    1         2 * CHAR(21) INIT('   Building keys for ') UNAL,
       41       41    1         2 AREA_NM CHAR(32) INIT(' ') UNAL;
       42       42    1   DCL 1 EMESS_BUFF STATIC ALIGNED,
                42            /*D* EMESS_BUFF = ENDING MESSAGE WHEN EXITING THIS ROUTINE*/
       43       43    1         2 CAR_CON BIT(9) INIT('001000011'B) UNAL,
       44       44    1         2 * CHAR(25) INIT('...Key building completed') UNAL;
       45       45    1  DCL TEMP_KEYFID CHAR(30) STATIC ALIGNED; /*D* TEMP_KEYFID = TEMP PLACE FOR KEY FID*/
       46       46    1   DCL INDX UBIN(36) STATIC SYMDEF ALIGNED; /* Indx = 'INDEX' varible*/
       47       47        /**/
       48       48        %INCLUDE ZI_GLOBAL_DBUTIL;
       49      226         %SYS_FUNC;
       50      318         %MISC_DCLS;
       51      371        %INCLUDE ZI$PG_STRUCTS;
       52      474         %ATBLK_PG;
       53      530         %DATA_PG;
       54      549        %INCLUDE ZI_UWA_C;
       55     1239        %ZI$UWAB;
       56     1579        %INCLUDE ZI_RVA_C;
       57     2260        %CAN_RVA_REF;
       58     2579        %INCLUDE CP_6;
       59     2660        %INCLUDE CP_6_SUBS;
       60     3200        %F$DCB;
       61     3257        %FPT_GDP(RESULTS=DYNMIC,
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:26   
       62     3258         PAGES=1);
       63     3272        %VLP_VECTOR(FPTN=DYNMIC);
       64     3287        %INCLUDE ZI$DIR;
       65     3444        %DIR;
       66     3588        /**/
       67     3589    1   DCL SCHEMA_TBL$ PTR STATIC SYMDEF ALIGNED; /* pointer to table */
       68     3590    1   DCL 1 SCHEMA_TBL (0:0) BASED(SCHEMA_TBL$) ALIGNED,
       69     3591    1         2 WRD1,
       70     3592    1           3 REC_TYP# UBIN HALF UNAL,
       71     3593    1           3 KEY_TYP# UBIN HALF UNAL,
       72     3594    1         2 SYN_FR_LOC REDEF WRD1 BIT(36) UNAL,
       73     3595
       74     3596    1         2 WRD2,
       75     3597    1           3 INDX# UBIN HALF UNAL,
       76     3598    1           3 NO_DUPS# BIT(1) UNAL,
       77     3599    1           3 SIZ# UBIN(8) UNAL,
       78     3600    1           3 CNT# UBIN BYTE UNAL,
       79     3601    1         2 DBK REDEF WRD2 UBIN WORD UNAL,
       80     3602    1         2 FR_LOC REDEF WRD2 BIT(36) UNAL;
       81     3603    1   DCL TEMP_DBK UBIN WORD STATIC ALIGNED;
       82     3604    1   DCL LAST_MEMBER SBIN WORD STATIC SYMDEF INIT(0); /* INDEX TO LAST REC_TYP# */
       83     3605    1   DCL TBL_SIZ SBIN WORD STATIC SYMDEF INIT(-1); /* CURRENT TABLE SIZE */
       84     3606    1   DCL CURR_INDX SBIN WORD STATIC SYMDEF INIT(-1); /* CURRENT TABLE POINTER */
       85     3607    1   DCL 1 EIS_TEMP STATIC SYMDEF ALIGNED,
       86     3608    1         2 BEIST BIT(1) UNAL,
       87     3609    1         2 * BIT(35) UNAL;
       88     3610    1   DCL 1 EIS_TEMP_RDEF REDEF EIS_TEMP UBIN WORD ALIGNED;
       89     3611    1   DCL TYP_ADSC9 BIT(1) CONSTANT SYMDEF INIT('0'B) UNAL;
       90     3612    1   DCL TYP_NDSC BIT(1) CONSTANT SYMDEF INIT('1'B) UNAL;
       91     3613    1   DCL TBL_BUILT BIT(1) STATIC INIT('0'B) UNAL;
       92     3614    1   DCL SRCEDCB UBIN HALF STATIC SYMDEF;
       93     3615    1   DCL DESTDCB UBIN HALF STATIC SYMDEF;
       94     3616    1   DCL MAX_KEY_SIZE SBIN WORD STATIC SYMDEF INIT(0);
       95     3617    1   DCL ZIU$BLDKEY ENTRY(2) ALTRET;
       96     3618    1   DCL ZIU$WRTKEY ENTRY(2) ALTRET;
       97     3619    1   DCL ZIU$CMPKEY ENTRY(3);
       98     3620    1   DCL X$SORT ENTRY(1) ALTRET;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:27   
       99     3621    1   DCL ZIU$SRTDCB ENTRY;
      100     3622        %INCLUDE ZL_MACRO_C;
      101     4272        %SORT_TABLE(ICE=ZIU$BLDKEY, /*Input routine builds key rec for sort*/
      102     4273        KCE=ZIU$CMPKEY, /*Comparison routine for sorting keys */
      103     4274        OCE=ZIU$WRTKEY, /*Output routine of sort to write file.*/
      104     4275        STAT=YES, /* Write stats on the sort procedure */
      105     4276        DMP='D'); /* Dump SPT in case of abnormal end */
      106     4385        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:28   
      107     4386         /* *     * *      * *      PROCEDURE    * *        * *        * */
      108     4387        /* 1. Check to make that we have an area thats integrated, and has a
      109     4388         secondary key file, and is permanent.
      110     4389           2. Open the area as input and create a dcbname thats the same as
      111     4390         the area name only with a ":" concatinated on the end for the
      112     4391         open of the key file associated with it. The key file set
      113     4392        command is also merged in the merge open.
      114     4393        */
      115     4394    2       IF UWA.AC_REC.SEC_KEY ~= 1 THEN DO;

   4394  4 000002   000235 235000 xsym               LDA     UWA+157
         4 000003   000001 115007                    CMPA    1,DL
         4 000004   000025 600000 4                  TZE     s:4403

      116     4395    2    /**/   ERRCODESF.ERR# = 4001;

   4395  4 000005   000000 236000 xsym               LDQ     ERRCODESF
         4 000006   000000 376000 5                  ANQ     0
         4 000007   076410 276007                    ORQ     32008,DL
         4 000010   000000 756000 xsym               STQ     ERRCODESF

      117     4396    2    /**/   MSGCODE = ERRCODE_RDEF;

   4396  4 000011   000000 756000 xsym               STQ     MSGCODE

      118     4397    2    /**/   ERR_INSERT.CNT(0) = ZI$DIR.AREA_NM.NAME.CNT;

   4397  4 000012   000234 236000 xsym               LDQ     ZI$DIR+156
         4 000013   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      119     4398    2    /**/   ERR_INSERT.TEXT(0) = ZI$DIR.AREA_NM.NAME.TEXT;

   4398  4 000014   040000 100400                    MLR     fill='040'O
         4 000015   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000016   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      120     4399    2    /**/   ERRFLGSF = 2;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:29   

   4399  4 000017   002000 236003                    LDQ     1024,DU
         4 000020   000000 756000 xsym               STQ     ERRFLGSF

      121     4400    2           CALL SYS_FUNC_ERRMSG;

   4400  4 000021   000001 631400 5                  EPPR1   1
         4 000022   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000023   000000 011000                    NOP     0

      122     4401    2           RETURN;

   4401  4 000024   000000 702200 xent               TSX2  ! X66_ARET

      123     4402    2           END;
      124     4403    2       IF UWA.AC_REC.PERMTYPE = 1 THEN DO;

   4403  4 000025   000236 236000 xsym               LDQ     UWA+158
         4 000026   000001 116007                    CMPQ    1,DL
         4 000027   000062 601000 4                  TNZ     s:4416

      125     4404    2    /**/   ERRCODESF.ERR# = 4002;

   4404  4 000030   000000 236000 xsym               LDQ     ERRCODESF
         4 000031   000000 376000 5                  ANQ     0
         4 000032   076420 276007                    ORQ     32016,DL
         4 000033   000000 756000 xsym               STQ     ERRCODESF

      126     4405    2    /**/   MSGCODE = ERRCODE_RDEF;

   4405  4 000034   000000 756000 xsym               STQ     MSGCODE

      127     4406    2    /**/   ERR_INSERT.CNT(0) = ZI$DIR.AREA_NM.NAME.CNT;

   4406  4 000035   000234 236000 xsym               LDQ     ZI$DIR+156
         4 000036   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:30   
      128     4407    2    /**/   ERR_INSERT.TEXT(0) = ZI$DIR.AREA_NM.NAME.TEXT;

   4407  4 000037   040000 100400                    MLR     fill='040'O
         4 000040   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000041   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      129     4408    2    /**/   ERRFLGSF = 2;

   4408  4 000042   002000 236003                    LDQ     1024,DU
         4 000043   000000 756000 xsym               STQ     ERRFLGSF

      130     4409    2           CALL SYS_FUNC_ERRMSG;

   4409  4 000044   000001 631400 5                  EPPR1   1
         4 000045   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000046   000000 011000                    NOP     0

      131     4410    2    /**/   ERRCODESF.ERR# = 4004;

   4410  4 000047   000000 236000 xsym               LDQ     ERRCODESF
         4 000050   000000 376000 5                  ANQ     0
         4 000051   076440 276007                    ORQ     32032,DL
         4 000052   000000 756000 xsym               STQ     ERRCODESF

      132     4411    2    /**/   MSGCODE = ERRCODE_RDEF;

   4411  4 000053   000000 756000 xsym               STQ     MSGCODE

      133     4412    2    /**/   ERRFLGSF = 2;

   4412  4 000054   002000 236003                    LDQ     1024,DU
         4 000055   000000 756000 xsym               STQ     ERRFLGSF

      134     4413    2           CALL SYS_FUNC_ERRMSG;

   4413  4 000056   000001 631400 5                  EPPR1   1
         4 000057   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:31   
         4 000060   000000 011000                    NOP     0

      135     4414    2           RETURN;

   4414  4 000061   000000 702200 xent               TSX2  ! X66_ARET

      136     4415    2           END;
      137     4416    2       IF UWA.AC_REC.P_TYP.P_MD > '0'B THEN DO;

   4416  4 000062   000237 236000 xsym               LDQ     UWA+159
         4 000063   000003 376007                    ANQ     3,DL
         4 000064   000000 116003                    CMPQ    0,DU
         4 000065   000147 602000 4                  TNC     s:4438
         4 000066   000147 600000 4                  TZE     s:4438

      138     4417    3           IF UWA.AC_REC.P_TYP.P_MD = '11'B THEN DO;

   4417  4 000067   000237 236000 xsym               LDQ     UWA+159
         4 000070   000003 376007                    ANQ     3,DL
         4 000071   000003 116007                    CMPQ    3,DL
         4 000072   000111 601000 4                  TNZ     s:4425

      139     4418    3               ERRCODESF.ERR# = 4005;

   4418  4 000073   000000 236000 xsym               LDQ     ERRCODESF
         4 000074   000000 376000 5                  ANQ     0
         4 000075   076450 276007                    ORQ     32040,DL
         4 000076   000000 756000 xsym               STQ     ERRCODESF

      140     4419    3               MSGCODE = ERRCODE_RDEF;

   4419  4 000077   000000 756000 xsym               STQ     MSGCODE

      141     4420    3               ERR_INSERT.CNT(0) = ZI$DIR.AREA_NM.NAME.CNT;

   4420  4 000100   000234 236000 xsym               LDQ     ZI$DIR+156
         4 000101   000000 552040 xsym               STBQ    ERR_INSERT,'40'O
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:32   

      142     4421    3               ERR_INSERT.TEXT(0) = ZI$DIR.AREA_NM.NAME.TEXT;

   4421  4 000102   040000 100400                    MLR     fill='040'O
         4 000103   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000104   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      143     4422    3               CALL SYS_FUNC_ERRMSG;

   4422  4 000105   000001 631400 5                  EPPR1   1
         4 000106   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000107   000000 011000                    NOP     0

      144     4423    3               RETURN;

   4423  4 000110   000000 702200 xent               TSX2  ! X66_ARET

      145     4424    3               END;
      146     4425    2    /**/   ERRCODESF.ERR# = 4003;

   4425  4 000111   000000 236000 xsym               LDQ     ERRCODESF
         4 000112   000000 376000 5                  ANQ     0
         4 000113   076430 276007                    ORQ     32024,DL
         4 000114   000000 756000 xsym               STQ     ERRCODESF

      147     4426    2    /**/   MSGCODE = ERRCODE_RDEF;

   4426  4 000115   000000 756000 xsym               STQ     MSGCODE

      148     4427    2    /**/   ERR_INSERT.CNT(0) = KEYFID.NM.CNT;

   4427  4 000116   000000 236000 xsym               LDQ     KEYFID
         4 000117   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      149     4428    2    /**/   ERR_INSERT.TEXT(0) = KEYFID.NM.TEXT;

   4428  4 000120   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:33   
         4 000121   000000 200036 xsym               ADSC9   KEYFID                   cn=1,n=30
         4 000122   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      150     4429    2           CALL SYS_FUNC_ERRMSG;

   4429  4 000123   000001 631400 5                  EPPR1   1
         4 000124   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000125   000000 011000                    NOP     0

      151     4430    2    /**/   ERRCODESF.ERR# = 4004;

   4430  4 000126   000000 236000 xsym               LDQ     ERRCODESF
         4 000127   000000 376000 5                  ANQ     0
         4 000130   076440 276007                    ORQ     32032,DL
         4 000131   000000 756000 xsym               STQ     ERRCODESF

      152     4431    2    /**/   MSGCODE = ERRCODE_RDEF;

   4431  4 000132   000000 756000 xsym               STQ     MSGCODE

      153     4432    2           CALL SYS_FUNC_ERRMSG;

   4432  4 000133   000001 631400 5                  EPPR1   1
         4 000134   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000135   000000 011000                    NOP     0

      154     4433    2    /**/   ERRCODESF.ERR# = 4004;

   4433  4 000136   000000 236000 xsym               LDQ     ERRCODESF
         4 000137   000000 376000 5                  ANQ     0
         4 000140   076440 276007                    ORQ     32032,DL
         4 000141   000000 756000 xsym               STQ     ERRCODESF

      155     4434    2    /**/   MSGCODE = ERRCODE_RDEF;

   4434  4 000142   000000 756000 xsym               STQ     MSGCODE

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:34   
      156     4435    2           CALL SYS_FUNC_ERRMSG;

   4435  4 000143   000001 631400 5                  EPPR1   1
         4 000144   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000145   000000 011000                    NOP     0

      157     4436    2           ALTRETURN;

   4436  4 000146   000000 702200 xent               TSX2  ! X66_AALT

      158     4437    2           END;
      159     4438    1       REMEMBER KEYBLD_UNW IN KEYBLD_UNWIND;

   4438  4 000147   000233 635000 4                  EAA     KEYBLD_UNW
         4 000150   000766 452400 0                  STP2    KEYBLD_UNWIND
         4 000151   000767 755000 0                  STA     KEYBLD_UNWIND+1

      160     4439    1       CALL OPEN_AREA ALTRET(ALT_EXIT);

   4439  4 000152   001076 701000 4                  TSX1    OPEN_AREA
         4 000153   000247 702000 4                  TSX2    ALT_EXIT

      161     4440    1       CALL GET_DCB ALTRET(ALT_KEYBLD);

   4440  4 000154   000250 701000 4                  TSX1    GET_DCB
         4 000155   000245 702000 4                  TSX2    ALT_KEYBLD

      162     4441    1       CALL GET_ATBLK_INFO ALTRET(ALT_KEYBLD);

   4441  4 000156   000306 701000 4                  TSX1    GET_ATBLK_INFO
         4 000157   000245 702000 4                  TSX2    ALT_KEYBLD

      163     4442         /* Check attribute page of area */
      164     4443    1       IF BREAK_FLAG > 0 THEN

   4443  4 000160   000000 235000 xsym               LDA     BREAK_FLAG
         4 000161   000233 605400 4                  TPNZ    KEYBLD_UNW
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:35   

      165     4444    1           GOTO KEYBLD_UNW;
      166     4445    1       IF TBL_BUILT = %NO# THEN /* If first area then */

   4445  4 000162   001152 234000 0                  SZN     TBL_BUILT
         4 000163   000173 604000 4                  TMI     s:4447

      167     4446    1           CALL SET_BUFS(,32); /* release all but 32 dyn bufs */

   4446  4 000164   000005 236000 5                  LDQ     5
         4 000165   000003 235000 5                  LDA     3
         4 000166   200010 757100                    STAQ    8,,AUTO
         4 000167   200010 630500                    EPPR0   8,,AUTO
         4 000170   000002 631400 5                  EPPR1   2
         4 000171   000000 701000 xent               TSX1    SET_BUFS
         4 000172   000000 011000                    NOP     0

      168     4447    1       CALL BLD_KEY_TBL ALTRET(ALT_KEYBLD);

   4447  4 000173   000355 701000 4                  TSX1    BLD_KEY_TBL
         4 000174   000245 702000 4                  TSX2    ALT_KEYBLD

      169     4448    1       CALL OPEN_KEYFID ALTRET(ALT_KEYBLD);

   4448  4 000175   001126 701000 4                  TSX1    OPEN_KEYFID
         4 000176   000245 702000 4                  TSX2    ALT_KEYBLD

      170     4449    1       SORT_TABLE.PRIMARY.INSIZ# = MAX_KEY_SIZE; /* MAX RECORD SIZE */

   4449  4 000177   001155 235000 0                  LDA     MAX_KEY_SIZE
         4 000200   001156 755000 0                  STA     SORT_TABLE

      171     4450    1       SORT_TABLE.PARTSIZ# = MAX_KEY_SIZE; /* MAX KEY SIZE */

   4450  4 000201   001172 755000 0                  STA     SORT_TABLE+12

      172     4451    1       TBL_BUILT = %YES#; /* Prevents redundant building of schema table */
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:36   

   4451  4 000202   400000 236003                    LDQ     -131072,DU
         4 000203   001152 756000 0                  STQ     TBL_BUILT

      173     4452    1       IF BREAK_FLAG > 0 THEN

   4452  4 000204   000000 235000 xsym               LDA     BREAK_FLAG
         4 000205   000233 605400 4                  TPNZ    KEYBLD_UNW

      174     4453    1           GOTO KEYBLD_UNW;
      175     4454    1       CALL X$SORT(SORT_TABLE) ALTRET(ALT_KEYBLD);

   4454  4 000206   000007 630400 5                  EPPR0   7
         4 000207   000006 631400 5                  EPPR1   6
         4 000210   000000 701000 xent               TSX1    X$SORT
         4 000211   000245 702000 4                  TSX2    ALT_KEYBLD

      176     4455         /*
      177     4456            CALL SORT -
      178     4457            INPUT RECORDS ARE GENERATED BY ZIU$BLDKEY,
      179     4458            OUTPUT FILE IS GENERATED BY ZIU$WRTKEY,
      180     4459            ACTUAL COMPARISON OF KYS FOR SORTING DONE BY ZIU$CMPKEY.
      181     4460         */
      182     4461    1       CALL CLOSE_FILES;

   4461  4 000212   001170 701000 4                  TSX1    CLOSE_FILES
         4 000213   000000 011000                    NOP     0

      183     4462    1       CALL ZIU$KFILE; /* Reset keyfile built flag */

   4462  4 000214   000001 631400 5                  EPPR1   1
         4 000215   000000 701000 xent               TSX1    ZIU$KFILE
         4 000216   000000 011000                    NOP     0

      184     4463    1   /**/ DCBSF = DCBNUM(M$LO);

   4463  4 000217   000000 236007 xsym               LDQ     M$LO,DL
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:37   
         4 000220   000000 620006                    EAX0    0,QL
         4 000221   000000 740000 xsym               STX0    DCBSF

      185     4464    1   /**/ BUFSF = VECTOR(EMESS_BUFF);

   4464  4 000222   000010 237000 5                  LDAQ    8
         4 000223   000000 755000 xsym               STA     BUFSF
         4 000224   000001 756000 xsym               STQ     BUFSF+1

      186     4465    1   /**/ BUFLNSF = 26;

   4465  4 000225   000032 235007                    LDA     26,DL
         4 000226   000000 755000 xsym               STA     BUFLNSF

      187     4466    1       CALL SYS_FUNC_WRIT;

   4466  4 000227   000001 631400 5                  EPPR1   1
         4 000230   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 000231   000000 011000                    NOP     0

      188     4467    1       RETURN;

   4467  4 000232   000000 702200 xent               TSX2  ! X66_ARET

   4465  4 000233                       KEYBLD_UNW   null
      189     4468    1   KEYBLD_UNW: ;
      190     4469    1       IF BREAK_FLAG > 0

   4469  4 000233   000000 235000 xsym               LDA     BREAK_FLAG
         4 000234   000245 604400 4                  TMOZ    ALT_KEYBLD

      191     4470    2       THEN DO;

      192     4471    2           CALL CLOSE_FILES;

   4471  4 000235   001170 701000 4                  TSX1    CLOSE_FILES
         4 000236   000000 011000                    NOP     0
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:38   

      193     4472    2           UNWIND TO RESTART;

   4472  4 000237   000100 100600                    MLR   ! fill='000'O
         4 000240   000000 000010 xsym               ADSC9   RESTART                  cn=0,n=8
         4 000241   200010 000010                    ADSC9   8,,AUTO                  cn=0,n=8
         4 000242   200010 237300                    LDAQ  ! 8,,AUTO
         4 000243   000000 700200 xent               TSX0  ! X66_AUNWIND
         4 000244   000000 000200                    ZERO    0,128

      194     4473    2           END;
      195     4474    1   ALT_KEYBLD:
      196     4475    1       CALL CLOSE_FILES;

   4475  4 000245   001170 701000 4     ALT_KEYBLD   TSX1    CLOSE_FILES
         4 000246   000000 011000                    NOP     0

      197     4476    1   ALT_EXIT:
      198     4477    1       ALTRETURN;

   4477  4 000247   000000 702200 xent  ALT_EXIT     TSX2  ! X66_AALT

      199     4478        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:39   
      200     4479    1   GET_DCB: PROC ALTRET;

   4479  4 000250   200004 741300       GET_DCB      STX1  ! 4,,AUTO

      201     4480        /*
      202     4481              Retrieve DCB for key file.
      203     4482        */
      204     4483    2       KEYFID.NM = DCBADDR(SRCEDCB) -> F$DCB.NAME#;

   4483  4 000251   000012 470400 5                  LDP0    10
         4 000252   000000 471500                    LDP1    0,,PR0
         4 000253   001153 220000 0                  LDX0    SRCEDCB
         4 000254   100000 473510                    LDP3    0,X0,PR1
         4 000255   000000 100500                    MLR     fill='000'O
         4 000256   300010 000037                    ADSC9   8,,PR3                   cn=0,n=31
         4 000257   000000 000037 xsym               ADSC9   KEYFID                   cn=0,n=31

      205     4484    2       I = KEYFID.NM.CNT;

   4484  4 000260   000000 236000 xsym               LDQ     KEYFID
         4 000261   000033 772000                    QRL     27
         4 000262   000000 756000 xsym               STQ     I

      206     4485    2       CALL INSERT(KEYFID.NM.TEXT,I,1,':');

   4485  4 000263   040006 100400                    MLR     fill='040'O
         4 000264   000013 000001 5                  ADSC9   11                       cn=0,n=1
         4 000265   000000 200001 xsym               ADSC9   KEYFID,Q                 cn=1,n=1

      207     4486    2       KEYFID.NM.CNT = I+1;

   4486  4 000266   000001 036007                    ADLQ    1,DL
         4 000267   000033 736000                    QLS     27
         4 000270   000000 552040 xsym               STBQ    KEYFID,'40'O

      208     4487    2   /**/ DCBNMSF = VECTOR(KEYFID.NM);

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:40   
   4487  4 000271   000014 237000 5                  LDAQ    12
         4 000272   000000 755000 xsym               STA     DCBNMSF
         4 000273   000001 756000 xsym               STQ     DCBNMSF+1

      209     4488    2       CALL SYS_FUNC_GETDCB ALTRET(ALT_DCB);

   4488  4 000274   000001 631400 5                  EPPR1   1
         4 000275   000000 701000 xent               TSX1    SYS_FUNC_GETDCB
         4 000276   000304 702000 4                  TSX2    ALT_DCB

      210     4489    2       KEYFID.DCB# = DCBSF;

   4489  4 000277   000000 220000 xsym               LDX0    DCBSF
         4 000300   000010 740000 xsym               STX0    KEYFID+8

      211     4490    2       DESTDCB = KEYFID.DCB#;

   4490  4 000301   001154 740000 0                  STX0    DESTDCB

      212     4491    2       RETURN;

   4491  4 000302   200004 221300                    LDX1  ! 4,,AUTO
         4 000303   000001 702211                    TSX2  ! 1,X1

      213     4492    2   ALT_DCB:
      214     4493    2       ALTRETURN;

   4493  4 000304   200004 221300       ALT_DCB      LDX1  ! 4,,AUTO
         4 000305   000000 702211                    TSX2  ! 0,X1

      215     4494    2   END GET_DCB;
      216     4495        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:41   
      217     4496        /*****************************************************************/
      218     4497        /*          C H E C K   A T T R I B U T E    P A G E             */
      219     4498        /*****************************************************************/
      220     4499    1   GET_ATBLK_INFO: PROC ALTRET;

   4499  4 000306   200004 741300       GET_ATBLK_I* STX1  ! 4,,AUTO

      221     4500        /*
      222     4501           The purpose of this procedure is to get attributes of the
      223     4502           area being printed. Information on the inventory pages and data
      224     4503           base keys may be inconsistent with the schema if the area is
      225     4504           defined as a template area since these things may change after
      226     4505           the schema was validated.
      227     4506        */
      228     4507    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;

   4507  4 000307   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000310   000000 740000 xsym               STX0    DCBSF

      229     4508    2   /**/ BUFSF = VECTOR(I_O_BUF(0));

   4508  4 000311   000016 235000 5                  LDA     14
         4 000312   000000 236000 xsym               LDQ     I_O_BUF$
         4 000313   000000 755000 xsym               STA     BUFSF
         4 000314   000001 756000 xsym               STQ     BUFSF+1

      230     4509    2   /**/ BUFLNSF = 4096;

   4509  4 000315   010000 235007                    LDA     4096,DL
         4 000316   000000 755000 xsym               STA     BUFLNSF

      231     4510    2   /**/ FULLSF = %YES#;

   4510  4 000317   400000 236003                    LDQ     -131072,DU
         4 000320   000000 756000 xsym               STQ     FULLSF

      232     4511    2   /**/ KEYSF = %YES#;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:42   

   4511  4 000321   000000 756000 xsym               STQ     KEYSF

      233     4512    2   /**/ ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;

   4512  4 000322   000027 236000 xsym               LDQ     ZI$DIR+23
         4 000323   000000 756000 xsym               STQ     ENCRP_SEEDSF

      234     4513    2   /**/ KEYVSF.IDSKEY = 0; /*   ATTRIBUTE BLOCK */

   4513  4 000324   000000 100400                    MLR     fill='000'O
         4 000325   000001 000004 5                  ADSC9   1                        cn=0,n=4
         4 000326   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

      235     4514    2       CALL SYS_FUNC_READ ALTRET(ALT_READ);

   4514  4 000327   000001 631400 5                  EPPR1   1
         4 000330   000000 701000 xent               TSX1    SYS_FUNC_READ
         4 000331   000353 702000 4                  TSX2    ALT_READ

      236     4515
      237     4516    2       ATBLK$ = ADDR(I_O_BUF(0));

   4516  4 000332   000000 236000 xsym               LDQ     I_O_BUF$
         4 000333   000000 756000 xsym               STQ     ATBLK$

      238     4517        /**/
      239     4518    2       IF UWA.AC_REC.SWS.TEMPLAT = %YES# THEN

   4518  4 000334   000233 236000 xsym               LDQ     UWA+155
         4 000335   040000 316003                    CANQ    16384,DU
         4 000336   000351 600000 4                  TZE     s:4525

      240     4519    3       DO;

      241     4520    3           UWA.AC_REC.CALC_HDRS = ATBLK_PG.TOT_CALC_HDRS;

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:43   
   4520  4 000337   000000 470400 xsym               LDP0    ATBLK$
         4 000340   000013 235100                    LDA     11,,PR0
         4 000341   000251 755000 xsym               STA     UWA+169

      242     4521    3           UWA.AC_REC.MAX_PAGE = ATBLK_PG.NUM_DBPG;

   4521  4 000342   000005 235100                    LDA     5,,PR0
         4 000343   000250 755000 xsym               STA     UWA+168

      243     4522    3           UWA.AC_REC.INV_UNIT = ATBLK_PG.MISC_INFO.IUSZ;

   4522  4 000344   000030 236100                    LDQ     24,,PR0
         4 000345   777777 376007                    ANQ     -1,DL
         4 000346   000261 756000 xsym               STQ     UWA+177

      244     4523    3           UWA.AC_REC.FIR_INV_PG = ATBLK_PG.FIR_INV_PGNO;

   4523  4 000347   000014 235100                    LDA     12,,PR0
         4 000350   000252 755000 xsym               STA     UWA+170

      245     4524    3           END;

      246     4525    2       RETURN;

   4525  4 000351   200004 221300                    LDX1  ! 4,,AUTO
         4 000352   000001 702211                    TSX2  ! 1,X1

      247     4526        /**/
      248     4527    2   ALT_READ: ALTRETURN;

   4527  4 000353   200004 221300       ALT_READ     LDX1  ! 4,,AUTO
         4 000354   000000 702211                    TSX2  ! 0,X1

      249     4528    2   END GET_ATBLK_INFO;
      250     4529        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:44   
      251     4530    1   BLD_KEY_TBL: PROC ALTRET;

   4530  4 000355   200004 741300       BLD_KEY_TBL  STX1  ! 4,,AUTO

      252     4531        /*
      253     4532              This routine builds a table to be uesd by ZIU$BLDKEY which
      254     4533              will construct associated keys using area as input data file.
      255     4534        */
      256     4535        /**/
      257     4536         /*Initialize all values when entering this routine*/
      258     4537        /**/
      259     4538    2       OUT_INDX=7;

   4538  4 000356   000007 235007                    LDA     7,DL
         4 000357   000000 755000 xsym               STA     OUT_INDX

      260     4539    2       I_O_SIZE=0; /*  # of pages read in or writen out*/

   4539  4 000360   000000 450000 xsym               STZ     I_O_SIZE

      261     4540    2       DATA$ = ADDR(I_O_BUF(0));

   4540  4 000361   000000 236000 xsym               LDQ     I_O_BUF$
         4 000362   000000 756000 xsym               STQ     DATA$

      262     4541    2       DATA_PG.OFF_LN.SEC = 0;
              4541                /* Must be less the REC_CNT to initialize for ZIU$BLDKEY */

   4541  4 000363   000000 220003                    LDX0    0,DU
         4 000364   000000 470400 xsym               LDP0    DATA$
         4 000365   000005 440100                    SXL0    5,,PR0

      263     4542         /*
      264     4543         Set to a higher value than I_O_SIZE to initiate the
      265     4544            start of this routine with a read.
      266     4545         */
      267     4546    2       REC_CNT=9999; /*Index to the location of the record on the data page*/
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:45   

   4546  4 000366   023417 235007                    LDA     9999,DL
         4 000367   001073 755000 0                  STA     REC_CNT

      268     4547    2       BPLDBK=0; /*Size of the local data base key foer this area in bytes*/

   4547  4 000370   001070 450000 0                  STZ     BPLDBK

      269     4548    2   /**/ DCBSF=DCBNUM(M$LO);

   4548  4 000371   000000 236007 xsym               LDQ     M$LO,DL
         4 000372   000000 622006                    EAX2    0,QL
         4 000373   000000 742000 xsym               STX2    DCBSF

      270     4549    2       SMESS_BUFF.AREA_NM = ZI$DIR.AREA_NM.NAME.TEXT;

   4549  4 000374   040000 100400                    MLR     fill='040'O
         4 000375   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000376   001102 400040 0                  ADSC9   SMESS_BUFF+5             cn=2,n=32

      271     4550    2   /**/ BUFSF = VECTOR(SMESS_BUFF);

   4550  4 000377   000020 237000 5                  LDAQ    16
         4 000400   000000 755000 xsym               STA     BUFSF
         4 000401   000001 756000 xsym               STQ     BUFSF+1

      272     4551    2   /**/ BUFLNSF = 54;

   4551  4 000402   000066 235007                    LDA     54,DL
         4 000403   000000 755000 xsym               STA     BUFLNSF

      273     4552    2       CALL SYS_FUNC_WRIT;

   4552  4 000404   000001 631400 5                  EPPR1   1
         4 000405   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 000406   000000 011000                    NOP     0

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:46   
      274     4553         /*Set of the values of the data page range and store them into varibles for the do
              4553         statment*
      275     4554            Rb - is the beginning page range
      276     4555            re - is the ending page range
      277     4556         */
      278     4557    2       RB=0; /*Beginning page #*/

   4557  4 000407   000000 450000 xsym               STZ     RB

      279     4558    2       IF UWA.AC_REC.FIR_INV_PG=0 THEN

   4558  4 000410   000252 235000 xsym               LDA     UWA+170
         4 000411   000415 601000 4                  TNZ     s:4561

      280     4559    2           RE=UWA.AC_REC.MAX_PAGE;

   4559  4 000412   000250 236000 xsym               LDQ     UWA+168
         4 000413   000000 756000 xsym               STQ     RE
         4 000414   000417 710000 4                  TRA     s:4562

      281     4560    2       ELSE
      282     4561    2           RE=UWA.AC_REC.FIR_INV_PG-1;

   4561  4 000415   000001 135007                    SBLA    1,DL
         4 000416   000000 755000 xsym               STA     RE

      283     4562    2       MAX_LDBK = UWA.AC_REC.KEY_ALLOC + UWA.AC_REC.KEYS_RESER;

   4562  4 000417   000243 236000 xsym               LDQ     UWA+163
         4 000420   000244 036000 xsym               ADLQ    UWA+164
         4 000421   001072 756000 0                  STQ     MAX_LDBK

      284     4563    2       IF MAX_LDBK <= BITBIN('777777'O) THEN

   4563  4 000422   000001 116003                    CMPQ    1,DU
         4 000423   000427 603000 4                  TRC     s:4566

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:47   
      285     4564    2           BPLDBK = 2;

   4564  4 000424   000002 235007                    LDA     2,DL
         4 000425   001070 755000 0                  STA     BPLDBK
         4 000426   000440 710000 4                  TRA     s:4569

      286     4565    2       ELSE
      287     4566    2           IF MAX_LDBK <= BITBIN('777777777'O) THEN

   4566  4 000427   000002 236000 3                  LDQ     TYP_NDSC+1
         4 000430   000011 772000                    QRL     9
         4 000431   001072 116000 0                  CMPQ    MAX_LDBK
         4 000432   000436 602000 4                  TNC     s:4568

      288     4567    2               BPLDBK=3;

   4567  4 000433   000003 235007                    LDA     3,DL
         4 000434   001070 755000 0                  STA     BPLDBK
         4 000435   000440 710000 4                  TRA     s:4569

      289     4568    2           ELSE BPLDBK=4;

   4568  4 000436   000004 235007                    LDA     4,DL
         4 000437   001070 755000 0                  STA     BPLDBK

      290     4569    2       DBK_BIT_SZ = BPLDBK * 9;

   4569  4 000440   001070 236000 0                  LDQ     BPLDBK
         4 000441   000011 402007                    MPY     9,DL
         4 000442   001071 756000 0                  STQ     DBK_BIT_SZ

      291     4570    2       IF TBL_BUILT = %YES# THEN

   4570  4 000443   001152 234000 0                  SZN     TBL_BUILT
         4 000444   000447 605000 4                  TPL     s:4586

      292     4571    2           RETURN; /* Initialized to be NO# */
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:48   

   4571  4 000445   200004 221300                    LDX1  ! 4,,AUTO
         4 000446   000001 702211                    TSX2  ! 1,X1

      293     4572        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:49   
      294     4573        /*
      295     4574           Build a table of schema data in two steps-
      296     4575           1. Pass through the rc record chain building a table indx of record
      297     4576              types and storing them with the DBK of  the SM record that will
      298     4577              supply us with a link to the EIS descriptors we will need to
      299     4578              build the keys for that record. Once this pass is made, we know
      300     4579              how many keys we are working with (but still don't know how many
      301     4580              EIS descriptors we need to store.
      302     4581           2. Set the current index to the bottom of the table and return to
      303     4582              the schema retrieveing the data base keys stored in the above step
      304     4583              and following the SC-CF-FR chains to store the neccessary EIS
      305     4584              descriptors.
      306     4585        */
      307     4586    2       CALL GET_DYN_PGE_TBL ALTRET(SPACE_OUT);

   4586  4 000447   001044 701000 4                  TSX1    GET_DYN_PGE_TBL
         4 000450   001064 702000 4                  TSX2    SPACE_OUT

      308     4587    2       SCHEMA_TBL$ = DYNMIC.PTR$;

   4587  4 000451   001143 236000 0                  LDQ     DYNMIC+1
         4 000452   001144 756000 0                  STQ     SCHEMA_TBL$

      309     4588    2       CALL DB_FUNC_FDR(CAN_RVA.OAREC,UWA.SF_REC.DBKOA) ALTRET(ALT_DBCS);

   4588  4 000453   000022 630400 5                  EPPR0   18
         4 000454   000002 631400 5                  EPPR1   2
         4 000455   000000 701000 xent               TSX1    DB_FUNC_FDR
         4 000456   001062 702000 4                  TSX2    ALT_DBCS

      310     4589    2       CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(ALT_DBCS);

   4589  4 000457   000024 630400 5                  EPPR0   20
         4 000460   000002 631400 5                  EPPR1   2
         4 000461   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000462   001062 702000 4                  TSX2    ALT_DBCS

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:50   
      311     4590    3       DO WHILE(UWA.DB_STATUS ~= '02100');

   4590  4 000463   040000 106400                    CMPC    fill='040'O
         4 000464   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000465   000003 000005 3                  ADSC9   TYP_NDSC+2               cn=0,n=5
         4 000466   000576 600000 4                  TZE     s:4617

      312     4591    3           CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(ALT_DBCS);

   4591  4 000467   000024 630400 5                  EPPR0   20
         4 000470   000006 631400 5                  EPPR1   6
         4 000471   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000472   001062 702000 4                  TSX2    ALT_DBCS

      313     4592    3           IF UWA.RC_REC.KEY_PRESENT = 1 THEN

   4592  4 000473   000301 235000 xsym               LDA     UWA+193
         4 000474   000001 115007                    CMPA    1,DL
         4 000475   000566 601000 4                  TNZ     s:4615

      314     4593    4           DO;

      315     4594    4              CALL DB_FUNC_FRS(CAN_RVA.SMREC.SEC,CAN_RVA.RCSOSM.SEC) ALTRET(ALT_DBCS);

   4594  4 000476   000026 630400 5                  EPPR0   22
         4 000477   000002 631400 5                  EPPR1   2
         4 000500   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000501   001062 702000 4                  TSX2    ALT_DBCS

      316     4595    5               DO WHILE(UWA.DB_STATUS ~= '02100');

   4595  4 000502   040000 106400                    CMPC    fill='040'O
         4 000503   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000504   000003 000005 3                  ADSC9   TYP_NDSC+2               cn=0,n=5
         4 000505   000566 600000 4                  TZE     s:4615

      317     4596    5                   CALL DB_FUNC_GET(CAN_RVA.SMREC.SEC) ALTRET(ALT_DBCS);
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:51   

   4596  4 000506   000026 630400 5                  EPPR0   22
         4 000507   000006 631400 5                  EPPR1   6
         4 000510   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000511   001062 702000 4                  TSX2    ALT_DBCS

      318     4597    5                   IF UWA.SM_REC.INSTYPE = 0 THEN

   4597  4 000512   000360 235000 xsym               LDA     UWA+240
         4 000513   000556 601000 4                  TNZ     s:4612

      319     4598    6                   DO;

      320     4599    6                       TEMP_DBK = UWA.DIR_REF; /* DBK of SM rec */

   4599  4 000514   000036 236000 xsym               LDQ     UWA+30
         4 000515   001145 756000 0                  STQ     TEMP_DBK

      321     4600    6                       CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC) ALTRET(ALT_DBCS);

   4600  4 000516   000017 630400 5                  EPPR0   15
         4 000517   000006 631400 5                  EPPR1   6
         4 000520   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 000521   001062 702000 4                  TSX2    ALT_DBCS

      322     4601    6                       CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(ALT_DBCS);

   4601  4 000522   000030 630400 5                  EPPR0   24
         4 000523   000006 631400 5                  EPPR1   6
         4 000524   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000525   001062 702000 4                  TSX2    ALT_DBCS

      323     4602    6                       IF UWA.SC_REC.SETTYPE = 3 THEN

   4602  4 000526   000310 235000 xsym               LDA     UWA+200
         4 000527   000003 115007                    CMPA    3,DL
         4 000530   000556 601000 4                  TNZ     s:4612
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:52   

      324     4603    7                       DO;

      325     4604    7                           CURR_INDX = CURR_INDX +1;

   4604  4 000531   001150 054000 0                  AOS     CURR_INDX

      326     4605    7                           IF CURR_INDX > TBL_SIZ THEN

   4605  4 000532   001150 236000 0                  LDQ     CURR_INDX
         4 000533   001147 116000 0                  CMPQ    TBL_SIZ
         4 000534   000537 604400 4                  TMOZ    s:4607

      327     4606    7                               CALL GET_DYN_PGE_TBL ALTRET(SPACE_OUT);

   4606  4 000535   001044 701000 4                  TSX1    GET_DYN_PGE_TBL
         4 000536   001064 702000 4                  TSX2    SPACE_OUT

      328     4607    7                           SCHEMA_TBL.WRD1.REC_TYP#(CURR_INDX) = UWA.RC_REC.RTYPE;

   4607  4 000537   001150 235000 0                  LDA     CURR_INDX
         4 000540   000001 735000                    ALS     1
         4 000541   000270 720000 xsym               LXL0    UWA+184
         4 000542   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 000543   000000 740105                    STX0    0,AL,PR0

      329     4608    7                           SCHEMA_TBL.WRD1.KEY_TYP#(CURR_INDX) = UWA.SC_REC.IXID;

   4608  4 000544   001150 235000 0                  LDA     CURR_INDX
         4 000545   000001 735000                    ALS     1
         4 000546   000323 720000 xsym               LXL0    UWA+211
         4 000547   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 000550   000000 440105                    SXL0    0,AL,PR0

      330     4609    7                           SCHEMA_TBL.DBK(CURR_INDX) = TEMP_DBK;

   4609  4 000551   001150 235000 0                  LDA     CURR_INDX
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:53   
         4 000552   000001 735000                    ALS     1
         4 000553   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 000554   001145 236000 0                  LDQ     TEMP_DBK
         4 000555   000001 756105                    STQ     1,AL,PR0

      331     4610    7                           END;

      332     4611    6                       END;

      333     4612    5                   CALL DB_FUNC_FRS(CAN_RVA.SMREC.SEC,CAN_RVA.RCSOSM.SEC) ALTRET(
              4612                            ALT_DBCS);

   4612  4 000556   000026 630400 5                  EPPR0   22
         4 000557   000002 631400 5                  EPPR1   2
         4 000560   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000561   001062 702000 4                  TSX2    ALT_DBCS

      334     4613    5                   END;

   4613  4 000562   040000 106400                    CMPC    fill='040'O
         4 000563   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000564   000003 000005 3                  ADSC9   TYP_NDSC+2               cn=0,n=5
         4 000565   000506 601000 4                  TNZ     s:4596

      335     4614    4               END;

      336     4615    3           CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC) ALTRET(ALT_DBCS);

   4615  4 000566   000024 630400 5                  EPPR0   20
         4 000567   000002 631400 5                  EPPR1   2
         4 000570   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000571   001062 702000 4                  TSX2    ALT_DBCS

      337     4616    3           END;

   4616  4 000572   040000 106400                    CMPC    fill='040'O
         4 000573   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:54   
         4 000574   000003 000005 3                  ADSC9   TYP_NDSC+2               cn=0,n=5
         4 000575   000467 601000 4                  TNZ     s:4591

      338     4617    2       LAST_MEMBER = CURR_INDX;

   4617  4 000576   001150 235000 0                  LDA     CURR_INDX
         4 000577   001146 755000 0                  STA     LAST_MEMBER

      339     4618        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:55   
      340     4619        /*
      341     4620           Build second half of table by starting at the last member in the
      342     4621           table adding eis descriptors. Pick up the search for them at
      343     4622           SCHEMA_TBL.DBK(0) and go through the whole table from 0 to LAST_MEMBER.
      344     4623        */
      345     4624    3       DO I=0 TO LAST_MEMBER;

   4624  4 000600   000000 450000 xsym               STZ     I
         4 000601   001035 710000 4                  TRA     s:4667+1

      346     4625    3           UWA.DIR_REF = SCHEMA_TBL.DBK(I);

   4625  4 000602   000000 235000 xsym               LDA     I
         4 000603   000001 735000                    ALS     1
         4 000604   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 000605   000001 235105                    LDA     1,AL,PR0
         4 000606   000036 755000 xsym               STA     UWA+30

      347     4626    3           CALL DB_FUNC_FDR(CAN_RVA.SMREC.SEC,UWA.DIR_REF) ALTRET(ALT_DBCS);

   4626  4 000607   000031 630400 5                  EPPR0   25
         4 000610   000002 631400 5                  EPPR1   2
         4 000611   000000 701000 xent               TSX1    DB_FUNC_FDR
         4 000612   001062 702000 4                  TSX2    ALT_DBCS

      348     4627    3           CALL DB_FUNC_GET(CAN_RVA.SMREC.SEC) ALTRET(ALT_DBCS);

   4627  4 000613   000026 630400 5                  EPPR0   22
         4 000614   000006 631400 5                  EPPR1   6
         4 000615   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000616   001062 702000 4                  TSX2    ALT_DBCS

      349     4628    3           IF UWA.SM_REC.SEQDUP = 2 THEN

   4628  4 000617   000363 235000 xsym               LDA     UWA+243
         4 000620   000002 115007                    CMPA    2,DL
         4 000621   000631 601000 4                  TNZ     s:4631
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:56   

      350     4629    3               SCHEMA_TBL.WRD2.NO_DUPS#(I) = %YES#;

   4629  4 000622   000000 236000 xsym               LDQ     I
         4 000623   000001 736000                    QLS     1
         4 000624   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 000625   000000 620006                    EAX0    0,QL
         4 000626   400000 236007                    LDQ     -131072,DL
         4 000627   000001 256110                    ORSQ    1,X0,PR0
         4 000630   000637 710000 4                  TRA     s:4632

      351     4630    3           ELSE
      352     4631    3               SCHEMA_TBL.WRD2.NO_DUPS#(I) = %NO#;

   4631  4 000631   000000 236000 xsym               LDQ     I
         4 000632   000001 736000                    QLS     1
         4 000633   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 000634   000000 620006                    EAX0    0,QL
         4 000635   000033 236000 5                  LDQ     27
         4 000636   000001 356110                    ANSQ    1,X0,PR0

      353     4632    3           CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC) ALTRET(ALT_DBCS);

   4632  4 000637   000017 630400 5                  EPPR0   15
         4 000640   000006 631400 5                  EPPR1   6
         4 000641   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 000642   001062 702000 4                  TSX2    ALT_DBCS

      354     4633    3           CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(ALT_DBCS);

   4633  4 000643   000030 630400 5                  EPPR0   24
         4 000644   000006 631400 5                  EPPR1   6
         4 000645   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000646   001062 702000 4                  TSX2    ALT_DBCS

      355     4634    3           SCHEMA_TBL.WRD2.SIZ#(I) = UWA.SC_REC.KEY_LENGHT;

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:57   
   4634  4 000647   000000 235000 xsym               LDA     I
         4 000650   000001 735000                    ALS     1
         4 000651   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 000652   000324 236000 xsym               LDQ     UWA+212
         4 000653   000011 736000                    QLS     9
         4 000654   000001 676105                    ERQ     1,AL,PR0
         4 000655   377000 376007                    ANQ     130560,DL
         4 000656   000001 656105                    ERSQ    1,AL,PR0

      356     4635    3           IF SCHEMA_TBL.WRD2.SIZ#(I) > MAX_KEY_SIZE THEN

   4635  4 000657   000000 235000 xsym               LDA     I
         4 000660   000001 735000                    ALS     1
         4 000661   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 000662   000001 236105                    LDQ     1,AL,PR0
         4 000663   000011 772000                    QRL     9
         4 000664   000377 376007                    ANQ     255,DL
         4 000665   001155 116000 0                  CMPQ    MAX_KEY_SIZE
         4 000666   000670 604400 4                  TMOZ    s:4637

      357     4636    3               MAX_KEY_SIZE = SCHEMA_TBL.WRD2.SIZ#(I);

   4636  4 000667   001155 756000 0                  STQ     MAX_KEY_SIZE

      358     4637    3           SCHEMA_TBL.WRD2.INDX#(I) = CURR_INDX +1;

   4637  4 000670   001150 720000 0                  LXL0    CURR_INDX
         4 000671   000001 621010                    EAX1    1,X0
         4 000672   000001 741105                    STX1    1,AL,PR0

      359     4638    3           SCHEMA_TBL.WRD2.CNT#(I) = 0;

   4638  4 000673   000000 235000 xsym               LDA     I
         4 000674   000001 735000                    ALS     1
         4 000675   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 000676   000034 236000 5                  LDQ     28
         4 000677   000001 356105                    ANSQ    1,AL,PR0
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:58   

      360     4639    3           CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.SMSSCF.SEC) ALTRET(ALT_DBCS);

   4639  4 000700   000035 630400 5                  EPPR0   29
         4 000701   000002 631400 5                  EPPR1   2
         4 000702   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000703   001062 702000 4                  TSX2    ALT_DBCS

      361     4640    4           DO WHILE(UWA.DB_STATUS ~= '02100');

   4640  4 000704   040000 106400                    CMPC    fill='040'O
         4 000705   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000706   000003 000005 3                  ADSC9   TYP_NDSC+2               cn=0,n=5
         4 000707   001034 600000 4                  TZE     s:4667

      362     4641    4               CALL DB_FUNC_GET(CAN_RVA.CFREC.SEC) ALTRET(ALT_DBCS);

   4641  4 000710   000035 630400 5                  EPPR0   29
         4 000711   000006 631400 5                  EPPR1   6
         4 000712   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000713   001062 702000 4                  TSX2    ALT_DBCS

      363     4642    4               IF UWA.CF_REC.SYN = 1 THEN

   4642  4 000714   000400 235000 xsym               LDA     UWA+256
         4 000715   000001 115007                    CMPA    1,DL
         4 000716   001024 601000 4                  TNZ     s:4665

      364     4643    5               DO;

      365     4644    5                   CURR_INDX = CURR_INDX+1;

   4644  4 000717   001150 054000 0                  AOS     CURR_INDX

      366     4645    5                   IF CURR_INDX > TBL_SIZ THEN

   4645  4 000720   001150 236000 0                  LDQ     CURR_INDX
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:59   
         4 000721   001147 116000 0                  CMPQ    TBL_SIZ
         4 000722   000725 604400 4                  TMOZ    s:4647

      367     4646    5                       CALL GET_DYN_PGE_TBL ALTRET(SPACE_OUT);

   4646  4 000723   001044 701000 4                  TSX1    GET_DYN_PGE_TBL
         4 000724   001064 702000 4                  TSX2    SPACE_OUT

      368     4647    5                   CALL DB_FUNC_FOR(CAN_RVA.FRCFS.SEC) ALTRET(ALT_DBCS);

   4647  4 000725   000037 630400 5                  EPPR0   31
         4 000726   000006 631400 5                  EPPR1   6
         4 000727   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 000730   001062 702000 4                  TSX2    ALT_DBCS

      369     4648    5                   CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC) ALTRET(ALT_DBCS);

   4648  4 000731   000040 630400 5                  EPPR0   32
         4 000732   000006 631400 5                  EPPR1   6
         4 000733   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000734   001062 702000 4                  TSX2    ALT_DBCS

      370     4649    5                   SCHEMA_TBL.WRD2.CNT#(I) = SCHEMA_TBL.WRD2.CNT#(I) +1;

   4649  4 000735   000000 235000 xsym               LDA     I
         4 000736   000001 735000                    ALS     1
         4 000737   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 000740   000001 236105                    LDQ     1,AL,PR0
         4 000741   000777 376007                    ANQ     511,DL
         4 000742   000001 036007                    ADLQ    1,DL
         4 000743   000001 676105                    ERQ     1,AL,PR0
         4 000744   000777 376007                    ANQ     511,DL
         4 000745   000001 656105                    ERSQ    1,AL,PR0

      371     4650    5                   EIS_TEMP_RDEF = UWA.FR_REC.BUFLOC;

   4650  4 000746   000351 235000 xsym               LDA     UWA+233
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:60   
         4 000747   001151 755000 0                  STA     EIS_TEMP

      372     4651    5                   IF UWA.FR_REC.BEIST = 0 THEN

   4651  4 000750   000350 236000 xsym               LDQ     UWA+232
         4 000751   000757 601000 4                  TNZ     s:4654

      373     4652    5                       EIS_TEMP.BEIST = TYP_ADSC9;

   4652  4 000752   000000 236000 3                  LDQ     TYP_ADSC9
         4 000753   001151 676000 0                  ERQ     EIS_TEMP
         4 000754   400000 376003                    ANQ     -131072,DU
         4 000755   001151 656000 0                  ERSQ    EIS_TEMP
         4 000756   000763 710000 4                  TRA     s:4655

      374     4653    5                   ELSE
      375     4654    5                       EIS_TEMP.BEIST = TYP_NDSC;

   4654  4 000757   000001 236000 3                  LDQ     TYP_NDSC
         4 000760   001151 676000 0                  ERQ     EIS_TEMP
         4 000761   400000 376003                    ANQ     -131072,DU
         4 000762   001151 656000 0                  ERSQ    EIS_TEMP

      376     4655    5                   SCHEMA_TBL.SYN_FR_LOC(CURR_INDX) = EIS_TEMP;

   4655  4 000763   001150 236000 0                  LDQ     CURR_INDX
         4 000764   000001 736000                    QLS     1
         4 000765   000000 620006                    EAX0    0,QL
         4 000766   001151 236000 0                  LDQ     EIS_TEMP
         4 000767   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 000770   000000 756110                    STQ     0,X0,PR0

      377     4656    5                  CALL DB_FUNC_FDR(CAN_RVA.FRREC.SEC,UWA.FR_REC.FRFRH) ALTRET(ALT_DBCS
              4656                            );

   4656  4 000771   000041 630400 5                  EPPR0   33
         4 000772   000002 631400 5                  EPPR1   2
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:61   
         4 000773   000000 701000 xent               TSX1    DB_FUNC_FDR
         4 000774   001062 702000 4                  TSX2    ALT_DBCS

      378     4657    5                   CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC) ALTRET(ALT_DBCS);

   4657  4 000775   000040 630400 5                  EPPR0   32
         4 000776   000006 631400 5                  EPPR1   6
         4 000777   000000 701000 xent               TSX1    DB_FUNC_GET
         4 001000   001062 702000 4                  TSX2    ALT_DBCS

      379     4658    5                   EIS_TEMP_RDEF = UWA.FR_REC.BUFLOC;

   4658  4 001001   000351 235000 xsym               LDA     UWA+233
         4 001002   001151 755000 0                  STA     EIS_TEMP

      380     4659    5                   IF UWA.FR_REC.BEIST = 0 THEN

   4659  4 001003   000350 236000 xsym               LDQ     UWA+232
         4 001004   001012 601000 4                  TNZ     s:4662

      381     4660    5                       EIS_TEMP.BEIST = TYP_ADSC9;

   4660  4 001005   000000 236000 3                  LDQ     TYP_ADSC9
         4 001006   001151 676000 0                  ERQ     EIS_TEMP
         4 001007   400000 376003                    ANQ     -131072,DU
         4 001010   001151 656000 0                  ERSQ    EIS_TEMP
         4 001011   001016 710000 4                  TRA     s:4663

      382     4661    5                   ELSE
      383     4662    5                       EIS_TEMP.BEIST = TYP_NDSC;

   4662  4 001012   000001 236000 3                  LDQ     TYP_NDSC
         4 001013   001151 676000 0                  ERQ     EIS_TEMP
         4 001014   400000 376003                    ANQ     -131072,DU
         4 001015   001151 656000 0                  ERSQ    EIS_TEMP

      384     4663    5                   SCHEMA_TBL.FR_LOC(CURR_INDX) = EIS_TEMP;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:62   

   4663  4 001016   001150 236000 0                  LDQ     CURR_INDX
         4 001017   000001 736000                    QLS     1
         4 001020   000000 620006                    EAX0    0,QL
         4 001021   001151 236000 0                  LDQ     EIS_TEMP
         4 001022   001144 470400 0                  LDP0    SCHEMA_TBL$
         4 001023   000001 756110                    STQ     1,X0,PR0

      385     4664    5                   END;

      386     4665    4              CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.SMSSCF.SEC) ALTRET(ALT_DBCS);

   4665  4 001024   000035 630400 5                  EPPR0   29
         4 001025   000002 631400 5                  EPPR1   2
         4 001026   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 001027   001062 702000 4                  TSX2    ALT_DBCS

      387     4666    4               END;

   4666  4 001030   040000 106400                    CMPC    fill='040'O
         4 001031   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 001032   000003 000005 3                  ADSC9   TYP_NDSC+2               cn=0,n=5
         4 001033   000710 601000 4                  TNZ     s:4641

      388     4667    3           END;

   4667  4 001034   000000 054000 xsym               AOS     I
         4 001035   000000 236000 xsym               LDQ     I
         4 001036   001146 116000 0                  CMPQ    LAST_MEMBER
         4 001037   000602 604400 4                  TMOZ    s:4625

      389     4668    2       MAX_KEY_SIZE = MAX_KEY_SIZE + 7; /* 7=DBK+KEY_TYP+1 byte len */

   4668  4 001040   000007 236007                    LDQ     7,DL
         4 001041   001155 056000 0                  ASQ     MAX_KEY_SIZE

      390     4669    2       RETURN;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:63   

   4669  4 001042   200004 221300                    LDX1  ! 4,,AUTO
         4 001043   000001 702211                    TSX2  ! 1,X1

      391     4670        /*
      392     4671                 GET  DYNAMIC PAGE OF  MEMORY  FOR  SCHEMA  TABLE
      393     4672        */
      394     4673    2   GET_DYN_PGE_TBL: PROC ALTRET;

   4673  4 001044   200006 741300       GET_DYN_PGE* STX1  ! 6,,AUTO

      395     4674    3       CALL M$GDP(FPT_GDP) ALTRET(NO_SPACE);

   4674  4 001045   001134 630400 0                  EPPR0   FPT_GDP
         4 001046   430003 713400                    CLIMB   alt,+12291
         4 001047   400400 401760                    pmme    nvectors=2
         4 001050   001060 702000 4                  TSX2    NO_SPACE

      396     4675    3       TBL_SIZ = TBL_SIZ +(DYNMIC.W1.VSIZE# / 8);

   4675  4 001051   001142 236000 0                  LDQ     DYNMIC
         4 001052   000020 772000                    QRL     16
         4 001053   000003 772000                    QRL     3
         4 001054   001147 036000 0                  ADLQ    TBL_SIZ
         4 001055   001147 756000 0                  STQ     TBL_SIZ

      397     4676    3       RETURN;

   4676  4 001056   200006 221300                    LDX1  ! 6,,AUTO
         4 001057   000001 702211                    TSX2  ! 1,X1

      398     4677    3   NO_SPACE:
      399     4678    3       ALTRETURN;

   4678  4 001060   200006 221300       NO_SPACE     LDX1  ! 6,,AUTO
         4 001061   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:64   
      400     4679    3   END GET_DYN_PGE_TBL;
      401     4680    2   ALT_DBCS:
      402     4681    2       ALTRETURN;

   4681  4 001062   200004 221300       ALT_DBCS     LDX1  ! 4,,AUTO
         4 001063   000000 702211                    TSX2  ! 0,X1

      403     4682    2   SPACE_OUT:
      404     4683         /*E* ERROR: ZIU-04020-C
      405     4684           MESSAGE: Insufficient memory allocation to retrieve necessary schema data. */
      406     4685    2   /**/ ERRCODESF.ERR# = 4020;

   4685  4 001064   000000 236000 xsym  SPACE_OUT    LDQ     ERRCODESF
         4 001065   000000 376000 5                  ANQ     0
         4 001066   076640 276007                    ORQ     32160,DL
         4 001067   000000 756000 xsym               STQ     ERRCODESF

      407     4686    2   /**/ MSGCODE = ERRCODE_RDEF;

   4686  4 001070   000000 756000 xsym               STQ     MSGCODE

      408     4687    2       CALL SYS_FUNC_ERRMSG;

   4687  4 001071   000001 631400 5                  EPPR1   1
         4 001072   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 001073   000000 011000                    NOP     0

      409     4688    2       ALTRETURN;

   4688  4 001074   200004 221300                    LDX1  ! 4,,AUTO
         4 001075   000000 702211                    TSX2  ! 0,X1

      410     4689    2   END BLD_KEY_TBL;
      411     4690        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:65   
      412     4691    1   OPEN_AREA: PROC ALTRET;

   4691  4 001076   200004 741300       OPEN_AREA    STX1  ! 4,,AUTO

      413     4692        /*
      414     4693              Open IDS area (in) - used as a source of data for building keys.
      415     4694              Open KEYFID (create) - Result of keybld operation.
      416     4695        */
      417     4696    2       SRCEDCB = ZI$DIR.AREA_NM.DCB#;

   4696  4 001077   000244 220000 xsym               LDX0    ZI$DIR+164
         4 001100   001153 740000 0                  STX0    SRCEDCB

      418     4697    2   /**/ DCBSF = SRCEDCB;

   4697  4 001101   000000 740000 xsym               STX0    DCBSF

      419     4698    2   /**/ ORGSF = %IDS#;

   4698  4 001102   000007 235007                    LDA     7,DL
         4 001103   000000 755000 xsym               STA     ORGSF

      420     4699    2   /**/ FULLSF= %YES#;

   4699  4 001104   400000 236003                    LDQ     -131072,DU
         4 001105   000000 756000 xsym               STQ     FULLSF

      421     4700    2   /**/ FUNSF = %IN#;

   4700  4 001106   000002 235007                    LDA     2,DL
         4 001107   000000 755000 xsym               STA     FUNSF

      422     4701    2   /**/ SHARESF=%IN#;

   4701  4 001110   000000 756000 xsym               STQ     SHARESF

      423     4702    2   /**/ ACSSF = %DIRECT#;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:66   

   4702  4 001111   000000 755000 xsym               STA     ACSSF

      424     4703    2   /**/ ASNSF = %FILE#;

   4703  4 001112   000001 235007                    LDA     1,DL
         4 001113   000000 755000 xsym               STA     ASNSF

      425     4704    2   /**/ FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;

   4704  4 001114   040000 100400                    MLR     fill='040'O
         4 001115   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 001116   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      426     4705    2       CALL SYS_FUNC_OPEN ALTRET(ALT_OPEN);

   4705  4 001117   000001 631400 5                  EPPR1   1
         4 001120   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 001121   001124 702000 4                  TSX2    ALT_OPEN

      427     4706    2       RETURN;

   4706  4 001122   200004 221300                    LDX1  ! 4,,AUTO
         4 001123   000001 702211                    TSX2  ! 1,X1

      428     4707    2   ALT_OPEN: ALTRETURN;

   4707  4 001124   200004 221300       ALT_OPEN     LDX1  ! 4,,AUTO
         4 001125   000000 702211                    TSX2  ! 0,X1

      429     4708    2   END OPEN_AREA;
      430     4709        /**/
      431     4710    1   OPEN_KEYFID: PROC ALTRET;

   4710  4 001126   200004 741300       OPEN_KEYFID  STX1  ! 4,,AUTO

      432     4711        /**/
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:67   
      433     4712    2   /**/ DCBSF = DESTDCB;

   4712  4 001127   001154 220000 0                  LDX0    DESTDCB
         4 001130   000000 740000 xsym               STX0    DCBSF

      434     4713    2   /**/ ORGSF = %KEYED#;

   4713  4 001131   000002 235007                    LDA     2,DL
         4 001132   000000 755000 xsym               STA     ORGSF

      435     4714    2   /**/ ACSSF = %DIRECT#;

   4714  4 001133   000000 755000 xsym               STA     ACSSF

      436     4715    2   /**/ FUNSF = %CREATE#;

   4715  4 001134   000003 236007                    LDQ     3,DL
         4 001135   000000 756000 xsym               STQ     FUNSF

      437     4716    2   /**/ XTENSIZESF = (RE /15); /* APPROX .07 THE AREA SIXE */

   4716  4 001136   000000 235000 xsym               LDA     RE
         4 001137   000043 773000                    LRL     35
         4 001140   000017 507007                    DVF     15,DL
         4 001141   000000 755000 xsym               STA     XTENSIZESF

      438     4717    2   /**/ SHARESF = %NONE#;

   4717  4 001142   600000 236003                    LDQ     -65536,DU
         4 001143   000000 756000 xsym               STQ     SHARESF

      439     4718    2   /**/ ASNSF = %FILE#;

   4718  4 001144   000001 235007                    LDA     1,DL
         4 001145   000000 755000 xsym               STA     ASNSF

      440     4719    2   /**/ FIDSF = KEYFID.NM.TEXT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:68   

   4719  4 001146   040000 100400                    MLR     fill='040'O
         4 001147   000000 200036 xsym               ADSC9   KEYFID                   cn=1,n=30
         4 001150   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      441     4720    2   /**/ KEY_SHADWSF = SRCEDCB;

   4720  4 001151   001153 235000 0                  LDA     SRCEDCB
         4 001152   000022 771000                    ARL     18
         4 001153   000000 755000 xsym               STA     KEY_SHADWSF

      442     4721    2   /**/ CARRY_ATTRIBUTESF = '0'B;

   4721  4 001154   000000 450000 xsym               STZ     CARRY_ATTRIBUTESF

      443     4722    2   /**/ EXISTSF = %NEWFILE#;

   4722  4 001155   000000 756000 xsym               STQ     EXISTSF

      444     4723    2       CALL SYS_FUNC_OPEN ALTRET(ALT_OPEN);

   4723  4 001156   000001 631400 5                  EPPR1   1
         4 001157   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 001160   001166 702000 4                  TSX2    ALT_OPEN

      445     4724
      446     4725         /*   Call routine  to check and set sort dcb */
      447     4726    2       CALL ZIU$SRTDCB;

   4726  4 001161   000001 631400 5                  EPPR1   1
         4 001162   000000 701000 xent               TSX1    ZIU$SRTDCB
         4 001163   000000 011000                    NOP     0

      448     4727
      449     4728    2       RETURN;

   4728  4 001164   200004 221300                    LDX1  ! 4,,AUTO
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:69   
         4 001165   000001 702211                    TSX2  ! 1,X1

      450     4729    2   ALT_OPEN:
      451     4730    2       ALTRETURN;

   4730  4 001166   200004 221300       ALT_OPEN     LDX1  ! 4,,AUTO
         4 001167   000000 702211                    TSX2  ! 0,X1

      452     4731    2   END OPEN_KEYFID;
      453     4732        %EJECT;
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:70   
      454     4733    1   CLOSE_FILES: PROC;

   4733  4 001170   200004 741300       CLOSE_FILES  STX1  ! 4,,AUTO

      455     4734        /*
      456     4735              This routine closes the area and key files.
      457     4736        */
      458     4737    2   /**/ DCBSF = SRCEDCB;

   4737  4 001171   001153 220000 0                  LDX0    SRCEDCB
         4 001172   000000 740000 xsym               STX0    DCBSF

      459     4738    2       IF DCBADDR(DCBSF)->F$DCB.FCD# = %YES# THEN

   4738  4 001173   000012 470400 5                  LDP0    10
         4 001174   000000 471500                    LDP1    0,,PR0
         4 001175   100000 473510                    LDP3    0,X0,PR1
         4 001176   300031 236100                    LDQ     25,,PR3
         4 001177   020000 316007                    CANQ    8192,DL
         4 001200   001204 600000 4                  TZE     s:4740

      460     4739    2           CALL SYS_FUNC_CLOS;

   4739  4 001201   000001 631400 5                  EPPR1   1
         4 001202   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 001203   000000 011000                    NOP     0

      461     4740    2       IF SRCEDCB = DESTDCB THEN

   4740  4 001204   001153 220000 0                  LDX0    SRCEDCB
         4 001205   001154 100000 0                  CMPX0   DESTDCB
         4 001206   001211 601000 4                  TNZ     s:4742

      462     4741    2           RETURN;

   4741  4 001207   200004 221300                    LDX1  ! 4,,AUTO
         4 001210   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:71   

      463     4742    2   /**/ DCBSF = DESTDCB;

   4742  4 001211   001154 221000 0                  LDX1    DESTDCB
         4 001212   000000 741000 xsym               STX1    DCBSF

      464     4743    2       IF DCBADDR(DCBSF) -> F$DCB.FCD# = %YES# THEN

   4743  4 001213   000012 470400 5                  LDP0    10
         4 001214   000000 471500                    LDP1    0,,PR0
         4 001215   100000 473511                    LDP3    0,X1,PR1
         4 001216   300031 236100                    LDQ     25,,PR3
         4 001217   020000 316007                    CANQ    8192,DL
         4 001220   001227 600000 4                  TZE     s:4748

      465     4744    3       DO;

      466     4745    3           CALL SYS_FUNC_CLOS;

   4745  4 001221   000001 631400 5                  EPPR1   1
         4 001222   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 001223   000000 011000                    NOP     0

      467     4746    3           CALL SYS_FUNC_RELDCB;

   4746  4 001224   000001 631400 5                  EPPR1   1
         4 001225   000000 701000 xent               TSX1    SYS_FUNC_RELDCB
         4 001226   000000 011000                    NOP     0

      468     4747    3           END;

      469     4748    2       RETURN;

   4748  4 001227   200004 221300                    LDX1  ! 4,,AUTO
         4 001230   000001 702211                    TSX2  ! 1,X1

NO_DUPS_TBL
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:72   
 Sect OctLoc
   0     001   000000 ******   000000 ******   000000 ******   000000 ******    ................
   0     761*  000000 ******   000000 ******   000000 ******   000000 ******    ................

NO_DUPS_INDX
 Sect OctLoc
   0     765   000000 000000                                                    ....

OUT_KEY
 Sect OctLoc
   0     770   ****** ******   ****** ******   ****** ******   ****** ******    ................

SMESS_BUFF
 Sect OctLoc
   0    1075   103040 040040   102165 151154   144151 156147   040153 145171    C   Building key
   0    1101   163040 146157   162040 040040   040040 040040   040040 040040    s for
   0    1105   040040 040040   040040 040040   040040 040040   040040 040040
   0    1111   040040 040040   040040 ******                                          ..

EMESS_BUFF
 Sect OctLoc
   0    1113   103056 056056   113145 171040   142165 151154   144151 156147    C...Key building
   0    1117   040143 157155   160154 145164   145144 ******                     completed..

TEMP_KEYFID
 Sect OctLoc
   0    1122   ****** ******   ****** ******   ****** ******   ****** ******    ................

FPT_GDP
 Sect OctLoc
   0    1134   000001 777640   001140 006000   000001 777640   001142 006000    .....`.......b..
   0    1140   000000 000001   ****** ******                                    ........

DYNMIC
 Sect OctLoc
   0    1142   000000 177640   000000 006014                                    ........

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:73   
LAST_MEMBER
 Sect OctLoc
   0    1146   000000 000000                                                    ....

TBL_SIZ
 Sect OctLoc
   0    1147   777777 777777                                                    ....

CURR_INDX
 Sect OctLoc
   0    1150   777777 777777                                                    ....

TBL_BUILT
 Sect OctLoc
   0    1152   0***** ******                                                    ....

MAX_KEY_SIZE
 Sect OctLoc
   0    1155   000000 000000                                                    ....

SORT_TABLE
 Sect OctLoc
   0    1156   000000 000000   000000 000000   000000 000000   040000 104040    ............ .D
   0    1162   000000 006014   000000 006014   000000 006014   000000 006014    ................
   0    1166   000000 006014   000000 006014   000000 000000   000001 000000    ................
   0    1172   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0    1216*  000000 000000   000000 000000   000000 000000   000000 000000    ................

TYP_ADSC9
 Sect OctLoc
   3     000   0***** ******                                                    ....

TYP_NDSC
 Sect OctLoc
   3     001   4***** ******                                                    ....

(unnamed)
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:74   
 Sect OctLoc
   3     002   777777 777000   060062 061060   060040 040040                    ....02100

(unnamed)
 Sect OctLoc
   5     000   777777 400007   000000 000000   000002 000000   000000 006014    ................
   5     004   000000 000040   000004 006000   000001 000000   001156 006000    ... .........n..
   5     010   000006 777640   001113 006000   000000 006003   072040 040040    .....K......:
   5     014   000007 577640   000000 006000   001777 777640   000034 406000    ................
   5     020   000015 777640   001075 006000   000062 006000   000063 006000    .....=...2...3..
   5     024   000064 406000   000022 406000   000071 406000   000031 406000    .4.......9......
   5     030   000065 406000   000071 406000   000036 006000   777777 377777    .5...9..........
   5     034   777777 777000   000073 406000   000041 406000   000014 406000    .....;...!......
   5     040   000067 406000   000067 406000   000352 006000                    .7...7......
      470     4749    2   END CLOSE_FILES;
      471     4750    1   END ZIU$KEYBLD;
      472     4751        %EOD;

PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:75   
--  Include file information  --

   ZL_MACRO_C.:TOOLE05  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$KEYBLD.

   Procedure ZIU$KEYBLD requires 665 words for executable code.
   Procedure ZIU$KEYBLD requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:76   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:77   
          MINI XREF LISTING

ACSSF
       245**DCL      4702<<ASSIGN   4714<<ASSIGN
ALT_DBCS IN PROCEDURE BLD_KEY_TBL
      4681**LABEL    4588--CALLALT  4589--CALLALT  4591--CALLALT  4594--CALLALT  4596--CALLALT  4600--CALLALT
      4601--CALLALT  4612--CALLALT  4615--CALLALT  4626--CALLALT  4627--CALLALT  4632--CALLALT  4633--CALLALT
      4639--CALLALT  4641--CALLALT  4647--CALLALT  4648--CALLALT  4656--CALLALT  4657--CALLALT  4665--CALLALT
ALT_DCB IN PROCEDURE GET_DCB
      4493**LABEL    4488--CALLALT
ALT_EXIT
      4477**LABEL    4439--CALLALT
ALT_KEYBLD
      4475**LABEL    4440--CALLALT  4441--CALLALT  4447--CALLALT  4448--CALLALT  4454--CALLALT
ALT_OPEN IN PROCEDURE OPEN_AREA
      4707**LABEL    4705--CALLALT
ALT_OPEN IN PROCEDURE OPEN_KEYFID
      4730**LABEL    4723--CALLALT
ALT_READ IN PROCEDURE GET_ATBLK_INFO
      4527**LABEL    4514--CALLALT
ASNSF
       248**DCL      4703<<ASSIGN   4718<<ASSIGN
ATBLK$
       475**DCL       476--IMP-PTR  4516<<ASSIGN   4520>>ASSIGN   4521>>ASSIGN   4522>>ASSIGN   4523>>ASSIGN
ATBLK_PG.AREA_NM
       501**DCL       502--REDEF
ATBLK_PG.FIR_INV_PGNO
       498**DCL      4523>>ASSIGN
ATBLK_PG.MISC_INFO.IUSZ
       508**DCL      4522>>ASSIGN
ATBLK_PG.NUM_DBPG
       483**DCL      4521>>ASSIGN
ATBLK_PG.STATUS
       510**DCL       518--REDEF
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:78   
ATBLK_PG.TOT_CALC_HDRS
       497**DCL      4520>>ASSIGN
BLD_KEY_TBL
      4530**PROC     4447--CALL
BPLDBK
        33**DCL      4547<<ASSIGN   4564<<ASSIGN   4567<<ASSIGN   4568<<ASSIGN   4569>>ASSIGN
BREAK_FLAG
       365**DCL      4443>>IF       4452>>IF       4469>>IF
BUFLNSF
       256**DCL      4465<<ASSIGN   4509<<ASSIGN   4551<<ASSIGN
BUFSF
       257**DCL      4464<<ASSIGN   4508<<ASSIGN   4550<<ASSIGN
CAN_RVA.CFREC.SEC
      2440**DCL      4639<>CALL     4641<>CALL     4665<>CALL
CAN_RVA.FRCFS.SEC
      2299**DCL      4647<>CALL
CAN_RVA.FRREC.SEC
      2428**DCL      4648<>CALL     4656<>CALL     4657<>CALL
CAN_RVA.OARC.SEC
      2317**DCL      4589<>CALL     4615<>CALL
CAN_RVA.OAREC
      2411**DCL      4588<>CALL
CAN_RVA.RCREC.SEC
      2419**DCL      4589<>CALL     4591<>CALL     4615<>CALL
CAN_RVA.RCSOSM.SEC
      2338**DCL      4594<>CALL     4612<>CALL
CAN_RVA.SCREC.SEC
      2422**DCL      4601<>CALL     4633<>CALL
CAN_RVA.SCSOSM.SEC
      2347**DCL      4600<>CALL     4632<>CALL
CAN_RVA.SMREC.SEC
      2434**DCL      4594<>CALL     4596<>CALL     4612<>CALL     4626<>CALL     4627<>CALL
CAN_RVA.SMSSCF.SEC
      2362**DCL      4639<>CALL     4665<>CALL
CARRY_ATTRIBUTESF
       292**DCL      4721<<ASSIGN
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:79   
CLOSE_FILES
      4733**PROC     4461--CALL     4471--CALL     4475--CALL
COUNTSF
       307**DCL       308--REDEF
CURR_INDX
      3606**DCL      4604<<ASSIGN   4604>>ASSIGN   4605>>IF       4607>>ASSIGN   4608>>ASSIGN   4609>>ASSIGN
      4617>>ASSIGN   4637>>ASSIGN   4644<<ASSIGN   4644>>ASSIGN   4645>>IF       4655>>ASSIGN   4663>>ASSIGN
DATA$
       531**DCL       532--IMP-PTR  4540<<ASSIGN   4541>>ASSIGN
DATA_PG.ACT_DATA
       544**DCL       545--REDEF     546--REDEF     547--REDEF
DATA_PG.OFF_LN.SEC
       543**DCL      4541<<ASSIGN
DBK_BIT_SZ
        34**DCL      4569<<ASSIGN
DB_FUNC_FDR
        11**DCL-ENT  4588--CALL     4626--CALL     4656--CALL
DB_FUNC_FOR
        13**DCL-ENT  4600--CALL     4632--CALL     4647--CALL
DB_FUNC_FRS
        12**DCL-ENT  4589--CALL     4594--CALL     4612--CALL     4615--CALL     4639--CALL     4665--CALL
DB_FUNC_GET
        14**DCL-ENT  4591--CALL     4596--CALL     4601--CALL     4627--CALL     4633--CALL     4641--CALL
      4648--CALL     4657--CALL
DCBNMSF
       288**DCL      4487<<ASSIGN
DCBSF
       236**DCL      4463<<ASSIGN   4489>>ASSIGN   4507<<ASSIGN   4548<<ASSIGN   4697<<ASSIGN   4712<<ASSIGN
      4737<<ASSIGN   4738--IF       4742<<ASSIGN   4743--IF
DESTDCB
      3615**DCL      4490<<ASSIGN   4712>>ASSIGN   4740>>IF       4742>>ASSIGN
DYNMIC
      3283**DCL      3269--DCLINIT
DYNMIC.PTR$
      3285**DCL      4587>>ASSIGN
DYNMIC.W1.VSIZE#
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:80   
      3283**DCL      4675>>ASSIGN
DYNMIC.W2
      3284**DCL      3285--REDEF
EIS_TEMP
      3607**DCL      3610--REDEF    4655>>ASSIGN   4663>>ASSIGN
EIS_TEMP.BEIST
      3608**DCL      4652<<ASSIGN   4654<<ASSIGN   4660<<ASSIGN   4662<<ASSIGN
EIS_TEMP_RDEF
      3610**DCL      4650<<ASSIGN   4658<<ASSIGN
EMESS_BUFF
        42**DCL      4464--ASSIGN
ENCRP_SEEDSF
       265**DCL       266--REDEF    4512<<ASSIGN
ERRCODESF
       267**DCL       272--REDEF
ERRCODESF.ERR#
       270**DCL      4395<<ASSIGN   4404<<ASSIGN   4410<<ASSIGN   4418<<ASSIGN   4425<<ASSIGN   4430<<ASSIGN
      4433<<ASSIGN   4685<<ASSIGN
ERRCODE_RDEF
       272**DCL      4396>>ASSIGN   4405>>ASSIGN   4411>>ASSIGN   4419>>ASSIGN   4426>>ASSIGN   4431>>ASSIGN
      4434>>ASSIGN   4686>>ASSIGN
ERRFLGSF
       296**DCL      4399<<ASSIGN   4408<<ASSIGN   4412<<ASSIGN
ERR_INSERT.CNT
       281**DCL      4397<<ASSIGN   4406<<ASSIGN   4420<<ASSIGN   4427<<ASSIGN
ERR_INSERT.TEXT
       282**DCL      4398<<ASSIGN   4407<<ASSIGN   4421<<ASSIGN   4428<<ASSIGN
EXISTSF
       286**DCL      4722<<ASSIGN
F$DCB.ACTPOS
      3233**DCL      3233--REDEF
F$DCB.ARS#
      3207**DCL      3207--REDEF
F$DCB.ATTR
      3226**DCL      3227--REDEF
F$DCB.BORROW
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:81   
      3241**DCL      3241--REDEF    3241--REDEF    3241--REDEF
F$DCB.DCBNAME.L
      3255**DCL      3255--IMP-SIZ
F$DCB.EOMCHAR#
      3211**DCL      3211--REDEF
F$DCB.FCD#
      3220**DCL      4738>>IF       4743>>IF
F$DCB.FLDID
      3236**DCL      3236--REDEF
F$DCB.FORM$
      3230**DCL      3230--REDEF
F$DCB.FSECT
      3246**DCL      3246--REDEF
F$DCB.FSN#
      3223**DCL      3223--REDEF    3223--REDEF    3224--REDEF
F$DCB.HEADER$
      3229**DCL      3229--REDEF
F$DCB.IXTNSIZE#
      3227**DCL      3227--REDEF
F$DCB.LASTSTA$
      3216**DCL      3216--REDEF
F$DCB.LVL
      3242**DCL      3242--REDEF
F$DCB.NAME#
      3217**DCL      4483>>ASSIGN
F$DCB.NAME#.C
      3217**DCL      3217--REDEF
F$DCB.NOEOF
      3239**DCL      3239--REDEF
F$DCB.NRECS#
      3228**DCL      3228--REDEF
F$DCB.NRECX
      3247**DCL      3247--REDEF
F$DCB.OHDR
      3239**DCL      3239--REDEF
F$DCB.ORG#
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:82   
      3222**DCL      3222--REDEF
F$DCB.PRECNO
      3245**DCL      3245--REDEF
F$DCB.RCSZ
      3251**DCL      3251--REDEF
F$DCB.RES#
      3218**DCL      3218--REDEF
F$DCB.SETX
      3230**DCL      3230--REDEF
F$DCB.TAB$
      3230**DCL      3230--REDEF
F$DCB.TDA
      3244**DCL      3245--REDEF
F$DCB.WSN#
      3218**DCL      3218--REDEF
FIDSF
       284**DCL      4704<<ASSIGN   4719<<ASSIGN
FIDSF_RD
       283**DCL       284--REDEF
FPT_GDP
      3269**DCL      4674<>CALL
FPT_GDP.V
      3269**DCL      3269--DCLINIT
FULLSF
       254**DCL      4510<<ASSIGN   4699<<ASSIGN
FUNSF
       247**DCL      4700<<ASSIGN   4715<<ASSIGN
GET_ATBLK_INFO
      4499**PROC     4441--CALL
GET_DCB
      4479**PROC     4440--CALL
GET_DYN_PGE_TBL IN PROCEDURE BLD_KEY_TBL
      4673**PROC     4586--CALL     4606--CALL     4646--CALL
HELPCODE
       301**DCL       306--REDEF
I
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:83   
       339**DCL      4484<<ASSIGN   4485>>CALLBLT  4486>>ASSIGN   4624<<DOINDEX  4625>>ASSIGN   4629>>ASSIGN
      4631>>ASSIGN   4634>>ASSIGN   4635>>IF       4636>>ASSIGN   4637>>ASSIGN   4638>>ASSIGN   4649>>ASSIGN
      4649>>ASSIGN
ICHKSUM
       366**DCL       367--REDEF
ITEM$
        24**DCL        25--IMP-PTR
ITEM_LN
        37**DCL        25--IMP-SIZ
I_O_BUF
       345**DCL      4508--ASSIGN   4516--ASSIGN   4540--ASSIGN
I_O_BUF$
       344**DCL       345--IMP-PTR  4508>>ASSIGN   4516>>ASSIGN   4540>>ASSIGN
I_O_SIZE
       347**DCL      4539<<ASSIGN
KEYBLD_UNW
      4465**LABEL    4438--REMEMBR  4444--GOTO     4453--GOTO
KEYBLD_UNWIND
        28**DCL      4438<<REMEMBR
KEYFID.DCB#
       362**DCL      4489<<ASSIGN   4490>>ASSIGN
KEYFID.NM
       359**DCL      4483<<ASSIGN   4487--ASSIGN
KEYFID.NM.CNT
       360**DCL      4427>>ASSIGN   4484>>ASSIGN   4486<<ASSIGN
KEYFID.NM.TEXT
       361**DCL      4428>>ASSIGN   4485<<CALLBLT  4719>>ASSIGN
KEYSF
       238**DCL      4511<<ASSIGN
KEYVSF
       239**DCL       244--REDEF
KEYVSF.IDSKEY
       242**DCL      4513<<ASSIGN
KEYVSF.WD_ONE
       241**DCL       242--REDEF
KEY_SHADWSF
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:84   
       316**DCL      4720<<ASSIGN
LAST_MEMBER
      3604**DCL      4617<<ASSIGN   4624>>DOINDEX
M$GDP
      2624**DCL-ENT  4674--CALL
M$LO
       354**DCL      4463>>ASSIGN   4548>>ASSIGN
MAX_KEY_SIZE
      3616**DCL      4449>>ASSIGN   4450>>ASSIGN   4635>>IF       4636<<ASSIGN   4668<<ASSIGN   4668>>ASSIGN
MAX_LDBK
        35**DCL      4562<<ASSIGN   4563>>IF       4566>>IF
MSGCODE
       273**DCL       274--REDEF    4396<<ASSIGN   4405<<ASSIGN   4411<<ASSIGN   4419<<ASSIGN   4426<<ASSIGN
      4431<<ASSIGN   4434<<ASSIGN   4686<<ASSIGN
NO_SPACE IN PROCEDURE GET_DYN_PGE_TBL
      4678**LABEL    4674--CALLALT
OPEN_AREA
      4691**PROC     4439--CALL
OPEN_KEYFID
      4710**PROC     4448--CALL
ORGSF
       237**DCL      4698<<ASSIGN   4713<<ASSIGN
OUT_INDX
       346**DCL      4538<<ASSIGN
RB
       326**DCL      4557<<ASSIGN
RE
       327**DCL      4559<<ASSIGN   4561<<ASSIGN   4716>>ASSIGN
REC$
       325**DCL       348--IMP-PTR
REC_CNT
        36**DCL      4546<<ASSIGN
REC_DATA_LN
       353**DCL       352--IMP-SIZ
RESTART
       364**DCL      4472>>UNWIND
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:85   
SCHEMA_TBL.DBK
      3601**DCL      4609<<ASSIGN   4625>>ASSIGN
SCHEMA_TBL.FR_LOC
      3602**DCL      4663<<ASSIGN
SCHEMA_TBL.SYN_FR_LOC
      3594**DCL      4655<<ASSIGN
SCHEMA_TBL.WRD1
      3591**DCL      3594--REDEF
SCHEMA_TBL.WRD1.KEY_TYP#
      3593**DCL      4608<<ASSIGN
SCHEMA_TBL.WRD1.REC_TYP#
      3592**DCL      4607<<ASSIGN
SCHEMA_TBL.WRD2
      3596**DCL      3601--REDEF    3602--REDEF
SCHEMA_TBL.WRD2.CNT#
      3600**DCL      4638<<ASSIGN   4649<<ASSIGN   4649>>ASSIGN
SCHEMA_TBL.WRD2.INDX#
      3597**DCL      4637<<ASSIGN
SCHEMA_TBL.WRD2.NO_DUPS#
      3598**DCL      4629<<ASSIGN   4631<<ASSIGN
SCHEMA_TBL.WRD2.SIZ#
      3599**DCL      4634<<ASSIGN   4635>>IF       4636>>ASSIGN
SCHEMA_TBL$
      3589**DCL      3590--IMP-PTR  4587<<ASSIGN   4607>>ASSIGN   4608>>ASSIGN   4609>>ASSIGN   4625>>ASSIGN
      4629>>ASSIGN   4631>>ASSIGN   4634>>ASSIGN   4635>>IF       4636>>ASSIGN   4637>>ASSIGN   4638>>ASSIGN
      4649>>ASSIGN   4649>>ASSIGN   4655>>ASSIGN   4663>>ASSIGN
SET_BUFS
        23**DCL-ENT  4446--CALL
SHARESF
       287**DCL      4701<<ASSIGN   4717<<ASSIGN
SMESS_BUFF
        38**DCL      4550--ASSIGN
SMESS_BUFF.AREA_NM
        41**DCL      4549<<ASSIGN
SORT_TABLE
      4287**DCL      4454<>CALL
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:86   
SORT_TABLE.PARTSIZ#
      4343**DCL      4450<<ASSIGN
SORT_TABLE.PRIMARY.INSIZ#
      4295**DCL      4449<<ASSIGN
SPACE_OUT IN PROCEDURE BLD_KEY_TBL
      4685**LABEL    4586--CALLALT  4606--CALLALT  4646--CALLALT
SRCEDCB
      3614**DCL      4483--ASSIGN   4696<<ASSIGN   4697>>ASSIGN   4720>>ASSIGN   4737>>ASSIGN   4740>>IF
SYS_FUNC_CLOS
        18**DCL-ENT  4739--CALL     4745--CALL
SYS_FUNC_ERRMSG
        21**DCL-ENT  4400--CALL     4409--CALL     4413--CALL     4422--CALL     4429--CALL     4432--CALL
      4435--CALL     4687--CALL
SYS_FUNC_GETDCB
        16**DCL-ENT  4488--CALL
SYS_FUNC_OPEN
        15**DCL-ENT  4705--CALL     4723--CALL
SYS_FUNC_READ
        19**DCL-ENT  4514--CALL
SYS_FUNC_RELDCB
        17**DCL-ENT  4746--CALL
SYS_FUNC_WRIT
        20**DCL-ENT  4466--CALL     4552--CALL
TBL_BUILT
      3613**DCL      4445>>IF       4451<<ASSIGN   4570>>IF
TBL_SIZ
      3605**DCL      4605>>IF       4645>>IF       4675<<ASSIGN   4675>>ASSIGN
TEMP_DBK
      3603**DCL      4599<<ASSIGN   4609>>ASSIGN
TYP_ADSC9
      3611**DCL      4652>>ASSIGN   4660>>ASSIGN
TYP_NDSC
      3612**DCL      4654>>ASSIGN   4662>>ASSIGN
UWA.AC_REC.CALC_HDRS
      1343**DCL      4520<<ASSIGN
UWA.AC_REC.CALC_NEXT
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:87   
      1355**DCL      1356--REDEF
UWA.AC_REC.CALC_PRIOR
      1364**DCL      1365--REDEF
UWA.AC_REC.DEFAULTS
      1313**DCL      1314--REDEF
UWA.AC_REC.FILE_CODE
      1318**DCL      1319--REDEF
UWA.AC_REC.FIR_INV_PG
      1344**DCL      4523<<ASSIGN   4558>>IF       4561>>ASSIGN
UWA.AC_REC.FLAG1.ERROR_TYPE
      1315**DCL      1316--REDEF
UWA.AC_REC.INV_UNIT
      1351**DCL      4522<<ASSIGN
UWA.AC_REC.KEYS_RESER
      1338**DCL      4562>>ASSIGN
UWA.AC_REC.KEY_ALLOC
      1337**DCL      4562>>ASSIGN
UWA.AC_REC.MAX_PAGE
      1342**DCL      4521<<ASSIGN   4559>>ASSIGN
UWA.AC_REC.PERMTYPE
      1329**DCL      4403>>IF
UWA.AC_REC.PG_TYPE
      1330**DCL      1331--REDEF
UWA.AC_REC.P_TYP.P_MD
      1333**DCL      4416>>IF       4417>>IF
UWA.AC_REC.SEC_KEY
      1328**DCL      4394>>IF
UWA.AC_REC.SWS.TEMPLAT
      1323**DCL      4518>>IF
UWA.AD_REC.ADDATE
      1295**DCL      1296--REDEF
UWA.CF_REC.SYN
      1450**DCL      4642>>IF
UWA.DB_STATUS
      1243**DCL      4590>>DOWHILE  4595>>DOWHILE  4640>>DOWHILE
UWA.DIR_REF
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:88   
      1252**DCL      4599>>ASSIGN   4625<<ASSIGN   4626<>CALL
UWA.FR_REC.BEIST
      1424**DCL      4651>>IF       4659>>IF
UWA.FR_REC.BUFLOC
      1425**DCL      4650>>ASSIGN   4658>>ASSIGN
UWA.FR_REC.FRFRH
      1426**DCL      4656<>CALL
UWA.RC_REC.KEY_PRESENT
      1383**DCL      4592>>IF
UWA.RC_REC.RTYPE
      1374**DCL      4607>>ASSIGN
UWA.SC_REC.IXID
      1402**DCL      4608>>ASSIGN
UWA.SC_REC.KEY_LENGHT
      1403**DCL      4634>>ASSIGN
UWA.SC_REC.SETTYPE
      1391**DCL      4602>>IF
UWA.SF_REC.DBKOA
      1261**DCL      4588<>CALL
UWA.SM_REC.INSTYPE
      1432**DCL      4597>>IF
UWA.SM_REC.SEQDUP
      1435**DCL      4628>>IF
X$SORT
      3620**DCL-ENT  4454--CALL
XTENSIZESF
       250**DCL      4716<<ASSIGN
ZI$DIR.ALTKEY
      3516**DCL      3517--REDEF    3518--REDEF
ZI$DIR.AREAFID
      3482**DCL      3483--REDEF
ZI$DIR.AREA_NM.DCB#
      3549**DCL      4507>>ASSIGN   4696>>ASSIGN
ZI$DIR.AREA_NM.NAME.CNT
      3547**DCL      4397>>ASSIGN   4406>>ASSIGN   4420>>ASSIGN
ZI$DIR.AREA_NM.NAME.TEXT
PL6.E3A0      #001=ZIU$KEYBLD File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:16 Page:89   
      3548**DCL      4398>>ASSIGN   4407>>ASSIGN   4421>>ASSIGN   4549>>ASSIGN   4704>>ASSIGN
ZI$DIR.DATE
      3521**DCL      3525--REDEF
ZI$DIR.DEST_SEED
      3477**DCL      3478--REDEF    3479--REDEF
ZI$DIR.ENCP_SEED
      3474**DCL      3475--REDEF    3476--REDEF    4512>>ASSIGN
ZI$DIR.REPRT_ZERO
      3508**DCL      3509--REDEF
ZI$DIR.SCHFID
      3480**DCL      3481--REDEF
ZI$DIR.TIME
      3526**DCL      3531--REDEF
ZIU$BLDKEY
      3617**DCL-ENT  4369--DCLINIT
ZIU$CMPKEY
      3619**DCL-ENT  4373--DCLINIT
ZIU$KFILE
        22**DCL-ENT  4462--CALL
ZIU$SRTDCB
      3621**DCL-ENT  4726--CALL
ZIU$WRTKEY
      3618**DCL-ENT  4371--DCLINIT

PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:90   
      473        1        /*M* ZIU$BLDKEY  INPUT ROUTINE FOR X$SORT FOR ZIU$KEYBLD UTILITY   */
      474        2        /*T***********************************************************/
      475        3        /*T*                                                         */
      476        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      477        5        /*T*                                                         */
      478        6        /*T***********************************************************/
      479        7        /*******************************************************************
      480        8               ROUTINE BUILDS THE IDS AREA KEYS FOR X$SORT IN ZIU$KEYBLD
      481        9        ********************************************************************/
      482       10        ZIU$BLDKEY: PROC(KEYIN,KEYSZ) NOAUTO ALTRET;
      483       11    1   DCL KEYSZ UBIN WORD;
      484       12    1   DCL 1 KEYIN CHAR(KEYSZ);
      485       13    1   DCL KEYSZ_DI SBIN STATIC;
      486       14    1   DCL BUFER_DI CHAR(255) STATIC;
      487       15    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET; /*D*  DBCS FIND DIRECT   */
      488       16    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET; /*D* DBCS FIND RELATIVE TO SET   */
      489       17    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET; /*D* DBCS FIND OWNER   */
      490       18    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
      491       19    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      492       20    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      493       21    1   DCL SHIFT_NUMERIC_FDEC ENTRY(3);
      494       22    1   DCL SHIFT_NUMERIC_LSIGN ENTRY(3);
      495       23    1   DCL SHIFT_NUMERIC_TSIGN ENTRY(3);
      496       24    1   DCL SHIFT_NUMERIC_NSIGN ENTRY(3);
      497       25    1   DCL CONTINUE_THIS_REC BIT(1) STATIC INIT('0'B);
      498       26    1   DCL ITEM_TEMP_UNL BIT(ITEM_LN) BASED(ITEM$) UNAL;
      499       27    1   DCL ITEM_TEMP BIT(ITEM_LN) BASED(ITEM$) ALIGNED;
                27            /*D* ITEM_TEMP = TEMP PLACE FOR MOVEMENT OF DATA*/
      500       28    1   DCL ITEM$ PTR STATIC ALIGNED; /*D* ITEM$ = PTR TO A SPECIFIC FIELD WITHIN A RECORD*/
      501       29    1   DCL TEMP_BIT$ PTR STATIC; /*D* TEMP_BIT$ = PTR TO LOCATION WHERE FIELD IS SUPPOSED T
                29        O GO IN THE KEY BEING BUILT*/
      502       30    1   DCL 1 OUT_KEY ALIGNED SYMREF,
                30            /*D* OUT_KEY = THE KEY THATS BEING BUILT TO WRITE OUT TO KEY FILE*/
      503       31    1         2 LEN UBIN(9) UNAL,
      504       32    1         2 IXID UBIN(18) UNAL,
      505       33    1         2 VALUE CHAR(252) UNAL;
      506       34    1   DCL BUFFIN REDEF OUT_KEY CHAR(255) ALIGNED;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:91   
      507       35    1   DCL BPLDBK UBIN(36) ALIGNED SYMREF;
                35            /*D* BPLDBK= KEY SIZE IN BYTES FOR A SPECIFIC AREA*/
      508       36    1   DCL MAX_LDBK UBIN(36) ALIGNED SYMREF;
                36            /*D* MAX_LDBK= MAX LOCAL DBK FOR A SPECIFIC AREA*/
      509       37    1   DCL REC_CNT SBIN(36) ALIGNED SYMREF;
                37            /*D* REC_CNT =RECORD COUNT FOR THE PAGE THAT WE ON */
      510       38    1   DCL ITEM_LN UBIN(36) ALIGNED SYMREF; /*D* ITEM_LN = SIZE IN BITS OF ITEM_TEMP*/
      511       39    1   DCL EIS$ PTR STATIC ALIGNED;
                39            /*D* EIS$ = PTR TO THE EIS DESCRIPTOR IN A RECORD IN THE SCHEMA FILE*/
      512       40    1   DCL 1 ADSC BASED(EIS$) ALIGNED,
                40            /*D* ADSC = ASCII (BIT9) EIS DESCRIPTOR DESCRIPTION*/
      513       41    1         2 * UBIN(3) UNAL,
      514       42    1         2 EISADDR UBIN(15) UNAL,
      515       43    1         2 BYT_OFF UBIN(3) UNAL,
      516       44    1         2 TA UBIN(2) UNAL,
      517       45    1         2 * UBIN(1) UNAL,
      518       46    1         2 SIZE UBIN(12) UNAL;
      519       47    1   DCL 1 NDSC BASED(EIS$) ALIGNED, /*D* NDSC = NUMERIC EIS DESCRIPTOR DESCRIPTION*/
      520       48    1         2 * UBIN(3) UNAL,
      521       49    1         2 EISADDR UBIN(15) UNAL,
      522       50    1         2 BYT_OFF UBIN(3) UNAL,
      523       51    1         2 TN UBIN(1) UNAL,
      524       52    1         2 SIGN UBIN(2) UNAL,
      525       53    1         2 SCAL UBIN(6) UNAL,
      526       54    1         2 SIZE UBIN(6) UNAL;
      527       55    1   DCL 1 EIS_TEMP SYMREF ALIGNED,
      528       56    1         2 BEIST BIT(1) UNAL,
      529       57    1         2 * BIT(35) UNAL;
      530       58         /*E* ERROR: ZIU-04001-C
      531       59           MESSAGE: No secondary keys are associated with area "%U1".
      532       60           */
      533       61         /*E* ERROR: ZIU-04002-C
      534       62           MESSAGE: Secondary keys are not permitted in temporary area "%U1".
      535       63           */
      536       64         /*   ERROR: ZIU-04003-C
      537       65         MESSAGE: Incorrect page type for secondary key file %U1.
      538       66         */
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:92   
      539       67         /*   ERROR: ZIU-04004-C
      540       68         MESSAGE: Error during rebuilding process...%U1 not modified.
      541       69         */
      542       70         /*E* ERROR: ZIU-04005-C
      543       71           MESSAGE: REBUILD KEYS skipped for indexed area %U1.
      544       72           */
      545       73    1   DCL INDX UBIN(36) ALIGNED SYMREF; /* Indx = 'INDEX' varible*/
      546       74    1   DCL REC_DBK SBIN(36) STATIC UNAL;
                74            /*D* REC_DBK = DBK OF THE CURRENT RECORD WHERE WE AREA ON A PAGE*/
      547       75    1   DCL CDBK REDEF REC_DBK CHAR(4); /*D* CDBK = REDEF OF REC_DBK ONLY CHARACTER*/
      548       76    1   DCL BIT_DISP UBIN(36) STATIC ALIGNED;
                76            /*D* BIT_DISP = BIT  DISPLACEMENT FOR WITHIN A RECORD*/
      549       77    1   DCL BIT_SIZE UBIN(36) STATIC ALIGNED;
                77            /*D* BIT_SIZE = BIT SIZE OF AN ITEM WITHIN A RECORD*/
      550       78    1   DCL SCHEMA_TBL$ PTR SYMREF ALIGNED; /* pointer to table */
      551       79    1   DCL 1 SCHEMA_TBL (0:0) BASED(SCHEMA_TBL$) ALIGNED,
      552       80    1         2 WRD1,
      553       81    1           3 REC_TYP# UBIN HALF UNAL,
      554       82    1           3 KEY_TYP# UBIN HALF UNAL,
      555       83    1         2 SYN_FR_LOC REDEF WRD1 BIT(36) UNAL,
      556       84
      557       85    1         2 WRD2,
      558       86    1           3 INDX# UBIN HALF UNAL,
      559       87    1           3 NO_DUPS# BIT(1) UNAL,
      560       88    1           3 SIZ# UBIN(8) UNAL,
      561       89    1           3 CNT# UBIN BYTE UNAL,
      562       90    1         2 DBK REDEF WRD2 UBIN WORD UNAL,
      563       91    1         2 FR_LOC REDEF WRD2 BIT(36) UNAL;
      564       92    1   DCL LAST_MEMBER SBIN WORD SYMREF; /* Last rec type in table */
      565       93    1   DCL CURR_INDX SBIN WORD SYMREF;
      566       94    1   DCL KEYBLD_UNWIND REMEMBER SYMREF;
      567       95        /**/
      568       96        %INCLUDE ZI_GLOBAL_DBUTIL;
      569      274         %SYS_FUNC;
      570      366         %MISC_DCLS;
      571      419        %INCLUDE ZI$PG_STRUCTS;
      572      522         %DATA_PG;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:93   
      573      541        %INCLUDE ZI_UWA_C;
      574     1231        %ZI$UWAB;
      575     1571        %INCLUDE ZI_RVA_C;
      576     2252        %CAN_RVA_REF;
      577     2571        %INCLUDE CP_6;
      578     2652        %INCLUDE CP_6_SUBS;
      579     3192        %F$DCB;
      580     3249        %INCLUDE ZI$DIR;
      581     3406        %DIR;
      582     3550    1   DCL SRCEDCB UBIN HALF SYMREF;
      583     3551    1   DCL ITEM_SIGN UBIN;
      584     3552        %EJECT;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:94   
      585     3553         /* *        * *       * *    PROCEDURE     * *      * *     * */
      586     3554    1       IF CONTINUE_THIS_REC = %NO# THEN
      587     3555    1           CALL FIND_NXT_AVIL_REC ALTRET(END_OF_FILE);
      588     3556    1       ELSE
      589     3557    1           CURR_INDX = CURR_INDX + 1;
      590     3558    1       CALL BUILD_KEY;
      591     3559    1       IF SCHEMA_TBL.WRD1.REC_TYP#(CURR_INDX +1) = REC_FRMT.TYPE THEN
      592     3560    1           CONTINUE_THIS_REC = %YES#;
      593     3561    1       ELSE
      594     3562    1           CONTINUE_THIS_REC = %NO#;
      595     3563    1       KEYSZ = OUT_KEY.LEN+1;
      596     3564    1       KEYIN = BUFFIN;
      597     3565    1       RETURN;
      598     3566    1   END_OF_FILE:
      599     3567    1       ALTRETURN;
      600     3568        %EJECT;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:95   
      601     3569    1   FIND_NXT_AVIL_REC: PROC ALTRET;
      602     3570         /*
      603     3571            This routine searches for the next record that a key is to
      604     3572            be built on. Sets the record pointer and returns. Altreturns at
      605     3573            end of file.
      606     3574         */
      607     3575    3       DO WHILE('1'B);
      608     3576    3           IF BREAK_FLAG > 0 THEN
      609     3577    3               UNWIND TO KEYBLD_UNWIND;
      610     3578    3           REC_CNT = REC_CNT+1; /* initialized at 9999 */
      611     3579    3           I=0;
      612     3580    3           IF REC_CNT > DATA_PG.OFF_LN.SEC THEN
      613     3581    4           DO;
      614     3582    4               RB = RB+1;
      615     3583    4               IF RB > RE THEN
      616     3584    4                   ALTRETURN; /*  END OF DATA(OR FILE) */
      617     3585    4               IF OUT_INDX >= I_O_SIZE THEN
      618     3586    5               DO;
      619     3587    5                   I_O_SIZE = RE - RB;
      620     3588    5                   IF I_O_SIZE >= 32 THEN
      621     3589    5                       I_O_SIZE = 31;
      622     3590    5                   I_O_KEY = RB;
      623     3591    5    /**/           DCBSF = ZI$DIR.AREA_NM.DCB#;
      624     3592    5    /**/           BUFSF = VECTOR(I_O_BUF);
      625     3593    5    /**/           BUFLNSF = 4096 * (I_O_SIZE +1);
      626     3594    5    /**/           FULLSF = %YES#;
      627     3595    5    /**/           ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;
      628     3596    5    /**/           KEYSF = %YES#;
      629     3597    5    /**/           KEYVSF.IDSKEY = I_O_KEY;
      630     3598    5                   CALL SYS_FUNC_READ ALTRET(EOF);
      631     3599    5                   OUT_INDX = -1;
      632     3600    5                   END;
      633     3601    4               REC_CNT = -1;
      634     3602    4               OUT_INDX = OUT_INDX +1;
      635     3603    4               DATA$ = ADDR(I_O_BUF(OUT_INDX));
      636     3604    4               END;
      637     3605    3           ELSE
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:96   
      638     3606         /*
      639     3607            Ensure this record has not been deleted & does have a key.
      640     3608         */
      641     3609    3               IF DATA_PG.ACT_DATA_18(2035-REC_CNT) > 0 THEN
      642     3610    4               DO;
      643     3611    4                   REC$ = PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(2035-REC_CNT));
      644     3612    5                   DO WHILE((REC_FRMT.TYPE ~= SCHEMA_TBL.WRD1.REC_TYP#(I))
      645     3613    5                      AND (I <= LAST_MEMBER));
      646     3614    5                       I = I+1;
      647     3615    5                       END;
      648     3616    4                   IF I <= LAST_MEMBER THEN
      649     3617    5                   DO;
      650     3618    5                       CURR_INDX = I;
      651     3619    5                       RETURN;
      652     3620    5                       END;
      653     3621    4                   END;
      654     3622    3           END;
      655     3623    2   EOF:
      656     3624    2       ALTRETURN;
      657     3625    2   END FIND_NXT_AVIL_REC;
      658     3626        %EJECT;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:97   
      659     3627    1   BUILD_KEY: PROC ;
      660     3628         /*
      661     3629            This routine does the actual building of the key.
      662     3630         */
      663     3631    2       OUT_KEY.LEN=SCHEMA_TBL.WRD2.SIZ#(CURR_INDX)+2+BPLDBK;
      664     3632    2       OUT_KEY.IXID = SCHEMA_TBL.WRD1.KEY_TYP#(CURR_INDX);
      665     3633    2       OUT_KEY.VALUE = ' ';
      666     3634        /**/
      667     3635    2       J = SCHEMA_TBL.WRD2.INDX#(CURR_INDX);
      668     3636    3       DO I = 1 TO SCHEMA_TBL.WRD2.CNT#(CURR_INDX);
      669     3637    3           EIS_TEMP = SCHEMA_TBL.SYN_FR_LOC(J);
      670     3638    3           EIS$ = ADDR(SCHEMA_TBL.SYN_FR_LOC(J));
      671     3639    3           CALL GET_EIS_ADDR;
      672     3640    3           TEMP_BIT$ = ADDR(OUT_KEY);
      673     3641    3           TEMP_BIT$ = PINCRW(TEMP_BIT$,ADSC.EISADDR);
      674     3642    3           TEMP_BIT$ = PINCRB(TEMP_BIT$,BIT_DISP);
      675     3643    3           EIS_TEMP = SCHEMA_TBL.FR_LOC(J);
      676     3644    3           EIS$ = ADDR(SCHEMA_TBL.FR_LOC(J));
      677     3645    3           CALL GET_EIS_ADDR;
      678     3646    3           ITEM$ = PINCRW(REC$,ADSC.EISADDR);
      679     3647    3           ITEM$ = PINCRB(ITEM$,BIT_DISP);
      680     3648    3           ITEM_LN = BIT_SIZE;
      681     3649    3           IF EIS_TEMP.BEIST = '0'B THEN
      682     3650    3               TEMP_BIT$->ITEM_TEMP = ITEM$->ITEM_TEMP;
      683     3651    4           ELSE DO;
      684     3652    4               ITEM_LN = NDSC.SIZE;
      685     3653    4               ITEM_SIGN = NDSC.SIGN;
      686     3654    5               DO CASE(ITEM_SIGN);
      687     3655    5               CASE(0);
      688     3656    5                   CALL SHIFT_NUMERIC_FDEC(ITEM$->ITEM_TEMP_UNL,
      689     3657    5                      TEMP_BIT$->ITEM_TEMP_UNL,
      690     3658    5                      ITEM_LN);
      691     3659    5               CASE(1);
      692     3660    5                   CALL SHIFT_NUMERIC_LSIGN(ITEM$->ITEM_TEMP_UNL,
      693     3661    5                      TEMP_BIT$->ITEM_TEMP_UNL,
      694     3662    5                      ITEM_LN);
      695     3663    5               CASE(2);
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:98   
      696     3664    5                   CALL SHIFT_NUMERIC_TSIGN(ITEM$->ITEM_TEMP_UNL,
      697     3665    5                      TEMP_BIT$->ITEM_TEMP_UNL,
      698     3666    5                      ITEM_LN);
      699     3667    5               CASE(3);
      700     3668    5                   CALL SHIFT_NUMERIC_NSIGN(ITEM$->ITEM_TEMP_UNL,
      701     3669    5                      TEMP_BIT$->ITEM_TEMP_UNL,
      702     3670    5                      ITEM_LN);
      703     3671    5                   END;
      704     3672    4               END;
      705     3673    3           J = J+1;
      706     3674    3           END;
      707     3675        /**/
      708     3676        /* Once we have all the fields concatonated togather for the key we have to concaton
              3676        ate the dbk of
      709     3677         record onto the end of the key that will be store out on the keyed file, so the dbk
              3677         is calculated and
      710     3678          put on the end
      711     3679        */
      712     3680        /**/
      713     3681    2   CONCAT_LDBK:
      714     3682         /*Calculate dbk of record found for key storage*/
      715     3683    2       REC_DBK=(RB*UWA.AC_REC.LPP)+ 1+REC_CNT-UWA.AC_REC.LPP;
      716     3684    2       ITEM_LN=BPLDBK*9;
      717     3685    2       ITEM$=ADDR(REC_DBK);
      718     3686    2       ITEM$=PINCRB(ITEM$,(4-BPLDBK)*9);
      719     3687    2       ITEM_LN=BPLDBK*9;
      720     3688    2       TEMP_BIT$=ADDR(OUT_KEY);
      721     3689    2       TEMP_BIT$=PINCRC(TEMP_BIT$,SCHEMA_TBL.WRD2.SIZ#(CURR_INDX) +3);
              3689                /* +3 to get by hdr wds on key*/
      722     3690         /* +3 to get by hdr wds on key*/
      723     3691    2       TEMP_BIT$->ITEM_TEMP=ITEM$->ITEM_TEMP;
      724     3692    2       RETURN;
      725     3693    2   END BUILD_KEY;
      726     3694        %EJECT;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:99   
      727     3695    1   GET_EIS_ADDR: PROC;
      728     3696        /**/
      729     3697        /*The routine take the eis discriptors stored in the schema file and breaks out
      730     3698          breaks out the fields that are needed to construct the key
      731     3699        */
      732     3700        /**/
      733     3701    2       IF EIS_TEMP.BEIST = '0'B THEN
      734     3702    3       DO;
      735     3703    3           BIT_SIZE=9*ADSC.SIZE;
      736     3704    3           BIT_DISP=9*(ADSC.BYT_OFF / 2);
      737     3705    3           END;
      738     3706    3       ELSE DO;
      739     3707    3           BIT_SIZE=4*NDSC.SIZE;
      740     3708    3           BIT_SIZE = BIT_SIZE + ((1+NDSC.SIZE)/2);
      741     3709    3           BIT_DISP=4*NDSC.BYT_OFF;
      742     3710    3           BIT_DISP = BIT_DISP + ((1+NDSC.BYT_OFF)/2);
      743     3711         /* ((1+NDSC.x)/2) counts for uncounted bits of pack dec */
      744     3712    3           END;
      745     3713    2       RETURN;
      746     3714    2   END GET_EIS_ADDR;
      747     3715    1   END ZIU$BLDKEY;
      748     3716        %EOD;

PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:100  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$BLDKEY.

   Procedure ZIU$BLDKEY requires 365 words for executable code.
   Procedure ZIU$BLDKEY is declared NOAUTO and requires 84 words of local(STATIC) storage.

PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:101  

 Object Unit name= ZIU$BLDKEY                                 File name= ZIU$KEYBLD.:ZIC0TOU
 UTS= SEP 05 '97 13:17:05.28 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    84    124  ZIU$BLDKEY
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$UC
    3   Proc  even  none   365    555  ZIU$BLDKEY
    4  RoData even  none     7      7  ZIU$BLDKEY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        2  ZIU$BLDKEY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 SYS_FUNC_READ
         yes           Std       3 SHIFT_NUMERIC_FDEC
         yes           Std       3 SHIFT_NUMERIC_TSIGN
         yes           Std       3 SHIFT_NUMERIC_NSIGN
         yes           Std       3 SHIFT_NUMERIC_LSIGN
                       nStd      0 X66_STATIC_2
                       nStd      0 X66_SUNWIND
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:102  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     OUT_KEY                               BPLDBK                                MAX_LDBK
     REC_CNT                               ITEM_LN                               EIS_TEMP
     INDX                                  SCHEMA_TBL$                           LAST_MEMBER
     CURR_INDX                             KEYBLD_UNWIND                         BLKLSF
     KEYLSF                                KEYXSF                                DCBSF
     ORGSF                                 KEYSF                                 KEYVSF
     ACSSF                                 NOTIMESF                              FUNSF
     ASNSF                                 TESTSF                                XTENSIZESF
     DISPSF                                WAITSF                                VFCSF
     FULLSF                                BKUPSF                                BUFLNSF
     BUFSF                                 SOURCESF                              DESTSF
     DATESF                                TIMESF                                UTSSF
     DAYSF                                 TSTAMPSF                              ENCRP_SEEDSF
     ERRCODESF                             MSGCODE                               INCL_ERR
     ERR_INSERT                            FIDSF_RD                              ACNT
     EXISTSF                               SHARESF                               DCBNMSF
     KEYRSF                                NO_KEYSF                              REASGNSF
     CARRY_ATTRIBUTESF                     SUBMESSF                              SPKY_OPNSF
     POSSF                                 ERRFLGSF                              MERGESF
     FSA_FLAG                              RELGSF                                UNUSED
     HELPCODE                              COUNTSF                               INDEXSF
     GAP                                   PSNSF                                 ACNTSF
     KEY_SHADWSF                           REC$                                  RB
     RE                                    IE                                    IB
     CNT                                   ICNT                                  RCNT
     SCNT                                  FIRST_SET                             RETCNT
     DMPCNT                                KCNT                                  ACNT_IDX
     I                                     J                                     K
     X                                     STEPCC                                I_O_BUF$
     OUT_INDX                              I_O_SIZE                              REC_DATA_LN
     M$LO                                  B$TCB$                                B$ROS$
     B$JIT$                                KEYFID                                I_O_KEY
     RESTART                               BREAK_FLAG                            ICHKSUM
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:103  
     ITMCNT                                GAP1                                  DATA$
     UWA                                   CAN_RVA                               M$UC
     ZI$DIR                                SCHEMA_ACTIVE                         RECORD_LIST
     SET_LIST                              RETAIN_LIST                           DUMP_FID
     ALTKY                                 INIT_RG                               KEY_RNG
     ITEM_LIST                             SRCEDCB

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:104  


      473        1        /*M* ZIU$BLDKEY  INPUT ROUTINE FOR X$SORT FOR ZIU$KEYBLD UTILITY   */
      474        2        /*T***********************************************************/
      475        3        /*T*                                                         */
      476        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      477        5        /*T*                                                         */
      478        6        /*T***********************************************************/
      479        7        /*******************************************************************
      480        8               ROUTINE BUILDS THE IDS AREA KEYS FOR X$SORT IN ZIU$KEYBLD
      481        9        ********************************************************************/
      482       10        ZIU$BLDKEY: PROC(KEYIN,KEYSZ) NOAUTO ALTRET;

     10  3 000000   000000 700200 xent  ZIU$BLDKEY   TSX0  ! X66_STATIC_2
         3 000001   000000 000002 0                  ZERO    0,2

      483       11    1   DCL KEYSZ UBIN WORD;
      484       12    1   DCL 1 KEYIN CHAR(KEYSZ);
      485       13    1   DCL KEYSZ_DI SBIN STATIC;
      486       14    1   DCL BUFER_DI CHAR(255) STATIC;
      487       15    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET; /*D*  DBCS FIND DIRECT   */
      488       16    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET; /*D* DBCS FIND RELATIVE TO SET   */
      489       17    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET; /*D* DBCS FIND OWNER   */
      490       18    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
      491       19    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      492       20    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      493       21    1   DCL SHIFT_NUMERIC_FDEC ENTRY(3);
      494       22    1   DCL SHIFT_NUMERIC_LSIGN ENTRY(3);
      495       23    1   DCL SHIFT_NUMERIC_TSIGN ENTRY(3);
      496       24    1   DCL SHIFT_NUMERIC_NSIGN ENTRY(3);
      497       25    1   DCL CONTINUE_THIS_REC BIT(1) STATIC INIT('0'B);
      498       26    1   DCL ITEM_TEMP_UNL BIT(ITEM_LN) BASED(ITEM$) UNAL;
      499       27    1   DCL ITEM_TEMP BIT(ITEM_LN) BASED(ITEM$) ALIGNED;
                27            /*D* ITEM_TEMP = TEMP PLACE FOR MOVEMENT OF DATA*/
      500       28    1  DCL ITEM$ PTR STATIC ALIGNED; /*D* ITEM$ = PTR TO A SPECIFIC FIELD WITHIN A RECORD*/
      501       29    1  DCL TEMP_BIT$ PTR STATIC; /*D* TEMP_BIT$ = PTR TO LOCATION WHERE FIELD IS SUPPOSED T
                29        O GO IN THE KEY BEING BUILT*/
      502       30    1   DCL 1 OUT_KEY ALIGNED SYMREF,
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:105  
                30            /*D* OUT_KEY = THE KEY THATS BEING BUILT TO WRITE OUT TO KEY FILE*/
      503       31    1         2 LEN UBIN(9) UNAL,
      504       32    1         2 IXID UBIN(18) UNAL,
      505       33    1         2 VALUE CHAR(252) UNAL;
      506       34    1   DCL BUFFIN REDEF OUT_KEY CHAR(255) ALIGNED;
      507       35    1   DCL BPLDBK UBIN(36) ALIGNED SYMREF;
                35            /*D* BPLDBK= KEY SIZE IN BYTES FOR A SPECIFIC AREA*/
      508       36    1   DCL MAX_LDBK UBIN(36) ALIGNED SYMREF;
                36            /*D* MAX_LDBK= MAX LOCAL DBK FOR A SPECIFIC AREA*/
      509       37    1   DCL REC_CNT SBIN(36) ALIGNED SYMREF;
                37            /*D* REC_CNT =RECORD COUNT FOR THE PAGE THAT WE ON */
      510       38    1   DCL ITEM_LN UBIN(36) ALIGNED SYMREF; /*D* ITEM_LN = SIZE IN BITS OF ITEM_TEMP*/
      511       39    1   DCL EIS$ PTR STATIC ALIGNED;
                39            /*D* EIS$ = PTR TO THE EIS DESCRIPTOR IN A RECORD IN THE SCHEMA FILE*/
      512       40    1   DCL 1 ADSC BASED(EIS$) ALIGNED,
                40            /*D* ADSC = ASCII (BIT9) EIS DESCRIPTOR DESCRIPTION*/
      513       41    1         2 * UBIN(3) UNAL,
      514       42    1         2 EISADDR UBIN(15) UNAL,
      515       43    1         2 BYT_OFF UBIN(3) UNAL,
      516       44    1         2 TA UBIN(2) UNAL,
      517       45    1         2 * UBIN(1) UNAL,
      518       46    1         2 SIZE UBIN(12) UNAL;
      519       47    1   DCL 1 NDSC BASED(EIS$) ALIGNED, /*D* NDSC = NUMERIC EIS DESCRIPTOR DESCRIPTION*/
      520       48    1         2 * UBIN(3) UNAL,
      521       49    1         2 EISADDR UBIN(15) UNAL,
      522       50    1         2 BYT_OFF UBIN(3) UNAL,
      523       51    1         2 TN UBIN(1) UNAL,
      524       52    1         2 SIGN UBIN(2) UNAL,
      525       53    1         2 SCAL UBIN(6) UNAL,
      526       54    1         2 SIZE UBIN(6) UNAL;
      527       55    1   DCL 1 EIS_TEMP SYMREF ALIGNED,
      528       56    1         2 BEIST BIT(1) UNAL,
      529       57    1         2 * BIT(35) UNAL;
      530       58         /*E* ERROR: ZIU-04001-C
      531       59           MESSAGE: No secondary keys are associated with area "%U1".
      532       60           */
      533       61         /*E* ERROR: ZIU-04002-C
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:106  
      534       62           MESSAGE: Secondary keys are not permitted in temporary area "%U1".
      535       63           */
      536       64         /*   ERROR: ZIU-04003-C
      537       65         MESSAGE: Incorrect page type for secondary key file %U1.
      538       66         */
      539       67         /*   ERROR: ZIU-04004-C
      540       68         MESSAGE: Error during rebuilding process...%U1 not modified.
      541       69         */
      542       70         /*E* ERROR: ZIU-04005-C
      543       71           MESSAGE: REBUILD KEYS skipped for indexed area %U1.
      544       72           */
      545       73    1   DCL INDX UBIN(36) ALIGNED SYMREF; /* Indx = 'INDEX' varible*/
      546       74    1   DCL REC_DBK SBIN(36) STATIC UNAL;
                74            /*D* REC_DBK = DBK OF THE CURRENT RECORD WHERE WE AREA ON A PAGE*/
      547       75    1   DCL CDBK REDEF REC_DBK CHAR(4); /*D* CDBK = REDEF OF REC_DBK ONLY CHARACTER*/
      548       76    1   DCL BIT_DISP UBIN(36) STATIC ALIGNED;
                76            /*D* BIT_DISP = BIT  DISPLACEMENT FOR WITHIN A RECORD*/
      549       77    1   DCL BIT_SIZE UBIN(36) STATIC ALIGNED;
                77            /*D* BIT_SIZE = BIT SIZE OF AN ITEM WITHIN A RECORD*/
      550       78    1   DCL SCHEMA_TBL$ PTR SYMREF ALIGNED; /* pointer to table */
      551       79    1   DCL 1 SCHEMA_TBL (0:0) BASED(SCHEMA_TBL$) ALIGNED,
      552       80    1         2 WRD1,
      553       81    1           3 REC_TYP# UBIN HALF UNAL,
      554       82    1           3 KEY_TYP# UBIN HALF UNAL,
      555       83    1         2 SYN_FR_LOC REDEF WRD1 BIT(36) UNAL,
      556       84
      557       85    1         2 WRD2,
      558       86    1           3 INDX# UBIN HALF UNAL,
      559       87    1           3 NO_DUPS# BIT(1) UNAL,
      560       88    1           3 SIZ# UBIN(8) UNAL,
      561       89    1           3 CNT# UBIN BYTE UNAL,
      562       90    1         2 DBK REDEF WRD2 UBIN WORD UNAL,
      563       91    1         2 FR_LOC REDEF WRD2 BIT(36) UNAL;
      564       92    1   DCL LAST_MEMBER SBIN WORD SYMREF; /* Last rec type in table */
      565       93    1   DCL CURR_INDX SBIN WORD SYMREF;
      566       94    1   DCL KEYBLD_UNWIND REMEMBER SYMREF;
      567       95        /**/
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:107  
      568       96        %INCLUDE ZI_GLOBAL_DBUTIL;
      569      274         %SYS_FUNC;
      570      366         %MISC_DCLS;
      571      419        %INCLUDE ZI$PG_STRUCTS;
      572      522         %DATA_PG;
      573      541        %INCLUDE ZI_UWA_C;
      574     1231        %ZI$UWAB;
      575     1571        %INCLUDE ZI_RVA_C;
      576     2252        %CAN_RVA_REF;
      577     2571        %INCLUDE CP_6;
      578     2652        %INCLUDE CP_6_SUBS;
      579     3192        %F$DCB;
      580     3249        %INCLUDE ZI$DIR;
      581     3406        %DIR;
      582     3550    1   DCL SRCEDCB UBIN HALF SYMREF;
      583     3551    1   DCL ITEM_SIGN UBIN;
      584     3552        %EJECT;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:108  
      585     3553         /* *        * *       * *    PROCEDURE     * *      * *     * */
      586     3554    1       IF CONTINUE_THIS_REC = %NO# THEN

   3554  3 000002   000104 234000 0                  SZN     CONTINUE_THIS_REC
         3 000003   000007 604000 3                  TMI     s:3557

      587     3555    1           CALL FIND_NXT_AVIL_REC ALTRET(END_OF_FILE);

   3555  3 000004   000047 701000 3                  TSX1    FIND_NXT_AVIL_REC
         3 000005   000045 702000 3                  TSX2    END_OF_FILE
         3 000006   000010 710000 3                  TRA     s:3558

      588     3556    1       ELSE
      589     3557    1           CURR_INDX = CURR_INDX + 1;

   3557  3 000007   000000 054000 xsym               AOS     CURR_INDX

      590     3558    1       CALL BUILD_KEY;

   3558  3 000010   000224 701000 3                  TSX1    BUILD_KEY
         3 000011   000000 011000                    NOP     0

      591     3559    1       IF SCHEMA_TBL.WRD1.REC_TYP#(CURR_INDX +1) = REC_FRMT.TYPE THEN

   3559  3 000012   000000 470400 xsym               LDP0    REC$
         3 000013   003000 061500                    CSR     bolr='003'O
         3 000014   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12
         3 000015   000120 000044 0                  BDSC    ITEM_SIGN+5              by=0,bit=0,n=36
         3 000016   000000 235000 xsym               LDA     CURR_INDX
         3 000017   000001 735000                    ALS     1
         3 000020   000000 471400 xsym               LDP1    SCHEMA_TBL$
         3 000021   100002 236105                    LDQ     2,AL,PR1
         3 000022   000022 772000                    QRL     18
         3 000023   000120 116000 0                  CMPQ    ITEM_SIGN+5
         3 000024   000030 601000 3                  TNZ     s:3562

      592     3560    1           CONTINUE_THIS_REC = %YES#;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:109  

   3560  3 000025   400000 236003                    LDQ     -131072,DU
         3 000026   000104 756000 0                  STQ     CONTINUE_THIS_REC
         3 000027   000031 710000 3                  TRA     s:3563

      593     3561    1       ELSE
      594     3562    1           CONTINUE_THIS_REC = %NO#;

   3562  3 000030   000104 450000 0                  STZ     CONTINUE_THIS_REC

      595     3563    1       KEYSZ = OUT_KEY.LEN+1;

   3563  3 000031   000002 473400 0                  LDP3    @KEYSZ
         3 000032   000000 236000 xsym               LDQ     OUT_KEY
         3 000033   000033 772000                    QRL     27
         3 000034   000001 036007                    ADLQ    1,DL
         3 000035   300000 756100                    STQ     0,,PR3

      596     3564    1       KEYIN = BUFFIN;

   3564  3 000036   300000 720100                    LXL0    0,,PR3
         3 000037   000001 470400 0                  LDP0    @KEYIN
         3 000040   040140 100400                    MLR     fill='040'O
         3 000041   000000 000377 xsym               ADSC9   OUT_KEY                  cn=0,n=255
         3 000042   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      597     3565    1       RETURN;

   3565  3 000043   000000 221200 0                  LDX1  ! 0
         3 000044   000001 702211                    TSX2  ! 1,X1

      598     3566    1   END_OF_FILE:
      599     3567    1       ALTRETURN;

   3567  3 000045   000000 221200 0     END_OF_FILE  LDX1  ! 0
         3 000046   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:110  
      600     3568        %EJECT;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:111  
      601     3569    1   FIND_NXT_AVIL_REC: PROC ALTRET;

   3569  3 000047   000114 741200 0     FIND_NXT_AV* STX1  ! ITEM_SIGN+1

      602     3570         /*
      603     3571            This routine searches for the next record that a key is to
      604     3572            be built on. Sets the record pointer and returns. Altreturns at
      605     3573            end of file.
      606     3574         */
      607     3575    3       DO WHILE('1'B);

      608     3576    3           IF BREAK_FLAG > 0 THEN

   3576  3 000050   000000 235000 xsym               LDA     BREAK_FLAG
         3 000051   000055 604400 3                  TMOZ    s:3578

      609     3577    3               UNWIND TO KEYBLD_UNWIND;

   3577  3 000052   000000 237200 xsym               LDAQ  ! KEYBLD_UNWIND
         3 000053   000000 700200 xent               TSX0  ! X66_SUNWIND
         3 000054   000000 000200                    ZERO    0,128

      610     3578    3           REC_CNT = REC_CNT+1; /* initialized at 9999 */

   3578  3 000055   000000 054000 xsym               AOS     REC_CNT

      611     3579    3           I=0;

   3579  3 000056   000000 450000 xsym               STZ     I

      612     3580    3           IF REC_CNT > DATA_PG.OFF_LN.SEC THEN

   3580  3 000057   000000 470400 xsym               LDP0    DATA$
         3 000060   000005 236100                    LDQ     5,,PR0
         3 000061   777777 376007                    ANQ     -1,DL
         3 000062   000000 116000 xsym               CMPQ    REC_CNT
         3 000063   000150 605000 3                  TPL     s:3609
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:112  

      613     3581    4           DO;

      614     3582    4               RB = RB+1;

   3582  3 000064   000000 235000 xsym               LDA     RB
         3 000065   000001 035007                    ADLA    1,DL
         3 000066   000000 755000 xsym               STA     RB

      615     3583    4               IF RB > RE THEN

   3583  3 000067   000000 236000 xsym               LDQ     RE
         3 000070   000000 116000 xsym               CMPQ    RB
         3 000071   000074 603000 3                  TRC     s:3585

      616     3584    4                   ALTRETURN; /*  END OF DATA(OR FILE) */

   3584  3 000072   000114 221200 0                  LDX1  ! ITEM_SIGN+1
         3 000073   000000 702211                    TSX2  ! 0,X1

      617     3585    4               IF OUT_INDX >= I_O_SIZE THEN

   3585  3 000074   000000 236000 xsym               LDQ     OUT_INDX
         3 000075   000000 116000 xsym               CMPQ    I_O_SIZE
         3 000076   000140 604000 3                  TMI     s:3601

      618     3586    5               DO;

      619     3587    5                   I_O_SIZE = RE - RB;

   3587  3 000077   000000 236000 xsym               LDQ     RE
         3 000100   000000 136000 xsym               SBLQ    RB
         3 000101   000000 756000 xsym               STQ     I_O_SIZE

      620     3588    5                   IF I_O_SIZE >= 32 THEN

   3588  3 000102   000040 116007                    CMPQ    32,DL
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:113  
         3 000103   000106 604000 3                  TMI     s:3590

      621     3589    5                       I_O_SIZE = 31;

   3589  3 000104   000037 235007                    LDA     31,DL
         3 000105   000000 755000 xsym               STA     I_O_SIZE

      622     3590    5                   I_O_KEY = RB;

   3590  3 000106   000000 235000 xsym               LDA     RB
         3 000107   000000 755000 xsym               STA     I_O_KEY

      623     3591    5    /**/           DCBSF = ZI$DIR.AREA_NM.DCB#;

   3591  3 000110   000244 220000 xsym               LDX0    ZI$DIR+164
         3 000111   000000 740000 xsym               STX0    DCBSF

      624     3592    5    /**/           BUFSF = VECTOR(I_O_BUF);

   3592  3 000112   000000 235000 4                  LDA     0
         3 000113   000000 236000 xsym               LDQ     I_O_BUF$
         3 000114   000000 755000 xsym               STA     BUFSF
         3 000115   000001 756000 xsym               STQ     BUFSF+1

      625     3593    5    /**/           BUFLNSF = 4096 * (I_O_SIZE +1);

   3593  3 000116   000000 235000 xsym               LDA     I_O_SIZE
         3 000117   000014 735000                    ALS     12
         3 000120   010000 035007                    ADLA    4096,DL
         3 000121   000000 755000 xsym               STA     BUFLNSF

      626     3594    5    /**/           FULLSF = %YES#;

   3594  3 000122   400000 236003                    LDQ     -131072,DU
         3 000123   000000 756000 xsym               STQ     FULLSF

      627     3595    5    /**/           ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:114  

   3595  3 000124   000027 236000 xsym               LDQ     ZI$DIR+23
         3 000125   000000 756000 xsym               STQ     ENCRP_SEEDSF

      628     3596    5    /**/           KEYSF = %YES#;

   3596  3 000126   400000 236003                    LDQ     -131072,DU
         3 000127   000000 756000 xsym               STQ     KEYSF

      629     3597    5    /**/           KEYVSF.IDSKEY = I_O_KEY;

   3597  3 000130   000000 100400                    MLR     fill='000'O
         3 000131   000000 000004 xsym               ADSC9   I_O_KEY                  cn=0,n=4
         3 000132   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

      630     3598    5                   CALL SYS_FUNC_READ ALTRET(EOF);

   3598  3 000133   000001 631400 4                  EPPR1   1
         3 000134   000000 701000 xent               TSX1    SYS_FUNC_READ
         3 000135   000222 702000 3                  TSX2    EOF

      631     3599    5                   OUT_INDX = -1;

   3599  3 000136   000001 335007                    LCA     1,DL
         3 000137   000000 755000 xsym               STA     OUT_INDX

      632     3600    5                   END;

      633     3601    4               REC_CNT = -1;

   3601  3 000140   000001 335007                    LCA     1,DL
         3 000141   000000 755000 xsym               STA     REC_CNT

      634     3602    4               OUT_INDX = OUT_INDX +1;

   3602  3 000142   000000 054000 xsym               AOS     OUT_INDX

PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:115  
      635     3603    4               DATA$ = ADDR(I_O_BUF(OUT_INDX));

   3603  3 000143   000000 236000 xsym               LDQ     OUT_INDX
         3 000144   000034 736000                    QLS     28
         3 000145   000000 036000 xsym               ADLQ    I_O_BUF$
         3 000146   000000 756000 xsym               STQ     DATA$

      636     3604    4               END;

   3604  3 000147   000050 710000 3                  TRA     s:3576

      637     3605    3           ELSE
      638     3606         /*
      639     3607            Ensure this record has not been deleted & does have a key.
      640     3608         */
      641     3609    3               IF DATA_PG.ACT_DATA_18(2035-REC_CNT) > 0 THEN

   3609  3 000150   000000 335000 xsym               LCA     REC_CNT
         3 000151   000001 735000                    ALS     1
         3 000152   000000 100505                    MLR     fill='000'O
         3 000153   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         3 000154   000120 000004 0                  ADSC9   ITEM_SIGN+5              cn=0,n=4
         3 000155   000120 236000 0                  LDQ     ITEM_SIGN+5
         3 000156   000022 732000                    QRS     18
         3 000157   000000 116003                    CMPQ    0,DU
         3 000160   000050 604400 3                  TMOZ    s:3576

      642     3610    4               DO;

      643     3611    4                   REC$ = PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(2035-REC_CNT));

   3611  3 000161   000000 100505                    MLR     fill='000'O
         3 000162   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         3 000163   000120 000004 0                  ADSC9   ITEM_SIGN+5              cn=0,n=4
         3 000164   000120 236000 0                  LDQ     ITEM_SIGN+5
         3 000165   000022 732000                    QRS     18
         3 000166   000020 736000                    QLS     16
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:116  
         3 000167   000003 036003                    ADLQ    3,DU
         3 000170   000000 036000 xsym               ADLQ    DATA$
         3 000171   000000 756000 xsym               STQ     REC$

      644     3612    5                   DO WHILE((REC_FRMT.TYPE ~= SCHEMA_TBL.WRD1.REC_TYP#(I))

   3612  3 000172   000174 710000 3                  TRA     s:3615

      645     3613    5                      AND (I <= LAST_MEMBER));
      646     3614    5                       I = I+1;

   3614  3 000173   000000 054000 xsym               AOS     I

      647     3615    5                       END;

   3615  3 000174   000000 235000 xsym               LDA     I
         3 000175   000001 735000                    ALS     1
         3 000176   000000 470400 xsym               LDP0    SCHEMA_TBL$
         3 000177   000000 236105                    LDQ     0,AL,PR0
         3 000200   000022 772000                    QRL     18
         3 000201   000120 756000 0                  STQ     ITEM_SIGN+5
         3 000202   000000 471400 xsym               LDP1    REC$
         3 000203   003000 061500                    CSR     bolr='003'O
         3 000204   100000 060014                    BDSC    0,,PR1                   by=0,bit=6,n=12
         3 000205   000121 000044 0                  BDSC    ITEM_SIGN+6              by=0,bit=0,n=36
         3 000206   000121 236000 0                  LDQ     ITEM_SIGN+6
         3 000207   000120 116000 0                  CMPQ    ITEM_SIGN+5
         3 000210   000214 600000 3                  TZE     s:3616
         3 000211   000000 236000 xsym               LDQ     I
         3 000212   000000 116000 xsym               CMPQ    LAST_MEMBER
         3 000213   000173 604400 3                  TMOZ    s:3614

      648     3616    4                   IF I <= LAST_MEMBER THEN

   3616  3 000214   000000 236000 xsym               LDQ     I
         3 000215   000000 116000 xsym               CMPQ    LAST_MEMBER
         3 000216   000050 605400 3                  TPNZ    s:3576
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:117  

      649     3617    5                   DO;

      650     3618    5                       CURR_INDX = I;

   3618  3 000217   000000 756000 xsym               STQ     CURR_INDX

      651     3619    5                       RETURN;

   3619  3 000220   000114 221200 0                  LDX1  ! ITEM_SIGN+1
         3 000221   000001 702211                    TSX2  ! 1,X1

      652     3620    5                       END;
      653     3621    4                   END;
      654     3622    3           END;

      655     3623    2   EOF:
      656     3624    2       ALTRETURN;

   3624  3 000222   000114 221200 0     EOF          LDX1  ! ITEM_SIGN+1
         3 000223   000000 702211                    TSX2  ! 0,X1

      657     3625    2   END FIND_NXT_AVIL_REC;
      658     3626        %EJECT;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:118  
      659     3627    1   BUILD_KEY: PROC ;

   3627  3 000224   000115 741200 0     BUILD_KEY    STX1  ! ITEM_SIGN+2

      660     3628         /*
      661     3629            This routine does the actual building of the key.
      662     3630         */
      663     3631    2       OUT_KEY.LEN=SCHEMA_TBL.WRD2.SIZ#(CURR_INDX)+2+BPLDBK;

   3631  3 000225   000000 235000 xsym               LDA     CURR_INDX
         3 000226   000001 735000                    ALS     1
         3 000227   000000 470400 xsym               LDP0    SCHEMA_TBL$
         3 000230   000001 236105                    LDQ     1,AL,PR0
         3 000231   000011 772000                    QRL     9
         3 000232   000377 376007                    ANQ     255,DL
         3 000233   000000 036000 xsym               ADLQ    BPLDBK
         3 000234   000002 036007                    ADLQ    2,DL
         3 000235   000033 736000                    QLS     27
         3 000236   000000 552040 xsym               STBQ    OUT_KEY,'40'O

      664     3632    2       OUT_KEY.IXID = SCHEMA_TBL.WRD1.KEY_TYP#(CURR_INDX);

   3632  3 000237   000000 236105                    LDQ     0,AL,PR0
         3 000240   000011 736000                    QLS     9
         3 000241   000000 552030 xsym               STBQ    OUT_KEY,'30'O

      665     3633    2       OUT_KEY.VALUE = ' ';

   3633  3 000242   040000 100400                    MLR     fill='040'O
         3 000243   000002 000001 4                  ADSC9   2                        cn=0,n=1
         3 000244   000000 600374 xsym               ADSC9   OUT_KEY                  cn=3,n=252

      666     3634        /**/
      667     3635    2       J = SCHEMA_TBL.WRD2.INDX#(CURR_INDX);

   3635  3 000245   000001 236105                    LDQ     1,AL,PR0
         3 000246   000022 772000                    QRL     18
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:119  
         3 000247   000000 756000 xsym               STQ     J

      668     3636    3       DO I = 1 TO SCHEMA_TBL.WRD2.CNT#(CURR_INDX);

   3636  3 000250   000001 235007                    LDA     1,DL
         3 000251   000000 755000 xsym               STA     I
         3 000252   000432 710000 3                  TRA     s:3674+1

      669     3637    3           EIS_TEMP = SCHEMA_TBL.SYN_FR_LOC(J);

   3637  3 000253   000000 235000 xsym               LDA     J
         3 000254   000001 735000                    ALS     1
         3 000255   000000 470400 xsym               LDP0    SCHEMA_TBL$
         3 000256   000000 236105                    LDQ     0,AL,PR0
         3 000257   000000 756000 xsym               STQ     EIS_TEMP

      670     3638    3           EIS$ = ADDR(SCHEMA_TBL.SYN_FR_LOC(J));

   3638  3 000260   000000 236000 xsym               LDQ     J
         3 000261   000023 736000                    QLS     19
         3 000262   000000 036000 xsym               ADLQ    SCHEMA_TBL$
         3 000263   000107 756000 0                  STQ     EIS$

      671     3639    3           CALL GET_EIS_ADDR;

   3639  3 000264   000507 701000 3                  TSX1    GET_EIS_ADDR
         3 000265   000000 011000                    NOP     0

      672     3640    3           TEMP_BIT$ = ADDR(OUT_KEY);

   3640  3 000266   000003 236000 4                  LDQ     3
         3 000267   000106 756000 0                  STQ     TEMP_BIT$

      673     3641    3           TEMP_BIT$ = PINCRW(TEMP_BIT$,ADSC.EISADDR);

   3641  3 000270   000107 470400 0                  LDP0    EIS$
         3 000271   000000 220100                    LDX0    0,,PR0
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:120  
         3 000272   077777 360003                    ANX0    32767,DU
         3 000273   000000 636010                    EAQ     0,X0
         3 000274   000106 036000 0                  ADLQ    TEMP_BIT$
         3 000275   000106 756000 0                  STQ     TEMP_BIT$

      674     3642    3           TEMP_BIT$ = PINCRB(TEMP_BIT$,BIT_DISP);

   3642  3 000276   000106 471400 0                  LDP1    TEMP_BIT$
         3 000277   000111 235000 0                  LDA     BIT_DISP
         3 000300   100000 503505                    ABD     0,AL,PR1
         3 000301   000106 451400 0                  STP1    TEMP_BIT$

      675     3643    3           EIS_TEMP = SCHEMA_TBL.FR_LOC(J);

   3643  3 000302   000000 236000 xsym               LDQ     J
         3 000303   000001 736000                    QLS     1
         3 000304   000000 473400 xsym               LDP3    SCHEMA_TBL$
         3 000305   300001 236106                    LDQ     1,QL,PR3
         3 000306   000000 756000 xsym               STQ     EIS_TEMP

      676     3644    3           EIS$ = ADDR(SCHEMA_TBL.FR_LOC(J));

   3644  3 000307   000000 236000 xsym               LDQ     J
         3 000310   000023 736000                    QLS     19
         3 000311   000001 036003                    ADLQ    1,DU
         3 000312   000000 036000 xsym               ADLQ    SCHEMA_TBL$
         3 000313   000107 756000 0                  STQ     EIS$

      677     3645    3           CALL GET_EIS_ADDR;

   3645  3 000314   000507 701000 3                  TSX1    GET_EIS_ADDR
         3 000315   000000 011000                    NOP     0

      678     3646    3           ITEM$ = PINCRW(REC$,ADSC.EISADDR);

   3646  3 000316   000107 470400 0                  LDP0    EIS$
         3 000317   000000 220100                    LDX0    0,,PR0
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:121  
         3 000320   077777 360003                    ANX0    32767,DU
         3 000321   000000 636010                    EAQ     0,X0
         3 000322   000000 036000 xsym               ADLQ    REC$
         3 000323   000105 756000 0                  STQ     ITEM$

      679     3647    3           ITEM$ = PINCRB(ITEM$,BIT_DISP);

   3647  3 000324   000105 471400 0                  LDP1    ITEM$
         3 000325   000111 235000 0                  LDA     BIT_DISP
         3 000326   100000 503505                    ABD     0,AL,PR1
         3 000327   000105 451400 0                  STP1    ITEM$

      680     3648    3           ITEM_LN = BIT_SIZE;

   3648  3 000330   000112 236000 0                  LDQ     BIT_SIZE
         3 000331   000000 756000 xsym               STQ     ITEM_LN

      681     3649    3           IF EIS_TEMP.BEIST = '0'B THEN

   3649  3 000332   000000 234000 xsym               SZN     EIS_TEMP
         3 000333   000343 604000 3                  TMI     s:3652

      682     3650    3               TEMP_BIT$->ITEM_TEMP = ITEM$->ITEM_TEMP;

   3650  3 000334   000000 620006                    EAX0    0,QL
         3 000335   000106 473400 0                  LDP3    TEMP_BIT$
         3 000336   000000 721000 xsym               LXL1    ITEM_LN
         3 000337   003140 060540                    CSL     bolr='003'O
         3 000340   100000 000010                    BDSC    0,,PR1                   by=0,bit=0,n=*X0
         3 000341   300000 000011                    BDSC    0,,PR3                   by=0,bit=0,n=*X1
         3 000342   000430 710000 3                  TRA     s:3673

      683     3651    4           ELSE DO;

      684     3652    4               ITEM_LN = NDSC.SIZE;

   3652  3 000343   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:122  
         3 000344   000077 376007                    ANQ     63,DL
         3 000345   000000 756000 xsym               STQ     ITEM_LN

      685     3653    4               ITEM_SIGN = NDSC.SIGN;

   3653  3 000346   000000 236100                    LDQ     0,,PR0
         3 000347   000014 772000                    QRL     12
         3 000350   000003 376007                    ANQ     3,DL
         3 000351   000113 756000 0                  STQ     ITEM_SIGN

      686     3654    5               DO CASE(ITEM_SIGN);

   3654  3 000352   000004 116007                    CMPQ    4,DL
         3 000353   000355 602006 3                  TNC     s:3654+3,QL
         3 000354   000430 710000 3                  TRA     s:3673
         3 000355   000361 710000 3                  TRA     s:3656
         3 000356   000373 710000 3                  TRA     s:3660
         3 000357   000405 710000 3                  TRA     s:3664
         3 000360   000417 710000 3                  TRA     s:3668

      687     3655    5               CASE(0);

      688     3656    5                   CALL SHIFT_NUMERIC_FDEC(ITEM$->ITEM_TEMP_UNL,

   3656  3 000361   000005 236000 4                  LDQ     5
         3 000362   000122 756000 0                  STQ     ITEM_SIGN+7
         3 000363   000106 236000 0                  LDQ     TEMP_BIT$
         3 000364   000105 235000 0                  LDA     ITEM$
         3 000365   000120 757000 0                  STAQ    ITEM_SIGN+5
         3 000366   000120 630400 0                  EPPR0   ITEM_SIGN+5
         3 000367   000004 631400 4                  EPPR1   4
         3 000370   000000 701000 xent               TSX1    SHIFT_NUMERIC_FDEC
         3 000371   000000 011000                    NOP     0
         3 000372   000430 710000 3                  TRA     s:3673

      689     3657    5                      TEMP_BIT$->ITEM_TEMP_UNL,
      690     3658    5                      ITEM_LN);
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:123  
      691     3659    5               CASE(1);

      692     3660    5                   CALL SHIFT_NUMERIC_LSIGN(ITEM$->ITEM_TEMP_UNL,

   3660  3 000373   000005 236000 4                  LDQ     5
         3 000374   000122 756000 0                  STQ     ITEM_SIGN+7
         3 000375   000106 236000 0                  LDQ     TEMP_BIT$
         3 000376   000105 235000 0                  LDA     ITEM$
         3 000377   000120 757000 0                  STAQ    ITEM_SIGN+5
         3 000400   000120 630400 0                  EPPR0   ITEM_SIGN+5
         3 000401   000004 631400 4                  EPPR1   4
         3 000402   000000 701000 xent               TSX1    SHIFT_NUMERIC_LSIGN
         3 000403   000000 011000                    NOP     0
         3 000404   000430 710000 3                  TRA     s:3673

      693     3661    5                      TEMP_BIT$->ITEM_TEMP_UNL,
      694     3662    5                      ITEM_LN);
      695     3663    5               CASE(2);

      696     3664    5                   CALL SHIFT_NUMERIC_TSIGN(ITEM$->ITEM_TEMP_UNL,

   3664  3 000405   000005 236000 4                  LDQ     5
         3 000406   000122 756000 0                  STQ     ITEM_SIGN+7
         3 000407   000106 236000 0                  LDQ     TEMP_BIT$
         3 000410   000105 235000 0                  LDA     ITEM$
         3 000411   000120 757000 0                  STAQ    ITEM_SIGN+5
         3 000412   000120 630400 0                  EPPR0   ITEM_SIGN+5
         3 000413   000004 631400 4                  EPPR1   4
         3 000414   000000 701000 xent               TSX1    SHIFT_NUMERIC_TSIGN
         3 000415   000000 011000                    NOP     0
         3 000416   000430 710000 3                  TRA     s:3673

      697     3665    5                      TEMP_BIT$->ITEM_TEMP_UNL,
      698     3666    5                      ITEM_LN);
      699     3667    5               CASE(3);

      700     3668    5                   CALL SHIFT_NUMERIC_NSIGN(ITEM$->ITEM_TEMP_UNL,
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:124  

   3668  3 000417   000005 236000 4                  LDQ     5
         3 000420   000122 756000 0                  STQ     ITEM_SIGN+7
         3 000421   000106 236000 0                  LDQ     TEMP_BIT$
         3 000422   000105 235000 0                  LDA     ITEM$
         3 000423   000120 757000 0                  STAQ    ITEM_SIGN+5
         3 000424   000120 630400 0                  EPPR0   ITEM_SIGN+5
         3 000425   000004 631400 4                  EPPR1   4
         3 000426   000000 701000 xent               TSX1    SHIFT_NUMERIC_NSIGN
         3 000427   000000 011000                    NOP     0

      701     3669    5                      TEMP_BIT$->ITEM_TEMP_UNL,
      702     3670    5                      ITEM_LN);
      703     3671    5                   END;

      704     3672    4               END;

      705     3673    3           J = J+1;

   3673  3 000430   000000 054000 xsym               AOS     J

      706     3674    3           END;

   3674  3 000431   000000 054000 xsym               AOS     I
         3 000432   000000 235000 xsym               LDA     CURR_INDX
         3 000433   000001 735000                    ALS     1
         3 000434   000000 470400 xsym               LDP0    SCHEMA_TBL$
         3 000435   000001 236105                    LDQ     1,AL,PR0
         3 000436   000777 376007                    ANQ     511,DL
         3 000437   000000 116000 xsym               CMPQ    I
         3 000440   000253 605000 3                  TPL     s:3637

      707     3675        /**/
      708     3676       /* Once we have all the fields concatonated togather for the key we have to concaton
              3676        ate the dbk of
      709     3677        record onto the end of the key that will be store out on the keyed file, so the dbk
              3677         is calculated and
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:125  
      710     3678          put on the end
      711     3679        */
      712     3680        /**/
      713     3681    2   CONCAT_LDBK:
      714     3682         /*Calculate dbk of record found for key storage*/
      715     3683    2       REC_DBK=(RB*UWA.AC_REC.LPP)+ 1+REC_CNT-UWA.AC_REC.LPP;

   3683  3 000441   000000 236000 xsym  CONCAT_LDBK  LDQ     RB
         3 000442   000253 402000 xsym               MPY     UWA+171
         3 000443   000000 036000 xsym               ADLQ    REC_CNT
         3 000444   000253 136000 xsym               SBLQ    UWA+171
         3 000445   000001 036007                    ADLQ    1,DL
         3 000446   000110 756000 0                  STQ     REC_DBK

      716     3684    2       ITEM_LN=BPLDBK*9;

   3684  3 000447   000000 236000 xsym               LDQ     BPLDBK
         3 000450   000011 402007                    MPY     9,DL
         3 000451   000000 756000 xsym               STQ     ITEM_LN

      717     3685    2       ITEM$=ADDR(REC_DBK);

   3685  3 000452   000006 236000 4                  LDQ     6
         3 000453   000105 756000 0                  STQ     ITEM$

      718     3686    2       ITEM$=PINCRB(ITEM$,(4-BPLDBK)*9);

   3686  3 000454   000004 236007                    LDQ     4,DL
         3 000455   000000 136000 xsym               SBLQ    BPLDBK
         3 000456   000020 736000                    QLS     16
         3 000457   000105 036000 0                  ADLQ    ITEM$
         3 000460   000105 756000 0                  STQ     ITEM$

      719     3687    2       ITEM_LN=BPLDBK*9;

   3687  3 000461   000000 236000 xsym               LDQ     BPLDBK
         3 000462   000011 402007                    MPY     9,DL
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:126  
         3 000463   000000 756000 xsym               STQ     ITEM_LN

      720     3688    2       TEMP_BIT$=ADDR(OUT_KEY);

   3688  3 000464   000003 236000 4                  LDQ     3
         3 000465   000106 756000 0                  STQ     TEMP_BIT$

      721     3689    2       TEMP_BIT$=PINCRC(TEMP_BIT$,SCHEMA_TBL.WRD2.SIZ#(CURR_INDX) +3);
              3689                /* +3 to get by hdr wds on key*/

   3689  3 000466   000000 235000 xsym               LDA     CURR_INDX
         3 000467   000001 735000                    ALS     1
         3 000470   000001 236105                    LDQ     1,AL,PR0
         3 000471   000011 772000                    QRL     9
         3 000472   000377 376007                    ANQ     255,DL
         3 000473   000020 736000                    QLS     16
         3 000474   600000 036007                    ADLQ    -65536,DL
         3 000475   000106 036000 0                  ADLQ    TEMP_BIT$
         3 000476   000106 756000 0                  STQ     TEMP_BIT$

      722     3690         /* +3 to get by hdr wds on key*/
      723     3691    2       TEMP_BIT$->ITEM_TEMP=ITEM$->ITEM_TEMP;

   3691  3 000477   000105 471400 0                  LDP1    ITEM$
         3 000500   000000 720000 xsym               LXL0    ITEM_LN
         3 000501   000106 473400 0                  LDP3    TEMP_BIT$
         3 000502   003140 060540                    CSL     bolr='003'O
         3 000503   100000 000010                    BDSC    0,,PR1                   by=0,bit=0,n=*X0
         3 000504   300000 000010                    BDSC    0,,PR3                   by=0,bit=0,n=*X0

      724     3692    2       RETURN;

   3692  3 000505   000115 221200 0                  LDX1  ! ITEM_SIGN+2
         3 000506   000001 702211                    TSX2  ! 1,X1

      725     3693    2   END BUILD_KEY;
      726     3694        %EJECT;
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:127  
      727     3695    1   GET_EIS_ADDR: PROC;

   3695  3 000507   000116 741200 0     GET_EIS_ADDR STX1  ! ITEM_SIGN+3

      728     3696        /**/
      729     3697        /*The routine take the eis discriptors stored in the schema file and breaks out
      730     3698          breaks out the fields that are needed to construct the key
      731     3699        */
      732     3700        /**/
      733     3701    2       IF EIS_TEMP.BEIST = '0'B THEN

   3701  3 000510   000000 234000 xsym               SZN     EIS_TEMP
         3 000511   000526 604000 3                  TMI     s:3707

      734     3702    3       DO;

      735     3703    3           BIT_SIZE=9*ADSC.SIZE;

   3703  3 000512   000107 470400 0                  LDP0    EIS$
         3 000513   000000 236100                    LDQ     0,,PR0
         3 000514   007777 376007                    ANQ     4095,DL
         3 000515   000011 402007                    MPY     9,DL
         3 000516   000112 756000 0                  STQ     BIT_SIZE

      736     3704    3           BIT_DISP=9*(ADSC.BYT_OFF / 2);

   3704  3 000517   000000 236100                    LDQ     0,,PR0
         3 000520   000017 772000                    QRL     15
         3 000521   000007 376007                    ANQ     7,DL
         3 000522   000001 772000                    QRL     1
         3 000523   000011 402007                    MPY     9,DL
         3 000524   000111 756000 0                  STQ     BIT_DISP

      737     3705    3           END;

   3705  3 000525   000554 710000 3                  TRA     s:3713

PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:128  
      738     3706    3       ELSE DO;

      739     3707    3           BIT_SIZE=4*NDSC.SIZE;

   3707  3 000526   000107 470400 0                  LDP0    EIS$
         3 000527   000000 236100                    LDQ     0,,PR0
         3 000530   000002 736000                    QLS     2
         3 000531   000374 376007                    ANQ     252,DL
         3 000532   000112 756000 0                  STQ     BIT_SIZE

      740     3708    3           BIT_SIZE = BIT_SIZE + ((1+NDSC.SIZE)/2);

   3708  3 000533   000000 236100                    LDQ     0,,PR0
         3 000534   000077 376007                    ANQ     63,DL
         3 000535   000001 036007                    ADLQ    1,DL
         3 000536   000001 772000                    QRL     1
         3 000537   000112 036000 0                  ADLQ    BIT_SIZE
         3 000540   000112 756000 0                  STQ     BIT_SIZE

      741     3709    3           BIT_DISP=4*NDSC.BYT_OFF;

   3709  3 000541   000000 236100                    LDQ     0,,PR0
         3 000542   000015 772000                    QRL     13
         3 000543   000034 376007                    ANQ     28,DL
         3 000544   000111 756000 0                  STQ     BIT_DISP

      742     3710    3           BIT_DISP = BIT_DISP + ((1+NDSC.BYT_OFF)/2);

   3710  3 000545   000000 236100                    LDQ     0,,PR0
         3 000546   000017 772000                    QRL     15
         3 000547   000007 376007                    ANQ     7,DL
         3 000550   000001 036007                    ADLQ    1,DL
         3 000551   000001 772000                    QRL     1
         3 000552   000111 036000 0                  ADLQ    BIT_DISP
         3 000553   000111 756000 0                  STQ     BIT_DISP

      743     3711         /* ((1+NDSC.x)/2) counts for uncounted bits of pack dec */
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:129  
      744     3712    3           END;

      745     3713    2       RETURN;

   3713  3 000554   000001 702211                    TSX2  ! 1,X1

BUFER_DI
 Sect OctLoc
   0     004   ****** ******   ****** ******   ****** ******   ****** ******    ................

CONTINUE_THIS_REC
 Sect OctLoc
   0     104   0***** ******                                                    ....

(unnamed)
 Sect OctLoc
   0     114   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   4     000   001777 777640   000000 000000   040040 040040   000000 006000    ........    ....
   4     004   000003 000000   000000 006000   000110 006000                    .........H..
      746     3714    2   END GET_EIS_ADDR;
      747     3715    1   END ZIU$BLDKEY;
      748     3716        %EOD;

PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:130  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$BLDKEY.

   Procedure ZIU$BLDKEY requires 365 words for executable code.
   Procedure ZIU$BLDKEY is declared NOAUTO and requires 84 words of local(STATIC) storage.
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:131  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:132  
          MINI XREF LISTING

ADSC.BYT_OFF
        43**DCL      3704>>ASSIGN
ADSC.EISADDR
        42**DCL      3641>>ASSIGN   3646>>ASSIGN
ADSC.SIZE
        46**DCL      3703>>ASSIGN
BIT_DISP
        76**DCL      3642>>ASSIGN   3647>>ASSIGN   3704<<ASSIGN   3709<<ASSIGN   3710<<ASSIGN   3710>>ASSIGN
BIT_SIZE
        77**DCL      3648>>ASSIGN   3703<<ASSIGN   3707<<ASSIGN   3708<<ASSIGN   3708>>ASSIGN
BPLDBK
        35**DCL      3631>>ASSIGN   3684>>ASSIGN   3686>>ASSIGN   3687>>ASSIGN
BREAK_FLAG
       413**DCL      3576>>IF
BUFFIN
        34**DCL      3564>>ASSIGN
BUFLNSF
       304**DCL      3593<<ASSIGN
BUFSF
       305**DCL      3592<<ASSIGN
BUILD_KEY
      3627**PROC     3558--CALL
CONTINUE_THIS_REC
        25**DCL      3554>>IF       3560<<ASSIGN   3562<<ASSIGN
COUNTSF
       355**DCL       356--REDEF
CURR_INDX
        93**DCL      3557<<ASSIGN   3557>>ASSIGN   3559>>IF       3618<<ASSIGN   3631>>ASSIGN   3632>>ASSIGN
      3635>>ASSIGN   3636>>DOINDEX  3689>>ASSIGN
DATA$
       523**DCL       524--IMP-PTR  3580>>IF       3603<<ASSIGN   3609>>IF       3611>>ASSIGN   3611>>ASSIGN
DATA_PG.ACT_DATA
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:133  
       536**DCL       537--REDEF     538--REDEF     539--REDEF
DATA_PG.ACT_DATA_18
       537**DCL      3609>>IF       3611>>ASSIGN
DATA_PG.OFF_LN.SEC
       535**DCL      3580>>IF
DCBSF
       284**DCL      3591<<ASSIGN
EIS$
        39**DCL        40--IMP-PTR    47--IMP-PTR  3638<<ASSIGN   3641>>ASSIGN   3644<<ASSIGN   3646>>ASSIGN
      3652>>ASSIGN   3653>>ASSIGN   3703>>ASSIGN   3704>>ASSIGN   3707>>ASSIGN   3708>>ASSIGN   3709>>ASSIGN
      3710>>ASSIGN
EIS_TEMP
        55**DCL      3637<<ASSIGN   3643<<ASSIGN
EIS_TEMP.BEIST
        56**DCL      3649>>IF       3701>>IF
ENCRP_SEEDSF
       313**DCL       314--REDEF    3595<<ASSIGN
END_OF_FILE
      3567**LABEL    3555--CALLALT
EOF IN PROCEDURE FIND_NXT_AVIL_REC
      3624**LABEL    3598--CALLALT
ERRCODESF
       315**DCL       320--REDEF
F$DCB.ACTPOS
      3225**DCL      3225--REDEF
F$DCB.ARS#
      3199**DCL      3199--REDEF
F$DCB.ATTR
      3218**DCL      3219--REDEF
F$DCB.BORROW
      3233**DCL      3233--REDEF    3233--REDEF    3233--REDEF
F$DCB.DCBNAME.L
      3247**DCL      3247--IMP-SIZ
F$DCB.EOMCHAR#
      3203**DCL      3203--REDEF
F$DCB.FLDID
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:134  
      3228**DCL      3228--REDEF
F$DCB.FORM$
      3222**DCL      3222--REDEF
F$DCB.FSECT
      3238**DCL      3238--REDEF
F$DCB.FSN#
      3215**DCL      3215--REDEF    3215--REDEF    3216--REDEF
F$DCB.HEADER$
      3221**DCL      3221--REDEF
F$DCB.IXTNSIZE#
      3219**DCL      3219--REDEF
F$DCB.LASTSTA$
      3208**DCL      3208--REDEF
F$DCB.LVL
      3234**DCL      3234--REDEF
F$DCB.NAME#.C
      3209**DCL      3209--REDEF
F$DCB.NOEOF
      3231**DCL      3231--REDEF
F$DCB.NRECS#
      3220**DCL      3220--REDEF
F$DCB.NRECX
      3239**DCL      3239--REDEF
F$DCB.OHDR
      3231**DCL      3231--REDEF
F$DCB.ORG#
      3214**DCL      3214--REDEF
F$DCB.PRECNO
      3237**DCL      3237--REDEF
F$DCB.RCSZ
      3243**DCL      3243--REDEF
F$DCB.RES#
      3210**DCL      3210--REDEF
F$DCB.SETX
      3222**DCL      3222--REDEF
F$DCB.TAB$
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:135  
      3222**DCL      3222--REDEF
F$DCB.TDA
      3236**DCL      3237--REDEF
F$DCB.WSN#
      3210**DCL      3210--REDEF
FIDSF_RD
       331**DCL       332--REDEF
FIND_NXT_AVIL_REC
      3569**PROC     3555--CALL
FULLSF
       302**DCL      3594<<ASSIGN
GET_EIS_ADDR
      3695**PROC     3639--CALL     3645--CALL
HELPCODE
       349**DCL       354--REDEF
I
       387**DCL      3579<<ASSIGN   3612>>DOWHILE  3612>>DOWHILE  3614<<ASSIGN   3614>>ASSIGN   3616>>IF
      3618>>ASSIGN   3636<<DOINDEX
ICHKSUM
       414**DCL       415--REDEF
ITEM$
        28**DCL        26--IMP-PTR    27--IMP-PTR  3646<<ASSIGN   3647<<ASSIGN   3647>>ASSIGN   3650>>ASSIGN
      3656>>CALL     3660>>CALL     3664>>CALL     3668>>CALL     3685<<ASSIGN   3686<<ASSIGN   3686>>ASSIGN
      3691>>ASSIGN
ITEM_LN
        38**DCL        26--IMP-SIZ    27--IMP-SIZ  3648<<ASSIGN   3650>>ASSIGN   3650>>ASSIGN   3652<<ASSIGN
      3656>>CALL     3656>>CALL     3656<>CALL     3660>>CALL     3660>>CALL     3660<>CALL     3664>>CALL
      3664>>CALL     3664<>CALL     3668>>CALL     3668>>CALL     3668<>CALL     3684<<ASSIGN   3687<<ASSIGN
      3691>>ASSIGN   3691>>ASSIGN
ITEM_SIGN
      3551**DCL      3653<<ASSIGN   3654>>DOCASE
ITEM_TEMP
        27**DCL      3650<<ASSIGN   3650>>ASSIGN   3691<<ASSIGN   3691>>ASSIGN
ITEM_TEMP_UNL
        26**DCL      3656<>CALL     3656<>CALL     3660<>CALL     3660<>CALL     3664<>CALL     3664<>CALL
      3668<>CALL     3668<>CALL
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:136  
I_O_BUF
       393**DCL      3592--ASSIGN   3603--ASSIGN
I_O_BUF$
       392**DCL       393--IMP-PTR  3592>>ASSIGN   3603>>ASSIGN
I_O_KEY
       411**DCL      3590<<ASSIGN   3597>>ASSIGN
I_O_SIZE
       395**DCL      3585>>IF       3587<<ASSIGN   3588>>IF       3589<<ASSIGN   3593>>ASSIGN
J
       388**DCL      3635<<ASSIGN   3637>>ASSIGN   3638>>ASSIGN   3643>>ASSIGN   3644>>ASSIGN   3673<<ASSIGN
      3673>>ASSIGN
KEYBLD_UNWIND
        94**DCL      3577>>UNWIND
KEYIN
        12**DCL        10--PROC     3564<<ASSIGN
KEYSF
       286**DCL      3596<<ASSIGN
KEYSZ
        11**DCL        10--PROC       12--IMP-SIZ  3563<<ASSIGN   3564>>ASSIGN
KEYVSF
       287**DCL       292--REDEF
KEYVSF.IDSKEY
       290**DCL      3597<<ASSIGN
KEYVSF.WD_ONE
       289**DCL       290--REDEF
LAST_MEMBER
        92**DCL      3612>>DOWHILE  3616>>IF
MSGCODE
       321**DCL       322--REDEF
NDSC.BYT_OFF
        50**DCL      3709>>ASSIGN   3710>>ASSIGN
NDSC.SIGN
        52**DCL      3653>>ASSIGN
NDSC.SIZE
        54**DCL      3652>>ASSIGN   3707>>ASSIGN   3708>>ASSIGN
OUT_INDX
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:137  
       394**DCL      3585>>IF       3599<<ASSIGN   3602<<ASSIGN   3602>>ASSIGN   3603>>ASSIGN
OUT_KEY
        30**DCL        34--REDEF    3640--ASSIGN   3688--ASSIGN
OUT_KEY.IXID
        32**DCL      3632<<ASSIGN
OUT_KEY.LEN
        31**DCL      3563>>ASSIGN   3631<<ASSIGN
OUT_KEY.VALUE
        33**DCL      3633<<ASSIGN
RB
       374**DCL      3582<<ASSIGN   3582>>ASSIGN   3583>>IF       3587>>ASSIGN   3590>>ASSIGN   3683>>ASSIGN
RE
       375**DCL      3583>>IF       3587>>ASSIGN
REC$
       373**DCL       396--IMP-PTR  3559>>IF       3611<<ASSIGN   3612>>DOWHILE  3646>>ASSIGN
REC_CNT
        37**DCL      3578<<ASSIGN   3578>>ASSIGN   3580>>IF       3601<<ASSIGN   3609>>IF       3611>>ASSIGN
      3683>>ASSIGN
REC_DATA_LN
       401**DCL       400--IMP-SIZ
REC_DBK
        74**DCL        75--REDEF    3683<<ASSIGN   3685--ASSIGN
REC_FRMT.TYPE
       398**DCL      3559>>IF       3612>>DOWHILE
SCHEMA_TBL.FR_LOC
        91**DCL      3643>>ASSIGN   3644--ASSIGN
SCHEMA_TBL.SYN_FR_LOC
        83**DCL      3637>>ASSIGN   3638--ASSIGN
SCHEMA_TBL.WRD1
        80**DCL        83--REDEF
SCHEMA_TBL.WRD1.KEY_TYP#
        82**DCL      3632>>ASSIGN
SCHEMA_TBL.WRD1.REC_TYP#
        81**DCL      3559>>IF       3612>>DOWHILE
SCHEMA_TBL.WRD2
        85**DCL        90--REDEF      91--REDEF
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:138  
SCHEMA_TBL.WRD2.CNT#
        89**DCL      3636>>DOINDEX
SCHEMA_TBL.WRD2.INDX#
        86**DCL      3635>>ASSIGN
SCHEMA_TBL.WRD2.SIZ#
        88**DCL      3631>>ASSIGN   3689>>ASSIGN
SCHEMA_TBL$
        78**DCL        79--IMP-PTR  3559>>IF       3612>>DOWHILE  3631>>ASSIGN   3632>>ASSIGN   3635>>ASSIGN
      3636>>DOINDEX  3637>>ASSIGN   3638>>ASSIGN   3643>>ASSIGN   3644>>ASSIGN   3689>>ASSIGN
SHIFT_NUMERIC_FDEC
        21**DCL-ENT  3656--CALL
SHIFT_NUMERIC_LSIGN
        22**DCL-ENT  3660--CALL
SHIFT_NUMERIC_NSIGN
        24**DCL-ENT  3668--CALL
SHIFT_NUMERIC_TSIGN
        23**DCL-ENT  3664--CALL
SYS_FUNC_READ
        19**DCL-ENT  3598--CALL
TEMP_BIT$
        29**DCL      3640<<ASSIGN   3641<<ASSIGN   3641>>ASSIGN   3642<<ASSIGN   3642>>ASSIGN   3650>>ASSIGN
      3656>>CALL     3660>>CALL     3664>>CALL     3668>>CALL     3688<<ASSIGN   3689<<ASSIGN   3689>>ASSIGN
      3691>>ASSIGN
UWA.AC_REC.CALC_NEXT
      1347**DCL      1348--REDEF
UWA.AC_REC.CALC_PRIOR
      1356**DCL      1357--REDEF
UWA.AC_REC.DEFAULTS
      1305**DCL      1306--REDEF
UWA.AC_REC.FILE_CODE
      1310**DCL      1311--REDEF
UWA.AC_REC.FLAG1.ERROR_TYPE
      1307**DCL      1308--REDEF
UWA.AC_REC.LPP
      1337**DCL      3683>>ASSIGN   3683>>ASSIGN
UWA.AC_REC.PG_TYPE
PL6.E3A0      #002=ZIU$BLDKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:139  
      1322**DCL      1323--REDEF
UWA.AD_REC.ADDATE
      1287**DCL      1288--REDEF
ZI$DIR.ALTKEY
      3478**DCL      3479--REDEF    3480--REDEF
ZI$DIR.AREAFID
      3444**DCL      3445--REDEF
ZI$DIR.AREA_NM.DCB#
      3511**DCL      3591>>ASSIGN
ZI$DIR.DATE
      3483**DCL      3487--REDEF
ZI$DIR.DEST_SEED
      3439**DCL      3440--REDEF    3441--REDEF
ZI$DIR.ENCP_SEED
      3436**DCL      3437--REDEF    3438--REDEF    3595>>ASSIGN
ZI$DIR.REPRT_ZERO
      3470**DCL      3471--REDEF
ZI$DIR.SCHFID
      3442**DCL      3443--REDEF
ZI$DIR.TIME
      3488**DCL      3493--REDEF

PL6.E3A0      #003=ZIU$CMPKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:140  
      749        1        /*M*  ZIU$CMPKEY       KEY COMPARISON PROC FOR SORT IN ZIU$KEYBLD */
      750        2        /*T***********************************************************/
      751        3        /*T*                                                         */
      752        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      753        5        /*T*                                                         */
      754        6        /*T***********************************************************/
      755        7        /*****************************************************************
      756        8              KEY COMPARISON ROUTINE FOR X$SORT IN KEY REBUILD
      757        9        ********************************************************************/
      758       10        ZIU$CMPKEY: PROC(FIRSTKEY,SECONDKEY,RESULT) NOAUTO;
      759       11    1   DCL MAX_KEY_SIZE SBIN WORD SYMREF;
      760       12    1   DCL DUP_KEYS SBIN WORD STATIC SYMDEF INIT(0);
      761       13    1   DCL 1 FIRSTKEY,
      762       14    1         2 CNT UBIN BYTE UNAL,
      763       15    1         2 VAL CHAR(256) UNAL;
      764       16    1   DCL 1 SECONDKEY,
      765       17    1         2 CNT UBIN BYTE UNAL,
      766       18    1         2 VAL CHAR(256) UNAL;
      767       19    1   DCL RESULT SBIN WORD;
      768       20    1   DCL FIRST_EQ_SECOND SBIN CONSTANT INIT(0);
      769       21    1   DCL FIRST_LT_SECOND SBIN CONSTANT INIT(1);
      770       22    1   DCL FIRST_GT_SECOND SBIN CONSTANT INIT(2);
      771       23    1   DCL I SBIN STATIC;
      772       24         /* *              * *            * *          * *             * */
      773       25    1       IF SUBSTR(FIRSTKEY.VAL,0,FIRSTKEY.CNT) > SUBSTR(SECONDKEY.VAL,0,SECONDKEY.CNT)
                25                THEN
      774       26    1           RESULT = FIRST_GT_SECOND;
      775       27    1       ELSE
      776       28    1           RESULT = FIRST_LT_SECOND;
      777       29    1       RETURN;
      778       30    1   END ZIU$CMPKEY;
      779       31        %EOD;

PL6.E3A0      #003=ZIU$CMPKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:141  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$CMPKEY.

   Procedure ZIU$CMPKEY requires 25 words for executable code.
   Procedure ZIU$CMPKEY is declared NOAUTO and requires 8 words of local(STATIC) storage.

PL6.E3A0      #003=ZIU$CMPKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:142  

 Object Unit name= ZIU$CMPKEY                                 File name= ZIU$KEYBLD.:ZIC0TOU
 UTS= SEP 05 '97 13:17:22.00 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     8     10  ZIU$CMPKEY
    1  RoData even  UTS      3      3  ZIU$CMPKEY
    2   Proc  even  none    25     31  ZIU$CMPKEY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        3  ZIU$CMPKEY

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      4  DUP_KEYS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_STATIC_3

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     MAX_KEY_SIZE
PL6.E3A0      #003=ZIU$CMPKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:143  


      749        1        /*M*  ZIU$CMPKEY       KEY COMPARISON PROC FOR SORT IN ZIU$KEYBLD */
      750        2        /*T***********************************************************/
      751        3        /*T*                                                         */
      752        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      753        5        /*T*                                                         */
      754        6        /*T***********************************************************/
      755        7        /*****************************************************************
      756        8              KEY COMPARISON ROUTINE FOR X$SORT IN KEY REBUILD
      757        9        ********************************************************************/
      758       10        ZIU$CMPKEY: PROC(FIRSTKEY,SECONDKEY,RESULT) NOAUTO;

     10  2 000000   000000 700200 xent  ZIU$CMPKEY   TSX0  ! X66_STATIC_3
         2 000001   000000 000003 0                  ZERO    0,3

      759       11    1   DCL MAX_KEY_SIZE SBIN WORD SYMREF;
      760       12    1   DCL DUP_KEYS SBIN WORD STATIC SYMDEF INIT(0);
      761       13    1   DCL 1 FIRSTKEY,
      762       14    1         2 CNT UBIN BYTE UNAL,
      763       15    1         2 VAL CHAR(256) UNAL;
      764       16    1   DCL 1 SECONDKEY,
      765       17    1         2 CNT UBIN BYTE UNAL,
      766       18    1         2 VAL CHAR(256) UNAL;
      767       19    1   DCL RESULT SBIN WORD;
      768       20    1   DCL FIRST_EQ_SECOND SBIN CONSTANT INIT(0);
      769       21    1   DCL FIRST_LT_SECOND SBIN CONSTANT INIT(1);
      770       22    1   DCL FIRST_GT_SECOND SBIN CONSTANT INIT(2);
      771       23    1   DCL I SBIN STATIC;
      772       24         /* *              * *            * *          * *             * */
      773       25    1       IF SUBSTR(FIRSTKEY.VAL,0,FIRSTKEY.CNT) > SUBSTR(SECONDKEY.VAL,0,SECONDKEY.CNT)
                25                THEN

     25  2 000002   000001 470400 0                  LDP0    @FIRSTKEY
         2 000003   000000 101500                    MRL     fill='000'O
         2 000004   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000005   000006 000002 0                  ADSC9   I+1                      cn=0,n=2
         2 000006   000006 220000 0                  LDX0    I+1
PL6.E3A0      #003=ZIU$CMPKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:144  
         2 000007   000002 471400 0                  LDP1    @SECONDKEY
         2 000010   000000 101500                    MRL     fill='000'O
         2 000011   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000012   000007 000002 0                  ADSC9   I+2                      cn=0,n=2
         2 000013   000007 221000 0                  LDX1    I+2
         2 000014   040140 106540                    CMPC    fill='040'O
         2 000015   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1
         2 000016   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         2 000017   000024 603000 2                  TRC     s:28

      774       26    1           RESULT = FIRST_GT_SECOND;

     26  2 000020   000003 473400 0                  LDP3    @RESULT
         2 000021   000002 235000 1                  LDA     FIRST_GT_SECOND
         2 000022   300000 755100                    STA     0,,PR3
         2 000023   000027 710000 2                  TRA     s:29

      775       27    1       ELSE
      776       28    1           RESULT = FIRST_LT_SECOND;

     28  2 000024   000003 473400 0                  LDP3    @RESULT
         2 000025   000001 235000 1                  LDA     FIRST_LT_SECOND
         2 000026   300000 755100                    STA     0,,PR3

      777       29    1       RETURN;

     29  2 000027   000000 221200 0                  LDX1  ! 0
         2 000030   000001 702211                    TSX2  ! 1,X1

DUP_KEYS
 Sect OctLoc
   0     004   000000 000000                                                    ....

FIRST_EQ_SECOND
 Sect OctLoc
   1     000   000000 000000                                                    ....

PL6.E3A0      #003=ZIU$CMPKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:145  
FIRST_LT_SECOND
 Sect OctLoc
   1     001   000000 000001                                                    ....

FIRST_GT_SECOND
 Sect OctLoc
   1     002   000000 000002                                                    ....
      778       30    1   END ZIU$CMPKEY;
      779       31        %EOD;

PL6.E3A0      #003=ZIU$CMPKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:146  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$CMPKEY.

   Procedure ZIU$CMPKEY requires 25 words for executable code.
   Procedure ZIU$CMPKEY is declared NOAUTO and requires 8 words of local(STATIC) storage.
PL6.E3A0      #003=ZIU$CMPKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:147  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=ZIU$CMPKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:148  
          MINI XREF LISTING

FIRSTKEY
        13**DCL        10--PROC
FIRSTKEY.CNT
        14**DCL        25>>IF
FIRSTKEY.VAL
        15**DCL        25>>IF
FIRST_GT_SECOND
        22**DCL        26>>ASSIGN
FIRST_LT_SECOND
        21**DCL        28>>ASSIGN
RESULT
        19**DCL        10--PROC       26<<ASSIGN     28<<ASSIGN
SECONDKEY
        16**DCL        10--PROC
SECONDKEY.CNT
        17**DCL        25>>IF
SECONDKEY.VAL
        18**DCL        25>>IF

PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:149  
      780        1        /*M* ZIU$WRTKEY  OUTPUT ROUTINE FOR X$SORT IN KEYRBLD UTILITY      */
      781        2        /*T***********************************************************/
      782        3        /*T*                                                         */
      783        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      784        5        /*T*                                                         */
      785        6        /*T***********************************************************/
      786        7        /********************************************************************
      787        8              WRITE KEY ROUTINE - OUTPUT ROUTINE TO X$SORT FOR KEYRBLD     **
      788        9        ********************************************************************/
      789       10        ZIU$WRTKEY: PROC(KEY,KEY_SIZE) NOAUTO ALTRET;
      790       11    1   DCL 1 KEY ,
      791       12    1         2 LEN UBIN BYTE UNAL,
      792       13    1         2 IXID UBIN HALF UNAL,
      793       14    1         2 TXT CHAR(KEY_LEN) UNAL;
      794       15    1   DCL KEY_SIZE UBIN WORD;
      795       16    1   DCL DESTDCB UBIN HALF SYMREF;
      796       17         %INCLUDE CP_6_SUBS;
      797      557         %INCLUDE ZI_GLOBAL_DBUTIL;
      798      735         %SYS_FUNC;
      799      827         %MISC_DCLS;
      800      880    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      801      881    1   DCL ZERO_SUP ENTRY(3);
      802      882    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      803      883    1   DCL KEY_LEN UBIN WORD STATIC;
      804      884    1   DCL DUPS_ALLOWED UBIN WORD STATIC;
      805      885    1   DCL CURR_IXID UBIN WORD STATIC INIT(0);
      806      886    1   DCL BPLDBK SBIN WORD SYMREF;
      807      887    1   DCL KEYBLD_UNWIND REMEMBER SYMREF;
      808      888    1   DCL DBK1 CHAR(10) STATIC UNAL;
      809      889    1   DCL DBK2 CHAR(10) STATIC UNAL;
      810      890    1   DCL SCHEMA_TBL$ PTR SYMREF ALIGNED;
      811      891    1   DCL 1 SCHEMA_TBL (0:0) BASED(SCHEMA_TBL$) ALIGNED,
      812      892    1         2 WRD1,
      813      893    1           3 REC_TYP# UBIN HALF UNAL,
      814      894    1           3 KEY_TYP# UBIN HALF UNAL,
      815      895    1         2 WRD2,
      816      896    1           3 * UBIN HALF UNAL,
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:150  
      817      897    1           3 NO_DUPS# BIT(1) UNAL,
      818      898    1           3 * BIT(17) UNAL;
      819      899    1   DCL 1 PREV_KEY STATIC,
      820      900    1         2 LEN UBIN BYTE UNAL,
      821      901    1         2 IXID UBIN HALF UNAL INIT(0),
      822      902    1         2 TXT CHAR(253) UNAL INIT(' ');
      823      903    1   DCL UBIN18 UBIN(18) BASED(DBK$);
      824      904    1   DCL UBIN27 UBIN(27) BASED(DBK$);
      825      905    1   DCL UBIN36 UBIN(36) BASED(DBK$);
      826      906    1   DCL DBK$ PTR STATIC;
      827      907    1   DCL KVAL UBIN WORD STATIC UNAL;
      828      908         /* *       * *       * *       * *       * *       * *        * */
      829      909    1       IF KEY_SIZE = 0 THEN
      830      910    1           RETURN;
      831      911
      832      912    1       IF BREAK_FLAG > 0 THEN
      833      913    1           UNWIND TO KEYBLD_UNWIND;
      834      914
      835      915    1       IF KEY.IXID ~= CURR_IXID THEN
      836      916    2       DO;
      837      917    2           CURR_IXID = KEY.IXID;
      838      918    2           KEY_LEN = KEY.LEN -2; /* Subtrct kex ixid from size*/
      839      919    2           I=0;
      840      920    3           DO WHILE(CURR_IXID ~= SCHEMA_TBL.WRD1.KEY_TYP#(I));
      841      921    3               I=I+1;
      842      922    3               END;
      843      923    2           IF SCHEMA_TBL.WRD2.NO_DUPS#(I) = %YES# THEN
      844      924    3           DO;
      845      925    3               PREV_KEY = KEY;
      846      926    3               DUPS_ALLOWED = 0;
      847      927    3               END;
      848      928    2           ELSE
      849      929    2               DUPS_ALLOWED = 1;
      850      930    2           END;
      851      931    1       ELSE
      852      932    1           IF DUPS_ALLOWED = 0 THEN
      853      933    2           DO;
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:151  
      854      934    2               KEY_LEN = KEY_LEN-BPLDBK; /* Adjust len short of DBK */
      855      935    2               IF KEY.TXT = SUBSTR(PREV_KEY.TXT,0,KEY_LEN) THEN
      856      936    3               DO;
      857      937    3                   DBK$ = ADDR(KEY.TXT);
      858      938    3                   DBK$ = PINCRC(DBK$,KEY_LEN);
      859      939    3                   CALL GET_KEY;
      860      940    3                   CALL BINCHAR(DBK1,KVAL);
      861      941    3                   CALL ZERO_SUP(DBK1,10,'1'B);
      862      942    3                   DBK$ = ADDR(PREV_KEY.TXT);
      863      943    3                   DBK$ = PINCRC(DBK$,KEY_LEN);
      864      944    3                   CALL GET_KEY;
      865      945    3                   CALL BINCHAR(DBK2,KVAL);
      866      946    3                   CALL ZERO_SUP(DBK2,10,'1'B);
      867      947         /*E* ERROR: ZIU-03011-C
      868      948                       MESSAGE: Alternate key at DBK# %U1 duplicates key at DBK# %U2
      869      949                       */
      870      950    3    /**/           ERR_INSERT.CNT(0) = 10;
      871      951    3    /**/           ERR_INSERT.CNT(1) = 10;
      872      952    3    /**/           ERR_INSERT.TEXT(0) = DBK1;
      873      953    3    /**/           ERR_INSERT.TEXT(1) = DBK2;
      874      954    3                   ERRCODESF.ERR# = 3011;
      875      955    3                   MSGCODE = ERRCODE_RDEF;
      876      956    3                   CALL SYS_FUNC_ERRMSG;
      877      957    3                   END;
      878      958    2               KEY_LEN = KEY_LEN+BPLDBK;
      879      959    2               PREV_KEY = KEY;
      880      960    2               END;
      881      961    1   /**/ DCBSF = DESTDCB; /*  KEY FILE OUT */
      882      962    1   /**/ BUFSF = VECTOR(NIL) ;
      883      963    1   /**/ BUFLNSF = 0;
      884      964    1   /**/ VFCSF = %NO# ;
      885      965    1   /**/ NOTIMESF = %YES# ;
      886      966    1   /**/ KEYVSF = KEY;
      887      967    1       CALL SYS_FUNC_WRIT ALTRET(ALT_WRTKEY);
      888      968    1       RETURN;
      889      969
      890      970    1   GET_KEY: PROC;
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:152  
      891      971    2       IF BPLDBK = 2 THEN
      892      972    2           KVAL = UBIN18;
      893      973    2       ELSE
      894      974    2           IF BPLDBK = 3 THEN
      895      975    2               KVAL = UBIN27;
      896      976    2           ELSE
      897      977    2               KVAL = UBIN36;
      898      978    2   END GET_KEY;
      899      979
      900      980    1   ALT_WRTKEY:
      901      981    1       ERRCODESF.ERR# = 3009;
      902      982    1       MSGCODE = ERRCODE_RDEF;
      903      983    1       ERR_INSERT.CNT(0) = KEY.LEN;
      904      984    1       ERR_INSERT.TEXT(0) = KEY.TXT;
      905      985    1   /**/ SUBMESSF = %YES#;
      906      986         /*E* ERROR: ZIU-03009-C
      907      987            MESSAGE: Failure at key %U1.           */
      908      988    1       CALL SYS_FUNC_ERRMSG;
      909      989    1       UNWIND TO KEYBLD_UNWIND;
      910      990    1   END ZIU$WRTKEY;

PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:153  
--  Include file information  --

   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$WRTKEY.

   Procedure ZIU$WRTKEY requires 193 words for executable code.
   Procedure ZIU$WRTKEY is declared NOAUTO and requires 82 words of local(STATIC) storage.

    No errors detected in file ZIU$KEYBLD.:ZIC0TSI    .

PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:154  

 Object Unit name= ZIU$WRTKEY                                 File name= ZIU$KEYBLD.:ZIC0TOU
 UTS= SEP 05 '97 13:17:23.68 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    82    122  ZIU$WRTKEY
    1   DCB   even  none     0      0  M$LO
    2   Proc  even  none   193    301  ZIU$WRTKEY
    3  RoData even  none    14     16  ZIU$WRTKEY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  ZIU$WRTKEY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 ZERO_SUP
 yes     yes           Std       0 SYS_FUNC_ERRMSG
 yes     yes           Std       0 SYS_FUNC_WRIT
                       nStd      0 X66_STATIC_2
                       nStd      0 X66_SUNWIND
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:155  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DESTDCB                               BLKLSF                                KEYLSF
     KEYXSF                                DCBSF                                 ORGSF
     KEYSF                                 KEYVSF                                ACSSF
     NOTIMESF                              FUNSF                                 ASNSF
     TESTSF                                XTENSIZESF                            DISPSF
     WAITSF                                VFCSF                                 FULLSF
     BKUPSF                                BUFLNSF                               BUFSF
     SOURCESF                              DESTSF                                DATESF
     TIMESF                                UTSSF                                 DAYSF
     TSTAMPSF                              ENCRP_SEEDSF                          ERRCODESF
     MSGCODE                               INCL_ERR                              ERR_INSERT
     FIDSF_RD                              ACNT                                  EXISTSF
     SHARESF                               DCBNMSF                               KEYRSF
     NO_KEYSF                              REASGNSF                              CARRY_ATTRIBUTESF
     SUBMESSF                              SPKY_OPNSF                            POSSF
     ERRFLGSF                              MERGESF                               FSA_FLAG
     RELGSF                                UNUSED                                HELPCODE
     COUNTSF                               INDEXSF                               GAP
     PSNSF                                 ACNTSF                                KEY_SHADWSF
     REC$                                  RB                                    RE
     IE                                    IB                                    CNT
     ICNT                                  RCNT                                  SCNT
     FIRST_SET                             RETCNT                                DMPCNT
     KCNT                                  ACNT_IDX                              I
     J                                     K                                     X
     STEPCC                                I_O_BUF$                              OUT_INDX
     I_O_SIZE                              REC_DATA_LN                           M$LO
     B$TCB$                                B$ROS$                                B$JIT$
     KEYFID                                I_O_KEY                               RESTART
     BREAK_FLAG                            ICHKSUM                               ITMCNT
     GAP1                                  BPLDBK                                KEYBLD_UNWIND
     SCHEMA_TBL$
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:156  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:157  


      780        1        /*M* ZIU$WRTKEY  OUTPUT ROUTINE FOR X$SORT IN KEYRBLD UTILITY      */
      781        2        /*T***********************************************************/
      782        3        /*T*                                                         */
      783        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      784        5        /*T*                                                         */
      785        6        /*T***********************************************************/
      786        7        /********************************************************************
      787        8              WRITE KEY ROUTINE - OUTPUT ROUTINE TO X$SORT FOR KEYRBLD     **
      788        9        ********************************************************************/
      789       10        ZIU$WRTKEY: PROC(KEY,KEY_SIZE) NOAUTO ALTRET;

     10  2 000000   000000 700200 xent  ZIU$WRTKEY   TSX0  ! X66_STATIC_2
         2 000001   000000 000002 0                  ZERO    0,2

      790       11    1   DCL 1 KEY ,
      791       12    1         2 LEN UBIN BYTE UNAL,
      792       13    1         2 IXID UBIN HALF UNAL,
      793       14    1         2 TXT CHAR(KEY_LEN) UNAL;
      794       15    1   DCL KEY_SIZE UBIN WORD;
      795       16    1   DCL DESTDCB UBIN HALF SYMREF;
      796       17         %INCLUDE CP_6_SUBS;
      797      557         %INCLUDE ZI_GLOBAL_DBUTIL;
      798      735         %SYS_FUNC;
      799      827         %MISC_DCLS;
      800      880    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      801      881    1   DCL ZERO_SUP ENTRY(3);
      802      882    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      803      883    1   DCL KEY_LEN UBIN WORD STATIC;
      804      884    1   DCL DUPS_ALLOWED UBIN WORD STATIC;
      805      885    1   DCL CURR_IXID UBIN WORD STATIC INIT(0);
      806      886    1   DCL BPLDBK SBIN WORD SYMREF;
      807      887    1   DCL KEYBLD_UNWIND REMEMBER SYMREF;
      808      888    1   DCL DBK1 CHAR(10) STATIC UNAL;
      809      889    1   DCL DBK2 CHAR(10) STATIC UNAL;
      810      890    1   DCL SCHEMA_TBL$ PTR SYMREF ALIGNED;
      811      891    1   DCL 1 SCHEMA_TBL (0:0) BASED(SCHEMA_TBL$) ALIGNED,
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:158  
      812      892    1         2 WRD1,
      813      893    1           3 REC_TYP# UBIN HALF UNAL,
      814      894    1           3 KEY_TYP# UBIN HALF UNAL,
      815      895    1         2 WRD2,
      816      896    1           3 * UBIN HALF UNAL,
      817      897    1           3 NO_DUPS# BIT(1) UNAL,
      818      898    1           3 * BIT(17) UNAL;
      819      899    1   DCL 1 PREV_KEY STATIC,
      820      900    1         2 LEN UBIN BYTE UNAL,
      821      901    1         2 IXID UBIN HALF UNAL INIT(0),
      822      902    1         2 TXT CHAR(253) UNAL INIT(' ');
      823      903    1   DCL UBIN18 UBIN(18) BASED(DBK$);
      824      904    1   DCL UBIN27 UBIN(27) BASED(DBK$);
      825      905    1   DCL UBIN36 UBIN(36) BASED(DBK$);
      826      906    1   DCL DBK$ PTR STATIC;
      827      907    1   DCL KVAL UBIN WORD STATIC UNAL;
      828      908         /* *       * *       * *       * *       * *       * *        * */
      829      909    1       IF KEY_SIZE = 0 THEN

    909  2 000002   000002 470400 0                  LDP0    @KEY_SIZE
         2 000003   000000 235100                    LDA     0,,PR0
         2 000004   000007 601000 2                  TNZ     s:912

      830      910    1           RETURN;

    910  2 000005   000000 221200 0                  LDX1  ! 0
         2 000006   000001 702211                    TSX2  ! 1,X1

      831      911
      832      912    1       IF BREAK_FLAG > 0 THEN

    912  2 000007   000000 236000 xsym               LDQ     BREAK_FLAG
         2 000010   000014 604400 2                  TMOZ    s:915

      833      913    1           UNWIND TO KEYBLD_UNWIND;

    913  2 000011   000000 237200 xsym               LDAQ  ! KEYBLD_UNWIND
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:159  
         2 000012   000000 700200 xent               TSX0  ! X66_SUNWIND
         2 000013   000000 000200                    ZERO    0,128

      834      914
      835      915    1       IF KEY.IXID ~= CURR_IXID THEN

    915  2 000014   000001 471400 0                  LDP1    @KEY
         2 000015   000000 101500                    MRL     fill='000'O
         2 000016   100000 200002                    ADSC9   0,,PR1                   cn=1,n=2
         2 000017   000120 000004 0                  ADSC9   KVAL+3                   cn=0,n=4
         2 000020   000120 236000 0                  LDQ     KVAL+3
         2 000021   000005 116000 0                  CMPQ    CURR_IXID
         2 000022   000073 600000 2                  TZE     s:932

      836      916    2       DO;

      837      917    2           CURR_IXID = KEY.IXID;

    917  2 000023   000000 101500                    MRL     fill='000'O
         2 000024   100000 200002                    ADSC9   0,,PR1                   cn=1,n=2
         2 000025   000005 000004 0                  ADSC9   CURR_IXID                cn=0,n=4

      838      918    2           KEY_LEN = KEY.LEN -2; /* Subtrct kex ixid from size*/

    918  2 000026   000000 101500                    MRL     fill='000'O
         2 000027   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000030   000120 000004 0                  ADSC9   KVAL+3                   cn=0,n=4
         2 000031   000120 236000 0                  LDQ     KVAL+3
         2 000032   000002 136007                    SBLQ    2,DL
         2 000033   000003 756000 0                  STQ     KEY_LEN

      839      919    2           I=0;

    919  2 000034   000000 450000 xsym               STZ     I

      840      920    3           DO WHILE(CURR_IXID ~= SCHEMA_TBL.WRD1.KEY_TYP#(I));

PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:160  
    920  2 000035   000000 235000 xsym               LDA     I
         2 000036   000001 735000                    ALS     1
         2 000037   000000 473400 xsym               LDP3    SCHEMA_TBL$
         2 000040   300000 236105                    LDQ     0,AL,PR3
         2 000041   777777 376007                    ANQ     -1,DL
         2 000042   000005 116000 0                  CMPQ    CURR_IXID
         2 000043   000054 600000 2                  TZE     s:923

      841      921    3               I=I+1;

    921  2 000044   000000 054000 xsym               AOS     I

      842      922    3               END;

    922  2 000045   000000 235000 xsym               LDA     I
         2 000046   000001 735000                    ALS     1
         2 000047   000000 470400 xsym               LDP0    SCHEMA_TBL$
         2 000050   000000 236105                    LDQ     0,AL,PR0
         2 000051   777777 376007                    ANQ     -1,DL
         2 000052   000005 116000 0                  CMPQ    CURR_IXID
         2 000053   000044 601000 2                  TNZ     s:921

      843      923    2           IF SCHEMA_TBL.WRD2.NO_DUPS#(I) = %YES# THEN

    923  2 000054   000000 470400 xsym               LDP0    SCHEMA_TBL$
         2 000055   000001 236105                    LDQ     1,AL,PR0
         2 000056   400000 316007                    CANQ    -131072,DL
         2 000057   000070 600000 2                  TZE     s:929

      844      924    3           DO;

      845      925    3               PREV_KEY = KEY;

    925  2 000060   000003 720000 0                  LXL0    KEY_LEN
         2 000061   000003 621010                    EAX1    3,X0
         2 000062   000001 471400 0                  LDP1    @KEY
         2 000063   000000 100540                    MLR     fill='000'O
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:161  
         2 000064   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         2 000065   000014 000400 0                  ADSC9   PREV_KEY                 cn=0,n=256

      846      926    3               DUPS_ALLOWED = 0;

    926  2 000066   000004 450000 0                  STZ     DUPS_ALLOWED

      847      927    3               END;

    927  2 000067   000204 710000 2                  TRA     s:961

      848      928    2           ELSE
      849      929    2               DUPS_ALLOWED = 1;

    929  2 000070   000001 235007                    LDA     1,DL
         2 000071   000004 755000 0                  STA     DUPS_ALLOWED

      850      930    2           END;

    930  2 000072   000204 710000 2                  TRA     s:961

      851      931    1       ELSE
      852      932    1           IF DUPS_ALLOWED = 0 THEN

    932  2 000073   000004 235000 0                  LDA     DUPS_ALLOWED
         2 000074   000204 601000 2                  TNZ     s:961

      853      933    2           DO;

      854      934    2               KEY_LEN = KEY_LEN-BPLDBK; /* Adjust len short of DBK */

    934  2 000075   000003 236000 0                  LDQ     KEY_LEN
         2 000076   000000 136000 xsym               SBLQ    BPLDBK
         2 000077   000003 756000 0                  STQ     KEY_LEN

      855      935    2               IF KEY.TXT = SUBSTR(PREV_KEY.TXT,0,KEY_LEN) THEN

PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:162  
    935  2 000100   000000 620006                    EAX0    0,QL
         2 000101   000003 721000 0                  LXL1    KEY_LEN
         2 000102   040040 106540                    CMPC    fill='040'O
         2 000103   100000 600010                    ADSC9   0,,PR1                   cn=3,n=*X0
         2 000104   000014 600011 0                  ADSC9   PREV_KEY                 cn=3,n=*X1
         2 000105   000174 601000 2                  TNZ     s:958

      856      936    3               DO;

      857      937    3                   DBK$ = ADDR(KEY.TXT);

    937  2 000106   000001 236000 0                  LDQ     @KEY
         2 000107   600000 036007                    ADLQ    -65536,DL
         2 000110   000114 756000 0                  STQ     DBK$

      858      938    3                   DBK$ = PINCRC(DBK$,KEY_LEN);

    938  2 000111   000003 236000 0                  LDQ     KEY_LEN
         2 000112   000020 736000                    QLS     16
         2 000113   000114 036000 0                  ADLQ    DBK$
         2 000114   000114 756000 0                  STQ     DBK$

      859      939    3                   CALL GET_KEY;

    939  2 000115   000230 701000 2                  TSX1    GET_KEY
         2 000116   000000 011000                    NOP     0

      860      940    3                   CALL BINCHAR(DBK1,KVAL);

    940  2 000117   000115 235000 0                  LDA     KVAL
         2 000120   000044 773000                    LRL     36
         2 000121   000120 757000 0                  STAQ    KVAL+3
         2 000122   000000 301400                    BTD
         2 000123   000120 000010 0                  NDSC9   KVAL+3                   cn=0,s=lsgnf,sf=0,n=8
         2 000124   000006 030012 0                  NDSC9   DBK1                     cn=0,s=nosgn,sf=0,n=10

      861      941    3                   CALL ZERO_SUP(DBK1,10,'1'B);
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:163  

    941  2 000125   000003 630400 3                  EPPR0   3
         2 000126   000000 631400 3                  EPPR1   0
         2 000127   000000 701000 xent               TSX1    ZERO_SUP
         2 000130   000000 011000                    NOP     0

      862      942    3                   DBK$ = ADDR(PREV_KEY.TXT);

    942  2 000131   000006 236000 3                  LDQ     6
         2 000132   000114 756000 0                  STQ     DBK$

      863      943    3                   DBK$ = PINCRC(DBK$,KEY_LEN);

    943  2 000133   000003 236000 0                  LDQ     KEY_LEN
         2 000134   000020 736000                    QLS     16
         2 000135   000114 036000 0                  ADLQ    DBK$
         2 000136   000114 756000 0                  STQ     DBK$

      864      944    3                   CALL GET_KEY;

    944  2 000137   000230 701000 2                  TSX1    GET_KEY
         2 000140   000000 011000                    NOP     0

      865      945    3                   CALL BINCHAR(DBK2,KVAL);

    945  2 000141   000115 235000 0                  LDA     KVAL
         2 000142   000044 773000                    LRL     36
         2 000143   000120 757000 0                  STAQ    KVAL+3
         2 000144   000000 301400                    BTD
         2 000145   000120 000010 0                  NDSC9   KVAL+3                   cn=0,s=lsgnf,sf=0,n=8
         2 000146   000011 030012 0                  NDSC9   DBK2                     cn=0,s=nosgn,sf=0,n=10

      866      946    3                   CALL ZERO_SUP(DBK2,10,'1'B);

    946  2 000147   000007 630400 3                  EPPR0   7
         2 000150   000000 631400 3                  EPPR1   0
         2 000151   000000 701000 xent               TSX1    ZERO_SUP
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:164  
         2 000152   000000 011000                    NOP     0

      867      947         /*E* ERROR: ZIU-03011-C
      868      948                       MESSAGE: Alternate key at DBK# %U1 duplicates key at DBK# %U2
      869      949                       */
      870      950    3    /**/           ERR_INSERT.CNT(0) = 10;

    950  2 000153   012000 236003                    LDQ     5120,DU
         2 000154   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      871      951    3    /**/           ERR_INSERT.CNT(1) = 10;

    951  2 000155   000010 552040 xsym               STBQ    ERR_INSERT+8,'40'O

      872      952    3    /**/           ERR_INSERT.TEXT(0) = DBK1;

    952  2 000156   040000 100400                    MLR     fill='040'O
         2 000157   000006 000012 0                  ADSC9   DBK1                     cn=0,n=10
         2 000160   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      873      953    3    /**/           ERR_INSERT.TEXT(1) = DBK2;

    953  2 000161   040000 100400                    MLR     fill='040'O
         2 000162   000011 000012 0                  ADSC9   DBK2                     cn=0,n=10
         2 000163   000010 200036 xsym               ADSC9   ERR_INSERT+8             cn=1,n=30

      874      954    3                   ERRCODESF.ERR# = 3011;

    954  2 000164   000000 236000 xsym               LDQ     ERRCODESF
         2 000165   000012 376000 3                  ANQ     10
         2 000166   057030 276007                    ORQ     24088,DL
         2 000167   000000 756000 xsym               STQ     ERRCODESF

      875      955    3                   MSGCODE = ERRCODE_RDEF;

    955  2 000170   000000 756000 xsym               STQ     MSGCODE

PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:165  
      876      956    3                   CALL SYS_FUNC_ERRMSG;

    956  2 000171   000013 631400 3                  EPPR1   11
         2 000172   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         2 000173   000000 011000                    NOP     0

      877      957    3                   END;

      878      958    2               KEY_LEN = KEY_LEN+BPLDBK;

    958  2 000174   000003 236000 0                  LDQ     KEY_LEN
         2 000175   000000 036000 xsym               ADLQ    BPLDBK
         2 000176   000003 756000 0                  STQ     KEY_LEN

      879      959    2               PREV_KEY = KEY;

    959  2 000177   000003 620006                    EAX0    3,QL
         2 000200   000001 470400 0                  LDP0    @KEY
         2 000201   000000 100540                    MLR     fill='000'O
         2 000202   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000203   000014 000400 0                  ADSC9   PREV_KEY                 cn=0,n=256

      880      960    2               END;

      881      961    1   /**/ DCBSF = DESTDCB; /*  KEY FILE OUT */

    961  2 000204   000000 220000 xsym               LDX0    DESTDCB
         2 000205   000000 740000 xsym               STX0    DCBSF

      882      962    1   /**/ BUFSF = VECTOR(NIL) ;

    962  2 000206   000014 237000 3                  LDAQ    12
         2 000207   000000 755000 xsym               STA     BUFSF
         2 000210   000001 756000 xsym               STQ     BUFSF+1

      883      963    1   /**/ BUFLNSF = 0;

PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:166  
    963  2 000211   000000 450000 xsym               STZ     BUFLNSF

      884      964    1   /**/ VFCSF = %NO# ;

    964  2 000212   000000 450000 xsym               STZ     VFCSF

      885      965    1   /**/ NOTIMESF = %YES# ;

    965  2 000213   400000 236003                    LDQ     -131072,DU
         2 000214   000000 756000 xsym               STQ     NOTIMESF

      886      966    1   /**/ KEYVSF = KEY;

    966  2 000215   000003 721000 0                  LXL1    KEY_LEN
         2 000216   000003 622011                    EAX2    3,X1
         2 000217   000001 470400 0                  LDP0    @KEY
         2 000220   000000 100540                    MLR     fill='000'O
         2 000221   000000 000012                    ADSC9   0,,PR0                   cn=0,n=*X2
         2 000222   000000 000377 xsym               ADSC9   KEYVSF                   cn=0,n=255

      887      967    1       CALL SYS_FUNC_WRIT ALTRET(ALT_WRTKEY);

    967  2 000223   000013 631400 3                  EPPR1   11
         2 000224   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         2 000225   000254 702000 2                  TSX2    ALT_WRTKEY

      888      968    1       RETURN;

    968  2 000226   000000 221200 0                  LDX1  ! 0
         2 000227   000001 702211                    TSX2  ! 1,X1

      889      969
      890      970    1   GET_KEY: PROC;

    970  2 000230   000116 741200 0     GET_KEY      STX1  ! KVAL+1

      891      971    2       IF BPLDBK = 2 THEN
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:167  

    971  2 000231   000000 235000 xsym               LDA     BPLDBK
         2 000232   000002 115007                    CMPA    2,DL
         2 000233   000241 601000 2                  TNZ     s:974

      892      972    2           KVAL = UBIN18;

    972  2 000234   000114 470400 0                  LDP0    DBK$
         2 000235   000000 236100                    LDQ     0,,PR0
         2 000236   000022 772000                    QRL     18
         2 000237   000115 756000 0                  STQ     KVAL
         2 000240   000253 710000 2                  TRA     s:978

      893      973    2       ELSE
      894      974    2           IF BPLDBK = 3 THEN

    974  2 000241   000003 115007                    CMPA    3,DL
         2 000242   000250 601000 2                  TNZ     s:977

      895      975    2               KVAL = UBIN27;

    975  2 000243   000114 470400 0                  LDP0    DBK$
         2 000244   000000 236100                    LDQ     0,,PR0
         2 000245   000011 772000                    QRL     9
         2 000246   000115 756000 0                  STQ     KVAL
         2 000247   000253 710000 2                  TRA     s:978

      896      976    2           ELSE
      897      977    2               KVAL = UBIN36;

    977  2 000250   000114 470400 0                  LDP0    DBK$
         2 000251   000000 235100                    LDA     0,,PR0
         2 000252   000115 755000 0                  STA     KVAL

      898      978    2   END GET_KEY;

    978  2 000253   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:168  

      899      979
      900      980    1   ALT_WRTKEY:
      901      981    1       ERRCODESF.ERR# = 3009;

    981  2 000254   000000 236000 xsym  ALT_WRTKEY   LDQ     ERRCODESF
         2 000255   000012 376000 3                  ANQ     10
         2 000256   057010 276007                    ORQ     24072,DL
         2 000257   000000 756000 xsym               STQ     ERRCODESF

      902      982    1       MSGCODE = ERRCODE_RDEF;

    982  2 000260   000000 756000 xsym               STQ     MSGCODE

      903      983    1       ERR_INSERT.CNT(0) = KEY.LEN;

    983  2 000261   000001 470400 0                  LDP0    @KEY
         2 000262   000000 100500                    MLR     fill='000'O
         2 000263   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000264   000000 000001 xsym               ADSC9   ERR_INSERT               cn=0,n=1

      904      984    1       ERR_INSERT.TEXT(0) = KEY.TXT;

    984  2 000265   000003 720000 0                  LXL0    KEY_LEN
         2 000266   040000 100540                    MLR     fill='040'O
         2 000267   000000 600010                    ADSC9   0,,PR0                   cn=3,n=*X0
         2 000270   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      905      985    1   /**/ SUBMESSF = %YES#;

    985  2 000271   400000 236003                    LDQ     -131072,DU
         2 000272   000000 756000 xsym               STQ     SUBMESSF

      906      986         /*E* ERROR: ZIU-03009-C
      907      987            MESSAGE: Failure at key %U1.           */
      908      988    1       CALL SYS_FUNC_ERRMSG;

PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:169  
    988  2 000273   000013 631400 3                  EPPR1   11
         2 000274   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         2 000275   000000 011000                    NOP     0

      909      989    1       UNWIND TO KEYBLD_UNWIND;

    989  2 000276   000000 237200 xsym               LDAQ  ! KEYBLD_UNWIND
         2 000277   000000 700200 xent               TSX0  ! X66_SUNWIND
         2 000300   000000 000200                    ZERO    0,128

CURR_IXID
 Sect OctLoc
   0     005   000000 000000                                                    ....

PREV_KEY
 Sect OctLoc
   0     014   ***000 000040   040040 040040   040040 040040   040040 040040    ...
   0     020   040040 040040   040040 040040   040040 040040   040040 040040
   0     110*  040040 040040   040040 040040   040040 040040   040040 040040

(unnamed)
 Sect OctLoc
   3     000   000003 000000   000000 000012   400000 000000   000006 006000    ................
   3     004   000001 006000   000002 006000   000014 606000   000011 006000    ................
   3     010   000001 006000   000002 006000   777777 400007   000000 000000    ................
   3     014   000000 177640   000000 006014                                    ........
      910      990    1   END ZIU$WRTKEY;

PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:170  
--  Include file information  --

   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$WRTKEY.

   Procedure ZIU$WRTKEY requires 193 words for executable code.
   Procedure ZIU$WRTKEY is declared NOAUTO and requires 82 words of local(STATIC) storage.

    No errors detected in file ZIU$KEYBLD.:ZIC0TSI    .
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:171  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:172  
          MINI XREF LISTING

ALT_WRTKEY
       981**LABEL     967--CALLALT
BPLDBK
       886**DCL       934>>ASSIGN    958>>ASSIGN    971>>IF        974>>IF
BREAK_FLAG
       874**DCL       912>>IF
BUFLNSF
       765**DCL       963<<ASSIGN
BUFSF
       766**DCL       962<<ASSIGN
COUNTSF
       816**DCL       817--REDEF
CURR_IXID
       885**DCL       915>>IF        917<<ASSIGN    920>>DOWHILE
DBK$
       906**DCL       903--IMP-PTR   904--IMP-PTR   905--IMP-PTR   937<<ASSIGN    938<<ASSIGN    938>>ASSIGN
       942<<ASSIGN    943<<ASSIGN    943>>ASSIGN    972>>ASSIGN    975>>ASSIGN    977>>ASSIGN
DBK1
       888**DCL       940<<CALLBLT   941<>CALL      952>>ASSIGN
DBK2
       889**DCL       945<<CALLBLT   946<>CALL      953>>ASSIGN
DCBSF
       745**DCL       961<<ASSIGN
DESTDCB
        16**DCL       961>>ASSIGN
DUPS_ALLOWED
       884**DCL       926<<ASSIGN    929<<ASSIGN    932>>IF
ENCRP_SEEDSF
       774**DCL       775--REDEF
ERRCODESF
       776**DCL       781--REDEF
ERRCODESF.ERR#
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:173  
       779**DCL       954<<ASSIGN    981<<ASSIGN
ERRCODE_RDEF
       781**DCL       955>>ASSIGN    982>>ASSIGN
ERR_INSERT.CNT
       790**DCL       950<<ASSIGN    951<<ASSIGN    983<<ASSIGN
ERR_INSERT.TEXT
       791**DCL       952<<ASSIGN    953<<ASSIGN    984<<ASSIGN
FIDSF_RD
       792**DCL       793--REDEF
GET_KEY
       970**PROC      939--CALL      944--CALL
HELPCODE
       810**DCL       815--REDEF
I
       848**DCL       919<<ASSIGN    920>>DOWHILE   921<<ASSIGN    921>>ASSIGN    923>>IF
ICHKSUM
       875**DCL       876--REDEF
I_O_BUF$
       853**DCL       854--IMP-PTR
KEY
        11**DCL        10--PROC      925>>ASSIGN    959>>ASSIGN    966>>ASSIGN
KEY.IXID
        13**DCL       915>>IF        917>>ASSIGN
KEY.LEN
        12**DCL       918>>ASSIGN    983>>ASSIGN
KEY.TXT
        14**DCL       935>>IF        937--ASSIGN    984>>ASSIGN
KEYBLD_UNWIND
       887**DCL       913>>UNWIND    989>>UNWIND
KEYVSF
       748**DCL       753--REDEF     966<<ASSIGN
KEYVSF.WD_ONE
       750**DCL       751--REDEF
KEY_LEN
       883**DCL        14--IMP-SIZ   918<<ASSIGN    925>>ASSIGN    934<<ASSIGN    934>>ASSIGN    935>>IF
       935>>IF        938>>ASSIGN    943>>ASSIGN    958<<ASSIGN    958>>ASSIGN    959>>ASSIGN    966>>ASSIGN
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:174  
       984>>ASSIGN
KEY_SIZE
        15**DCL        10--PROC      909>>IF
KVAL
       907**DCL       940>>CALLBLT   945>>CALLBLT   972<<ASSIGN    975<<ASSIGN    977<<ASSIGN
MSGCODE
       782**DCL       783--REDEF     955<<ASSIGN    982<<ASSIGN
NOTIMESF
       755**DCL       965<<ASSIGN
PREV_KEY
       899**DCL       925<<ASSIGN    959<<ASSIGN
PREV_KEY.TXT
       902**DCL       935>>IF        942--ASSIGN
REC$
       834**DCL       857--IMP-PTR
REC_DATA_LN
       862**DCL       861--IMP-SIZ
SCHEMA_TBL.WRD1.KEY_TYP#
       894**DCL       920>>DOWHILE
SCHEMA_TBL.WRD2.NO_DUPS#
       897**DCL       923>>IF
SCHEMA_TBL$
       890**DCL       891--IMP-PTR   920>>DOWHILE   923>>IF
SUBMESSF
       802**DCL       985<<ASSIGN
SYS_FUNC_ERRMSG
       880**DCL-ENT   956--CALL      988--CALL
SYS_FUNC_WRIT
       882**DCL-ENT   967--CALL
UBIN18
       903**DCL       972>>ASSIGN
UBIN27
       904**DCL       975>>ASSIGN
UBIN36
       905**DCL       977>>ASSIGN
VFCSF
PL6.E3A0      #004=ZIU$WRTKEY File=ZIU$KEYBLD.:ZIC0TSI                           FRI 09/05/97 13:17 Page:175  
       762**DCL       964<<ASSIGN
ZERO_SUP
       881**DCL-ENT   941--CALL      946--CALL
