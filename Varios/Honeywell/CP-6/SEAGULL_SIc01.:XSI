/*M* SEAGULL_SIc01 -- Message functions common to most C programs */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1990    */
/*T*                                                         */
/*T***********************************************************/
 
/*P*    NAME:     SEAGULL_SIc01
        PURPOSE:  This file contains common "Library" type functions,
                  that are put here to make them easier to use elsewhere.
 
        DESCRIPTION:
            This is a Library of functions that are intended to be used
            over again in most all C programs, written for the X account
            or otherwise.  It saves having the same little functions in
            all the C tools we will be writing.
            The following functions are in the file:
               1)  sg1__Error ()
               2)  sg1__Warning ()
               3)  sg1__Debug ()
               4)  sg1__Verbose ()
               5)  sg1__Message ()
*/
 
/*
**********************************************************************
*/
 
 
#include <stdarg.h>
#include <stdio.h>
 
#include "SEAGULL01:h"
 
 
#pragma LIST EJECT
/*
======================================================================
                     General  Message  Functions
======================================================================
*/
/*F*  NAME:  sg1__Error (char *function_name, char *format, ...)
      PURPOSE:  common error message routine for all C programs
*/
 
void sg1__Error (char *function_name, char *format, ...)
{
   va_list args;
 
   va_start( args, format);
      if (function_name)  {
         /* print out name of function causing error */
         fprintf(stderr, "### ERROR in \"%s ()\": ", function_name);
      }
      else  {
         /* print out error header only */
         fprintf(stderr, "### ERROR : ");
      }
      /* print out remainder of message here */
      vfprintf(stderr, format, args);
   va_end( args);
return;
}  /*end sg1__Error ()*/
 
 
/*
----------------------------------------------------------------------
*/
/*F*  NAME:  sg1__Warning (char *function_name, char *format, ...)
      PURPOSE:  common warning message routine for all C programs
*/
 
void sg1__Warning (char *function_name, char *format, ...)
{
   va_list args;
 
   va_start( args, format);
      if (function_name)  {
         /* print out name of function where warning occured */
         fprintf(stderr, "** Warning in \"%s ()\": ", function_name);
      }
      else  {
         /* print out warning header only here */
         fprintf(stderr, "** Warning : ");
      }
      /* print out remainder of message here */
      vfprintf(stderr, format, args);
   va_end( args);
return;
}  /*end sg1__Warning ()*/
 
 
/*
----------------------------------------------------------------------
*/
/*F*  NAME:  sg1__Debug (char *function_name, char *format, ...)
      PURPOSE:  common debug message routine for all C programs
*/
 
void sg1__Debug (char *function_name, char *format, ...)
{
   va_list args;
 
   va_start( args, format);
      if (function_name)  {
         /* print out name of function where debug occured */
         fprintf(stderr, "... debug in \"%s ()\"> ", function_name);
      }
      else  {
         /* print out debug header only here */
         fprintf(stderr, "... debug > ");
      }
      /* print out remainder of message here */
      vfprintf(stderr, format, args);
   va_end( args);
return;
}  /*end sg1__Debug ()*/
 
 
 
/*
----------------------------------------------------------------------
*/
/*F*  NAME:  sg1__Verbose (char *function_name, char *format, ...)
      PURPOSE:  common verbose message routine for all C programs
*/
 
void sg1__Verbose (char *function_name, char *format, ...)
{
   va_list args;
 
   va_start( args, format);
      if (function_name)  {
         /* print out name of function where verbose occured */
         fprintf(stdout, "++ verbose in \"%s ()\": \n", function_name);
      }
      else  {
         /* print out verbose header only here */
         fprintf(stdout, "++ verbose : \n");
      }
      /* print out remainder of message here */
      vfprintf(stdout, format, args);
   va_end( args);
return;
}  /*end sg1__Verbose ()*/
 
 
/*
----------------------------------------------------------------------
*/
/*F*  NAME:  sg1__Message (char *heading, char *format, ...)
      PURPOSE:  common message message routine for all C programs
*/
 
void sg1__Message (char *heading, char *format, ...)
{
   va_list args;
 
   va_start( args, format);
      if (heading)  {
         /* print out name of function where message occured */
         fprintf(stdout, "%s  ", heading);
      }
      else  {
         /* print out message header only here */
         fprintf(stdout, "!!  ");
      }
      /* print out remainder of message here */
      vfprintf(stdout, format, args);
   va_end( args);
return;
}  /*end sg1__Message ()*/
