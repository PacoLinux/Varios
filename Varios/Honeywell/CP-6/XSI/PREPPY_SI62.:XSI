/*M* ZW0$CTL_CARD_DRIVER - Call appropriate initialization routines */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
 
/*X* PLM=4,STI=2,IND=2,CTI=4,DCI=5,PRB=YES,ECI=3,CSI=3,THI=2,DTI=2,
     DIN=2,ENI=2,CLM=0,CCC,SQB,MCI,NTB,MOC,CCI=3,MCR=NO,NLB,MCL=0,EDMC  */
 
/*P*     NAME:     ZW0$CTL_CARD_DRIVER
         PURPOSE:  This routine will call the routine to
              process the options and perform all general
              initializations.
*/
/*D*     NAME:     ZW0$CTL_CARD_DRIVER
         INPUT:
              None
         OUTPUT:
              None
         INTERFACE:     Currently this routine will CALL:
              GCOS-PL6:
                   ZV1$GCOS_SPECIFIC_INIT
                   ZV4$CTL_CARD
              CP6-PL6:
                   ZW1$CP6_TRAP_BREAK_INIT;
                   ZW1$CP6_DCB_INIT
                   ZW4$CTL_CARD
         DESCRIPTION:   This routine contains conditionally compiled
              code that will call the correct initialization
              routines.
                   If any errors occur in initialization then
              this routine will return abnormally.
*/
 
%EJECT;
ZW0$CTL_CARD_DRIVER: PROC ALTRET;
 
%INCLUDE PREPPY_C61;
%PAGE(ARG=Include files);
%INCLUDE PREPPY_C63;
%INCLUDE PREPPY_C62;
%ZWI$DEATH_AND_DESTRUCTION;
%PAGE( ARG=Entries );
%IF CP6;
%ZW1$CP6_TRAP_BREAK_INIT;
%ZW1$CP6_DCB_INIT_LO_DO_ENTRIES;
%ZW4$CTL_CARD;
%ENDIF;
%IF GCOS;
 /***   Dcl ZV4$CTL_CARD entry;   ***/
 
  DCL ZV1$GCOS_SPECIFIC_INIT ENTRY ALTRET;
%ENDIF;
 
%PAGE( ARG=ZW0$CTL_CARD_DRIVER, PAGE=YES );
 /***   Remember RETURN_ABNORMALLY in ZWI$DEATH_AND_DESTRUCTION;   ***/
%IF CP6;
 /*
    Now perform CP6 specific initializations
    */
    CALL ZW1$CP6_TRAP_BREAK_INIT;
 /*
    Set up lo and do for the control card interpreter
    and error processing. (M$ERRMSG)
    */
    CALL ZW1$CP6_DCB_INIT_LO_DO ALTRET(RETURN_ABNORMALLY);
 /*
    Get all the options processed.
    NOTE: If any errors are detected,
    ZW4$CTL_CARD will altreturn.
    */
    CALL ZW4$CTL_CARD ALTRET(RETURN_ABNORMALLY);
 /*
    No initialize all the rest of the dcbs after
    we know what the options are to be.
    */
    CALL ZW1$CP6_DCB_INIT ALTRET(RETURN_ABNORMALLY);
 
 %ENDIF;
 %IF GCOS;
 /*
    Now perform gcos specific initializations
    */
    CALL ZV1$GCOS_SPECIFIC_INIT ALTRET(RETURN_ABNORMALLY);
 
 /*
    Get all the options processed
    */
    CALL ZV4$CTL_CARD;
 
 %ENDIF;
    RETURN;
 
RETURN_ABNORMALLY: ;
    ALTRETURN;
 
END ZW0$CTL_CARD_DRIVER;
