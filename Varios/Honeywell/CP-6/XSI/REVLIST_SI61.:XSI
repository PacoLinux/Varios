/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
REVLIST:    PROC MAIN NOAUTO;
%INCLUDE CP_6;
 %FPT_OPEN(FPTN=FPT_OPEN_SI,STCLASS=STATIC,
  DCB=M$SI,
  ASN=FILE,
  FUN=IN,
  SHARE=ALL);
 %FPT_OPEN(FPTN=FPT_OPEN_OU_D,STCLASS=STATIC,
  DCB=M$OU,
  ASN=DEVICE,
  RES='LO  ',
  SETDCB=YES);
 %FPT_OPEN(FPTN=FPT_OPEN_OU,STCLASS=STATIC,
  DCB=M$OU,
  ORG=CONSEC,
  CTG=YES,
  REASSIGN=YES,
  DISP=NAMED);
 %FPT_READ(FPTN=FPT_READ,STCLASS=STATIC,
  DCB=M$SI,
  BUF=BUF);
 %FPT_WRITE(FPTN=FPT_WRITE,STCLASS=STATIC,
  DCB=M$OU,
  BUF=BUF);
%FPT_CLOSE(FPTN=FPT_CLOSE_SI,STCLASS=STATIC,
 DCB=M$SI,
 DISP=SAVE);
%FPT_CLOSE(FPTN=FPT_CLOSE_OU,STCLASS=STATIC,
 DCB=M$OU,
 DISP=SAVE);
 %B$TCB;
 %B$ALT;
 %F$DCB(STCLASS="BASED(F$DCB$)");
%INCLUDE B_ERRORS_C;
 
DCL M$SI DCB;
DCL M$OU DCB;
DCL B$TCB$ PTR SYMREF;
  DCL NONBLANK(0:511) UBIN BYTE UNAL CONSTANT SYMDEF INIT(1*32,0,1*0);
  DCL LOWER_TO_UPPER(0:511) CHAR(1) CALIGNED CONSTANT SYMDEF
   INIT(' '*16,' '*16,
        ' ','!','"','#','$','%','%','''','(',')','*','+',',','-','.','/',
        '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
        '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
        'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
        '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
        'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ',
        ' '*16,' '*16,
        ' ','!','"','#','$','%','%','''','(',')','*','+',',','-','.','/',
        '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
        '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
        'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
        '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
        'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ',
        ' '*16,' '*16,
        ' ','!','"','#','$','%','%','''','(',')','*','+',',','-','.','/',
        '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
        '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
        'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
        '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
        'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ',
        ' '*16,' '*16,
        ' ','!','"','#','$','%','%','''','(',')','*','+',',','-','.','/',
        '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
        '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
        'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
        '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
        'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ');
 
DCL F$DCB$ PTR;
 
DCL BUF CHAR(256) STATIC;
DCL BUFFER CHAR(SIZE) BASED(BUF$);
DCL BUF$ PTR INIT(ADDR(BUF)) CONSTANT;
DCL NAMES(0:999) CHAR(32) STATIC;
DCL AFLN CHAR(80) STATIC;
DCL AFLISTNAME CHAR(AFLISTNAMESIZE) BASED(AFLN$);
DCL AFLISTNAMESIZE UBIN STATIC;
DCL AFLN$ PTR CONSTANT INIT(ADDR(AFLN));
DCL NAME CHAR(32);
DCL REVIEWS CHAR(8) CONSTANT INIT(':REVIEWS');
DCL 1 FILENAME STATIC,
    2 L UBIN(9) CALIGNED,
    2 C CHAR(31) CALIGNED;
 
DCL NAMEINDEX UBIN;
DCL SIZE UBIN;
DCL I UBIN;
DCL J UBIN;
DCL X UBIN;
DCL INITIALLIST BIT(1);
 
/*      Try the legal combinations of implied SI permutations. */
    F$DCB$=DCBADDR(FPT_OPEN_SI.V.DCB#);
    CALL M$OPEN(FPT_OPEN_SI)
    WHENALTRETURN DO;
        IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.ERR#~=%E$NOFILE THEN
            GOTO ALT;
        FPT_OPEN_SI.ACCT_=VECTOR(REVIEWS);
        CALL M$OPEN(FPT_OPEN_SI)
        WHENALTRETURN DO;
            IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.ERR#~=%E$NOFILE THEN
                GOTO ALT;
            FPT_OPEN_SI.NAME_=VECTOR(FILENAME);
            CALL CONCAT(FILENAME.C,'REV_',
               SUBSTR(F$DCB.NAME#.C,0,F$DCB.NAME#.L));
            FILENAME.L=4+F$DCB.NAME#.L;
            CALL M$OPEN(FPT_OPEN_SI) ALTRET(ALT);
            END;
        END;
 
    CALL M$OPEN(FPT_OPEN_OU_D) ALTRET(ALT);
    CALL M$OPEN(FPT_OPEN_OU) ALTRET(ALT);
 
/*      Set up name of lif for AF document. */
    NAMEINDEX=0;
    I=0;
    IF SUBSTR(F$DCB.NAME#.C,0,4)='REV_' THEN
        I=4;
    CALL INDEX(I,' ',F$DCB.NAME#.C,I);
    CALL CONCAT(AFLN,SUBSTR(F$DCB.NAME#.C,4,I-4),' LIST');
    AFLISTNAMESIZE=I+5-4;
 
    DO WHILE ('1'B);
        CALL M$READ(FPT_READ)
        WHENALTRETURN DO;
            IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.ERR#=%E$EOF THEN
                GOTO LISTIT;
            GOTO ALT;
            END;
        SIZE=F$DCB.ARS#;
 
        INITIALLIST='0'B;
        CALL INDEX(I,AFLISTNAME,BUFFER)
        WHENRETURN DO;
            SUBSTR(BUFFER,I,AFLISTNAMESIZE)=' ';
            IF BUFFER=' ' THEN
/*                  Looks like a good header. */
                INITIALLIST='1'B;
            END;
 
        IF INITIALLIST THEN DO;
/*              Initial reviewers list.  Get all the names. */
RLIST:      DO WHILE('1'B);
                CALL M$READ(FPT_READ)
                WHENALTRETURN DO;
                    IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.ERR#=%E$EOF THEN
                        GOTO LISTIT;
                    GOTO ALT;
                    END;
                SIZE=F$DCB.ARS#;
                IF SIZE=0 OR BUFFER=' ' THEN
                    EXIT RLIST;
                CALL ADDNAME(0);
                END;
            END;
        ELSE DO;
            CALL INDEX(I,'From:',BUFFER)
            WHENALTRETURN DO;
                GOTO NEXTREC;
                END;
            CALL INDEX(I,' ',BUFFER,I);
            CALL ADDNAME(I);
            END;
 
NEXTREC:END;
 
LISTIT:    ;
    CALL M$CLOSE(FPT_CLOSE_SI);
 
    SIZE=46;
    CALL CONCAT(BUFFER,'DELETE LIST ',AFLISTNAME);
    CALL SEARCHR(J,X,NONBLANK,BUFFER);
    FPT_WRITE.BUF_.BOUND=J;
    CALL M$WRITE(FPT_WRITE) ALTRET(ALT);
    CALL CONCAT(BUFFER,'CREATE LIST ',AFLISTNAME,' =;');
    CALL SEARCHR(J,X,NONBLANK,BUFFER);
    FPT_WRITE.BUF_.BOUND=J;
    CALL M$WRITE(FPT_WRITE) ALTRET(ALT);
 
    I=0;
    DO WHILE(I<NAMEINDEX-1);
        BUFFER=NAMES(I);
        CALL SEARCHR(J,X,NONBLANK,BUFFER);
        SUBSTR(BUFFER,J+1,2)=',;';
        FPT_WRITE.BUF_.BOUND=J+2;
        CALL M$WRITE(FPT_WRITE) ALTRET(ALT);
        I=I+1;
        END;
    BUFFER=NAMES(I);
    CALL SEARCHR(J,X,NONBLANK,BUFFER);
    FPT_WRITE.BUF_.BOUND=J;
    CALL M$WRITE(FPT_WRITE) ALTRET(ALT);
    CALL M$CLOSE(FPT_CLOSE_OU) ALTRET(ALT);
    CALL M$EXIT;
 
ALT:CALL M$MERC;
%EJECT;
ADDNAME:PROC(P_I);
DCL P_I UBIN;
 
DCL I UBIN;
DCL J UBIN;
DCL X UBIN;
 
    I=P_I;
/*      Extract the name from the record. */
    CALL SEARCH(I,X,NONBLANK,BUFFER,I);
    CALL SEARCHR(J,X,NONBLANK,BUFFER);
    NAME=SUBSTR(BUFFER,I,(J-I)+1);
 
/*      Make a legal name out of it. */
    CALL INDEX(I,'.',NAME)
    WHENALTRETURN DO;
        CALL INDEX(I,'@L66',NAME)
        WHENRETURN DO;
            NAME=SUBSTR(NAME,0,I-1);
            END;
        END;
    CALL XLATE(NAME,LOWER_TO_UPPER,NAME);
    IF NAME='REVIEW CHAIRMAN' THEN
        GOTO RET;
    I=0;
    DO WHILE(I<NAMEINDEX);
        IF NAME=NAMES(I) THEN
            GOTO RET;
        I=I+1;
        END;
    IF NAMEINDEX >= ( SIZEB(NAMES)/SIZEB(NAMES(0)) ) THEN
        CALL ERROR(1);
    NAMES(NAMEINDEX)=NAME;
    NAMEINDEX=NAMEINDEX+1;
 
RET:RETURN;
END ADDNAME;
%EJECT;
ERROR:  PROC(ENUM);
DCL ENUM UBIN;
DCL 1 ERROR_TEXT CONSTANT,
    2 * CHAR(32) INIT('Too many contributors');
DCL 1 ERRORS(0:0) REDEF ERROR_TEXT CHAR(32);
DCL M$OU DCB;
 
    FPT_WRITE.BUF_=VECTOR(ERRORS(ENUM));
    FPT_WRITE.V.DCB#=DCBNUM(M$OU);
    CALL M$WRITE(FPT_WRITE);
    CALL M$EXIT;
END ERROR;
END REVLIST;
