/*M*     ZW9$PREP_DRIVER  -- THIS MODULE IS THE DRIVER FOR THE PRE-PROCESSOR */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X*     DTI=2,MOC,MCL=0,CRM=80,CCC */
/*P*     NAME:     ZW9$PREP_DRIVER
         PURPOSE:  THIS ROUTINE PERFORMS ALL INITIAL SETUP
              AND WRAPUP FOR THE PRE-PROCESSOR.  IT IS NECESSARY
              SINCE THE PRE-PROCESSOR CAN RUN STAND-ALONE.
*/
/*D*     NAME:     ZW9$PREP_DRIVER
         INPUT:
              P_SKIP
         OUTPUT:
              ZWI$OPTION.BC  (IF EOF)
              ZWI$OPTION.CSYS  (IF CSYS)
              ZWI$OPTION.NSYS  (IF CSYS)
         INTERRFACE:    CURRENTLY THE FOLLOWING ARE CALLED.
              PL6:
                   ZQC$PREP
                   ZWH$MONERR$PRINT
                   ZWH$ERR$PRINT
              CP6:
                   M$OPEN
         DESCRIPTION:   THIS ROUTINE IS CALLED WITH A FLAG (P_SKIP)
              INDICATING WHEHER THE CURRENT COMPILE UNIT IS
              TO BE PROCESSED OR SKIPPED. IF NOT TO BE SKIPPED,
              THE M$LIST FILE AND THE DIAGNOSTIC FILES ARE OPENED.
                   THE PREPROCESSOR WILL RETURN A SEVERITY LEVEL
              BACK THAT RAEPRESENTS THE MAXIMUM SEVERITY ENCOUNTERED.
              IF ITS VALUE IS GREATER THAN 3, THE PRE-PROCESSOR
              ENCOUNTERED AN UN-RECOVERABLE ERROR.  THIS IS COMMUNICATED
              BACK TO THE MAIN LINE DRIVER BY RETURNING ABNORAMALLY.
                   IF THE PRE_PROCESSOR TERMMINATED DUE TO AN EOF,
              THE ZWI$OPTION.BC FLAG WILL BE RESET TO INDICATE THAT
              THIS WAS THE LAST COMPILE UNIT.
*/
/*E*
    ERROR: ZW9-E$LIST_DF_OPEN_ERR-4
    MESSAGE: This error occurred while trying to open an internal file.
                        ***** Compilation terminated *****
*/
 
 
ZW9$PREP_DRIVER: PROC(P_SKIP) ALTRET;
 
%INCLUDE PREPPY_C61;
%PAGE(ARG=INCLUDES);
%INCLUDE PREPPY_C63;
%INCLUDE ZQ$INTERFACE_M;
%INCLUDE ZWI$OPTION_C;
%INCLUDE PREPPY_C64;
%INCLUDE PREPPY_C62;
%INCLUDE XUX$INTERFACE_M;
%PAGE(ARG=SUBS);
 
 
%PAGE(ARG=PARAMETERS);
 
DCL P_SKIP BIT(1) ALIGNED;
 
%PAGE(ARG=GLOBAL DATA);
%OPTION;
DCL PREPPY_OPTION_USC BIT(1) SYMREF;
 
%XUX$SRCH_LIST(NAME=ZWI$SRCH_LIST,ACCT_SIZE=%#ACCOUNT_SIZE,STCLASS=SYMREF);
 
DCL ZWI$RECNO UBIN SYMREF;
 
DCL 1 ZWI$INPUT_KEY ALIGNED SYMREF,
      2 TCHAR UBIN(8) UNAL,
      2 EDIT_VAL SBIN(28) UNAL;
%ZWI$DEATH_AND_DESTRUCTION;
 
%PAGE(ARG=LOCAL DATA);
DCL DCB_NUMBER UBIN;
%ZQ$PREPROC_PARAM (STCLASS = STATIC);
 
%PAGE(ARG=ERROR DATA);
 
%B$TCB;
%B$ALT;
 
DCL B$TCB$ PTR SYMREF;
 
DCL ERROR_CODE BIT(36);
%PAGE(ARG=ENTRY DCLS);
%ZWH$ERR_ENTRIES;
DCL ZQC$PREP ENTRY(1) ALTRET;
DCL ZQU$FORMATREC ENTRY (2);
DCL ZQU$PREINIT ENTRY;
DCL ZQU$INIT ENTRY;
%PAGE(ARG=OPEN FPTS);
DCL ZWI$M$LIST# UBIN SYMREF;
%IF CP6;
DCL ZWI$M$SO# UBIN SYMREF;
DCL ZWI$M$OU# UBIN SYMREF;
%ENDIF;
DCL ZWI$M$LU# UBIN SYMREF;
DCL ZWI$M$NS# UBIN SYMREF;
DCL ZWI$M$MAC# UBIN SYMREF;
DCL ZWI$M$SYSTEM# UBIN SYMREF;
 
DCL ZWI$M$LIST$ PTR SYMREF;
%IF CP6;
DCL ZWI$M$SO$ PTR SYMREF;
DCL ZWI$M$OU$ PTR SYMREF;
%ENDIF;
DCL ZWI$M$LU$ PTR SYMREF;
DCL ZWI$M$NS$ PTR SYMREF;
DCL ZWI$M$MAC$ PTR SYMREF;
DCL ZWI$M$SYSTEM$ PTR SYMREF;
 
DCL ZWI$M$DF# UBIN SYMREF;
%FPT_OPEN(FPTN=OPEN_FPT,FUN=CREATE);
%ZQ$SO_BUFFER(NAME=ZQN$SO_BUFR);
 
%PAGE(ARG=CODE);
          /***    Remember SEVERE_ERROR in ZWI$DEATH_AND_DESTRUCTION;   ***/
                                        /*
                                        Open up the listing and diagnostic file
                                        */
        OPEN_FPT.V.DCB#=ZWI$M$LIST#;
        CALL M$OPEN(OPEN_FPT) ALTRET(OPEN_ERROR);
 
        OPEN_FPT.V.DCB#=ZWI$M$DF#;
        CALL M$OPEN(OPEN_FPT) ALTRET(OPEN_ERROR);
 
        ZQ$PREPROC_PARAM.DO_NOT_PREPROCESS = P_SKIP;
        ZQ$PREPROC_PARAM.CREATE_SYS_FILE = ZWI$OPTION.CSYS;
        ZQ$PREPROC_PARAM.NO_SYS_FILE = ZWI$OPTION.NSYS;
        IF ZWI$OPTION.LS OR ZWI$OPTION.LO THEN
           ZQ$PREPROC_PARAM.LIST_SOURCE = '1'B;
        ZQ$PREPROC_PARAM.LIST_UPDATES = ZWI$OPTION.LU;
        ZQ$PREPROC_PARAM.SOURCE_OUTPUT = ZWI$OPTION.SO;
               /* Force the lps option on so the preprocessor will list the   */
                                        /* preprocessed source                */
        ZQ$PREPROC_PARAM.LIST_PREPROC_SOURCE = '1'B;
        ZQ$PREPROC_PARAM.FORMAT = ZWI$OPTION.FORMAT;
        ZQ$PREPROC_PARAM.WIDTH = ZWI$OPTION.WIDTH;
%IF CP6;
          /* The preprocessor writes the listed preprocessor source to M$SO   */
               /* We want this file written thru M$OU to correspond to the    */
                                        /* processor invocation syntax        */
        ZQ$PREPROC_PARAM.M$SO# = ZWI$M$OU#;
        ZQ$PREPROC_PARAM.M$SO$ = ZWI$M$OU$;
%ELSEIF GCOS;
        ZQ$PREPROC_PARAM.M$SO# = DCBNUM (NIL);
        ZQ$PREPROC_PARAM.M$SO$ = ADDR(NIL);
%ENDIF;
        ZQ$PREPROC_PARAM.M$LIST# = ZWI$M$LIST#;
        ZQ$PREPROC_PARAM.M$LIST$ = ZWI$M$LIST$;
        ZQ$PREPROC_PARAM.M$LU# = ZWI$M$LU#;
        ZQ$PREPROC_PARAM.M$LU$ = ZWI$M$LU$;
        ZQ$PREPROC_PARAM.M$NS# = ZWI$M$NS#;
        ZQ$PREPROC_PARAM.M$NS$ = ZWI$M$NS$;
        ZQ$PREPROC_PARAM.M$MAC# = ZWI$M$MAC#;
        ZQ$PREPROC_PARAM.M$MAC$ = ZWI$M$MAC$;
        ZQ$PREPROC_PARAM.M$SYSTEM# = ZWI$M$SYSTEM#;
        ZQ$PREPROC_PARAM.M$SYSTEM$ = ZWI$M$SYSTEM$;
        ZQ$PREPROC_PARAM.RECNO$ = ADDR (ZWI$RECNO);
        ZQ$PREPROC_PARAM.INPUT_KEY$ = ADDR (ZWI$INPUT_KEY);
        ZQ$PREPROC_PARAM.USE_STANDARD_CHAR_SET = PREPPY_OPTION_USC;
        ZQ$PREPROC_PARAM.ALT_FID$ = ADDR (ZWI$SRCH_LIST);
        ZQ$PREPROC_PARAM.PREP_ERR$$ = ENTADDR (ZWH$ERR);
        ZQ$PREPROC_PARAM.MONITOR_ERR$$ = ENTADDR (ZWH$MONERR);
        ZQ$PREPROC_PARAM.FORMAT_PROC$$ = ENTADDR (ZQU$FORMATREC);
        ZQ$PREPROC_PARAM.FORMAT_INIT$$ = ENTADDR (ZQU$INIT);
        ZQ$PREPROC_PARAM.FORMAT_DEFAULTS$$ = ENTADDR (ZQU$PREINIT);
        ZQ$PREPROC_PARAM.LEVEL_6 = ( ZWI$OPTION.SYSTEM = %$L6 );
        ZQ$PREPROC_PARAM.BATCH_COMPILE = ZWI$OPTION.BC; /* ??? do i need this */
        ZQ$PREPROC_PARAM.END_OF_SOURCE = '0'B;
 
 
        CALL ZQC$PREP (ZQ$PREPROC_PARAM) ALTRET (SEVERE_ERROR);
 
        ZWI$OPTION.CSYS = ZQ$PREPROC_PARAM.CREATE_SYS_FILE;
        ZWI$OPTION.NSYS = ZQ$PREPROC_PARAM.NO_SYS_FILE;
        ZWI$OPTION.BC = ZQ$PREPROC_PARAM.BATCH_COMPILE;
 
        RETURN;
 
SEVERE_ERROR: ;
                                        /*
                                        If severity level is greater than 3
                                        then a pre-processor abort occured.
                                        Therefore, indicate this back to main
                                        line driver so it will quit.
                                        */
        ALTRETURN;
 
        %PAGE(ARG=ERROR_PROCESING);
 
 
OPEN_ERROR: ;
        DCB_NUMBER=OPEN_FPT.V.DCB#;
        ERROR_CODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR;
 
        CALL ZWH$MONERR$PRINT(ZWI$RECNO,ZWI$INPUT_KEY,ERROR_CODE,DCB_NUMBER);
        CALL ZWH$ERR$PRINT(ZWI$RECNO,ZWI$INPUT_KEY,%ZW9$FCG_MID,%E$LIST_DF_OPEN_ERR,4);
 
        ALTRETURN;
 
END ZW9$PREP_DRIVER;
