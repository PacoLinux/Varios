APLTOOLS.X is a tool crib of useful functions for APL programmers.
The workspace APLTOOLS.X contains utility functions that should be usefull to
many APL programmers.  Functions in this workspace provide the ability to build
and display file access control matrices, file record field definition
matrices, create name lists, read files, translate character data to upper
case, display terminal attributes, display CP6 windows, cross reference APL
programs and display CP6 UTS values as a date and time.
 
Function         Purpose
 
BUILDNL       This function creates a namelist from a
              character vector.
 
COPYRIGHT     This function adds a copyright notice to every
              function in the workspace.
 
COPYRIGHTSI   This function adds a copyright notice to every
              APL listing function in the in an SI file.
 
DISPACCESS    This function returns a display of the contents
              of a file access matrix.
 
DISPRECFIELD  This function returns a display of the contents
 
FILES         This function presents a form that indicates the
              names, numbers and attributes of the currently open
              files.  The files opened may be closed or new files
              may be opened by positioning in the form.
 
FIT           This function displays the FIT of a currently
              opened file (either a formatted or octal display
              is available).
 
FUNCLIST      This function displays each function in the workspace
              and a cross reference (XREF) of the function.
 
GENACCESS     This function returns a file access matrix when
              given a display form of an access matrix (DISPACCESS).
 
GENRECFIELD   This function returns a file record field matrix when
 
GETEQUS       This function reads a PL6 preprocessor file containing simple
              directives and returns a 2 item vector containing names of
              variables and their associated values.  (Usefull in association
              with the PARSE function in this workspace).
 
HELP          This function performs the operation of the CP-6
              help command.  The right argument is a full help
              command minus the opening HELP.
 
HELPSI        This function may be used to generate an SI file
              for a HELP file from a HELP file.
 
INPUT         This function returns the contents of the specified
              file as a character matrix, one row per record.
 
LINKNODES     This function reads an object unit created by the CP-6 PARTRGE
              processor and returns parse nodes suitable for use by the APL
              system functions $QPARSE and $QGETCMD.
 
MAPNODES      This function prints a "map" of the defined parse nodes and their
              location in the parse node array.
 
OCT           This function produces an octal dump of the contents
              of any simple APL variable.
 
PARSE         This function provides a simulation of the CP-6 X account
              run-unit PARSE.X, entirely within APL.  It is useful when
              debugging parse nodes within APL.
 
ROSEG         This function may be used to display all of the currently
              allocated DCBs to this APL session.
 
STATUS        This function presents a form which may be used
              to modify some of the system variables.
 
TERMATTR      This function returns a character vector indicating
              the current terminal attributes.
 
TEXLIST       This function translates the contents of a file containing APL
              text into a TeX document that will print using APL characters.
 
TRUP          This function translates all lower case characters
              into upper case.
 
UTS           This function returns a character date and time given
              a CP6 UTS value.
 
WINDOWS       This function displays information about each window.
 
WSLOC         This function may be used to scan the active workspace looking
              for a particular string within all of the functions or some of
              the functions in the workspace.
 
XREF          This function performs a cross reference of an APL
              function.
 
For more information about any of these functions, enter:
 
HELP (APLTOOLS.X) function
 
For general help, try
 
HELP (APLTOOLS.X) TOPICS
 
then
 
HELP (APLTOOLS.X) topicname
HELP file for: APLTOOLS.X
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
PARSE
PARSE
 
BUILDNL
 
Syntax:
 
        CM_S BUILDNL CV
 
Parameters:
 
CV     This is a character vector.
 
S      This is an optional character vector containing the characters which
indicate the row separators.
 
CM     This is a character matrix.
 
Description:
 
The result of this function is a character matrix containing the characters in
CV split into a new row when a character in S is found.  The characters in S
are not included in the resulting matrix.  If the optional left argument is not
specified, it is treated as if it contained ' ,'.
 
00001
880827 Added the following new functions: WSLOC, ROSEG, TEXLIST, LINKNODES,
PARSE, MAPNODES and GETEQUS.
870513
Added the new function COPYRIGHTSI.
870129
Added the new tools STATUS, FILES, FIT, HELP and HELPSI.
Modified FUNCLIST to display functions within packages.
861009
Submitted to the X account
COPYRIGHT
 
Syntax:
 
     COPYRIGHT CV
 
Parameters:
 
CV      This is a simple character vector.
 
DESCRIPTION
 
Every function in the workspace is modified to contain as the first line a
copyright notice of the form:
 
$COM*T*  COPYRIGHT, (C) string, year
 
where 'string' is the contents of the right argument and 'year' is the current
year.
 
00001
COPYRIGHTSI
 
Syntax:
 
     COPYRIGHTSI CV
 
Parameters:
 
CV      This is a simple character vector.
 
DESCRIPTION
 
For every function in the SI/UI file an update card is generated in the OU file
(with an appropriate key) containing a copyright notice of the form:
 
$COM*T*  string
 
where 'string' is the contents of the right argument.  The SI/UI file
combination is found by the current settings of the DCBs SI and UI.  The
resulting update file is created (with exist=error) from the setting of the dcb
OU.
 
 
For example:
 
!SET SI APLSOURCE_SI.SIACCT
!SET UI APLUPDATES.UIACCT
!SET OU *NEWUPDATES
!APL APLTOOLS.X
COPYRIGHTSI 'Copyright (c) Bull HN Information Systems Inc., 1989'
)END
 
As the source and update file are read, they are listed on the current output
device.
00001
00002
DISPACCESS
 
Syntax:
 
        CM_DISPACCESS FAM
 
Parameters:
 
FAM     This is a file access matrix as returned by the $QFRDAC
        system function.
 
CM      This is a display form for a file access matrix as defined
        below.
 
Description:
 
The result of executing this function is a display form of a file access
matrix.  The display form contains one row per account access where each row
contains an account followed by a '=' followed by the access permissions
separated by commas.  The access permissions are:
 
Permission       Description
 
Read          the file may be read
DelR          records may be deleted.
Wnew          new records may be written
UpdR          old records may be replaced
DelF          the file may be deleted
Nolist        the file is invisible to $QFLIB
Reattr        the access controls may be changed
Exec          file may be executed.
 
The following additional permissions are accepted when creating an access
control matrix using GENACCESS:
 
Fstac         the access controls may be changed (Reattr)
Drop          records may be deleted (DelR)
Update        old records may be replaced (UpdR)
 
 
Example:
 
        $R $Q_DISPACCESS $QFRDAC 1
 TESTAPL=Read,DelR,Wnew,UpdR
       ?=Read,Wnew
2 28
 
00001
00002
DISPRECFIELD
 
Syntax:
 
        CM_DISPRECFIELD FRFM
 
Parameters:
 
FRFM    This is a record field matrix as returned by the $QFFLDS
        system function.
 
CM      This is a display form for a record field matrix as defined
        below.
 
Description:
 
The result of executing this function is a display form of a record field
matrix.  The display form contains one row per field where each row contains a
data type followed by a size in parenthesis followed by additional type
options.  The types are:
 
Type       Description
 
NOTYPE     An unknown field type
CHAR       A character field
INTEGER    An INTEGER or SBIN/UBIN field
REAL       A floating point field
DOUBLE     A double precision floating point field
DECIMAL    A decimal field
DATE       A CP6 Date
UTS        A CP6 timestamp
TIMESPAN   A CP6 timespan
 
 
The type options are:
 
Option     Description:
 
Varying    A varying length field (CHAR)
Packed     A packed decimal field (DECIMAL)
Unpacked   A display field (DECIMAL)
Leading [Overpunched/Separate] SIGNED   A signed decimal (DECIMAL)
Trailing[Overpunched/Separate] SIGNED   A signed decimal (DECIMAL)
Unsigned   An unsigned decimal (DECIMAL)
Float      A floating decimal (DECIMAL)
 
 
Example:
 
        $R $Q_DISPRECFIELD $QFRDAC 1
Integer(36) Signed
Char(12)
Decimal(12) Packed Float
Decimal(6,2) Leading Overpunched Signed
Decimal(32) Float
Char(511) Varying
6 43
00001
00002
FILES
 
Syntax:
 
       FILES
 
Description:
 
This function causes a form to appear which contains the names, tie numbers and
attributes of all of the currently open files.  New files may be tied by
entering a file tie number, file name and open options on a currently blank
line.  Currently open files may be closed by blanking out the file name, or by
entering a new file name to be tied.
 
This function exits when nothing new is entered.
 
Example:
 
        FILES
 
                                   APL Files                  01/28/87 17:48:42
 
 Tie        File-Identifier                              Options
52         IDSWS.X                                      IN,KEYED,NAMED,NONE
29         HELP:IDSWS:.X                                IN,KEYED,NAMED,NONE
 
 
 
 
 
 
==
===============================================================================
 
00001
FIT
 
Syntax:
 
       FIT tienumber
 
Parameters:
 
tienumber     is the number of a currently open file.
 
Description:
 
This function is used to produce a formatted display a file's fit.  When
invoked correctly, it prompts for a command which must be a single integer
number (the fit fparam number to be displayed) or on of the following commands:
END, HELP, OCTAL, DOCTAL or NOCTAL.  The END command causes this function to
stop execution.  The OCTAL command causes the entire contents of the file's fit
to be display in octal.  The DOCTAL command causes future fparam portions to be
both formatted and displayed in octal.  Finally, the  NOCTAL command causes
future fparam portions to be only formatted which is the default.
 
If an all blank line is entered, the numbers of the fparams that are in the
current fit are displayed.
 
      'IDSWS.X'$QFOPEN 1
 
      FIT 1
 
Enter Fparam Number:
Available Codes are:
Code02  (Keyed Files)                    2  4 4  8
Code03  (Always Available)               3  9 9 12
Code04  (Dates - Access,Modify,Creation) 4 11 3 21
Code05  (Backup Info)                    5  3 3 24
Code09  (Access Controls)                9  8 8 27
 
Enter Fparam Number: 4
 
Code04  (Dates - Access,Modify,Creation)
Access=Jan 29, 1987 at 13:47:16
Modify=Oct 13, 1986 at 12:09:01
Create=Oct 13, 1986 at 12:08:59
 
Enter Fparam Number: END
 
00001
FUNCLIST
 
Syntax:
 
        FUNCLIST
 
 
Description:
 
This function is used to display the contents of all of the functions in the
active workspace.  The display of each function is followed by a cross
reference of the function (See XREF).  The cross reference listing begins with
comments so that the output of this function may be used as input to the APL
processor to recreate the functions.
00001
GENACCESS
 
Syntax:
        FAM_GENACCESS CM
 
Parameters:
 
CM      This is a character matrix having the form described as the result of
the DISPACCESS function.
 
FAM     This is a CP6 APL file access matrix.
 
 
Description:
 
This function takes as an argument a file access matrix similar to the result
of the DISPACCESS function in this workspace and returns a legal CP6 file
access matrix.
 
00001
GENRECFIELD
 
Syntax:
        RFM_GENRECFIELD CM
 
Parameters:
 
CM      This is a character matrix having the form described as the result of
the DISPRECFIELD function.
 
RFM     This is a CP6 APL record field matrix.
 
 
Description:
 
This function takes as an argument a record field matrix similar to the result
of the DISPRECFIELD function in this workspace and returns a legal CP6 record
field matrix.
 
00001
GETEQUS
 
Syntax:
 
     EQUS_GETEQUS 'fid'
 
Parameters:
 
fid     is the name of a CP-6 file containing simple pre-processor expressions
of the form:
 
    %EQU name = value;
    %EQU name = name +/- value;
 
The result is a 2-item array which contains the names of the variables and
their associated values.  This function is intended to be used by the PARSE
system function to obtain printable names for parse node codes.
 
USES:   PARSEPACK in APLTOOLS.X
 
RELATED FUNCTIONS:  PARSE, LINKNODES, MAPNODES
 
 
HELP
 
Syntax:
 
        fid HELP  options
 
Parameters:
 
options    is a simple character vector containing the HELP options (or topics)
that information is being requested.
 
fid        is a simple character vector containing the name of the help file to
default information from if a HELP file is not specified.
 
Description:
 
The options string is parsed and if it contains a help file name then that help
file is opened.  Otherwise, if a help file is not currently open, then the
default help file specified by the left argument is opened.
 
The options string is expected to contain a legal help command without a
leading HELP.  The additional information commands '?' and '??' are also
permitted.
 
The result of this function is that HELP for the specified topic(s) will be
displayed.
 
 
      'HELP:APLTOOLS:.X' HELP ''
APLTOOLS.X is a tool crib of useful functions for APL programmers.
 
      'HELP:APLTOOLS:.X' HELP '(IDSWS.X)'
IDSWS.X
 
  This  APL  workspace  provides  access  to any IDS database for
which  there is  an accessible  APL subschema.   The user  is not
required to have knowledge of APL in order to use this workspace.
 
00001
HELPSI
 
Syntax:
 
       HELPSI fid
 
Parameters:
 
fid     is the name of a HELP file.
 
Description:
 
This function may be used to create HERMAN.X compatible source input from a
HELP database.  The output of this function may be directed to a file by
setting $Q1 in APL or F$Q1 from IBEX.
 
Example:
 
      )SET $Q1 *SI,FUN=C,EXIST=NEWF
      HELPSI 'HELP:APLTOOLS:.X'
 
INPUT
 
Syntax:
        CM_INPUT FID
 
Parameters:
 
FID     This is a character vector containing a legal CP6 file identifier.
 
CM      This is a simple character matrix.
 
 
Description:
 
The result of this function is a character matrix containing one row for every
record in the specified file.
 
00001
LINKNODES
 
Syntax:
 
     NODES_LINKNODES 'fidlist'
 
Parameters:
 
NODES      are parse nodes that may be used by the APL system functions $QPARSE
and $QGETCMD.
 
fidlist    are CP-6 file names separated by commas which are object units
created by the PARTRGE processor.
 
RELATED FUNCTIONS:  PARSE, MAPNODES
 
Description:
 
This function reads the specified files and creates an integer vector parse
node array suitable for the $QPARSE and $QGETCMD system functions.
 
USES:      LINKPACK in APLTOOLS.X
RELATED FUNCTIONS:  PARSE, MAPNODES
 
MAPNODES
 
Syntax:
 
     MAPNODES NODES
 
Parameters:
 
NODES   is an integer vector parse node array created by the LINKNODES function
in this workspace or by the LINKNODES.X workspace.
 
RELATED FUNCTIONS: LINKNODES, PARSE, GETEQUS
 
Description:
 
This function prints the names of the parse nodes that are defined in the
specified parse node array and their location.  The location is suitable for
specifying the parse node offset to the $QPARSE and $QGETCMD system functions.
 
USES:   LINKPACK and PARSEPACK in APLTOOLS.X
RELATED FUNCTIONS: LINKNODES, PARSE, GETEQUS
 
OCT
 
Syntax:
        CM_Z OCT V
 
Parameters:
 
V       This is a simple APL variable containing all numeric or all character
data (and not created by monadic iota ($I)).
 
Z       This optional value indicates an offset to be applied to the starting
word offset in the first column of output.
 
CM      This is a simple character matrix.
 
 
Description:
 
The result of this function is an octal representation of the data provided.
 
Example:
 
        OCT   .5,$I 4
0000 000400000000 000000000000 002040000000 000000000 *......... ......*
0004 002100000000 000000000000 002140000000 000000000 *.@..............*
0010 002200000000 000000000000                        *........        *
 
00001
Bruce Frost, LADC
PARSE
 
Syntax:
 
     PARSE NODES
     'NODE_NAME' 'EQU_FID' PARSE NODES
 
Parameters:
 
NODES      is an integer vector containing PARSE nodes as created by the
LINKNODES function.
 
NODE_NAME  is the optional name of the node at which to parse.
 
EQU_FID    is the name of a file containing PL6 %EQU or %SET directives
defining the node codes to use when displaying the parse nodes; OR the second
item of the left argument may contain the result of the GETEQUS function.
 
RELATED FUNCTIONS: LINKNODES, MAPNODES, GETEQUS
 
Description:
 
This APL function performs the same capabilities as the CP-6 X account run-unit
PARSE.X.  The right argument must be an integer vector parse node variable as
created by the LINKNODES function in this workspace or the LINKNODES.X
workspace.  This function uses the optional left argument to determine the node
at which to parse and also the text to display for node codes.  If no left
argument is present, the parse begins at the first node defined.
 
This function prompts for input and then parses the input according to the
parse nodes provided.  The output of the parser is displayed, one line for each
node produced.
 
This function uses the package PARSEPACK in this workspace.
 
RELATED FUNCTIONS: LINKNODES, MAPNODES, GETEQUS.
 
ROSEG
 
Syntax:
 
     ROSEG
 
Description:
 
This niladic function uses the $QPEEK system function to display all of the
allocated DCBs.  The function displays the DCB number, name, assignment and
indication of whether the dcb is open or closed.
 
STATUS
 
Syntax:
 
       STATUS
 
Description:
 
This function causes a form to appear and the fields may be modified to change:
the workspace name, the index origin, the comparison tolerance, the print
width, the print precision, the random number seed and the latent expression.
 
The form also displays the current workspace available, the number of functions
in the workspace, the number of variables in the workspace, the depth of the
state indicator, the number of files open and the number of variables shared.
 
Example:
 
     STATUS
 
                          Workspace:  APLTOOLS.X
 
Index-Origin: 1           Comparison-Tolerence: 1.000E-13
Platen-Width: 80               Print-Precision: 10
 Random-Seed: 16870
Latent Expression:
 
Workspace Available: 942520 (bytes)    Functions:  39   Variables:  5
State-Indicator Depth:    0                Files:   0      Shares:  0
 
00001
TERMATTR
 
Syntax:
 
        CV_TERMATTR
 
Parameters:
 
CV      This is a simple character vector.
 
 
Description:
 
This function displays terminal attributes associated with the $QTRMATTR system
function.
 
Example:
 
        TERMATTR
Speed=9600, Parity=even, Connection=Hardwired, CharSet=Ascii, Lowercase,
Width=80, Height=24, Scroll, Retypovr, Editovr, Echo
 
00001
TEXLIST
 
Syntax:
 
     'infid' TEXLIST 'outfid'
 
Parameters:
 
infid      is the name of a file containing APL text.
 
outfid     is the name of a file to create containing a TeX source document for
printing the file containing the APL characters.
 
Description:
 
This function reads a file containing APL text and creates a TeX source file
which when formatted will display the contents of the original file in the APL
character set.  The TeX source document requires access to the "apldefs:tex"
file which defines macros for all of the APL characters, and the font apl10 (a
10pt APL font).
 
Example:
 
!APL APLTOOLS.X
 APL E00
 APLTOOLS SAVED 10:46 AUG 28 '88
 
      "DISPLAY
[1]    $XEC')SET OUTPUT *DISPLAY,FUN=C,EXIST=NEWFILE'
[2]    $XEC'"TEXLIST[$Q]"'
[3]    $XEC')SET OUTPUT ME'
    "
 
      DISPLAY
      '*DISPLAY' TEXLIST '*:tex'
      )END
!TEX *:tex
CP-6 TeX, Version 2.9 (preloaded format=plain 88.4.27)
(*:tex (apldefs:tex.BJFHOST) [1]
Output written on *:dvi (1 page, 1988 bytes).
Transcript written on *:log.
!DVILG *:dvi over LZ@QMS (DEV=1200,FORM=QMSCAP)
[1]
 
TRUP
 
Syntax:
 
        CU_TRUP CV
 
Parameters:
 
CV      This is a simple character vector.
 
CU      This is a simple character vector.
 
 
 
Description:
 
This function translates all alphabetic characters in a character array to
their upper case equivalent.
 
Example:
 
        TRUP 'Ottawa is the capital of Canada'
OTTAWA IS THE CAPITAL OF CANADA
00001
UTS
 
Syntax:
        TS_UTS U
 
Parameters:
 
U       This is a simple scalar integer.
 
TS      This is a simple integer vector of length 7.
 
 
Description
 
This function returns the APL timestamp associated with the date and time
indicated by the CP6 UTS right argument value.  The elements of the result
indicate the year, month, day, hour, minute, second and millisecond.
 
Example:
 
        UTS 2.8E10
1986 11 15 17 46 40 0
 
00001
WINDOWS
 
Syntax:
        CM_WINDOWS
 
Parameters:
 
CM      This is a simple character matrix.
 
 
Description:
 
This function returns a character matrix which indicates the size, location and
numbers of each of the windows associated with the current session.
 
 
Example:
 
        WINDOWS
UC98 Position( 1, 1),Wlength=24,Wwidth=80,MinLength= 0,MinWidth= 0
UC01 Position( 1, 1),Wlength=24,Wwidth=80,MinLength= 0,MinWidth= 0
UC99 Position( 1, 1),Wlength=24,Wwidth=80,MinLength= 0,MinWidth= 0
 
00001
WSLOC
 
Syntax:
 
     WSLOC 'string'
     'fns' WSLOC 'string'
 
Parameters:
 
string     is the character string that is to be located.
 
fns        is an optional namelist containing the names of the functions to be
searched.  If this parameter is not specified, all of the functions in the
active workspace will be searched.
 
Description:
 
This function is used to locate all of the occurances of the specified string
in functions in the active workspace.  For every occurance of the string, the
function name, linenumber and the function line are printed.
 
APLTOOLS.X
AID=PROGRAMMING
APL
TOOL=APLTOOLS
An APL workspace containing various programming tools.
XREF
 
Syntax:
        CM_XREF FN
 
Parameters:
 
FN      This is a simple character vector containing the name of a defined
function.
 
CM      This is a simple character matrix.
 
 
Description:
 
This function performs a cross reference of the specified defined function.
For every identifier used in the function, the lines upon which it is used and
the type of usage is indicated in the result of this function.
 
The usage codes associated with identifiers are the single character following
the line number.  These single character codes are:
 
Code    Meaning
 
:       Name is a label defined on this line
_       Simple assignment
]       indexing
]_      indexed assignment
        Simple reference
 
00001
