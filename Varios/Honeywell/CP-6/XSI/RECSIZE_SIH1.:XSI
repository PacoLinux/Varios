.*M*
HELP file for: RECSIZE.X
.*T*
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
.*X*                                             
FYI, this HELP file has been specially prepared to run through TUNA.X (LEN=80)
prior to running through HERMAN.  This action will guarantee that the lines of
text in it will fill a screen as much as possible, and that more lines will end
up per screen.
.*R*
.*A*
RECSIZE lists file max and min records (first occurrence only), optionally
computes file byte counts, and optionally lists records with byte counts
satisfying a user-selected criteria.  RECSIZE also has an option to report
unprintable characters found within file records.
.*B*
Full command line syntax:
 
  !RECSIZE.X fid [{ON | OVER} , dest]  [(option,..option)]
 
Where
 fid          is the name of the file RECSIZE should read.
 dest         is the name of the destination device/file for RECSIZE's output.
 option(s)    are any of the following:
 
    B/YTE C/OUNT
    >  Record_Length
    <  Record_Length
    = Record_Length
    B/ETWEEN (Lo_Size,Hi_Size)
    R/ECORD R/ANGE [=] [LO_Number] - [HI_Number]
    U/NPRINT [(N/O ascii_mnemonic,..N/O ascii_mnemonic)]
 
For option details, see
 
!HELP (RECSIZE.X) SYNTAX option_name
.*B*
If RECSIZE encounters a fatal error, he'll exit with STEPCC=7.   If >,<,=, or
between ends up with a non-zero count, he'll exit with STEPCC=1.  DCBs used are
M$LO and M$DO, with exact same stuff mysteriously going to both.
.*B*
 EXAMPLES:
 ---------
 !RECSIZE.X my_fid OVER ,*DUMP(RECSIZE GREATER THAN 72) <-| Equivalent
 !RECSIZE.X my_fid            (>72) <------------------| Options
 !RECSIZE.X my_fid            (RECORD RANGE=34-900,>80,UN)
 !RECSIZE.X my_fid OVER ,LP   (RR=34-900,<80,||(90,120),BC)
 !RECSIZE.X my_fid            (RR= -800)   "RR=BOF-800"
 !RECSIZE.X my_fid            (=0,RR210-) "RR=210-EOF"
 !RECSIZE.X my_fid            (UNPRINT(NODEL,NOBS),BC,=10,RR-90)
.*B*
 Notes
 -----
 o An option may be specified at most, once.  Therefore, !RECSIZE.X my_fid
(RECSIZE EQUAL 45,=45)     is not valid.
 
 o When the unprint option is specified at the same time as any size option
('=' '>' '<' '||'), RECSIZE buffers all unprintable characters and lists them
AFTER the input file has been read from starting record to ending record.
Consequently, if an input file contains a large number of unprintable
characters, RECSIZE will probably run out of memory during buffering
operations.  !RECSIZE.X some_ru OVER ,*DUMP(>4096,UN)   is a good example of
how to blow RECSIZE away.
 
Buffering operations will not be a problem for relatively "clean" input files
(e.g. source files).
 
.*K* DCBS
RECSIZE reads its input file from M$SI.  RECSIZE lists its output via M$LO.
RECSIZE writes diagnostics via M$DO.  RECSIZE sez hello via M$ME.  RECSIZE
responds to the break key via M$ME.
.*K* FEATURES
 RECSIZE's features:
 -------------------
 o  KEYed, CONsecutive, INDexed, or RELative input files are read with fast
sequential access routines.  All other files are read with standard monitor
calls.  (Files that qualify for fast sequential access will be processed very,
very quickly.)
 
 o  Input file records may be up to 65,536 bytes long.
 
.*K* BREAK_KEY
If RECSIZE is reading a file that contains a large number of records and/or the
system ETMF is high, depress the BREAK key to find out which record RECSIZE is
currently processing.
.*K* SYNTAX
Full command line sytax:
  !RECSIZE.X fid [{ON | OVER} , dest]  [(option,..option)]
 
 Where:
   fid    is the name of the file RECSIZE should read.
   dest   is the name of the destination device/file for RECSIZE's output.
   option(s)    are any of the following:
 
.*B* BYTE_COUNT
B/YTE C/OUNT
 
Directs RECSIZE to count the total number of bytes in the input file.
 
.*B* SIZE_GREATER GREATER '>'
{ > | [S/IZE] G/REATER [T/HAN] } Record_Length
 
Directs RECSIZE to list each record whose size exceeds Record_Length.  (Only
record numbers and Edit keys are listed.)
 
.*B* SIZE_LESS LESS '<'
{ < | [S/IZE] L/ESS [T/HAN] } Record_Length
 
Directs RECSIZE to list each record whose size is less than Record_Length.
(Only record numbers and Edit keys are listed.)
 
.*B* SIZE_EQUAL EQUAL '='
{ = | [S/IZE] E/QUAL [T/O] } Record_Length
 
Directs RECSIZE to list each record whose size equals Record_Length.  (Only
record numbers and Edit keys are listed.)
 
.*B* SIZE_BETWEEN BETWEEN '||'
{ ||  |  [S/IZE] B/ETWEEN }  (Lo_Size,Hi_Size)
 
Directs RECSIZE to list each record whose size is inclusively between Lo_Size
and Hi_Size.  (Only record numbers and Edit keys are listed.)
 
.*B* RECORD_RANGE SEARCH_RANGE
R/ECORD R/ANGE [=] [LO_Number] - [HI_Number]
 
Defines the starting record number (LO_Number) and the ending record number
(HI_Number) for RECSIZE's search of the input file.  If this option is not
specified, RECSIZE searches the input file from BOF (Beginning Of File) to EOF
(End Of File).
 
If LO_Number is omitted but HI_Number is specified, RECSIZE assumes BOF for
LO_Number.  Likewise, if HI_Number is omitted and LO_Number is specified,
RECSIZE assumes EOF for HI_Number.  (LO_Number may not be > HI_Number.)
 
.*B* UNPRINT ASCII_SEARCH
U/NPRINT [(N/O ascii_mnemonic,..N/O ascii_mnemonic)]
 
Causes RECSIZE to list any 'unprintable' character found in the input file.  (
Cf. !HELP (UNPRINT.X)  )
 
An unprintable character is one not normally visible when typed on a
time-sharing terminal.  RECSIZE considers all of the following ASCII chars to
be unprintable:
 
  NULL  SOH  STX  ETX  EOT  ENQ  ACK  BEL  BS   HT
  LF    VT   FF   CR   SO   SI   DLE  DC1  DC2  DC3
  DC4   NAK  SYN  ETB  CAN  EM   SUB  ESC  FS   GS
  RS    US   DEL .
 
When using the UNPRINT option, RECSIZE may be directed to ignore any of the
above unprintables by prefixing the desired mnemonic with 'N/O' and enclosing
the list with parentheses.  EX:  UNPRINT(NHT,NBS) means:
 
"Search my input file for unprintable characters, but don't report HT's or
BS's."
 
.*K* EXAMPLES
 EXAMPLES:
 ---------
 !RECSIZE.X my_fid OVER ,*DUMP(RECSIZE GREATER THAN 72) <-| Equivalent
 !RECSIZE.X my_fid               (>72) <------------------| Options
 !RECSIZE.X my_fid            (RECORD RANGE=34-900,>80,UN)
 !RECSIZE.X my_fid OVER ,LP   (RR=34-900,<80,||(90,120),BC)
 !RECSIZE.X my_fid            (RR= -800)   "RR=BOF-800"
 !RECSIZE.X my_fid            (=0,RR210-) "RR=210-EOF"
 !RECSIZE.X my_fid            (UNPRINT(NODEL,NOBS),BC,=10,RR-90)
 
.*K* SYNTAX_NOTES
 Notes
 -----
 o An option may be specified at most, once.  Therefore, !RECSIZE.X my_fid
(RECSIZE EQUAL 45,=45)     is not valid.
 
 o When the unprint option is specified at the same time as any size option
('=' '>' '<' '||'), RECSIZE buffers all unprintable characters and lists them
AFTER the input file has been read from starting record to ending record.
Consequently, if an input file contains a large number of unprintable
characters, RECSIZE will probably run out of memory during buffering
operations.  !RECSIZE.X some_ru OVER ,*DUMP(>4096,UN)   is a good example of
how to blow RECSIZE away.
 
Buffering operations will not be a problem for relatively clean" input files
(e.g. source files).
 
.*K* FORTRAN_PROGRAMMERS
FORTRAN programmers who are having trouble compiling source files may find the
following RECSIZE command handy:
 
 !RECSIZE.X source_fid (>72,U)
 
which will cause RECSIZE to list any source records > 72 bytes in length and
display any unprintable characters found within the file.
.*K* COBOL_PROGRAMMERS
COBOL programmers who are having trouble compiling source files may find the
following RECSIZE command handy:
 
 !RECSIZE.X source_fid (>72,U)
 
which will cause RECSIZE to list any source records > 72 bytes in length and
display any unprintable characters found within the file.
.*K* PL6_PROGRAMMERS
PL6 programmers who are having trouble compiling source files may find the
following RECSIZE command handy:
 
 !RECSIZE.X source_fid (>140,U)
 
which will cause RECSIZE to list any source records > 140 bytes in length and
display any unprintable characters found within the file.
.*K* OWNER
 Clark Morgan
 Montana State University Computing Services
 Bozeman Mt.  59717
 406/994-3042
.*K* XINDEX
RECSIZE.X
.*R*
AID=UTILITY
.*R*
FILE_MANIPULATION
.*R*
.*K* XINDEX_ABSTRACT
TOOL=RECSIZE.X
.*R*
Provides a quick way to find out the number of bytes in a file, the largest and
smallest records in the file, and any unprintable characters in the file.
.*K* CHANGES
870930 JLJ
.*R*
Fixed to remove excess whitespace from default display.  If >,<,=, or between
are specified, and any records matching are found, then stepcc=1 on xit.
.*B*
850625
.*R*
Submitted to LADC X account.
