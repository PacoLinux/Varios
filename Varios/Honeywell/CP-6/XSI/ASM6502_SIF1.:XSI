C*T***********************************************************  
C*T*                                                         *  
C*T* Copyright (c) Bull HN Information Systems Inc., 1989    *  
C*T*                                                         *  
C*T***********************************************************  
C
C     MAIN PROGRAM FOR ASM
C
C     SEE ASM6502_HELP FOR DETAILS
C
      IMPLICIT INTEGER(A-Z)
      INCLUDE ASM6502_C1
      DIMENSION SYMHED(13),UNDHED(5),XRHEAD(15)
      DATA SYMHED/1HS,1HY,1HM,1HB,1HO,1HL,1H ,1HV,1HA,1HL,1HU,1HE,1HS/
      DATA UNDHED/'UNDE','FINE','D SY','MBOL','(S):'/
      DATA XRHEAD/
     1  1HC,1HR,1HO,1HS,1HS,1H-,1HR,1HE,1HF,1HE,1HR,1HE,1HN,1HC,1HE/
      DATA XLTAR/'  <-'/,XRTAR/'  ->'/,XMINS/'  - '/,XPLUS/'  + '/,
     1  XASTR/'  * '/,XEXT/'EXT '/,XENT/'ENT '/,XUND/'UND '/,
     2  XREL/'(R) '/,XEXTS/'EXTS'/,XEXTL/'EXTL'/
C
C     GET USER OPTIONS INTO OPTION
C
      NBITS2=2*NBITS
      NBITS3=3*NBITS
      MBITS=-NBITS
      MBITS2=-2*NBITS
      MBITS3=-3*NBITS
      OPEN (LOUNIT)
      PASS=-1
      CALL GETOPT
      HOLDOP=OPTION
      HOLDCL=CLOCK
      DO 1000 I=1,2
         DO 1000 J=1,8
1000  HOLDSR(I,J)=SRACCT(I,J)
      WRITE (108,9000)
C
C     SET UP FOR PASS 0
C
      PASS=0
      OPEN (TMUNIT,NAME='*TM',FORM='FORMATTED',RECL=256,USAGE='CREATE')
      OPEN (MCUNIT,NAME='*MC',FORM='FORMATTED',RECL=256,USAGE='CREATE',
     1ACCESS='DIRECT')
      CLOSE (MCUNIT,STATUS='KEEP')
      OPEN (MCUNIT,NAME='*MC',FORM='FORMATTED',RECL=256,USAGE='UPDATE',
     1ACCESS='DIRECT')
      IUNIT=SIUNIT
      CALL DOPASS
      CLOSE (TMUNIT,STATUS='KEEP')
      CLOSE (SIUNIT,STATUS='KEEP')
      CLOSE (TMUNIT,STATUS='KEEP')
C
C     SET UP FOR PASS 1
C
      PASS=1
      OPEN (TMUNIT,NAME='*TM',FORM='FORMATTED',RECL=256,USAGE='INPUT',
     1STATUS='OLD')
      IUNIT=TMUNIT
      CALL DOPASS
      CLOSE (TMUNIT,STATUS='KEEP')
C
C     SET UP FOR PASS 2
C
      PASS=2
      OPEN (TMUNIT,NAME='*TM',FORM='FORMATTED',RECL=256,USAGE='INPUT',
     1STATUS='OLD')
      IF (IAND(OPTION,OPTXR).NE.0)OPEN (XRUNIT,NAME='*XR',FORM=
     1'UNFORMATTED',RECL=5,USAGE='CREATE',ACCESS='DIRECT')
      IF (IAND(OPTION,OPTOU).NE.0)OPEN (OUUNIT,FORM='FORMATTED',RECL=80)
      CALL DOPASS
      CLOSE (TMUNIT,STATUS='DELETE')
      CLOSE (MCUNIT,STATUS='DELETE')
      CALL OBJOUT(-1,0,0,0)
C
C     SORT SYMBOL TABLE INTO ORDER
C
      PASS=3
      DO 1030 I=1,HISYM-1
         DO 1020 J=I+1,HISYM
            IF (SYMBOL(1,I).LT.SYMBOL(1,J))GOTO 1020 
            IF (SYMBOL(1,I).EQ.SYMBOL(1,J).AND.SYMBOL(2,I).LE.SYMBOL(2,
     1            J))GOTO 1020 
            DO 1010 K=1,5
               HOLD=SYMBOL(K,I)
               SYMBOL(K,I)=SYMBOL(K,J)
               SYMBOL(K,J)=HOLD
1010        CONTINUE 
1020     CONTINUE 
1030  CONTINUE 
C
C     PAD SYMBOLS OUT WITH BLANKS
C
      DO 1050 I=1,HISYM
         DO 1040 J=1,7
1040     CALL PACK(SYMBOL(1,I),BLANK)
1050  CONTINUE 
      IF (IAND(OPTION,OPTOU).EQ.0)GOTO 1070 
      DO 1060 I=1,HISYM
         IF (IAND(SYMBOL(3,I),12).EQ.0.AND.IAND(OPTION,OPTSC).EQ.0)
     1      GOTO 1060 
         IF (IAND(SYMBOL(3,I),12).EQ.0)RELOC=128
         IF (IAND(SYMBOL(3,I),8).NE.0)RELOC=130
         IF (IAND(SYMBOL(3,I),4).NE.0)RELOC=129
         RELBAS=SYMBOL(4,I)
         IF (RELOC.EQ.130)RELBAS=IAND(ISL(SYMBOL(3,I),MBITS2),127)
         CALL OBJOUT(RELOC,RELBAS,8,SYMBOL(1,I))
1060  CONTINUE 
      IF (IAND(OPTION,OPTOU).NE.0)CLOSE (OUUNIT,STATUS='KEEP')
C
C     PRINT SYMBOL TABLE IF LS SPECIFIED
C
1070  IF (IAND(OPTION,OPTLS).EQ.0.OR.HISYM.EQ.0)GOTO 1230 
      LOLINE=9999
      DO 1080 I=1,80
1080  TITLE(I)=BLANK
      DO 1090 I=1,13
1090  TITLE(I)=SYMHED(I)
      IF (IAND(OPTION,OPTOC).NE.0)GOTO 1160 
      N=4*(LOWID/16)
      IF (N.GT.24)N=24
      I=1
1100  DO 1110 J=1,33
1110  LOBUF(J)=BLANK
      J=1
1120  IF (IAND(SYMBOL(3,I),1).EQ.0)GOTO 1150 
      IF (J.LT.N)GOTO 1130 
      CALL LIST
      GOTO 1100 
1130  CALL CVH(LOBUF(J),SYMBOL(4,I))
      IF (IAND(SYMBOL(3,I),8).EQ.0)GOTO 1140 
      LOBUF(J+1)=XLTAR
      IF (ISL(SYMBOL(3,I),MBITS2).GT.127)LOBUF(J)=XEXTL
      IF (ISL(SYMBOL(3,I),MBITS2).LE.127)LOBUF(J)=XEXTS
1140  IF (IAND(SYMBOL(3,I),4).NE.0)LOBUF(J+1)=XRTAR
      LOBUF(J+1)=ISL(LOBUF(J+1),NBITS2)+ISL(SYMBOL(1,I),MBITS2)
      LOBUF(J+2)=ISL(SYMBOL(1,I),NBITS2)+ISL(SYMBOL(2,I),MBITS2)
      LOBUF(J+3)=ISL(SYMBOL(2,I),NBITS2)+ISL(BLANK,MBITS2)
      J=J+4
1150  I=I+1
      IF (I.LE.HISYM)GOTO 1120 
      CALL LIST
      GOTO 1230 
1160  N=5*(LOWID/20)
      IF (N.GT.25)N=25
      I=1
1170  DO 1180 J=1,33
1180  LOBUF(J)=BLANK
      J=1
1190  IF (IAND(SYMBOL(3,I),1).EQ.0)GOTO 1220 
      IF (J.LT.N)GOTO 1200 
      CALL LIST
      GOTO 1170 
1200  IF (IAND(OPTION,OPTAO).NE.0)SYMBOL(4,I)=IAND(SYMBOL(4,I),255)
     1+512*(SYMBOL(4,I)/256)
      CALL CVO(I1,I2,SYMBOL(4,I))
      LOBUF(J)=ISL(I1,NBITS2)+ISL(I2,MBITS2)
      IF (IAND(SYMBOL(3,I),8).EQ.0)GOTO 1210 
      LOBUF(J+1)=XLTAR
      LOBUF(J)=ISL(BLANK,NBITS2)+ISL(XEXTS,MBITS2)
      IF (ISL(SYMBOL(3,I),MBITS2).GT.127)I2=XEXTL
      IF (ISL(SYMBOL(3,I),MBITS2).LE.127)I2=XEXTS
1210  IF (IAND(SYMBOL(3,I),4).NE.0)LOBUF(J+1)=XRTAR
      LOBUF(J+1)=ISL(I2,NBITS2)+ISL(ISL(LOBUF(J+1),NBITS2),MBITS2)
      LOBUF(J+2)=SYMBOL(1,I)
      LOBUF(J+3)=SYMBOL(2,I)
      J=J+5
1220  I=I+1
      IF (I.LE.HISYM)GOTO 1190 
      CALL LIST
C
C     CHECK FOR UNDEFINED SYMBOLS
C
1230  IF (HISYM.EQ.0)GOTO 1330 
      DO 1240 I=1,HISYM
         IF (IAND(SYMBOL(3,I),1).EQ.0.AND.SYMBOL(1,I).NE.1HA)GOTO 1250 
1240  CONTINUE 
      GOTO 1330 
1250  N=3*(LOWID/12)
      IF (N.GT.27)N=27
      DO 1260 J=1,33
1260  LOBUF(J)=BLANK
      CALL LIST
      CALL LIST
      DO 1270 J=1,5
1270  LOBUF(J)=UNDHED(J)
      CALL LIST
1280  DO 1290 J=1,33
1290  LOBUF(J)=BLANK
      CALL LIST
      J=1
1300  IF (IAND(SYMBOL(3,I),1).NE.0.OR.SYMBOL(1,I).EQ.1HA)GOTO 1320 
      IF (J.LT.N)GOTO 1310 
      CALL LIST
      GOTO 1280 
1310  LOBUF(J)=SYMBOL(1,I)
      LOBUF(J+1)=SYMBOL(2,I)
      J=J+3
1320  I=I+1
      IF (I.LE.HISYM)GOTO 1300 
      CALL LIST
C
C     DO CROSS REFERENCE, IF NECESSARY
C
1330  CALL ACPU(CPU2)
      CPU2=CPU2-CPU1
      IF (LOLIM-LOLINE.GE.5)GOTO 1340 
      LOPAGE=LOPAGE+1
      N=80
      IF (LOWID.LT.107)N=LOWID-27
      WRITE (LOUNIT,9010)TIME,DATE,LOPAGE,(TITLE(I),I=1,N)
      WRITE (LOUNIT,9020)
      LOLINE=2
1340  WRITE (LOUNIT,9020)
      WRITE (LOUNIT,9020)
      WRITE (LOUNIT,9030)CPU2
      IF (ERRCNT.EQ.0)WRITE (LOUNIT,9040)
      IF (ERRCNT.EQ.1)WRITE (LOUNIT,9050)
      IF (ERRCNT.GT.1)WRITE (LOUNIT,9060)ERRCNT
      IF (IAND(OPTION,OPTXR).EQ.0.OR.HISYM.EQ.0)GOTO 1440 
      CLOSE (XRUNIT,STATUS='KEEP')
      OPEN (XRUNIT,NAME='*XR',FORM='FORMATTED',RECL=256,USAGE='INPUT',
     1STATUS='OLD',ACCESS='DIRECT')
      LOLINE=9999
      DO 1350 I=1,80
1350  TITLE(I)=BLANK
      DO 1360 I=1,15
1360  TITLE(I)=XRHEAD(I)
      N=4*((LOWID-16)/16)
      IF (N.GT.24)N=24
      I=1
1370  DO 1380 J=1,33
1380  LOBUF(J)=BLANK
      J=5
      LOBUF(2)=SYMBOL(1,I)
      LOBUF(3)=SYMBOL(2,I)
      IF (IAND(SYMBOL(3,I),16).NE.0)LOBUF(1)=XREL
      IF (IAND(SYMBOL(3,I),8).NE.0)LOBUF(1)=XEXT
      IF (IAND(SYMBOL(3,I),4).NE.0)LOBUF(1)=XENT
      IF (IAND(SYMBOL(3,I),3).EQ.0)LOBUF(1)=XUND
      XRREC=SYMBOL(5,I)
1390  IF (XRREC.EQ.0)GOTO 1430 
      IF (J.LE.N)GOTO 1410 
      CALL LIST
      DO 1400 J=1,33
1400  LOBUF(J)=BLANK
      J=5
1410  READ (XRUNIT,REC=XRREC)XRBUF
      IF (XRBUF(2).EQ.INUNIT)LOBUF(J+1)=XMINS
      IF (XRBUF(2).EQ.MCUNIT)LOBUF(J+1)=XPLUS
      IF (XRBUF(1).LT.0)LOBUF(J+1)=XASTR
      CALL CVD(LOBUF(J),IABS(XRBUF(1)))
      DO 1420 K=1,7
1420  CALL PACK(XRBUF(4),BLANK)
      LOBUF(J+1)=ISL(LOBUF(J+1),NBITS2)+ISL(XRBUF(4),MBITS2)
      LOBUF(J+2)=ISL(XRBUF(4),NBITS2)+ISL(XRBUF(5),MBITS2)
      LOBUF(J+3)=ISL(XRBUF(5),NBITS2)+ISL(BLANK,MBITS2)
      J=J+4
      XRREC=XRBUF(3)
      GOTO 1390 
1430  CALL LIST
      I=I+1
      IF (I.LE.HISYM)GOTO 1370 
      CLOSE (XRUNIT,STATUS='DELETE')
C
C     END-OF-JOB
C
1440  CLOSE (LOUNIT,STATUS='KEEP')
      STOP 
9000  FORMAT(' ASM 6502 05/07/81'/)
9010  FORMAT('1',2A4,1X,2A4,1X,'PAGE',I4,1X,80A1)
9020  FORMAT(' ')
9030  FORMAT(1X,F8.2,' SECONDS OF CPU TIME USED FOR THIS ASSEMBLY.')
9040  FORMAT('       NO STATEMENTS FLAGGED.')
9050  FORMAT('        1 STATEMENT FLAGGED.')
9060  FORMAT(1X,I8,' STATEMENTS FLAGGED.')
      END 
      SUBROUTINE DOPASS
C
C     PERFORM AN ASSEMBLY PASS, DEPENDING ON THE VALUE OF PASS.
C
      IMPLICIT INTEGER(A-Z)
      INCLUDE ASM6502_C1
      CHARACTER*8 FILENM,FILEAC
      DIMENSION ENDCMD(20),LOCBUF(256)
      DATA ENDCMD/' ','E','N','D',';','S','U','P','P','L','I','E','D',
     1  ' ','B','Y',' ','A','S','M'/
      DATA XMINS/'-   '/,XPLUS/'+   '/,XASTR/'*   '/,XPERD/'.   '/,
     1  XSLSH/'/   '/,XRCON/'R   '/,XXCON/'X   '/
C
C     INITIALIZE VARIABLES FOR A PASS.
C
      OPTION=HOLDOP
      CLOCK=HOLDCL
      DO 1000 I=1,10
         LNSTK(I)=0
1000  IUSTK(I)=0
      DO 1010 I=1,2
         DO 1010 J=1,8
1010  SRACCT(I,J)=HOLDSR(I,J)
      REFCNT=1
      LOCCTR=512
      FLAGIF=0
      FLAGMC=0
      FLAGLS=1
      GO2LBL(1)=0
      GO2LBL(2)=0
      LNCNT=0
      LOPAGE=0
      LOLINE=99999999
      MCREC=1
      DIDMAC=0
      ERRCNT=0
      DO 1020 I=1,120
1020  TITLE(I)=BLANK
      IF (PASS.EQ.2)GOTO 1040 
      DO 1030 I=1,HISYM
1030  SYMBOL(3,I)=0
C
C     SET UP VALUES TO READ A COMMAND IMAGE
C
1040  ARGCNT=0
      ARGTYP=0
      ERRORS=0
      RELOC=0
      RELBAS=0
      LABEL(1)=0
      LABEL(2)=0
      OPCODE(1)=0
      OPCODE(2)=0
      OBJCNT=0
      OPIDX=OPLIM+1
      IF (BREAK.EQ.0)GOTO 1050 
      IF (IUNIT.EQ.SIUNIT.OR.IUNIT.EQ.TMUNIT)WRITE (108,9120)ERRCNT,
     1PASS,LNCNT
      IF (IUNIT.EQ.MCUNIT)WRITE (108,9130)ERRCNT,PASS,LNCNT
      IF (IUNIT.EQ.INUNIT)WRITE (108,9140)ERRCNT,LNCNT,FILENM,FILEAC
      BREAK=0
C
C     READ AN IMAGE FROM SOMEWHERE
C
1050  CALL READSI
      IF (ARS) 3090,3060,1060
C
C     CHECK FOR COMMENT
C
1060  CURPOS=1
      CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H*.OR.CH.EQ.1H;.OR.CH.EQ.1H!.OR.CH.EQ.KEOC)GOTO 2700 
C
C     CHECK FOR AND PACK LABEL INTO LABEL
C
      IF (TY.NE.1)GOTO 1090 
      SAVCHR=CH
      LEN=0
1070  CALL NXTCHR(CH,TY)
      IF (TY.NE.1.AND.TY.NE.2)GOTO 1080 
      CALL PACK(LABEL,SAVCHR)
      SAVCHR=CH
      LEN=LEN+1
      GOTO 1070 
1080  IF (LEN.GT.0.AND.SAVCHR.EQ.1H:)GOTO 1090 
      CALL PACK(LABEL,SAVCHR)
C
C     SKIP BLANKS UP TO OPCODE
C
1090  IF (CH.EQ.1H )GOTO 1100 
      IF ((CH.EQ.1H;.OR.CH.EQ.1H!.OR.CH.EQ.KEOC).AND.LABEL(1).EQ.0)
     1GOTO 2700 
      IF (CH.EQ.1H=)GOTO 1110 
      ERRORS=IOR(ERRORS,ERRL)
      CALL NXTCHR(CH,TY)
      IF (CH.NE.KEOC)GOTO 1090 
      GOTO 2700 
C
C     SKIP MORE BLANKS UP TO OPCODE
C
1100  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H )GOTO 1100 
      IF (TY.EQ.1)GOTO 1120 
      IF ((CH.EQ.1H;.OR.CH.EQ.1H!.OR.CH.EQ.KEOC).AND.LABEL(1).EQ.0)
     1GOTO 2700 
      IF (CH.EQ.1H=)GOTO 1110 
      ERRORS=IOR(ERRORS,ERRO)
      GOTO 2700 
C
C     HANDLE = EQUATE
C
1110  CALL PACK(OPCODE,1HE)
      CALL PACK(OPCODE,1HQ)
      CALL PACK(OPCODE,1HU)
      GOTO 1130 
C
C     PACK OPCODE INTO OPCODE
C
1120  CALL PACK(OPCODE,CH)
      CALL NXTCHR(CH,TY)
      IF (TY.EQ.1.OR.TY.EQ.2)GOTO 1120 
      IF (CH.EQ.1H;.OR.CH.EQ.1H!.OR.CH.EQ.KEOC)GOTO 1270 
      IF (CH.EQ.1H )GOTO 1130 
      ERRORS=IOR(ERRORS,ERRA)
      GOTO 2700 
C
C     SKIP BLANKS UP TO ARGUMENT, COMMENT, OR EOC
C
1130  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H )GOTO 1130 
      IF (CH.EQ.1H;.OR.CH.EQ.1H!.OR.CH.EQ.KEOC)GOTO 1270 
      ARGBGN=CURPOS-1
C
C     SCAN ARGUMENT FIELD, COUNTING ARGUMENTS (COMMAS) AND FIND ENDS
C
1140  IF (CH.EQ.1H')GOTO 1160 
      IF (CH.EQ.1H")GOTO 1170 
1150  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H,)ARGCNT=ARGCNT+1
      IF (CH.EQ.1H;.OR.CH.EQ.1H!.OR.CH.EQ.1H .OR.CH.EQ.KEOC)GOTO 1180 
      GOTO 1140 
C
C     SCAN FOR CLOSING QUOTE
C
1160  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H')GOTO 1150 
      IF (CH.NE.KEOC)GOTO 1160 
      ERRORS=IOR(ERRORS,ERRA)
      GOTO 2700 
C
C     SCAN FOR CLOSING DOUBLE QUOTE
C
1170  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H")GOTO 1150 
      IF (CH.NE.KEOC)GOTO 1170 
      ERRORS=IOR(ERRORS,ERRA)
      GOTO 2700 
C
C     POINT TO ARGUMENT END AND COUNT LAST ARGUMENT
C
1180  ARGEND=CURPOS-2
      ARGCNT=ARGCNT+1
C
C     NOW FIGURE OUT WHAT TYPE OF ARGUMENT FIELD
C
      CH=INPBUF(ARGBGN)
C
C     CHECK FOR IMMEDIATE OPERAND (#NN OR =NN)
C
      IF (ARGCNT.NE.1.OR.(CH.NE.1H#.AND.CH.NE.1H=))GOTO 1190 
      ARGTYP=1
      GOTO 1270 
C
C     CHECK FOR INDIRECT OR INDEXED OPERAND
C
1190  IF (CH.NE.1H()GOTO 1220 
C
C     CHECK FOR PRE-INDEXED BY X ((NN,X))
C
      IF (INPBUF(ARGEND-2).NE.1H,.OR.INPBUF(ARGEND-1).NE.1HX.OR.INPBUF(
     1ARGEND).NE.1H).OR.ARGCNT.NE.2)GOTO 1200 
      ARGTYP=2
      GOTO 1270 
C
C     CHECK FOR POST-INDEXED BY Y ((NN),Y)
C
1200  IF (INPBUF(ARGEND-2).NE.1H).OR.INPBUF(ARGEND-1).NE.1H,.OR.INPBUF(
     1ARGEND).NE.1HY.OR.ARGCNT.NE.2)GOTO 1210 
      ARGTYP=3
      GOTO 1270 
C
C     CHECK FOR INDIRECT ((PPQQ))
C
1210  IF (INPBUF(ARGEND).NE.1H).OR.ARGCNT.NE.1)GOTO 1260 
      ARGTYP=4
      GOTO 1270 
C
C     CHECK FOR A (A)
C
1220  IF (CH.NE.1HA.OR.ARGBGN.NE.ARGEND)GOTO 1230 
      ARGTYP=5
      GOTO 1270 
C
C     CHECK FOR INDEXED BY X (NN,X OR PPQQ,X)
C
1230  IF (INPBUF(ARGEND-1).NE.1H,.OR.INPBUF(ARGEND).NE.1HX.OR.ARGCNT.NE.
     12)GOTO 1240 
      ARGTYP=6
      GOTO 1270 
C
C     CHECK FOR INDEXED BY Y (NN,Y OR PPQQ,Y)
C
1240  IF (INPBUF(ARGEND-1).NE.1H,.OR.INPBUF(ARGEND).NE.1HY.OR.ARGCNT.NE.
     12)GOTO 1250 
      ARGTYP=7
      GOTO 1270 
C
C     CHECK FOR DIRECT (NN OR PPQQ OR EE)
C
1250  IF (ARGCNT.NE.1)GOTO 1260 
      ARGTYP=8
      GOTO 1270 
C
C     SET ARGUMENT TYPE TO "UNKNOWN"
C
1260  ARGTYP=-1
C
C     PAD OUT OPCODE WITH BLANKS THEN LOOK IT UP
C
1270  DO 1280 I=1,7
1280  CALL PACK(OPCODE,BLANK)
      OPIDX=0
1290  OPIDX=OPIDX+1
      IF (OPIDX.LE.OPLIM)GOTO 1300 
      ERRORS=IEOR(ERRORS,ERRO)
      RELOC=0
      IF (IAND(OPTION,OPTREL).NE.0)RELOC=1
      RELBAS=0
      IF (LOCCTR.GE.256)RELBAS=1
      PTR=DULBL(LOCCTR)
      RELOC=0
      RELBAS=0
      GOTO 2460 
1300  IF (OPCODE(1).NE.OPTBL(1,OPIDX).OR.OPCODE(2).NE.OPTBL(2,OPIDX))
     1GOTO 1290 
C
C     CHECK IF WE'RE IN A GOTO
C
      IF (GO2LBL(1).EQ.0)GOTO 1310 
C
C     WE ARE; SEE IF WE FOUND THE LABEL
C
      IF (LABEL(1).NE.GO2LBL(1).OR.LABEL(2).NE.GO2LBL(2))GOTO 2670 
C
C     WE FOUND OUR TARGET GOTO LABEL; CLEAR IT AND DO THIS INSTRUCTION
C
      GO2LBL(1)=0
      GO2LBL(2)=0
C
C     SEE IF WE'RE IN AN IF/ELSE
C
1310  IF (FLAGIF.LE.0)GOTO 1340 
C
C     WE ARE; SEE IF WE FOUND AN IF, ELSE, OR FI
C
      IF (OPTYPE(OPIDX).NE.36)GOTO 1320 
C
C     IF IN AN IF; BUMP IF COUNTER
C
      FLAGIF=FLAGIF+1
      GOTO 2670 
C
1320  IF (OPTYPE(OPIDX).NE.37)GOTO 1330 
C
C     ELSE IN AN IF; ARE WE AT LEVEL ONE?
C
      IF (FLAGIF.GT.1)GOTO 2670 
C
C     CLEAR THE IF FLAG & DO THIS ELSE
C
      FLAGIF=0
      GOTO 2700 
1330  IF (OPTYPE(OPIDX).NE.38)GOTO 2670 
C
C     FI IN AN IF; DECREMENT THE IF COUNTER
C
      FLAGIF=FLAGIF-1
      GOTO 2670 
C
C     CHECK IF WE'RE DEFINING A MACRO
C
1340  IF (FLAGMC.NE.0.AND.OPTYPE(OPIDX).NE.43)GOTO 2700 
C
C     SEE WHAT TYPE OF OPCODE THIS IS
C
      IF (OPTYPE(OPIDX).GT.13)GOTO 1600 
C
C     THIS IS A MACHINE INSTRUCTION; PROCESS THE LABEL
C
      RELOC=0
      IF (IAND(OPTION,OPTREL).NE.0)RELOC=1
      RELBAS=0
      IF (LOCCTR.GE.256)RELBAS=1
      PTR=DULBL(LOCCTR)
      RELOC=0
      RELBAS=0
C
C     LETS VALIDATE THE OPCODE/ARGUMENT TYPE
C
1350  IF (ARGTYP.LT.0)GOTO 1380 
      PTR=ARGMAT(ARGTYP+1,OPTYPE(OPIDX))
      IF (PTR.GE.0)GOTO 1390 
      IF (ARGTYP.NE.5)GOTO 1360 
      ARGTYP=9
      GOTO 1350 
1360  IF (ARGTYP.LT.6.OR.ARGTYP.GT.9)GOTO 1380 
      ARGTYP=ARGTYP+3
      GOTO 1350 
1370  ARGTYP=ARGTYP+3
      PTR=ARGMAT(ARGTYP+1,OPTYPE(OPIDX))
      IF (PTR.LT.0)GOTO 1380 
      OBJECT(1)=OPBASE(OPIDX)+PTR
      GOTO(1400,1410,1430,1450,1470,1480,1490,1500,1510,1550,1570,1590),
     1ARGTYP+1
C
C     OPCODE/ARGUMENT TYPE MISMATCH
C
1380  ERRORS=IOR(ERRORS,ERRA)
      GOTO 2460 
C
C     COMPUTE BASE OPCODE
C
1390  OBJECT(1)=OPBASE(OPIDX)+PTR
C
C     GO TO  THE PROPER FINISHING ROUTINE
C
      GOTO(1400,1410,1430,1450,1470,1480,1490,1500,1510,1540,1560,1580),
     1ARGTYP+1
C
C     IMPLIED ADDRESSING
C
1400  OBJCNT=1
      GOTO 2700 
C
C     IMMEDIATE ADDRESSING
C
1410  CURPOS=ARGBGN+1
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND+1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0)GOTO 2450 
      IF ((VAL.LT.256.OR.VAL.GT.65407).AND.RELBAS.LE.127)GOTO 1420 
      ERRORS=IOR(ERRORS,ERRT)
      VAL=IAND(VAL,255)
1420  OBJECT(2)=IAND(VAL,255)
      OBJCNT=2
      IF (PASS.NE.2.OR.RELOC.EQ.0.OR.IAND(OPTION,OPTOU).EQ.0)GOTO 2700 
      CALL OBJOUT(4,LOCCTR+1,1,IAND(RELOC,128)+IAND(RELBAS,127))
      GOTO 2700 
C
C     INDIRECT, PRE-INDEXED BY X
C
1430  CURPOS=ARGBGN+1
      HOLD=INPBUF(ARGEND-2)
      INPBUF(ARGEND-2)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND-2)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0)GOTO 2450 
      IF ((VAL.LT.256.OR.VAL.GT.65407).AND.RELBAS.LE.127)GOTO 1440 
      ERRORS=IOR(ERRORS,ERRT)
      VAL=IAND(VAL,255)
1440  OBJECT(2)=IAND(VAL,255)
      OBJCNT=2
      IF (PASS.NE.2.OR.RELOC.EQ.0.OR.IAND(OPTION,OPTOU).EQ.0)GOTO 2700 
      CALL OBJOUT(4,LOCCTR+1,1,IAND(RELOC,128)+IAND(RELBAS,127))
      GOTO 2700 
C
C     INDIRECT, POST-INDEXED BY Y
C
1450  CURPOS=ARGBGN+1
      HOLD=INPBUF(ARGEND-2)
      INPBUF(ARGEND-2)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND-2)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0)GOTO 2450 
      IF ((VAL.LT.256.OR.VAL.GT.65407).AND.RELBAS.LE.127)GOTO 1460 
      ERRORS=IOR(ERRORS,ERRT)
      VAL=IAND(VAL,255)
1460  OBJECT(2)=IAND(VAL,255)
      OBJCNT=2
      IF (PASS.NE.2.OR.RELOC.EQ.0.OR.IAND(OPTION,OPTOU).EQ.0)GOTO 2700 
      CALL OBJOUT(4,LOCCTR+1,1,IAND(RELOC,128)+IAND(RELBAS,127))
      GOTO 2700 
C
C     INDIRECT
C
1470  CURPOS=ARGBGN+1
      HOLD=INPBUF(ARGEND)
      INPBUF(ARGEND)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0)GOTO 2450 
      OBJECT(2)=IAND(VAL,255)
      OBJECT(3)=IAND(VAL/256,255)
      OBJCNT=3
      IF (PASS.NE.2.OR.RELOC.EQ.0.OR.IAND(OPTION,OPTOU).EQ.0)GOTO 2700 
      CALL OBJOUT(3,LOCCTR+1,1,IAND(RELOC,128)+IAND(RELBAS,127))
      GOTO 2700 
C
C     A-REGISTER
C
1480  OBJCNT=1
      GOTO 2700 
C
C     INDEXED BY X (SHORT FORM)
C
1490  CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND-1)
      INPBUF(ARGEND-1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND-1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0)GOTO 2450 
      IF (VAL.GE.256.OR.RELBAS.GT.127)GOTO 1370 
      IF (IAND(ERRORS,ERRS).NE.0.OR.IAND(ERRORS,ERRU).NE.0)GOTO 1370 
      OBJECT(2)=IAND(VAL,255)
      OBJCNT=2
      IF (PASS.NE.2.OR.RELOC.EQ.0.OR.IAND(OPTION,OPTOU).EQ.0)GOTO 2700 
      CALL OBJOUT(4,LOCCTR+1,IAND(RELOC,128)+IAND(RELBAS,127))
      GOTO 2700 
C
C     INDEXED BY Y (SHORT FORM)
C
1500  CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND-1)
      INPBUF(ARGEND-1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND-1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0)GOTO 2450 
      IF (VAL.GE.256.OR.RELBAS.GT.127)GOTO 1370 
      IF (IAND(ERRORS,ERRS).NE.0.OR.IAND(ERRORS,ERRU).NE.0)GOTO 1370 
      OBJECT(2)=IAND(VAL,255)
      OBJCNT=2
      IF (PASS.NE.2.OR.RELOC.EQ.0.OR.IAND(OPTION,OPTOU).EQ.0)GOTO 2700 
      CALL OBJOUT(4,LOCCTR+1,1,IAND(RELOC,128)+IAND(RELBAS,127))
      GOTO 2700 
C
C     DIRECT (SHORT FORM) OR OFFSET (FOR BRANCHES)
C
1510  CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND+1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0)GOTO 2450 
      IF (OPTYPE(OPIDX).EQ.3)GOTO 1520 
      IF (VAL.GE.256.OR.RELBAS.GT.127)GOTO 1370 
      IF (IAND(ERRORS,ERRS).NE.0.OR.IAND(ERRORS,ERRU).NE.0)GOTO 1370 
      OBJECT(2)=IAND(VAL,255)
      OBJCNT=2
      IF (PASS.NE.2.OR.RELOC.EQ.0.OR.IAND(OPTION,OPTOU).EQ.0)GOTO 2700 
      CALL OBJOUT(4,LOCCTR+1,1,IAND(RELOC,128)+IAND(RELBAS,127))
      GOTO 2700 
1520  VAL=IAND(VAL-LOCCTR-2,65535)
      IF ((VAL.LT.128.OR.VAL.GT.65407).AND.RELBAS.LT.2)GOTO 1530 
      ERRORS=IOR(ERRORS,ERRT)
      VAL=IAND(VAL,255)
1530  OBJECT(2)=IAND(VAL,255)
      OBJCNT=2
      GOTO 2700 
C
C     INDEXED BY X (LONG FORM)
C
1540  CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND-1)
      INPBUF(ARGEND-1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND-1)=HOLD
1550  IF (VAL.EQ.99999.OR.VAL.LT.0)GOTO 2450 
      OBJECT(2)=IAND(VAL,255)
      OBJECT(3)=IAND(VAL/256,255)
      OBJCNT=3
      IF (PASS.NE.2.OR.RELOC.EQ.0.OR.IAND(OPTION,OPTOU).EQ.0)GOTO 2700 
      CALL OBJOUT(3,LOCCTR+1,1,IAND(RELOC,128)+IAND(RELBAS,127))
      GOTO 2700 
C
C     INDEXED BY Y (LONG FORM)
C
1560  CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND-1)
      INPBUF(ARGEND-1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND-1)=HOLD
1570  IF (VAL.EQ.99999.OR.VAL.LT.0)GOTO 2450 
      OBJECT(2)=IAND(VAL,255)
      OBJECT(3)=IAND(VAL/256,255)
      OBJCNT=3
      IF (PASS.NE.2.OR.RELOC.EQ.0.OR.IAND(OPTION,OPTOU).EQ.0)GOTO 2700 
      CALL OBJOUT(3,LOCCTR+1,1,IAND(RELOC,128)+IAND(RELBAS,127))
      GOTO 2700 
C
C     DIRECT (LONG FORM)
C
1580  CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND+1)=HOLD
1590  IF (VAL.EQ.99999.OR.VAL.LT.0)GOTO 2450 
      OBJECT(2)=IAND(VAL,255)
      OBJECT(3)=IAND(VAL/256,255)
      OBJCNT=3
      IF (PASS.NE.2.OR.RELOC.EQ.0.OR.IAND(OPTION,OPTOU).EQ.0)GOTO 2700 
      CALL OBJOUT(3,LOCCTR+1,1,IAND(RELOC,128)+IAND(RELBAS,127))
      GOTO 2700 
C
C     OPTYPE(OPIDX) EXCEEDS 13, INDICATING A SPECIAL OPCODE OR MACRO
C
1600  IF (OPTYPE(OPIDX).GT.100)GOTO 2470 
      IF (OPBASE(OPIDX).EQ.0)GOTO 1610 
C
C     ASSIGN LABEL THE VALUE OF THE LOCATION COUNTER
C
      RELOC=0
      IF (IAND(OPTION,OPTREL).NE.0)RELOC=1
      RELBAS=0
      IF (LOCCTR.GE.256)RELBAS=1
      PTR=DULBL(LOCCTR)
      RELOC=0
      RELBAS=0
C
C     GO TO PROPER ROUTINE
C
1610  GOTO(1620,1620,1620,1770,1620,1790,1810,1840,1850,1850,1940,1960,
     12070,2090,2120,2200,2210,2220,2230,2260,2280,2290,2430,2610,1850,
     21820),OPTYPE(OPIDX)-20
C
C     PROCESS DATA/WORD/BYTE/TEXT/ADDR INSTRUCTIONS
C
1620  IF (ARGTYP.EQ.0)GOTO 2450 
      CURPOS=ARGBGN
      PTR=ARGBGN
1630  IF (PTR.GT.ARGEND.OR.INPBUF(PTR).EQ.1H,)GOTO 1670 
      IF (INPBUF(PTR).EQ.1H')GOTO 1650 
      IF (INPBUF(PTR).EQ.1H")GOTO 1660 
1640  PTR=PTR+1
      GOTO 1630 
1650  PTR=PTR+1
      IF (INPBUF(PTR).NE.1H')GOTO 1650 
      GOTO 1640 
1660  PTR=PTR+1
      IF (INPBUF(PTR).NE.1H")GOTO 1660 
      GOTO 1640 
1670  HOLD=INPBUF(PTR)
      INPBUF(PTR)=KEOC
      CALL EVE(VAL)
      INPBUF(PTR)=HOLD
      IF (VAL.EQ.99999)GOTO 2450 
      GOTO(1680,1720,1730,1770,1750),OPTYPE(OPIDX)-20
C
C     PROCESS DATA/TEXT OPCODE
C
1680  IF (VAL.GE.0)GOTO 1700 
      VAL=-VAL
      DO 1690 I=1,VAL
         OBJCNT=OBJCNT+1
         OBJECT(OBJCNT)=ISL(TEXT(I),MBITS3)
1690  CONTINUE 
      GOTO 1760 
1700  IF ((VAL.LT.256.OR.VAL.GT.65407).AND.RELBAS.LE.127)GOTO 1710 
      OBJCNT=OBJCNT+1
      OBJECT(OBJCNT)=IAND(VAL/256,255)
      IF (PASS.EQ.2.AND.RELOC.NE.0.AND.IAND(OPTION,OPTOU).NE.0)
     1CALL OBJOUT(3,LOCCTR+OBJCNT-1,1,IAND(RELOC,128)+IAND(RELBAS,127))
1710  OBJCNT=OBJCNT+1
      OBJECT(OBJCNT)=IAND(VAL,255)
      IF (PASS.EQ.2.AND.RELOC.NE.0.AND.IAND(OPTION,OPTOU).NE.0.AND.VAL
     1.GE.256.AND.VAL.LE.65407)CALL OBJOUT(4,LOCCTR+OBJCNT-1,1,IAND
     2(RELOC,128)+IAND(RELBAS,127))
      GOTO 1760 
C
C     PROCESS WORD OPCODE
C
1720  IF (VAL.LT.0)GOTO 2450 
      OBJCNT=OBJCNT+1
      OBJECT(OBJCNT)=IAND(VAL/256,255)
      OBJCNT=OBJCNT+1
      OBJECT(OBJCNT)=IAND(VAL,255)
      IF (RELOC.NE.0)ERRORS=IOR(ERRORS,ERRR)
      GOTO 1760 
C
C     PROCESS BYTE OPCODE
C
1730  IF (VAL.LT.0)GOTO 2450 
      IF ((VAL.LT.256.OR.VAL.GT.65407).AND.RELBAS.LE.127)GOTO 1710 
      ERRORS=IOR(ERRORS,ERRT)
1740  OBJCNT=OBJCNT+1
      OBJECT(OBJCNT)=IAND(VAL,255)
      IF (PASS.EQ.2.AND.RELOC.NE.0.AND.IAND(OPTION,OPTOU).NE.0)
     1CALL OBJOUT(4,LOCCTR+OBJCNT-1,1,IAND(RELOC,128)+IAND(RELBAS,127))
      GOTO 1760 
C
C     PROCESS ADDR OPCODE
C
1750  IF (VAL.LT.0)GOTO 2450 
      OBJCNT=OBJCNT+1
      OBJECT(OBJCNT)=IAND(VAL,255)
      OBJCNT=OBJCNT+1
      OBJECT(OBJCNT)=IAND(VAL/256,255)
      IF (PASS.EQ.2.AND.RELOC.NE.0.AND.IAND(OPTION,OPTOU).NE.0)
     1CALL OBJOUT(3,LOCCTR+OBJCNT-2,1,IAND(RELOC,128)+IAND(RELBAS,127))
C
C     BUMP TO NEXT ARGUMENT
C
1760  PTR=PTR+1
      CURPOS=PTR
      IF (PTR.LE.ARGEND)GOTO 1630 
      GOTO 2700 
C
C     PROCESS SET COMMAND
C
1770  IF (LABEL(1).NE.0)GOTO 1780 
      ERRORS=IOR(ERRORS,ERRL)
      GOTO 2700 
1780  IF (ARGCNT.NE.1)GOTO 2450 
      CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND+1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0.OR.RELBAS.GT.1)GOTO 2450 
      PTR=DULBL(VAL)
      IF (PTR.LE.0)GOTO 2700 
      SYMBOL(3,PTR)=IOR(SYMBOL(3,PTR),2)
      GOTO 2700 
C
C     PROCESS EQU COMMAND
C
1790  IF (LABEL(1).NE.0)GOTO 1800 
      ERRORS=IOR(ERRORS,ERRL)
      GOTO 2700 
1800  IF (ARGCNT.NE.1)GOTO 2450 
      CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND+1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0.OR.RELBAS.GT.1)GOTO 2450 
      PTR=DULBL(VAL)
      GOTO 2700 
C
C     PROCESS ORG COMMAND
C
1810  IF (ARGCNT.NE.1)GOTO 2450 
      CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND+1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0.OR.RELBAS.GT.1)GOTO 2450 
      LOCCTR=VAL
      RELOC=0
      IF (IAND(OPTION,OPTREL).NE.0)RELOC=1
      RELBAS=0
      IF (LOCCTR.GE.256)RELBAS=1
      PTR=DULBL(LOCCTR)
      GOTO 2700 
C
C     PROCESS BOUND COMMAND
C
1820  IF (ARGCNT.NE.1)GOTO 2450 
      CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND+1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LE.0.OR.RELBAS.GT.1)GOTO 2450 
      IF (VAL.EQ.1)GOTO 1830 
      IF (PASS.EQ.2.AND.IAND(OPTION,OPTOU).NE.0)CALL OBJOUT(-1,0,0,0)
      IF (PASS.EQ.2.AND.IAND(OPTION,OPTOU).NE.0)CALL OBJOUT(IAND(OPTION,
     1OPTREL)+2,LOCCTR,2,VAL)
1830  LOCCTR=IAND(((LOCCTR+VAL-1)/VAL)*VAL,6O177777)
      RELOC=0
      IF (IAND(OPTION,OPTREL).NE.0)RELOC=1
      RELBAS=0
      IF (LOCCTR.GE.256)RELBAS=1
      PTR=DULBL(LOCCTR)
      GOTO 2700 
C
C     PROCESS RES COMMAND
C
1840  IF (ARGCNT.NE.1)GOTO 2450 
      CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND+1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0.OR.RELBAS.NE.0)GOTO 2450 
      IF (PASS.EQ.2.AND.IAND(OPTION,OPTOU).NE.0)CALL OBJOUT(IAND(OPTION,
     1OPTREL)+5,LOCCTR,2,VAL)
      LOCCTR=LOCCTR+VAL
      IF (LOCCTR.GT.65535.OR.LOCCTR.LT.0)ERRORS=IOR(ERRORS,ERRT)
      LOCCTR=IAND(LOCCTR,65535)
      GOTO 2700 
C
C     PROCESS ENT/DEF AND EXT[L|S]/REF[L|S] COMMANDS
C
1850  IF (LABEL(1).NE.0)ERRORS=IAND(ERRORS,ERRL)
      IF (ARGCNT.LE.0)GOTO 2450 
      CURPOS=ARGBGN
1860  LABEL(1)=0
      LABEL(2)=0
      CALL NXTCHR(CH,TY)
      IF (TY.NE.1)GOTO 2450 
      CALL PACK(LABEL(1),CH)
1870  CALL NXTCHR(CH,TY)
      IF (TY.NE.1.AND.TY.NE.2)GOTO 1880 
      CALL PACK(LABEL(1),CH)
      GOTO 1870 
1880  PTR=DULBL(-1)
      IF (OPTYPE(OPIDX).NE.29)GOTO 1900 
      IF (IAND(SYMBOL(3,PTR),8).EQ.0)GOTO 1890 
      ERRORS=IOR(ERRORS,ERRD)
      GOTO 1930 
1890  SYMBOL(3,PTR)=IOR(SYMBOL(3,PTR),4)
      IF (PASS.GT.0.AND.IAND(SYMBOL(3,PTR),3).EQ.0)ERRORS=IOR(ERRORS,
     1ERRU)
      GOTO 1930 
1900  IF (SYMBOL(3,PTR).EQ.0)GOTO 1910 
      IF (ISL(SYMBOL(3,PTR),MBITS2).NE.0)GOTO 1930 
      ERRORS=IOR(ERRORS,ERRD)
      GOTO 1930 
1910  REFCNT=REFCNT+1
      IF (REFCNT.LE.127)GOTO 1920 
      ERRORS=IOR(ERRORS,ERRX)
      GOTO 1930 
1920  IF (OPTYPE(OPIDX).EQ.30)SYMBOL(3,PTR)=ISL(REFCNT+128,NBITS2)+25
      IF (OPTYPE(OPIDX).EQ.45)SYMBOL(3,PTR)=ISL(REFCNT,NBITS2)+25
1930  IF (CH.EQ.1H .OR.CH.EQ.1H;.OR.CH.EQ.1H!.OR.CH.EQ.KEOC)GOTO 2700 
      IF (CH.NE.1H,)GOTO 2450 
      GOTO 1860 
C
C     PROCESS END COMMAND
C
1940  IF (IUNIT.EQ.SIUNIT.OR.IUNIT.EQ.TMUNIT)GOTO 1950 
      ERRORS=IOR(ERRORS,ERRO)
      GOTO 2700 
1950  IF (ARGCNT.EQ.0)GOTO 2700 
      IF (ARGCNT.NE.1)GOTO 2450 
      CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND+1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0.OR.RELBAS.GT.1)GOTO 2450 
      OBJCNT=2
      OBJECT(1)=IAND(VAL/256,255)
      OBJECT(2)=IAND(VAL,255)
      IF (PASS.EQ.2.AND.IAND(OPTION,OPTOU).NE.0)CALL OBJOUT(1,VAL,0,0)
      GOTO 2700 
C
C     PROCESS NAME/TITLE COMMAND
C
1960  IF (ARGCNT.NE.1)GOTO 2450 
      IF (LABEL(1).EQ.0)GOTO 1970 
      ERRORS=IOR(ERRORS,ERRL)
1970  CURPOS=ARGBGN
      CALL NXTCHR(CH,TY)
      PTR=1
      IF (CH.EQ.1H')GOTO 1980 
      IF (CH.EQ.1H")GOTO 2010 
      GOTO 2450 
1980  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H')GOTO 2000 
1990  IF (PTR.GT.80)GOTO 1980 
      TEXT(PTR)=CH
      PTR=PTR+1
      GOTO 1980 
2000  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H')GOTO 1990 
      IF (CH.NE.1H .AND.CH.NE.1H;.AND.CH.NE.1H!.AND.CH.NE.KEOC)
     1GOTO 2450 
      GOTO 2040 
2010  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H")GOTO 2030 
2020  IF (PTR.GT.80)GOTO 2010 
      TEXT(PTR)=CH
      PTR=PTR+1
      GOTO 2010 
2030  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H")GOTO 2020 
      IF (CH.NE.1H .AND.CH.NE.1H;.AND.CH.NE.1H!.AND.CH.NE.KEOC)
     1GOTO 2450 
2040  DO 2050 I=1,80
2050  TITLE(I)=BLANK
      DO 2060 I=1,PTR-1
2060  TITLE(I)=TEXT(I)
      LOLINE=LOLIM+1
      GOTO 2620 
C
C     PROCESS PAGE COMMAND
C
2070  IF (ARGCNT.NE.0)GOTO 2450 
      IF (LABEL(1).EQ.0)GOTO 2080 
      ERRORS=IOR(ERRORS,ERRL)
2080  LOLINE=LOLIM+1
      GOTO 2620 
C
C     PROCESS SKIP COMMAND
C
2090  IF (ARGCNT.GT.1)GOTO 2450 
      IF (LABEL(1).EQ.0)GOTO 2100 
      ERRORS=IOR(ERRORS,ERRL)
2100  VAL=1
      IF (ARGCNT.EQ.0)GOTO 2110 
      CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
2110  IF (VAL.EQ.99999.OR.VAL.LT.0.OR.RELBAS.NE.0)GOTO 2450 
      VAL=IAND(VAL,63)
      GOTO 2620 
C
C     PROCESS INCL COMMAND
C
2120  IF (ARGCNT.NE.1)GOTO 2450 
      IF (LABEL(1).EQ.0)GOTO 2130 
      ERRORS=IOR(ERRORS,ERRL)
2130  CURPOS=ARGBGN
      LABEL(1)=0
      LABEL(2)=0
      CALL NXTCHR(CH,TY)
      IF (TY.NE.1)GOTO 2450 
      CALL PACK(LABEL(1),CH)
2140  CALL NXTCHR(CH,TY)
      IF (TY.NE.1.AND.TY.NE.2)GOTO 2150 
      CALL PACK(LABEL(1),CH)
      GOTO 2140 
2150  IF (CH.NE.1H .AND.CH.NE.1H;.AND.CH.NE.1H!.AND.CH.NE.KEOC)
     1GOTO 2450 
      IF (IUNIT.NE.SIUNIT.AND.IUNIT.NE.TMUNIT)GOTO 2450 
      DO 2160 I=1,7
2160  CALL PACK(LABEL(1),BLANK)
      WRITE (FILENM,9000)LABEL
      FILEAC='        '
      I=0
2170  OPEN (INUNIT,NAME=FILENM,STATUS='OLD',ACCESS='SEQUENTIAL',FORM=
     1'FORMATTED',ACCOUNT=FILEAC,ERR=2180,USAGE='INPUT')
      IUSTK(1)=IUNIT
      LNSTK(1)=LNCNT
      GOTO 2700 
2180  I=I+1
      IF (I.GT.8.OR.SRACCT(1,I).EQ.0)GOTO 2190 
      WRITE (FILEAC,9000)SRACCT(1,I),SRACCT(2,I)
      GOTO 2170 
2190  IF (PASS.NE.0)GOTO 2700 
      WRITE (LOUNIT,9060)
      WRITE (LOUNIT,9050)
      STOP 
C
C     PROCESS IF STATEMENT
C
2200  IF (ARGCNT.NE.1)GOTO 2450 
      CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND+1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0.OR.RELBAS.NE.0)GOTO 2450 
      IF (VAL.NE.0)GOTO 2700 
      FLAGIF=1
      GOTO 2700 
C
C     PROCESS ELSE STATEMENT
C
2210  IF (ARGCNT.NE.0)GOTO 2450 
      FLAGIF=1
      GOTO 2700 
C
C     PROCESS FI STATEMENT
C
2220  IF (ARGCNT.NE.0)GOTO 2450 
      FLAGIF=0
      GOTO 2700 
C
C     PROCESS GOTO STATEMENT
C
2230  IF (ARGCNT.NE.1)GOTO 2450 
      GO2LBL(1)=0
      GO2LBL(2)=0
      CURPOS=ARGBGN
      CALL NXTCHR(CH,TY)
      IF (TY.NE.1)GOTO 2450 
      CALL PACK(GO2LBL(1),CH)
2240  CALL NXTCHR(CH,TY)
      IF (TY.NE.1.AND.TY.NE.2)GOTO 2250 
      CALL PACK(GO2LBL(1),CH)
      GOTO 2240 
2250  IF (CH.NE.1H .AND.CH.NE.1H;.AND.CH.NE.1H!.AND.CH.NE.KEOC)
     1GOTO 2450 
      GOTO 2700 
C
C     PROCESS LIST STATEMENT
C
2260  IF (ARGCNT.NE.0)GOTO 2270 
      FLAGLS=1
      GOTO 2620 
2270  IF (ARGCNT.NE.1)GOTO 2450 
      CURPOS=ARGBGN
      HOLD=INPBUF(ARGEND+1)
      INPBUF(ARGEND+1)=KEOC
      CALL EVE(VAL)
      INPBUF(ARGEND+1)=HOLD
      IF (VAL.EQ.99999.OR.VAL.LT.0.OR.RELBAS.NE.0)GOTO 2450 
      FLAGLS=IAND(VAL,15)
      GOTO 2620 
C
C     PROCESS NLIST STATEMENT
C
2280  IF (ARGCNT.NE.0)GOTO 2450 
      FLAGLS=0
      GOTO 2700 
C
C     PROCESS MAC STATEMENT
C
2290  IF (IUNIT.EQ.MCUNIT.OR.DIDMAC.NE.0)GOTO 2450 
      FLAGMC=1
      IF (LABEL(1).NE.0)GOTO 2300 
      ERRORS=IOR(ERRORS,ERRL)
      GOTO 2700 
2300  DO 2310 I=1,7
2310  CALL PACK(LABEL(1),BLANK)
      DO 2320 I=1,OPLIM
         IF (LABEL(1).EQ.OPTBL(1,I).AND.LABEL(2).EQ.OPTBL(2,I))
     1      GOTO 2350 
2320  CONTINUE 
      IF (PASS.EQ.0)GOTO 2330 
      WRITE (LOUNIT,9070)
      WRITE (LOUNIT,9050)
      STOP 
2330  OPLIM=OPLIM+1
      IF (OPLIM.LE.200)GOTO 2340 
      WRITE (LOUNIT,9080)
      WRITE (LOUNIT,9050)
      STOP 
2340  OPTBL(1,OPLIM)=LABEL(1)
      OPTBL(2,OPLIM)=LABEL(2)
      OPTYPE(OPLIM)=101
      OPBASE(OPLIM)=MCREC
      GOTO 2360 
2350  IF (PASS.GT.0)GOTO 2700 
      ERRORS=IOR(ERRORS,ERRD)
      GOTO 2700 
2360  DO 2370 I=1,256
2370  LOCBUF(I)=BLANK
      I=0
      IF (ARGCNT.LT.1)GOTO 2420 
      CURPOS=ARGBGN
2380  I=I+1
      J=I+7
      IF (I.GT.256)GOTO 2410 
      CALL NXTCHR(CH,TY)
      IF (TY.NE.1)GOTO 2410 
      LOCBUF(I)=CH
      I=I+1
2390  CALL NXTCHR(CH,TY)
      IF (TY.NE.1.AND.TY.NE.2)GOTO 2400 
      IF (I.GT.J)GOTO 2390 
      LOCBUF(I)=CH
      I=I+1
      GOTO 2390 
2400  I=J
      IF (CH.EQ.1H,)GOTO 2380 
      IF (CH.EQ.1H;.OR.CH.EQ.1H .OR.CH.EQ.1H!.OR.CH.EQ.KEOC)GOTO 2420 
2410  FLAGMC=0
      GOTO 2450 
2420  IF (PASS.NE.0)GOTO 2700 
      WRITE (MCUNIT,9100,REC=MCREC)LOCBUF
      MCREC=MCREC+1
      GOTO 2700 
C
C     PROCESS MEND STATEMENT
C
2430  IF (LABEL(1).NE.0.OR.ARGCNT.NE.0)GOTO 2450 
      IF (IUNIT.NE.MCUNIT)GOTO 2700 
      I=11
2440  I=I-1
      IF (IUSTK(I).EQ.0)GOTO 2440 
      IUNIT=IUSTK(I)
      LNCNT=LNSTK(I)
      IF (IUNIT.EQ.MCUNIT)MCREC=LNSTK(I)
      IUSTK(I)=0
      LNSTK(I)=0
      GOTO 1040 
C
C     SYNTACTICAL ERROR
C
2450  ERRORS=IOR(ERRORS,ERRS)
      GOTO 2700 
C
C     RESERVE THREE BYTES OF ZEROS FOR BAD OPCODES
C
2460  OBJECT(1)=0
      OBJECT(2)=0
      OBJECT(3)=0
      OBJCNT=3
      GOTO 2700 
C
C     PROCESS A MACRO INVOCATION
C
2470  RELOC=0
      IF (IAND(OPTION,OPTREL).NE.0)RELOC=1
      RELBAS=0
      IF (LOCCTR.GE.256)RELBAS=1
      PTR=DULBL(LOCCTR)
      RELOC=0
      RELBAS=0
2480  I=0
2490  I=I+1
      IF (I.LE.10)GOTO 2500 
      ERRORS=IOR(ERRORS,ERRM)
      GOTO 2700 
2500  IF (IUSTK(I).NE.0)GOTO 2490 
      DIDMAC=1
      IUSTK(I)=IUNIT
      LNSTK(I)=LNCNT
      MCREC=OPBASE(OPIDX)
      DO 2510 PTR=1,256
2510  MCHEAD(PTR,I)=INPBUF(PTR)
      READ (MCUNIT,9100,REC=MCREC,ERR=2600)INPBUF
      MCREC=MCREC+1
      CURPOS=1
      ARS=256
      DO 2530 PTR=1,32
         MCDUM(1,PTR,I)=0
         MCDUM(2,PTR,I)=0
         DO 2520 J=1,8
            CALL NXTCHR(CH,TY)
2520     CALL PACK(MCDUM(1,PTR,I),CH)
2530  CONTINUE 
      DO 2540 PTR=1,256
2540  INPBUF(PTR)=MCHEAD(PTR,I)
      DO 2550 PTR=1,32
         MCPTR(PTR,I)=0
2550  MCLEN(PTR,I)=0
      IF (ARGCNT.EQ.0)GOTO 2700 
      CURPOS=ARGBGN
      PTR=0
2560  PTR=PTR+1
      IF (PTR.GT.32)GOTO 2450 
      MCPTR(PTR,I)=CURPOS
2570  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H')GOTO 2580 
      IF (CH.EQ.1H")GOTO 2590 
      IF (CH.NE.1H,.AND.CH.NE.1H .AND.CH.NE.1H!.AND.CH.NE.1H;.AND.CH.NE
     1.KEOC)GOTO 2570 
      MCLEN(PTR,I)=CURPOS-MCPTR(PTR,I)-1
      IF (CH.EQ.1H,)GOTO 2560 
      GOTO 2700 
2580  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H')GOTO 2570 
      IF (CH.NE.KEOC)GOTO 2580 
      GOTO 2450 
2590  CALL NXTCHR(CH,TY)
      IF (CH.EQ.1H")GOTO 2570 
      IF (CH.NE.KEOC)GOTO 2590 
      GOTO 2450 
2600  WRITE (LOUNIT,9090)
      WRITE (LOUNIT,9050)
      STOP 
C
C     PROCESS OPTS STATEMENT
C
2610  IF (LABEL(1).NE.0.OR.ARGCNT.LE.0)GOTO 2450 
      CALL STOWOP(INPBUF(ARGBGN),ARGEND-ARGBGN+1)
      GOTO 2700 
C
C     <LIST> EXIT
C
2620  IF (PASS.NE.0.OR.FLAGMC.EQ.0)GOTO 2630 
      WRITE (MCUNIT,9100,REC=MCREC)INPBUF
      MCREC=MCREC+1
2630  IF (OPTYPE(OPIDX).EQ.43)FLAGMC=0
      IF (PASS.NE.0)GOTO 2640 
      IF (IUNIT.EQ.SIUNIT)WRITE (TMUNIT,9100)INPBUF
      LOCCTR=LOCCTR+OBJCNT
      IF (OPTYPE(OPIDX).NE.31)GOTO 3040 
      RETURN
2640  IF (PASS.NE.2)GOTO 3030 
      FLAG=BLANK
      IF (IUNIT.EQ.INUNIT)FLAG=XMINS
      IF (IUNIT.EQ.MCUNIT)FLAG=XPLUS
      IF (ERRORS.NE.0)GOTO 2730 
      IF (OPTYPE(OPIDX).NE.34)GOTO 2660 
      LOLINE=LOLINE+VAL
      IF (LOLINE.GE.LOLIM.OR.VAL.EQ.0)GOTO 2660 
      DO 2650 I=1,VAL
2650  WRITE (LOUNIT,9110)
2660  IF (IAND(FLAGLS,8).NE.0)GOTO 2730 
      GOTO 3020 
C
C     <SKIPPED> EXIT
C
2670  IF (PASS.NE.0.OR.FLAGMC.EQ.0)GOTO 2680 
      WRITE (MCUNIT,9100,REC=MCREC)INPBUF
      MCREC=MCREC+1
2680  IF (OPTYPE(OPIDX).EQ.43)FLAGMC=0
      IF (PASS.NE.0)GOTO 2690 
      IF (IUNIT.EQ.SIUNIT)WRITE (TMUNIT,9100)INPBUF
      LOCCTR=LOCCTR+OBJCNT
      IF (OPTYPE(OPIDX).NE.31)GOTO 3040 
      RETURN
2690  IF (PASS.NE.2)GOTO 3030 
      FLAG=XASTR
      IF (ERRORS.NE.0.OR.IAND(FLAGLS,8).NE.0)GOTO 2730 
      GOTO 3020 
C
C     <DONE> EXIT
C
2700  IF (PASS.NE.0.OR.FLAGMC.EQ.0)GOTO 2710 
      WRITE (MCUNIT,9100,REC=MCREC)INPBUF
      MCREC=MCREC+1
2710  IF (OPTYPE(OPIDX).EQ.43)FLAGMC=0
      IF (PASS.NE.0)GOTO 2720 
      IF (IUNIT.EQ.SIUNIT)WRITE (TMUNIT,9100)INPBUF
      LOCCTR=LOCCTR+OBJCNT
      IF (OPTYPE(OPIDX).NE.31)GOTO 3040 
      RETURN
2720  IF (PASS.NE.2)GOTO 3030 
      FLAG=BLANK
      IF (IUNIT.EQ.INUNIT)FLAG=XMINS
      IF (IUNIT.EQ.MCUNIT)FLAG=XPLUS
      IF (ERRORS.NE.0)GOTO 2730 
      IF (IUNIT.EQ.INUNIT.AND.IAND(FLAGLS,2).EQ.0)GOTO 3020 
      IF (IUNIT.EQ.MCUNIT.AND.IAND(FLAGLS,4).EQ.0)GOTO 3020 
      IF (IUNIT.EQ.TMUNIT.AND.IAND(FLAGLS,1).EQ.0)GOTO 3020 
C
C     GENERATE LISTING
C
2730  IF (PASS.NE.2.OR.(IAND(OPTION,OPTLS).EQ.0.AND.ERRORS.EQ.0))
     1GOTO 3020 
      DO 2740 I=1,33
2740  LOBUF(I)=BLANK
      CALL CVA(LOBUF(1),ERRORS)
      CURPOS=1
      DO 2750 I=9,28
2750  LOBUF(I)=0
      I=9
      CALL PACK(LOBUF(9),FLAG)
      J=3
2760  IF (J.GT.0)GOTO 2770 
      J=4
      I=I+1
2770  IF (CURPOS.GT.80)GOTO 2780 
      CALL PACK(LOBUF(I),INPBUF(CURPOS))
      CURPOS=CURPOS+1
      J=J-1
      GOTO 2760 
2780  CALL CVD(LOBUF(8),LNCNT)
      IF (OBJCNT.EQ.0.OR.OPTYPE(OPIDX).GT.13.OR.CLOCK.EQ.0.OR.ERRORS.NE.
     10)GOTO 2820 
C
C     TIMING CALCULATIONS
C
      ITIME=OPTIME(OPIDX)+ARGTIM(ARGTYP+1,OPTYPE(OPIDX))
      CALL CVD(J,ITIME*10000/CLOCK)
      LOBUF(29)=0
      CALL PACK(LOBUF(29),J)
      CALL PACK(LOBUF(29),ISL(J,NBITS))
      CALL PACK(LOBUF(29),XPERD)
      CALL PACK(LOBUF(29),ISL(J,NBITS2))
      LOBUF(30)=ISL(J,NBITS3)+ISL(BLANK,MBITS)
      IF (OPTYPE(OPIDX).NE.3)GOTO 2790 
      ITIME=ITIME+1
      CALL CVD(J,ITIME*10000/CLOCK)
      LOBUF(30)=ISL(ISL(LOBUF(30),MBITS3),NBITS3)
      CALL PACK(LOBUF(30),XSLSH)
      CALL PACK(LOBUF(30),J)
      CALL PACK(LOBUF(30),ISL(J,NBITS))
      LOBUF(31)=0
      CALL PACK(LOBUF(31),XPERD)
      CALL PACK(LOBUF(31),ISL(J,NBITS2))
      CALL PACK(LOBUF(31),ISL(J,NBITS3))
      ITIME=ITIME+1
      CALL CVD(J,ITIME*10000/CLOCK)
      LOBUF(32)=0
      CALL PACK(LOBUF(31),XSLSH)
      CALL PACK(LOBUF(32),J)
      CALL PACK(LOBUF(32),ISL(J,NBITS))
      CALL PACK(LOBUF(32),XPERD)
      CALL PACK(LOBUF(32),ISL(J,NBITS2))
      LOBUF(33)=ISL(J,NBITS3)+ISL(BLANK,MBITS)
      GOTO 2820 
2790  IF (ARGTYP.NE.3.AND.ARGTYP.NE.9.AND.ARGTYP.NE.10)GOTO 2820 
      IF (OPTYPE(OPIDX).NE.9.AND.OPTYPE(OPIDX).NE.10)GOTO 2800 
      ITIME=ITIME+1
      CALL CVD(J,ITIME*10000/CLOCK)
      LOBUF(30)=ISL(ISL(LOBUF(30),MBITS3),NBITS3)
      CALL PACK(LOBUF(30),XSLSH)
      CALL PACK(LOBUF(30),J)
      CALL PACK(LOBUF(30),ISL(J,NBITS))
      LOBUF(31)=0
      CALL PACK(LOBUF(31),XPERD)
      CALL PACK(LOBUF(31),ISL(J,NBITS2))
      CALL PACK(LOBUF(31),ISL(J,NBITS3))
      CALL PACK(LOBUF(31),BLANK)
      GOTO 2820 
2800  IF (OPTYPE(OPIDX).NE.1)GOTO 2820 
      IF (OPIDX.NE.8)GOTO 2810 
      ITIME=ITIME+1
      CALL CVD(J,ITIME*10000/CLOCK)
      LOBUF(29)=0
      CALL PACK(LOBUF(29),J)
      CALL PACK(LOBUF(29),ISL(J,NBITS))
      CALL PACK(LOBUF(29),XPERD)
      CALL PACK(LOBUF(29),ISL(J,NBITS2))
      LOBUF(30)=ISL(J,NBITS3)+ISL(BLANK,MBITS)
      GOTO 2820 
2810  ITIME=ITIME+1
      CALL CVD(J,ITIME*10000/CLOCK)
      LOBUF(30)=ISL(ISL(LOBUF(30),MBITS3),NBITS3)
      CALL PACK(LOBUF(30),XSLSH)
      CALL PACK(LOBUF(30),J)
      CALL PACK(LOBUF(30),ISL(J,NBITS))
      LOBUF(31)=0
      CALL PACK(LOBUF(31),XPERD)
      CALL PACK(LOBUF(31),ISL(J,NBITS2))
      CALL PACK(LOBUF(31),ISL(J,NBITS3))
      CALL PACK(LOBUF(31),BLANK)
2820  OBJPTR=1
      IF (OBJCNT.EQ.0)GOTO 2830 
      J=LOCCTR
      IF (OPTYPE(OPIDX).NE.31)GOTO 2860 
      OBJCNT=0
      J=256*OBJECT(1)+OBJECT(2)
      GOTO 2860 
2830  IF (FLAG.EQ.XASTR.OR.FLAGMC.NE.0)GOTO 2940 
      IF (OPTYPE(OPIDX).NE.24.AND.OPTYPE(OPIDX).NE.26)GOTO 2840 
      J=VAL
      GOTO 2860 
2840  IF (OPTYPE(OPIDX).NE.27)GOTO 2850 
      J=LOCCTR
      GOTO 2860 
2850  IF (OPTYPE(OPIDX).NE.28)GOTO 2940 
      J=LOCCTR-VAL
2860  IF (IAND(OPTION,OPTOC).NE.0)GOTO 2970 
C
C     OBJECT CODE IS IN HEX
C
2870  CALL CVH(LOBUF(2),J)
      PTR=3
      LEN=3
      I=1
2880  IF (OBJPTR.GT.OBJCNT)GOTO 2940 
      IF (I.GT.8)GOTO 2940 
      CALL CVH(K,OBJECT(OBJPTR))
      GOTO(2890,2900,2910,2920),LEN
2890  LOBUF(PTR)=ISL(ISL(LOBUF(PTR),MBITS),NBITS)+ISL(ISL(K,NBITS2),
     1MBITS3)
      PTR=PTR+1
      LOBUF(PTR)=ISL(K,NBITS3)+ISL(BLANK,MBITS)
      LEN=3
      GOTO 2930 
2900  LOBUF(PTR)=ISL(ISL(LOBUF(PTR),MBITS2),NBITS2)+ISL(ISL(K,NBITS2),
     1MBITS2)
      PTR=PTR+1
      LEN=4
      GOTO 2930 
2910  LOBUF(PTR)=ISL(ISL(LOBUF(PTR),MBITS3),NBITS3)+ISL(ISL(K,NBITS2),
     1MBITS)+ISL(BLANK,MBITS3)
      LEN=1
      GOTO 2930 
2920  LOBUF(PTR)=ISL(K,NBITS2)+ISL(BLANK,MBITS2)
      LEN=2
2930  OBJPTR=OBJPTR+1
      I=I+1
      IF (I.EQ.5)LEN=2
      GOTO 2880 
2940  IF (RELOC.EQ.0.OR.LOBUF(8).EQ.BLANK)GOTO 2950 
      IF (RELBAS.EQ.1)LOBUF(7)=ISL(ISL(LOBUF(7),MBITS2),NBITS2)+ISL
     1(XRCON,MBITS2)
      IF (RELBAS.NE.1)LOBUF(7)=ISL(ISL(LOBUF(7),MBITS2),NBITS2)+ISL
     1(XXCON,MBITS2)
2950  CALL LIST
      DO 2960 I=1,33
2960  LOBUF(I)=BLANK
      J=J+8
      IF (OBJPTR.LE.OBJCNT)GOTO 2870 
      GOTO 3020 
C
C     OBJECT CODE IS IN OCTAL
C
2970  J2=J
      IF (IAND(OPTION,OPTAO).NE.0)J2=IAND(J,255)+512*(J/256)
      CALL CVO(I1,I2,J2)
      LOBUF(2)=ISL(I1,NBITS2)+ISL(I2,MBITS2)
      LOBUF(3)=ISL(I2,NBITS2)+ISL(BLANK,MBITS2)
      I=1
2980  IF (OBJPTR.GT.OBJCNT)GOTO 2990 
      IF (I.GT.4)GOTO 2990 
      CALL CVO(I1,I2,OBJECT(OBJPTR))
      PTR=I+2
      LOBUF(PTR)=ISL(ISL(LOBUF(PTR),MBITS2),NBITS2)+ISL(ISL(BLANK,
     1MBITS3),NBITS)+ISL(ISL(I2,NBITS),MBITS3)
      LOBUF(PTR+1)=ISL(I2,NBITS2)+ISL(BLANK,MBITS2)
      OBJPTR=OBJPTR+1
      I=I+1
      GOTO 2980 
2990  IF (RELOC.EQ.0.OR.LOBUF(8).EQ.BLANK)GOTO 3000 
      IF (IAND(RELBAS,127).LE.1)LOBUF(7)=ISL(ISL(LOBUF(7),MBITS2),NBITS2
     1)+ISL(XRCON,MBITS2)
      IF (IAND(RELBAS,127).GT.1)LOBUF(7)=ISL(ISL(LOBUF(7),MBITS2),NBITS2
     1)+ISL(XXCON,MBITS2)
3000  CALL LIST
      DO 3010 I=1,33
3010  LOBUF(I)=BLANK
      J=J+4
      IF (OBJPTR.LE.OBJCNT)GOTO 2970 
C
C     WRITE OUT OBJECT CODE HERE
C
3020  IF (PASS.EQ.2.AND.OBJCNT.GT.0.AND.IAND(OPTION,OPTOU).NE.0.AND
     1.OPTYPE(OPIDX).NE.31)CALL OBJOUT(IAND(OPTION,OPTREL),LOCCTR,OBJCNT
     2,OBJECT(1))
3030  LOCCTR=LOCCTR+OBJCNT
      IF (OPTYPE(OPIDX).NE.31)GOTO 3040 
      RETURN
3040  IF (ERRORS.NE.0.OR.FLAGMC.NE.0)GOTO 1040 
      IF (OPTYPE(OPIDX).NE.35)GOTO 3050 
      LNCNT=0
      IUNIT=INUNIT
      GOTO 1040 
3050  IF (OPTYPE(OPIDX).NE.101)GOTO 1040 
      LNCNT=MCREC
      IUNIT=MCUNIT
      GOTO 1040 
C
C     UNEXPECTED EOF ON INPUT DCB
C
3060  IF (IUNIT.NE.SIUNIT)GOTO 3090 
      DO 3070 I=1,256
3070  INPBUF(I)=BLANK
      DO 3080 I=1,20
3080  INPBUF(I)=ENDCMD(I)
      ARS=20
      GOTO 1060 
C
C     I/O ERROR ON SOME DCB
C
3090  IF (IUNIT.EQ.SIUNIT)WRITE (LOUNIT,9010)
      IF (IUNIT.EQ.TMUNIT)WRITE (LOUNIT,9020)
      IF (IUNIT.EQ.INUNIT)WRITE (LOUNIT,9030)
      IF (IUNIT.EQ.XRUNIT)WRITE (LOUNIT,9040)
      IF (IUNIT.EQ.MCUNIT)WRITE (LOUNIT,9090)
      WRITE (LOUNIT,9050)
      STOP 
9000  FORMAT(2A4)
9010  FORMAT(' ***I/O ERROR ON SOURCE INPUT FILE***')
9020  FORMAT(' ***I/O ERROR ON INTERMEDIATE FILE***')
9030  FORMAT(' ***I/O ERROR ON INCLUDE FILE***')
9040  FORMAT(' ***I/O ERROR ON CROSS-REFERENCE FILE***')
9050  FORMAT(' ***ASSEMBLY TERMINATED***')
9060  FORMAT(' ***INCL FILE DOES NOT EXIST***')
9070  FORMAT(' ***INTERNAL ERROR--MACRO MISSING FROM OPCODE TABLE***')
9080  FORMAT(' ***MACRO TABLE OVERFLOW***')
9090  FORMAT(' ***INTERNAL ERROR--I/O ERROR ON MC FILE***')
9100  FORMAT(256A1)
9110  FORMAT(' ')
9120  FORMAT(I5,' ERROR(S), PASS',I2,', LINE',I5/)
9130  FORMAT(I5,' ERROR(S), PASS',I2,', LINE',I5,'+ (EXPANDING MACRO)'/)
9140  FORMAT(I5,' ERROR(S), PASS',I2,', LINE',I5,' OF INCL FILE ',A8,
     1  '.',A8/)
      END 
