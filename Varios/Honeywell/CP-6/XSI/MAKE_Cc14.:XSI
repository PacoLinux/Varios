/*M*    make_vars:h  -- global variables                       */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
 
#include "MAKE_Cc13"
 
extern  int     Errors;
extern  int     Warnings;
extern  int     opt_warn;
extern  char    options[255];
extern  char   *MakeFid;
extern  int     MakeLabel;
extern  int     MaxJobs;
extern  int     Silent;
extern  int     UpdateRst;
extern unsigned SpecMacroFlags;
 
extern  struct target_rule   *LineList;
extern  struct target_rule   *fmt_cmd;
extern  struct target_rule   *copy_cmd;
extern  struct  sym_target    init_sym_target;
extern  struct  sym_owner     init_sym_owner;
extern  struct sym_target     TargetList;
extern  struct sym_target    *TargetListHead;
extern  struct sym_target    *JclRules;
extern  struct sym_target   **JclRulesHead;
extern  struct sym_target    *MakeTarget;
extern  struct sym_target   **MakeTargets;
extern  struct sym_target    *PseudoPhony;
extern  struct sym_target    *PseudoPrecious;
extern  struct sym_target    *PseudoSuffixes;
extern  struct sym_target    *PseudoDefault;
extern  struct sym_target    *PseudoIgnore;
extern  struct sym_target    *PseudoSilent;
extern  struct sym_target    *PseudoOnline;
 
extern struct  sym_macro    *sym_macro_specials[60];  /*** = {
         0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0,
         0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0,
         0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 }; ******/
 
 
extern CONST char *CONST state_names[6];     /*  = {
           "*unused*", "waiting", "runable", "running",
           "error",    "Completed"
           };                                  */
 
extern struct  hash_table  macro_hash_table;
extern struct  hash_table  target_hash_table;
extern struct  hash_table  ftype_hash_table;
extern struct  hash_table  owner_hash_table;
 
#define lookup_sym_macro(n,l,r) (struct sym_macro *) \
              lookup_sym(&macro_hash_table,n,l,r,alloc_sym_macro)
 
#define lookup_sym_target(n,l,r) (struct sym_target *) \
              lookup_sym(&target_hash_table,n,l,r,alloc_sym_target)
 
#define lookup_sym_ftype(n,l,r)  (struct sym_ftype *)  \
              lookup_sym(&ftype_hash_table,n,l,r,alloc_sym_ftype)
 
#define lookup_sym_owner(n,l,r)  (struct sym_owner *)  \
              lookup_sym(&owner_hash_table,n,l,r,alloc_sym_owner)
 
extern  struct sym_    *alloc_sym_macro();
extern  struct sym_    *alloc_sym_target();
extern  struct sym_    *alloc_sym_ftype();
extern  struct sym_    *alloc_sym_owner();
extern  struct sym_    *lookup_sym();
 
extern  struct  sym_ftype     **Filetypes;
extern  int                     Nfiletypes;
 
 
/*      File path information
 */
 
extern struct  acct_list   *srch_lists[4];
extern struct  vlp_acct    *srch_roots[4];
extern int                  srch_num;
 
extern int                 TryUIp;
extern int                 Allow_h_h;
 
#define SIPATH      srch_lists[0]
#define OUPATH      srch_lists[1]
#define GNPATH      srch_lists[2]
#define UIPATH      srch_lists[3]
 
#define SIROOT      srch_roots[0]
#define OUROOT      srch_roots[1]
#define GNROOT      srch_roots[2]
#define UIROOT      srch_roots[3]
 
#define SIROOT1     srch_lists[0]->accts[0].text
#define OUROOT1     srch_lists[1]->accts[0].text
#define GNROOT1     srch_lists[2]->accts[0].text
#define UIROOT1     srch_lists[3]->accts[0].text
 
/*         Target Action Information           */
 
extern struct target_action   **TargetActions;
extern int                      TargetActionSize;
extern int                      TargetActionNum;
 
extern struct sym_target       *target_states[7];
extern struct sym_target      **state_inserts[7];
extern int                      state_counts[7];
 
extern struct command_line     *jcl_start;
extern struct command_line     *jcl_end;
extern struct command_line     *jcl_xeq;
extern struct command_line     *jcl_xeqend;
 
extern char                     JobInfoFid[32];
extern int                      IBEX_output_switch;
 
 
/*         Input Records                       */
 
extern char                   *InputRec;
extern int                     InputRecLen;
extern int                     MacroSubs;
 
 
extern char                   *MacRecBuf;
extern int                     MacRecSize;
extern int                     MacRecLen;
extern char                   *AltRecBuf;
extern int                     AltRecSize;
extern int                     AltRecLen;
 
 
extern int                     mem_ftypes[2];
extern int                     mem_owners[2];
extern int                     mem_strings[2];
extern int                     mem_targets[2];
extern int                     mem_macros[2];
extern int                     mem_macstr;
extern int                     mem_commands;
extern int                     mem_comrules;
extern int                     mem_rulelist;
extern int                     mem_dependlist[2];
extern int                     mem_actionlist[2];
extern int                     mem_acctlist[2];
extern int                     mem_ruleptrs[2];
 
 
extern struct input_info file_table[MAX_INCL];
extern int               InputNo;
 
extern int               SrchNum;
extern char             *SrchList[MAX_SRCH];
