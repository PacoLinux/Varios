.*M*
HELP file for: PASSWORD.:SYS
.*T*
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
.*A*                                             
PASSWORD is a special processor allows the user to change his logon password.
.*B*
Syntax:  PASSWORD [{OLD=oldpassword[,NEW=newpassword] | NEW=newpassword}]
 
PASSWORD must be run from :SYS to work properly.  Do not use it from the X
account.
 
PASSWORD allows the user to change his logon password in one of two ways.  The
user can specify the old and new password on the PASSWORD invocation line, or
the user can be prompted for the old and new password.
 
 
Parameters:
 
oldpassword  -  is the current password for the logon-id.
 
newpassword  -  specifies a password to be assigned to the logon-id.
.*B*
If the logon-id has a password, both OLD and NEW must be specified to change
the password.  If the logon-id has no password, only the NEW is specified.  To
delete the account's password, only OLD is specified.  If nothing is specified
on the PASSWORD invocation, then PASSWORD will prompt the user for the OLD
password, the NEW password, and a verification of the NEW password.  This is
done with commandline echo, esc E, shut off.  When PASSWORD exits, it will
restore commandline echo to the setting upon invocation.
 
The password can be at most 8 characters long.
.*B*
Description:  PASSWORD creates, changes, and deletes the logon password.  In
order to change or delete a password, the current password must be known.
.*B*
In the prompting mode, PASSWORD will prompt for the OLD password.  PASSWORD
will compare the OLD password with the current password on file.  If they are
different, PASSWORD will prompt again. for the OLD password.  When PASSWORD
receives a valid password, it will prompt the user for the NEW password.  And
finally, PASSWORD will prompt the user to input the NEW password a second time
to verify it.
 
At any of the prompts the user can hit break and get the "Enter 'C' to
continue" message.  Anything other than a 'C' or 'c' will cause PASSWORD to
abort.
.*B*
The important thing about PASSWORD.X is that IBEX changes have been made that
allow you to make a PASSWORD.:SYS processor if you don't like how IBEX's
PASSWORD command works.
 
For example, let's say your site wants to make sure no one can accidentally or
purposefully remove a password from a logon.  You can modify PASSWORD.X to
support that need.  Let's say they want to enforce minimum 8-character
passwords with 1 non-alpha character...you can enforce it by modifying
PASSWORD.X.  Let's say you want to make sure no one reuses a password they've
used in the past 12 months on your monthly password change...now you can do
it...because you've modified PASSWORD.X to keep a log of ENCRYPTED password
changes and times.
 
The point is: PASSWORD.X is not a very useful tool as it is; it only provides
the additional "double prompting mode" UNIX addicts find so addictive.  It
really is there to make your site's password changing what you want it to be!!
You just have to do the programming.
.*K* INSTALLING_PASSWORD
In order to make IBEX call the PASSWORD processor rather than treat PASSWORD as
an IBEX command, a special patch must be applied to IBEX, and IBEX must be
reinstalled using SPIDER.  The same is true for PRESCAN, but in PRESCAN's case
the system has to be rebooted to install PRESCAN.  Here's how IBEX is RUMed.:
 
 !RUM IBEX.:SYS,NUTS
 RUM E00E02 here SA = CPA$ENTRY
 >M IBEX_PASSWORD\O
 CPX$CONTEXT1+.XX( IBEX_PASSWORD ) [RETURN] / .746736503570 M>0
 >M $O
 CPX$CONTEXT1+.XX ( IBEX_PASSWORD ) [RETURN] / .0 M>Q
 *** NO Errors encountered in file IBEX.:SYS
 END
!
 
PASSWORD.X is linked with FMSEC privilege to allow it to access the :HLP file
to read the user's password.
 
The system manager could use access control instead, if he so chooses.  He
would have to change the link jcl in PASSWORD_CRU.:XSI to remove the reference
to FMS privilege.  Then modify :HLP.:SYS to add access to PASSWORD.
 
 !MOD :HLP.:SYS TO .(ACS+=((PASSWORD),READ,WNEW,UPDATE))
 :HLP
 
After the PASSWORD processor is linked, it needs to be copied into :SYS.
 
.*K*  EXAMPLE_SAMPLE_USAGE
The following is an example of a successful password change.
 
 !PASSWORD
 Old password, CR = none ->
 New password, CR = none ->
 Verify password, CR = none ->
  Password change successful
 
.*B*
In the following example the old password was input incorrectly.
 
 !PASSWORD
 Old password, CR = none ->
  Password supplied doesn't match current password
 Old password, CR = none -> <-- correctly input
 New password, CR = none ->
 Verify password, CR = none ->
  Password does not match the New password.
  New password, CR = none ->
 Verify password, CR = none ->
  Password change successful
 
.*B*
In the following example the user made an error on the password verification.
Also, the BREAK key was hit when the user was prompted for the new password for
the second time.  The user had input 'C' to continue at the break prompt.  On
the user's second attempt he was not able to verify the new password.  Upon
being asked for the third time, the user decides to hit the BREAK key again and
discontinue the PASSWORD process.  He does this by striking any key other than
'C' followed by carriage return.
 
 !PASSWORD
 Old password, CR = none ->
 New password, CR = none ->
 Verify password, CR = none ->
  Password does not match the New password.
 New password, CR = none ->
 
  Enter 'C' to continue -> New password, CR = none ->
 Verify password, CR = none ->
  Password does not match the New password.
   New password, CR = none ->
  Enter 'C' to continue ->
  Password was not changed
.*K* OWNER
Tom Whitley, LADC
.*K* XINDEX
PASSWORD.:SYS
.*R*
AID=SYSTEM_MANAGEMENT
.*R*
SECURITY
.*K* XINDEX_ABSTRACT
TOOL=PASSWORD
.*R*
Lets a site customize password changing mechanics for logons.
.*K* CHANGES Changes changes
900320
.*R*
Fixed a bug that kept interactive prompting from working.
.*B*
891031 JLJ
.*R*
Made changes for compiling onsite and fixed bug that allowed only a new
password to be input even when the logon had a non-blank password.
.*R*
871021
.*R*
Added to LADC X account.
