.*M*
HELP file for: GIMME.X
.*T*
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
.*A*                              
GIMME.X manages an electronic "sign-up sheet".  It can be used to
reserve such resources as overhead projectors, meeting rooms, and
hands-on computer equipment.
.*B*
For full details, enter:
   !LISTHELP.X GIMME.X
 
For some tutorial information, enter:
   !HELP (GIMME.X) INTRODUCTION
 
For information on setting up GIMME for use at your site, enter:
   !HELP (GIMME.X) INSTALLATION
.*K* OWNER
Dave Wagner, LADC
.*K* XINDEX
GIMME.X
.*R*
AID=OFFICE_AUTOMATION
.*R*
AID=PROJECT_MANAGEMENT
.*R*
SCHEDULES
.*R*
.*K* XINDEX_ABSTRACT
TOOL=GIMME
.*R*
An electronic "sign-up sheet".
.*K* CHANGES
97/11/11
GIMME.X Has been made year 2000 ready. Please see star #42948
.*B*
880907
.*R*
- Fixed problem with wildcarded resource name used in the DISPLAY
  command.
- Changed default hour to 0:00 when a date is specified in the DISPLAY
  command.
.*B*
07/22/88
.*R*
- Modified display format to use 2 lines per event. Events that span
  multiple days and the times are contiguous will be shown as
  one item.
- Made the BECAUSE field optional based on a database flag that
  is established via the CREATE command. A default reason may also
  be specified in the CREATE command.
- When ending time is not specified, default it to the end of the
  starting date (ie, hour 23:59).
- Fixed DISPLAY bug in not handling relative time right when a
  starting time is not specified.
.*B*
07/18/88
.*R*
Fixed "Date or time format error" when requesting resource for an
extended period.
.*R*
07/13/88
.*R*
- Added site name and available time options to CREATE.
- Made event description mandatory for GET/GIMME.
- Changed the storage structure of events in GIMME_ID so there is now
  one record stored per day of the event.
- Fixed GET, RELEASE, STRETCH and MOVE to handle multi-records events.
- Added DAILY option to the DISPLAY command.
.*R*
09/01/87
.*R*
Fixed bug where times could overlap under funny circumstances.
.*R*
08/03/86
.*R*
Made EOF exit per star 29131
.*R*
08/22/84
.*R*
Removed code that duplicates the new FREEBIE commands
.*R*
07/04/84
.*R*
Added the 'FLUSH' command to clean up the database.
.*R*
06/23/84
.*R*
TOMORROW, TODAY, YESTERDAY added.  AM/PM optionally added to time.  Year is
optional and assumed current.
.*R*
09/02/83
.*R*
Wild-carded DISPLAY command.  Aliases.  Improved HELP.
.*R*
08/18/83
.*R*
Initial version of GIMME released to the Y account for testing.
.*K* ENVIRONMENT
GIMME is designed to be run from :SYS.  Although it doesn't need any special
privileges, it does need write access to a file of sign-up information that
should probably live there.
.*K* INSTALLATION
Before GIMME can be operated by 'vanilla' users, the following steps must be
taken:
     o Place GIMME in :SYS (or other appropriate account)
     o Someone with write access to the given account must invoke
       GIMME, who will proceed to build his default file of
       signup information in the account in which he resides.
     o The formal resource names must be created.  See the 'CREATE'
       command for details.
     o Informal synonyms for resource names may be created.  See
       the ALIAS command.
     o The signup file must have appropriate access controls applied.
.*B*
Installation Example:
   !C GIMME.X TO GIMME.:SYS
   !GIMME
   (creating GIMME_ID.:SYS)
   Gimme! CREATE TEDDY
   Gimme! ALIAS TEDDY AS FROG_MAN
   Gimme! CREATE BARE COMMENT 'Use me!'
   Gimme! L
   BARE                           Use me!
   FROG_MAN (TEDDY)
   TEDDY
   Gimme! Q
   !MOD GIMME_ID.:SYS TO (ACC(ALL,NOLIST),VWR(GIMME.:SYS))
 
For a much more comprehensive example of GIMME installation, please
see GIMME_ID_CRU in the X-account source account.
.*B*
See also:  MAINTENANCE
.*K* MAINTENANCE
The GIMME database doesn't require much in the way of maintenance, but there is
one thing you may want to do.
 
Unless you RELEASE a resource before your allocated time is up, GIMME will not
delete records from his file of signup info.  The file will keep growing,
taking up considerable disk space.  This is a feature since you might
eventually want to create a report on the use of resources as signed up by
GIMME.
 
To delete expired records, you must use the FLUSH command.
.*B*
Maintenance Example:
   !GIMME
   Gimme! FLUSH
   Gimme! Q
.*K* OPTIONS
GIMME accepts no options on the command line.  Once inside GIMME, the user
invokes one or more of the commands.
 
While the syntax shown elsewhere shows all portions of the command as required,
this is not so.  Any portion of the command except the initial keyword may be
omitted.  If the omitted clause is required, GIMME will prompt you for it.
.*K* DEFAULTS
When first invoked, GIMME defaults the file of signup info to the file
'GIMME_ID' in the account in which GIMME resides.  It is presumed that the
user has access to such a file.  If there is no such file (and the user has
write access to the account in question), GIMME will build it.
 
If the 'USE' command does not specify an account for the file of signup data,
the account in which GIMME resides is assumed.
 
When entering a specific time/date, the date defaults to the current date.  The
time defaults to the current time.
 
When entering a relative date (i.e. '5 MINUTES'), the base time depends on the
ultimate usage of the time.
    START TIME is relative to the time command was entered.
          For example, 'IN 1 HOUR'.
    END TIME is relative to the start time.
          For example, 'FOR 1 WEEK'.
    ID TIME is relative to the time the command was entered.
          For example, 'IN 10 MINUTES'.
 
.*K* GIMME_COMMAND
The GIMME command is a synonym for the GET command.  GIMME may be abbreviated
GI/MME.
 
For further information, please type 'HELP GET'.
.*K* GET_COMMAND
The GET command is used to allocate a resource.
 
GE/T [RESOURCE_PART] [START_TIME_PART] [END_TIME_PART] [REASON_PART]
.*B*
Example:
   GET WASTED NOW FOR A WEEK BECAUSE 'REALITY IS NO FUN'
 
This example allocates a resource named 'WASTED'.  The time slot starts
immediately and lasts for a week.  The comment 'REALITY IS NO FUN' will be
recorded.
.*K* INTRODUCTION
GIMME keeps a list of various things that need to be shared at your
site.  When you want to use one of these items, you ask GIMME for it
and specify why you need it, when you need it and for how long.  If
nobody else is using that item at the same time, GIMME will let you
have it and "sign you up" for the time you want.
 
You only need to know two commands to start using GIMME.  All GIMME
commands were designed to be English-like.  This should make them
relatively easy to remember.
.*B*
The first command you need is used to display a list of resources that
GIMME knows about.  It is used like this:
   Gimme! L
GIMME will then list all the resource names that he knows.  For
example:
   AUDITORIUM (ROOM-2)     Some folks call ROOM-2 the AUDITORIUM
   ROOM-2                  available at LADC L66B         8:00-20:00
                           The second-floor conference room
   ROOM-3                  available at LADC L66B         6:00-18:00
                           The third-floor conference room
The actual resource names that GIMME deals with are on the left.  The
stuff on the second line is a comment to help you figure out which
resource you want.  In this example, there are only two real
confernece rooms, but there are three names.  The name 'AUDITORIUM' is
an alias for 'ROOM-2'.  Whenever the user says 'AUDITORIUM', GIMME
will take that to mean 'ROOM-2'.  This alias is provided as a
convenience since not everyone calls that particular room the same
thing.
.*B*
The other command you need to know is 'GET'.  This command simply
tells GIMME to sign you up for something.  Here are a few examples:
   Gimme! GET ROOM-2 AT 11:00 FOR 2 HOURS BECAUSE 'BOARD MEETING'
   Gimme! GET AUDITORIUM 11:00-12:30 BECAUSE 'SPEECH BY DIRECTOR'
Note that you only specify a comment about why you need the thing
if the REASON REQUIRED option is specified for the resource.
There are also MANY ways of specifying when you need it.  You can
give a full time and date, or just the time (both of these examples
assume 'today' for the date).  GIMME also allows you to say how long
you need the item (first example), or you can give an ending time
(second example).
.*B*
Although you might not need it, a third command is often handy.  It
lets you ask about a resource and find out who is using it now, and
how long it will be busy.  See the 'DISPLAY' command for more details.
.*K* FLUSH_COMMAND
The FLUSH command is used to delete obsolete signup records.
 
FLUSH [RESOURCE_PART] [START_TIME_PART] [END_TIME_PART]
 
NOTE:
  o The RESOURCE part defaults to '?', meaning all resources.
  o The START_TIME_PART defaults to the earliest possible time.
  o The END_TIME_PART defaults to NOW.
.*B*
Example:
   FLUSH JOHN?
 
This example deletes osolete records for any resources matching the wildcard
'JOHN?'.
.*K* REL_COMMAND
The REL command is used to release a resource before the user originally wanted
expiration.
 
REL/EASE [RESOURCE_PART] [ID_PART]
.*B*
Example:
   RELEASE THAT_MAN AT 12:00 TOMORROW
 
The example de-allocates a time slot reserved for the resource named
'THAT_MAN'.  The particular slot to be released is the one that starts at 12:00
on the day the command is issued.
.*K* DISPLAY_COMMAND
The DISPLAY command tells you about the scheduling of a specified resource.
 
DI/SPLAY [RESOURCE_PART] [START_TIME_PART] [END_TIME_PART] [DISPLAY_OPTION]
 
Note that the resource part may be wild-carded for this command.
.*B*
Example:
   DISPLAY ANIMAL_CUNNING FROM 9:00 TO 17:00
 
This example finds and displays all allocated instances of the resource
'ANIMAL_CUNNING' in the specified time span.
.*K* LIST_COMMAND
The LIST command is used to find out what resources are available for control
via GIMME.
 
L/IST
.*B*
Example:
  Gimme! L
  BEAST                          available at LADC L66A    00:00-24:00
                                 A handy resource
  FUZZY (BEAST)                  An alias for the resource
 
Notes:
  The resource name appears at the left side.  If it is an alias
    instead of a real resource name, the alias appears with the
    resource it refers to in parenthesis.
  The site from which the resource can be accessed and the normal
    available time period are shown following the site name.
  The second line is the optional comment from the CREATE command
    that made the resource.
.*K* STRETCH_COMMAND
The STRETCH command is used to increase or decrease the time already allocated
to a resource.
 
ST/RETCH [RESOURCE_PART] [ID_PART] [END_TIME_PART]
.*K* MOVE_COMMAND
The MOVE command is used to take an allocated chunk of time already allocated
to a resource, and reschedule it.
 
MO/VE [RESOURCE_PART] [ID_PART] [START_TIME_PART]
.*K* CREATE_COMMAND
The CREATE command is used to define a resource.  A piece of explanatory text
may be included. The site from which the resource can be accessed may
also be specified. If not specified, the running site is used. The
normal time range that the resource is available must be specified.
This is used in handling request that spans multiple days. When the
resource is created, it must also be specified if a reason/comment
is required for its scheduling requests.
 
CR/EATE [RESOURCE_PART] [REASON_PART] [SITE_PART] [AVAIL_TIME_PART]
        [REASON_SPEC]
.*B*
Example:
  Gimme! CREATE BONGO BECAUSE 'We like drums' SITE 'LADC L66B' 8:00-20:00
          REASON OPTIONAL
  Gimme! L
  BONGO            available at LADC L66B          8:00-20:00
                   We like drums
.*K* ALIAS_COMMAND
The ALIAS command is used to define a a synonym name that can be used in place
of the formal resource name.
 
A/LIAS [RESOURCE_PART] [ALIAS_PART] [REASON_PART]
.*B*
Example:
  Gimme! ALIAS BRUCE_WAYNE AS BATMAN BECAUSE 'A shadow in the night'
  Gimme! L
  BATMAN (BRUCE_WAYNE)           A shadow in the night
  BRUCE_WAYNE                    Millionaire playboy
.*B*
Special notes on ALIASing:
  o An alias may refer to another alias instead of a resource.
    For example A->B->C.  To prevent recursive aliasing, the
    resource part on the alias command must resolve to an
    existing resource at the time of alias definition.
  o When you sign up for time on an aliased name, the alias is
    chased down to the resource and your time is allocated on
    that resource.  If you subsequently move the alias to point
    at a different resource, the allocated time stays on the
    original resource.
.*K* DESTROY_COMMAND
The DESTROY command is used to get rid of a resource.
 
Note that the resource identifier is removed so that subsequent attempts to
manipulate the resource are rejected.  Any sign-up entries in the file are kept
for historical (accounting?) purposes.  They may be accessed later by
re-CREATING the resource.
 
DES/TROY [RESOURCE_PART]
.*B*
Example:
   DESTROY ARID_REGION
 
The example de-activates the resource named 'ARID_REGION' so that it may not be
LISTed, DISPLAYed, or manipulated.
.*K* USE_COMMAND
The USE command lets you select the set of signup sheets you want.  This is
especially handy for sites that have a large number of resources to be tracked
by GIMME.  All the resources of a given type may be placed in an individual
signup file.
 
USE signup-sheet-FID
 
NOTE:  If the file doesn't exist, GIMME will attempt to create it.
.*B*
Example:
   USE GREEN_THINGS
   DI LANTERN
 
The example closes the current file of signup information and opens the one
called 'GREEN_THINGS' instead.  The user then looks for 'LANTERN'.
.*K* HELP_COMMAND
GIMME provides the CP-6 standard HELP facility.  For more information on this
standard, please type
    HELP (IBEX) HELP
.*K* END_COMMAND QUIT_COMMAND EXIT_COMMAND
All of the following commands do the same thing:  get you out of GIMME:
            Q/UIT
            END
            [E]X/IT
.*K* COMMANDS
For help on individual GIMME commands, please type one of the following:
  HELP GIMME_COMMAND    "   (a synonym for GET)
  HELP REL_COMMAND      "<- release resource before time elapsed
  HELP DISPLAY_COMMAND  "<- show who has resource allocated
  HELP LIST_COMMAND     "<- list resources available for control
  HELP STRETCH_COMMAND  "<- lengthen/shorten allocated time
  HELP MOVE_COMMAND     "<- move allocated span of time
  HELP CREATE_COMMAND   "<- add a resource to controllable list
  HELP DESTROY_COMMAND  "<- remove resource from controllable list
  HELP USE_COMMAND      "<- use an alternate signup sheet
  HELP HELP_COMMAND     "<- standard HELP command
  HELP END_COMMAND      "<- exit GIMME
.*K* START_TIME_PART
The START_TIME_PART is used to identify the when you want to start using the
resource.  There are several variations.
      NOW
      AT   [hh:mm] [mm/dd[/yy]]
      ON   [hh:mm] [mm/dd[/yy]]
      FROM [hh:mm] [mm/dd[/yy]]
           [hh:mm] [mm/dd[/yy]]
      IN   n   units
.*B*
where:
  units - D/AYS
          W/EEKS
          MO/NTHS
          MI/NUTES
          H/OURS
  hh:mm - the hour and minute that the resource is to be allocated.
          If omitted, it defaults to the time that the command was
          issued.  This field may be followed by 'AM' or 'PM'.  If
          neither is supplied, a 24-hour clock is assumed.
  mm/dd[/yy] - the month, day, and year that the resource is to be
          allocated.  If omitted, it defaults to the current date.
          If the year is omitted, the current year is used.  Note:
  o Instead of giving a specific date, you may use YESTERDAY, TODAY,
    and TOMORROW.
.*B*
For example:
    GET TEDDY AT 1:15 PM TOMORROW
    GET BARE NOW
.*K* END_TIME_PART
The END_TIME_PART is used to identify the when you will be done using the
resource.  There are several variations.
      UNTIL    [hh:mm] [mm/dd[/yy]]
      TO       [hh:mm] [mm/dd[/yy]]
      THROUGH  [hh:mm] [mm/dd[/yy]]
      -        [hh:mm] [mm/dd[/yy]]
      FOR   n   units
.*B*
where:
  units - D/AYS
          W/EEKS
          MO/NTHS
          MI/NUTES
          H/OURS
  hh:mm - the hour and minute that the resource is to be released.
          If omitted, it defaults to the time that the command was
          issued.  This field may be followed by 'AM' or 'PM'.  If
          neither is supplied, a 24-hour clock is assumed.
  mm/dd[/yy] - the month, day, and year that the resource is to be
          released.  If omitted, it defaults to the current date.
          If the year is omitted, the current year is used.  Note:
  o Instead of giving a specific date, you may use YESTERDAY, TODAY,
    and TOMORROW.
.*B*
For example:
    GET DOWN FOR 8 HOURS
    GET FUNKY 12:00 - 16:45
.*K* RESOURCE_PART
The RESOURCE_PART is the name of the resource.  It consists of up to 31
characters from the set of characters
    'A' - 'Z'
    'a' - 'z'
    '0' - '9'
    $ _ # @
 
Before you can GET a resource, the resource name must be CREATED.  If you are
unsure about a resource name, you may use the LIST command to find out which
resource names are available for control.
 
Some commands allow the resource name to be wild-carded.  A comprehensive
discussion of wildcarding is not really appropriate here.  Please refer to the
documentation on PCL for information on CP-6 style wildcarding.
.*B*
Examples:
   L6-X
   ROOM_321
   DEADLY_NIGHTSHADE
.*K* ALIAS_PART
The ALIAS_PART is used to define an additional resource name that stands for an
existing resource.
 
Syntax:
   AS name
   = name
   ALIAS name Where 'name' is the name of the synonym (alias) to be created.
It consists of up to 31 characters from the set of characters
    'A' - 'Z'
    'a' - 'z'
    '0' - '9'
    $ _ # @
.*B*
Examples:
   FEP_5
   3RD_FLOOR_LOUNGE
   WEST_AUDITORIUM
.*K* REASON_PART
The REASON_PART is used on GET to specify why you want the resource.  On CREATE
it provides a comment field to identify the resource.  It has the form:
    BE/CAUSE 'text string'
    CO/MMENT 'text string'
    DE/SCRIPTION 'text string'
.*K* ID_PART
ID_PART is used when you want to manipulate a slice of time that is already
allocated.  This includes releasing the time, moving it to around, or
stretching it.
 
The ID_PART specifies which instance of the resource is to be manipulated.  It
has several forms.
      NOW
      AT   [hh:mm] [mm/dd[/yy]]
      ON   [hh:mm] [mm/dd[/yy]]
           [hh:mm] [mm/dd[/yy]]
      IN   n   units
.*B*
where:
  units - D/AYS
          W/EEKS
          MO/NTHS
          MI/NUTES
          H/OURS
  hh:mm - the hour and minute that the resource is to be allocated.
          If omitted, it defaults to the time that the command was
          issued.  This field may be followed by 'AM' or 'PM'.  If
          neither is supplied, a 24-hour clock is assumed.
  mm/dd[/yy] - the month, day, and year that the resource is to be
          allocated.  If omitted, it defaults to the current date.
          If the year is omitted, the current year is used.  Note:
  o Instead of giving a specific date, you may use YESTERDAY, TODAY,
    and TOMORROW.
.*B*
For example:
    MOVE PILE AT 12:30 would tell GIMME to take the 12:30 occurance of the
resource 'PILE' and move it elsewhen.  Since no new starting time was
specified, GIMME will prompt for one.
.*K* SITE_PART
SITE_PART is the name of the site from which scheduling of the
resource can be made. It is used on CREATE. It has the form
      SITE 'text string'
.*K* REASON_SPEC
REASON_SPEC is used with the CREATE COMMAND, that specifies whether a
reason is required for scheduling the resource. If a default reason
is specified, REASON OPTIONAL is inferred. It is
of the form:
    R/EASON REQ/UIRED
    R/EASON OPT/IONAL
    R/EASON DEF/AULT 'text string'
.*B*
For example:
    CREATE FEP10 AVAIL 0:00 - 23:59 REASON DEFAULT 'FEP DEBUGGING'
 
Any FEP10 requests that do not specify a reason will inherit the
default reason 'FEP DEBUGGING' from the above CREATE command.
.*K* AVAIL_TIME_PART
The AVAIL_TIME_PART specifies the start time and the end time that
will be used to process request that spans more than one day. It
is of the form:
      AVAIL/ABLE [hh:mm] - [hh:mm]
      AVAIL/ABLE [hh:mm] TO [hh:mm]
.*B*
Example:
    CREATE SMALL_CR SITE 'LADC L66B' 8:00-17:00
    GET SMALL_CR FROM 07/13/88 8:00 FOR 2 DAYS
 
The above GET request will be represented as:
    07/13/88 8:00 - 17:00 and
    07/14/88 8:00 - 17:00
.*K* DISPLAY_OPTION
The DISPLAY_OPTION is used on the DISPLAY command to request for
one of the special display format. It is of the form:
    ( display_format )
.*B*
where the display_format can be one of the following:
    D/AILY
    W/EEKLY
    MO/NTHLY
.*K* COMMAND_PARTS CLAUSES GENERAL_SYNTAX
There are several clauses that are common to many GIMME commands.  In each
case, the syntax of the clause is always the same.
 
The various commands accept different combinations of the clauses.  Some of the
clauses are optional.  If a required clause is omitted from a command, GIMME
will prompt for it.
 
For help on the individual parts, please type one of the following:
  HELP START_TIME_PART  "<- set the time that you acquire the resource
  HELP END_TIME_PART    "<- time when you will be done with resource
  HELP RESOURCE_PART    "<- indicate resource you are talking about
  HELP REASON_PART      "<- comment about WHY you want the resource
  HELP ID_PART          "<- used to indicate a time-slot for
                        "   manipulation
  HELP SITE_PART        "<- indicate the site on which the resource
                        "   is available
  HELP AVAIL_TIME_PART  "<- the time range during which the resource
                        "   is normally available
  HELP DISPLAY_OPTION   "<- indicate the type of display format
                        "   desired
  HELP REASON_SPEC      "<- specifies if a reason is required for
                        "   scheduling the resource
.*K* PRIVS
GIMME doesn't use much in the way of privs.  To run GIMME, you must have access
to the file of signup data.
 
There is one PRIV that IS important to GIMME:  FMSEC.  An ordinary user may not
manipulate (release, move, or stretch) another user's allocations.  A user with
FMSEC turned ON may do so.
.*X*
