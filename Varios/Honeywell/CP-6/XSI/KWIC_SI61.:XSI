/*M*      KWIC_SI61 - USED BY KWIC_SIC TO CALL SORT.
*/
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
SORTFILE: PROC (SORT_START,SORT_STOP);
%INCLUDE CP_6;
%INCLUDE CP_6_SUBS;
%INCLUDE B_ERRORS_C;
%INCLUDE ZL_MACRO_C;
DCL SORT_START UBIN;
DCL SORT_STOP UBIN;
DCL SORT_LENGTH UBIN;
DCL X$SORT ENTRY(1) ALTRET;
DCL M$LO DCB;
DCL TEMPFILE DCB;
DCL DCB$ PTR;
%F$DCB(BASED="BASED(DCB$)");
%FPT_OPEN(FPTN=FPT_OPEN_SORTIN,
        FUN=IN,
        ORG=CONSEC,
        ASN=FILE);
%FPT_OPEN(FPTN=FPT_OPEN_SORTOUT,
        ASN=FILE,
        FUN=CREATE,
        EXIST=NEWFILE,
        ORG=CONSEC,
        DISP=NAMED);
%FPT_WRITE(FPTN=WRITE_LO,BUF=OUTBUF,DCB=M$LO);
%FPT_ERRMSG (FPTN=ERR_FPT,
        CODE=ERR,
        BUF=ERR_BUF,
        OUTDCB1 = M$LO);
DCL OUTBUF CHAR(120) STATIC ALIGNED;
DCL ERR_BUF CHAR(120) STATIC;
%B$EXCFR;
%B$ALT;
%B$TCB;
%VLP_ERRCODE(FPTN=ERR,STCLASS=STATIC SYMDEF);
DCL B$TCB$ PTR SYMREF;
%LIST;
%SORT_TABLE(INSIZ=110,
        OUTSIZ=110,
        KEYS=KEY);
%PLIST;
DCL 1 KEY STATIC,
        2 * UBIN WORD INIT(1),  /* NUMBER OF KEYS */
        2 * CHAR(2) INIT('00') UNAL,  /* KEYS NAME - RANK CODE */
        2 * CHAR(2) INIT('AN') UNAL,  /* KEYS TYPE */
        2 STARTING UBIN WORD INIT(1),  /* KEYS STARTING CHAR */
        2 LENGTH UBIN WORD INIT(12),  /* KEY LENGTH */
        2 * UBIN(9) INIT(0) UNAL,  /* CODE FOR START & LENGTH */
        2 * CHAR(1) INIT('A') UNAL,  /* ORDER OF KEY 'ASCENDING' */
        2 * CHAR(2) INIT('  ');  /* TRANSLATION CODE 'NONE' */
DCL 1 FPTS ALIGNED,
        2 COUNT UBIN,
        2 FPT$ PTR;
DCL 1 SORTNAME,
        2 * CHAR(32);
DCL 1 SORTACCT CHAR(8);
        KEY.STARTING = SORT_START;
        KEY.LENGTH = SORT_STOP - SORT_START;
        SORT_TABLE.INPUT$ = ADDR(FPTS);
        FPTS.COUNT = 1;
        FPTS.FPT$ = ADDR(FPT_OPEN_SORTIN);
        SORT_TABLE.OUTPUT$ = ADDR(FPT_OPEN_SORTOUT);
        DCB$=DCBADDR(DCBNUM(TEMPFILE));
        SORTNAME=F$DCB.NAME#;
        SORTACCT=F$DCB.ACCT#;
        FPT_OPEN_SORTIN.NAME_=VECTOR(SORTNAME);
        FPT_OPEN_SORTIN.ACCT_=VECTOR(SORTACCT);
        FPT_OPEN_SORTOUT.NAME_=VECTOR(SORTNAME);
        FPT_OPEN_SORTOUT.ACCT_=VECTOR(SORTACCT);
        CALL X$SORT(SORT_TABLE) ALTRET(SORT_ERROR);
        RETURN;
SORT_ERROR:;
        ERR_FPT.V.DCB# = B$TCB$ -> B$TCB.ALT$ -> B$ALT.DCB#;
        ERR = B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR;
        ERR.SEV = 0;
        CALL M$ERRMSG(ERR_FPT);
        OUTBUF = '*****ERROR FROM SORT*****';
        CALL M$WRITE(WRITE_LO);
        CALL M$ERR;
END;
