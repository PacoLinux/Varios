/*M* DECRYPT_SI62 - Subroutines for DECRYPT.X */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
 
SED:    PROC(PLAINTEXT,KEY,CIPHERTEXT);
/*A* SED: A CP6 Version of the National Bureau of Standards DATA
          ENCRYPTION STANDARD. This algorithm is suitable for non-
          classified data. */
 
DCL PLAINTEXT(0:71) BIT(1) UNAL;
DCL CIPHERTEXT(0:71) BIT(1) UNAL;
DCL KEY(0:71) BIT(1) UNAL;
DCL X(0:71) BIT(1) UNAL;
DCL SAVE1(0:71) BIT(1) UNAL;
DCL SAVE2(0:71) BIT(1) UNAL;
DCL SWAP(0:71) UBIN BYTE SYMREF UNAL;
 
DCL I_TRANSPOSE ENTRY(3);
DCL TRANSPOSE ENTRY(3);
 
DCL I UBIN;
DCL J UBIN;
 
DCL INITIAL_TRANSPOSITION(0:71) UBIN BYTE SYMREF UNAL;
DCL FINAL_TRANSPOSITION(0:71) UBIN BYTE SYMREF UNAL;
DCL KEY_TRANSPOSITION(0:71) UBIN BYTE SYMREF UNAL;
 
          SAVE1=CIPHERTEXT;
        CALL I_TRANSPOSE(SAVE1,FINAL_TRANSPOSITION,72);
        CALL I_TRANSPOSE(SAVE1,SWAP,72);
        CALL TRANSPOSE(KEY,KEY_TRANSPOSITION,72);
         SAVE2=SAVE1;
        DO J=0 TO 35;
           IF BITBIN(SAVE1(J+36))+BITBIN(KEY(J))=1 THEN SAVE1(J)='1'B;
           ELSE SAVE1(J)='0'B;
           SAVE1(J+36)=SAVE2(J);
           END;
        CALL I_TRANSPOSE(SAVE1,INITIAL_TRANSPOSITION,72);
        PLAINTEXT=SAVE1;
END SED;
%EOD;
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
I_TRANSPOSE: PROC(DATA,T,N);
/*A* TRANSPOSE: Swapping routine used by DES and SED */
 
DCL DATA(0:71) BIT(1);
DCL T(0:71) UBIN BYTE UNAL;
DCL N UBIN;
 
DCL X(0:71) BIT(1);
DCL I UBIN;
 
        X=DATA;
        DO I=0 TO N-1;
           DATA(T(I))=X(I);
           END;
END I_TRANSPOSE;
%EOD;
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
TRANSPOSE: PROC(DATA,T,N);
/*A*  */
 
DCL DATA(0:71) BIT(1);
DCL T(0:71) UBIN BYTE UNAL;
DCL N UBIN;
 
DCL X(0:71) BIT(1);
DCL I UBIN;
 
        X=DATA;
        DO I=0 TO N-1;
           DATA(I)=X(T(I));
           END;
END;
