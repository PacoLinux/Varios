.*M*
HELP file for:  COBWEB
.*T*
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
.*A*                                                                           
    COBWEB is a processor, designed to run in :SYS, which allows
installation and deletion of shared processors or libraries (via
SPIDER) by certain users who do not have FMSEC privilege, SPIDER
privilege, or write access to those processors in :SYS.
 
.*B* OVERVIEW DESIGN
                            OVERVIEW
                            --------
    :COBWEB is a control file residing in :SYS which contains
authorized users' accounts, the shared processor(s) or
library(ies) they may install, and the names of the XEQ files
which are used to INSTALL and DELETE them.
 
    When COBWEB is given a syntactically correct INSTALL or
DELETE command, it checks :COBWEB to see if the user is
authorized to INSTALL and DELETE the specified processor or
library (see syntax for INSTALL and DELETE).  If so, a ghost user
is initiated (using data from a record in :COBWEB with a key of
'GHOST') which uses as its first command either:
    !XEQ installfid
       or:
    !XEQ deletefid
according to whether the user specified INSTALL or DELETE,
respectively.  The XEQ files contain the SPIDER commands and
miscellaneous JCL required for the user's specific application.
The user is then given the ghost's ID number.
 
 
.*B* SOP EXAMPLE SAMPLE USAGE
              STANDARD OPERATING PROCEDURE EXAMPLE
              ------------------------------------
 
    A programmer would like to create an alternate shared library
for test purposes, say, IDS_TEST.  If he doesn't have the
required privileges to install the ASL directly with SPIDER, he
can approach the support group (cautiously) and request to be
authorized to use COBWEB.  Someone in the support group can then
invoke COBWEB, get into UPDATE mode, and add the programmer's
account to the list of authorized COBWEB users.  The session
would go something like this:
 
  !COBWEB
     :COBWEB.:SYS does not exist ...
     (Can't INSTALL, DELETE or LIST)
  >UPDATE
     Updating new :COBWEB.:SYS
  Update>GHOST GHACCT,GHUNAME,GHPASS
  Update>CREATE IDS_TEST INS=IDS_TEST_INS.SUPPORT,DEL=IDS_TEST_DEL.SUPPORT
  Update>ADD IDS_TEST THISACCT,THISUNAME,THATACCT,THATUNAME
  Update>END
  >END
 
    The support group can then create IDS_TEST_INS and
IDS_TEST_DEL, which would reside in a the SUPPORT account, and
would look something like this:
 
    IDS_TEST_INS.SUPPORT:  !SPIDER
                           DELETE IDS_TEST
                           INSTALL IDS_TEST,ASL FROM IDS.:ZICOTGN
                           END
 
    IDS_TEST_DEL.SUPPORT:  !SPIDER
                           DELETE IDS_TEST
                           END
 
    Note that if no account was specified when IDS_TEST was
CREATEd, i.e.:
 
  Update>CREATE IDS_TEST INS=IDS_TEST_INS,DEL=IDS_TEST_DEL
 
then the default file management account would be GHACCT, the
ghost's running account.
 
    The programmer can now install or delete IDS_TEST by invoking
COBWEB like so:
 
  !COBWEB (INSTALL IDS_TEST)
       Ghost ID:  003522
 
    If something is wrong and IDS_TEST doesn't get installed or
deleted properly, the programmer can retrieve the ghost's
printout and take it (again, cautiously) to the support group.
 
    The programmer, now authorized to INSTALL and DELETE
IDS_TEST, can also LIST all other authorized accounts, like so:
 
  !COBWEB
  >LIST IDS_TEST
       Authorized users of IDS_TEST are:
           THISACCT     THISUNAME
           THATACCT     THATUNAME
  >X
 
 
.*B* SYNTAX FORMAT
                         COMMAND SYNTAX
                         --------------
 
    There are two types of commands:  end-user and
administrative.
 
    End-user commands operate with :COBWEB open 'IN', and are the
following.
 
  I[NSTALL] proc_name
    Initiates a ghost user which uses a specific XEQ file to
    INSTALL proc_name via SPIDER.
 
  D[ELETE] proc_name
    Initiates a ghost user which uses a specific XEQ file to
    DELETE proc_name via SPIDER.
 
  L[IST] proc_name
    If the current user is authorized to INSTALL and DELETE
    proc_name, lists all such proc_name-authorized accounts.
 
  E[ND] | Q[UIT] | X
    Exits COBWEB.
 
    Transition from the end-user command level to the
administrative command level is accomplished by issuing the
UPDATE command.
 
  U[PDATE] [.acct]
    Opens :COBWEB.acct in update mode, erroring the user if the
    open cannot be performed.  If acct is not specified,
    :COBWEB.:SYS is assumed.
 
    Administrative commands operate with :COBWEB open 'UPDATE',
and are the following.
 
  G[HOST] acct,uname,pass
    Writes a record in :COBWEB with a key of 'GHOST' which
    contains acct, uname, and pass as its data.  This record is
    read whenever an INSTALL or DELETE command is given, and its
    contents are used in issuing the M$GJOB.
 
  C[REATE] proc_name [option [,option]]
          where option is:
            I[NSTALLFID]=fid
          or:
            D[ELETEFID]=fid
    Writes a new record into :COBWEB with a key of proc_name, and
    optionally adds either or both of the names of the XEQ files
    used to INSTALL and DELETE proc_name.  If the record already
    exists, the user is errored.
 
  D[ELETE] proc_name
    Deletes a record from :COBWEB with a key of proc_name.  If
    the record does not exist, the user is errored.
 
  M[ODIFY] proc_name option [,option]
          where option is:
            I[NSTALLFID]=fid
          or:
            D[ELETEFID]=fid
    Adds or modifies the names of either or both of the XEQ files
    used to INSTALL and DELETE proc_name by modifying a record in
    :COBWEB with a key of proc_name.  If the record does not
    already exist, the user is errored.
 
  A[DD] proc_name acct,uname [acct,uname ...]
    Adds the acct(s) and uname(s) of new authorized users to a
    record in :COBWEB with a key of proc_name, and increments a
    field in the record conaining the number of authorized users
    of proc_name accordingly.  If the record does not already
    exist, the user is errored.  The total number of authorized
    users is limited only by the largest record which can be
    written or the greatest amount of dynamic memory which can be
    obtained.
 
  R[EMOVE] proc_name acct,uname [acct,uname ...]
    Removes the acct(s) and uname(s) of previously authorized
    users from a record in :COBWEB with a key of proc_name, and
    decrements a field in the record containing the number of
    authorized users of proc_name accordingly.  If the record
    does not already exist, the user is errored.
 
  L[IST] [proc_name]
    Lists all authorized users of proc_name and the current XEQ
    files used to INSTALL and DELETE proc_name.  If proc_name is
    not specified, all authorized users of all processors in
    :COBWEB will be listed, along with the current XEQ files used
    to INSTALL and DELETE them.
 
  E[ND] | Q[UIT] | X
    Exits update mode.
.*X*
.*R*
.*K* OWNER
Jim Laguardia, LADC
.*K* XINDEX
COBWEB.:SYS
.*R*
AID=SYSTEM_MANAGEMENT
.*R*
PRIVILEGES
.*R*
.*K* XINDEX_ABSTRACT
TOOL=COBWEB
.*R*
A  processor, designed to run in :SYS, which allows installation and
deletion of shared processors or libraries (via SPIDER) by certain users
who do not have FMSEC privilege, SPIDER privilege, or write access to those
processors in :SYS.  (Must be in :SYS to work.)
.*K* CHANGES Changes changes
??/??/??
.*R*
Installed in LADC X account.
