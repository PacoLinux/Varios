.*M*
HELP file for: FCG.X
.*T*
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
.*X*                                             
FYI, this HELP file has been specially prepared to run through TUNA.X (LEN=79)
prior to running through HERMAN.  This action will guarantee that the lines of
text in it will fill a screen as much as possible, and that more lines will end
up per screen.
.*R*
.*A*
FCG (Functional Code Group tool) is a cross reference tool to ease support
efforts, by making lookup of fcg's fast and simple.
.*B*
Full command line syntax:
 
!FCG.X  [fcg] [\processor] [-opts]
 
  where:
         fcg   is a functional code group possibly wildcarded
   processor   is a CP-6 system processor, or area of code, possibly wildcarded
        opts   is one, or more, of the allowed FCG options
 
   !HELP (FCG.X) COMMANDS  for more information on fcg & processor
   !HELP (FCG.X) OPTIONS  for more information on opts
 
.*B*
FCG is meant to make looking up what a functional code group actually means
much easier for the developer.  Referencing the Architecure File document is
not always that simple, even when you have a copy on hand.  FCG also contains a
backwards, or cross reference like, function where a "processor" name is input
and the corresponding fcg is returned.
 
.*K* COMMANDS
FCG can be utilized fully from the command line, or in an interactive mode.
 
There are basically two command types in either mode.  They are the 'fcg' and
the 'processor' commands.  Explainations of both follow.
 
   fcg
      This command is perceived to be the most common, so it is the easiest to
      excecute.  It is simply the fcg you wish decode, which can be wildcarded.
      Of the form:  XYZ
      where:  X is the major functional area of the code group
              Y is the minor functional area of the code group
              Z is the module identifier
 
   \processor
      This command requires a "back"slash, to decode backwards.  The "\" is a
      must, and the processor name must follow without blank space.
      Of the form:  \PROC
      where:  PROC is a CP-6 processor, or area of code
      NOTE: this command is also accomplished with the "-p" option
 
.*B*
   Possible fcg commands:
      ?
      X
      X?
      XY
      XY?
      XYZ
 
   Possible processor commands:
      \IBEX
      \PCL
      -pIBEX
      -P PCL
   NOT:
      \ PCL    (the space is NOT allowed on this command)
 
.*K* OPTIONS
FCG has the following options, and requires the "-" before any option list:
 
   Option             Description
   ------             -----------
   -a                 ASCII file generated with -d option   (default is CAP)
   -c                 Continue opt
   -d fid             Document opt (to generate an AF paper in fid)
                      where   fid can optionally be LP, or LZ.
   -e                 Exit  (default when on command line)
   -f fid             data File substitution opt
   -h                 Help opt (also -?)
   -i fid             Input file opt (Old AF paper to use as base)
   -p processor       Processor opt, decode "backwards" given a name
   -q                 Quit
   -t                 TEXT file generated with -d option
   -v                 Verbose opt (-vv is VERY verbose, gives Section 3
                                   in generated AF document also)
   -x [LP|LZ|NO]      X account option / automatically generate paper
                      with this option alone
 
NOTE:
   \processor         same as "-p" option  (!H (FCG.X) COMMANDS for more info)
 
.*B*  A
   -a
      An ASCII file is generated when the -d option is given, that is
      all there is to this one.
      The default file created for -d is in CAP format.
 
.*B*  C
   -c
      FCG defaults to "quitting" when a fcg or processor command is given on
      the command line, this opt will force FCG to continue on with interactive
      mode when the commands are completed
 
.*B*  D
   -d fid
      The Document option is used to generate an Architecture File paper from
      the information contained in FCG's data base (FCG_DATA).  The resultant
      document is created, or appended to (-+d), the file specified by fid.
      Note:  FCG will make a CAP style document.  If a plain text file is
      desired, you must use the "-t" option, along with "-d" (-td).
      If the -i option is used and the -d fid is not specified, a default
      name will be created for the document.  Of the form:  FCG_AF_time,
      where   time is HH:MM:SS when the file name is generated.
 
.*B*  E  Q
   -e or -q
      FCG will quit.  The four letter keywords QUIT, and EXIT may be used
      in the interactive mode also.
 
.*B*  F
   -f file
      FCG defaults to read its data from FCG_DATA.X, this opt will override
      the default, and cause FCG to read from "file".  This opt is handy for
      testing changes to the data file.
      where:  file   is a legal CP-6 fid
 
.*B*  H
   -h
      This opt offers a bit of help.  The keyword HELP will also work in
      interactive mode.
 
.*B*  I
   -i fid
      Input file option is used to assign a base document file for FCGs
      use.  This file is read and echoed to the output file (-d), except
      for when special comment commands are encountered.  The file
      processing pauses while the comment command is handled.
      See the COMMENT_COMMAND topic for more details on this feature.
 
.*B*  P
   -p processor
      This opt performs the Processor command of FCG.  A CP-6 processor or area
      of code is entered after the "-p", and FCG proceeds to give the fcg
      breakdown for that code.
      where:  processor  is some CP-6 processor name, possibly wildcarded
 
.*B*  T
   -t
      This option is used in conjunction with the "-d" option.  It directs
      FCG to build a CP-6 TEXT type format file.
      Note:  It must be specified before the 'd' option!  i.e. -td
 
.*B*  V
   -v
      The verbose option is given to get additional "chatter" back from
      the tool.  Which files have been opened, where we are at, etc.
      It is also used to generate the third section of the document,
      which give the module level information.  (This section is not
      included by default.)
 
.*B*  X
   -x
      The X Account option is mostly for integrating FCGs data base file,
      but it can be used for the benifit of others also.
      It is used alone on the command line (I recommend -vx), and it will
      automatically find the latest version of AF 71 in the .ARCHFILE
      account.  This file is used as the input file (-i).  It will then
      increment the file name, and thus change the version number, and
      then use this name for the output file (-d).  Once the document
      is created, it will be sent to the printer.  The default printer
      is LP@LOCAL (FORM='LONG'), but that can be over ridden with the
      following:  -xLZ.  If you wish to use this option without sending
      the result to the printer, use:  -xNO  to cancel printer use.
 
.*K* COMMENT_COMMANDS
The generation of a new document file, from a given base file (-i), can
be modified with special "Comment Commands" (CC).  The input file is read and
then echoed to the output file, until a CC is encountered.  Processing the
follows the directions given by the CC, until the ENDing CC is found.
Then the input file is processed normally ounce again, until the next
CC; and so on.
 
Example Comment Commands (for CAP):
   \*{FCG.X START SECTION 1 }
      -> this CC is used to begin the 1st section, which is generated
         by FCG.  Anything that follows this CC is ignored, until the
         following CC is found.  Then Section 1 can be regenerated.
 
   \*{FCG.X END SECTION 1 }
      -> this CC says we are done with the 1st section, and the following
         data will need to be processed again.
 
   There would be a START & END CC for SECTION 2 and SECTION 3 also.
 
   \*{FCG.X START > fcg }
      -> this CC is used to start an embedded text section.  These CCs
         are used for messages that are to be contained within the FCG
         generated sections, but can't be reproduced from the data file.
         Special commentary about some fcg, etc.
         Where "fcg" is the functional code group that the data is supposed
         to follow.  Of the form:
            A__, AZ_, or AZA  depending on the level of the message it
            is to follow.
 
   \*{FCG.X END < fcg }
      -> this CC stops the above block of text, and processing will
         continue on as if nothing happened.
 
.*K* EXAMPLES
!FCG.X                 "start up for interactive use
 
fcg:A                  "use the 'fcg' command to see what happens
    A = Authorization and Accounting
 
fcg:AS
    A = Authorization and Accounting
       AS =  SUPER
 
fcg:XU?
    X = Libraries and Utilities
       XU =  User Services
           XUD =  Date/Time Conversion
               o
               o
           XUX =  Common Options Parser
 
fcg:-X                 "eXit with the "-x" opt
 
... so long.           "this only appears when leaving interactive mode
!
 
.*B*
!FCG.X -F fcg_msg      "change the data file with the "-f" opt
here...
 
fcg:\SUPER             "use the 'processor' command & see what happens
 
SUPER fcg:
    A = Authorization and Accounting
       AS =  SUPER
 
fcg:-pIBEX             "here it is with the "-p" instead of "\"
 
IBEX fcg:
    C = Command Processors
       CP =  IBEX Command Processor
 
fcg:EXIT               "Exit interactive use with the "-e" opt
 
 
... so long.           "this only appears when leaving interactive mode
!
 
.*B*
!FCG.X -ffcg_msg X IT    VP   "change file & give fcg commands on command line
fcg:
    X = Libraries and Utilities
 
fcg:
    I = Initialization and Recovery
       IT =  TIGR (Table Initialization and GeneRation routines)
 
fcg:
    V = Service Processors (Edit, PCL...)
       VP =  PCL !
 
.*B*
!FCG.X \CONTROL -PC? -p CAP    "a real variety CONTROL fcg:
    P = Performance Monitoring
       PC =  CONTROL
 
C?  fcg:
    V = Service Processors (Edit, PCL...)
       VA =  CAP
 
fcg:
    P = Performance Monitoring
       PC =  CONTROL
 
CAP fcg:
    V = Service Processors (Edit, PCL...)
       VA =  CAP !
 
.*B*
!FCG.X -HCF fcg_msg \EDIT VE   "help,continue,file + both commands
 
The help message is too long to put here, but it prints out now.
 
fcg:
    V = Service Processors (Edit, PCL...)
       VE =  EDIT
 
EDIT fcg:
    V = Service Processors (Edit, PCL...)
       VE =  EDIT
 
FCG.X E02 here...      "notice we go interactive because of "-c"
 
fcg:A A? -pSUPER       "some interactive commands, mixed on the same line
    A = Authorization and Accounting
 
fcg:
    A = Authorization and Accounting
       AF =  M$ACCT pmme
          o
          o
       A0 =  (GA = LCP-6 Authorization & Acct.)
 
SUPER fcg:
    A = Authorization and Accounting
       AS =  SUPER
 
fcg:-Q                 "quit outta here with "-q" opt
 
... so long.           "this only appears when leaving interactive mode
!
 
.*K* DATA_FILE
FCG.X depends on having a data file to operate properly.
 
FCG_DATA.X is the default, and must be maintained as a seperate X account
"tool".  It has its own help file and everything.
 
   !HELP (FCG_DATA.X)  for further info
 
.*K* README
FCG was based on AF71 (AF_0071J-4 when this version was completed).  FCG is
now the author of two sections of that document.  When FCGs data file gets
updated, it will rewrite those sections of the paper for which it is
responsible, and then resubmit the paper automatically.
 
.*K* XINDEX
FCG.X
.*R*
AID=SYSTEM_PROGRAMMING
.*R*
AID=SUPPORT
.*R*
SOFTWARE_MAINTENENCE
.*R*
.*K* XINDEX_ABSTRACT
TOOL=FCG
.*R*
FCG is a cross reference tool to ease support efforts by developers.
.*K* CHANGES Changes changes
900129
.*R*
Submitted to the E02 X account.
.*K* OWNER
Jordan Boucher, LADC
