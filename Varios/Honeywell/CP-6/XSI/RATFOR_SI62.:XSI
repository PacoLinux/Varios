/*M* RATFOR_SI62  */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1990    */
/*T*                                                         */
/*T***********************************************************/
/*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
 
%SET LISTSUB='1'B;
 
GETR1: PROC (IUNIT,IARRAY,N,DONE,KEYREAD);
DCL IUNIT SBIN;
DCL IARRAY(0:1) SBIN;
DCL N UBIN;
DCL DONE BIT(1);
DCL KEYREAD SBIN;
/**/
DCL 1 MYSBIN SBIN STATIC INIT(0);
DCL 1 MYSBIN_RFORMAT REDEF MYSBIN,
         2 * UBIN(27) UNAL,
         2 ELEMENT UBIN(9) UNAL;
%INCLUDE CP_6;
DCL I UBIN;
%F$DCB;
DCL DCB$ PTR;
%FPT_READ (FPTN=RDBUF,BUF=BUFFER,DCB=M$UC,KEYR=YES,KEY=RKEY);
DCL 1 RKEY STATIC,
         2 KLEN UBIN(9) UNAL,
         2 KVAL UBIN(27) UNAL;
%FPT_WRITE (FPTN=WRBUF,BUF=BUFFER,DCB=M$UC);
DCL BUFFER CHAR(133) STATIC INIT(' ');
DCL M$DO DCB;
DCL ERROUT ENTRY(2);
DCL T_NONBLANK (0:127) UBIN(9) UNAL CONSTANT INIT(1*32,0,1*95);
DCL IDUM UBIN STATIC INIT(0);
/*
   PROCEDURE
*/
     DONE='0'B;
     DCB$=DCBADDR(IUNIT);
     RDBUF.V.DCB#=IUNIT;
     BUFFER=' ';
     CALL M$READ (RDBUF) ALTRET(BAD_READ);
     CALL SEARCHR(N,IDUM,T_NONBLANK,BUFFER) ALTRET (NO_NONBLANK);
     GOTO SKIP_NONBLANK;
NO_NONBLANK:
     N=0;
SKIP_NONBLANK:
     N=N+1;
/*   N=DCB$->F$DCB.ARS#; DON'T WANT TRAILING BLANKS */
     DO I=0 TO N-1;
          MYSBIN=0;
          MYSBIN_RFORMAT.ELEMENT = ASCBIN(SUBSTR(BUFFER,I,1));
          IARRAY(I)=MYSBIN;
        END;
     KEYREAD=RKEY.KVAL;
     IF RKEY.KLEN ~=3 THEN KEYREAD=-1;
     RETURN;
BAD_READ: ;
     IF DCB$->F$DCB.TYC.EOF# THEN DO;   /* END OF FILE */
          DONE='1'B;
          RETURN;
        END;
     CALL ERROUT(0);
     CALL M$ERR;
PUTR1: ENTRY (IUNIT,IARRAY,N);
/*
   PROCEDURE
*/
     WRBUF.V.DCB#=IUNIT;
     DO I=0 TO N-1;
          SUBSTR(BUFFER,I,1)=BINASC(IARRAY(I));
        END;
     WRBUF.BUF_.BOUND=N-1;
     CALL M$WRITE (WRBUF) ALTRET(BAD_WRITE);
     RETURN;
     DO WHILE ('0'B);
BAD_WRITE: ;
          CALL ERROUT (0);
          CALL M$ERR;
        END;                            /* DO NEVER */
END GETR1;
%EOD;
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1990    */
/*T*                                                         */
/*T***********************************************************/
SETUNIT: PROC (IUNIT,IDCB);
DCL IUNIT SBIN;
DCL IDCB SBIN;
/**/
%INCLUDE CP_6;
DCL NUM SBIN WORD STATIC;
DCL DCBCHAR CHAR(7);
%FPT_GETDCB(DCBNAME=VLP_NAME,DCBNUM=NUM,MERGE=YES);
%VLP_NAME;
DCL IDUM UBIN;
DCL DCBLEN UBIN;
DCL T_NONZERO(0:127) UBIN(9) UNAL CONSTANT INIT(1*48,0,1*79);
%FPT_WRITE (BUF=OUTBUF,DCB=M$DO,VFC=YES);
DCL OUTBUF CHAR(80) STATIC INIT(' ');
DCL M$DO DCB;
/*
   PROCEDURE
*/
     DCBCHAR='       ';
     CALL BINCHAR(DCBCHAR,IUNIT);
     CALL SEARCH (DCBLEN,IDUM,T_NONZERO,DCBCHAR);
     VLP_NAME.L#=9-DCBLEN;         /* 9 = LEN(DCBCHAR) + LEN('F$') = 7 + 2 */
     CALL CONCAT(VLP_NAME.NAME#,'F$',SUBSTR(DCBCHAR,DCBLEN,7-DCBLEN));
     CALL M$GETDCB(FPT_GETDCB) ALTRET(NODCB);
     IDCB=NUM;
     RETURN;
     DO WHILE ('0'B);
NODCB:    ;
          OUTBUF='A BAD DCB *** ROUTINE SETUNIT';
          CALL M$WRITE (FPT_WRITE);
          RETURN;
        END;                            /* DO NEVER */
END SETUNIT;
%EOD;
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1990    */
/*T*                                                         */
/*T***********************************************************/
DATE4: PROC (MMDD, YYYY, HHMM, SS);
 
/* CP-6 VSN OF SOFTWARE TOOLS DATE4 ROUTINE
 
ARG1=MMDD IN INTEGER
ARG2=YYYY IN INTEGER
ARG3=HHMM IN INTEGER
ARG4=SS   IN INTEGER
 
JLJ 102586 */
 
DCL MMDD UBIN;
DCL YYYY UBIN;
DCL HHMM UBIN;
DCL SS UBIN;
 
 
%INCLUDE CP_6;
 
%FPT_TIME (FPTN=GETIT, DATE=YYMMDD, TIME=HHMMSSSS, SOURCE=CLOCK,
               DEST=ANS);
 
DCL YYMMDD CHAR(6) STATIC;
DCL HHMMSSSS CHAR(8) STATIC;
 
     CALL M$TIME(GETIT)
     WHENALTRETURN DO;
          YYMMDD='991231';
          HHMMSSSS='23595999';
        END;
     CALL CHARBIN(MMDD, SUBSTR(YYMMDD,2,4));
     CALL CHARBIN(YYYY, SUBSTR(YYMMDD,0,2));
/*
 * AT: Adjust for year 2000
 */
     IF (YYYY >= 78) THEN
          YYYY=YYYY+1900;
     ELSE
          YYYY=YYYY+2000;
     CALL CHARBIN(HHMM, SUBSTR(HHMMSSSS,0,4));
     CALL CHARBIN(SS, SUBSTR(HHMMSSSS,4,2));
     RETURN;
END DATE4;
