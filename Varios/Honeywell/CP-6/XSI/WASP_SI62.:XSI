/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X*     PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3,MOC=Y   */
WASP_STATE: PROC;
 
%SUB GLOBAL = SYMREF;
%INCLUDE WASP_C61;
 
DCL S_HQ UBIN SYMREF;
 
DCL I UBIN;
DCL UX UBIN;
DCL NS UBIN STATIC;
DCL NB UBIN STATIC;
DCL HQ$ PTR STATIC;
%INCLUDE SS_SCHED_C;
%S_STATE;
 
DCL BAR(0:79) CHAR(1) STATIC INIT('*'*0);
DCL BAR_CHARS REDEF BAR CHAR(80);
DCL STATE_FORMAT CHAR(0) CONSTANT INIT('%3D %4A %A');
DCL BLANK_FORMAT CHAR(0) CONSTANT INIT('    %4A');
 
DCL STATE_TBL(0:4) CHAR(0) CONSTANT INIT('*','B','G','O','T');
DCL QUEUE(0:0) UBIN BASED;
 
   EXITING = BREAK_COUNT > 0;
 
   CALL VWRITE('Scheduler State Display', 23, 29,0);
   CALL VCURSOR(0,0);
 
   DO I = 1 TO %SS_SNULL-1;
      UX = HQ$->QUEUE(I);
      NS=0;
      NB=0;
      DO WHILE ( NS<511 AND UX>0);
         IF NB < 79 THEN DO;
            BAR(NB) = STATE_TBL(B$USRT$->B$USER.MODE(UX));
            NB = NB + 1;
         END;
         NS=NS+1;
         UX = B$USRT$->B$USER.FL(UX);
      END;
      IF NS = 0
      THEN CALL X$WRITE(F_FDS, VECTOR(BLANK_FORMAT), VECTOR(S_STATE(I)));
      ELSE CALL X$WRITE(F_FDS, VECTOR(STATE_FORMAT), VECTOR(NS),
        VECTOR(S_STATE(I)), VECTOR( SUBSTR(BAR_CHARS, 0, NB )));
      CALL VCLEARL;
   END;
   RETURN;
 
WASP_STATE_INIT: ENTRY;
   CALL DAM$INIT;
   CALL DAM$MAP(ADDR(S_HQ), HQ$, 0, 0);
   RETURN;
END WASP_STATE;
