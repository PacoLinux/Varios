PLEXTER is a processor that builds PLOVER files out of rums to shared
        libraries.
 
PLEXTER determines the symbol of the MODIFY command, locates the object
unit in the LEMURed library and builds the correct !PLOVER for this
particular patch.
 
To invoke PLEXTER use the following syntax:
 
!PLEXTER rum-file [OVER|ON|INTO] object-file[,lo-file]
 
PLEXTER reads the commands from "rum-file". Only rums to :SHARED_? are
converted to PLOVER commands. Entire patch decks can be read and only the
proper rums only will be converted. The object-file contains the PLOVER
directives to use on the libraries. The errors are reported thru lo-file.
Warning messages about undefined symbols are also written into the object
file as comments.
 
 
Notes:
 
    When using PLEXTER remember the following:
 
         1. Feed PLEXTER only PATCH.Xed patches.
 
            PLEXTER expects star numbers, so the file better have them.
            If your patches would fail Control Group procedures you can
            bet your paycheck PLEXTER will barf on them.
 
         2. A patch with n records of star number #x may have more than
            one !PLOVER directive inserted if the patch MODIFYs more
            than 1 symbol. Even though the patch may contain more than
            one !PLOVER, the star number and sequencing of records is
            preserved in the translation.
 
         3. If the input file contains errors (such as no star numbers)
            the STEPCC is set to 1. If no object-file is generated then
            the processor M$XXXes.
 
         4. The RUM directives in the source file determines which
            account PLEXTER will use to analyze the shared and unshared
            components. If the Rummed processor does not have an
            account specified, :SYS is assumed. This means that the shared
            and unshared components must be in the same account.
 
There are some symbols that PLEXTER cannot find in the unshared lib-
raries. A file in the SUPPORT account, :PLEXTER_STD contains some of
these symbols that have been previously encountered. PLEXTER will
search this file to solve undefined symbol references. If the search fails
then PLEXTER will print an error message in the object file and to M$LO
Example:
 
Consider the following make beleive patch for :SHARED_COMMON that exists
in file called RUM_1234:
 
RUM :SHARED_COMMON,UTS=B03
M BUFFER_IN+.1234 THIS IS A DUMMY PATCH                  "    #1234
M BUFFER_IN+.1235 THIS IS A DUMMY PATCH                  "    #1234
 
Now, to make the PLOVER records for :LIB_COMMON in :SYS do the following:
 
   1. The record in RUM_1234 that says RUM :SHARED_COMMON,UTS=B03
      should be changed to read: RUM :SHARED_COMMON.:SYS,UTS=B03
 
   2. !PLEXTER RUM_1234 OVER PLOVER_1234
 
If the PLOVER is to :ETC_COMMON.:SYS the RUM directive must have
:ETC_COMMON in it. When PLEXTER sees a RUM :SHARED_? it changes the
name to :LIB_?. However if PLEXTER sees a RUM :ETC_? then the processor
leaves the name as :ETC_? and uses this file to make the PLOVER images.
HELP file for PLEXTER
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
02/24/83
Installed in LADC X account.
CHANGES
Bill Huckeba, LADC
PLEXTER.X
AID=SUPPORT
PATCHES
TOOL=PLEXTER
Builds PLOVER files out of RUMs to shared libraries.
CHANGES
