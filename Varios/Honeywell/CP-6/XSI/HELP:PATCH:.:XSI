PATCH.X is used to format patches into the standard submittal layout.
PATCH is invoked via the following IBEX command:
 
        !PATCH.X source [{ON|OVER} dest] [(options)]
 
"source" normally points to a disk file which has been built by the programmer
using EDIT or PCL, but PATCH will accept any valid file identifier.  "dest", if
specified, should be a disk or tape file or CP, although PATCH will again
accept any valid file identifier (ME may be specified to view what PATCH would
do with your patch before actually doing it).  If "dest" isn't specified, "OVER
source" is assumed; in this case, "source" is required to be a disk file.
Output is EDIT-keyed if directed to disk or labeled tape.
 
? for more
An option list enclosed in parentheses may terminate the command line.  The
allowable options are as follows:
 
    (S#) STAR NUMBER (required)
    (PT) PATCH TYPE (required)
    (AI) AUTHORS INITIALS (required)
    (SV) SYSTEM VERSION (required) -or-
    (PV) PROCESSOR VERSION (required)
    (CC) COMMENT CARDS
    (NC) NEW COMMENTS
    (PC) PATCH COMMENTS
    (RU) RUN UNIT
    (LIB) LIBRARY
    (OU) OBJECT UNIT
    (GL) GLOM
    (UT) UTS
    (TY) TYPE
    (DF) DFWMC
    (DO) DONE
 
Type HELP (PATCH.X) OPTIONS xx, where "xx" is one of the two-character
abbreviations in parentheses above, to obtain information about that particular
option.
************************ PATCH C06 ***************************
 
The PATCH program provides a means for programmers to apply comments to patches
prior to submitting them to the Control Group.  The programmer prepares a patch
by entering into a file via EDIT or PCL and then invokes PATCH to apply
documentation commentary such as system version, sequence numbers, and STAR
numbers to the cards.  Normally, the programmer directs PATCH output to a file,
and this file is presented to the Control Group to become an official patch.
PATCH re-packages a patch with the following:  First, a title card is produced
that indicates the type of patch (Aardvark, Xdelta, Monitor, PLOVER, FEP, or
RUM). In addition, a count is made of the number of cards in the patch and the
number of non-comment cards.  The title card allows the Control Group to place
the patch in the patch files efficiently.  If the patch is a RUM patch and the
user has specified a UTS, a card is produced with "RUM
run-unit-name,UTS=uts-value" on it.  If the patch is an FEP patch and the
version is B01 through B03, IF and ENDIF statements are produced.  If the patch
is a PLOVER patch, a PLOVER command is generated.
 
Documentation commentary is added to each patch card.  The commentary includes
(in this order) Author's Initials, System or Processor Version, date, "n of m"
(sequence numbering), and the STAR number for the patch.  Comment cards (that
is, cards which contain no patch text) are provided with the STAR number only.
 
Commentary may also be removed from the patch deck by PATCH.  For example,
"QUIT" and "END" cards will be unconditionally removed from all decks, and old
title cards (if recognizable) and "U XDEL" cards will be removed and
subsequently replaced with new ones.  If PATCH is going to produce a RUM card,
old RUM cards are removed; otherwise, they are left as is.  Old IF/ENDIF cards
are always removed from the patch.  When applying documentation commentary to
patch cards, old PATCH-generated commentary is removed insofar as it is
recognizable before being replaced by new comments.
 
PATCH recognizes two types of comments:  Independent comment cards contain no
patch text; they have "C " in columns one and two for Xdelta and Aardvark
patches and no non-blank characters not enclosed within double quotes (") for
Monitor, FEP, and RUM patches.  The other type of comments consists of
documentation commentary produced by the programmer on the patches themselves,
herein called "patch comments".  Patch comments are only recognizable on
Monitor, PLOVER, FEP, and RUM patches, since they must be enclosed in double
quotes.  Commentary on Aardvark and Xdelta patches is only recognizable if it
is also enclosed in double quotes (not required by Aardvark); otherwise, these
comments are treated as part of the patch text.  What PATCH does with these two
types of comments is under the programmer's control through the use of run-time
options (see below).  At least two "words" of independent comments are required
on all patches.
HELP file for: PATCH.X
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
06/26/96 - Use correct warning for Host releases prior to C00 for FEP patch.
06/03/94 - Print warning if authors initials not added to patch
900319 JLJ
Fixed problem where commandline RU= option had no effect.  I think I added the
AARDVARK commentary feature for real this time.  (See 9/27/88,8/26/88 notes.)
09/27/88 - Removed bad code that put a second " on patch cards.
880826 - Added AARDVARK commentary feature.
03/30/84 - Added PLOVER, LIB, OU options to support C00 CP-6 (C06).
11/11/83 - Added DONE option to automatically put patches in .PATCH.  (C05).
04/05/83 - Changed PIGETTE to PIGLET in the GLOM list. (C04)
11/23/82 - Added the DFWMC option to close STAR #13708 and get Dennis off my
back.
08/06/82 - Fixed a minor bug which caused user comments to override PATCH's
comments by one byte.
A word about how PATCH handles overflow and comment conflict situations is
necessary:  PATCH will try to avoid reformatting your patch text and patch
commentary as much as possible; however, there must be room on the patch cards
for the patch text and the PATCH-supplied documentation.  If user commentary is
present on the patch card and it interferes with the placement of PATCH's
comments, one of the following will happen:
 
If there is sufficient room on the patch card for the patch text, PATCH's
comments, and the user's comments, the user's comments (and patch text, if
necessary) will be moved to the left as much as is required to make room for
the PATCH documentation commentary.  For example, a Monitor patch of the form
 
        M LOCATION OLDVAL (NEWVAL)                      "COMMENTS
 
would be rearranged by "pushing" the comments to the left to make room for
sequence numbering, etc.:
 
        M LOCATION OLDVAL (NEWVAL)   "COMMENTS  BEB A00 791220 1-1 #12
 
PATCH will separate user comments from its comments by at least two spaces to
allow PATCH to locate and remove its commentary should the patch be re-run
through PATCH.
 
If there is not enough room for the patch text, user commentary, and PATCH
commentary, user commentary is deleted from the right until either sufficient
columns are available or until all user comments have been deleted.
Non-required spaces may also be removed from the patch as above if necessary.
 
Finally, if patch text plus PATCH commentary exceeds the size of a card (80
columns), PATCH commentary will be deleted from left to right for as many
columns as necessary.  Whole fields, such as system version, are deleted,
rather than single columns.  This may result in a patch which has no PATCH
commentary except the mandatory STAR number.
 
If a reformatted patch still won't fit on an 80-column card image, PATCH will
produce a diagnostic and scratch the output file.  All patches must be
contained in 80 columns or less, including STAR number.
 
Independent comment cards (and added commentary, if any) will always be
reformatted by PATCH to save space.  The commentary is stripped of its double
quotes or leading "C " and broken down into "words" consisting of strings of
contiguous non-blank characters.  The "words" are then packed into reformatted
comment cards, separated by single spaces.  Characters between single quote
pairs ('...') are considered to be non-blank; hence, text enclosed in single
quotes is considered to be a single "word" and will not be broken up.  This
allows the user to defeat the reformatting feature of PATCH like so:  By
placing single quotes in columns two and 69 on Monitor, RUM, and FEP
independent comment cards and in columns three and 69 on Aardvark and Xdelta
independent comment cards, the user forces PATCH to see only these long "words"
which won't be split between cards; hence, these comments won't be reformatted.
For example:
 
         'THESE COMMENTS WILL NOT BE                               '
         '          REFORMATTED SINCE THEY                         '
         '                 ARE ENCLOSED IN SINGLE QUOTES           '
 
See the DF option above for an alternative method of doing this.
 
Remember that independent comments formatted like the above count as only one
"word" per card and that two "words" of independent commentary are required on
each patch.
 
An unmatched quote mark is effectively ignored and does not open a quoted
string; this is done so that words containing apostrophes will be correctly
handled insofar as is possible.
 
Please note that the reformatting of comments applies only to independent
comment cards, not to patch comments; patch comments are not rearranged unless
absolutely necessary (see above).
Options may be specified in a number of ways in addition to those on the
command line.  PATCH has been designed to allow the development programmer to
"tune" it to his own desires and defaults, regardless of the "standard"
defaults mentioned above.  This is accomplished as follows:  If different
defaults are desired, the programmer may build a file in the account from which
he normally runs PATCH called ":PATCH_DEFAULT_OPTIONS".  This file consists of
a single record of from one to 256 characters which is an option list like that
described above, except that it is not enclosed in parentheses.  For example,
assume that the COBOL developers want the patch type to default to RUM,
processor version to B00, run unit to COBOL, and UTS to A01.  Also, they want
to be prompted for new comments when PATCH is invoked.  The
:PATCH_DEFAULT_OPTIONS file would then contain a record such as
 
        RUM,PV=B00,RU=COBOL,UTS=A01,NC
 
These options would override the defaults mentioned above.  Those options which
weren't mentioned, such as PC and CC, would still default to the standards of
PC and CC (keep).  It is not a good idea to put a STAR number in the default
file.
 
If options are specified on the command line, they override both the system
standards and the ones from :PATCH_DEFAULT_OPTIONS, if any.
 
The patch file may contain multiple patches.  If this is so, each patch must be
separated from the next by a "sub-option" line which is a list of options to be
applied to the patch that follows it.  The first option on the sub-option line
must be the STAR number of the patch, and it must be in the form #dddddd or
#LADC.  The number sign (#) must appear in column one and the number or LADC
must begin in column two; otherwise, PATCH will not recognize the card as a
sub-option line.  The sub-option line preceding the first patch is optional,
but may be present even if there is only one patch in the file.  If any options
other than STAR number are present on the sub-option line they will temporarily
override the specification for that option for that patch only.  For example,
assuming that the :PATCH_DEFAULT_OPTIONS file was created as above and the
first card of the patch input file contained the following:
 
        #20,NNC,NPC,SV=B01
 
The system version would be changed to B01 and new comments would not be
prompted for; additionally, patch comments would be deleted.  After this patch
was processed, NC, PC, and SV would return to the previous values.
 
After processing all the options in :PATCH_DEFAULT_OPTIONS, the command line,
the sub-option line, and standard defaults, if any of the required values are
missing (S#, PT, AI, RU if PT=RUM, GL if PT=FEP, LIB and OU if PT=PLOVER),
PATCH will prompt the user for the missing options on a patch-by-patch basis.
 
If the patch file being processed has been previously run through PATCH, PATCH
will attempt to determine the old values for patch type, STAR number, author's
initials, GLOM, run unit name, library name, OU name, UTS, and system or
processor version for each element which has not been explicitly assigned a
value through the processes outlined above.  The user will be presented with
the prompt for a new value, but the old value will be placed in the reread
buffer.  If no change need be made to the old value, a carriage return will
send the old value back to PATCH to be processed into the patch.  Otherwise,
the user may use the terminal editing features of CP-6 to modify the reread
value before striking return.
Type ? to continue or ?? for the whole list.
        S/TAR #={[#]dddddd|[#]LADC}  or  {#dddddd|#LADC}
 
A STAR number is required.  Experimental or LADC-only patches may use #LADC;
otherwise the STAR number must consist of one to six numeric digits without a
decimal point.  Examples:  STAR #=169, S#=LADC, #2967, #3.4.
        [P/ATCH T/YPE=]{A/ARDVARK|X/DELTA|M/ONITOR|P/LOVER|F/EP|R/UM}
 
Patch type is also required.  If RUM is specified, the RU and UTS options are
valid (see below).  Examples:  PT=RUM, PATCH TYPE=X, MONITOR, A.  FEP must be
used for front-end patches for system versions B03 and earlier; PLOVER must be
used for front-end patches for system versions C00 and later.
        A/UTHORS I/NITIALS=ii/i
 
Author's initials are required, but will default to "xxx" if the user's logon
account is of the form "xxxHOST " or "xxxFEP ". Only two or three alphabetic
characters are allowed.  Examples:  AI=BEB, AUTHORS INITIALS=HP.
        S/YSTEM V/ERSION=v/vvvvvv
        P/ROCESSOR V/ERSION=v/vvvvvv
 
System or processor version is required and will be prompted for if not
specified.  One to seven alphanumeric characters are allowed plus period (.),
hyphen (-), and greater-than (>).  Examples:  SYSTEM VERSION=A01, SV=1.0,
PV=A00-A01, PV=A>.
        [N/O] C/OMMENT C/ARDS
 
This option directs PATCH to either keep (CC) or dispose of (NCC) independent
comment cards found in the patch file.  If not specified, CC (keep) is assumed.
Patch comments are not affected by this option.
        [N/O] N/EW C/OMMENTS
 
This option directs PATCH to either prompt for (NC) or not prompt for (NNC) new
or additional commentary to be inserted in the output file as additional
independent comment cards.  If not specified, NNC (don't ask for more) is
assumed.  This option has no affect on patch comments.  If CC and NC are
specified, the added comments immediately follow any old patch cards found on
the front of the patch deck.  At least two "words" of independent patch
comments must be present on all patches, for documentation purposes.  If NNC is
specified and there are no leading independent comment cards, NNC is ignored
and the user is prompted for new comments.
        [N/O] P/ATCH C/OMMENTS
 
This option directs PATCH to keep (PC) or delete (NPC) comments found on the
patches themselves (patch comments).  If not specified, PC (keep) is assumed.
This option has no effect on independent patch cards.
        RU/N [UNIT]=r/rrrrrrrr....
 
If this is a RUM patch, a run unit name is required.  A one to thirty-one
character run unit name must be supplied; account, password, etc., must not be
present.  Examples:  RU=COBOL, RUN UNIT=FORTRAN.  If RU is specified and PT is
not, PT=R is assumed by default.
        LIB/RARY=library
 
If this is a PLOVER patch, the library name is required.  A one to thirty-one
character library name must be supplied; account and password may not be
present.  Examples:  LIB=FEPASYNCONLY, LIBRARY=MINE.  If LIB is specified and
PT is not, PT=P is assumed by default.  LIB is valid on patches for system
versions C00 and greater.
        O/BJECT U/NIT=ouname
 
If this is a PLOVER patch, the object unit within the library is required.  A
one to thirty-one character object unit name must be supplied; account and
password may not be present.  Examples:  OU=ASYNC, OBJECT UNIT=BSC.  If OU is
specified and PT is not, PT=P is assumed by default.  OU is valid on patches
for system versions C00 or greater.
        GL/OM=glom
 
If this is an FEP patch, a GLOM is required for B01 and later patches.  "glom"
is ASYNC, BSC, COLTS, DISKETTE, FORMS, HOST_LINK, MULE, KERNEL, PIGLET, RBT,
URP, X25, 3270, or 7700.  One letter is enough.  If GLOM is needed and not
specified, it will be prompted for.  If GL is specified and PT is not, PT=FEP
is assumed by default.  If both RU and GL are specified, GL is ignored.
Examples:  GL=MULE, GLOM=A.  GL is valid on patches for system versions B03 and
earlier.
        UT/S=mm/dd/yy hh:mm:ss.tt
        UT/S=vnn
        UT/S=NUTS
        UT/S=o/ooooooooooo
 
If this is a RUM or PLOVER patch, a universal time stamp value may be supplied.
If this option is present, a RUM or PLOVER card with the run unit name or
library name and UTS value will be automatically produced.  "mm/dd/yy
hh:mm:ss.tt" is the LOCAL form of the date; if the alternate form
"o/ooooooooooo" (one to twelve octal digits not preceded by a period) is used,
it will be converted to the LOCAL form.  "vnn" is the version number, such as
"A01" or "B00", which will be converted by the Control Group patch munger to
the current LOCAL value for the run unit being rummed.  If NUTS is specified,
it will be used in place of the UTS value.  Examples:  UTS=03/06/80
12:52:27.34, UT=NUTS, UT=A01, UT=12346753.  If UT is not specified, the first
three characters of the Processor Version (PV) will be used by default.  If PV
is shorter than 3 characters, it is padded on the right with zeros.
        [N/O] TY/PE
 
TYPE directs PATCH to print the reformatted patch on ME as it is writing it to
the output file.  NO TYPE (which is the default) suppresses this listing.  If
WIDTH is greater than 89, the EDIT keys are also printed.  You can suppress the
listing at any point by typing ESC-W, of course.
        DF/WMC
 
DF directs PATCH to leave independent patch commentary alone; that is, it is
not compressed into minimum space.  DF should be specified if your independent
commentary is already formatted.  In this mode, PATCH will TRUNCATE patch
commentary that is too long to fit on the card; there must be two spaces plus
the length of the STAR number at the end of the card image.  CAUTION:  If DF
and NC (new commentary) are both specified, or if PATCH prompts for comments,
the comments must be correctly formatted for this type of patch.  That is, " in
column one for monitor/RUM/FEP patches, and C in column one for Aardvark and
XDELTA patches.
 
The DF option does not affect PATCH's handling of commentary on patch cards
(i.e., cards which contain the actual patch).
        DO/NE
 
DO directs PATCH to place the completed patch in account .PATCH.  The file will
be called "patchtype_star_ver", where "patchtype" is AARDVARK, XDELTA, MONITOR,
or the processor name.  "star" is the STAR number, and "ver" is the
system/processor version.  The patch will also be written to the normal output
device.
00003
00003
00005
00005
00014
00015
00011
00009
00006
00010
00002
00007
00002
00004
00008
00001
00001
00004
00013
00012
00004
Bruce Beaumont, NSS/CP-6, LADC
One final item:  Although all the media concerned with CP-6 will accept and
transmit lower case, most interpreting keypunches will not properly interpret
lower case characters.  For this reason, all text entered in both patches and
commentary should be entered in upper case; however, PATCH will not force this
restriction.
 
For most applications, PATCH usage is not as difficult as this document makes
it appear.  Read the option list above and note the defaults; if they are not
what you would normally want, build the one-line :PATCH_DEFAULT_OPTIONS file in
your account.  After that, you need not worry about it again.  Try a couple of
sample PATCH runs using dummy files to see what PATCH will do in the kinds of
situations you think you will normally encounter.
PATCH is invoked via the following IBEX command:
 
        !PATCH.X source [{ON|OVER} dest] [(options)]
 
"source" normally points to a disk file which has been built by the programmer
using EDIT or PCL, but PATCH will accept any valid file identifier.  "dest", if
specified, should be a disk or tape file or CP, although PATCH will again
accept any valid file identifier (ME may be specified to view what PATCH would
do with your patch before actually doing it).  If "dest" isn't specified, "OVER
source" is assumed; in this case, "source" is required to be a disk file.
Output is EDIT-keyed if directed to disk or labeled tape.
 
An option list enclosed in parentheses may terminate the command line.  The
allowable options are as follows:
 
    (S#) STAR NUMBER (required)
    (PT) PATCH TYPE (required)
    (AI) AUTHORS INITIALS (required)
    (SV) SYSTEM VERSION (required) -or-
    (PV) PROCESSOR VERSION (required)
    (CC) COMMENT CARDS
    (NC) NEW COMMENTS
    (PC) PATCH COMMENTS
    (RU) RUN UNIT
    (LIB) LIBRARY
    (OU) OBJECT UNIT
    (GL) GLOM
    (UT) UTS
    (TY) TYPE
    (DF) DFWMC
    (DO) DONE
 
Type HELP (PATCH.X) OPTIONS xx, where "xx" is one of the two-character
abbreviations in parentheses above, to obtain information about that particular
option.
PATCH.X
AID=SUPPORT
BULL_SPECIFIC
PATCHES
TOOL=PATCH.X
Formats patches into the standard submittal layout.
