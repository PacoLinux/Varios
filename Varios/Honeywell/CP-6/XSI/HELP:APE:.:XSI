 
APE is a programme that provides the required handshaking for
down-line loading of ASMZ80.X and ASM6502.X run units into a
microprocessor.
 
APE is also capable of executing an up-line dump from the micro-
processor to a CP-6 file.
Upline/Downline load data format:
 
    :aabbbbccdddd...ddddee(CR)
 
:       Is a literal ':'
aa      Is the count of data bytes in "printable hex"
bbbb    Is the address field in "printable hex", MSB first
cc      Is the type field in "printable hex":
        '00' - data follow to be loaded into memory
        '01' - bbbb is start (entry) address
        '02' - add bbbb to future bbbb fields in 00 and 01 records
        '03' - add bbbb to dddd then add bbbb to (dddd); aa must be
               even; dddd comes in MSB first and points to LSB of (dddd)
        '04'-'FF' - Special handling
dddd... Data bytes ('aa' of them) in "printable hex"
ee      Checksum in "printable hex" computed as the negative (2's
        complement) of the sum of all bytes from aa through the last dd.
(CR)    Is a 'Carriage Return' character.
 
"Printable hex" is the ASCII representation of each nibble as a
character; thus, two characters are sent for each byte of data (e.g.,
the data byte .2D is sent as .3244 ('2D').
 
NOTE:  with the exception of '(CR)', this record format is exactly
that output by ASMZ80 and ASM6502.
 
Sender/receiver handshaking for upline/downline load sequence:
 
    Sender sends        Receiver sends       Comment
    ------------        --------------       -------
    (ESC)(SOH)(CR)      (ACK)(CR)            Ready to accept data
    :aabbbbccdddd...    (ACK)(CR)            Data received ok
    :aabbbbccdddd...    (NAK)(CR)            Data not received ok
    (EOT)(CR)                                Sender terminates transmit
    :aabbbbccdddd...    (EOT)(CR)            Receiver terminates transmit
 
Invocation syntax:
 
  !APE.X fid TO ME
for down-line load of the data in 'fid'.
 
  !APE.X ME TO fid
for up-line dump of micro to 'fid'.
 
NOTES:
 o The microprocessor must be running a 'catcher' programme to
   provide the handshaking for the other end.
 o APE does not verify data down-line loaded as to format or
   content.  Some records output by the assembler may contain
   relocation information, schema, or other stuff that the
   microprocessor may not 'like'.  The micro's catching programme
   should ignore these records.
 o APE does verify checksum on up-line dumped records.  Improper
   records get a NAK.
 o APE currently IGNORES parity on all its transactions and 'fixes'
   any up-dumped data that arrives with bad parity.
 o The up-line dump creates an ORG=CONSECUTIVE file.
HELP file for: APE
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
05/18/83
  The command to start loading (both ways) changed from
     (SOH)
  to
     (ESC)(SOH)
  to make it harder to met tossed into load-mode by mistake.
05/04/82
  Original version of APE sumbitted to the 'X' account.
CHANGES
Dennis Griesser, LADC
APE.X
AID=MICROPROCESSOR
FILE_TRANSFER
TOOL=APE
Provides the required handshaking for up- and down-line
loading of ASMZ80.X and ASM6502.X run units into a microprocessor.
CHANGES
