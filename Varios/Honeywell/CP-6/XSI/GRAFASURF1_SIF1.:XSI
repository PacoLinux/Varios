      SUBROUTINE INIT3D (EYE, NU, NV, NW, ST1, LX, NY, IS2, IU, S)
C*T***********************************************************  
C*T*                                                         *  
C*T* Copyright (c) Bull HN Information Systems Inc., 1989    *  
C*T*                                                         *  
C*T***********************************************************  
      DIMENSION EYE(3), ST1(NV,NW,2), IS2(LX,NY), S(4)
C
C  ACM ALG 475
C  THOMAS WRIGHT
C  COMPUTING FACILITY
C  NATIONAL CENTER FOR ATMOSPHERIC RESEARCH
C  BOULDER, CO 80302
C  NCAR IS SPONSORED BY THE NATIONAL SCIENCE FOUNDATION.
C
C  THE METHOD IS DESCRIBED IN DETAIL IN "A ONE-PASS HIDDEN-LINE
C  REMOVER FOR COMPUTER DRAWN THREE-SPACE OBJECTS", PROCEEDINGS 1972
C  SUMMER COMPUTER SIMULATION CONFERENCE, 261-267.  ORIGINAL VERSION
C  FOR USE ON CDC 6600 OR 7700 SERIES COMPUTERS; THIS VERSION FOR
C  HONEYWELL CP-6 (36-BIT DPS-8) SERIES COMPUTERS.
C
C  THIS PACKAGE OF ROUTINES PLOTS 3-DIMENSIONAL OBJECTS WITH HIDDEN
C  PARTS NOT SHOWN.  OBJECTS ARE STORED IN AN ARRAY, WITH THE
C  POSITION IN THE ARRAY CORRESPONDING TO A LOCATION IN 3-SPACE AND
C  THE VALUE OF THE ARRAY ELEMENT TELLING IF ANY OBJECT IS PRESENT
C  AT THE LOCATION.
C
C  INIT3D IS AN INITIALIZATION ROUTINE FOR THE PACKAGE.  IT IS
C  CALLED, THEN A SEQUENCE OF CALLS ARE MADE TO DANDR TO PRODUCE THE
C  PICTURE.
C
C  VARIABLES:
C
C  EYE -
C    AN ARRAY 3 LONG CONTAINING THE U, V, AND W COORDINATES OF THE
C    EYE POSITION.  OBJECTS ARE CONSIDERED TO BE IN A BOX WITH 2 EXTREME
C    CORNERS AT (1,1,1) AND (NU,NV,NW).  THE EYE POSITION MUST HAVE
C    POSITIVE COORDINATES, AWAY FROM THE COORINATE PLANES U=0, V=0, AND
C    W=0.  WHILE GAINING EXPERIENCE WITH THE PACKAGE, USE
C    EYE(1)=5*NU,  EYE(2)=4*NV,  EYE(3)=3*NW.
C
C  NU -
C    U DIRECTION LENGTH OF BOX CONTAINING OBJECT(S)
C
C  NV -
C    V DIRECTION LENGTH OF BOX CONTAINING OBJECT(S)
C
C  NW -
C    W DIRECTION LENGTH OF BOX CONTAINING OBJECT(S)
C
C  ST1 -
C    SCRATCH ARRAY AT LEAST NV*NW*2 WORDS LONG
C
C  LX -
C    FIRST DIMENSION OF A SCRATCH ARRAY, IS2, USED BY THE PACKAGE
C    FOR REMEMBERING WHERE IT SHOULD NOT DRAW.  LX IS TYPICALLY
C    LX = 1 + (NX-1) / number_of_bits_per_word (NBPW)
C
C  NY -
C    SECOND DIMENSION OF IS2.  SEE DANDR COMMENTS.
C
C  IS2 -
C    SCRATCH ARRAY AT LEAST LX*NY WORDS LARGE
C
C  IU -
C    UNIT NUMBER OF SCRATCHFILE FOR THIS PACKAGE.  ST1 WILL BE WRITTEN
C    NU TIMES INTO THIS FILE.
C
C  S -
C    AN ARRAY 4 LONG WHICH CONTAINS THE COORDINATS OF THE AREA WHERE
C    THE PICTURE IS TO BE DRAWN.  THAT IS, ALL PLOTTING COORDINATES
C    GENERATED WILL BE BOUNDED AS FOLLOWS--
C         X COORDINATES WILL BE BETWEEN S(1) AND S(2)
C         Y COORDINATES WILL BE BETWEEN S(3) AND S(4)
C    TO PREVENT DISTORTION, HAVE S(2)-S(1)=S(4)-S(3)
C
C  IF SEVERAL PICTURES ARE TO BE DRAWN WITH THE SAME SIZE ARRAYS AND
C  EYE POSITION, AND THE USER REWINDS IU AND FILLS IS2 WITH ZEROES,
C  INIT3D NEED NOT BE CALLED FOR OTHER THAN THE FIRST PICTURE.
C
C    *** SETUP TRANSFORMATION FOR THIS LINE OF SIGHT
      U = NU
      V= NV
      W=NW
      CALL SETORG (U*.5, V*.5, W*.5, EYE(1),EYE(2),EYE(3))
C    *** FIND EXTREMES IN TRANSFORMED SPACE
      CALL PERSPC(1.,1.,W,D,YT)
      CALL PERSPC(U,V,1.,D,YB)
      CALL PERSPC(U,1.,1.,XL,D)
      CALL PERSPC(1.,V,1.,XR,D)
C    *** ADJUST EXTREMES TO PREVENT DISTORTION WHEN GOING FROM
C    *** TRANSFORMED SPACE TO PLOTTER SPACE
      DIF=(XR-XL-YT+YB)*.5
      IF (DIF) 1000,1020,1010
1000  CONTINUE 
      XL=XL+DIF
      XR=XR-DIF
      GOTO 1020 
1010  CONTINUE 
      YB=YB-DIF
      YT=YT+DIF
1020  CONTINUE 
      OPEN (IU, STATUS='SCRATCH')
C    *** FIND THE PLOTTER COORDINATES OF THE 3-SPACE LATTICE POINTS
      C1=.9*(S(2)-S(1))/(XR-XL)
      C2=.05*(S(2)-S(1))+S(1)
      C3=.9*(S(4)-S(3))/(YT-YB)
      C4=.05*(S(4)-S(3))+S(3)
      DO 1050 I= 1,NU
         U=NU+1-I
         DO 1040 J=1,NV
            V=J
            DO 1030 K=1,NW
               CALL PERSPC(U,V,FLOAT(K),X,Y)
               XNEW = C1*(X-XL)+C2
               ST1(J,K,1)=XNEW
               ST1(J,K,2)=C3*(Y-YB)+C4
1030        CONTINUE 
1040     CONTINUE 
C    *** WRITE THEM OUT ON UNIT IU
         WRITE (IU) ST1
1050  CONTINUE 
      REWIND IU
C    *** ZERO OUT ARRAY WHERE VISIBILITY IS REMEMBERED
      DO 1070 J=1,NY
         DO 1060 I=1,LX
            IS2(I,J)=0
1060     CONTINUE 
1070  CONTINUE 
      RETURN
      END 
      SUBROUTINE SETORG (X,Y,Z,XT,YT,ZT)
      COMMON/XFORM/JUMP,EX,EY,EZ,AX,AY,AZ,D,R,COSBE,COSAL,COSGA
      LOGICAL JUMP
C
C  THIS ROUTINE IMPLEMENTS THE 3-SPACE TO 2-SPACE TRANSFORMATION BY
C  KUBER, SZABO AND GIULIERI.  THE PERSPECTIVE REPRESENTATION OF
C  FUNCTIONS OF TWO VARIABLES.  J/ACM 15 2, 190-204, 1968.
C
C  VARIABLES:
C
C  X,Y,Z -
C
C    ARE THE 3-SPACE COORDINATES OF THE INTERSECTION OF THE LINE OF
C    SIGHT AND THE IMAGE PLANE.  THIS POINT CAN BE THOUGHT OF AS THE
C    POINT BEING LOOKED AT.
C
C  XT,YT,ZT -
C    ARE THE 3-SPACE COORDINATES OF THE EYE POSITION.
C
      AX=X
      AY=Y
      AZ=Z
      EX=XT
      EY=YT
      EZ=ZT
C    *** AS MUCH PRECOMPUTATION IS DONE DURING SETORG SINCE PERSPC IS
C    *** CALLED THOUSANDS OF TIMES FOR EACH CALL TO SETORG
      DX=AX-EX
      DY=AY-EY
      DZ=AZ-EZ
      D =SQRT(DX*DX+DY*DY+DZ*DZ)
      COSAL=DX/D
      COSBE=DY/D
      COSGA=DZ/D
      AL=ACOS(COSAL)
      BE=ACOS(COSBE)
      GA=ACOS(COSGA)
      SINGA=SIN(GA)
C    *** THE 3-SPACE POINT LOOKED AT IS TRANSFORMED INTO (0,0) OF THE
C    *** 2-SPACE.  THE 3-SPACE Z AXIS IS TRANSFORMED INTO THE 2-SPACE
C    *** Y AXIS.  IF THE LINE OF SIGHT IS CLOSE TO PARALLEL TO THE
C    *** 3-SPACE Z AXIS, THE 3-SPACE Y AXIS IS CHOSEN (INSTEAD OF THE
C    *** 3-SPACE Z AXIS) TO BE TRANSFORMED INTO THE 2-SPACE Y AXIS
      IF (SINGA.LT. 0.00001)GOTO 1000 
      R=1./SINGA
      JUMP = .FALSE.
      RETURN
1000  SINBE=SIN(BE)
      R=1./SINBE
      JUMP=.TRUE.
      RETURN
      END 
      SUBROUTINE PERSPC (X,Y,Z,XT,YT)
      COMMON/XFORM/JUMP,EX,EY,EZ,AX,AY,AZ,D,R,COSBE,COSAL,COSGA
      LOGICAL JUMP
C
C  VALUES PASSED HERE ARE SOMEWHAT DIFFERENT THAN WHEN PASSED TO
C  SETORG:
C
C  X,Y,Z -
C    3-SPACE COORDINATES OF THE POINT TO BE TRANSFORMED.
C  XT,YT -
C    2-SPACE X AND Y OUTPUT FROM CALCULATIONS
C
      Q=D/((X-EX)*COSAL+(Y-EY)*COSBE+(Z-EZ)*COSGA)
      IF (JUMP)GOTO 1010 
1000  CONTINUE 
      XT=((EX+Q*(X-EX)-AX)*COSBE-(EY+Q*(Y-EY)-AY)*COSAL)*R
      YT=(EZ+Q*(Z-EZ)-AZ)*R
      RETURN
1010  CONTINUE 
      XT= ((EZ+Q*(Z-EZ)-AZ)*COSAL-(EX+Q*(X-EX)-AX)*COSGA)*R
      YT= (EY+Q*(Y-EY)-AY)*R
      RETURN
      END 
      SUBROUTINE DANDR(NV,NW,ST1,LX,NX,NY,IS2,IU,S,IOBJS,MV)
C
C  THIS ROUTINE IS CALLED nu TIMES, EACH CALL PROCESSING THE PART
C  OF THE PICTURE AT U=NU+1-I, WHERE I IS THE NUMBER OF THE CALL TO
C  DANDR.  THAT IS, THE PART OF THE PICTURE AT U=NU IS PROCESSED
C  DURING THE FIRST CALL; U=NU-1 DURING THE SECOND CALL, AND SO ON
C  UNTIL THE PART OF THE PICTURE AT U=1 IS PROCEESED DURING THE LAST
C  CALL.
C
C  NV,NW,ST1 -
C    SEE INIT3D COMMENTS
C  LX -
C    THE NUMBER OF WORDS NEEDED TO HOLD NX BITS.  ALSO, THE
C    FIRST DIMENSION OF IS2.
C
C  NX -
C    NUMBER OF CELLS IN THE X DIRECTION OF A MODEL OF THE IMAGE PLANE
C    A SILOHUETTE OF THE PARTS OF THE PICTURE PROCESSED SO FAR IS
C    STORED IN THIS MODEL.  LINES TO BE DRAWN ARE TESTED FOR
C    VISIBILITY BY EXAMINING THE SILHOUETTE.  LINES IN THE SILHOUETTE
C    ARE HIDDEN.  LINES OUT OF THE SILHOUETTE ARE VISIBLE.  THE
C    SOLUTION IS APPROXIMATE BECAUSE THE SILHOUETTE IS NOT FORMED
C    EXACTLY.  SEE IS2 COMMENT BELOW.
C
C  NY -
C    NUMBER OF CELLS IN THE Y DIRECTION OF THE MODEL OF THE IMAGE
C    PLANE.  ALSO THE SECOND DIMENSION OF IS2.
C
C  IS2 -
C    AN ARRAY TO HOLD THE IMAGE PLANE MODEL.  IT IS DIMENSIONED
C    LX BY NY.  THE MODEL IS NX BY NY AND PACKED DENSELY.  IF HIDDEN
C    LINES ARE DRAWN, DECREASE NX AND NY (AND LX, IF POSSIBLE).  IF
C    VISIBLE LINES ARE LEFT OUT OF THE PICTURE, INCREASE NX AND NY
C    (AND LX IF NEED BE).  AS A GUIDE, SOME EXAMPLES SHOWING
C    SUCCESSFUL CHOICES ARE LISTED.
C
C    GIVEN     NU   NV   NW   RESULTING  NX  NY   FROM TESTING
C              100  100  60             200 200
C               60   60  60             110 110
C               40   40  40              75  75
C
C  IU -
C    SEE INIT3D COMMENTS
C
C  IOBJS -
C    A NV BY NW ARRAY (WITH ACTUAL FIRST DIMENSION MV IN THE CALLING
C    PROGRAM) DESCRIBING THE OBJECT(S).  IF THIS IS CALL NUMBER I TO
C    DANDR, THE PART OF THE PICTURE AT U=NU+1-I IS TO BE PROCESSED.
C    IOBJS DEFINES THE OBJECTS TO BE DRAWN IN THE FOLLOWING MANNER:
C
C         IOBS(J,K)=1  IF ANY OBJECT CONTAINS THE POINT (NU+1-I,J,K)
C              AND
C         IOBS(J,K)=0  OTHERWISE
C
C  MV -
C    ACTUAL FIRST DIMENSION OF IOBJS ARRAY FROM THE CALLING PROGRAM
C
      DIMENSION ST1(NV,NW,2),IS2(LX,NY),S(4),IOBJS(MV,NW)
      COMMON /TOM1/NSEQ,SS
C
C ***
C *** THE FOLLOWING JUNK IS MACHINE-DEPENDENT.  NBPW IS NUMBER OF
C *** BITS PER WORD, AND MASK IS A SET OF NBPW ONE-BIT MASKS.
C *** MASK(I)=2**(I-1), ETC.
C ***
C
      DATA NBPW/36/
      DIMENSION MASK(36)
      DATA MASK /
     -  12O000000000001,12O000000000002,12O000000000004,
     -  12O000000000010,12O000000000020,12O000000000040,
     -  12O000000000100,12O000000000200,12O000000000400,
     -  12O000000001000,12O000000002000,12O000000004000,
     -  12O000000010000,12O000000020000,12O000000040000,
     -  12O000000100000,12O000000200000,12O000000400000,
     -  12O000001000000,12O000002000000,12O000004000000,
     -  12O000010000000,12O000020000000,12O000040000000,
     -  12O000100000000,12O000200000000,12O000400000000,
     -  12O001000000000,12O002000000000,12O004000000000,
     -  12O010000000000,12O020000000000,12O040000000000,
     -  12O100000000000,12O200000000000,12O400000000000/
      ASSIGN 1110 TO IRET
      NSEQ=0
      SS=0.04
C    *** RX AND RY ARE USED TO MAP PLOTTER COORDINATES INTO THE IMAGE
C    *** PLANE MODEL
      RX = (FLOAT(NX)-1.)/(S(2)-S(1))
      RY = (FLOAT(NY)-1.)/(S(4)-S(3))
C    *** READ THE RELATIVE PLOTTER COORDINATES INTO THE IMAGE PLANE
C    *** MODEL FROM UNIT IU
      READ (IU) ST1
C    *** DX, DY, AND DZ ARE USED TO FIND REQUIRED COORDINATES OF
C    *** NON-LATTICE POINTS
      NVD2=NV/2
      NWD2=NW/2
      DX=(ST1(NV,NWD2,1)-ST1(1,NWD2,1))*.5/(FLOAT(NV)-1.)
      DY=(ST1(1,NWD2,2)-ST1(NV,NWD2,2))*.5/(FLOAT(NV)-1.)
      DZ=(ST1(NVD2,NW,2)-ST1(NVD2,1,2))*.5/(FLOAT(NW)-1.)
C    *** SLOPE IS USED TO DEFORM THE IMAGE PLANE MODEL SO THAT LINES
C    *** OF CONSTANT Y OF THE IMAGE MODEL HAVE THE SAME SLOPE AS LINES
C    *** OF CONSTANT U AND W IN THE PICTURE.  THIS IMPROVES THE
C    *** PICTURE'S APPEARANCE.
C
      SLOPE=DY/DX
C    *** THE FOLLOWING LOOPS THROUGH STATEMENT 130 GENERATE THE .5
C    *** CONTOUR LINES IN 2-SPACE FOR THE ARRAY IOBJS (WHICH CONTAINS
C    *** ONLY ZEROES AND ONES), TESTS THE LINES FOR VISIBILITY, AND
C    *** CALLS A ROUTINE TO PLOT THE VISIBLE LINES
      DO 1120 I=2,NV
         JUMP=IOBJS(I-1,1)*8 + IOBJS(I,1)*4 + 1
         DO 1110 J=2,NW
            X=ST1(I,J,1)
            Y=ST1(I,J,2)
C    *** DECIDE WHICH POSSIBILITY IT IS
            JUMP = (JUMP-1)/4 + IOBJS(I-1,J)*8 + IOBJS(I,J)*4 + 1
            GOTO (1110,1010,1030,1040,1060,1070,1020,1090,1090,1000,
     1            1070,1060,1040,1030,1010,1110),JUMP
1000        ASSIGN 1080 TO IRET
1010        X1=X
            X2=X+DX
            Y1=Y-DZ
            Y2=Y-DY
            GOTO 1100 
1020        ASSIGN 1050 TO IRET
1030        X1=X
            X2=X-DX
            Y1=Y-DZ
            Y2=Y+DY
            GOTO 1100 
1040        X1=X+DX
            X2=X-DX
            Y1=Y-DY
            Y2=Y+DY
            GOTO 1100 
1050        ASSIGN 1110 TO IRET
1060        X1=X+DX
            X2=X
            Y1=Y-DY
            Y2=Y+DZ
            GOTO 1100 
1070        X1=X
            X2=X
            Y1=Y-DZ
            Y2=Y+DZ
            GOTO 1100 
1080        ASSIGN 1110 TO IRET
1090        X1=X-DX
            X2=X
            Y1=Y+DY
            Y2=Y+DZ
C    *** TEST VISIBILITY OF THIS LINE SEGMENT
1100        CONTINUE 
            IX=(X1-S(1))*RX
            IY=MOD(IFIX((Y1-S(3))*RY-SLOPE*FLOAT(IX))+NY,NY)+1
            IBIT=MOD(IX,NBPW)+1
            IX=IX/NBPW+1
            IV=IAND(IS2(IX,IY),MASK(IBIT))
            IF (IV .NE. 0) THEN
C              OUTPUT 'IV NE 0'
               GOTO IRET,(1050,1080,1110)
            ENDIF 
            IX=(X2-S(1))*RX
            IY=MOD(IFIX((Y2-S(3))*RY-SLOPE*FLOAT(IX))+NY,NY)+1
            IBIT=MOD(IX,NBPW)+1
            IX=IX/NBPW+1
            IV=IAND(IS2(IX,IY),MASK(IBIT))
            IF (IV .NE. 0) THEN
C         OUTPUT 'IV NE 0 2'
               GOTO IRET,(1050,1080,1110)
            ENDIF 
C          WRITE (100,1000) X1,Y1,3
C          WRITE (100,1000) X2,Y2,2
C1000      FORMAT (1X,F7.2,3X,F7.2,3X,I)
            CALL SDLINE (X1,Y1,X2,Y2)
            GOTO IRET,(1050,1080,1110)
1110     CONTINUE 
1120  CONTINUE 
      CALL PLOTOUT
C
C    *** CODE IN THIS SECTION CREATES A SILLOUETTE APPROXIMATION BY
C    *** MARKING THE OBJECT PLANE WHERE THE OBJECT OCCURS
      DO 1140 I=1,NV
         DO 1130 J=1,NW
            IF (IOBJS(I,J) .EQ.0)GOTO 1130 
            IX = (ST1(I,J,1)-S(1))*RX+0.5
            TWK=SLOPE*FLOAT(IX)-0.5
            IY=MOD(IFIX((ST1(I,J,2)-S(3))*RY-TWK)+NY,NY)+1
            IBIT=MOD(IX,NBPW)+1
            IX=IX/NBPW+1
            IS2(IX,IY)=IOR(IS2(IX,IY),MASK(IBIT))
1130     CONTINUE 
1140  CONTINUE 
      RETURN
      END 
      SUBROUTINE SDLINE (X1,Y1,X2,Y2)
      COMMON/TOM1/NSEQ,SS
      COMMON/TOM/XX,YY
      DIMENSION XX(200,2),YY(200,2)
      NSEQ = NSEQ + 1
      XX(NSEQ,1)=X1
      XX(NSEQ,2)=X2
      YY(NSEQ,1)=Y1
      YY(NSEQ,2)=Y2
      IF (NSEQ .GE. 200) CALL PLOTOUT
      RETURN
      END 
      SUBROUTINE PLOTOUT
      COMMON/TOM1/NSEQ,SS
      COMMON/TOM/XX,YY
      DIMENSION XX(200,2),YY(200,2)
1000  CONTINUE 
      IF (NSEQ .LE. 0) RETURN
      IF (NSEQ .EQ. 1) THEN
         WRITE (100,9000) XX(1,1),YY(1,1),3
         WRITE (100,9000) XX(1,2),YY(1,2),2
         NSEQ = NSEQ - 1
         GOTO 1000 
      ENDIF 
      NSEQ2 = 1
1010  CONTINUE 
      DO 1060 I=NSEQ2+1,NSEQ
         IF ((ABS(XX(I,1)-XX(NSEQ2,2)).LE.SS).AND.(ABS(YY(I,1)-YY(NSEQ2,
     1      2)).LE.SS))GOTO 1030 
         IF ((ABS(XX(I,2)-XX(NSEQ2,2)).LE.SS).AND.(ABS(YY(I,2)-YY(NSEQ2,
     1      2)).LE.SS))GOTO 1020 
         GOTO 1060 
1020     Y1=YY(I,2)
         X1=XX(I,2)
         Y2=YY(I,1)
         X2=XX(I,1)
         GOTO 1040 
1030     X1=XX(I,1)
         X2=XX(I,2)
         Y1=YY(I,1)
         Y2=YY(I,2)
1040     CONTINUE 
         DO 1050 J=I,NSEQ2+1,-1
            XX(J,1)=XX(J-1,1)
            XX(J,2)=XX(J-1,2)
            YY(J,1)=YY(J-1,1)
            YY(J,2)=YY(J-1,2)
1050     CONTINUE 
         NSEQ2 = NSEQ2 + 1
         XX(NSEQ2,1)=X1
         XX(NSEQ2,2)=X2
         YY(NSEQ2,1)=Y1
         YY(NSEQ2,2)=Y2
         GOTO 1010 
1060  CONTINUE 
      DO 1100 I=NSEQ2+1,NSEQ
         IF ((ABS(XX(1,1)-XX(I,1)).LE.SS).AND.(ABS(YY(1,1)-YY(I,1)).LE.
     1      SS))GOTO 1070 
         IF ((ABS(XX(1,1)-XX(I,2)).LE.SS) .AND.(ABS(YY(1,1)-YY(I,2)).LE.
     1      SS))GOTO 1070 
         GOTO 1100 
1070     CONTINUE 
         DO 1080 J=1,NSEQ
            X1=XX(J,1)
            Y1=YY(J,1)
            XX(J,1)=XX(J,2)
            YY(J,1)=YY(J,2)
            XX(J,2)=X1
            YY(J,2)=Y1
1080     CONTINUE 
         DO 1090 J=1,INT(NSEQ2/2)
            ITEMP = NSEQ2+1-J
            X1=XX(ITEMP,1)
            X2=XX(ITEMP,2)
            Y1=YY(ITEMP,1)
            Y2=YY(ITEMP,2)
            XX(ITEMP,1) = XX(J,1)
            XX(ITEMP,2) = XX(J,2)
            YY(ITEMP,1) = YY(J,1)
            YY(ITEMP,2) = YY(J,2)
            XX(J,1) = X1
            XX(J,2) = X2
            YY(J,1) = Y1
            YY(J,2) = Y2
1090     CONTINUE 
         GOTO 1010 
1100  CONTINUE 
1110  CONTINUE 
      WRITE (100,9000) XX(1,1),YY(1,1),3
      DO 1120 I=1,NSEQ2
         WRITE (100,9000) XX(I,2),YY(I,2),2
1120  CONTINUE 
      DO 1130 I=NSEQ2+1,NSEQ
         ITEMP=I-NSEQ2
         XX(ITEMP,1) = XX(I,1)
         XX(ITEMP,2) = XX(I,2)
         YY(ITEMP,1) = YY(I,1)
         YY(ITEMP,2) = YY(I,2)
1130  CONTINUE 
      NSEQ = NSEQ-NSEQ2
      GOTO 1000 
9000    FORMAT (1X,2(F8.3,2X),I)
      END 
