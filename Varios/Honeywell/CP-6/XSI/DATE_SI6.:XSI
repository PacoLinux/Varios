/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1990    */
/*T*                                                         */
/*T***********************************************************/
DATE:   PROC MAIN ALTRET;
 
/*M* DATE - CREATE COMMAND VARIABLE FOR DATE AND DAY */
/*X*           DMR,PLM=5,IND=5,CTI=5,SDI=5,CSI=0,ECI=0       */
 
/**/
%INCLUDE CP_6;
%INCLUDE XU_MACRO_C;
/**/
DCL X$PARSE ENTRY(1) ALTRET;
DCL FISCAL ENTRY (2) ALTRET;
/**/
DCL DAYVAR$ PTR STATIC INIT(ADDR(NIL));
DCL DATEVAR$ PTR STATIC INIT(ADDR(NIL));
DCL CUR_UTS UBIN STATIC INIT(0);
DCL PRINTIT BIT(1) ALIGNED;
DCL UDAY_OFF BIT(1) UNAL;
DCL SDAY_OFF BIT(1) UNAL;
DCL DAYOFF_INCR BIT(1) UNAL;
DCL FW BIT (1) UNAL;
DCL OFFSET SBIN;
DCL I SBIN;
DCL 1 FWEEK,
         2 YEAR CHAR (2) UNAL,
         2 DAY CHAR (3) UNAL,
         2 WEEK CHAR (2) UNAL,
         2 DATE CHAR (3) UNAL,
         2 QUARTER CHAR (1) UNAL,
         2 MONTH CHAR (2) UNAL;
DCL FIDATE CHAR (6);
DCL 1 DT STATIC,
         2 L UBIN BYTE UNAL INIT(0),
         2 C CHAR(10) INIT(' ');
DCL 1 DAY STATIC,
         2 L UBIN BYTE UNAL INIT(0),
         2 C CHAR(5) INIT(' ');
DCL BUFFER CHAR(30) STATIC;
/**/
DCL 1 TC BASED CALIGNED,
         2 L UBIN BYTE UNAL,
         2 C CHAR(TC.L);
/**/
DCL DSIZE(0:3) UBIN BYTE CONSTANT INIT(0,3,5,3);
DCL SIZE(0:3) UBIN BYTE CONSTANT INIT(0,10,6,8);
%FPT_TIME (DEST=UTS,TSTAMP=CUR_UTS);
%FPT_TIME (FPTN=FPT_DATE,DATE=DT.C,DAY=DAY.C,TSTAMP=CUR_UTS,DEST=LOCAL,SOURCE=UTS);
%FPT_TIME (FPTN=USER_TIME,DATE=DAYOFFDATE.DATE,SOURCE=UTS,DEST=LOCAL,TSTAMP=CUR_UTS,DAY=UT_DAY);
DCL M$LO DCB;
%FPT_WRITE (DCB=M$LO,BUF=BUFFER);
%FPT_CMDVAR (FUN=STORE);
/**/
DCL DATE_CMD SBIN SYMREF;
%P_PCB (R=DATE_CMD,W=PWORK,WSZ=200);
DCL PWORK(0:199) SBIN STATIC;
%PARSE$OUT (NAME=TOP,STCLASS="BASED(P_PCB.OUT$)");
DCL OUT$ PTR;
%PARSE$OUT (NAME=OUT,STCLASS="BASED(OUT$)");
%PARSE$SYM (NAME=SYM,STCLASS="BASED(OUT$)");
/**/
DCL B$JIT$ PTR SYMREF;
%INCLUDE B$JIT;
/**/
%FPT_OPEN (FPTN=USER_OPEN,
  DCB = M$UDATE,
  ASN = FILE,
  FUN = IN,
  NAME = UDATE_NAME);
%FPT_READ (FPTN=R_UDATE,
  DCB = M$UDATE,
  BUF = INFO,
  KEY = DAYOFFDATE,
  KEYS = YES,
  KEYR = NO);
DCL 1 DAYOFFDATE STATIC,
         2 LEN UBIN BYTE INIT (8) UNAL,
         2 DATE CHAR (8) UNAL;
DCL INFO CHAR (60) STATIC;
DCL M$UDATE DCB;
%VLP_NAME (FPTN=UDATE_NAME,NAME=':DATE');
%VLP_ACCT (FPTN=SDATE_ACCT,ACCT='SUPPORT');
/**/
%FPT_OPEN (FPTN=O_SDATE,
  DCB = M$SDATE,
  ASN = FILE,
  FUN = IN,
  ACCT = SDATE_ACCT,
  NAME = UDATE_NAME);
%FPT_READ (FPTN=R_SDATE,
  DCB = M$SDATE,
  BUF = INFO,
  KEY = DAYOFFDATE,
  KEYS = YES,
  KEYR = NO);
%FPT_CLOSE (FPTN = DEFAULT_CLOSE,
  DCB = M$SDATE,
  DISP = SAVE);
DCL M$SDATE DCB;
/**/
%INCLUDE XUD_UTS_M;
%XUD$UTS_ENTRIES;
%XUD_UTS_EQU;
DCL TEMP_UTS  UBIN;
DCL D UBIN;
DCL UT_DAY CHAR (3) STATIC;
DCL UWEEK (0:6) CHAR (2) STATIC;
DCL UWEEK_ALL REDEF UWEEK CHAR (14);
DCL SWEEK (0:6) CHAR (2) STATIC;
DCL SWEEK_ALL REDEF SWEEK CHAR (14);
%EJECT;
     FW = '0'B;
     CALL M$TIME(FPT_TIME);
     IF B$JIT.CCDISP>=B$JIT.CCARS THEN GOTO NO_OPTS;
     P_PCB.TEXT$=PINCRC(ADDR(B$JIT.CCBUF),B$JIT.CCDISP+1);
     P_PCB.NCHARS=B$JIT.CCARS-(B$JIT.CCDISP+1);
     PRINTIT='0'B;
     UDAY_OFF='0'B;
     SDAY_OFF='0'B;
     DAYOFF_INCR = '1'B;
     OFFSET=0;
     CALL X$PARSE(P_PCB) ALTRET(OOPS);
     DO I=0 TO TOP.NSUBLKS-1;
          OUT$=TOP.SUBLK$(I);
          DO CASE(OUT.CODE);
          CASE(1,2,3,4,5,6,7);
             CALL XUD$UTS_DIFF_SEC(TEMP_UTS,CUR_UTS,0);
             TEMP_UTS = TEMP_UTS / 86400;
             OFFSET = MOD(TEMP_UTS,7) + 1;
             TEMP_UTS = MOD(7+OUT.CODE-OFFSET,7);
             CALL XUD$UTS_ADJ_25TH(CUR_UTS,CUR_UTS,TEMP_UTS*%UTS_25TH_DAY#);
          CASE(8,9);
             CALL CHARBIN(OFFSET,OUT$->SYM.TEXT);
             IF OUT.CODE=8 THEN
                  CALL XUD$UTS_ADJ_25TH(CUR_UTS,CUR_UTS,OFFSET*%UTS_25TH_DAY#);
             ELSE
                  CALL XUD$UTS_ADJ_25TH(CUR_UTS,CUR_UTS,-(OFFSET*%UTS_25TH_DAY#));
          CASE(10);
             DAYVAR$=OUT.SUBLK$(0)->SYM.TEXTC$;
          CASE(11);
             DATEVAR$=OUT.SUBLK$(0)->SYM.TEXTC$;
          CASE(18);
             PRINTIT='1'B;
          CASE(19);
             CALL M$OPEN (USER_OPEN) WHENRETURN
             DO;
                  UDAY_OFF = '1'B;
                END;
          CASE (21);
             CALL M$OPEN (O_SDATE) WHENRETURN
             DO;
                  SDAY_OFF = '1'B;
                END;
             CALL M$OPEN (USER_OPEN) WHENRETURN
             DO;
                  UDAY_OFF = '1'B;
                END;
          CASE (20);
             CALL M$OPEN (O_SDATE) WHENRETURN
             DO;
                  SDAY_OFF = '1'B;
                END;
          CASE (22);                    /* I/ncrement suboption */
             DAYOFF_INCR = '1'B;
          CASE (23);                    /* D/ecrement suboption */
             DAYOFF_INCR = '0'B;
          CASE (30);
             FPT_DATE.V.DEST# = 2;
             FW = '1'B;
          CASE(ELSE);
             FPT_DATE.V.DEST#=OUT.CODE-11;
          END;
        END;
     IF UDAY_OFF OR SDAY_OFF
     THEN
     DO;
          DO WHILE ('0'B);
NEXTDAY:       ;
               IF DAYOFF_INCR THEN      /* Increment by one day */
                    CALL XUD$UTS_ADJ_25TH(CUR_UTS,CUR_UTS,%UTS_25TH_DAY#);
               ELSE                     /* Decrement by one day */
                    CALL XUD$UTS_ADJ_25TH(CUR_UTS,CUR_UTS,-%UTS_25TH_DAY#);
             END;
          DAYOFFDATE.DATE = 'DOF_WEEK';
          UWEEK_ALL = ' ';
          SWEEK_ALL = ' ';
 
          IF SDAY_OFF
          THEN
          DO;
               R_SDATE.BUF_ = VECTOR (SWEEK_ALL);
               CALL M$READ (R_SDATE) WHENALTRETURN
               DO;
                                        /* NOTHING                            */
                  END;
             END;
          IF UDAY_OFF
          THEN
          DO;
               R_UDATE.BUF_ = VECTOR (UWEEK_ALL);
               CALL M$READ (R_UDATE) WHENALTRETURN
               DO;
                                        /* NOTHING                            */
                  END;
             END;
          INFO = ' ';
          R_UDATE.BUF_ = VECTOR (INFO);
          R_SDATE.BUF_ = VECTOR (INFO);
 
          CALL M$TIME (USER_TIME);
          DO SELECT (UT_DAY);
               SELECT ('MON');
               D = 1;
               SELECT ('TUE');
               D = 2;
               SELECT ('WED');
               D = 3;
               SELECT ('THU');
               D = 4;
               SELECT ('FRI');
               D = 5;
               SELECT ('SAT');
               D = 6;
               SELECT ('SUN');
               D = 0;
             END;
 
          IF UDAY_OFF
          THEN
          DO;
               CALL M$READ (R_UDATE) WHENALTRETURN
               DO;
                                        /* Nothing                            */
                  END;
             END;
 
          DO SELECT (SUBSTR(INFO,0,1));
               SELECT ('O');
               GOTO NEXTDAY;
               SELECT (' ');
               DO SELECT (UWEEK(D));
                    SELECT ('O');
                    GOTO NEXTDAY;
                    SELECT ('W');
                    IF SDAY_OFF
                    THEN
                    DO;
                         CALL M$READ (R_SDATE) WHENRETURN
                         DO;
                              GOTO NEXTDAY;
                            END;
                       END;
                    SELECT (' ');
                    IF SDAY_OFF
                    THEN
                    DO;
                         CALL M$READ (R_SDATE) WHENRETURN
                         DO;
                              GOTO NEXTDAY;
                            END;
                         WHENALTRETURN
                         DO;
                              IF SWEEK (D) = 'O'
                              THEN
                                   GOTO NEXTDAY;
                            END;
                       END;
                  END;
             END;
        END;
NO_OPTS:
     CALL M$TIME(FPT_DATE);
     DT.L=SIZE(FPT_DATE.V.DEST#);
     DAY.L=DSIZE(FPT_DATE.V.DEST#);
     IF FW
     THEN
     DO;
          FIDATE = DT.C;
          CALL FISCAL (FWEEK,FIDATE);
          DT.C = FWEEK.DATE;
          DT.L = 3;
          DAY.C = FWEEK.DAY;
          DAY.L = 3;
        END;
     IF (DAYVAR$=ADDR(NIL) AND DATEVAR$=ADDR(NIL)) OR PRINTIT THEN DO;
          CALL CONCAT(BUFFER,
               ADDR(DAY)->TC.C,
               ' ',
               ADDR(DT)->TC.C);
          CALL M$WRITE(FPT_WRITE);
        END;
     IF DAYVAR$~=ADDR(NIL) THEN DO;
          FPT_CMDVAR.NAME_=VECTOR(DAYVAR$->TC);
          FPT_CMDVAR.VALUE_=VECTOR(DAY);
          CALL M$CMDVAR(FPT_CMDVAR);
        END;
     IF DATEVAR$~=ADDR(NIL) THEN DO;
          FPT_CMDVAR.NAME_=VECTOR(DATEVAR$->TC);
          FPT_CMDVAR.VALUE_=VECTOR(DT);
          CALL M$CMDVAR(FPT_CMDVAR);
        END;
     RETURN;
OOPS: ALTRETURN;
END DATE;
%EOD;
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1990    */
/*T*                                                         */
/*T***********************************************************/
FISCAL: PROC (FISCALT,DATET) ALTRET;
 
/*M*  FISCAL - Calculate fiscal dates                        */
/*X*       DMR,PLM=5,IND=5,CTI=5,SDI=5,CSI=0,ECI=0           */
 
%INCLUDE CP_6;
 
DCL JUL_BUF UBIN;
DCL WEEK_BUF UBIN;
DCL TREM UBIN;
DCL YY UBIN;
DCL YY_PLUS UBIN;
DCL T_DAY SBIN;
DCL YR_TEMP SBIN;
 
DCL JUL_YEAR (0:41) UBIN HALF CONSTANT INIT (
    0,7,373,738,1103,1468,1834,2199,2564,2929,3295,3660,4025,4390,
    4756,5121,5486,5851,6217,6582,6947,7312,7678,8043,8408,8773,9139,
    9504,9869,10234,10600,10965,11330,11695,12061,12426,12791,13156,
    13522,13887,14252,14617);
 
DCL WEEK_YEAR (0:41) UBIN HALF CONSTANT INIT (
    0,0,52,105,157,209,261,313,365,418,470,522,574,626,679,731,783,
    835,887,939,992,1044,1096,1148,1200,1253,1305,1357,1409,1461,1513,
    1566,1618,1670,1722,1744,1827,1879,1931,1983,2035,2087);
 
DCL JUL_OFFSET (0:41) UBIN HALF CONSTANT INIT (
    0,4,6,0,1,2,4,5,6,0,2,3,4,5,0,1,2,3,5,6,0,1,3,4,5,6,1,2,3,4,6,0,
    1,2,4,5,6,0,2,3,4,5);
 
DCL MONTH_COUNT (0:12) UBIN HALF CONSTANT INIT(
    0,0,31,59,90,120,151,181,212,243,273,304,334);
 
DCL FISCAL_MONTH (0:53) UBIN HALF CONSTANT INIT (
    0,1,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,7,
    8,8,8,8,9,9,9,9,10,10,10,10,10,11,11,11,11,12,12,12,12,12);
 
DCL FISCAL_QUARTER (0:53) UBIN HALF CONSTANT INIT (
    0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,
    3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4);
 
DCL 1 FISCALT,
         2 YEAR CHAR (2) UNAL,
         2 DAY CHAR (3) UNAL,
         2 WEEK CHAR (2) UNAL,
         2 DATE CHAR (3) UNAL,
         2 QUARTER CHAR (1) UNAL,
         2 MONTH CHAR (2) UNAL;
 
DCL 1 DATET,
         2 YR CHAR (2) UNAL,
         2 MM CHAR (2) UNAL,
         2 DD CHAR (2) UNAL;
 
DCL 1 FISCALC,
         2 YEAR UBIN UNAL,
         2 DAY UBIN UNAL,
         2 WEEK UBIN UNAL,
         2 QUARTER UBIN UNAL,
         2 MONTH UBIN UNAL;
 
DCL 1 DATEC,
         2 YR UBIN UNAL,
         2 MM UBIN UNAL,
         2 DD UBIN UNAL;
 
%EJECT;
     CALL CHARBIN (DATEC.YR,DATET.YR);
     CALL CHARBIN (DATEC.MM,DATET.MM);
     CALL CHARBIN (DATEC.DD,DATET.DD);
 
     YR_TEMP = DATEC.YR;
     IF YR_TEMP < 21 THEN YR_TEMP = YR_TEMP + 100;
     YY = YR_TEMP - 79;
     YY_PLUS=0;
     T_DAY=0;
     YY_PLUS=YY_PLUS + 1 + YY;
     JUL_BUF=JUL_YEAR(YY);
     TREM=MOD (DATEC.YR,4);
     IF TREM=0 AND DATEC.MM > 2
     THEN
     DO;
          JUL_BUF=JUL_BUF+MONTH_COUNT(DATEC.MM)+DATEC.DD+1;
          T_DAY=T_DAY+(MONTH_COUNT(DATEC.MM)+DATEC.DD-2+JUL_OFFSET(YY));
        END;
     ELSE
     DO;
          JUL_BUF=JUL_BUF+MONTH_COUNT(DATEC.MM)+DATEC.DD;
          T_DAY=T_DAY+(MONTH_COUNT(DATEC.MM)+DATEC.DD-3+JUL_OFFSET(YY));
        END;
 
     WEEK_BUF=JUL_BUF/7;
     WEEK_BUF=WEEK_BUF-WEEK_YEAR(YY);
 
     IF WEEK_BUF>52 AND ((WEEK_BUF+WEEK_YEAR(YY))~=WEEK_YEAR(YY_PLUS))
     THEN
     DO;
          WEEK_BUF=WEEK_BUF+WEEK_YEAR(YY);
          YY=YY + 1;
          WEEK_BUF=WEEK_BUF-WEEK_YEAR(YY);
          YY=YY-1;
          YR_TEMP=YR_TEMP +1;
        END;
 
     IF WEEK_BUF=0
     THEN
     DO;
          WEEK_BUF=WEEK_BUF+WEEK_YEAR(YY);
          YY=YY-1;
          WEEK_BUF=WEEK_BUF-WEEK_YEAR(YY);
          YR_TEMP=YR_TEMP-1;
          YY_PLUS=YY_PLUS-1;
          TREM=MOD (YR_TEMP,4);
          IF TREM=0
          THEN
          DO;
               T_DAY=T_DAY+363+JUL_OFFSET(YY);
               T_DAY=T_DAY-(JUL_OFFSET(YY_PLUS)-3);
             END;
          ELSE
          DO;
               T_DAY=T_DAY+362+JUL_OFFSET(YY);
               T_DAY=T_DAY-(JUL_OFFSET(YY_PLUS)-3);
             END;
        END;
 
     FISCALC.WEEK = WEEK_BUF;
     FISCALC.MONTH=FISCAL_MONTH(WEEK_BUF);
     FISCALC.QUARTER=FISCAL_QUARTER(WEEK_BUF);
 
     IF YR_TEMP > 99 THEN YR_TEMP = YR_TEMP - 100;
     FISCALC.YEAR = YR_TEMP;
 
     IF T_DAY > 364 AND FISCALC.WEEK ~= 53
     THEN
          T_DAY=T_DAY-364;
 
     FISCALC.DAY=T_DAY;
 
     CALL BINCHAR (FISCALT.YEAR,FISCALC.YEAR);
     CALL BINCHAR (FISCALT.DAY,FISCALC.DAY);
     CALL BINCHAR (FISCALT.WEEK,FISCALC.WEEK);
     CALL BINCHAR (FISCALT.QUARTER,FISCALC.QUARTER);
     CALL BINCHAR (FISCALT.MONTH,FISCALC.MONTH);
     CALL CONCAT (FISCALT.DATE,SUBSTR(FISCALT.YEAR,1,1),
          FISCALT.WEEK);
 
     RETURN;
 
END FISCAL;
