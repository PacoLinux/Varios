/*M*  PRELINK_PACKER_M  Preprocessor directives for <packer>   */ 
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
 
%SET LEVEL = 0; 
 
%MACRO $$NIL (NAME=$$NIL, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM PTR ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM PTR ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
%MACRO $$USER_PROCEDURE (NAME=$$USER_PROCEDURE, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM EPTR ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM EPTR ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
%MACRO $EXTERNAL_NAME (NAME=$EXTERNAL_NAME, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM PTR ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM PTR ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
%MACRO $EXTERNAL_SYMBOL (NAME=$EXTERNAL_SYMBOL, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM PTR ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM PTR ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
%MACRO $LOOKUP_ENTRY (NAME=$LOOKUP_ENTRY, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM PTR ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM PTR ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
%MACRO EXTERNAL_NAME (NAME=EXTERNAL_NAME, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
 %LSET STRUCTNAME = TEXTCHAR(NAME); 
 %LSET STCL = SUBSTR (CONCAT (TEXTCHAR (STCLASS), '   '), 0, 3); 
 %LSET BASED_DECL = STCL ~= 'AUT' & STCL ~= 'STA' & STCL ~= 'CON' & STCL ~= 'EXT'; 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
 %LSET STRUCTNAME = CONCAT (STRUCTNAME, '.', TEXTCHAR(NAME)); 
%ENDIF; 
 
      %(LEVEL+1) NAME_POINTER SBIN WORD, 
      %(LEVEL+1) DEFINER$$ EPTR, 
 
%IF (LAST) | (LEVEL = 1); 
      %P_NAME (NAME=P_NAME, LAST=YES); 
%ELSE; 
      %P_NAME (NAME=P_NAME); 
%ENDIF; 
 
%MEND; 
 
%MACRO EXTERNAL_NAME#PSET (NAME=EXTERNAL_NAME#PSET, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
 %LSET ENDCHAR = CHARTEXT(';'); 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
%ENDIF; 
 
      %(LEVEL+1) KEY$ PTR, 
      %(LEVEL+1) BLINK SBIN HALF HALIGNED, 
      %(LEVEL+1) FLINK UBIN HALF HALIGNED %ENDCHAR 
 
%MEND; 
 
%MACRO EXTERNAL_NAME_OR_NIL (NAME=EXTERNAL_NAME_OR_NIL, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM PTR ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM PTR ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
%MACRO EXTERNAL_NAME_PSET (NAME=EXTERNAL_NAME_PSET, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
%ENDIF; 
 
      %(LEVEL+1) M UBIN HALF HALIGNED, 
      %(LEVEL+1) M_PRIME UBIN HALF HALIGNED, 
      %(LEVEL+1) N UBIN HALF HALIGNED, 
      %(LEVEL+1) LOWEST_USED UBIN HALF HALIGNED, 
      %(LEVEL+1) IS_POINTER_SET BIT (1), 
      %(LEVEL+1) HASHER$$ EPTR, 
      %(LEVEL+1) COMPARER$$ EPTR, 
 
%IF (LAST) | (LEVEL = 1); 
      %EXTERNAL_NAME#PSET (NAME=BUCKETS, DIM="(0:0)", LAST=YES); 
%ELSE; 
      %EXTERNAL_NAME#PSET (NAME=BUCKETS, DIM="(0:0)"); 
%ENDIF; 
 
%MEND; 
 
%MACRO EXTERNAL_SYMBOL (NAME=EXTERNAL_SYMBOL, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
 %LSET ENDCHAR = CHARTEXT(';'); 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
%ENDIF; 
 
      %(LEVEL+1) NAME$ PTR, 
      %(LEVEL+1) INDEX_INTO_TYPE SBIN WORD %ENDCHAR 
 
%MEND; 
 
%MACRO EXTERNAL_SYMBOL#PSET (NAME=EXTERNAL_SYMBOL#PSET, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
 %LSET ENDCHAR = CHARTEXT(';'); 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
%ENDIF; 
 
      %(LEVEL+1) KEY$ PTR, 
      %(LEVEL+1) BLINK SBIN HALF HALIGNED, 
      %(LEVEL+1) FLINK UBIN HALF HALIGNED %ENDCHAR 
 
%MEND; 
 
%MACRO EXTERNAL_SYMBOL_PSET (NAME=EXTERNAL_SYMBOL_PSET, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
%ENDIF; 
 
      %(LEVEL+1) M UBIN HALF HALIGNED, 
      %(LEVEL+1) M_PRIME UBIN HALF HALIGNED, 
      %(LEVEL+1) N UBIN HALF HALIGNED, 
      %(LEVEL+1) LOWEST_USED UBIN HALF HALIGNED, 
      %(LEVEL+1) IS_POINTER_SET BIT (1), 
      %(LEVEL+1) HASHER$$ EPTR, 
      %(LEVEL+1) COMPARER$$ EPTR, 
 
%IF (LAST) | (LEVEL = 1); 
      %EXTERNAL_SYMBOL#PSET (NAME=BUCKETS, DIM="(0:0)", LAST=YES); 
%ELSE; 
      %EXTERNAL_SYMBOL#PSET (NAME=BUCKETS, DIM="(0:0)"); 
%ENDIF; 
 
%MEND; 
 
%MACRO LOOKUP_ENTRY (NAME=LOOKUP_ENTRY, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
 %LSET ENDCHAR = CHARTEXT(';'); 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
%ENDIF; 
 
      %(LEVEL+1) LOOKUP_INDEX SBIN WORD, 
      %(LEVEL+1) ENTRY$ PTR %ENDCHAR 
 
%MEND; 
 
%MACRO LOOKUP_ENTRY#PSET (NAME=LOOKUP_ENTRY#PSET, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
 %LSET ENDCHAR = CHARTEXT(';'); 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
%ENDIF; 
 
      %(LEVEL+1) KEY$ PTR, 
      %(LEVEL+1) BLINK SBIN HALF HALIGNED, 
      %(LEVEL+1) FLINK UBIN HALF HALIGNED %ENDCHAR 
 
%MEND; 
 
%MACRO LOOKUP_ENTRY_PSET (NAME=LOOKUP_ENTRY_PSET, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
%ENDIF; 
 
      %(LEVEL+1) M UBIN HALF HALIGNED, 
      %(LEVEL+1) M_PRIME UBIN HALF HALIGNED, 
      %(LEVEL+1) N UBIN HALF HALIGNED, 
      %(LEVEL+1) LOWEST_USED UBIN HALF HALIGNED, 
      %(LEVEL+1) IS_POINTER_SET BIT (1), 
      %(LEVEL+1) HASHER$$ EPTR, 
      %(LEVEL+1) COMPARER$$ EPTR, 
 
%IF (LAST) | (LEVEL = 1); 
      %LOOKUP_ENTRY#PSET (NAME=BUCKETS, DIM="(0:0)", LAST=YES); 
%ELSE; 
      %LOOKUP_ENTRY#PSET (NAME=BUCKETS, DIM="(0:0)"); 
%ENDIF; 
 
%MEND; 
 
%MACRO LOOKUP_TABLE (NAME=LOOKUP_TABLE, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
 %LSET ENDCHAR = CHARTEXT(';'); 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
%ENDIF; 
 
      %(LEVEL+1) ENTRIES$ PTR %ENDCHAR 
 
%MEND; 
 
%MACRO NIL (NAME=NIL, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM PTR ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM PTR ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
%MACRO OU (NAME=OU, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
 %LSET ENDCHAR = CHARTEXT(';'); 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
%ENDIF; 
 
      %LOOKUP_TABLE (NAME=DEFINED_NAMES); 
      %LOOKUP_TABLE (NAME=REFERENCED_NAMES); 
      %LOOKUP_TABLE (NAME=SYMREFS); 
      %LOOKUP_TABLE (NAME=ENTREFS); 
      %LOOKUP_TABLE (NAME=SEGDEFS); 
      %LOOKUP_TABLE (NAME=SEGREFS); 
      %(LEVEL+1) SECTION_COUNT SBIN WORD, 
      %(LEVEL+1) SECTIONS$(0:511) PTR %ENDCHAR 
 
%MEND; 
 
%MACRO PACKIT (NAME=PACKIT, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
 %LSET ENDCHAR = CHARTEXT(';'); 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
%ENDIF; 
 
      %(LEVEL+1) SECTION_COUNT SBIN WORD, 
      %(LEVEL+1) SECTIONS$(0:511) PTR, 
      %(LEVEL+1) DEFINED_NAMES$ PTR, 
      %(LEVEL+1) REFERENCED_NAMES$ PTR, 
      %(LEVEL+1) SYMREFS$ PTR, 
      %(LEVEL+1) ENTREFS$ PTR, 
      %(LEVEL+1) SEGDEFS$ PTR, 
      %(LEVEL+1) SEGREFS$ PTR, 
      %(LEVEL+1) SEVERITY_LEVEL SBIN WORD, 
      %(LEVEL+1) CURRENT_OU$ PTR %ENDCHAR 
 
%MEND; 
 
%MACRO P_NAME (NAME=P_NAME, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=HALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
 %LSET ENDCHAR = CHARTEXT(';'); 
 %LSET STRUCTNAME = TEXTCHAR(NAME); 
 %LSET STCL = SUBSTR (CONCAT (TEXTCHAR (STCLASS), '   '), 0, 3); 
 %LSET BASED_DECL = STCL ~= 'AUT' & STCL ~= 'STA' & STCL ~= 'CON' & STCL ~= 'EXT'; 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
 %LSET STRUCTNAME = CONCAT (STRUCTNAME, '.', TEXTCHAR(NAME)); 
%ENDIF; 
 
      %(LEVEL+1) COUNT UBIN HALF HALIGNED, 
 %IF BASED_DECL; 
      %(LEVEL+1) TEXT CHAR (%CHARTEXT(STRUCTNAME).COUNT) %ENDCHAR 
 %ELSE; 
      %(LEVEL+1) TEXT CHAR (511) %ENDCHAR 
 %ENDIF; 
 
%MEND; 
 
%MACRO SECTION (NAME=SECTION, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
 DCL 1 NAME DIM STCLASS ALIGNMENT, 
 %LSET ENDCHAR = CHARTEXT(';'); 
%ELSE; 
 %(LEVEL) NAME DIM ALIGNMENT, 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
%ENDIF; 
 
      %(LEVEL+1) NAME_POINTER SBIN WORD, 
      %(LEVEL+1) SEGMENT_NAME_POINTER SBIN WORD, 
      %(LEVEL+1) NUMBER SBIN WORD, 
      %(LEVEL+1) SIZE SBIN WORD, 
      %(LEVEL+1) HIGHEST_OFFSET_INITIALIZED SBIN WORD, 
      %(LEVEL+1) CONTAINED_IN$ PTR, 
      %(LEVEL+1) CONTAINED_AT SBIN WORD, 
      %(LEVEL+1) TYPE# UBIN WORD, 
      %(LEVEL+1) ALIGNMENT# UBIN WORD, 
      %(LEVEL+1) INIT_TO_ZERO BIT (1) %ENDCHAR 
 
%MEND; 
 
%MACRO SECTION_OR_NIL (NAME=SECTION_OR_NIL, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM PTR ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM PTR ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
%MACRO SECT_ALIGNMENT (NAME=SECT_ALIGNMENT, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM UBIN WORD ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM UBIN WORD ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
%MACRO SECT_TYPE (NAME=SECT_TYPE, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM UBIN WORD ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM UBIN WORD ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
%MACRO SUBROUTINE_ID (NAME=SUBROUTINE_ID, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM EPTR ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM EPTR ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
%MACRO WHATEVER (NAME=WHATEVER, 
 STCLASS(PARAM=" ",ANY)=BASED, DIM=" ", ALIGNMENT=ALIGNED, 
 LEV=AUTO, LAST(YES='1'B, NO='0'B)='0'B); 
 
%IF TEXTCHAR(LEV) = 'AUTO'; 
   %LSET LEVEL = LEVEL + 1; 
%ELSE; 
   %LSET LEVEL = LEV; 
%ENDIF; 
 
%IF LEVEL = 1; 
DCL 1 NAME DIM PTR ALIGNMENT STCLASS; 
%ELSE; 
 %IF LAST; 
  %LSET ENDCHAR = CHARTEXT(';'); 
 %ELSE; 
  %LSET ENDCHAR = CHARTEXT(','); 
 %ENDIF; 
      %(LEVEL) NAME DIM PTR ALIGNMENT %ENDCHAR 
%ENDIF; 
 
%MEND; 
 
