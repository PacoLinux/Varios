.*M*
HELP file for: TERN.X
.*T*
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
.*X*                                             
FYI, this HELP file has been specially prepared to run through TUNA.X (LEN=79)
prior to running through HERMAN.  This action will guarantee that the lines of
text in it will fill a screen as much as possible, and that more lines will end
up per screen.
.*A*
TERN provides a way to send an arbitrary stream of characters to a ASYNC
connected comgroup device, and record data received in response.  It can
simulate an online terminal user, symbiont output device, or other type of
ASYNC device.  TERN was originally motivated by the need for a tool to perform
FEP feature and regression testing, but is actually applicable to a wide
variety of uses.
.*B* INVOCATION USE
TERN is invoked from IBEX by:
   !TERN [ command_file ] [( [STA = ] stationname)]
 
   where stationname is the SNAME as defined in SUPER for the
   CGDEV you want TERN to direct its READs and WRITEs.  If
   omitted, TERN will become the AU of the comgroup and no one
   else will be allowed to access the Comgroup.
.*R*
For more information, see the help topic for COMMANDS, CONCEPTS, or PICTURE.
 
A device logon must be created for TERN's use; see your system manager or the
help topic SETTING_UP
.*X*
The following are some ideas for possible inclusion in a future release of
TERN:
   Conditional execution, looping.
   Received characters (etc.) available as an XUE function.
   PARITY translation, both ways.
   Control of multiple devices on the comgroup (via Crusoe?)
.*K* COMMANDS
TERN supports the following commands:
  END       Terminates TERN execution
  LOG       Controls the creation of a LOG file containing received characters
  OPEN      Specifies the comgroup through which TERN is to communicate
  OUTPUT    Controls the concurrent display of received characters
  PACE      Specifies an implicit delay between TERN commands
  SCRIPT    Controls the generation of a TERN command file for later use
  SEND      Specifies characters sent by TERN through the comgroup
  WAIT      Specifies a pause in command execution
.*R*
Commands supported by the common XUR$GETCMD command routine may also be used.
XUE$PREPROCESS may be invoked by "%" characters in the command.  See the help
topic for each command for more information.
.*K* PICTURE
                   +---------------+
      ________     |               |       +---------+
     /\  Disk \    |  User    +----|       |         |
    (  ) Files )---| running  | CG |-------|   any   |_____
     \/___?___/    |  TERN.X  +----|       |   FEP   |     \
                   |               |       |         |     |
                                                           | Patch
                                                           | Cord
                   |               |       |         |     |
     ( Same or     |  Host         |       |   FEP   |_____/
       different   |  under        |-------|  under  |
       machine )   |   test        |       |   test  |
                   |               |       +---------+
                   +---------------+
.*B* CAPTION
The picture shows a typical configuration for FEP feature testing:  a TERN user
is simulating an online terminal on CP-6.
.*K* SEND
Characters sent are specified by the the send command, which has several forms:
     SEND                     to send transparently from your terminal
     SEND [w] string [p]      to send a specified group of characters
                              after an optional delay "w" and wait
                              for the receipt of next prompt "p".
     SEND FILE fid            to send the contents of a file
.*B* TRANSPARENT TERMINAL
SEND
.*R*
Begins sending transparently, without prompting.  Everything that you type will
be sent to the other end, character by character.  Use the BREAK key to return
to the TERN command level.  This form of SEND should be used only from an
online terminal.
.*B* STRING
SEND [w] string [p]
 
Sends a specified character string to the system under test.  The characters
are sent at full line speed.  To send with delays, use separate SEND commands
with the wait option (w) or WAIT or PACE delays.
 
The optional wait "w" is of the form t1[-t2].  If only t1 is specified, the
wait is t1 seconds.  If t1 and t2 are specified, the delay is a random integer
from t1 to t2 seconds.  The wait time may not be accurate if the prompt option
was not specified on the previous send.
 
The optional prompt "p" is a character string that specifies the characters to
search for as the prompt for the next send.  The prompt string should be as
short as possible to prevent the string from being split to timeouts on
M$READs.  (If the string is split by a timeout on a read, the prompt string
will never be found and the emulated user will be hung.)
.*B*
 
The wait option should be used to simulate the think and typing time for each
command.  Furthermore, the random wait option should be used to simulate a more
realistic load.  The prompt option should be used to ensure that the specified
wait option is actually carried out and to ensure that type-ahead is not done
when not intended.
.*B* FILE FID
SEND FILE fid
.*R*
Sends the contents of the specified file.  The characters of the records in the
file (including any control characters) are sent.
.*K* WAIT
WAIT t1[-t2]
 
Causes a pause before continuing to the next command.  If only t1 is specified,
the pause is for t1 seconds.  If both t1 and t2 are specified, the pause is a
random integer from t1 to t2 seconds.
 
WAIT commands are a way to insert pauses in the input stream.  WAIT commands
should not be used to attempt to control the input to prevent type-ahead.  The
prompt option of the SEND command is the correct way to synchronize input and
output.
.*K* PACE
PACE n
.*R*
Specifies a pause of "n" seconds after each following command, before
continuing to the next command.  During this time, TERN reads and processes
received characters.  Since TERN cannot read for received characters while it
is prompting for another command, PACE provides a convenient way to see the
response to each command as it is executed.
.*K* LOG
TERN can record received characters to a 'LOG' file, for later processing.
Characters written to the log file are controlled by the the LOG command, which
has several forms:
     LOG string                      to log a specified group of characters
     LOG ( ON | TO | OVER | INTO ) fid    to begin recording received
characters
     LOG OFF                         to stop recording
.*R*
Note that the LOG command has nothing to do with logging on or off your online
session or job.
.*R*
Characters received are collected into records to make test results independent
of transmission speed and delays; records are terminated and written to the log
file when they reach a length of 80 characters or when an activation character
is received.
.*B* VFC RECORD FORMAT
The first character of each log record is a VFC character that indicates the
circumstance that caused the record break before that record.  The VFC
characters are used in a manner compatible with but not identical to regular
CP-6 conventions.  Use the EQU's from NK_VFC_C.:LIBRARY to refer to the VFC
characters in a PL6 program.  The VFC characters used are:
  -EQU-            -Char-   -TERN usage-
  VFC_EXT          '@'      The record continues one that was split
                            because it exceeded 80 characters.
  VFC_TRANSITION0  '036'O   The record is the first record after
                            LOGging was started, a LOG string
                            command, or an activation character.
  VFC_TRANSITION1  '037'O   The record is the result of a LOG
                            string command.
.*B* ON OVER INTO FID FILE
LOG ( ON | TO | OVER | INTO ) fid
.*R*
Opens the specified file, and begins recording all received characters.
Logging of received characters is independent of characters sent.
.*B* STRING
LOG string
.*R*
Writes the specified string to the log file.  The string is written as a
separate record.
.*B* STOP OFF END QUIT
LOG OFF
.*R*
Stops the recording of received characters in the log file.  The file is not
closed; characters may be added with the LOG string command or loging may be
restarted with LOG.
.*K* OUTPUT
Received characters are, by default, written to the user's terminal or job
listing. They may be redirected and controlled by the the OUTPUT command, which
has several forms:
     OUTPUT ( ON | TO | OVER | INTO ) fid  to begin outputing received
characters
     OUTPUT string                    to write a specified group of characters
     OUTPUT OFF                       to stop outputing
.*R*
Characters are written in short random-length records, as received.
.*B* ON OVER INTO FID FILE
OUTPUT ( ON | TO | OVER | INTO ) fid
.*R*
Opens the specified file, and begins outputing all received characters.
Outputing of received characters is independent of characters sent.
.*B* STRING
OUTPUT string
.*R*
Writes the specified string to the output file.
.*B* STOP OFF END QUIT
OUTPUT OFF
.*R*
stops the outputing of received characters in the output file.  The file is not
closed; characters may be added with the OUTPUT string command or outputing may
be restarted with OUTPUT.
.*K* SCRIPT
The SCRIPT command controls the building of a file containing TERN commands
modeling the activity of the session. It is intended that the SCRIPT file can
be used, after editing, to repeat the session at a future time.  The SCRIPT
command has several forms:
     SCRIPT ( ON | TO | OVER | INTO ) fid  to begin writing script commands
     SCRIPT string                    to write a simulated command
     SCRIPT OFF                       to stop writing
.*B* ON OVER INTO FID FILE
SCRIPT ( ON | TO | OVER | INTO ) fid
.*R*
Opens the specified file, and begins writing reconstructed commands.  The
SCRIPT file contains:
     WAIT n            for all delays that occur, including typing pauses.
     SEND string       for all characters sent by TERN, regardless of source
     nothing           for SEND, WAIT, PAUSE and SCRIPT commands
     the command       for all other commands.
.*B* STRING
SCRIPT string
.*R*
Writes the specified string to the SCRIPT file, as if it were a command that
had been executed.
.*B* STOP OFF END QUIT
SCRIPT OFF
.*R*
stops the writing of reconstructed commands in the output file.  The file is
not closed; characters may be added with the SCRIPT string command or outputing
may be restarted with SCRIPT.
.*K* END QUIT EXIT
END | QUIT | EXIT
.*R*
Exits TERN, after writing pending LOG info and closing files.
.*K* STRINGS CHARACTERS
Strings in TERN commands can contain any combination of all possible 8-bit
characters.  Strings cannot include the code produced by the terminal BREAK
key.  Strings are represented by one or more of the following forms, separated
by commas:
    'quoted characters'
    /slash//virgule delimited/
    ASCII MENMONICS
    #OCTAL
    .OCTAL
.*R*
For example:   'I''m a happy string!',#007,#007,CR,LF
.*B* QUOTED_STRINGS QUOTED_CHARACTERS
Quoted strings are simply characters, usually printable, enclosed with the
single-quote or apostrophe character.  The single-quote character itself may be
represented within a quoted string by two consecutive single-quote characters.
.*B* SLASH VIRGULE DELIMITED
Slash delimited strings are simply characters, usually printable, enclosed with
the slash or virgule character.  The slash character itself may be represented
within a slash delimited string by two consecutive slash characters.
.*B* ASCII MNEMONICS
The following symbols may be used in strings to represent the corresponding
characters in the ASCII code:
.*R*
NUL/L SOH STX ETX EOT ENQ ACK BEL/L BS HT LF VT FF CR SO SI DLE DC1 DC2 DC3 DC4
NAK SYN ETB CAN EM SUB ESC/APE FS GS RS US SP/ACE DEL
.*B* OCTAL # .
Arbitrary characters in strings may be represented by the pound-sign # or the
point . followed by three octal digits.
.*K* SETTING_UP INSTALATION COMGROUP SUPER DEVICE LOGON NETCON CONFIG LINE
Before TERN can be used, several things must be set up.  Details will vary,
depending on what you are trying to do.
  An account must be created or chosen to contain the comgroup TERN is going to
use.  It should be authorized with CGMEM=40.  Choose a name for the comgroup,
or use the default, QUACCG.  TERN should have at least READ, WNEW, AU and TCTL
access to the comgroup.
  A device logon must be created, connecting to the comgroup.  For example:
     !SUPER
     REM DEVICE QUACDEV1
     CR DEVICE QUACDEV1
     PA=PASSWORD
     PRO=VIP7100
     USE=CG
     COMGROUP=CG/QUACCG.YOURACCT
     NOCG=OK
     END
     END
  A line should be (in most cases) configured to log on with the chosen device
logon.  For example:
     !NETCON
     SEL NODE=9
     CONFIG .3300 SPEED=1200,HARD=NO,LOGON='QUACDEV1,,PASSWORD',;
            SAL=NO,DROPDTR=YES,BUF=512,LOGONTIMEOUT=0,READTIMEOUT=0
     END
  An appropriate device should be plugged into the selected line.  For example,
a patch cord to another FEP line, or a Smartmodem.
.*K* OPEN
OPEN <fid>
.*R*
Causes TERN to connect to the comgroup named by fid, QUACCG in the current
account if fid is not specified.  TERN will attempt to send to and receive from
a device logged on to the comgroup.  TERN will attempt to create the comgroup
if none exists.  TERN should have at least READ, WNEW, AU and TCTL access to
the comgroup.
.*K* CONCEPTS GLOSSARY
For a brief glossary of TERN concepts, type ??.
.*B* ACTIVATION
ACTIVATION CHARACTER - One of the following ASCII characters: EOT, LF, FF, CR,
SUB, FS, GS, RS, US.  Used to signal the end of a record or activate a read.
.*B* ASCII
ASCII - American Standard Code for Information Interchange.  The code used by
CP-6 and TERN to assign meaning to binary characters.
.*R*
Use the EQU's from KV_ASCCHR_E.:LIBRARY to refer to ASCII characters in a PL6
program.
.*B* COMGROUP
COMGROUP - the kind of file used by TERN to control its communication line or
device.  TERN reads received characters from the comgroup and writes to the
comgroup to send characters.
.*B* AU ADMINISTRATIVE USER
AU - Administrative User.  Tern must be the administrative user of the comgroup
it controls in order to issue terminal controls to the device station.
.*B* CGMEM
CGMEM - ComGroup MEMory. The account containing the comgroup must be authorized
by PIG to use 40 pages of CGMEM.
.*B* EQU
EQU - PL6 preprocessor EQUate directive, supplied so that programs may use
symbolic values rather than the actual corresponding numbers.
.*B* FID
FID - File IDentifier.  The filename, account, device etc. identifying an
arbitrary file or device in a command.
.*B* MENMONICS
MENMONICS - Symbols representing meaningful values, to avoid memorization.
Example: CR for #015.
.*B* NETCON
NETCON - The NETwork CONfiguration service processor.  Used to assign a
automatic logon to the TERN device line.
.*B* KV_ASCCHR_E
KV_ASCCHR_E - file supplied in account .:LIBRARY, containing EQU's for ASCII
characters.
.*B* NK_VFC_C
NK_VFC_C - file supplied in account .:LIBRARY, containing EQU's for CP-6 VFC
characters.
.*B* SMARTMODEM
SMARTMODEM - A modem controlled by commands imbeded in the character stream
sent to it.  Such a modem can make phone calls and connect to other computers
under the control of TERN.
.*B* VFC
VFC - Vertical Format Control.  The first character of a record, when assigned
a special meaning and used to control the placement of that record on the
printed page.
.*K* OWNER
Tom Puente, LADC
.*K* CHANGES Changes changes
.*R*
890108  DRC
.*R*
Added new command   LOG ON  to allow turning the LOG  on and off to only
capture parts of the session.
 
Added new command   OUTPUT ON  to allow turning OUTPUT off and on to only
capture parts of the session.
 
.*R*
.*B*
881108 DRC
.*R*
More than one TERN to talk through the Comgroup at a time, by use of directed
reads and writes.  ( STA=stationname) added to the commandline.
.*B*
870825 TMP
.*R*
Fixed Looping condition for Batch & Ghost modes when CG not available.
.*B*
850801 GLG
.*R*
Added prompt and wait to SEND.  Changed WAIT to accept random waits.
.*B*
850315 LJS
.*R*
Fixed a bug which caused TERN to hang.
.*B*
850207 LJS
.*R*
Fixed bug in "OPEN comgroup" so the new comgroup has a legitimate access
vehicle specified.  Also, TERN now deletes the "funny" file left in the account
when the comgroup create fails.
.*R*
841029 DDH
.*R*
Fixed to link with shared library.
.*R*
841022
.*R*
Installed in LADC X account.
.*K* XINDEX
TERN.X
.*R*
AID=PROGRAMMING
.*R*
TP_AIDS
.*R*
TESTING
.*K* XINDEX_ABSTRACT
TOOL=TERN
.*R*
An async-terminal turnaround program.
