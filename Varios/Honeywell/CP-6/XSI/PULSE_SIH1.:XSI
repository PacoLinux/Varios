.*M*
HELP file for:  PULSE.X
.*T*
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
.*A*                                             
PULSE is a Pretty Useful Little Screen Editor.   In  order  to  use  the
screen editor,  the user must be logged  onto a correctly profiled video
terminal  (CRT).   The terminal must also have the proper screen editing
attributes defined in its profile.   PULSE,  and any other screen editor
for that matter, cannot function on a hardcopy device.   For information
on using  CP-6  terminal profiles,  see the  CP-6  Programmer  Reference
Manual (CE40).
.*B*
To start the PULSE editor from IBEX, type:
 
      !PULSE [fid  [( options [)]]]
 
.*B*
Parameters:
    fid      is the CP-6 file identifier of the file you wish to
             edit.
 
    options  are a list of one or more PULSE command options.
             Available options can be seen in the OPTIONS topic.
 
.*B*
When  PULSE starts  up, it  will clear  the display  window and  place a
status bar at  the top of the window.  The  status bar contains the name
of the file  being edited and will be used  to prompt for user responses
in  conjunction with  certain commands.   If fid  is not  specified, the
status  bar will contain  the string 'No  file open.' In  this case, the
user will be placed in a command window where a file may be selected.
 
If  fid exists,  then PULSE  will open  the file  and display  the first
several lines of text for you.  If fid does not exist, PULSE will create
a  new file  for you  with the  name fid.  PULSE will  only create keyed
files, but it can perform limited modifications on consecutive files, as
well as examine them in READ ONLY mode.
 
If  the  user  specifies  a  file  that  cannot  be  updated, PULSE will
automatically  open  the  file  READ  ONLY  and inform the user of this,
whether an option was specified or not.  The  minimum  access attributes
necessary for a file to be open for update are DelR, WNew, Upd and Read.
DelF access is not necessary, but if it is present on  the  file,  PULSE
will perform several of its functions in a much more efficient manner.
 
.*B*
The commands are based on control  codes issued by the user.  The screen
editor  allows you  to insert  and delete  lines in  a file,  as well as
modify  them, while the  screen displays the  context of the surrounding
lines in  the file.  Positioning of  the cursor is done  either with the
arrow  keys, or by  issuing the appropriate  commands.  For a summary of
the  available commands, see  the COMMAND_SUMMARY  topic.   In  order to
gain online help, use the ^C  H command to enter the command window, and
then   use   the   HELP   command.    For    more   details,   see   the
COMMAND_WINDOW topic.
 
PULSE  maintains  EDIT  compatible  keys  for  the  file  being  edited.
Periodically, if  there is no room  to insert a record,  PULSE will tell
you to wait  while it makes more room for  your new records.  The amount
of time you must wait depends, partially, on the size of  the  file  and
the current fragmentation of keys within the file.
 
PULSE also makes  use of context files to describe  the type of terminal
being  used for  screen editing.   See the  CONTEXT_FILES  topic  for  a
description of how these work.
 
.*B* BLOCKS
In  addition to  working with  individual lines  and sections  of lines,
PULSE can also perform several commands on blocks.  A block is a section
of the document currently being edited.   A block may be part of a line,
several lines, or the entire file.   The limits of the block are defined
by  a beginning  marker and  an end  marker.  Blocks  allow the  user to
manipulate a large section of a  document all at once, without having to
repeat  several simple  operations on  a line  by line basis.  The block
commands include marking and unmarking  a block, copying a block, moving
a block,  deleting a block, and  transferring a block to  and from disk.
Once marked, a block is  defined until the user specifically unmarks it,
deletes the block, moves it, closes the file, or exits the editor.
 
.*B* ACTIVE_FILE_LIST BUFFER_LIST BUFFERS
PULSE maintains a list of  active files during an editing session.  When
you use  the command window to  select another file to  edit, PULSE will
store the context of your current  file (i.e.  the position you last had
in the file, your block and  spot marks, and the settings of the various
PULSE  flags and output  controls).  PULSE will  then open the new file.
At any  time, you can use  the NEXT or PREVIOUS  commands in the command
window  to  go  back  to  your  place  in  one of the files you had been
editing.  For more information on how the commands in the command window
affect  the active file list, see the COMMAND_WINDOW topic.
.*K* OPTIONS
Valid PULSE options are:
 
    CRPT                   EASYAPPEND
    HSCROLL                INSERT
    KEEPNEWEMPTY           KEYFILE
    NWORK                  OVERSTRIKE
    RCRWRAP                READONLY
    STRIPBLANKS            TEXTEDIT
    UPDATE                 USEWORKFILES
    WORDWRAPCLM            WORK
 
.*B* READONLY EXAMINE INPUT
Syntax:
 
    { R[EADONLY] | EX[AMINE] | I[NPUT] }
 
.*B*
     The READONLY  option causes the specified file  to be opened in the
     read only mode; updates to  the file are not allowed.  Synonyms for
     this command are INPUT and EXAMINE.
 
.*B* UPDATE
Syntax:
 
    U[PDATE]
 
.*B*
     The  UPDATE  option  causes  the  specified  file  to be opened for
     updates.  This is the default when first opening a file.
 
.*B* WORK
Syntax:
 
    W[ORK]
 
.*B*
     The WORK file option causes PULSE to open a temporary work file for
     you  to edit;  any changes  made do  not affect your original file.
     When you  finish with a work  file by exiting PULSE  or closing the
     file, you will  be asked if you wish to save  your file and its new
     changes.  The file will be saved  unless you hit N or n in response
     to  the question.   If the  work file  is to  be saved,  PULSE will
     prompt for a file name.  Hit  the <CR> key if you want to overwrite
     the original.  If you wish to  create a new file, enter the name of
     the  file you wish  to create.  If  the file does  not exist, PULSE
     will create it for you.  If  the file does exist, PULSE will ask if
     you wish to overwrite the existing  file.  Respond Y, N, or Q.  A Y
     response  will overwrite the  existing file; N  will cause PULSE to
     prompt  you  for  an  alternate  file  name;  Q will cause PULSE to
     continue  closing  the  work  file  without saving the changes.  If
     PULSE is  attempting to open a  work copy for a  file that does not
     exist, PULSE  will create an empty  work file and tell  you that it
     has  created  a  new  file.   When  closing  the  work file, a <CR>
     response will  tell PULSE to save  the work file with  the name you
     specified on the edit command.   Also, <ESC> <D>  will  recall  the
     original file name at the prompt.
 
     The shortest form of the WORK command is W.
 
.*B* workfilenote WORKFILENOTE
     NOTE:   Saving your context  with the SAVE  command when work files
     are  present  is  not  a  very  good  idea.   If  you  do  SAVE and
     subsequently log  off the system, a RESTORE  command will be unable
     to  locate the work  copies of your  file.  For this  reason, it is
     recommended  that  you  save  your  work  files  with the TRANSFORM
     command prior to saving your context.
 
.*B* NWORK
Syntax:
 
    NW[ORK]
 
.*B*
     The  NWORK option  tells PULSE  not to  use a  Work File  copy when
     editing a file.  Ordinarily, this  is the default for PULSE, but it
     can be overridden by using the USEWORKFILES command in your context
     file.   The  NWORK  option  is  a  good  way of getting around that
     context file command for a specific file.
 
.*B* CRPT
Syntax:
 
    CR[PT] [=] seed      where  seed  is an octal encryption code in the
                         range 1 to 777777777777.
 
.*B*
     The CRPT option tells PULSE to  open the specified file and use the
     specified  seed for  all I/O  to that  file.  Any work file created
     from an encrypted  file and saved over a new  file will inherit the
     encryption  seed from the  original file.  Also,  if you specify an
     incorrect encryption seed, PULSE may be unable to handle your file.
     In  that case,  PULSE will  report the  error, close  the file, and
     place  the cursor in  the command window.   The seed will remain in
     effect throughout the file.
 
.*B* crptnotes CRPTNOTES
     NOTE:  While  you can use different seeds  in your file by changing
     the seed with an option on  the EDIT command in the command window,
     it  is not  a good  idea to  do so.   Different seeds for different
     records within  the file does not generally  make sense in a screen
     editing  environment.  Consequently, if  your file already utilizes
     multiple seeds, you should use a different editor.
 
     NOTE:   A  SAVEd  context  does  not  contain  the seed used for an
     encrypted file.   Instead, when restoring a  context with encrypted
     files in  it, PULSE will prompt  for the seed to  use on that file.
     If you have  since removed the encryption from the  file, a seed of
     zero (0) tells PULSE not to use encryption on that file.
 
.*B* WORDWRAPCLM
Syntax:
 
    Word[WrapClm]  [=] width
 
.*B*
     The  WordWrapClm  option  will  set  automatic line wrapping at the
     column specified by  width.
 
.*B* INSERTMODE
Syntax:
 
    Ins[ertMode]
 
.*B*
     The  InsertMode option causes  new characters to  appear before old
     ones, moving the old ones to the right, as letters are typed by the
     user.
 
.*B* OVERSTRIKEMODE
Syntax:
 
    Over[StrikeMode]
 
.*B*
     The OverStrike option causes new characters to replace old ones as
     letters are typed by the user.  This is the opposite of InsertMode.
     OverStrikeMode is PULSE's default.
 
.*B* HSCROLL
Syntax:
 
    HSc[roll] [[=] { Y[ES] | ON | N[O] | OFF }]
 
.*B*
     The HScroll  option, when activated, will cause  long lines to move
     left  and right  on the  screen according  to the  cursor position.
     When HScroll  is off, lines which are  longer than the screen width
     will wrap to multiple lines on the screen.  The default is ON.
 
.*B* STRIPBLANKS
Syntax:
 
    Str[ipBlanks] [[=] { Y[ES] | ON | N[O] | OFF }]
 
.*B*
     The StripBlanks option, when  activated, will strip trailing blanks
     from lines.  The default is ON.
 
.*B* TEXTEDIT
Syntax:
 
    Tex[tEdit] [[=] { Y[ES] | ON | N[O] | OFF }]
 
.*B*
     The TextEdit option, when  activated, will preserve a space between
     words when adjacent lines are joined.  The default is ON.
 
.*B* EASYAPPEND
Syntax:
 
    Easy[Append] [[=] { Y[ES] | ON | N[O] | OFF }]
 
.*B*
     The EasyAppend option, when activated, will allow the  file  to  be
     extended by simply striking the carriage return or  using the  down
     arrow key.  When EasyAppend is off, the file can only  be  extended
     by typing <space><CR>.  The default is ON.
 
.*B* RCRWRAP
Syntax:
 
    Rcr[Wrap] [[=] { Y[ES] | ON | N[O] | OFF }]
 
.*B*
     The RcrWrap  option, when activated, will allow  the cursor keys to
     continue to  the next or previous  line when they reach  the end or
     beginning of a line.  The default is ON.
 
.*B* KEEPNEWEMPTY
Syntax:
 
    Keep[NewEmpty] [[=] { Y[ES] | ON | N[O] | OFF }]
 
.*B*
     The KeepNewEmpty option is used to change PULSE's default treatment
     of  empty files.  This  option is not  file specific like the other
     options.  When KeepNewEmpty is activated (the default), empty files
     are  preserved.  When  this option  is turned  off, empty files are
     thrown  away  as  soon  as  the  user  leaves  PULSE  or accesses a
     different file.
 
.*B* USEWORKFILES
Syntax:
 
    UseWork[Files] [[=] { Y[ES] | ON | N[O] | OFF }]
 
.*B*
     The UseWorkFiles option is used to change PULSE's default treatment
     of  files.  When  this option  is activated,  any file  accessed by
     PULSE  will be  handled in  a Work  File Copy  instead of using the
     original.  This option is not file specific, and defaults to NO.
 
.*B* KEYFILE
Syntax:
 
    K[eyFile]
 
.*B*
     The KeyFile option is used to tell PULSE to make the selected file
     into a keyed file, if it is not already keyed with EDIT keys,  and
     if it is not in ReadOnly or WorkFile mode.  Files keyed with a key
     different from EDIT keys will be left alone.
 
.*K* CONTEXT_FILES
In order  for PULSE to be  terminal independent, it needs  to know about
the terminal that is being  used.  Information for the various terminals
available  on  the  system  is  stored  in  context  files.  These files
actually have two parts; an IMP object unit and a set of PULSE commands.
The IMP object unit can be  created with the IMP processor on CP-6.  For
information  on  using  IMP  to  define  keys,  see  the CP-6 Programmer
Reference  Manual (CE40).   The second  part of  the file can be created
using any  text editor on CP-6.   There  are  currently 16 special PULSE
commands.  They are:
 
     WordWrapClm, OverStrike, Insert, HScroll, StripBlanks, TextEdit
     EasyAppend, RcrWrap, KeepNewEmpty, UseWorkFiles, Tabs, Type,
     Start, Finish, CmdOpen and CmdClose
 
.*B*
These commands, with the exception of KeepNewEmpty,  UseWorkFiles, Tabs,
Type,  Start,  Finish,  CmdOpen  and  CmdClose  are  normally done as ^O
commands, so for descriptions of what these commands do, see the command
summary.  The KeepNewEmpty command is only available within  the context
file.  KeepNewEmpty normally defaults to YES.   When KeepNewEmpty is NO,
files newly created with PULSE that are empty (zero records) at the time
you   exit,   close  the  file,   or   switch  files  will  be  deleted,
automatically.   YES   causes   these   files  to  be  preserved.    The
UseWorkFiles command  is  also  only  available  in  the  context  file.
UseWorkFiles,  when YES,  tells PULSE that  it  should always use a work
file  when  editing  a file.   The default is NO.   Tabs  and  Type  are
normally used in the COMMAND_WINDOW, so see that topic for more details.
It should be noted, however, that specifying TABS without any parameters
in the context file will have no effect.
 
.*B*
The Start, Finish, CmdOpen and CmdClose commands are all used to specify
strings that should be sent to the terminal at various times.  The Start
string is sent when  PULSE  is first entered.  The Finish string is sent
when PULSE exits.  CmdOpen is sent when any window aside from the Screen
Edit  window  is accessed,  and  CmdClose  is sent when returning to the
Screen Edit window.   One  use  for  these last two commands is toggling
application keypad mode on terminals which provide this feature. Nothing
will be sent to the terminal for an undefined string.
 
.*B* SYNTAX
The syntax for specifying these commands in a context file is:
 
     Word[WrapClm]  [=] width
     Ins[ertMode]
     Over[StrikeMode]
     HSc[roll]       [[=] { Y[ES] | ON | N[O] | OFF }]
     Str[ipBlanks]   [[=] { Y[ES] | ON | N[O] | OFF }]
     Tex[tEdit]      [[=] { Y[ES] | ON | N[O] | OFF }]
     Easy[Append]    [[=] { Y[ES] | ON | N[O] | OFF }]
     Rcr[Wrap]       [[=] { Y[ES] | ON | N[O] | OFF }]
     Keep[NewEmpty]  [[=] { Y[ES] | ON | N[O] | OFF }]
     UseWork[Files]  [[=] { Y[ES] | ON | N[O] | OFF }]
     Ta[bs] {NONE | A[SSEMBLER] | C[OBOL] | F[ORTRAN] | numlist }
     Type [']code[']
     Start = stringlist
     Finish = stringlist
     CmdOpen = stringlist
     CmdClose = stringlist
 
.*B*
     If the optional setting for the above commands is not specified,
     YES is the default.  (i.e.  HScroll, HScroll=YES, and HScroll=ON
     are equivalent)  numlist is a list of numeric tabstops separated
     by commas.  stringlist  is a list of items, separated by commas.
     The items may be mnemonics for non-printables (ESC,SOH,etc.)  or
     character strings enclosed in single quotes.  For example:
 
     Start=ESC,'[?5h'
     Finish=ESC,'[?5l'
 
     would send the sequence telling a VT200 to use  black characters
     on a white background.  The  accompanying  Finish  string  would
     return the terminal to white on black when PULSE exits.
 
.*B* CREATING
Users  may create  their own  context files  using the  following set of
commands:
 
!IMP impsource {ON|OVER|TO|INTO} impou
!COPY impou,pulsesource {ON|OVER|TO|INTO} :PULSE_profile
 
where impsource  is a file containing IMP  key definitions, impou is the
resulting  file  from  IMP,  pulsesource  is  a  file  containing  PULSE
commands, and profile is the profile name for which this context file is
being made.
 
.*B* FILENAMES
When PULSE first starts up,  it loads a standard context file containing
the key definitions for delete line (^Y) and the BREAK key (to go to the
commandwindow).  This file is called :PULSE_STANDARD.  After loading the
STANDARD  context  file,  PULSE  looks  for  a context file matching the
user's  current profile.  This  file should contain  key definitions for
the arrow keys, the restore-line key, and any special PULSE commands the
user desires.  It should be  noted, however, that the ^Y command (Delete
Line) is already accomplished with  an IMP sequence equivalent to ESC ^L
(Escape Formfeed).   So, if the user wishes  to use a different sequence
to delete lines, that sequence should be IMPed to ESC ^L.
 
A user  defined context file for a  profile should contain the sequences
sent by the arrow keys and define them such that the up arrow sends 'ESC
A', down arrow sends 'ESC B', right arrow sends ^R, and left arrow sends
^H (backspace).  The restore-line key  is obtained by IMPing a keystroke
to  be  'ESC  P'.   The  context  file  may  also  contain any other key
definitions  that   the  user  may  desire   for  special,  personalized
functionality.
 
.*B* COMMAND_VARIABLES
PULSE will look for files starting  with :PULSE_ and ending in a profile
name.  i.e. if the user's profile  is DECVT100, the editor will look for
:PULSE_DECVT100.  If it cannot find  that context file, it will look for
:PULSE_IMP as a standard, profile independent context file.
 
For  both the  STANDARD and  profile context  files, PULSE will search a
certain set of accounts for  these files.  First, for the STANDARD file,
PULSE will check for  a 'PULSE_Standard' command variable.  This command
variable  may contain  the name  of the  account that  the user wants to
contain the :PULSE_STANDARD context  file.  The specified account may be
any account listed in the Master  Account Directory, or on the same disk
pack  as the user's  default directory.  The  user may use the following
command in his SETUP file to  tell PULSE to always look for the STANDARD
context file in the USER directory first:
 
   !Let PULSE_Standard='USER'
 
.*B*
If  there  is  no  command  variable,  or PULSE cannot find the STANDARD
context file in the specified account,  it will look in the user's logon
directory.  If it still cannot find the context file, PULSE will look in
the .:LIBRARY account, and then in the account where PULSE is installed.
Likewise, for the profile search account, there may be a 'PULSE_Profile'
command  variable.   PULSE  will  look  for  the  :PULSE_profile and the
:PULSE_IMP  files  in  the  account  specified  in the command variable.
Failing to find either of those  files, PULSE will look for the same two
file  names  in  the  user's  logon  directory, and then in the :LIBRARY
account.   Finally,  if  PULSE  still  cannot  find  the  context  files
necessary,  it will  search the  account where  PULSE is installed.  The
following command may  be placed in the user's SETUP  file to tell PULSE
to look in the USER directory for the profile context files first:
 
   !Let PULSE_Profile='USER'
 
.*B*
There is also a third context file that PULSE can use.  If the user has
defined a command variable named PULSE_Name,  PULSE will use  the  file
:PULSE_  combined  with  the  contents of  that variable to produce  an
additional context file.   For example,  if  a  user  has  defined  his
variable as follows:
 
   !Let PULSE_Name='BLIP'
 
PULSE will search for the context file named  :PULSE_BLIP in the search
directories described above.
 
Finally, if the context file introducer  :PULSE_  is unsuitable for any
reason, the command variable PULSE_Prefix can substitute a new one,  up
to 20 characters long.   This  substitution  will  take  place  for all
context files.  For example:
 
   !Let PULSE_Prefix=':LADC_'
 
PULSE will look for context files such as :LADC_STANDARD, :LADC_profile,
and :LADC_IMP.
 
.*B* NOTES
NOTE:   The  arrow  keys  on  some  terminals may send a special control
character  that  is  normally  used  by  PULSE.  For instance, Televideo
terminals use the ^K and ^L characters for two of their arrow keys.  The
system  context file  for these  terminals defines  these as being arrow
keys, and subsequently re-defines two other keys, ^D and ^F as being the
^K and ^L  command keys, respectively.  The user may  set up his context
file in any manner he so desires as far as which keystrokes will provide
which function.
 
NOTE:  If the user decides to  use his own :PULSE_STANDARD file in place
of the system defined file, the following points should be kept in mind.
The  system STANDARD  file defines  ^Y to  be ESC  FF (^L or Form Feed),
which is the  CP-6 method of deleting a line  in a screen editor.  Also,
the system STANDARD file defines the BREAK key to be the ^C H command to
get  to the command  window.  Finally, the  system STANDARD file deletes
all inherited IMPs that came from the IBEX window.
 
.*K* COMMAND_SUMMARY COMMANDS
The following is  a list of commands available for  use in PULSE.  The ^
symbol  before  a  key  denotes  that  this  key  is a control key.  For
instance, ^K refers  to holding down both the CONTROL  and K keys at the
same time.
 
.*B*
     ^K B    Mark block beginning
 
     ^K K    Mark block ending
 
     ^K H    Unmark block
 
     ^K C    Copy selected block here
 
     ^K V    Move selected block here
 
     ^K S    Save selected block in PULSE's internal temporary buffer
 
     ^K M    Merge PULSE's internal temporary buffer here
 
.*B*
     ^K Y    Delete selected block
 
     ^K W    Write selected block to a CP-6 disk file
 
     ^K R    Read a disk file as a block at the current location
 
     ^K Z    Save a copy of the current file.
 
     ^K D    Exit editor.  If you are  working on a work  file,  PULSE
             will ask you if you wish to  save  it.  Respond  N  or  n
             if you do not wish to save the file.
 
     ^K .    Remember current location.
 
     ^K 0-9  Ten more spot savers like ^K .  See the MARK_SPOT topic.
 
.*B*
     ^C F    Find word.  PULSE  will prompt  for the  word you want to
             find, then prompt you for options.  Options are:
                 U  for caseblind search
                 B  for backwards search
                 G  for a global search, starting at the  beginning of
                    the file, (or the end if B is specified)
                 K  to limit the search only to the current block
                 Q  to  abort  the  find  operation;  in  other words,
                    saying "Never mind"
 
.*B*
     ^C A    Replace word.  PULSE will prompt you for both the word to
             find and the replacement word, then for options.  Options
             are:
                 U  for caseblind search
                 B  for backwards search
                 G  for search starting at beginning of file (or start
                    at end of file if B is specified)
                 K  to limit the search only to the current block
                 Nx for replace next  x  occurrences of the word where
                    x  is an integer
                 A  for replace all occurrences of the word
                 V  for a verified replacement of each word found
                 Q  to abort  the  replace  operation; in other words,
                    saying "Never mind"
 
.*B*
     ^L      Repeat last find or replace operation.
 
     ^Z      Switch current search direction for ^L command.
 
     ^C R    Goto beginning of file.
 
     ^C C    Goto end of file.
 
     ^C H    Enter command window.  In the command window, you may ask
             for help, switch files, change your directory, or enter a
             line number  for  positioning  of  the  cursor.   To exit
             command mode, just hit the carriage return in response to
             the > prompt.
 
.*B*
     ^C ?    Displays key of line the cursor is currently on.
 
     ^C S    Displays WordWrap Column, and status of PULSE's flags.
 
     ^C .    Goto remembered location.
 
     ^C 0-9  Goto one of the extra spot savers.  See the GOTO_SPOT topic.
 
     ^C B    Goto beginning of currently marked block.
 
     ^C K    Goto end of currently marked block.
 
     ^C +    Goto the next file in the active file list.
 
     ^C -    Goto the previous file in the active file list.
 
.*B*
     ^O E    Toggle EasyAppend mode.  Defaults to ON.
 
     ^O H    Toggle horizontal scroll mode.   (wrap long lines, or
             scroll them left and right on demand)
 
     ^O I    Activate insertion mode.
 
     ^O O    Activate overstrike mode.
 
     ^O R    Activate word wrap.  PULSE will prompt you  for  a column
             number in which to perform word wrap so you do  not  need
             to constantly hit the carriage return.
 
     ^O S    Toggle strip blanks mode.  Defaults to ON.
 
.*B*
     ^O T    Toggle TextEdit mode.  Defaults to ON.
 
     ^O W    Toggle Record Wrap mode.  Defaults to ON.
 
     ^Y      Delete current line.
 
     ESC BS  Escape BackSpace entered  at  the end of a line will join
             the next line to the current one.
 
     ESC LF  Escape LineFeed will split the current line at the cursor
             position.
 
     ESC P   Restores the  current line to the form it was in when the
             cursor was positioned to the line.
.*K* COMMAND_WINDOW
Syntax:
 
    {^C H | BREAK}
 
.*B*
The COMMAND_WINDOW command will place the user in a window at the bottom
of the screen.  Here, the user may enter various commands directly.  The
commands you may issue while in the command window are:
 
     linenumber, EDIT, PULSE, NEXT, PREVIOUS, +, -, CLOSE, DELETE, SAVE,
     RESTORE, LIST, DIRECTORY, DO, PRINT, ERASE, TIME, DATE, HELP, END,
     QUIT, EXIT, TRANSFORM, TABS, TYPE and OUTPUT
 
See  !HELP (PULSE) command  for a description of each of these commands.
.*K* linenumber LINENUMBER
     The  linenumber command will  position the cursor  to the specified
     line number in the file.  The syntax is:
 
         >1.000
 
     where the > symbol is PULSE's  prompt, and the number entered is in
     the same format as the edit keys used throughout the CP-6 operating
     environment.
 
.*K* EDIT PULSE
Syntax:
 
     {PU[LSE]+ [num]}
     {PU[LSE]- [num]}
     {PU[LSE]       }
     {PU[LSE] fid   } [(options[)]]
     {ED[IT]+  [num]}
     {ED[IT]-  [num]}
     {ED[IT]        }
     {ED[IT]  fid   }
 
.*B*
     Parameters:
     fid      is the CP-6 file identifier of the file you wish
              to edit.
 
     num      is the optional offset from the currently open
              file.
 
     options  are a list of one or more PULSE command options.
              Available options can be seen under the OPTIONS
              topic.
 
.*B*
     The  EDIT command will  select a new  file for PULSE  to edit.  The
     available  options  can  be  seen  under  the OPTIONS  topic.   The
     context of the current file will  be saved to the active file list,
     and the new file will be opened.
 
     If  the  specified  fid  is  already  in  the active file list, the
     context from the active file list will be restored.
 
     If the specified  fid exists, but is not in  the active list, PULSE
     will open  the file.  If the specified  fid does not already exist,
     PULSE will create a new one.   If the user is not allowed to change
     the file, or specifies the  EXAMINE option, the file will be opened
     as READ ONLY.   The context for the new file  will be placed in the
     active list  immediately after the context of  the current file and
     before the  context of any file  that may have already  been in the
     list following the current file.
 
.*B*
     If the  + and - variations  of the EDIT command  are used, then the
     file relative to  the current one is open.  If  the EDIT command is
     issued alone, then it just returns to the current file.
 
     If  new options  are specified  along with  the EDIT command for an
     already open file, then those options will take effect immediately.
     However,  it is not  a good idea  to fool around  with changing the
     CRPT option with a file that is already open.
 
.*K* NEXT '+'
Syntax:
 
     {NEXT|+} [num]
 
     The NEXT command will save the  context for the current file in the
     active list, and then open  the subsequent file in the active list.
     If the current  file is the last one in  the list, the first active
     in the list will be opened.   num tells PULSE to open the specified
     file relative to the current one in the active list.
 
.*K* PREVIOUS '-'
Syntax:
 
     {PREV[IOUS]|-} [num]
 
     The PREVIOUS command will save  the context for the current file in
     the  active list,  and then  open the  previous file  in the active
     list.  If the  current file is the first one  in the list, the last
     file  in the  list will  be opened.   num tells  PULSE to  open the
     specified active relative to the current one in the active list.
 
.*K* CLOSE
Syntax:
 
     {CL[OSE]+ [num]}
     {CL[OSE]- [num]}
     {CL[OSE]       }
     {CL[OSE] fid   }
 
     Parameters:  num  is the relative number of the file you wish
                  to close, based from the current file.  + and -
                  tell PULSE which direction from the current file
                  to use, and may not be separated from the CL[OSE].
                  fid  is the name of one of the files in the active
                  file list.
 
.*B*
     The CLOSE command is used to  close the current file, a file offset
     by  + or  - num  , or  a file  specified by  fid. The CLOSE command
     removes  the  specified  file  from  the  active file list.  If the
     specified file  is a work file,  the user will then  be prompted to
     save the changes to that file.
 
.*K* DELETE
Syntax:
 
     {DEL[ETE]+ [num]}
     {DEL[ETE]- [num]}
     {DEL[ETE] }
     {DEL[ETE] fid }
 
     Parameters:  num  is the relative number of the file you wish
                  to delete, based from the current file.  + and -
                  tell PULSE which direction from the current file
                  to use, and may not be separated from the DEL[ETE].
                  fid  is the name of one of the files in the active
                  file list.
 
.*B*
     The DELETE  command is used to close  the currently active file and
     delete  it.  Like  the close  command, the  user may also close and
     delete  a  file  offset  by  +  or  -  num  , or delete it by name.
     Verification is  required, so the user must  type "YES" in order to
     have the deletion take place.  Nothing will happen if the user does
     not  type "YES".  If  the specified file  is associated with a work
     file,  only the work  copy of the  file will be  destroyed.  If the
     file  is associated  with any  other kind  of file  (including READ
     ONLY), the  deletion may still occur if  the user confirms and also
     has access permission to delete  the file.  The DELETE command also
     removes the specified file from the active file list.
 
.*K* LIST
Syntax:
 
     L[IST]
 
     The  LIST command will  list all currently  open files.  Before the
     name  of each  file, PULSE  will put  a +  or -  sign, along with a
     number  to  indicate  the  relative  offset from the currently open
     file.   PULSE places only  a plus or  minus sign next  to the files
     immediately  adjacent to the  current file, and  an => sign next to
     the  current file.   The user  may type  in whatever symbol appears
     next  to  a  filename  to  go  immediately  to  that file (with the
     exception  of  the  =>  sign,  which  is  not a valid command).  In
     addition, PULSE  will place an access type  identifier  next to the
     filename  to describe  the file.   A "c"  indicates that the listed
     file is a consecutive file, an "r" indicates that file is opened in
     Read Only mode, and a "w" indicates that the file is being accessed
     as a work file.
 
.*K* SAVE
Syntax:
 
     SAVE {ON|TO|OVER} filename
 
     The SAVE command will save the complete current context of all your
     currently open files, including  your current search parameters and
     internal  temporary buffer, in  the specified filename.   ON and TO
     specify  file creation  and will  report an  error if the specified
     file  already exists.   OVER specifies  file replacement,  and will
     always create a new save file.
 
.*B*
     If  there are  any work  files in  the current  context, PULSE will
     print  a warning  and the  names of  all currently open work files.
     The  warning states  that if  the user  logs off before restoring a
     context  with work  files, the  work files  will not  be able to be
     restored with the rest of  the context.  It is strongly recommended
     that  the user  use the  TRANSFORM command  before saving a context
     with work files in it.  A  context with STAR (*) files can never be
     restored completely accurately after the user has logged off.
 
.*K* RESTORE
Syntax:
 
     RES[TORE] filename
 
     The  RESTORE command will  close all currently  open files and then
     read  in  the  specified  filename  to  restore  a previously saved
     context.  If there had been  work files in the restored context and
     the  user  had  subsequently  logged  off,  PULSE will be unable to
     restore those work files.  If  there were any encrypted files among
     the files in the context, PULSE will prompt for the seed to use for
     each encrypted file.
 
.*K* TRANSFORM
Syntax:
 
     TRA[NSFORM]
 
     The  TRANSFORM command is  used to go  through the active file list
     and convert  all currently open work files  to non-work files.  The
     entries  are then maintained  for those files  and any subsequently
     SAVEd  context will  be RESTOREable,  even if  the user  might have
     logged off.
 
.*K* TABS
Syntax:
 
            [{ NONE         }]
            [{ numlist      }]
     TA[BS] [{ A[SSEMBLER]  }]
            [{ C[OBOL]      }]
            [{ F[ORTRAN]    }]
 
     where  numlist is a  list of one  or more column  numbers where tab
     stops are desired.
 
.*B*
     The TABS command will set tab stops at a list of column numbers, or
     at a pre-defined set of tab  stops for ASSEMBLER (columns 8, 16 and
     32), COBOL  (columns 8, 12 and  36), or FORTRAN (columns  7, 16 and
     34).  The NONE option to the TABS command removes all tab stops for
     the  editing window,  as will  a TABS  0 command.  The TABS command
     alone will display the current tab settings.
 
.*K* TYPE
Syntax:
 
     TYPE [']code[']
 
     where  code  is a two-character  file type or two-character  quoted
     string denoting file type.
 
.*B*
     The  TYPE  command will set the default  file  type  for  new files
     created with PULSE.  Note, however, that this only applies to files
     created  with the PULSE and EDIT commands, and not to files created
     as blocks with the WRITE_BLOCK command.
 
.*K* DIRECTORY
Syntax:
 
     {DIR|DIRECTORY} [[DP#packset].account]
 
     The  DIRECTORY  command  is  used  to  change  the  default working
     directory.   packset and account  are used to  select a new working
     directory.
 
.*K* DO '!'
Syntax:
 
     {DO|!} ibexcommand
 
     The DO command is used to execute any IBEX command.
 
.*K* PRINT
Syntax:
 
     PRINT
 
     The PRINT command is used cause any pending output to be printed.
 
.*K* ERASE
Syntax:
 
     ERASE
 
     The ERASE command cancels any pending output.
 
.*K* TIME DATE
Syntax:
 
     {TIME|DATE}
 
     The TIME and DATE commands are used to display the current time and
     date.
 
.*K* HELP
Syntax:
 
     H[ELP] [( processor )] [topic]
 
     Parameters:
     processor  specifies an optional processor name for
                which help is to be obtained.
 
     topic      specifies the subject the user wants help for.
 
.*B*
     The HELP command provides online documentation and instructions for
     using various processors and commands on the system.
 
.*K* END QUIT EXIT XIT
Syntax:
 
     {END|QUIT|EXIT|XIT}
 
     The END command is used to leave PULSE and return control to IBEX.
.*K* MARK_BLOCK_BEGIN
Syntax:
 
    ^K B
 
.*B*
     The MARK_BLOCK_BEGIN command marks the beginning of a block.  The
     beginning of the block is defined as the line and position of the
     cursor at the time the command is issued.
.*K* MARK_BLOCK_END
Syntax:
 
    ^K K
 
.*B*
     The MARK_BLOCK_END command marks the end of a block.  The end of
     the block is defined as the position before the cursor position at
     the time the command is issued.
.*K* UNMARK_BLOCK
Syntax:
 
    ^K H
 
.*B*
     The UNMARK_BLOCK command removes the marks defining a block.  The
     copy, move, delete, and save block commands will have no effect
     until a block is explicitly defined again by the BEGIN and END
     commands.
.*K* COPY_BLOCK
Syntax:
 
    ^K C
 
.*B*
     The COPY_BLOCK command will copy the currently marked block before
     the current cursor position.  The original block remains marked and
     in its current location.
.*K* DELETE_BLOCK
Syntax:
 
    ^K Y
 
.*B*
     The DELETE_BLOCK command will delete the selected block from the
     source file.  Once this command has been issued, no block will be
     marked until the user explicitly does so.
.*K* MOVE_BLOCK
Syntax:
 
    ^K V
 
.*B*
     The MOVE_BLOCK command will copy the currently marked block before
     the current cursor position and delete the block from its previous
     position.  After this command has been issued, no block will be
     marked until the user explicitly does so.
.*K* SAVE_BLOCK
Syntax:
 
    ^K S
 
.*B*
     PULSE will transfer a copy of the currently selected block to a
     temporary buffer.  No changes are made to the currently active
     file.  No subsequent changes to the file will affect the contents
     of the save buffer.  If a block had already been saved in the
     temporary buffer, it will be replaced with the new block.  This
     command (along with the ^K M command) is especially useful for
     moving a block between files.
.*K* MERGE_BLOCK
Syntax:
 
    ^K M
 
.*B*
     PULSE will transfer a copy of the currently saved block from the
     temporary buffer to the current cursor position.  This command
     (along with the ^K S command) is especially useful for moving a
     block between files.
.*K* WRITE_BLOCK
Syntax:
 
    ^K W
 
.*B*
     PULSE will prompt for a file name and then transfer a copy of the
     currently selected block to disk.  No changes are made to the
     currently active file.  If the file does not exist, PULSE will
     create it for you.  If the file does exist, PULSE will ask if you
     wish to overwrite the existing file.  Respond Y, N, or Q.  A Y
     response will overwrite the existing file; N will cause PULSE to
     prompt you for an alternate file name; Q will cause PULSE to
     continue without writing the block.
.*K* READ_BLOCK
Syntax:
 
    ^K R
 
     PULSE will prompt for a file name and then transfer a copy of that
     file's contents as a block into the current file at the cursor
     position.
.*K* SAVE_COPY
Syntax:
 
    ^K Z
 
.*B*
     PULSE will prompt for a file name and then save a copy of the
     current file.  Responding with a Carriage Return alone to the file
     name prompt will save over the original file.  This is especially
     useful when using workfiles, since it provides a simple way to
     periodically save changes.  Responding with a file name at the
     prompt will save a copy of the current file to a new file.
 
     NOTE:  If the current file is NOT a work file, and the user simply
     presses a Carriage Return in response to the file name prompt, any
     changes that have not yet been written to disk will also be saved.
.*K* MARK_SPOT
Syntax:
 
    ^K .
    ^K n   where  n  is a number in the range 0 through 9.
 
.*B*
     The MARK_SPOT command will cause PULSE to remember the current
     location so that the user may re-position to the marked spot at a
     later time.  In addition, there are 10 extra spots available to the
     user, numbered 0 through 9.  Issuing the appropriate "^K n" command
     will mark one of these spots.
.*K* END_PULSE EXIT_PULSE
Syntax:
 
    ^K D
 
.*B*
     This command will exit the editor and return control to IBEX.
     PULSE will first check all open files for any work files.  If there
     are open work files, PULSE will ask if you want to save them, one
     at a time.  Respond n or N if the changes are to be ignored. If you
     respond with other than n or N, PULSE will prompt for a file name.
     Hit the <CR> to save over the original file, or enter a new file
     name.  After closing all the files, the editor will exit to IBEX.
.*K* FIND_WORD FIND_STRING
Syntax:
 
    ^C F
 
.*B*
     The FIND_WORD command will prompt for the word you wish to find,
     and then prompt for options.  Then, PULSE will search from the
     current cursor position towards the end of the file for the
     specified string.  If the user just strikes the carriage return in
     response to the Find: prompt, the previous search string will be
     used.  The previous string can also be recovered by using the <ESC>
     <D> sequence.  Likewise, <ESC> <D> will bring back the previous set
     of options, although a carriage return means to use "No options."
 
.*B* OPTIONS
         The options are:
 
           U  for a caseblind search.
 
           B  to search backwards through the file.  (default
              is to search forward)
 
           G  to search from the beginning of the file instead
              of the current cursor position, or from the end
              of file if B was also specified.  If the K option
              is specified, the search will be from beginning
              of block, or end of block, again depending on
              the B option.
 
           K  to limit the search to the currently marked block.
 
           Q  to say "Never mind" and not go through with
              the search.
.*K* REPLACE_WORD REPLACE_STRING
Syntax:
 
    ^C A
 
.*B*
     The REPLACE_WORD command will prompt for the word to find, the word
     to replace it with, and options.  Then, PULSE will go through the
     file and replace the appropriate words according to the options.
     If the user just strikes the carriage return in response to the
     Replace: or With: prompts, the previous strings for each of those
     prompts will be used.  For both these prompts and the options
     prompt, <ESC> <D> will recall the last string for each of those
     prompts, although carriage return alone at the Options: prompt
     tells PULSE to use "No options."
 
.*B* OPTIONS
         The options are:
           U  for a caseblind search for the word to be
              replaced.
 
           B  for a backwards search through the file.
              (default is to search forward)
 
           G  to start the search at the beginning of the
              file, rather than the current cursor position,
              or at the end of file if B was also specified.
              If the K option is also specified, the search
              will be from the beginning of the current
              block, or from the end of the current block if
              the B option is also specified.
 
.*B*
           K  to limit the search to the currently marked
              block.
 
           A  to replace all subsequent occurrences of the
              search string.
 
           V  for a  Y, N or Q  verification of each string
              substitution.  Y causes the replacement, N
              causes the word to be skipped, Q causes the
              replacement operation to be ended.
 
           Nx to replace the next  x  occurrences of the
              search string.  This option will be overridden
              by the  A  option.
 
           Q  to say "Never mind" and not go through with the
              search and replace.
.*K* REPEAT_LAST_FIND_REPLACE
Syntax:
 
    ^L
 
.*B*
     The REPEAT_LAST_FIND_REPLACE command will repeat the last find or
     replace command, with out re-prompting for strings and options.
     The Q and G options will be ignored from the previous invocation of
     these commands, allowing easy continuation of the last find or
     replace operation.
.*K* TOGGLE_SEARCH_DIRECTION
Syntax:
 
    ^Z
 
.*B*
     The TOGGLE_SEARCH_DIRECTION command will switch the default search
     direction for all subsequent ^L commands from Backward to Forward,
     or Forward to Backward.  Whenever a new Find or Replace command is
     issued, however, the search direction will revert to forward unless
     B is specified as an option.
.*K* GOTO_BEGINNING GOTO_BEGINNING_OF_FILE
Syntax:
 
    ^C R
 
.*B*
     The GOTO_BEGINNING command will position the screen and cursor to
     the very top of the file currently being edited.
.*K* GOTO_END GOTO_END_OF_FILE
Syntax:
 
    ^C C
 
.*B*
     The GOTO_END command will position the screen and cursor to the
     very end
.*K* GOTO_SPOT
Syntax:
 
    ^C .
    ^C n   where  n  is a number in the range 0 through 9.
 
.*B*
     The GOTO_SPOT command will cause PULSE to re-position the cursor to
     the stored spot.  In addition, there are 10 extra spots, numbered 0
     through 9.  Issuing the appropriate "^C n" command will position
     the file to one of these spots.
.*K* GOTO_BEGINNING_OF_BLOCK
Syntax:
 
    ^C B
 
.*B*
     The GOTO_BEGINNING_OF_BLOCK command will cause PULSE to re-position
     the cursor to the beginning of the currently marked block.
.*K* GOTO_END_OF_BLOCK
Syntax:
 
    ^C K
 
.*B*
     The GOTO_END_OF_BLOCK command will cause PULSE to re-position the
     cursor to the end of the currently marked block.
.*K* WHERE_AM_I
Syntax:
 
    ^C ?
 
.*B*
     The WHERE_AM_I command will display the edit key of the current
     line along with the current column number at the top of the
     screen.
.*K* DISPLAY_STATUS
Syntax:
 
    ^C S
 
.*B*
     The DISPLAY_STATUS command will cause PULSE to display the current
     value for WordWrap, as well as the status of the various toggles
     available.  i.e. Overstrike, Insert, Horizontal Scrolling (HScroll),
     Strip_blanks, ReadOnly, TextEdit, EasyAppend and RecordWrap.
.*K* GOTO_NEXT_FILE
Syntax:
 
    ^C +
 
.*B*
     The GOTO_NEXT_FILE command will save the settings for the currently
     open file and restore the settings for the next file in the active
     list.  The results of this command are identical to saying NEXT in
     the command window.
.*K* GOTO_PREVIOUS_FILE
Syntax:
 
    ^C -
 
.*B*
     The GOTO_PREVIOUS_FILE command will save the settings for the
     currently open file and restore the settings for the previous file
     in the active list.  The results of this command are identical to
     saying PREVIOUS in the command window.
.*K* STRIP_BLANKS
Syntax:
 
    ^O S
 
.*B*
     The STRIP_BLANKS command will toggle the strip blanks mode.  ON
     indicates that PULSE is to strip trailing blanks from lines.  OFF
     indicates that lines are stored as they are typed, including trailing
     blanks.  The default is ON.
.*K* WORD_WRAP
Syntax:
 
    ^O R
 
.*B*
     PULSE will prompt for a column number.  After entering this number,
     all subsequent lines will be wrapped at that column, inserting a
     new line after the current one.  To reset WordWrap, respond with a
     column number of less than 10.
.*K* HORIZONTAL_SCROLLING
Syntax:
 
    ^O H
 
.*B*
     The HORIZONTAL_SCROLLING command will toggle the horizontal
     scrolling (HS) feature of PULSE.  HS causes long lines to move left
     and right on the screen according to the cursor position, rather
     than wrapping long lines to multiple lines on the screen.  HS defaults
     to being turned ON initially.
.*K* INSERT_MODE
Syntax:
 
    ^O I
 
.*B*
     The INSERT_MODE command causes new characters to appear before old
     ones, moving the old ones to the right, as letters are typed by the
     user.  Unlike ESC J insertion, this insertion will continue for
     subsequent lines.
.*K* OVERSTRIKE_MODE
Syntax:
 
    ^O O
 
.*B*
     The OVERSTRIKE_MODE command causes new characters to replace old
     ones as letters are typed by the user.  This is PULSE's default.
.*K* TEXT_EDIT TEXTEDIT
Syntax:
 
    ^O T
 
.*B*
     The TEXT_EDIT command will toggle TextEdit mode.  In TextEdit mode,
     when records are joined, a space is also inserted to preserve word
     separation boundaries.  The default is ON.
.*K* EASYAPPEND EASY_APPEND
Syntax:
 
    ^O E
 
.*B*
     The EASYAPPEND  command will toggle  EasyAppend  mode.   EasyAppend
     mode  will allow  the file to be  extended by simply  striking  the
     carriage return or using the down arrow key.   When  EasyAppend  is
     off, the file can only  be extended  by  typing  <space><CR>.   The
     default is ON.
.*K* RECORD_WRAP
Syntax:
 
    ^O W
 
.*B*
     The RECORD_WRAP command will toggle RecordWrap mode.  In RecordWrap
     mode, the arrow keys and other intraline positioning functions are
     not halted by line boundaries.  When the end or beginning of a line
     is reached, the cursor will continue on the next or previous line.
     The default is ON.
.*K* JOIN_LINE
Syntax:
 
    ESC BS
 
.*B*
     The Escape Backspace command, when given at the end of a line, will
     join the current line with the following line.  This command has no
     effect within a line.
.*K* DELETE_LINE
Syntax:
 
    ^Y
 
.*B*
     The DELETE_LINE command causes the current line to be deleted from
     the source file, and the screen.  Once deleted, it cannot be
     recovered, so be careful.
.*K* RESTORE_LINE
Syntax:
 
    ESC P
 
.*B*
     The Escape P command will restore a line to its original form,
     provided that the cursor has not left that line.  The command can
     be done with a different keystroke sequence if so desired by
     specifying so in your context file.  Once the cursor has left a
     line, or a line has been deleted, it cannot be restored.
.*K* SPLIT_LINE INSERT_LINE
Syntax:
 
    ESC LF
 
.*B*
     The Escape Linefeed command will split a line in two at the current
     cursor position.  If the cursor is at the beginning of the line, a
     blank line will be inserted before the current line.  If the cursor
     is at the end of the line, then a blank line will be inserted after
     the current line.
.*K* OTHER_CP6_ESCAPE_SEQUENCES
This  topic  shows  the escape sequences which  are standard on the CP-6
system and  are also useful in a  screen editing environment.  There are
additional  escape sequences available  and information on  these can be
obtained from the CP-6 Programmer Reference Manual (CE40).
 
The information is ordered into two columns as shown below:
 
  Sequence   Function
 
.*B* UPARROW
<UpArrow>
             Causes  the cursor  to move  up one  line on the screen.  A
             context file  for a specific terminal  should define the up
             arrow key to send an <ESC> <A>.
 
.*B* DOWNARROW DNARROW
<DownArrow>
             Causes the  cursor to move down one  line on the screen.  A
             context file for a specific terminal should define the down
             arrow key to send an <ESC> <B>.
 
.*B* RIGHTARROW RTARROW
<RightArrow>
             Causes  the cursor to  move one column  to the right on the
             screen.   A  context  file  for  a specific terminal should
             define the right arrow key to send <^R>.
 
.*B* LEFTARROW LTARROW
<LeftArrow>
             Causes  the cursor  to move  one column  to the left on the
             screen.   A  context  file  for  a specific terminal should
             define the left arrow key to send <BS>.
 
.*B* A
<ESC> <A>
             Causes  the cursor  to move  up one  line on the screen.  A
             context file  for a specific terminal  should define the up
             arrow key to send an <ESC> <A>.
 
.*B* B
<ESC> <B>
             Causes the  cursor to move down one  line on the screen.  A
             context file for a specific terminal should define the down
             arrow key to send an <ESC> <B>.
 
.*B* I
<ESC> <I>
             Simulates  a horizontal tab  moving the cursor  to the next
             input  tab stop.  If  the stop is  outside of the insertion
             window, the insertion window is reset.
 
.*B* J
<ESC> <J>
             Toggles  setting  or  activation  of  the insertion window.
             Sets  the  left  and  right  limit of the insertion window.
             Note:   <ESC> <J> is  equivalent to <ESC>  <<> <ESC> <>> or
             <ESC> <R>, whichever toggles the insertion window.
 
.*B* K
<ESC> <K>
             Deletes from the current edit point to the right end of the
             insertion window.
 
.*B* CNTL_K
<ESC><CNTL-K>
             Deletes to the left end of the insertion window.
 
.*B* M
<ESC> <M>
             Resets   overstrike    and   insertion   modes,   disabling
             overstriking.  See <ESC> <O> and <ESC> <'>.
 
.*B* N
<ESC> <N>
             Positions to the right limit of the insertion window unless
             the edit  point is already there.  In  this case, <ESC> <N>
             resets the insertion window first.
 
.*B* O
<ESC> <O>
             Sets  overstrike (as  opposed to  replacement or insertion)
             mode  for input.   When on,  typing on  top of  an existing
             character  creates  an  input  record  that  contains  both
             characters, separated by a backspace character.
 
.*B* R
<ESC> <R>
             Retypes the current input record.  Resets both the left and
             right  limits of the  insertion window to  frame the entire
             record.
 
.*B* CNTL_R
<ESC><CNTL-R>
             Same as <ESC><R>, except no retype occurs.
 
.*B* V
<ESC> <V>
             <ESC> <V> are the first two characters of a three character
             sequence  in  which  the  third  character  is  to act as a
             criterion  for  a  search  of  the  input record within the
             insertion  window.   If  the  character  is  located in the
             window,  the  edit  point  is  moved  to that column,.  The
             direction of  the search is set  by the last-received <ESC>
             <V>,  <BS>, or <CNTL-R>.   <ESC> <V> sets  the direction to
             the direction moved during the last successful search.
 
.*B* X
<ESC> <X>
             Deletes the current input record.
 
.*B* '
<ESC> <'>
             (single  quote) Sets  insertion mode,  resetting overstrike
             mode, if active.
 
.*B* *
<ESC> <*>
             (asterisk)  Saves insertion window in the FEP.
 
.*B* :
<ESC> <:>
             (colon)  Recalls the  characters last  saved with <ESC> <*>
             for this terminal.
 
.*B* '^'
<ESC> <^>
             (caret)  Sets  wordwrap  column.    If  cursor  is  at  the
             beginning of  the input record (up  to column 12), disables
             wordwrap   mode.    For   more   information,  insert  HELP
             TERMINAL_OPS WORDWRPCLM.
 
.*B* '-'
<ESC> <->
             Clears  the  screen  and  repaints  any  borders, forms, or
             screen-editing windows.
 
.*B* '<'
<ESC> <<>
             Sets (not toggles) the left limit of the insertion window.
 
.*B* '>'
<ESC> <>>
             Sets (not toggles) the right limit of the insertion window.
 
.*B* CR
<ESC> <CR>
             Moves  the edit  point to  the left  limit of the insertion
             window,  unless the edit  point is already  there.  In this
             case, <ESC><CR> resets the insertion window first.
 
.*B* DEL
<ESC> <DEL>
             Delete  the character  to the  left of  the cursor.  If the
             cursor is  at the beginning of  the insertion window, <ESC>
             <DEL> does nothing.
 
.*B* CNTL_W
<ESC> <^W>
             Deletes  the word  which is  under and  to the right of the
             cursor.   A  'word'  in  this  sense  is  any  sequence  of
             non-blank characters followed by  any number of blanks; the
             word and the blanks following it are deleted.
 
.*B* HT
<ESC> <HT>
             Sets  autotab  column  mode.   If  the  cursor  is  at the
             beginning  of  the  record,  disables autotab column mode.
             Insert HELP TERMINAL_OPS AUTOTABCLM for more information.
 
.*B* LF
<ESC> <LF>
             Split record.  If the cursor is at the beginning of a line,
             a blank  line is inserted before the  current line.  If the
             cursor is at the end of  the line, a blank line is inserted
             after the current line.  If  the cursor is in the middle of
             a record, the record is split at the cursor position.
.*K* OWNER
Greg Smith, Bucknell University
.*K* XINDEX
PULSE.:SYS
.*R*
AID=GENERAL
.*R*
FILE_MANIPULATION
.*R*
TEXT_PROCESSING
.*R*
.*K* XINDEX_ABSTRACT
TOOL=PULSE
.*R*
PULSE is a simple to use full screen editor and may be installed in :SYS.
.*K* CHANGES B09_CHANGES
The following is a short list of changes to PULSE for moving to B09:
 
     When pre-B09 versions of PULSE made work files out of  consecutive
     files, PULSE tended to forget the location of  the  various  marks
     that can be set in the  file  (Spots,  Beginning of Block,  End of
     Block, etc).  This problem has been fixed.
 
.*B* B08_CHANGES
The following is a list of changes that happened for the B08 release of PULSE.
 
     The size of Find/Replace strings has been increased from  30 to 70.
 
     PULSE no longer allows the user to update a Unit Record (UR) file.
 
     PULSE's  READ_FILE  command  now asks the user whether he wants the
     New  or the  Old  version of a file when he is already editing  the
     specified file as a work file.
 
     Two new command variables were added to facilitate special  context
     file naming requirements:  PULSE_Name and PULSE_Prefix.   They  are
     discussed at the end of the CONTEXT_FILES topic.
 
     The ^K Z command was added to allow the user to save a copy of  his
     current file.   This command is especially useful when using a work
     file and saving changes in progress.
 
 Type ? for more
 
.*B*
     When PULSE is run on an E00 CP-6 system, it will be able to tell if
     the user has made changes to the file.   When editing a  work  file
     that has not been changed, the user will NOT be automatically asked
     if the file should be saved.
 
     Four new context file commands  are  now allowed.   These  commands
     allow the user to define strings to send to the terminal when PULSE
     starts and exits, as well as when leaving the editing window.   The
     commands are START, FINISH, CMDOPEN and CMDCLOSE.   For more  about
     these commands, see the CONTEXT_FILES topic.
 
     PULSE's Exit Control procedure has been improved to allow the  user
     a last chance to save his work files and current editing context in
     the event of an abnormal termination (i.e. ^Y and QUIT, abort after
     a line drop and reconnect, unforeseen PULSE error, etc.).
 
     Saved Context (generated by the SAVE command) from earlier versions
     of PULSE cannot be restored under B08.
 
.*B* B07_CHANGES
The following is a list of changes that happened for the B07 release of PULSE.
 
     Rekey operations no longer clear and redraw the entire screen.
 
     A new TYPE command has been added to the  command window to set the
     default file type for newly created files.  It is also valid within
     context files.
 
     The TABS command is now valid within a context file.
 
     The delete block command now  joins the  two  ends  of  text  after
     deleting a multi-line block.
 
     The block commands now support TextEdit mode.
 
     PULSE now has an additional 10 spots that the user can mark.   They
     are numbered 0-9 and are used the same way the  .  command is  used
     with ^K and ^C.
 
 Type ? for more
 
.*B*
     PULSE now counts the number  of  strings  changed  by  the  replace
     command.
 
     PULSE informs the user of the new  search  direction  when  the  ^Z
     command is issued.
 
     PULSE gives the user positive  feedback  after  completing  certain
     commands.  (i.e.  Spot marked.  Block written.  etc.)
 
     PULSE B07 fixes a bug with MOVE BLOCK where the  source  block  was
     not always deleted.
 
     This version fixes two bugs with workfiles and passwords.
 
     Most of the internal shadow cache errors have been fixed  for  this
     release.
 
 Type ? for more
 
.*B*
     When PULSE is run on an E00 CP-6 system,  an  [End of File]  marker
     will be displayed to mark the end of the currently open file.
 
     ReadOnly mode will also appear to be slightly different when  PULSE
     is run on an E00 system.   Instead of repairing  changes  to lines,
     PULSE  will  now beep  whenever  the  user attempts  to change  the
     contents of the editing window.
 
     Commands  to  access  the  FEP's  "EasyAppend"  feature  have  been
     implemented in B07, but these features will be meaningful only when
     PULSE is run on an E00 CP-6 system.
 
     Handling of packset specifications has been improved.
 
.*B* B06_CHANGES
The following is a list of changes that happened for the B06 release of PULSE.
 
     PULSE will now allow the context file commands (Wordwrap,  HScroll,
     etc.) as options to the PULSE invocation and command in addition to
     the existing options (Workfile, Crpt, ReadOnly, etc.).
 
     There is now a KEYFILE option for the PULSE invocation and  command
     which will convert a consecutive file directly into  a keyed  file,
     if it is opened in update mode without a workfile.
 
.*B* B05_CHANGES
The following is a list of changes that happened for the B05 release of PULSE.
 
     PULSE has  been  modified  to  check  for  the  PULSE_Standard  and
     PULSE_Profile  command  variables.   These  command  variables  may
     contain the accounts that PULSE should search for the  STANDARD and
     profile context files.  Failing to find a command variable,  or the
     requisite context file in the specified account, PULSE  will search
     for context files as before.
 
     PULSE has been fixed to allow updates and saving of work files when
     access to a file has a minimum of DelR, WNew, Upd, and Read.  While
     DelF access is preferred, it is no longer required.  However, PULSE
     will not allow saving  a  work file  over  a file  other  than  the
     original if the user does not have DelF access to the named file.
 
Type ? for more
 
.*B*
     PULSE allows the use of <ESC> <D> to recall the original file  name
     when saving a work file.
 
     PULSE now reports an illegal command following ^C, ^K or ^O, rather
     than just doing nothing.
 
.*B* B04_CHANGES
The following is a list of changes that happened for the B04 release of PULSE.
 
     The TABS command has been modified to  only  affect  the  currently
     open file, allowing different TAB settings for each currently  open
     file.  Each newly open file  inherits  the TAB  settings  from  the
     previous file.  Also, the TABS command syntax has been  changed  to
     allow TA[BS].
 
     The DO command has been re-implemented to allow invocation  of  run
     units.
 
     PULSE now catches users who are saving their work files with a name
     that matches a name already in the active file list,  and  prevents
     this action.
 
     PULSE will look in the M$LM account for context files if  it  fails
     to find them in the user's logon directory or the :LIBRARY account.
 
     The rekeying operation has been re-implemented to  take  much  less
     time.  This improvement is most noticeable when using large files.
 
.*B* B03_CHANGES
The following is a list of changes that happened for the B03 release of PULSE.
 
     The command window now has a command  to  set  tab  stops  for  the
     editing window.  See !HELP (PULSE) TABS
 
     The EDIT|PULSE command in the command window has been  upgraded  to
     allow the relative file specification (+ and -) used with CLOSE and
     DELETE.   In  addition,  this command will now let you  change  the
     options in effect for a file (ReadOnly to Update, etc).
 
     A :PULSE_STANDARD context  file  in  the  user's  account  will  be
     checked before using  the  system  version  and  before  using  the
     profile context file or :PULSE_IMP  context  file.   However,  this
     is an additional file check and after it has been processed,  PULSE
     will check for context files as before.
 
Type ? for more
 
.*B*
     The USEWORKFILES context file option has been added to cause  PULSE
     to always create a work file, rather than work on the  original  by
     default.
 
     The NWORK commandline option has been added  to  override  the  new
     USEWORKFILES context file option.
 
     The UPDATE commandline option has been added to facilitate toggling
     between ReadOnly mode and Update mode while in the command window.
 
     When editing with work files, a work copy is always used, even when
     creating a new file, or in ReadOnly  mode  with  WorkFile  also  in
     effect.  The exception, of course, is for ReadOnly and WorkFile  on
     a file that does not exist.  In this case, an error is reported.
 
.*B* B02_CHANGES
The following is a list of changes that happened for the B02 release of PULSE.
 
     There is now a CRPT commandline option in addition to the  WorkFile
     and ReadOnly options.
 
     PULSE will delete newly created empty files when they are left,  if
     you ask for that feature in your context file.
 
     <ESC> <D> recalls strings at all  prompts  for  Find  and  Replace.
     Carriage return will  also  use  the previous strings used for  the
     Find:, Replace:, and With: prompts for Find and Replace.
 
Type ? for more
 
.*B*
     The WHERE_AM_I command now displays the current  column  number  as
     well as the current line number.
 
     There is a TRANSFORM command in the command window to  convert work
     files to regular files for use in conjunction with the SAVE context
     command.
 
     CLOSE and DELETE now accept a filename as  an  argument.   However,
     the  offset  argument  must follow  CLOSE  or  DELETE  without  any
     intervening spaces.
 
.*B* B01_CHANGES
The following is a list of changes that happened for the B01 release of PULSE.
 
     Longer source lines are now legal (up to 1024 characters)
 
     Backwards search option for both FIND and REPLACE
 
     Option to limit search for FIND and REPLACE to the current block.
 
     Proper handling of consecutive files:
        - ReadOnly mode no longer creates a work file
        - Direct (but limited) modification of the file
             - Data replacement and appending records only
 
.*B* MULTIPLE_FILES MULTIPLE_BUFFERS B00_CHANGES
The following is a list of changes that happened for the B00 release of PULSE.
 
     Multiple files open at the same time:
        - PULSE  maintains a  list of  files  that  you've opened during
          the current editing session,  and  keeps  track of your place,
          making it easy to move  between  files  and  not have to start
          editing over again.   PULSE  also  keeps  track of your marks,
          and the settings you've made for Wordwrap, etc. in conjunction
          with a file.
        - a NEXT and PREVIOUS command ( + and -,  for short ), to switch
          files.
 
Type ? for more
 
.*B*
        - a shortcut for the NEXT and PREVIOUS  commands that  does  not
          require the command window:  ^C + and ^C -
        - ^K S and ^K M to allow carrying blocks  between  files without
          having to go to a temp file in between.
        - SAVE and RESTORE commands to save your total  editing  context
          and restore it later.   (saves your search command,  all  your
          file names and locations,  and  the  save  buffer from ^K S if
          there is one)
        - CLOSE and  DELETE  commands  to  remove a file from the active
          file list, and optionally  delete  the  file  associated  with
          that buffer (YES confirmation is required for DELETE).
 
Type ? for more
 
.*B* REMOVED_FEATURES
Two "features" have  been  removed  from  PULSE  for B00.  These are the ^K Q
command which exited and deleted the current file,  and  the autotab feature.
(^O A,  for  automatic   computing   of  the  correct   indentation).     The
functionalilty  of  ^K Q  can be achieved with  the  DELETE  command  in  the
command window, without having to completely exit PULSE.  The autotab feature
never did work correctly and  has  been  removed  since  it cannot be made to
work.  ESCape TAB will, however, set autotab to the current cursor column, so
all is not lost.
