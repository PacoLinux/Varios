/*M* INITBAN - subroutine to get at XG$FONT.:LIBRARY */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* DDA */
INITBAN: PROC(FONT, TEXT, TSIZE, CSIZE, O, R, C, W) ALTRET;
       DCL 1 FONT,
            2 SIZE UBIN(9) CALIGNED,
            2 TEXT CHAR(10) CALIGNED;
       DCL TEXT CHAR(132);
       DCL TSIZE SBIN;
       DCL CSIZE SBIN;
       DCL O SBIN;
       DCL R SBIN;
       DCL C SBIN;
       DCL W SBIN;
/* */
       %INCLUDE CP_6;
       %INCLUDE B_ERRORS_C;
   DCL 1 HEADER STATIC,
/*K* HEADER - The head record for a font */
         2 FONTNAME                              CHAR(10) CALIGNED,
/*K* FONTNAME - The character name of the font */
         2 *(0:7)                                SBIN ALIGNED,
/*K* SPARES */
         2 WIDTH(0:255)                          SBIN(9) CALIGNED;
/*K* WIDTH - list of widths for the character set */
  DCL    CMDNUM                              SBIN STATIC;
/*K* CMDNUM - The index into _CHAR */
   DCL   CURRENT_CHARNUM                     SBIN STATIC;
/*K* CURRENT_CHARNUM - Current character in memory */
  DCL  1 CHAR#(0:511) CALIGNED STATIC,
/*K* CHAR# - The list of move and draw commands for the,
            character */
         2 X                                     SBIN(9) CALIGNED,
/*K* X - X coordinates */
         2 Y                                     SBIN(9) CALIGNED;
/*K* Y - Y coordinates */
 
/* */
       %FPT_CLOSE(DCB=M$FONT);
       %FPT_OPEN(FPTN=OPEN_SETDCB, DCB=M$FONT, ASN=FILE, FUN=IN,
          SHARE=ALL, NAME=FONTFILE, SHARE=ALL, ACCT=SYS,
          SETDCB=YES);
       %FPT_OPEN(FPTN=OPEN_MERGE, DCB=M$FONT, REASSIGN=YES);
       %FPT_READ(DCB=M$FONT, BUF=IDATA, KEY=FKEY, KEYS=YES);
       %FPT_READ(FPTN=READ_NUMBER, DCB=M$FONT, KEYS=YES,
          BUF=FONT_NUM);
       %FPT_READ(FPTN=READ_HEADER, DCB=M$FONT, KEYS=YES,
          KEY=KEY, BUF=HEADER);
       %VLP_NAME(FPTN=FONTFILE, NAME='XG$FONT');
       %VLP_ACCT(FPTN=SYS, ACCT=':LIBRARY');
       %F$DCB(BASED="BASED(DCB$)");
       %B$TCB;
       %B$ALT;
/* */
       %EQU VERT=1;
       %EQU HORIZ=0;
       %EQU YES=1;
       %EQU NO=0;
/* */
       DCL M$FONT DCB;
       DCL M$LM DCB;
/* */
       DCL B$TCB$ PTR SYMREF;
/* */
       DCL 1 FKEY STATIC,
            2 SIZE UBIN(9) CALIGNED INIT(11),
            2 FONT CHAR(10) CALIGNED,
            2 CHR CHAR(1) CALIGNED;
       DCL 1 KEY STATIC,
            2 * UBIN(9) CALIGNED INIT(2),
            2 FONT UBIN(18) CALIGNED INIT(0);
       DCL 1 IDATA(0:150) STATIC,
            2 X SBIN(9) CALIGNED,
            2 Y SBIN(9) CALIGNED;
       DCL 1 DATA(0:150) STATIC,
            2 X SBIN,
            2 Y SBIN;
       DCL 1 CLOSEST STATIC,
            2 ROW SBIN,
            2 COL SBIN,
            2 DIST SBIN;
       DCL 1 CARRAY(0:3) STATIC,
            2 ROW SBIN,
            2 COL SBIN;
/* */
       DCL PAGE(0:262142) BIT(1) UNAL STATIC SYMDEF;
       DCL YTOP SBIN STATIC SYMDEF;
       DCL YBOTTOM SBIN STATIC SYMDEF;
       DCL OFFSET SBIN STATIC SYMDEF;
/* */
       DCL DCB$ PTR STATIC;
/* */
       DCL OPEN SBIN STATIC INIT(0);
       DCL XSCALE SBIN STATIC;
       DCL YSCALE SBIN STATIC;
       DCL XOFF SBIN STATIC;
       DCL YOFF SBIN STATIC;
       DCL I SBIN STATIC;
       DCL CHAR1 CHAR(1) STATIC;
       DCL SIZE SBIN STATIC;
       DCL J SBIN STATIC;
       DCL CROW SBIN STATIC;
       DCL CCOL SBIN STATIC;
       DCL ROW SBIN STATIC;
       DCL COL SBIN STATIC;
       DCL DELTAX SBIN STATIC;
       DCL DELTAY SBIN STATIC;
       DCL XFACT SBIN STATIC;
       DCL YFACT SBIN STATIC;
       DCL DIST SBIN STATIC;
       DCL ORIEN SBIN STATIC;
       DCL RATIO SBIN STATIC;
       DCL CENTER SBIN STATIC;
       DCL TEMPX SBIN STATIC;
       DCL TEMPY SBIN STATIC;
       DCL LEFT SBIN STATIC;
       DCL RIGHT SBIN STATIC;
       DCL WIDTH SBIN STATIC;
       DCL FONT_NUM UBIN(18) HALIGNED STATIC INIT(0);
/* */
       IF ADDR(O) ~= ADDR(NIL) THEN
          ORIEN=O;
       ELSE
          ORIEN=%HORIZ;
 
       IF ADDR(R) ~= ADDR(NIL) THEN
          RATIO=R;
       ELSE
          RATIO=22;
 
       IF ADDR(C) ~= ADDR(NIL) THEN
          CENTER=C;
       ELSE
          CENTER=%NO;
 
       IF ADDR(W) ~= ADDR(NIL) THEN
          IF W = 0 THEN
             WIDTH=132;
          ELSE
             WIDTH=W;
       ELSE
          WIDTH=132;
 
       CALL INIT_FONT ALTRET(ERR);
 
       IF ORIEN = %HORIZ THEN
          DO;
          YSCALE=CSIZE*13;
          XSCALE=(YSCALE*RATIO)/10;
          YTOP=999999;
          YBOTTOM=0;
          END;
       ELSE
          DO;
          XSCALE=CSIZE*13;
          YSCALE=(XSCALE*RATIO)/10;
          YTOP=1;
          END;
 
       XOFF=0;
       IF ORIEN = %HORIZ THEN
          YOFF=CSIZE;
       ELSE
          YOFF=(CSIZE*25)/10;
       LEFT=99999;
       RIGHT=0;
       PAGE='0'B;
       DCB$=DCBADDR(DCBNUM(M$FONT));
 
       DO I=0 TO TSIZE-1;
          CALL INSERT(CHAR1, 0, 1, SUBSTR(TEXT, I, 1));
TRYAGAIN: FKEY.CHR=CHAR1;
          CALL M$READ(FPT_READ) ALTRET(NOCHAR);
          SIZE=F$DCB.ARS#/2;
          IF ORIEN = %VERT THEN
             YBOTTOM=(HEADER.WIDTH(ASCBIN(CHAR1))*XSCALE)/1000+XOFF;
 
          IF ORIEN = %HORIZ THEN
             DO J=0 TO SIZE-1;
                IF IDATA.X(J) ~= -256 THEN
                   DATA.X(J)=(IDATA.X(J)*XSCALE)/1000+XOFF;
                ELSE
                   DATA.X(J)=-256;
                IF IDATA.Y(J) ~= -256 THEN
                   DATA.Y(J)=YOFF-(IDATA.Y(J)*YSCALE)/1000;
                ELSE
                   DATA.Y(J)=-256;
             END;
          ELSE
             DO J=0 TO SIZE-1;
                TEMPX=IDATA.X(J);
                TEMPY=IDATA.Y(J);
                IF TEMPX ~= -256 THEN
                   DATA.Y(J)=(TEMPX*XSCALE)/1000+XOFF;
                ELSE
                   DATA.Y(J)=TEMPX;
                IF TEMPY ~= -256 THEN
                   DATA.X(J)=YOFF-((78-TEMPY)*YSCALE)/1000;
                ELSE
                   DATA.X(J)=TEMPY;
             END;  /* DO J */
 
          CALL GEN_CHAR;
 
          XOFF=(HEADER.WIDTH(ASCBIN(CHAR1))*XSCALE)/1000+XOFF;
       END;  /* DO I */
 
       IF CENTER = %YES THEN
          OFFSET=(WIDTH-RIGHT-LEFT)/2;
       ELSE
          IF ORIEN = %VERT THEN
             OFFSET=-LEFT;
          ELSE
             OFFSET=0;
       RETURN;
NOCHAR: ;
       IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOKEY THEN
          DO;
          CHAR1=' ';
          GOTO TRYAGAIN;
          END;
ERR:   ALTRETURN;
       %EJECT;
GEN_CHAR: PROC;
       DCL I SBIN;
/* */
       CROW=DATA.Y(0);
       CCOL=DATA.X(0);
       I=1;
 
       DO WHILE (I < SIZE);
          IF DATA.X(I) = -256 OR DATA.Y(I) = -256 THEN
             DO;
             I=I+1;
             CROW=DATA.Y(I);
             CCOL=DATA.X(I);
             I=I+1;
             END;
 
          IF I < SIZE THEN
             DO;
             ROW=DATA.Y(I);
             COL=DATA.X(I);
             CALL GEN_LINE;
             END;
          I=I+1;
       END;  /* WHILE */
 
       RETURN;
       END GEN_CHAR;
       %EJECT;
GEN_LINE: PROC;
       DCL I SBIN;
       DCL J SBIN;
/* */
       DELTAX=CROW-ROW;
       IF DELTAX < 0 THEN
          DELTAX=-DELTAX;
       IF DELTAX = 0 THEN
          DELTAX=1;
 
       DELTAY=CCOL-COL;
       IF DELTAY < 0 THEN
          DELTAY=-DELTAY;
       IF DELTAY = 0 THEN
          DELTAY=1;
 
       IF DELTAX = DELTAY THEN
          DO;
          XFACT=1;
          YFACT=1;
          END;
       ELSE
          IF DELTAX < DELTAY THEN
             DO;
             YFACT=10;
             XFACT=(10*DELTAY)/DELTAX;
             END;
          ELSE
             DO;
             XFACT=10;
             YFACT=(10*DELTAX)/DELTAY;
             END;
 
       CALL STUFF(CROW, CCOL);
 
       DO WHILE (CROW ~= ROW OR CCOL ~= COL);
          CARRAY='0'B;
 
          CARRAY.ROW(0)=CROW-1;
          CARRAY.COL(0)=CCOL;
          CARRAY.ROW(1)=CROW+1;
          CARRAY.COL(1)=CCOL;
          CARRAY.ROW(2)=CROW;
          CARRAY.COL(2)=CCOL-1;
          CARRAY.ROW(3)=CROW;
          CARRAY.COL(3)=CCOL+1;
 
          CLOSEST.DIST=99999999;
 
          DO J=0 TO 3;
             DIST=((CARRAY.ROW(J)-ROW)*(CARRAY.ROW(J)-ROW))*XFACT+
                  ((CARRAY.COL(J)-COL)*(CARRAY.COL(J)-COL))*YFACT;
 
             IF DIST < CLOSEST.DIST THEN
                DO;   /* GET CLOSER */
                CLOSEST.ROW=CARRAY.ROW(J);
                CLOSEST.COL=CARRAY.COL(J);
                CLOSEST.DIST=DIST;
                END;  /* GET CLOSER */
 
          END;  /* DO J */
 
          CROW=CLOSEST.ROW;
          CCOL=CLOSEST.COL;
          CALL STUFF(CROW, CCOL);
       END;  /* WHILE */
 
       RETURN;
       END GEN_LINE;
       %EJECT;
INIT_FONT: PROC ALTRET;
/* */
       DCB$=DCBADDR(DCBNUM(M$FONT));
       IF NOT F$DCB.FCD# THEN
          DO;   /* OPEN FONT FILE */
          CALL M$OPEN(OPEN_SETDCB) ALTRET(OPEN_ERR);
          CALL M$OPEN(OPEN_MERGE) ALTRET(OPEN_ERR);
          END;  /* OPEN FONT FILE */
 
       IF FONT.TEXT ~= FKEY.FONT THEN
          DO;   /* READ HEADER */
          READ_NUMBER.KEY_=VECTOR(FONT);
          CALL M$READ(READ_NUMBER) ALTRET(READ_ERR);
 
          FKEY.FONT=FONT.TEXT;
          KEY.FONT=FONT_NUM;
          CALL M$READ(READ_HEADER) ALTRET(READ_ERR);
          END;  /* READ HEADER */
 
       RETURN;
OPEN_ERR: ;
READ_ERR: ;
       ALTRETURN;
       END INIT_FONT;
       %EJECT;
STUFF: PROC(ROW, COL);
       DCL ROW SBIN;
       DCL COL SBIN;
/* */
       IF COL > 132 OR ROW > 1984 OR COL <= 0 OR ROW <= 0 THEN
          RETURN;
 
       PAGE(ROW*132+COL)='1'B;
 
       IF COL < LEFT THEN
          LEFT=COL;
 
       IF COL > RIGHT THEN
          RIGHT=COL;
 
       IF ORIEN = %HORIZ THEN
          DO;
          IF ROW < YTOP THEN
             YTOP=ROW;
          IF ROW > YBOTTOM THEN
             YBOTTOM=ROW;
          END;
 
       RETURN;
       END STUFF;
       END INITBAN;
       %EOD;
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
GETBAN: PROC(LINE) ALTRET;
       DCL LINE CHAR(256);
       DCL TEXT CHAR(256) STATIC;
       DCL YTOP SBIN SYMREF;
       DCL YBOTTOM SBIN SYMREF;
       DCL PAGE(0:262142) BIT(1) UNAL SYMREF;
       DCL OFFSET SBIN SYMREF;
       DCL X SBIN;
/* */
       IF YTOP > YBOTTOM THEN
          ALTRETURN;
 
       LINE=' ';
       TEXT=' ';
 
       DO X=1 TO 132;
          IF PAGE(YTOP*132+X) THEN
             CALL INSERT(TEXT, X, 1, '#');
       END;  /* DO X */
 
       IF OFFSET > 0 THEN
          CALL INSERT(LINE, OFFSET, 132-OFFSET, SUBSTR(TEXT, 0, 132-OFFSET));
       ELSE
          CALL INSERT(LINE, 0, 132, SUBSTR(TEXT, -OFFSET, 132+OFFSET),
             ' ');
 
       YTOP=YTOP+1;
 
       RETURN;
       END GETBAN;
