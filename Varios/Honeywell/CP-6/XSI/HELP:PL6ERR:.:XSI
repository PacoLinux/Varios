!PL6ERR.X lsfile [{ON|OVER|INTO} , lofile]
  lsfile= M$SI= #1= PL6 LS file
  lofile= M$LO= #4= PL6ERR output
    PL6ERR will read a NEW or OLD(slow) PL6 LS file and scan it for
errors.  When/if found, it backs up to the preceding PL6 statement
(hopefully the one in error) and prints all lines up to but not
including the next PL6 statement, at which point it resumes looking
for errors.
If one gets in the habit of compiling to 'LS' files and uses PL6ERR
to find the errors(if any), you can effectively get all errors out
of the program before getting a listing(possibly from same LS file
by using LISTER.X).  This can make a sizeable improvement in productivity
since instead of waiting for a listing, you just wait for the compile to
completes.
 
Note: Packset managers would probably appreciate you deleting the
      LS file(s) when you no longer need it/them.
The following JCL will suppress ALL printer output.
  !JOB
  !RES ...
  !SET M$LL NO
  !PL6 source,updates OVER object,lsfile(...)
  !ERASE
 
For a list of available options, type '?' or 'HELP (PL6ERR.X) TOPICS'
For a description of a specific option, type 'HELP (PL6ERR.X) option'
For a description of all options, type 'HELP (PL6ERR.X) A - Z'
In the list below, characters before the slash(/) are required.
 
AF/TER     AL/L       AN/NOUNCE  BC         BE/FORE    C/OMPRESS  NA/NNOUNCE
NC/OMPRESS NS/UMMARY  NW/ARN     O/NE       SE/VERITY  SU/MMARY   W/IDTH
HELP file for: PL6ERR
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
AF/TER = [ nn | ALL]  Where nn is the number of lines of the error
                      message to print.
                   ** Default is ALL.
 
AL/L                  Instructs PL6ERR to scan ALL procedures in the
                      LS file.
                   ** Default is ALL (see ONE option for alternative).
 
AN/NOUNCE             Prints the record number and procedure name(s)
                      prior to the first error in each procedure.
                      Nothing is printed for a procedure if it has no
                      errors.
                   ** Default is NANNOUNCE.
 
BC([name1,...]        Allows the selection of specific procedures
   [num1,...] [ALL])  within the LS file, either by procedure NAME or
                      its relative position(ie. 1,2,5,...).  If ALL is
                      specified, ALL procedures are selected.
                   ** Default is ALL.
 
BE/FORE = nn          Where nn is the number of lines prior to the
                      error message to print.
                   ** Default is BEFORE=1.
 
08/28/86
      Taught PL6ERR about PL6 heading changes made since 1982 (when PL6ERR was
      last updated).
08/19/82
      Added/rearranged some code to keep PL6ERR from looping when reporting
      the error caused by back-to-back %EODs.
C/OMPRESS             Indicates to COMPRESS multiple blanks in statements
                      and/or error messages down to 1 blank.
                   ** If PL6ERR is being run online and on a non-CRT
                      terminal(ie. TRMATTR.HEIGHT = 0) then COMPRESS
                      is the default.  Otherwise NCOMPRESS is assumed.
 
CHANGES
NA/NNOUNCE            Indicates Not to ANNOUNCE procedures when errors
                      are found.
                   ** Default.
 
NC/OMPRESS            Indicates Not to COMPRESS all blanks in statements
                      and/or error messages down to 1 blank.
                   ** For default, see COMPRESS.
 
NS/UMMARY             Indicates Not to print diagnostic SUMMARY messages
                      for each external procedure.
                   ** Default is SUMMARY.
 
NW/ARN                Indicates Not to print WARNing messages(ie. severity
                      level of zero).  This is equivalent to SEVERITY>0.
                      Note:  This option is only of use if the PL6 LS
                             file was created with a compile that did
                             not have NWARN as a option.
                   ** Default is SEVERITY>=0 (ie. all error messages)
 
O/NE                  Indicates the LS file contains only ONE external
                      procedure.  This instructs PL6ERR to either look
                      at the next to the last line(record) for the
                      'nn DIAGNOSTIC(S)' which NEW PL6 outputs  or
                      look at the last line for
                      '  --TOTAL DIAGNOSTIC ISSUED ... =   nn' which
                      the OLD PL6 outputs, to determine if there were
                      any errors.  If none, PL6ERR quits.  Otherwise,
                      it reads the entire file looking for the error(s).
                   ** Default is ALL.
 
Lee Hallin, Marketing Software Support Services, LADC
SE/VERITY [ ~= | <= | >= | = | < | > ] n
                      Indicates to select errors with severities with
                      the indicated relation to n (ie. SEV>3 would
                      select any/only errors with severity greater than
                      3).
                   ** Default is SEVERITY>=0 (any errors).
 
SU/MMARY              Indicates to print diagnostic SUMMARY messages
                      for each external procedure.
                   ** Default.
 
W/IDTH                Sets the Width of the printout(M$LO).
                   ** Default is taken from either the PLATEN width or RECL,
                      which ever is applicable.
 
PL6ERR.X
AID=PROGRAMMING
LISTINGS
PL6
TOOL=PL6ERR
Scans PL-6 listing files for errors and if found, prints the line in error
followed by error messages pertaining to them.
CHANGES
