/*M* JOBNAME - program to put job names in a user's jit. */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
JOBNAME: PROC MAIN;
 
      DCL ME_BUFFER                    CHAR(80)  STATIC;
      DCL M$ME                         DCB;
 
      DCL ONE_PAGE                     CHAR(4096) STATIC;
 
      DCL DI_FMT                       CHAR(0)   CONSTANT INIT
         ('Current jobname is %<>A.');
 
      DCL NO_FMT                       CHAR(0)   CONSTANT INIT
         ('No current jobname.');
 
      DCL CH_FMT                       CHAR(0)   CONSTANT INIT
         ('Jobname changed to %<>A.');
 
      DCL RE_FMT                       CHAR(0)   CONSTANT INIT
         ('Jobname removed.');
 
      DCL ER_FMT                       CHAR(0)   CONSTANT INIT
         ('  Syntax error in command line');
 
      DCL BA_FMT                       CHAR(0)   CONSTANT INIT
         ('  This processor cannot be used in batch.');
 
      DCL NJ_FMT                       CHAR(0)   CONSTANT INIT
         ('  You don''t have JIT priv, please run from :SYS');
 
      DCL JOBNAME_                     BIT(36)   SYMREF;
      DCL B$JIT$                       PTR       SYMREF;
 
      DCL X$PARSE                      ENTRY(1)  ALTRET;
 
      %INCLUDE CP_6;
      %INCLUDE CP_6_SUBS;
      %INCLUDE B$JIT;
      %INCLUDE XU_MACRO_C;
      %INCLUDE XUF_ENTRY;
      %INCLUDE XU_FORMAT_C;
 
      %F_FDS (BUF=ME_BUFFER,
              DCB=M$ME);
 
      %P_PCB (R=JOBNAME_,
              W=ONE_PAGE,
              WSZ=1024);
 
      %PARSE$OUT (STCLASS=BASED);
      %PARSE$SYM (STCLASS=BASED);
/*
**
**    We must be used online.
*/
      IF B$JIT.MODE = %M_BATCH# THEN
         DO;
            CALL X$WRITE (F_FDS, VECTOR(BA_FMT));
            CALL M$ERR;
            END;
/*
**
**    Check for JIT priv.
*/
      IF NOT (B$JIT.PRIV.ACTIVE & %PR_JIT#) THEN
         DO;
            CALL X$WRITE (F_FDS, VECTOR(NJ_FMT));
            CALL M$ERR;
            END;
/*
**
**    Set up parse, and then parse ccbuf.
*/
      P_PCB.TEXT$ = ADDR(B$JIT.CCBUF);
      P_PCB.NCHARS = B$JIT.CCARS;
 
      CALL X$PARSE (P_PCB) ALTRET (ERR);
/*
**
**    Determine if display, change, or remove jobname.
*/
      IF P_PCB.OUT$->OUT$BLK.NSUBLKS = 1 THEN
         IF B$JIT.JOBNAME = ' ' THEN
            CALL X$WRITE (F_FDS, VECTOR(NO_FMT));
         ELSE
            CALL X$WRITE (F_FDS, VECTOR(DI_FMT), VECTOR(B$JIT.JOBNAME));
      ELSE
      IF P_PCB.OUT$->OUT$BLK.SUBLK$(1)->OUT$BLK.CODE ~= 10 THEN
         DO;
            B$JIT.JOBNAME = P_PCB.OUT$->OUT$BLK.SUBLK$(1)->OUT$SYM.TEXT;
            CALL TAKE_CARE_OF_LDEVS;
            CALL X$WRITE (F_FDS, VECTOR(CH_FMT), VECTOR(B$JIT.JOBNAME));
            END;
      ELSE
         DO;
            B$JIT.JOBNAME = ' ';
            CALL TAKE_CARE_OF_LDEVS;
            CALL X$WRITE (F_FDS, VECTOR (RE_FMT));
            END;
/*
**
**    Done.
*/
      CALL M$EXIT;
/*
**
**    X$PARSE Altrets.
*/
ERR:  CALL X$WRITE (F_FDS, VECTOR(ER_FMT));
      CALL M$ERR;
 
%EJECT;
TAKE_CARE_OF_LDEVS: PROC;
/*
**
**    This procedure releases any accumulated output from
**    the default LDEV streams.
**
*/
      DCL I                            UBIN;
 
      DCL B$ROS$                       PTR       SYMREF;
 
      %INCLUDE B$ROSEG;
 
      %FPT_LDEV;
 
      DO I = 0 TO 15;
         IF B$ROS$->B$ROSEG.STREAMID.FLG(I) ~= 0 AND
            ~B$ROS$->B$ROSEG.STREAMID.UC_STR(I) AND
            (B$ROS$->B$ROSEG.LDEVNAME(I) = 'LP01' OR
             B$ROS$->B$ROSEG.LDEVNAME(I) = 'CP01' OR
             B$ROS$->B$ROSEG.LDEVNAME(I) = 'GR01') THEN
            DO;
               FPT_LDEV.V.STREAMNAME# = B$ROS$->B$ROSEG.LDEVNAME(I);
               CALL M$LDEV (FPT_LDEV);
               END;
         END;
 
END TAKE_CARE_OF_LDEVS;
 
END JOBNAME;
