/*M* FALCON - TOOL TO CHANGE CASENESS OF NAMES IN OBJECT UNITS */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1988    */
/*T*                                                         */
/*T***********************************************************/
program lc_entdef (fyle);
   /* this program munges an object unit file
      so that the ENTDEF names are in lowercase.  The invocation is
 
         !lc_entdef object_file
 
      additionally, if the first character in the object name is 'z' it is
      changed to an underscore.
 
      For PL6 object units, both the head record and ENTDEF record have
      to be fixed.  For BMAP object units, the head record correctly has
      the unit name in lowercase, but the ENTDEF record is wrong.
   */
 
   label
      99;
   type
      big_string = string [2048];
   var
      fyle : keyed_file;
      head_record, name_record, entdef_record: big_string;
      next_key, head_key, new_head_key, name_key, entdef_key: string [80];
      lcname : string [33];
      head_keys : array [1..200] of string [33];
      ous, i, page : integer;
 
   procedure fix_it (var name_record: big_string;
                         entdef_record: big_string); external;
 
begin
   set_file_parameters (fyle, '  ', 'dcb=#1,error=continue');
   extend (fyle);
   if file_status (fyle) <> 0 then program_exit (7);
 
   /* position to beginning of file */
 
   keyed_read (fyle, " ", head_record);
   set_file_parameters (fyle, '  ', 'error=abort');
 
   /* read all the head records */
   ous := 0;
   keyed_sequential_read (fyle, head_key, head_record);
   while ord(head_key[1]) = 8#42 do begin
      ous := ous + 1;
      head_keys [ous] := head_key;
      keyed_sequential_read (fyle, head_key, head_record);
   end;
 
   for i := 1 to ous do begin
      /* read the head record */
      head_key := head_keys [i];
      keyed_read (fyle, head_key, head_record);
      lcname := head_key [2..length(head_key)];
      uppercase_to_lowercase (lcname);
      if lcname[1] = 'z' then lcname[1] := '_';
      /* fry original head record */
      keyed_delete (fyle, head_key);
      /* write new head record */
      new_head_key := head_key [1] & lcname;
      keyed_write (fyle, new_head_key, head_record);
 
      /* construct key for externally defined names record */
      name_key := chr(8#777) & head_record[1..4] & chr(1) & chr(0);
      keyed_read (fyle, name_key, name_record);
      /* construct key for ENTDEF record */
      page := 0;
      entdef_key := chr(8#777) & head_record[1..4] & chr(4) & chr(page);
      keyed_read (fyle, entdef_key, entdef_record);
      fix_it (name_record, entdef_record);
      /* there may be additional entdef records */
      while true do begin
         page := page + 1;
         entdef_key [7] := chr (page);
         keyed_sequential_read (fyle, next_key, entdef_record);
         if next_key <> entdef_key then goto 99;
         fix_it (name_record, entdef_record);
      end;
99:;
      keyed_write (fyle, name_key, name_record);
   end;
end.
