MUPPET_XCON - Exit control for FPRGs.
MUPPET_XCON is a FEP object unit that can be linked into another FEP object
unit in order to set up exit control.  It consists of the following routines:
 
   MUPPET_XCON       - called by the FPRG to initiate exit control
   MUPPET_XCONCLR    - called by the FPRG to terminate exit control
   MUPPET_XCON_ASYNC - internal routine not to be called by the FPRG
 
When the FPRG calls MUPPET_XCON, exit control is established and if the FPRG
exits for any reason, (including normal termination), MUPPET_XCON_ASYNC will
take control and pass the error code back to the host in the form of an 8 byte
record.  The first 4 bytes of this record is the ASCII string 'ERR:'.  The last
4 bytes are the error as a normal LCP-6 error code as passed through the
coupler.  MUPPET_XCON_ASYNC then terminates exit control, waits for one second
and exits.
 
When the FPRG calls MUPPET_XCONCLR, exit control is cancelled and any exit
condition is handled normally.
HELP file for MUPPET_XCON
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
840807
Installed in LADC X account
NOTES
CHANGES
Entry DCLs for MUPPET_XCON are available in MUPPET_XCON_ENTRY.X
As the name implies, MUPPET_XCON was written to be used by FPRGs that have been
started with MUPPET.X.  When MUPPET_XCON sends back the error code to MUPPET,
MUPPET will tell the user that the FPRG has sent an error and then call
M$ERRMSG to tell the user the error message.
Please take note of the following considerations:
 
o     A single FPRG may call these routines many times to set up
      exit control for parts of the program while letting other
      parts exit normally.
 
o     An FPRG must be sure and call MUPPET_XCONCLR prior to
      normal termination to avoid having a meaningless error code
      sent back to the host.
 
o     A read must be pending from the host program on the FPRG
      at the time of the exit condition.  If one is not pending,
      the FPRG will 'hang' until either the host reads from the
      FPRG or the host closes down the FPRG.
Dave Wagner, LADC
MUPPET_XCON.X
AID=NOLIST
FPRG
TOOL=MUPPET_XCON
Exit control for FPRGs.
CHANGES
