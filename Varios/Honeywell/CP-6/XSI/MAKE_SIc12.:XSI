/*M*    make_vars:c  -- global variables                       */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
 
#include "MAKE_Cc13"
 
int      Errors    = 0;
int      Warnings  = 0;
int      opt_warn  = 3;
char     options[255];
char    *MakeFid   = 0;
int      MakeLabel = 0;
unsigned MaxJobs   = 511;
int      Silent    = 0;
int      UpdateRst = 0;
unsigned SpecMacroFlags = 0;
 
struct  target_rule *LineList       = 0;
struct  target_rule *fmt_cmd        = 0;
struct  target_rule *copy_cmd       = 0;
struct  sym_target  init_sym_target = INIT_SYM_TARGET;
struct  sym_owner   init_sym_owner  = INIT_SYM_OWNER;
struct  sym_target   TargetList  = INIT_SYM_TARGET;
struct  sym_target  *TargetListHead = &TargetList;
struct  sym_target  *JclRules       = 0;
struct  sym_target **JclRulesHead   = &JclRules;
struct  sym_target  *MakeTarget     = 0;
struct  sym_target **MakeTargets    = 0;
struct  sym_target  *PseudoPhony    = 0;
struct  sym_target  *PseudoPrecious = 0;
struct  sym_target  *PseudoSuffixes = 0;
struct  sym_target  *PseudoDefault  = 0;
struct  sym_target  *PseudoIgnore   = 0;
struct  sym_target  *PseudoSilent   = 0;
struct  sym_target  *PseudoOnline   = 0;
 
struct  sym_macro    *sym_macro_specials[60] = {
         0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0,
         0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0,
         0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0     };
 
 
char *CONST state_names[] = {
           "*unused*", "", "waiting", "runable", "running",
           "error",    "Completed"
        };
 
struct  hash_table  macro_hash_table   = INIT_HASH_TABLE;
struct  hash_table  target_hash_table  = INIT_HASH_TABLE;
struct  hash_table  ftype_hash_table   = INIT_HASH_TABLE;
struct  hash_table  owner_hash_table   = INIT_HASH_TABLE;
 
#define lookup_sym_macro(n,l,r) (struct sym_macro *) \
              lookup_sym(&macro_hash_table,n,l,r,alloc_sym_macro)
 
#define lookup_sym_target(n,l,r) (struct sym_target *) \
              lookup_sym(&target_hash_table,n,l,r,alloc_sym_target)
 
#define lookup_sym_ftype(n,l,r)  (struct sym_ftype *)  \
              lookup_sym(&ftype_hash_table,n,l,r,alloc_sym_ftype)
 
#define lookup_sym_owner(n,l,r)  (struct sym_owner *)  \
              lookup_sym(&owner_hash_table,n,l,r,alloc_sym_owner)
 
extern  struct sym_    *alloc_sym_macro();
extern  struct sym_    *alloc_sym_target();
extern  struct sym_    *alloc_sym_ftype();
extern  struct sym_    *alloc_sym_owner();
extern  struct sym_    *lookup_sym();
 
struct  sym_ftype     **Filetypes  = 0;
int                     Nfiletypes = 0;
 
 
/*      File path information
 */
 
struct  acct_list   *srch_lists[10] = {0, 0, 0, 0};
struct  vlp_acct    *srch_roots[10] = {0, 0, 0, 0};
int                  srch_num       = 4;
 
int                 TryUIp = 0;
int                 Allow_h_h = 0;
 
#define SIPATH      srch_lists[0]
#define OUPATH      srch_lists[1]
#define GNPATH      srch_lists[2]
#define UIPATH      srch_lists[3]
 
#define SIROOT      srch_roots[0]
#define OUROOT      srch_roots[1]
#define GNROOT      srch_roots[2]
#define UIROOT      srch_roots[3]
 
#define SIROOT1     srch_lists[0]->accts[0]->text
#define OUROOT1     srch_lists[1]->accts[0]->text
#define GNROOT1     srch_lists[2]->accts[0]->text
#define UIROOT1     srch_lists[3]->accts[0]->text
 
/*         Target Action Information           */
 
struct target_action   **TargetActions = 0;
int                      TargetActionSize = 0;
int                      TargetActionNum  = 0;
 
struct sym_target       *target_states[7] = {0,0,0,0,0,0,0};
struct sym_target      **state_inserts[7] = {0,0,0,0,0,0,0};
int                      state_counts[7]  = {0,0,0,0,0,0,0};
 
struct command_line     *jcl_start        = 0;
struct command_line     *jcl_end          = 0;
struct command_line     *jcl_xeq          = 0;
struct command_line     *jcl_xeqend       = 0;
 
char                     JobInfoFid[32];
int                      IBEX_output_switch = 1;
 
 
/*         Input Records                       */
 
char                   *InputRec    = 0;
int                     InputRecLen = 0;
int                     MacroSubs   = 0;
 
 
char                   *MacRecBuf   = 0;
int                     MacRecSize  = 0;
int                     MacRecLen   = 0;
char                   *AltRecBuf   = 0;
int                     AltRecSize  = 0;
int                     AltRecLen   = 0;
 
 
int                     mem_ftypes[2]    =  0;
int                     mem_owners[2]    =  0;
int                     mem_strings[3]   =  0;
int                     mem_targets[2]   =  0;
int                     mem_macros[2]    =  0;
int                     mem_macstr       =  0;
int                     mem_commands     =  0;
int                     mem_comrules     =  0;
int                     mem_rulelist     =  0;
int                     mem_dependlist[2]=  0;
int                     mem_actionlist[2]=  0;
int                     mem_acctlist[2]  =  0;
int                     mem_ruleptrs[2]  =  0;
 
 
struct input_info file_table[12];
int               InputNo = 0;
 
int               SrchNum = 1;
char             *SrchList[MAX_SRCH] = {"\001."};
