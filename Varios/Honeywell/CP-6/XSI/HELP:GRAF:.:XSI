GRAF.X
 
This rununit contains an automatically starting APL workspace which will
produce a number of different kinds of graphs using the APL/DIGS interface.
Graphic output is produced by entering the data and optional labeling
information and issuing a command for the style of graph to be created and
optionally the destination.
 
This application complements the GRAFA?.X utilities.  Use of GRAF.X requires
both APL and APL/DIGS.
 
General Information
 
This application is capable of producing six different kinds of graphs.  These
are: Bar charts, 3D Bar charts, Pie charts, Step charts, Line charts and Plots.
By default all output is directed to the terminal although every command that
generates graphics output optionally permits a destination fid to be specified.
 
Commands accepted by this tool are divided into five major classes.  The
command classes are:  Graphical Output Commands, Labelling Commands, Graphic
Option Commands, and Session Control Commands.  For information on the use of
any of these commands, enter:  HELP commandname.  HELP COMMANDS will report a
summary of the commands available by category.  HELP command-name will describe
how to use a particular command.  HELP EXAMPLE will provide an example of use
of many of the commands.
 
HELP file for: GRAF.X
 
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
Syntax:
 
! [cmd]
 
Description:
 
This command permits an IBEX command to be entered.  If graphics output has
been sent to a file, a DONE command may be necessary before the file can be
accessed by an IBEX command within GRAF.
 
Example:
 
:!DI
   Users = 53
   ETMF =  1
   90% response < 10 msecs
   FEB 11 '86  17:56 :
BAR3D
Syntax:
 
:BAR [OVER fid]
 
This command causes the data entered via the DATA command to be graphically
dislayed in the form of a BAR chart.  The data must have each data point
entered labeled with an X-axis name.  The Y-axis indicates the magnitude of the
values and the X-axis is labelled with the names associated with the data
points.  More than one set of data may be included in the bar chart, although
each set must use the same labels and have been entered in the same order.
 
The STACK option may be used if more than one set of data is included.  In this
case, the values of each X-coordinate position will be stacked upon producing a
single bar for each X-position.
 
The PERCENTAGES option may be used to cause the Y-axis to be labeled in percent
of the total for each point instead of using the Y values for the Y-axis label.
 
The FILL command is used to select the pattern used to fill the interior of
each BAR.  Each set of data is filled with a single interior style.  If more
than one color is available all of the colors are used with first fill pattern
before the next fill pattern is selected.
 
 
:DATA (JAN=234,FEB=453,MAR=432,APR=321,MAY=435,JUNE=542)
:TITLE='Widget Production'
:XNAME=1986
:YNAME=Thousands
:BAR
 
In this example, the production of widgets for the first half of 1986 will be
displayed as a BAR chart.
00001
Syntax:
 
:BAR3D  [ (angle,elevation) ]  [OVER fid]
 
Parameters:
 
angle      is the X-Y viewing angle.  The specified angle must be in the range
5 through 85 degrees.  An angle of 5 degrees would be viewing the X-axis
(almost) straight on whereas an angle of 85 would be viewing the Y-axis
(almost) straight on.
 
elevation     is the X-Z viewing angle.  The specified angle must be in the
range 5 through 85 degrees.  An angle of 5 degrees would be viewing from the
level of the X-axis, whereas an angle of 85 degrees would be viewing from
(almost) directly above.
 
Description:
 
This command causes the data entered via the DATA command to be graphically
displayed in the form of a 3 dimensional BAR chart.  When the data was entered,
each datapoint must have been labelled (with an X-axis name).  The Y-axis
contains the subtitle given to this set of data and the Z-axis indicates the
magnitude of the value.  More than one set of data may be included in the 3D
bar chart although each set of data must use the same labels and have been
entered in the same order.  Each set of data appears as a row of bars.
 
The HIDE option is used to control whether hidden lines are removed from the 3D
BAR.  The 3D BAR chart is created in an order such that hidden lines will be
automatically removed when displayed on many devices (temporal priority hidden
surface removal).  If the lines are not removed on the device on which this
chart will be displayed, this command will cause the lines to be removed but at
the cost of much additional execution time.
 
The default viewing angle is (45,45).
 
:DATA ( JAN=234, FEB=453, MAR=432, APR=321, MAY=435, JUNE=542 )
:title 'House Sales'
:xname 1987
:yname units
:bar3d
 
00001
Syntax:
 
BORDER  [ = {YES/NO}]
 
Description:
 
This command is used to control whether or not a box is drawn around the graph.
The default is NO.
05/19/88 Corrected to set line-width as required by E00 Graphics.
02/02/87
Corrected LINE and STEP graphs to include Zero Values.  Corrected LINE to mark
datapoints only if FILL option was given.
 
06/02/86
Corrected handling of file names in READ and FILL commands.
 
05/14/86
Implemented the FORM, ENTER, HIDE, BAR3D, LOAD, SAVE, LIB, DROP and FONTS
commands.  Made command processing case insensitive.  Added the ability to
specify fonts when defining labelling information.  Added the ability to
specify line separation for the built in FILL patterns.  Corrected handling of
special characters in all labels.
 
03/05/86
Implemented the STYLE command.  Set PIXEL array pattern origin to lower left
corner of each bar.  Reversed and corrected fill patterns SLASH and BACKSLASH.
Corrected the BORDER, FRAME and STACK command.  Improved the handling of file
names for READ, HELP and FILL commands.  Negative values may now be BAR
charted. GRID now applies to BAR, LINE and STEP.  The GRID is now formed with
DOTted lines.
02/20/86
Submitted to LADC X account.
Syntax:
 
COLOR [ = (colorlist)]
      [ = NO         ]
 
Parameters:
 
colorlist     is a list of color names separated by commas.  The following
color names are available: RED, GREEN, BLUE, WHITE, BLACK, YELLOW, MAGENTA,
CYAN, ORANGE, BROWN, PURPLE, DRKGREEN, LTBLUE, GRAY, and PINK.
 
Description:
 
If no parameters are present, the following colors are selected:
(BLACK,WHITE,RED,GREEN,YELLOW,BLUE,MAGENTA,CYAN).
 
The first color selected will become the background color, the second color
specified will be used to label the graph.  The remaining colors are used in
displaying the data associated with the graph.
 
If the PIE command is issued and a FILL command has been issued, each slice
will appear in a different color (until all colors have been used, then
different fill patterns will be used).
 
For PLOT, LINE and STEP graphs, each data line will be displayed in a different
color.  If a FILL command has been issued, each point will be marked by a
marker in the current color.
 
For BAR charts, the bars associated with each set of data will be filled with
different colors.
 
If the NO option is provided, all graphics output will appear in the same
color.
Commands are entered when GRAF prompts with a :.  A command may be continued by
terminating the input line with a ;.  Any text within double quotes is treated
as a comment, and all comments must have a terminating ".  Commands are case
insensitive and may be abrieviated.  GRAF supplies the following commands:
 
Graphical Output Commands
 
PIE [OVER fid]      Generates a pie chart
BAR [OVER fid]      Generates a bar chart
BAR3D [OVER fid]    Generates a 3D bar chart
STEP [OVER fid]     Generates a step chart
LINE [OVER fid]     Generates a line chart
PLOT [OVER fid]     Plot X/Y data
 
Labelling Commands
 
TITLE = 'text'      Label centered above graphics
NOTE  = 'text'      Label in lower right corner
XNAME = 'text'      X-axis label
YNAME = 'text'      Y-axis label
SUBTITLE = 'text'   Label for data in legend
Graphic Option Commands
 
BORDER              Draws a box around graph
FRAME               Leaves 5% border around graph
GRID                Draw grid on PLOT, LINE, STEP or BAR graph.
HIDE                Removes hidden lines from 3D Bar chart
PERCENTAGES         Include percentages with PIE labels.
STACK               Totals data to see net effect
FILL=(patternlist)  Fills PIE slices and BARs, or marks data points.
COLOR = (colorlist) Specifies colors to use
STYLE = (stylelist) Specifies line styles for PLOT, LINE or STEP.
DATA = valuelist    Specifies data to graph
 
Session Control Commands
 
DONE                Resets graphics output destination
END  [DEBUG]        Leaves this application
QUIT [DEBUG]        Leaves this application
! [ibex]            Executes IBEX command
READ fid            Reads commands from the specified file
STATUS              Displays graphics status
HELP                Provides help of using this application
RESET               Resets all graphics options to defaults
FORM                Use FORMs mode to fill in options.
ENTER               Leave FORMs mode
 
Library Control Commands
 
SAVE                Saves current context on file
LOAD                Restores saved context from file
LIB                 Displays saved contexts
DROP                Deletes saved contexts
 
CHANGES
Syntax:
 
        [(value,value,value,...,value)            ]
DATA =  [(name=value,name=value,...,name=value)   ]
        [READ(subtitle(fid,type,fmt,fmt,fmt),...) ]
 
Parameters:
 
value      is a number.
 
name       is the name to be associated with a data point.
 
subtitle     is the subtitle to be associated with a set of data points.
 
type       indicates the type of data in the specified file, The type must be
one of the following letters: I (integer sbin(36)), F (floating point REAL*4 or
REAL*8) or A (alphanumeric display form).
 
fid        is a full CP-6 file identifier.
 
fmt        is a collection of format specifications which indicate data D (of
type I, F or A), skipped fields X, or labelling A.  The fmt code may be
followed by a number which indicates the number of characters of data to accept
(or skip) for the specification.
 
 
Description:
 
This command is used to enter data to be displayed.  The data may be in the
command input stream, or it may come from a CP-6 file.  The form of input
command used depends upon the type of graphical output being generated.  For
BAR, PIE, LINE and STEP graphs, each value input requires a dataname to be
associated with it and therefore the second or third syntax forms must be used
to enter data for these graphs.  The first syntax form is used to enter data
for PLOT graphics.
 
The last syntax form permits a file to be read and includes a format
specification.  This syntax form may be used to input data for any of the graph
types.
 
 
:DATA ( 1 1  1 2  1.5 3 2 2 2 1 1 1 )
 
This example inputs 6 data points that may be used to generate a PLOT.
 
:DATA (JAN=234,FEB=453,MAR=432,APR=321,MAY=435,JUNE=542)
 
This example inputs 6 data values and associates six labels with those values.
The data labels will be used to label the X-axis if a BAR, LINE or STEP graph
is produced.  The data labels will be used to label the pie slices if a PIE
chart is produced.  A subtitle may be associated with this set of points by
entering a SUBTITLE command after entering this DATA command.
 
:DATA READ( Total(LINE0,A,A,D), Blueberry(LINE1,A,A,D) )
 
This example will cause the data to be read from two files (when a graphics
output command is provided).  The data in the files is in alphanumeric form and
contains a label field followed by a data field in each case.  The fields are
separated by either blanks, commas or equals.  The first set of data will be
subtitled 'Total' and the second set of data will be subtitled 'Blueberry'.  If
subtitles contain special characters or embedded blanks, they must be entered
enclosed in quotes.  The input created by this DATA command will be acceptable
to be displayed as a BAR, LINE, STEP or PIE.
 
When a format is specified, the record may be shorter than implied by the
format and the trailing format specifications are ignored.
 
:data read( Births(BORN1986.STATLIB,A,A12,D5))
 
This example will cause data to be read from a file called BORN1986.STATLIB.
Each record in the file is in alphanumeric form (A) and contains a 12 character
label field (A12) followed by a 5 character data field (D5).
00002
Syntax:
 
DONE
 
Description:
 
This command is used to terminate graphical output to a particular destination.
If graphic output is currently directed to a file, this command may be used to
close the file so that the graphics can be directed to an output device.  For
example:
 
:data (Jan=36,Feb=43,Mar=56,Apr=42)
:title 'Earnings/Share'
:bar over *DIGS
:done                                    "Release file: *DIGS"
:!XG$TEK4105_RU.:LIBRARY *DIGS OVER ME
 
Syntax:
 
DROP name[.acct]
 
Parameters:
 
name    is the name of a GRAF context.
 
acct    is the account containing a GRAF context.
 
Description:
 
The specified GRAF context is deleted.
 
Example:
 
:DROP AccidentRates
AccidentRates saved 09:23  05/24/86
 
:
Syntax:
 
END [DEBUG]
 
Description:
 
This command causes the graphics application to terminate execution.  If the
DEBUG option is specified, the user is left in APL with the graphics
application suspended.  A ")GO" command at this point will resume execution of
the graphics application.
 
If the DEBUG option is not specified, the program exits and the application
returns to the calling program (IBEX if GRAF.X or APL session was invoked from
IBEX).
 
 
:END
!
 
00001
Syntax:
 
Command:  ENTER
 
Description:
 
This command is used to exit FORMs mode.  It is only permitted to be entered as
a FORMs command.
 
!GRAF.X
 Graf A00
 
:TITLE = 'Widget Production'
:XNAME = Monthly
:YNAME = 'Units (thousands)'
:COLOR = (BROWN,WHITE,RED,GREEN,BLUE,YELLOW,ORANGE,DRKGREEN)
:DATA  = READ(1985(STEP0,A,A,D), 1984(STEP2,A,A,D) )
:FILL                "Fill pie slices"
:
:STATUS
TITLE = 'Widget Production'
XNAME = 'Monthly'
YNAME = 'Units (thousands)'
SUBTITLE = '1985'
SUBTITLE = '1984'
FILL
COLOR = (BROWN,WHITE,RED,GREEN,BLUE,YELLOW,ORANGE,DRKGREEN)
DATA = READ( ;
   1985(STEP0,A,A,D);
   1984(STEP2,A,A,D)
     )
:
:PIE                 "Generate a PIE chart"
 
 ** Reading data from file: STEP0
 ** File processing completed after 13 records.
 
 
 ** Reading data from file: STEP2
 ** File processing completed after 13 records.
 
:
:
:DATA  = READ( 1983(STEP1,A,A,D) )     "Read more data from file"
:DATA = (JAN=123,FEB=132,MAR=141,APR=137)   "and input some data"
:SUBTITLE = 1986
:
:STATUS
TITLE = 'Widget Production'
XNAME = 'Monthly'
YNAME = 'Units (thousands)'
SUBTITLE = '1985'
SUBTITLE = '1984'
SUBTITLE = '1983'
SUBTITLE ='1986'
FILL
COLOR = (BROWN,WHITE,RED,GREEN,BLUE,YELLOW,ORANGE,DRKGREEN)
DATA = ;
    (JAN=120,FEB=160,MAR=150,APR=165,MAY=170,JUNE=188,JULY=294,AUG=320,;
     SEP=270,OCT=192,NOV=173,DEC=125)
DATA = ;
    (JAN=30,FEB=32,MAR=31,APR=33,MAY=40,JUNE=45,JULY=47,AUG=120,SEP=112,;
     OCT=50,NOV=35,DEC=30)
DATA = ;
    (JAN=123,FEB=132,MAR=141,APR=137)
DATA = READ( ;
   1983(STEP1,A,A,D)
     )
:
:LINE                "Generate a LINE graph"
 
 ** Reading data from file: STEP1
 ** File processing completed after 13 records.
 
:STEP                "Generate a STEP graph"
:
:
:DATA  = (JAN=375)   "Enter some DUMMY data and"
:SUBTITLE = 'DUMMY'  "Adjust max value so we fix the Y-axis values"
:
:
:BAR                 "Generate a BAR chart"
:END                 "Return to IBEX" !
Syntax:
 
:FILL  [ = (patternlist)  [n] ]
       [ = NO                 ]
 
Parameters:
 
patternlist     is a list of pattern names separated by commas. The following
pattern names are available: SOLID, VERTICAL, HORIZONTAL, CROSS, SLASH,
BACKSLASH, XCROSS and CLEAR.  A pattern name may also be the name of a file
which contains a definition of the pattern in terms of a PIXEL array.
 
n       is an optional integer value which indicates the line separation to be
used when using one of the provided fill patterns.  The default value is 200.
 
Description:
 
If no parameters are present, then one of two fill patterns will be selected
depending upon whether the colors are being used.  If there is no COLOR, the
defaults are:  (CROSS,XCROSS,SLASH,HORIZONTAL,BACKSLASH,VERTICAL,CLEAR).  If
COLOR is being used, the defaults are:
(SOLID,CROSS,XCROSS,SLASH,HORIZONTAL,BACKSLASH,VERTICAL).
 
The patterns specified (or defaulted) are used sequentially when a new fill
pattern is required.  For example, if a PIE command is issued the first fill
pattern will be used for each of the current colors, then the next fill pattern
will be used with each of the current colors.
 
The NO option is used to reset the filling pattern to the defaults.
 
The FILL option is used by the PIE and BAR commands.
 
If any of the specified fill patterns is not in the list of known fill
patterns, then it must the be name of a file.  The first record of the file
must contain all of the characters that are being used to generate the PIXEL
array fill pattern.  (If COLOR is not specified, only two characters may appear
in the file).  The first character is the background color, the second
character is the second color, the third character the third color.  The
remaining lines of the PIXEL definition are the pattern.  A maximum of 100
lines of 100 characters may be specified for the fill pattern.
 
:FILL (CROSS,SLASH,HORIZONTAL)
:STATUS
 
FILL = (CROSS,SLASH,HORIZONTAL)
 
:
 
In this example, there will be three fill patterns used, the first will be
cross hatched by vertical and horizontal lines, the second will be lines at 45
degrees and the third pattern will be horizontal lines.
 
: "Build a PIXEL array"
:!B FISHY
EDIT C01 HERE
 
    1.000  X
    2.000
    3.000
    4.000         XXXXX
    5.000     XXXX     XXXX       XX
    6.000    XX             XX   XX
    7.000  XX                 XXX
    8.000    XX             XX   XX
    9.000     XXXX     XXXX       XX
   10.000         XXXXX
   11.000
   12.000
   13.000
:FILL (FISHY,CROSS)
 
In this example, the pattern defined in the file FISHY will be used as the
first fill pattern and the CROSS pattern will be used for the second pattern.
00001
Syntax:
 
:FONTS  [ NAME | NUMBER ]
 
Description:
 
This command is used to display the names and numbers of the available fonts.
The display may be sorted by either the name of the fonts or by the number of
the fonts.  The default is by font number.
 
Example:
 
:FONTS
  1 SIMPROMMON      2 DUPXROMMON      3 COMPROMMON      4 COMPITCMON
  5 TRIPROMMON      6 TRIPITCMON      7 CARTROMMON      8 SIMPROMPRO
  9 SIMPSCRPRO     10 COMPROMPRO     11 COMPSCRPRO     12 COMPITCPRO
 13 DUPXROMPRO     14 TRIPROMPRO     15 TRIPITCPRO     16 GOTHENGPRO
 17 GOTHGERPRO     18 GOTHITAPRO     19 CARTROMPRO     20 SIMPGRKPRO
 21 COMPGRKPRO     22 COMPCYRPRO     23 ASTRONOMY      24 UPPERMATH
 25 LOWERMATH      26 METEOROLGY     27 MUSIC          28 APLPRO
 29 APLMON
:
Syntax:
 
:FORM
 
Description:
 
This command is used to display the current graphics context in a form which
allows fields (or context variables) to be updated simply by moving to the
specified field and entering the new value.  All of the graphics context with
the exception of the data may be modified in this mode.
 
Moving to the next field is done by typing a TAB (or Control-I), moving to a
previous field is done by typing a Backspace when positioned at the first
character of a field.
 
The form contains the following fields: TITLE, XNAME, YNAME, NOTE, four
subtitle fields, option indicators for: BORDER, FRAME, GRID, STACK, PERCENTAGES
and HIDE; and settings for FILL, COLOR and STYLE.  The last line of the form
contains an error message line which is used to indicate when an entry error
has occured.  The entry must be corrected before any other commands will be
executed.  The first line of the form contains a command field which is used to
enter a command to produce graphics output or leave FORMs mode.
The form displayed in this mode is:
 
                          GRAF A00
 
Command:
 
Title:                                         (13        )
X-Label:                                       (13        )
Y-Label:                                       (13        )
Note:                                          (13        )
 
Subtitle: 1               , 2              , 3              , 4              .
 
Border: N   Frame: N   Grid: N   Percentages: N   Stack: N   Fill: N   Hide: N
 
Fill Patterns:
Line Styles:
Colors:
 
 
-------------------------------------------------------------------------------
Note that the labeling information is followed by a field in parenthesis.  This
field is reserved for the font to be used for this field.  The font may be a
font number or name of a font.
 
The ENTER command is used to exit FORM mode.  The READ and FORM commands may
not be issued in forms mode, nor can any of the Labelling or Graphics option
commands.
 
Example:
 
:FORM
 
                          GRAF A00
 
Command:  BAR3D (55,65) OVER *SALES
 
Title:     Acne Medication Sales               (12        )
X-Label:   1985                                (14        )
Y-Label:   U.S. Dollars                        (14        )
Note:      LCBO 1986                           (13        )
 
Subtitle: 1  Los Angeles  , 2 New York     , 3 London       , 4 Paris        .
 
Border: N   Frame: N   Grid: Y   Percentages: N   Stack: N   Fill: N   Hide: N
 
Fill Patterns:   SOLID,CROSS,XCROSS,BACKSLASH,HORIZONTAL,SLASH,VERTICAL
Line Styles:
Colors:          BLACK,WHITE,RED,GREEN,YELLOW,BLUE,MAGENTA,CYAN
 
 
-------------------------------------------------------------------------------
00003
Syntax:
 
FRAME  [ = {YES/NO}]
 
Description:
 
This command is used to cause a 5% border to be left around the graph.  The
default is NO.
 
Syntax:
 
GRID  [ = {YES/NO}]
 
Description:
 
This command is used to cause a GRID to appear on the graphic output.  Each
labeled position on the Y axis will have a dotted line extending across the
graph.  For PLOT output, each position on the X axis will also have a dotted
line extending across the graph.  The default is NO.
Syntax:
 
HELP [(tool)] [topic [subtopic]]
 
Description:
 
This command is used to obtain this information.  A ? command may then be used
to continue displaying information in the current topic.
 
HIDE
Syntax:
 
HIDE  [ = {YES/NO} ]
 
Description:
 
This command is used to cause the BAR3D graph to remove all hidden lines from
its output.  Many devices obtain acceptable results without removing hidden
lines and hidden line removal is very time consuming.  The default is NO
(hidden lines are not removed).
!
Syntax:
 
LIB [.acct]
 
Parameters:
 
acct    is the account whose saved graphics contexts are to be displayed.
 
Description:
 
This command is used to list the names of the saved GRAF contexts that may be
LOADed.  If an account is not specified, the current file management account is
used.
 
Examples:
 
:LIB
 
CRASHES saved 18:12  07/01/86
AccidentRates saved 09:23  05/24/86
 
:
Syntax:
 
:LINE [OVER fid]
 
This command causes the data entered via the DATA command to be graphically
dislayed in the form of a LINE chart.  The data must have each data point
entered labeled with an X-axis name.  The Y-axis indicates the magnitude of the
values and the X-axis is labelled with the names associated with the data
points.  More than one set of data may be included in the line chart, although
each set must use the same labels and have been entered in the same order.
 
If more than one set of data is being displayed, the SUBTITLE specified for the
DATA entered will be used to label the legend.  If the FILL option is
specified, every datapoint will have a marker placed on it.
 
The STACK option is used to display the total of multiple sets of data and see
the effect that each set makes in the total.
 
The PERCENTAGES option is ignored when preparing this graph.
 
 
:DATA (JAN=234,FEB=453,MAR=432,APR=321,MAY=435,JUNE=542)
:TITLE='Widget Production'
:XNAME=1986
:YNAME=Thousands
:LINE
 
In this example, the production of widgets for the first half of 1986 will be
displayed as a LINE chart.
00001
STYLE
Syntax:
 
LOAD name[.acct]
 
Parameters:
 
name     is the name of the graph context to restore.
 
acct     is the account in which the graph context is to be found.
 
Description:
 
The current settings of all of the graph context variables are restored from
the specified context name in the file :GRAF in the specified account.
 
Example:
 
:STATUS
 
:LOAD CRASHES
CRASHES saved  18:12  07/01/86
 
:STATUS
 
TITLE = 'Crash Test Scores'
XNAME = 'Vehicle Name'
YNAME = 'Velocity'
GRID
 
:
 
Syntax:
 
:NOTE = 'text'  [ (fontid) ]
 
Parameters:
 
fontid      is an optional number (or name) of a graphics font.  The names and
numbers of the available graphics fonts may be displayed by using the FONTS
command.
 
Description:
 
If the note does not contain embedded blanks or special characters quotes are
not required.  If a quote is to appear within the title, it must be doubled.
 
The text entered with this command is positioned at the bottom right corner.
Bruce Frost, LADC
Syntax:
 
:PIE  [OVER fid]
 
This command causes the data entered via the DATA command to be graphically
dislayed in the form of a PIE chart.  The data must have each data point
entered labeled with an X-axis name.  The Y-axis indicates the magnitude of the
values and the X-axis is labelled with the names associated with the data
points.  Up to two sets of data may be included in the pie chart,
 
If more than one set of data is being displayed, the SUBTITLE specified for the
DATA entered will be used to label the pie charts.  If the FILL option is
specified, each pie slice will be filled with a different color (if sufficient
colors are available or with different shading patterns).  The FILL patterns
specified by the fill command are used cyclically.
 
If the first character of a data point name is '*', the slice associated with
that point will be slightly removed and the initial '*' will not be displayed.
If the PERCENTAGES option is specified, the name of the slice will be followed
by the percentage of the pie associated with that slice.
 
The GRID, XNAME and YNAME options are not used when producing a PIE chart.
 
 
:DATA (JAN=234,FEB=453,MAR=432,APR=321,MAY=435,JUNE=542)
:TITLE='Widget Production'
:SUBTITLE 'Monthly Production'
:PIE
 
In this example, the production of widgets for the first half of 1986 will be
displayed as a PIE chart.
00001
Syntax:
 
:PLOT [OVER fid]
 
This command causes the data entered via the DATA command to be graphically
dislayed in the form of a graph of X-Y values.  The data must have been entered
in X,Y pairs.  More than one set of data points may be included in a graph and
the SUBTITLE entered with the set of data is used to label the graph type on
the legend.  The grid option is used to draw lines from the labeled axis
positions across the entire graph.
 
If more than one set of data is being displayed, the SUBTITLE specified for the
DATA entered will be used to label the legend.  If the FILL option is
specified, every datapoint will have a marker placed on it.
 
The PERCENTAGES option is ignored when preparing this graph.
 
 
:DATA (1,234 2,453 3,432 4,321 5,435 6,542)
:TITLE='Widget Production'
:XNAME=1986
:YNAME=Thousands
:PLOT
 
In this example, the production of widgets for the first half of 1986 will be
displayed as a PLOT chart.
00001
END
Syntax:
 
READ fid
 
Parameters:
 
fid    is the name of a file to be used to input commands.
 
Description:
 
This command is used to direct input from another source.  By default, input
comes from the terminal (online) or the command stream (batch).  An input fid
may be specified when invoking this tool or via a READ command.
 
Example:
 
:READ WIDGET_BAR
 
Syntax:
 
:RESET
 
Description:
 
This command is used to reset all of the graphics parameters to their defaults.
All of the data entered is forgotten along with labeling and option
information.  Only the COLOR options are retained through a RESET.
 
 
:RESET
 
00001
Syntax:
 
SAVE name[.acct]
 
Parameters:
 
name     is the name of the saved graph context.
 
acct     is the account in which the graph context is to be saved.
 
Description:
 
The current settings of all of the graph variables are written to the file
:GRAF in the specified account and may be referenced by the name specified.
 
Example:
 
:Title = 'Crash Test Scores'
:XNAME = 'Vehicle Name'
:YNAME = 'Velocity'
:GRID
:SAVE CRASHES
CRASHES saved  18:12  07/01/86
:
 
Syntax:
 
STACK  [ = {YES/NO} ]
 
Description:
 
This command is used to cause the data displayed by the BAR chart, LINE and
STEP graphs to be stacked up.  This is usefull when the amount for each item is
used to display a total for all items.
Syntax:
 
:STATUS
 
Description:
 
This command may be used to display the current graphics options (or context).
The RESET command may be used to set all graphics options to their defaults.
The output of the status command contains all of the commands that would need
to be issued to obtain the current graphics options.
 
 
:STATUS
TITLE='Widget Production'
BORDER
FILL
SUBTITLE = '1985'
SUBTITLE = '1986'
DATA = READ( ;
   1985(WIDGET85,A,A,D);
   1986(WIDGET86,A,A,D)
   )
 
00001
Syntax:
 
:STEP [OVER fid]
 
This command causes the data entered via the DATA command to be graphically
dislayed in the form of a STEP chart.  The data must have each data point
entered labeled with an X-axis name.  The Y-axis indicates the magnitude of the
values and the X-axis is labelled with the names associated with the data
points.  More than one set of data may be included in the step chart, although
each set must use the same labels and have been entered in the same order.
 
If more than one set of data is being displayed, the SUBTITLE specified for the
DATA entered will be used to label the legend.  If the FILL option is
specified, every datapoint will have a marker placed on it.
 
The STACK option is used to display the total of multiple sets of data and see
the effect that each set makes in the total.
 
The PERCENTAGES option is ignored when preparing this graph.
 
 
:DATA (JAN=234,FEB=453,MAR=432,APR=321,MAY=435,JUNE=542)
:TITLE='Widget Production'
:XNAME=1986
:YNAME=Thousands
:STEP
 
In this example, the production of widgets for the first half of 1986 will be
displayed as a STEP chart.
00001
Syntax:
:STYLE = (style-list)
 
Parameters:
 
style-list    is a list of line styles separated by commas.  The
basic line styles are: SOLID, DOT, SDASH, DASH, MDASH and LDASH.
The space between dots or dashes may be increased by ending the
style with a number in the range 1-4 such as: DASH1 or DOT4.
Combinations of DOTs and DASHes are available such as: DASH-DOT
or LDASH-DASH.
 
Description:
 
If no parameters are present, then a single line style of SOLID
is selected.  Otherwise, each set of data graphed by a LINE, STEP
or PLOT command cycles through the list of line-styles starting
with the first line style.
 
 
:STYLE (SOLID,DASH,LDASH-DOT)
 
In this example, three line styles are selected.  The first line is a solid,
the next is a dash and the last is a long dash followed by a dot.
 
Syntax:
 
:SUBTITLE = 'text'
 
Description:
 
If the title does not contain embedded blanks or special characters quotes are
not required.  If a quote is to appear within the title, it must be doubled.
 
The text entered with this command is positioned below the title in the legend
to indicate the names of the sets of data being displayed.  For PIE charts, the
subtitle is displayed below the pie associated with the data.
 
This command is used to name data that has been entered from the terminal by
the DATA command.  When the READ option of the DATA command is used, the
subtitle name is included in the command and a SUBTITLE command is not
necessary.
Syntax:
 
:TITLE = 'YourTitle' [ (fontid) ]
 
Parameters:
 
fontid      is an optional number (or name) of a graphics font.  The names and
numbers of the available graphics fonts may be displayed by using the FONTS
command.
 
Description:
 
If the title does not contain embedded blanks or special characters, quotes are
not required.  If a quote is to appear within the title, it must be doubled.
 
The text entered for the title is positioned at the top center of the graph.
 
GRAF.X
AID=GRAPHICS
CHARTING
TOOL=GRAF
Creates various kinds of graphs using a simple command language.
Syntax:
 
:XNAME = 'text'  [ (fontid) ]
 
Parameters:
 
fontid      is an optional number (or name) of a graphics font.  The names and
numbers of the available graphics fonts may be displayed by using the FONTS
command.
 
Description:
 
If the label does not contain embedded blanks or special characters quotes are
not required.  If a quote is to appear within the title, it must be doubled.
 
The text entered with this command is positioned below the X-axis.  It only
appears on graphs in which there is an axis (LINE, BAR, BAR3D, STEP and PLOT).
Syntax:
 
:YNAME = 'text'  [ (fontid) ]
 
Parameters:
 
fontid      is an optional number (or name) of a graphics font.  The names and
numbers of the available graphics fonts may be displayed by using the FONTS
command.
 
Description:
 
If the label does not contain embedded blanks or special characters quotes are
not required.  If a quote is to appear within the title, it must be doubled.
 
The text entered with this command is positioned to the left of the Y-axis.  It
only appears on graphs in which there is an axis (LINE, BAR, BAR3D, STEP and
PLOT).
CHANGES
