/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
BAT: PROC MAIN;
%INCLUDE CP_6;
%INCLUDE B_ERRORS_C;
%INCLUDE B$JIT;
%INCLUDE AS_SUPER_C;
 
 
%FPT_OPEN (FPTN=OPEN_SI,
            FUN = IN,
            CTG = YES,
            SHARE = ALL,
            ASN = FILE,
            NAME = VLP_NAME,
            ACCT = VLP_MAIL,
            DCB = M$SI);
%VLP_NAME (FPTN = VLP_NAME,
            NAME = ':USERS');
%VLP_ACCT (FPTN = VLP_MAIL,
            ACCT = ':SYS');
 
%FPT_OPEN (FPTN = OPEN_OU,
            FUN = CREATE,
            CTG = YES,
            SHARE = ALL,
            ASN = FILE,
            NAME = OU_NAME,
            DCB = M$OU);
%VLP_NAME (FPTN = OU_NAME,
            NAME = 'USERS_BANNERS');
 
%FPT_WRITE (FPTN = WRITE_OU,
            DCB = M$OU,
            BUF = OU_BUF);
%FPT_WRITE (FPTN = WRITE_TERM,
            DCB = M$OU,
            BUF = OU_BUF);
%FPT_READ (FPTN = USERS_REC,
            KEYS = YES,
            DCB = M$SI,
            KEYR = NO,
            BUF = IN_BUF,
            KEY = KEYBUF);
%FPT_READ (FPTN = READ_SEQ,
            KEYS = NO,
            DCB = M$SI,
            KEYR = YES,
            BUF = IN_BUF,
            KEY = KEYBUF);
 
%FPT_CLOSE (FPTN = CLOSE_SI,
            DCB = M$SI);
%FPT_CLOSE (FPTN = CLOSE_OU,
            DCB = M$OU);
 
 
%F$DCB;
%B$ALT;
%B$TCB;
DCL B$TCB$ PTR SYMREF;
%AS_USERS (STR_NAME = IN_BUF, STCLASS = STATIC );
DCL M$SI$ PTR ALIGNED;
 
DCL M$SI DCB;
DCL M$OU DCB;
DCL I UBIN WORD ALIGNED;
DCL J UBIN WORD ALIGNED;
DCL NUM_FIELDS UBIN WORD ALIGNED;
DCL FIELD_WIDTH UBIN WORD ALIGNED;
DCL BANLEN UBIN WORD ALIGNED;
DCL PAGE_WIDTH UBIN WORD ALIGNED;
DCL ENTRY_SPACE UBIN BYTE ALIGNED STATIC INIT (3);
DCL LAST UBIN WORD ALIGNED;
DCL TMPCHR CHAR (1) CALIGNED STATIC;
DCL OU_BUF CHAR (255) CALIGNED STATIC;
DCL BANNERTEXT CHAR (80) CALIGNED STATIC;
DCL TEMP CHAR (31) STATIC;
DCL JITCAR CHAR (1) ALIGNED;
DCL 1 ACCOUNT CALIGNED STATIC,
   2 COUNT UBIN BYTE INIT (8) UNAL,
   2 TEXT CHAR (8) UNAL;
DCL 1 UNAME CALIGNED STATIC,
   2 COUNT UBIN BYTE INIT (12) UNAL,
   2 TEXT CHAR (12) UNAL;
DCL 1 KEYBUF CALIGNED STATIC,
      2 COUNT UBIN BYTE INIT (20) UNAL,
      2 TEXT CHAR (20) UNAL;
DCL END_OF_FILE BIT (1) ALIGNED;
DCL THROUGH BIT (1) ALIGNED;
DCL TABLE BIT (1) ALIGNED;
DCL FIRST BIT (1) ALIGNED;
DCL TEXTS (0:9) BIT (1) UNAL;
DCL ALLON REDEF TEXTS BIT (10) UNAL;
DCL B$JIT$ PTR SYMREF;
 
CALL M$OPEN (OPEN_SI);   /* THIS WILL POINT TO :USERS FILE */
CALL M$OPEN (OPEN_OU);   /* THIS WILL POINT TO ME */
M$SI$ = DCBADDR (DCBNUM (M$SI));
 
 
CALL INDEX (I, ' ', B$JIT.CCBUF);
DO WHILE ((I < 80) AND SUBSTR (B$JIT.CCBUF, I, 1) ~= '(' );
   I = I + 1;
   END;
 
IF (I >= 80)
THEN DO;
   ALLON = '1111111111'B;
   TABLE = '0'B;
   PAGE_WIDTH = 255;
   END;
ELSE DO;
 
   ALLON = '1111111111'B;
   TABLE = '0'B;
   FIRST = '1'B;
   I = I + 1;
   LAST = 99;
   PAGE_WIDTH = 255;
   DO J = I TO B$JIT.CCARS;
 
      JITCAR = SUBSTR (B$JIT.CCBUF, J, 1);
      DO SELECT ( JITCAR );
         SELECT ('1');
            IF FIRST
            THEN DO;
               FIRST = '0'B;
               ALLON = '0000000000'B;
               END;
            TEXTS (1) = '1'B;
            IF THROUGH THEN CALL DO_THRU;
            LAST = 1;
            THROUGH = '0'B;
         SELECT ('2');
            IF FIRST
            THEN DO;
               FIRST = '0'B;
               ALLON = '0000000000'B;
               END;
            TEXTS (2) = '1'B;
            IF THROUGH THEN CALL DO_THRU;
            LAST = 2;
            THROUGH = '0'B;
         SELECT ('3');
            IF FIRST
            THEN DO;
               FIRST = '0'B;
               ALLON = '0000000000'B;
               END;
            TEXTS (3) = '1'B;
            IF THROUGH THEN CALL DO_THRU;
            LAST = 3;
            THROUGH = '0'B;
         SELECT ('4');
            IF FIRST
            THEN DO;
               FIRST = '0'B;
               ALLON = '0000000000'B;
               END;
            TEXTS (4) = '1'B;
            IF THROUGH THEN CALL DO_THRU;
            LAST = 4;
            THROUGH = '0'B;
         SELECT ('5');
            IF FIRST
            THEN DO;
               FIRST = '0'B;
               ALLON = '0000000000'B;
               END;
            TEXTS (5) = '1'B;
            IF THROUGH THEN CALL DO_THRU;
            LAST = 5;
            THROUGH = '0'B;
         SELECT ('6');
            IF FIRST
            THEN DO;
               FIRST = '0'B;
               ALLON = '0000000000'B;
               END;
            TEXTS (6) = '1'B;
            IF THROUGH THEN CALL DO_THRU;
            LAST = 6;
            THROUGH = '0'B;
         SELECT ('7');
            IF FIRST
            THEN DO;
               FIRST = '0'B;
               ALLON = '0000000000'B;
               END;
            TEXTS (7) = '1'B;
            IF THROUGH THEN CALL DO_THRU;
            LAST = 7;
            THROUGH = '0'B;
         SELECT ('8');
            IF FIRST
            THEN DO;
               FIRST = '0'B;
               ALLON = '0000000000'B;
               END;
            TEXTS (8) = '1'B;
            IF THROUGH THEN CALL DO_THRU;
            LAST = 8;
            THROUGH = '0'B;
         SELECT ('9');
            IF FIRST
            THEN DO;
               FIRST = '0'B;
               ALLON = '0000000000'B;
               END;
            TEXTS (9) = '1'B;
            IF THROUGH THEN CALL DO_THRU;
            LAST = 9;
            THROUGH = '0'B;
         SELECT ('T');
            J = J + 1;
            DO WHILE ((SUBSTR (B$JIT.CCBUF, J, 1) = 'A') OR
                      (SUBSTR (B$JIT.CCBUF, J, 1) = 'B') OR
                      (SUBSTR (B$JIT.CCBUF, J, 1) = 'L') OR
                      (SUBSTR (B$JIT.CCBUF, J, 1) = 'E'));
               J = J + 1;
               END;
            TABLE = '1'B;
            J = J - 1;
         SELECT ('J');
            J = J + 1;
            DO WHILE ((SUBSTR (B$JIT.CCBUF, J, 1) = 'C') OR
                      (SUBSTR (B$JIT.CCBUF, J, 1) = 'L'));
               J = J + 1;
               END;
            J = J - 1;
            TABLE = '0'B;
         SELECT ('W');
            J = J + 1;
            PAGE_WIDTH = 0;
            DO WHILE ((SUBSTR (B$JIT.CCBUF, J, 1) ~= ',') AND
                      (SUBSTR (B$JIT.CCBUF, J, 1) ~= ' ') AND
                      (SUBSTR (B$JIT.CCBUF, J, 1) ~= ')'));
               IF (SUBSTR (B$JIT.CCBUF, J, 1) = '=') THEN J = J + 1;
               CALL CHARBIN (I, SUBSTR(B$JIT.CCBUF, J, 1) );
               J = J + 1;
               IF (I <= 9)
               THEN DO;
                  PAGE_WIDTH = (PAGE_WIDTH * 10) + I;
                  END;
               END; /* DO WHILE */
            J = J - 1;
            IF (PAGE_WIDTH = 0) THEN PAGE_WIDTH = 255;
            IF (PAGE_WIDTH > 255) THEN PAGE_WIDTH = 255;
         SELECT ('-');
            THROUGH = '1'B;
         SELECT (',');
         SELECT (')');
            J = 999; /* FORCE J BIG TO CAUSE EXIT FROM LOOP */
         SELECT (ELSE);
         END;  /* DO SELECT */
      END;   /* DO J = ... */
   END;  /* ELSE DO */
/* END OF INPUT PARSING... */
 
KEYBUF.COUNT = 1;
KEYBUF.TEXT = ' ';   /* START AT BEGINING OF FILE. */
END_OF_FILE = '0'B;
 
IF TABLE
THEN DO;
   OU_BUF = 'ACCOUNT  UNAME';
   NUM_FIELDS = 0;
   DO I = 1 TO 9;
      IF TEXTS(I) THEN NUM_FIELDS = NUM_FIELDS + 1;
      END;
   /* PAGE_WIDTH - 20 FOR THE ACCT, UNAME PLUS ENTRY_SPACE */
   I = PAGE_WIDTH - 20 - ENTRY_SPACE;
   FIELD_WIDTH = (I - (NUM_FIELDS * ENTRY_SPACE)) / NUM_FIELDS;
   J = 20 + ENTRY_SPACE;
      /* J IS WHERE THE FIRST ENTRY STARTS */
   DO I = 1 TO 9;
      IF TEXTS (I)
      THEN DO;
         CALL BINCHAR (TMPCHR, I);
         CALL CONCAT (TEMP, 'BANNERTEXT', TMPCHR);
         CALL INSERT (OU_BUF, J, FIELD_WIDTH, TEMP);
         J = J + FIELD_WIDTH + ENTRY_SPACE;
         END;
      END;
   CALL M$WRITE (WRITE_OU) ALTRET (UNKNOWN);
   END;
ELSE DO;
   OU_BUF = '!SUPER';
   CALL M$WRITE (WRITE_OU) ALTRET (UNKNOWN);
   END;
 
CALL M$READ (USERS_REC)   /* GET THE FIRST RECORD */
WHENRETURN DO;
   /* OH SHIT, I SHOULDN'T HAVE EVER GOTTEN HERE */
   RETURN;
   END; /* WHENRETURN ON THE KEYED READ */
WHENALTRETURN DO;
   DO WHILE (NOT END_OF_FILE);
      CALL M$READ (READ_SEQ)
      WHENRETURN DO;
         IF TABLE
         THEN DO;
            CALL PUT_TABLE ALTRET (UNKNOWN);
            END;
         ELSE DO;
            CALL PUT_JCL ALTRET (UNKNOWN);
            END;
         END; /* WHENRETURN ON READ_SEQ */
      WHENALTRETURN DO;
         IF (B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$EOF)
         THEN DO;
            END_OF_FILE = '1'B;
            END;
         END; /* WHENALTRETURN */
      END; /* DO WHILE */
   END;
 
GOTO FIN;
 
UNKNOWN:   ;
   OU_BUF = 'SOMETHING WENT WRONG WITH AN M$WRITE, GOODBYE!';
   CALL M$WRITE (WRITE_TERM) ALTRET (FIN);
 
FIN: ;
 
CALL M$CLOSE (CLOSE_SI);
CALL M$CLOSE (CLOSE_OU);
 
   /****************************  DO_THRU ROUTINE *****************/
DO_THRU: PROC;
DCL ASCINP UBIN;
DCL I UBIN;
 
CALL CHARBIN (ASCINP, SUBSTR (B$JIT.CCBUF, J, 1));
IF LAST = ASCINP THEN RETURN;
IF LAST = 99 THEN RETURN;  /* THROUGH WITH NO START */
IF (LAST > ASCINP)
THEN DO;
   DO I = ASCINP TO LAST;
      TEXTS (I) = '1'B;
      END;
   END;
ELSE DO;
   DO I = LAST TO ASCINP;
      TEXTS (I) = '1'B;
      END;
   END;
RETURN;
END DO_THRU;
   /*************************GET_BANNERTEXT ROUTINE ****************/
GET_BANNERTEXT: PROC (I) ;
 
DCL I UBIN;
DCL OFFSET UBIN WORD ALIGNED;
DCL TXT$ PTR;
DCL TEXT CHAR (80) BASED (TXT$);
 
BANNERTEXT = ' ';
BANLEN = 0;
IF I = 0 THEN RETURN;
IF I > 9 THEN RETURN;
IF (IN_BUF.BANNER (I) = -1) THEN RETURN;
OFFSET = IN_BUF.BANNER (I);
BANLEN = IN_BUF.SETUP_CHRA.TXT_UBIN (OFFSET);
TXT$ = PINCRB (ADDR (IN_BUF.SETUP_CHRA.TXT_UBIN (OFFSET)), 1);
BANNERTEXT = SUBSTR (TEXT, 1, BANLEN);
RETURN;
END GET_BANNERTEXT;
 
   /**************************** PUT_TABLE ROUTINE ****************/
PUT_TABLE: PROC ALTRET;
 
DCL I UBIN;
DCL J UBIN;
 
OU_BUF = ' ';
OU_BUF = IN_BUF.ACCT;
CALL INSERT (OU_BUF, 9, 12, IN_BUF.NAME);
 
J = 20 + ENTRY_SPACE;
DO I = 1 TO 9;
   IF (TEXTS (I))
   THEN DO;
      CALL GET_BANNERTEXT (I);
      CALL INSERT (OU_BUF, J, FIELD_WIDTH, BANNERTEXT);
      J = J + FIELD_WIDTH + ENTRY_SPACE;
      END;
   END;
CALL M$WRITE (WRITE_OU) ALTRET (ALTRETWRIT);
RETURN;
 
ALTRETWRIT: ;
ALTRETURN;
END PUT_TABLE;
 
   /****************************  PUT_JCL ROUTINE ******************/
PUT_JCL: PROC ALTRET;
 
DCL I UBIN;
DCL ALT_FLAG CHAR (1);
 
IF (IN_BUF.NAME = ' ') THEN IN_BUF.NAME = '?';
CALL CONCAT (OU_BUF, 'M ', IN_BUF.ACCT, ',', IN_BUF.NAME);
CALL M$WRITE (WRITE_OU) ALTRET (WRITE_ALT);
 
DO I = 1 TO 9;
   IF (TEXTS (I))
   THEN DO;
      CALL BINCHAR (TMPCHR, I);
      CALL GET_BANNERTEXT (I);
      IF (IN_BUF.BANNER_PERM (I))
      THEN DO;
         ALT_FLAG = 'U';
         END;
      ELSE DO;
         ALT_FLAG = 'A';
         END;
      CALL CONCAT (OU_BUF, 'BANNERTEXT', TMPCHR, ' = ''',
            SUBSTR (BANNERTEXT, 0, BANLEN), ''',', ALT_FLAG);
      CALL M$WRITE (WRITE_OU) ALTRET (WRITE_ALT);
      END;
   END;
OU_BUF = ' ';
CALL M$WRITE (WRITE_OU) ALTRET (WRITE_ALT);
RETURN;
 
WRITE_ALT: ;
ALTRETURN;
END PUT_JCL;
END BAT;
