*
*  INDEXR is the general form of PL6's INDEX1R and INDEX2R built-in routines.
*  By Chris Weber @Bucknell
*
*     DCL INDEXR ENTRY(4) CONV(0) ALTRET;
*       ...
*     CALL INDEXR (index, pattern, string [,start])
*       [WHENRETURN DO; ... END;] [WHENALTRETURN DO; ... END;]
*
PR0    EQU     0
PR1    EQU     1
PR2    EQU     2
PR3    EQU     3
*
       ENTDEF  INDEXR
*
INDEXR LDQ     2,,PR1          pattern descriptor
       TSX2    GETLEN
       EAX3    0,QL            $X3=len(pattern)
*
       LDX2    0,,PR1          get parameter count
       CMPX2   4,DU            param count < 4 (i.e., no start)?
       TMI     USE_LEN         yup, use len(string)
*
       LDP3    3,,PR0          get
       LDQ     0,,PR3            start
       TRA     GOGOGO
*
USE_LEN LDQ    3,,PR1          get
       TSX2    GETLEN            len(string)
*
GOGOGO LDP1    0,,PR0          $PR1=^index
       LDP3    1,,PR0          $PR3=^pattern
       LDP0    2,,PR0          $PR0=^string
*
       STQ     0,,PR1
       CMPX3   1,DU
       TMI     1,X1            len(pattern)<1 => return
       CMPX3   2,DU
       TPNZ    DO_LONG         len(pattern)>2 => long pattern
       TZE     DO_SCDR         len(pattern)=2 => SCDR
*
*  len(pattern)=1, so just SCMR
*
       SCMR    (1,1,,),(1,,,),0
       ADSC9   0,,Q,PR0
       ADSC9   0,,,PR3
       ARG     0,,PR1
*
       TTN     0,X1            no match
       SBQ     0,,PR1          calculate
       SBQ     1,DL              index
       STQ     0,,PR1
       TRA     1,X1
*
*  len(pattern)=2, so SCDR should do the trick
*
DO_SCDR SCDR   (1,1,,),(1,,,)
       ADSC9   0,,Q,PR0
       ADSC9   0,,,PR3
       ARG     0,,PR1
*
       TTN     ALTRET          couldn't find pattern
       SBQ     0,,PR1          make
       SBQ     2,DL              index
       STQ     0,,PR1          poke it in
       TRA     1,X1            return
*
*  len(pattern)>2
*
DO_LONG SXL3   0,,PR1          calculate
       EAA     2,QL              starting
       ARL     18
       SBA     0,,PR1              length
*
AGAIN  CMPA    2,DL            any more to do?
       TMI     ALTRET          nah--go away mad
*
       SCDR    (1,1,,),(1,,,)
       ADSC9   0,,A,PR0
       ADSC9   0,,,PR3
       ARG     0,,PR1
*
       TTN     ALTRET          nobody home
       SBA     0,,PR1          make starting index
       SBA     2,DL              for compare
*
       CMPC    (1,1,,A),(1,1,,)
       ADSC9   0,,X3,PR0
       ADSC9   0,,X3,PR3
*
       TNZ     *+3             didn't find pattern yet
       STA     0,,PR1
       TRA     1,X1            back to caller
*
       ADA     1,DL            adjust string length
       TRA     AGAIN
*
*  Common altret handler
*
ALTRET STQ     0,,PR1
       TRA     0,X1
*
*  Procedure GETLEN to return length of character string parameters.
*  Enter with parameter descriptor in $Q.
*
GETLEN ANQ     =O217777,DL     length & indirect flag
       CANQ    =O200000,DL     indirect length?
       TZE     0,X2            nope, we've got it
*
       QLS     23              get
       QRL     5                 descriptor
       ADQ     0,,PR1              extension
       LDQ     =O600001,QU,PR1       word
*
       CANQ    =O400000,DU     still indirect?
       TNZ     *+3             yes
       ANQ     =O777777,DL     remove any garbage
       TRA     0,X2            return
*
       CANQ    =O200000,DU     length in auto stack?
       TZE     *+3             no--static
       LDQ     0,QL,PR2        get length for real
       TRA     0,X2
*
       LDQ     0,QL            grab length from static
       TRA     0,X2
*
*
       END
