/*M* XELA - un-ALEX's a ALEX dribble file */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1990    */
/*T*                                                         */
/*T***********************************************************/
/*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
%SET LISTSUB='1'B;
 
XELA: PROC MAIN;
%INCLUDE CP_6;
%INCLUDE B_ERRORS_C;
%F$DCB;
%B$TCB;
%B$ALT;
DCL B$TCB$ PTR SYMREF;
DCL OUTX SBIN;
DCL VFC CHAR(1);
DCL CONT BIT(1);
DCL INBUF(0:255) CHAR(1) STATIC;
DCL OUTBUF(0:255) CHAR(1) STATIC;
DCL OUTBUFC REDEF OUTBUF CHAR(256);
DCL M$SI$ PTR;
DCL M$OU$ PTR;
DCL M$SI DCB;
DCL M$OU DCB;
%FPT_READ (BUF=INBUF,DCB=M$SI);
%FPT_WRITE (BUF=OUTBUF,DCB=M$OU);
%FPT_CLOSE (DCB=M$OU,DISP=SAVE);
%EQU BS=BITBIN('010'O);
%EQU LF=BITBIN('012'O);
%EQU CR=BITBIN('015'O);
%EQU DEL=BITBIN('177'O);
DCL INCH UBIN STATIC INIT(0);
DCL 1 INC REDEF INCH,
         2 * BIT(27),
         2 H CHAR(1);
     M$SI$=DCBADDR(DCBNUM(M$SI));
     M$OU$=DCBADDR(DCBNUM(M$OU));
     OUTX=0;
     OUTBUFC=' ';
     DO WHILE('1'B);
          CONT=FPT_READ.V.DVBYTE.CONT#;
          CALL M$READ (FPT_READ)
          WHENRETURN DO;
               FPT_READ.V.DVBYTE.CONT#='0'B;
             END;
          WHENALTRETURN DO;
               IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF
               THEN DO;
                    CALL WRITEIT;
                    CALL M$CLOSE (FPT_CLOSE) ALTRET(XXX);
                    RETURN;
                  END;
               ELSE IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD
                    THEN FPT_READ.V.DVBYTE.CONT#='1'B;
                    ELSE
XXX:                     CALL M$MERC;
             END;
          IF NOT CONT THEN DO;
               VFC=INBUF(0);
               IF M$SI$->F$DCB.DVBYTE.VFC# AND
                    (VFC='@' AND M$SI$->F$DCB.DVBYTE.TRANS# OR VFC='A') THEN EXIT;
               FPT_READ.V.DVBYTE.CONT#='0'B;
               VFC=BINASC(0);
             END;
          IF VFC='@' OR CONT THEN
               CALL MOVEIT;
          ELSE IF VFC='A' THEN
               DO;
                    CALL MOVEIT;
                    CALL WRITEIT;
                    OUTX=0;
                  END;
        END;
/**/
/**/
MOVEIT: PROC;
DCL INX SBIN;
     DO INX=1-BITBIN(CONT) TO M$SI$->F$DCB.ARS#-1;
          INC.H=INBUF(INX);
          INCH=MOD(INCH,128);
          DO SELECT(INCH);
          SELECT(%BS);
             IF OUTX>0 THEN OUTX=OUTX-1;
          SELECT(%LF);
             CALL WRITEIT;
          SELECT(%CR);
             OUTX=0;
          SELECT(%DEL);
             ;
          SELECT(ELSE);
             IF INCH>=ASCBIN(' ')
             THEN DO;
                  IF OUTX>255 THEN IF INCH=ASCBIN(' ') THEN EXIT;
                       ELSE DO;
                            CALL WRITEIT;
                            OUTX=0;
                          END;
                  OUTBUF(OUTX)=INC.H;
                  OUTX=OUTX+1;
                END;
          END;
        END;
END MOVEIT;
/**/
/**/
WRITEIT: PROC;
DCL ENDX SBIN;
     ENDX=255;
     DO WHILE(OUTBUF(ENDX)=' ' AND ENDX>0);
          ENDX=ENDX-1;
        END;
     IF ENDX>0 THEN FPT_WRITE.BUF_.BOUND=ENDX;
     ELSE FPT_WRITE.BUF_=VECTOR(NIL);
     CALL M$WRITE(FPT_WRITE)
     WHENALTRETURN DO;
          CALL M$MERC;
        END;
     OUTBUFC=' ';
     FPT_WRITE.BUF_=VECTOR(OUTBUF);
     RETURN;
END WRITEIT;
END XELA;
