/*M*  WOODPECKER - Displays output destined for user's WOO   */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
/*                                                           */
/*    WOODPECKER peeks at all the output for all account     */
/*       which are destined for the user's WOO. Like DISPO   */
/*       with WOODPECKER having PRIV = DISPJOB.              */
/*                                                           */
/*    WOODPECKER was created from code extracts from PEEK.X  */
/*      written by Dennis Griesser Feb 1980 and modified by: */
/*            Chip Sands, October  1981.                     */
/*                                                           */
/*************************************************************/
%EJECT;
WOODPECKER: PROC MAIN;
%INCLUDE CP_6;
%INCLUDE CP_6_SUBS;
%INCLUDE B$JIT;
%INCLUDE B_ERRORS_C;
%INCLUDE XU_MACRO_C;
 
%B$TCB;
%B$ALT;
%B$EXCFR;
%FPT_INT       (UENTRY = INTED);
%FPT_XCON      (UENTRY = INTED);
%FPT_WRITE     (DCB = M$LO,
                    BUF = DETAIL_BUF);
%FPT_JOBSTATS  (FPTN=FPT_STATS,
                    STCLASS=STATIC,
                    CRITERIA = VLP_CRITERIA,
                    ORDER=SRCH,
                    OUTPUT=YES,
                    RESULTS=VLR_JO);
%VLP_CRITERIA  (ACCT = '        ');
%FPT_PRIV     (FPTN=FPT_PRIV_DISPJOB,
                    AUTH=NO,
                    PRIV=%PR_DISPJOB#);
%VLR_JOBSTATS_OSRCH (FPTN=VLR_JO,
                    NFIL = 1000);
%VLA_JOBSTATS_OSRCH (FPTN=VLA_JO,
                    STCLASS="BASED(OUT$)");
%PARSE$SYM     (NAME = PAR$SYM);
%PARSE$OUT     (NAME = PAR$OUT);
%P_PCB         (NAME = WOO_PCB,
                    T = WSN_AREA,
                    N# = 10,
                    W = PARSE_AREA,
                    WSZ = 100,
                    R = WSN_NODE);
%EJECT;
DCL X$PARSE ENTRY (1) ALTRET;
DCL 1 PARSE_AREA (0:99) STATIC SYMDEF,
         2 * UBIN WORD;
DCL WSN_NODE UBIN WORD SYMREF;
DCL BLK$ PTR;
DCL WSN_AREA CHAR (10) STATIC;
DCL WSN_TEMP CHAR (10) BASED (WSN$);
DCL WSN$ PTR STATIC INIT (ADDR (NIL));
DCL NOT_ALLOWED CHAR (0) STATIC INIT
    ('** Account only permited to see output @');
DCL INTED ENTRY ASYNC;
DCL 1 HEADING_INIT STATIC,
         2 * CHAR(0) INIT ('SYSID     NAME') UNAL,
         2 ACC CHAR(0) INIT ('.ACCT   ') UNAL,
         2 * CHAR(0) INIT ('     FORM         COPIES DEV  WSN      GRAN STATUS    PRIO') UNAL;
DCL 1 HEADING REDEF HEADING_INIT CHAR (80);
DCL 1 OUTPUT STATIC,
         2 SYSID CHAR (6) UNAL,
         2 NUM_SEP CHAR(1) UNAL,
         2 NUMBER CHAR(2) UNAL,
         2 * CHAR (1) UNAL,
         2 NAME CHAR (16) UNAL,
         2 C CHAR (1) UNAL,
         2 FORM CHAR (12) UNAL,
         2 * CHAR (1) UNAL,
         2 COPIES CHAR (6) UNAL,
         2 * CHAR (1) UNAL,
         2 DEV CHAR (2) UNAL,
         2 DEV_NAME CHAR (2) UNAL,
         2 * CHAR (1) UNAL,
         2 WSN CHAR (8) UNAL,
         2 * CHAR (1) UNAL,
         2 GRAN CHAR (4) UNAL,
         2 * CHAR (1) UNAL,
         2 STATUS CHAR (9) UNAL,
         2 * CHAR (1) UNAL,
         2 PRIO CHAR (4) UNAL;
DCL 1 DETAIL_LINE REDEF OUTPUT CHAR (80);
DCL 1 B$JIT$ PTR SYMREF;
DCL 1 OUT$ PTR;
DCL PRINT_COUNT UBIN STATIC;
DCL TEMP_NAME CHAR(9) STATIC;
DCL TEMP_ACCT CHAR(8) STATIC;
DCL PERIOD CHAR(1) STATIC INIT ('.');
DCL SEARCH_WSN CHAR (8) STATIC;
DCL M$LO DCB;
DCL DETAIL_BUF CHAR (80) STATIC;
DCL FOUND_SOME BIT (1) STATIC INIT ('0'B);
DCL 1 B$TCB$ PTR SYMREF;
DCL NIX UBIN WORD WALIGNED STATIC;
%EJECT;
PEEK_O_WOO: PROC;
     CALL INDEX1 (NIX,'@',B$JIT.CCBUF);
     WSN$ = PINCRC (ADDR (B$JIT.CCBUF),NIX);
     WSN_AREA = WSN_TEMP;
     CALL X$PARSE (WOO_PCB) ALTRET (DEF_WOO);
     SEARCH_WSN = WOO_PCB.OUT$ -> PAR$SYM.TEXT;
     IF B$JIT.ACCN = 'ZZZCUST' AND SEARCH_WSN ~= B$JIT.WOO
     THEN
     DO;
          CALL CONCAT (DETAIL_BUF,NOT_ALLOWED,B$JIT.WOO);
          CALL M$WRITE (FPT_WRITE);
DEF_WOO:  ;
          SEARCH_WSN = B$JIT.WOO;
        END;
     VLP_CRITERIA.WSN# = SEARCH_WSN;
     DETAIL_BUF = ' ';
     CALL M$WRITE (FPT_WRITE);
     CALL M$JOBSTATS (FPT_STATS) ALTRET (OUT_ALTRET);
PRINT_OUTS: ;
     OUT$=ADDR (VLR_JO.F);
     DO PRINT_COUNT=1 TO VLR_JO.FOUND;
          DETAIL_LINE=' ';
          CALL BINCHAR (OUTPUT.SYSID,VLA_JO.SYSID);
          DO CASE (VLA_JO.MODE);
          CASE (%MODE_INT#);
             OUTPUT.NUM_SEP = 'I';
          CASE (%MODE_BATCH#);
             OUTPUT.NUM_SEP = 'B';
          CASE (%MODE_GHOST#);
             OUTPUT.NUM_SEP = 'G';
          CASE (%MODE_TP#);
             OUTPUT.NUM_SEP = 'T';
          END;
          IF VLA_JO.NUM ~= 1 OR
               VLA_JO.MODE ~= %MODE_BATCH#
          THEN
               CALL BINCHAR (OUTPUT.NUMBER,VLA_JO.NUM);
          NIX = 0;
          TEMP_NAME = VLA_JO.JNAME;
          CALL INDEX1 (NIX,' ',TEMP_NAME);
          TEMP_ACCT = VLA_JO.ACCT;
          IF TEMP_ACCT ~= 'ZZZCUST' AND TEMP_ACCT ~= 'ZZZPATCH'
          THEN
               TEMP_ACCT = '*OTHER*';
          OUTPUT.NAME = TEMP_NAME;
          IF NIX > 8 THEN NIX = 8;
          CALL INSERT (OUTPUT.NAME,NIX,16,PERIOD,TEMP_ACCT);
          OUTPUT.FORM=VLA_JO.FORM;
          CALL BINCHAR (OUTPUT.COPIES,VLA_JO.COPIES);
          CALL EDITCHAR (OUTPUT.COPIES,0,5,'MVZB3,MVC1',OUTPUT.COPIES);
          OUTPUT.DEV=VLA_JO.DEVTYP;
          OUTPUT.DEV_NAME=VLA_JO.DEVNAME;
          IF VLA_JO.TNAME ~= ' '
          THEN
               OUTPUT.WSN = VLA_JO.TNAME;
          ELSE
               OUTPUT.WSN = SEARCH_WSN;
          CALL BINCHAR (OUTPUT.GRAN,VLA_JO.GRANS);
          CALL EDITCHAR (OUTPUT.GRAN,0,3,'MVZB3,MVC1',OUTPUT.GRAN);
          DO CASE (VLA_JO.PRIO);
          CASE (%FP_MFW#);
             OUTPUT.STATUS='M-F WAIT';
          CASE (%FP_HOLD#);
             OUTPUT.STATUS='HOLD';
          CASE (%FP_SPILLED#);
             OUTPUT.STATUS='SPILLED';
          CASE (ELSE);
             IF VLA_JO.DEVNAME ~= '  '
             THEN
                  OUTPUT.STATUS='PRINTING';
             ELSE
             DO;
                  OUTPUT.STATUS='WAITING';
                  CALL BINCHAR (OUTPUT.PRIO,VLA_JO.PRIO);
                  CALL EDITCHAR (OUTPUT.PRIO,0,3,'MVZB3,MVC1',OUTPUT.PRIO);
                END;
          END;                          /* END CASE                           */
          IF OUTPUT.WSN = SEARCH_WSN
          THEN
          DO;
               IF NOT FOUND_SOME
               THEN
               DO;
                    DETAIL_BUF = HEADING;
                    CALL M$WRITE (FPT_WRITE);
                  END;
               FOUND_SOME = '1'B;
               DETAIL_BUF=DETAIL_LINE;
               CALL M$WRITE (FPT_WRITE);
             END;
          OUT$=PINCRC (OUT$,SIZEC (VLR_JO.F (0) ) );
        END;
     IF NOT FOUND_SOME
     THEN
          GOTO NO_OUTPUT;
     RETURN;
NO_OUTPUT: ;
     CALL CONCAT (DETAIL_BUF,'...No output pending for ',SEARCH_WSN);
     CALL M$WRITE (FPT_WRITE);
     RETURN;
OUT_ALTRET: IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE=%E$NOTFND
     THEN GOTO NO_OUTPUT;
     VLR_JO.FOUND=1000;
     GOTO PRINT_OUTS;
END PEEK_O_WOO;
     CALL M$INT (FPT_INT);
     CALL M$XCON (FPT_XCON);
     CALL M$SPRIV (FPT_PRIV_DISPJOB);
     CALL PEEK_O_WOO;
     CALL M$RPRIV (FPT_PRIV_DISPJOB);
     CALL M$EXIT;
END WOODPECKER;
%EOD;
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
INTED: PROC ASYNC;
 
%INCLUDE CP_6;
%INCLUDE CP_6_SUBS;
%INCLUDE B$JIT;
DCL B$JIT$ PTR SYMREF;
 
%FPT_PRIV( FPTN=FPT_PRIV_DISPJOB,
                    AUTH=NO,
                    PRIV=%PR_DISPJOB#);
     DO INHIBIT;
          CALL M$RPRIV (FPT_PRIV_DISPJOB);
          CALL M$EXIT;
        END;
END INTED;
