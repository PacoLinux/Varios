MODEL is used to display the status of the HOST CPUs on a CP-6 system, and is
used to select specific CPUs for performance testing.
Full command line syntax:
 
!MODEL  [option]
 
MODEL must be in .:SYS.
 
option may be:
 
D/ISPLAY, L66, DPSE, ELS[1], DPS90, DPS8000, CPU n, PORT n, R/ESET, W/HERE,
S/PY, V/ARIABLE
 
If the optional command line option is not given, MODEL will enter a
command-by-command mode which is exited using the END command.
The MODEL processor allows a user on a multiprocessor system made up of
different CPU types to specify which CPU he wants to run on.  MODEL should be
useful for individual CPU performance testing and for identifing and isolating
CPU-specific idiosyncracies and problems.
 
<more>
The following concepts are important to the use of MODEL:
 
o SPECIFIC CPU REQUEST
When a user has successfully requested that he be run on a specific CPU, all
slave execution and most monitor execution for that user will be performed only
on the requested CPU.  A specific CPU request remains in effect until the user
either logs off (end of job) or explicitly changes or resets the request.
Unless the CPU is partitioned (described below), a user requesting a specific
CPU shares that CPU with all other users except those who have explicitly
requested some other CPU.
 
o FULLY PARTITIONED CPU
A user with the appropriate privilege may cause a single slave CPU to be fully
partitioned.  After a slave CPU is partitioned, new requests to run on the
fully partitioned CPU will be honored only from users who have TND privilege.
Users who have not successfully requested the partitined CPU will not run on
that CPU.
 
 
<more>
o NON-T&D PARTITIONED CPU
A user with the appropriate privilege may cause a single slave CPU to be
partitioned in non-T&D mode.  After a slave CPU is partitioned, new requests to
run on the non-T&D partitioned CPU will be honored only from users who
explicitly request that CPU by using the CPU or PORT command.  Users need not
have TND privilege to successfully request a non-T&D partitioned CPU.  Users
who have not explicitly requested the non-T&D partitioned CPU will not run on
that CPU.
MODEL is invoked from :SYS as follows:
 
!MODEL opt
 
Where opt may be a single MODEL option with no embedded blanks (e.g.  !MODEL
ELS or !MODEL CPU5).  After the option is processed, control is returned to
IBEX.
 
 
!MODEL (opt;opt;...)
 
Where opt may be any MODEL options.  After all options are processed, control
is returned to IBEX.
 
 
!MODEL
 
Enters the interactive form of operation.  MODEL retains control until and END
command is encountered.
HELP file for: MODEL
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
00005
6/13/90
Added changes for released cpu
10/26/88
Added DPS90XA and deleted all references to S1000
04/13/88 DAD
Had the name of an included EQU change on me.
02/10/88 DAD
Actually let you USE the DPS8000 command.
02/02/88 DAD
Taught MODEL about the DPS8000.
12/13/85 DEW
Added the VARIABLE option.
12/05/85
Taught MODEL about the DPS90 (S1000).
04/05/83
Updates added to make DPS8/62 and DPS8/52 work right.
12/03/82
Added code to support ELS/2.
CHANGES
The following options will be honored only if the user has active EXMM
privilege:
 
PART/ITION [CPU] n
          Fully partition the slave CPU connected to port n.  Any previously
partitioned CPU becomes unpartitioned.  An ANLZ error log entry is created.  A
CPU need not be running to be partitioned.  STEPCC is set to 0 if the request
is successful or to 4 if the request is unsuccessful.
 
NTDPART/ITION [CPU] n
          Partition the slave CPU connected to port n in non-T&D mode.  Any
previously partitioned CPU becomes unpartitioned.  An ANLZ error log entry is
created.  A CPU need not be running to be partitioned.  STEPCC is set to 0 if
the request is successful or to 4 if the request is unsuccessful.
 
RET/URN [CPU] n
          Unpartition the CPU connected to port n.  If the designated CPU is
running, it is returned to general use.  STEPCC is set to 0 if the request is
successful or to 4 if the request is unsuccessful.
 
The following options are recognized by MODEL:
 
D/ISPLAY, L66, DPSE, ELS[1], DPS90, CPU n, PORT n, R/ESET, W/HERE, S/PY,
V/ARIABLE
 
Type ?? for description of all, or ? to step through, or !HELP (MODEL) OPTION
option for individual help.
D/ISPLAY
          Display the model numbers of each of the currently running CPU's.
L66 | DPSE | ELS | ELS1 | DPS90 | DPS8000
          Generates a specific CPU request for any running, non-partitioned CPU
of the designated type.  This request is always followed by a message that
indicates the success or failure of the request.  STEPCC is set to 0 if the
request is successful or to 4 if the request is unsuccessful.
CPUn PORTn
          Generates a specific CPU request for the CPU connected to port n.  If
the CPU is fully partitioned this request will be honored only if the user has
TND privilege.  This request is always followed by a message that indicates the
success or failure of the request.  STEPCC is set to 0 if the request is
successful or to 4 if the request is unsuccessful.
R/ESET
          Resets the CPU request (if any) for this user.
W/HERE
          Requests which CPU (if any) this users has requested to be run on.
STEPCC is set to 0 if this user currently has a specific CPU request or to 4 if
this user currently has no specific CPU request.
S/PY
          Displays all users that currently have a specific CPU request.
V/ARIABLE
          Sets the command variable CPU_TYPE to the value of
B_SITEINFO.CPU_TYPE#.  Possible values can be found in B_STRINGS_C.:LIBRARY
END QUIT EXIT XIT
          Return to IBEX.
 
00003
00001
00002
00002
00002
00002
00002
00008
00008
00002
00003
00008
00004
00006
00007
00005
00008
Lynn Garrison, LADC
Additional usage notes:
 
o When a slave CPU is stopped by an operator keyin, the CPU request for all
users who had requested the stopped CPU will be changed to specify another CPU
of the same type.  If there is no other CPU of the same type running, the
specific request for all users who had requested the stopped CPU will be reset
and a message to this effect sent to the operator's console.  For applications
where model specific timing is being obtained, it would be appropriate to check
the specific CPU request (e.g. using the WHERE option) at the end of the run to
insure that the specific CPU request has been continuously in effect.
 
o Monitor services for users with specific CPU requests will be performed on
the requested CPU unless the specific monitor service blocks for the master CPU
(and the requested CPU is not the master CPU).  For most applications, this
will be an infrequent occurrence, and therefore, the reported montior service
times will usually be valid for the requested CPU even if it is a slave CPU.
In any case, all slave execution will be performed on the requested CPU.
 
<more>
o When a running CPU is partitioned, all users (with or without TND privilege)
who have previously successfully requested that CPU will continue to run on
that CPU.  A CPU which is fully partitioned while stopped prior to being
started will only run users who have TND privilege and who specifically request
that CPU by port number.  A CPU which is partitioned in non-T&D mode while
stopped prior to being started will only run users who specifically request
that CPU by port number.
 
o The STEPCC is set during certain MODEL commands as specified above to
facilitate creating JCL that must run on a specific CPU or CPU type.  The
following is an example of the JCL for a job that must run on a LEVEL 66 CPU:
    !JOB
    !MODEL L66
    !IF STEPCC>0 THEN QUIT
      ...
      Job steps that must run on LEVEL 66 CPU
      ...
    !MODEL W
    !IF STEPCC>0 THEN QUIT
The first IF command will cause the job to error if there is no running LEVEL
66 CPU.  The second IF command is to insure that there was a LEVEL 66 CPU
running continuously during the execution of the job.
MODEL.:SYS
AID=SYSTEM_MANAGEMENT
CPU_MANAGEMENT
TOOL=MODEL
Displays and selects CPUs for execution on a multiple CPU system.
CHANGES
