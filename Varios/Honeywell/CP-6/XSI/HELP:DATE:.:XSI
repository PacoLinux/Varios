DATE is a program that creates command variables for a specified
date.  DATE is invoked with the IBEX command:
 
!DATE.X [(optionlist)]
 
The following options are available:
 
[day_of_week][(+|-)offset]
        Date begins by selecting today.  If day_of_week is present
then the date is incremented to that day.  Finally, if offset is
present it is added or subtracted from the selected date.  For
example:
        WEDNESDAY         (selects next Wednesday, if today is
                           Wednesday, then today)
        WEDNESDAY-7       (selects last Wednesday)
        40                (selects 40 days after today)
        -7                (selects a week ago today)
 
DAY=symbol
        Specifies the symbol for the command variable into which
the day of week is to be stored.
 
DATE=symbol
        Specifies the symbol for the command variable into which
the date is to be stored.
 
PRINT
        Day and date are to be written through M$LO.  This option is
default unless DAY or DATE is specified.
 
ANS
        Specifies day and date are in ANS format.  Day is of the form
"yyddd" and date is of the form "yymmdd".
 
EXT
        Specifies day and date are in EXT format.  Day is the three
character day abbreviation and date is of the form "mon dd 'yy".
 
LOCAL
        Specifies day and date are in LOCAL format.  Day is three
character day abbreviation and date is of the form "mm/dd/yy".
The default is LOCAL.
 
FISCAL
        Specifies that the date and day are to be the fiscal format.
Where date is 3 characters the first the last digit of the year, the
second and third the fiscal week. The day is the number of days into
the fiscal year.
 
WORK/DAY    If the work option is used, DATE find the date ask for and
checks it against both the user's and the Sites :DATE file to see
if it is a legal work day. If not, then 1 day is added to that date
until a legal day is found. ** See help for ETAD.X for creation and
modification of the :DATE files.
 
MWORK/DAY [(I/NCREMENT|D/ECREMENT)]
   The same as WORKDAY except only the user's :DATE file is used.
 
SWORK/DAY [(I/NCREMENT|D/ECREMENT)]
   The same as WORKDAY except only the system's :DATE file is used.
 
Examples:
 
!DATE.X (MONDAY+7,DATE=AWEEKFROMMONDAY)
!DATE.X (-35,DAY=THIRTYFIVEDAYSAGO)
!DATE.X (ANS,DATE=ANSTODAY,PRINT)
!DATE.X (FRIDAY,DATE=THANKGODITSFRIDAY,DAY=NEXTFRIDAY,PRINT,EXT)
!DATE.X (FIS,DATE=FWEEK,DAY=FDAY)
!DATE.X (+1,DATE=NEXTWORKDAYDAY,WORK0(INCR))
HELP file for: DATE
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
97/11/11 [AT]
DATE.X Has been made year 2000 ready. Please see star #42955
09/06/96 AT
Modified the subroutine which computed the fiscal date.
01/05/94 RWL
Corrected a table entry used in calculating 1994 fiscal values.
03/04/92
Introduced the new UTS scheme.
12/21/83 JTA
 
Added INCR and DECR options to the various forms of workday.
(Courtesy of Andy Birner.)
02/01/83
Added Fiscal week and Fiscal day options.
01/26/83
The options WORKDAY,MWORKDAY, AND SWORKDAY were added to DATE.X to allow the
user to force the date returned to be a work day.
CHANGES
Lee Hallin, LADC
DATE.X
AID=GENERAL
AID=OFFICE_AUTOMATION
DATE_MANIPULATION
SCHEDULES
TOOL=DATE
Creates command variables for a specified date.
CHANGES
