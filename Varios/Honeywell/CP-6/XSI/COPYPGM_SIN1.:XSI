/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/* Nodes for COPYPGM syntax                                           */
/* */
COMMAND         = ([':'] COPCMD |;
                   [':'] ENDCMD |;
                   [':'] INPCMD |;
                   [':'] INCCMD |;
                   [':'] KEYCMD |;
                   [':'] OUTCMD |;
                   [':'] ORGCMD |;
                   [':'] SAVCMD |;
                   [':'] USECMD |;
                   [':'] NULCMD)
/* */
NULCMD(0)       = .END
COPCMD(1)       = 'C/OPY' .B <',', COPELT> .END
ENDCMD(2)       = ('END' .END | 'X' .END | 'G/O' .END)
INPCMD(3)       = 'INP/UT' .B .FID .END
INCCMD(4)       = ('I/NCLUDE' .B [ANDOR] IFSEC .END |;
                   'I/F' .B [ANDOR] IFSEC .END)
KEYCMD(5)       = 'K/EY' .B KEYTYP .END
OUTCMD(6)       = 'OUT/PUT' .B [HOW .B] .FID .END
ORGCMD(7)       = 'O/RG' .B EDTKEY .END
SAVCMD(8)       = 'S/AVE' .END
USECMD(9)       = 'U/SE' .B .FID .END
/* */
COPELT(101)     = (FIELD '//' START '//' COUNT |;
                   FIELD '//' COUNT |;
                   RANGE |;
                   FIELD |;
                   KEY '//' START '//' COUNT |;
                   KEY '//' COUNT |;
                   KEY |;
                   REC '//' START '//' COUNT |;
                   REC '//' COUNT |;
                   REC |;
                   ASIS '//' START |;
                   ASIS |;
                   BIT |;
                   OCT |;
                   LIT |;
                   UQL)
HOW(L=102)      = ('TO' | 'ON' | 'OVER' | 'INTO')
/* */
IFSEC           = (IFPRIM OR IFSEC | IFPRIM)
IFPRIM          = (IFTERM AND IFPRIM | IFTERM)
IFTERM          = (LPAR IFSEC RPAR | FIELD * REL VAL * |;
                   KEY * REL VAL * | REC * REL VAL *)
IFCOMP          = (REL VAL | VAL)
VAL             = (BIT | OCT | LIT | UQL)
/* */
KEYTYP          = (EDIT ',' EDTKEY ',' EDTKEY |;
                   EDIT ',' EDTKEY |;
                   EDIT |;
                   INDEX '//' START '//' COUNT |;
                   OUT '//' START '//' COUNT |;
                   IN '//' START '//' COUNT |;
                   IN)
/* */
EDTKEY          = (INT- '.'- FRC |;
                   INT- '.' |;
                   '.'- FRC |;
                   INT)
/* */
REL             = (LE | NE | GE | LT | EQ | GT)
LE(601)         = ('<=' | '~>')
NE(602)         = ('~=' | '<>' | '><' | '#')
LT(603)         = '<'
GE(604)         = ('>=' | '~<')
EQ(605)         = '='
GT(606)         = '>'
/* */
ANDOR           = (AND | OR)
AND(701)        = ('AND' | '&')
OR(702)         = ('OR' | '|')
LPAR(703)       = '('
RPAR(704)       = ')'
/* */
FIELD(201)      = EDTKEY
KEY(202)        = 'KEY'
REC(203)        = 'REC'
ASIS(204)       = 'AS' 'IS'
BIT(205)        = ''''-.N+'01'-'''B'
OCT(206)        = ''''-.O-'''O'
LIT(207)        = .Q
UQL(208)        = (.A | .D)
RANGE(209)      = INT '-' INT
/* */
START(301)      = EDTKEY
COUNT(302)      = EDTKEY
/* */
OUT(401)        = 'OUT'
IN(402)         = 'IN'
EDIT(403)       = 'EDIT'
INDEX(404)      = 'INDEX'
/* */
INT(501)        = .D
FRC(502)        = .D
