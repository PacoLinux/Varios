/*M* TERN_SIN1 - This module contains parse nodes for TERN            */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
 
 
%INCLUDE TERN_C63;
%INCLUDE XUE_SUBS_C;
%INCLUDE KV_ASCCHR_E;
 
/* Parse nodes for XUE$EVAL preprocessing of commands. */
 
XUE_FUNCTIONS(DEF) = (TERN_FUNCTIONS | XUE_BUILTINS)
 
TERN_FUNCTIONS(%XUE_USER_FUNCTIONS) = FNC_RECEIVED
 
FNC_RECEIVED(%T$RECEIVED) = '$RECEIVED'
 
/* Parse nodes for TERN commands */
 
TERN_CMDS(DEF)               = (SENDFILE_CMD |;
                                SENDSTR_CMD  |;
                                SEND_CMD     |;
                                WAIT_CMD     |;
                                PACE_CMD     |;
                                DONTLOG_CMD  |;
                                LOG_CMD      |;
                                LOGSTR_CMD   |;
                                DOLOG_CMD    |;
                                DONTOUT_CMD  |;
                                OUT_CMD      |;
                                OUTSTR_CMD   |;
                                DOOUT_CMD    |;
                                DONTSCRIPT_CMD |;
                                SCRIPT_CMD   |;
                                OPEN_CMD     |;
                                QUIT_CMD     | ;
                                NULL_CMD     ) .END
 
LOGSTR_CMD(%T$LOGSTR)        = 'LOG' STRING
LOG_CMD(%T$LOG)              = 'LOG' XUR$OPENOUT_SPEC
DONTLOG_CMD(%T$DONTLOG)      = 'LOG' 'OFF'
DOLOG_CMD(%T$DOLOG)          = 'LOG' 'ON'
OUT_CMD(%T$OUT)              = 'OUT/PUT' XUR$OPENOUT_SPEC
OUTSTR_CMD(%T$OUTSTR)        = 'OUT/PUT' STRING
DONTOUT_CMD(%T$DONTOUT)      = 'OUT/PUT' 'OFF'
DOOUT_CMD(%T$DOOUT)          = 'OUT' 'ON'
SCRIPT_CMD(%T$SCRIPT)        = 'SCRIPT' XUR$OPENOUT_SPEC
DONTSCRIPT_CMD(%T$DONTSCRIPT) = 'SCRIPT' 'OFF'
NULL_CMD(%T$NULL)            = .END
OPEN_CMD(%T$OPEN)            = 'OPEN' [ .FID ]
PACE_CMD(%T$PACE)            = 'PACE' TIME
QUIT_CMD(%T$QUIT)            = ('Q/UIT' | 'END' | 'X/IT' )
SENDFILE_CMD(%T$SENDFILE)    = 'SEND' ('FILE' | 'FROM') .FID
SENDSTR_CMD(%T$SENDSTR)         = 'SE/ND' [ WAIT_OPT ] STRING_NODE [ PROMPT_OPT ]
SEND_CMD(%T$SEND)            = 'SEND'
WAIT_CMD(%T$WAIT)               = 'W/AIT' TIME [ '-' TIME ]
 
WAIT_OPT(%T$WAIT)               = TIME [ '-' TIME ]
 
STRING_NODE(%T$STRING)          = STRING
 
PROMPT_OPT(%T$PROMPT)           = STRING
 
 
STRING                       = < ',', ( QUOTED | MNEMONIC | OCTAL )>
 
QUOTED(%T$QUOTED)            = ( .QUOTE | .SLASH )
 
MNEMONIC(%T$MNEMONIC)        = (MNEMONIC_NULL | MNEMONIC_SOH | MNEMONIC_STX |;
                                MNEMONIC_ETX | MNEMONIC_EOT | MNEMONIC_ENQ |;
                                MNEMONIC_ACK | MNEMONIC_BEL | MNEMONIC_BS |;
                                MNEMONIC_HT | MNEMONIC_LF | MNEMONIC_VT |;
                                MNEMONIC_FF | MNEMONIC_CR | MNEMONIC_SO |;
                                MNEMONIC_SI | MNEMONIC_DLE | MNEMONIC_DC1 |;
                                MNEMONIC_DC2 | MNEMONIC_DC3 | MNEMONIC_DC4 |;
                                MNEMONIC_NAK | MNEMONIC_SYN | MNEMONIC_ETB |;
                                MNEMONIC_CAN | MNEMONIC_EM | MNEMONIC_SUB |;
                                MNEMONIC_ESC | MNEMONIC_FS | MNEMONIC_GS |;
                                MNEMONIC_RS | MNEMONIC_US | MNEMONIC_SP |;
                                MNEMONIC_DEL )
 
MNEMONIC_NULL(%BITBIN(ASCIINUL)) = 'NUL/L'
MNEMONIC_SOH(%BITBIN(ASCIISOH)) = 'SOH'
MNEMONIC_STX(%BITBIN(ASCIISTX)) = 'STX'
MNEMONIC_ETX(%BITBIN(ASCIIETX)) = 'ETX'
MNEMONIC_EOT(%BITBIN(ASCIIEOT)) = 'EOT'
MNEMONIC_ENQ(%BITBIN(ASCIIENQ)) = 'ENQ'
MNEMONIC_ACK(%BITBIN(ASCIIACK)) = 'ACK'
MNEMONIC_BEL(%BITBIN(ASCIIBEL)) = 'BEL/L'
MNEMONIC_BS(%BITBIN(ASCIIBS))   = 'BS'
MNEMONIC_HT(%BITBIN(ASCIIHT))   = 'HT'
MNEMONIC_LF(%BITBIN(ASCIILF))   = 'LF'
MNEMONIC_VT(%BITBIN(ASCIIVT))   = 'VT'
MNEMONIC_FF(%BITBIN(ASCIIFF))   = 'FF'
MNEMONIC_CR(%BITBIN(ASCIICR))   = 'CR'
MNEMONIC_SO(%BITBIN(ASCIISO))   = 'SO'
MNEMONIC_SI(%BITBIN(ASCIISI))   = 'SI'
MNEMONIC_DLE(%BITBIN(ASCIIDLE)) = 'DLE'
MNEMONIC_DC1(%BITBIN(ASCIIDC1)) = 'DC1'
MNEMONIC_DC2(%BITBIN(ASCIIDC2)) = 'DC2'
MNEMONIC_DC3(%BITBIN(ASCIIDC3)) = 'DC3'
MNEMONIC_DC4(%BITBIN(ASCIIDC4)) = 'DC4'
MNEMONIC_NAK(%BITBIN(ASCIINAK)) = 'NAK'
MNEMONIC_SYN(%BITBIN(ASCIISYN)) = 'SYN'
MNEMONIC_ETB(%BITBIN(ASCIIETB)) = 'ETB'
MNEMONIC_CAN(%BITBIN(ASCIICAN)) = 'CAN'
MNEMONIC_EM(%BITBIN(ASCIIEM))   = 'EM'
MNEMONIC_SUB(%BITBIN(ASCIISUB)) = 'SUB'
MNEMONIC_ESC(%BITBIN(ASCIIESC)) = 'ESC/APE'
MNEMONIC_FS(%BITBIN(ASCIIFS))   = 'FS'
MNEMONIC_GS(%BITBIN(ASCIIGS))   = 'GS'
MNEMONIC_RS(%BITBIN(ASCIIRS))   = 'RS'
MNEMONIC_US(%BITBIN(ASCIIUS))   = 'US'
MNEMONIC_SP(%BITBIN(ASCIISP))   = 'SP/ACE'
MNEMONIC_DEL(%BITBIN(ASCIIDEL)) = 'DEL'
 
OCTAL(%T$OCTAL)                 = ('#'- | '.'-) .OCTAL3
 
TIME                            = .DECIMAL
/*    NODE FOR INVOCATION SEQUENCE   */
 
STA_DEF(DEF) = ['STA/TION' '='] STATION_NAME [ ')' ] .END
 
STATION_NAME(%T$STATION) = ;
    .ALPHA8+'_&:$-*0123456789'
