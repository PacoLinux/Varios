/*M*     ID$INCLUDE - Include file for ID$CREATE and ID$PRINT */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X*DMR,THI=0,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,DCI=5,CSU=5,ECU=5,DTI=2*/
/*
  III  DDDD    $    III  N   N  CCC  L     U   U DDDD  EEEEE
   I   D   D  $$$    I   N   N C   C L     U   U D   D E
   I   D   D $ $     I   NN  N C     L     U   U D   D E
   I   D   D  $$$    I   N N N C     L     U   U D   D EEEE
   I   D   D   $ $   I   N  NN C     L     U   U D   D E
   I   D   D  $$$    I   N   N C   C L     U   U D   D E
  III  DDDD    $    III  N   N  CCC  LLLLL  UUU  DDDD  EEEEE
                                                            */
         %INCLUDE CP_6;
         %SUB COMMAND#=13;
         %SUB TOT#=15;
         %SUB KEYLEN=24;
         %SUB COM_SPC=22;
         %FPT_WRITE(
              FPTN=USER_WT,
              BUF=OUTBUFF,
              WAIT=YES,
              DCB=M$DO
                   );
         %FPT_READ(
              FPTN=USER_RD,
              BUF=INBUFF,
              WAIT=YES,
              DCB=M$SI
              );
         %IF CRT_FID;
         %FPT_OPEN(
              FPTN=SDCB,
              SHARE=ALL,
              DCB=M$EO,
              FUN=CREATE,
              EXIST=OLDFILE,
              DISP=NAMED,
              SETDCB=YES,
              NAME=FNAME,
              ORG=KEYED,
              ASN=FILE,
              ACS=DIRECT
                   );
         %FPT_CLOSE(
              FPTN=CLOSE,
              DCB=M$EO,
              NAME=FNAME,
              DISP=SAVE
                   );
         %ELSE;
         %FPT_OPEN(
              FPTN=SDCB,
              SHARE=ALL,
              DCB=M$EI,
              FUN=IN,
              EXIST=OLDFILE,
              SETDCB=YES,
              NAME=FNAME,
              ACCT=FACCT,
              ORG=KEYED,
              ASN=FILE,
              ACS=DIRECT
                   );
         %FPT_CLOSE(
              FPTN=CLOSE,
              DCB=M$EI,
              NAME=FNAME,
              DISP=SAVE
                   );
         %ENDIF;
         %FPT_CLOSE(
              FPTN=SCLOSE,
              DCB=M$SI,
              DISP=SAVE
                   );
DCL M$SI DCB;
DCL M$DO DCB;
         %IF CRT_FID;
DCL M$EO DCB;
         %ELSE;
DCL M$EI DCB;
         %ENDIF;
         %FPT_GDS(
              FPTN=GMEM,
              COMMON=YES,
              FREE=YES,
              RESULTS=REC_VEC
                   );
         %VLP_VECTOR(FPTN=REC_VEC);
         %VLP_NAME(
              FPTN=FNAME,
              NAME='ID_ID'
                   );
         %VLP_ACCT(FPTN=FACCT);
DCL PRAM_FLG(0:COMMAND#)UBIN STATIC INIT (0*0);
DCL 1 PRAMS STATIC,
         2 PDEPTH SBIN,
         2 PWIDTH SBIN,
         2 ICSH SBIN,
         2 ICSV SBIN,
         2 HEIGHT SBIN,
         2 WIDTH SBIN,
         2 STRIKES SBIN,
         2 BS SBIN,
         2 LPI SBIN,
         2 USECHAR SBIN,
         2 CSET CHAR(8),
         2 RFU CHAR(40);
DCL 1 BREAK STATIC,
         2 COUNT UBIN BYTE UNAL INIT(KEYLEN),
         2 WSN CHAR(8) UNAL INIT(' '),
         2 FORM CHAR(12) UNAL INIT(' '),
         2 FONT CHAR(4) UNAL INIT(' ');
DCL KEY REDEF BREAK CHAR(25);
DCL COMTAB(0:TOT#)CHAR(8) STATIC INIT(
              'PDEPTH=',
              'PWIDTH=',
              'ICSH=',
              'ICSV=',
              'HEIGHT=',
              'WIDTH=',
              'STRIKES=',
              'BS=',
              'LPI=',
              'USECHAR=',
              'CSET=',
              'WSN=',
              'FORM=',
              'FONT=',
              'ASCII(',
              'OCTAL('
                   );
DCL SIZE(0:TOT#) SBIN STATIC INIT(
              7,
              7,
              5,
              5,
              7,
              6,
              8,
              3,
              4,
              8,
              5,
              4,
              5,
              5,
              6,
              6
                   );
DCL PRAM_ADDR$(0:COMMAND#) PTR STATIC INIT(
              ADDR(PRAMS.PDEPTH),
              ADDR(PRAMS.PWIDTH),
              ADDR(PRAMS.ICSH),
              ADDR(PRAMS.ICSV),
              ADDR(PRAMS.HEIGHT),
              ADDR(PRAMS.WIDTH),
              ADDR(PRAMS.STRIKES),
              ADDR(PRAMS.BS),
              ADDR(PRAMS.LPI),
              ADDR(PRAMS.USECHAR),
              ADDR(PRAMS.CSET),
              ADDR(BREAK.WSN),
              ADDR(BREAK.FORM),
              ADDR(BREAK.FONT)
                   );
         /* IF MAX IS NEG THE PRAM IS STRING */
         /* IF MAX IS ZERO THEN PRAM IS A FLAG */
DCL PRAM_MAX(0:COMMAND#) SBIN STATIC INIT(
              127,
              140,
              127,
              127,
              36,
              36,
              6,
              0,
              8,
              0,
              -6,
              -8,
              -12,
              -4
                   );
DCL 1 REC BASED,
         2 PDEPTH UBIN,
         2 PWIDTH UBIN,
         2 ICSH UBIN,
         2 ICSV UBIN,
         2 HEIGHT UBIN,
         2 WIDTH UBIN,
         2 STRIKES UBIN,
         2 BS UBIN,
         2 LPI UBIN,
         2 USECHAR SBIN,
         2 CSET CHAR(8),
         2 RFU CHAR(40),
         2 MATRIX(0:0) BIT(1) UNAL;
DCL MAT$LET(0:0) BASED BIT(1) UNAL;
DCL LLEN SBIN STATIC ALIGNED;
DCL LET$ PTR STATIC ALIGNED;
DCL TLEN SBIN STATIC ALIGNED;
DCL INDX SBIN STATIC ALIGNED;
