/*M* PIE_SI6   CCBUF STUFF for PIE */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
 
 
%SET LISTSUB='1'B;
 
CCBUF: PROC (ARRAY_);
 
%INCLUDE XU_MACRO_C;
%INCLUDE XU_PERR_C;
%INCLUDE XU_SUBS_C;
 
%INCLUDE B$JIT_C;
 
                                        /* ARGUMENTS */
DCL ARRAY_(0:15) SBIN;
 
                                        /* MACRO JUNK */
 
DCL X$PARSE ENTRY(1) ALTRET;
 
DCL B$JIT$ PTR SYMREF;
 
     %PARSE$SYM     (NAME=PIE$SYM,
                         STCLASS="BASED");
 
     %PARSE$OUT     (NAME=PIE$OUTBLK,
                         STCLASS="BASED");
 
     %B$JIT0;
     %U$JIT1;
     %A$JIT6X;
 
DCL PIE_NODES SBIN SYMREF;
 
DCL PIE_WORKSPACE(0:199) SBIN STATIC;
DCL I SBIN;
 
     %P_PCB    (NAME=PIE_PCB,
                         STCLASS="STATIC SYMDEF",
                         R=NIL,
                         W=PIE_WORKSPACE,
                         U$=NIL,
                         WSZ=200,
                         N#=0);
 
%EJECT;
 
     PIE_PCB.ROOT$ = ADDR(PIE_NODES);
     DO I=0 TO SIZEW(ARRAY_);
          ARRAY_(I)=0;
        END;
 
     IF B$JIT$->B$JIT.CCARS > B$JIT$->B$JIT.CCDISP
     THEN
     DO;
          PIE_PCB.TEXT$ = PINCRC(ADDR(B$JIT.CCBUF),B$JIT.CCDISP+1);
          PIE_PCB.NCHARS = B$JIT.CCARS - B$JIT.CCDISP - 1;
 
          CALL X$PARSE (PIE_PCB) ALTRET (WHOOPS);
 
          DO WHILE ('0'B);
WHOOPS:        ;
               ARRAY_(0)=9999;
               RETURN;
             END;
 
          DO I = 0 TO PIE_PCB.OUT$ -> PIE$OUTBLK.NSUBLKS - 1;
 
               DO CASE (PIE_PCB.OUT$ -> PIE$OUTBLK.SUBLK$(I) ->
                    PIE$OUTBLK.CODE);
 
               CASE (1);
                  ARRAY_(0)=1;
 
               CASE (2);
                  ARRAY_(1)=1;
 
               END;                     /* DO CASE */
             END;                       /* DO I */
 
        END;                            /* DO IF SOMETHING IN CCBUF */
     RETURN;
 
END CCBUF;
%EOD;
/*M* PIE_SI6   CCBUF STUFF for PIE */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
 
 
PARSELINE: PROC (STRING_TEXT,NAME,NAMELEN,AMT,FLAG);
 
 
                                        /* ARGUMENTS */
DCL STRING_TEXT CHAR(80);
DCL NAME CHAR(12);
DCL NAMELEN SBIN WORD;
DCL AMT CHAR(8);
DCL FLAG CHAR(1);
 
DCL COMMA UBIN WORD STATIC;
DCL START UBIN WORD STATIC;
 
%EJECT;
 
     CALL INDEX (COMMA,',',STRING_TEXT) ALTRET(BAD_COMMAND);
     IF COMMA > 6 THEN
          GOTO BAD_COMMAND;
     NAME = SUBSTR(STRING_TEXT,0,COMMA);
     NAMELEN = COMMA;
 
     START = COMMA + 1;
     CALL INDEX1 (COMMA,',',STRING_TEXT,START) ALTRET(BAD_COMMAND);
     IF COMMA - START > 8 THEN
          GOTO BAD_COMMAND;
     AMT = SUBSTR(STRING_TEXT,START,COMMA - START);
 
     FLAG = SUBSTR(STRING_TEXT,COMMA + 1,1);
     IF FLAG ~= 'Y' THEN
          FLAG = 'N';
     RETURN;
 
BAD_COMMAND: ;
     FLAG = 'X';
     RETURN;
END PARSELINE;
