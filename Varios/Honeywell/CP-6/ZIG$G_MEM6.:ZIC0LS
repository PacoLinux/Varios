
PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*P*
        7        7        NAME:    ZIG$G_DYN_MEM_6
        8        8        PURPOSE: TO ALLOCATE DYNAMIC MEM FOR THE PL6 USER.
        9        9        */
       10       10        /*
       11       11            NOTE:     Their is a equalent subroutine for PL1 calls
       12       12                      named ZIG$G_DYN_MEM.
       13       13        */
       14       14        ZIG$G_DYN_MEM_6:
       15       15            PROC (SIZE_ALL,PTR_RETURN);
       16       16        /* MEMORY MANAGEMENT ROUTINES */
       17       17
       18       18        /*
       19       19              PARAM 1 - INDICATES DATA SEGMENT WHERE MEMORY IS TO BE ALLOCATED
       20       20                        OR FREED
       21       21        */
       22       22        %EQU GDP = 0;
       23       23        %EQU DS2 = 1;
       24       24        %EQU DS3 = 2;
       25       25        %EQU DS4 = 3;
       26       26        %EQU DS5 = 4;
       27       27        %EQU DS6 = 5;
       28       28        %EQU DS7 = 6;
       29       29        /*    DS8 not available for dynamic allocation. */
       30       30        %EQU NEXT_AVAILABLE = 7;
       31       31        %EQU FREE_ALL = 7;
       32       32        /*
       33       33              PARAM 2 - NUMBER OF WORDS TO BE ALLOCATED OR FREED
       34       34              PARAM 3 - POINTER TO WORDS ALLOCATED
       35       35        */
       36       36
       37       37    1   DCL SIZE_ALL UBIN WORD;
PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:2    
       38       38    1   DCL PTR_RETURN PTR;
       39       39    1   DCL ZIG$ALLOCATE ENTRY(3) ALTRET;
       40       40    1   DCL ABORT ENTRY;
       41       41    1   DCL N_BYTES SBIN;
       42       42    1   DCL 1 ZEROES ALIGNED BASED(PTR_RETURN),
       43       43    1         2 * CHAR(N_BYTES) CALIGNED;
       44       44    1   DCL MEMORY_USED_WORDS UBIN WORD EXT;
       45       45    1   DCL MEMORY_USED_SSS UBIN WORD EXT;
       46       46    1   DCL ALLOCATE_END UBIN (36) EXT;
       47       47        /*D*
       48       48        NAME:    ALLOCATE_END
       49       49              This is a flag that tells where the memory is to be allocated
       50       50            from.
       51       51            0 - DS5 (normal allocation)
       52       52            1 - DS4 (allocation for validation ).
       53       53            2 - DS6 (allocation for alt_hash_table)
       54       54        */
       55       55    2       DO CASE ALLOCATE_END ;
       56       56    2       CASE( 1 );
       57       57    2           CALL ZIG$ALLOCATE(%DS4,SIZE_ALL,PTR_RETURN) ALTRET(ALT_END);
       58       58    2       CASE( 0 );
       59       59    2           CALL ZIG$ALLOCATE(%DS5,SIZE_ALL,PTR_RETURN) ALTRET(ALT_END);
       60       60    2           MEMORY_USED_SSS = MEMORY_USED_SSS + SIZE_ALL;
       61       61    2       CASE( 2 );
       62       62    2           CALL ZIG$ALLOCATE(%DS6,SIZE_ALL,PTR_RETURN) ALTRET(ALT_END);
       63       63    2       CASE ELSE;
       64       64    2           GOTO ALT_END;
       65       65    2           END;
       66       66    1       IF SIZE_ALL > 0
       67       67    2       THEN DO;
       68       68    2           N_BYTES = SIZE_ALL * 4;
       69       69    2           ZEROES = '0'B;
       70       70    2           END;
       71       71    1       RETURN;
       72       72    1   ALT_END: CALL ABORT;
       73       73    1   END ZIG$G_DYN_MEM_6;
       74       74        %EOD;
PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:3    

PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:4    
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIG$G_DYN_MEM_6.

   Procedure ZIG$G_DYN_MEM_6 requires 61 words for executable code.
   Procedure ZIG$G_DYN_MEM_6 requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:5    

 Object Unit name= ZIG$G_DYN_MEM_6                            File name= ZIG$G_MEM6.:ZIC0TOU
 UTS= SEP 05 '97 12:04:55.56 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  MEMORY_USED_WORDS
    1  LblCom even  none     1      1  MEMORY_USED_SSS
    2  LblCom even  none     1      1  ALLOCATE_END
    3   Proc  even  none    61     75  ZIG$G_DYN_MEM_6
    4  RoData even  none     8     10  ZIG$G_DYN_MEM_6

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        2  ZIG$G_DYN_MEM_6

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 ZIG$ALLOCATE
         yes           Std       0 ABORT
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:6    


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*P*
        7        7        NAME:    ZIG$G_DYN_MEM_6
        8        8        PURPOSE: TO ALLOCATE DYNAMIC MEM FOR THE PL6 USER.
        9        9        */
       10       10        /*
       11       11            NOTE:     Their is a equalent subroutine for PL1 calls
       12       12                      named ZIG$G_DYN_MEM.
       13       13        */
       14       14        ZIG$G_DYN_MEM_6:
       15       15            PROC (SIZE_ALL,PTR_RETURN);

     15  3 000000   000000 700200 xent  ZIG$G_DYN_M* TSX0  ! X66_AUTO_2
         3 000001   000012 000002                    ZERO    10,2

       16       16        /* MEMORY MANAGEMENT ROUTINES */
       17       17
       18       18        /*
       19       19              PARAM 1 - INDICATES DATA SEGMENT WHERE MEMORY IS TO BE ALLOCATED
       20       20                        OR FREED
       21       21        */
       22       22        %EQU GDP = 0;
       23       23        %EQU DS2 = 1;
       24       24        %EQU DS3 = 2;
       25       25        %EQU DS4 = 3;
       26       26        %EQU DS5 = 4;
       27       27        %EQU DS6 = 5;
       28       28        %EQU DS7 = 6;
       29       29        /*    DS8 not available for dynamic allocation. */
       30       30        %EQU NEXT_AVAILABLE = 7;
       31       31        %EQU FREE_ALL = 7;
       32       32        /*
PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:7    
       33       33              PARAM 2 - NUMBER OF WORDS TO BE ALLOCATED OR FREED
       34       34              PARAM 3 - POINTER TO WORDS ALLOCATED
       35       35        */
       36       36
       37       37    1   DCL SIZE_ALL UBIN WORD;
       38       38    1   DCL PTR_RETURN PTR;
       39       39    1   DCL ZIG$ALLOCATE ENTRY(3) ALTRET;
       40       40    1   DCL ABORT ENTRY;
       41       41    1   DCL N_BYTES SBIN;
       42       42    1   DCL 1 ZEROES ALIGNED BASED(PTR_RETURN),
       43       43    1         2 * CHAR(N_BYTES) CALIGNED;
       44       44    1   DCL MEMORY_USED_WORDS UBIN WORD EXT;
       45       45    1   DCL MEMORY_USED_SSS UBIN WORD EXT;
       46       46    1   DCL ALLOCATE_END UBIN (36) EXT;
       47       47        /*D*
       48       48        NAME:    ALLOCATE_END
       49       49              This is a flag that tells where the memory is to be allocated
       50       50            from.
       51       51            0 - DS5 (normal allocation)
       52       52            1 - DS4 (allocation for validation ).
       53       53            2 - DS6 (allocation for alt_hash_table)
       54       54        */
       55       55    2       DO CASE ALLOCATE_END ;

     55  3 000002   000000 235000 2                  LDA     ALLOCATE_END
         3 000003   000003 115007                    CMPA    3,DL
         3 000004   000006 602005 3                  TNC     s:55+4,AL
         3 000005   000053 710000 3                  TRA     s:64
         3 000006   000023 710000 3                  TRA     s:59
         3 000007   000011 710000 3                  TRA     s:57
         3 000010   000041 710000 3                  TRA     s:62

       56       56    2       CASE( 1 );

       57       57    2           CALL ZIG$ALLOCATE(%DS4,SIZE_ALL,PTR_RETURN) ALTRET(ALT_END);

     57  3 000011   200004 236100                    LDQ     @PTR_RETURN,,AUTO
PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:8    
         3 000012   200010 756100                    STQ     N_BYTES+3,,AUTO
         3 000013   200003 236100                    LDQ     @SIZE_ALL,,AUTO
         3 000014   000002 235000 4                  LDA     2
         3 000015   200006 757100                    STAQ    N_BYTES+1,,AUTO
         3 000016   200006 630500                    EPPR0   N_BYTES+1,,AUTO
         3 000017   000000 631400 4                  EPPR1   0
         3 000020   000000 701000 xent               TSX1    ZIG$ALLOCATE
         3 000021   000071 702000 3                  TSX2    ALT_END
         3 000022   000054 710000 3                  TRA     s:66

       58       58    2       CASE( 0 );

       59       59    2           CALL ZIG$ALLOCATE(%DS5,SIZE_ALL,PTR_RETURN) ALTRET(ALT_END);

     59  3 000023   200004 236100                    LDQ     @PTR_RETURN,,AUTO
         3 000024   200010 756100                    STQ     N_BYTES+3,,AUTO
         3 000025   200003 236100                    LDQ     @SIZE_ALL,,AUTO
         3 000026   000004 235000 4                  LDA     4
         3 000027   200006 757100                    STAQ    N_BYTES+1,,AUTO
         3 000030   200006 630500                    EPPR0   N_BYTES+1,,AUTO
         3 000031   000000 631400 4                  EPPR1   0
         3 000032   000000 701000 xent               TSX1    ZIG$ALLOCATE
         3 000033   000071 702000 3                  TSX2    ALT_END

       60       60    2           MEMORY_USED_SSS = MEMORY_USED_SSS + SIZE_ALL;

     60  3 000034   200003 470500                    LDP0    @SIZE_ALL,,AUTO
         3 000035   000000 236000 1                  LDQ     MEMORY_USED_SSS
         3 000036   000000 036100                    ADLQ    0,,PR0
         3 000037   000000 756000 1                  STQ     MEMORY_USED_SSS
         3 000040   000054 710000 3                  TRA     s:66

       61       61    2       CASE( 2 );

       62       62    2           CALL ZIG$ALLOCATE(%DS6,SIZE_ALL,PTR_RETURN) ALTRET(ALT_END);

     62  3 000041   200004 236100                    LDQ     @PTR_RETURN,,AUTO
PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:9    
         3 000042   200010 756100                    STQ     N_BYTES+3,,AUTO
         3 000043   200003 236100                    LDQ     @SIZE_ALL,,AUTO
         3 000044   000006 235000 4                  LDA     6
         3 000045   200006 757100                    STAQ    N_BYTES+1,,AUTO
         3 000046   200006 630500                    EPPR0   N_BYTES+1,,AUTO
         3 000047   000000 631400 4                  EPPR1   0
         3 000050   000000 701000 xent               TSX1    ZIG$ALLOCATE
         3 000051   000071 702000 3                  TSX2    ALT_END
         3 000052   000054 710000 3                  TRA     s:66

       63       63    2       CASE ELSE;

       64       64    2           GOTO ALT_END;

     64  3 000053   000071 710000 3                  TRA     ALT_END

       65       65    2           END;

       66       66    1       IF SIZE_ALL > 0

     66  3 000054   200003 470500                    LDP0    @SIZE_ALL,,AUTO
         3 000055   000000 235100                    LDA     0,,PR0
         3 000056   000070 600000 3                  TZE     s:71

       67       67    2       THEN DO;

       68       68    2           N_BYTES = SIZE_ALL * 4;

     68  3 000057   000000 235100                    LDA     0,,PR0
         3 000060   000002 735000                    ALS     2
         3 000061   200005 755100                    STA     N_BYTES,,AUTO

       69       69    2           ZEROES = '0'B;

     69  3 000062   200004 471500                    LDP1    @PTR_RETURN,,AUTO
         3 000063   100000 473500                    LDP3    0,,PR1
         3 000064   000000 620005                    EAX0    0,AL
PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:10   
         3 000065   000140 100400                    MLR     fill='000'O
         3 000066   000007 000001 4                  ADSC9   7                        cn=0,n=1
         3 000067   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

       70       70    2           END;

       71       71    1       RETURN;

     71  3 000070   000000 702200 xent               TSX2  ! X66_ARET

       72       72    1   ALT_END: CALL ABORT;

     72  3 000071   000007 631400 4     ALT_END      EPPR1   7
         3 000072   000000 701000 xent               TSX1    ABORT
         3 000073   000000 011000                    NOP     0

       73       73    1   END ZIG$G_DYN_MEM_6;

     73  3 000074   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   4     000   000003 000000   000000 000003   000001 006000   000000 000004    ................
   4     004   000003 006000   000000 000005   000005 006000   000000 000000    ................
       74       74        %EOD;

PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:11   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIG$G_DYN_MEM_6.

   Procedure ZIG$G_DYN_MEM_6 requires 61 words for executable code.
   Procedure ZIG$G_DYN_MEM_6 requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:12   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIG$G_DYN_MEM_6 File=ZIG$G_MEM6.:ZIC0TSI                      FRI 09/05/97 12:04 Page:13   
          MINI XREF LISTING

ABORT
        40**DCL-ENT    72--CALL
ALLOCATE_END
        46**DCL        55>>DOCASE
ALT_END
        72**LABEL      57--CALLALT    59--CALLALT    62--CALLALT    64--GOTO
MEMORY_USED_SSS
        45**DCL        60<<ASSIGN     60>>ASSIGN
N_BYTES
        41**DCL        43--IMP-SIZ    68<<ASSIGN     69>>ASSIGN
PTR_RETURN
        38**DCL        14--PROC       42--IMP-PTR    57<>CALL       59<>CALL       62<>CALL       69>>ASSIGN
SIZE_ALL
        37**DCL        14--PROC       57<>CALL       59<>CALL       60>>ASSIGN     62<>CALL       66>>IF
        68>>ASSIGN
ZEROES
        42**DCL        69<<ASSIGN
ZIG$ALLOCATE
        39**DCL-ENT    57--CALL       59--CALL       62--CALL

PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:14   
       75        1        /*M*  ZIG$MM - memory management routines. */
       76        2        /*T***********************************************************/
       77        3        /*T*                                                         */
       78        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       79        5        /*T*                                                         */
       80        6        /*T***********************************************************/
       81        7
       82        8        /*P*  NAME:       ZIG$MM
       83        9              PURPOSE:    Dynamic memory management procedure.
       84       10              DESCRIPTION:
       85       11                  This procedure has two entry points:
       86       12
       87       13                  ZIG$ALLOCATE - allocates dynamic memory
       88       14                  ZIG$FREE     - frees dynamic memory.
       89       15        */
       90       16
       91       17
       92       18
       93       19        ZIG$MM: PROC( TYPE, SIZE, START$ ) ALTRET;
       94       20
       95       21        %INCLUDE B_SEGIDS_C;
       96      560 S      %INCLUDE CP_6_C;
       97      561
       98      562    1   DCL TYPE SBIN;
       99      563    1   DCL SIZE SBIN;
      100      564    1   DCL START$ PTR;
      101      565
      102      566    1   DCL ALL_(0:6) UBIN STATIC INIT( 0*0 );
      103      567    1   DCL ZIG$FREE_(0:6) UBIN STATIC INIT( 0*0 );
      104      568    1   DCL BASE_PTR(0:6) PTR EXT INIT( ADDR(NIL)*0 );
      105      569    1   DCL SEGIDS(0:6) UBIN CONSTANT INIT(
      106      570    1    BITBIN(%ISSID), BITBIN(%DS2SID), BITBIN(%DS3SID), BITBIN(%DS4SID),
      107      571    1    BITBIN(%DS5SID), BITBIN(%DS6SID), BITBIN(%DS7SID) );
      108      572    1   DCL SEG_PTR(0:6) REDEF SEGIDS PTR;
      109      573
      110      574
      111      575        %VLP_VECTOR( FPTN=GDP_RESULTS, SEGID=%NULLSID );
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:15   
      112      590        %VLP_VECTOR( FPTN=FDP_RESULTS, SEGID=%NULLSID );
      113      605        %VLP_VECTOR( FPTN=GDS_RESULTS, SEGID=%NULLSID );
      114      620        %VLP_VECTOR( FPTN=FDS_RESULTS, SEGID=%NULLSID );
      115      635
      116      636    1   DCL GET SBIN;
      117      637    1   DCL WGET SBIN;
      118      638    1   DCL DIFF SBIN;
      119      639    1   DCL REL SBIN;
      120      640    1   DCL I SBIN;
      121      641    1   DCL MEMORY_USED_WORDS UBIN WORD EXT;
      122      642    1   DCL MEMORY_USED_SSS UBIN WORD EXT;
      123      643        %EQU DS5 = 4;
      124      644
      125      645        %FPT_GDP( RESULTS=GDP_RESULTS );
      126      659        %FPT_GDS( FREE=NO, RESULTS=GDS_RESULTS );
      127      675        %FPT_FDP( RESULTS=FDP_RESULTS );
      128      689        %FPT_FDS( RESULTS=FDS_RESULTS );
      129      704
      130      705        %CP6$ENTS;
      131      779
      132      780
      133      781        %EJECT;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:16   
      134      782        /*D*  ENTRY:      ZIG$ALLOCATE
      135      783              CALL:       CALL ZIG$ALLOCATE( TYPE, SIZE, START$ )  ALTRET( ERROR )
      136      784              INPUT:
      137      785                      TYPE - indicates the segment to allocate the data in.
      138      786
      139      787                          TYPE            SEGMENT
      140      788                           0              Instruction segment
      141      789                           1              Data segment 2
      142      790                           2              Data segment 3
      143      791                           3              Data segment 4
      144      792                           4              Data segment 5
      145      793                           5              Data segment 6
      146      794                           6              Data segment 7
      147      795                           7              Next available segment (DS8 not available)
      148      796
      149      797                      SIZE - is the number of words to be allocated.
      150      798
      151      799              OUTPUT:
      152      800                      START$  - pointer to words allocated.
      153      801                      TYPE    - indicates segment where words were allocated.
      154      802
      155      803              DESCRIPTION:
      156      804                  The altreturn is taken if the procedure cannot allocate the
      157      805                  requested memory, or if there are no available segments.
      158      806
      159      807        */
      160      808
      161      809
      162      810
      163      811
      164      812    1   ZIG$ALLOCATE: ENTRY( TYPE, SIZE, START$ ) ALTRET;
      165      813
      166      814    2       IF TYPE = 7 THEN DO;
      167      815    2           I = 0;
      168      816    3           DO WHILE( I < 7 AND BASE_PTR(I) ~= ADDR(NIL) );
      169      817    3               I = I + 1;
      170      818    3               END;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:17   
      171      819    2           IF I = 7 THEN ALTRETURN;
      172      820    2           TYPE = I;
      173      821    2           END;
      174      822
      175      823    1       DIFF = ALL_(TYPE) - ZIG$FREE_(TYPE);
      176      824    2       IF SIZE > DIFF THEN DO;
      177      825    2           GET = ( SIZE - DIFF + 1023 ) / 1024;
      178      826    2           WGET = GET * 1024;
      179      827    2           MEMORY_USED_WORDS = MEMORY_USED_WORDS + WGET;
      180      828    3           DO CASE( TYPE );
      181      829    3           CASE ( 0 );
      182      830    3               FPT_GDP.V.PAGES# = GET;
      183      831    3               CALL M$GDP( FPT_GDP ) ALTRET( ERROR );
      184      832    3               ALL_(0) = ALL_(0) + WGET; /* Increase allocated */
      185      833    3               IF BASE_PTR(0) = ADDR(NIL) THEN
      186      834    3                   BASE_PTR(0) = GDP_RESULTS.PTR$;
      187      835
      188      836
      189      837    3           CASE( ELSE );
      190      838    3               FPT_GDS.V.SEGSIZE# = WGET;
      191      839    3               IF TYPE = 1 THEN FPT_GDS.V.COMMON# = '1'B;
      192      840    3               ELSE FPT_GDS.V.COMMON# = '0'B;
      193      841    3               GDS_RESULTS.PTR$ = SEG_PTR(TYPE);
      194      842    3               CALL M$GDS( FPT_GDS ) ALTRET( ERROR );
      195      843    3               ALL_(TYPE) = ALL_(TYPE) + WGET; /* Increase allocated */
      196      844    3               IF BASE_PTR(TYPE) = ADDR(NIL) THEN
      197      845    3                   BASE_PTR(TYPE) = GDS_RESULTS.PTR$;
      198      846
      199      847    3               END;
      200      848    2           END;
      201      849
      202      850    1       START$ = PINCRW( BASE_PTR(TYPE), ZIG$FREE_(TYPE) );
      203      851    1       ZIG$FREE_(TYPE) = ZIG$FREE_(TYPE) + SIZE;
      204      852    1       RETURN;
      205      853
      206      854    1   ERROR:
      207      855    1       ALTRETURN;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:18   
      208      856
      209      857        %EJECT;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:19   
      210      858        /*D*  ENTRY:      ZIG$FREE
      211      859              CALL:       CALL ZIG$FREE( TYPE, SIZE )
      212      860              INPUT:
      213      861                      TYPE  - indicates which segment to free memory from.
      214      862
      215      863                          TYPE                SEGMENT
      216      864                           0                  Instruction segment
      217      865                           1                  Data segment 2
      218      866                           2                  Data segment 3
      219      867                           3                  Data segment 4
      220      868                           4                  Data segment 5
      221      869                           5                  Data segment 6
      222      870                           6                  Data segment 7
      223      871                           7                  Free memory from all segments except DS8.
      224      872
      225      873                      SIZE  - is the number of words to free.
      226      874                              SIZE < 0   =>   free all memory allocated.
      227      875        */
      228      876
      229      877
      230      878
      231      879    1   ZIG$FREE: ENTRY( TYPE, SIZE ) ALTRET;
      232      880
      233      881    2       IF TYPE = 7 THEN DO;
      234      882    2           MEMORY_USED_WORDS = 0;
      235      883    2           MEMORY_USED_SSS = 0;
      236      884    3           DO I = 0 TO 7;
      237      885    3               ZIG$FREE_(I) = 0;
      238      886    3               CALL ZIG$FREE_SEG(I);
      239      887    3               END;
      240      888    2           END;
      241      889    2       ELSE DO;
      242      890    2           IF SIZE < 0 THEN ZIG$FREE_(TYPE) = 0;
      243      891    2           ELSE ZIG$FREE_(TYPE) = ZIG$FREE_(TYPE) - SIZE;
      244      892    2           CALL ZIG$FREE_SEG( TYPE );
      245      893    2           IF TYPE = %DS5 THEN
      246      894    2               MEMORY_USED_SSS = MEMORY_USED_SSS - SIZE;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:20   
      247      895    2           END;
      248      896
      249      897    1       RETURN;
      250      898
      251      899
      252      900        %EJECT;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:21   
      253      901    1   ZIG$FREE_SEG: PROC( TYPE );
      254      902
      255      903    2   DCL TYPE UBIN;
      256      904
      257      905
      258      906    2       DIFF = ALL_(TYPE) - ZIG$FREE_(TYPE);
      259      907    3       DO CASE(TYPE);
      260      908    3       CASE( 0 );
      261      909    4           IF DIFF >= 1024 THEN DO;
      262      910    4               ALL_(0) = ALL_(0) - DIFF;
      263      911    4               REL = DIFF / 1024;
      264      912    4               FPT_FDP.V.PAGES# = REL;
      265      913    4               CALL M$FDP( FPT_FDP ) ALTRET( LAST_RELEASED );
      266      914    4               ALL_(0) = ALL_(0) - REL * 1024;
      267      915    4               END;
      268      916    3           RETURN;
      269      917    3   LAST_RELEASED:
      270      918    3           ALL_(0) = 0;
      271      919    3           ZIG$FREE_(0) = 0;
      272      920    3           BASE_PTR(0) = ADDR(NIL);
      273      921
      274      922    3       CASE( ELSE );
      275      923    3           REL = ( DIFF / 1024 ) * 1024;
      276      924    4           IF REL >= 1024 THEN DO;
      277      925    4               ALL_(TYPE) = ALL_(TYPE) - REL;
      278      926    4               FPT_FDS.V.SEGSIZE# = REL;
      279      927    4               FDS_RESULTS.PTR$ = SEG_PTR(TYPE);
      280      928    4               IF TYPE = 1 THEN FPT_FDS.V.COMMON# = '1'B;
      281      929    4               ELSE FPT_FDS.V.COMMON# = '0'B;
      282      930    4               CALL M$FDS( FPT_FDS ) ALTRET( IGNORE );
      283      931    4               END;
      284      932    4           IF ALL_(TYPE) = 0 THEN DO;
      285      933    4               ALL_(TYPE) = 0;
      286      934    4               ZIG$FREE_(TYPE) = 0;
      287      935    4               BASE_PTR(TYPE) = ADDR(NIL);
      288      936    4               END;
      289      937    3           END;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:22   
      290      938
      291      939    2   IGNORE:
      292      940    2       RETURN;
      293      941    2   END ZIG$FREE_SEG;
      294      942
      295      943        %EJECT;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:23   
      296      944
      297      945
      298      946
      299      947    1   END ZIG$MM;

PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:24   
--  Include file information  --

   B_SEGIDS_C.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIG$MM.

   Procedure ZIG$MM requires 220 words for executable code.
   Procedure ZIG$MM requires 14 words of local(AUTO) storage.

    No errors detected in file ZIG$G_MEM6.:ZIC0TSI    .

PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:25   

 Object Unit name= ZIG$MM                                     File name= ZIG$G_MEM6.:ZIC0TOU
 UTS= SEP 05 '97 12:05:01.52 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    46     56  ZIG$MM
    1  LblCom even  none     7      7  BASE_PTR
    2  RoData even  UTS      7      7  ZIG$MM
    3  LblCom even  none     1      1  MEMORY_USED_WORDS
    4  LblCom even  none     1      1  MEMORY_USED_SSS
    5   DCB   even  none     0      0  M$UC
    6   Proc  even  none   220    334  ZIG$MM
    7  RoData even  none     2      2  ZIG$MM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes    yes     yes      Std        3  ZIG$MM
     6      3          yes     yes      Std        3  ZIG$ALLOCATE
     6    153          yes     yes      Std        2  ZIG$FREE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:26   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:27   


       75        1        /*M*  ZIG$MM - memory management routines. */
       76        2        /*T***********************************************************/
       77        3        /*T*                                                         */
       78        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       79        5        /*T*                                                         */
       80        6        /*T***********************************************************/
       81        7
       82        8        /*P*  NAME:       ZIG$MM
       83        9              PURPOSE:    Dynamic memory management procedure.
       84       10              DESCRIPTION:
       85       11                  This procedure has two entry points:
       86       12
       87       13                  ZIG$ALLOCATE - allocates dynamic memory
       88       14                  ZIG$FREE     - frees dynamic memory.
       89       15        */
       90       16
       91       17
       92       18
       93       19        ZIG$MM: PROC( TYPE, SIZE, START$ ) ALTRET;

     19  6 000000   000000 700200 xent  ZIG$MM       TSX0  ! X66_AUTO_3
         6 000001   000016 000003                    ZERO    14,3
         6 000002   000005 710000 6                  TRA     s:814

       94       20
       95       21        %INCLUDE B_SEGIDS_C;
       96      560 S      %INCLUDE CP_6_C;
       97      561
       98      562    1   DCL TYPE SBIN;
       99      563    1   DCL SIZE SBIN;
      100      564    1   DCL START$ PTR;
      101      565
      102      566    1   DCL ALL_(0:6) UBIN STATIC INIT( 0*0 );
      103      567    1   DCL ZIG$FREE_(0:6) UBIN STATIC INIT( 0*0 );
      104      568    1   DCL BASE_PTR(0:6) PTR EXT INIT( ADDR(NIL)*0 );
      105      569    1   DCL SEGIDS(0:6) UBIN CONSTANT INIT(
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:28   
      106      570    1    BITBIN(%ISSID), BITBIN(%DS2SID), BITBIN(%DS3SID), BITBIN(%DS4SID),
      107      571    1    BITBIN(%DS5SID), BITBIN(%DS6SID), BITBIN(%DS7SID) );
      108      572    1   DCL SEG_PTR(0:6) REDEF SEGIDS PTR;
      109      573
      110      574
      111      575        %VLP_VECTOR( FPTN=GDP_RESULTS, SEGID=%NULLSID );
      112      590        %VLP_VECTOR( FPTN=FDP_RESULTS, SEGID=%NULLSID );
      113      605        %VLP_VECTOR( FPTN=GDS_RESULTS, SEGID=%NULLSID );
      114      620        %VLP_VECTOR( FPTN=FDS_RESULTS, SEGID=%NULLSID );
      115      635
      116      636    1   DCL GET SBIN;
      117      637    1   DCL WGET SBIN;
      118      638    1   DCL DIFF SBIN;
      119      639    1   DCL REL SBIN;
      120      640    1   DCL I SBIN;
      121      641    1   DCL MEMORY_USED_WORDS UBIN WORD EXT;
      122      642    1   DCL MEMORY_USED_SSS UBIN WORD EXT;
      123      643        %EQU DS5 = 4;
      124      644
      125      645        %FPT_GDP( RESULTS=GDP_RESULTS );
      126      659        %FPT_GDS( FREE=NO, RESULTS=GDS_RESULTS );
      127      675        %FPT_FDP( RESULTS=FDP_RESULTS );
      128      689        %FPT_FDS( RESULTS=FDS_RESULTS );
      129      704
      130      705        %CP6$ENTS;
      131      779
      132      780
      133      781        %EJECT;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:29   
      134      782        /*D*  ENTRY:      ZIG$ALLOCATE
      135      783              CALL:       CALL ZIG$ALLOCATE( TYPE, SIZE, START$ )  ALTRET( ERROR )
      136      784              INPUT:
      137      785                      TYPE - indicates the segment to allocate the data in.
      138      786
      139      787                          TYPE            SEGMENT
      140      788                           0              Instruction segment
      141      789                           1              Data segment 2
      142      790                           2              Data segment 3
      143      791                           3              Data segment 4
      144      792                           4              Data segment 5
      145      793                           5              Data segment 6
      146      794                           6              Data segment 7
      147      795                           7              Next available segment (DS8 not available)
      148      796
      149      797                      SIZE - is the number of words to be allocated.
      150      798
      151      799              OUTPUT:
      152      800                      START$  - pointer to words allocated.
      153      801                      TYPE    - indicates segment where words were allocated.
      154      802
      155      803              DESCRIPTION:
      156      804                  The altreturn is taken if the procedure cannot allocate the
      157      805                  requested memory, or if there are no available segments.
      158      806
      159      807        */
      160      808
      161      809
      162      810
      163      811
      164      812    1   ZIG$ALLOCATE: ENTRY( TYPE, SIZE, START$ ) ALTRET;

    812  6 000003   000000 700200 xent  ZIG$ALLOCATE TSX0  ! X66_AUTO_3
         6 000004   000016 000003                    ZERO    14,3

      165      813
      166      814    2       IF TYPE = 7 THEN DO;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:30   

    814  6 000005   200003 470500                    LDP0    @TYPE,,AUTO
         6 000006   000000 235100                    LDA     0,,PR0
         6 000007   000007 115007                    CMPA    7,DL
         6 000010   000030 601000 6                  TNZ     s:823

      167      815    2           I = 0;

    815  6 000011   200012 450100                    STZ     I,,AUTO

      168      816    3           DO WHILE( I < 7 AND BASE_PTR(I) ~= ADDR(NIL) );

    816  6 000012   000014 710000 6                  TRA     s:818

      169      817    3               I = I + 1;

    817  6 000013   200012 054100                    AOS     I,,AUTO

      170      818    3               END;

    818  6 000014   200012 235100                    LDA     I,,AUTO
         6 000015   000007 115007                    CMPA    7,DL
         6 000016   000022 605000 6                  TPL     s:819
         6 000017   000000 236005 1                  LDQ     BASE_PTR,AL
         6 000020   000000 116000 7                  CMPQ    0
         6 000021   000013 601000 6                  TNZ     s:817

      171      819    2           IF I = 7 THEN ALTRETURN;

    819  6 000022   200012 235100                    LDA     I,,AUTO
         6 000023   000007 115007                    CMPA    7,DL
         6 000024   000026 601000 6                  TNZ     s:820

    819  6 000025   000000 702200 xent               TSX2  ! X66_AALT

      172      820    2           TYPE = I;

PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:31   
    820  6 000026   200003 470500                    LDP0    @TYPE,,AUTO
         6 000027   000000 755100                    STA     0,,PR0

      173      821    2           END;

      174      822
      175      823    1       DIFF = ALL_(TYPE) - ZIG$FREE_(TYPE);

    823  6 000030   000000 720100                    LXL0    0,,PR0
         6 000031   000000 236010 0                  LDQ     ALL_,X0
         6 000032   000007 136005 0                  SBLQ    ZIG$FREE_,AL
         6 000033   200010 756100                    STQ     DIFF,,AUTO

      176      824    2       IF SIZE > DIFF THEN DO;

    824  6 000034   200004 471500                    LDP1    @SIZE,,AUTO
         6 000035   100000 116100                    CMPQ    0,,PR1
         6 000036   000134 605000 6                  TPL     s:850

      177      825    2           GET = ( SIZE - DIFF + 1023 ) / 1024;

    825  6 000037   100000 236100                    LDQ     0,,PR1
         6 000040   200010 136100                    SBLQ    DIFF,,AUTO
         6 000041   001777 036007                    ADLQ    1023,DL
         6 000042   002000 506007                    DIV     1024,DL
         6 000043   200006 756100                    STQ     GET,,AUTO

      178      826    2           WGET = GET * 1024;

    826  6 000044   200006 235100                    LDA     GET,,AUTO
         6 000045   000012 735000                    ALS     10
         6 000046   200007 755100                    STA     WGET,,AUTO

      179      827    2           MEMORY_USED_WORDS = MEMORY_USED_WORDS + WGET;

    827  6 000047   000000 236000 3                  LDQ     MEMORY_USED_WORDS
         6 000050   200007 036100                    ADLQ    WGET,,AUTO
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:32   
         6 000051   000000 756000 3                  STQ     MEMORY_USED_WORDS

      180      828    3           DO CASE( TYPE );

    828  6 000052   000000 235100                    LDA     0,,PR0
         6 000053   000001 115007                    CMPA    1,DL
         6 000054   000056 602005 6                  TNC     s:828+4,AL
         6 000055   000076 710000 6                  TRA     s:838
         6 000056   000057 710000 6                  TRA     s:830

      181      829    3           CASE ( 0 );

      182      830    3               FPT_GDP.V.PAGES# = GET;

    830  6 000057   200006 235100                    LDA     GET,,AUTO
         6 000060   000032 755000 0                  STA     FPT_GDP+4

      183      831    3               CALL M$GDP( FPT_GDP ) ALTRET( ERROR );

    831  6 000061   000026 630400 0                  EPPR0   FPT_GDP
         6 000062   430003 713400                    CLIMB   alt,+12291
         6 000063   400400 401760                    pmme    nvectors=2
         6 000064   000152 702000 6                  TSX2    ERROR

      184      832    3               ALL_(0) = ALL_(0) + WGET; /* Increase allocated */

    832  6 000065   000000 236000 0                  LDQ     ALL_
         6 000066   200007 036100                    ADLQ    WGET,,AUTO
         6 000067   000000 756000 0                  STQ     ALL_

      185      833    3               IF BASE_PTR(0) = ADDR(NIL) THEN

    833  6 000070   000000 236000 1                  LDQ     BASE_PTR
         6 000071   000000 116000 7                  CMPQ    0
         6 000072   000134 601000 6                  TNZ     s:850

      186      834    3                   BASE_PTR(0) = GDP_RESULTS.PTR$;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:33   

    834  6 000073   000017 236000 0                  LDQ     GDP_RESULTS+1
         6 000074   000000 756000 1                  STQ     BASE_PTR
         6 000075   000134 710000 6                  TRA     s:850

      187      835
      188      836
      189      837    3           CASE( ELSE );

      190      838    3               FPT_GDS.V.SEGSIZE# = WGET;

    838  6 000076   200007 720100                    LXL0    WGET,,AUTO
         6 000077   000040 440000 0                  SXL0    FPT_GDS+4

      191      839    3               IF TYPE = 1 THEN FPT_GDS.V.COMMON# = '1'B;

    839  6 000100   000000 235100                    LDA     0,,PR0
         6 000101   000001 115007                    CMPA    1,DL
         6 000102   000106 601000 6                  TNZ     s:840

    839  6 000103   200000 236003                    LDQ     65536,DU
         6 000104   000040 256000 0                  ORSQ    FPT_GDS+4
         6 000105   000110 710000 6                  TRA     s:841

      192      840    3               ELSE FPT_GDS.V.COMMON# = '0'B;

    840  6 000106   000001 236000 7                  LDQ     1
         6 000107   000040 356000 0                  ANSQ    FPT_GDS+4

      193      841    3               GDS_RESULTS.PTR$ = SEG_PTR(TYPE);

    841  6 000110   000000 721100                    LXL1    0,,PR0
         6 000111   000000 236011 2                  LDQ     SEGIDS,X1
         6 000112   000023 756000 0                  STQ     GDS_RESULTS+1

      194      842    3               CALL M$GDS( FPT_GDS ) ALTRET( ERROR );

PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:34   
    842  6 000113   000034 630400 0                  EPPR0   FPT_GDS
         6 000114   430001 713400                    CLIMB   alt,gds
         6 000115   400400 401760                    pmme    nvectors=2
         6 000116   000152 702000 6                  TSX2    ERROR

      195      843    3               ALL_(TYPE) = ALL_(TYPE) + WGET; /* Increase allocated */

    843  6 000117   200003 470500                    LDP0    @TYPE,,AUTO
         6 000120   000000 720100                    LXL0    0,,PR0
         6 000121   000000 721100                    LXL1    0,,PR0
         6 000122   000000 236011 0                  LDQ     ALL_,X1
         6 000123   200007 036100                    ADLQ    WGET,,AUTO
         6 000124   000000 756010 0                  STQ     ALL_,X0

      196      844    3               IF BASE_PTR(TYPE) = ADDR(NIL) THEN

    844  6 000125   000000 720100                    LXL0    0,,PR0
         6 000126   000000 236010 1                  LDQ     BASE_PTR,X0
         6 000127   000000 116000 7                  CMPQ    0
         6 000130   000134 601000 6                  TNZ     s:850

      197      845    3                   BASE_PTR(TYPE) = GDS_RESULTS.PTR$;

    845  6 000131   000000 720100                    LXL0    0,,PR0
         6 000132   000023 236000 0                  LDQ     GDS_RESULTS+1
         6 000133   000000 756010 1                  STQ     BASE_PTR,X0

      198      846
      199      847    3               END;

      200      848    2           END;

      201      849
      202      850    1       START$ = PINCRW( BASE_PTR(TYPE), ZIG$FREE_(TYPE) );

    850  6 000134   200003 470500                    LDP0    @TYPE,,AUTO
         6 000135   000000 720100                    LXL0    0,,PR0
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:35   
         6 000136   000000 235100                    LDA     0,,PR0
         6 000137   000007 721005 0                  LXL1    ZIG$FREE_,AL
         6 000140   000000 471410 1                  LDP1    BASE_PTR,X0
         6 000141   100000 633511                    EPPR3   0,X1,PR1
         6 000142   200005 471500                    LDP1    @START$,,AUTO
         6 000143   100000 453500                    STP3    0,,PR1

      203      851    1       ZIG$FREE_(TYPE) = ZIG$FREE_(TYPE) + SIZE;

    851  6 000144   000000 235100                    LDA     0,,PR0
         6 000145   200004 474500                    LDP4    @SIZE,,AUTO
         6 000146   000007 236005 0                  LDQ     ZIG$FREE_,AL
         6 000147   400000 036100                    ADLQ    0,,PR4
         6 000150   000007 756005 0                  STQ     ZIG$FREE_,AL

      204      852    1       RETURN;

    852  6 000151   000000 702200 xent               TSX2  ! X66_ARET

      205      853
      206      854    1   ERROR:
      207      855    1       ALTRETURN;

    855  6 000152   000000 702200 xent  ERROR        TSX2  ! X66_AALT

      208      856
      209      857        %EJECT;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:36   
      210      858        /*D*  ENTRY:      ZIG$FREE
      211      859              CALL:       CALL ZIG$FREE( TYPE, SIZE )
      212      860              INPUT:
      213      861                      TYPE  - indicates which segment to free memory from.
      214      862
      215      863                          TYPE                SEGMENT
      216      864                           0                  Instruction segment
      217      865                           1                  Data segment 2
      218      866                           2                  Data segment 3
      219      867                           3                  Data segment 4
      220      868                           4                  Data segment 5
      221      869                           5                  Data segment 6
      222      870                           6                  Data segment 7
      223      871                           7                  Free memory from all segments except DS8.
      224      872
      225      873                      SIZE  - is the number of words to free.
      226      874                              SIZE < 0   =>   free all memory allocated.
      227      875        */
      228      876
      229      877
      230      878
      231      879    1   ZIG$FREE: ENTRY( TYPE, SIZE ) ALTRET;

    879  6 000153   000000 700200 xent  ZIG$FREE     TSX0  ! X66_AUTO_3
         6 000154   000016 000003                    ZERO    14,3

      232      880
      233      881    2       IF TYPE = 7 THEN DO;

    881  6 000155   200003 470500                    LDP0    @TYPE,,AUTO
         6 000156   000000 235100                    LDA     0,,PR0
         6 000157   000007 115007                    CMPA    7,DL
         6 000160   000177 601000 6                  TNZ     s:890

      234      882    2           MEMORY_USED_WORDS = 0;

    882  6 000161   000000 450000 3                  STZ     MEMORY_USED_WORDS
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:37   

      235      883    2           MEMORY_USED_SSS = 0;

    883  6 000162   000000 450000 4                  STZ     MEMORY_USED_SSS

      236      884    3           DO I = 0 TO 7;

    884  6 000163   200012 450100                    STZ     I,,AUTO

      237      885    3               ZIG$FREE_(I) = 0;

    885  6 000164   200012 720100                    LXL0    I,,AUTO
         6 000165   000007 450010 0                  STZ     ZIG$FREE_,X0

      238      886    3               CALL ZIG$FREE_SEG(I);

    886  6 000166   200012 630500                    EPPR0   I,,AUTO
         6 000167   200015 450500                    STP0    I+3,,AUTO
         6 000170   000226 701000 6                  TSX1    ZIG$FREE_SEG
         6 000171   000000 011000                    NOP     0

      239      887    3               END;

    887  6 000172   200012 054100                    AOS     I,,AUTO
         6 000173   200012 235100                    LDA     I,,AUTO
         6 000174   000007 115007                    CMPA    7,DL
         6 000175   000164 604400 6                  TMOZ    s:885

      240      888    2           END;

    888  6 000176   000225 710000 6                  TRA     s:897

      241      889    2       ELSE DO;

      242      890    2           IF SIZE < 0 THEN ZIG$FREE_(TYPE) = 0;

    890  6 000177   200004 471500                    LDP1    @SIZE,,AUTO
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:38   
         6 000200   100000 235100                    LDA     0,,PR1
         6 000201   000205 605000 6                  TPL     s:891

    890  6 000202   000000 235100                    LDA     0,,PR0
         6 000203   000007 450005 0                  STZ     ZIG$FREE_,AL
         6 000204   000211 710000 6                  TRA     s:892

      243      891    2           ELSE ZIG$FREE_(TYPE) = ZIG$FREE_(TYPE) - SIZE;

    891  6 000205   000000 235100                    LDA     0,,PR0
         6 000206   000007 236005 0                  LDQ     ZIG$FREE_,AL
         6 000207   100000 136100                    SBLQ    0,,PR1
         6 000210   000007 756005 0                  STQ     ZIG$FREE_,AL

      244      892    2           CALL ZIG$FREE_SEG( TYPE );

    892  6 000211   200003 236100                    LDQ     @TYPE,,AUTO
         6 000212   200015 756100                    STQ     I+3,,AUTO
         6 000213   000226 701000 6                  TSX1    ZIG$FREE_SEG
         6 000214   000000 011000                    NOP     0

      245      893    2           IF TYPE = %DS5 THEN

    893  6 000215   200003 470500                    LDP0    @TYPE,,AUTO
         6 000216   000000 235100                    LDA     0,,PR0
         6 000217   000004 115007                    CMPA    4,DL
         6 000220   000225 601000 6                  TNZ     s:897

      246      894    2               MEMORY_USED_SSS = MEMORY_USED_SSS - SIZE;

    894  6 000221   200004 471500                    LDP1    @SIZE,,AUTO
         6 000222   000000 236000 4                  LDQ     MEMORY_USED_SSS
         6 000223   100000 136100                    SBLQ    0,,PR1
         6 000224   000000 756000 4                  STQ     MEMORY_USED_SSS

      247      895    2           END;

PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:39   
      248      896
      249      897    1       RETURN;

    897  6 000225   000000 702200 xent               TSX2  ! X66_ARET

      250      898
      251      899
      252      900        %EJECT;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:40   
      253      901    1   ZIG$FREE_SEG: PROC( TYPE );

    901  6 000226   200014 741300       ZIG$FREE_SEG STX1  ! I+2,,AUTO

      254      902
      255      903    2   DCL TYPE UBIN;
      256      904
      257      905
      258      906    2       DIFF = ALL_(TYPE) - ZIG$FREE_(TYPE);

    906  6 000227   200015 470500                    LDP0    @TYPE,,AUTO
         6 000230   000000 720100                    LXL0    0,,PR0
         6 000231   000000 236010 0                  LDQ     ALL_,X0
         6 000232   000007 136010 0                  SBLQ    ZIG$FREE_,X0
         6 000233   200010 756100                    STQ     DIFF,,AUTO

      259      907    3       DO CASE(TYPE);

    907  6 000234   000000 235100                    LDA     0,,PR0
         6 000235   000001 115007                    CMPA    1,DL
         6 000236   000240 602005 6                  TNC     s:907+4,AL
         6 000237   000271 710000 6                  TRA     s:923
         6 000240   000241 710000 6                  TRA     s:909

      260      908    3       CASE( 0 );

      261      909    4           IF DIFF >= 1024 THEN DO;

    909  6 000241   002000 116007                    CMPQ    1024,DL
         6 000242   000262 604000 6                  TMI     s:916

      262      910    4               ALL_(0) = ALL_(0) - DIFF;

    910  6 000243   000000 236000 0                  LDQ     ALL_
         6 000244   200010 136100                    SBLQ    DIFF,,AUTO
         6 000245   000000 756000 0                  STQ     ALL_

PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:41   
      263      911    4               REL = DIFF / 1024;

    911  6 000246   200010 236100                    LDQ     DIFF,,AUTO
         6 000247   002000 506007                    DIV     1024,DL
         6 000250   200011 756100                    STQ     REL,,AUTO

      264      912    4               FPT_FDP.V.PAGES# = REL;

    912  6 000251   000046 756000 0                  STQ     FPT_FDP+4

      265      913    4               CALL M$FDP( FPT_FDP ) ALTRET( LAST_RELEASED );

    913  6 000252   000042 630400 0                  EPPR0   FPT_FDP
         6 000253   430004 713400                    CLIMB   alt,+12292
         6 000254   400400 401760                    pmme    nvectors=2
         6 000255   000264 702000 6                  TSX2    LAST_RELEASED

      266      914    4               ALL_(0) = ALL_(0) - REL * 1024;

    914  6 000256   200011 336100                    LCQ     REL,,AUTO
         6 000257   000012 736000                    QLS     10
         6 000260   000000 036000 0                  ADLQ    ALL_
         6 000261   000000 756000 0                  STQ     ALL_

      267      915    4               END;

      268      916    3           RETURN;

    916  6 000262   200014 221300                    LDX1  ! I+2,,AUTO
         6 000263   000001 702211                    TSX2  ! 1,X1

      269      917    3   LAST_RELEASED:
      270      918    3           ALL_(0) = 0;

    918  6 000264   000000 450000 0     LAST_RELEAS* STZ     ALL_

      271      919    3           ZIG$FREE_(0) = 0;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:42   

    919  6 000265   000007 450000 0                  STZ     ZIG$FREE_

      272      920    3           BASE_PTR(0) = ADDR(NIL);

    920  6 000266   000000 236000 7                  LDQ     0
         6 000267   000000 756000 1                  STQ     BASE_PTR
         6 000270   000332 710000 6                  TRA     IGNORE

      273      921
      274      922    3       CASE( ELSE );

      275      923    3           REL = ( DIFF / 1024 ) * 1024;

    923  6 000271   002000 506007                    DIV     1024,DL
         6 000272   000012 736000                    QLS     10
         6 000273   200011 756100                    STQ     REL,,AUTO

      276      924    4           IF REL >= 1024 THEN DO;

    924  6 000274   002000 116007                    CMPQ    1024,DL
         6 000275   000322 604000 6                  TMI     s:932

      277      925    4               ALL_(TYPE) = ALL_(TYPE) - REL;

    925  6 000276   000000 236010 0                  LDQ     ALL_,X0
         6 000277   200011 136100                    SBLQ    REL,,AUTO
         6 000300   000000 756010 0                  STQ     ALL_,X0

      278      926    4               FPT_FDS.V.SEGSIZE# = REL;

    926  6 000301   200011 722100                    LXL2    REL,,AUTO
         6 000302   000054 442000 0                  SXL2    FPT_FDS+4

      279      927    4               FDS_RESULTS.PTR$ = SEG_PTR(TYPE);

    927  6 000303   000000 720100                    LXL0    0,,PR0
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:43   
         6 000304   000000 236010 2                  LDQ     SEGIDS,X0
         6 000305   000025 756000 0                  STQ     FDS_RESULTS+1

      280      928    4               IF TYPE = 1 THEN FPT_FDS.V.COMMON# = '1'B;

    928  6 000306   000000 235100                    LDA     0,,PR0
         6 000307   000001 115007                    CMPA    1,DL
         6 000310   000314 601000 6                  TNZ     s:929

    928  6 000311   200000 236003                    LDQ     65536,DU
         6 000312   000054 256000 0                  ORSQ    FPT_FDS+4
         6 000313   000316 710000 6                  TRA     s:930

      281      929    4               ELSE FPT_FDS.V.COMMON# = '0'B;

    929  6 000314   000001 236000 7                  LDQ     1
         6 000315   000054 356000 0                  ANSQ    FPT_FDS+4

      282      930    4               CALL M$FDS( FPT_FDS ) ALTRET( IGNORE );

    930  6 000316   000050 630400 0                  EPPR0   FPT_FDS
         6 000317   430002 713400                    CLIMB   alt,fds
         6 000320   400400 401760                    pmme    nvectors=2
         6 000321   000332 702000 6                  TSX2    IGNORE

      283      931    4               END;

      284      932    4           IF ALL_(TYPE) = 0 THEN DO;

    932  6 000322   200015 470500                    LDP0    @TYPE,,AUTO
         6 000323   000000 720100                    LXL0    0,,PR0
         6 000324   000000 235010 0                  LDA     ALL_,X0
         6 000325   000332 601000 6                  TNZ     IGNORE

      285      933    4               ALL_(TYPE) = 0;

    933  6 000326   000000 450010 0                  STZ     ALL_,X0
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:44   

      286      934    4               ZIG$FREE_(TYPE) = 0;

    934  6 000327   000007 450010 0                  STZ     ZIG$FREE_,X0

      287      935    4               BASE_PTR(TYPE) = ADDR(NIL);

    935  6 000330   000000 236000 7                  LDQ     0
         6 000331   000000 756010 1                  STQ     BASE_PTR,X0

      288      936    4               END;

      289      937    3           END;

      290      938
      291      939    2   IGNORE:
      292      940    2       RETURN;

    940  6 000332   200014 221300       IGNORE       LDX1  ! I+2,,AUTO
         6 000333   000001 702211                    TSX2  ! 1,X1

ALL_
 Sect OctLoc
   0     000   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     004   000000 000000   000000 000000   000000 000000                    ............

ZIG$FREE_
 Sect OctLoc
   0     007   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     013   000000 000000   000000 000000   000000 000000                    ............

GDP_RESULTS
 Sect OctLoc
   0     016   000000 177640   000000 006014                                    ........

FDP_RESULTS
 Sect OctLoc
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:45   
   0     020   000000 177640   000000 006014                                    ........

GDS_RESULTS
 Sect OctLoc
   0     022   000000 177640   000000 006014                                    ........

FDS_RESULTS
 Sect OctLoc
   0     024   000000 177640   000000 006014                                    ........

FPT_GDP
 Sect OctLoc
   0     026   000001 777640   000032 006000   000001 777640   000016 006000    ................
   0     032   000000 000000   ****** ******                                    ........

FPT_GDS
 Sect OctLoc
   0     034   000001 777640   000040 006000   000001 777640   000022 006000    ..... ..........
   0     040   000600 000000   ****** ******                                    ........

FPT_FDP
 Sect OctLoc
   0     042   000001 777640   000046 006000   000001 777640   000020 006000    .....&..........
   0     046   000000 000000   ****** ******                                    ........

FPT_FDS
 Sect OctLoc
   0     050   000001 777640   000054 006000   000001 777640   000024 006000    .....,..........
   0     054   000000 000000   ****** ******                                    ........

BASE_PTR
 Sect OctLoc
   1     000   000000 006014   000000 006014   000000 006014   000000 006014    ................
   1     004   000000 006014   000000 006014   000000 006014                    ............

SEGIDS
 Sect OctLoc
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:46   
   2     000   000000 006000   000000 006005   000000 006006   000000 006007    ................
   2     004   000000 006010   000000 006011   000000 006012                    ............

(unnamed)
 Sect OctLoc
   7     000   000000 006014   577777 777777                                    ........
      293      941    2   END ZIG$FREE_SEG;
      294      942
      295      943        %EJECT;
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:47   
      296      944
      297      945
      298      946
      299      947    1   END ZIG$MM;

PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:48   
--  Include file information  --

   B_SEGIDS_C.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIG$MM.

   Procedure ZIG$MM requires 220 words for executable code.
   Procedure ZIG$MM requires 14 words of local(AUTO) storage.

    No errors detected in file ZIG$G_MEM6.:ZIC0TSI    .
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:49   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:50   
          MINI XREF LISTING

ALL_
       566**DCL       823>>ASSIGN    832<<ASSIGN    832>>ASSIGN    843<<ASSIGN    843>>ASSIGN    906>>ASSIGN
       910<<ASSIGN    910>>ASSIGN    914<<ASSIGN    914>>ASSIGN    918<<ASSIGN    925<<ASSIGN    925>>ASSIGN
       932>>IF        933<<ASSIGN
BASE_PTR
       568**DCL       816>>DOWHILE   833>>IF        834<<ASSIGN    844>>IF        845<<ASSIGN    850>>ASSIGN
       920<<ASSIGN    935<<ASSIGN
DIFF
       638**DCL       823<<ASSIGN    824>>IF        825>>ASSIGN    906<<ASSIGN    909>>IF        910>>ASSIGN
       911>>ASSIGN    923>>ASSIGN
ERROR
       855**LABEL     831--CALLALT   842--CALLALT
FDP_RESULTS
       601**DCL       686--DCLINIT
FDP_RESULTS.W2
       602**DCL       603--REDEF
FDS_RESULTS
       631**DCL       700--DCLINIT
FDS_RESULTS.PTR$
       633**DCL       927<<ASSIGN
FDS_RESULTS.W2
       632**DCL       633--REDEF
FPT_FDP
       686**DCL       913<>CALL
FPT_FDP.V
       686**DCL       686--DCLINIT
FPT_FDP.V.PAGES#
       687**DCL       912<<ASSIGN
FPT_FDS
       700**DCL       930<>CALL
FPT_FDS.V
       700**DCL       700--DCLINIT
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:51   
FPT_FDS.V.COMMON#
       701**DCL       928<<ASSIGN    929<<ASSIGN
FPT_FDS.V.SEGSIZE#
       702**DCL       926<<ASSIGN
FPT_GDP
       656**DCL       831<>CALL
FPT_GDP.V
       656**DCL       656--DCLINIT
FPT_GDP.V.PAGES#
       657**DCL       830<<ASSIGN
FPT_GDS
       670**DCL       842<>CALL
FPT_GDS.V
       670**DCL       670--DCLINIT
FPT_GDS.V.COMMON#
       671**DCL       839<<ASSIGN    840<<ASSIGN
FPT_GDS.V.SEGSIZE#
       673**DCL       838<<ASSIGN
GDP_RESULTS
       586**DCL       656--DCLINIT
GDP_RESULTS.PTR$
       588**DCL       834>>ASSIGN
GDP_RESULTS.W2
       587**DCL       588--REDEF
GDS_RESULTS
       616**DCL       670--DCLINIT
GDS_RESULTS.PTR$
       618**DCL       841<<ASSIGN    845>>ASSIGN
GDS_RESULTS.W2
       617**DCL       618--REDEF
GET
       636**DCL       825<<ASSIGN    826>>ASSIGN    830>>ASSIGN
I
       640**DCL       815<<ASSIGN    816>>DOWHILE   816>>DOWHILE   817<<ASSIGN    817>>ASSIGN    819>>IF
       820>>ASSIGN    884<<DOINDEX   885>>ASSIGN    886<>CALL
IGNORE IN PROCEDURE ZIG$FREE_SEG
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:52   
       940**LABEL     930--CALLALT
LAST_RELEASED IN PROCEDURE ZIG$FREE_SEG
       918**LABEL     913--CALLALT
M$FDP
       743**DCL-ENT   913--CALL
M$FDS
       742**DCL-ENT   930--CALL
M$GDP
       743**DCL-ENT   831--CALL
M$GDS
       742**DCL-ENT   842--CALL
MEMORY_USED_SSS
       642**DCL       883<<ASSIGN    894<<ASSIGN    894>>ASSIGN
MEMORY_USED_WORDS
       641**DCL       827<<ASSIGN    827>>ASSIGN    882<<ASSIGN
REL
       639**DCL       911<<ASSIGN    912>>ASSIGN    914>>ASSIGN    923<<ASSIGN    924>>IF        925>>ASSIGN
       926>>ASSIGN
SEGIDS
       569**DCL       572--REDEF
SEG_PTR
       572**DCL       841>>ASSIGN    927>>ASSIGN
SIZE
       563**DCL        19--PROC      812--ENTRY     824>>IF        825>>ASSIGN    851>>ASSIGN    879--ENTRY
       890>>IF        891>>ASSIGN    894>>ASSIGN
START$
       564**DCL        19--PROC      812--ENTRY     850<<ASSIGN
TYPE
       562**DCL        19--PROC      812--ENTRY     814>>IF        820<<ASSIGN    823>>ASSIGN    823>>ASSIGN
       828>>DOCASE    839>>IF        841>>ASSIGN    843>>ASSIGN    843>>ASSIGN    844>>IF        845>>ASSIGN
       850>>ASSIGN    850>>ASSIGN    851>>ASSIGN    851>>ASSIGN    879--ENTRY     881>>IF        890>>ASSIGN
       891>>ASSIGN    891>>ASSIGN    892<>CALL      893>>IF
TYPE IN PROCEDURE ZIG$FREE_SEG
       903**DCL       901--PROC      906>>ASSIGN    906>>ASSIGN    907>>DOCASE    925>>ASSIGN    925>>ASSIGN
       927>>ASSIGN    928>>IF        932>>IF        933>>ASSIGN    934>>ASSIGN    935>>ASSIGN
WGET
PL6.E3A0      #002=ZIG$MM File=ZIG$G_MEM6.:ZIC0TSI                               FRI 09/05/97 12:05 Page:53   
       637**DCL       826<<ASSIGN    827>>ASSIGN    832>>ASSIGN    838>>ASSIGN    843>>ASSIGN
ZIG$FREE_
       567**DCL       823>>ASSIGN    850>>ASSIGN    851<<ASSIGN    851>>ASSIGN    885<<ASSIGN    890<<ASSIGN
       891<<ASSIGN    891>>ASSIGN    906>>ASSIGN    919<<ASSIGN    934<<ASSIGN
ZIG$FREE_SEG
       901**PROC      886--CALL      892--CALL
