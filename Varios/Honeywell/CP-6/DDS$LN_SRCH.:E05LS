VERSION E05

PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:1    
        1        1        /*M* DDS$LN_SRCH Statement number search routine for Delta. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$LN_SRCH
        9        9             PURPOSE: To resolve a line number reference.
       10       10             DESCRIPTION: Searches through the executable statements table
       11       11             within the established logical block constraints for the given
       12       12             line number. */
       13       13        /*D* NAME: DDS$LN_SRCH
       14       14             CALL: CALL DDS$LN_SRCH(LINE,INTRY$,OUTRY$) ALTRET(found);
       15       15                   OUTRY$ is optional.
       16       16             INTERFACE: "STATIC DATA" schema access variables.
       17       17             ENVIRONMENT: Delta.
       18       18             INPUT: LINE - Desired line number (2 parameters only).
       19       19                    LINE - Substatement offset (3 parameters only).
       20       20                    INTRY$ - Current place in statements table (3 parameters only).
       21       21             OUTPUT: INTRY$ - Entry pointer (2 parameters only).
       22       22                     OUTRY$ - Entry pointer (3 parameters only).
       23       23             SCRATCH: Local auto only.
       24       24             DESCRIPTION: Searches through the executable statements table
       25       25             within the established logical block constraints for the given
       26       26             line number. When entered with 3 parameters searching is constrained
       27       27             by identical consecutive lines. When entered with 2 parameters searching
       28       28             is not constained by the current logical block only if the reference
       29       29             is not qualified or not at the outermost logical block. ALTRETURNs
       30       30             if the line number is found, else RETURNs. */
       31       31                                                /**/
       32       32        DDS$LN_SRCH: PROC(LINE,INTRY$,OUTRY$) ALTRET;
       33       33                                                /**/
       34       34    1   DCL LINE SBIN;                          /* Input line number */
       35       35    1   DCL INTRY$ PTR;                         /* Entry ptr input */
       36       36    1   DCL OUTRY$ PTR;                         /* Entry ptr output */
       37       37    1   DCL CLB# SBIN;                          /* Current logical block number */
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:2    
       38       38    1   DCL EXST$ PTR;                          /* Pointer to current entry */
       39       39    1   DCL CLB$ PTR;                      /* Pointer to current logical block table */
       40       40    1   DCL USECLB# BIT(1) ALIGNED;             /* Use logical block constraints flag */
       41       41    1   DCL FINE SBIN;                          /* Line to find */
       42       42    1   DCL EXSTEND SBIN;                       /* Table index end */
       43       43    1   DCL IX SBIN;                            /* Do index */
       44       44    1   DCL NTRY# SBIN;                         /* Temp for entry number */
       45       45        /*D* EXSTEND, IX , & NTRY# must be SBIN */
       46       46                                                /**/
       47       47        %INCLUDE B$OBJECT_C;                    /* Object language structures */
       48     3477        %B$EXST (STCLASS="BASED(EXST$)");
       49     3584        %B$LOGBLK (STCLASS="BASED(CLB$)");
       50     3615        %B$STTYPESUBS;
       51     3684        %INCLUDE XUH_MACRO_C;
       52     3768        %INCLUDE DD_SD_M;                       /* "STATIC DATA " */
       53     5104        %S_D;
       54     6422    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       55     6423    1   DCL DDF$N_EXST ENTRY(1) ALTRET;
       56     6424                                                /**/
       57     6425                                                /* Make sure we can access the schema */
       58     6426    1        IF ( NOT S_D.SCHEMA ) OR ( NOT S_D.QSCH.OK ) OR ( S_D.EXST$ = ADDR( NIL ) )
       59     6427    1        THEN GOTO RETN;                    /* We can't */
       60     6428                                           /* Assume no logical block constraints */
       61     6429    1        USECLB# = '0'B;
       62     6430    1        CLB# = 0;
       63     6431    1        CLB$ = S_D.LB$;
       64     6432                                                /**/
       65     6433    1        IF ( ADDR(OUTRY$) ~= ADDR(NIL) )
       66     6434    2        THEN DO;                           /* Called with 3 parameters */
       67     6435    2             EXST$ = INTRY$;
       68     6436    2             FINE = B$EXST.LINENUM;        /* Get current line number */
       69     6437    3             DO IX = 1 TO LINE;
       70     6438    3   LOOP:
       71     6439    3                  CALL DDF$N_EXST( EXST$ ) ALTRET( RETN );
       72     6440    3                  IF ( B$EXST.STTYPE = %S@MISC )
       73     6441    3                  THEN GOTO LOOP;
       74     6442    3                  IF ( B$EXST.LINENUM = FINE )
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:3    
       75     6443    4                  THEN DO;                 /* Continue searching */
       76     6444    4                     END;
       77     6445    3                  ELSE GOTO RETN;
       78     6446    3                END;                       /* "DO IX" */
       79     6447                                                /* Got it */
       80     6448    2             OUTRY$ = EXST$;
       81     6449    2             ALTRETURN;
       82     6450    2           END;                            /* Called with 3 parameters */
       83     6451                                                /**/
       84     6452    2        ELSE DO;                           /* Called with 2 parameters */
       85     6453    2             IF ( (S_D.QUALIFIED) AND (S_D.QSCH.LB# > 0) )
       86     6454    3             THEN DO;                      /* Qualification @ LB > 0 */
       87     6455    3                  USECLB# = '1'B;
       88     6456    3                  CLB# = S_D.QSCH.LB#;
       89     6457    3                  CLB$ = PINCRW( S_D.LB$, CLB# * SIZEW( B$LOGBLK ) );
       90     6458    3                END;                       /* Qualification @ LB > 0 */
       91     6459    2             NTRY# = B$LOGBLK.STOFFST / SIZEW( B$EXST );
       92     6460    2             CALL DDF$EXST_#( NTRY#, EXST$ ) ALTRET( RETN );
       93     6461    2             EXSTEND = NTRY# + B$LOGBLK.STSIZE - 1;
       94     6462    3             DO IX = NTRY# TO EXSTEND;
       95     6463    3                  IF ( B$EXST.STTYPE ~= %S@MISC )
       96     6464    4                  THEN DO;
       97     6465    4                       IF (B$EXST.LINENUM = LINE) AND
       98     6466    4                         ( (NOT USECLB#) OR ( (USECLB# AND (B$EXST.LBE = CLB#) ) ) )
       99     6467    5                       THEN DO;            /* Got it */
      100     6468    5                            INTRY$ = EXST$;
      101     6469    5                            ALTRETURN;     /* Done - split */
      102     6470    5                          END;
      103     6471    4                     END;
      104     6472    3                  CALL DDF$N_EXST( EXST$ ) ALTRET( RETN );
      105     6473    3                END;                       /* "DO IX" */
      106     6474    2           END;                            /* Called with 2 parameters */
      107     6475                                                /**/
      108     6476    1   RETN: RETURN;
      109     6477                                                /**/
      110     6478    1   END DDS$LN_SRCH;

PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:4    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$LN_SRCH.

   Procedure DDS$LN_SRCH requires 117 words for executable code.
   Procedure DDS$LN_SRCH requires 16 words of local(AUTO) storage.

    No errors detected in file DDS$LN_SRCH.:E05TSI    .

PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:5    

 Object Unit name= DDS$LN_SRCH                                File name= DDS$LN_SRCH.:E05TOU
 UTS= JUL 29 '97 14:18:21.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   117    165  DDS$LN_SRCH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  DDS$LN_SRCH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 DDF$N_EXST
 yes     yes           Std       2 DDF$EXST_#
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:6    


        1        1        /*M* DDS$LN_SRCH Statement number search routine for Delta. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$LN_SRCH
        9        9             PURPOSE: To resolve a line number reference.
       10       10             DESCRIPTION: Searches through the executable statements table
       11       11             within the established logical block constraints for the given
       12       12             line number. */
       13       13        /*D* NAME: DDS$LN_SRCH
       14       14             CALL: CALL DDS$LN_SRCH(LINE,INTRY$,OUTRY$) ALTRET(found);
       15       15                   OUTRY$ is optional.
       16       16             INTERFACE: "STATIC DATA" schema access variables.
       17       17             ENVIRONMENT: Delta.
       18       18             INPUT: LINE - Desired line number (2 parameters only).
       19       19                    LINE - Substatement offset (3 parameters only).
       20       20                    INTRY$ - Current place in statements table (3 parameters only).
       21       21             OUTPUT: INTRY$ - Entry pointer (2 parameters only).
       22       22                     OUTRY$ - Entry pointer (3 parameters only).
       23       23             SCRATCH: Local auto only.
       24       24             DESCRIPTION: Searches through the executable statements table
       25       25             within the established logical block constraints for the given
       26       26             line number. When entered with 3 parameters searching is constrained
       27       27             by identical consecutive lines. When entered with 2 parameters searching
       28       28             is not constained by the current logical block only if the reference
       29       29             is not qualified or not at the outermost logical block. ALTRETURNs
       30       30             if the line number is found, else RETURNs. */
       31       31                                                /**/
       32       32        DDS$LN_SRCH: PROC(LINE,INTRY$,OUTRY$) ALTRET;

     32  0 000000   000000 700200 xent  DDS$LN_SRCH  TSX0  ! X66_AUTO_3
         0 000001   000020 000003                    ZERO    16,3

PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:7    
       33       33                                                /**/
       34       34    1   DCL LINE SBIN;                          /* Input line number */
       35       35    1   DCL INTRY$ PTR;                         /* Entry ptr input */
       36       36    1   DCL OUTRY$ PTR;                         /* Entry ptr output */
       37       37    1   DCL CLB# SBIN;                          /* Current logical block number */
       38       38    1   DCL EXST$ PTR;                          /* Pointer to current entry */
       39       39    1   DCL CLB$ PTR;                      /* Pointer to current logical block table */
       40       40    1   DCL USECLB# BIT(1) ALIGNED;             /* Use logical block constraints flag */
       41       41    1   DCL FINE SBIN;                          /* Line to find */
       42       42    1   DCL EXSTEND SBIN;                       /* Table index end */
       43       43    1   DCL IX SBIN;                            /* Do index */
       44       44    1   DCL NTRY# SBIN;                         /* Temp for entry number */
       45       45        /*D* EXSTEND, IX , & NTRY# must be SBIN */
       46       46                                                /**/
       47       47        %INCLUDE B$OBJECT_C;                    /* Object language structures */
       48     3477        %B$EXST (STCLASS="BASED(EXST$)");
       49     3584        %B$LOGBLK (STCLASS="BASED(CLB$)");
       50     3615        %B$STTYPESUBS;
       51     3684        %INCLUDE XUH_MACRO_C;
       52     3768        %INCLUDE DD_SD_M;                       /* "STATIC DATA " */
       53     5104        %S_D;
       54     6422    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       55     6423    1   DCL DDF$N_EXST ENTRY(1) ALTRET;
       56     6424                                                /**/
       57     6425                                                /* Make sure we can access the schema */
       58     6426    1        IF ( NOT S_D.SCHEMA ) OR ( NOT S_D.QSCH.OK ) OR ( S_D.EXST$ = ADDR( NIL ) )

   6426  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   000052 234100                    SZN     42,,PR0
         0 000004   000164 605000 0                  TPL     RETN
         0 000005   000733 234100                    SZN     475,,PR0
         0 000006   000164 605000 0                  TPL     RETN
         0 000007   001010 236100                    LDQ     520,,PR0
         0 000010   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000011   000164 600000 0                  TZE     RETN

       59     6427    1        THEN GOTO RETN;                    /* We can't */
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:8    
       60     6428                                           /* Assume no logical block constraints */
       61     6429    1        USECLB# = '0'B;

   6429  0 000012   200011 450100                    STZ     USECLB#,,AUTO

       62     6430    1        CLB# = 0;

   6430  0 000013   200006 450100                    STZ     CLB#,,AUTO

       63     6431    1        CLB$ = S_D.LB$;

   6431  0 000014   001037 236100                    LDQ     543,,PR0
         0 000015   200010 756100                    STQ     CLB$,,AUTO

       64     6432                                                /**/
       65     6433    1        IF ( ADDR(OUTRY$) ~= ADDR(NIL) )

   6433  0 000016   200005 236100                    LDQ     @OUTRY$,,AUTO
         0 000017   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000020   000064 600000 0                  TZE     s:6453

       66     6434    2        THEN DO;                           /* Called with 3 parameters */

       67     6435    2             EXST$ = INTRY$;

   6435  0 000021   200004 471500                    LDP1    @INTRY$,,AUTO
         0 000022   100000 236100                    LDQ     0,,PR1
         0 000023   200007 756100                    STQ     EXST$,,AUTO

       68     6436    2             FINE = B$EXST.LINENUM;        /* Get current line number */

   6436  0 000024   200007 473500                    LDP3    EXST$,,AUTO
         0 000025   300002 236100                    LDQ     2,,PR3
         0 000026   777777 376007                    ANQ     -1,DL
         0 000027   200012 756100                    STQ     FINE,,AUTO

       69     6437    3             DO IX = 1 TO LINE;
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:9    

   6437  0 000030   000001 235007                    LDA     1,DL
         0 000031   200014 755100                    STA     IX,,AUTO
         0 000032   000054 710000 0                  TRA     s:6446+1

       70     6438    3   LOOP:
       71     6439    3                  CALL DDF$N_EXST( EXST$ ) ALTRET( RETN );

   6439  0 000033   200007 630500       LOOP         EPPR0   EXST$,,AUTO
         0 000034   200016 450500                    STP0    NTRY#+1,,AUTO
         0 000035   200016 630500                    EPPR0   NTRY#+1,,AUTO
         0 000036   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000037   000000 701000 xent               TSX1    DDF$N_EXST
         0 000040   000164 702000 0                  TSX2    RETN

       72     6440    3                  IF ( B$EXST.STTYPE = %S@MISC )

   6440  0 000041   200007 470500                    LDP0    EXST$,,AUTO
         0 000042   000002 236100                    LDQ     2,,PR0
         0 000043   000177 376003                    ANQ     127,DU
         0 000044   000150 116003                    CMPQ    104,DU
         0 000045   000033 600000 0                  TZE     LOOP

       73     6441    3                  THEN GOTO LOOP;
       74     6442    3                  IF ( B$EXST.LINENUM = FINE )

   6442  0 000046   000002 236100                    LDQ     2,,PR0
         0 000047   777777 376007                    ANQ     -1,DL
         0 000050   200012 116100                    CMPQ    FINE,,AUTO
         0 000051   000164 601000 0                  TNZ     RETN

       75     6443    4                  THEN DO;                 /* Continue searching */

       76     6444    4                     END;

   6444  0 000052   000053 710000 0                  TRA     s:6446

PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:10   
       77     6445    3                  ELSE GOTO RETN;
       78     6446    3                END;                       /* "DO IX" */

   6446  0 000053   200014 054100                    AOS     IX,,AUTO
         0 000054   200003 470500                    LDP0    @LINE,,AUTO
         0 000055   200014 236100                    LDQ     IX,,AUTO
         0 000056   000000 116100                    CMPQ    0,,PR0
         0 000057   000033 604400 0                  TMOZ    LOOP

       79     6447                                                /* Got it */
       80     6448    2             OUTRY$ = EXST$;

   6448  0 000060   200007 236100                    LDQ     EXST$,,AUTO
         0 000061   200005 471500                    LDP1    @OUTRY$,,AUTO
         0 000062   100000 756100                    STQ     0,,PR1

       81     6449    2             ALTRETURN;

   6449  0 000063   000000 702200 xent               TSX2  ! X66_AALT

       82     6450    2           END;                            /* Called with 3 parameters */
       83     6451                                                /**/
       84     6452    2        ELSE DO;                           /* Called with 2 parameters */

       85     6453    2             IF ( (S_D.QUALIFIED) AND (S_D.QSCH.LB# > 0) )

   6453  0 000064   000712 234100                    SZN     458,,PR0
         0 000065   000077 605000 0                  TPL     s:6459
         0 000066   000740 235100                    LDA     480,,PR0
         0 000067   000077 600000 0                  TZE     s:6459

       86     6454    3             THEN DO;                      /* Qualification @ LB > 0 */

       87     6455    3                  USECLB# = '1'B;

   6455  0 000070   400000 236003                    LDQ     -131072,DU
         0 000071   200011 756100                    STQ     USECLB#,,AUTO
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:11   

       88     6456    3                  CLB# = S_D.QSCH.LB#;

   6456  0 000072   200006 755100                    STA     CLB#,,AUTO

       89     6457    3                  CLB$ = PINCRW( S_D.LB$, CLB# * SIZEW( B$LOGBLK ) );

   6457  0 000073   001037 471500                    LDP1    543,,PR0
         0 000074   000002 735000                    ALS     2
         0 000075   100000 633505                    EPPR3   0,AL,PR1
         0 000076   200010 453500                    STP3    CLB$,,AUTO

       90     6458    3                END;                       /* Qualification @ LB > 0 */

       91     6459    2             NTRY# = B$LOGBLK.STOFFST / SIZEW( B$EXST );

   6459  0 000077   200010 471500                    LDP1    CLB$,,AUTO
         0 000100   100002 236100                    LDQ     2,,PR1
         0 000101   000022 772000                    QRL     18
         0 000102   000003 506007                    DIV     3,DL
         0 000103   200015 756100                    STQ     NTRY#,,AUTO

       92     6460    2             CALL DDF$EXST_#( NTRY#, EXST$ ) ALTRET( RETN );

   6460  0 000104   200007 633500                    EPPR3   EXST$,,AUTO
         0 000105   200017 453500                    STP3    NTRY#+2,,AUTO
         0 000106   200015 634500                    EPPR4   NTRY#,,AUTO
         0 000107   200016 454500                    STP4    NTRY#+1,,AUTO
         0 000110   200016 630500                    EPPR0   NTRY#+1,,AUTO
         0 000111   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000112   000000 701000 xent               TSX1    DDF$EXST_#
         0 000113   000164 702000 0                  TSX2    RETN

       93     6461    2             EXSTEND = NTRY# + B$LOGBLK.STSIZE - 1;

   6461  0 000114   200010 470500                    LDP0    CLB$,,AUTO
         0 000115   000002 236100                    LDQ     2,,PR0
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:12   
         0 000116   777777 376007                    ANQ     -1,DL
         0 000117   200015 036100                    ADLQ    NTRY#,,AUTO
         0 000120   000001 136007                    SBLQ    1,DL
         0 000121   200013 756100                    STQ     EXSTEND,,AUTO

       94     6462    3             DO IX = NTRY# TO EXSTEND;

   6462  0 000122   200015 235100                    LDA     NTRY#,,AUTO
         0 000123   200014 755100                    STA     IX,,AUTO
         0 000124   000161 710000 0                  TRA     s:6473+1

       95     6463    3                  IF ( B$EXST.STTYPE ~= %S@MISC )

   6463  0 000125   200007 470500                    LDP0    EXST$,,AUTO
         0 000126   000002 236100                    LDQ     2,,PR0
         0 000127   000177 376003                    ANQ     127,DU
         0 000130   000150 116003                    CMPQ    104,DU
         0 000131   000152 600000 0                  TZE     s:6472

       96     6464    4                  THEN DO;

       97     6465    4                       IF (B$EXST.LINENUM = LINE) AND

   6465  0 000132   200003 471500                    LDP1    @LINE,,AUTO
         0 000133   000002 236100                    LDQ     2,,PR0
         0 000134   777777 376007                    ANQ     -1,DL
         0 000135   100000 116100                    CMPQ    0,,PR1
         0 000136   000152 601000 0                  TNZ     s:6472
         0 000137   200011 234100                    SZN     USECLB#,,AUTO
         0 000140   000146 605000 0                  TPL     s:6468
         0 000141   000152 605000 0                  TPL     s:6472
         0 000142   000001 236100                    LDQ     1,,PR0
         0 000143   777777 376007                    ANQ     -1,DL
         0 000144   200006 116100                    CMPQ    CLB#,,AUTO
         0 000145   000152 601000 0                  TNZ     s:6472

       98     6466    4                         ( (NOT USECLB#) OR ( (USECLB# AND (B$EXST.LBE = CLB#) ) ) )
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:13   
       99     6467    5                       THEN DO;            /* Got it */

      100     6468    5                            INTRY$ = EXST$;

   6468  0 000146   200007 236100                    LDQ     EXST$,,AUTO
         0 000147   200004 473500                    LDP3    @INTRY$,,AUTO
         0 000150   300000 756100                    STQ     0,,PR3

      101     6469    5                            ALTRETURN;     /* Done - split */

   6469  0 000151   000000 702200 xent               TSX2  ! X66_AALT

      102     6470    5                          END;
      103     6471    4                     END;
      104     6472    3                  CALL DDF$N_EXST( EXST$ ) ALTRET( RETN );

   6472  0 000152   200007 631500                    EPPR1   EXST$,,AUTO
         0 000153   200016 451500                    STP1    NTRY#+1,,AUTO
         0 000154   200016 630500                    EPPR0   NTRY#+1,,AUTO
         0 000155   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000156   000000 701000 xent               TSX1    DDF$N_EXST
         0 000157   000164 702000 0                  TSX2    RETN

      105     6473    3                END;                       /* "DO IX" */

   6473  0 000160   200014 054100                    AOS     IX,,AUTO
         0 000161   200014 236100                    LDQ     IX,,AUTO
         0 000162   200013 116100                    CMPQ    EXSTEND,,AUTO
         0 000163   000125 604400 0                  TMOZ    s:6463

      106     6474    2           END;                            /* Called with 2 parameters */

      107     6475                                                /**/
      108     6476    1   RETN: RETURN;

   6476  0 000164   000000 702200 xent  RETN         TSX2  ! X66_ARET
      109     6477                                                /**/
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:14   
      110     6478    1   END DDS$LN_SRCH;

PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:15   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$LN_SRCH.

   Procedure DDS$LN_SRCH requires 117 words for executable code.
   Procedure DDS$LN_SRCH requires 16 words of local(AUTO) storage.

    No errors detected in file DDS$LN_SRCH.:E05TSI    .
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:16   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:17   
          MINI XREF LISTING

B$EXST
      3478**DCL      6459--ASSIGN
B$EXST.LBE
      3499**DCL      6465>>IF
B$EXST.LINENUM
      3581**DCL      6436>>ASSIGN   6442>>IF       6465>>IF
B$EXST.OU
      3487**DCL      3493--REDEF
B$EXST.STTYPE
      3511**DCL      6440>>IF       6463>>IF
B$LOGBLK
      3585**DCL      6457--ASSIGN
B$LOGBLK.STOFFST
      3600**DCL      6459>>ASSIGN
B$LOGBLK.STSIZE
      3604**DCL      6461>>ASSIGN
CLB#
        37**DCL      6430<<ASSIGN   6456<<ASSIGN   6457>>ASSIGN   6465>>IF
CLB$
        39**DCL      3585--IMP-PTR  6431<<ASSIGN   6457<<ASSIGN   6459>>ASSIGN   6461>>ASSIGN
DDF$EXST_#
      6422**DCL-ENT  6460--CALL
DDF$N_EXST
      6423**DCL-ENT  6439--CALL     6472--CALL
EXST$
        38**DCL      3478--IMP-PTR  6435<<ASSIGN   6436>>ASSIGN   6439<>CALL     6440>>IF       6442>>IF
      6448>>ASSIGN   6460<>CALL     6463>>IF       6465>>IF       6465>>IF       6468>>ASSIGN   6472<>CALL
EXSTEND
        42**DCL      6461<<ASSIGN   6462>>DOINDEX
FINE
        41**DCL      6436<<ASSIGN   6442>>IF
INTRY$
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:18   
        35**DCL        32--PROC     6435>>ASSIGN   6468<<ASSIGN
IX
        43**DCL      6437<<DOINDEX  6462<<DOINDEX
LINE
        34**DCL        32--PROC     6437>>DOINDEX  6465>>IF
LOOP
      6439**LABEL    6441--GOTO
NTRY#
        44**DCL      6459<<ASSIGN   6460<>CALL     6461>>ASSIGN   6462>>DOINDEX
OUTRY$
        36**DCL        32--PROC     6433--IF       6448<<ASSIGN
RETN
      6476**LABEL    6427--GOTO     6439--CALLALT  6445--GOTO     6460--CALLALT  6472--CALLALT
S_D.CURRENT_CHANNEL
      6056**DCL      6058--REDEF
S_D.DEBUGA
      5208**DCL      5210--REDEF
S_D.EIS
      6166**DCL      6195--REDEF
S_D.EXST$
      5512**DCL      6426>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
      6099**DCL      6100--REDEF    6114--REDEF
S_D.JDE
      5713**DCL      5714--REDEF
S_D.L$.VALUE
      5266**DCL      5272--REDEF    5280--REDEF    5283--REDEF    5286--REDEF    5289--REDEF
S_D.L$.VALUE.L
      5267**DCL      5268--REDEF    5269--REDEF
S_D.L6_MESSAGE_BUF
      6120**DCL      6122--REDEF
S_D.LB$
      5546**DCL      6431>>ASSIGN   6457>>ASSIGN
S_D.OUTPUT
      6086**DCL      6088--REDEF
S_D.QSCH.LB#
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:19   
      5422**DCL      6453>>IF       6456>>ASSIGN
S_D.QSCH.OK
      5412**DCL      6426>>IF
S_D.QUALIFIED
      5375**DCL      6453>>IF
S_D.REMOTE_MSG.FNCC
      6105**DCL      6106--REDEF
S_D.REMOTE_MSG.STXC
      6101**DCL      6102--REDEF
S_D.REMOTE_MSG.SUBFNCC
      6109**DCL      6110--REDEF
S_D.SCHEMA
      5206**DCL      6426>>IF
S_D.SV
      5165**DCL      5186--REDEF
S_D$
      6417**DCL      5113--IMP-PTR  6426>>IF       6426>>IF       6426>>IF       6431>>ASSIGN   6453>>IF
      6453>>IF       6456>>ASSIGN   6457>>ASSIGN
USECLB#
        40**DCL      6429<<ASSIGN   6455<<ASSIGN   6465>>IF       6465>>IF
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:20   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$LN_SRCH File=DDS$LN_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:21   
              MINI UREF LISTING

DDS$LN_SRCH      32**PROC
