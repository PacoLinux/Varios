      PROGRAM UNWRAP
C*T***********************************************************  
C*T*                                                         *  
C*T* Copyright (c) Bull HN Information Systems Inc., 1989    *  
C*T*                                                         *  
C*T***********************************************************  
C
C         PROGRAM "UNWRAPS" CPV/CP6 COMMAND FILES; I.E. TAKES
C         LINES ENDING WITH ; AND APPENDS THEM TOGETHER
C
C         OUTPUT HAS SPECIAL FORMAT: It indents subsequent lines at
C         the point where the first semicolon is hit.
C
C         8/10 ADDED NEW OPTION...ABILITY TO GET "ALLOW" OFF OF
C         COMMAND LINE
C
      COMMON/CHARS/INBUF,OUTBUF
      COMMON/DATA/INBEG,INEND,OBEG,OEND,DUMPS,
     *         INDCB,OUTDCB,ALLOW,INRECS,OUTRECS,DUMPED
      CHARACTER * 260 INBUF,OUTBUF
      INTEGER OBEG,OEND,OUTRECS,OUTDCB,ALLOW
      LOGICAL DUMPS,DUMPED
      DATA ALLOW/80/
      DATA INRECS,OUTRECS /0,0/
      DATA INDCB,OUTDCB /105,106/
      DUMPS = .TRUE.
      DUMPED = .TRUE.
      OEND = 256
      CALL CCBUF(ALLOW)
      IF (ALLOW .GE. 256)GOTO 1010 
      IF (ALLOW .LT. 72)GOTO 1010 
      CALL CLEARB(OUTBUF,OEND)
1000  CALL READIN (1020S)
      CALL STUFFIN
      GOTO 1000 
1010  WRITE (108,9000)
      STOP 'ME BEFORE I KILL AGAIN'
1020  IF (.NOT. DUMPED .OR. .NOT. DUMPS) CALL DUMPIT
      WRITE (108,9010) INRECS,OUTRECS
      STOP 'trying to get so much work done!'
9000  FORMAT (' *** BAD OPTION OR NUMBER TOO LARGE')
9010  FORMAT (' ** INPUT RECORDS - ',I5,/,
     *         ' ** OUTPUT RECORDS- ',I5)
      END 
      SUBROUTINE CLEARB(BUFFER,COUNT)
      CHARACTER * 1 BUFFER
      INTEGER COUNT
      DO 1000 I=1,COUNT
1000  BUFFER(I:I) = ' '
      COUNT = 1
      RETURN
      END 
      SUBROUTINE READIN(*)
      COMMON/CHARS/INBUF,OUTBUF
      COMMON/DATA/INBEG,INEND,OBEG,OEND,DUMPS,
     *         INDCB,OUTDCB,ALLOW,INRECS,OUTRECS,DUMPED
      CHARACTER * 260 INBUF,OUTBUF
      INTEGER OBEG,OEND,OUTRECS,OUTDCB,ALLOW
      LOGICAL DUMPS,DUMPED
      INBUF = ' '
      CALL BUFFERIN (INDCB, 0, INBUF, 64, ISTAT, IWORDS, IABN)
      IF (IABN .EQ. 7)GOTO 1000 
      IF (IABN .EQ. 3)GOTO 1000 
      IF (IABN .EQ. 4)GOTO 1000 
      IF (ISTAT .NE. 2)GOTO 1000 
      INRECS = INRECS+1
      CALL GETLIMS
      RETURN
1000  RETURN 1
      END 
      SUBROUTINE GETLIMS
      COMMON/CHARS/INBUF,OUTBUF
      COMMON/DATA/INBEG,INEND,OBEG,OEND,DUMPS,
     *         INDCB,OUTDCB,ALLOW,INRECS,OUTRECS,DUMPED
      CHARACTER * 260 INBUF,OUTBUF
      INTEGER OBEG,OEND,OUTRECS,OUTDCB,ALLOW
      LOGICAL DUMPS,DUMPED
      DO 1000 I=1,256,1
1000  IF (INBUF(I:I) .NE. ' ')GOTO 1010 
1010  DO 1020 J=256,1,-1
1020  IF (INBUF(J:J) .NE. ' ' )GOTO 1030 
1030  INBEG = I
      INEND = J
      IF (I .GE. 256) INBEG = 1
      IF (J .LE. INBEG) INEND = INBEG
      RETURN
      END 
      SUBROUTINE STUFFIN
      COMMON/CHARS/INBUF,OUTBUF
      COMMON/DATA/INBEG,INEND,OBEG,OEND,DUMPS,
     *         INDCB,OUTDCB,ALLOW,INRECS,OUTRECS,DUMPED
      CHARACTER * 260 INBUF,OUTBUF
      INTEGER OBEG,OEND,OUTRECS,OUTDCB,ALLOW
      LOGICAL DUMPS,DUMPED
      CALL CHECKRM
      CALL CRAM
      CALL CHECKEND
      RETURN
      END 
      SUBROUTINE CHECKRM
      COMMON/CHARS/INBUF,OUTBUF
      COMMON/DATA/INBEG,INEND,OBEG,OEND,DUMPS,
     *         INDCB,OUTDCB,ALLOW,INRECS,OUTRECS,DUMPED
      CHARACTER * 260 INBUF,OUTBUF
      INTEGER OBEG,OEND,OUTRECS,OUTDCB,ALLOW
      LOGICAL DUMPS,DUMPED
1000  MAX = OEND + (INEND - INBEG) + 1
      IF (MAX .LE. ALLOW) RETURN
      IF (DUMPS) CALL BYEBYE
      CALL DUMPIT
      DUMPED = .FALSE.
      CALL ADJUST
      GOTO 1000 
      END 
      SUBROUTINE CRAM
      COMMON/CHARS/INBUF,OUTBUF
      COMMON/DATA/INBEG,INEND,OBEG,OEND,DUMPS,
     *         INDCB,OUTDCB,ALLOW,INRECS,OUTRECS,DUMPED
      CHARACTER * 260 INBUF,OUTBUF
      INTEGER OBEG,OEND,OUTRECS,OUTDCB,ALLOW
      LOGICAL DUMPS,DUMPED
      CALL ADJUST
      CALL MOVES
      RETURN
      END 
      SUBROUTINE ADJUST
      COMMON/CHARS/INBUF,OUTBUF
      COMMON/DATA/INBEG,INEND,OBEG,OEND,DUMPS,
     *         INDCB,OUTDCB,ALLOW,INRECS,OUTRECS,DUMPED
      CHARACTER * 260 INBUF,OUTBUF
      INTEGER OBEG,OEND,OUTRECS,OUTDCB,ALLOW
      LOGICAL DUMPS,DUMPED
      IF (DUMPS .AND. .NOT. DUMPED ) OEND = OBEG
      IF (DUMPED .AND. DUMPS) OEND = INBEG ; OBEG = INEND
      RETURN
      END 
      SUBROUTINE CHECKEND
      COMMON/CHARS/INBUF,OUTBUF
      COMMON/DATA/INBEG,INEND,OBEG,OEND,DUMPS,
     *         INDCB,OUTDCB,ALLOW,INRECS,OUTRECS,DUMPED
      CHARACTER * 260 INBUF,OUTBUF
      INTEGER OBEG,OEND,OUTRECS,OUTDCB,ALLOW
      LOGICAL DUMPS,DUMPED
      CHARACTER * 1 SEMI/';'/
      IF (INBUF(INEND:INEND) .NE. SEMI) CALL DUMPIT ; DUMPED = .TRUE.
      RETURN
      END 
      SUBROUTINE DUMPIT
      COMMON/CHARS/INBUF,OUTBUF
      COMMON/DATA/INBEG,INEND,OBEG,OEND,DUMPS,
     *         INDCB,OUTDCB,ALLOW,INRECS,OUTRECS,DUMPED
      CHARACTER * 260 INBUF,OUTBUF
      INTEGER OBEG,OEND,OUTRECS,OUTDCB,ALLOW
      LOGICAL DUMPS,DUMPED
      NWORDS = INT((OEND+3)/ 4)
      CALL BUFFEROUT (OUTDCB, 0, OUTBUF, NWORDS, ISTAT)
      OUTRECS = OUTRECS + 1
      DUMPS = .TRUE.
      CALL CLEARB(OUTBUF,OEND)
      RETURN
      END 
      SUBROUTINE BYEBYE
      COMMON/CHARS/INBUF,OUTBUF
      COMMON/DATA/INBEG,INEND,OBEG,OEND,DUMPS,
     *         INDCB,OUTDCB,ALLOW,INRECS,OUTRECS,DUMPED
      CHARACTER * 260 INBUF,OUTBUF
      INTEGER OBEG,OEND,OUTRECS,OUTDCB,ALLOW
      LOGICAL DUMPS,DUMPED
      WRITE (108,9000) INRECS
      STOP 'ING FOR NOW'
9000  FORMAT (' CANNOT CONTINUE...INDENTATION CONFLICT AT INPUT RECORD',
     *         ' NUMBER ',I5)
      END 
      SUBROUTINE MOVES
      COMMON/CHARS/INBUF,OUTBUF
      COMMON/DATA/INBEG,INEND,OBEG,OEND,DUMPS,
     *         INDCB,OUTDCB,ALLOW,INRECS,OUTRECS,DUMPED
      CHARACTER * 260 INBUF,OUTBUF
      INTEGER OBEG,OEND,OUTRECS,OUTDCB,ALLOW
      LOGICAL DUMPS,DUMPED
      NEWMAX = OEND + (INEND - INBEG )
      OUTBUF(OEND:NEWMAX) = INBUF(INBEG:INEND)
      DUMPS = .FALSE.
      OEND = NEWMAX
      RETURN
      END 
