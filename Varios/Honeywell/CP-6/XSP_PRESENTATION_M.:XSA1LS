

10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                1    
    1      /*M* XSP_PRESENTATION_M  User-visible macros for ISO Presentation layer. */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* DDA */
    8      %EQU XSP_RDONLYFPT# = '302320000200'O;  /* hardwired E$RDONLYFPT errcode */
    9      /*F*    NAME:   XSP$CTXTLIST
   10
   11              XSP$CTXTLIST generates a list of Presentation contexts.  Each item
   12              of the list is either the address of a TEXTH string identifying an
   13              abstract or transfer syntax, or a signed integer result code.  The
   14              number of items in the list is contained in the first word.
   15      */
   16      %MACRO XSP$CTXTLIST(
   17                      NAME=XSP$CTXTLIST, LVL=1, LAST=";", STCLASS=BASED);
   18      %LSET LISTDIR = '0'B;
   19      %LSET LISTEXP = '1'B;
   20      %LSET LISTCOM = '0'B;
   21      %LSET LISTSUB = '1'B;
   22      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
   23      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
   24          %LSET INIT = CHARTEXT( ' INIT');
   25          %LSET ENIT = CHARTEXT( '');
   26      %ELSE;
   27          %LSET INIT = CHARTEXT( '/*');
   28          %LSET ENIT = CHARTEXT( '*/');
   29      %ENDIF;
   30      %IF LENGTHC( 'NAME') = 0;
   31          %LSET LVL = LVL - 1;
   32      %ELSE;
   33          %IF LVL = 1;
   34              DCL 1 NAME STCLASS DALIGNED,
   35          %ELSE;
   36              %LVL NAME,
   37          %ENDIF;
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                2    
   38      %ENDIF;
   39      %LSET LVL1 = LVL + 1;
   40
   41          %LVL1 %CHARTEXT( 'CTXT$(0:0)') PTR,
   42          %LVL1 %CHARTEXT( 'RESULT(0:0)') REDEF CTXT$ SBIN,
   43          %LVL1 %CHARTEXT( 'COUNT(0:0)') REDEF CTXT$ SBIN LAST
   44
   45      %MEND;
   46
   47      /*F*    NAME:   XSP$CTXTNAME
   48
   49              XSP$CTXTNAME generates a structure containing the name of one
   50              Presentation abstract or transfer syntax, in TEXTH format.
   51      */
   52      %MACRO XSP$CTXTNAME(
   53                      NAME=XSP$CTXTNAME, LVL=1, LAST=";", STCLASS=BASED,
   54                      CTXT=);
   55      %LSET LISTDIR = '0'B;
   56      %LSET LISTEXP = '1'B;
   57      %LSET LISTCOM = '0'B;
   58      %LSET LISTSUB = '1'B;
   59      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
   60      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
   61          %LSET INIT = CHARTEXT( ' INIT');
   62          %LSET ENIT = CHARTEXT( '');
   63          %LSET DEF = '1'B;
   64      %ELSE;
   65          %LSET INIT = CHARTEXT( '/*');
   66          %LSET ENIT = CHARTEXT( '*/');
   67          %LSET DEF = '0'B;
   68      %ENDIF;
   69      %IF LENGTHC( 'NAME') = 0;
   70          %LSET LVL = LVL - 1;
   71      %ELSE;
   72          %IF LVL = 1;
   73              DCL 1 NAME STCLASS ALIGNED,
   74          %ELSE;
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                3    
   75              %LVL NAME,
   76          %ENDIF;
   77      %ENDIF;
   78      %LSET LVL1 = LVL + 1;
   79      %IF MODE_FEP;
   80          %LSET LONG = CHARTEXT( '(32)');
   81          %LSET HALF = CHARTEXT( 'WORD');
   82      %ELSE;
   83          %LSET LONG = CHARTEXT( 'WORD');
   84          %LSET HALF = CHARTEXT( 'HALF');
   85      %ENDIF;
   86
   87      %IF DEF;
   88          %LSET XTXT = TEXTCHAR(CTXT);
   89          %LSET LEN = LENGTHC( %XTXT);
   90          %LVL1 %CHARTEXT( 'LEN') UBIN %HALF %INIT( %LEN)%ENIT CALIGNED,
   91          %LVL1 %CHARTEXT( 'TXT') CHAR(%LEN) %INIT( %XTXT)%ENIT CALIGNED LAST
   92      %ELSE;
   93          %LVL1 %CHARTEXT( 'LEN') UBIN %HALF CALIGNED,
   94          %LVL1 %CHARTEXT( 'TXT') CHAR( NAME.%CHARTEXT( 'LEN')) CALIGNED LAST
   95      %ENDIF;
   96
   97      %MEND;
   98
   99      /*F*    NAME:   XSP$$QVEC
  100
  101              XSP$$QVEC generates a structure describing a byte-string
  102              buffer by its length and address.  It is similar to the VECTOR
  103              construct of PL-6, but is more efficient since the length is
  104              right-justified in a full word.
  105              The "down" side is, only byte resolution.
  106      */
  107      %MACRO XSP$$QVEC(
  108                      NAME=XSP$$QVEC, LVL=1, LAST=";", STCLASS=BASED,
  109                      PTR$="ADDR( NIL)",
  110                      SIZE=0);
  111      %LSET LISTDIR = '0'B;
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                4    
  112      %LSET LISTEXP = '1'B;
  113      %LSET LISTCOM = '0'B;
  114      %LSET LISTSUB = '1'B;
  115      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  116      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  117          %LSET INIT = CHARTEXT( ' INIT');
  118          %LSET ENIT = CHARTEXT( '');
  119      %ELSE;
  120          %LSET INIT = CHARTEXT( '/*');
  121          %LSET ENIT = CHARTEXT( '*/');
  122      %ENDIF;
  123      %IF LENGTHC( 'NAME') = 0;
  124          %LSET LVL = LVL - 1;
  125      %ELSE;
  126          %IF LVL = 1;
  127              DCL 1 NAME STCLASS DALIGNED,
  128          %ELSE;
  129              %LVL NAME,
  130          %ENDIF;
  131      %ENDIF;
  132      %LSET LVL1 = LVL + 1;
  133      %IF MODE_FEP;
  134          %LSET LONG = CHARTEXT( '(32)');
  135          %LSET HALF = CHARTEXT( 'WORD');
  136      %ELSE;
  137          %LSET LONG = CHARTEXT( 'WORD');
  138          %LSET HALF = CHARTEXT( 'HALF');
  139      %ENDIF;
  140
  141      /*K*    PTR$ - PTR
  142
  143              PTR$ is the address of the buffer.
  144
  145              The default is ADDR( NIL).
  146      */
  147          %LVL1 %CHARTEXT( 'PTR$') PTR %INIT( PTR$)%ENIT CALIGNED,
  148
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                5    
  149      /*K*    SIZE - SBIN %LONG
  150
  151              SIZE is the size of the buffer, in bytes.  (SIZE is a four-byte
  152              integer on both Host and FEP.)
  153
  154              The default is zero.
  155      */
  156          %LVL1 %CHARTEXT( 'SIZE') SBIN %LONG %INIT( SIZE)%ENIT LAST
  157
  158      %MEND;
  159
  160      /*F*    NAME:   XSP$$TOKENS
  161              DESCRIPTION:
  162                  This macro defines an area as a bit list which is used
  163                  by the ISO Session protocol state machine (PSM).  There
  164                  are several uses of this macro in the primitive FPTs.
  165      */
  166      %MACRO XSP$$TOKENS( NAME=XSP$$TOKENS, LVL=1, LAST=";", STCLASS=BASED, ALGN=CALIGNED,
  167              TRTOKEN( NO='0'B, YES='1'B)='0'B,
  168              MATOKEN( NO='0'B, YES='1'B)='0'B,
  169              MITOKEN( NO='0'B, YES='1'B)='0'B,
  170              DKTOKEN( NO='0'B, YES='1'B)='0'B);
  171      %LSET LISTDIR = '0'B;
  172      %LSET LISTEXP = '1'B;
  173      %LSET LISTCOM = '0'B;
  174      %LSET LISTSUB = '1'B;
  175      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  176      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  177          %LSET INIT = CHARTEXT( ' INIT');
  178          %LSET ENIT = CHARTEXT( '');
  179      %ELSE;
  180          %LSET INIT = CHARTEXT( '/*');
  181          %LSET ENIT = CHARTEXT( '*/');
  182      %ENDIF;
  183      %IF LENGTHC( 'NAME') = 0;
  184          %LSET LVL = LVL-1;
  185      %ELSE;
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                6    
  186          %IF LVL = 1;
  187              DCL 1 NAME STCLASS ALGN,
  188          %ELSE;
  189              %LVL NAME ALGN,
  190          %ENDIF;
  191      %ENDIF;
  192      %LSET LVL1 = LVL+1;
  193      %LSET LVL2 = LVL1+1;
  194
  195          %LVL1 %CHARTEXT( '*') BIT(1) %INIT( '0'B)%ENIT UNAL,
  196          %LVL1 %CHARTEXT( 'TR') BIT(1) %INIT( TRTOKEN)%ENIT UNAL,
  197          %LVL1 %CHARTEXT( '*') BIT(1) %INIT( '0'B)%ENIT UNAL,
  198          %LVL1 %CHARTEXT( 'MA') BIT(1) %INIT( MATOKEN)%ENIT UNAL,
  199          %LVL1 %CHARTEXT( '*') BIT(1) %INIT( '0'B)%ENIT UNAL,
  200          %LVL1 %CHARTEXT( 'MI') BIT(1) %INIT( MITOKEN)%ENIT UNAL,
  201          %LVL1 %CHARTEXT( '*') BIT(1) %INIT( '0'B)%ENIT UNAL,
  202          %LVL1 %CHARTEXT( 'DK') BIT(1) %INIT( DKTOKEN)%ENIT UNAL
  203      %IF NOT MODE_FEP;
  204          , %LVL1 %CHARTEXT( '*') BIT(1) %INIT( '0'B)%ENIT UNAL
  205      %ENDIF;
  206          LAST
  207      %MEND;
  208
  209      /*F*    NAME:   XSP$$ERRCODE
  210
  211              XSP$$ERRCODE is an internal copy of VLP_ERRCODE with more reasonable
  212              initialization possibilities.
  213      */
  214      %MACRO XSP$$ERRCODE( NAME=XSP$$ERRCODE, LVL=1, LAST=";", STCLASS=BASED,
  215              FCG='0'B, MID='0'B, MON='0'B, ERR#=0, SEV=0);
  216      %LSET LISTDIR = '0'B;
  217      %LSET LISTEXP = '1'B;
  218      %LSET LISTCOM = '0'B;
  219      %LSET LISTSUB = '1'B;
  220      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  221      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  222          %LSET INIT = CHARTEXT( ' INIT');
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                7    
  223          %LSET ENIT = CHARTEXT( '');
  224      %ELSE;
  225          %LSET INIT = CHARTEXT( '/*');
  226          %LSET ENIT = CHARTEXT( '*/');
  227      %ENDIF;
  228      %IF LENGTHC( 'NAME') = 0;
  229          %LSET LVL = LVL - 1;
  230      %ELSE;
  231          %IF LVL = 1;
  232              DCL 1 NAME STCLASS ALIGNED,
  233          %ELSE;
  234              %LVL NAME STCLASS ALIGNED,
  235          %ENDIF;
  236      %ENDIF;
  237      %LSET LVL1 = LVL + 1;
  238
  239          %LVL1 %CHARTEXT( 'FCG') BIT(12) %INIT( FCG)%ENIT UNAL,
  240          %LVL1 %CHARTEXT( 'MID') BIT(6) %INIT( MID)%ENIT UNAL,
  241          %LVL1 %CHARTEXT( 'MON') BIT(1) %INIT( MON)%ENIT UNAL,
  242          %LVL1 %CHARTEXT( 'ERR#') UBIN(14) %INIT( ERR#)%ENIT UNAL,
  243          %LVL1 %CHARTEXT( 'SEV') UBIN(3) %INIT( SEV)%ENIT UNAL LAST
  244      %MEND;
  245
  246      /*F*    NAME:   XSP$PSAP
  247
  248              XSP$PSAP defines a Presentation Service Access Point, i.e., a
  249              Presentation layer address for an application.
  250      */
  251      %MACRO XSP$PSAP(
  252                      FPTN=XSP$PSAP, LVL=1, LAST=";", STCLASS=BASED,
  253                      PSAP=);
  254      %LSET L6 = BITBIN( MODE_FEP);
  255      %LSET LISTDIR = '0'B;
  256      %LSET LISTEXP = '1'B;
  257      %LSET LISTCOM = '0'B;
  258      %LSET LISTSUB = '1'B;
  259      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                8    
  260      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  261          %LSET INIT = CHARTEXT( ' INIT');
  262          %LSET ENIT = CHARTEXT( '');
  263          %LSET DEF = '1'B;
  264      %ELSE;
  265          %LSET INIT = CHARTEXT( '/*');
  266          %LSET ENIT = CHARTEXT( '*/');
  267          %LSET DEF = '0'B;
  268      %ENDIF;
  269      %IF LENGTHC( 'FPTN') = 0;
  270          %LSET LVL = LVL - 1;
  271      %ELSE;
  272          %IF LVL = 1;
  273              DCL 1 FPTN STCLASS,
  274          %ELSE;
  275              %LVL FPTN,
  276          %ENDIF;
  277      %ENDIF;
  278      %LSET LVL1 = LVL + 1;
  279
  280      %IF DEF;
  281          %LSET XSAP = TEXTCHAR(PSAP);
  282          %LSET LEN = LENGTHC( %XSAP);
  283          %LVL1 %CHARTEXT( 'LEN') UBIN BYTE %INIT( %LEN)%ENIT CALIGNED,
  284          %LVL1 %CHARTEXT( 'TXT') CHAR(%LEN) %INIT( %XSAP)%ENIT CALIGNED LAST
  285      %ELSE;
  286          %LVL1 %CHARTEXT( 'LEN') UBIN BYTE CALIGNED,
  287          %LVL1 %CHARTEXT( 'TXT') CHAR( FPTN.%CHARTEXT( 'LEN')) CALIGNED LAST
  288      %ENDIF;
  289
  290      %MEND;
  291
  292      /*F*    NAME:   XSP$PRIMITIVES
  293
  294              XSP$PRIMITIVES defines all of the XSP primitive service FPTs.
  295              This is useful in situations where the type of incoming FPT is not
  296              known in advance and they all need to be defined as BASED on some
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                9    
  297              pointer filled in at run time.
  298      */
  299      %MACRO XSP$PRIMITIVES( STCLASS=BASED);
  300          %XSP$GENERIC( STCLASS=STCLASS);
  301          %XSP$ACTIVITY_DISCARD( STCLASS=STCLASS);
  302          %XSP$ACTIVITY_END( STCLASS=STCLASS);
  303          %XSP$ACTIVITY_INTERRUPT( STCLASS=STCLASS);
  304          %XSP$ACTIVITY_RESUME( STCLASS=STCLASS);
  305          %XSP$ACTIVITY_START( STCLASS=STCLASS);
  306          %XSP$ALTER_CONTEXT( STCLASS=STCLASS);
  307          %XSP$CAPABILITY_DATA( STCLASS=STCLASS);
  308          %XSP$CONNECT( STCLASS=STCLASS);
  309          %XSP$CONTROL_GIVE( STCLASS=STCLASS);
  310          %XSP$DATA( STCLASS=STCLASS);
  311          %XSP$EXPEDITED_DATA( STCLASS=STCLASS);
  312          %XSP$P_ABORT( STCLASS=STCLASS);
  313          %XSP$P_EXCEPTION_REPORT( STCLASS=STCLASS);
  314          %XSP$RELEASE( STCLASS=STCLASS);
  315          %XSP$RESYNCHRONIZE( STCLASS=STCLASS);
  316          %XSP$SYNC_MAJOR( STCLASS=STCLASS);
  317          %XSP$SYNC_MINOR( STCLASS=STCLASS);
  318          %XSP$TOKEN_GIVE( STCLASS=STCLASS);
  319          %XSP$TOKEN_PLEASE( STCLASS=STCLASS);
  320          %XSP$TYPED_DATA( STCLASS=STCLASS);
  321          %XSP$U_ABORT( STCLASS=STCLASS);
  322          %XSP$U_EXCEPTION_REPORT( STCLASS=STCLASS);
  323      %MEND;
  324
  325      /*F*    NAME:   XSP_PRIMITIVES
  326
  327              XSP_PRIMITIVES defines all of the XSP primitive service FPTs.
  328              This macro is similar to XSP$PRIMITIVES, but uses '_' in each of the
  329              resulting structure names to indicate STATIC storage class.
  330      */
  331      %MACRO XSP_PRIMITIVES( STCLASS=STATIC);
  332          %XSP$GENERIC( FPTN=XSP_GENERIC, STCLASS=STCLASS);
  333          %XSP$ACTIVITY_DISCARD( FPTN=XSP_ACTIVITY_DISCARD, STCLASS=STCLASS);
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                10   
  334          %XSP$ACTIVITY_END( FPTN=XSP_ACTIVITY_END, STCLASS=STCLASS);
  335          %XSP$ACTIVITY_INTERRUPT( FPTN=XSP_ACTIVITY_INTERRUPT, STCLASS=STCLASS);
  336          %XSP$ACTIVITY_RESUME( FPTN=XSP_ACTIVITY_RESUME, STCLASS=STCLASS);
  337          %XSP$ACTIVITY_START( FPTN=XSP_ACTIVITY_START, STCLASS=STCLASS);
  338          %XSP$ALTER_CONTEXT( FPTN=XSP_ALTER_CONTEXT, STCLASS=STCLASS);
  339          %XSP$CAPABILITY_DATA( FPTN=XSP_CAPABILITY_DATA, STCLASS=STCLASS);
  340          %XSP$CONNECT( FPTN=XSP_CONNECT, STCLASS=STCLASS);
  341          %XSP$CONTROL_GIVE( FPTN=XSP_CONTROL_GIVE, STCLASS=STCLASS);
  342          %XSP$DATA( FPTN=XSP_DATA, STCLASS=STCLASS);
  343          %XSP$EXPEDITED_DATA( FPTN=XSP_EXPEDITED_DATA, STCLASS=STCLASS);
  344          %XSP$P_ABORT( FPTN=XSP_P_ABORT, STCLASS=STCLASS);
  345          %XSP$P_EXCEPTION_REPORT( FPTN=XSP_P_EXCEPTION_REPORT, STCLASS=STCLASS);
  346          %XSP$RELEASE( FPTN=XSP_RELEASE, STCLASS=STCLASS);
  347          %XSP$RESYNCHRONIZE( FPTN=XSP_RESYNCHRONIZE, STCLASS=STCLASS);
  348          %XSP$SYNC_MAJOR( FPTN=XSP_SYNC_MAJOR, STCLASS=STCLASS);
  349          %XSP$SYNC_MINOR( FPTN=XSP_SYNC_MINOR, STCLASS=STCLASS);
  350          %XSP$TOKEN_GIVE( FPTN=XSP_TOKEN_GIVE, STCLASS=STCLASS);
  351          %XSP$TOKEN_PLEASE( FPTN=XSP_TOKEN_PLEASE, STCLASS=STCLASS);
  352          %XSP$TYPED_DATA( FPTN=XSP_TYPED_DATA, STCLASS=STCLASS);
  353          %XSP$U_ABORT( FPTN=XSP_U_ABORT, STCLASS=STCLASS);
  354          %XSP$U_EXCEPTION_REPORT( FPTN=XSP_U_EXCEPTION_REPORT, STCLASS=STCLASS);
  355      %MEND;
  356
  357      /*F*    NAME:   XSP$GENERIC
  358
  359              XSP$GENERIC is a macro containing the items common to all of the
  360              Presentation FPTs (FNC, PCID, ERROR), as well as one common to most
  361              of them (DATA$).  In addition, it has a trailing '*' item big enough
  362              to allow any Presentation FPT to fit inside of this generic FPT.
  363      */
  364      %MACRO XSP$GENERIC(
  365              FPTN=XSP$GENERIC, LVL=1, LAST=";", STCLASS=BASED);
  366      %LSET LISTDIR = '0'B;
  367      %LSET LISTEXP = '1'B;
  368      %LSET LISTCOM = '0'B;
  369      %LSET LISTSUB = '1'B;
  370      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                11   
  371      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  372          %LSET INIT = CHARTEXT( ' INIT');
  373          %LSET ENIT = CHARTEXT( '');
  374      %ELSE;
  375          %LSET INIT = CHARTEXT( '/*');
  376          %LSET ENIT = CHARTEXT( '*/');
  377      %ENDIF;
  378      %IF LENGTHC( 'FPTN') = 0;
  379          %LSET LVL = LVL - 1;
  380      %ELSE;
  381          %IF LVL = 1;
  382              DCL 1 FPTN STCLASS ALIGNED,
  383          %ELSE;
  384              %LVL FPTN,
  385          %ENDIF;
  386      %ENDIF;
  387      %LSET LVL1 = LVL + 1;
  388
  389          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( %XSP_FNC_NONE#)%ENIT CALIGNED,
  390          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
  391          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
  392          %XSP$$TOKENS( NAME=TOKENS, LVL=%LVL1, LAST=",", STCLASS=STCLASS);
  393          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  394          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  395          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( NIL))%ENIT ALIGNED,
  396          %LVL1 %CHARTEXT( '*(0:10)') UBIN %INIT( 0*11)%ENIT ALIGNED LAST
  397      %MEND;
  398
  399      /*F*    NAME:   XSP$ACTIVITY_DISCARD
  400      */
  401      %MACRO XSP$ACTIVITY_DISCARD(
  402              FPTN=XSP$ACTIVITY_DISCARD, LVL=1, LAST=";", STCLASS=BASED,
  403              FNC( REQ=%XSP_FNC_PACDREQ#,
  404                   IND=%XSP_FNC_PACDIND#,
  405                   RSP=%XSP_FNC_PACDRSP#,
  406                   CNF=%XSP_FNC_PACDCNF#)=%XSP_FNC_NONE#,
  407              PCID=0,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                12   
  408              REASON=%XSS_RC_NONE#);
  409      %LSET LISTDIR = '0'B;
  410      %LSET LISTEXP = '1'B;
  411      %LSET LISTCOM = '0'B;
  412      %LSET LISTSUB = '1'B;
  413      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  414      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  415          %LSET INIT = CHARTEXT( ' INIT');
  416          %LSET ENIT = CHARTEXT( '');
  417      %ELSE;
  418          %LSET INIT = CHARTEXT( '/*');
  419          %LSET ENIT = CHARTEXT( '*/');
  420      %ENDIF;
  421      %IF LENGTHC( 'FPTN') = 0;
  422          %LSET LVL = LVL - 1;
  423      %ELSE;
  424          %IF LVL = 1;
  425              DCL 1 FPTN STCLASS ALIGNED,
  426          %ELSE;
  427              %LVL FPTN,
  428          %ENDIF;
  429      %ENDIF;
  430      %LSET LVL1 = LVL + 1;
  431
  432          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  433          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
  434          %LVL1 %CHARTEXT( 'REASON') UBIN BYTE %INIT( REASON)%ENIT CALIGNED,
  435          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
  436          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  437          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=LAST, STCLASS="REDEF ERRDEF");
  438      %MEND;
  439
  440      /*F*    NAME:   XSP$ACTIVITY_END
  441      */
  442      %MACRO XSP$ACTIVITY_END(
  443              FPTN=XSP$ACTIVITY_END, LVL=1, LAST=";", STCLASS=BASED,
  444              FNC( REQ=%XSP_FNC_PACEREQ#,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                13   
  445                   IND=%XSP_FNC_PACEIND#,
  446                   RSP=%XSP_FNC_PACERSP#,
  447                   CNF=%XSP_FNC_PACECNF#)=%XSP_FNC_NONE#,
  448              PCID=0,
  449              DATA=NIL,
  450              SERNUM=0);
  451      %LSET LISTDIR = '0'B;
  452      %LSET LISTEXP = '1'B;
  453      %LSET LISTCOM = '0'B;
  454      %LSET LISTSUB = '1'B;
  455      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  456      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  457          %LSET INIT = CHARTEXT( ' INIT');
  458          %LSET ENIT = CHARTEXT( '');
  459      %ELSE;
  460          %LSET INIT = CHARTEXT( '/*');
  461          %LSET ENIT = CHARTEXT( '*/');
  462      %ENDIF;
  463      %IF LENGTHC( 'FPTN') = 0;
  464          %LSET LVL = LVL - 1;
  465      %ELSE;
  466          %IF LVL = 1;
  467              DCL 1 FPTN STCLASS ALIGNED,
  468          %ELSE;
  469              %LVL FPTN,
  470          %ENDIF;
  471      %ENDIF;
  472      %LSET LVL1 = LVL + 1;
  473      %IF MODE_FEP;
  474          %LSET LONG = CHARTEXT( '(32)');
  475      %ELSE;
  476          %LSET LONG = CHARTEXT( 'WORD');
  477      %ENDIF;
  478
  479          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  480          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
  481          %LVL1 %CHARTEXT( '*(0:1)') UBIN BYTE %INIT( 0, 0)%ENIT CALIGNED,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                14   
  482          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  483          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  484          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED,
  485          %LVL1 %CHARTEXT( '*') UBIN %INIT( 0)%ENIT ALIGNED,
  486          %LVL1 %CHARTEXT( 'SERNUM') UBIN %LONG %INIT( SERNUM)%ENIT ALIGNED LAST
  487      %MEND;
  488
  489      /*F*    NAME:   XSP$ACTIVITY_INTERRUPT
  490      */
  491      %MACRO XSP$ACTIVITY_INTERRUPT(
  492              FPTN=XSP$ACTIVITY_INTERRUPT, LVL=1, LAST=";", STCLASS=BASED,
  493              FNC( REQ=%XSP_FNC_PACIREQ#,
  494                   IND=%XSP_FNC_PACIIND#,
  495                   RSP=%XSP_FNC_PACIRSP#,
  496                   CNF=%XSP_FNC_PACICNF#)=%XSP_FNC_NONE#,
  497              PCID=0,
  498              REASON=%XSS_RC_NONE#);
  499      %LSET LISTDIR = '0'B;
  500      %LSET LISTEXP = '1'B;
  501      %LSET LISTCOM = '0'B;
  502      %LSET LISTSUB = '1'B;
  503      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  504      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  505          %LSET INIT = CHARTEXT( ' INIT');
  506          %LSET ENIT = CHARTEXT( '');
  507      %ELSE;
  508          %LSET INIT = CHARTEXT( '/*');
  509          %LSET ENIT = CHARTEXT( '*/');
  510      %ENDIF;
  511      %IF LENGTHC( 'FPTN') = 0;
  512          %LSET LVL = LVL - 1;
  513      %ELSE;
  514          %IF LVL = 1;
  515              DCL 1 FPTN STCLASS ALIGNED,
  516          %ELSE;
  517              %LVL FPTN,
  518          %ENDIF;
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                15   
  519      %ENDIF;
  520      %LSET LVL1 = LVL + 1;
  521
  522          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  523          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
  524          %LVL1 %CHARTEXT( 'REASON') UBIN BYTE %INIT( REASON)%ENIT CALIGNED,
  525          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
  526          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  527          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=LAST, STCLASS="REDEF ERRDEF");
  528      %MEND;
  529
  530      /*F*    NAME:   XSP$ACTIVITY_RESUME
  531      */
  532      %MACRO XSP$ACTIVITY_RESUME(
  533              FPTN=XSP$ACTIVITY_RESUME, LVL=1, LAST=";", STCLASS=BASED,
  534              FNC( REQ=%XSP_FNC_PACRREQ#,
  535                   IND=%XSP_FNC_PACRIND#)=%XSP_FNC_PACRREQ#,
  536              PCID=0,
  537              OSCID=0,
  538              DATA=NIL,
  539              SERNUM=0,
  540              ACTID=,
  541              OACTID=,
  542              ARI=%XSS_ARI_NONE#);
  543      %LSET LISTDIR = '0'B;
  544      %LSET LISTEXP = '1'B;
  545      %LSET LISTCOM = '0'B;
  546      %LSET LISTSUB = '1'B;
  547      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  548      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  549          %LSET INIT = CHARTEXT( ' INIT');
  550          %LSET ENIT = CHARTEXT( '');
  551      %ELSE;
  552          %LSET INIT = CHARTEXT( '/*');
  553          %LSET ENIT = CHARTEXT( '*/');
  554      %ENDIF;
  555      %IF LENGTHC( 'FPTN') = 0;
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                16   
  556          %LSET LVL = LVL - 1;
  557      %ELSE;
  558          %IF LVL = 1;
  559              DCL 1 FPTN STCLASS ALIGNED,
  560          %ELSE;
  561              %LVL FPTN,
  562          %ENDIF;
  563      %ENDIF;
  564      %LSET LVL1 = LVL + 1;
  565      %LSET LVL2 = LVL1 + 1;
  566      %IF MODE_FEP;
  567          %LSET LONG = CHARTEXT( '(32)');
  568      %ELSE;
  569          %LSET LONG = CHARTEXT( 'WORD');
  570      %ENDIF;
  571
  572          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  573          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
  574          %LVL1 %CHARTEXT( 'OSCID') UBIN BYTE %INIT( OSCID)%ENIT CALIGNED,
  575          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
  576          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  577          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  578          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED,
  579          %LVL1 %CHARTEXT( '*') UBIN %INIT( 0)%ENIT ALIGNED,
  580          %LVL1 %CHARTEXT( 'SERNUM') UBIN %LONG %INIT( SERNUM)%ENIT ALIGNED,
  581          %LVL1 %CHARTEXT( '*') UBIN %INIT( 0)%ENIT ALIGNED,
  582          %LVL1 %CHARTEXT( '*') UBIN %INIT( 0)%ENIT ALIGNED,
  583          %LVL1 %CHARTEXT( '*') UBIN %INIT( 0)%ENIT ALIGNED,
  584      %IF 0 = LENGTHC( TEXTCHAR(ACTID));
  585          %LSET LEN = CHARTEXT( '0');
  586          %LSET TXT = CHARTEXT( '''      ''');
  587      %ELSE;
  588          %LSET LEN = CHARTEXT( LENGTHC( TEXTCHAR(ACTID)));
  589          %LSET TXT = CHARTEXT( TEXTCHAR(ACTID));
  590      %ENDIF;
  591          %LVL1 %CHARTEXT( 'ACTID') ALIGNED,
  592              %LVL2 %CHARTEXT( 'LEN') UBIN BYTE %INIT( %LEN)%ENIT UNAL,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                17   
  593              %LVL2 %CHARTEXT( 'TXT') CHAR(6) %INIT( %TXT)%ENIT UNAL,
  594      %IF 0 = LENGTHC( TEXTCHAR(OACTID));
  595          %LSET LEN = CHARTEXT( '0');
  596          %LSET TXT = CHARTEXT( '''      ''');
  597      %ELSE;
  598          %LSET LEN = CHARTEXT( LENGTHC( TEXTCHAR(OACTID)));
  599          %LSET TXT = CHARTEXT( TEXTCHAR(OACTID));
  600      %ENDIF;
  601          %LVL1 %CHARTEXT( 'OACTID') ALIGNED,
  602              %LVL2 %CHARTEXT( 'LEN') UBIN BYTE %INIT( %LEN)%ENIT UNAL,
  603              %LVL2 %CHARTEXT( 'TXT') CHAR(6) %INIT( %TXT)%ENIT UNAL,
  604          %LVL1 %CHARTEXT( 'ARI') UBIN %LONG %INIT( ARI)%ENIT ALIGNED LAST
  605      %MEND;
  606
  607      /*F*    NAME:   XSP$ACTIVITY_START
  608      */
  609      %MACRO XSP$ACTIVITY_START(
  610              FPTN=XSP$ACTIVITY_START, LVL=1, LAST=";", STCLASS=BASED,
  611              FNC( REQ=%XSP_FNC_PACSREQ#,
  612                   IND=%XSP_FNC_PACSIND#)=%XSP_FNC_PACSREQ#,
  613              PCID=0,
  614              DATA=NIL,
  615              ACTID=);
  616      %LSET LISTDIR = '0'B;
  617      %LSET LISTEXP = '1'B;
  618      %LSET LISTCOM = '0'B;
  619      %LSET LISTSUB = '1'B;
  620      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  621      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  622          %LSET INIT = CHARTEXT( ' INIT');
  623          %LSET ENIT = CHARTEXT( '');
  624      %ELSE;
  625          %LSET INIT = CHARTEXT( '/*');
  626          %LSET ENIT = CHARTEXT( '*/');
  627      %ENDIF;
  628      %IF LENGTHC( 'FPTN') = 0;
  629          %LSET LVL = LVL - 1;
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                18   
  630      %ELSE;
  631          %IF LVL = 1;
  632              DCL 1 FPTN STCLASS ALIGNED,
  633          %ELSE;
  634              %LVL FPTN,
  635          %ENDIF;
  636      %ENDIF;
  637      %LSET LVL1 = LVL + 1;
  638      %LSET LVL2 = LVL1 + 1;
  639      %IF MODE_FEP;
  640          %LSET LONG = CHARTEXT( '(32)');
  641      %ELSE;
  642          %LSET LONG = CHARTEXT( 'WORD');
  643      %ENDIF;
  644
  645          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  646          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
  647          %LVL1 %CHARTEXT( '*(0:1)') UBIN BYTE %INIT( 0, 0)%ENIT CALIGNED,
  648          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  649          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  650          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED,
  651          %LVL1 %CHARTEXT( '*') UBIN %INIT( 0)%ENIT ALIGNED,
  652      %IF 0 = LENGTHC( TEXTCHAR(ACTID));
  653          %LSET LEN = CHARTEXT( '0');
  654          %LSET TXT = CHARTEXT( '''      ''');
  655      %ELSE;
  656          %LSET LEN = CHARTEXT( LENGTHC( TEXTCHAR(ACTID)));
  657          %LSET TXT = CHARTEXT( TEXTCHAR(ACTID));
  658      %ENDIF;
  659          %LVL1 %CHARTEXT( 'ACTID') ALIGNED,
  660              %LVL2 %CHARTEXT( 'LEN') UBIN BYTE %INIT( %LEN)%ENIT UNAL,
  661              %LVL2 %CHARTEXT( 'TXT') CHAR(6) %INIT( %TXT)%ENIT UNAL LAST
  662      %MEND;
  663
  664      /*F*    NAME:   XSP$ALTER_CONTEXT
  665      */
  666      %MACRO XSP$ALTER_CONTEXT(
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                19   
  667              FPTN=XSP$ALTER_CONTEXT, LVL=1, LAST=";", STCLASS=BASED,
  668              FNC( REQ=%XSP_FNC_PALTREQ#,
  669                   IND=%XSP_FNC_PALTIND#,
  670                   RSP=%XSP_FNC_PALTRSP#,
  671                   CNF=%XSP_FNC_PALTCNF#)=%XSP_FNC_NONE#,
  672              PCID=0,
  673              DATA=NIL,
  674              CTXT=NIL);
  675      %LSET LISTDIR = '0'B;
  676      %LSET LISTEXP = '1'B;
  677      %LSET LISTCOM = '0'B;
  678      %LSET LISTSUB = '1'B;
  679      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  680      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  681          %LSET INIT = CHARTEXT( ' INIT');
  682          %LSET ENIT = CHARTEXT( '');
  683      %ELSE;
  684          %LSET INIT = CHARTEXT( '/*');
  685          %LSET ENIT = CHARTEXT( '*/');
  686      %ENDIF;
  687      %IF LENGTHC( 'FPTN') = 0;
  688          %LSET LVL = LVL - 1;
  689      %ELSE;
  690          %IF LVL = 1;
  691              DCL 1 FPTN STCLASS ALIGNED,
  692          %ELSE;
  693              %LVL FPTN,
  694          %ENDIF;
  695      %ENDIF;
  696      %LSET LVL1 = LVL + 1;
  697
  698          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  699          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
  700          %LVL1 %CHARTEXT( '*(0:1)') UBIN BYTE %INIT( 0, 0)%ENIT CALIGNED,
  701          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  702          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  703          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                20   
  704          %LVL1 %CHARTEXT( '*') UBIN %INIT( 0)%ENIT ALIGNED,
  705          %LVL1 %CHARTEXT( '*') UBIN %INIT( 0)%ENIT ALIGNED,
  706          %LVL1 %CHARTEXT( 'CTXT$') PTR %INIT( ADDR( CTXT))%ENIT ALIGNED LAST
  707      %MEND;
  708
  709      /*F*    NAME:   XSP$CAPABILITY_DATA
  710      */
  711      %MACRO XSP$CAPABILITY_DATA(
  712              FPTN=XSP$CAPABILITY_DATA, LVL=1, LAST=";", STCLASS=BASED,
  713              FNC( REQ=%XSP_FNC_PCADREQ#,
  714                   IND=%XSP_FNC_PCADIND#,
  715                   RSP=%XSP_FNC_PCADRSP#,
  716                   CNF=%XSP_FNC_PCADCNF#)=%XSP_FNC_NONE#,
  717              PCID=0,
  718              DATA=NIL);
  719      %LSET LISTDIR = '0'B;
  720      %LSET LISTEXP = '1'B;
  721      %LSET LISTCOM = '0'B;
  722      %LSET LISTSUB = '1'B;
  723      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  724      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  725          %LSET INIT = CHARTEXT( ' INIT');
  726          %LSET ENIT = CHARTEXT( '');
  727      %ELSE;
  728          %LSET INIT = CHARTEXT( '/*');
  729          %LSET ENIT = CHARTEXT( '*/');
  730      %ENDIF;
  731      %IF LENGTHC( 'FPTN') = 0;
  732          %LSET LVL = LVL - 1;
  733      %ELSE;
  734          %IF LVL = 1;
  735              DCL 1 FPTN STCLASS ALIGNED,
  736          %ELSE;
  737              %LVL FPTN,
  738          %ENDIF;
  739      %ENDIF;
  740      %LSET LVL1 = LVL + 1;
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                21   
  741
  742          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  743          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
  744          %LVL1 %CHARTEXT( '*(0:1)') UBIN BYTE %INIT( 0, 0)%ENIT CALIGNED,
  745          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  746          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  747          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED LAST
  748      %MEND;
  749
  750      /*F*    NAME:   XSP$CONNECT
  751      */
  752      %MACRO XSP$CONNECT(
  753              FPTN=XSP$CONNECT, LVL=1, LAST=";", STCLASS=BASED,
  754              FNC( REQ=%XSP_FNC_PCONREQ#,
  755                   IND=%XSP_FNC_PCONIND#,
  756                   RSP=%XSP_FNC_PCONRSP#,
  757                   CNF=%XSP_FNC_PCONCNF#)=%XSP_FNC_NONE#,
  758              PCID=0,
  759              REASON=0,
  760              RESULT( ACCEPT=%XSP_RSLT_ACCEPT#,
  761                      REJECT=%XSP_RSLT_UREJECT#)=%XSP_RSLT_ACCEPT#,
  762              DATA=NIL,
  763              CALLING=NIL,
  764              CALLED=NIL,
  765              RESPONDING=NIL,
  766              CTXT=NIL,
  767              DFLT=NIL,
  768              SERNUM=0,
  769              INITTR( ISIDE=%XSS_TSI_ISIDE#,
  770                      ASIDE=%XSS_TSI_ASIDE#,
  771                      ACHOICE=%XSS_TSI_ACHOICE#,
  772                      NONE=%XSS_TSI_NONE#)=%XSS_TSI_NONE#,
  773              INITMA( ISIDE=%XSS_TSI_ISIDE#,
  774                      ASIDE=%XSS_TSI_ASIDE#,
  775                      ACHOICE=%XSS_TSI_ACHOICE#,
  776                      NONE=%XSS_TSI_NONE#)=%XSS_TSI_NONE#,
  777              INITMI( ISIDE=%XSS_TSI_ISIDE#,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                22   
  778                      ASIDE=%XSS_TSI_ASIDE#,
  779                      ACHOICE=%XSS_TSI_ACHOICE#,
  780                      NONE=%XSS_TSI_NONE#)=%XSS_TSI_NONE#,
  781              INITDK( ISIDE=%XSS_TSI_ISIDE#,
  782                      ASIDE=%XSS_TSI_ASIDE#,
  783                      ACHOICE=%XSS_TSI_ACHOICE#,
  784                      NONE=%XSS_TSI_NONE#)=%XSS_TSI_NONE#,
  785              PFUCM( NO='0'B, YES='1'B)='0'B,
  786              PFUCR( NO='0'B, YES='1'B)='0'B,
  787              SFUTD( NO='0'B, YES='1'B)='0'B,
  788              SFUEXCEP( NO='0'B, YES='1'B)='0'B,
  789              SFUCD( NO='0'B, YES='1'B)='0'B,
  790              SFUNR( NO='0'B, YES='1'B)='0'B,
  791              SFUACT( NO='0'B, YES='1'B)='0'B,
  792              SFURESYN( NO='0'B, YES='1'B)='0'B,
  793              SFUMA( NO='0'B, YES='1'B)='0'B,
  794              SFUSY( NO='0'B, YES='1'B)='0'B,
  795              SFUEX( NO='0'B, YES='1'B)='0'B,
  796              SFUFD( NO='0'B, YES='1'B)='0'B,
  797              SFUHD( NO='0'B, YES='1'B)='0'B,
  798              QOS=0,
  799              ARI=%XSS_ARI_NONE#);
  800      %LSET LISTDIR = '0'B;
  801      %LSET LISTEXP = '1'B;
  802      %LSET LISTCOM = '0'B;
  803      %LSET LISTSUB = '1'B;
  804      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  805      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  806          %LSET INIT = CHARTEXT( ' INIT');
  807          %LSET ENIT = CHARTEXT( '');
  808      %ELSE;
  809          %LSET INIT = CHARTEXT( '/*');
  810          %LSET ENIT = CHARTEXT( '*/');
  811      %ENDIF;
  812      %IF LENGTHC( 'FPTN') = 0;
  813          %LSET LVL = LVL - 1;
  814      %ELSE;
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                23   
  815          %IF LVL = 1;
  816              DCL 1 FPTN STCLASS ALIGNED,
  817          %ELSE;
  818              %LVL FPTN,
  819          %ENDIF;
  820      %ENDIF;
  821      %LSET LVL1 = LVL + 1;
  822      %LSET LVL2 = LVL1 + 1;
  823      %IF MODE_FEP;
  824          %LSET LONG = CHARTEXT( '(32)');
  825          %LSET L6 = 1;
  826      %ELSE;
  827          %LSET LONG = CHARTEXT( 'WORD');
  828          %LSET L6 = 0;
  829      %ENDIF;
  830
  831          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  832          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
  833          %LVL1 %CHARTEXT( 'REASON') UBIN BYTE %INIT( REASON)%ENIT CALIGNED,
  834          %XSP$$TOKENS( NAME=TOKENS, LVL=%LVL1, LAST=",", STCLASS=STCLASS);
  835          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  836          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  837          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED,
  838          %LVL1 %CHARTEXT( 'DFLT$') PTR %INIT( ADDR( DFLT))%ENIT ALIGNED,
  839          %LVL1 %CHARTEXT( 'DFLTRSLT') REDEF %CHARTEXT( 'DFLT$') SBIN ALIGNED,
  840          %LVL1 %CHARTEXT( 'SERNUM') UBIN %LONG %INIT( SERNUM)%ENIT ALIGNED,
  841          %LVL1 %CHARTEXT( 'CTXT$') PTR %INIT( ADDR( CTXT))%ENIT ALIGNED,
  842          %LVL1 %CHARTEXT( 'CALLING$') PTR %INIT( ADDR( CALLING))%ENIT ALIGNED,
  843      %IF FNC = %XSP_FNC_PCONRSP# OR FNC = %XSP_FNC_PCONCNF#;
  844          %LSET DST = TEXTCHAR(RESPONDING);
  845      %ELSE;
  846          %LSET DST = TEXTCHAR(CALLED);
  847      %ENDIF;
  848          %LVL1 %CHARTEXT( 'CALLED$') PTR %INIT( ADDR( %CHARTEXT( %DST)))%ENIT ALIGNED,
  849          %LVL1 %CHARTEXT( 'RESPONDING$') REDEF %CHARTEXT( 'CALLED$') PTR ALIGNED,
  850          %LVL1 %CHARTEXT( 'ITOKENS'),
  851              %LVL2 %CHARTEXT( 'TR') UBIN(2) %INIT( INITTR)%ENIT UNAL,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                24   
  852              %LVL2 %CHARTEXT( 'MA') UBIN(2) %INIT( INITMA)%ENIT UNAL,
  853              %LVL2 %CHARTEXT( 'MI') UBIN(2) %INIT( INITMI)%ENIT UNAL,
  854              %LVL2 %CHARTEXT( 'DK') UBIN(2) %INIT( INITDK)%ENIT UNAL,
  855      %IF NOT MODE_FEP;
  856              %LVL2 %CHARTEXT( '*') BIT(1) %INIT( '0'B)%ENIT UNAL,
  857      %ENDIF;
  858          %LVL1 %CHARTEXT( 'RESULT') UBIN BYTE %INIT( RESULT)%ENIT CALIGNED,
  859          %LVL1 %CHARTEXT( 'SFU'),
  860              %LVL2 %CHARTEXT( '*') BIT(5) %INIT( '00000'B)%ENIT UNAL,
  861              %LVL2 %CHARTEXT( 'TD') BIT(1) %INIT( SFUTD)%ENIT UNAL,
  862              %LVL2 %CHARTEXT( 'EXCEP') BIT(1) %INIT( SFUEXCEP)%ENIT UNAL,
  863              %LVL2 %CHARTEXT( 'CD') BIT(1) %INIT( SFUCD)%ENIT UNAL,
  864              %LVL2 %CHARTEXT( 'NR') BIT(1) %INIT( SFUNR)%ENIT UNAL,
  865              %LVL2 %CHARTEXT( 'ACT') BIT(1) %INIT( SFUACT)%ENIT UNAL,
  866              %LVL2 %CHARTEXT( 'RESYN') BIT(1) %INIT( SFURESYN)%ENIT UNAL,
  867              %LVL2 %CHARTEXT( 'MA') BIT(1) %INIT( SFUMA)%ENIT UNAL,
  868              %LVL2 %CHARTEXT( 'SY') BIT(1) %INIT( SFUSY)%ENIT UNAL,
  869              %LVL2 %CHARTEXT( 'EX') BIT(1) %INIT( SFUEX)%ENIT UNAL,
  870              %LVL2 %CHARTEXT( 'FD') BIT(1) %INIT( SFUFD)%ENIT UNAL,
  871              %LVL2 %CHARTEXT( 'HD') BIT(1) %INIT( SFUHD)%ENIT UNAL,
  872      %IF NOT MODE_FEP;
  873          %LVL2 %CHARTEXT( '*') BIT(2) %INIT( '00'B)%ENIT UNAL,
  874      %ENDIF;
  875          %LVL1 %CHARTEXT( 'QOS') UBIN %LONG %INIT( QOS)%ENIT ALIGNED,
  876          %LVL1 %CHARTEXT( 'ARI') UBIN %LONG %INIT( ARI)%ENIT ALIGNED,
  877          %LVL1 %CHARTEXT( 'PFU'),
  878              %LVL2 %CHARTEXT( 'CR') BIT(1) %INIT( PFUCR)%ENIT UNAL,
  879              %LVL2 %CHARTEXT( 'CM') BIT(1) %INIT( PFUCM)%ENIT UNAL LAST
  880      %MEND;
  881
  882      /*F*    NAME:   XSP$CONTROL_GIVE
  883      */
  884      %MACRO XSP$CONTROL_GIVE(
  885              FPTN=XSP$CONTROL_GIVE, LVL=1, LAST=";", STCLASS=BASED,
  886              FNC( REQ=%XSP_FNC_PCTGREQ#,
  887                   IND=%XSP_FNC_PCTGIND#)=%XSP_FNC_PCTGREQ#,
  888              PCID=0);
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                25   
  889      %LSET LISTDIR = '0'B;
  890      %LSET LISTEXP = '1'B;
  891      %LSET LISTCOM = '0'B;
  892      %LSET LISTSUB = '1'B;
  893      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  894      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  895          %LSET INIT = CHARTEXT( ' INIT');
  896          %LSET ENIT = CHARTEXT( '');
  897      %ELSE;
  898          %LSET INIT = CHARTEXT( '/*');
  899          %LSET ENIT = CHARTEXT( '*/');
  900      %ENDIF;
  901      %IF LENGTHC( 'FPTN') = 0;
  902          %LSET LVL = LVL - 1;
  903      %ELSE;
  904          %IF LVL = 1;
  905              DCL 1 FPTN STCLASS ALIGNED,
  906          %ELSE;
  907              %LVL FPTN,
  908          %ENDIF;
  909      %ENDIF;
  910      %LSET LVL1 = LVL + 1;
  911
  912          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  913          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
  914          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
  915          %XSP$$TOKENS( NAME=TOKENS, LVL=%LVL1, LAST=",", STCLASS=STCLASS);
  916          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  917          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=LAST, STCLASS="REDEF ERRDEF");
  918      %MEND;
  919
  920      /*F*    NAME:   XSP$DATA
  921      */
  922      %MACRO XSP$DATA(
  923              FPTN=XSP$DATA, LVL=1, LAST=";", STCLASS=BASED,
  924              FNC( REQ=%XSP_FNC_PDATREQ#,
  925                   IND=%XSP_FNC_PDATIND#)=%XSP_FNC_PDATREQ#,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                26   
  926              PCID=0,
  927              DATA=NIL);
  928      %LSET LISTDIR = '0'B;
  929      %LSET LISTEXP = '1'B;
  930      %LSET LISTCOM = '0'B;
  931      %LSET LISTSUB = '1'B;
  932      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  933      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  934          %LSET INIT = CHARTEXT( ' INIT');
  935          %LSET ENIT = CHARTEXT( '');
  936      %ELSE;
  937          %LSET INIT = CHARTEXT( '/*');
  938          %LSET ENIT = CHARTEXT( '*/');
  939      %ENDIF;
  940      %IF LENGTHC( 'FPTN') = 0;
  941          %LSET LVL = LVL - 1;
  942      %ELSE;
  943          %IF LVL = 1;
  944              DCL 1 FPTN STCLASS ALIGNED,
  945          %ELSE;
  946              %LVL FPTN,
  947          %ENDIF;
  948      %ENDIF;
  949      %LSET LVL1 = LVL + 1;
  950
  951          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  952          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
  953          %LVL1 %CHARTEXT( '*(0:1)') UBIN BYTE %INIT( 0, 0)%ENIT CALIGNED,
  954          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  955          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  956          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED LAST
  957      %MEND;
  958
  959      /*F*    NAME:   XSP$EXPEDITED_DATA
  960      */
  961      %MACRO XSP$EXPEDITED_DATA(
  962              FPTN=XSP$EXPEDITED_DATA, LVL=1, LAST=";", STCLASS=BASED,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                27   
  963              FNC( REQ=%XSP_FNC_PEXPREQ#,
  964                   IND=%XSP_FNC_PEXPIND#)=%XSP_FNC_PEXPREQ#,
  965              PCID=0,
  966              DATA=NIL);
  967      %LSET LISTDIR = '0'B;
  968      %LSET LISTEXP = '1'B;
  969      %LSET LISTCOM = '0'B;
  970      %LSET LISTSUB = '1'B;
  971      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  972      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  973          %LSET INIT = CHARTEXT( ' INIT');
  974          %LSET ENIT = CHARTEXT( '');
  975      %ELSE;
  976          %LSET INIT = CHARTEXT( '/*');
  977          %LSET ENIT = CHARTEXT( '*/');
  978      %ENDIF;
  979      %IF LENGTHC( 'FPTN') = 0;
  980          %LSET LVL = LVL - 1;
  981      %ELSE;
  982          %IF LVL = 1;
  983              DCL 1 FPTN STCLASS ALIGNED,
  984          %ELSE;
  985              %LVL FPTN,
  986          %ENDIF;
  987      %ENDIF;
  988      %LSET LVL1 = LVL + 1;
  989
  990          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  991          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
  992          %LVL1 %CHARTEXT( '*(0:1)') UBIN BYTE %INIT( 0, 0)%ENIT CALIGNED,
  993          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
  994          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  995          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED LAST
  996      %MEND;
  997
  998      /*F*    NAME:   XSP$P_ABORT
  999      */
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                28   
 1000      %MACRO XSP$P_ABORT(
 1001              FPTN=XSP$P_ABORT, LVL=1, LAST=";", STCLASS=BASED,
 1002              FNC( IND=%XSP_FNC_PPABIND#)=%XSP_FNC_PPABIND#,
 1003              PCID=0,
 1004              REASON=%XSS_RC_NONE#);
 1005      %LSET LISTDIR = '0'B;
 1006      %LSET LISTEXP = '1'B;
 1007      %LSET LISTCOM = '0'B;
 1008      %LSET LISTSUB = '1'B;
 1009      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
 1010      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
 1011          %LSET INIT = CHARTEXT( ' INIT');
 1012          %LSET ENIT = CHARTEXT( '');
 1013      %ELSE;
 1014          %LSET INIT = CHARTEXT( '/*');
 1015          %LSET ENIT = CHARTEXT( '*/');
 1016      %ENDIF;
 1017      %IF LENGTHC( 'FPTN') = 0;
 1018          %LSET LVL = LVL - 1;
 1019      %ELSE;
 1020          %IF LVL = 1;
 1021              DCL 1 FPTN STCLASS ALIGNED,
 1022          %ELSE;
 1023              %LVL FPTN,
 1024          %ENDIF;
 1025      %ENDIF;
 1026      %LSET LVL1 = LVL + 1;
 1027
 1028          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
 1029          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
 1030          %LVL1 %CHARTEXT( 'REASON') UBIN BYTE %INIT( REASON)%ENIT CALIGNED,
 1031          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
 1032          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
 1033          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=LAST, STCLASS="REDEF ERRDEF");
 1034      %MEND;
 1035
 1036      /*F*    NAME:   XSP$P_EXCEPTION_REPORT
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                29   
 1037      */
 1038      %MACRO XSP$P_EXCEPTION_REPORT(
 1039              FPTN=XSP$P_EXCEPTION_REPORT, LVL=1, LAST=";", STCLASS=BASED,
 1040              FNC( IND=%XSP_FNC_PPERIND#)=%XSP_FNC_PPERIND#,
 1041              PCID=0,
 1042              REASON=%XSS_RC_NONE#);
 1043      %LSET LISTDIR = '0'B;
 1044      %LSET LISTEXP = '1'B;
 1045      %LSET LISTCOM = '0'B;
 1046      %LSET LISTSUB = '1'B;
 1047      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
 1048      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
 1049          %LSET INIT = CHARTEXT( ' INIT');
 1050          %LSET ENIT = CHARTEXT( '');
 1051      %ELSE;
 1052          %LSET INIT = CHARTEXT( '/*');
 1053          %LSET ENIT = CHARTEXT( '*/');
 1054      %ENDIF;
 1055      %IF LENGTHC( 'FPTN') = 0;
 1056          %LSET LVL = LVL - 1;
 1057      %ELSE;
 1058          %IF LVL = 1;
 1059              DCL 1 FPTN STCLASS ALIGNED,
 1060          %ELSE;
 1061              %LVL FPTN,
 1062          %ENDIF;
 1063      %ENDIF;
 1064      %LSET LVL1 = LVL + 1;
 1065
 1066          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
 1067          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
 1068          %LVL1 %CHARTEXT( 'REASON') UBIN BYTE %INIT( REASON)%ENIT CALIGNED,
 1069          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
 1070          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
 1071          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=LAST, STCLASS="REDEF ERRDEF");
 1072      %MEND;
 1073
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                30   
 1074      /*F*    NAME:   XSP$RELEASE
 1075      */
 1076      %MACRO XSP$RELEASE(
 1077              FPTN=XSP$RELEASE, LVL=1, LAST=";", STCLASS=BASED,
 1078              FNC( REQ=%XSP_FNC_PRELREQ#,
 1079                   IND=%XSP_FNC_PRELIND#,
 1080                   RSP=%XSP_FNC_PRELRSP#,
 1081                   CNF=%XSP_FNC_PRELCNF#)=%XSP_FNC_NONE#,
 1082              PCID=0,
 1083              RESULT=%XSS_RC_NONE#,
 1084              DATA=NIL);
 1085      %LSET LISTDIR = '0'B;
 1086      %LSET LISTEXP = '1'B;
 1087      %LSET LISTCOM = '0'B;
 1088      %LSET LISTSUB = '1'B;
 1089      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
 1090      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
 1091          %LSET INIT = CHARTEXT( ' INIT');
 1092          %LSET ENIT = CHARTEXT( '');
 1093      %ELSE;
 1094          %LSET INIT = CHARTEXT( '/*');
 1095          %LSET ENIT = CHARTEXT( '*/');
 1096      %ENDIF;
 1097      %IF LENGTHC( 'FPTN') = 0;
 1098          %LSET LVL = LVL - 1;
 1099      %ELSE;
 1100          %IF LVL = 1;
 1101              DCL 1 FPTN STCLASS ALIGNED,
 1102          %ELSE;
 1103              %LVL FPTN,
 1104          %ENDIF;
 1105      %ENDIF;
 1106      %LSET LVL1 = LVL + 1;
 1107
 1108          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
 1109          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
 1110          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                31   
 1111          %LVL1 %CHARTEXT( 'RESULT') UBIN BYTE %INIT( RESULT)%ENIT CALIGNED,
 1112          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
 1113          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
 1114          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED LAST
 1115      %MEND;
 1116
 1117      /*F*    NAME:   XSP$RESYNCHRONIZE
 1118      */
 1119      %MACRO XSP$RESYNCHRONIZE(
 1120              FPTN=XSP$RESYNCHRONIZE, LVL=1, LAST=";", STCLASS=BASED,
 1121              FNC( REQ=%XSP_FNC_PRSXREQ#,
 1122                   IND=%XSP_FNC_PRSXIND#,
 1123                   RSP=%XSP_FNC_PRSXRSP#,
 1124                   CNF=%XSP_FNC_PRSXCNF#)=%XSP_FNC_NONE#,
 1125              PCID=0,
 1126              TYPE=%XSS_RT_NONE#,
 1127              TRTOKEN( NO='0'B, YES='1'B)='0'B,
 1128              MATOKEN( NO='0'B, YES='1'B)='0'B,
 1129              MITOKEN( NO='0'B, YES='1'B)='0'B,
 1130              DKTOKEN( NO='0'B, YES='1'B)='0'B,
 1131              DATA=NIL,
 1132              CTXT=NIL,
 1133              SERNUM=0);
 1134      %LSET LISTDIR = '0'B;
 1135      %LSET LISTEXP = '1'B;
 1136      %LSET LISTCOM = '0'B;
 1137      %LSET LISTSUB = '1'B;
 1138      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
 1139      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
 1140          %LSET INIT = CHARTEXT( ' INIT');
 1141          %LSET ENIT = CHARTEXT( '');
 1142      %ELSE;
 1143          %LSET INIT = CHARTEXT( '/*');
 1144          %LSET ENIT = CHARTEXT( '*/');
 1145      %ENDIF;
 1146      %IF LENGTHC( 'FPTN') = 0;
 1147          %LSET LVL = LVL - 1;
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                32   
 1148      %ELSE;
 1149          %IF LVL = 1;
 1150              DCL 1 FPTN STCLASS ALIGNED,
 1151          %ELSE;
 1152              %LVL FPTN,
 1153          %ENDIF;
 1154      %ENDIF;
 1155      %LSET LVL1 = LVL + 1;
 1156      %LSET LVL2 = LVL1 + 1;
 1157      %IF MODE_FEP;
 1158          %LSET LONG = CHARTEXT( '(32)');
 1159      %ELSE;
 1160          %LSET LONG = CHARTEXT( 'WORD');
 1161      %ENDIF;
 1162
 1163          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
 1164          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
 1165          %LVL1 %CHARTEXT( 'TYPE') UBIN BYTE %INIT( TYPE)%ENIT CALIGNED,
 1166          %XSP$$TOKENS( NAME=TOKENS, LVL=%LVL1, LAST=",", STCLASS=STCLASS,
 1167              TRTOKEN=TRTOKEN, MATOKEN=MATOKEN, MITOKEN=MITOKEN, DKTOKEN=DKTOKEN);
 1168          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
 1169          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
 1170          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED,
 1171          %LVL1 %CHARTEXT( '*') UBIN %INIT( 0)%ENIT ALIGNED,
 1172          %LVL1 %CHARTEXT( 'SERNUM') UBIN %LONG %INIT( SERNUM)%ENIT ALIGNED,
 1173          %LVL1 %CHARTEXT( 'CTXT$') PTR %INIT( ADDR( CTXT))%ENIT ALIGNED LAST
 1174      %MEND;
 1175
 1176      /*F*    NAME:   XSP$SYNC_MAJOR
 1177      */
 1178      %MACRO XSP$SYNC_MAJOR(
 1179              FPTN=XSP$SYNC_MAJOR, LVL=1, LAST=";", STCLASS=BASED,
 1180              FNC( REQ=%XSP_FNC_PSMAREQ#,
 1181                   IND=%XSP_FNC_PSMAIND#,
 1182                   RSP=%XSP_FNC_PSMARSP#,
 1183                   CNF=%XSP_FNC_PSMACNF#)=%XSP_FNC_NONE#,
 1184              PCID=0,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                33   
 1185              TYPE=%XSS_STYP_NOTENDACT#,
 1186              DATA=NIL,
 1187              SERNUM=0);
 1188      %LSET LISTDIR = '0'B;
 1189      %LSET LISTEXP = '1'B;
 1190      %LSET LISTCOM = '0'B;
 1191      %LSET LISTSUB = '1'B;
 1192      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
 1193      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
 1194          %LSET INIT = CHARTEXT( ' INIT');
 1195          %LSET ENIT = CHARTEXT( '');
 1196      %ELSE;
 1197          %LSET INIT = CHARTEXT( '/*');
 1198          %LSET ENIT = CHARTEXT( '*/');
 1199      %ENDIF;
 1200      %IF LENGTHC( 'FPTN') = 0;
 1201          %LSET LVL = LVL - 1;
 1202      %ELSE;
 1203          %IF LVL = 1;
 1204              DCL 1 FPTN STCLASS ALIGNED,
 1205          %ELSE;
 1206              %LVL FPTN,
 1207          %ENDIF;
 1208      %ENDIF;
 1209      %LSET LVL1 = LVL + 1;
 1210      %IF MODE_FEP;
 1211          %LSET LONG = CHARTEXT( '(32)');
 1212      %ELSE;
 1213          %LSET LONG = CHARTEXT( 'WORD');
 1214      %ENDIF;
 1215
 1216          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
 1217          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
 1218          %LVL1 %CHARTEXT( 'TYPE') UBIN BYTE %INIT( TYPE)%ENIT CALIGNED,
 1219          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
 1220          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
 1221          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                34   
 1222          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED,
 1223          %LVL1 %CHARTEXT( '*') UBIN %INIT( 0)%ENIT ALIGNED,
 1224          %LVL1 %CHARTEXT( 'SERNUM') UBIN %LONG %INIT( SERNUM)%ENIT ALIGNED LAST
 1225      %MEND;
 1226
 1227      /*F*    NAME:   XSP$SYNC_MINOR
 1228      */
 1229      %MACRO XSP$SYNC_MINOR(
 1230              FPTN=XSP$SYNC_MINOR, LVL=1, LAST=";", STCLASS=BASED,
 1231              FNC( REQ=%XSP_FNC_PSMIREQ#,
 1232                   IND=%XSP_FNC_PSMIIND#,
 1233                   RSP=%XSP_FNC_PSMIRSP#,
 1234                   CNF=%XSP_FNC_PSMICNF#)=%XSP_FNC_NONE#,
 1235              PCID=0,
 1236              TYPE=%XSS_RT_NONE#,
 1237              DATA=NIL,
 1238              SERNUM=0);
 1239      %LSET LISTDIR = '0'B;
 1240      %LSET LISTEXP = '1'B;
 1241      %LSET LISTCOM = '0'B;
 1242      %LSET LISTSUB = '1'B;
 1243      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
 1244      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
 1245          %LSET INIT = CHARTEXT( ' INIT');
 1246          %LSET ENIT = CHARTEXT( '');
 1247      %ELSE;
 1248          %LSET INIT = CHARTEXT( '/*');
 1249          %LSET ENIT = CHARTEXT( '*/');
 1250      %ENDIF;
 1251      %IF LENGTHC( 'FPTN') = 0;
 1252          %LSET LVL = LVL - 1;
 1253      %ELSE;
 1254          %IF LVL = 1;
 1255              DCL 1 FPTN STCLASS ALIGNED,
 1256          %ELSE;
 1257              %LVL FPTN,
 1258          %ENDIF;
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                35   
 1259      %ENDIF;
 1260      %LSET LVL1 = LVL + 1;
 1261      %IF MODE_FEP;
 1262          %LSET LONG = CHARTEXT( '(32)');
 1263      %ELSE;
 1264          %LSET LONG = CHARTEXT( 'WORD');
 1265      %ENDIF;
 1266
 1267          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
 1268          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
 1269          %LVL1 %CHARTEXT( 'TYPE') UBIN BYTE %INIT( TYPE)%ENIT CALIGNED,
 1270          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
 1271          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
 1272          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
 1273          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED,
 1274          %LVL1 %CHARTEXT( '*') UBIN %INIT( 0)%ENIT ALIGNED,
 1275          %LVL1 %CHARTEXT( 'SERNUM') UBIN %LONG %INIT( SERNUM)%ENIT ALIGNED LAST
 1276      %MEND;
 1277
 1278      /*F*    NAME:   XSP$TOKEN_GIVE
 1279      */
 1280      %MACRO XSP$TOKEN_GIVE(
 1281              FPTN=XSP$TOKEN_GIVE, LVL=1, LAST=";", STCLASS=BASED,
 1282              FNC( REQ=%XSP_FNC_PTKGREQ#,
 1283                   IND=%XSP_FNC_PTKGIND#)=%XSP_FNC_PTKGREQ#,
 1284              PCID=0,
 1285              TRTOKEN( NO='0'B, YES='1'B)='0'B,
 1286              MATOKEN( NO='0'B, YES='1'B)='0'B,
 1287              MITOKEN( NO='0'B, YES='1'B)='0'B,
 1288              DKTOKEN( NO='0'B, YES='1'B)='0'B);
 1289      %LSET LISTDIR = '0'B;
 1290      %LSET LISTEXP = '1'B;
 1291      %LSET LISTCOM = '0'B;
 1292      %LSET LISTSUB = '1'B;
 1293      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
 1294      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
 1295          %LSET INIT = CHARTEXT( ' INIT');
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                36   
 1296          %LSET ENIT = CHARTEXT( '');
 1297      %ELSE;
 1298          %LSET INIT = CHARTEXT( '/*');
 1299          %LSET ENIT = CHARTEXT( '*/');
 1300      %ENDIF;
 1301      %IF LENGTHC( 'FPTN') = 0;
 1302          %LSET LVL = LVL - 1;
 1303      %ELSE;
 1304          %IF LVL = 1;
 1305              DCL 1 FPTN STCLASS ALIGNED,
 1306          %ELSE;
 1307              %LVL FPTN,
 1308          %ENDIF;
 1309      %ENDIF;
 1310      %LSET LVL1 = LVL + 1;
 1311      %LSET LVL2 = LVL1 + 1;
 1312
 1313          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
 1314          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
 1315          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
 1316          %XSP$$TOKENS( NAME=TOKENS, LVL=%LVL1, LAST=",", STCLASS=STCLASS,
 1317              TRTOKEN=TRTOKEN, MATOKEN=MATOKEN, MITOKEN=MITOKEN, DKTOKEN=DKTOKEN);
 1318          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
 1319          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=LAST, STCLASS="REDEF ERRDEF");
 1320      %MEND;
 1321
 1322      /*F*    NAME:   XSP$TOKEN_PLEASE
 1323      */
 1324      %MACRO XSP$TOKEN_PLEASE(
 1325              FPTN=XSP$TOKEN_PLEASE, LVL=1, LAST=";", STCLASS=BASED,
 1326              FNC( REQ=%XSP_FNC_PTKPREQ#,
 1327                   IND=%XSP_FNC_PTKPIND#)=%XSP_FNC_PTKPREQ#,
 1328              PCID=0,
 1329              TRTOKEN( NO='0'B, YES='1'B)='0'B,
 1330              MATOKEN( NO='0'B, YES='1'B)='0'B,
 1331              MITOKEN( NO='0'B, YES='1'B)='0'B,
 1332              DKTOKEN( NO='0'B, YES='1'B)='0'B,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                37   
 1333              DATA=NIL);
 1334      %LSET LISTDIR = '0'B;
 1335      %LSET LISTEXP = '1'B;
 1336      %LSET LISTCOM = '0'B;
 1337      %LSET LISTSUB = '1'B;
 1338      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
 1339      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
 1340          %LSET INIT = CHARTEXT( ' INIT');
 1341          %LSET ENIT = CHARTEXT( '');
 1342      %ELSE;
 1343          %LSET INIT = CHARTEXT( '/*');
 1344          %LSET ENIT = CHARTEXT( '*/');
 1345      %ENDIF;
 1346      %IF LENGTHC( 'FPTN') = 0;
 1347          %LSET LVL = LVL - 1;
 1348      %ELSE;
 1349          %IF LVL = 1;
 1350              DCL 1 FPTN STCLASS ALIGNED,
 1351          %ELSE;
 1352              %LVL FPTN,
 1353          %ENDIF;
 1354      %ENDIF;
 1355      %LSET LVL1 = LVL + 1;
 1356      %LSET LVL2 = LVL1 + 1;
 1357
 1358          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
 1359          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
 1360          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
 1361          %XSP$$TOKENS( NAME=TOKENS, LVL=%LVL1, LAST=",", STCLASS=STCLASS,
 1362              TRTOKEN=TRTOKEN, MATOKEN=MATOKEN, MITOKEN=MITOKEN, DKTOKEN=DKTOKEN);
 1363          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
 1364          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
 1365          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED LAST
 1366      %MEND;
 1367
 1368      /*F*    NAME:   XSP$TYPED_DATA
 1369      */
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                38   
 1370      %MACRO XSP$TYPED_DATA(
 1371              FPTN=XSP$TYPED_DATA, LVL=1, LAST=";", STCLASS=BASED,
 1372              FNC( REQ=%XSP_FNC_PTYDREQ#,
 1373                   IND=%XSP_FNC_PTYDIND#)=%XSP_FNC_PTYDREQ#,
 1374              PCID=0,
 1375              DATA=NIL);
 1376      %LSET LISTDIR = '0'B;
 1377      %LSET LISTEXP = '1'B;
 1378      %LSET LISTCOM = '0'B;
 1379      %LSET LISTSUB = '1'B;
 1380      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
 1381      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
 1382          %LSET INIT = CHARTEXT( ' INIT');
 1383          %LSET ENIT = CHARTEXT( '');
 1384      %ELSE;
 1385          %LSET INIT = CHARTEXT( '/*');
 1386          %LSET ENIT = CHARTEXT( '*/');
 1387      %ENDIF;
 1388      %IF LENGTHC( 'FPTN') = 0;
 1389          %LSET LVL = LVL - 1;
 1390      %ELSE;
 1391          %IF LVL = 1;
 1392              DCL 1 FPTN STCLASS ALIGNED,
 1393          %ELSE;
 1394              %LVL FPTN,
 1395          %ENDIF;
 1396      %ENDIF;
 1397      %LSET LVL1 = LVL + 1;
 1398
 1399          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
 1400          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
 1401          %LVL1 %CHARTEXT( '*(0:1)') UBIN BYTE %INIT( 0, 0)%ENIT CALIGNED,
 1402          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
 1403          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
 1404          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED LAST
 1405      %MEND;
 1406
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                39   
 1407      /*F*    NAME:   XSP$U_ABORT
 1408      */
 1409      %MACRO XSP$U_ABORT(
 1410              FPTN=XSP$U_ABORT, LVL=1, LAST=";", STCLASS=BASED,
 1411              FNC( REQ=%XSP_FNC_PUABREQ#,
 1412                   IND=%XSP_FNC_PUABIND#)=%XSP_FNC_PUABREQ#,
 1413              PCID=0,
 1414              DATA=NIL);
 1415      %LSET LISTDIR = '0'B;
 1416      %LSET LISTEXP = '1'B;
 1417      %LSET LISTCOM = '0'B;
 1418      %LSET LISTSUB = '1'B;
 1419      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
 1420      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
 1421          %LSET INIT = CHARTEXT( ' INIT');
 1422          %LSET ENIT = CHARTEXT( '');
 1423      %ELSE;
 1424          %LSET INIT = CHARTEXT( '/*');
 1425          %LSET ENIT = CHARTEXT( '*/');
 1426      %ENDIF;
 1427      %IF LENGTHC( 'FPTN') = 0;
 1428          %LSET LVL = LVL - 1;
 1429      %ELSE;
 1430          %IF LVL = 1;
 1431              DCL 1 FPTN STCLASS ALIGNED,
 1432          %ELSE;
 1433              %LVL FPTN,
 1434          %ENDIF;
 1435      %ENDIF;
 1436      %LSET LVL1 = LVL + 1;
 1437
 1438          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
 1439          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
 1440          %LVL1 %CHARTEXT( '*(0:1)') UBIN BYTE %INIT( 0, 0)%ENIT CALIGNED,
 1441          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
 1442          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
 1443          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED LAST
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                40   
 1444      %MEND;
 1445
 1446      /*F*    NAME:   XSP$U_EXCEPTION_REPORT
 1447      */
 1448      %MACRO XSP$U_EXCEPTION_REPORT(
 1449              FPTN=XSP$U_EXCEPTION_REPORT, LVL=1, LAST=";", STCLASS=BASED,
 1450              FNC( REQ=%XSP_FNC_PUERREQ#,
 1451                   IND=%XSP_FNC_PUERIND#)=%XSP_FNC_PUERREQ#,
 1452              PCID=0,
 1453              REASON=%XSS_RC_NONE#,
 1454              DATA=NIL);
 1455      %LSET LISTDIR = '0'B;
 1456      %LSET LISTEXP = '1'B;
 1457      %LSET LISTCOM = '0'B;
 1458      %LSET LISTSUB = '1'B;
 1459      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
 1460      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
 1461          %LSET INIT = CHARTEXT( ' INIT');
 1462          %LSET ENIT = CHARTEXT( '');
 1463      %ELSE;
 1464          %LSET INIT = CHARTEXT( '/*');
 1465          %LSET ENIT = CHARTEXT( '*/');
 1466      %ENDIF;
 1467      %IF LENGTHC( 'FPTN') = 0;
 1468          %LSET LVL = LVL - 1;
 1469      %ELSE;
 1470          %IF LVL = 1;
 1471              DCL 1 FPTN STCLASS ALIGNED,
 1472          %ELSE;
 1473              %LVL FPTN,
 1474          %ENDIF;
 1475      %ENDIF;
 1476      %LSET LVL1 = LVL + 1;
 1477
 1478          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
 1479          %LVL1 %CHARTEXT( 'PCID') UBIN BYTE %INIT( PCID)%ENIT CALIGNED,
 1480          %LVL1 %CHARTEXT( 'REASON') UBIN BYTE %INIT( REASON)%ENIT CALIGNED,
10:41 OCT 01 '97 XSP_PRESENTATION_M.:XSA1SI                                41   
 1481          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
 1482          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSP_RDONLYFPT#)%ENIT ALIGNED,
 1483          %XSP$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
 1484          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT ALIGNED LAST
 1485      %MEND;

