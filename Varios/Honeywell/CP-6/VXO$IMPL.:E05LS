VERSION E05

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:1    
        1        1        /*M* VXO$IMPL - checks for conflicts between link options.    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=4,STI=0,IND=4,CTI=3,DCI=4,ECI=4,CSI=0,THI=0,DTI=0,ENI=4,
        8        8             CLM=0,SQB,NTB,MOC,CCI=3,NLB,MCL=0,EDMC*/
        9        9        /*D*  NAME:       VXO$IMPL
       10       10              DESCRIPTION:
       11       11                        S    P    N    N    N    N    N    A    O    R    S
       12       12                        H    R    O    O    O    O    O    L    S    U    Y
       13       13                        A    O    B    D    S    S    S    I    P    N    S
       14       14                        R    M    R    E    E    H    Y    B              T
       15       15                        E    O    E    B    T    A    S                   E
       16       16                        D    T    F    U    S    R    L                   M
       17       17                             E         G         E    I
       18       18                                                 L    B
       19       19                                                 I
       20       20                                                 B
       21       21
       22       22        SHARED          .    .    .    .    .    .    .    .    .    .    .
       23       23
       24       24        PROMOTE         1    .    .    .    .    .    .    .    .    .    .
       25       25
       26       26        NOBREF          1    2    .    .    .    .    .    .    .    .    .
       27       27
       28       28        NODEBUG         1    2    3    .    .    .    .    .    .    .    .
       29       29
       30       30        NOSETS          1    2    3    4    .    .    .    .    .    .    .
       31       31
       32       32        NOSHARELIB      1    2    3    4    5    .    .    .    .    .    .
       33       33
       34       34        NOSYSLIB        1    2    3    4    5    6    .    .    .    .    .
       35       35
       36       36        ALIB            1    2    3    4    5    6    7    .    .    .    .
       37       37
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:2    
       38       38        OSP             1    2    3    4    5    6    7    8    .    .    .
       39       39
       40       40        RUN             1    2    3    4    5    6    7    8    9    .    .
       41       41
       42       42        SYSTEM          1    2    3    4    5    6    7    8    9    *    .
       43       43
       44       44        NOEDITING       1    2    3    4    5    6    7    8    9    *    Y
       45       45
       46       46        ASLIB           1    2    3    4    5    6    7    8    9    *    Y
       47       47
       48       48        SLIB            1    2    3    4    5    6    7    8    9    *    Y
       49       49
       50       50        BREF            1    2    3    4    5    6    7    8    9    *    Y
       51       51
       52       52        DCBSLOTS        1    2    3    4    5    6    7    8    9    *    Y->0
       53       53
       54       54        DBIAS           1    2    3    4    5    6    7    8    9    *    +
       55       55
       56       56        PBIAS           1    2    3    4    5    6    7    8    9    *    +
       57       57
       58       58        SEVERITY        1    2    3    4    5    6    7    8    9    *    +
       59       59
       60       60        START           1    2    3    4    5    6    7    8    9    *    +
       61       61
       62       62        TCB             1    2    3    4    5    6    7    8    9    *    Y->0
       63       63
       64       64        NAME            1    2    3    4    5    6    7    8    9    *    +
       65       65
       66       66        VALUE           1    2    3    4    5    6    7    8    9    *    +
       67       67
       68       68        UDEF            1    2    3    4    5    6    7    8    9    *    +
       69       69
       70       70        LDEF            1    2    3    4    5    6    7    8    9    *    +
       71       71
       72       72        ALTSHARELIB     1    2    3    4    5    6    7    8    9    *    Y
       73       73
       74       74        SHARELIB        1    2    3    4    5    6    7    8    9    *    Y
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:3    
       75       75
       76       76        UNSAT           1    2    3    4    5    6    7    8    9    *    +
       77       77
       78       78        INCLUDE         1    2    3    4    5    6    7    8    9    *    +
       79       79
       80       80        SIDCB           1    2    3    4    5    6    7    8    9    *    Y
       81       81
       82       82        UIDCB           1    2    3    4    5    6    7    8    9    *    Y
       83       83
       84       84        OUDCB           1    2    3    4    5    6    7    8    9    *    Y
       85       85
       86       86        LODCB           1    2    3    4    5    6    7    8    9    *    Y
       87       87
       88       88                        N    A    S    B    D    D    P    S    S    T    N
       89       89                        O    S    L    R    C    B    B    E    T    C    A
       90       90                        E    L    I    E    B    I    I    V    A    B    M
       91       91                        D    I    B    F    S    A    A    E    R         E
       92       92                        I    B              L    S    S    R    T
       93       93                        T                   O              I
       94       94                        I                   T              T
       95       95                        N                   S              Y
       96       96                        G
       97       97
       98       98        ASLIB           Y    .    .    .    .    .    .    .    .    .    .
       99       99
      100      100        SLIB            Y    Y    .    .    .    .    .    .    .    .    .
      101      101
      102      102        BREF            Y    2    Y    .    .    .    .    .    .    .    .
      103      103
      104      104        DCBSLOTS        Y->0 2    Y->0 4    .    .    .    .    .    .    .
      105      105
      106      106        DBIAS           1    2    3    4    5    .    .    .    .    .    .
      107      107
      108      108        PBIAS           1    2    3    4    5    6    .    .    .    .    .
      109      109
      110      110        SEVERITY        1    2    3    4    5    6    7    .    .    .    .
      111      111
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:4    
      112      112        START           1    2    3    4    5    6    7    8    .    .    .
      113      113
      114      114        TCB             Y->0 Y->0 Y->0 4    5    6    7    8    9    .    .
      115      115
      116      116        NAME            1    2    3    4    5    6    7    8    9    *    .
      117      117
      118      118        VALUE           1    2    3    4    5    6    7    8    9    *    +
      119      119
      120      120        UDEF            1    2    3    4    5    6    7    8    9    *    +
      121      121
      122      122        LDEF            1    2    3    4    5    6    7    8    9    *    +
      123      123
      124      124        ALTSHARELIB     1    Y    Y    4    5    6    7    8    9    *    +
      125      125
      126      126        SHARELIB        1    Y    Y    4    5    6    7    8    9    *    +
      127      127
      128      128        UNSAT           1    2    3    4    5    6    7    8    9    *    +
      129      129
      130      130        INCLUDE         1    2    3    4    5    6    7    8    9    *    +
      131      131
      132      132        SIDCB           Y    2    Y    4    5    6    7    8    9    *    +
      133      133
      134      134        UIDCB           Y    2    Y    4    5    6    7    8    9    *    +
      135      135
      136      136        OUDCB           Y    2    Y    4    5    6    7    8    9    *    +
      137      137
      138      138        LODCB           Y    2    Y    4    5    6    7    8    9    *    +
      139      139
      140      140                        V    U    L    A    S    U    I    S    U    O    L
      141      141                        A    D    D    L    H    N    N    I    I    U    O
      142      142                        L    E    E    T    A    S    C    D    D    D    D
      143      143                        U    F    F    S    R    A    L    C    C    C    C
      144      144                        E              H    E    T    U    B    B    B    B
      145      145                                       A    L         D
      146      146                                       R    I         E
      147      147                                       E    B
      148      148                                       L
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:5    
      149      149                                       I
      150      150                                       B
      151      151
      152      152        UDEF            1    .    .    .    .    .    .    .    .    .    .
      153      153
      154      154        LDEF            1    2    .    .    .    .    .    .    .    .    .
      155      155
      156      156        ALTSHARELIB     1    2    3    .    .    .    .    .    .    .    .
      157      157
      158      158        SHARELIB        1    2    3    4    .    .    .    .    .    .    .
      159      159
      160      160        UNSAT           1    2    3    4    5    .    .    .    .    .    .
      161      161
      162      162        INCLUDE         1    2    3    4    5    6    .    .    .    .    .
      163      163
      164      164        SIDCB           1    2    3    4    5    6    7    .    .    .    .
      165      165
      166      166        UIDCB           1    2    3    4    5    6    7    8    .    .    .
      167      167
      168      168        OUDCB           1    2    3    4    5    6    7    8    9    .    .
      169      169
      170      170        LODCB           1    2    3    4    5    6    7    8    9    *    .
      171      171
      172      172
      173      173                        F    D    P         B    D    B    B         R      S    A
      174      174                        A    E    I         $    E    $    $         O      H    L
      175      175                        U    L    A         J    L    T    R         S      A    T
      176      176                        L    T              I    T    C    O                R
      177      177                        T    A              T    A    B    S         D      E    S
      178      178                                            $         $    $         C      D    H
      179      179                        L    A                   P                   B           A
      180      180                        O    R                   T                          L    R
      181      181                        C    E                   R                   T      I    E
      182      182                                                                     R      B    D
      183      183                                                                     E
      184      184                                                                     E      A    L
      185      185                                                                            S    I
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:6    
      186      186                                                                            S    B
      187      187
      188      188                                                                                 A
      189      189                                                                                 S
      190      190                                                                                 S
      191      191
      192      192        SHARED LIB ASS  N    N    N         Y    Y    Y    Y         -      .    -
      193      193
      194      194        ALT SHARED LIB  -    -    -         -    -    -    -         -      -    .
      195      195
      196      196        SHARED          -    -    -         -    -    -    -         -      -    -
      197      197
      198      198        PROMOTE         -    -    -         -    -    -    -         -      -    -
      199      199
      200      200        NOBREF          -    -    -         -    -    -    -         -      -    -
      201      201
      202      202        NODEBUG         -    -    -         -    -    -    -         -      -    -
      203      203
      204      204        NOSETS          -    -    -         -    -    -    -         -      -    -
      205      205
      206      206        NOSHARELIB      -    -    -         -    -    -    -         -      -    -
      207      207
      208      208        NOSYSLIB        -    -    -         -    -    -    -         -      -    -
      209      209
      210      210        ALIB            -    -    -         -    -    -    -         -      -    -
      211      211
      212      212        OSP             -    -    -         -    -    -    -         -      -    -
      213      213
      214      214        RUN             -    -    -         -    -    -    -         -      -    -
      215      215
      216      216        SYSTEM          N    N    N         A    N    A    A         N      N    N
      217      217
      218      218        NOEDITING       N    N    N         N    N    N    N         N      N    N
      219      219
      220      220        ASLIB           N    N    N         A    N    A    A         N      -    -
      221      221
      222      222        SLIB            Y    Y    Y         A    Y    A    A         N      N    N
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:7    
      223      223
      224      224        BREF            -    -    -         -    -    -    -         -      -    -
      225      225
      226      226        DCBSLOTS        -    -    -         -    -    -    -         -      -    -
      227      227
      228      228        DBIAS           -    -    -         -    -    -    -         -      -    -
      229      229
      230      230        PBIAS           -    -    -         -    -    -    -         -      -    -
      231      231
      232      232        SEVERITY        -    -    -         -    -    -    -         -      -    -
      233      233
      234      234        START           -    -    -         -    -    -    -         -      -    -
      235      235
      236      236        TCB             -    -    -         -    -    -    -         -      -    -
      237      237
      238      238        NAME            -    -    -         -    -    -    -         -      -    -
      239      239
      240      240        VALUE           -    -    -         -    -    -    -         -      -    -
      241      241
      242      242        UDEF            -    -    -         -    -    -    -         -      -    -
      243      243
      244      244        LDEF            -    -    -         -    -    -    -         -      -    -
      245      245
      246      246        ALTSHARELIB     -    -    -         -    -    -    -         -      -    -
      247      247
      248      248        SHARELIB        -    -    -         -    -    -    -         -      -    -
      249      249
      250      250        UNSAT           -    -    -         -    -    -    -         -      -    -
      251      251
      252      252        INCLUDE         -    -    -         -    -    -    -         -      -    -
      253      253
      254      254        SIDCB           -    -    -         -    -    -    -         -      -    -
      255      255
      256      256        UIDCB           -    -    -         -    -    -    -         -      -    -
      257      257
      258      258        OUDCB           -    -    -         -    -    -    -         -      -    -
      259      259
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:8    
      260      260        LODCB           -    -    -         -    -    -    -         -      -    -
      261      261
      262      262        */
      263      263         %MACRO CON(
      264      264         FIRST=FIRST,
      265      265         SECOND=SECOND);
      266      266            IF VX_OD.SECOND THEN DO;
      267      267                CALL VXO$CONFLICT(
      268      268                   VX_ON.FIRST,
      269      269                   VX_ON.SECOND );
      270      270                END; /* If */
      271      271        %MEND;
      272      272         %MACRO NO_DATA_INSERT;
      273      273            VX_SPC_DATA_INSERT = @FALSE_B;
      274      274        %MEND;
      275      275         %MACRO NO_ROS;
      276      276            VX_ROS_ALLOWED = @FALSE_B;
      277      277        %MEND;
      278      278         %MACRO NO_TCB;
      279      279            VX_O.NUM.TCB = 0;
      280      280        %MEND;
      281      281         %MACRO NO_DCBSLOTS;
      282      282            VX_O.NUM.DCBSLOTS = 0;
      283      283        %MEND;
      284      284        VXO$IMPL:
      285      285            PROC;
      286      286        %INCLUDE VX_INC_C;
      287    11002        %INCLUDE VX_PSUBS_C;
      288    11180        %INCLUDE B_ERRORS_C;
      289    12307        %B$TCB;
      290    12310        %B$ALT;
      291    12318        %P$LIT ( NAME=P$LIT, STCLASS="BASED", LEN="P$LIT.COUNT" );
      292    12371        %VX$NODE;

             12383    1   /*******************************************************************************
             12384    1   *                                                                              *
             12385    1   *                          VX$NODE                                                 *
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:9    
             12386    1   *                                                                              *
             12387    1   *******************************************************************************/

             12403    1   DCL 1 VX$NODE      ALIGNED    BASED,
             12404    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             12405    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             12406    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             12407    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             12408    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             12409                              to list of file nodes for this node            */
             12410    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             12411    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             12411                  /* Head pointer to shared library list */
             12412    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             12412                  /* Head pointer to list of shared libraries
             12413                                          which have been mapped to included libraries */
             12414    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             12415    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             12416    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             12417    1         2 ADDR_START REDEF  ADDR_START_A,
             12418    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             12419    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             12420    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             12421    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             12422    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             12423    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             12424    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             12425    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             12426    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             12427    1         2 START_PAGE# REDEF START_PAGE#_A,
             12428    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             12429    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             12430    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             12431    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             12432    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             12433    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             12434    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:10   
             12435    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             12436    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             12436                  /* Starting pointer for common sections for this node */
             12437    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             12437                  /* Stopping pointer for common sections for this node */
             12438    1         2 L_START,
             12439    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             12440    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             12441    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             12442    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             12443    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             12444    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             12445    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             12446    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             12447    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             12448    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             12449    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             12450    1         2 L_STOP,
             12451    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             12452    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             12453    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             12454    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             12455    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             12456    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             12457    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             12458    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             12459    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             12460    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             12461    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             12462    1         2 L_SIZE,
             12463    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             12464    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             12465    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             12466    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             12467    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             12468    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             12469    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:11   
             12470    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             12471    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             12472    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             12473    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             12474    1         2 L_PREV_SIZE,
             12475    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             12476    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             12477    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             12478    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             12479    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             12480    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             12481    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             12482    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             12483    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             12484    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             12485    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             12486    1         2 BIT_MAP                ALIGNED,
             12487    1           3 DATA                  ALIGNED,
             12488    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12489    1           3 RPROC                 ALIGNED,
             12490    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12491    1           3 ROS                   ALIGNED,
             12492    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12493    1         2 L_SC_START,
             12494    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             12495    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             12496    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             12497    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             12498    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             12499    1         2 L_SC_STOP,
             12500    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             12501    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             12502    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             12503    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             12504    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             12505    1         2 PROMOTE_HEAD,
             12506    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:12   
             12507    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             12508    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             12509    1         2 PROMOTE_TAIL,
             12510    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             12511    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             12512    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             12513    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             12514    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             12515    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             12516    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             12517    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

      293    12521        %VX$SC;

             12534    1   /*******************************************************************************
             12535    1   *                                                                              *
             12536    1   *                          VX$SC                                                 *
             12537    1   *                                                                              *
             12538    1   *******************************************************************************/

             12543    1   DCL 1 VX$SC BASED ALIGNED,
             12544    1         2 SEG UBIN(3) UNAL,
             12545                /*K*  SEG - The segment number of this section */
             12546    1         2 TYPE UBIN(6) UNAL,
             12547                /*K*  TYPE -
             12548                      Type code      Section type
             12549                      ---------      ------------
             12550                          0          Data control section with write access.
             12551                          1          Procedure control section.
             12552                          2          Unlabeled common, name pointer must be zero.
             12553                          3          Labeled common, with mandatory name pointer.
             12554                                     This is for labeled common which must be
             12555                                     in the root.
             12556                          4          Labeled common, with mandatory name pointer.
             12557                                     This is for labeled common which need not
             12558                                     be in the root.
             12559                          5          DCB, word 1 is name pointer.
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:13   
             12560                          6          Data control section with read only access,
             12561                                     word 1 = 0 or name pointer.      */
             12562    1         2 EMPTY BIT(1) UNAL,
             12563                /*K*  EMPTY is the empty bit.  This bit is set if the control
             12564                      section is of size zero.  */
             12565    1         2 ATTR UNAL,
             12566    1           3 INT  UBIN(2) UNAL,
             12567                  /*K*  INT is the Section initialization.  */
             12568    1           3 SEGMENT BIT(1) UNAL,
             12569                  /*K* SEGMENT is set if the Section is defined in a data
             12570                       segment.  */
             12571    1           3 ALL BIT(1) UNAL,
             12572                  /*K*  ALL is set if the Section is allocated.  */
             12573    1           3 PRE_DCB BIT(1) UNAL,
             12574                  /*K*  PRE_DCB is set if a Pre_defined DCB.  */
             12575    1           3 MES_INIT BIT(1) UNAL,
             12576    1           3 ALIGN UBIN(2) UNAL,
             12577                  /*K*  ALIGN is the Section alignment.  */
             12578    1         2 ADDRESS UBIN HALF UNAL,
             12579                /*K*  ADDRESS is the address within the Instruction Segment of
             12580                      the entry point of the external procedure.  */
             12581    1         2 NAME_DISP SBIN HALF UNAL,
             12582                /*K*  NAME_DISP is the Name index.  */
             12583    1         2 SIZE UBIN HALF UNAL,
             12584                /*K*  SIZE is the size, in words, of the section.  */
             12585    1         2 NODE# UBIN HALF UNAL,
             12586                /*K*  NODE# is the Node number of section.  */
             12587    1         2 COM_LINK UBIN HALF UNAL;
             12588                /*K*  COM_LINK is used internally by linker to link common sections */

             12598    1   /*******************************************************************************
             12599    1   *                                                                              *
             12600    1   *                          VX$SECT                                                 *
             12601    1   *                                                                              *
             12602    1   *******************************************************************************/

             12607    1   DCL 1 VX$SECT BASED ALIGNED,
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:14   
             12608    1         2 TYPE UBIN BYTE UNAL,
             12609                /*K*  TYPE -
             12610                      Type code      Section type
             12611                      ---------      ------------
             12612                          0          Data control section with write access.
             12613                          1          Procedure control section.
             12614                          2          Unlabeled common, name pointer must be zero.
             12615                          3          Labeled common, with mandatory name pointer.
             12616                                     This is for labeled common which must be
             12617                                     in the root.
             12618                          4          Labeled common, with mandatory name pointer.
             12619                                     This is for labeled common which need not
             12620                                     be in the root.
             12621                          5          DCB, word 1 is name pointer.
             12622                          6          Data control section with read only access,
             12623                                     word 1 = 0 or name pointer.
             12624                          7          Constant labeled common, with mandatory name pointer.
             12625                                     This is for labeled common which must be
             12626                                     in the root.
             12627                          8          Constant labeled common, with mandatory name pointer.
             12628                                     This is for labeled common which need not
             12629                                     be in the root.                        */
             12630    1         2 * BIT(1),
             12631                /*K*  * is reserved for future use and must be zero. */
             12632    1         2 INITZERO BIT(1),
             12633                /*K*  INITZERO - if 1, initialize with zero.  */
             12634    1         2 INITUTS BIT(1),
             12635                /*K*  INITUTS - if 1, initialize with UTS.  */
             12636    1         2 SEGMENT BIT(1),
             12637                /*K*  SEGMENT - if 1, specifies that this section is
             12638                                to be placed in the segment specified by
             12639                                SEG_NPOINTER.  */
             12640    1         2 * BIT(3),
             12641                /*K*  * is reserved for future use and must be zero. */
             12642    1         2 BOUND UBIN(2) UNAL,
             12643                /*K*  BOUND - bits 6-7 - defines starting location.
             12644                              00 - starts on even word
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:15   
             12645                              01 - starts on odd word
             12646                              10 - starts on multiple of 8
             12647                              11 - starts on page boundary     */
             12648    1         2 SIZE UBIN HALF UNAL,
             12649                /*K*  SIZE is the size, in words, of the section.  */
             12650    1         2 NPOINTER SBIN HALF UNAL,
             12651                /*K*  NPOINTER is the word displacement into the name record
             12652                      (TYPE 1) locating the name of this section.  If the
             12653                      field is negative, the section has no name.  */
             12654    1         2 MBZ UBIN HALF UNAL,
             12655                /*K*  MBZ is reserved for future expansion and must be zero. */
             12656    1         2 SEG_NPOINTER REDEF MBZ SBIN HALF UNAL,
             12657                /*K*  SEG_NPOINTER locates a name in the Definition Names
             12658                      Section.  The name must be a valid segment name
             12659                      recognized by the linker.  */
             12660    1         2 G66 REDEF MBZ,
             12661                /*K*  G66 is not used on CP-6. */
             12662    1           3 * BIT(9),
             12663    1           3 NSAB BIT(9);
      294    12666        %VX$LST;

             12679    1   /*******************************************************************************
             12680    1   *                                                                              *
             12681    1   *                          VX$LST                                                 *
             12682    1   *                                                                              *
             12683    1   *******************************************************************************/

             12688    1   DCL 1 VX$LST                          ALIGNED BASED,
             12689    1         2 LINK$        PTR,               /* Link to next item                  */
             12690    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             12691    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             12692    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             12693    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             12694    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             12695    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             12696    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             12697    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:16   
             12698    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             12699    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             12700    1         2 P,
             12701    1           3 NAME_       ALIGNED,
             12702    1             4 BOUND      UBIN(20)  UNAL,
             12703    1             4 FLAGSV     UBIN(11)  UNAL,
             12704    1             4 *          BIT(5)    UNAL,
             12705    1             4 NAME$      PTR,
             12706    1           3 ACCT_       ALIGNED,
             12707    1             4 BOUND      UBIN(20)  UNAL,
             12708    1             4 FLAGSV     UBIN(11)  UNAL,
             12709    1             4 *          BIT(5)    UNAL,
             12710    1             4 ACCT$      PTR,
             12711    1           3 PASS_       ALIGNED,
             12712    1             4 BOUND      UBIN(20)  UNAL,
             12713    1             4 FLAGSV     UBIN(11)  UNAL,
             12714    1             4 *          BIT(5)    UNAL,
             12715    1             4 PASS$      PTR,
             12716    1           3 SN_         ALIGNED,
             12717    1             4 BOUND      UBIN(20)  UNAL,
             12718    1             4 FLAGSV     UBIN(11)  UNAL,
             12719    1             4 *          BIT(5)    UNAL,
             12720    1             4 SN$        PTR,
             12721    1           3 WSN_        ALIGNED,
             12722    1             4 BOUND      UBIN(20)  UNAL,
             12723    1             4 FLAGSV     UBIN(11)  UNAL,
             12724    1             4 *          BIT(5)    UNAL,
             12725    1             4 WSN$       PTR,
             12726    1           3 B           ALIGNED,
             12727    1             4 RES        BIT(1)    UNAL,
             12728    1             4 ASN        BIT(1)    UNAL,
             12729    1             4 ACCT       BIT(1)    UNAL,
             12730    1             4 *          BIT(33)   UNAL,
             12731    1           3 RES         CHAR(4)   ALIGNED,
             12732    1           3 ASN         UBIN(36)  ALIGNED;
      295    12735        %VX$LLIST;

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:17   
             12747    1   /*******************************************************************************
             12748    1   *                                                                              *
             12749    1   *                          VX$LLIST                                                *
             12750    1   *                                                                              *
             12751    1   *******************************************************************************/

             12756    1   DCL 1 VX$LLIST                BASED     ALIGNED,
             12757    1         2 LINK$                  PTR  ALIGNED,
             12758    1         2 ITEM$                  PTR  ALIGNED;
      296    12761        %VXD$TMPLT;

             12774    1   /*******************************************************************************
             12775    1   *                                                                              *
             12776    1   *                          VXD$TMPLT                                               *
             12777    1   *                                                                              *
             12778    1   *******************************************************************************/

             12782        /*
             12783                  VXD$TMPLT (B$RU_DEF) is used to reference fields common to
             12784                  ENTDEFs, SYMDEFs and SEGDEFs.
             12785        */
             12787    1   DCL 1 VXD$TMPLT BASED ALIGNED,
             12788    1         2 VALUE SBIN UNAL,
             12789                /*K*  VALUE is the value if this entry is a constant.  */
             12790    1         2 AD REDEF VALUE,
             12791                /*K*  AD is the address if this entry is not constant.  */
             12792    1           3 LFLAGS UNAL,
             12793                  /*K*  LFLAGS is the field reserved for loader to flag load
             12794                        time attributes of the definition and must be zero
             12795                        in the object unit. */
             12796    1             4 SOURCE UBIN(3) UNAL,
             12797                    /*K*  SOURCE - Source of this DEF */
             12798    1             4 DEFINED BIT(1) UNAL,
             12799                    /*K*  DEFINED - Set if this DEF defined */
             12800    1             4 MULTIPLE BIT(1) UNAL,
             12801                    /*K*  MULTIPLE - Set if this DEF is multiply defined. */
             12802    1             4 USED BIT(1) UNAL,
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:18   
             12803                    /*K*  USED - Set if this DEF is used. */
             12804    1           3 LOOKUP_SECTNUM BIT(1) UNAL,
             12805                  /*K*  LOOKUP_SECTNUM is set if the section number is greater
             12806                        than 2048 (RU).  */
             12807    1           3 SECTNUM UBIN(11) UNAL,
             12808                  /*K*  SECTNUM contains an entry number into the section
             12809                        table (TYPE 3).  */
             12810    1           3 ISADDR UBIN HALF UNAL,
             12811                  /*K*  ISADDR - Is Address (RU)  */
             12812    1           3 OFFSET REDEF ISADDR UBIN HALF UNAL,
             12813                  /*K*  OFFSET is the word offset from the origin of the section. */
             12814    1         2 NPOINTER SBIN HALF UNAL,
             12815                /*K*  NPOINTER is a word displacement into the name record
             12816                      (TYPE 1) locating the name (of this entry). */
             12817    1         2 CONSTNT BIT(1) UNAL,
             12818                /*K*  CONSTNT is a flag bit to determine the interpretation
             12819                      of word 0.
             12820                      If CONSTNT=0, word 0 is AD which contains LFLAGS,
             12821                                    SECTNUM, and ISADDR or OFFSET.
             12822                      If CONSTNT=1, word 0 is a constant value (VALUE)  */
             12823    1         2 LFLAGS UNAL,
             12824                /*K*  LFLAGS is the field reserved for loader to flag load
             12825                      time attributes and must be zero in the object unit. */
             12826    1           3 MULTIPLE BIT(1) UNAL,
             12827                  /*K*  MULTIPLE - Set if this DEF is multiply defined. */
             12828    1           3 USED BIT(1) UNAL,
             12829                  /*K*  USED - Set if this DEF is used. */
             12830    1           3 SOURCE UBIN(4) UNAL,
             12831                  /*K*  SOURCE - Source of this DEF */
             12832    1           3 IS_DCB BIT(1) UNAL,
             12833                  /*K* IS_DCB - Set if this is a DCB */
             12834    1           3 * BIT(10) UNAL,
             12835                  /*K*  * is reserved for future use and must be zero.  */
             12836    1         2 PROTECTION REDEF LFLAGS,
             12837                /*K*  PROTECTION is used for non-constant SYMDEF OR SEGDEF.  */
             12838    1           3 TYPE UBIN(5) UNAL,
             12839                  /*K*  TYPE is the Protection type.  */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:19   
             12840    1           3 * UBIN(12) UNAL;
             12841                  /*K*  * is reserved for future use and must be zero.  */
      297    12856        %T$C;

             12868    1   /*******************************************************************************
             12869    1   *                                                                              *
             12870    1   *                          T$C                                                 *
             12871    1   *                                                                              *
             12872    1   *******************************************************************************/

             12877    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             12878    1         2 COUNT        UBIN( 9) UNAL,
             12879    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             12880    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             12881    1         2 COUNT        UBIN( 9) UNAL,
             12882    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
      298    12885        %B;

             12893    1   /*******************************************************************************
             12894    1   *                                                                              *
             12895    1   *                          BIT                                                 *
             12896    1   *                                                                              *
             12897    1   *******************************************************************************/

      299    12901    1   DCL CONFLICT BIT(1) ALIGNED AUTO;
      300    12902        %E;

             12910    1   /*******************************************************************************
             12911    1   *                                                                              *
             12912    1   *                          ENTRY                                                 *
             12913    1   *                                                                              *
             12914    1   *******************************************************************************/

      301    12918        %ENTRIES;
      302    12933        %ENTRIES_IO;
      303    12941        %PTR;

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:20   
             12949    1   /*******************************************************************************
             12950    1   *                                                                              *
             12951    1   *                          PTR                                                 *
             12952    1   *                                                                              *
             12953    1   *******************************************************************************/

      304    12957        %POINTER;
      305    12962    1   DCL STAR_A$ PTR ALIGNED AUTO;
      306    12963    1   DCL FIRST_NAME$ PTR ALIGNED AUTO;
      307    12964    1   DCL FIRST_ITEM$ PTR ALIGNED AUTO;
      308    12965    1   DCL NAME$ PTR ALIGNED AUTO;
      309    12966    1   DCL ITEM$ PTR ALIGNED AUTO;
      310    12967    1   DCL PREV$ PTR ALIGNED AUTO;
      311    12968    1   DCL CURR$ PTR ALIGNED AUTO;
      312    12969        %U;

             12977    1   /*******************************************************************************
             12978    1   *                                                                              *
             12979    1   *                          UBIN                                                 *
             12980    1   *                                                                              *
             12981    1   *******************************************************************************/

      313    12985        %INDEX;
      314    12995    1   DCL NAME_SIZE UBIN(36) ALIGNED AUTO;
      315    12996    1   DCL ERR UBIN(36) ALIGNED AUTO;
      316    12997    1   DCL TNAME_SIZE UBIN(36) ALIGNED AUTO;
      317    12998    1   DCL TITEM_SIZE UBIN(36) ALIGNED AUTO;
      318    12999
      319    13000    1   DCL 1 STAR_A_KEY_BUF ALIGNED AUTO,
      320    13001    1         2 COUNT UBIN(9) UNAL,
      321    13002    1         2 CHARS CHAR(31) UNAL;
      322    13003        %PLIST;
      323    13004        %FPT_OPEN(
      324    13005         FPTN=F_O,
      325    13006         DCB=M$RF,
      326    13007         EXIST=OLDFILE,
      327    13008         FUN=IN,
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:21   
      328    13009         TEST=YES,
      329    13010         ORG=KEYED,
      330    13011         ACS=DIRECT);
      331    13120
      332    13121    1   DCL M$OF DCB;
      333    13122    1   DCL M$RF DCB;
      334    13123        %PLIST;
      335    13124        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:22   
      336    13125    2       IF VX_COMMAND ~= 0 THEN DO; /* Its a link */
      337    13126    2           IF VX_O.SIN.PROMOTE ~= 0 OR VX_O.SIN.PROMOTE_BLANK ~= 0 THEN
             13126                    VX_CHK_BLANK_COM_PROMOTE = @TRUE_B;
      338    13127    2           CONFLICT = @FALSE_B;
      339    13128         /*
      340    13129            Do conflict checking
      341    13130         */
      342    13131        %PLIST;
      343    13132    3           IF VX_OD.SIN.SYSTEM THEN DO;
      344    13133                    %CON(
      345    13134                    FIRST="SIN.SYSTEM",
      346    13135                    SECOND="SIN.NOEDITING");
      347    13142                    %CON(
      348    13143                    FIRST="SIN.SYSTEM",
      349    13144                    SECOND="SIN.ASLIB");
      350    13151                    %CON(
      351    13152                    FIRST="SIN.SYSTEM",
      352    13153                    SECOND="NUM.DCBSLOTS");
      353    13160                    %CON(
      354    13161                    FIRST="SIN.SYSTEM",
      355    13162                    SECOND="FID.ALTSHARELIB$");
      356    13169                    %CON(
      357    13170                    FIRST="SIN.SYSTEM",
      358    13171                    SECOND="DCB_MATCH.SI$");
      359    13178                    %CON(
      360    13179                    FIRST="SIN.SYSTEM",
      361    13180                    SECOND="DCB_MATCH.UI$");
      362    13187                    %CON(
      363    13188                    FIRST="SIN.SYSTEM",
      364    13189                    SECOND="DCB_MATCH.OU$");
      365    13196                    %CON(
      366    13197                    FIRST="SIN.SYSTEM",
      367    13198                    SECOND="DCB_MATCH.LO$");
      368    13205    3               END; /* If VX_OD.SIN.SYSTEM then do; */
      369    13206    3           IF VX_OD.SIN.NOEDITING THEN DO;
      370    13207                    %CON(
      371    13208                    FIRST="SIN.NOEDITING",
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:23   
      372    13209                    SECOND="SIN.ASLIB");
      373    13216                    %CON(
      374    13217                    FIRST="SIN.NOEDITING",
      375    13218                    SECOND="SIN.SLIB");
      376    13225                    %CON(
      377    13226                    FIRST="SIN.NOEDITING",
      378    13227                    SECOND="NUM.BREF");
      379    13234                    %CON(
      380    13235                    FIRST="SIN.NOEDITING",
      381    13236                    SECOND="NUM.DCBSLOTS");
      382    13243                    %CON(
      383    13244                    FIRST="SIN.NOEDITING",
      384    13245                    SECOND="NUM.TCB");
      385    13252                    %CON(
      386    13253                    FIRST="SIN.NOEDITING",
      387    13254                    SECOND="DCB_MATCH.SI$");
      388    13261                    %CON(
      389    13262                    FIRST="SIN.NOEDITING",
      390    13263                    SECOND="DCB_MATCH.UI$");
      391    13270                    %CON(
      392    13271                    FIRST="SIN.NOEDITING",
      393    13272                    SECOND="DCB_MATCH.OU$");
      394    13279                    %CON(
      395    13280                    FIRST="SIN.NOEDITING",
      396    13281                    SECOND="DCB_MATCH.LO$");
      397    13288    3               END; /* If VX_OD.SIN.NOEDITING then do; */
      398    13289    3           IF VX_OD.SIN.ASLIB THEN DO;
      399    13290    4               IF VX_ROOT$ -> VX$NODE.SON$ ~= ADDR(NIL) THEN DO;
      400    13291        /*E* ERROR: VXO-E$ASLIB_OLAY_VX-0
      401    13292             MESSAGE: An alternate shared library cannot be overlayed.
      402    13293             DESCRIPTION: Self-explantory.
      403    13294        */
      404    13295                        %SCREAM( ERR#=E$ASLIB_OLAY_VX, LEVEL=@E$F_VX, MID='O' );
      405    13298    4                   END;
      406    13299                    %CON(
      407    13300                    FIRST="SIN.ASLIB",
      408    13301                    SECOND="SIN.SLIB");
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:24   
      409    13308                    %CON(
      410    13309                    FIRST="SIN.ASLIB",
      411    13310                    SECOND="FID.ALTSHARELIB$");
      412    13317    3               END; /* If VX_OD.SIN.ASLIB then do; */
      413    13318
      414    13319    3           IF VX_OD.VECTOR_ ~= '0'B AND NOT VX_OD.SIN.SLIB THEN DO;
      415    13320        /*E* ERROR: VXO-E$VECTOR_BUT_NO_SLIB-C
      416    13321             MESSAGE: The VECTOR option was specified, but the SLIB option was
      417    13322                      not specified. SLIB option assumed.
      418    13323        */
      419    13324                    %SCREAM( ERR#=E$VECTOR_BUT_NO_SLIB, LEVEL=@E$W_VX, MID="'O'" );
      420    13327    3               VX_OD.SIN.SLIB = @TRUE_B;
      421    13328    3               END;
      422    13329    3           IF VX_OD.SIN.SLIB THEN DO;
      423    13330    4               IF VX_ROOT$ -> VX$NODE.SON$ ~= ADDR(NIL) THEN DO;
      424    13331        /*E* ERROR: VXO-E$SLIB_OLAY_VX-0
      425    13332             MESSAGE: A shared library cannot be overlayed.
      426    13333             DESCRIPTION: Self-explantory.
      427    13334        */
      428    13335                        %SCREAM( ERR#=E$SLIB_OLAY_VX, LEVEL=@E$F_VX, MID='O' );
      429    13338    4                   END;
      430    13339                    %CON(
      431    13340                    FIRST="SIN.SLIB",
      432    13341                    SECOND="NUM.BREF");
      433    13348                    %CON(
      434    13349                    FIRST="SIN.SLIB",
      435    13350                    SECOND="NUM.DCBSLOTS");
      436    13357                    %CON(
      437    13358                    FIRST="SIN.SLIB",
      438    13359                    SECOND="NUM.TCB");
      439    13366                    %CON(
      440    13367                    FIRST="SIN.SLIB",
      441    13368                    SECOND="FID.ALTSHARELIB$");
      442    13375                    %CON(
      443    13376                    FIRST="SIN.SLIB",
      444    13377                    SECOND="FID.SHARELIB$");
      445    13384                    %CON(
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:25   
      446    13385                    FIRST="SIN.SLIB",
      447    13386                    SECOND="DCB_MATCH.SI$");
      448    13393                    %CON(
      449    13394                    FIRST="SIN.SLIB",
      450    13395                    SECOND="DCB_MATCH.UI$");
      451    13402                    %CON(
      452    13403                    FIRST="SIN.SLIB",
      453    13404                    SECOND="DCB_MATCH.OU$");
      454    13411                    %CON(
      455    13412                    FIRST="SIN.SLIB",
      456    13413                    SECOND="DCB_MATCH.LO$");
      457    13420    3               END; /* If VX_OD.SIN.SLIB then do; */
      458    13421    2           IF CONFLICT THEN GOTO QUIT;
      459    13422        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:26   
      460    13423    3           IF VX_OD.NUM.BREF AND VX_OD.SIN.NOBREF THEN DO;
      461    13424                    %CON (FIRST="NUM.BREF", SECOND="SIN.NOBREF");
      462    13431    3               GOTO QUIT;
      463    13432    3               END;
      464    13433
      465    13434    3           IF VX_OD.SIN.WARN AND VX_OD.SIN.NWARN THEN DO;
      466    13435                    %CON (FIRST="SIN.WARN", SECOND="SIN.NWARN");
      467    13442    3               GOTO QUIT;
      468    13443    3               END;
      469    13444
      470    13445    3           DO I = 0 TO SIZEW( VX_OL.MIN_A ) - 1;
      471    13446    4               IF VX_OD.NUM_A(I) THEN DO;
      472    13447    4                   J = VX_O.NUM_A(I);
      473    13448    5                   IF J < VX_OL.MIN_A(I) THEN DO;
      474    13449        /*E*  ERROR: VXO-E$OPT_MIN_VX-0
      475    13450              MESSAGE: Invalid value for option %U3; Value = %U1; Set to minimum of %U2.
      476    13451              DESCRIPTION: Self-explanatory.
      477    13452        */
      478    13453    6                       DO CASE( I );
      479    13454    6                       CASE( 2, 3, 5 );
      480    13455    6                           K = 8;
      481    13456    6                       CASE( ELSE );
      482    13457    6                           K = 10;
      483    13458    6                           END;
      484    13459                            %NUMBER(
      485    13460                            NUM1=J, SIZE1=12, BASE1=K,
      486    13461                            NUM2="VX_OL.MIN_A(I)", SIZE2=12, BASE2=K);
      487    13478    5                       P$ = VX_ON.NUM_A(I);
      488    13479    5                       VX_EFIELD3.COUNT = P$ -> P$LIT.COUNT;
      489    13480    5                       VX_EFIELD3.CHARS = P$ -> P$LIT.TEXT;
      490    13481                            %SCREAM(
      491    13482                            ERR#=E$OPT_MIN_VX,
      492    13483                            LEVEL=@E$W_VX,
      493    13484                            MID="'O'");
      494    13487    5                       VX_O.NUM_A(I) = VX_OL.MIN_A(I);
      495    13488    5                       END;
      496    13489    4                   ELSE
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:27   
      497    13490    5                       IF J > VX_OL.MAX_A(I) THEN DO;
      498    13491        /*E*  ERROR: VXO-E$OPT_MAX_VX-0
      499    13492              MESSAGE: Invalid value for option %U3; Value = %U1; Set to maximum of %U2.
      500    13493              DESCRIPTION: Self-explanatory.
      501    13494        */
      502    13495    6                           DO CASE( I );
      503    13496    6                           CASE( 2, 3, 5 );
      504    13497    6                               K = 8;
      505    13498    6                           CASE( ELSE );
      506    13499    6                               K = 10;
      507    13500    6                               END;
      508    13501                                %NUMBER( NUM1=J, BASE1=K, NUM2="VX_OL.MAX_A(I)", BASE2=K);
      509    13518    5                           P$ = VX_ON.NUM_A(I);
      510    13519    5                           VX_EFIELD3.COUNT = P$ -> P$LIT.COUNT;
      511    13520    5                           VX_EFIELD3.CHARS = P$ -> P$LIT.TEXT;
      512    13521                                %SCREAM(
      513    13522                                ERR#=E$OPT_MAX_VX,
      514    13523                                LEVEL=@E$W_VX,
      515    13524                                MID="'O'");
      516    13527    5                           VX_O.NUM_A(I) = VX_OL.MAX_A(I);
      517    13528    5                           END; /* If j > VX_OL.MAX_A(I) then do; */
      518    13529    4                   END; /* If VX_OD.NUM_A(I) then do; */
      519    13530    3               END; /* Do i = 0 to sizew( VX_OL.MIN_A ) - 1; */
      520    13531        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:28   
      521    13532    3           IF VX_OD.SIN.SYSTEM THEN DO;
      522    13533    3               VX_SHARED_LIB_ASS = @C_SYSTEM_KEY_WORD;
      523    13534    3               VX_SPC.B$.SKIP.DELTA = @YES;
      524    13535    3               IF VX_OD.NUM.BREF
      525    13536    3               THEN
      526    13537    4               DO;
      527    13538    5                   DO I= 0 TO SIZEW(VX_SPC.B$.SKIP_A) - 1;
      528    13539    5                       VX_SPC.B$.SKIP_A(I) = @YES;
      529    13540    5                       END;
      530    13541    4                   END;
      531    13542                    %NO_DATA_INSERT;
      532    13545                    %NO_ROS;
      533    13548                    %NO_DCBSLOTS;
      534    13551    3               END;
      535    13552    3           IF VX_OD.SIN.SLIB THEN DO;
      536    13553    4               IF VX_OD.NUM.DBIAS THEN DO;
      537    13554    5                   IF VX_O.NUM.DBIAS ~= 0 THEN DO;
      538    13555        /*E*  ERROR: VXO-E$DBIAS_SLIB_VX-0
      539    13556              MESSAGE: Invalid DBIAS for shared library generation; Value = %U1(OCTAL).
      540    13557              DESCRIPTION: Self-explanatory.
      541    13558        */
      542    13559                            %NUMBER(
      543    13560                            NUM1="VX_O.NUM.DBIAS",SIZE1=12,BASE1=8);
      544    13577                            %SCREAM(
      545    13578                            ERR#=E$DBIAS_SLIB_VX,
      546    13579                            LEVEL=@E$F_VX,
      547    13580                            MID="'O'");
      548    13583    5                       GOTO QUIT;
      549    13584    5                       END;
      550    13585    4                   END; /* If VX_OD.NUM.DBIAS then do; */
      551    13586    4               IF VX_OD.NUM.PBIAS THEN DO;
      552    13587    5                   IF VX_O.NUM.PBIAS ~= 229376 THEN DO;
      553    13588        /*E*  ERROR: VXO-E$PBIAS_SLIB_VX-0
      554    13589              MESSAGE: Invalid PBIAS for shared library generation; Value = %U1(OCTAL).
      555    13590              DESCRIPTION: Self-explanatory.
      556    13591        */
      557    13592                            %NUMBER(
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:29   
      558    13593                            NUM1="VX_O.NUM.PBIAS",SIZE1=12,BASE1=8);
      559    13610                            %SCREAM(
      560    13611                            ERR#=E$PBIAS_SLIB_VX,
      561    13612                            LEVEL=@E$F_VX,
      562    13613                            MID="'O'");
      563    13616    5                       GOTO QUIT;
      564    13617    5                       END;
      565    13618    4                   END; /* If VX_OD.NUM.PBIAS then do; */
      566    13619    3               ELSE VX_O.NUM.PBIAS = 229376;
      567    13620    3               VX_SHARED_LIB_ASS = @C_SLIB_KEY_WORD;
      568    13621    3               GOTO NO_R;
      569    13622    3               END;
      570    13623    3           ELSE IF VX_OD.SIN.ASLIB THEN DO;
      571    13624    3                   VX_SPC.B$.SKIP.DELTA = @YES;
      572    13625                        %NO_DATA_INSERT;
      573    13628    3                   GOTO REST_FOR_ASLIB;
      574    13629    3                   END;
      575    13630    3               ELSE IF VX_OD.SIN.NOEDITING THEN DO;
      576    13631    3                       VX_SHARED_LIB_ASS = @C_NOEDITING_KEY_WORD;
      577    13632    4                       DO I = 1 TO SIZEW( VX_SPC.B$.SKIP_A ) - 1;
      578    13633    4                           VX_SPC.B$.SKIP_A(I) = @YES;
      579    13634    4                           END;
      580    13635    3   NO_D_R:             ;
      581    13636                            %NO_DATA_INSERT;
      582    13639    3   NO_R:               ;
      583    13640                            %NO_TCB;
      584    13643    3   REST_FOR_ASLIB:
      585    13644                            %NO_ROS;
      586    13647                            %NO_DCBSLOTS;
      587    13650    3                       END;
      588    13651    2           IF VX_O.MAP.NAME ~= 0
      589    13652    2              OR
      590    13653    2              VX_O.MAP.VALUE ~= 0 THEN VX_O.OPT.MAP = 1;
      591    13654    2           IF VX_GOT_ON_OVER = @YES
      592    13655    2              AND
      593    13656    2              VX_ON_OVER_RUF = @C_ON_KEY_WORD
      594    13657    2              AND
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:30   
      595    13658    3              VX_RUF$ ~= ADDR(NIL) THEN DO;
      596    13659
      597    13660    3               F_O.NAME_ = VX_RUF$ -> VX$LST.P.NAME_;
      598    13661    3               F_O.ACCT_ = VX_RUF$ -> VX$LST.P.ACCT_;
      599    13662    3               F_O.PASS_ = VX_RUF$ -> VX$LST.P.PASS_;
      600    13663    3               F_O.SN_ = VX_RUF$ -> VX$LST.P.SN_;
      601    13664    3               F_O.WSN_ = VX_RUF$ -> VX$LST.P.WSN_;
      602    13665    3               CALL M$OPEN( F_O ) ALTRET( CONTINUE );
      603    13666    3               IF VX_ONLINE > 0 THEN L = @E$S_VX;
      604    13667    3               ELSE L = @E$F_VX;
      605    13668        /*E*  ERROR: VXO-E$ON_FILE_VX-0
      606    13669              MESSAGE: ON FILE %U1 exists.
      607    13670              DESCRIPTION: Self-explanatory.
      608    13671        */
      609    13672    3               VX_EFIELD1.COUNT = VX_RUF$ -> VX$LST.P.NAME_.NAME$ -> T$C.COUNT;
      610    13673    3               VX_EFIELD1.CHARS = VX_RUF$ -> VX$LST.P.NAME_.NAME$ -> T$C.CHARS;
      611    13674                    %SCREAM(
      612    13675                    ERR#=E$ON_FILE_VX,
      613    13676                    LEVEL=L,
      614    13677                    MID="'O'");
      615    13680        /*E*  ERROR: VXO-E$ON_FILE_CONT_VX-0
      616    13681              MESSAGE: Do you wish to overwrite the file?
      617    13682              DESCRIPTION: Self-explanatory.
      618    13683        */
      619    13684                    %SCREAM(
      620    13685                    ERR#=E$ON_FILE_CONT_VX,
      621    13686                    LEVEL=L,
      622    13687                    MID="'O'");
      623    13690    3               CALL VXY$YESNO( I );
      624    13691    4               IF I = @NO THEN DO;
      625    13692    4   QUIT:
      626    13693                        %ERROR_IT;
      627    13696    4                   END; /* If i = @NO then do; */
      628    13697    3               END; /* If VX_GOT_ON_OVER = @YES and VX_ON_OVER = @C_ON_KEY_WORD and VX_
             13697        RUF$ ~= addr(nil) */
      629    13698        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:31   
      630    13699    2   CONTINUE:
      631    13700         /*
      632    13701            Allocate a dummy for the following lists for boundary condition
      633    13702            on binary searches */
      634    13703    3           DO I = 1 TO SIZEW(VX_DEF_REC_A) -1;
      635    13704    3               J = VX_DEF_REC_A(I);
      636    13705                    %ALLOCATE(
      637    13706                    PTR$=VX_CURR$,
      638    13707                    TYPE="VX_PASS1_ALL_TYPE(J)",
      639    13708                    SIZE="SIZEW(VXD$TMPLT)");
      640    13715    3               END; /* Do i = 1 to SIZEW(VX_DEF_REC_A) - 1; */
      641    13716
      642    13717         /*
      643    13718            And also for sections - boundary condition for sorts
      644    13719         */
      645    13720                %ALLOCATE(
      646    13721                PTR$=VX_CURR$,
      647    13722                TYPE=@SC_DS_1,
      648    13723                SIZE="SIZEW(VX$SC)");
      649    13730
      650    13731        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:32   
      651    13732         /*
      652    13733            Chain alternate shared library option
      653    13734         */
      654    13735    3           IF VX_O.FID.ALTSHARELIB$ ~= ADDR(NIL) THEN DO;
      655    13736    3               VX_ROOT$ -> VX$NODE.TAIL$ -> VX$LST.LINK$ = VX_O.FID.ALTSHARELIB$;
      656    13737    3               VX_ROOT$ -> VX$NODE.TAIL$ = VX_O.FID.ALTSHARELIB$;
      657    13738    3               END; /* If VX_O.FID.ALTSHARELIB$ ~= addr(nil) then do; */
      658    13739
      659    13740         /*
      660    13741            Chain shared library options
      661    13742         */
      662    13743    3           IF VX_O.FID.SHARELIB$ ~= ADDR(NIL) THEN DO;
      663    13744    3               VX_ROOT$ -> VX$NODE.TAIL$ -> VX$LST.LINK$ = VX_O.FID.SHARELIB$;
      664    13745    3               VX_ROOT$ -> VX$NODE.TAIL$ = VX_O.FID.SHARELIB$;
      665    13746    3               VX_SLIB_INIT$ = VX_O.FID.SHARELIB$;
      666    13747                    %ALLOCATE(
      667    13748                    PTR$=VX_SLIB_HEAD$,
      668    13749                    TYPE=@GDP,
      669    13750                    SIZE="SIZEW(VX$LLIST)");
      670    13757    3               VX_SLIB_HEAD$ -> VX$LLIST.LINK$ = ADDR(NIL);
      671    13758    3               VX_SLIB_HEAD$ -> VX$LLIST.ITEM$ = VX_SLIB_INIT$;
      672    13759    3               END; /* If VX_O.FID.SHARELIB$ ~= addr(nil) then do; */
      673    13760         /*
      674    13761            Do pre-processing for UNSAT option
      675    13762         */
      676    13763    3           IF VX_OD.FIDN$.UNSAT$ THEN DO;
      677    13764    3               PREV$ = ADDR( VX_O.FIDN$.UNSAT$ );
      678    13765    3               CURR$ = VX_O.FIDN$.UNSAT$;
      679    13766    4               DO WHILE( CURR$ ~= ADDR(NIL) );
      680    13767    4                   CURR$ -> VX$LST.PRIOR$ = PREV$;
      681    13768    4                   CURR$ -> VX$LST.LIB = '0'B;
      682    13769    4                   IF NOT CURR$ -> VX$LST.P.B.ACCT THEN
      683    13770    4                       CURR$ -> VX$LST.LIBSRCH$ = VX_O.ACCTN$.LIBSRCH$;
      684    13771    4                   PREV$ = CURR$;
      685    13772    4                   CURR$ = CURR$ -> VX$LST.LINK$;
      686    13773    4                   END; /* Do while( CURR$ ~= addr(nil) ); */
      687    13774    3               END; /* If VX_OD.FIDN$.UNSAT$ then do; */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:33   
      688    13775
      689    13776        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:34   
      690    13777    2           END; /* If VX_COMMAND ~= 0 then do; */
      691    13778    2       ELSE DO; /* Implications for map */
      692    13779    2           IF VX_O.MAP.NAME = 0
      693    13780    2              AND
      694    13781    2              VX_O.MAP.VALUE = 0 THEN VX_O.MAP.NAME = 1;
      695    13782    2           VX_O.OPT.MAP = 1;
      696    13783    2           END;
      697    13784        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:35   
      698    13785    1   VXO$CONFLICT:
      699    13786    1       PROC( FIRST$, SECOND$ );
      700    13787    2   DCL FIRST$ PTR;
      701    13788    2   DCL SECOND$ PTR;
      702    13789
      703    13790    2       CONFLICT = @TRUE_B;
      704    13791        /*E*  ERROR: VXO-E$OPT_CONFLICT_VX-0
      705    13792              MESSAGE: Option %U1 is in conflict with option %U2.
      706    13793              DESCRIPTION: Self-explanatory.
      707    13794        */
      708    13795    2       VX_EFIELD1.COUNT = FIRST$ -> P$LIT.COUNT;
      709    13796    2       VX_EFIELD1.CHARS = FIRST$ -> P$LIT.TEXT;
      710    13797    2       VX_EFIELD2.COUNT = SECOND$ -> P$LIT.COUNT;
      711    13798    2       VX_EFIELD2.CHARS = SECOND$ -> P$LIT.TEXT;
      712    13799            %SCREAM(
      713    13800            ERR#=E$OPT_CONFLICT_VX,
      714    13801            LEVEL=@E$F_VX,
      715    13802            MID="'O'");
      716    13805    2   END VXO$CONFLICT;
      717    13806
      718    13807    1   END VXO$IMPL;
      719    13808        %EOD;

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:36   
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   VX_PSUBS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXO$IMPL.

   Procedure VXO$IMPL requires 800 words for executable code.
   Procedure VXO$IMPL requires 40 words of local(AUTO) storage.

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:37   

 Object Unit name= VXO$IMPL                                   File name= VXO$IMPL.:E05TOU
 UTS= JUL 30 '97 08:25:18.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2   Data  even  none    58     72  VXO$IMPL
    3   DCB   even  none     0      0  M$OF
    4   DCB   even  none     0      0  M$RF
    5   Proc  even  none   800   1440  VXO$IMPL
    6  RoData even  none    87    127  VXO$IMPL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        0  VXO$IMPL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 VXE$ERROR
         yes           Std       1 VXY$YESNO
         yes           Std       3 VXA$GET
         yes           Std       5 VXD$B2C
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:38   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_OU_HEAD                            VX_COMMAND
     VX_ON_OVER_RUF                        VX_GOT_ON_OVER                        VX_ROOT$
     VX_RUF$                               VX_CURR$                              VX_ERRORS
     VX_M_FREE                             VX_M_ALL                              VX_M_BASE_PTR
     VX_ONLINE                             VX_O                                  VX_OL
     VX_OD                                 VX_ON                                 VX_EFIELD1
     VX_EFIELD2                            VX_EFIELD3                            VX_SLIB_HEAD$
     VX_SLIB_INIT$                         VX_PASS1_ALL_TYPE                     VX_DEF_REC_A
     VX_SPC                                VX_SPC_DATA_INSERT                    VX_ROS_ALLOWED
     VX_SHARED_LIB_ASS                     VX_CHK_BLANK_COM_PROMOTE              M$OF
     M$RF                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:39   


        1        1        /*M* VXO$IMPL - checks for conflicts between link options.    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=4,STI=0,IND=4,CTI=3,DCI=4,ECI=4,CSI=0,THI=0,DTI=0,ENI=4,
        8        8             CLM=0,SQB,NTB,MOC,CCI=3,NLB,MCL=0,EDMC*/
        9        9        /*D*  NAME:       VXO$IMPL
       10       10              DESCRIPTION:
       11       11                        S    P    N    N    N    N    N    A    O    R    S
       12       12                        H    R    O    O    O    O    O    L    S    U    Y
       13       13                        A    O    B    D    S    S    S    I    P    N    S
       14       14                        R    M    R    E    E    H    Y    B              T
       15       15                        E    O    E    B    T    A    S                   E
       16       16                        D    T    F    U    S    R    L                   M
       17       17                             E         G         E    I
       18       18                                                 L    B
       19       19                                                 I
       20       20                                                 B
       21       21
       22       22        SHARED          .    .    .    .    .    .    .    .    .    .    .
       23       23
       24       24        PROMOTE         1    .    .    .    .    .    .    .    .    .    .
       25       25
       26       26        NOBREF          1    2    .    .    .    .    .    .    .    .    .
       27       27
       28       28        NODEBUG         1    2    3    .    .    .    .    .    .    .    .
       29       29
       30       30        NOSETS          1    2    3    4    .    .    .    .    .    .    .
       31       31
       32       32        NOSHARELIB      1    2    3    4    5    .    .    .    .    .    .
       33       33
       34       34        NOSYSLIB        1    2    3    4    5    6    .    .    .    .    .
       35       35
       36       36        ALIB            1    2    3    4    5    6    7    .    .    .    .
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:40   
       37       37
       38       38        OSP             1    2    3    4    5    6    7    8    .    .    .
       39       39
       40       40        RUN             1    2    3    4    5    6    7    8    9    .    .
       41       41
       42       42        SYSTEM          1    2    3    4    5    6    7    8    9    *    .
       43       43
       44       44        NOEDITING       1    2    3    4    5    6    7    8    9    *    Y
       45       45
       46       46        ASLIB           1    2    3    4    5    6    7    8    9    *    Y
       47       47
       48       48        SLIB            1    2    3    4    5    6    7    8    9    *    Y
       49       49
       50       50        BREF            1    2    3    4    5    6    7    8    9    *    Y
       51       51
       52       52        DCBSLOTS        1    2    3    4    5    6    7    8    9    *    Y->0
       53       53
       54       54        DBIAS           1    2    3    4    5    6    7    8    9    *    +
       55       55
       56       56        PBIAS           1    2    3    4    5    6    7    8    9    *    +
       57       57
       58       58        SEVERITY        1    2    3    4    5    6    7    8    9    *    +
       59       59
       60       60        START           1    2    3    4    5    6    7    8    9    *    +
       61       61
       62       62        TCB             1    2    3    4    5    6    7    8    9    *    Y->0
       63       63
       64       64        NAME            1    2    3    4    5    6    7    8    9    *    +
       65       65
       66       66        VALUE           1    2    3    4    5    6    7    8    9    *    +
       67       67
       68       68        UDEF            1    2    3    4    5    6    7    8    9    *    +
       69       69
       70       70        LDEF            1    2    3    4    5    6    7    8    9    *    +
       71       71
       72       72        ALTSHARELIB     1    2    3    4    5    6    7    8    9    *    Y
       73       73
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:41   
       74       74        SHARELIB        1    2    3    4    5    6    7    8    9    *    Y
       75       75
       76       76        UNSAT           1    2    3    4    5    6    7    8    9    *    +
       77       77
       78       78        INCLUDE         1    2    3    4    5    6    7    8    9    *    +
       79       79
       80       80        SIDCB           1    2    3    4    5    6    7    8    9    *    Y
       81       81
       82       82        UIDCB           1    2    3    4    5    6    7    8    9    *    Y
       83       83
       84       84        OUDCB           1    2    3    4    5    6    7    8    9    *    Y
       85       85
       86       86        LODCB           1    2    3    4    5    6    7    8    9    *    Y
       87       87
       88       88                        N    A    S    B    D    D    P    S    S    T    N
       89       89                        O    S    L    R    C    B    B    E    T    C    A
       90       90                        E    L    I    E    B    I    I    V    A    B    M
       91       91                        D    I    B    F    S    A    A    E    R         E
       92       92                        I    B              L    S    S    R    T
       93       93                        T                   O              I
       94       94                        I                   T              T
       95       95                        N                   S              Y
       96       96                        G
       97       97
       98       98        ASLIB           Y    .    .    .    .    .    .    .    .    .    .
       99       99
      100      100        SLIB            Y    Y    .    .    .    .    .    .    .    .    .
      101      101
      102      102        BREF            Y    2    Y    .    .    .    .    .    .    .    .
      103      103
      104      104        DCBSLOTS        Y->0 2    Y->0 4    .    .    .    .    .    .    .
      105      105
      106      106        DBIAS           1    2    3    4    5    .    .    .    .    .    .
      107      107
      108      108        PBIAS           1    2    3    4    5    6    .    .    .    .    .
      109      109
      110      110        SEVERITY        1    2    3    4    5    6    7    .    .    .    .
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:42   
      111      111
      112      112        START           1    2    3    4    5    6    7    8    .    .    .
      113      113
      114      114        TCB             Y->0 Y->0 Y->0 4    5    6    7    8    9    .    .
      115      115
      116      116        NAME            1    2    3    4    5    6    7    8    9    *    .
      117      117
      118      118        VALUE           1    2    3    4    5    6    7    8    9    *    +
      119      119
      120      120        UDEF            1    2    3    4    5    6    7    8    9    *    +
      121      121
      122      122        LDEF            1    2    3    4    5    6    7    8    9    *    +
      123      123
      124      124        ALTSHARELIB     1    Y    Y    4    5    6    7    8    9    *    +
      125      125
      126      126        SHARELIB        1    Y    Y    4    5    6    7    8    9    *    +
      127      127
      128      128        UNSAT           1    2    3    4    5    6    7    8    9    *    +
      129      129
      130      130        INCLUDE         1    2    3    4    5    6    7    8    9    *    +
      131      131
      132      132        SIDCB           Y    2    Y    4    5    6    7    8    9    *    +
      133      133
      134      134        UIDCB           Y    2    Y    4    5    6    7    8    9    *    +
      135      135
      136      136        OUDCB           Y    2    Y    4    5    6    7    8    9    *    +
      137      137
      138      138        LODCB           Y    2    Y    4    5    6    7    8    9    *    +
      139      139
      140      140                        V    U    L    A    S    U    I    S    U    O    L
      141      141                        A    D    D    L    H    N    N    I    I    U    O
      142      142                        L    E    E    T    A    S    C    D    D    D    D
      143      143                        U    F    F    S    R    A    L    C    C    C    C
      144      144                        E              H    E    T    U    B    B    B    B
      145      145                                       A    L         D
      146      146                                       R    I         E
      147      147                                       E    B
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:43   
      148      148                                       L
      149      149                                       I
      150      150                                       B
      151      151
      152      152        UDEF            1    .    .    .    .    .    .    .    .    .    .
      153      153
      154      154        LDEF            1    2    .    .    .    .    .    .    .    .    .
      155      155
      156      156        ALTSHARELIB     1    2    3    .    .    .    .    .    .    .    .
      157      157
      158      158        SHARELIB        1    2    3    4    .    .    .    .    .    .    .
      159      159
      160      160        UNSAT           1    2    3    4    5    .    .    .    .    .    .
      161      161
      162      162        INCLUDE         1    2    3    4    5    6    .    .    .    .    .
      163      163
      164      164        SIDCB           1    2    3    4    5    6    7    .    .    .    .
      165      165
      166      166        UIDCB           1    2    3    4    5    6    7    8    .    .    .
      167      167
      168      168        OUDCB           1    2    3    4    5    6    7    8    9    .    .
      169      169
      170      170        LODCB           1    2    3    4    5    6    7    8    9    *    .
      171      171
      172      172
      173      173                        F    D    P         B    D    B    B         R      S    A
      174      174                        A    E    I         $    E    $    $         O      H    L
      175      175                        U    L    A         J    L    T    R         S      A    T
      176      176                        L    T              I    T    C    O                R
      177      177                        T    A              T    A    B    S         D      E    S
      178      178                                            $         $    $         C      D    H
      179      179                        L    A                   P                   B           A
      180      180                        O    R                   T                          L    R
      181      181                        C    E                   R                   T      I    E
      182      182                                                                     R      B    D
      183      183                                                                     E
      184      184                                                                     E      A    L
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:44   
      185      185                                                                            S    I
      186      186                                                                            S    B
      187      187
      188      188                                                                                 A
      189      189                                                                                 S
      190      190                                                                                 S
      191      191
      192      192        SHARED LIB ASS  N    N    N         Y    Y    Y    Y         -      .    -
      193      193
      194      194        ALT SHARED LIB  -    -    -         -    -    -    -         -      -    .
      195      195
      196      196        SHARED          -    -    -         -    -    -    -         -      -    -
      197      197
      198      198        PROMOTE         -    -    -         -    -    -    -         -      -    -
      199      199
      200      200        NOBREF          -    -    -         -    -    -    -         -      -    -
      201      201
      202      202        NODEBUG         -    -    -         -    -    -    -         -      -    -
      203      203
      204      204        NOSETS          -    -    -         -    -    -    -         -      -    -
      205      205
      206      206        NOSHARELIB      -    -    -         -    -    -    -         -      -    -
      207      207
      208      208        NOSYSLIB        -    -    -         -    -    -    -         -      -    -
      209      209
      210      210        ALIB            -    -    -         -    -    -    -         -      -    -
      211      211
      212      212        OSP             -    -    -         -    -    -    -         -      -    -
      213      213
      214      214        RUN             -    -    -         -    -    -    -         -      -    -
      215      215
      216      216        SYSTEM          N    N    N         A    N    A    A         N      N    N
      217      217
      218      218        NOEDITING       N    N    N         N    N    N    N         N      N    N
      219      219
      220      220        ASLIB           N    N    N         A    N    A    A         N      -    -
      221      221
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:45   
      222      222        SLIB            Y    Y    Y         A    Y    A    A         N      N    N
      223      223
      224      224        BREF            -    -    -         -    -    -    -         -      -    -
      225      225
      226      226        DCBSLOTS        -    -    -         -    -    -    -         -      -    -
      227      227
      228      228        DBIAS           -    -    -         -    -    -    -         -      -    -
      229      229
      230      230        PBIAS           -    -    -         -    -    -    -         -      -    -
      231      231
      232      232        SEVERITY        -    -    -         -    -    -    -         -      -    -
      233      233
      234      234        START           -    -    -         -    -    -    -         -      -    -
      235      235
      236      236        TCB             -    -    -         -    -    -    -         -      -    -
      237      237
      238      238        NAME            -    -    -         -    -    -    -         -      -    -
      239      239
      240      240        VALUE           -    -    -         -    -    -    -         -      -    -
      241      241
      242      242        UDEF            -    -    -         -    -    -    -         -      -    -
      243      243
      244      244        LDEF            -    -    -         -    -    -    -         -      -    -
      245      245
      246      246        ALTSHARELIB     -    -    -         -    -    -    -         -      -    -
      247      247
      248      248        SHARELIB        -    -    -         -    -    -    -         -      -    -
      249      249
      250      250        UNSAT           -    -    -         -    -    -    -         -      -    -
      251      251
      252      252        INCLUDE         -    -    -         -    -    -    -         -      -    -
      253      253
      254      254        SIDCB           -    -    -         -    -    -    -         -      -    -
      255      255
      256      256        UIDCB           -    -    -         -    -    -    -         -      -    -
      257      257
      258      258        OUDCB           -    -    -         -    -    -    -         -      -    -
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:46   
      259      259
      260      260        LODCB           -    -    -         -    -    -    -         -      -    -
      261      261
      262      262        */
      263      263         %MACRO CON(
      264      264         FIRST=FIRST,
      265      265         SECOND=SECOND);
      266      266            IF VX_OD.SECOND THEN DO;
      267      267                CALL VXO$CONFLICT(
      268      268                   VX_ON.FIRST,
      269      269                   VX_ON.SECOND );
      270      270                END; /* If */
      271      271        %MEND;
      272      272         %MACRO NO_DATA_INSERT;
      273      273            VX_SPC_DATA_INSERT = @FALSE_B;
      274      274        %MEND;
      275      275         %MACRO NO_ROS;
      276      276            VX_ROS_ALLOWED = @FALSE_B;
      277      277        %MEND;
      278      278         %MACRO NO_TCB;
      279      279            VX_O.NUM.TCB = 0;
      280      280        %MEND;
      281      281         %MACRO NO_DCBSLOTS;
      282      282            VX_O.NUM.DCBSLOTS = 0;
      283      283        %MEND;
      284      284        VXO$IMPL:
      285      285            PROC;

    285  5 000000   000000 700200 xent  VXO$IMPL     TSX0  ! X66_AUTO_0
         5 000001   000050 000000                    ZERO    40,0

      286      286        %INCLUDE VX_INC_C;
      287    11002        %INCLUDE VX_PSUBS_C;
      288    11180        %INCLUDE B_ERRORS_C;
      289    12307        %B$TCB;
      290    12310        %B$ALT;
      291    12318        %P$LIT ( NAME=P$LIT, STCLASS="BASED", LEN="P$LIT.COUNT" );
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:47   
      292    12371        %VX$NODE;

             12383    1   /*******************************************************************************
             12384    1   *                                                                              *
             12385    1   *                          VX$NODE                                                *
             12386    1   *                                                                              *
             12387    1   *******************************************************************************/

             12403    1   DCL 1 VX$NODE      ALIGNED    BASED,
             12404    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             12405    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             12406    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             12407    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             12408    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             12409                              to list of file nodes for this node            */
             12410    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             12411    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             12411                  /* Head pointer to shared library list */
             12412    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             12412                  /* Head pointer to list of shared libraries
             12413                                          which have been mapped to included libraries */
             12414    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             12415    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             12416    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             12417    1         2 ADDR_START REDEF  ADDR_START_A,
             12418    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             12419    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             12420    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             12421    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             12422    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             12423    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             12424    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             12425    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             12426    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             12427    1         2 START_PAGE# REDEF START_PAGE#_A,
             12428    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             12429    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:48   
             12430    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             12431    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             12432    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             12433    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             12434    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             12435    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             12436    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             12436                  /* Starting pointer for common sections for this node */
             12437    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             12437                  /* Stopping pointer for common sections for this node */
             12438    1         2 L_START,
             12439    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             12440    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             12441    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             12442    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             12443    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             12444    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             12445    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             12446    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             12447    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             12448    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             12449    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             12450    1         2 L_STOP,
             12451    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             12452    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             12453    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             12454    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             12455    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             12456    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             12457    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             12458    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             12459    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             12460    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             12461    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             12462    1         2 L_SIZE,
             12463    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             12464    1           3 DN      UBIN /*(0)*/, /* Def names                          */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:49   
             12465    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             12466    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             12467    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             12468    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             12469    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             12470    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             12471    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             12472    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             12473    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             12474    1         2 L_PREV_SIZE,
             12475    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             12476    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             12477    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             12478    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             12479    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             12480    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             12481    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             12482    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             12483    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             12484    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             12485    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             12486    1         2 BIT_MAP                ALIGNED,
             12487    1           3 DATA                  ALIGNED,
             12488    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12489    1           3 RPROC                 ALIGNED,
             12490    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12491    1           3 ROS                   ALIGNED,
             12492    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12493    1         2 L_SC_START,
             12494    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             12495    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             12496    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             12497    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             12498    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             12499    1         2 L_SC_STOP,
             12500    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             12501    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:50   
             12502    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             12503    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             12504    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             12505    1         2 PROMOTE_HEAD,
             12506    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             12507    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             12508    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             12509    1         2 PROMOTE_TAIL,
             12510    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             12511    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             12512    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             12513    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             12514    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             12515    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             12516    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             12517    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

      293    12521        %VX$SC;

             12534    1   /*******************************************************************************
             12535    1   *                                                                              *
             12536    1   *                          VX$SC                                                 *
             12537    1   *                                                                              *
             12538    1   *******************************************************************************/

             12543    1   DCL 1 VX$SC BASED ALIGNED,
             12544    1         2 SEG UBIN(3) UNAL,
             12545                /*K*  SEG - The segment number of this section */
             12546    1         2 TYPE UBIN(6) UNAL,
             12547                /*K*  TYPE -
             12548                      Type code      Section type
             12549                      ---------      ------------
             12550                          0          Data control section with write access.
             12551                          1          Procedure control section.
             12552                          2          Unlabeled common, name pointer must be zero.
             12553                          3          Labeled common, with mandatory name pointer.
             12554                                     This is for labeled common which must be
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:51   
             12555                                     in the root.
             12556                          4          Labeled common, with mandatory name pointer.
             12557                                     This is for labeled common which need not
             12558                                     be in the root.
             12559                          5          DCB, word 1 is name pointer.
             12560                          6          Data control section with read only access,
             12561                                     word 1 = 0 or name pointer.      */
             12562    1         2 EMPTY BIT(1) UNAL,
             12563                /*K*  EMPTY is the empty bit.  This bit is set if the control
             12564                      section is of size zero.  */
             12565    1         2 ATTR UNAL,
             12566    1           3 INT  UBIN(2) UNAL,
             12567                  /*K*  INT is the Section initialization.  */
             12568    1           3 SEGMENT BIT(1) UNAL,
             12569                  /*K* SEGMENT is set if the Section is defined in a data
             12570                       segment.  */
             12571    1           3 ALL BIT(1) UNAL,
             12572                  /*K*  ALL is set if the Section is allocated.  */
             12573    1           3 PRE_DCB BIT(1) UNAL,
             12574                  /*K*  PRE_DCB is set if a Pre_defined DCB.  */
             12575    1           3 MES_INIT BIT(1) UNAL,
             12576    1           3 ALIGN UBIN(2) UNAL,
             12577                  /*K*  ALIGN is the Section alignment.  */
             12578    1         2 ADDRESS UBIN HALF UNAL,
             12579                /*K*  ADDRESS is the address within the Instruction Segment of
             12580                      the entry point of the external procedure.  */
             12581    1         2 NAME_DISP SBIN HALF UNAL,
             12582                /*K*  NAME_DISP is the Name index.  */
             12583    1         2 SIZE UBIN HALF UNAL,
             12584                /*K*  SIZE is the size, in words, of the section.  */
             12585    1         2 NODE# UBIN HALF UNAL,
             12586                /*K*  NODE# is the Node number of section.  */
             12587    1         2 COM_LINK UBIN HALF UNAL;
             12588                /*K*  COM_LINK is used internally by linker to link common sections */

             12598    1   /*******************************************************************************
             12599    1   *                                                                              *
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:52   
             12600    1   *                          VX$SECT                                                *
             12601    1   *                                                                              *
             12602    1   *******************************************************************************/

             12607    1   DCL 1 VX$SECT BASED ALIGNED,
             12608    1         2 TYPE UBIN BYTE UNAL,
             12609                /*K*  TYPE -
             12610                      Type code      Section type
             12611                      ---------      ------------
             12612                          0          Data control section with write access.
             12613                          1          Procedure control section.
             12614                          2          Unlabeled common, name pointer must be zero.
             12615                          3          Labeled common, with mandatory name pointer.
             12616                                     This is for labeled common which must be
             12617                                     in the root.
             12618                          4          Labeled common, with mandatory name pointer.
             12619                                     This is for labeled common which need not
             12620                                     be in the root.
             12621                          5          DCB, word 1 is name pointer.
             12622                          6          Data control section with read only access,
             12623                                     word 1 = 0 or name pointer.
             12624                          7          Constant labeled common, with mandatory name pointer.
             12625                                     This is for labeled common which must be
             12626                                     in the root.
             12627                          8          Constant labeled common, with mandatory name pointer.
             12628                                     This is for labeled common which need not
             12629                                     be in the root.                        */
             12630    1         2 * BIT(1),
             12631                /*K*  * is reserved for future use and must be zero. */
             12632    1         2 INITZERO BIT(1),
             12633                /*K*  INITZERO - if 1, initialize with zero.  */
             12634    1         2 INITUTS BIT(1),
             12635                /*K*  INITUTS - if 1, initialize with UTS.  */
             12636    1         2 SEGMENT BIT(1),
             12637                /*K*  SEGMENT - if 1, specifies that this section is
             12638                                to be placed in the segment specified by
             12639                                SEG_NPOINTER.  */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:53   
             12640    1         2 * BIT(3),
             12641                /*K*  * is reserved for future use and must be zero. */
             12642    1         2 BOUND UBIN(2) UNAL,
             12643                /*K*  BOUND - bits 6-7 - defines starting location.
             12644                              00 - starts on even word
             12645                              01 - starts on odd word
             12646                              10 - starts on multiple of 8
             12647                              11 - starts on page boundary     */
             12648    1         2 SIZE UBIN HALF UNAL,
             12649                /*K*  SIZE is the size, in words, of the section.  */
             12650    1         2 NPOINTER SBIN HALF UNAL,
             12651                /*K*  NPOINTER is the word displacement into the name record
             12652                      (TYPE 1) locating the name of this section.  If the
             12653                      field is negative, the section has no name.  */
             12654    1         2 MBZ UBIN HALF UNAL,
             12655                /*K*  MBZ is reserved for future expansion and must be zero. */
             12656    1         2 SEG_NPOINTER REDEF MBZ SBIN HALF UNAL,
             12657                /*K*  SEG_NPOINTER locates a name in the Definition Names
             12658                      Section.  The name must be a valid segment name
             12659                      recognized by the linker.  */
             12660    1         2 G66 REDEF MBZ,
             12661                /*K*  G66 is not used on CP-6. */
             12662    1           3 * BIT(9),
             12663    1           3 NSAB BIT(9);
      294    12666        %VX$LST;

             12679    1   /*******************************************************************************
             12680    1   *                                                                              *
             12681    1   *                          VX$LST                                                 *
             12682    1   *                                                                              *
             12683    1   *******************************************************************************/

             12688    1   DCL 1 VX$LST                          ALIGNED BASED,
             12689    1         2 LINK$        PTR,               /* Link to next item                  */
             12690    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             12691    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             12692    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:54   
             12693    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             12694    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             12695    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             12696    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             12697    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             12698    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             12699    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             12700    1         2 P,
             12701    1           3 NAME_       ALIGNED,
             12702    1             4 BOUND      UBIN(20)  UNAL,
             12703    1             4 FLAGSV     UBIN(11)  UNAL,
             12704    1             4 *          BIT(5)    UNAL,
             12705    1             4 NAME$      PTR,
             12706    1           3 ACCT_       ALIGNED,
             12707    1             4 BOUND      UBIN(20)  UNAL,
             12708    1             4 FLAGSV     UBIN(11)  UNAL,
             12709    1             4 *          BIT(5)    UNAL,
             12710    1             4 ACCT$      PTR,
             12711    1           3 PASS_       ALIGNED,
             12712    1             4 BOUND      UBIN(20)  UNAL,
             12713    1             4 FLAGSV     UBIN(11)  UNAL,
             12714    1             4 *          BIT(5)    UNAL,
             12715    1             4 PASS$      PTR,
             12716    1           3 SN_         ALIGNED,
             12717    1             4 BOUND      UBIN(20)  UNAL,
             12718    1             4 FLAGSV     UBIN(11)  UNAL,
             12719    1             4 *          BIT(5)    UNAL,
             12720    1             4 SN$        PTR,
             12721    1           3 WSN_        ALIGNED,
             12722    1             4 BOUND      UBIN(20)  UNAL,
             12723    1             4 FLAGSV     UBIN(11)  UNAL,
             12724    1             4 *          BIT(5)    UNAL,
             12725    1             4 WSN$       PTR,
             12726    1           3 B           ALIGNED,
             12727    1             4 RES        BIT(1)    UNAL,
             12728    1             4 ASN        BIT(1)    UNAL,
             12729    1             4 ACCT       BIT(1)    UNAL,
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:55   
             12730    1             4 *          BIT(33)   UNAL,
             12731    1           3 RES         CHAR(4)   ALIGNED,
             12732    1           3 ASN         UBIN(36)  ALIGNED;
      295    12735        %VX$LLIST;

             12747    1   /*******************************************************************************
             12748    1   *                                                                              *
             12749    1   *                          VX$LLIST                                               *
             12750    1   *                                                                              *
             12751    1   *******************************************************************************/

             12756    1   DCL 1 VX$LLIST                BASED     ALIGNED,
             12757    1         2 LINK$                  PTR  ALIGNED,
             12758    1         2 ITEM$                  PTR  ALIGNED;
      296    12761        %VXD$TMPLT;

             12774    1   /*******************************************************************************
             12775    1   *                                                                              *
             12776    1   *                          VXD$TMPLT                                              *
             12777    1   *                                                                              *
             12778    1   *******************************************************************************/

             12782        /*
             12783                  VXD$TMPLT (B$RU_DEF) is used to reference fields common to
             12784                  ENTDEFs, SYMDEFs and SEGDEFs.
             12785        */
             12787    1   DCL 1 VXD$TMPLT BASED ALIGNED,
             12788    1         2 VALUE SBIN UNAL,
             12789                /*K*  VALUE is the value if this entry is a constant.  */
             12790    1         2 AD REDEF VALUE,
             12791                /*K*  AD is the address if this entry is not constant.  */
             12792    1           3 LFLAGS UNAL,
             12793                  /*K*  LFLAGS is the field reserved for loader to flag load
             12794                        time attributes of the definition and must be zero
             12795                        in the object unit. */
             12796    1             4 SOURCE UBIN(3) UNAL,
             12797                    /*K*  SOURCE - Source of this DEF */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:56   
             12798    1             4 DEFINED BIT(1) UNAL,
             12799                    /*K*  DEFINED - Set if this DEF defined */
             12800    1             4 MULTIPLE BIT(1) UNAL,
             12801                    /*K*  MULTIPLE - Set if this DEF is multiply defined. */
             12802    1             4 USED BIT(1) UNAL,
             12803                    /*K*  USED - Set if this DEF is used. */
             12804    1           3 LOOKUP_SECTNUM BIT(1) UNAL,
             12805                  /*K*  LOOKUP_SECTNUM is set if the section number is greater
             12806                        than 2048 (RU).  */
             12807    1           3 SECTNUM UBIN(11) UNAL,
             12808                  /*K*  SECTNUM contains an entry number into the section
             12809                        table (TYPE 3).  */
             12810    1           3 ISADDR UBIN HALF UNAL,
             12811                  /*K*  ISADDR - Is Address (RU)  */
             12812    1           3 OFFSET REDEF ISADDR UBIN HALF UNAL,
             12813                  /*K*  OFFSET is the word offset from the origin of the section. */
             12814    1         2 NPOINTER SBIN HALF UNAL,
             12815                /*K*  NPOINTER is a word displacement into the name record
             12816                      (TYPE 1) locating the name (of this entry). */
             12817    1         2 CONSTNT BIT(1) UNAL,
             12818                /*K*  CONSTNT is a flag bit to determine the interpretation
             12819                      of word 0.
             12820                      If CONSTNT=0, word 0 is AD which contains LFLAGS,
             12821                                    SECTNUM, and ISADDR or OFFSET.
             12822                      If CONSTNT=1, word 0 is a constant value (VALUE)  */
             12823    1         2 LFLAGS UNAL,
             12824                /*K*  LFLAGS is the field reserved for loader to flag load
             12825                      time attributes and must be zero in the object unit. */
             12826    1           3 MULTIPLE BIT(1) UNAL,
             12827                  /*K*  MULTIPLE - Set if this DEF is multiply defined. */
             12828    1           3 USED BIT(1) UNAL,
             12829                  /*K*  USED - Set if this DEF is used. */
             12830    1           3 SOURCE UBIN(4) UNAL,
             12831                  /*K*  SOURCE - Source of this DEF */
             12832    1           3 IS_DCB BIT(1) UNAL,
             12833                  /*K* IS_DCB - Set if this is a DCB */
             12834    1           3 * BIT(10) UNAL,
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:57   
             12835                  /*K*  * is reserved for future use and must be zero.  */
             12836    1         2 PROTECTION REDEF LFLAGS,
             12837                /*K*  PROTECTION is used for non-constant SYMDEF OR SEGDEF.  */
             12838    1           3 TYPE UBIN(5) UNAL,
             12839                  /*K*  TYPE is the Protection type.  */
             12840    1           3 * UBIN(12) UNAL;
             12841                  /*K*  * is reserved for future use and must be zero.  */
      297    12856        %T$C;

             12868    1   /*******************************************************************************
             12869    1   *                                                                              *
             12870    1   *                          T$C                                                 *
             12871    1   *                                                                              *
             12872    1   *******************************************************************************/

             12877    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             12878    1         2 COUNT        UBIN( 9) UNAL,
             12879    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             12880    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             12881    1         2 COUNT        UBIN( 9) UNAL,
             12882    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
      298    12885        %B;

             12893    1   /*******************************************************************************
             12894    1   *                                                                              *
             12895    1   *                          BIT                                                 *
             12896    1   *                                                                              *
             12897    1   *******************************************************************************/

      299    12901    1   DCL CONFLICT BIT(1) ALIGNED AUTO;
      300    12902        %E;

             12910    1   /*******************************************************************************
             12911    1   *                                                                              *
             12912    1   *                          ENTRY                                                 *
             12913    1   *                                                                              *
             12914    1   *******************************************************************************/
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:58   

      301    12918        %ENTRIES;
      302    12933        %ENTRIES_IO;
      303    12941        %PTR;

             12949    1   /*******************************************************************************
             12950    1   *                                                                              *
             12951    1   *                          PTR                                                 *
             12952    1   *                                                                              *
             12953    1   *******************************************************************************/

      304    12957        %POINTER;
      305    12962    1   DCL STAR_A$ PTR ALIGNED AUTO;
      306    12963    1   DCL FIRST_NAME$ PTR ALIGNED AUTO;
      307    12964    1   DCL FIRST_ITEM$ PTR ALIGNED AUTO;
      308    12965    1   DCL NAME$ PTR ALIGNED AUTO;
      309    12966    1   DCL ITEM$ PTR ALIGNED AUTO;
      310    12967    1   DCL PREV$ PTR ALIGNED AUTO;
      311    12968    1   DCL CURR$ PTR ALIGNED AUTO;
      312    12969        %U;

             12977    1   /*******************************************************************************
             12978    1   *                                                                              *
             12979    1   *                          UBIN                                                 *
             12980    1   *                                                                              *
             12981    1   *******************************************************************************/

      313    12985        %INDEX;
      314    12995    1   DCL NAME_SIZE UBIN(36) ALIGNED AUTO;
      315    12996    1   DCL ERR UBIN(36) ALIGNED AUTO;
      316    12997    1   DCL TNAME_SIZE UBIN(36) ALIGNED AUTO;
      317    12998    1   DCL TITEM_SIZE UBIN(36) ALIGNED AUTO;
      318    12999
      319    13000    1   DCL 1 STAR_A_KEY_BUF ALIGNED AUTO,
      320    13001    1         2 COUNT UBIN(9) UNAL,
      321    13002    1         2 CHARS CHAR(31) UNAL;
      322    13003        %PLIST;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:59   
      323    13004        %FPT_OPEN(
      324    13005         FPTN=F_O,
      325    13006         DCB=M$RF,
      326    13007         EXIST=OLDFILE,
      327    13008         FUN=IN,
      328    13009         TEST=YES,
      329    13010         ORG=KEYED,
      330    13011         ACS=DIRECT);
      331    13120
      332    13121    1   DCL M$OF DCB;
      333    13122    1   DCL M$RF DCB;
      334    13123        %PLIST;
      335    13124        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:60   
      336    13125    2       IF VX_COMMAND ~= 0 THEN DO; /* Its a link */

  13125  5 000002   000000 235000 xsym               LDA     VX_COMMAND
         5 000003   001367 600000 5                  TZE     s:13779

      337    13126    2           IF VX_O.SIN.PROMOTE ~= 0 OR VX_O.SIN.PROMOTE_BLANK ~= 0 THEN
             13126                    VX_CHK_BLANK_COM_PROMOTE = @TRUE_B;

  13126  5 000004   000020 236000 xsym               LDQ     VX_O+16
         5 000005   000010 601000 5                  TNZ     s:13126+4
         5 000006   000016 235000 xsym               LDA     VX_O+14
         5 000007   000012 600000 5                  TZE     s:13127

  13126  5 000010   400000 236003                    LDQ     -131072,DU
         5 000011   000000 756000 xsym               STQ     VX_CHK_BLANK_COM_PROMOTE

      338    13127    2           CONFLICT = @FALSE_B;

  13127  5 000012   200003 450100                    STZ     CONFLICT,,AUTO

      339    13128         /*
      340    13129            Do conflict checking
      341    13130         */
      342    13131        %PLIST;
      343    13132    3           IF VX_OD.SIN.SYSTEM THEN DO;

  13132  5 000013   000000 236000 xsym               LDQ     VX_OD
         5 000014   000200 316003                    CANQ    128,DU
         5 000015   000125 600000 5                  TZE     s:13206

      344    13133                    %CON(
      345    13134                    FIRST="SIN.SYSTEM",
      346    13135                    SECOND="SIN.NOEDITING");

  13136  5 000016   000100 316003                    CANQ    64,DU
         5 000017   000026 600000 5                  TZE     s:13145

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:61   
  13137  5 000020   000000 236000 6                  LDQ     0
         5 000021   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000022   000001 236000 6                  LDQ     1
         5 000023   200037 756100                    STQ     L+14,,AUTO
         5 000024   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000025   000000 011000                    NOP     0

      347    13142                    %CON(
      348    13143                    FIRST="SIN.SYSTEM",
      349    13144                    SECOND="SIN.ASLIB");

  13145  5 000026   000000 236000 xsym               LDQ     VX_OD
         5 000027   000040 316003                    CANQ    32,DU
         5 000030   000037 600000 5                  TZE     s:13154

  13146  5 000031   000002 236000 6                  LDQ     2
         5 000032   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000033   000001 236000 6                  LDQ     1
         5 000034   200037 756100                    STQ     L+14,,AUTO
         5 000035   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000036   000000 011000                    NOP     0

      350    13151                    %CON(
      351    13152                    FIRST="SIN.SYSTEM",
      352    13153                    SECOND="NUM.DCBSLOTS");

  13154  5 000037   000000 236000 xsym               LDQ     VX_OD
         5 000040   000040 316007                    CANQ    32,DL
         5 000041   000050 600000 5                  TZE     s:13163

  13155  5 000042   000003 236000 6                  LDQ     3
         5 000043   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000044   000001 236000 6                  LDQ     1
         5 000045   200037 756100                    STQ     L+14,,AUTO
         5 000046   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000047   000000 011000                    NOP     0

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:62   
      353    13160                    %CON(
      354    13161                    FIRST="SIN.SYSTEM",
      355    13162                    SECOND="FID.ALTSHARELIB$");

  13163  5 000050   000002 236000 xsym               LDQ     VX_OD+2
         5 000051   000200 316003                    CANQ    128,DU
         5 000052   000061 600000 5                  TZE     s:13172

  13164  5 000053   000004 236000 6                  LDQ     4
         5 000054   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000055   000001 236000 6                  LDQ     1
         5 000056   200037 756100                    STQ     L+14,,AUTO
         5 000057   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000060   000000 011000                    NOP     0

      356    13169                    %CON(
      357    13170                    FIRST="SIN.SYSTEM",
      358    13171                    SECOND="DCB_MATCH.SI$");

  13172  5 000061   000002 236000 xsym               LDQ     VX_OD+2
         5 000062   002000 316007                    CANQ    1024,DL
         5 000063   000072 600000 5                  TZE     s:13181

  13173  5 000064   000005 236000 6                  LDQ     5
         5 000065   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000066   000001 236000 6                  LDQ     1
         5 000067   200037 756100                    STQ     L+14,,AUTO
         5 000070   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000071   000000 011000                    NOP     0

      359    13178                    %CON(
      360    13179                    FIRST="SIN.SYSTEM",
      361    13180                    SECOND="DCB_MATCH.UI$");

  13181  5 000072   000002 236000 xsym               LDQ     VX_OD+2
         5 000073   001000 316007                    CANQ    512,DL
         5 000074   000103 600000 5                  TZE     s:13190
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:63   

  13182  5 000075   000006 236000 6                  LDQ     6
         5 000076   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000077   000001 236000 6                  LDQ     1
         5 000100   200037 756100                    STQ     L+14,,AUTO
         5 000101   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000102   000000 011000                    NOP     0

      362    13187                    %CON(
      363    13188                    FIRST="SIN.SYSTEM",
      364    13189                    SECOND="DCB_MATCH.OU$");

  13190  5 000103   000002 236000 xsym               LDQ     VX_OD+2
         5 000104   000400 316007                    CANQ    256,DL
         5 000105   000114 600000 5                  TZE     s:13199

  13191  5 000106   000007 236000 6                  LDQ     7
         5 000107   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000110   000001 236000 6                  LDQ     1
         5 000111   200037 756100                    STQ     L+14,,AUTO
         5 000112   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000113   000000 011000                    NOP     0

      365    13196                    %CON(
      366    13197                    FIRST="SIN.SYSTEM",
      367    13198                    SECOND="DCB_MATCH.LO$");

  13199  5 000114   000002 236000 xsym               LDQ     VX_OD+2
         5 000115   000200 316007                    CANQ    128,DL
         5 000116   000125 600000 5                  TZE     s:13206

  13200  5 000117   000010 236000 6                  LDQ     8
         5 000120   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000121   000001 236000 6                  LDQ     1
         5 000122   200037 756100                    STQ     L+14,,AUTO
         5 000123   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000124   000000 011000                    NOP     0
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:64   

      368    13205    3               END; /* If VX_OD.SIN.SYSTEM then do; */

      369    13206    3           IF VX_OD.SIN.NOEDITING THEN DO;

  13206  5 000125   000000 236000 xsym               LDQ     VX_OD
         5 000126   000100 316003                    CANQ    64,DU
         5 000127   000250 600000 5                  TZE     s:13289

      370    13207                    %CON(
      371    13208                    FIRST="SIN.NOEDITING",
      372    13209                    SECOND="SIN.ASLIB");

  13210  5 000130   000040 316003                    CANQ    32,DU
         5 000131   000140 600000 5                  TZE     s:13219

  13211  5 000132   000002 236000 6                  LDQ     2
         5 000133   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000134   000000 236000 6                  LDQ     0
         5 000135   200037 756100                    STQ     L+14,,AUTO
         5 000136   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000137   000000 011000                    NOP     0

      373    13216                    %CON(
      374    13217                    FIRST="SIN.NOEDITING",
      375    13218                    SECOND="SIN.SLIB");

  13219  5 000140   000000 236000 xsym               LDQ     VX_OD
         5 000141   000020 316003                    CANQ    16,DU
         5 000142   000151 600000 5                  TZE     s:13228

  13220  5 000143   000011 236000 6                  LDQ     9
         5 000144   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000145   000000 236000 6                  LDQ     0
         5 000146   200037 756100                    STQ     L+14,,AUTO
         5 000147   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000150   000000 011000                    NOP     0
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:65   

      376    13225                    %CON(
      377    13226                    FIRST="SIN.NOEDITING",
      378    13227                    SECOND="NUM.BREF");

  13228  5 000151   000000 236000 xsym               LDQ     VX_OD
         5 000152   000100 316007                    CANQ    64,DL
         5 000153   000162 600000 5                  TZE     s:13237

  13229  5 000154   000012 236000 6                  LDQ     10
         5 000155   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000156   000000 236000 6                  LDQ     0
         5 000157   200037 756100                    STQ     L+14,,AUTO
         5 000160   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000161   000000 011000                    NOP     0

      379    13234                    %CON(
      380    13235                    FIRST="SIN.NOEDITING",
      381    13236                    SECOND="NUM.DCBSLOTS");

  13237  5 000162   000000 236000 xsym               LDQ     VX_OD
         5 000163   000040 316007                    CANQ    32,DL
         5 000164   000173 600000 5                  TZE     s:13246

  13238  5 000165   000003 236000 6                  LDQ     3
         5 000166   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000167   000000 236000 6                  LDQ     0
         5 000170   200037 756100                    STQ     L+14,,AUTO
         5 000171   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000172   000000 011000                    NOP     0

      382    13243                    %CON(
      383    13244                    FIRST="SIN.NOEDITING",
      384    13245                    SECOND="NUM.TCB");

  13246  5 000173   000000 236000 xsym               LDQ     VX_OD
         5 000174   000001 316007                    CANQ    1,DL
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:66   
         5 000175   000204 600000 5                  TZE     s:13255

  13247  5 000176   000013 236000 6                  LDQ     11
         5 000177   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000200   000000 236000 6                  LDQ     0
         5 000201   200037 756100                    STQ     L+14,,AUTO
         5 000202   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000203   000000 011000                    NOP     0

      385    13252                    %CON(
      386    13253                    FIRST="SIN.NOEDITING",
      387    13254                    SECOND="DCB_MATCH.SI$");

  13255  5 000204   000002 236000 xsym               LDQ     VX_OD+2
         5 000205   002000 316007                    CANQ    1024,DL
         5 000206   000215 600000 5                  TZE     s:13264

  13256  5 000207   000005 236000 6                  LDQ     5
         5 000210   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000211   000000 236000 6                  LDQ     0
         5 000212   200037 756100                    STQ     L+14,,AUTO
         5 000213   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000214   000000 011000                    NOP     0

      388    13261                    %CON(
      389    13262                    FIRST="SIN.NOEDITING",
      390    13263                    SECOND="DCB_MATCH.UI$");

  13264  5 000215   000002 236000 xsym               LDQ     VX_OD+2
         5 000216   001000 316007                    CANQ    512,DL
         5 000217   000226 600000 5                  TZE     s:13273

  13265  5 000220   000006 236000 6                  LDQ     6
         5 000221   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000222   000000 236000 6                  LDQ     0
         5 000223   200037 756100                    STQ     L+14,,AUTO
         5 000224   001400 701000 5                  TSX1    VXO$CONFLICT
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:67   
         5 000225   000000 011000                    NOP     0

      391    13270                    %CON(
      392    13271                    FIRST="SIN.NOEDITING",
      393    13272                    SECOND="DCB_MATCH.OU$");

  13273  5 000226   000002 236000 xsym               LDQ     VX_OD+2
         5 000227   000400 316007                    CANQ    256,DL
         5 000230   000237 600000 5                  TZE     s:13282

  13274  5 000231   000007 236000 6                  LDQ     7
         5 000232   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000233   000000 236000 6                  LDQ     0
         5 000234   200037 756100                    STQ     L+14,,AUTO
         5 000235   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000236   000000 011000                    NOP     0

      394    13279                    %CON(
      395    13280                    FIRST="SIN.NOEDITING",
      396    13281                    SECOND="DCB_MATCH.LO$");

  13282  5 000237   000002 236000 xsym               LDQ     VX_OD+2
         5 000240   000200 316007                    CANQ    128,DL
         5 000241   000250 600000 5                  TZE     s:13289

  13283  5 000242   000010 236000 6                  LDQ     8
         5 000243   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000244   000000 236000 6                  LDQ     0
         5 000245   200037 756100                    STQ     L+14,,AUTO
         5 000246   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000247   000000 011000                    NOP     0

      397    13288    3               END; /* If VX_OD.SIN.NOEDITING then do; */

      398    13289    3           IF VX_OD.SIN.ASLIB THEN DO;

  13289  5 000250   000000 236000 xsym               LDQ     VX_OD
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:68   
         5 000251   000040 316003                    CANQ    32,DU
         5 000252   000305 600000 5                  TZE     s:13319

      399    13290    4               IF VX_ROOT$ -> VX$NODE.SON$ ~= ADDR(NIL) THEN DO;

  13290  5 000253   000000 470400 xsym               LDP0    VX_ROOT$
         5 000254   000000 236100                    LDQ     0,,PR0
         5 000255   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000256   000263 600000 5                  TZE     s:13302

      400    13291        /*E* ERROR: VXO-E$ASLIB_OLAY_VX-0
      401    13292             MESSAGE: An alternate shared library cannot be overlayed.
      402    13293             DESCRIPTION: Self-explantory.
      403    13294        */
      404    13295                        %SCREAM( ERR#=E$ASLIB_OLAY_VX, LEVEL=@E$F_VX, MID='O' );

  13296  5 000257   000016 630400 6                  EPPR0   14
         5 000260   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000261   000000 701000 xent               TSX1    VXE$ERROR
         5 000262   000000 011000                    NOP     0

      405    13298    4                   END;

      406    13299                    %CON(
      407    13300                    FIRST="SIN.ASLIB",
      408    13301                    SECOND="SIN.SLIB");

  13302  5 000263   000000 236000 xsym               LDQ     VX_OD
         5 000264   000020 316003                    CANQ    16,DU
         5 000265   000274 600000 5                  TZE     s:13311

  13303  5 000266   000011 236000 6                  LDQ     9
         5 000267   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000270   000002 236000 6                  LDQ     2
         5 000271   200037 756100                    STQ     L+14,,AUTO
         5 000272   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000273   000000 011000                    NOP     0
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:69   

      409    13308                    %CON(
      410    13309                    FIRST="SIN.ASLIB",
      411    13310                    SECOND="FID.ALTSHARELIB$");

  13311  5 000274   000002 236000 xsym               LDQ     VX_OD+2
         5 000275   000200 316003                    CANQ    128,DU
         5 000276   000305 600000 5                  TZE     s:13319

  13312  5 000277   000004 236000 6                  LDQ     4
         5 000300   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000301   000002 236000 6                  LDQ     2
         5 000302   200037 756100                    STQ     L+14,,AUTO
         5 000303   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000304   000000 011000                    NOP     0

      412    13317    3               END; /* If VX_OD.SIN.ASLIB then do; */

      413    13318
      414    13319    3           IF VX_OD.VECTOR_ ~= '0'B AND NOT VX_OD.SIN.SLIB THEN DO;

  13319  5 000305   000002 236000 xsym               LDQ     VX_OD+2
         5 000306   000177 316007                    CANQ    127,DL
         5 000307   000321 600000 5                  TZE     s:13329
         5 000310   000000 236000 xsym               LDQ     VX_OD
         5 000311   000020 316003                    CANQ    16,DU
         5 000312   000321 601000 5                  TNZ     s:13329

      415    13320        /*E* ERROR: VXO-E$VECTOR_BUT_NO_SLIB-C
      416    13321             MESSAGE: The VECTOR option was specified, but the SLIB option was
      417    13322                      not specified. SLIB option assumed.
      418    13323        */
      419    13324                    %SCREAM( ERR#=E$VECTOR_BUT_NO_SLIB, LEVEL=@E$W_VX, MID="'O'" );

  13325  5 000313   000023 630400 6                  EPPR0   19
         5 000314   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000315   000000 701000 xent               TSX1    VXE$ERROR
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:70   
         5 000316   000000 011000                    NOP     0

      420    13327    3               VX_OD.SIN.SLIB = @TRUE_B;

  13327  5 000317   000020 236003                    LDQ     16,DU
         5 000320   000000 256000 xsym               ORSQ    VX_OD

      421    13328    3               END;

      422    13329    3           IF VX_OD.SIN.SLIB THEN DO;

  13329  5 000321   000000 236000 xsym               LDQ     VX_OD
         5 000322   000020 316003                    CANQ    16,DU
         5 000323   000455 600000 5                  TZE     s:13421

      423    13330    4               IF VX_ROOT$ -> VX$NODE.SON$ ~= ADDR(NIL) THEN DO;

  13330  5 000324   000000 470400 xsym               LDP0    VX_ROOT$
         5 000325   000000 236100                    LDQ     0,,PR0
         5 000326   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000327   000334 600000 5                  TZE     s:13342

      424    13331        /*E* ERROR: VXO-E$SLIB_OLAY_VX-0
      425    13332             MESSAGE: A shared library cannot be overlayed.
      426    13333             DESCRIPTION: Self-explantory.
      427    13334        */
      428    13335                        %SCREAM( ERR#=E$SLIB_OLAY_VX, LEVEL=@E$F_VX, MID='O' );

  13336  5 000330   000030 630400 6                  EPPR0   24
         5 000331   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000332   000000 701000 xent               TSX1    VXE$ERROR
         5 000333   000000 011000                    NOP     0

      429    13338    4                   END;

      430    13339                    %CON(
      431    13340                    FIRST="SIN.SLIB",
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:71   
      432    13341                    SECOND="NUM.BREF");

  13342  5 000334   000000 236000 xsym               LDQ     VX_OD
         5 000335   000100 316007                    CANQ    64,DL
         5 000336   000345 600000 5                  TZE     s:13351

  13343  5 000337   000012 236000 6                  LDQ     10
         5 000340   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000341   000011 236000 6                  LDQ     9
         5 000342   200037 756100                    STQ     L+14,,AUTO
         5 000343   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000344   000000 011000                    NOP     0

      433    13348                    %CON(
      434    13349                    FIRST="SIN.SLIB",
      435    13350                    SECOND="NUM.DCBSLOTS");

  13351  5 000345   000000 236000 xsym               LDQ     VX_OD
         5 000346   000040 316007                    CANQ    32,DL
         5 000347   000356 600000 5                  TZE     s:13360

  13352  5 000350   000003 236000 6                  LDQ     3
         5 000351   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000352   000011 236000 6                  LDQ     9
         5 000353   200037 756100                    STQ     L+14,,AUTO
         5 000354   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000355   000000 011000                    NOP     0

      436    13357                    %CON(
      437    13358                    FIRST="SIN.SLIB",
      438    13359                    SECOND="NUM.TCB");

  13360  5 000356   000000 236000 xsym               LDQ     VX_OD
         5 000357   000001 316007                    CANQ    1,DL
         5 000360   000367 600000 5                  TZE     s:13369

  13361  5 000361   000013 236000 6                  LDQ     11
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:72   
         5 000362   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000363   000011 236000 6                  LDQ     9
         5 000364   200037 756100                    STQ     L+14,,AUTO
         5 000365   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000366   000000 011000                    NOP     0

      439    13366                    %CON(
      440    13367                    FIRST="SIN.SLIB",
      441    13368                    SECOND="FID.ALTSHARELIB$");

  13369  5 000367   000002 236000 xsym               LDQ     VX_OD+2
         5 000370   000200 316003                    CANQ    128,DU
         5 000371   000400 600000 5                  TZE     s:13378

  13370  5 000372   000004 236000 6                  LDQ     4
         5 000373   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000374   000011 236000 6                  LDQ     9
         5 000375   200037 756100                    STQ     L+14,,AUTO
         5 000376   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000377   000000 011000                    NOP     0

      442    13375                    %CON(
      443    13376                    FIRST="SIN.SLIB",
      444    13377                    SECOND="FID.SHARELIB$");

  13378  5 000400   000002 236000 xsym               LDQ     VX_OD+2
         5 000401   000100 316003                    CANQ    64,DU
         5 000402   000411 600000 5                  TZE     s:13387

  13379  5 000403   000034 236000 6                  LDQ     28
         5 000404   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000405   000011 236000 6                  LDQ     9
         5 000406   200037 756100                    STQ     L+14,,AUTO
         5 000407   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000410   000000 011000                    NOP     0

      445    13384                    %CON(
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:73   
      446    13385                    FIRST="SIN.SLIB",
      447    13386                    SECOND="DCB_MATCH.SI$");

  13387  5 000411   000002 236000 xsym               LDQ     VX_OD+2
         5 000412   002000 316007                    CANQ    1024,DL
         5 000413   000422 600000 5                  TZE     s:13396

  13388  5 000414   000005 236000 6                  LDQ     5
         5 000415   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000416   000011 236000 6                  LDQ     9
         5 000417   200037 756100                    STQ     L+14,,AUTO
         5 000420   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000421   000000 011000                    NOP     0

      448    13393                    %CON(
      449    13394                    FIRST="SIN.SLIB",
      450    13395                    SECOND="DCB_MATCH.UI$");

  13396  5 000422   000002 236000 xsym               LDQ     VX_OD+2
         5 000423   001000 316007                    CANQ    512,DL
         5 000424   000433 600000 5                  TZE     s:13405

  13397  5 000425   000006 236000 6                  LDQ     6
         5 000426   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000427   000011 236000 6                  LDQ     9
         5 000430   200037 756100                    STQ     L+14,,AUTO
         5 000431   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000432   000000 011000                    NOP     0

      451    13402                    %CON(
      452    13403                    FIRST="SIN.SLIB",
      453    13404                    SECOND="DCB_MATCH.OU$");

  13405  5 000433   000002 236000 xsym               LDQ     VX_OD+2
         5 000434   000400 316007                    CANQ    256,DL
         5 000435   000444 600000 5                  TZE     s:13414

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:74   
  13406  5 000436   000007 236000 6                  LDQ     7
         5 000437   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000440   000011 236000 6                  LDQ     9
         5 000441   200037 756100                    STQ     L+14,,AUTO
         5 000442   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000443   000000 011000                    NOP     0

      454    13411                    %CON(
      455    13412                    FIRST="SIN.SLIB",
      456    13413                    SECOND="DCB_MATCH.LO$");

  13414  5 000444   000002 236000 xsym               LDQ     VX_OD+2
         5 000445   000200 316007                    CANQ    128,DL
         5 000446   000455 600000 5                  TZE     s:13421

  13415  5 000447   000010 236000 6                  LDQ     8
         5 000450   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000451   000011 236000 6                  LDQ     9
         5 000452   200037 756100                    STQ     L+14,,AUTO
         5 000453   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000454   000000 011000                    NOP     0

      457    13420    3               END; /* If VX_OD.SIN.SLIB then do; */

      458    13421    2           IF CONFLICT THEN GOTO QUIT;

  13421  5 000455   200003 234100                    SZN     CONFLICT,,AUTO
         5 000456   001175 604000 5                  TMI     QUIT

      459    13422        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:75   
      460    13423    3           IF VX_OD.NUM.BREF AND VX_OD.SIN.NOBREF THEN DO;

  13423  5 000457   000000 236000 xsym               LDQ     VX_OD
         5 000460   000100 316007                    CANQ    64,DL
         5 000461   000475 600000 5                  TZE     s:13434
         5 000462   100000 316003                    CANQ    32768,DU
         5 000463   000475 600000 5                  TZE     s:13434

      461    13424                    %CON (FIRST="NUM.BREF", SECOND="SIN.NOBREF");

  13425  5 000464   100000 316003                    CANQ    32768,DU
         5 000465   000474 600000 5                  TZE     s:13431

  13426  5 000466   000035 236000 6                  LDQ     29
         5 000467   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000470   000012 236000 6                  LDQ     10
         5 000471   200037 756100                    STQ     L+14,,AUTO
         5 000472   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000473   000000 011000                    NOP     0

      462    13431    3               GOTO QUIT;

  13431  5 000474   001175 710000 5                  TRA     QUIT

      463    13432    3               END;
      464    13433
      465    13434    3           IF VX_OD.SIN.WARN AND VX_OD.SIN.NWARN THEN DO;

  13434  5 000475   001000 316007                    CANQ    512,DL
         5 000476   000512 600000 5                  TZE     s:13445
         5 000477   000400 316007                    CANQ    256,DL
         5 000500   000512 600000 5                  TZE     s:13445

      466    13435                    %CON (FIRST="SIN.WARN", SECOND="SIN.NWARN");

  13436  5 000501   000400 316007                    CANQ    256,DL
         5 000502   000511 600000 5                  TZE     s:13442
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:76   

  13437  5 000503   000036 236000 6                  LDQ     30
         5 000504   200040 756100                    STQ     @FIRST$+1,,AUTO
         5 000505   000037 236000 6                  LDQ     31
         5 000506   200037 756100                    STQ     L+14,,AUTO
         5 000507   001400 701000 5                  TSX1    VXO$CONFLICT
         5 000510   000000 011000                    NOP     0

      467    13442    3               GOTO QUIT;

  13442  5 000511   001175 710000 5                  TRA     QUIT

      468    13443    3               END;
      469    13444
      470    13445    3           DO I = 0 TO SIZEW( VX_OL.MIN_A ) - 1;

  13445  5 000512   200016 450100                    STZ     I,,AUTO
         5 000513   000726 710000 5                  TRA     s:13530+3

      471    13446    4               IF VX_OD.NUM_A(I) THEN DO;

  13446  5 000514   200016 235100                    LDA     I,,AUTO
         5 000515   000000 066405                    CMPB    filb='0'B
         5 000516   000000 620001 xsym               BDSC    VX_OD,A                  by=3,bit=2,n=1
         5 000517   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         5 000520   000723 600000 5                  TZE     s:13530

      472    13447    4                   J = VX_O.NUM_A(I);

  13447  5 000521   000035 235005 xsym               LDA     VX_O+29,AL
         5 000522   200017 755100                    STA     J,,AUTO

      473    13448    5                   IF J < VX_OL.MIN_A(I) THEN DO;

  13448  5 000523   200016 720100                    LXL0    I,,AUTO
         5 000524   200017 236100                    LDQ     J,,AUTO
         5 000525   000624 604000 5                  TMI     s:13490
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:77   
         5 000526   000000 116010 xsym               CMPQ    VX_OL,X0
         5 000527   000624 605000 5                  TPL     s:13490

      474    13449        /*E*  ERROR: VXO-E$OPT_MIN_VX-0
      475    13450              MESSAGE: Invalid value for option %U3; Value = %U1; Set to minimum of %U2.
      476    13451              DESCRIPTION: Self-explanatory.
      477    13452        */
      478    13453    6                       DO CASE( I );

  13453  5 000530   200016 235100                    LDA     I,,AUTO
         5 000531   000006 115007                    CMPA    6,DL
         5 000532   000534 602005 5                  TNC     s:13453+4,AL
         5 000533   000545 710000 5                  TRA     s:13457
         5 000534   000545 710000 5                  TRA     s:13457
         5 000535   000545 710000 5                  TRA     s:13457
         5 000536   000542 710000 5                  TRA     s:13455
         5 000537   000542 710000 5                  TRA     s:13455
         5 000540   000545 710000 5                  TRA     s:13457
         5 000541   000542 710000 5                  TRA     s:13455

      479    13454    6                       CASE( 2, 3, 5 );

      480    13455    6                           K = 8;

  13455  5 000542   000010 235007                    LDA     8,DL
         5 000543   200020 755100                    STA     K,,AUTO
         5 000544   000547 710000 5                  TRA     s:13467

      481    13456    6                       CASE( ELSE );

      482    13457    6                           K = 10;

  13457  5 000545   000012 235007                    LDA     10,DL
         5 000546   200020 755100                    STA     K,,AUTO

      483    13458    6                           END;

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:78   
      484    13459                            %NUMBER(
      485    13460                            NUM1=J, SIZE1=12, BASE1=K,
      486    13461                            NUM2="VX_OL.MIN_A(I)", SIZE2=12, BASE2=K);

  13467  5 000547   200020 630500                    EPPR0   K,,AUTO
         5 000550   200046 450500                    STP0    @SECOND$+6,,AUTO
         5 000551   200017 631500                    EPPR1   J,,AUTO
         5 000552   200045 451500                    STP1    @SECOND$+5,,AUTO
         5 000553   000040 236000 6                  LDQ     32
         5 000554   200044 756100                    STQ     @SECOND$+4,,AUTO
         5 000555   000042 237000 6                  LDAQ    34
         5 000556   200042 757100                    STAQ    @SECOND$+2,,AUTO
         5 000557   200042 630500                    EPPR0   @SECOND$+2,,AUTO
         5 000560   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000561   000000 701000 xent               TSX1    VXD$B2C
         5 000562   000000 011000                    NOP     0

  13471  5 000563   200020 630500                    EPPR0   K,,AUTO
         5 000564   200046 450500                    STP0    @SECOND$+6,,AUTO
         5 000565   200016 720100                    LXL0    I,,AUTO
         5 000566   000000 631410 xsym               EPPR1   VX_OL,X0
         5 000567   200045 451500                    STP1    @SECOND$+5,,AUTO
         5 000570   000045 236000 6                  LDQ     37
         5 000571   200044 756100                    STQ     @SECOND$+4,,AUTO
         5 000572   000046 237000 6                  LDAQ    38
         5 000573   200042 757100                    STAQ    @SECOND$+2,,AUTO
         5 000574   200042 630500                    EPPR0   @SECOND$+2,,AUTO
         5 000575   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000576   000000 701000 xent               TSX1    VXD$B2C
         5 000577   000000 011000                    NOP     0

      487    13478    5                       P$ = VX_ON.NUM_A(I);

  13478  5 000600   200016 720100                    LXL0    I,,AUTO
         5 000601   000035 236010 xsym               LDQ     VX_ON+29,X0
         5 000602   200004 756100                    STQ     P$,,AUTO

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:79   
      488    13479    5                       VX_EFIELD3.COUNT = P$ -> P$LIT.COUNT;

  13479  5 000603   200004 470500                    LDP0    P$,,AUTO
         5 000604   000001 236100                    LDQ     1,,PR0
         5 000605   000000 552040 xsym               STBQ    VX_EFIELD3,'40'O

      489    13480    5                       VX_EFIELD3.CHARS = P$ -> P$LIT.TEXT;

  13480  5 000606   000001 236100                    LDQ     1,,PR0
         5 000607   000033 772000                    QRL     27
         5 000610   000000 621006                    EAX1    0,QL
         5 000611   040000 100540                    MLR     fill='040'O
         5 000612   000001 200011                    ADSC9   1,,PR0                   cn=1,n=*X1
         5 000613   000000 200117 xsym               ADSC9   VX_EFIELD3               cn=1,n=79

      490    13481                            %SCREAM(
      491    13482                            ERR#=E$OPT_MIN_VX,
      492    13483                            LEVEL=@E$W_VX,
      493    13484                            MID="'O'");

  13485  5 000614   000051 630400 6                  EPPR0   41
         5 000615   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000616   000000 701000 xent               TSX1    VXE$ERROR
         5 000617   000000 011000                    NOP     0

      494    13487    5                       VX_O.NUM_A(I) = VX_OL.MIN_A(I);

  13487  5 000620   200016 720100                    LXL0    I,,AUTO
         5 000621   000000 235010 xsym               LDA     VX_OL,X0
         5 000622   000035 755010 xsym               STA     VX_O+29,X0

      495    13488    5                       END;

  13488  5 000623   000723 710000 5                  TRA     s:13530

      496    13489    4                   ELSE
      497    13490    5                       IF J > VX_OL.MAX_A(I) THEN DO;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:80   

  13490  5 000624   000000 116003                    CMPQ    0,DU
         5 000625   000630 604000 5                  TMI     s:13495
         5 000626   000015 116010 xsym               CMPQ    VX_OL+13,X0
         5 000627   000723 604400 5                  TMOZ    s:13530

      498    13491        /*E*  ERROR: VXO-E$OPT_MAX_VX-0
      499    13492              MESSAGE: Invalid value for option %U3; Value = %U1; Set to maximum of %U2.
      500    13493              DESCRIPTION: Self-explanatory.
      501    13494        */
      502    13495    6                           DO CASE( I );

  13495  5 000630   200016 235100                    LDA     I,,AUTO
         5 000631   000006 115007                    CMPA    6,DL
         5 000632   000634 602005 5                  TNC     s:13495+4,AL
         5 000633   000645 710000 5                  TRA     s:13499
         5 000634   000645 710000 5                  TRA     s:13499
         5 000635   000645 710000 5                  TRA     s:13499
         5 000636   000642 710000 5                  TRA     s:13497
         5 000637   000642 710000 5                  TRA     s:13497
         5 000640   000645 710000 5                  TRA     s:13499
         5 000641   000642 710000 5                  TRA     s:13497

      503    13496    6                           CASE( 2, 3, 5 );

      504    13497    6                               K = 8;

  13497  5 000642   000010 235007                    LDA     8,DL
         5 000643   200020 755100                    STA     K,,AUTO
         5 000644   000647 710000 5                  TRA     s:13507

      505    13498    6                           CASE( ELSE );

      506    13499    6                               K = 10;

  13499  5 000645   000012 235007                    LDA     10,DL
         5 000646   200020 755100                    STA     K,,AUTO
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:81   

      507    13500    6                               END;

      508    13501                                %NUMBER( NUM1=J, BASE1=K, NUM2="VX_OL.MAX_A(I)", BASE2=K);

  13507  5 000647   200020 630500                    EPPR0   K,,AUTO
         5 000650   200046 450500                    STP0    @SECOND$+6,,AUTO
         5 000651   200017 631500                    EPPR1   J,,AUTO
         5 000652   200045 451500                    STP1    @SECOND$+5,,AUTO
         5 000653   000040 236000 6                  LDQ     32
         5 000654   200044 756100                    STQ     @SECOND$+4,,AUTO
         5 000655   000042 237000 6                  LDAQ    34
         5 000656   200042 757100                    STAQ    @SECOND$+2,,AUTO
         5 000657   200042 630500                    EPPR0   @SECOND$+2,,AUTO
         5 000660   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000661   000000 701000 xent               TSX1    VXD$B2C
         5 000662   000000 011000                    NOP     0

  13511  5 000663   200020 630500                    EPPR0   K,,AUTO
         5 000664   200046 450500                    STP0    @SECOND$+6,,AUTO
         5 000665   200016 720100                    LXL0    I,,AUTO
         5 000666   000015 631410 xsym               EPPR1   VX_OL+13,X0
         5 000667   200045 451500                    STP1    @SECOND$+5,,AUTO
         5 000670   000045 236000 6                  LDQ     37
         5 000671   200044 756100                    STQ     @SECOND$+4,,AUTO
         5 000672   000046 237000 6                  LDAQ    38
         5 000673   200042 757100                    STAQ    @SECOND$+2,,AUTO
         5 000674   200042 630500                    EPPR0   @SECOND$+2,,AUTO
         5 000675   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000676   000000 701000 xent               TSX1    VXD$B2C
         5 000677   000000 011000                    NOP     0

      509    13518    5                           P$ = VX_ON.NUM_A(I);

  13518  5 000700   200016 720100                    LXL0    I,,AUTO
         5 000701   000035 236010 xsym               LDQ     VX_ON+29,X0
         5 000702   200004 756100                    STQ     P$,,AUTO
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:82   

      510    13519    5                           VX_EFIELD3.COUNT = P$ -> P$LIT.COUNT;

  13519  5 000703   200004 470500                    LDP0    P$,,AUTO
         5 000704   000001 236100                    LDQ     1,,PR0
         5 000705   000000 552040 xsym               STBQ    VX_EFIELD3,'40'O

      511    13520    5                           VX_EFIELD3.CHARS = P$ -> P$LIT.TEXT;

  13520  5 000706   000001 236100                    LDQ     1,,PR0
         5 000707   000033 772000                    QRL     27
         5 000710   000000 621006                    EAX1    0,QL
         5 000711   040000 100540                    MLR     fill='040'O
         5 000712   000001 200011                    ADSC9   1,,PR0                   cn=1,n=*X1
         5 000713   000000 200117 xsym               ADSC9   VX_EFIELD3               cn=1,n=79

      512    13521                                %SCREAM(
      513    13522                                ERR#=E$OPT_MAX_VX,
      514    13523                                LEVEL=@E$W_VX,
      515    13524                                MID="'O'");

  13525  5 000714   000056 630400 6                  EPPR0   46
         5 000715   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000716   000000 701000 xent               TSX1    VXE$ERROR
         5 000717   000000 011000                    NOP     0

      516    13527    5                           VX_O.NUM_A(I) = VX_OL.MAX_A(I);

  13527  5 000720   200016 720100                    LXL0    I,,AUTO
         5 000721   000015 235010 xsym               LDA     VX_OL+13,X0
         5 000722   000035 755010 xsym               STA     VX_O+29,X0

      517    13528    5                           END; /* If j > VX_OL.MAX_A(I) then do; */

      518    13529    4                   END; /* If VX_OD.NUM_A(I) then do; */

      519    13530    3               END; /* Do i = 0 to sizew( VX_OL.MIN_A ) - 1; */
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:83   

  13530  5 000723   200016 235100                    LDA     I,,AUTO
         5 000724   000001 035007                    ADLA    1,DL
         5 000725   200016 755100                    STA     I,,AUTO
         5 000726   200016 235100                    LDA     I,,AUTO
         5 000727   000015 115007                    CMPA    13,DL
         5 000730   000514 602000 5                  TNC     s:13446

      520    13531        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:84   
      521    13532    3           IF VX_OD.SIN.SYSTEM THEN DO;

  13532  5 000731   000000 236000 xsym               LDQ     VX_OD
         5 000732   000200 316003                    CANQ    128,DU
         5 000733   000760 600000 5                  TZE     s:13552

      522    13533    3               VX_SHARED_LIB_ASS = @C_SYSTEM_KEY_WORD;

  13533  5 000734   000013 235007                    LDA     11,DL
         5 000735   000000 755000 xsym               STA     VX_SHARED_LIB_ASS

      523    13534    3               VX_SPC.B$.SKIP.DELTA = @YES;

  13534  5 000736   000001 235007                    LDA     1,DL
         5 000737   000040 755000 xsym               STA     VX_SPC+32

      524    13535    3               IF VX_OD.NUM.BREF

  13535  5 000740   000100 316007                    CANQ    64,DL
         5 000741   000755 600000 5                  TZE     s:13543

      525    13536    3               THEN
      526    13537    4               DO;

      527    13538    5                   DO I= 0 TO SIZEW(VX_SPC.B$.SKIP_A) - 1;

  13538  5 000742   200016 450100                    STZ     I,,AUTO
         5 000743   000752 710000 5                  TRA     s:13540+3

      528    13539    5                       VX_SPC.B$.SKIP_A(I) = @YES;

  13539  5 000744   000001 235007                    LDA     1,DL
         5 000745   200016 720100                    LXL0    I,,AUTO
         5 000746   000037 755010 xsym               STA     VX_SPC+31,X0

      529    13540    5                       END;

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:85   
  13540  5 000747   200016 236100                    LDQ     I,,AUTO
         5 000750   000001 036007                    ADLQ    1,DL
         5 000751   200016 756100                    STQ     I,,AUTO
         5 000752   200016 236100                    LDQ     I,,AUTO
         5 000753   000005 116007                    CMPQ    5,DL
         5 000754   000744 602000 5                  TNC     s:13539

      530    13541    4                   END;

      531    13542                    %NO_DATA_INSERT;

  13543  5 000755   000000 450000 xsym               STZ     VX_SPC_DATA_INSERT

      532    13545                    %NO_ROS;

  13546  5 000756   000000 450000 xsym               STZ     VX_ROS_ALLOWED

      533    13548                    %NO_DCBSLOTS;

  13549  5 000757   000036 450000 xsym               STZ     VX_O+30

      534    13551    3               END;

      535    13552    3           IF VX_OD.SIN.SLIB THEN DO;

  13552  5 000760   000000 236000 xsym               LDQ     VX_OD
         5 000761   000020 316003                    CANQ    16,DU
         5 000762   001023 600000 5                  TZE     s:13623

      536    13553    4               IF VX_OD.NUM.DBIAS THEN DO;

  13553  5 000763   000020 316007                    CANQ    16,DL
         5 000764   001000 600000 5                  TZE     s:13586

      537    13554    5                   IF VX_O.NUM.DBIAS ~= 0 THEN DO;

  13554  5 000765   000037 235000 xsym               LDA     VX_O+31
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:86   
         5 000766   001000 600000 5                  TZE     s:13586

      538    13555        /*E*  ERROR: VXO-E$DBIAS_SLIB_VX-0
      539    13556              MESSAGE: Invalid DBIAS for shared library generation; Value = %U1(OCTAL).
      540    13557              DESCRIPTION: Self-explanatory.
      541    13558        */
      542    13559                            %NUMBER(
      543    13560                            NUM1="VX_O.NUM.DBIAS",SIZE1=12,BASE1=8);

  13566  5 000767   000062 630400 6                  EPPR0   50
         5 000770   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000771   000000 701000 xent               TSX1    VXD$B2C
         5 000772   000000 011000                    NOP     0

      544    13577                            %SCREAM(
      545    13578                            ERR#=E$DBIAS_SLIB_VX,
      546    13579                            LEVEL=@E$F_VX,
      547    13580                            MID="'O'");

  13581  5 000773   000070 630400 6                  EPPR0   56
         5 000774   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000775   000000 701000 xent               TSX1    VXE$ERROR
         5 000776   000000 011000                    NOP     0

      548    13583    5                       GOTO QUIT;

  13583  5 000777   001175 710000 5                  TRA     QUIT

      549    13584    5                       END;
      550    13585    4                   END; /* If VX_OD.NUM.DBIAS then do; */
      551    13586    4               IF VX_OD.NUM.PBIAS THEN DO;

  13586  5 001000   000010 316007                    CANQ    8,DL
         5 001001   001016 600000 5                  TZE     s:13619

      552    13587    5                   IF VX_O.NUM.PBIAS ~= 229376 THEN DO;

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:87   
  13587  5 001002   000040 235000 xsym               LDA     VX_O+32
         5 001003   700000 115007                    CMPA    -32768,DL
         5 001004   001020 600000 5                  TZE     s:13620

      553    13588        /*E*  ERROR: VXO-E$PBIAS_SLIB_VX-0
      554    13589              MESSAGE: Invalid PBIAS for shared library generation; Value = %U1(OCTAL).
      555    13590              DESCRIPTION: Self-explanatory.
      556    13591        */
      557    13592                            %NUMBER(
      558    13593                            NUM1="VX_O.NUM.PBIAS",SIZE1=12,BASE1=8);

  13599  5 001005   000074 630400 6                  EPPR0   60
         5 001006   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 001007   000000 701000 xent               TSX1    VXD$B2C
         5 001010   000000 011000                    NOP     0

      559    13610                            %SCREAM(
      560    13611                            ERR#=E$PBIAS_SLIB_VX,
      561    13612                            LEVEL=@E$F_VX,
      562    13613                            MID="'O'");

  13614  5 001011   000102 630400 6                  EPPR0   66
         5 001012   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 001013   000000 701000 xent               TSX1    VXE$ERROR
         5 001014   000000 011000                    NOP     0

      563    13616    5                       GOTO QUIT;

  13616  5 001015   001175 710000 5                  TRA     QUIT

      564    13617    5                       END;
      565    13618    4                   END; /* If VX_OD.NUM.PBIAS then do; */
      566    13619    3               ELSE VX_O.NUM.PBIAS = 229376;

  13619  5 001016   700000 235007                    LDA     -32768,DL
         5 001017   000040 755000 xsym               STA     VX_O+32

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:88   
      567    13620    3               VX_SHARED_LIB_ASS = @C_SLIB_KEY_WORD;

  13620  5 001020   000016 235007                    LDA     14,DL
         5 001021   000000 755000 xsym               STA     VX_SHARED_LIB_ASS

      568    13621    3               GOTO NO_R;

  13621  5 001022   001052 710000 5                  TRA     NO_R

      569    13622    3               END;
      570    13623    3           ELSE IF VX_OD.SIN.ASLIB THEN DO;

  13623  5 001023   000040 316003                    CANQ    32,DU
         5 001024   001031 600000 5                  TZE     s:13630

      571    13624    3                   VX_SPC.B$.SKIP.DELTA = @YES;

  13624  5 001025   000001 235007                    LDA     1,DL
         5 001026   000040 755000 xsym               STA     VX_SPC+32

      572    13625                        %NO_DATA_INSERT;

  13626  5 001027   000000 450000 xsym               STZ     VX_SPC_DATA_INSERT

      573    13628    3                   GOTO REST_FOR_ASLIB;

  13628  5 001030   001053 710000 5                  TRA     REST_FOR_ASLIB

      574    13629    3                   END;
      575    13630    3               ELSE IF VX_OD.SIN.NOEDITING THEN DO;

  13630  5 001031   000100 316003                    CANQ    64,DU
         5 001032   001055 600000 5                  TZE     s:13651

      576    13631    3                       VX_SHARED_LIB_ASS = @C_NOEDITING_KEY_WORD;

  13631  5 001033   000014 235007                    LDA     12,DL
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:89   
         5 001034   000000 755000 xsym               STA     VX_SHARED_LIB_ASS

      577    13632    4                       DO I = 1 TO SIZEW( VX_SPC.B$.SKIP_A ) - 1;

  13632  5 001035   000001 235007                    LDA     1,DL
         5 001036   200016 755100                    STA     I,,AUTO
         5 001037   001046 710000 5                  TRA     s:13634+3

      578    13633    4                           VX_SPC.B$.SKIP_A(I) = @YES;

  13633  5 001040   000001 235007                    LDA     1,DL
         5 001041   200016 720100                    LXL0    I,,AUTO
         5 001042   000037 755010 xsym               STA     VX_SPC+31,X0

      579    13634    4                           END;

  13634  5 001043   200016 236100                    LDQ     I,,AUTO
         5 001044   000001 036007                    ADLQ    1,DL
         5 001045   200016 756100                    STQ     I,,AUTO
         5 001046   200016 236100                    LDQ     I,,AUTO
         5 001047   000005 116007                    CMPQ    5,DL
         5 001050   001040 602000 5                  TNC     s:13633

  13633  5 001051                       NO_D_R       null
      580    13635    3   NO_D_R:             ;
      581    13636                            %NO_DATA_INSERT;

  13637  5 001051   000000 450000 xsym               STZ     VX_SPC_DATA_INSERT

  13637  5 001052                       NO_R         null
      582    13639    3   NO_R:               ;
      583    13640                            %NO_TCB;

  13641  5 001052   000043 450000 xsym               STZ     VX_O+35

      584    13643    3   REST_FOR_ASLIB:
      585    13644                            %NO_ROS;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:90   

  13645  5 001053   000000 450000 xsym  REST_FOR_AS* STZ     VX_ROS_ALLOWED

      586    13647                            %NO_DCBSLOTS;

  13648  5 001054   000036 450000 xsym               STZ     VX_O+30

      587    13650    3                       END;

      588    13651    2           IF VX_O.MAP.NAME ~= 0

  13651  5 001055   000116 235000 xsym               LDA     VX_O+78
         5 001056   001061 601000 5                  TNZ     s:13653
         5 001057   000117 236000 xsym               LDQ     VX_O+79
         5 001060   001063 600000 5                  TZE     s:13654

      589    13652    2              OR
      590    13653    2              VX_O.MAP.VALUE ~= 0 THEN VX_O.OPT.MAP = 1;

  13653  5 001061   000001 236007                    LDQ     1,DL
         5 001062   000153 756000 xsym               STQ     VX_O+107

      591    13654    2           IF VX_GOT_ON_OVER = @YES

  13654  5 001063   000000 236000 xsym               LDQ     VX_GOT_ON_OVER
         5 001064   000001 116007                    CMPQ    1,DL
         5 001065   001177 601000 5                  TNZ     CONTINUE
         5 001066   000000 235000 xsym               LDA     VX_ON_OVER_RUF
         5 001067   000002 115007                    CMPA    2,DL
         5 001070   001177 601000 5                  TNZ     CONTINUE
         5 001071   000000 236000 xsym               LDQ     VX_RUF$
         5 001072   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 001073   001177 600000 5                  TZE     CONTINUE

      592    13655    2              AND
      593    13656    2              VX_ON_OVER_RUF = @C_ON_KEY_WORD
      594    13657    2              AND
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:91   
      595    13658    3              VX_RUF$ ~= ADDR(NIL) THEN DO;

      596    13659
      597    13660    3               F_O.NAME_ = VX_RUF$ -> VX$LST.P.NAME_;

  13660  5 001074   000000 470400 xsym               LDP0    VX_RUF$
         5 001075   000000 100500                    MLR     fill='000'O
         5 001076   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         5 001077   000006 000010 2                  ADSC9   F_O+6                    cn=0,n=8

      598    13661    3               F_O.ACCT_ = VX_RUF$ -> VX$LST.P.ACCT_;

  13661  5 001100   000000 100500                    MLR     fill='000'O
         5 001101   000007 000010                    ADSC9   7,,PR0                   cn=0,n=8
         5 001102   000024 000010 2                  ADSC9   F_O+20                   cn=0,n=8

      599    13662    3               F_O.PASS_ = VX_RUF$ -> VX$LST.P.PASS_;

  13662  5 001103   000000 100500                    MLR     fill='000'O
         5 001104   000011 000010                    ADSC9   9,,PR0                   cn=0,n=8
         5 001105   000010 000010 2                  ADSC9   F_O+8                    cn=0,n=8

      600    13663    3               F_O.SN_ = VX_RUF$ -> VX$LST.P.SN_;

  13663  5 001106   000000 100500                    MLR     fill='000'O
         5 001107   000013 000010                    ADSC9   11,,PR0                  cn=0,n=8
         5 001110   000002 000010 2                  ADSC9   F_O+2                    cn=0,n=8

      601    13664    3               F_O.WSN_ = VX_RUF$ -> VX$LST.P.WSN_;

  13664  5 001111   000000 100500                    MLR     fill='000'O
         5 001112   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
         5 001113   000032 000010 2                  ADSC9   F_O+26                   cn=0,n=8

      602    13665    3               CALL M$OPEN( F_O ) ALTRET( CONTINUE );

  13665  5 001114   000000 630400 2                  EPPR0   F_O
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:92   
         5 001115   450000 713400                    CLIMB   alt,open
         5 001116   410400 401760                    pmme    nvectors=18
         5 001117   001177 702000 5                  TSX2    CONTINUE

      603    13666    3               IF VX_ONLINE > 0 THEN L = @E$S_VX;

  13666  5 001120   000000 235000 xsym               LDA     VX_ONLINE
         5 001121   001125 600000 5                  TZE     s:13667

  13666  5 001122   000003 236007                    LDQ     3,DL
         5 001123   200021 756100                    STQ     L,,AUTO
         5 001124   001127 710000 5                  TRA     s:13672

      604    13667    3               ELSE L = @E$F_VX;

  13667  5 001125   000004 236007                    LDQ     4,DL
         5 001126   200021 756100                    STQ     L,,AUTO

      605    13668        /*E*  ERROR: VXO-E$ON_FILE_VX-0
      606    13669              MESSAGE: ON FILE %U1 exists.
      607    13670              DESCRIPTION: Self-explanatory.
      608    13671        */
      609    13672    3               VX_EFIELD1.COUNT = VX_RUF$ -> VX$LST.P.NAME_.NAME$ -> T$C.COUNT;

  13672  5 001127   000000 470400 xsym               LDP0    VX_RUF$
         5 001130   000006 471500                    LDP1    6,,PR0
         5 001131   100000 236100                    LDQ     0,,PR1
         5 001132   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      610    13673    3               VX_EFIELD1.CHARS = VX_RUF$ -> VX$LST.P.NAME_.NAME$ -> T$C.CHARS;

  13673  5 001133   100000 236100                    LDQ     0,,PR1
         5 001134   000033 772000                    QRL     27
         5 001135   000000 620006                    EAX0    0,QL
         5 001136   040000 100540                    MLR     fill='040'O
         5 001137   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         5 001140   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:93   

      611    13674                    %SCREAM(
      612    13675                    ERR#=E$ON_FILE_VX,
      613    13676                    LEVEL=L,
      614    13677                    MID="'O'");

  13678  5 001141   000020 237000 6                  LDAQ    16
         5 001142   200044 757100                    STAQ    @SECOND$+4,,AUTO
         5 001143   200021 631500                    EPPR1   L,,AUTO
         5 001144   200043 451500                    STP1    @SECOND$+3,,AUTO
         5 001145   000107 236000 6                  LDQ     71
         5 001146   200042 756100                    STQ     @SECOND$+2,,AUTO
         5 001147   200042 630500                    EPPR0   @SECOND$+2,,AUTO
         5 001150   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 001151   000000 701000 xent               TSX1    VXE$ERROR
         5 001152   000000 011000                    NOP     0

      615    13680        /*E*  ERROR: VXO-E$ON_FILE_CONT_VX-0
      616    13681              MESSAGE: Do you wish to overwrite the file?
      617    13682              DESCRIPTION: Self-explanatory.
      618    13683        */
      619    13684                    %SCREAM(
      620    13685                    ERR#=E$ON_FILE_CONT_VX,
      621    13686                    LEVEL=L,
      622    13687                    MID="'O'");

  13688  5 001153   000020 237000 6                  LDAQ    16
         5 001154   200044 757100                    STAQ    @SECOND$+4,,AUTO
         5 001155   200021 630500                    EPPR0   L,,AUTO
         5 001156   200043 450500                    STP0    @SECOND$+3,,AUTO
         5 001157   000111 236000 6                  LDQ     73
         5 001160   200042 756100                    STQ     @SECOND$+2,,AUTO
         5 001161   200042 630500                    EPPR0   @SECOND$+2,,AUTO
         5 001162   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 001163   000000 701000 xent               TSX1    VXE$ERROR
         5 001164   000000 011000                    NOP     0

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:94   
      623    13690    3               CALL VXY$YESNO( I );

  13690  5 001165   200016 630500                    EPPR0   I,,AUTO
         5 001166   200042 450500                    STP0    @SECOND$+2,,AUTO
         5 001167   200042 630500                    EPPR0   @SECOND$+2,,AUTO
         5 001170   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 001171   000000 701000 xent               TSX1    VXY$YESNO
         5 001172   000000 011000                    NOP     0

      624    13691    4               IF I = @NO THEN DO;

  13691  5 001173   200016 235100                    LDA     I,,AUTO
         5 001174   001177 601000 5                  TNZ     CONTINUE

      625    13692    4   QUIT:
      626    13693                        %ERROR_IT;

  13694  5 001175   000002 713400       QUIT         CLIMB   err
         5 001176   000000 401760                    pmme    nvectors=0

      627    13696    4                   END; /* If i = @NO then do; */

      628    13697    3              END; /* If VX_GOT_ON_OVER = @YES and VX_ON_OVER = @C_ON_KEY_WORD and VX_
             13697        RUF$ ~= addr(nil) */

      629    13698        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:95   
      630    13699    2   CONTINUE:
      631    13700         /*
      632    13701            Allocate a dummy for the following lists for boundary condition
      633    13702            on binary searches */
      634    13703    3           DO I = 1 TO SIZEW(VX_DEF_REC_A) -1;

  13703  5 001177   000001 235007       CONTINUE     LDA     1,DL
         5 001200   200016 755100                    STA     I,,AUTO
         5 001201   001245 710000 5                  TRA     s:13715+3

      635    13704    3               J = VX_DEF_REC_A(I);

  13704  5 001202   200016 720100                    LXL0    I,,AUTO
         5 001203   000000 235010 xsym               LDA     VX_DEF_REC_A,X0
         5 001204   200017 755100                    STA     J,,AUTO

      636    13705                    %ALLOCATE(
      637    13706                    PTR$=VX_CURR$,
      638    13707                    TYPE="VX_PASS1_ALL_TYPE(J)",
      639    13708                    SIZE="SIZEW(VXD$TMPLT)");

  13709  5 001205   000000 721005 xsym               LXL1    VX_PASS1_ALL_TYPE,AL
         5 001206   200017 722100                    LXL2    J,,AUTO
         5 001207   000000 723012 xsym               LXL3    VX_PASS1_ALL_TYPE,X2
         5 001210   000000 236011 xsym               LDQ     VX_M_ALL,X1
         5 001211   000000 136013 xsym               SBLQ    VX_M_FREE,X3
         5 001212   000002 116007                    CMPQ    2,DL
         5 001213   001230 604000 5                  TMI     s:13713

  13710  5 001214   000000 721012 xsym               LXL1    VX_PASS1_ALL_TYPE,X2
         5 001215   000000 723012 xsym               LXL3    VX_PASS1_ALL_TYPE,X2
         5 001216   000000 236013 xsym               LDQ     VX_M_FREE,X3
         5 001217   000000 470411 xsym               LDP0    VX_M_BASE_PTR,X1
         5 001220   000000 631506                    EPPR1   0,QL,PR0
         5 001221   000000 451400 xsym               STP1    VX_CURR$

  13711  5 001222   000000 721012 xsym               LXL1    VX_PASS1_ALL_TYPE,X2
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:96   
         5 001223   000000 723012 xsym               LXL3    VX_PASS1_ALL_TYPE,X2
         5 001224   000000 235013 xsym               LDA     VX_M_FREE,X3
         5 001225   000002 035007                    ADLA    2,DL
         5 001226   000000 755011 xsym               STA     VX_M_FREE,X1

  13712  5 001227   001242 710000 5                  TRA     s:13715

  13713  5 001230   000024 236000 6                  LDQ     20
         5 001231   200044 756100                    STQ     @SECOND$+4,,AUTO
         5 001232   000000 630412 xsym               EPPR0   VX_PASS1_ALL_TYPE,X2
         5 001233   200043 450500                    STP0    @SECOND$+3,,AUTO
         5 001234   000112 236000 6                  LDQ     74
         5 001235   200042 756100                    STQ     @SECOND$+2,,AUTO
         5 001236   200042 630500                    EPPR0   @SECOND$+2,,AUTO
         5 001237   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 001240   000000 701000 xent               TSX1    VXA$GET
         5 001241   000000 011000                    NOP     0

      640    13715    3               END; /* Do i = 1 to SIZEW(VX_DEF_REC_A) - 1; */

  13715  5 001242   200016 235100                    LDA     I,,AUTO
         5 001243   000001 035007                    ADLA    1,DL
         5 001244   200016 755100                    STA     I,,AUTO
         5 001245   000004 115007                    CMPA    4,DL
         5 001246   001202 602000 5                  TNC     s:13704

      641    13716
      642    13717         /*
      643    13718            And also for sections - boundary condition for sorts
      644    13719         */
      645    13720                %ALLOCATE(
      646    13721                PTR$=VX_CURR$,
      647    13722                TYPE=@SC_DS_1,
      648    13723                SIZE="SIZEW(VX$SC)");

  13724  5 001247   000007 236000 xsym               LDQ     VX_M_ALL+7
         5 001250   000007 136000 xsym               SBLQ    VX_M_FREE+7
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:97   
         5 001251   000003 116007                    CMPQ    3,DL
         5 001252   001262 604000 5                  TMI     s:13728

  13725  5 001253   000007 236000 xsym               LDQ     VX_M_FREE+7
         5 001254   000022 736000                    QLS     18
         5 001255   000007 036000 xsym               ADLQ    VX_M_BASE_PTR+7
         5 001256   000000 756000 xsym               STQ     VX_CURR$

  13726  5 001257   000003 236007                    LDQ     3,DL
         5 001260   000007 056000 xsym               ASQ     VX_M_FREE+7

  13727  5 001261   001266 710000 5                  TRA     s:13735

  13728  5 001262   000113 630400 6                  EPPR0   75
         5 001263   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 001264   000000 701000 xent               TSX1    VXA$GET
         5 001265   000000 011000                    NOP     0

      649    13730
      650    13731        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:98   
      651    13732         /*
      652    13733            Chain alternate shared library option
      653    13734         */
      654    13735    3           IF VX_O.FID.ALTSHARELIB$ ~= ADDR(NIL) THEN DO;

  13735  5 001266   000122 236000 xsym               LDQ     VX_O+82
         5 001267   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 001270   001277 600000 5                  TZE     s:13743

      655    13736    3               VX_ROOT$ -> VX$NODE.TAIL$ -> VX$LST.LINK$ = VX_O.FID.ALTSHARELIB$;

  13736  5 001271   000000 470400 xsym               LDP0    VX_ROOT$
         5 001272   000005 471500                    LDP1    5,,PR0
         5 001273   100000 756100                    STQ     0,,PR1

      656    13737    3               VX_ROOT$ -> VX$NODE.TAIL$ = VX_O.FID.ALTSHARELIB$;

  13737  5 001274   000122 236000 xsym               LDQ     VX_O+82
         5 001275   000000 470400 xsym               LDP0    VX_ROOT$
         5 001276   000005 756100                    STQ     5,,PR0

      657    13738    3               END; /* If VX_O.FID.ALTSHARELIB$ ~= addr(nil) then do; */

      658    13739
      659    13740         /*
      660    13741            Chain shared library options
      661    13742         */
      662    13743    3           IF VX_O.FID.SHARELIB$ ~= ADDR(NIL) THEN DO;

  13743  5 001277   000123 236000 xsym               LDQ     VX_O+83
         5 001300   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 001301   001337 600000 5                  TZE     s:13763

      663    13744    3               VX_ROOT$ -> VX$NODE.TAIL$ -> VX$LST.LINK$ = VX_O.FID.SHARELIB$;

  13744  5 001302   000000 470400 xsym               LDP0    VX_ROOT$
         5 001303   000005 471500                    LDP1    5,,PR0
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:99   
         5 001304   100000 756100                    STQ     0,,PR1

      664    13745    3               VX_ROOT$ -> VX$NODE.TAIL$ = VX_O.FID.SHARELIB$;

  13745  5 001305   000123 236000 xsym               LDQ     VX_O+83
         5 001306   000000 470400 xsym               LDP0    VX_ROOT$
         5 001307   000005 756100                    STQ     5,,PR0

      665    13746    3               VX_SLIB_INIT$ = VX_O.FID.SHARELIB$;

  13746  5 001310   000123 236000 xsym               LDQ     VX_O+83
         5 001311   000000 756000 xsym               STQ     VX_SLIB_INIT$

      666    13747                    %ALLOCATE(
      667    13748                    PTR$=VX_SLIB_HEAD$,
      668    13749                    TYPE=@GDP,
      669    13750                    SIZE="SIZEW(VX$LLIST)");

  13751  5 001312   000010 236000 xsym               LDQ     VX_M_ALL+8
         5 001313   000010 136000 xsym               SBLQ    VX_M_FREE+8
         5 001314   000002 116007                    CMPQ    2,DL
         5 001315   001325 604000 5                  TMI     s:13755

  13752  5 001316   000010 236000 xsym               LDQ     VX_M_FREE+8
         5 001317   000022 736000                    QLS     18
         5 001320   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
         5 001321   000000 756000 xsym               STQ     VX_SLIB_HEAD$

  13753  5 001322   000002 236007                    LDQ     2,DL
         5 001323   000010 056000 xsym               ASQ     VX_M_FREE+8

  13754  5 001324   001331 710000 5                  TRA     s:13757

  13755  5 001325   000116 630400 6                  EPPR0   78
         5 001326   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 001327   000000 701000 xent               TSX1    VXA$GET
         5 001330   000000 011000                    NOP     0
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:100  

      670    13757    3               VX_SLIB_HEAD$ -> VX$LLIST.LINK$ = ADDR(NIL);

  13757  5 001331   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 001332   000000 470400 xsym               LDP0    VX_SLIB_HEAD$
         5 001333   000000 756100                    STQ     0,,PR0

      671    13758    3               VX_SLIB_HEAD$ -> VX$LLIST.ITEM$ = VX_SLIB_INIT$;

  13758  5 001334   000000 236000 xsym               LDQ     VX_SLIB_INIT$
         5 001335   000000 470400 xsym               LDP0    VX_SLIB_HEAD$
         5 001336   000001 756100                    STQ     1,,PR0

      672    13759    3               END; /* If VX_O.FID.SHARELIB$ ~= addr(nil) then do; */

      673    13760         /*
      674    13761            Do pre-processing for UNSAT option
      675    13762         */
      676    13763    3           IF VX_OD.FIDN$.UNSAT$ THEN DO;

  13763  5 001337   000002 236000 xsym               LDQ     VX_OD+2
         5 001340   000002 316003                    CANQ    2,DU
         5 001341   001377 600000 5                  TZE     s:13783

      677    13764    3               PREV$ = ADDR( VX_O.FIDN$.UNSAT$ );

  13764  5 001342   000121 236000 6                  LDQ     81
         5 001343   200014 756100                    STQ     PREV$,,AUTO

      678    13765    3               CURR$ = VX_O.FIDN$.UNSAT$;

  13765  5 001344   000130 236000 xsym               LDQ     VX_O+88
         5 001345   200015 756100                    STQ     CURR$,,AUTO

      679    13766    4               DO WHILE( CURR$ ~= ADDR(NIL) );

  13766  5 001346   001364 710000 5                  TRA     s:13773
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:101  

      680    13767    4                   CURR$ -> VX$LST.PRIOR$ = PREV$;

  13767  5 001347   200014 236100                    LDQ     PREV$,,AUTO
         5 001350   200015 470500                    LDP0    CURR$,,AUTO
         5 001351   000002 756100                    STQ     2,,PR0

      681    13768    4                   CURR$ -> VX$LST.LIB = '0'B;

  13768  5 001352   000004 450100                    STZ     4,,PR0

      682    13769    4                   IF NOT CURR$ -> VX$LST.P.B.ACCT THEN

  13769  5 001353   000017 236100                    LDQ     15,,PR0
         5 001354   100000 316003                    CANQ    32768,DU
         5 001355   001360 601000 5                  TNZ     s:13771

      683    13770    4                       CURR$ -> VX$LST.LIBSRCH$ = VX_O.ACCTN$.LIBSRCH$;

  13770  5 001356   000134 236000 xsym               LDQ     VX_O+92
         5 001357   000003 756100                    STQ     3,,PR0

      684    13771    4                   PREV$ = CURR$;

  13771  5 001360   200015 236100                    LDQ     CURR$,,AUTO
         5 001361   200014 756100                    STQ     PREV$,,AUTO

      685    13772    4                   CURR$ = CURR$ -> VX$LST.LINK$;

  13772  5 001362   000000 236100                    LDQ     0,,PR0
         5 001363   200015 756100                    STQ     CURR$,,AUTO

      686    13773    4                   END; /* Do while( CURR$ ~= addr(nil) ); */

  13773  5 001364   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 001365   001347 601000 5                  TNZ     s:13767

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:102  
      687    13774    3               END; /* If VX_OD.FIDN$.UNSAT$ then do; */

      688    13775
      689    13776        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:103  
      690    13777    2           END; /* If VX_COMMAND ~= 0 then do; */

  13777  5 001366   001377 710000 5                  TRA     s:13783

      691    13778    2       ELSE DO; /* Implications for map */

      692    13779    2           IF VX_O.MAP.NAME = 0

  13779  5 001367   000116 236000 xsym               LDQ     VX_O+78
         5 001370   001375 601000 5                  TNZ     s:13782
         5 001371   000117 235000 xsym               LDA     VX_O+79
         5 001372   001375 601000 5                  TNZ     s:13782

      693    13780    2              AND
      694    13781    2              VX_O.MAP.VALUE = 0 THEN VX_O.MAP.NAME = 1;

  13781  5 001373   000001 235007                    LDA     1,DL
         5 001374   000116 755000 xsym               STA     VX_O+78

      695    13782    2           VX_O.OPT.MAP = 1;

  13782  5 001375   000001 235007                    LDA     1,DL
         5 001376   000153 755000 xsym               STA     VX_O+107

      696    13783    2           END;

  13783  5 001377   001437 710000 5                  TRA     s:13807

      697    13784        %EJECT;
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:104  
      698    13785    1   VXO$CONFLICT:

  13785  5 001400   200036 741300       VXO$CONFLICT STX1  ! L+13,,AUTO

      699    13786    1       PROC( FIRST$, SECOND$ );
      700    13787    2   DCL FIRST$ PTR;
      701    13788    2   DCL SECOND$ PTR;
      702    13789
      703    13790    2       CONFLICT = @TRUE_B;

  13790  5 001401   400000 236003                    LDQ     -131072,DU
         5 001402   200003 756100                    STQ     CONFLICT,,AUTO

      704    13791        /*E*  ERROR: VXO-E$OPT_CONFLICT_VX-0
      705    13792              MESSAGE: Option %U1 is in conflict with option %U2.
      706    13793              DESCRIPTION: Self-explanatory.
      707    13794        */
      708    13795    2       VX_EFIELD1.COUNT = FIRST$ -> P$LIT.COUNT;

  13795  5 001403   200037 470500                    LDP0    @FIRST$,,AUTO
         5 001404   000000 471500                    LDP1    0,,PR0
         5 001405   100001 236100                    LDQ     1,,PR1
         5 001406   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      709    13796    2       VX_EFIELD1.CHARS = FIRST$ -> P$LIT.TEXT;

  13796  5 001407   000000 471500                    LDP1    0,,PR0
         5 001410   100001 236100                    LDQ     1,,PR1
         5 001411   000033 772000                    QRL     27
         5 001412   000000 620006                    EAX0    0,QL
         5 001413   040000 100540                    MLR     fill='040'O
         5 001414   100001 200010                    ADSC9   1,,PR1                   cn=1,n=*X0
         5 001415   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      710    13797    2       VX_EFIELD2.COUNT = SECOND$ -> P$LIT.COUNT;

  13797  5 001416   200040 471500                    LDP1    @SECOND$,,AUTO
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:105  
         5 001417   100000 473500                    LDP3    0,,PR1
         5 001420   300001 236100                    LDQ     1,,PR3
         5 001421   000000 552040 xsym               STBQ    VX_EFIELD2,'40'O

      711    13798    2       VX_EFIELD2.CHARS = SECOND$ -> P$LIT.TEXT;

  13798  5 001422   100000 473500                    LDP3    0,,PR1
         5 001423   300001 236100                    LDQ     1,,PR3
         5 001424   000033 772000                    QRL     27
         5 001425   000000 620006                    EAX0    0,QL
         5 001426   040000 100540                    MLR     fill='040'O
         5 001427   300001 200010                    ADSC9   1,,PR3                   cn=1,n=*X0
         5 001430   000000 200117 xsym               ADSC9   VX_EFIELD2               cn=1,n=79

      712    13799            %SCREAM(
      713    13800            ERR#=E$OPT_CONFLICT_VX,
      714    13801            LEVEL=@E$F_VX,
      715    13802            MID="'O'");

  13803  5 001431   000123 630400 6                  EPPR0   83
         5 001432   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 001433   000000 701000 xent               TSX1    VXE$ERROR
         5 001434   000000 011000                    NOP     0

      716    13805    2   END VXO$CONFLICT;

  13805  5 001435   200036 221300                    LDX1  ! L+13,,AUTO
         5 001436   000001 702211                    TSX2  ! 1,X1

      717    13806
      718    13807    1   END VXO$IMPL;

  13807  5 001437   000000 702200 xent               TSX2  ! X66_ARET
      719    13808        %EOD;

PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:106  
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   VX_PSUBS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXO$IMPL.
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:107  

 **** Variables and constants ****

  ****  Section 002  Data  VXO$IMPL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2088)  r     1 F_O

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    37-0-0/w PTR         r     1 @FIRST$                   40-0-0/w PTR         r     1 @SECOND$
     3-0-0/w BIT         r     1 CONFLICT                  15-0-0/w PTR         r     1 CURR$
    *0-0-0/w PTR         r     1 FIRST$                    16-0-0/w UBIN        r     1 I
    17-0-0/w UBIN        r     1 J                         20-0-0/w UBIN        r     1 K
    21-0-0/w UBIN        r     1 L                          4-0-0/w PTR         r     1 P$
    14-0-0/w PTR         r     1 PREV$                     *0-0-0/w PTR         r     1 SECOND$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 VX_CHK_BLANK_COM_PROMOTE
     0-0-0/w UBIN        r     1 VX_COMMAND                 0-0-0/w PTR         r     1 VX_CURR$
     0-0-0/w UBIN        r     1 VX_DEF_REC_A(0:3)
     0-0-0/w STRC(720)   r     1 VX_EFIELD1                 0-0-0/w STRC(720)   r     1 VX_EFIELD2
     0-0-0/w STRC(720)   r     1 VX_EFIELD3                 0-0-0/w UBIN        r     1 VX_GOT_ON_OVER
     0-0-0/w SBIN        r     1 VX_M_ALL(0:8)
     0-0-0/w PTR         r     1 VX_M_BASE_PTR(0:8)
     0-0-0/w SBIN        r     1 VX_M_FREE(0:8)
     0-0-0/w STRC(4572)  r     1 VX_O                       0-0-0/b STRC(116)   r     1 VX_OD
     0-0-0/w STRC(936)   r     1 VX_OL                      0-0-0/w STRC(4176)  r     1 VX_ON
     0-0-0/w UBIN        r     1 VX_ONLINE                  0-0-0/w UBIN        r     1 VX_ON_OVER_RUF
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:108  
     0-0-0/w SBIN        r     1 VX_PASS1_ALL_TYPE(0:9)
     0-0-0/w PTR         r     1 VX_ROOT$                   0-0-0/w BIT         r     1 VX_ROS_ALLOWED
     0-0-0/w PTR         r     1 VX_RUF$                    0-0-0/w UBIN        r     1 VX_SHARED_LIB_ASS
     0-0-0/w PTR         r     1 VX_SLIB_HEAD$              0-0-0/w PTR         r     1 VX_SLIB_INIT$
     0-0-0/w STRC(1908)  r     1 VX_SPC                     0-0-0/w BIT         r     1 VX_SPC_DATA_INSERT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$RF                       0-0-0/w ASTR(45)    r     1 P$LIT
     0-0-0/w ASTR(9)     r     1 T$C                        0-0-0/c ASTR(9)     r     1 T$C_UNAL
     0-0-0/w STRC(72)    r     1 VX$LLIST                   0-0-0/w STRC(648)   r     1 VX$LST
     0-0-0/w STRC(3672)  r     1 VX$NODE                    0-0-0/w STRC(108)   r     1 VX$SC
     0-0-0/w STRC(72)    r     1 VXD$TMPLT


   Procedure VXO$IMPL requires 800 words for executable code.
   Procedure VXO$IMPL requires 40 words of local(AUTO) storage.
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:109  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:110  
          MINI XREF LISTING

B$ALT.CODE
     12312**DCL     12312--REDEF   12313--REDEF   12313--REDEF
B$ALT.ERR.ERR#
     12314**DCL     12314--REDEF
B$ALT.EVID
     12313**DCL     12313--REDEF   12313--REDEF
CONFLICT
     12901**DCL     13127<<ASSIGN  13421>>IF      13790<<ASSIGN
CONTINUE
     13703**LABEL   13665--CALLALT
CURR$
     12968**DCL     13765<<ASSIGN  13766>>DOWHILE 13767>>ASSIGN  13768>>ASSIGN  13769>>IF      13770>>ASSIGN
     13771>>ASSIGN  13772<<ASSIGN  13772>>ASSIGN
FIRST$ IN PROCEDURE VXO$CONFLICT
     13787**DCL     13786--PROC    13795>>ASSIGN  13796>>ASSIGN  13796>>ASSIGN
F_O
     13076**DCL     13665<>CALL
F_O.ACCT_
     13080**DCL     13661<<ASSIGN
F_O.ACSVEH_
     13078**DCL     13079--REDEF
F_O.ALTKEYS_
     13084**DCL     13085--REDEF   13085--REDEF
F_O.HDR_
     13083**DCL     13084--REDEF
F_O.NAME_
     13077**DCL     13660<<ASSIGN
F_O.PASS_
     13078**DCL     13662<<ASSIGN
F_O.SN_
     13076**DCL     13663<<ASSIGN
F_O.TAB_
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:111  
     13082**DCL     13083--REDEF
F_O.UHL_
     13076**DCL     13077--REDEF   13077--REDEF
F_O.V
     13085**DCL     13076--DCLINIT
F_O.V.FSN#
     13116**DCL     13116--REDEF   13116--REDEF
F_O.WSN_
     13082**DCL     13082--REDEF   13664<<ASSIGN
I
     12986**DCL     12987--REDEF   13445<<DOINDEX 13446>>IF      13447>>ASSIGN  13448>>IF      13453>>DOCASE
     13471>>CALL    13478>>ASSIGN  13487>>ASSIGN  13487>>ASSIGN  13490>>IF      13495>>DOCASE  13511>>CALL
     13518>>ASSIGN  13527>>ASSIGN  13527>>ASSIGN  13538<<DOINDEX 13539>>ASSIGN  13632<<DOINDEX 13633>>ASSIGN
     13690<>CALL    13691>>IF      13703<<DOINDEX 13704>>ASSIGN
J
     12988**DCL     12989--REDEF   13447<<ASSIGN  13448>>IF      13467<>CALL    13490>>IF      13507<>CALL
     13704<<ASSIGN  13709>>IF      13709>>IF      13710>>ASSIGN  13710>>ASSIGN  13711>>ASSIGN  13711>>ASSIGN
     13713>>CALL
K
     12990**DCL     12991--REDEF   13455<<ASSIGN  13457<<ASSIGN  13467<>CALL    13471<>CALL    13497<<ASSIGN
     13499<<ASSIGN  13507<>CALL    13511<>CALL
L
     12992**DCL     12993--REDEF   13666<<ASSIGN  13667<<ASSIGN  13678<>CALL    13688<>CALL
M$ERR
      5361**DCL-ENT 13694--CALL
M$OPEN
      5349**DCL-ENT 13665--CALL
NO_R
     13637**LABEL   13621--GOTO
P$
     12958**DCL     13478<<ASSIGN  13479>>ASSIGN  13480>>ASSIGN  13480>>ASSIGN  13518<<ASSIGN  13519>>ASSIGN
     13520>>ASSIGN  13520>>ASSIGN
P$LIT.COUNT
     12359**DCL     12362--IMP-SIZ 13479>>ASSIGN  13480>>ASSIGN  13519>>ASSIGN  13520>>ASSIGN  13795>>ASSIGN
     13796>>ASSIGN  13797>>ASSIGN  13798>>ASSIGN
P$LIT.TEXT
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:112  
     12362**DCL     13480>>ASSIGN  13520>>ASSIGN  13796>>ASSIGN  13798>>ASSIGN
PREV$
     12967**DCL     13764<<ASSIGN  13767>>ASSIGN  13771<<ASSIGN
QUIT
     13694**LABEL   13421--GOTO    13431--GOTO    13442--GOTO    13583--GOTO    13616--GOTO
REST_FOR_ASLIB
     13645**LABEL   13628--GOTO
SECOND$ IN PROCEDURE VXO$CONFLICT
     13788**DCL     13786--PROC    13797>>ASSIGN  13798>>ASSIGN  13798>>ASSIGN
T$C.CHARS
     12879**DCL     13673>>ASSIGN
T$C.COUNT
     12878**DCL     12879--IMP-SIZ 13672>>ASSIGN  13673>>ASSIGN
T$C_UNAL.COUNT
     12881**DCL     12882--IMP-SIZ
VX$LLIST
     12756**DCL     13751--IF      13753--ASSIGN  13755--CALL
VX$LLIST.ITEM$
     12758**DCL     13758<<ASSIGN
VX$LLIST.LINK$
     12757**DCL     13757<<ASSIGN
VX$LST.LIB
     12697**DCL     13768<<ASSIGN
VX$LST.LIBSRCH$
     12695**DCL     13770<<ASSIGN
VX$LST.LINK$
     12689**DCL     13736<<ASSIGN  13744<<ASSIGN  13772>>ASSIGN
VX$LST.OBJECT_NAME$
     12692**DCL     12693--REDEF
VX$LST.P.ACCT_
     12706**DCL     13661>>ASSIGN
VX$LST.P.B.ACCT
     12729**DCL     13769>>IF
VX$LST.P.NAME_
     12701**DCL     13660>>ASSIGN
VX$LST.P.NAME_.NAME$
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:113  
     12705**DCL     13672>>ASSIGN  13673>>ASSIGN  13673>>ASSIGN
VX$LST.P.PASS_
     12711**DCL     13662>>ASSIGN
VX$LST.P.SN_
     12716**DCL     13663>>ASSIGN
VX$LST.P.WSN_
     12721**DCL     13664>>ASSIGN
VX$LST.PRIOR$
     12693**DCL     13767<<ASSIGN
VX$LST.SC_HEAD$
     12694**DCL     12695--REDEF
VX$LST.SC_TAIL$
     12696**DCL     12697--REDEF
VX$NODE.ADDR_START_A
     12416**DCL     12417--REDEF
VX$NODE.ADDR_STOP_A
     12421**DCL     12422--REDEF
VX$NODE.L_PREV_SIZE
     12474**DCL     12485--REDEF
VX$NODE.L_SC_START
     12493**DCL     12498--REDEF
VX$NODE.L_SC_STOP
     12499**DCL     12504--REDEF
VX$NODE.L_SIZE
     12462**DCL     12473--REDEF
VX$NODE.L_START
     12438**DCL     12449--REDEF
VX$NODE.L_STOP
     12450**DCL     12461--REDEF
VX$NODE.PROMOTE_HEAD
     12505**DCL     12508--REDEF
VX$NODE.PROMOTE_TAIL
     12509**DCL     12512--REDEF
VX$NODE.SON$
     12404**DCL     13290>>IF      13330>>IF
VX$NODE.START_PAGE#_A
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:114  
     12426**DCL     12427--REDEF
VX$NODE.STOP_PAGE#_A
     12431**DCL     12432--REDEF
VX$NODE.TAIL$
     12410**DCL     13736>>ASSIGN  13737<<ASSIGN  13744>>ASSIGN  13745<<ASSIGN
VX$SC
     12543**DCL     13724--IF      13726--ASSIGN  13728--CALL
VX$SECT.MBZ
     12654**DCL     12656--REDEF   12660--REDEF
VXA$GET
     12928**DCL-ENT 13713--CALL    13728--CALL    13755--CALL
VXD$B2C
     12926**DCL-ENT 13467--CALL    13471--CALL    13507--CALL    13511--CALL    13566--CALL    13599--CALL
VXD$TMPLT
     12787**DCL     13709--IF      13711--ASSIGN  13713--CALL
VXD$TMPLT.AD.ISADDR
     12810**DCL     12812--REDEF
VXD$TMPLT.LFLAGS
     12823**DCL     12836--REDEF
VXD$TMPLT.VALUE
     12788**DCL     12790--REDEF
VXE$ERROR
     12919**DCL-ENT 13296--CALL    13325--CALL    13336--CALL    13485--CALL    13525--CALL    13581--CALL
     13614--CALL    13678--CALL    13688--CALL    13803--CALL
VXO$CONFLICT
     13786**PROC    13137--CALL    13146--CALL    13155--CALL    13164--CALL    13173--CALL    13182--CALL
     13191--CALL    13200--CALL    13211--CALL    13220--CALL    13229--CALL    13238--CALL    13247--CALL
     13256--CALL    13265--CALL    13274--CALL    13283--CALL    13303--CALL    13312--CALL    13343--CALL
     13352--CALL    13361--CALL    13370--CALL    13379--CALL    13388--CALL    13397--CALL    13406--CALL
     13415--CALL    13426--CALL    13437--CALL
VXY$YESNO
     12931**DCL-ENT 13690--CALL
VX_BIAS.A
      9852**DCL      9853--REDEF
VX_CBUF.CHARS_A
      9786**DCL      9787--REDEF
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:115  
VX_CHK_BLANK_COM_PROMOTE
     10790**DCL     13126<<ASSIGN
VX_COMMAND
      9795**DCL     13125>>IF
VX_CONST_DCB.ACTPOS
     10968**DCL     10968--REDEF
VX_CONST_DCB.ARS#
     10927**DCL     10927--REDEF
VX_CONST_DCB.ATTR#
     10957**DCL     10957--REDEF   10959--REDEF
VX_CONST_DCB.BORROW
     10979**DCL     10979--REDEF   10979--REDEF   10979--REDEF
VX_CONST_DCB.EOMCHAR#
     10934**DCL     10935--REDEF
VX_CONST_DCB.FLDID
     10971**DCL     10972--REDEF
VX_CONST_DCB.FORM$
     10963**DCL     10963--REDEF
VX_CONST_DCB.FSECT
     10986**DCL     10986--REDEF
VX_CONST_DCB.FSN#
     10953**DCL     10953--REDEF   10953--REDEF   10954--REDEF
VX_CONST_DCB.HEADER$
     10962**DCL     10963--REDEF
VX_CONST_DCB.IXTNSIZE#
     10959**DCL     10960--REDEF
VX_CONST_DCB.LASTSTA$
     10943**DCL     10943--REDEF
VX_CONST_DCB.LVL
     10980**DCL     10980--REDEF
VX_CONST_DCB.NAME#.C
     10943**DCL     10944--REDEF
VX_CONST_DCB.NOEOF
     10975**DCL     10975--REDEF
VX_CONST_DCB.NRECS#
     10960**DCL     10960--REDEF
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:116  
VX_CONST_DCB.NRECX
     10987**DCL     10987--REDEF
VX_CONST_DCB.OHDR
     10976**DCL     10976--REDEF
VX_CONST_DCB.ORG#
     10951**DCL     10952--REDEF
VX_CONST_DCB.PRECNO
     10984**DCL     10984--REDEF
VX_CONST_DCB.RCSZ
     10992**DCL     10992--REDEF
VX_CONST_DCB.RES#
     10945**DCL     10945--REDEF
VX_CONST_DCB.SETX
     10964**DCL     10964--REDEF
VX_CONST_DCB.TAB$
     10963**DCL     10963--REDEF
VX_CONST_DCB.TDA
     10983**DCL     10984--REDEF
VX_CONST_DCB.WSN#
     10945**DCL     10946--REDEF
VX_CURR$
      9821**DCL     13710<<ASSIGN  13713<>CALL    13725<<ASSIGN  13728<>CALL
VX_DEF_REC_A
     10493**DCL     13703--DOINDEX 13704>>ASSIGN
VX_EBUF.CHARS_A
     10375**DCL     10376--REDEF
VX_EFIELD1.CHARS
     10384**DCL     10385--REDEF   13673<<ASSIGN  13796<<ASSIGN
VX_EFIELD1.CHARS_A
     10385**DCL     13467<>CALL    13507<>CALL    13566<>CALL    13599<>CALL
VX_EFIELD1.COUNT
     10383**DCL     13672<<ASSIGN  13795<<ASSIGN
VX_EFIELD2.CHARS
     10388**DCL     10389--REDEF   13798<<ASSIGN
VX_EFIELD2.CHARS_A
     10389**DCL     13471<>CALL    13511<>CALL
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:117  
VX_EFIELD2.COUNT
     10387**DCL     13797<<ASSIGN
VX_EFIELD3.CHARS
     10392**DCL     10393--REDEF   13480<<ASSIGN  13520<<ASSIGN
VX_EFIELD3.COUNT
     10391**DCL     13479<<ASSIGN  13519<<ASSIGN
VX_EI_KEY_BUF.KEY
     10768**DCL     10769--REDEF
VX_ERRORS
      9829**DCL      9840--REDEF
VX_ERRORS.CONFLICT_A
      9835**DCL      9836--REDEF
VX_ERRORS.UNSAT_A
      9831**DCL      9832--REDEF
VX_GOT_ON_OVER
      9808**DCL     13654>>IF
VX_IMAGE_DATA.CPAGE#_A
      8966**DCL      8967--REDEF
VX_IMAGE_DATA.NODE_A$
      8978**DCL      8979--REDEF
VX_IMAGE_DATA.START_A$
      8970**DCL      8971--REDEF
VX_IMAGE_DATA.STOP_A$
      8974**DCL      8975--REDEF
VX_IMAGE_DS3.CPAGE#_A
      9035**DCL      9036--REDEF
VX_IMAGE_DS3.NODE_A$
      9047**DCL      9048--REDEF
VX_IMAGE_DS3.START_A$
      9039**DCL      9040--REDEF
VX_IMAGE_DS3.STOP_A$
      9043**DCL      9044--REDEF
VX_IMAGE_DS4.CPAGE#_A
      9058**DCL      9059--REDEF
VX_IMAGE_DS4.NODE_A$
      9070**DCL      9071--REDEF
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:118  
VX_IMAGE_DS4.START_A$
      9062**DCL      9063--REDEF
VX_IMAGE_DS4.STOP_A$
      9066**DCL      9067--REDEF
VX_IMAGE_DS5.CPAGE#_A
      9081**DCL      9082--REDEF
VX_IMAGE_DS5.NODE_A$
      9093**DCL      9094--REDEF
VX_IMAGE_DS5.START_A$
      9085**DCL      9086--REDEF
VX_IMAGE_DS5.STOP_A$
      9089**DCL      9090--REDEF
VX_IMAGE_DS6.CPAGE#_A
      9104**DCL      9105--REDEF
VX_IMAGE_DS6.NODE_A$
      9116**DCL      9117--REDEF
VX_IMAGE_DS6.START_A$
      9108**DCL      9109--REDEF
VX_IMAGE_DS6.STOP_A$
      9112**DCL      9113--REDEF
VX_IMAGE_DS7.CPAGE#_A
      9127**DCL      9128--REDEF
VX_IMAGE_DS7.NODE_A$
      9139**DCL      9140--REDEF
VX_IMAGE_DS7.START_A$
      9131**DCL      9132--REDEF
VX_IMAGE_DS7.STOP_A$
      9135**DCL      9136--REDEF
VX_IMAGE_DS8.CPAGE#_A
      9150**DCL      9151--REDEF
VX_IMAGE_DS8.NODE_A$
      9162**DCL      9163--REDEF
VX_IMAGE_DS8.START_A$
      9154**DCL      9155--REDEF
VX_IMAGE_DS8.STOP_A$
      9158**DCL      9159--REDEF
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:119  
VX_IMAGE_PROC.CPAGE#_A
      8989**DCL      8990--REDEF
VX_IMAGE_PROC.NODE_A$
      9001**DCL      9002--REDEF
VX_IMAGE_PROC.START_A$
      8993**DCL      8994--REDEF
VX_IMAGE_PROC.STOP_A$
      8997**DCL      8998--REDEF
VX_IMAGE_ROS.CPAGE#_A
      9012**DCL      9013--REDEF
VX_IMAGE_ROS.NODE_A$
      9024**DCL      9025--REDEF
VX_IMAGE_ROS.START_A$
      9016**DCL      9017--REDEF
VX_IMAGE_ROS.STOP_A$
      9020**DCL      9021--REDEF
VX_M_ALL
      9863**DCL     13709>>IF      13724>>IF      13751>>IF
VX_M_BASE_PTR
      9865**DCL     13710>>ASSIGN  13725>>ASSIGN  13752>>ASSIGN
VX_M_FREE
      9861**DCL     13709>>IF      13710>>ASSIGN  13711<<ASSIGN  13711>>ASSIGN  13724>>IF      13725>>ASSIGN
     13726<<ASSIGN  13726>>ASSIGN  13751>>IF      13752>>ASSIGN  13753<<ASSIGN  13753>>ASSIGN
VX_M_VECTOR.F
      8817**DCL      8821--REDEF
VX_M_VECTOR_DP.F
      8852**DCL      8856--REDEF
VX_O.ACCTN$.LIBSRCH$
      9983**DCL     13770>>ASSIGN
VX_O.ACCTN_A$
      9981**DCL      9982--REDEF
VX_O.DCB_MATCH_A$
      9990**DCL      9991--REDEF
VX_O.DCB_MATCH_HIT_A
      9996**DCL      9997--REDEF
VX_O.FID.ALTSHARELIB$
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:120  
      9969**DCL     13735>>IF      13736>>ASSIGN  13737>>ASSIGN
VX_O.FID.SHARELIB$
      9970**DCL     13743>>IF      13744>>ASSIGN  13745>>ASSIGN  13746>>ASSIGN
VX_O.FIDN$.UNSAT$
      9977**DCL     13764--ASSIGN  13765>>ASSIGN
VX_O.FIDN_A$
      9975**DCL      9976--REDEF
VX_O.FID_A$
      9967**DCL      9968--REDEF
VX_O.INCLUDE_A$
      9987**DCL      9988--REDEF
VX_O.MAP.NAME
      9963**DCL     13651>>IF      13779>>IF      13781<<ASSIGN
VX_O.MAP.VALUE
      9964**DCL     13651>>IF      13779>>IF
VX_O.MAP_A
      9961**DCL      9962--REDEF
VX_O.NODCB_A
     10018**DCL     10019--REDEF
VX_O.NUM.DBIAS
      9911**DCL     13554>>IF      13566<>CALL
VX_O.NUM.DCBSLOTS
      9910**DCL     13549<<ASSIGN  13648<<ASSIGN
VX_O.NUM.PBIAS
      9912**DCL     13587>>IF      13599<>CALL    13619<<ASSIGN
VX_O.NUM.TCB
      9915**DCL     13641<<ASSIGN
VX_O.NUM_A
      9906**DCL      9908--REDEF   13447>>ASSIGN  13487<<ASSIGN  13527<<ASSIGN
VX_O.OPT.MAP
     10008**DCL     13653<<ASSIGN  13782<<ASSIGN
VX_O.OPT_A
     10006**DCL     10007--REDEF
VX_O.PRIV_A
      9922**DCL      9924--REDEF
VX_O.SIN.PROMOTE
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:121  
      9893**DCL     13126>>IF
VX_O.SIN.PROMOTE_BLANK
      9891**DCL     13126>>IF
VX_O.SIN_A
      9875**DCL      9876--REDEF
VX_O.TCB_A
     10002**DCL     10003--REDEF
VX_OD.ACCTN_A$
     10179**DCL     10180--REDEF
VX_OD.DCB_MATCH.LO$
     10193**DCL     13199>>IF      13282>>IF      13414>>IF
VX_OD.DCB_MATCH.OU$
     10192**DCL     13190>>IF      13273>>IF      13405>>IF
VX_OD.DCB_MATCH.SI$
     10190**DCL     13172>>IF      13255>>IF      13387>>IF
VX_OD.DCB_MATCH.UI$
     10191**DCL     13181>>IF      13264>>IF      13396>>IF
VX_OD.DCB_MATCH_A$
     10188**DCL     10189--REDEF
VX_OD.FID.ALTSHARELIB$
     10167**DCL     13163>>IF      13311>>IF      13369>>IF
VX_OD.FID.SHARELIB$
     10168**DCL     13378>>IF
VX_OD.FIDN$.UNSAT$
     10175**DCL     13763>>IF
VX_OD.FIDN_A$
     10173**DCL     10174--REDEF
VX_OD.FID_A$
     10165**DCL     10166--REDEF
VX_OD.INCLUDE_A$
     10185**DCL     10186--REDEF
VX_OD.MAP_A
     10159**DCL     10160--REDEF
VX_OD.NODCB_A
     10203**DCL     10204--REDEF
VX_OD.NUM.BREF
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:122  
     10108**DCL     13228>>IF      13342>>IF      13423>>IF      13535>>IF
VX_OD.NUM.DBIAS
     10110**DCL     13553>>IF
VX_OD.NUM.DCBSLOTS
     10109**DCL     13154>>IF      13237>>IF      13351>>IF
VX_OD.NUM.PBIAS
     10111**DCL     13586>>IF
VX_OD.NUM.TCB
     10114**DCL     13246>>IF      13360>>IF
VX_OD.NUM_A
     10106**DCL     10107--REDEF   13446>>IF
VX_OD.PRIV_A
     10121**DCL     10122--REDEF
VX_OD.SIN.ASLIB
     10089**DCL     13145>>IF      13210>>IF      13289>>IF      13623>>IF
VX_OD.SIN.NOBREF
     10079**DCL     13423>>IF      13425>>IF
VX_OD.SIN.NOEDITING
     10088**DCL     13136>>IF      13206>>IF      13630>>IF
VX_OD.SIN.NWARN
     10104**DCL     13434>>IF      13436>>IF
VX_OD.SIN.SLIB
     10090**DCL     13219>>IF      13302>>IF      13319>>IF      13327<<ASSIGN  13329>>IF      13552>>IF
VX_OD.SIN.SYSTEM
     10087**DCL     13132>>IF      13532>>IF
VX_OD.SIN.WARN
     10103**DCL     13434>>IF
VX_OD.SIN_A
     10075**DCL     10076--REDEF
VX_OD.VECTOR_
     10195**DCL     13319>>IF
VX_OD.VECTOR_A$
     10194**DCL     10195--REDEF
VX_OL.MAX_A
     10050**DCL     10052--REDEF   13490>>IF      13511<>CALL    13527>>ASSIGN
VX_OL.MIN_A
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:123  
     10035**DCL     10036--REDEF   13445--DOINDEX 13448>>IF      13471<>CALL    13487>>ASSIGN
VX_ON.ACCTN_A$
     10324**DCL     10326--REDEF
VX_ON.DCB_MATCH.LO$
     10341**DCL     13200<>CALL    13283<>CALL    13415<>CALL
VX_ON.DCB_MATCH.OU$
     10340**DCL     13191<>CALL    13274<>CALL    13406<>CALL
VX_ON.DCB_MATCH.SI$
     10338**DCL     13173<>CALL    13256<>CALL    13388<>CALL
VX_ON.DCB_MATCH.UI$
     10339**DCL     13182<>CALL    13265<>CALL    13397<>CALL
VX_ON.DCB_MATCH_A$
     10335**DCL     10337--REDEF
VX_ON.FID.ALTSHARELIB$
     10311**DCL     13164<>CALL    13312<>CALL    13370<>CALL
VX_ON.FID.SHARELIB$
     10312**DCL     13379<>CALL
VX_ON.FIDN_A$
     10317**DCL     10319--REDEF
VX_ON.FID_A$
     10308**DCL     10310--REDEF
VX_ON.INCLUDE_A$
     10331**DCL     10333--REDEF
VX_ON.MAP_A
     10301**DCL     10303--REDEF
VX_ON.NODCB_A$
     10351**DCL     10352--REDEF
VX_ON.NUM.BREF
     10249**DCL     13229<>CALL    13343<>CALL    13426<>CALL
VX_ON.NUM.DCBSLOTS
     10250**DCL     13155<>CALL    13238<>CALL    13352<>CALL
VX_ON.NUM.TCB
     10255**DCL     13247<>CALL    13361<>CALL
VX_ON.NUM_A
     10246**DCL     10248--REDEF   13478>>ASSIGN  13518>>ASSIGN
VX_ON.PRIV_A
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:124  
     10262**DCL     10264--REDEF
VX_ON.SIN.ASLIB
     10229**DCL     13146<>CALL    13211<>CALL    13303<>CALL    13312<>CALL
VX_ON.SIN.NOBREF
     10219**DCL     13426<>CALL
VX_ON.SIN.NOEDITING
     10228**DCL     13137<>CALL    13211<>CALL    13220<>CALL    13229<>CALL    13238<>CALL    13247<>CALL
     13256<>CALL    13265<>CALL    13274<>CALL    13283<>CALL
VX_ON.SIN.NWARN
     10244**DCL     13437<>CALL
VX_ON.SIN.SLIB
     10230**DCL     13220<>CALL    13303<>CALL    13343<>CALL    13352<>CALL    13361<>CALL    13370<>CALL
     13379<>CALL    13388<>CALL    13397<>CALL    13406<>CALL    13415<>CALL
VX_ON.SIN.SYSTEM
     10227**DCL     13137<>CALL    13146<>CALL    13155<>CALL    13164<>CALL    13173<>CALL    13182<>CALL
     13191<>CALL    13200<>CALL
VX_ON.SIN.WARN
     10243**DCL     13437<>CALL
VX_ON.SIN_A
     10214**DCL     10216--REDEF
VX_ON.VECTOR_A$
     10342**DCL     10343--REDEF
VX_ONLINE
      9872**DCL     13666>>IF
VX_ON_OVER_RUF
      9797**DCL     13654>>IF
VX_OUHEAD.VERSION
      9661**DCL      9663--REDEF
VX_OU_HEAD
      9604**DCL      9643--REDEF
VX_OU_HEAD.REC_A
      9616**DCL      9619--REDEF
VX_O_KEY_BUF.FORM0
      8865**DCL      8868--REDEF    8875--REDEF
VX_O_KEY_BUF_L.FORM0
      8888**DCL      8891--REDEF    8898--REDEF
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:125  
VX_PASS1_ALL_TYPE
     10489**DCL     13709>>IF      13709>>IF      13710>>ASSIGN  13710>>ASSIGN  13711>>ASSIGN  13711>>ASSIGN
     13713<>CALL
VX_PASS2_REF.OU.L_START
     10554**DCL     10559--REDEF
VX_PASS2_REF.OU.L_STOP
     10560**DCL     10565--REDEF
VX_PASS2_REF.OU.MAX
     10548**DCL     10553--REDEF
VX_PASS2_REF.OU.SIZE
     10566**DCL     10571--REDEF
VX_PASS2_REF.SAT.COUNT
     10593**DCL     10599--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10600**DCL     10606--REDEF
VX_PASS2_REF.SAT.L_START
     10579**DCL     10585--REDEF
VX_PASS2_REF.SAT.L_STOP
     10586**DCL     10592--REDEF
VX_PASS2_REF.SAT.MAX
     10573**DCL     10578--REDEF
VX_PASS2_REF.UNSAT.L_START
     10641**DCL     10646--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10647**DCL     10652--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10653**DCL     10658--REDEF
VX_PASS2_REF.UNSAT.MAX
     10635**DCL     10640--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10665**DCL     10670--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10659**DCL     10664--REDEF
VX_PHRASE.PHRASE
     10067**DCL     10069--REDEF
VX_PROGRAM_BIAS.A
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:126  
      9845**DCL      9846--REDEF
VX_ROOT$
      9818**DCL     13290>>IF      13330>>IF      13736>>ASSIGN  13737>>ASSIGN  13744>>ASSIGN  13745>>ASSIGN
VX_ROS_ALLOWED
     10777**DCL     13546<<ASSIGN  13645<<ASSIGN
VX_RUF$
      9819**DCL     13654>>IF      13660>>ASSIGN  13661>>ASSIGN  13662>>ASSIGN  13663>>ASSIGN  13664>>ASSIGN
     13672>>ASSIGN  13673>>ASSIGN  13673>>ASSIGN
VX_R_KEY_BUF.FORM0
      8914**DCL      8918--REDEF    8924--REDEF
VX_SD.A
      8542**DCL      8543--REDEF
VX_SHARED_LIB_ASS
     10778**DCL     13533<<ASSIGN  13620<<ASSIGN  13631<<ASSIGN
VX_SLIB_HEAD$
     10438**DCL     13752<<ASSIGN  13755<>CALL    13757>>ASSIGN  13758>>ASSIGN
VX_SLIB_INIT$
     10440**DCL     13746<<ASSIGN  13758>>ASSIGN
VX_SPC.B$.MINE
     10736**DCL     10742--REDEF
VX_SPC.B$.NAME
     10715**DCL     10721--REDEF
VX_SPC.B$.SKIP
     10729**DCL     10735--REDEF
VX_SPC.B$.SKIP.DELTA
     10731**DCL     13534<<ASSIGN  13624<<ASSIGN
VX_SPC.B$.SKIP_A
     10735**DCL     13538--DOINDEX 13539<<ASSIGN  13632--DOINDEX 13633<<ASSIGN
VX_SPC.B$.VALUE
     10722**DCL     10728--REDEF
VX_SPC.SEG.NAME
     10684**DCL     10690--REDEF
VX_SPC.SEG.VALUE
     10691**DCL     10697--REDEF
VX_SPC_DATA_INSERT
     10776**DCL     13543<<ASSIGN  13626<<ASSIGN  13637<<ASSIGN
PL6.E3A0      #001=VXO$IMPL File=VXO$IMPL.:E05TSI                                WED 07/30/97 08:25 Page:127  
VX_TSX0_OVERLAY.H
     10459**DCL     10462--REDEF

PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:128  
      720        1        /*M* VXO$PATCH - Builds an object unit for the DPATCH and IPATCH options. */
      721        2        /*T***********************************************************/
      722        3        /*T*                                                         */
      723        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      724        5        /*T*                                                         */
      725        6        /*T***********************************************************/
      726        7        /*F* NAME:        VXO$PATCH
      727        8             PURPOSE:     Generate an object unit file for the patch space defined
      728        9                          by the DPATCH and IPATCH link options.
      729       10             ENTRY:       VXO$DEL_PATCH_FILE - deletes *********************B_PATCH.
      730       11             DESCRIPTION:
      731       12                  VXO$PATCH generates an object unit file, ********************B_PATCH,
      732       13                  for the patch space area defined by the DPATCH and IPATCH link
      733       14                  options.  The object unit contains an procedure section and a data
      734       15                  section.  The primary entdef B_PATCHI defines the start of
      735       16                  the procedure section and the start of the instruction patch
      736       17                  space. The instruction patch space (its size is determined by
      737       18                  the the IPATCH option) is followed by a header for the instruction
      738       19                  patch space (SYMDEF B_PATCHIH) and a header for the data patch
      739       20                  space (SYMDEF B_PATCHDH).  Each header contains a pointer to the
      740       21                  start of the patch space ( ADDR(B_PATCHI) for B_PATCHIH and
      741       22                  ADDR(B_PATCHD) for B_PATCHDH) and a word containing the size of the
      742       23                  patch space ( VX_O.NUM.IPATCH for B_PATCHIH and VX_O.NUM.DPATCH for
      743       24                  B_PATCHDH).  The symdef B_PATCHD defines the start of the data
      744       25                  section.  The size of the data area is defined by the DPATCH option.
      745       26                  A VX$LST element is allocated for the patch space object unit file
      746       27                  and is added to the file list for the root node.
      747       28        */
      748       29        VXO$PATCH: PROC;
      749       30
      750       31         /*
      751       32            Include files
      752       33         */
      753       34        %INCLUDE CP_6;
      754      115        %INCLUDE CP_6_SUBS;
      755      655        %INCLUDE B$OBJECT_C;
      756     4085        %INCLUDE XU_MACRO_C;
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:129  
      757     7191        %INCLUDE VX_SUBS_C;
      758     7409        %INCLUDE VX_MACRO_C;
      759     8546        %INCLUDE VX_DATA_R;
      760    10165        %INCLUDE VX_FIXED_R;
      761    10827        %INCLUDE VX_PERR_C;
      762    11081        %INCLUDE B_SEGIDS_C;
      763    11620        %VX$NODE;

             11632    1   /*******************************************************************************
             11633    1   *                                                                              *
             11634    1   *                          VX$NODE                                                 *
             11635    1   *                                                                              *
             11636    1   *******************************************************************************/

             11652    1   DCL 1 VX$NODE      ALIGNED    BASED,
             11653    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             11654    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             11655    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             11656    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             11657    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             11658                              to list of file nodes for this node            */
             11659    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             11660    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             11660                  /* Head pointer to shared library list */
             11661    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             11661                  /* Head pointer to list of shared libraries
             11662                                          which have been mapped to included libraries */
             11663    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             11664    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             11665    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             11666    1         2 ADDR_START REDEF  ADDR_START_A,
             11667    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             11668    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             11669    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             11670    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             11671    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             11672    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:130  
             11673    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             11674    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             11675    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             11676    1         2 START_PAGE# REDEF START_PAGE#_A,
             11677    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             11678    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             11679    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             11680    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             11681    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             11682    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             11683    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             11684    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             11685    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11685                  /* Starting pointer for common sections for this node */
             11686    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11686                  /* Stopping pointer for common sections for this node */
             11687    1         2 L_START,
             11688    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11689    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             11690    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             11691    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11692    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11693    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11694    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11695    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             11696    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             11697    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11698    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             11699    1         2 L_STOP,
             11700    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11701    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             11702    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             11703    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11704    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11705    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11706    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11707    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:131  
             11708    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             11709    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11710    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             11711    1         2 L_SIZE,
             11712    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11713    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11714    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11715    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11716    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             11717    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11718    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11719    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11720    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11721    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             11722    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             11723    1         2 L_PREV_SIZE,
             11724    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11725    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11726    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11727    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11728    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             11729    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11730    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11731    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11732    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11733    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             11734    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             11735    1         2 BIT_MAP                ALIGNED,
             11736    1           3 DATA                  ALIGNED,
             11737    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11738    1           3 RPROC                 ALIGNED,
             11739    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11740    1           3 ROS                   ALIGNED,
             11741    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11742    1         2 L_SC_START,
             11743    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11744    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:132  
             11745    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11746    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11747    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             11748    1         2 L_SC_STOP,
             11749    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11750    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             11751    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11752    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11753    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             11754    1         2 PROMOTE_HEAD,
             11755    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11756    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11757    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             11758    1         2 PROMOTE_TAIL,
             11759    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11760    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11761    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             11762    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             11763    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             11764    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             11765    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             11766    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

      764    11770        %VX$LST;

             11783    1   /*******************************************************************************
             11784    1   *                                                                              *
             11785    1   *                          VX$LST                                                 *
             11786    1   *                                                                              *
             11787    1   *******************************************************************************/

             11792    1   DCL 1 VX$LST                          ALIGNED BASED,
             11793    1         2 LINK$        PTR,               /* Link to next item                  */
             11794    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             11795    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             11796    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             11797    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:133  
             11798    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             11799    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             11800    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             11801    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             11802    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             11803    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             11804    1         2 P,
             11805    1           3 NAME_       ALIGNED,
             11806    1             4 BOUND      UBIN(20)  UNAL,
             11807    1             4 FLAGSV     UBIN(11)  UNAL,
             11808    1             4 *          BIT(5)    UNAL,
             11809    1             4 NAME$      PTR,
             11810    1           3 ACCT_       ALIGNED,
             11811    1             4 BOUND      UBIN(20)  UNAL,
             11812    1             4 FLAGSV     UBIN(11)  UNAL,
             11813    1             4 *          BIT(5)    UNAL,
             11814    1             4 ACCT$      PTR,
             11815    1           3 PASS_       ALIGNED,
             11816    1             4 BOUND      UBIN(20)  UNAL,
             11817    1             4 FLAGSV     UBIN(11)  UNAL,
             11818    1             4 *          BIT(5)    UNAL,
             11819    1             4 PASS$      PTR,
             11820    1           3 SN_         ALIGNED,
             11821    1             4 BOUND      UBIN(20)  UNAL,
             11822    1             4 FLAGSV     UBIN(11)  UNAL,
             11823    1             4 *          BIT(5)    UNAL,
             11824    1             4 SN$        PTR,
             11825    1           3 WSN_        ALIGNED,
             11826    1             4 BOUND      UBIN(20)  UNAL,
             11827    1             4 FLAGSV     UBIN(11)  UNAL,
             11828    1             4 *          BIT(5)    UNAL,
             11829    1             4 WSN$       PTR,
             11830    1           3 B           ALIGNED,
             11831    1             4 RES        BIT(1)    UNAL,
             11832    1             4 ASN        BIT(1)    UNAL,
             11833    1             4 ACCT       BIT(1)    UNAL,
             11834    1             4 *          BIT(33)   UNAL,
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:134  
             11835    1           3 RES         CHAR(4)   ALIGNED,
             11836    1           3 ASN         UBIN(36)  ALIGNED;
      765    11839        %VXR$TMPLT;

             11852    1   /*******************************************************************************
             11853    1   *                                                                              *
             11854    1   *                          VXR$TMPLT                                               *
             11855    1   *                                                                              *
             11856    1   *******************************************************************************/

             11861    1   DCL 1 VXR$TMPLT BASED ALIGNED,
             11862    1         2 NPOINTER SBIN HALF UNAL,
             11863                /*K*  NPOINTER is the word index to the symbol name.  */
             11864    1         2 SREF BIT(1) UNAL,
             11865                /*K*  SREF is set is this is a secondary reference.  */
             11866    1         2 READ_ONLY BIT(1) UNAL,
             11867    1         2 GOT BIT(1) UNAL,
             11868                /*K*  GOT is set if got the OU name displacement.  */
             11869    1         2 STATE REDEF GOT BIT(1) UNAL,
             11870    1         2 OPOINTER UBIN(15) UNAL;
             11871                /*K*  OPOINTER is the word index to the OU name.  */

             11893    1   /*******************************************************************************
             11894    1   *                                                                              *
             11895    1   *                          VXR$SAT                                                 *
             11896    1   *                                                                              *
             11897    1   *******************************************************************************/

             11901    1   DCL 1 VXR$SAT                 ALIGNED   BASED,
             11902    1         2 VALUE        UBIN(36)  ALIGNED,
             11903    1         2 SEG   REDEF  VALUE,
             11904    1           3 OFFSET     UBIN(18)  UNAL,
             11905    1           3 *          BIT(6)    UNAL,
             11906    1           3 SEGID      UBIN(12)  UNAL,
             11907    1         2 BELOW        BIT(1)    UNAL,
             11908    1         2 *            BIT(17)   UNAL,
             11909    1         2 NODE#        UBIN(18)  UNAL;
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:135  
      766    11911        %BANNER( ARG=FPTS );

             11919    1   /*******************************************************************************
             11920    1   *                                                                              *
             11921    1   *                          FPTS                                                 *
             11922    1   *                                                                              *
             11923    1   *******************************************************************************/

      767    11927        %FPT_OPEN(
      768    11928         ACS=DIRECT,
      769    11929         ASN=FILE,
      770    11930         DCB=M$OF,
      771    11931         FUN=CREATE,
      772    11932         SCRUB=YES,
      773    11933         NAME=VLP_NAME,
      774    11934         ORG=KEYED);
      775    12043        %VLP_NAME( NAME='********************B_PATCH', STCLASS=CONSTANT );
      776    12070        %FPT_WRITE( DCB=M$OF, KEY=FORM1_KEY, NEWKEY=YES, ONEWKEY=NO );
      777    12101        %BANNER( ARG=DCBS);

             12109    1   /*******************************************************************************
             12110    1   *                                                                              *
             12111    1   *                          DCBS                                                 *
             12112    1   *                                                                              *
             12113    1   *******************************************************************************/

      778    12117    1   DCL M$OF DCB;
      779    12118        %BANNER( ARG=SUBS );

             12126    1   /*******************************************************************************
             12127    1   *                                                                              *
             12128    1   *                          SUBS                                                 *
             12129    1   *                                                                              *
             12130    1   *******************************************************************************/

      780    12134        %B$RECORDSUBS;
      781    12162        %B$RELOCSUBS;
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:136  
      782    12192        %B$SECTIONSUBS;
      783    12207        %SUB_CST;
      784    12223        %BANNER( ARG=HEAD_KEY );

             12231    1   /*******************************************************************************
             12232    1   *                                                                              *
             12233    1   *                          HEAD_KEY                                                *
             12234    1   *                                                                              *
             12235    1   *******************************************************************************/

      785    12239    1   DCL 1 HEAD_KEY STATIC,
      786    12240    1         2 COUNT UBIN BYTE UNAL INIT(9),
      787    12241    1         2 TEXT CHAR(9) INIT('"B_PATCHI');
      788    12242        %BANNER( ARG=HEAD_RECORD );

             12250    1   /*******************************************************************************
             12251    1   *                                                                              *
             12252    1   *                          HEAD_RECORD                                             *
             12253    1   *                                                                              *
             12254    1   *******************************************************************************/

      789    12258    1   DCL 1 HEAD_RECORD STATIC ALIGNED,
      790    12259    1         2 UTS UBIN(36) UNAL INIT(0),
      791    12260    1         2 WORDSIZE UBIN BYTE UNAL INIT(36),
      792    12261    1         2 CMPLRID UBIN(27) UNAL INIT(0),
      793    12262    1         2 START_ADDRESS,
      794    12263    1           3 OPERAND_TYPE UBIN( 4) UNAL INIT(0),
      795    12264    1           3 * BIT ( 5) UNAL INIT('0'B),
      796    12265    1           3 OPERAND UBIN( 9) UNAL INIT(0),
      797    12266    1           3 OFFSET UBIN(18) UNAL INIT(0),
      798    12267    1         2 SEVLEV UBIN(18) UNAL INIT(0),
      799    12268    1         2 LB_SIZE UBIN(18) UNAL INIT(0),
      800    12269    1         2 PR_SIZE UBIN(18) UNAL INIT(100),
      801    12270    1         2 RL_SIZE UBIN(18) UNAL INIT(100),
      802    12271    1         2 DN_SIZE UBIN(18) UNAL INIT( SIZEW(DN_RECORD) ),
      803    12272    1         2 DN_PAGE UBIN(18) UNAL INIT( SIZEW(DN_RECORD) ),
      804    12273    1         2 RN_SIZE UBIN(18) UNAL INIT(0),
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:137  
      805    12274    1         2 RN_PAGE UBIN(18) UNAL INIT(0),
      806    12275    1         2 ED_SIZE UBIN(18) UNAL INIT( 0 ),
      807    12276    1         2 ED_PAGE UBIN(18) UNAL INIT( 0 ),
      808    12277    1         2 ER_SIZE UBIN(18) UNAL INIT(0),
      809    12278    1         2 ER_PAGE UBIN(18) UNAL INIT(0),
      810    12279    1         2 DD_SIZE UBIN(18) UNAL INIT( SIZEW(DD_RECORD.H) ),
      811    12280    1         2 DD_PAGE UBIN(18) UNAL INIT( SIZEW(DD_RECORD.H) ),
      812    12281    1         2 DR_SIZE UBIN(18) UNAL INIT(0),
      813    12282    1         2 DR_PAGE UBIN(18) UNAL INIT(0),
      814    12283    1         2 SD_SIZE UBIN(18) UNAL INIT(0),
      815    12284    1         2 SD_PAGE UBIN(18) UNAL INIT(0),
      816    12285    1         2 SR_SIZE UBIN(18) UNAL INIT(0),
      817    12286    1         2 SR_PAGE UBIN(18) UNAL INIT(0),
      818    12287    1         2 LIB,
      819    12288    1           3 COUNT UBIN( 9) UNAL INIT(0),
      820    12289    1           3 NAME CHAR(31) UNAL
      821    12290    1    INIT('                               '),
      822    12291    1         2 ALIB,
      823    12292    1           3 COUNT UBIN( 9) UNAL INIT(0),
      824    12293    1           3 NAME CHAR(31) UNAL
      825    12294    1    INIT('                               ');
      826    12295        %BANNER( ARG="DN_RECORD - Defined names");

             12303    1   /*******************************************************************************
             12304    1   *                                                                              *
             12305    1   *                          DN_RECORD - Defined names                               *
             12306    1   *                                                                              *
             12307    1   *******************************************************************************/

      827    12311    1   DCL 1 DN_RECORD STATIC ALIGNED,
      828    12312    1         2 B_PATCHI_NAME,
      829    12313    1           3 * UBIN HALF UNAL INIT(8),
      830    12314    1           3 * CHAR(8) INIT('B_PATCHI'),
      831    12315    1           3 * UBIN HALF UNAL INIT(0),
      832    12316    1         2 B_PATCHIH_NAME,
      833    12317    1           3 * UBIN HALF UNAL INIT(9),
      834    12318    1           3 * CHAR(9) INIT('B_PATCHIH'),
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:138  
      835    12319    1           3 * UBIN BYTE UNAL INIT(0),
      836    12320    1         2 B_PATCHDH_NAME,
      837    12321    1           3 * UBIN HALF UNAL INIT(9),
      838    12322    1           3 * CHAR(9) INIT('B_PATCHDH'),
      839    12323    1           3 * UBIN BYTE UNAL INIT(0),
      840    12324    1         2 B_PATCHD_NAME,
      841    12325    1           3 * UBIN HALF UNAL INIT(8),
      842    12326    1           3 * CHAR(8) INIT('B_PATCHD'),
      843    12327    1           3 * UBIN HALF UNAL INIT(0);
      844    12328        %BANNER( ARG="SC_RECORD - Defines Sections");

             12336    1   /*******************************************************************************
             12337    1   *                                                                              *
             12338    1   *                          SC_RECORD - Defines Sections                            *
             12339    1   *                                                                              *
             12340    1   *******************************************************************************/

      845    12344    1   DCL 1 SC_RECORD STATIC ALIGNED,
      846    12345    1         2 PROC_SECTION,
      847    12346    1           3 TYPE UBIN BYTE UNAL INIT( %CODESECTION ),
      848    12347    1           3 * BIT(1) INIT('0'B),
      849    12348    1           3 INITZERO BIT(1) INIT('1'B),
      850    12349    1           3 INITUTS BIT(1) INIT('0'B),
      851    12350    1           3 SEGMENT BIT(1) INIT('0'B),
      852    12351    1           3 * BIT(3) INIT('0'B),
      853    12352    1           3 BOUND BIT(2) INIT('0'B),
      854    12353    1           3 SIZE UBIN HALF UNAL INIT(4),
      855    12354    1           3 NPOINTER UBIN HALF UNAL INIT(0),
      856    12355    1           3 * UBIN HALF UNAL INIT(0),
      857    12356    1         2 DATA_SECTION,
      858    12357    1           3 TYPE UBIN BYTE UNAL INIT( %DATASECTION ),
      859    12358    1           3 * BIT(1) INIT('0'B),
      860    12359    1           3 INITZERO BIT(1) INIT('1'B),
      861    12360    1           3 INITUTS BIT(1) INIT('0'B),
      862    12361    1           3 SEGMENT BIT(1) INIT('0'B),
      863    12362    1           3 * BIT(3) INIT('0'B),
      864    12363    1           3 BOUND BIT(2) INIT('0'B),
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:139  
      865    12364    1           3 SIZE UBIN HALF UNAL INIT(0),
      866    12365    1           3 NPOINTER UBIN HALF UNAL INIT(9),
      867    12366    1           3 * UBIN HALF UNAL INIT(0);
      868    12367        %BANNER( ARG="ED_RECORD - Defines ENTDEFs");

             12375    1   /*******************************************************************************
             12376    1   *                                                                              *
             12377    1   *                          ED_RECORD - Defines ENTDEFs                             *
             12378    1   *                                                                              *
             12379    1   *******************************************************************************/

      869    12383    1   DCL 1 ED_RECORD STATIC ALIGNED,
      870    12384    1         2 B_PATCHI,
      871    12385    1           3 LFLAGS UBIN BYTE UNAL INIT(0),
      872    12386    1           3 SECTNUM UBIN BYTE UNAL INIT(0),
      873    12387    1           3 OFFSET UBIN HALF UNAL INIT(0),
      874    12388    1           3 NPOINTER UBIN HALF UNAL INIT(0),
      875    12389    1           3 PRI BIT(1) UNAL INIT('1'B),
      876    12390    1           3 ALT BIT(1) UNAL INIT('0'B),
      877    12391    1           3 CHECK BIT(1) UNAL INIT('1'B),
      878    12392    1           3 CST UBIN(4) UNAL INIT( %NSTD# ),
      879    12393    1           3 NPARAM UBIN(11) UNAL INIT(0);
      880    12394        %BANNER( ARG="DD_RECORD - Defines SYMDEFs");

             12402    1   /*******************************************************************************
             12403    1   *                                                                              *
             12404    1   *                          DD_RECORD - Defines SYMDEFs                             *
             12405    1   *                                                                              *
             12406    1   *******************************************************************************/

      881    12410    1   DCL 1 DD_RECORD STATIC ALIGNED,
      882    12411    1         2 H, /* Symdefs for patch space headers */
      883    12412    1           3 B_PATCHIH,
      884    12413    1             4 LFLAGS UBIN BYTE UNAL INIT(0),
      885    12414    1             4 SECTNUM UBIN BYTE UNAL INIT(0),
      886    12415    1             4 OFFSET UBIN HALF UNAL INIT(0),
      887    12416    1             4 NPOINTER UBIN HALF UNAL INIT(3),
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:140  
      888    12417    1             4 CONSTNT BIT(1) INIT('0'B),
      889    12418    1             4 * UBIN(17) UNAL INIT(0),
      890    12419    1           3 B_PATCHDH,
      891    12420    1             4 LFLAGS UBIN BYTE UNAL INIT(0),
      892    12421    1             4 SECTNUM UBIN BYTE UNAL INIT(0),
      893    12422    1             4 OFFSET UBIN HALF UNAL INIT(2),
      894    12423    1             4 NPOINTER UBIN HALF UNAL INIT(6),
      895    12424    1             4 CONSTNT BIT(1) INIT('0'B),
      896    12425    1             4 * UBIN(17) UNAL INIT(0),
      897    12426    1         2 B_PATCHD,
      898    12427    1           3 LFLAGS UBIN BYTE UNAL INIT(0),
      899    12428    1           3 SECTNUM UBIN BYTE UNAL INIT(1),
      900    12429    1           3 OFFSET UBIN HALF UNAL INIT(0),
      901    12430    1           3 NPOINTER UBIN HALF UNAL INIT(9),
      902    12431    1           3 CONSTNT BIT(1) INIT('0'B),
      903    12432    1           3 * UBIN(17) UNAL INIT(0);
      904    12433        %BANNER( ARG=FORM1_KEY );

             12441    1   /*******************************************************************************
             12442    1   *                                                                              *
             12443    1   *                          FORM1_KEY                                               *
             12444    1   *                                                                              *
             12445    1   *******************************************************************************/

      905    12449    1   DCL 1 FORM1_KEY STATIC ALIGNED,
      906    12450    1         2 COUNT UBIN BYTE UNAL INIT(7),
      907    12451    1         2 * BIT(9) UNAL INIT('777'O),
      908    12452    1         2 UTS UBIN UNAL INIT(0),
      909    12453    1         2 REC_TYPE UBIN BYTE UNAL,
      910    12454    1         2 PAGE# UBIN BYTE UNAL INIT(0);
      911    12455        %BANNER( ARG=FORM2_KEY );

             12463    1   /*******************************************************************************
             12464    1   *                                                                              *
             12465    1   *                          FORM2_KEY                                               *
             12466    1   *                                                                              *
             12467    1   *******************************************************************************/
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:141  

      912    12471    1   DCL 1 FORM2_KEY STATIC ALIGNED,
      913    12472    1         2 COUNT UBIN BYTE UNAL INIT(11),
      914    12473    1         2 * BIT(9) UNAL INIT('777'O),
      915    12474    1         2 UTS UBIN UNAL INIT(0),
      916    12475    1         2 REC_TYPE UBIN BYTE UNAL INIT(10),
      917    12476    1         2 SECT# UBIN HALF UNAL INIT(0),
      918    12477    1         2 OFFSET UBIN HALF UNAL INIT(0),
      919    12478    1         2 SUB_TYPE UBIN BYTE UNAL INIT(0);
      920    12479        %BANNER( ARG=FORM1_REC_TYPES );

             12487    1   /*******************************************************************************
             12488    1   *                                                                              *
             12489    1   *                          FORM1_REC_TYPES                                         *
             12490    1   *                                                                              *
             12491    1   *******************************************************************************/

      921    12495    1   DCL FORM1_REC_TYPES (0:3) UBIN CONSTANT INIT( %TYPDNAM, %TYPSECT, %TYPSDEF, %TYPEDEF
             12495            );
      922    12496        %BANNER( ARG=FORM1_BUF_ );

             12504    1   /*******************************************************************************
             12505    1   *                                                                              *
             12506    1   *                          FORM1_BUF_                                              *
             12507    1   *                                                                              *
             12508    1   *******************************************************************************/

      923    12512    1   DCL FORM1_BUF_ (0:3) BIT(72) STATIC INIT(
      924    12513    1    VECTOR( DN_RECORD ),
      925    12514    1    VECTOR( SC_RECORD ),
      926    12515    1    VECTOR( DD_RECORD.H ),
      927    12516    1    VECTOR( NIL ) );
      928    12517        %BANNER( ARG="PROC_RECORD - Defines patch space headers");

             12525    1   /*******************************************************************************
             12526    1   *                                                                              *
             12527    1   *                          PROC_RECORD - Defines patch space headers               *
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:142  
             12528    1   *                                                                              *
             12529    1   *******************************************************************************/

      929    12533    1   DCL 1 PROC_RECORD STATIC ALIGNED,
      930    12534    1         2 B_PATCHIH,
      931    12535    1           3 OFFSET UBIN HALF UNAL INIT(0),
      932    12536    1           3 * BIT(6) UNAL INIT('0'B),
      933    12537    1           3 SEGID BIT(12) UNAL INIT( %NULLSID ),
      934    12538    1           3 SIZE UBIN INIT(0),
      935    12539    1         2 B_PATCHDH,
      936    12540    1           3 OFFSET UBIN HALF UNAL INIT(0),
      937    12541    1           3 * BIT(6) UNAL INIT('0'B),
      938    12542    1           3 SEGID BIT(12) INIT( %NULLSID ),
      939    12543    1           3 SIZE UBIN INIT(0);
      940    12544        %BANNER( ARG="RELOC_RECORD - Relocation directives");

             12552    1   /*******************************************************************************
             12553    1   *                                                                              *
             12554    1   *                          RELOC_RECORD - Relocation directives                    *
             12555    1   *                                                                              *
             12556    1   *******************************************************************************/

      941    12560    1   DCL 1 RELOC_RECORD STATIC ALIGNED,
      942    12561    1         2 B_PATCHIH,
      943    12562    1           3 OPTYPE UBIN(4) UNAL INIT( %OPERCONST ),
      944    12563    1           3 OP BIT(1) INIT('0'B),
      945    12564    1           3 FIELD UBIN(4) UNAL INIT(0),
      946    12565    1           3 OPERAND UBIN BYTE UNAL INIT(0),
      947    12566    1           3 DISPLACEMENT UBIN HALF UNAL INIT(0),
      948    12567    1         2 B_PATCHDH,
      949    12568    1           3 OPTYPE UBIN(4) UNAL INIT( %OPERCONST ),
      950    12569    1           3 OP BIT(1) INIT('0'B),
      951    12570    1           3 FIELD UBIN(4) UNAL INIT(0),
      952    12571    1           3 OPERAND UBIN BYTE UNAL INIT(0),
      953    12572    1           3 DISPLACEMENT UBIN HALF UNAL INIT(2);
      954    12573        %U;

PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:143  
             12581    1   /*******************************************************************************
             12582    1   *                                                                              *
             12583    1   *                          UBIN                                                 *
             12584    1   *                                                                              *
             12585    1   *******************************************************************************/

      955    12589    1   DCL NUM_FORM1_RECS UBIN STATIC INIT(2);
      956    12590    1   DCL I UBIN;
      957    12591    1   DCL DEF_RTYPE UBIN;
      958    12592    1   DCL REF_RTYPE UBIN;
      959    12593        %E;

             12601    1   /*******************************************************************************
             12602    1   *                                                                              *
             12603    1   *                          ENTRY                                                 *
             12604    1   *                                                                              *
             12605    1   *******************************************************************************/

      960    12609        %ENTRIES;
      961    12624    1   DCL VXO$OBJECT ENTRY (3);
      962    12625        %ENTRIES_IO;
      963    12633        %PTR;

             12641    1   /*******************************************************************************
             12642    1   *                                                                              *
             12643    1   *                          PTR                                                 *
             12644    1   *                                                                              *
             12645    1   *******************************************************************************/

      964    12649    1   DCL ALL$ PTR AUTO;
      965    12650    1   DCL CAND_Q$ PTR AUTO;
      966    12651    1   DCL CAND_P$ PTR AUTO;
      967    12652        %PLIST;
      968    12653        %EJECT;
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:144  
      969    12654    1       CALL M$OPEN( FPT_OPEN ) ALTRET( OPEN_ERROR ); /* Open new ou file */
      970    12655         /*
      971    12656            Set size for data patch area
      972    12657         */
      973    12658    2       IF VX_O.NUM.DPATCH > 0 THEN DO;
      974    12659    2           SC_RECORD.DATA_SECTION.SIZE = VX_O.NUM.DPATCH;
      975    12660    2           PROC_RECORD.B_PATCHDH.SIZE = VX_O.NUM.DPATCH;
      976    12661    2           PROC_RECORD.B_PATCHDH.SEGID = %ISSID;
      977    12662    2           RELOC_RECORD.B_PATCHDH.OPTYPE = %OPERSECT;
      978    12663    2           RELOC_RECORD.B_PATCHDH.OPERAND = 1;
      979    12664    2           FORM1_BUF_(2) = VECTOR(DD_RECORD);
      980    12665    2           HEAD_RECORD.DD_SIZE = SIZEW(DD_RECORD);
      981    12666    2           HEAD_RECORD.DD_PAGE = SIZEW(DD_RECORD);
      982    12667    2           END;
      983    12668         /*
      984    12669            Set the size for the instruction patch area
      985    12670         */
      986    12671    2       IF VX_O.NUM.IPATCH > 0 THEN DO;
      987    12672    2           SC_RECORD.PROC_SECTION.SIZE = VX_O.NUM.IPATCH + 4;
      988    12673    2           PROC_RECORD.B_PATCHIH.SIZE = VX_O.NUM.IPATCH;
      989    12674    2           PROC_RECORD.B_PATCHIH.SEGID = %ISSID;
      990    12675    2           RELOC_RECORD.B_PATCHIH.OPTYPE = %OPERSECT;
      991    12676    2           DD_RECORD.H.B_PATCHIH.OFFSET = VX_O.NUM.IPATCH;
      992    12677    2           DD_RECORD.H.B_PATCHDH.OFFSET = VX_O.NUM.IPATCH + 2;
      993    12678    2           FORM2_KEY.OFFSET = VX_O.NUM.IPATCH;
      994    12679    2           HEAD_RECORD.ED_SIZE = SIZEW(ED_RECORD);
      995    12680    2           HEAD_RECORD.ED_PAGE = SIZEW(ED_RECORD);
      996    12681    2           FORM1_BUF_(3) = VECTOR(ED_RECORD);
      997    12682    2           NUM_FORM1_RECS = 3;
      998    12683    2           END;
      999    12684         /*
     1000    12685            Write the defined names record, the sections record,
     1001    12686            the entdefs record, and the symdefs record to the
     1002    12687            object unit file, ********************B_PATCH
     1003    12688         */
     1004    12689    2       DO I = 0 TO NUM_FORM1_RECS;
     1005    12690    2           FPT_WRITE.BUF_ = FORM1_BUF_(I);
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:145  
     1006    12691    2           FORM1_KEY.REC_TYPE = FORM1_REC_TYPES(I);
     1007    12692    2           CALL M$WRITE( FPT_WRITE ) ALTRET( WRITE_ERROR );
     1008    12693    2           END;
     1009    12694         /*
     1010    12695            Write the program record, containing the patch space
     1011    12696            headers B_PATCHIH and B_PATCHDH to the ou file.
     1012    12697         */
     1013    12698    1       FPT_WRITE.KEY_ = VECTOR( FORM2_KEY );
     1014    12699    1       FPT_WRITE.BUF_ = VECTOR( PROC_RECORD );
     1015    12700    1       CALL M$WRITE( FPT_WRITE ) ALTRET( WRITE_ERROR );
     1016    12701         /*
     1017    12702            Write the relocation directives record to the ou file
     1018    12703         */
     1019    12704    1       FORM2_KEY.SUB_TYPE = 1;
     1020    12705    1       FPT_WRITE.BUF_ = VECTOR( RELOC_RECORD );
     1021    12706    1       CALL M$WRITE( FPT_WRITE ) ALTRET( WRITE_ERROR );
     1022    12707         /*
     1023    12708            Write the head record to the ou file
     1024    12709         */
     1025    12710    1       FPT_WRITE.KEY_ = VECTOR( HEAD_KEY );
     1026    12711    1       FPT_WRITE.BUF_ = VECTOR( HEAD_RECORD );
     1027    12712    1       CALL M$WRITE( FPT_WRITE ) ALTRET( WRITE_ERROR );
     1028    12713         /*
     1029    12714            Allocate a VX$LST list element for the new ou file
     1030    12715            ********************B_PATCH
     1031    12716         */
     1032    12717            %ALLOCATE( PTR$=ALL$, TYPE=@GDP, SIZE="SIZEW(VX$LST)" );
     1033    12724    1       ALL$ -> VX$LST.LINK$ = ADDR(NIL);
     1034    12725    1       ALL$ -> VX$LST.TYPE = @OF;
     1035    12726    1       ALL$ -> VX$LST.SUB_TYPE = @OF_ALL;
     1036    12727    1       ALL$ -> VX$LST.OBJECT_NAME$ = ADDR(NIL);
     1037    12728    1       ALL$ -> VX$LST.SC_HEAD$ = ADDR(NIL);
     1038    12729    1       ALL$ -> VX$LST.SC_TAIL$ = ADDR( ALL$ -> VX$LST.SC_HEAD$ );
     1039    12730    1       ALL$ -> VX$LST.P.NAME_ = VECTOR( VLP_NAME );
     1040    12731    1       ALL$ -> VX$LST.P.ACCT_ = VECTOR( NIL );
     1041    12732    1       ALL$ -> VX$LST.P.PASS_ = VECTOR( NIL );
     1042    12733    1       ALL$ -> VX$LST.P.SN_ = VECTOR( NIL );
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:146  
     1043    12734    1       ALL$ -> VX$LST.P.WSN_ = VECTOR( NIL );
     1044    12735    1       ALL$ -> VX$LST.P.B.RES = @FALSE_B;
     1045    12736    1       ALL$ -> VX$LST.P.B.ASN = @TRUE_B;
     1046    12737    1       ALL$ -> VX$LST.P.ASN = FPT_OPEN.V.ASN#;
     1047    12738         /*
     1048    12739            Add the new ou file to the file list for the root node
     1049    12740         */
     1050    12741    1       VX_ROOT$ -> VX$NODE.TAIL$ -> VX$LST.LINK$ = ALL$;
     1051    12742    1       VX_ROOT$ -> VX$NODE.TAIL$ = ALL$;
     1052    12743    1       CALL VXF$CLOSE( ALL$, @OF, @SAVE ); /* Close the new ou file */
     1053    12744    1       CALL VXF$OPEN (ALL$, 0);
     1054    12745    1       VX_OU_HEAD = HEAD_RECORD;
     1055    12746    1   /*    VX_CURR$ = VX_ROOT$;*/ VX_IN_PATCH = '1'B;
     1056    12747    1       CALL VXO$OBJECT (ALL$,0,ADDR(VX_PASS1_ALL_TYPE));
     1057    12748    1   /*    VX_CURR$ = addr (nil);*/ VX_IN_PATCH = '0'B;
     1058    12749    1       CALL VXF$CLOSE( ALL$, @OF, @SAVE ); /* Close the new ou file */
     1059    12750
     1060    12751    2       DO I = 1 TO SIZEW( VX_DEF_REC_A ) - 1;
     1061    12752    2           DEF_RTYPE = VX_DEF_REC_A(I);
     1062    12753    2           REF_RTYPE = VX_REF_MATCH_A( DEF_RTYPE );
     1063    12754    3           IF VX_ROOT$ -> VX$NODE.L_START_A$(DEF_RTYPE) ~= ADDR(NIL) THEN DO;
     1064    12755    3               CALL VXQ$SORT(
     1065    12756    3                  VX_ROOT$ -> VX$NODE.L_START.DN$,
     1066    12757    3                  VX_ROOT$ -> VX$NODE.L_START_A$(DEF_RTYPE),
     1067    12758    3                  VX_ROOT$ -> VX$NODE.L_STOP_A$(DEF_RTYPE),
     1068    12759    3                  2,
     1069    12760    3                  1,
     1070    12761    3                  2,
     1071    12762    3                  0 );
     1072    12763    3               END;
     1073    12764    2           END; /* Do i = 1 to sizew( VX_DEF_REC_A ) - 1; */
     1074    12765
     1075    12766         /* For searching data defs, incorporate the following into previous do loop */
     1076    12767    2       IF VX_CURR$ -> VX$NODE.L_START.ER$ ~= ADDR(NIL) THEN DO;
     1077    12768    2           CAND_P$ = VX_CURR$ -> VX$NODE.L_START.ER$;
     1078    12769    2           CAND_Q$ = VX_CURR$ -> VX$NODE.L_STOP.ER$;
     1079    12770    3           DO WHILE( CAND_P$ <= CAND_Q$ );
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:147  
     1080    12771    3               IF CAND_P$ -> VXR$TMPLT.SREF THEN
     1081    12772    3                   CAND_P$ -> VXR$TMPLT.STATE = '1'B;
     1082    12773    3               ELSE
     1083    12774    3                   CAND_P$ -> VXR$TMPLT.STATE = '0'B;
     1084    12775    3               CAND_P$ = PINCRW( CAND_P$, SIZEW( VXR$TMPLT ) );
     1085    12776    3               END; /* Do while( CAND_P$ <= CAND_Q$ ); */
     1086    12777
     1087    12778    2           CALL VXQ$SORT(
     1088    12779    2              VX_CURR$ -> VX$NODE.L_START.RN$,
     1089    12780    2              VX_CURR$ -> VX$NODE.L_START.ER$,
     1090    12781    2              VX_CURR$ -> VX$NODE.L_STOP.ER$,
     1091    12782    2              SIZEW( VXR$TMPLT ),
     1092    12783    2              1,
     1093    12784    2              0,
     1094    12785    2              0 );
     1095    12786    2           END; /* If VX_CURR$ -> VX$NODE.L_START.ER$ ~= addr(nil) then do; */
     1096    12787         /* End of incorporation */
     1097    12788    1       RETURN;
     1098    12789        %EJECT;
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:148  
     1099    12790    1   VXO$DEL_PATCH_FILE: ENTRY;
     1100    12791
     1101    12792    1       FPT_OPEN.V.FUN# = %IN#;
     1102    12793    1       FPT_OPEN.V.DELETE# = %YES#;
     1103    12794    1       CALL M$OPEN( FPT_OPEN ) ALTRET( OPEN_ERROR );
     1104    12795    1       RETURN;
     1105    12796
     1106    12797        %EJECT;
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:149  
     1107    12798    1   OPEN_ERROR:
     1108    12799        /*E*  ERROR: VXO-E$PATCH_OPEN_VX-0
     1109    12800              MESSAGE: Internal LINK error.  Unable to open %FN
     1110    12801              DESCRIPTION: Unable to open *********************B_PATCH. This file is
     1111    12802                      used to generate an object unit for the DPATCH and IPATCH options
     1112    12803        */
     1113    12804    1       VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );
     1114    12805            %SCREAM( ERR#=E$PATCH_OPEN_VX, MID="'O'", LEVEL=@E$F_D_VX );
     1115    12808    1       CALL M$MERC ALTRET(MERC_ERROR);
     1116    12809            %ERROR_IT;
     1117    12812
     1118    12813    1   WRITE_ERROR:
     1119    12814        /*E*  ERROR:      VXO-E$PATCH_WRITE_VX-0
     1120    12815              MESSAGE: Internal LINK error.  Unable to write to %FN
     1121    12816              DESCRIPTION: Unable to write to *********************B_PATCH file to
     1122    12817                           generate an object unit for the DPATCH and IPATCH options
     1123    12818        */
     1124    12819    1       VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );
     1125    12820            %SCREAM( ERR#=E$PATCH_WRITE_VX, MID="'O'", LEVEL=@E$F_D_VX );
     1126    12823    1       CALL M$MERC ALTRET(MERC_ERROR);
     1127    12824            %ERROR_IT;
     1128    12827    1   MERC_ERROR:
     1129    12828    1       CALL VXE$MERC;
     1130    12829
     1131    12830    1   END VXO$PATCH;

PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:150  
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXO$PATCH.

   Procedure VXO$PATCH requires 337 words for executable code.
   Procedure VXO$PATCH requires 18 words of local(AUTO) storage.

    No errors detected in file VXO$IMPL.:E05TSI    .

PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:151  

 Object Unit name= VXO$PATCH                                  File name= VXO$IMPL.:E05TOU
 UTS= JUL 30 '97 08:26:01.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   146    222  VXO$PATCH
    2  RoData even  UTS     11     13  VXO$PATCH
    3   DCB   even  none     0      0  M$OF
    4   Proc  even  none   337    521  VXO$PATCH
    5  RoData even  none    43     53  VXO$PATCH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  VXO$PATCH
     4    452                  yes      Std        0  VXO$DEL_PATCH_FILE
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:152  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 VXA$GET
 yes     yes           Std       3 VXF$OPEN
         yes           Std       3 VXF$CLOSE
         yes           Std       4 VXE$ERROR
         yes           Std       3 VXO$OBJECT
         yes           Std       7 VXQ$SORT
         yes           Std       0 VXE$MERC
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_OU_HEAD                            VX_IN_PATCH
     VX_ROOT$                              VX_CURR$                              VX_ERRORS
     VX_M_FREE                             VX_M_ALL                              VX_M_BASE_PTR
     VX_O                                  VX_PASS1_ALL_TYPE                     VX_DEF_REC_A
     VX_REF_MATCH_A                        VX_FPT_ERRMSG                         M$OF
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:153  


      720        1        /*M* VXO$PATCH - Builds an object unit for the DPATCH and IPATCH options. */
      721        2        /*T***********************************************************/
      722        3        /*T*                                                         */
      723        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      724        5        /*T*                                                         */
      725        6        /*T***********************************************************/
      726        7        /*F* NAME:        VXO$PATCH
      727        8             PURPOSE:     Generate an object unit file for the patch space defined
      728        9                          by the DPATCH and IPATCH link options.
      729       10             ENTRY:       VXO$DEL_PATCH_FILE - deletes *********************B_PATCH.
      730       11             DESCRIPTION:
      731       12                  VXO$PATCH generates an object unit file, ********************B_PATCH,
      732       13                  for the patch space area defined by the DPATCH and IPATCH link
      733       14                  options.  The object unit contains an procedure section and a data
      734       15                  section.  The primary entdef B_PATCHI defines the start of
      735       16                  the procedure section and the start of the instruction patch
      736       17                  space. The instruction patch space (its size is determined by
      737       18                  the the IPATCH option) is followed by a header for the instruction
      738       19                  patch space (SYMDEF B_PATCHIH) and a header for the data patch
      739       20                  space (SYMDEF B_PATCHDH).  Each header contains a pointer to the
      740       21                  start of the patch space ( ADDR(B_PATCHI) for B_PATCHIH and
      741       22                  ADDR(B_PATCHD) for B_PATCHDH) and a word containing the size of the
      742       23                  patch space ( VX_O.NUM.IPATCH for B_PATCHIH and VX_O.NUM.DPATCH for
      743       24                  B_PATCHDH).  The symdef B_PATCHD defines the start of the data
      744       25                  section.  The size of the data area is defined by the DPATCH option.
      745       26                  A VX$LST element is allocated for the patch space object unit file
      746       27                  and is added to the file list for the root node.
      747       28        */
      748       29        VXO$PATCH: PROC;

     29  4 000000   000000 700200 xent  VXO$PATCH    TSX0  ! X66_AUTO_0
         4 000001   000022 000000                    ZERO    18,0

      749       30
      750       31         /*
      751       32            Include files
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:154  
      752       33         */
      753       34        %INCLUDE CP_6;
      754      115        %INCLUDE CP_6_SUBS;
      755      655        %INCLUDE B$OBJECT_C;
      756     4085        %INCLUDE XU_MACRO_C;
      757     7191        %INCLUDE VX_SUBS_C;
      758     7409        %INCLUDE VX_MACRO_C;
      759     8546        %INCLUDE VX_DATA_R;
      760    10165        %INCLUDE VX_FIXED_R;
      761    10827        %INCLUDE VX_PERR_C;
      762    11081        %INCLUDE B_SEGIDS_C;
      763    11620        %VX$NODE;

             11632    1   /*******************************************************************************
             11633    1   *                                                                              *
             11634    1   *                          VX$NODE                                                *
             11635    1   *                                                                              *
             11636    1   *******************************************************************************/

             11652    1   DCL 1 VX$NODE      ALIGNED    BASED,
             11653    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             11654    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             11655    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             11656    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             11657    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             11658                              to list of file nodes for this node            */
             11659    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             11660    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             11660                  /* Head pointer to shared library list */
             11661    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             11661                  /* Head pointer to list of shared libraries
             11662                                          which have been mapped to included libraries */
             11663    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             11664    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             11665    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             11666    1         2 ADDR_START REDEF  ADDR_START_A,
             11667    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:155  
             11668    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             11669    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             11670    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             11671    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             11672    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             11673    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             11674    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             11675    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             11676    1         2 START_PAGE# REDEF START_PAGE#_A,
             11677    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             11678    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             11679    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             11680    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             11681    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             11682    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             11683    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             11684    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             11685    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11685                  /* Starting pointer for common sections for this node */
             11686    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11686                  /* Stopping pointer for common sections for this node */
             11687    1         2 L_START,
             11688    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11689    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             11690    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             11691    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11692    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11693    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11694    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11695    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             11696    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             11697    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11698    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             11699    1         2 L_STOP,
             11700    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11701    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             11702    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:156  
             11703    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11704    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11705    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11706    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11707    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             11708    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             11709    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11710    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             11711    1         2 L_SIZE,
             11712    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11713    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11714    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11715    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11716    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             11717    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11718    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11719    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11720    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11721    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             11722    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             11723    1         2 L_PREV_SIZE,
             11724    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11725    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11726    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11727    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11728    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             11729    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11730    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11731    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11732    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11733    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             11734    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             11735    1         2 BIT_MAP                ALIGNED,
             11736    1           3 DATA                  ALIGNED,
             11737    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11738    1           3 RPROC                 ALIGNED,
             11739    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:157  
             11740    1           3 ROS                   ALIGNED,
             11741    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11742    1         2 L_SC_START,
             11743    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11744    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             11745    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11746    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11747    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             11748    1         2 L_SC_STOP,
             11749    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11750    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             11751    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11752    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11753    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             11754    1         2 PROMOTE_HEAD,
             11755    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11756    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11757    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             11758    1         2 PROMOTE_TAIL,
             11759    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11760    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11761    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             11762    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             11763    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             11764    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             11765    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             11766    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

      764    11770        %VX$LST;

             11783    1   /*******************************************************************************
             11784    1   *                                                                              *
             11785    1   *                          VX$LST                                                 *
             11786    1   *                                                                              *
             11787    1   *******************************************************************************/

             11792    1   DCL 1 VX$LST                          ALIGNED BASED,
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:158  
             11793    1         2 LINK$        PTR,               /* Link to next item                  */
             11794    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             11795    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             11796    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             11797    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             11798    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             11799    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             11800    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             11801    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             11802    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             11803    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             11804    1         2 P,
             11805    1           3 NAME_       ALIGNED,
             11806    1             4 BOUND      UBIN(20)  UNAL,
             11807    1             4 FLAGSV     UBIN(11)  UNAL,
             11808    1             4 *          BIT(5)    UNAL,
             11809    1             4 NAME$      PTR,
             11810    1           3 ACCT_       ALIGNED,
             11811    1             4 BOUND      UBIN(20)  UNAL,
             11812    1             4 FLAGSV     UBIN(11)  UNAL,
             11813    1             4 *          BIT(5)    UNAL,
             11814    1             4 ACCT$      PTR,
             11815    1           3 PASS_       ALIGNED,
             11816    1             4 BOUND      UBIN(20)  UNAL,
             11817    1             4 FLAGSV     UBIN(11)  UNAL,
             11818    1             4 *          BIT(5)    UNAL,
             11819    1             4 PASS$      PTR,
             11820    1           3 SN_         ALIGNED,
             11821    1             4 BOUND      UBIN(20)  UNAL,
             11822    1             4 FLAGSV     UBIN(11)  UNAL,
             11823    1             4 *          BIT(5)    UNAL,
             11824    1             4 SN$        PTR,
             11825    1           3 WSN_        ALIGNED,
             11826    1             4 BOUND      UBIN(20)  UNAL,
             11827    1             4 FLAGSV     UBIN(11)  UNAL,
             11828    1             4 *          BIT(5)    UNAL,
             11829    1             4 WSN$       PTR,
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:159  
             11830    1           3 B           ALIGNED,
             11831    1             4 RES        BIT(1)    UNAL,
             11832    1             4 ASN        BIT(1)    UNAL,
             11833    1             4 ACCT       BIT(1)    UNAL,
             11834    1             4 *          BIT(33)   UNAL,
             11835    1           3 RES         CHAR(4)   ALIGNED,
             11836    1           3 ASN         UBIN(36)  ALIGNED;
      765    11839        %VXR$TMPLT;

             11852    1   /*******************************************************************************
             11853    1   *                                                                              *
             11854    1   *                          VXR$TMPLT                                              *
             11855    1   *                                                                              *
             11856    1   *******************************************************************************/

             11861    1   DCL 1 VXR$TMPLT BASED ALIGNED,
             11862    1         2 NPOINTER SBIN HALF UNAL,
             11863                /*K*  NPOINTER is the word index to the symbol name.  */
             11864    1         2 SREF BIT(1) UNAL,
             11865                /*K*  SREF is set is this is a secondary reference.  */
             11866    1         2 READ_ONLY BIT(1) UNAL,
             11867    1         2 GOT BIT(1) UNAL,
             11868                /*K*  GOT is set if got the OU name displacement.  */
             11869    1         2 STATE REDEF GOT BIT(1) UNAL,
             11870    1         2 OPOINTER UBIN(15) UNAL;
             11871                /*K*  OPOINTER is the word index to the OU name.  */

             11893    1   /*******************************************************************************
             11894    1   *                                                                              *
             11895    1   *                          VXR$SAT                                                *
             11896    1   *                                                                              *
             11897    1   *******************************************************************************/

             11901    1   DCL 1 VXR$SAT                 ALIGNED   BASED,
             11902    1         2 VALUE        UBIN(36)  ALIGNED,
             11903    1         2 SEG   REDEF  VALUE,
             11904    1           3 OFFSET     UBIN(18)  UNAL,
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:160  
             11905    1           3 *          BIT(6)    UNAL,
             11906    1           3 SEGID      UBIN(12)  UNAL,
             11907    1         2 BELOW        BIT(1)    UNAL,
             11908    1         2 *            BIT(17)   UNAL,
             11909    1         2 NODE#        UBIN(18)  UNAL;
      766    11911        %BANNER( ARG=FPTS );

             11919    1   /*******************************************************************************
             11920    1   *                                                                              *
             11921    1   *                          FPTS                                                 *
             11922    1   *                                                                              *
             11923    1   *******************************************************************************/

      767    11927        %FPT_OPEN(
      768    11928         ACS=DIRECT,
      769    11929         ASN=FILE,
      770    11930         DCB=M$OF,
      771    11931         FUN=CREATE,
      772    11932         SCRUB=YES,
      773    11933         NAME=VLP_NAME,
      774    11934         ORG=KEYED);
      775    12043        %VLP_NAME( NAME='********************B_PATCH', STCLASS=CONSTANT );
      776    12070        %FPT_WRITE( DCB=M$OF, KEY=FORM1_KEY, NEWKEY=YES, ONEWKEY=NO );
      777    12101        %BANNER( ARG=DCBS);

             12109    1   /*******************************************************************************
             12110    1   *                                                                              *
             12111    1   *                          DCBS                                                 *
             12112    1   *                                                                              *
             12113    1   *******************************************************************************/

      778    12117    1   DCL M$OF DCB;
      779    12118        %BANNER( ARG=SUBS );

             12126    1   /*******************************************************************************
             12127    1   *                                                                              *
             12128    1   *                          SUBS                                                 *
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:161  
             12129    1   *                                                                              *
             12130    1   *******************************************************************************/

      780    12134        %B$RECORDSUBS;
      781    12162        %B$RELOCSUBS;
      782    12192        %B$SECTIONSUBS;
      783    12207        %SUB_CST;
      784    12223        %BANNER( ARG=HEAD_KEY );

             12231    1   /*******************************************************************************
             12232    1   *                                                                              *
             12233    1   *                          HEAD_KEY                                               *
             12234    1   *                                                                              *
             12235    1   *******************************************************************************/

      785    12239    1   DCL 1 HEAD_KEY STATIC,
      786    12240    1         2 COUNT UBIN BYTE UNAL INIT(9),
      787    12241    1         2 TEXT CHAR(9) INIT('"B_PATCHI');
      788    12242        %BANNER( ARG=HEAD_RECORD );

             12250    1   /*******************************************************************************
             12251    1   *                                                                              *
             12252    1   *                          HEAD_RECORD                                            *
             12253    1   *                                                                              *
             12254    1   *******************************************************************************/

      789    12258    1   DCL 1 HEAD_RECORD STATIC ALIGNED,
      790    12259    1         2 UTS UBIN(36) UNAL INIT(0),
      791    12260    1         2 WORDSIZE UBIN BYTE UNAL INIT(36),
      792    12261    1         2 CMPLRID UBIN(27) UNAL INIT(0),
      793    12262    1         2 START_ADDRESS,
      794    12263    1           3 OPERAND_TYPE UBIN( 4) UNAL INIT(0),
      795    12264    1           3 * BIT ( 5) UNAL INIT('0'B),
      796    12265    1           3 OPERAND UBIN( 9) UNAL INIT(0),
      797    12266    1           3 OFFSET UBIN(18) UNAL INIT(0),
      798    12267    1         2 SEVLEV UBIN(18) UNAL INIT(0),
      799    12268    1         2 LB_SIZE UBIN(18) UNAL INIT(0),
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:162  
      800    12269    1         2 PR_SIZE UBIN(18) UNAL INIT(100),
      801    12270    1         2 RL_SIZE UBIN(18) UNAL INIT(100),
      802    12271    1         2 DN_SIZE UBIN(18) UNAL INIT( SIZEW(DN_RECORD) ),
      803    12272    1         2 DN_PAGE UBIN(18) UNAL INIT( SIZEW(DN_RECORD) ),
      804    12273    1         2 RN_SIZE UBIN(18) UNAL INIT(0),
      805    12274    1         2 RN_PAGE UBIN(18) UNAL INIT(0),
      806    12275    1         2 ED_SIZE UBIN(18) UNAL INIT( 0 ),
      807    12276    1         2 ED_PAGE UBIN(18) UNAL INIT( 0 ),
      808    12277    1         2 ER_SIZE UBIN(18) UNAL INIT(0),
      809    12278    1         2 ER_PAGE UBIN(18) UNAL INIT(0),
      810    12279    1         2 DD_SIZE UBIN(18) UNAL INIT( SIZEW(DD_RECORD.H) ),
      811    12280    1         2 DD_PAGE UBIN(18) UNAL INIT( SIZEW(DD_RECORD.H) ),
      812    12281    1         2 DR_SIZE UBIN(18) UNAL INIT(0),
      813    12282    1         2 DR_PAGE UBIN(18) UNAL INIT(0),
      814    12283    1         2 SD_SIZE UBIN(18) UNAL INIT(0),
      815    12284    1         2 SD_PAGE UBIN(18) UNAL INIT(0),
      816    12285    1         2 SR_SIZE UBIN(18) UNAL INIT(0),
      817    12286    1         2 SR_PAGE UBIN(18) UNAL INIT(0),
      818    12287    1         2 LIB,
      819    12288    1           3 COUNT UBIN( 9) UNAL INIT(0),
      820    12289    1           3 NAME CHAR(31) UNAL
      821    12290    1    INIT('                               '),
      822    12291    1         2 ALIB,
      823    12292    1           3 COUNT UBIN( 9) UNAL INIT(0),
      824    12293    1           3 NAME CHAR(31) UNAL
      825    12294    1    INIT('                               ');
      826    12295        %BANNER( ARG="DN_RECORD - Defined names");

             12303    1   /*******************************************************************************
             12304    1   *                                                                              *
             12305    1   *                          DN_RECORD - Defined names                              *
             12306    1   *                                                                              *
             12307    1   *******************************************************************************/

      827    12311    1   DCL 1 DN_RECORD STATIC ALIGNED,
      828    12312    1         2 B_PATCHI_NAME,
      829    12313    1           3 * UBIN HALF UNAL INIT(8),
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:163  
      830    12314    1           3 * CHAR(8) INIT('B_PATCHI'),
      831    12315    1           3 * UBIN HALF UNAL INIT(0),
      832    12316    1         2 B_PATCHIH_NAME,
      833    12317    1           3 * UBIN HALF UNAL INIT(9),
      834    12318    1           3 * CHAR(9) INIT('B_PATCHIH'),
      835    12319    1           3 * UBIN BYTE UNAL INIT(0),
      836    12320    1         2 B_PATCHDH_NAME,
      837    12321    1           3 * UBIN HALF UNAL INIT(9),
      838    12322    1           3 * CHAR(9) INIT('B_PATCHDH'),
      839    12323    1           3 * UBIN BYTE UNAL INIT(0),
      840    12324    1         2 B_PATCHD_NAME,
      841    12325    1           3 * UBIN HALF UNAL INIT(8),
      842    12326    1           3 * CHAR(8) INIT('B_PATCHD'),
      843    12327    1           3 * UBIN HALF UNAL INIT(0);
      844    12328        %BANNER( ARG="SC_RECORD - Defines Sections");

             12336    1   /*******************************************************************************
             12337    1   *                                                                              *
             12338    1   *                          SC_RECORD - Defines Sections                           *
             12339    1   *                                                                              *
             12340    1   *******************************************************************************/

      845    12344    1   DCL 1 SC_RECORD STATIC ALIGNED,
      846    12345    1         2 PROC_SECTION,
      847    12346    1           3 TYPE UBIN BYTE UNAL INIT( %CODESECTION ),
      848    12347    1           3 * BIT(1) INIT('0'B),
      849    12348    1           3 INITZERO BIT(1) INIT('1'B),
      850    12349    1           3 INITUTS BIT(1) INIT('0'B),
      851    12350    1           3 SEGMENT BIT(1) INIT('0'B),
      852    12351    1           3 * BIT(3) INIT('0'B),
      853    12352    1           3 BOUND BIT(2) INIT('0'B),
      854    12353    1           3 SIZE UBIN HALF UNAL INIT(4),
      855    12354    1           3 NPOINTER UBIN HALF UNAL INIT(0),
      856    12355    1           3 * UBIN HALF UNAL INIT(0),
      857    12356    1         2 DATA_SECTION,
      858    12357    1           3 TYPE UBIN BYTE UNAL INIT( %DATASECTION ),
      859    12358    1           3 * BIT(1) INIT('0'B),
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:164  
      860    12359    1           3 INITZERO BIT(1) INIT('1'B),
      861    12360    1           3 INITUTS BIT(1) INIT('0'B),
      862    12361    1           3 SEGMENT BIT(1) INIT('0'B),
      863    12362    1           3 * BIT(3) INIT('0'B),
      864    12363    1           3 BOUND BIT(2) INIT('0'B),
      865    12364    1           3 SIZE UBIN HALF UNAL INIT(0),
      866    12365    1           3 NPOINTER UBIN HALF UNAL INIT(9),
      867    12366    1           3 * UBIN HALF UNAL INIT(0);
      868    12367        %BANNER( ARG="ED_RECORD - Defines ENTDEFs");

             12375    1   /*******************************************************************************
             12376    1   *                                                                              *
             12377    1   *                          ED_RECORD - Defines ENTDEFs                            *
             12378    1   *                                                                              *
             12379    1   *******************************************************************************/

      869    12383    1   DCL 1 ED_RECORD STATIC ALIGNED,
      870    12384    1         2 B_PATCHI,
      871    12385    1           3 LFLAGS UBIN BYTE UNAL INIT(0),
      872    12386    1           3 SECTNUM UBIN BYTE UNAL INIT(0),
      873    12387    1           3 OFFSET UBIN HALF UNAL INIT(0),
      874    12388    1           3 NPOINTER UBIN HALF UNAL INIT(0),
      875    12389    1           3 PRI BIT(1) UNAL INIT('1'B),
      876    12390    1           3 ALT BIT(1) UNAL INIT('0'B),
      877    12391    1           3 CHECK BIT(1) UNAL INIT('1'B),
      878    12392    1           3 CST UBIN(4) UNAL INIT( %NSTD# ),
      879    12393    1           3 NPARAM UBIN(11) UNAL INIT(0);
      880    12394        %BANNER( ARG="DD_RECORD - Defines SYMDEFs");

             12402    1   /*******************************************************************************
             12403    1   *                                                                              *
             12404    1   *                          DD_RECORD - Defines SYMDEFs                            *
             12405    1   *                                                                              *
             12406    1   *******************************************************************************/

      881    12410    1   DCL 1 DD_RECORD STATIC ALIGNED,
      882    12411    1         2 H, /* Symdefs for patch space headers */
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:165  
      883    12412    1           3 B_PATCHIH,
      884    12413    1             4 LFLAGS UBIN BYTE UNAL INIT(0),
      885    12414    1             4 SECTNUM UBIN BYTE UNAL INIT(0),
      886    12415    1             4 OFFSET UBIN HALF UNAL INIT(0),
      887    12416    1             4 NPOINTER UBIN HALF UNAL INIT(3),
      888    12417    1             4 CONSTNT BIT(1) INIT('0'B),
      889    12418    1             4 * UBIN(17) UNAL INIT(0),
      890    12419    1           3 B_PATCHDH,
      891    12420    1             4 LFLAGS UBIN BYTE UNAL INIT(0),
      892    12421    1             4 SECTNUM UBIN BYTE UNAL INIT(0),
      893    12422    1             4 OFFSET UBIN HALF UNAL INIT(2),
      894    12423    1             4 NPOINTER UBIN HALF UNAL INIT(6),
      895    12424    1             4 CONSTNT BIT(1) INIT('0'B),
      896    12425    1             4 * UBIN(17) UNAL INIT(0),
      897    12426    1         2 B_PATCHD,
      898    12427    1           3 LFLAGS UBIN BYTE UNAL INIT(0),
      899    12428    1           3 SECTNUM UBIN BYTE UNAL INIT(1),
      900    12429    1           3 OFFSET UBIN HALF UNAL INIT(0),
      901    12430    1           3 NPOINTER UBIN HALF UNAL INIT(9),
      902    12431    1           3 CONSTNT BIT(1) INIT('0'B),
      903    12432    1           3 * UBIN(17) UNAL INIT(0);
      904    12433        %BANNER( ARG=FORM1_KEY );

             12441    1   /*******************************************************************************
             12442    1   *                                                                              *
             12443    1   *                          FORM1_KEY                                              *
             12444    1   *                                                                              *
             12445    1   *******************************************************************************/

      905    12449    1   DCL 1 FORM1_KEY STATIC ALIGNED,
      906    12450    1         2 COUNT UBIN BYTE UNAL INIT(7),
      907    12451    1         2 * BIT(9) UNAL INIT('777'O),
      908    12452    1         2 UTS UBIN UNAL INIT(0),
      909    12453    1         2 REC_TYPE UBIN BYTE UNAL,
      910    12454    1         2 PAGE# UBIN BYTE UNAL INIT(0);
      911    12455        %BANNER( ARG=FORM2_KEY );

PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:166  
             12463    1   /*******************************************************************************
             12464    1   *                                                                              *
             12465    1   *                          FORM2_KEY                                              *
             12466    1   *                                                                              *
             12467    1   *******************************************************************************/

      912    12471    1   DCL 1 FORM2_KEY STATIC ALIGNED,
      913    12472    1         2 COUNT UBIN BYTE UNAL INIT(11),
      914    12473    1         2 * BIT(9) UNAL INIT('777'O),
      915    12474    1         2 UTS UBIN UNAL INIT(0),
      916    12475    1         2 REC_TYPE UBIN BYTE UNAL INIT(10),
      917    12476    1         2 SECT# UBIN HALF UNAL INIT(0),
      918    12477    1         2 OFFSET UBIN HALF UNAL INIT(0),
      919    12478    1         2 SUB_TYPE UBIN BYTE UNAL INIT(0);
      920    12479        %BANNER( ARG=FORM1_REC_TYPES );

             12487    1   /*******************************************************************************
             12488    1   *                                                                              *
             12489    1   *                          FORM1_REC_TYPES                                        *
             12490    1   *                                                                              *
             12491    1   *******************************************************************************/

      921    12495    1  DCL FORM1_REC_TYPES (0:3) UBIN CONSTANT INIT( %TYPDNAM, %TYPSECT, %TYPSDEF, %TYPEDEF
             12495            );
      922    12496        %BANNER( ARG=FORM1_BUF_ );

             12504    1   /*******************************************************************************
             12505    1   *                                                                              *
             12506    1   *                          FORM1_BUF_                                             *
             12507    1   *                                                                              *
             12508    1   *******************************************************************************/

      923    12512    1   DCL FORM1_BUF_ (0:3) BIT(72) STATIC INIT(
      924    12513    1    VECTOR( DN_RECORD ),
      925    12514    1    VECTOR( SC_RECORD ),
      926    12515    1    VECTOR( DD_RECORD.H ),
      927    12516    1    VECTOR( NIL ) );
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:167  
      928    12517        %BANNER( ARG="PROC_RECORD - Defines patch space headers");

             12525    1   /*******************************************************************************
             12526    1   *                                                                              *
             12527    1   *                          PROC_RECORD - Defines patch space headers              *
             12528    1   *                                                                              *
             12529    1   *******************************************************************************/

      929    12533    1   DCL 1 PROC_RECORD STATIC ALIGNED,
      930    12534    1         2 B_PATCHIH,
      931    12535    1           3 OFFSET UBIN HALF UNAL INIT(0),
      932    12536    1           3 * BIT(6) UNAL INIT('0'B),
      933    12537    1           3 SEGID BIT(12) UNAL INIT( %NULLSID ),
      934    12538    1           3 SIZE UBIN INIT(0),
      935    12539    1         2 B_PATCHDH,
      936    12540    1           3 OFFSET UBIN HALF UNAL INIT(0),
      937    12541    1           3 * BIT(6) UNAL INIT('0'B),
      938    12542    1           3 SEGID BIT(12) INIT( %NULLSID ),
      939    12543    1           3 SIZE UBIN INIT(0);
      940    12544        %BANNER( ARG="RELOC_RECORD - Relocation directives");

             12552    1   /*******************************************************************************
             12553    1   *                                                                              *
             12554    1   *                          RELOC_RECORD - Relocation directives                   *
             12555    1   *                                                                              *
             12556    1   *******************************************************************************/

      941    12560    1   DCL 1 RELOC_RECORD STATIC ALIGNED,
      942    12561    1         2 B_PATCHIH,
      943    12562    1           3 OPTYPE UBIN(4) UNAL INIT( %OPERCONST ),
      944    12563    1           3 OP BIT(1) INIT('0'B),
      945    12564    1           3 FIELD UBIN(4) UNAL INIT(0),
      946    12565    1           3 OPERAND UBIN BYTE UNAL INIT(0),
      947    12566    1           3 DISPLACEMENT UBIN HALF UNAL INIT(0),
      948    12567    1         2 B_PATCHDH,
      949    12568    1           3 OPTYPE UBIN(4) UNAL INIT( %OPERCONST ),
      950    12569    1           3 OP BIT(1) INIT('0'B),
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:168  
      951    12570    1           3 FIELD UBIN(4) UNAL INIT(0),
      952    12571    1           3 OPERAND UBIN BYTE UNAL INIT(0),
      953    12572    1           3 DISPLACEMENT UBIN HALF UNAL INIT(2);
      954    12573        %U;

             12581    1   /*******************************************************************************
             12582    1   *                                                                              *
             12583    1   *                          UBIN                                                 *
             12584    1   *                                                                              *
             12585    1   *******************************************************************************/

      955    12589    1   DCL NUM_FORM1_RECS UBIN STATIC INIT(2);
      956    12590    1   DCL I UBIN;
      957    12591    1   DCL DEF_RTYPE UBIN;
      958    12592    1   DCL REF_RTYPE UBIN;
      959    12593        %E;

             12601    1   /*******************************************************************************
             12602    1   *                                                                              *
             12603    1   *                          ENTRY                                                 *
             12604    1   *                                                                              *
             12605    1   *******************************************************************************/

      960    12609        %ENTRIES;
      961    12624    1   DCL VXO$OBJECT ENTRY (3);
      962    12625        %ENTRIES_IO;
      963    12633        %PTR;

             12641    1   /*******************************************************************************
             12642    1   *                                                                              *
             12643    1   *                          PTR                                                 *
             12644    1   *                                                                              *
             12645    1   *******************************************************************************/

      964    12649    1   DCL ALL$ PTR AUTO;
      965    12650    1   DCL CAND_Q$ PTR AUTO;
      966    12651    1   DCL CAND_P$ PTR AUTO;
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:169  
      967    12652        %PLIST;
      968    12653        %EJECT;
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:170  
      969    12654    1       CALL M$OPEN( FPT_OPEN ) ALTRET( OPEN_ERROR ); /* Open new ou file */

  12654  4 000002   000000 630400 1                  EPPR0   FPT_OPEN
         4 000003   450000 713400                    CLIMB   alt,open
         4 000004   410400 401760                    pmme    nvectors=18
         4 000005   000465 702000 4                  TSX2    OPEN_ERROR

      970    12655         /*
      971    12656            Set size for data patch area
      972    12657         */
      973    12658    2       IF VX_O.NUM.DPATCH > 0 THEN DO;

  12658  4 000006   000045 235000 xsym               LDA     VX_O+37
         4 000007   000032 604400 4                  TMOZ    s:12671

      974    12659    2           SC_RECORD.DATA_SECTION.SIZE = VX_O.NUM.DPATCH;

  12659  4 000010   000000 620005                    EAX0    0,AL
         4 000011   000164 440000 1                  SXL0    SC_RECORD+2

      975    12660    2           PROC_RECORD.B_PATCHDH.SIZE = VX_O.NUM.DPATCH;

  12660  4 000012   000045 235000 xsym               LDA     VX_O+37
         4 000013   000216 755000 1                  STA     PROC_RECORD+3

      976    12661    2           PROC_RECORD.B_PATCHDH.SEGID = %ISSID;

  12661  4 000014   006000 236007                    LDQ     3072,DL
         4 000015   000215 752003 1                  STCQ    PROC_RECORD+2,'03'O

      977    12662    2           RELOC_RECORD.B_PATCHDH.OPTYPE = %OPERSECT;

  12662  4 000016   000220 236000 1                  LDQ     RELOC_RECORD+1
         4 000017   000000 376000 5                  ANQ     0
         4 000020   040000 276003                    ORQ     16384,DU
         4 000021   000220 756000 1                  STQ     RELOC_RECORD+1

PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:171  
      978    12663    2           RELOC_RECORD.B_PATCHDH.OPERAND = 1;

  12663  4 000022   000001 236003                    LDQ     1,DU
         4 000023   000220 552020 1                  STBQ    RELOC_RECORD+1,'20'O

      979    12664    2           FORM1_BUF_(2) = VECTOR(DD_RECORD);

  12664  4 000024   000002 237000 5                  LDAQ    2
         4 000025   000207 755000 1                  STA     FORM1_BUF_+4
         4 000026   000210 756000 1                  STQ     FORM1_BUF_+5

      980    12665    2           HEAD_RECORD.DD_SIZE = SIZEW(DD_RECORD);

  12665  4 000027   000006 221003                    LDX1    6,DU
         4 000030   000122 741000 1                  STX1    HEAD_RECORD+9

      981    12666    2           HEAD_RECORD.DD_PAGE = SIZEW(DD_RECORD);

  12666  4 000031   000122 441000 1                  SXL1    HEAD_RECORD+9

      982    12667    2           END;

      983    12668         /*
      984    12669            Set the size for the instruction patch area
      985    12670         */
      986    12671    2       IF VX_O.NUM.IPATCH > 0 THEN DO;

  12671  4 000032   000046 235000 xsym               LDA     VX_O+38
         4 000033   000065 604400 4                  TMOZ    s:12689

      987    12672    2           SC_RECORD.PROC_SECTION.SIZE = VX_O.NUM.IPATCH + 4;

  12672  4 000034   000004 620005                    EAX0    4,AL
         4 000035   000162 440000 1                  SXL0    SC_RECORD

      988    12673    2           PROC_RECORD.B_PATCHIH.SIZE = VX_O.NUM.IPATCH;

PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:172  
  12673  4 000036   000214 755000 1                  STA     PROC_RECORD+1

      989    12674    2           PROC_RECORD.B_PATCHIH.SEGID = %ISSID;

  12674  4 000037   006000 236007                    LDQ     3072,DL
         4 000040   000213 752003 1                  STCQ    PROC_RECORD,'03'O

      990    12675    2           RELOC_RECORD.B_PATCHIH.OPTYPE = %OPERSECT;

  12675  4 000041   000217 236000 1                  LDQ     RELOC_RECORD
         4 000042   000000 376000 5                  ANQ     0
         4 000043   040000 276003                    ORQ     16384,DU
         4 000044   000217 756000 1                  STQ     RELOC_RECORD

      991    12676    2           DD_RECORD.H.B_PATCHIH.OFFSET = VX_O.NUM.IPATCH;

  12676  4 000045   000000 621005                    EAX1    0,AL
         4 000046   000170 441000 1                  SXL1    DD_RECORD

      992    12677    2           DD_RECORD.H.B_PATCHDH.OFFSET = VX_O.NUM.IPATCH + 2;

  12677  4 000047   000046 722000 xsym               LXL2    VX_O+38
         4 000050   000002 623012                    EAX3    2,X2
         4 000051   000172 443000 1                  SXL3    DD_RECORD+2

      993    12678    2           FORM2_KEY.OFFSET = VX_O.NUM.IPATCH;

  12678  4 000052   000046 236000 xsym               LDQ     VX_O+38
         4 000053   000011 736000                    QLS     9
         4 000054   000202 552030 1                  STBQ    FORM2_KEY+2,'30'O

      994    12679    2           HEAD_RECORD.ED_SIZE = SIZEW(ED_RECORD);

  12679  4 000055   000002 224003                    LDX4    2,DU
         4 000056   000120 744000 1                  STX4    HEAD_RECORD+7

      995    12680    2           HEAD_RECORD.ED_PAGE = SIZEW(ED_RECORD);
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:173  

  12680  4 000057   000120 444000 1                  SXL4    HEAD_RECORD+7

      996    12681    2           FORM1_BUF_(3) = VECTOR(ED_RECORD);

  12681  4 000060   000004 237000 5                  LDAQ    4
         4 000061   000211 755000 1                  STA     FORM1_BUF_+6
         4 000062   000212 756000 1                  STQ     FORM1_BUF_+7

      997    12682    2           NUM_FORM1_RECS = 3;

  12682  4 000063   000003 235007                    LDA     3,DL
         4 000064   000221 755000 1                  STA     NUM_FORM1_RECS

      998    12683    2           END;

      999    12684         /*
     1000    12685            Write the defined names record, the sections record,
     1001    12686            the entdefs record, and the symdefs record to the
     1002    12687            object unit file, ********************B_PATCH
     1003    12688         */
     1004    12689    2       DO I = 0 TO NUM_FORM1_RECS;

  12689  4 000065   200003 450100                    STZ     I,,AUTO
         4 000066   000107 710000 4                  TRA     s:12693+3

     1005    12690    2           FPT_WRITE.BUF_ = FORM1_BUF_(I);

  12690  4 000067   200003 235100                    LDA     I,,AUTO
         4 000070   000003 735000                    ALS     3
         4 000071   000000 100405                    MLR     fill='000'O
         4 000072   000203 000010 1                  ADSC9   FORM1_BUF_,A             cn=0,n=8
         4 000073   000076 000010 1                  ADSC9   FPT_WRITE+4              cn=0,n=8

     1006    12691    2           FORM1_KEY.REC_TYPE = FORM1_REC_TYPES(I);

  12691  4 000074   200003 720100                    LXL0    I,,AUTO
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:174  
         4 000075   000007 236010 2                  LDQ     FORM1_REC_TYPES,X0
         4 000076   000011 736000                    QLS     9
         4 000077   000177 552010 1                  STBQ    FORM1_KEY+1,'10'O

     1007    12692    2           CALL M$WRITE( FPT_WRITE ) ALTRET( WRITE_ERROR );

  12692  4 000100   000072 630400 1                  EPPR0   FPT_WRITE
         4 000101   440001 713400                    CLIMB   alt,write
         4 000102   401400 401760                    pmme    nvectors=4
         4 000103   000501 702000 4                  TSX2    WRITE_ERROR

     1008    12693    2           END;

  12693  4 000104   200003 235100                    LDA     I,,AUTO
         4 000105   000001 035007                    ADLA    1,DL
         4 000106   200003 755100                    STA     I,,AUTO
         4 000107   000221 236000 1                  LDQ     NUM_FORM1_RECS
         4 000110   200003 116100                    CMPQ    I,,AUTO
         4 000111   000067 603000 4                  TRC     s:12690

     1009    12694         /*
     1010    12695            Write the program record, containing the patch space
     1011    12696            headers B_PATCHIH and B_PATCHDH to the ou file.
     1012    12697         */
     1013    12698    1       FPT_WRITE.KEY_ = VECTOR( FORM2_KEY );

  12698  4 000112   000006 237000 5                  LDAQ    6
         4 000113   000074 757000 1                  STAQ    FPT_WRITE+2

     1014    12699    1       FPT_WRITE.BUF_ = VECTOR( PROC_RECORD );

  12699  4 000114   000010 237000 5                  LDAQ    8
         4 000115   000076 757000 1                  STAQ    FPT_WRITE+4

     1015    12700    1       CALL M$WRITE( FPT_WRITE ) ALTRET( WRITE_ERROR );

  12700  4 000116   000072 630400 1                  EPPR0   FPT_WRITE
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:175  
         4 000117   440001 713400                    CLIMB   alt,write
         4 000120   401400 401760                    pmme    nvectors=4
         4 000121   000501 702000 4                  TSX2    WRITE_ERROR

     1016    12701         /*
     1017    12702            Write the relocation directives record to the ou file
     1018    12703         */
     1019    12704    1       FORM2_KEY.SUB_TYPE = 1;

  12704  4 000122   000001 236007                    LDQ     1,DL
         4 000123   000202 552004 1                  STBQ    FORM2_KEY+2,'04'O

     1020    12705    1       FPT_WRITE.BUF_ = VECTOR( RELOC_RECORD );

  12705  4 000124   000012 237000 5                  LDAQ    10
         4 000125   000076 757000 1                  STAQ    FPT_WRITE+4

     1021    12706    1       CALL M$WRITE( FPT_WRITE ) ALTRET( WRITE_ERROR );

  12706  4 000126   000072 630400 1                  EPPR0   FPT_WRITE
         4 000127   440001 713400                    CLIMB   alt,write
         4 000130   401400 401760                    pmme    nvectors=4
         4 000131   000501 702000 4                  TSX2    WRITE_ERROR

     1022    12707         /*
     1023    12708            Write the head record to the ou file
     1024    12709         */
     1025    12710    1       FPT_WRITE.KEY_ = VECTOR( HEAD_KEY );

  12710  4 000132   000014 237000 5                  LDAQ    12
         4 000133   000074 757000 1                  STAQ    FPT_WRITE+2

     1026    12711    1       FPT_WRITE.BUF_ = VECTOR( HEAD_RECORD );

  12711  4 000134   000016 237000 5                  LDAQ    14
         4 000135   000076 757000 1                  STAQ    FPT_WRITE+4

PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:176  
     1027    12712    1       CALL M$WRITE( FPT_WRITE ) ALTRET( WRITE_ERROR );

  12712  4 000136   000072 630400 1                  EPPR0   FPT_WRITE
         4 000137   440001 713400                    CLIMB   alt,write
         4 000140   401400 401760                    pmme    nvectors=4
         4 000141   000501 702000 4                  TSX2    WRITE_ERROR

     1028    12713         /*
     1029    12714            Allocate a VX$LST list element for the new ou file
     1030    12715            ********************B_PATCH
     1031    12716         */
     1032    12717            %ALLOCATE( PTR$=ALL$, TYPE=@GDP, SIZE="SIZEW(VX$LST)" );

  12718  4 000142   000010 236000 xsym               LDQ     VX_M_ALL+8
         4 000143   000010 136000 xsym               SBLQ    VX_M_FREE+8
         4 000144   000022 116007                    CMPQ    18,DL
         4 000145   000155 604000 4                  TMI     s:12722

  12719  4 000146   000010 236000 xsym               LDQ     VX_M_FREE+8
         4 000147   000022 736000                    QLS     18
         4 000150   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
         4 000151   200006 756100                    STQ     ALL$,,AUTO

  12720  4 000152   000022 236007                    LDQ     18,DL
         4 000153   000010 056000 xsym               ASQ     VX_M_FREE+8

  12721  4 000154   000167 710000 4                  TRA     s:12724

  12722  4 000155   000020 236000 5                  LDQ     16
         4 000156   200014 756100                    STQ     CAND_P$+4,,AUTO
         4 000157   000021 236000 5                  LDQ     17
         4 000160   200013 756100                    STQ     CAND_P$+3,,AUTO
         4 000161   200006 630500                    EPPR0   ALL$,,AUTO
         4 000162   200012 450500                    STP0    CAND_P$+2,,AUTO
         4 000163   200012 630500                    EPPR0   CAND_P$+2,,AUTO
         4 000164   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000165   000000 701000 xent               TSX1    VXA$GET
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:177  
         4 000166   000000 011000                    NOP     0

     1033    12724    1       ALL$ -> VX$LST.LINK$ = ADDR(NIL);

  12724  4 000167   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000170   200006 470500                    LDP0    ALL$,,AUTO
         4 000171   000000 756100                    STQ     0,,PR0

     1034    12725    1       ALL$ -> VX$LST.TYPE = @OF;

  12725  4 000172   000000 220003                    LDX0    0,DU
         4 000173   200006 470500                    LDP0    ALL$,,AUTO
         4 000174   000001 740100                    STX0    1,,PR0

     1035    12726    1       ALL$ -> VX$LST.SUB_TYPE = @OF_ALL;

  12726  4 000175   200006 470500                    LDP0    ALL$,,AUTO
         4 000176   000001 440100                    SXL0    1,,PR0

     1036    12727    1       ALL$ -> VX$LST.OBJECT_NAME$ = ADDR(NIL);

  12727  4 000177   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000200   200006 470500                    LDP0    ALL$,,AUTO
         4 000201   000002 756100                    STQ     2,,PR0

     1037    12728    1       ALL$ -> VX$LST.SC_HEAD$ = ADDR(NIL);

  12728  4 000202   200006 470500                    LDP0    ALL$,,AUTO
         4 000203   000003 756100                    STQ     3,,PR0

     1038    12729    1       ALL$ -> VX$LST.SC_TAIL$ = ADDR( ALL$ -> VX$LST.SC_HEAD$ );

  12729  4 000204   200006 236100                    LDQ     ALL$,,AUTO
         4 000205   000003 036003                    ADLQ    3,DU
         4 000206   200006 470500                    LDP0    ALL$,,AUTO
         4 000207   000004 756100                    STQ     4,,PR0

PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:178  
     1039    12730    1       ALL$ -> VX$LST.P.NAME_ = VECTOR( VLP_NAME );

  12730  4 000210   200006 470500                    LDP0    ALL$,,AUTO
         4 000211   000022 237000 5                  LDAQ    18
         4 000212   000005 755100                    STA     5,,PR0
         4 000213   000006 756100                    STQ     6,,PR0

     1040    12731    1       ALL$ -> VX$LST.P.ACCT_ = VECTOR( NIL );

  12731  4 000214   200006 470500                    LDP0    ALL$,,AUTO
         4 000215   000024 237000 5                  LDAQ    20
         4 000216   000007 755100                    STA     7,,PR0
         4 000217   000010 756100                    STQ     8,,PR0

     1041    12732    1       ALL$ -> VX$LST.P.PASS_ = VECTOR( NIL );

  12732  4 000220   000024 237000 5                  LDAQ    20
         4 000221   000011 755100                    STA     9,,PR0
         4 000222   000012 756100                    STQ     10,,PR0

     1042    12733    1       ALL$ -> VX$LST.P.SN_ = VECTOR( NIL );

  12733  4 000223   000024 237000 5                  LDAQ    20
         4 000224   000013 755100                    STA     11,,PR0
         4 000225   000014 756100                    STQ     12,,PR0

     1043    12734    1       ALL$ -> VX$LST.P.WSN_ = VECTOR( NIL );

  12734  4 000226   000024 237000 5                  LDAQ    20
         4 000227   000015 755100                    STA     13,,PR0
         4 000230   000016 756100                    STQ     14,,PR0

     1044    12735    1       ALL$ -> VX$LST.P.B.RES = @FALSE_B;

  12735  4 000231   000031 236000 xsym               LDQ     B_VECTNIL+25
         4 000232   000017 356100                    ANSQ    15,,PR0

PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:179  
     1045    12736    1       ALL$ -> VX$LST.P.B.ASN = @TRUE_B;

  12736  4 000233   200000 236003                    LDQ     65536,DU
         4 000234   000017 256100                    ORSQ    15,,PR0

     1046    12737    1       ALL$ -> VX$LST.P.ASN = FPT_OPEN.V.ASN#;

  12737  4 000235   000045 236000 1                  LDQ     FPT_OPEN+37
         4 000236   000777 376007                    ANQ     511,DL
         4 000237   000021 756100                    STQ     17,,PR0

     1047    12738         /*
     1048    12739            Add the new ou file to the file list for the root node
     1049    12740         */
     1050    12741    1       VX_ROOT$ -> VX$NODE.TAIL$ -> VX$LST.LINK$ = ALL$;

  12741  4 000240   000000 471400 xsym               LDP1    VX_ROOT$
         4 000241   100005 473500                    LDP3    5,,PR1
         4 000242   200006 236100                    LDQ     ALL$,,AUTO
         4 000243   300000 756100                    STQ     0,,PR3

     1051    12742    1       VX_ROOT$ -> VX$NODE.TAIL$ = ALL$;

  12742  4 000244   200006 236100                    LDQ     ALL$,,AUTO
         4 000245   000000 470400 xsym               LDP0    VX_ROOT$
         4 000246   000005 756100                    STQ     5,,PR0

     1052    12743    1       CALL VXF$CLOSE( ALL$, @OF, @SAVE ); /* Close the new ou file */

  12743  4 000247   000026 236000 5                  LDQ     22
         4 000250   200014 756100                    STQ     CAND_P$+4,,AUTO
         4 000251   000027 236000 5                  LDQ     23
         4 000252   200013 756100                    STQ     CAND_P$+3,,AUTO
         4 000253   200006 631500                    EPPR1   ALL$,,AUTO
         4 000254   200012 451500                    STP1    CAND_P$+2,,AUTO
         4 000255   200012 630500                    EPPR0   CAND_P$+2,,AUTO
         4 000256   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:180  
         4 000257   000000 701000 xent               TSX1    VXF$CLOSE
         4 000260   000000 011000                    NOP     0

     1053    12744    1       CALL VXF$OPEN (ALL$, 0);

  12744  4 000261   000027 236000 5                  LDQ     23
         4 000262   200013 756100                    STQ     CAND_P$+3,,AUTO
         4 000263   200006 630500                    EPPR0   ALL$,,AUTO
         4 000264   200012 450500                    STP0    CAND_P$+2,,AUTO
         4 000265   200012 630500                    EPPR0   CAND_P$+2,,AUTO
         4 000266   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000267   000000 701000 xent               TSX1    VXF$OPEN
         4 000270   000000 011000                    NOP     0

     1054    12745    1       VX_OU_HEAD = HEAD_RECORD;

  12745  4 000271   000000 100400                    MLR     fill='000'O
         4 000272   000111 000164 1                  ADSC9   HEAD_RECORD              cn=0,n=116
         4 000273   000000 000164 xsym               ADSC9   VX_OU_HEAD               cn=0,n=116

     1055    12746    1   /*    VX_CURR$ = VX_ROOT$;*/ VX_IN_PATCH = '1'B;

  12746  4 000274   400000 236003                    LDQ     -131072,DU
         4 000275   000000 756000 xsym               STQ     VX_IN_PATCH

     1056    12747    1       CALL VXO$OBJECT (ALL$,0,ADDR(VX_PASS1_ALL_TYPE));

  12747  4 000276   000030 236000 5                  LDQ     24
         4 000277   200012 756100                    STQ     CAND_P$+2,,AUTO
         4 000300   200012 630500                    EPPR0   CAND_P$+2,,AUTO
         4 000301   200015 450500                    STP0    CAND_P$+5,,AUTO
         4 000302   000027 236000 5                  LDQ     23
         4 000303   200014 756100                    STQ     CAND_P$+4,,AUTO
         4 000304   200006 631500                    EPPR1   ALL$,,AUTO
         4 000305   200013 451500                    STP1    CAND_P$+3,,AUTO
         4 000306   200013 630500                    EPPR0   CAND_P$+3,,AUTO
         4 000307   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:181  
         4 000310   000000 701000 xent               TSX1    VXO$OBJECT
         4 000311   000000 011000                    NOP     0

     1057    12748    1   /*    VX_CURR$ = addr (nil);*/ VX_IN_PATCH = '0'B;

  12748  4 000312   000000 450000 xsym               STZ     VX_IN_PATCH

     1058    12749    1       CALL VXF$CLOSE( ALL$, @OF, @SAVE ); /* Close the new ou file */

  12749  4 000313   000026 236000 5                  LDQ     22
         4 000314   200014 756100                    STQ     CAND_P$+4,,AUTO
         4 000315   000027 236000 5                  LDQ     23
         4 000316   200013 756100                    STQ     CAND_P$+3,,AUTO
         4 000317   200006 630500                    EPPR0   ALL$,,AUTO
         4 000320   200012 450500                    STP0    CAND_P$+2,,AUTO
         4 000321   200012 630500                    EPPR0   CAND_P$+2,,AUTO
         4 000322   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000323   000000 701000 xent               TSX1    VXF$CLOSE
         4 000324   000000 011000                    NOP     0

     1059    12750
     1060    12751    2       DO I = 1 TO SIZEW( VX_DEF_REC_A ) - 1;

  12751  4 000325   000001 235007                    LDA     1,DL
         4 000326   200003 755100                    STA     I,,AUTO
         4 000327   000374 710000 4                  TRA     s:12764+3

     1061    12752    2           DEF_RTYPE = VX_DEF_REC_A(I);

  12752  4 000330   200003 720100                    LXL0    I,,AUTO
         4 000331   000000 235010 xsym               LDA     VX_DEF_REC_A,X0
         4 000332   200004 755100                    STA     DEF_RTYPE,,AUTO

     1062    12753    2           REF_RTYPE = VX_REF_MATCH_A( DEF_RTYPE );

  12753  4 000333   000000 235005 xsym               LDA     VX_REF_MATCH_A,AL
         4 000334   200005 755100                    STA     REF_RTYPE,,AUTO
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:182  

     1063    12754    3           IF VX_ROOT$ -> VX$NODE.L_START_A$(DEF_RTYPE) ~= ADDR(NIL) THEN DO;

  12754  4 000335   000000 470400 xsym               LDP0    VX_ROOT$
         4 000336   200004 721100                    LXL1    DEF_RTYPE,,AUTO
         4 000337   000030 236111                    LDQ     24,X1,PR0
         4 000340   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000341   000371 600000 4                  TZE     s:12764

     1064    12755    3               CALL VXQ$SORT(

  12755  4 000342   000027 236000 5                  LDQ     23
         4 000343   200020 756100                    STQ     CAND_P$+8,,AUTO
         4 000344   000032 237000 5                  LDAQ    26
         4 000345   200016 757100                    STAQ    CAND_P$+6,,AUTO
         4 000346   000026 236000 5                  LDQ     22
         4 000347   200015 756100                    STQ     CAND_P$+5,,AUTO
         4 000350   200004 236100                    LDQ     DEF_RTYPE,,AUTO
         4 000351   000022 736000                    QLS     18
         4 000352   000042 036003                    ADLQ    34,DU
         4 000353   000000 036000 xsym               ADLQ    VX_ROOT$
         4 000354   200014 756100                    STQ     CAND_P$+4,,AUTO
         4 000355   200004 236100                    LDQ     DEF_RTYPE,,AUTO
         4 000356   000022 736000                    QLS     18
         4 000357   000030 036003                    ADLQ    24,DU
         4 000360   000000 036000 xsym               ADLQ    VX_ROOT$
         4 000361   200013 756100                    STQ     CAND_P$+3,,AUTO
         4 000362   000000 236000 xsym               LDQ     VX_ROOT$
         4 000363   000031 036003                    ADLQ    25,DU
         4 000364   200012 756100                    STQ     CAND_P$+2,,AUTO
         4 000365   200012 630500                    EPPR0   CAND_P$+2,,AUTO
         4 000366   000025 631400 xsym               EPPR1   B_VECTNIL+21
         4 000367   000000 701000 xent               TSX1    VXQ$SORT
         4 000370   000000 011000                    NOP     0

     1065    12756    3                  VX_ROOT$ -> VX$NODE.L_START.DN$,
     1066    12757    3                  VX_ROOT$ -> VX$NODE.L_START_A$(DEF_RTYPE),
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:183  
     1067    12758    3                  VX_ROOT$ -> VX$NODE.L_STOP_A$(DEF_RTYPE),
     1068    12759    3                  2,
     1069    12760    3                  1,
     1070    12761    3                  2,
     1071    12762    3                  0 );
     1072    12763    3               END;

     1073    12764    2           END; /* Do i = 1 to sizew( VX_DEF_REC_A ) - 1; */

  12764  4 000371   200003 235100                    LDA     I,,AUTO
         4 000372   000001 035007                    ADLA    1,DL
         4 000373   200003 755100                    STA     I,,AUTO
         4 000374   000004 115007                    CMPA    4,DL
         4 000375   000330 602000 4                  TNC     s:12752

     1074    12765
     1075    12766         /* For searching data defs, incorporate the following into previous do loop */
     1076    12767    2       IF VX_CURR$ -> VX$NODE.L_START.ER$ ~= ADDR(NIL) THEN DO;

  12767  4 000376   000000 470400 xsym               LDP0    VX_CURR$
         4 000377   000035 236100                    LDQ     29,,PR0
         4 000400   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000401   000451 600000 4                  TZE     s:12788

     1077    12768    2           CAND_P$ = VX_CURR$ -> VX$NODE.L_START.ER$;

  12768  4 000402   200010 756100                    STQ     CAND_P$,,AUTO

     1078    12769    2           CAND_Q$ = VX_CURR$ -> VX$NODE.L_STOP.ER$;

  12769  4 000403   000047 236100                    LDQ     39,,PR0
         4 000404   200007 756100                    STQ     CAND_Q$,,AUTO

     1079    12770    3           DO WHILE( CAND_P$ <= CAND_Q$ );

  12770  4 000405   200010 116100                    CMPQ    CAND_P$,,AUTO
         4 000406   000426 602000 4                  TNC     s:12778
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:184  

     1080    12771    3               IF CAND_P$ -> VXR$TMPLT.SREF THEN

  12771  4 000407   200010 470500                    LDP0    CAND_P$,,AUTO
         4 000410   000000 236100                    LDQ     0,,PR0
         4 000411   400000 316007                    CANQ    -131072,DL
         4 000412   000416 600000 4                  TZE     s:12774

     1081    12772    3                   CAND_P$ -> VXR$TMPLT.STATE = '1'B;

  12772  4 000413   100000 236007                    LDQ     32768,DL
         4 000414   000000 256100                    ORSQ    0,,PR0
         4 000415   000420 710000 4                  TRA     s:12775

     1082    12773    3               ELSE
     1083    12774    3                   CAND_P$ -> VXR$TMPLT.STATE = '0'B;

  12774  4 000416   000034 236000 5                  LDQ     28
         4 000417   000000 356100                    ANSQ    0,,PR0

     1084    12775    3               CAND_P$ = PINCRW( CAND_P$, SIZEW( VXR$TMPLT ) );

  12775  4 000420   200010 236100                    LDQ     CAND_P$,,AUTO
         4 000421   000001 036003                    ADLQ    1,DU
         4 000422   200010 756100                    STQ     CAND_P$,,AUTO

     1085    12776    3               END; /* Do while( CAND_P$ <= CAND_Q$ ); */

  12776  4 000423   200007 116100                    CMPQ    CAND_Q$,,AUTO
         4 000424   000407 602000 4                  TNC     s:12771
         4 000425   000407 600000 4                  TZE     s:12771

     1086    12777
     1087    12778    2           CALL VXQ$SORT(

  12778  4 000426   000027 236000 5                  LDQ     23
         4 000427   200020 756100                    STQ     CAND_P$+8,,AUTO
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:185  
         4 000430   000036 237000 5                  LDAQ    30
         4 000431   200016 757100                    STAQ    CAND_P$+6,,AUTO
         4 000432   000032 236000 5                  LDQ     26
         4 000433   200015 756100                    STQ     CAND_P$+5,,AUTO
         4 000434   000000 236000 xsym               LDQ     VX_CURR$
         4 000435   000047 036003                    ADLQ    39,DU
         4 000436   200014 756100                    STQ     CAND_P$+4,,AUTO
         4 000437   000000 236000 xsym               LDQ     VX_CURR$
         4 000440   000035 036003                    ADLQ    29,DU
         4 000441   200013 756100                    STQ     CAND_P$+3,,AUTO
         4 000442   000000 236000 xsym               LDQ     VX_CURR$
         4 000443   000032 036003                    ADLQ    26,DU
         4 000444   200012 756100                    STQ     CAND_P$+2,,AUTO
         4 000445   200012 630500                    EPPR0   CAND_P$+2,,AUTO
         4 000446   000025 631400 xsym               EPPR1   B_VECTNIL+21
         4 000447   000000 701000 xent               TSX1    VXQ$SORT
         4 000450   000000 011000                    NOP     0

     1088    12779    2              VX_CURR$ -> VX$NODE.L_START.RN$,
     1089    12780    2              VX_CURR$ -> VX$NODE.L_START.ER$,
     1090    12781    2              VX_CURR$ -> VX$NODE.L_STOP.ER$,
     1091    12782    2              SIZEW( VXR$TMPLT ),
     1092    12783    2              1,
     1093    12784    2              0,
     1094    12785    2              0 );
     1095    12786    2           END; /* If VX_CURR$ -> VX$NODE.L_START.ER$ ~= addr(nil) then do; */

     1096    12787         /* End of incorporation */
     1097    12788    1       RETURN;

  12788  4 000451   000000 702200 xent               TSX2  ! X66_ARET

     1098    12789        %EJECT;
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:186  
     1099    12790    1   VXO$DEL_PATCH_FILE: ENTRY;

  12790  4 000452   000000 700200 xent  VXO$DEL_PAT* TSX0  ! X66_AUTO_0
         4 000453   000022 000000                    ZERO    18,0

     1100    12791
     1101    12792    1       FPT_OPEN.V.FUN# = %IN#;

  12792  4 000454   002000 236007                    LDQ     1024,DL
         4 000455   000045 552010 1                  STBQ    FPT_OPEN+37,'10'O

     1102    12793    1       FPT_OPEN.V.DELETE# = %YES#;

  12793  4 000456   040000 236007                    LDQ     16384,DL
         4 000457   000044 256000 1                  ORSQ    FPT_OPEN+36

     1103    12794    1       CALL M$OPEN( FPT_OPEN ) ALTRET( OPEN_ERROR );

  12794  4 000460   000000 630400 1                  EPPR0   FPT_OPEN
         4 000461   450000 713400                    CLIMB   alt,open
         4 000462   410400 401760                    pmme    nvectors=18
         4 000463   000465 702000 4                  TSX2    OPEN_ERROR

     1104    12795    1       RETURN;

  12795  4 000464   000000 702200 xent               TSX2  ! X66_ARET

     1105    12796
     1106    12797        %EJECT;
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:187  
     1107    12798    1   OPEN_ERROR:
     1108    12799        /*E*  ERROR: VXO-E$PATCH_OPEN_VX-0
     1109    12800              MESSAGE: Internal LINK error.  Unable to open %FN
     1110    12801              DESCRIPTION: Unable to open *********************B_PATCH. This file is
     1111    12802                      used to generate an object unit for the DPATCH and IPATCH options
     1112    12803        */
     1113    12804    1       VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );

  12804  4 000465   000000 236007 xsym  OPEN_ERROR   LDQ     M$OF,DL
         4 000466   000000 620006                    EAX0    0,QL
         4 000467   000026 740000 xsym               STX0    VX_FPT_ERRMSG+22

     1114    12805            %SCREAM( ERR#=E$PATCH_OPEN_VX, MID="'O'", LEVEL=@E$F_D_VX );

  12806  4 000470   000042 630400 5                  EPPR0   34
         4 000471   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 000472   000000 701000 xent               TSX1    VXE$ERROR
         4 000473   000000 011000                    NOP     0

     1115    12808    1       CALL M$MERC ALTRET(MERC_ERROR);

  12808  4 000474   410007 713400                    CLIMB   alt,+4103
         4 000475   000000 401760                    pmme    nvectors=0
         4 000476   000515 702000 4                  TSX2    MERC_ERROR

     1116    12809            %ERROR_IT;

  12810  4 000477   000002 713400                    CLIMB   err
         4 000500   000000 401760                    pmme    nvectors=0

     1117    12812
     1118    12813    1   WRITE_ERROR:
     1119    12814        /*E*  ERROR:      VXO-E$PATCH_WRITE_VX-0
     1120    12815              MESSAGE: Internal LINK error.  Unable to write to %FN
     1121    12816              DESCRIPTION: Unable to write to *********************B_PATCH file to
     1122    12817                           generate an object unit for the DPATCH and IPATCH options
     1123    12818        */
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:188  
     1124    12819    1       VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );

  12819  4 000501   000000 236007 xsym  WRITE_ERROR  LDQ     M$OF,DL
         4 000502   000000 620006                    EAX0    0,QL
         4 000503   000026 740000 xsym               STX0    VX_FPT_ERRMSG+22

     1125    12820            %SCREAM( ERR#=E$PATCH_WRITE_VX, MID="'O'", LEVEL=@E$F_D_VX );

  12821  4 000504   000047 630400 5                  EPPR0   39
         4 000505   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 000506   000000 701000 xent               TSX1    VXE$ERROR
         4 000507   000000 011000                    NOP     0

     1126    12823    1       CALL M$MERC ALTRET(MERC_ERROR);

  12823  4 000510   410007 713400                    CLIMB   alt,+4103
         4 000511   000000 401760                    pmme    nvectors=0
         4 000512   000515 702000 4                  TSX2    MERC_ERROR

     1127    12824            %ERROR_IT;

  12825  4 000513   000002 713400                    CLIMB   err
         4 000514   000000 401760                    pmme    nvectors=0

     1128    12827    1   MERC_ERROR:
     1129    12828    1       CALL VXE$MERC;

  12828  4 000515   000002 631400 xsym  MERC_ERROR   EPPR1   B_VECTNIL+2
         4 000516   000000 701000 xent               TSX1    VXE$MERC
         4 000517   000000 011000                    NOP     0

     1130    12829
     1131    12830    1   END VXO$PATCH;

  12830  4 000520   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:189  
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXO$PATCH.
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:190  

 **** Variables and constants ****

  ****  Section 001  Data  VXO$PATCH

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   170-0-0/w STRC(216)   r     1 DD_RECORD                146-0-0/w STRC(432)   r     1 DN_RECORD
   166-0-0/w STRC(72)    r     1 ED_RECORD
   203-0-0/b BIT (72)    r     1 FORM1_BUF_(0:3)
   176-0-0/w STRC(72)    r     1 FORM1_KEY                200-0-0/w STRC(108)   r     1 FORM2_KEY
     0-0-0/d STRC(2088)  r     1 FPT_OPEN                  72-0-0/d STRC(432)   r     1 FPT_WRITE
   106-0-0/c STRC(90)    r     1 HEAD_KEY                 111-0-0/w STRC(1044)  r     1 HEAD_RECORD
   221-0-0/w UBIN        r     1 NUM_FORM1_RECS           213-0-0/w STRC(144)   r     1 PROC_RECORD
   217-0-0/w STRC(72)    r     1 RELOC_RECORD             162-0-0/w STRC(144)   r     1 SC_RECORD

  ****  Section 002 RoData VXO$PATCH

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w UBIN        r     1 FORM1_REC_TYPES(0:3)
     0-0-0/c STRC(252)   r     1 VLP_NAME

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 ALL$                      10-0-0/w PTR         r     1 CAND_P$
     7-0-0/w PTR         r     1 CAND_Q$                    4-0-0/w UBIN        r     1 DEF_RTYPE
     3-0-0/w UBIN        r     1 I                          5-0-0/w UBIN        r     1 REF_RTYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:191  

     0-0-0/w PTR         r     1 VX_CURR$
     0-0-0/w UBIN        r     1 VX_DEF_REC_A(0:3)
     0-0-0/d STRC(936)   r     1 VX_FPT_ERRMSG              0-0-0/b BIT         r     1 VX_IN_PATCH
     0-0-0/w SBIN        r     1 VX_M_ALL(0:8)
     0-0-0/w PTR         r     1 VX_M_BASE_PTR(0:8)
     0-0-0/w SBIN        r     1 VX_M_FREE(0:8)
     0-0-0/w STRC(4572)  r     1 VX_O                       0-0-0/w STRC(1044)  r     1 VX_OU_HEAD
     0-0-0/w SBIN        r     1 VX_PASS1_ALL_TYPE(0:9)
     0-0-0/w SBIN        r     1 VX_REF_MATCH_A(0:9)
     0-0-0/w PTR         r     1 VX_ROOT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$OF                       0-0-0/w STRC(648)   r     1 VX$LST
     0-0-0/w STRC(3672)  r     1 VX$NODE                    0-0-0/w STRC        r     1 VXR$TMPLT


   Procedure VXO$PATCH requires 337 words for executable code.
   Procedure VXO$PATCH requires 18 words of local(AUTO) storage.

    No errors detected in file VXO$IMPL.:E05TSI    .
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:192  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:193  
          MINI XREF LISTING

ALL$
     12649**DCL     12719<<ASSIGN  12722<>CALL    12724>>ASSIGN  12725>>ASSIGN  12726>>ASSIGN  12727>>ASSIGN
     12728>>ASSIGN  12729>>ASSIGN  12729>>ASSIGN  12730>>ASSIGN  12731>>ASSIGN  12732>>ASSIGN  12733>>ASSIGN
     12734>>ASSIGN  12735>>ASSIGN  12736>>ASSIGN  12737>>ASSIGN  12741>>ASSIGN  12742>>ASSIGN  12743<>CALL
     12744<>CALL    12747<>CALL    12749<>CALL
CAND_P$
     12651**DCL     12768<<ASSIGN  12770>>DOWHILE 12771>>IF      12772>>ASSIGN  12774>>ASSIGN  12775<<ASSIGN
     12775>>ASSIGN
CAND_Q$
     12650**DCL     12769<<ASSIGN  12770>>DOWHILE
DD_RECORD
     12410**DCL     12664--ASSIGN  12665--ASSIGN  12666--ASSIGN
DD_RECORD.H
     12411**DCL     12279--DCLINIT 12280--DCLINIT 12515--DCLINIT
DD_RECORD.H.B_PATCHDH.OFFSET
     12422**DCL     12677<<ASSIGN
DD_RECORD.H.B_PATCHIH.OFFSET
     12415**DCL     12676<<ASSIGN
DEF_RTYPE
     12591**DCL     12752<<ASSIGN  12753>>ASSIGN  12754>>IF      12755>>CALL    12755>>CALL
DN_RECORD
     12311**DCL     12271--DCLINIT 12272--DCLINIT 12513--DCLINIT
ED_RECORD
     12383**DCL     12679--ASSIGN  12680--ASSIGN  12681--ASSIGN
FORM1_BUF_
     12512**DCL     12664<<ASSIGN  12681<<ASSIGN  12690>>ASSIGN
FORM1_KEY
     12449**DCL     12087--DCLINIT
FORM1_KEY.REC_TYPE
     12453**DCL     12691<<ASSIGN
FORM1_REC_TYPES
     12495**DCL     12691>>ASSIGN
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:194  
FORM2_KEY
     12471**DCL     12698--ASSIGN
FORM2_KEY.OFFSET
     12477**DCL     12678<<ASSIGN
FORM2_KEY.SUB_TYPE
     12478**DCL     12704<<ASSIGN
FPT_OPEN
     11999**DCL     12654<>CALL    12794<>CALL
FPT_OPEN.ACSVEH_
     12001**DCL     12002--REDEF
FPT_OPEN.ALTKEYS_
     12007**DCL     12008--REDEF   12008--REDEF
FPT_OPEN.HDR_
     12006**DCL     12007--REDEF
FPT_OPEN.TAB_
     12005**DCL     12006--REDEF
FPT_OPEN.UHL_
     11999**DCL     12000--REDEF   12000--REDEF
FPT_OPEN.V
     12008**DCL     11999--DCLINIT
FPT_OPEN.V.ASN#
     12018**DCL     12737>>ASSIGN
FPT_OPEN.V.DELETE#
     12010**DCL     12793<<ASSIGN
FPT_OPEN.V.FSN#
     12039**DCL     12039--REDEF   12039--REDEF
FPT_OPEN.V.FUN#
     12018**DCL     12792<<ASSIGN
FPT_OPEN.WSN_
     12005**DCL     12005--REDEF
FPT_WRITE
     12087**DCL     12692<>CALL    12700<>CALL    12706<>CALL    12712<>CALL
FPT_WRITE.BUF_
     12087**DCL     12690<<ASSIGN  12699<<ASSIGN  12705<<ASSIGN  12711<<ASSIGN
FPT_WRITE.KEY_
     12087**DCL     12698<<ASSIGN  12710<<ASSIGN
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:195  
FPT_WRITE.STATION_
     12089**DCL     12089--REDEF
FPT_WRITE.V
     12090**DCL     12087--DCLINIT
FPT_WRITE.V.DVBYTE.VFC#
     12096**DCL     12096--REDEF
HEAD_KEY
     12239**DCL     12710--ASSIGN
HEAD_RECORD
     12258**DCL     12711--ASSIGN  12745>>ASSIGN
HEAD_RECORD.DD_PAGE
     12280**DCL     12666<<ASSIGN
HEAD_RECORD.DD_SIZE
     12279**DCL     12665<<ASSIGN
HEAD_RECORD.ED_PAGE
     12276**DCL     12680<<ASSIGN
HEAD_RECORD.ED_SIZE
     12275**DCL     12679<<ASSIGN
I
     12590**DCL     12689<<DOINDEX 12690>>ASSIGN  12691>>ASSIGN  12751<<DOINDEX 12752>>ASSIGN
M$ERR
        55**DCL-ENT 12810--CALL    12825--CALL
M$MERC
        99**DCL-ENT 12808--CALL    12823--CALL
M$OF
     12117**DCL     12804>>ASSIGN  12819>>ASSIGN
M$OPEN
        43**DCL-ENT 12654--CALL    12794--CALL
M$WRITE
        44**DCL-ENT 12692--CALL    12700--CALL    12706--CALL    12712--CALL
MERC_ERROR
     12828**LABEL   12808--CALLALT 12823--CALLALT
NUM_FORM1_RECS
     12589**DCL     12682<<ASSIGN  12689>>DOINDEX
OPEN_ERROR
     12804**LABEL   12654--CALLALT 12794--CALLALT
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:196  
PROC_RECORD
     12533**DCL     12699--ASSIGN
PROC_RECORD.B_PATCHDH.SEGID
     12542**DCL     12661<<ASSIGN
PROC_RECORD.B_PATCHDH.SIZE
     12543**DCL     12660<<ASSIGN
PROC_RECORD.B_PATCHIH.SEGID
     12537**DCL     12674<<ASSIGN
PROC_RECORD.B_PATCHIH.SIZE
     12538**DCL     12673<<ASSIGN
REF_RTYPE
     12592**DCL     12753<<ASSIGN
RELOC_RECORD
     12560**DCL     12705--ASSIGN
RELOC_RECORD.B_PATCHDH.OPERAND
     12571**DCL     12663<<ASSIGN
RELOC_RECORD.B_PATCHDH.OPTYPE
     12568**DCL     12662<<ASSIGN
RELOC_RECORD.B_PATCHIH.OPTYPE
     12562**DCL     12675<<ASSIGN
SC_RECORD
     12344**DCL     12514--DCLINIT
SC_RECORD.DATA_SECTION.SIZE
     12364**DCL     12659<<ASSIGN
SC_RECORD.PROC_SECTION.SIZE
     12353**DCL     12672<<ASSIGN
VLP_NAME
     12068**DCL     12000--DCLINIT 12730--ASSIGN
VX$LST
     11792**DCL     12718--IF      12720--ASSIGN  12722--CALL
VX$LST.LINK$
     11793**DCL     12724<<ASSIGN  12741<<ASSIGN
VX$LST.OBJECT_NAME$
     11796**DCL     11797--REDEF   12727<<ASSIGN
VX$LST.P.ACCT_
     11810**DCL     12731<<ASSIGN
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:197  
VX$LST.P.ASN
     11836**DCL     12737<<ASSIGN
VX$LST.P.B.ASN
     11832**DCL     12736<<ASSIGN
VX$LST.P.B.RES
     11831**DCL     12735<<ASSIGN
VX$LST.P.NAME_
     11805**DCL     12730<<ASSIGN
VX$LST.P.PASS_
     11815**DCL     12732<<ASSIGN
VX$LST.P.SN_
     11820**DCL     12733<<ASSIGN
VX$LST.P.WSN_
     11825**DCL     12734<<ASSIGN
VX$LST.SC_HEAD$
     11798**DCL     11799--REDEF   12728<<ASSIGN  12729--ASSIGN
VX$LST.SC_TAIL$
     11800**DCL     11801--REDEF   12729<<ASSIGN
VX$LST.SUB_TYPE
     11795**DCL     12726<<ASSIGN
VX$LST.TYPE
     11794**DCL     12725<<ASSIGN
VX$NODE.ADDR_START_A
     11665**DCL     11666--REDEF
VX$NODE.ADDR_STOP_A
     11670**DCL     11671--REDEF
VX$NODE.L_PREV_SIZE
     11723**DCL     11734--REDEF
VX$NODE.L_SC_START
     11742**DCL     11747--REDEF
VX$NODE.L_SC_STOP
     11748**DCL     11753--REDEF
VX$NODE.L_SIZE
     11711**DCL     11722--REDEF
VX$NODE.L_START
     11687**DCL     11698--REDEF
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:198  
VX$NODE.L_START.DN$
     11689**DCL     12755<>CALL
VX$NODE.L_START.ER$
     11693**DCL     12767>>IF      12768>>ASSIGN  12778<>CALL
VX$NODE.L_START.RN$
     11690**DCL     12778<>CALL
VX$NODE.L_START_A$
     11698**DCL     12754>>IF      12755<>CALL
VX$NODE.L_STOP
     11699**DCL     11710--REDEF
VX$NODE.L_STOP.ER$
     11705**DCL     12769>>ASSIGN  12778<>CALL
VX$NODE.L_STOP_A$
     11710**DCL     12755<>CALL
VX$NODE.PROMOTE_HEAD
     11754**DCL     11757--REDEF
VX$NODE.PROMOTE_TAIL
     11758**DCL     11761--REDEF
VX$NODE.START_PAGE#_A
     11675**DCL     11676--REDEF
VX$NODE.STOP_PAGE#_A
     11680**DCL     11681--REDEF
VX$NODE.TAIL$
     11659**DCL     12741>>ASSIGN  12742<<ASSIGN
VXA$GET
     12619**DCL-ENT 12722--CALL
VXE$ERROR
     12610**DCL-ENT 12806--CALL    12821--CALL
VXE$MERC
     12612**DCL-ENT 12828--CALL
VXF$CLOSE
     12627**DCL-ENT 12743--CALL    12749--CALL
VXF$OPEN
     12626**DCL-ENT 12744--CALL
VXO$OBJECT
     12624**DCL-ENT 12747--CALL
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:199  
VXQ$SORT
     12621**DCL-ENT 12755--CALL    12778--CALL
VXR$SAT.VALUE
     11902**DCL     11903--REDEF
VXR$TMPLT
     11861**DCL     12775--ASSIGN  12778--CALL
VXR$TMPLT.GOT
     11867**DCL     11869--REDEF
VXR$TMPLT.SREF
     11864**DCL     12771>>IF
VXR$TMPLT.STATE
     11869**DCL     12772<<ASSIGN  12774<<ASSIGN
VX_BIAS.A
      9209**DCL      9210--REDEF
VX_CBUF.CHARS_A
      9143**DCL      9144--REDEF
VX_CURR$
      9178**DCL     12767>>IF      12768>>ASSIGN  12769>>ASSIGN  12778>>CALL    12778>>CALL    12778>>CALL
VX_DEF_REC_A
      9850**DCL     12751--DOINDEX 12752>>ASSIGN
VX_EBUF.CHARS_A
      9732**DCL      9733--REDEF
VX_EFIELD1.CHARS
      9741**DCL      9742--REDEF
VX_EFIELD2.CHARS
      9745**DCL      9746--REDEF
VX_EFIELD3.CHARS
      9749**DCL      9750--REDEF
VX_EI_KEY_BUF.KEY
     10125**DCL     10126--REDEF
VX_ERRORS
      9186**DCL      9197--REDEF
VX_ERRORS.CONFLICT_A
      9192**DCL      9193--REDEF
VX_ERRORS.UNSAT_A
      9188**DCL      9189--REDEF
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:200  
VX_FPT_ERRMSG.V.DCB#
     10415**DCL     12804<<ASSIGN  12819<<ASSIGN
VX_IMAGE_DATA.CPAGE#_A
     10604**DCL     10605--REDEF
VX_IMAGE_DATA.NODE_A$
     10616**DCL     10617--REDEF
VX_IMAGE_DATA.START_A$
     10608**DCL     10609--REDEF
VX_IMAGE_DATA.STOP_A$
     10612**DCL     10613--REDEF
VX_IMAGE_DS3.CPAGE#_A
     10673**DCL     10674--REDEF
VX_IMAGE_DS3.NODE_A$
     10685**DCL     10686--REDEF
VX_IMAGE_DS3.START_A$
     10677**DCL     10678--REDEF
VX_IMAGE_DS3.STOP_A$
     10681**DCL     10682--REDEF
VX_IMAGE_DS4.CPAGE#_A
     10696**DCL     10697--REDEF
VX_IMAGE_DS4.NODE_A$
     10708**DCL     10709--REDEF
VX_IMAGE_DS4.START_A$
     10700**DCL     10701--REDEF
VX_IMAGE_DS4.STOP_A$
     10704**DCL     10705--REDEF
VX_IMAGE_DS5.CPAGE#_A
     10719**DCL     10720--REDEF
VX_IMAGE_DS5.NODE_A$
     10731**DCL     10732--REDEF
VX_IMAGE_DS5.START_A$
     10723**DCL     10724--REDEF
VX_IMAGE_DS5.STOP_A$
     10727**DCL     10728--REDEF
VX_IMAGE_DS6.CPAGE#_A
     10742**DCL     10743--REDEF
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:201  
VX_IMAGE_DS6.NODE_A$
     10754**DCL     10755--REDEF
VX_IMAGE_DS6.START_A$
     10746**DCL     10747--REDEF
VX_IMAGE_DS6.STOP_A$
     10750**DCL     10751--REDEF
VX_IMAGE_DS7.CPAGE#_A
     10765**DCL     10766--REDEF
VX_IMAGE_DS7.NODE_A$
     10777**DCL     10778--REDEF
VX_IMAGE_DS7.START_A$
     10769**DCL     10770--REDEF
VX_IMAGE_DS7.STOP_A$
     10773**DCL     10774--REDEF
VX_IMAGE_DS8.CPAGE#_A
     10788**DCL     10789--REDEF
VX_IMAGE_DS8.NODE_A$
     10800**DCL     10801--REDEF
VX_IMAGE_DS8.START_A$
     10792**DCL     10793--REDEF
VX_IMAGE_DS8.STOP_A$
     10796**DCL     10797--REDEF
VX_IMAGE_PROC.CPAGE#_A
     10627**DCL     10628--REDEF
VX_IMAGE_PROC.NODE_A$
     10639**DCL     10640--REDEF
VX_IMAGE_PROC.START_A$
     10631**DCL     10632--REDEF
VX_IMAGE_PROC.STOP_A$
     10635**DCL     10636--REDEF
VX_IMAGE_ROS.CPAGE#_A
     10650**DCL     10651--REDEF
VX_IMAGE_ROS.NODE_A$
     10662**DCL     10663--REDEF
VX_IMAGE_ROS.START_A$
     10654**DCL     10655--REDEF
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:202  
VX_IMAGE_ROS.STOP_A$
     10658**DCL     10659--REDEF
VX_IN_PATCH
      9173**DCL     12746<<ASSIGN  12748<<ASSIGN
VX_M_ALL
      9220**DCL     12718>>IF
VX_M_BASE_PTR
      9222**DCL     12719>>ASSIGN
VX_M_FREE
      9218**DCL     12718>>IF      12719>>ASSIGN  12720<<ASSIGN  12720>>ASSIGN
VX_M_VECTOR.F
     10455**DCL     10459--REDEF
VX_M_VECTOR_DP.F
     10490**DCL     10494--REDEF
VX_O.ACCTN_A$
      9338**DCL      9339--REDEF
VX_O.DCB_MATCH_A$
      9347**DCL      9348--REDEF
VX_O.DCB_MATCH_HIT_A
      9353**DCL      9354--REDEF
VX_O.FIDN_A$
      9332**DCL      9333--REDEF
VX_O.FID_A$
      9324**DCL      9325--REDEF
VX_O.INCLUDE_A$
      9344**DCL      9345--REDEF
VX_O.MAP_A
      9318**DCL      9319--REDEF
VX_O.NODCB_A
      9375**DCL      9376--REDEF
VX_O.NUM.DPATCH
      9274**DCL     12658>>IF      12659>>ASSIGN  12660>>ASSIGN
VX_O.NUM.IPATCH
      9275**DCL     12671>>IF      12672>>ASSIGN  12673>>ASSIGN  12676>>ASSIGN  12677>>ASSIGN  12678>>ASSIGN
VX_O.NUM_A
      9263**DCL      9265--REDEF
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:203  
VX_O.OPT_A
      9363**DCL      9364--REDEF
VX_O.PRIV_A
      9279**DCL      9281--REDEF
VX_O.SIN_A
      9232**DCL      9233--REDEF
VX_O.TCB_A
      9359**DCL      9360--REDEF
VX_OD.ACCTN_A$
      9536**DCL      9537--REDEF
VX_OD.DCB_MATCH_A$
      9545**DCL      9546--REDEF
VX_OD.FIDN_A$
      9530**DCL      9531--REDEF
VX_OD.FID_A$
      9522**DCL      9523--REDEF
VX_OD.INCLUDE_A$
      9542**DCL      9543--REDEF
VX_OD.MAP_A
      9516**DCL      9517--REDEF
VX_OD.NODCB_A
      9560**DCL      9561--REDEF
VX_OD.NUM_A
      9463**DCL      9464--REDEF
VX_OD.PRIV_A
      9478**DCL      9479--REDEF
VX_OD.SIN_A
      9432**DCL      9433--REDEF
VX_OD.VECTOR_A$
      9551**DCL      9552--REDEF
VX_OL.MAX_A
      9407**DCL      9409--REDEF
VX_OL.MIN_A
      9392**DCL      9393--REDEF
VX_ON.ACCTN_A$
      9681**DCL      9683--REDEF
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:204  
VX_ON.DCB_MATCH_A$
      9692**DCL      9694--REDEF
VX_ON.FIDN_A$
      9674**DCL      9676--REDEF
VX_ON.FID_A$
      9665**DCL      9667--REDEF
VX_ON.INCLUDE_A$
      9688**DCL      9690--REDEF
VX_ON.MAP_A
      9658**DCL      9660--REDEF
VX_ON.NODCB_A$
      9708**DCL      9709--REDEF
VX_ON.NUM_A
      9603**DCL      9605--REDEF
VX_ON.PRIV_A
      9619**DCL      9621--REDEF
VX_ON.SIN_A
      9571**DCL      9573--REDEF
VX_ON.VECTOR_A$
      9699**DCL      9700--REDEF
VX_OUHEAD.VERSION
      9018**DCL      9020--REDEF
VX_OU_HEAD
      8961**DCL      9000--REDEF   12745<<ASSIGN
VX_OU_HEAD.REC_A
      8973**DCL      8976--REDEF
VX_O_KEY_BUF.FORM0
     10503**DCL     10506--REDEF   10513--REDEF
VX_O_KEY_BUF_L.FORM0
     10526**DCL     10529--REDEF   10536--REDEF
VX_PASS1_ALL_TYPE
      9846**DCL     12747--CALL
VX_PASS2_REF.OU.L_START
      9911**DCL      9916--REDEF
VX_PASS2_REF.OU.L_STOP
      9917**DCL      9922--REDEF
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:205  
VX_PASS2_REF.OU.MAX
      9905**DCL      9910--REDEF
VX_PASS2_REF.OU.SIZE
      9923**DCL      9928--REDEF
VX_PASS2_REF.SAT.COUNT
      9950**DCL      9956--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
      9957**DCL      9963--REDEF
VX_PASS2_REF.SAT.L_START
      9936**DCL      9942--REDEF
VX_PASS2_REF.SAT.L_STOP
      9943**DCL      9949--REDEF
VX_PASS2_REF.SAT.MAX
      9930**DCL      9935--REDEF
VX_PASS2_REF.UNSAT.L_START
      9998**DCL     10003--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10004**DCL     10009--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10010**DCL     10015--REDEF
VX_PASS2_REF.UNSAT.MAX
      9992**DCL      9997--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10022**DCL     10027--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10016**DCL     10021--REDEF
VX_PHRASE.PHRASE
      9424**DCL      9426--REDEF
VX_PROGRAM_BIAS.A
      9202**DCL      9203--REDEF
VX_REF_MATCH_A
      9853**DCL     12753>>ASSIGN
VX_ROOT$
      9175**DCL     12741>>ASSIGN  12742>>ASSIGN  12754>>IF      12755>>CALL    12755>>CALL    12755>>CALL
VX_R_KEY_BUF.FORM0
     10552**DCL     10556--REDEF   10562--REDEF
PL6.E3A0      #002=VXO$PATCH File=VXO$IMPL.:E05TSI                               WED 07/30/97 08:26 Page:206  
VX_SD.A
     10180**DCL     10181--REDEF
VX_SPC.B$.MINE
     10093**DCL     10099--REDEF
VX_SPC.B$.NAME
     10072**DCL     10078--REDEF
VX_SPC.B$.SKIP
     10086**DCL     10092--REDEF
VX_SPC.B$.VALUE
     10079**DCL     10085--REDEF
VX_SPC.SEG.NAME
     10041**DCL     10047--REDEF
VX_SPC.SEG.VALUE
     10048**DCL     10054--REDEF
VX_TSX0_OVERLAY.H
      9816**DCL      9819--REDEF
WRITE_ERROR
     12819**LABEL   12692--CALLALT 12700--CALLALT 12706--CALLALT 12712--CALLALT
