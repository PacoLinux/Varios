VERSION E05

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:1    
        1        1        /*M*   Deblock Input and Collect Output Blocks      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC     */
        8        8
        9        9
       10       10
       11       11        KZL$DBLK: PROC (KZ$LINCTX) ALTRET;
       12       12
       13       13        /*P* NAME: KZL$DBLK
       14       14             PURPOSE: KZL$DBLK contains two procedures.  KZL$DBLK parses
       15       15              an input block to provide input records to VDH.  KZL$BBLK
       16       16              obtains an output block for transmission by searching the
       17       17              device output queues.
       18       18
       19       19                                                                           */
       20       20
       21       21        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:2    
       22       22
       23       23        %INCLUDE KV$VDH;
       24      454        %INCLUDE KV_GLBCNS_E;
       25      795        %INCLUDE KV$GLB;
       26     1214        %INCLUDE KV_GLB_M;
       27     1336        %INCLUDE KV$GLBCTX;
       28     1781        %INCLUDE KV$VDO;
       29     2796        %INCLUDE KZ$LINCTX;
       30     3416        %INCLUDE KZ$RBT_M;
       31     3975        %INCLUDE KZ_PERR_C;
       32     4057        %INCLUDE KZ$OTPBFR;
       33     4158        %INCLUDE KZ$INPBFR;
       34     4218        %INCLUDE KZ_3270_C;
       35     4376        %INCLUDE KZ_CLM_E;
       36     4548        %INCLUDE KL_SUPER_C;
       37     7450        %INCLUDE KL_MACRO_C;
       38    10802        %INCLUDE LCP_6;
       39    15081        %INCLUDE CP_6_SUBS;
       40    15621        %INCLUDE KL_AFCN_C;
       41    15722        %INCLUDE K_ID_E;
       42    15772        %K#ENTID_E;
       43    15791        %K#LYRID_E;
       44    15798        %INCLUDE NK_VFC_C;
       45    15872
       46    15873
       47    15874
       48    15875        %KZ$SDVCTX (STCLASS="BASED(DCTX$)");
       49    16187        %KZ$HASPBLK (STCLASS="BASED(BLK$)");
       50    16220        %KZ$HASPRCB (STCLASS="BASED(BLK$)");
       51    16238        %KZ$HASPSCB (STCLASS="BASED(BLK$)");
       52    16261        %KZ$RBT_E;
       53    16291        %KZ$RBTVFC_E;
       54    16302        %KZ$RBTERR (NAME=ERRCTX);
       55    16323        %KV_CMPCOD_E;
       56    16337        %KV_INPOPRX_E;
       57    16349        %KZ_3270_E;
       58    16477        %KZ$OTPBFR;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:3    
       59    16542        %KZ$INPBFR (NAME=KZ$INPBFR,STCLASS="BASED(T$)");
       60    16575
       61    16576        %KV_SCHRSN_E;
       62    16583        %KV_BFRRLSDSP_E;
       63    16589        %KV#DATMOD_E;
       64    16595        %KV_DATCTRCHRTYP_E;
       65    16601        %KV$VDI;
       66    16672        %KV$PTR;
       67    16715        %KV$USRPRM;
       68    16766        %KV$SSN;
       69    16845        %KV$STT;
       70    17239        %KV@USRENT;
       71    17259
       72    17260
       73    17261
       74    17262        /*       SYMREFS                   */
       75    17263
       76    17264        %KV$VDH_DAT (NAME=KV_VDH_DAT,STCLASS=SYMREF);
       77    17344        %KZ$OTPBFR (NAME=KZ_OTPBFR,STCLASS=SYMREF);  /* DEF'd in KZD$DEVMGR */
       78    17409
       79    17410
       80    17411        /*    Static    */
       81    17412
       82    17413        %KV$VDH_EVT (NAME=KV@VDH_EVT,STCLASS=CONSTANT,ID=KV_VDH_EVT_ID_ATN);
       83    17448        %FPT_WRSYSLOG (FPTN=FPT@WRSYSLOG,
       84    17449                       FCG='KZ',
       85    17450                       MID='L',
       86    17451                       SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
       87    17452                       STCLASS=CONSTANT);
       88    17547        %KZ$INPBFR (NAME=KZ_INPBFR,STCLASS=CONSTANT);
       89    17580
       90    17581        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:4    
       91    17582
       92    17583        /*D* NAME: KZL$DBLK
       93    17584             CALL:
       94    17585                 CALL KZL$DBLK (Line-context);
       95    17586             ENVIRONMENT:
       96    17587                 Called at the input-complete interrupt level.
       97    17588             PARAMETERS:
       98    17589                 Line-context is the line context table.
       99    17590             OUTPUT:
      100    17591                 A series of messages for VDH.
      101    17592             DESCRIPTION:
      102    17593                 KZL$DBLK is entered with a pointer to the line context and
      103    17594                 thus the most recently received input block.  The input block is
      104    17595                 parsed and records are decompressed and moved into a buffer
      105    17596                 for transmitting to the host by VDH.  The input block may
      106    17597                 be HASP, 3780 or 2780 format.
      107    17598                 An ALTRETURN can only occur on 2780/3780 input.  It indicates
      108    17599                 that the device was not able to accept input for one of the
      109    17600                 following reasons:
      110    17601                    Not opened.  A ATTN was sent to the host.
      111    17602                    ATTN was sent but device open hasn't occured yet.
      112    17603                    The device was throttled.
      113    17604        */
      114    17605
      115    17606        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:5    
      116    17607
      117    17608        /* Parameters                                                      */
      118    17609
      119    17610        %KZ$LINCTX (STCLASS="");
      120    18041
      121    18042        /*  Auto                                                           */
      122    18043
      123    18044    1   DCL LCTX$ PTR;
      124    18045    1   DCL DCTX$ PTR;
      125    18046    1   DCL BLK$ PTR;
      126    18047    1   DCL BRK$ PTR;
      127    18048    1   DCL C BIT(8);
      128    18049    1   DCL X UBIN;
      129    18050    1   DCL I UBIN;
      130    18051    1   DCL J UBIN;
      131    18052    1   DCL K SBIN;
      132    18053    1   DCL L UBIN;
      133    18054    1   DCL N UBIN;
      134    18055    1   DCL BLKRECS SBIN;
      135    18056    1   DCL BUF$ PTR;
      136    18057    1   DCL T$ PTR;
      137    18058    1   DCL VDH_ENTERED BIT(1);
      138    18059    1   DCL NEXTI UBIN;
      139    18060    1   DCL FIRST_DEV$ PTR;
      140    18061    1   DCL DEV_REM UBIN;
      141    18062    1   DCL CHRN CHAR(N) BASED;
      142    18063    1   DCL CHR32 CHAR(32) BASED(BLK$);
      143    18064    1   DCL SNDFCS BIT(16);
      144    18065    1   DCL RECSIZE UBIN;
      145    18066    1   DCL SZ UBIN;
      146    18067        %KZ$EVENT (FPTN=KZ_EVENT,STCLASS="");
      147    18149        %KV$VDH_EVT (STCLASS="");
      148    18184        %FPT_WRSYSLOG (STCLASS="");
      149    18279        %KV$VDH_DAT (STCLASS="");
      150    18359        %NK$VFC (NAME=CP6_VFC,STCLASS="");
      151    18377        %KZ$HASPSRCB (NAME=HASP_VFC,STCLASS=AUTO);
      152    18401        /*    Procedures                                                   */
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:6    
      153    18402
      154    18403    1   DCL KZD$BLDEOF ENTRY(1) ALTRET;
      155    18404    1   DCL KZD$TRNCOTPBLK ENTRY ALTRET;
      156    18405    1   DCL KZR$KILL_LINE ENTRY(1) ALTRET;
      157    18406    1   DCL KZR_CNCDSC@ EPTR SYMREF;
      158    18407    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
      159    18408    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
      160    18409    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      161    18410    1   DCL KVV$VDI ENTRY(1) ALTRET;
      162    18411    1   DCL KHA$ERRLOG ENTRY(2) ALTRET;
      163    18412
      164    18413
      165    18414        /*    based       */
      166    18415
      167    18416    1   DCL 1 BYT(0:0) BASED(BLK$) CALIGNED,
      168    18417    1         2 * BIT(2) UNAL,
      169    18418    1         2 CT UBIN(6) UNAL;
      170    18419
      171    18420
      172    18421        /*    constant        */
      173    18422
      174    18423    1   DCL BLANK_ARRAY_IN_EBCDIC(0:63) BIT(8) CONSTANT INIT('40'X*0);
      175    18424    1   DCL BLANKS_IN_EBCDIC REDEF BLANK_ARRAY_IN_EBCDIC CHAR(64);
      176    18425
      177    18426        /*N*  KLUDGE AREA *** KLUDGE AREA *** KLUDGE AREA *** KLUDGE AREA *** KLUD  *N*/
      178    18427        /*N*  To make some site-specific patches easier, here's where we're         *N*/
      179    18428        /*N*  stashing away some CONSTANT SYMDEF values for HASP/2780/3780.         *N*/
      180    18429        /*N*  These "defaults" should be made into SUPER options on                 *N*/
      181    18430        /*N*  TERM/PROFILE/DEVICE creation commands.                                *N*/
      182    18431    1   DCL KZ_SLCCHR2780PNC BIT(8) ALIGNED SYMREF;
      183    18432    1   DCL KZ_SLCCHR3780PNC1 BIT(8) ALIGNED SYMREF;
      184    18433    1   DCL KZ_SLCCHR3780PNC2 BIT(8) ALIGNED SYMREF;
      185    18434    1   DCL KZ_SLCCHR3780PRN BIT(8) ALIGNED SYMREF;
      186    18435        /*N*  KLUDGE AREA *** KLUDGE AREA *** KLUDGE AREA *** KLUDGE AREA *** KLUD  *N*/
      187    18436        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:7    
      188    18437
      189    18438
      190    18439    1         LCTX$=ADDR(KZ$LINCTX);
      191    18440    1         BLK$ = KZ$LINCTX.INPBFR$;
      192    18441    1         CP6_VFC='0'B;
      193    18442
      194    18443    1         DCTX$ = KZ$LINCTX.CTRHD$;
      195    18444    1         IF KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP#
      196    18445    2            AND KZ$LINCTX.PRO.PROTYP ~= %KLPT_NJE# THEN DO;
      197    18446
      198    18447
      199    18448                 /* 2780/3780                                              */
      200    18449
      201    18450                 /* If there is not a current active input device, find one. */
      202    18451
      203    18452    3            IF KZ$LINCTX.CURDEV$ = ADDR(NIL) THEN DO;
      204    18453    3               IF KZ$LINCTX.PRO.SLAVE THEN
      205    18454    4                  IF KZ$LINCTX.PRO.SLC THEN DO;
      206    18455                          /* If the device sends selection bytes, check for
      207    18456                             2780/3780 CP select. */
      208    18457    4                     IF (KZ$LINCTX.PRO.PROTYP = %KLPT_2780# AND
      209    18458    4                        BYT(0) = '27'X AND BYT(1) = KZ_SLCCHR2780PNC
             18458                                 /* Default 'F4'X */ ) OR
      210    18459    4                        (KZ$LINCTX.PRO.PROTYP = %KLPT_3780# AND
      211    18460    4                        BYT(0) = KZ_SLCCHR3780PNC1 /* Default '12'X */ ) THEN
      212    18461    4                        J = %KZ_S_ACSCARD#;
      213    18462    4                     ELSE
      214    18463    4                        J = %KZ_S_ACSPRINT#;
      215    18464    4                     END;
      216    18465    4                  ELSE DO;
      217    18466                          /* If the device doesn't send selection bytes, check for
      218    18467                             ESC as first input character:  if so, assume LP select. */
      219    18468    4                     IF BYT(0) = '27'X THEN
      220    18469    4                        J = %KZ_S_ACSPRINT#;
      221    18470    4                     ELSE
      222    18471    4                        J = %KZ_S_ACSCARD#;
      223    18472    4                     END;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:8    
      224    18473    3               ELSE
      225    18474    3                  J = %KZ_S_ACSCARD#;
      226    18475    4               DO WHILE DCTX$ ~= ADDR(NIL);
      227    18476    4                  IF KZ$SDVCTX.MGR_TYPE = %KZ_S_DMINPUT# AND
      228    18477    5                     KZ$SDVCTX.ACCESS_METHOD = J THEN DO;
      229    18478
      230    18479                          /* Send an Attention request to the host  */
      231    18480
      232    18481    5                     KZ$LINCTX.CURDEV$=DCTX$;
      233    18482    5                     KZ$SDVCTX.FLAGS.FIRST='1'B;
      234    18483    5                     CALL BRKRQS;
      235    18484    5                     ALTRETURN;
      236    18485    5                     END;
      237    18486    4                  ELSE
      238    18487    4                     DCTX$=KZ$SDVCTX.LNK$;
      239    18488    4                  END;
      240    18489                    /* No input device was found to match the selection
      241    18490                       bytes specified by this input block.
      242    18491                       Set X = 0 (index into input block to use to grab
      243    18492                       2 characters for error logging) and disconnect. */
      244    18493    3               X = 0;
      245    18494    3               GOTO DBLK2;
      246    18495    3               END;
      247    18496
      248    18497                 /* We know which device to use, check its state.      */
      249    18498
      250    18499    2            DCTX$=KZ$LINCTX.CURDEV$;
      251    18500    2            IF KZ$SDVCTX.STATE ~= %KZ_S_SOPEN# THEN
      252    18501    2               ALTRETURN;
      253    18502    2            IF KZ$SDVCTX.FLAGS.SUSPEND_IN THEN
      254    18503    2               ALTRETURN;             /* Throttled                    */
      255    18504
      256    18505                 /* Device is able to accept some input.                   */
      257    18506
      258    18507    2            X=0;                      /* Index to first byte of record */
      259    18508    2            IF KZ$LINCTX.PRO.SLAVE AND
      260    18509    2               KZ$LINCTX.PRO.SLC AND
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:9    
      261    18510    2               (KZ$SDVCTX.FLAGS.FIRST OR KZ$LINCTX.PRO.SLCALLBLK) THEN
      262    18511                    /* SLAVE input with device selection:  skip over selection bytes.
      263    18512                       Don't check for the actual values of the selection bytes...
      264    18513                       if KZ_SLC and/or KZ_SLCALLBLK is set incorrectly, we'll
      265    18514                       lose some input.  This allows the device to accept these
      266    18515                       bytes if it really wants to.  */
      267    18516    2               IF KZ$LINCTX.PRO.PROTYP = %KLPT_3780# THEN
      268    18517    2                  X = 1;
      269    18518    2               ELSE
      270    18519    2                  IF J = %KZ_S_ACSCARD# THEN
      271    18520    2                     X = 2;
      272    18521    2            KZ$SDVCTX.FLAGS.FIRST='0'B;  /* First block of file    */
      273    18522    2            END;
      274    18523    2         ELSE DO;
      275    18524
      276    18525                /*  Speaking HASP                                                     */
      277    18526
      278    18527    3            DO WHILE (DCTX$ ~= ADDR(NIL));
      279    18528    4               IF KZ$SDVCTX.MGR_TYPE ~= %KZ_S_DMINPUT# THEN DO;
      280    18529
      281    18530                      /* Output or console, check suspension            */
      282    18531
      283    18532    4                  IF KZ$LINCTX.RCVFCS & KZ$SDVCTX.SUSBIT_MASK THEN
      284    18533    4                     KZ$SDVCTX.FLAGS.SUSPEND_OUT = '0'B;
      285    18534    4                  ELSE
      286    18535    4                     KZ$SDVCTX.FLAGS.SUSPEND_OUT = '1'B;
      287    18536    4                  END;
      288    18537    3               DCTX$ = KZ$SDVCTX.LNK$;
      289    18538    3               END;
      290    18539
      291    18540                /* X is the index of the first RCB in the HASP block                  */
      292    18541
      293    18542    2            X = POFFC(ADDR(KZ$HASPBLK.FLG),ADDR(KZ$HASPBLK));
      294    18543
      295    18544                /* Check for unexpected signon record                                 */
      296    18545
      297    18546    2            IF ( KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:10   
      298    18547    2               AND KZ$HASPBLK.FLG = 'F0C1'X )
      299    18548    2               OR ( KZ$LINCTX.PRO.PROTYP = %KLPT_NJE#
      300    18549    3               AND KZ$HASPBLK.FLG = 'F0C9'X ) THEN DO;
      301    18550
      302    18551                /* We have an unexpected signon... Ignore it.                         */
      303    18552
      304    18553    3               FPT_WRSYSLOG=FPT@WRSYSLOG;
      305    18554    3               FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;
      306    18555    3               FPT_WRSYSLOG.BUF_=VECTOR(CHR32);
      307    18556    3               FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$DUPSGN;
      308    18557    3               CALL KHA$ERRLOG (FPT_WRSYSLOG);
      309    18558
      310    18559        /*E* ERROR:        KZL-E$DUPSGN-4
      311    18560             MESSAGE:      Unexpected HASP SIGNON block.
      312    18561             DESCRIPTION:  A block containing a signon control record was
      313    18562                           received on a line which was already active.
      314    18563                           DATA = First 32 characters of the input block.
      315    18564        */
      316    18565
      317    18566    3               RETURN;
      318    18567    3               END;
      319    18568    2            END;
      320    18569        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:11   
      321    18570
      322    18571
      323    18572                /* Start deblocking here.  Check for records running off
      324    18573                    the end of the input buffer.  Watch for HASP records
      325    18574                    that don't end with a zero RCB as some terminals send
      326    18575                    control records that way. */
      327    18576
      328    18577    2         DO WHILE (X < KZ$LINCTX.INPDATSIZ);
      329    18578    2            I = X;
      330    18579    2            RECSIZE=0;
      331    18580    2            IF KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP#
      332    18581    3               AND KZ$LINCTX.PRO.PROTYP ~= %KLPT_NJE# THEN DO;
      333    18582
      334    18583                    /*  If the next byte is ETB, then skip out.
      335    18584                        (If it's ETX, we'll end up dropping all the way
      336    18585                         through to SENDEOF.)  */
      337    18586    3               IF BYT(I) = '26'X THEN
      338    18587    3                  RETURN;
      339    18588
      340    18589                       /* Find length of record.                        */
      341    18590
      342    18591    3               IF KZ$LINCTX.PRO.SLAVE AND BYT(I)='27'X THEN
      343    18592    3                  CALL CNVRT_BSC_VFC;
      344    18593    4               DO WHILE (BYT(I) ~= KZ$LINCTX.PRO.IRSCHR /* Default '1E'X */ AND
      345    18594    4                  BYT(I) ~= '26'X AND
      346    18595    4                  BYT(I) ~= '03'X AND
      347    18596    4                  I < KZ$LINCTX.INPDATSIZ);
      348    18597    5                  IF BYT(I) = '1D'X THEN DO; /* 3780 compression */
      349    18598    5                     RECSIZE = BITBIN(BYT(I+1)&'3F'X) + RECSIZE;
      350    18599    5                     I = I+1;
      351    18600    5                     END;
      352    18601    4                  ELSE
      353    18602    4                     RECSIZE = RECSIZE + 1;
      354    18603    4                  I = I+1;
      355    18604    4                  END;
      356    18605    3               NEXTI = I;
      357    18606    3               END;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:12   
      358    18607    3            ELSE DO;
      359    18608
      360    18609    3               IF NOT KZ$HASPRCB.NOT_END(I) THEN
      361    18610    3                  RETURN;        /* Normal end of block               */
      362    18611
      363    18612
      364    18613    3               I = I+2;            /* Index to SCB                 */
      365    18614    3               CALL SKP_HASP;
      366    18615    3               NEXTI = I;
      367    18616    4               IF I >= KZ$LINCTX.INPDATSIZ THEN DO;
      368    18617    4                  FPT_WRSYSLOG=FPT@WRSYSLOG;
      369    18618    4                  FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;
      370    18619    4                  FPT_WRSYSLOG.BUF_ = VECTOR(ADDR(BYT(I-30))->CHR32);
      371    18620    4                  FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$BLKSYNERR;
      372    18621    4                  CALL KHA$ERRLOG (FPT_WRSYSLOG);
      373    18622
      374    18623        /*E* ERROR:        KZL-E$BLKSYNERR-4
      375    18624             MESSAGE:      HASP block syntax error.
      376    18625             DESCRIPTION:  The deblocking routine ran off end of an input block.
      377    18626                           DATA = Last 32 (or so) characters of the input block.
      378    18627        */
      379    18628
      380    18629    4                  GOTO KILL_LINE;
      381    18630    4                  END;
      382    18631
      383    18632                    /* Good record. Decompressed size is in RECSIZE  */
      384    18633
      385    18634    4               IF NOT (KZ$HASPRCB(X) & '0F'X) THEN DO;
      386    18635
      387    18636                       /* We have a control record... Only legal types are
      388    18637                          "request to send" and "permission to send".      */
      389    18638
      390    18639    4                  IF (BITBIN(KZ$HASPRCB(X) & '70'X) = %KZ_S_REQUEST_TO_SEND#*16) OR
      391    18640    5                     (BITBIN(KZ$HASPRCB(X) & '70'X) = %KZ_S_PERMISSION_TO_SEND#*16)
             18640                              THEN DO;
      392    18641
      393    18642                          /* We have a "grant pts" or a "request pts" record.
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:13   
      394    18643                             Find out which device it's for by checking for both
      395    18644                             RCB and MGR_TYPE (Input, Output or I/O).
      396    18645                             This allows for two devices on a TERMINAL to have
      397    18646                             the same RCB, as long as one is Input and the other
      398    18647                             is Output. */
      399    18648
      400    18649    5                     DCTX$ = KZ$LINCTX.CTRHD$;
      401    18650    5   FIND_PTS_DEVICE:
      402    18651    6                     DO WHILE (DCTX$ ~= ADDR(NIL));
      403    18652    6                        IF BYT(X+1) = KZ$SDVCTX.RCB_CODE THEN
      404    18653    6                           IF BITBIN(KZ$HASPRCB(X)&'70'X) = %KZ_S_REQUEST_TO_SEND#*16
             18653                                    THEN
      405    18654    6                              IF KZ$SDVCTX.MGR_TYPE = %KZ_S_DMINPUT# THEN
      406    18655    6                                 EXIT FIND_PTS_DEVICE;
      407    18656    6                              ELSE;
      408    18657    6                           ELSE
      409    18658    6                              IF KZ$SDVCTX.MGR_TYPE = %KZ_S_DMOUTPUT# THEN
      410    18659    6                                 EXIT FIND_PTS_DEVICE;
      411    18660    6                        DCTX$ = KZ$SDVCTX.LNK$;
      412    18661    6                        END FIND_PTS_DEVICE;
      413    18662
      414    18663                          /* If DCTX$ is null, then no device was located. */
      415    18664
      416    18665    6                     IF BITBIN(KZ$HASPRCB(X)&'70'X) = %KZ_S_REQUEST_TO_SEND#*16 THEN DO
             18665                              ;
      417    18666
      418    18667                             /* It is a request PTS record.                */
      419    18668
      420    18669    6                        IF DCTX$ ~= ADDR(NIL)
      421    18670    6                           AND NOT KZ$SDVCTX.FLAGS.PTS_IN THEN
      422    18671
      423    18672                                /* Device state is appropriate for request. */
      424    18673    6                           CALL BRKRQS; /* Send BREAK to INSYM */
      425    18674    7                        ELSE DO;
      426    18675
      427    18676                                   /* We have a spurious request pts... Error log it.*/
      428    18677
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:14   
      429    18678    7                           FPT_WRSYSLOG=FPT@WRSYSLOG;
      430    18679    7                           FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;
      431    18680    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;
      432    18681    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.RCB = BYT(X);
      433    18682    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.SRCB = BYT(X+1);
      434    18683    7                           FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$DUPRTS;
      435    18684    7                           CALL KHA$ERRLOG (FPT_WRSYSLOG);
      436    18685
      437    18686        /*E* ERROR:        KZL-E$DUPRTS-4
      438    18687             MESSAGE:      Spurious Request To Send.
      439    18688             DESCRIPTION:  A "Request To Send" control record was received
      440    18689                           for a device which either already had permission to
      441    18690                           send (input) or which was undefined for the TERMinal.
      442    18691                           V0/V1 = Device context pointer.
      443    18692                           V3 = RCB/SRCB received.
      444    18693        */
      445    18694
      446    18695    7                           END;
      447    18696    6                        END;
      448    18697    6                     ELSE DO;
      449    18698        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:15   
      450    18699
      451    18700            /* We have a grant permission to send record.                                 */
      452    18701
      453    18702    6                        IF DCTX$ ~= ADDR(NIL)
      454    18703    7                           AND NOT KZ$SDVCTX.FLAGS.PTS_OUT THEN DO;
      455    18704
      456    18705                                  /* Device state is appropriate for a grant.*/
      457    18706
      458    18707    7                           KZ$SDVCTX.FLAGS.PTS_OUT = '1'B;
      459    18708    7                           IF KZ$SDVCTX.STATE = %KZ_S_SAWAITING_PTS# THEN
      460    18709                                   /* Permission to send was expected      */
      461    18710    7                              KZ$SDVCTX.STATE=%KZ_S_SOPEN#;
      462    18711    7                           ELSE
      463    18712    7                              IF KZ$SDVCTX.STATE = %KZ_S_SCLS_AWAITING_PTS# THEN
      464    18713    7   SEND_EOFREC:
      465    18714    8                              DO;
      466    18715                                      /* Device is awaiting permission from
      467    18716                                         the line but host has closed.
      468    18717                                         Go close the device down.            */
      469    18718                                      %KV$USRENT (VDI$=KZ$SDVCTX.VDI$,
      470    18719                                                  DFR$=DFREOFREC,
      471    18720                                                  SCHRSN=%KV_SCHRSN_DFR1);
             18733    8           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             18733                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
             18734    9           IF NOT KZ$SDVCTX.VDI$->KV$VDI.BSY THEN DO;
             18735    9              KZ$SDVCTX.VDI$->KV$VDI.BSY = '1'B;
             18736    9              KV@USRENT.SVDPTR$ = KV$PTR$;
             18737    9              KV$PTR$ = KZ$SDVCTX.VDI$->KV$VDI.ASNINPPTR$;
             18738    9              END;                         /* ELSE IF ~BSY                       */
             18739    9           ELSE DO;
             18740    9              KZ$SDVCTX.VDI$->KV$VDI.DFR.USR(1) = '1'B;
             18741    9           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             18741                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;
             18742    9              GOTO DFREOFREC;
             18743    9              END;                         /* END IF                             */
      472    18746    8                                 CALL KZD$BLDEOF (KZ$SDVCTX);
      473    18747                                      %KV$USREXT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:16   
             18753    8           KV$PTR.VDI$->KV$VDI.BSY = '0'B;
             18755    8           KV$PTR$ = KV@USRENT.SVDPTR$;
      474    18757    8                                 KZ$SDVCTX.STATE = %KZ_S_SCONNECTED#;
      475    18758    8                                 EXIT SEND_EOFREC;
      476    18759    8   DFREOFREC:
      477    18760    8                                 KZ$SDVCTX.DFR.EOFREC = '1'B;
      478    18761    8                                 END SEND_EOFREC;
      479    18762    7                           END;
      480    18763    7                        ELSE DO;
      481    18764
      482    18765                                 /* Error log spurious grant permission to send.*/
      483    18766
      484    18767    7                           FPT_WRSYSLOG=FPT@WRSYSLOG;
      485    18768    7                           FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;
      486    18769    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;
      487    18770    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.RCB = BYT(X);
      488    18771    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.SRCB = BYT(X+1);
      489    18772    7                           FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$DUPPTS;
      490    18773    7                           CALL KHA$ERRLOG (FPT_WRSYSLOG);
      491    18774
      492    18775
      493    18776        /*E* ERROR:        KZL-E$DUPPTS-4
      494    18777             MESSAGE:      Spurious Permission To Send.
      495    18778             DESCRIPTION:  A "Permission To Send" control record was received
      496    18779                           for a device which either already had permission to
      497    18780                           send (output) or which was undefined for the TERMinal.
      498    18781                           V0/V1 = Device context pointer.
      499    18782                           V3 = RCB/SRCB received.
      500    18783        */
      501    18784    7                           END;
      502    18785    6                        END;
      503    18786    5                     END;
      504    18787        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:17   
      505    18788                    /* Check for block sequence error.                                    */
      506    18789
      507    18790    5                  ELSE DO;
      508    18791    6                     IF BITBIN(KZ$HASPRCB(X)&'70'X) = %KZ_S_BLOCK_SEQUENCE_ERROR#*16
             18791                              THEN DO;
      509    18792
      510    18793                             /* Error log block sequence error report  */
      511    18794
      512    18795    6                        FPT_WRSYSLOG=FPT@WRSYSLOG;
      513    18796    6                        FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;
      514    18797    6                        FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$SEQERRCTL;
      515    18798    6                        ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;
      516    18799    6                        CALL KHA$ERRLOG (FPT_WRSYSLOG);
      517    18800
      518    18801        /*E* ERROR:        KZL-E$SEQERRCTL-4
      519    18802             MESSAGE:      Sequence error control record received.
      520    18803             DESCRIPTION:  The remote sent a control record indicating that
      521    18804                           we had sent a block with an invalid sequence number.
      522    18805                           V0/V1 = Device context pointer.
      523    18806        */
      524    18807
      525    18808    6                        GOTO KILL_LINE;
      526    18809    6                        END;
      527    18810    6                     ELSE DO;
      528    18811
      529    18812    6                        IF KZ$LINCTX.PRO.PROTYP = %KLPT_NJE#
      530    18813    7                           AND BITBIN(KZ$HASPRCB(X) & '70'X) = %
             18813                                    KZ_S_TRANSMISSION_COMPLETE#*16 THEN DO;
      531    18814                                /* The other end of an NJE stream has acknowledged an
      532    18815                                   EOF which we sent to it.  For now, we're ignoring
      533    18816                                   this.  In IBMland, this record informs its receiver
      534    18817                                   that it's OK to "drain the output" for this file,
      535    18818                                   i.e., delete it from :SYMO.  For HASP and NJE, we
      536    18819                                   tell OUTSYM to do this when the last block of the
      537    18820                                   job is ACK'ed from the other end (by then returning
      538    18821                                   a "marker").  This is cheating, technically, for
      539    18822                                   NJE, since a line drop following our EOF but before
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:18   
      540    18823                                   receiving this record would result in the loss of
      541    18824                                   that file.  Oh, well. */
      542    18825    7                           END;
      543    18826    7                        ELSE DO;
      544    18827
      545    18828                                /* Unexpected control record...             */
      546    18829
      547    18830    7                           FPT_WRSYSLOG=FPT@WRSYSLOG;
      548    18831    7                           FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;
      549    18832    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;
      550    18833    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.RCB = BYT(X);
      551    18834    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.SRCB = BYT(X+1);
      552    18835    7                           FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$INVCTLREC;
      553    18836    7                           CALL KHA$ERRLOG (FPT_WRSYSLOG);
      554    18837
      555    18838        /*E* ERROR:        KZL-E$INVCTLREC-4
      556    18839             MESSAGE:      Undefined control record received.
      557    18840             DESCRIPTION:  A control record other than a SIGNON string,
      558    18841                           Request To Send, Permission To Send, or
      559    18842                           sequencing error message was received.
      560    18843                           V0/V1 = Device context pointer.
      561    18844                           V3 = RCB/SRCB received.
      562    18845        */
      563    18846
      564    18847    7                           END;
      565    18848    6                        END;
      566    18849    5                     END;
      567    18850    4                  CALL SKP_HASP;
      568    18851    4                  GOTO NXT_RECORD;
      569    18852    4                  END;
      570    18853    4               ELSE DO;
      571    18854        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:19   
      572    18855                       /* We have a data record. Find his device context.*/
      573    18856
      574    18857    4                  DCTX$=KZ$LINCTX.CTRHD$;
      575    18858    5                  DO WHILE (DCTX$ ~= ADDR(NIL));
      576    18859    5                     IF KZ$SDVCTX.RCB_CODE = BYT(X) AND
      577    18860    5                        KZ$SDVCTX.MGR_TYPE ~= %KZ_S_DMOUTPUT# THEN
      578    18861    5                        GOTO DBLK2;
      579    18862    5                     DCTX$=KZ$SDVCTX.LNK$;
      580    18863    5                     END;
      581    18864
      582    18865                          /* DCTX$ contains null (no device found) or
      583    18866                             a valid pointer which points to the device context
      584    18867                             for the record.                               */
      585    18868
      586    18869    5   DBLK2:         IF DCTX$ = ADDR(NIL) OR NOT KZ$SDVCTX.FLAGS.PTS_IN THEN DO;
      587    18870
      588    18871                          /* Device can't accept the record.               */
      589    18872
      590    18873    5                     FPT_WRSYSLOG=FPT@WRSYSLOG;
      591    18874    5                     FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;
      592    18875    5                     FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$INVDAT;
      593    18876    5                     ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;
      594    18877    5                     ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.RCB = BYT(X);
      595    18878    5                     ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.SRCB = BYT(X+1);
      596    18879    5                     CALL KHA$ERRLOG (FPT_WRSYSLOG);
      597    18880
      598    18881        /*E* ERROR:        KZL-E$INVDAT-4
      599    18882             MESSAGE:      Spurious data record recieved.
      600    18883             DESCRIPTION:  A record was received for a device which either
      601    18884                           lacked permission to send or which was undefined
      602    18885                           in the TERMinal.
      603    18886                           V0/V1 = Device context pointer.
      604    18887                           V3 = RCB/SRCB received.
      605    18888        */
      606    18889
      607    18890    5   KILL_LINE:        CALL KZR$KILL_LINE (KZ$LINCTX);
      608    18891    5                     RETURN;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:20   
      609    18892    5                     END;
      610    18893
      611    18894                       /* Device has permission to send to host.  */
      612    18895
      613    18896    4                  IF KZ$SDVCTX.RCB_CODE ~= '91'X AND
      614    18897    5                     KZ$SDVCTX.RCB_CODE ~= '92'X THEN DO;
      615    18898
      616    18899                          /* Dont check SUSBITS for console.     */
      617    18900
      618    18901    5                     IF NOT KZ$LINCTX.SNDFCS &
      619    18902    6                        KZ$SDVCTX.SUSBIT_MASK THEN DO;
      620    18903
      621    18904                          /* Suspension was requested but we got a record
      622    18905                             Error log the record for the suspended stream.
      623    18906                             Disconnect has been deemed a bit radical for this error.
      624    18907                             The test was put in after we discovered CP-V losing a
      625    18908                             Susbit. He flooded our memory with records and caused
      626    18909                             us to crash. User beware! we don't disconnect on this
      627    18910                             error any more.                             */
      628    18911
      629    18912    6                        FPT_WRSYSLOG=FPT@WRSYSLOG;
      630    18913    6                        FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;
      631    18914    6                        FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$IGNSUS;
      632    18915    6                        ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;
      633    18916    6                        ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.RCB = KZ$SDVCTX.RCB_CODE
             18916                                 ;
      634    18917    6                        ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.SNDFCS = KZ$LINCTX.
             18917                                 SNDFCS;
      635    18918    6                        CALL KHA$ERRLOG (FPT_WRSYSLOG);
      636    18919
      637    18920        /*E* ERROR:        KZL-E$IGNSUS-4
      638    18921             MESSAGE:      Remote site ignored SUSPbits.
      639    18922             DESCRIPTION:  A record was received for a suspended device.
      640    18923                           V0/V1 = Device context pointer.
      641    18924                           V2 = Send FCS.
      642    18925                           V3 = Device number.
      643    18926        */
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:21   
      644    18927
      645    18928    6                        END;
      646    18929    5                     END;
      647    18930    4                  END;
      648    18931    3               END;
      649    18932        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:22   
      650    18933
      651    18934                    /* Its ok to send this on to the host.      */
      652    18935
      653    18936
      654    18937    2            IF KZ$LINCTX.INPREC$ ~= ADDR(NIL) THEN
      655    18938    3               IF RECSIZE > KZ$LINCTX.INPRECSIZ THEN DO;
      656    18939    3                  CALL KVB$RLSSYS ((KZ$LINCTX.INPRECSIZ+1)/2,KZ$LINCTX.INPREC$);
      657    18940    3                  GOTO GTINPRC;
      658    18941    3                  END;
      659    18942    2               ELSE;
      660    18943    2            ELSE
      661    18944    3               IF RECSIZE ~= 0 THEN DO;
      662    18945    3   GTINPRC:
      663    18946    3                  SZ = (RECSIZE+1)/2;
      664    18947    3                  CALL KVB$GETSYS (SZ,KZ$LINCTX.INPREC$)
      665    18948    3                  WHENALTRETURN
      666    18949    4                  DO;
      667    18950    4                     KZ$LINCTX.INPRECSIZ = 0;
      668    18951    4                     GOTO NOBUF;
      669    18952    4                     END;
      670    18953    3                  KZ$LINCTX.INPRECSIZ = RECSIZE;
      671    18954    3                  END;
      672    18955
      673    18956    2            BUF$ = KZ$LINCTX.INPREC$;
      674    18957
      675    18958    2            J = 0;                    /* Destination index  */
      676    18959                 /* Decompress input.  A buffer big enough to hold the decompressed
      677    18960                    data has already been allocated above. */
      678    18961    2            IF KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP#
      679    18962    3               AND KZ$LINCTX.PRO.PROTYP ~= %KLPT_NJE# THEN DO;
      680    18963    3               I = X;                 /* Begin at first byte */
      681    18964    3               CALL DCMPRS_BSC;
      682    18965
      683    18966                    /* If this 2780/3780 breaks records between blocks,
      684    18967                       do appropriate "cutting" and "pasting". */
      685    18968    4               IF KZ$LINCTX.PRO.LSTRECCTN THEN DO;
      686    18969    4                  IF BYT(NEXTI) = '26'X AND
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:23   
      687    18970    5                     BYT(NEXTI-1) ~= KZ$LINCTX.PRO.IRSCHR /* Default '1E'X */ THEN DO;
      688    18971                          /* "Cut" the record out of the block, saving it on the
      689    18972                             BRK (broken) device queue. */
      690    18973    5                     SZ = SIZEW(KZ$INPBFR);
      691    18974    5                     CALL KVB$GETSYS (SZ,T$) ALTRET(NOBUF);
      692    18975    5                     KZ$INPBFR = KZ_INPBFR;
      693    18976    5                     KZ$INPBFR.BFR_SIZ = KZ$LINCTX.INPRECSIZ;
      694    18977    5                     KZ$INPBFR.DATA_SIZ = RECSIZE;
      695    18978    5                     KZ$INPBFR.DATA$ = BUF$;
      696    18979    5                     IF KZ$SDVCTX.ACCESS_METHOD = %KZ_S_ACSPRINT# THEN
      697    18980    5                        KZ$INPBFR.BYTX = BITBIN(CP6_VFC);
      698    18981    5                     ELSE
      699    18982    5                        KZ$INPBFR.BYTX = BITBIN(HASP_VFC);
      700    18983    5                     IF KZ$SDVCTX.BRKTL$ ~= ADDR(NIL) THEN
      701    18984    5                        KZ$SDVCTX.BRKTL$->KZ$INPBFR.LNK$ = T$;
      702    18985    5                     ELSE
      703    18986    5                        KZ$SDVCTX.BRKHD$ = T$;
      704    18987    5                     KZ$SDVCTX.BRKTL$ = T$;
      705    18988    5                     KZ$SDVCTX.BRKBYTES = KZ$SDVCTX.BRKBYTES+RECSIZE;
      706    18989    5                     KZ$LINCTX.INPREC$ = ADDR(NIL);
      707    18990    5                     RETURN;
      708    18991    5                     END;
      709    18992    5                  IF KZ$SDVCTX.BRKBYTES ~= 0 THEN DO;
      710    18993                          /* "Paste" the record(s) on the broken queue
      711    18994                             together with the one just received (which must
      712    18995                             have been the first, or only, record in a block). */
      713    18996    5                     SZ = (KZ$SDVCTX.BRKBYTES+RECSIZE+1)/2;
      714    18997    5                     CALL KVB$GETSYS (SZ,BRK$) ALTRET(NOBUF);
      715    18998    5                     J = 0;
      716    18999    6                     DO WHILE (KZ$SDVCTX.BRKHD$ ~= ADDR(NIL));
      717    19000    6                        T$ = KZ$SDVCTX.BRKHD$;
      718    19001    6                        N = KZ$INPBFR.DATA_SIZ;
      719    19002    6                        ADDR(BRK$->BYT(J))->CHRN = KZ$INPBFR.DATA$->CHRN;
      720    19003    6                        J = J+N;
      721    19004    6                        KZ$SDVCTX.BRKHD$ = KZ$INPBFR.LNK$;
      722    19005    6                        CALL KVB$RLSSYS ((KZ$INPBFR.BFR_SIZ+1)/2,KZ$INPBFR.DATA$);
      723    19006    6                        CALL KVB$RLSSYS (SIZEW(KZ$INPBFR),T$);
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:24   
      724    19007    6                        END;
      725    19008    5                     IF J = 0 THEN CALL M$XXX;
      726    19009    5                     KZ$SDVCTX.BRKTL$ = ADDR(NIL);
      727    19010    5                     KZ$SDVCTX.BRKBYTES = 0;
      728    19011    5                     N = RECSIZE;
      729    19012    5                     ADDR(BRK$->BYT(J))->CHRN = BUF$->CHRN;
      730    19013    5                     CALL KVB$RLSSYS ((KZ$LINCTX.INPRECSIZ+1)/2,KZ$LINCTX.INPREC$);
      731    19014    5                     BUF$ = BRK$;
      732    19015    5                     KZ$LINCTX.INPREC$ = BUF$;
      733    19016    5                     RECSIZE = J+N;
      734    19017    5                     KZ$LINCTX.INPRECSIZ = RECSIZE;
      735    19018    5                     END;
      736    19019    4                  END;
      737    19020    3               END;
      738    19021    3            ELSE DO;
      739    19022    3               I = X+2;               /* Begin at first SCB  */
      740    19023    3               CALL DCMPRS_HASP;
      741    19024    3               HASP_VFC=BYT(X+1);
      742    19025    3               IF KZ$SDVCTX.ACCESS_METHOD=%KZ_S_ACSPRINT# THEN
      743    19026    3                  CALL CNVRT_HASP_VFC;
      744    19027    3               END;
      745    19028
      746    19029                 /* Send the record on its way if the device is open  */
      747    19030
      748    19031    2            KZ$SDVCTX.HOST_RECORDS_IN=KZ$SDVCTX.HOST_RECORDS_IN+1;
      749    19032    2            KZ$SDVCTX.HOST_BYTES_IN=KZ$SDVCTX.HOST_BYTES_IN+RECSIZE;
      750    19033    2            IF KZ$SDVCTX.STATE = %KZ_S_SOPEN# AND
      751    19034    3               KZ$SDVCTX.MGR_TYPE~=%KZ_S_DMOUTPUT# THEN DO;
      752    19035
      753    19036                 /* Defer input record if throttled by VDH   */
      754    19037
      755    19038    3               VDH_ENTERED = '0'B;
      756    19039    3               IF KZ$SDVCTX.FLAGS.SUSPEND_IN THEN
      757    19040    3                  GOTO DFRINPT;
      758    19041                 %KV$USRENT (VDI$=KZ$SDVCTX.VDI$,
      759    19042                             DFR$=DFRINPT,
      760    19043                             SCHRSN=%KV_SCHRSN_DFR1);
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:25   
             19056    3           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             19056                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
             19057    4           IF NOT KZ$SDVCTX.VDI$->KV$VDI.BSY THEN DO;
             19058    4              KZ$SDVCTX.VDI$->KV$VDI.BSY = '1'B;
             19059    4              KV@USRENT.SVDPTR$ = KV$PTR$;
             19060    4              KV$PTR$ = KZ$SDVCTX.VDI$->KV$VDI.ASNINPPTR$;
             19061    4              END;                         /* ELSE IF ~BSY                       */
             19062    4           ELSE DO;
             19063    4              KZ$SDVCTX.VDI$->KV$VDI.DFR.USR(1) = '1'B;
             19064    4           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             19064                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;
             19065    4              GOTO DFRINPT;
             19066    4              END;                         /* END IF                             */
      761    19069    3               VDH_ENTERED = '1'B;
      762    19070    3               IF NOT KZ$SDVCTX.VDI$->KV$VDI.USRRQSDAT.RED THEN
      763    19071    3                  GOTO DFRINPT;
      764    19072
      765    19073    3               KV$VDH_DAT=KV_VDH_DAT;
      766    19074    3               KV$VDH_DAT.DAT__.BFRBYTSIZ = RECSIZE;
      767    19075    3               KV$VDH_DAT.DAT__.ADR$ = BUF$;
      768    19076    3               KV$VDH_DAT.DAT__.DATBYTSIZ = RECSIZE;
      769    19077    3               IF ( KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#
      770    19078    3                  OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# )
      771    19079    3                  AND RECSIZE = 0 THEN
      772    19080    3                  GOTO SENDEOF;
      773    19081    4               IF KZ$SDVCTX.ACCESS_METHOD = %KZ_S_ACSPRINT# THEN DO;
      774    19082    4                  KV$VDH_DAT.DATCTRCHR=BITASC(CP6_VFC);
      775    19083    4                  KV$VDH_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_VFC;
      776    19084    4                  END;
      777    19085    3               ELSE
      778    19086    3                  IF ( ( KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#
      779    19087    3                     OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# )
      780    19088    3                     AND KZ$SDVCTX.FLAGS.BINARY_OK
      781    19089    3                     AND HASP_VFC.V.BIN )
      782    19090    3                     OR ( KZ$LINCTX.PRO.PROTYP = %KLPT_NJE#
      783    19091    3                     AND BYT(X+1) > '80'X ) THEN
      784    19092                       /* If it's HASP or NJE, SRCB "binary", and OK to send binary,
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:26   
      785    19093                          or it's NJE, and SRCB "control record",
      786    19094                          then don't translate it. */
      787    19095    3                     KV$VDH_DAT.DATMOD=%KV#DATMOD_BNR;
      788    19096    3               CALL KVV$VDI (KV$VDH_DAT);
      789    19097
      790    19098    3               IF ( KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP#
      791    19099    3                  AND KZ$LINCTX.PRO.PROTYP ~= %KLPT_NJE# )
      792    19100    4                  AND BYT(NEXTI) = '03'X THEN DO;
      793    19101
      794    19102                    /* Move in completion code of EOF and clobber PTS_IN  */
      795    19103                    /*  Ignore EOF on consoles     */
      796    19104
      797    19105    5   SENDEOF:       IF KZ$SDVCTX.MGR_TYPE ~= %KZ_S_DMCONSOLE# THEN DO;
      798    19106    5                     KV$VDH_DAT.CMPCOD=%KV_CMPCOD_EOF;
      799    19107    5                     KZ$SDVCTX.FLAGS.PTS_IN = '0'B;
      800    19108    5                     KZ$SDVCTX.FLAGS.SUSPEND_IN = '0'B;
      801    19109    5                     KZ$SDVCTX.STATE = %KZ_S_SAWAITING_CLOSE#;
      802    19110    5                     KV$VDH_DAT.DAT__.DATBYTSIZ = 0;
      803    19111    5                     CALL KVV$VDI (KV$VDH_DAT);
      804    19112    5                     END;
      805    19113    4                  END;
      806    19114
      807    19115    4               DO WHILE ('0'B);
      808    19116    4   DFRINPT:       KZ$SDVCTX.FLAGS.SUSPEND_IN = '1'B;
      809    19117    4                  SZ = SIZEW(KZ$INPBFR);
      810    19118    4                  CALL KVB$GETSYS (SZ,T$) ALTRET(NOBUF);
      811    19119    4                  KZ$INPBFR = KZ_INPBFR;
      812    19120    4                  KZ$INPBFR.BFR_SIZ = KZ$LINCTX.INPRECSIZ;
      813    19121    4                  KZ$INPBFR.DATA_SIZ = RECSIZE;
      814    19122    4                  KZ$INPBFR.DATA$ = BUF$;
      815    19123    4                  IF KZ$SDVCTX.ACCESS_METHOD = %KZ_S_ACSPRINT# THEN
      816    19124    4                     KZ$INPBFR.BYTX=BITBIN(CP6_VFC);
      817    19125    4                  ELSE
      818    19126    4                     KZ$INPBFR.BYTX=BITBIN(HASP_VFC);
      819    19127    4                  IF ( ( KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#
      820    19128    4                     OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# )
      821    19129    4                     AND RECSIZE = 0 )
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:27   
      822    19130    4                     OR ( ( KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP#
      823    19131    4                     AND KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP# )
      824    19132    5                     AND BYT(NEXTI) = '03'X ) THEN DO;
      825    19133    5                     KZ$INPBFR.FLAGS.LAST# = '1'B;
      826    19134    5                     KZ$SDVCTX.FLAGS.PTS_IN = '0'B;
      827    19135    5                     KZ$SDVCTX.FLAGS.SUSPEND_IN = '0'B;
      828    19136    5                     KZ$SDVCTX.STATE = %KZ_S_SAWAITING_CLOSE#;
      829    19137    5                     END;
      830    19138    4                  IF KZ$SDVCTX.DFRTL$ ~= ADDR(NIL) THEN
      831    19139    4                     KZ$SDVCTX.DFRTL$->KZ$INPBFR.LNK$ = T$;
      832    19140    4                  ELSE
      833    19141    4                     KZ$SDVCTX.DFRHD$ = T$;
      834    19142    4                  KZ$SDVCTX.DFRTL$ = T$;
      835    19143    4                  KZ$LINCTX.INPREC$ = ADDR(NIL);
      836    19144    4                  KZ$LINCTX.INPRECSIZ = 0;
      837    19145    4                  IF NOT VDH_ENTERED THEN
      838    19146    4                     GOTO NXT_RECORD;
      839    19147    4                  END;
      840    19148
      841    19149                    %KV$USREXT;
             19155    3           KV$PTR.VDI$->KV$VDI.BSY = '0'B;
             19157    3           KV$PTR$ = KV@USRENT.SVDPTR$;
      842    19159    3               END;
      843    19160    2            ELSE
      844    19161                    /*N* Device is closed for some reason...
      845    19162                         we should wonder why. */
      846    19163    2               ALTRETURN;
      847    19164
      848    19165    2   NXT_RECORD:
      849    19166    3            IF DCTX$ ~= ADDR(NIL) THEN DO;
      850    19167    3               KZ$SDVCTX.LINE_RECORDS_IN=KZ$SDVCTX.LINE_RECORDS_IN+1;
      851    19168    3               KZ$SDVCTX.LINE_BYTES_IN=KZ$SDVCTX.LINE_BYTES_IN+(NEXTI-X+1);
      852    19169    3               END;
      853    19170    2            X = NEXTI+1;        /* Index of next RCB  */
      854    19171    2            END;                      /* End Deblocking Loop  */
      855    19172    1         RETURN;
      856    19173        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:28   
      857    19174              /*    Log "Out of MEMory" error and kill the line.    */
      858    19175
      859    19176    1   NOBUF:
      860    19177    1         FPT_WRSYSLOG = FPT@WRSYSLOG;
      861    19178    1         FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$NOBFR;
      862    19179    1         FPT_WRSYSLOG.V.ERRCODE.SEV = %G_WRSYSLOG_SEV_LINE_ABORT#;
      863    19180    1         FPT_WRSYSLOG.V.TERMID = KZ$LINCTX.LINID;
      864    19181    1         FPT_WRSYSLOG.V.VALUES (0) = SZ;
      865    19182    1         CALL KHA$ERRLOG (FPT_WRSYSLOG);
      866    19183        /*E*  ERROR:        KZL-E$NOBFR-6
      867    19184              MESSAGE:      Insufficient BISYNC MEMory (a NETCON parameter).
      868    19185              DESCRIPTION:  A KVB call ALTRETed to indicate that BISYNC is out of
      869    19186                            MEMory.  Since a necessary I/O buffer or device context
      870    19187                            could not be allocated, the HASP/2780/3780 TERMinal
      871    19188                            associated with the request has been disconnected.
      872    19189        */
      873    19190    1         GOTO KILL_LINE;
      874    19191
      875    19192
      876    19193    1   BRKRQS: PROC;
      877    19194
      878    19195        /*    Give VDH an ATTENTION event                                  */
      879    19196
      880    19197    2         IF KZ$SDVCTX.STATE = %KZ_S_SAWAITING_CLOSE# THEN
      881    19198    2   DFRBRK:  KZ$SDVCTX.FLAGS.BRKRQD = '1'B;
      882    19199    2         ELSE
      883    19200    3            IF KZ$SDVCTX.STATE = %KZ_S_SCONNECTED# THEN DO;
      884    19201              %KV$USRENT (VDI$=KZ$SDVCTX.VDI$,
      885    19202                          DFR$=DFRBRK,
      886    19203                          SCHRSN=%KV_SCHRSN_DFR2);
             19216    3           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             19216                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
             19217    4           IF NOT KZ$SDVCTX.VDI$->KV$VDI.BSY THEN DO;
             19218    4              KZ$SDVCTX.VDI$->KV$VDI.BSY = '1'B;
             19219    4              KV@USRENT.SVDPTR$ = KV$PTR$;
             19220    4              KV$PTR$ = KZ$SDVCTX.VDI$->KV$VDI.ASNINPPTR$;
             19221    4              END;                         /* ELSE IF ~BSY                       */
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:29   
             19222    4           ELSE DO;
             19223    4              KZ$SDVCTX.VDI$->KV$VDI.DFR.USR(2) = '1'B;
             19224    4           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             19224                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;
             19225    4              GOTO DFRBRK;
             19226    4              END;                         /* END IF                             */
      887    19229    3               KV$VDH_EVT=KV@VDH_EVT;
      888    19230    3               KV$VDH_EVT.PRM=1;
      889    19231    3               KZ$SDVCTX.STATE = %KZ_S_SAWAITING_PTS#;
      890    19232    3               CALL KVV$VDI (KV$VDH_EVT);
      891    19233                    %KV$USREXT;
             19239    3           KV$PTR.VDI$->KV$VDI.BSY = '0'B;
             19241    3           KV$PTR$ = KV@USRENT.SVDPTR$;
      892    19243    3               END;
      893    19244    2         RETURN;
      894    19245    2   END;
      895    19246        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:30   
      896    19247
      897    19248        /*F* NAME:   KZL$BBLK
      898    19249             PURPOSE:
      899    19250                 To obtain an output data block for a Synch line.
      900    19251                                                                           */
      901    19252
      902    19253        /*D* NAME: KZL$BBLK
      903    19254             CALL:
      904    19255                   CALL KZL$BBLK (Line-context) ALTRET(label);
      905    19256              PARAMETERS:
      906    19257                 Line-context is the line context table.
      907    19258              OUTPUT:
      908    19259                 KZ$LINCTX.OTPBFR$ is a pointer to the output block.
      909    19260                 KZ$LINCTX.OTPDATSIZ is the size of the output data in bytes
      910    19261              DESCRIPTION:
      911    19262                 On each call, an output block is obtained from the next
      912    19263                 device on the line which has output ready.  The next device
      913    19264                 is selected in a round-robin manner.  If no device has
      914    19265                 output ready, and there is no change in the FCS from the
      915    19266                 previous output, nothing is sent.
      916    19267
      917    19268                 The output block is dequeued from the device output queue
      918    19269                 and its address placed in KZ$LINCTX.OTPBFR.  If it is a HASP
      919    19270
      920    19271                 An ALTRETURN can occur if there was not output ready for the
      921    19272                 device.
      922    19273
      923    19274
      924    19275                                                                           */
      925    19276    1   KZL$BBLK: ENTRY (KZ$LINCTX) ALTRET;
      926    19277
      927    19278
      928    19279
      929    19280    1         LCTX$=ADDR(KZ$LINCTX);
      930    19281
      931    19282    1         IF KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#
      932    19283    2            OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# THEN DO;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:31   
      933    19284
      934    19285    2            CALL BLD_SUSBITS;
      935    19286
      936    19287    2            IF KZ$LINCTX.FLAGS.RCVWAB OR
      937    19288    2               KZ$LINCTX.CTRHD$ = ADDR(NIL) THEN
      938    19289    2               GOTO NOOTP;
      939    19290    2            IF KZ$LINCTX.CURDEV$ = ADDR(NIL) THEN
      940    19291    2               KZ$LINCTX.CURDEV$ = KZ$LINCTX.CTRHD$;
      941    19292    2            DCTX$ = KZ$LINCTX.CURDEV$->KZ$SDVCTX.LNK$;
      942    19293    2            IF DCTX$ = ADDR(NIL) THEN
      943    19294    2               DCTX$ = KZ$LINCTX.CTRHD$;
      944    19295
      945    19296
      946    19297
      947    19298              /* Select HASP device. Look for the next device with PTS and
      948    19299                 not SUSPEND_OUT with a block on
      949    19300                 its output list or completed record in its current output block
      950    19301                 that could be truncated and sent.
      951    19302                                                                           */
      952    19303    2   FNDOTP:  IF NOT (KZ$LINCTX.PRO.SLAVE AND KZ$SDVCTX.RCB_CODE='91'X) AND
      953    19304    2               NOT (NOT KZ$LINCTX.PRO.SLAVE AND KZ$SDVCTX.RCB_CODE='92'X) AND
      954    19305    2               NOT KZ$SDVCTX.FLAGS.SUSPEND_OUT AND
      955    19306    3               KZ$SDVCTX.FLAGS.PTS_OUT THEN DO;
      956    19307
      957    19308    3               IF KZ$SDVCTX.OTPHD$ = ADDR(NIL) AND
      958    19309    3                  KZ$SDVCTX.VDI$->KV$VDI.OTPBFR_.ADR$ ~= ADDR(NIL) AND
      959    19310    3                  KZ$SDVCTX.VDI$->KV$VDI.OTPBFR_.BYTX > SIZEC(KZ$OTPBFR)+
      960    19311    4                  SIZEC(KZ$HASPBLK) THEN DO;
      961    19312                    %KV$USRENT (VDI$=KZ$SDVCTX.VDI$,DFR$=DFRTRNC,
      962    19313                                SCHRSN=%KV_SCHRSN_DFR1);
             19326    4           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             19326                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
             19327    5           IF NOT KZ$SDVCTX.VDI$->KV$VDI.BSY THEN DO;
             19328    5              KZ$SDVCTX.VDI$->KV$VDI.BSY = '1'B;
             19329    5              KV@USRENT.SVDPTR$ = KV$PTR$;
             19330    5              KV$PTR$ = KZ$SDVCTX.VDI$->KV$VDI.ASNINPPTR$;
             19331    5              END;                         /* ELSE IF ~BSY                       */
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:32   
             19332    5           ELSE DO;
             19333    5              KZ$SDVCTX.VDI$->KV$VDI.DFR.USR(1) = '1'B;
             19334    5           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             19334                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;
             19335    5              GOTO DFRTRNC;
             19336    5              END;                         /* END IF                             */
      963    19339    4                  CALL KZD$TRNCOTPBLK;
      964    19340                    %KV$USREXT;
             19346    4           KV$PTR.VDI$->KV$VDI.BSY = '0'B;
             19348    4           KV$PTR$ = KV@USRENT.SVDPTR$;
      965    19350    4                  END;
      966    19351    3               IF KZ$SDVCTX.OTPHD$ ~= ADDR(NIL) THEN
      967    19352    3                  GOTO SNDOTP;
      968    19353    3               END;
      969    19354    2   DFRTRNC: ;
      970    19355    2            IF DCTX$ = KZ$LINCTX.CURDEV$ THEN
      971    19356    2               GOTO NOOTP;
      972    19357    2            DCTX$ = KZ$SDVCTX.LNK$;
      973    19358    2            IF DCTX$ = ADDR(NIL) THEN
      974    19359    2               DCTX$ = KZ$LINCTX.CTRHD$;
      975    19360    2            GOTO FNDOTP;
      976    19361    2            END;
      977    19362    2         ELSE DO;
      978    19363
      979    19364                 /* Select 2780/3780 device.  Once a device is selected,
      980    19365                    stick with it until the end.  Start at the next device after
      981    19366                    that to search for the next output device.             */
      982    19367
      983    19368    2            DCTX$ = KZ$LINCTX.CURDEV$;
      984    19369    3            IF DCTX$ = ADDR(NIL) THEN DO;
      985    19370    3               DCTX$=KZ$LINCTX.CTRHD$;
      986    19371    4               DO WHILE DCTX$ ~= ADDR(NIL);
      987    19372    4                  IF KZ$SDVCTX.OTPHD$ ~= ADDR(NIL) THEN
      988    19373    4                     GOTO SNDOTP;
      989    19374    4                  DCTX$ = KZ$SDVCTX.LNK$;
      990    19375    4                  END;
      991    19376    3               GOTO NOOTP;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:33   
      992    19377    3               END;
      993    19378    2            IF KZ$SDVCTX.OTPHD$ = ADDR(NIL) THEN
      994    19379    2               GOTO NOOTP;
      995    19380    2            END;
      996    19381
      997    19382
      998    19383              /* Found the next device with an output block ready to go */
      999    19384
     1000    19385    1   SNDOTP:
     1001    19386    1         KZ$LINCTX.OTPHD$ = KZ$SDVCTX.OTPHD$;
     1002    19387    1         KZ$LINCTX.OTPBFR$ = PINCRW(KZ$SDVCTX.OTPHD$,SIZEW(KZ$OTPBFR));
     1003    19388    1         KZ$LINCTX.OTPDATSIZ = KZ$SDVCTX.OTPHD$->KZ$OTPBFR.DATA_SIZ;
     1004    19389    1         KZ$SDVCTX.FLAGS.OTPBSY = '1'B;
     1005    19390    1         IF KZ$SDVCTX.OTPHD$->KZ$OTPBFR.FLAGS.HALT THEN
     1006    19391    1            KZ$SDVCTX.FLAGS.PTS_OUT='0'B;
     1007    19392    1         KZ$SDVCTX.OTPHD$ = KZ$SDVCTX.OTPHD$->KZ$OTPBFR.LNK$;
     1008    19393    1         IF KZ$SDVCTX.OTPHD$ = ADDR(NIL) THEN
     1009    19394    1            KZ$SDVCTX.OTPTL$ = ADDR(NIL);
     1010    19395    1         KZ$LINCTX.OTPHD$->KZ$OTPBFR.LNK$ = ADDR(NIL);
     1011    19396
     1012    19397    1         IF KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#
     1013    19398    2            OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# THEN DO;
     1014    19399    2   SETFCS:  KZ$LINCTX.SNDFCS = SNDFCS;
     1015    19400    2            KZ$LINCTX.OTPBFR$->KZ$HASPBLK.FCS = SNDFCS;
     1016    19401    3            IF KZ$LINCTX.OTPDATSIZ ~= 0 THEN DO;
     1017    19402    4               IF KZ$LINCTX.FLAGS.BCB_INIT THEN DO;
     1018    19403    4                  KZ$LINCTX.OTPBFR$->KZ$HASPBLK.BCB = '80'X;
     1019    19404    4                  KZ$LINCTX.OTPBFR$->KZ$HASPBLK.BCB.CNT = KZ$LINCTX.BCB.SND;
     1020    19405    4                  KZ$LINCTX.BCB.SND = KZ$LINCTX.BCB.SND + 1;
     1021    19406    4                  END;
     1022    19407    4               ELSE DO;
     1023    19408    4                  KZ$LINCTX.OTPBFR$->KZ$HASPBLK.BCB = 'A0'X;
     1024    19409    4                  KZ$LINCTX.FLAGS.BCB_INIT = '1'B;
     1025    19410    4                  END;
     1026    19411    3               END;
     1027    19412    2            END;
     1028    19413    2         ELSE DO;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:34   
     1029    19414
     1030    19415                 /* 2780/3780 - If EOF then set FIRST to make the line manager
     1031    19416                    send ETX, otherwise he will send ETB.  This is a strange
     1032    19417                    meaning for FIRST handed down from antiquity.  Also, if EOF,
     1033    19418                    set CURDEV to next device with an output block ready to go. */
     1034    19419
     1035    19420    3            IF KZ$LINCTX.OTPHD$->KZ$OTPBFR.FLAGS.LAST# THEN DO;
     1036    19421    3               KZ$LINCTX.FLAGS.FIRST = '1'B;
     1037    19422    4               DO WHILE DCTX$ ~= ADDR(NIL);
     1038    19423    4                  IF KZ$SDVCTX.OTPHD$ ~= ADDR(NIL) THEN
     1039    19424    4                     GOTO NXTDV;
     1040    19425    4                  DCTX$ = KZ$SDVCTX.LNK$;
     1041    19426    4                  END;
     1042    19427    3               END;
     1043    19428    2            END;
     1044    19429    1   NXTDV: KZ$LINCTX.CURDEV$ = DCTX$;
     1045    19430
     1046    19431    1         RETURN;
     1047    19432
     1048    19433
     1049    19434
     1050    19435              /* No output.  If HASP and FCS has changed, build output block
     1051    19436                 just for FCS.                                             */
     1052    19437
     1053    19438
     1054    19439    1   NOOTP:
     1055    19440    1         IF ( KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#
     1056    19441    1            OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# )
     1057    19442    2            AND KZ$LINCTX.SNDFCS ~= SNDFCS THEN DO;
     1058    19443    2            SZ = SIZEW(KZ$OTPBFR)+(KZ$LINCTX.PRO.BLKBYTES+1)/2;
     1059    19444    2            CALL KVB$GET2NSYS (SZ,BUF$)
     1060    19445    2            WHENALTRETURN
     1061    19446    3            DO;
     1062    19447    3               KZ$LINCTX.OTPDATSIZ=0;
     1063    19448    3               FPT_WRSYSLOG = FPT@WRSYSLOG;
     1064    19449    3               FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$NOBFR;
     1065    19450    3               FPT_WRSYSLOG.V.ERRCODE.SEV = %G_WRSYSLOG_SEV_LINE_ABORT#;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:35   
     1066    19451    3               FPT_WRSYSLOG.V.TERMID = KZ$LINCTX.LINID;
     1067    19452    3               FPT_WRSYSLOG.V.VALUES (0) = SZ;
     1068    19453    3               CALL KHA$ERRLOG (FPT_WRSYSLOG);
     1069    19454    3               CALL KZR$KILL_LINE (KZ$LINCTX);
     1070    19455    3               ALTRETURN;
     1071    19456    3               END;
     1072    19457    2            KZ$LINCTX.OTPHD$=BUF$;
     1073    19458    2            BUF$->KZ$OTPBFR = KZ_OTPBFR;
     1074    19459    2            BUF$->KZ$OTPBFR.DEV$=KZ$LINCTX.CTRHD$;
     1075    19460    2            DCTX$=KZ$LINCTX.CTRHD$;
     1076    19461    2            BUF$->KZ$OTPBFR.BFRSIZ = SZ;
     1077    19462    2            KZ$LINCTX.OTPBFR$ = PINCRW(BUF$,SIZEW(KZ$OTPBFR));
     1078    19463    2            KZ$LINCTX.OTPBFR$->KZ$HASPBLK.FLG.RCB = '0'B;
     1079    19464    2            KZ$LINCTX.OTPDATSIZ=POFFC(ADDR(KZ$LINCTX.OTPBFR$->KZ$HASPBLK.FLG.SRCB),
     1080    19465    2               KZ$LINCTX.OTPBFR$);
     1081    19466    2            GOTO SETFCS;
     1082    19467    2            END;
     1083    19468    1         KZ$LINCTX.OTPDATSIZ=0;       /* Indicate no output */
     1084    19469    1         ALTRETURN;
     1085    19470        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:36   
     1086    19471        /*D*  NAME: KZL$OTPRDY
     1087    19472              CALL:
     1088    19473                 CALL KZL$OTPRDY (Line-context) ALTRETURN(label);
     1089    19474              PARAMETERS:
     1090    19475                 Line-context is the line context table.
     1091    19476              DESCRIPTION:
     1092    19477                 This procedure searches the list of devices for this line for
     1093    19478                 a device with output ready.  If there is none, the ALTRETURN
     1094    19479                 is taken.  If one is found, a normal return occurs.
     1095    19480                                                                           */
     1096    19481
     1097    19482    1   KZL$OTPRDY: ENTRY (KZ$LINCTX) ALTRET;
     1098    19483
     1099    19484    1         DCTX$ = KZ$LINCTX.CTRHD$;
     1100    19485    2         DO WHILE DCTX$ ~= ADDR(NIL);
     1101    19486    2            IF KZ$SDVCTX.OTPHD$ ~= ADDR(NIL) THEN
     1102    19487    2               RETURN;
     1103    19488    2            DCTX$ = KZ$SDVCTX.LNK$;
     1104    19489    2            END;
     1105    19490    1         ALTRETURN;
     1106    19491
     1107    19492        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:37   
     1108    19493
     1109    19494    1   CNVRT_HASP_VFC: PROC;
     1110    19495
     1111    19496              /* Convert HASP vfc to CP6 vfc.                              */
     1112    19497
     1113    19498
     1114    19499    3         IF HASP_VFC.VFC_TYPE = %KZ#HASPVFC_SPA THEN DO;
     1115    19500    4            IF HASP_VFC.S.UPSP_CT = 0 THEN DO;
     1116    19501    4               CP6_VFC.FCN = %VFCF_SPB;
     1117    19502    4               CP6_VFC.COUNT = 0;
     1118    19503    4               END;
     1119    19504    4            ELSE DO;
     1120    19505    4               CP6_VFC.FCN=%VFCF_SPA;
     1121    19506    4               CP6_VFC.COUNT=HASP_VFC.S.UPSP_CT;
     1122    19507    4               END;
     1123    19508    3            END;
     1124    19509    2         ELSE
     1125    19510    3            IF HASP_VFC.VFC_TYPE = %KZ#HASPVFC_SKA THEN DO;
     1126    19511    3               CP6_VFC.FCN = %VFCF_SKA;
     1127    19512    3               CP6_VFC.COUNT = HASP_VFC.SKIP_TO;
     1128    19513    3               IF HASP_VFC.SKIP_TO ~= 1 THEN
     1129    19514    3                  CP6_VFC.COUNT = HASP_VFC.SKIP_TO;
     1130    19515    3               ELSE
     1131    19516                                   /* Top of form. Change to channel 0.               */
     1132    19517    3                  CP6_VFC.COUNT = 0;
     1133    19518    3               END;
     1134    19519    2            ELSE
     1135    19520    3               IF HASP_VFC.VFC_TYPE = %KZ#HASPVFC_SPB THEN DO;
     1136    19521    3                  CP6_VFC.FCN = %VFCF_SPB;
     1137    19522    3                  CP6_VFC.COUNT = HASP_VFC.S.UPSP_CT;
     1138    19523    3                  END;
     1139    19524    2               ELSE
     1140    19525    3                  IF HASP_VFC.VFC_TYPE = %KZ#HASPVFC_SKB THEN DO;
     1141    19526    3                     CP6_VFC.FCN = %VFCF_SKB;
     1142    19527    3                     IF HASP_VFC.SKIP_TO ~= 1 THEN
     1143    19528    3                        CP6_VFC.COUNT = HASP_VFC.SKIP_TO;
     1144    19529    3                     ELSE
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:38   
     1145    19530                                   /* Top of form. Change to channel 0.               */
     1146    19531    3                        CP6_VFC.COUNT = 0;
     1147    19532    3                     END;
     1148    19533    2         RETURN;
     1149    19534    2   END;
     1150    19535
     1151    19536    1   CNVRT_BSC_VFC: PROC;
     1152    19537
     1153    19538              /* Convert 2780/3780 escape vfc sequence to CP6 VFC
     1154    19539                 Returns X and I set to first data byte in record.
     1155    19540                 Returns CP6_VFC.                                          */
     1156    19541
     1157    19542    2   DCL BSCVFC(0:11) BIT(8) CONSTANT INIT(
     1158    19543    2         '61'X,'E2'X,'E3'X,'D4'X,'C1'X,'C2'X,'C3'X,'C4'X,'C5'X,'C6'X,
     1159    19544    2         'C7'X,'C8'X);
     1160    19545    2   DCL CP6VFC(0:11) BIT(8) CONSTANT INIT(
     1161    19546    2         '41'X,'42'X,'43'X,'40'X,'51'X,'52'X,'53'X,'54'X,'55'X,'56'X,
     1162    19547    2         '57'X,'58'X);
     1163    19548
     1164    19549    3         DO J = 0 TO 11;
     1165    19550    4            IF BYT(I+1)=BSCVFC(J) THEN DO;
     1166    19551    4               CP6_VFC=CP6VFC(J);
     1167    19552    4               GOTO CNVRT_BSC_X;
     1168    19553    4               END;
     1169    19554    3            END;
     1170    19555    2         CP6_VFC=CP6VFC(0);
     1171    19556    2   CNVRT_BSC_X: I=I+2;
     1172    19557    2         X=I;
     1173    19558    2         RETURN;
     1174    19559    2   END;
     1175    19560         %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:39   
     1176    19561
     1177    19562    1   SKP_HASP: PROC;
     1178    19563        /*    Entered with I = index of first SCB in record.
     1179    19564              Returns with I = index of last SCB (i.e., ~ SCB.NOTEND)
     1180    19565              and RECSIZE = number of bytes in decompressed record.
     1181    19566                                                                           */
     1182    19567
     1183    19568    2   DCL II UBIN;
     1184    19569
     1185    19570
     1186    19571    3         DO WHILE (I<=KZ$LINCTX.INPDATSIZ AND KZ$HASPSCB.NOT_END(I));
     1187    19572    4            IF KZ$HASPSCB.I.NOT_IDENT(I) THEN DO;
     1188    19573    4               II=BITBIN(KZ$HASPSCB(I)&'3F'X);
     1189    19574    4               RECSIZE = RECSIZE+II;
     1190    19575    4               I = I+II;
     1191    19576    4               END;
     1192    19577    4            ELSE DO;
     1193    19578    4               RECSIZE=RECSIZE + BITBIN(KZ$HASPSCB(I)&'1F'X);
     1194    19579    4               IF KZ$HASPSCB.I.NOT_BLANK(I) THEN
     1195    19580    4                  I = I+1;
     1196    19581    4               END;
     1197    19582    3            I = I+1;
     1198    19583    3            END;
     1199    19584    2         RETURN;
     1200    19585    2   END;
     1201    19586
     1202    19587
     1203    19588
     1204    19589    1   DCMPRS_HASP: PROC;
     1205    19590
     1206    19591        /*    Entered with I = index of first SCB in the record.
     1207    19592              Returns with I = index of last SCB (i.e., ~ SCB.NOTEND)
     1208    19593                                                                           */
     1209    19594    2   DCL STRNG CHAR(N) BASED;
     1210    19595
     1211    19596
     1212    19597    3         DO WHILE (KZ$HASPSCB.NOT_END(I));
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:40   
     1213    19598    4            IF KZ$HASPSCB.I.NOT_IDENT(I) THEN DO;
     1214    19599
     1215    19600                       /* String of nonidentical characters               */
     1216    19601
     1217    19602    4               N=BITBIN(KZ$HASPSCB(I)&'3F'X);
     1218    19603    4               ADDR(BUF$->BYT(J))->STRNG = ADDR(BYT(I+1))->STRNG;
     1219    19604    4               J=J+N;
     1220    19605    4               I=I+N;
     1221    19606
     1222    19607    4               END;
     1223    19608    4            ELSE DO;
     1224    19609
     1225    19610                       /* String of identical characters                  */
     1226    19611
     1227    19612    4               N=BITBIN(KZ$HASPSCB(I)&'1F'X);
     1228    19613    5               IF KZ$HASPSCB.I.NOT_BLANK(I) THEN DO;
     1229    19614    5                  I = I+1;
     1230    19615    6                  DO L = 1 TO N;
     1231    19616    6                     BUF$->BYT(J)=BYT(I);   /* Identical nonblanks  */
     1232    19617    6                     J = J+1;
     1233    19618    6                     END;
     1234    19619    5                  END;
     1235    19620    5               ELSE DO;
     1236    19621    5                  ADDR(BUF$->BYT(J))->STRNG=BLANKS_IN_EBCDIC;
     1237    19622    5                  J = J+N;
     1238    19623    5                  END;
     1239    19624    4               END;
     1240    19625    3            I = I+1;
     1241    19626    3            END;
     1242    19627    2         RETURN;
     1243    19628    2   END;
     1244    19629
     1245    19630    1   DCMPRS_BSC: PROC;
     1246    19631
     1247    19632    2   DCL STRNG CHAR(N) BASED;
     1248    19633
     1249    19634
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:41   
     1250    19635    2         K=I;
     1251    19636    2         N=0;
     1252    19637    3         DO WHILE I < NEXTI;
     1253    19638    4            IF BYT(I) = '1D'X THEN DO;
     1254    19639    5               IF N ~= 0 THEN DO;
     1255    19640    5                  ADDR(BUF$->BYT(J))->STRNG=ADDR(BYT(K))->STRNG;
     1256    19641    5                  J=J+N;
     1257    19642    5                  END;
     1258    19643    4               I=I+1;
     1259    19644    4               N=BITBIN(BYT(I)&'3F'X);
     1260    19645    4               ADDR(BUF$->BYT(J))->STRNG=BLANKS_IN_EBCDIC;
     1261    19646    4               J=J+N;
     1262    19647    4               I=I+1;
     1263    19648    4               K=I;
     1264    19649    4               N=0;
     1265    19650    4               END;
     1266    19651    4            ELSE DO;
     1267    19652    4               I=I+1;
     1268    19653    4               N=N+1;
     1269    19654    4               END;
     1270    19655    3            END;
     1271    19656    2         IF N ~= 0 THEN
     1272    19657    2            ADDR(BUF$->BYT(J))->STRNG=ADDR(BYT(K))->STRNG;
     1273    19658    2         RETURN;
     1274    19659    2   END;
     1275    19660        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:42   
     1276    19661        /*    Build SUSBITS for output block                               */
     1277    19662
     1278    19663    1   BLD_SUSBITS: PROC;
     1279    19664
     1280    19665    2   DCL CTX$ PTR;
     1281    19666
     1282    19667    2         SNDFCS = '8080'X;            /* Initial temp FCS  */
     1283    19668    2         CTX$ = KZ$LINCTX.CTRHD$;
     1284    19669    3         DO WHILE (CTX$ ~= ADDR(NIL));
     1285    19670    3            IF (CTX$->KZ$SDVCTX.MGR_TYPE ~= %KZ_S_DMOUTPUT# AND
     1286    19671    3               CTX$->KZ$SDVCTX.STATE = %KZ_S_SCONNECTED#) OR
     1287    19672    3               (NOT CTX$->KZ$SDVCTX.FLAGS.SUSPEND_IN AND
     1288    19673    3               CTX$->KZ$SDVCTX.FLAGS.PTS_IN) THEN
     1289    19674    3               SNDFCS = SNDFCS | CTX$->KZ$SDVCTX.SUSBIT_MASK;
     1290    19675
     1291    19676    3            CTX$ = CTX$->KZ$SDVCTX.LNK$;
     1292    19677    3            END;
     1293    19678    2         RETURN;
     1294    19679    2   END;
     1295    19680    1   END;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:43   
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   KZ_3270_C.:E05TOU  is referenced.
   KZ$INPBFR.:E05TOU  is referenced.
   KZ$OTPBFR.:E05TOU  is referenced.
   KZ_PERR_C.:E05TOU  is referenced.
   KZ$RBT_M.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KV$VDO.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
      No diagnostics issued in procedure KZL$DBLK.

   Procedure KZL$DBLK requires 3230 words for executable code.
   Procedure KZL$DBLK requires 93 words of local(AUTO) storage.
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:44   

    No errors detected in file KZL$DBLK.:E05TSI    .

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:45   

 Object Unit name= KZL$DBLK                                   File name= KZL$DBLK.:E05TOU
 UTS= JUL 30 '97 02:55:28.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     75     4B  KZL$DBLK
    1   Proc  even  none  3230    C9E  KZL$DBLK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KZL$DBLK
     1    85B          yes     yes      Std        1  KZL$BBLK
     1    A70          yes     yes      Std        1  KZL$OTPRDY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KHA$ERRLOG
 yes     yes           Std       1 KZD$BLDEOF
 yes     yes           Std       1 KZR$KILL_LINE
 yes     yes           Std       2 KVB$GETSYS
 yes     yes           Std       2 KVB$GET2NSYS
 yes     yes           Std       2 KVB$RLSSYS
 yes     yes           Std       1 KVV$VDI
 yes     yes           Std       0 KZD$TRNCOTPBLK
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
                       nStd      0 X6C_ALR
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:46   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV_VDH_DAT                            KZ_OTPBFR
     KZR_CNCDSC@                           KZ_SLCCHR2780PNC                      KZ_SLCCHR3780PNC1
r    G$ROS$
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:47   


        1        1        /*M*   Deblock Input and Collect Output Blocks      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC     */
        8        8
        9        9
       10       10
       11       11        KZL$DBLK: PROC (KZ$LINCTX) ALTRET;

     11   1 000000  D380 0000 0000  xent KZL$DBLK        LNJ,B5   X6A_AUTO_1
          1 000003       005D 0001                       DC       93,1

       12       12
       13       13        /*P* NAME: KZL$DBLK
       14       14             PURPOSE: KZL$DBLK contains two procedures.  KZL$DBLK parses
       15       15              an input block to provide input records to VDH.  KZL$BBLK
       16       16              obtains an output block for transmission by searching the
       17       17              device output queues.
       18       18
       19       19                                                                           */
       20       20
       21       21        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:48   
       22       22
       23       23        %INCLUDE KV$VDH;
       24      454        %INCLUDE KV_GLBCNS_E;
       25      795        %INCLUDE KV$GLB;
       26     1214        %INCLUDE KV_GLB_M;
       27     1336        %INCLUDE KV$GLBCTX;
       28     1781        %INCLUDE KV$VDO;
       29     2796        %INCLUDE KZ$LINCTX;
       30     3416        %INCLUDE KZ$RBT_M;
       31     3975        %INCLUDE KZ_PERR_C;
       32     4057        %INCLUDE KZ$OTPBFR;
       33     4158        %INCLUDE KZ$INPBFR;
       34     4218        %INCLUDE KZ_3270_C;
       35     4376        %INCLUDE KZ_CLM_E;
       36     4548        %INCLUDE KL_SUPER_C;
       37     7450        %INCLUDE KL_MACRO_C;
       38    10802        %INCLUDE LCP_6;
       39    15081        %INCLUDE CP_6_SUBS;
       40    15621        %INCLUDE KL_AFCN_C;
       41    15722        %INCLUDE K_ID_E;
       42    15772        %K#ENTID_E;
       43    15791        %K#LYRID_E;
       44    15798        %INCLUDE NK_VFC_C;
       45    15872
       46    15873
       47    15874
       48    15875        %KZ$SDVCTX (STCLASS="BASED(DCTX$)");
       49    16187        %KZ$HASPBLK (STCLASS="BASED(BLK$)");
       50    16220        %KZ$HASPRCB (STCLASS="BASED(BLK$)");
       51    16238        %KZ$HASPSCB (STCLASS="BASED(BLK$)");
       52    16261        %KZ$RBT_E;
       53    16291        %KZ$RBTVFC_E;
       54    16302        %KZ$RBTERR (NAME=ERRCTX);
       55    16323        %KV_CMPCOD_E;
       56    16337        %KV_INPOPRX_E;
       57    16349        %KZ_3270_E;
       58    16477        %KZ$OTPBFR;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:49   
       59    16542        %KZ$INPBFR (NAME=KZ$INPBFR,STCLASS="BASED(T$)");
       60    16575
       61    16576        %KV_SCHRSN_E;
       62    16583        %KV_BFRRLSDSP_E;
       63    16589        %KV#DATMOD_E;
       64    16595        %KV_DATCTRCHRTYP_E;
       65    16601        %KV$VDI;
       66    16672        %KV$PTR;
       67    16715        %KV$USRPRM;
       68    16766        %KV$SSN;
       69    16845        %KV$STT;
       70    17239        %KV@USRENT;
       71    17259
       72    17260
       73    17261
       74    17262        /*       SYMREFS                   */
       75    17263
       76    17264        %KV$VDH_DAT (NAME=KV_VDH_DAT,STCLASS=SYMREF);
       77    17344        %KZ$OTPBFR (NAME=KZ_OTPBFR,STCLASS=SYMREF);  /* DEF'd in KZD$DEVMGR */
       78    17409
       79    17410
       80    17411        /*    Static    */
       81    17412
       82    17413        %KV$VDH_EVT (NAME=KV@VDH_EVT,STCLASS=CONSTANT,ID=KV_VDH_EVT_ID_ATN);
       83    17448        %FPT_WRSYSLOG (FPTN=FPT@WRSYSLOG,
       84    17449                       FCG='KZ',
       85    17450                       MID='L',
       86    17451                       SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
       87    17452                       STCLASS=CONSTANT);
       88    17547        %KZ$INPBFR (NAME=KZ_INPBFR,STCLASS=CONSTANT);
       89    17580
       90    17581        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:50   
       91    17582
       92    17583        /*D* NAME: KZL$DBLK
       93    17584             CALL:
       94    17585                 CALL KZL$DBLK (Line-context);
       95    17586             ENVIRONMENT:
       96    17587                 Called at the input-complete interrupt level.
       97    17588             PARAMETERS:
       98    17589                 Line-context is the line context table.
       99    17590             OUTPUT:
      100    17591                 A series of messages for VDH.
      101    17592             DESCRIPTION:
      102    17593                 KZL$DBLK is entered with a pointer to the line context and
      103    17594                 thus the most recently received input block.  The input block is
      104    17595                 parsed and records are decompressed and moved into a buffer
      105    17596                 for transmitting to the host by VDH.  The input block may
      106    17597                 be HASP, 3780 or 2780 format.
      107    17598                 An ALTRETURN can only occur on 2780/3780 input.  It indicates
      108    17599                 that the device was not able to accept input for one of the
      109    17600                 following reasons:
      110    17601                    Not opened.  A ATTN was sent to the host.
      111    17602                    ATTN was sent but device open hasn't occured yet.
      112    17603                    The device was throttled.
      113    17604        */
      114    17605
      115    17606        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:51   
      116    17607
      117    17608        /* Parameters                                                      */
      118    17609
      119    17610        %KZ$LINCTX (STCLASS="");
      120    18041
      121    18042        /*  Auto                                                           */
      122    18043
      123    18044    1   DCL LCTX$ PTR;
      124    18045    1   DCL DCTX$ PTR;
      125    18046    1   DCL BLK$ PTR;
      126    18047    1   DCL BRK$ PTR;
      127    18048    1   DCL C BIT(8);
      128    18049    1   DCL X UBIN;
      129    18050    1   DCL I UBIN;
      130    18051    1   DCL J UBIN;
      131    18052    1   DCL K SBIN;
      132    18053    1   DCL L UBIN;
      133    18054    1   DCL N UBIN;
      134    18055    1   DCL BLKRECS SBIN;
      135    18056    1   DCL BUF$ PTR;
      136    18057    1   DCL T$ PTR;
      137    18058    1   DCL VDH_ENTERED BIT(1);
      138    18059    1   DCL NEXTI UBIN;
      139    18060    1   DCL FIRST_DEV$ PTR;
      140    18061    1   DCL DEV_REM UBIN;
      141    18062    1   DCL CHRN CHAR(N) BASED;
      142    18063    1   DCL CHR32 CHAR(32) BASED(BLK$);
      143    18064    1   DCL SNDFCS BIT(16);
      144    18065    1   DCL RECSIZE UBIN;
      145    18066    1   DCL SZ UBIN;
      146    18067        %KZ$EVENT (FPTN=KZ_EVENT,STCLASS="");
      147    18149        %KV$VDH_EVT (STCLASS="");
      148    18184        %FPT_WRSYSLOG (STCLASS="");
      149    18279        %KV$VDH_DAT (STCLASS="");
      150    18359        %NK$VFC (NAME=CP6_VFC,STCLASS="");
      151    18377        %KZ$HASPSRCB (NAME=HASP_VFC,STCLASS=AUTO);
      152    18401        /*    Procedures                                                   */
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:52   
      153    18402
      154    18403    1   DCL KZD$BLDEOF ENTRY(1) ALTRET;
      155    18404    1   DCL KZD$TRNCOTPBLK ENTRY ALTRET;
      156    18405    1   DCL KZR$KILL_LINE ENTRY(1) ALTRET;
      157    18406    1   DCL KZR_CNCDSC@ EPTR SYMREF;
      158    18407    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
      159    18408    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
      160    18409    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      161    18410    1   DCL KVV$VDI ENTRY(1) ALTRET;
      162    18411    1   DCL KHA$ERRLOG ENTRY(2) ALTRET;
      163    18412
      164    18413
      165    18414        /*    based       */
      166    18415
      167    18416    1   DCL 1 BYT(0:0) BASED(BLK$) CALIGNED,
      168    18417    1         2 * BIT(2) UNAL,
      169    18418    1         2 CT UBIN(6) UNAL;
      170    18419
      171    18420
      172    18421        /*    constant        */
      173    18422
      174    18423    1   DCL BLANK_ARRAY_IN_EBCDIC(0:63) BIT(8) CONSTANT INIT('40'X*0);
      175    18424    1   DCL BLANKS_IN_EBCDIC REDEF BLANK_ARRAY_IN_EBCDIC CHAR(64);
      176    18425
      177    18426        /*N*  KLUDGE AREA *** KLUDGE AREA *** KLUDGE AREA *** KLUDGE AREA *** KLUD  *N*/
      178    18427        /*N*  To make some site-specific patches easier, here's where we're         *N*/
      179    18428        /*N*  stashing away some CONSTANT SYMDEF values for HASP/2780/3780.         *N*/
      180    18429        /*N*  These "defaults" should be made into SUPER options on                 *N*/
      181    18430        /*N*  TERM/PROFILE/DEVICE creation commands.                                *N*/
      182    18431    1   DCL KZ_SLCCHR2780PNC BIT(8) ALIGNED SYMREF;
      183    18432    1   DCL KZ_SLCCHR3780PNC1 BIT(8) ALIGNED SYMREF;
      184    18433    1   DCL KZ_SLCCHR3780PNC2 BIT(8) ALIGNED SYMREF;
      185    18434    1   DCL KZ_SLCCHR3780PRN BIT(8) ALIGNED SYMREF;
      186    18435        /*N*  KLUDGE AREA *** KLUDGE AREA *** KLUDGE AREA *** KLUDGE AREA *** KLUD  *N*/
      187    18436        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:53   
      188    18437
      189    18438
      190    18439    1         LCTX$=ADDR(KZ$LINCTX);

  18439   1 000005  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 000007  EFC7 0008                            STB,B6   LCTX$,AUTO

      191    18440    1         BLK$ = KZ$LINCTX.INPBFR$;

  18440   1 000009  DCC6 0056                            LDB,B5   86,B6
          1 00000B  DFC7 000C                            STB,B5   BLK$,AUTO

      192    18441    1         CP6_VFC='0'B;

  18441   1 00000D  87C7 0051                            CLH      CP6_VFC,AUTO

      193    18442
      194    18443    1         DCTX$ = KZ$LINCTX.CTRHD$;

  18443   1 00000F  CC86                                 LDB,B4   ,B6
          1 000010  CFC7 000A                            STB,B4   DCTX$,AUTO

      195    18444    1         IF KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP#

  18444   1 000012  E846 003A                            LDR,R6   58,B6
          1 000014  6D03                                 CMV,R6   3
          1 000015  0901 00AC                            BE       s:18527,PREL
          1 000017  6D07                                 CMV,R6   7
          1 000018  0901 00A9                            BE       s:18527,PREL

      196    18445    2            AND KZ$LINCTX.PRO.PROTYP ~= %KLPT_NJE# THEN DO;

      197    18446
      198    18447
      199    18448                 /* 2780/3780                                              */
      200    18449
      201    18450                 /* If there is not a current active input device, find one. */
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:54   
      202    18451
      203    18452    3            IF KZ$LINCTX.CURDEV$ = ADDR(NIL) THEN DO;

  18452   1 00001A  8DC6 0050                            CMN      80,B6
          1 00001C  0981 0069                            BNE      s:18499,PREL

      204    18453    3               IF KZ$LINCTX.PRO.SLAVE THEN

  18453   1 00001E  89C6 004B                            CMZ      75,B6
          1 000020  0881 003B                            BAGE     s:18474,PREL

      205    18454    4                  IF KZ$LINCTX.PRO.SLC THEN DO;

  18454   1 000022  82C6 004B                            LB,'0020'X        75,B6
  18454   1 000024       0020
          1 000025  0581 0027                            BBF      s:18468,PREL

      206    18455                          /* If the device sends selection bytes, check for
      207    18456                             2780/3780 CP select. */
      208    18457    4                     IF (KZ$LINCTX.PRO.PROTYP = %KLPT_2780# AND

  18457   1 000027  6D01                                 CMV,R6   1
          1 000028  0981 0012                            BNE      s:18457+20,PREL
          1 00002A  D285                                 LLH,R5   ,B5
          1 00002B  5008                                 SOL,R5   8
          1 00002C  D970 2700                            CMR,R5   9984,IMO
          1 00002E  0981 000C                            BNE      s:18457+20,PREL
          1 000030  BB80 0000 0000  xsym                 LAB,B3   KZ_SLCCHR2780PNC
          1 000033  5C01                                 LDV,R5   1
          1 000034  0022                                 ACM      ;
          1 000035       C105 0000                                ALPHANUM(0,B5,1,1,FILL),;
          1 000037       4003 0000                                ALPHANUM(0,B3,,R5,FILL)
          1 000039  5381 000A                            CBE      s:18461,PREL
          1 00003B  6D02                                 CMV,R6   2
          1 00003C  0981 000B                            BNE      s:18463,PREL
          1 00003E  D085                                 LDH,R5   ,B5
          1 00003F  D180 0000 0000  xsym                 CMH,R5   KZ_SLCCHR3780PNC1
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:55   
          1 000042  0981 0005                            BNE      s:18463,PREL

      209    18458    4                        BYT(0) = '27'X AND BYT(1) = KZ_SLCCHR2780PNC
             18458                                 /* Default 'F4'X */ ) OR
      210    18459    4                        (KZ$LINCTX.PRO.PROTYP = %KLPT_3780# AND
      211    18460    4                        BYT(0) = KZ_SLCCHR3780PNC1 /* Default '12'X */ ) THEN
      212    18461    4                        J = %KZ_S_ACSCARD#;

  18461   1 000044  8747 0013                            CL       J,AUTO
          1 000046  0F81 0017                            B        s:18475,PREL

      213    18462    4                     ELSE
      214    18463    4                        J = %KZ_S_ACSPRINT#;

  18463   1 000048  5C01                                 LDV,R5   1
          1 000049  DF47 0013                            STR,R5   J,AUTO

      215    18464    4                     END;

  18464   1 00004B  0F81 0012                            B        s:18475,PREL

      216    18465    4                  ELSE DO;

      217    18466                          /* If the device doesn't send selection bytes, check for
      218    18467                             ESC as first input character:  if so, assume LP select. */
      219    18468    4                     IF BYT(0) = '27'X THEN

  18468   1 00004D  D285                                 LLH,R5   ,B5
          1 00004E  5008                                 SOL,R5   8
          1 00004F  D970 2700                            CMR,R5   9984,IMO
          1 000051  0981 0006                            BNE      s:18471,PREL

      220    18469    4                        J = %KZ_S_ACSPRINT#;

  18469   1 000053  4C01                                 LDV,R4   1
          1 000054  CF47 0013                            STR,R4   J,AUTO
          1 000056  0F81 0007                            B        s:18475,PREL
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:56   

      221    18470    4                     ELSE
      222    18471    4                        J = %KZ_S_ACSCARD#;

  18471   1 000058  8747 0013                            CL       J,AUTO

      223    18472    4                     END;

  18472   1 00005A  0F81 0003                            B        s:18475,PREL

      224    18473    3               ELSE
      225    18474    3                  J = %KZ_S_ACSCARD#;

  18474   1 00005C  8747 0013                            CL       J,AUTO

      226    18475    4               DO WHILE DCTX$ ~= ADDR(NIL);

  18475   1 00005E  0F81 0020                            B        s:18488,PREL

      227    18476    4                  IF KZ$SDVCTX.MGR_TYPE = %KZ_S_DMINPUT# AND

  18476   1 000060  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 000062  E2C6 0022                            LLH,R6   34,B6
          1 000064  6D01                                 CMV,R6   1
          1 000065  0981 0016                            BNE      s:18487,PREL
          1 000067  D846 0022                            LDR,R5   34,B6
          1 000069  D570 00FF                            AND,R5   255,IMO
          1 00006B  D947 0013                            CMR,R5   J,AUTO
          1 00006D  0981 000E                            BNE      s:18487,PREL

      228    18477    5                     KZ$SDVCTX.ACCESS_METHOD = J THEN DO;

      229    18478
      230    18479                          /* Send an Attention request to the host  */
      231    18480
      232    18481    5                     KZ$LINCTX.CURDEV$=DCTX$;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:57   
  18481   1 00006F  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
          1 000071  EFC5 0050                            STB,B6   80,B5

      233    18482    5                     KZ$SDVCTX.FLAGS.FIRST='1'B;

  18482   1 000073  8946 001E                            LBT,'0040'X       30,B6
  18482   1 000075       0040

      234    18483    5                     CALL BRKRQS;

  18483   1 000076  E3C0 077A                            LNJ,B6   s:0,PREL
          1 000078       0001                            DC       s:18484,PREL

      235    18484    5                     ALTRETURN;

  18484   1 000079  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      236    18485    5                     END;
      237    18486    4                  ELSE
      238    18487    4                     DCTX$=KZ$SDVCTX.LNK$;

  18487   1 00007C  DC86                                 LDB,B5   ,B6
          1 00007D  DFC7 000A                            STB,B5   DCTX$,AUTO

      239    18488    4                  END;

  18488   1 00007F  8DC7 000A                            CMN      DCTX$,AUTO
          1 000081  09DF                                 BNE      s:18476,SPREL

      240    18489                    /* No input device was found to match the selection
      241    18490                       bytes specified by this input block.
      242    18491                       Set X = 0 (index into input block to use to grab
      243    18492                       2 characters for error logging) and disconnect. */
      244    18493    3               X = 0;

  18493   1 000082  8747 0011                            CL       X,AUTO

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:58   
      245    18494    3               GOTO DBLK2;

  18494   1 000084  0F81 0351                            B        s:18869,PREL

      246    18495    3               END;
      247    18496
      248    18497                 /* We know which device to use, check its state.      */
      249    18498
      250    18499    2            DCTX$=KZ$LINCTX.CURDEV$;

  18499   1 000086  BCC6 0050                            LDB,B3   80,B6
          1 000088  BFC7 000A                            STB,B3   DCTX$,AUTO

      251    18500    2            IF KZ$SDVCTX.STATE ~= %KZ_S_SOPEN# THEN

  18500   1 00008A  D2C3 000A                            LLH,R5   10,B3
          1 00008C  5D04                                 CMV,R5   4
          1 00008D  0901 0004                            BE       s:18502,PREL

      252    18501    2               ALTRETURN;

  18501   1 00008F  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      253    18502    2            IF KZ$SDVCTX.FLAGS.SUSPEND_IN THEN

  18502   1 000092  89C3 001E                            CMZ      30,B3
          1 000094  0881 0004                            BAGE     s:18507,PREL

      254    18503    2               ALTRETURN;             /* Throttled                    */

  18503   1 000096  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      255    18504
      256    18505                 /* Device is able to accept some input.                   */
      257    18506
      258    18507    2            X=0;                      /* Index to first byte of record */

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:59   
  18507   1 000099  8747 0011                            CL       X,AUTO

      259    18508    2            IF KZ$LINCTX.PRO.SLAVE AND

  18508   1 00009B  89C6 004B                            CMZ      75,B6
          1 00009D  0881 001F                            BAGE     s:18521,PREL
          1 00009F  82C6 004B                            LB,'0020'X        75,B6
          1 0000A1       0020
          1 0000A2  0581 001A                            BBF      s:18521,PREL
          1 0000A4  82C3 001E                            LB,'0040'X        30,B3
          1 0000A6       0040
          1 0000A7  0501 0006                            BBT      s:18516,PREL
          1 0000A9  82C6 004B                            LB,'0010'X        75,B6
          1 0000AB       0010
          1 0000AC  0581 0010                            BBF      s:18521,PREL

      260    18509    2               KZ$LINCTX.PRO.SLC AND
      261    18510    2               (KZ$SDVCTX.FLAGS.FIRST OR KZ$LINCTX.PRO.SLCALLBLK) THEN
      262    18511                    /* SLAVE input with device selection:  skip over selection bytes.
      263    18512                       Don't check for the actual values of the selection bytes...
      264    18513                       if KZ_SLC and/or KZ_SLCALLBLK is set incorrectly, we'll
      265    18514                       lose some input.  This allows the device to accept these
      266    18515                       bytes if it really wants to.  */
      267    18516    2               IF KZ$LINCTX.PRO.PROTYP = %KLPT_3780# THEN

  18516   1 0000AE  6D02                                 CMV,R6   2
          1 0000AF  0981 0006                            BNE      s:18519,PREL

      268    18517    2                  X = 1;

  18517   1 0000B1  4C01                                 LDV,R4   1
          1 0000B2  CF47 0011                            STR,R4   X,AUTO
          1 0000B4  0F81 0008                            B        s:18521,PREL

      269    18518    2               ELSE
      270    18519    2                  IF J = %KZ_S_ACSCARD# THEN

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:60   
  18519   1 0000B6  C847 0013                            LDR,R4   J,AUTO
          1 0000B8  4981 0004                            BNEZ,R4  s:18521,PREL

      271    18520    2                     X = 2;

  18520   1 0000BA  3C02                                 LDV,R3   2
          1 0000BB  BF47 0011                            STR,R3   X,AUTO

      272    18521    2            KZ$SDVCTX.FLAGS.FIRST='0'B;  /* First block of file    */

  18521   1 0000BD  8843 001E                            LBF,'0040'X       30,B3
  18521   1 0000BF       0040

      273    18522    2            END;

  18522   1 0000C0  0F81 008C                            B        s:18577,PREL

      274    18523    2         ELSE DO;

      275    18524
      276    18525                /*  Speaking HASP                                                     */
      277    18526
      278    18527    3            DO WHILE (DCTX$ ~= ADDR(NIL));

  18527   1 0000C2  0F81 001B                            B        s:18538,PREL

      279    18528    4               IF KZ$SDVCTX.MGR_TYPE ~= %KZ_S_DMINPUT# THEN DO;

  18528   1 0000C4  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 0000C6  E2C6 0022                            LLH,R6   34,B6
          1 0000C8  6D01                                 CMV,R6   1
          1 0000C9  0901 0011                            BE       s:18537,PREL

      280    18529
      281    18530                      /* Output or console, check suspension            */
      282    18531
      283    18532    4                  IF KZ$LINCTX.RCVFCS & KZ$SDVCTX.SUSBIT_MASK THEN
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:61   

  18532   1 0000CB  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
          1 0000CD  D845 0036                            LDR,R5   54,B5
          1 0000CF  D546 0023                            AND,R5   35,B6
          1 0000D1  5901 0006                            BEZ,R5   s:18535,PREL

      284    18533    4                     KZ$SDVCTX.FLAGS.SUSPEND_OUT = '0'B;

  18533   1 0000D3  8846 001E                            LBF,'4000'X       30,B6
  18533   1 0000D5       4000
          1 0000D6  0F81 0004                            B        s:18537,PREL

      285    18534    4                  ELSE
      286    18535    4                     KZ$SDVCTX.FLAGS.SUSPEND_OUT = '1'B;

  18535   1 0000D8  8946 001E                            LBT,'4000'X       30,B6
  18535   1 0000DA       4000

      287    18536    4                  END;

      288    18537    3               DCTX$ = KZ$SDVCTX.LNK$;

  18537   1 0000DB  DC86                                 LDB,B5   ,B6
          1 0000DC  DFC7 000A                            STB,B5   DCTX$,AUTO

      289    18538    3               END;

  18538   1 0000DE  8DC7 000A                            CMN      DCTX$,AUTO
          1 0000E0  09E4                                 BNE      s:18528,SPREL

      290    18539
      291    18540                /* X is the index of the first RCB in the HASP block                  */
      292    18541
      293    18542    2            X = POFFC(ADDR(KZ$HASPBLK.FLG),ADDR(KZ$HASPBLK));

  18542   1 0000E1  8CC7 000C                            LDI      BLK$,AUTO
          1 0000E3  7031                                 DCL,R7   1
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:62   
          1 0000E4  8D47 0058                            SDI      CTX$+2,AUTO
          1 0000E6  8CC7 000C                            LDI      BLK$,AUTO
          1 0000E8  7031                                 DCL,R7   1
          1 0000E9  8470 0000 0003                       AID      3,IMO
          1 0000EC  7071                                 DCR,R7   1
          1 0000ED  7031                                 DCL,R7   1
          1 0000EE  84C7 0058                            SID      CTX$+2,AUTO
          1 0000F0  E857                                 LDR,R6   R7
          1 0000F1  EF47 0011                            STR,R6   X,AUTO

      294    18543
      295    18544                /* Check for unexpected signon record                                 */
      296    18545
      297    18546    2            IF ( KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#

  18546   1 0000F3  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 0000F5  D846 003A                            LDR,R5   58,B6
          1 0000F7  5D03                                 CMV,R5   3
          1 0000F8  0981 0010                            BNE      s:18546+22,PREL
          1 0000FA  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 0000FC  5C02                                 LDV,R5   2
          1 0000FD  0021                                 ALR      ;
          1 0000FE       C205 0001                                ALPHANUM(1,B5,1,2),;
          1 000100       4007 0058                                ALPHANUM(CTX$+2,AUTO,,R5,FILL)
          1 000102  437F                                 CSYNC    s:18546+14,SPREL
          1 000103  C847 0058                            LDR,R4   CTX$+2,AUTO
          1 000105  C970 F0C1                            CMR,R4   -3903,IMO
          1 000107  0901 0015                            BE       s:18553,PREL
          1 000109  D846 003A                            LDR,R5   58,B6
          1 00010B  5D07                                 CMV,R5   7
          1 00010C  0981 0040                            BNE      s:18577,PREL
          1 00010E  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 000110  5C02                                 LDV,R5   2
          1 000111  0021                                 ALR      ;
          1 000112       C205 0001                                ALPHANUM(1,B5,1,2),;
          1 000114       4007 0059                                ALPHANUM(CTX$+3,AUTO,,R5,FILL)
          1 000116  437F                                 CSYNC    s:18546+34,SPREL
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:63   
          1 000117  C847 0059                            LDR,R4   CTX$+3,AUTO
          1 000119  C970 F0C9                            CMR,R4   -3895,IMO
          1 00011B  0981 0031                            BNE      s:18577,PREL

      298    18547    2               AND KZ$HASPBLK.FLG = 'F0C1'X )
      299    18548    2               OR ( KZ$LINCTX.PRO.PROTYP = %KLPT_NJE#
      300    18549    3               AND KZ$HASPBLK.FLG = 'F0C9'X ) THEN DO;

      301    18550
      302    18551                /* We have an unexpected signon... Ignore it.                         */
      303    18552
      304    18553    3               FPT_WRSYSLOG=FPT@WRSYSLOG;

  18553   1 00011D  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 000120  2C04                                 LDV,R2   4
          1 000121  6C2A                                 LDV,R6   42
          1 000122  BB87                                 LAB,B3   ,AUTO
          1 000123  3C68                                 LDV,R3   104
          1 000124  0008                                 MMM

      305    18554    3               FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;

  18554   1 000125  AB86                                 LAB,B2   ,B6
          1 000126  2C08                                 LDV,R2   8
          1 000127  6C10                                 LDV,R6   16
          1 000128  BB87                                 LAB,B3   ,AUTO
          1 000129  3C78                                 LDV,R3   120
          1 00012A  0008                                 MMM

      306    18555    3               FPT_WRSYSLOG.BUF_=VECTOR(CHR32);

  18555   1 00012B  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 00012D  DFC7 0059                            STB,B5   CTX$+3,AUTO
          1 00012F  6C1F                                 LDV,R6   31
          1 000130  EF47 0058                            STR,R6   CTX$+2,AUTO
          1 000132  ABC7 0058                            LAB,B2   CTX$+2,AUTO
          1 000134  2C00                                 LDV,R2   0
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:64   
          1 000135  6C06                                 LDV,R6   6
          1 000136  BB87                                 LAB,B3   ,AUTO
          1 000137  3C6E                                 LDV,R3   110
          1 000138  0008                                 MMM

      307    18556    3               FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$DUPSGN;

  18556   1 000139  E870 0320                            LDR,R6   800,IMO
          1 00013B  EAC7 003B                            SRM,R6,'FFF8'X    FPT_WRSYSLOG+7,AUTO
          1 00013D       FFF8

      308    18557    3               CALL KHA$ERRLOG (FPT_WRSYSLOG);

  18557   1 00013E  DBC7 0034                            LAB,B5   FPT_WRSYSLOG,AUTO
          1 000140  DFC7 0058                            STB,B5   CTX$+2,AUTO
          1 000142  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 000144  CBF0 0100                            LAB,B4   256,IMO
          1 000146  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 000149       0001                            DC       s:18566,PREL

      309    18558
      310    18559        /*E* ERROR:        KZL-E$DUPSGN-4
      311    18560             MESSAGE:      Unexpected HASP SIGNON block.
      312    18561             DESCRIPTION:  A block containing a signon control record was
      313    18562                           received on a line which was already active.
      314    18563                           DATA = First 32 characters of the input block.
      315    18564        */
      316    18565
      317    18566    3               RETURN;

  18566   1 00014A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      318    18567    3               END;
      319    18568    2            END;
      320    18569        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:65   
      321    18570
      322    18571
      323    18572                /* Start deblocking here.  Check for records running off
      324    18573                    the end of the input buffer.  Watch for HASP records
      325    18574                    that don't end with a zero RCB as some terminals send
      326    18575                    control records that way. */
      327    18576
      328    18577    2         DO WHILE (X < KZ$LINCTX.INPDATSIZ);

  18577   1 00014D  E847 0011                            LDR,R6   X,AUTO
          1 00014F  E946 0059                            CMR,R6   89,B6
          1 000151  0281 0672                            BGE      s:19172,PREL

      329    18578    2            I = X;

  18578   1 000153  E847 0011                            LDR,R6   X,AUTO
          1 000155  EF47 0012                            STR,R6   I,AUTO

      330    18579    2            RECSIZE=0;

  18579   1 000157  8747 0022                            CL       RECSIZE,AUTO

      331    18580    2            IF KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP#

  18580   1 000159  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 00015B  D846 003A                            LDR,R5   58,B6
          1 00015D  5D03                                 CMV,R5   3
          1 00015E  0901 0058                            BE       s:18609,PREL
          1 000160  5D07                                 CMV,R5   7
          1 000161  0901 0055                            BE       s:18609,PREL

      332    18581    3               AND KZ$LINCTX.PRO.PROTYP ~= %KLPT_NJE# THEN DO;

      333    18582
      334    18583                    /*  If the next byte is ETB, then skip out.
      335    18584                        (If it's ETX, we'll end up dropping all the way
      336    18585                         through to SENDEOF.)  */
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:66   
      337    18586    3               IF BYT(I) = '26'X THEN

  18586   1 000163  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 000165  B856                                 LDR,R3   R6
          1 000166  C2B5                                 LLH,R4   ,B5,R3
          1 000167  4008                                 SOL,R4   8
          1 000168  C970 2600                            CMR,R4   9728,IMO
          1 00016A  0981 0004                            BNE      s:18591,PREL

      338    18587    3                  RETURN;

  18587   1 00016C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      339    18588
      340    18589                       /* Find length of record.                        */
      341    18590
      342    18591    3               IF KZ$LINCTX.PRO.SLAVE AND BYT(I)='27'X THEN

  18591   1 00016F  89C6 004B                            CMZ      75,B6
          1 000171  0881 0008                            BAGE     s:18593,PREL
          1 000173  C970 2700                            CMR,R4   9984,IMO
          1 000175  0981 0004                            BNE      s:18593,PREL

      343    18592    3                  CALL CNVRT_BSC_VFC;

  18592   1 000177  E3C0 098D                            LNJ,B6   s:0,PREL
          1 000179       0001                            DC       s:18593,PREL

      344    18593    4               DO WHILE (BYT(I) ~= KZ$LINCTX.PRO.IRSCHR /* Default '1E'X */ AND

  18593   1 00017A  0F81 001D                            B        s:18604,PREL

      345    18594    4                  BYT(I) ~= '26'X AND
      346    18595    4                  BYT(I) ~= '03'X AND
      347    18596    4                  I < KZ$LINCTX.INPDATSIZ);
      348    18597    5                  IF BYT(I) = '1D'X THEN DO; /* 3780 compression */

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:67   
  18597   1 00017C  ECC7 000C                            LDB,B6   BLK$,AUTO
          1 00017E  B847 0012                            LDR,R3   I,AUTO
          1 000180  E2B6                                 LLH,R6   ,B6,R3
          1 000181  6008                                 SOL,R6   8
          1 000182  E970 1D00                            CMR,R6   7424,IMO
          1 000184  0981 000F                            BNE      s:18602,PREL

      349    18598    5                     RECSIZE = BITBIN(BYT(I+1)&'3F'X) + RECSIZE;

  18598   1 000186  3E01                                 ADV,R3   1
          1 000187  E2B6                                 LLH,R6   ,B6,R3
          1 000188  6008                                 SOL,R6   8
          1 000189  E570 3F00                            AND,R6   16128,IMO
          1 00018B  6048                                 SOR,R6   8
          1 00018C  EA47 0022                            ADD,R6   RECSIZE,AUTO
          1 00018E  EF47 0022                            STR,R6   RECSIZE,AUTO

      350    18599    5                     I = I+1;

  18599   1 000190  8AC7 0012                            INC      I,AUTO

      351    18600    5                     END;

  18600   1 000192  0F81 0003                            B        s:18603,PREL

      352    18601    4                  ELSE
      353    18602    4                     RECSIZE = RECSIZE + 1;

  18602   1 000194  8AC7 0022                            INC      RECSIZE,AUTO

      354    18603    4                  I = I+1;

  18603   1 000196  8AC7 0012                            INC      I,AUTO

      355    18604    4                  END;

  18604   1 000198  ECC7 000C                            LDB,B6   BLK$,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:68   
          1 00019A  B847 0012                            LDR,R3   I,AUTO
          1 00019C  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
          1 00019E  5C01                                 LDV,R5   1
          1 00019F  0022                                 ACM      ;
          1 0001A0       4136 0000                                ALPHANUM(0,B6,R3,,1,FILL),;
          1 0001A2       C005 0042                                ALPHANUM(66,B5,1,R5,FILL)
          1 0001A4  5381 000E                            CBE      s:18605,PREL
          1 0001A6  E2B6                                 LLH,R6   ,B6,R3
          1 0001A7  6008                                 SOL,R6   8
          1 0001A8  E970 2600                            CMR,R6   9728,IMO
          1 0001AA  0901 0008                            BE       s:18605,PREL
          1 0001AC  E970 0300                            CMR,R6   768,IMO
          1 0001AE  0901 0004                            BE       s:18605,PREL
          1 0001B0  B945 0059                            CMR,R3   89,B5
          1 0001B2  024A                                 BL       s:18597,SPREL

      356    18605    3               NEXTI = I;

  18605   1 0001B3  BF47 001D                            STR,R3   NEXTI,AUTO

      357    18606    3               END;

  18606   1 0001B5  0F81 02AA                            B        s:18937,PREL

      358    18607    3            ELSE DO;

      359    18608
      360    18609    3               IF NOT KZ$HASPRCB.NOT_END(I) THEN

  18609   1 0001B7  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 0001B9  B856                                 LDR,R3   R6
          1 0001BA  3003                                 SOL,R3   3
          1 0001BB  82B5                                 LB       ,B5,R3
          1 0001BC  0501 0004                            BBT      s:18613,PREL

      361    18610    3                  RETURN;        /* Normal end of block               */

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:69   
  18610   1 0001BE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      362    18611
      363    18612
      364    18613    3               I = I+2;            /* Index to SCB                 */

  18613   1 0001C1  6E02                                 ADV,R6   2
          1 0001C2  EF47 0012                            STR,R6   I,AUTO

      365    18614    3               CALL SKP_HASP;

  18614   1 0001C4  E3C0 0972                            LNJ,B6   s:0,PREL
          1 0001C6       0001                            DC       s:18615,PREL

      366    18615    3               NEXTI = I;

  18615   1 0001C7  E847 0012                            LDR,R6   I,AUTO
          1 0001C9  EF47 001D                            STR,R6   NEXTI,AUTO

      367    18616    4               IF I >= KZ$LINCTX.INPDATSIZ THEN DO;

  18616   1 0001CB  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 0001CD  E946 0059                            CMR,R6   89,B6
          1 0001CF  0201 003C                            BL       s:18634,PREL

      368    18617    4                  FPT_WRSYSLOG=FPT@WRSYSLOG;

  18617   1 0001D1  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 0001D4  2C04                                 LDV,R2   4
          1 0001D5  6C2A                                 LDV,R6   42
          1 0001D6  BB87                                 LAB,B3   ,AUTO
          1 0001D7  3C68                                 LDV,R3   104
          1 0001D8  0008                                 MMM

      369    18618    4                  FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;

  18618   1 0001D9  AB86                                 LAB,B2   ,B6
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:70   
          1 0001DA  2C08                                 LDV,R2   8
          1 0001DB  6C10                                 LDV,R6   16
          1 0001DC  BB87                                 LAB,B3   ,AUTO
          1 0001DD  3C78                                 LDV,R3   120
          1 0001DE  0008                                 MMM

      370    18619    4                  FPT_WRSYSLOG.BUF_ = VECTOR(ADDR(BYT(I-30))->CHR32);

  18619   1 0001DF  8CC7 000C                            LDI      BLK$,AUTO
          1 0001E1  7031                                 DCL,R7   1
          1 0001E2  8D47 005B                            SDI      CTX$+5,AUTO
          1 0001E4  F847 0012                            LDR,R7   I,AUTO
          1 0001E6  6C00                                 LDV,R6   0
          1 0001E7  8447 005B                            AID      CTX$+5,AUTO
          1 0001E9  7071                                 DCR,R7   1
          1 0001EA  8470 FFFF FFF1                       AID      -15,IMO
          1 0001ED  8D47 0059                            SDI      CTX$+3,AUTO
          1 0001EF  5C1F                                 LDV,R5   31
          1 0001F0  DF47 0058                            STR,R5   CTX$+2,AUTO
          1 0001F2  ABC7 0058                            LAB,B2   CTX$+2,AUTO
          1 0001F4  2C00                                 LDV,R2   0
          1 0001F5  6C06                                 LDV,R6   6
          1 0001F6  BB87                                 LAB,B3   ,AUTO
          1 0001F7  3C6E                                 LDV,R3   110
          1 0001F8  0008                                 MMM

      371    18620    4                  FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$BLKSYNERR;

  18620   1 0001F9  E870 0328                            LDR,R6   808,IMO
          1 0001FB  EAC7 003B                            SRM,R6,'FFF8'X    FPT_WRSYSLOG+7,AUTO
          1 0001FD       FFF8

      372    18621    4                  CALL KHA$ERRLOG (FPT_WRSYSLOG);

  18621   1 0001FE  DBC7 0034                            LAB,B5   FPT_WRSYSLOG,AUTO
          1 000200  DFC7 0058                            STB,B5   CTX$+2,AUTO
          1 000202  BBC7 0058                            LAB,B3   CTX$+2,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:71   
          1 000204  CBF0 0100                            LAB,B4   256,IMO
          1 000206  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 000209       0001                            DC       s:18629,PREL

      373    18622
      374    18623        /*E* ERROR:        KZL-E$BLKSYNERR-4
      375    18624             MESSAGE:      HASP block syntax error.
      376    18625             DESCRIPTION:  The deblocking routine ran off end of an input block.
      377    18626                           DATA = Last 32 (or so) characters of the input block.
      378    18627        */
      379    18628
      380    18629    4                  GOTO KILL_LINE;

  18629   1 00020A  0F81 020A                            B        s:18890,PREL

      381    18630    4                  END;
      382    18631
      383    18632                    /* Good record. Decompressed size is in RECSIZE  */
      384    18633
      385    18634    4               IF NOT (KZ$HASPRCB(X) & '0F'X) THEN DO;

  18634   1 00020C  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 00020E  B847 0011                            LDR,R3   X,AUTO
          1 000210  D2B5                                 LLH,R5   ,B5,R3
          1 000211  5008                                 SOL,R5   8
          1 000212  D570 0F00                            AND,R5   3840,IMO
          1 000214  5981 01A6                            BNEZ,R5  s:18857,PREL

      386    18635
      387    18636                       /* We have a control record... Only legal types are
      388    18637                          "request to send" and "permission to send".      */
      389    18638
      390    18639    4                  IF (BITBIN(KZ$HASPRCB(X) & '70'X) = %KZ_S_REQUEST_TO_SEND#*16) OR

  18639   1 000216  D2B5                                 LLH,R5   ,B5,R3
          1 000217  5008                                 SOL,R5   8
          1 000218  D570 7000                            AND,R5   28672,IMO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:72   
          1 00021A  5048                                 SOR,R5   8
          1 00021B  5D10                                 CMV,R5   16
          1 00021C  0901 0009                            BE       s:18649,PREL
          1 00021E  D2B5                                 LLH,R5   ,B5,R3
          1 00021F  5008                                 SOL,R5   8
          1 000220  D570 7000                            AND,R5   28672,IMO
          1 000222  5048                                 SOR,R5   8
          1 000223  5D20                                 CMV,R5   32
          1 000224  0981 0122                            BNE      s:18791,PREL

      391    18640    5                     (BITBIN(KZ$HASPRCB(X) & '70'X) = %KZ_S_PERMISSION_TO_SEND#*16)
             18640                              THEN DO;

      392    18641
      393    18642                          /* We have a "grant pts" or a "request pts" record.
      394    18643                             Find out which device it's for by checking for both
      395    18644                             RCB and MGR_TYPE (Input, Output or I/O).
      396    18645                             This allows for two devices on a TERMINAL to have
      397    18646                             the same RCB, as long as one is Input and the other
      398    18647                             is Output. */
      399    18648
      400    18649    5                     DCTX$ = KZ$LINCTX.CTRHD$;

  18649   1 000226  CC86                                 LDB,B4   ,B6
          1 000227  CFC7 000A                            STB,B4   DCTX$,AUTO

      401    18650    5   FIND_PTS_DEVICE:
      402    18651    6                     DO WHILE (DCTX$ ~= ADDR(NIL));

  18651   1 000229  0F81 0026            FIND_PTS_DEVICE B        s:18661,PREL

      403    18652    6                        IF BYT(X+1) = KZ$SDVCTX.RCB_CODE THEN

  18652   1 00022B  ECC7 000C                            LDB,B6   BLK$,AUTO
          1 00022D  B847 0011                            LDR,R3   X,AUTO
          1 00022F  3E01                                 ADV,R3   1
          1 000230  E0B6                                 LDH,R6   ,B6,R3
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:73   
          1 000231  DCC7 000A                            LDB,B5   DCTX$,AUTO
          1 000233  E1C5 0024                            CMH,R6   36,B5
          1 000235  0981 0017                            BNE      s:18660,PREL

      404    18653    6                           IF BITBIN(KZ$HASPRCB(X)&'70'X) = %KZ_S_REQUEST_TO_SEND#*16
             18653                                    THEN

  18653   1 000237  A847 0011                            LDR,R2   X,AUTO
          1 000239  D2A6                                 LLH,R5   ,B6,R2
          1 00023A  5008                                 SOL,R5   8
          1 00023B  D570 7000                            AND,R5   28672,IMO
          1 00023D  5048                                 SOR,R5   8
          1 00023E  5D10                                 CMV,R5   16
          1 00023F  0981 0008                            BNE      s:18658,PREL

      405    18654    6                              IF KZ$SDVCTX.MGR_TYPE = %KZ_S_DMINPUT# THEN

  18654   1 000241  D2C5 0022                            LLH,R5   34,B5
          1 000243  5D01                                 CMV,R5   1
          1 000244  0901 000E                            BE       s:18665,PREL
          1 000246  0F81 0006                            B        s:18660,PREL

      406    18655    6                                 EXIT FIND_PTS_DEVICE;
      407    18656    6                              ELSE;
      408    18657    6                           ELSE
      409    18658    6                              IF KZ$SDVCTX.MGR_TYPE = %KZ_S_DMOUTPUT# THEN

  18658   1 000248  D2C5 0022                            LLH,R5   34,B5
          1 00024A  5D02                                 CMV,R5   2
          1 00024B  0901 0007                            BE       s:18665,PREL

      410    18659    6                                 EXIT FIND_PTS_DEVICE;
      411    18660    6                        DCTX$ = KZ$SDVCTX.LNK$;

  18660   1 00024D  CC85                                 LDB,B4   ,B5
          1 00024E  CFC7 000A                            STB,B4   DCTX$,AUTO

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:74   
      412    18661    6                        END FIND_PTS_DEVICE;

  18661   1 000250  8DC7 000A                            CMN      DCTX$,AUTO
          1 000252  09D9                                 BNE      s:18652,SPREL

      413    18662
      414    18663                          /* If DCTX$ is null, then no device was located. */
      415    18664
      416    18665    6                    IF BITBIN(KZ$HASPRCB(X)&'70'X) = %KZ_S_REQUEST_TO_SEND#*16 THEN DO
             18665                              ;

  18665   1 000253  ECC7 000C                            LDB,B6   BLK$,AUTO
          1 000255  B847 0011                            LDR,R3   X,AUTO
          1 000257  E2B6                                 LLH,R6   ,B6,R3
          1 000258  6008                                 SOL,R6   8
          1 000259  E570 7000                            AND,R6   28672,IMO
          1 00025B  6048                                 SOR,R6   8
          1 00025C  6D10                                 CMV,R6   16
          1 00025D  0981 0047                            BNE      s:18702,PREL

      417    18666
      418    18667                             /* It is a request PTS record.                */
      419    18668
      420    18669    6                        IF DCTX$ ~= ADDR(NIL)

  18669   1 00025F  8DC7 000A                            CMN      DCTX$,AUTO
          1 000261  0901 000D                            BE       s:18678,PREL
          1 000263  DCC7 000A                            LDB,B5   DCTX$,AUTO
          1 000265  82C5 001E                            LB,'2000'X        30,B5
          1 000267       2000
          1 000268  0501 0006                            BBT      s:18678,PREL

      421    18670    6                           AND NOT KZ$SDVCTX.FLAGS.PTS_IN THEN
      422    18671
      423    18672                                /* Device state is appropriate for request. */
      424    18673    6                           CALL BRKRQS; /* Send BREAK to INSYM */

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:75   
  18673   1 00026A  E3C0 0586                            LNJ,B6   s:0,PREL
          1 00026C       0001                            DC       s:18673+3,PREL
          1 00026D  0F81 0148                            B        s:18850,PREL

      425    18674    7                        ELSE DO;

      426    18675
      427    18676                                   /* We have a spurious request pts... Error log it.*/
      428    18677
      429    18678    7                           FPT_WRSYSLOG=FPT@WRSYSLOG;

  18678   1 00026F  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 000272  2C04                                 LDV,R2   4
          1 000273  6C2A                                 LDV,R6   42
          1 000274  BB87                                 LAB,B3   ,AUTO
          1 000275  3C68                                 LDV,R3   104
          1 000276  0008                                 MMM

      430    18679    7                           FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;

  18679   1 000277  ACC7 0004                            LDB,B2   @KZ$LINCTX,AUTO
          1 000279  2C08                                 LDV,R2   8
          1 00027A  6C10                                 LDV,R6   16
          1 00027B  BB87                                 LAB,B3   ,AUTO
          1 00027C  3C78                                 LDV,R3   120
          1 00027D  0008                                 MMM

      431    18680    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;

  18680   1 00027E  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 000280  EFC7 0044                            STB,B6   FPT_WRSYSLOG+16,AUTO

      432    18681    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.RCB = BYT(X);

  18681   1 000282  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 000284  B847 0011                            LDR,R3   X,AUTO
          1 000286  E2B5                                 LLH,R6   ,B5,R3
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:76   
          1 000287  6008                                 SOL,R6   8
          1 000288  6048                                 SOR,R6   8
          1 000289  E7C7 0047                            STH,R6   FPT_WRSYSLOG+19,AUTO

      433    18682    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.SRCB = BYT(X+1);

  18682   1 00028B  3E01                                 ADV,R3   1
          1 00028C  E2B5                                 LLH,R6   ,B5,R3
          1 00028D  6008                                 SOL,R6   8
          1 00028E  6048                                 SOR,R6   8
          1 00028F  EAC7 0047                            SRM,R6,'00FF'X    FPT_WRSYSLOG+19,AUTO
          1 000291       00FF

      434    18683    7                           FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$DUPRTS;

  18683   1 000292  E870 0330                            LDR,R6   816,IMO
          1 000294  EAC7 003B                            SRM,R6,'FFF8'X    FPT_WRSYSLOG+7,AUTO
          1 000296       FFF8

      435    18684    7                           CALL KHA$ERRLOG (FPT_WRSYSLOG);

  18684   1 000297  CBC7 0034                            LAB,B4   FPT_WRSYSLOG,AUTO
          1 000299  CFC7 0058                            STB,B4   CTX$+2,AUTO
          1 00029B  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 00029D  CBF0 0100                            LAB,B4   256,IMO
          1 00029F  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 0002A2       0001                            DC       s:18696,PREL

      436    18685
      437    18686        /*E* ERROR:        KZL-E$DUPRTS-4
      438    18687             MESSAGE:      Spurious Request To Send.
      439    18688             DESCRIPTION:  A "Request To Send" control record was received
      440    18689                           for a device which either already had permission to
      441    18690                           send (input) or which was undefined for the TERMinal.
      442    18691                           V0/V1 = Device context pointer.
      443    18692                           V3 = RCB/SRCB received.
      444    18693        */
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:77   
      445    18694
      446    18695    7                           END;

      447    18696    6                        END;

  18696   1 0002A3  0F81 0112                            B        s:18850,PREL

      448    18697    6                     ELSE DO;

      449    18698        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:78   
      450    18699
      451    18700            /* We have a grant permission to send record.                                */
      452    18701
      453    18702    6                        IF DCTX$ ~= ADDR(NIL)

  18702   1 0002A5  8DC7 000A                            CMN      DCTX$,AUTO
          1 0002A7  0901 0069                            BE       s:18767,PREL
          1 0002A9  DCC7 000A                            LDB,B5   DCTX$,AUTO
          1 0002AB  82C5 001E                            LB,'1000'X        30,B5
          1 0002AD       1000
          1 0002AE  0501 0062                            BBT      s:18767,PREL

      454    18703    7                           AND NOT KZ$SDVCTX.FLAGS.PTS_OUT THEN DO;

      455    18704
      456    18705                                  /* Device state is appropriate for a grant.*/
      457    18706
      458    18707    7                           KZ$SDVCTX.FLAGS.PTS_OUT = '1'B;

  18707   1 0002B0  8945 001E                            LBT,'1000'X       30,B5
  18707   1 0002B2       1000

      459    18708    7                           IF KZ$SDVCTX.STATE = %KZ_S_SAWAITING_PTS# THEN

  18708   1 0002B3  E2C5 000A                            LLH,R6   10,B5
          1 0002B5  6D03                                 CMV,R6   3
          1 0002B6  0981 0006                            BNE      s:18712,PREL

      460    18709                                   /* Permission to send was expected      */
      461    18710    7                              KZ$SDVCTX.STATE=%KZ_S_SOPEN#;

  18710   1 0002B8  5C04                                 LDV,R5   4
          1 0002B9  D7C5 000A                            STH,R5   10,B5
          1 0002BB  0F81 00FA                            B        s:18850,PREL

      462    18711    7                           ELSE
      463    18712    7                              IF KZ$SDVCTX.STATE = %KZ_S_SCLS_AWAITING_PTS# THEN
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:79   

  18712   1 0002BD  6D07                                 CMV,R6   7
          1 0002BE  0981 00F7                            BNE      s:18850,PREL

      464    18713    7   SEND_EOFREC:
      465    18714    8                              DO;

  18714   1                              SEND_EOFREC     null
      466    18715                                      /* Device is awaiting permission from
      467    18716                                         the line but host has closed.
      468    18717                                         Go close the device down.            */
      469    18718                                      %KV$USRENT (VDI$=KZ$SDVCTX.VDI$,
      470    18719                                                  DFR$=DFREOFREC,
      471    18720                                                  SCHRSN=%KV_SCHRSN_DFR1);
             18733    8           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             18733                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;

  18733   1 0002C0  CCC5 000B            SEND_EOFREC     LDB,B4   11,B5
          1 0002C2  BCC4 0008                            LDB,B3   8,B4
          1 0002C4  ACC3 0033                            LDB,B2   51,B3
          1 0002C6  8AC2 0039                            INC      57,B2
          1 0002C8  8EC2 0038                            CAD      56,B2

             18734    9           IF NOT KZ$SDVCTX.VDI$->KV$VDI.BSY THEN DO;

  18734   1 0002CA  CCC5 000B                            LDB,B4   11,B5
          1 0002CC  82C4 0019                            LB,'0080'X        25,B4
          1 0002CE       0080
          1 0002CF  0501 0012                            BBT      s:18740,PREL

             18735    9              KZ$SDVCTX.VDI$->KV$VDI.BSY = '1'B;

  18735   1 0002D1  8944 0019                            LBT,'0080'X       25,B4
  18735   1 0002D3       0080

             18736    9              KV@USRENT.SVDPTR$ = KV$PTR$;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:80   
  18736   1 0002D4  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 0002D7  CFC7 0006                            STB,B4   KV@USRENT,AUTO

             18737    9              KV$PTR$ = KZ$SDVCTX.VDI$->KV$VDI.ASNINPPTR$;

  18737   1 0002D9  BCC5 000B                            LDB,B3   11,B5
          1 0002DB  ACC3 0006                            LDB,B2   6,B3
          1 0002DD  AF80 0000 0000  xsym                 STB,B2   KV$PTR$

             18738    9              END;                         /* ELSE IF ~BSY                       */

  18738   1 0002E0  0F81 0010                            B        s:18746,PREL

             18739    9           ELSE DO;

             18740    9              KZ$SDVCTX.VDI$->KV$VDI.DFR.USR(1) = '1'B;

  18740   1 0002E2  8944 0018                            LBT,'4000'X       24,B4
  18740   1 0002E4       4000

             18741    9           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             18741                   KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;

  18741   1 0002E5  CCC5 000B                            LDB,B4   11,B5
          1 0002E7  BCC4 0008                            LDB,B3   8,B4
          1 0002E9  ACC3 0033                            LDB,B2   51,B3
          1 0002EB  8AC2 003B                            INC      59,B2
          1 0002ED  8EC2 003A                            CAD      58,B2

             18742    9              GOTO DFREOFREC;

  18742   1 0002EF  0F81 001C                            B        s:18760,PREL

             18743    9              END;                         /* END IF                             */
      472    18746    8                                 CALL KZD$BLDEOF (KZ$SDVCTX);

  18746   1 0002F1  BBC7 000A                            LAB,B3   DCTX$,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:81   
          1 0002F3  CBF0 0100                            LAB,B4   256,IMO
          1 0002F5  E380 0000 0000  xent                 LNJ,B6   KZD$BLDEOF
          1 0002F8       0001                            DC       s:18753,PREL

      473    18747                                      %KV$USREXT;
             18753    8           KV$PTR.VDI$->KV$VDI.BSY = '0'B;

  18753   1 0002F9  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0002FC  DC86                                 LDB,B5   ,B6
          1 0002FD  8845 0019                            LBF,'0080'X       25,B5
          1 0002FF       0080

             18755    8           KV$PTR$ = KV@USRENT.SVDPTR$;

  18755   1 000300  DCC7 0006                            LDB,B5   KV@USRENT,AUTO
          1 000302  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

      474    18757    8                                 KZ$SDVCTX.STATE = %KZ_S_SCONNECTED#;

  18757   1 000305  6C02                                 LDV,R6   2
          1 000306  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 000308  E7C6 000A                            STH,R6   10,B6

      475    18758    8                                 EXIT SEND_EOFREC;

  18758   1 00030A  0F81 0004                            B        s:18762,PREL

      476    18759    8   DFREOFREC:
      477    18760    8                                 KZ$SDVCTX.DFR.EOFREC = '1'B;

  18760   1 00030C  8945 001F            DFREOFREC       LBT,'4000'X       31,B5
  18760   1 00030E       4000

      478    18761    8                                 END SEND_EOFREC;

      479    18762    7                           END;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:82   
  18762   1 00030F  0F81 00A6                            B        s:18850,PREL

      480    18763    7                        ELSE DO;

      481    18764
      482    18765                                 /* Error log spurious grant permission to send.*/
      483    18766
      484    18767    7                           FPT_WRSYSLOG=FPT@WRSYSLOG;

  18767   1 000311  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 000314  2C04                                 LDV,R2   4
          1 000315  6C2A                                 LDV,R6   42
          1 000316  BB87                                 LAB,B3   ,AUTO
          1 000317  3C68                                 LDV,R3   104
          1 000318  0008                                 MMM

      485    18768    7                           FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;

  18768   1 000319  ACC7 0004                            LDB,B2   @KZ$LINCTX,AUTO
          1 00031B  2C08                                 LDV,R2   8
          1 00031C  6C10                                 LDV,R6   16
          1 00031D  BB87                                 LAB,B3   ,AUTO
          1 00031E  3C78                                 LDV,R3   120
          1 00031F  0008                                 MMM

      486    18769    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;

  18769   1 000320  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 000322  EFC7 0044                            STB,B6   FPT_WRSYSLOG+16,AUTO

      487    18770    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.RCB = BYT(X);

  18770   1 000324  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 000326  B847 0011                            LDR,R3   X,AUTO
          1 000328  E2B5                                 LLH,R6   ,B5,R3
          1 000329  6008                                 SOL,R6   8
          1 00032A  6048                                 SOR,R6   8
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:83   
          1 00032B  E7C7 0047                            STH,R6   FPT_WRSYSLOG+19,AUTO

      488    18771    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.SRCB = BYT(X+1);

  18771   1 00032D  3E01                                 ADV,R3   1
          1 00032E  E2B5                                 LLH,R6   ,B5,R3
          1 00032F  6008                                 SOL,R6   8
          1 000330  6048                                 SOR,R6   8
          1 000331  EAC7 0047                            SRM,R6,'00FF'X    FPT_WRSYSLOG+19,AUTO
          1 000333       00FF

      489    18772    7                           FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$DUPPTS;

  18772   1 000334  E870 0338                            LDR,R6   824,IMO
          1 000336  EAC7 003B                            SRM,R6,'FFF8'X    FPT_WRSYSLOG+7,AUTO
          1 000338       FFF8

      490    18773    7                           CALL KHA$ERRLOG (FPT_WRSYSLOG);

  18773   1 000339  CBC7 0034                            LAB,B4   FPT_WRSYSLOG,AUTO
          1 00033B  CFC7 0058                            STB,B4   CTX$+2,AUTO
          1 00033D  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 00033F  CBF0 0100                            LAB,B4   256,IMO
          1 000341  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 000344       0001                            DC       s:18786,PREL

      491    18774
      492    18775
      493    18776        /*E* ERROR:        KZL-E$DUPPTS-4
      494    18777             MESSAGE:      Spurious Permission To Send.
      495    18778             DESCRIPTION:  A "Permission To Send" control record was received
      496    18779                           for a device which either already had permission to
      497    18780                           send (output) or which was undefined for the TERMinal.
      498    18781                           V0/V1 = Device context pointer.
      499    18782                           V3 = RCB/SRCB received.
      500    18783        */
      501    18784    7                           END;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:84   

      502    18785    6                        END;

      503    18786    5                     END;

  18786   1 000345  0F81 0070                            B        s:18850,PREL

      504    18787        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:85   
      505    18788                    /* Check for block sequence error.                                   */
      506    18789
      507    18790    5                  ELSE DO;

      508    18791    6                     IF BITBIN(KZ$HASPRCB(X)&'70'X) = %KZ_S_BLOCK_SEQUENCE_ERROR#*16
             18791                              THEN DO;

  18791   1 000347  D2B5                                 LLH,R5   ,B5,R3
          1 000348  5008                                 SOL,R5   8
          1 000349  D570 7000                            AND,R5   28672,IMO
          1 00034B  5048                                 SOR,R5   8
          1 00034C  5D60                                 CMV,R5   96
          1 00034D  0981 0026                            BNE      s:18812,PREL

      509    18792
      510    18793                             /* Error log block sequence error report  */
      511    18794
      512    18795    6                        FPT_WRSYSLOG=FPT@WRSYSLOG;

  18795   1 00034F  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 000352  2C04                                 LDV,R2   4
          1 000353  6C2A                                 LDV,R6   42
          1 000354  BB87                                 LAB,B3   ,AUTO
          1 000355  3C68                                 LDV,R3   104
          1 000356  0008                                 MMM

      513    18796    6                        FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;

  18796   1 000357  AB86                                 LAB,B2   ,B6
          1 000358  2C08                                 LDV,R2   8
          1 000359  6C10                                 LDV,R6   16
          1 00035A  BB87                                 LAB,B3   ,AUTO
          1 00035B  3C78                                 LDV,R3   120
          1 00035C  0008                                 MMM

      514    18797    6                        FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$SEQERRCTL;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:86   
  18797   1 00035D  E870 0340                            LDR,R6   832,IMO
          1 00035F  EAC7 003B                            SRM,R6,'FFF8'X    FPT_WRSYSLOG+7,AUTO
          1 000361       FFF8

      515    18798    6                        ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;

  18798   1 000362  DCC7 000A                            LDB,B5   DCTX$,AUTO
          1 000364  DFC7 0044                            STB,B5   FPT_WRSYSLOG+16,AUTO

      516    18799    6                        CALL KHA$ERRLOG (FPT_WRSYSLOG);

  18799   1 000366  CBC7 0034                            LAB,B4   FPT_WRSYSLOG,AUTO
          1 000368  CFC7 0058                            STB,B4   CTX$+2,AUTO
          1 00036A  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 00036C  CBF0 0100                            LAB,B4   256,IMO
          1 00036E  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 000371       0001                            DC       s:18808,PREL

      517    18800
      518    18801        /*E* ERROR:        KZL-E$SEQERRCTL-4
      519    18802             MESSAGE:      Sequence error control record received.
      520    18803             DESCRIPTION:  The remote sent a control record indicating that
      521    18804                           we had sent a block with an invalid sequence number.
      522    18805                           V0/V1 = Device context pointer.
      523    18806        */
      524    18807
      525    18808    6                        GOTO KILL_LINE;

  18808   1 000372  0F81 00A2                            B        s:18890,PREL

      526    18809    6                        END;
      527    18810    6                     ELSE DO;

      528    18811
      529    18812    6                        IF KZ$LINCTX.PRO.PROTYP = %KLPT_NJE#

  18812   1 000374  D846 003A                            LDR,R5   58,B6
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:87   
          1 000376  5D07                                 CMV,R5   7
          1 000377  0981 000B                            BNE      s:18830,PREL
          1 000379  C2B5                                 LLH,R4   ,B5,R3
          1 00037A  4008                                 SOL,R4   8
          1 00037B  C570 7000                            AND,R4   28672,IMO
          1 00037D  4048                                 SOR,R4   8
          1 00037E  4D40                                 CMV,R4   64
          1 00037F  0981 0003                            BNE      s:18830,PREL

      530    18813    7                           AND BITBIN(KZ$HASPRCB(X) & '70'X) = %
             18813                                    KZ_S_TRANSMISSION_COMPLETE#*16 THEN DO;

      531    18814                                /* The other end of an NJE stream has acknowledged an
      532    18815                                   EOF which we sent to it.  For now, we're ignoring
      533    18816                                   this.  In IBMland, this record informs its receiver
      534    18817                                   that it's OK to "drain the output" for this file,
      535    18818                                   i.e., delete it from :SYMO.  For HASP and NJE, we
      536    18819                                   tell OUTSYM to do this when the last block of the
      537    18820                                   job is ACK'ed from the other end (by then returning
      538    18821                                   a "marker").  This is cheating, technically, for
      539    18822                                   NJE, since a line drop following our EOF but before
      540    18823                                   receiving this record would result in the loss of
      541    18824                                   that file.  Oh, well. */
      542    18825    7                           END;

  18825   1 000381  0F81 0034                            B        s:18850,PREL

      543    18826    7                        ELSE DO;

      544    18827
      545    18828                                /* Unexpected control record...             */
      546    18829
      547    18830    7                           FPT_WRSYSLOG=FPT@WRSYSLOG;

  18830   1 000383  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 000386  2C04                                 LDV,R2   4
          1 000387  6C2A                                 LDV,R6   42
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:88   
          1 000388  BB87                                 LAB,B3   ,AUTO
          1 000389  3C68                                 LDV,R3   104
          1 00038A  0008                                 MMM

      548    18831    7                           FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;

  18831   1 00038B  AB86                                 LAB,B2   ,B6
          1 00038C  2C08                                 LDV,R2   8
          1 00038D  6C10                                 LDV,R6   16
          1 00038E  BB87                                 LAB,B3   ,AUTO
          1 00038F  3C78                                 LDV,R3   120
          1 000390  0008                                 MMM

      549    18832    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;

  18832   1 000391  DCC7 000A                            LDB,B5   DCTX$,AUTO
          1 000393  DFC7 0044                            STB,B5   FPT_WRSYSLOG+16,AUTO

      550    18833    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.RCB = BYT(X);

  18833   1 000395  CCC7 000C                            LDB,B4   BLK$,AUTO
          1 000397  B847 0011                            LDR,R3   X,AUTO
          1 000399  E2B4                                 LLH,R6   ,B4,R3
          1 00039A  6008                                 SOL,R6   8
          1 00039B  6048                                 SOR,R6   8
          1 00039C  E7C7 0047                            STH,R6   FPT_WRSYSLOG+19,AUTO

      551    18834    7                           ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.SRCB = BYT(X+1);

  18834   1 00039E  3E01                                 ADV,R3   1
          1 00039F  E2B4                                 LLH,R6   ,B4,R3
          1 0003A0  6008                                 SOL,R6   8
          1 0003A1  6048                                 SOR,R6   8
          1 0003A2  EAC7 0047                            SRM,R6,'00FF'X    FPT_WRSYSLOG+19,AUTO
          1 0003A4       00FF

      552    18835    7                           FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$INVCTLREC;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:89   

  18835   1 0003A5  E870 0348                            LDR,R6   840,IMO
          1 0003A7  EAC7 003B                            SRM,R6,'FFF8'X    FPT_WRSYSLOG+7,AUTO
          1 0003A9       FFF8

      553    18836    7                           CALL KHA$ERRLOG (FPT_WRSYSLOG);

  18836   1 0003AA  9BC7 0034                            LAB,B1   FPT_WRSYSLOG,AUTO
          1 0003AC  9FC7 0058                            STB,B1   CTX$+2,AUTO
          1 0003AE  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 0003B0  CBF0 0100                            LAB,B4   256,IMO
          1 0003B2  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 0003B5       0001                            DC       s:18850,PREL

      554    18837
      555    18838        /*E* ERROR:        KZL-E$INVCTLREC-4
      556    18839             MESSAGE:      Undefined control record received.
      557    18840             DESCRIPTION:  A control record other than a SIGNON string,
      558    18841                           Request To Send, Permission To Send, or
      559    18842                           sequencing error message was received.
      560    18843                           V0/V1 = Device context pointer.
      561    18844                           V3 = RCB/SRCB received.
      562    18845        */
      563    18846
      564    18847    7                           END;

      565    18848    6                        END;

      566    18849    5                     END;

      567    18850    4                  CALL SKP_HASP;

  18850   1 0003B6  E3C0 0780                            LNJ,B6   s:0,PREL
          1 0003B8       0001                            DC       s:18851,PREL

      568    18851    4                  GOTO NXT_RECORD;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:90   
  18851   1 0003B9  0F81 03E9                            B        s:19166,PREL

      569    18852    4                  END;
      570    18853    4               ELSE DO;

      571    18854        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:91   
      572    18855                       /* We have a data record. Find his device context.*/
      573    18856
      574    18857    4                  DCTX$=KZ$LINCTX.CTRHD$;

  18857   1 0003BB  CC86                                 LDB,B4   ,B6
          1 0003BC  CFC7 000A                            STB,B4   DCTX$,AUTO

      575    18858    5                  DO WHILE (DCTX$ ~= ADDR(NIL));

  18858   1 0003BE  0F81 0014                            B        s:18863,PREL

      576    18859    5                     IF KZ$SDVCTX.RCB_CODE = BYT(X) AND

  18859   1 0003C0  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 0003C2  E0C6 0024                            LDH,R6   36,B6
          1 0003C4  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 0003C6  B847 0011                            LDR,R3   X,AUTO
          1 0003C8  E1B5                                 CMH,R6   ,B5,R3
          1 0003C9  0981 0006                            BNE      s:18862,PREL
          1 0003CB  D2C6 0022                            LLH,R5   34,B6
          1 0003CD  5D02                                 CMV,R5   2
          1 0003CE  0981 0007                            BNE      s:18869,PREL

      577    18860    5                        KZ$SDVCTX.MGR_TYPE ~= %KZ_S_DMOUTPUT# THEN
      578    18861    5                        GOTO DBLK2;
      579    18862    5                     DCTX$=KZ$SDVCTX.LNK$;

  18862   1 0003D0  CC86                                 LDB,B4   ,B6
          1 0003D1  CFC7 000A                            STB,B4   DCTX$,AUTO

      580    18863    5                     END;

  18863   1 0003D3  8DC7 000A                            CMN      DCTX$,AUTO
          1 0003D5  09EB                                 BNE      s:18859,SPREL

      581    18864
      582    18865                          /* DCTX$ contains null (no device found) or
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:92   
      583    18866                             a valid pointer which points to the device context
      584    18867                             for the record.                               */
      585    18868
      586    18869    5   DBLK2:         IF DCTX$ = ADDR(NIL) OR NOT KZ$SDVCTX.FLAGS.PTS_IN THEN DO;

  18869   1 0003D6  8DC7 000A            DBLK2           CMN      DCTX$,AUTO
          1 0003D8  0901 0008                            BE       s:18873,PREL
          1 0003DA  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 0003DC  82C6 001E                            LB,'2000'X        30,B6
          1 0003DE       2000
          1 0003DF  0501 0040                            BBT      s:18896,PREL

      587    18870
      588    18871                          /* Device can't accept the record.               */
      589    18872
      590    18873    5                     FPT_WRSYSLOG=FPT@WRSYSLOG;

  18873   1 0003E1  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 0003E4  2C04                                 LDV,R2   4
          1 0003E5  6C2A                                 LDV,R6   42
          1 0003E6  BB87                                 LAB,B3   ,AUTO
          1 0003E7  3C68                                 LDV,R3   104
          1 0003E8  0008                                 MMM

      591    18874    5                     FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;

  18874   1 0003E9  ACC7 0004                            LDB,B2   @KZ$LINCTX,AUTO
          1 0003EB  2C08                                 LDV,R2   8
          1 0003EC  6C10                                 LDV,R6   16
          1 0003ED  BB87                                 LAB,B3   ,AUTO
          1 0003EE  3C78                                 LDV,R3   120
          1 0003EF  0008                                 MMM

      592    18875    5                     FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$INVDAT;

  18875   1 0003F0  E870 0350                            LDR,R6   848,IMO
          1 0003F2  EAC7 003B                            SRM,R6,'FFF8'X    FPT_WRSYSLOG+7,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:93   
          1 0003F4       FFF8

      593    18876    5                     ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;

  18876   1 0003F5  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 0003F7  EFC7 0044                            STB,B6   FPT_WRSYSLOG+16,AUTO

      594    18877    5                     ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.RCB = BYT(X);

  18877   1 0003F9  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 0003FB  B847 0011                            LDR,R3   X,AUTO
          1 0003FD  D2B5                                 LLH,R5   ,B5,R3
          1 0003FE  5008                                 SOL,R5   8
          1 0003FF  5048                                 SOR,R5   8
          1 000400  D7C7 0047                            STH,R5   FPT_WRSYSLOG+19,AUTO

      595    18878    5                     ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.SRCB = BYT(X+1);

  18878   1 000402  3E01                                 ADV,R3   1
          1 000403  D2B5                                 LLH,R5   ,B5,R3
          1 000404  5008                                 SOL,R5   8
          1 000405  5048                                 SOR,R5   8
          1 000406  DAC7 0047                            SRM,R5,'00FF'X    FPT_WRSYSLOG+19,AUTO
          1 000408       00FF

      596    18879    5                     CALL KHA$ERRLOG (FPT_WRSYSLOG);

  18879   1 000409  CBC7 0034                            LAB,B4   FPT_WRSYSLOG,AUTO
          1 00040B  CFC7 0058                            STB,B4   CTX$+2,AUTO
          1 00040D  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 00040F  CBF0 0100                            LAB,B4   256,IMO
          1 000411  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 000414       0001                            DC       s:18890,PREL

      597    18880
      598    18881        /*E* ERROR:        KZL-E$INVDAT-4
      599    18882             MESSAGE:      Spurious data record recieved.
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:94   
      600    18883             DESCRIPTION:  A record was received for a device which either
      601    18884                           lacked permission to send or which was undefined
      602    18885                           in the TERMinal.
      603    18886                           V0/V1 = Device context pointer.
      604    18887                           V3 = RCB/SRCB received.
      605    18888        */
      606    18889
      607    18890    5   KILL_LINE:        CALL KZR$KILL_LINE (KZ$LINCTX);

  18890   1 000415  BBC7 0004            KILL_LINE       LAB,B3   @KZ$LINCTX,AUTO
          1 000417  CBF0 0100                            LAB,B4   256,IMO
          1 000419  E380 0000 0000  xent                 LNJ,B6   KZR$KILL_LINE
          1 00041C       0001                            DC       s:18891,PREL

      608    18891    5                     RETURN;

  18891   1 00041D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      609    18892    5                     END;
      610    18893
      611    18894                       /* Device has permission to send to host.  */
      612    18895
      613    18896    4                  IF KZ$SDVCTX.RCB_CODE ~= '91'X AND

  18896   1 000420  E2C6 0024                            LLH,R6   36,B6
          1 000422  6008                                 SOL,R6   8
          1 000423  E970 9100                            CMR,R6   -28416,IMO
          1 000425  0901 003A                            BE       s:18937,PREL
          1 000427  E970 9200                            CMR,R6   -28160,IMO
          1 000429  0901 0036                            BE       s:18937,PREL

      614    18897    5                     KZ$SDVCTX.RCB_CODE ~= '92'X THEN DO;

      615    18898
      616    18899                          /* Dont check SUSBITS for console.     */
      617    18900
      618    18901    5                     IF NOT KZ$LINCTX.SNDFCS &
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:95   

  18901   1 00042B  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
          1 00042D  D845 0037                            LDR,R5   55,B5
          1 00042F  D546 0023                            AND,R5   35,B6
          1 000431  5981 002E                            BNEZ,R5  s:18937,PREL

      619    18902    6                        KZ$SDVCTX.SUSBIT_MASK THEN DO;

      620    18903
      621    18904                          /* Suspension was requested but we got a record
      622    18905                             Error log the record for the suspended stream.
      623    18906                             Disconnect has been deemed a bit radical for this error.
      624    18907                             The test was put in after we discovered CP-V losing a
      625    18908                             Susbit. He flooded our memory with records and caused
      626    18909                             us to crash. User beware! we don't disconnect on this
      627    18910                             error any more.                             */
      628    18911
      629    18912    6                        FPT_WRSYSLOG=FPT@WRSYSLOG;

  18912   1 000433  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 000436  2C04                                 LDV,R2   4
          1 000437  6C2A                                 LDV,R6   42
          1 000438  BB87                                 LAB,B3   ,AUTO
          1 000439  3C68                                 LDV,R3   104
          1 00043A  0008                                 MMM

      630    18913    6                        FPT_WRSYSLOG.V.TERMID=KZ$LINCTX.LINID;

  18913   1 00043B  AB85                                 LAB,B2   ,B5
          1 00043C  2C08                                 LDV,R2   8
          1 00043D  6C10                                 LDV,R6   16
          1 00043E  BB87                                 LAB,B3   ,AUTO
          1 00043F  3C78                                 LDV,R3   120
          1 000440  0008                                 MMM

      631    18914    6                        FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$IGNSUS;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:96   
  18914   1 000441  E870 0358                            LDR,R6   856,IMO
          1 000443  EAC7 003B                            SRM,R6,'FFF8'X    FPT_WRSYSLOG+7,AUTO
          1 000445       FFF8

      632    18915    6                        ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.DVCTX$ = DCTX$;

  18915   1 000446  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 000448  EFC7 0044                            STB,B6   FPT_WRSYSLOG+16,AUTO

      633    18916    6                       ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.RCB = KZ$SDVCTX.RCB_CODE
             18916                                 ;

  18916   1 00044A  D2C6 0024                            LLH,R5   36,B6
          1 00044C  5008                                 SOL,R5   8
          1 00044D  5048                                 SOR,R5   8
          1 00044E  D7C7 0047                            STH,R5   FPT_WRSYSLOG+19,AUTO

      634    18917    6                        ADDR(FPT_WRSYSLOG.V.VALUES(0))->ERRCTX.SNDFCS = KZ$LINCTX.
             18917                                 SNDFCS;

  18917   1 000450  D842 0037                            LDR,R5   55,B2
          1 000452  DF47 0046                            STR,R5   FPT_WRSYSLOG+18,AUTO

      635    18918    6                        CALL KHA$ERRLOG (FPT_WRSYSLOG);

  18918   1 000454  CBC7 0034                            LAB,B4   FPT_WRSYSLOG,AUTO
          1 000456  CFC7 0058                            STB,B4   CTX$+2,AUTO
          1 000458  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 00045A  CBF0 0100                            LAB,B4   256,IMO
          1 00045C  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 00045F       0001                            DC       s:18937,PREL

      636    18919
      637    18920        /*E* ERROR:        KZL-E$IGNSUS-4
      638    18921             MESSAGE:      Remote site ignored SUSPbits.
      639    18922             DESCRIPTION:  A record was received for a suspended device.
      640    18923                           V0/V1 = Device context pointer.
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:97   
      641    18924                           V2 = Send FCS.
      642    18925                           V3 = Device number.
      643    18926        */
      644    18927
      645    18928    6                        END;

      646    18929    5                     END;

      647    18930    4                  END;

      648    18931    3               END;

      649    18932        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:98   
      650    18933
      651    18934                    /* Its ok to send this on to the host.      */
      652    18935
      653    18936
      654    18937    2            IF KZ$LINCTX.INPREC$ ~= ADDR(NIL) THEN

  18937   1 000460  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 000462  8DC6 0060                            CMN      96,B6
          1 000464  0901 001F                            BE       s:18944,PREL

      655    18938    3               IF RECSIZE > KZ$LINCTX.INPRECSIZ THEN DO;

  18938   1 000466  E847 0022                            LDR,R6   RECSIZE,AUTO
          1 000468  E946 0065                            CMR,R6   101,B6
          1 00046A  0381 0043                            BLE      s:18956,PREL

      656    18939    3                  CALL KVB$RLSSYS ((KZ$LINCTX.INPRECSIZ+1)/2,KZ$LINCTX.INPREC$);

  18939   1 00046C  D846 0065                            LDR,R5   101,B6
          1 00046E  5E01                                 ADV,R5   1
          1 00046F  5041                                 SOR,R5   1
          1 000470  DF47 0058                            STR,R5   CTX$+2,AUTO
          1 000472  DBC6 0060                            LAB,B5   96,B6
          1 000474  DFC7 005B                            STB,B5   CTX$+5,AUTO
          1 000476  CBC7 0058                            LAB,B4   CTX$+2,AUTO
          1 000478  CFC7 0059                            STB,B4   CTX$+3,AUTO
          1 00047A  BBC7 0059                            LAB,B3   CTX$+3,AUTO
          1 00047C  CBF0 0200                            LAB,B4   512,IMO
          1 00047E  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 000481       0001                            DC       s:18940,PREL

      657    18940    3                  GOTO GTINPRC;

  18940   1 000482  0F81 0005                            B        s:18946,PREL

      658    18941    3                  END;
      659    18942    2               ELSE;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:99   
      660    18943    2            ELSE
      661    18944    3               IF RECSIZE ~= 0 THEN DO;

  18944   1 000484  E847 0022                            LDR,R6   RECSIZE,AUTO
          1 000486  6901 0027                            BEZ,R6   s:18956,PREL

      662    18945    3   GTINPRC:
      663    18946    3                  SZ = (RECSIZE+1)/2;

  18946   1 000488  E847 0022            GTINPRC         LDR,R6   RECSIZE,AUTO
          1 00048A  6E01                                 ADV,R6   1
          1 00048B  6041                                 SOR,R6   1
          1 00048C  EF47 0023                            STR,R6   SZ,AUTO

      664    18947    3                  CALL KVB$GETSYS (SZ,KZ$LINCTX.INPREC$)

  18947   1 00048E  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 000490  DBC6 0060                            LAB,B5   96,B6
          1 000492  DFC7 005A                            STB,B5   CTX$+4,AUTO
          1 000494  CBC7 0023                            LAB,B4   SZ,AUTO
          1 000496  CFC7 0058                            STB,B4   CTX$+2,AUTO
          1 000498  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 00049A  CBF0 0200                            LAB,B4   512,IMO
          1 00049C  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          1 00049F       0003                            DC       s:18950,PREL
          1 0004A0  0F81 0007                            B        s:18953,PREL

      665    18948    3                  WHENALTRETURN
      666    18949    4                  DO;

      667    18950    4                     KZ$LINCTX.INPRECSIZ = 0;

  18950   1 0004A2  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 0004A4  8746 0065                            CL       101,B6

      668    18951    4                     GOTO NOBUF;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:100  
  18951   1 0004A6  0F81 0320                            B        s:19177,PREL

      669    18952    4                     END;
      670    18953    3                  KZ$LINCTX.INPRECSIZ = RECSIZE;

  18953   1 0004A8  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 0004AA  E847 0022                            LDR,R6   RECSIZE,AUTO
          1 0004AC  EF46 0065                            STR,R6   101,B6

      671    18954    3                  END;

      672    18955
      673    18956    2            BUF$ = KZ$LINCTX.INPREC$;

  18956   1 0004AE  DCC6 0060                            LDB,B5   96,B6
          1 0004B0  DFC7 0018                            STB,B5   BUF$,AUTO

      674    18957
      675    18958    2            J = 0;                    /* Destination index  */

  18958   1 0004B2  8747 0013                            CL       J,AUTO

      676    18959                 /* Decompress input.  A buffer big enough to hold the decompressed
      677    18960                    data has already been allocated above. */
      678    18961    2            IF KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP#

  18961   1 0004B4  D846 003A                            LDR,R5   58,B6
          1 0004B6  5D03                                 CMV,R5   3
          1 0004B7  0901 013F                            BE       s:19022,PREL
          1 0004B9  5D07                                 CMV,R5   7
          1 0004BA  0901 013C                            BE       s:19022,PREL

      679    18962    3               AND KZ$LINCTX.PRO.PROTYP ~= %KLPT_NJE# THEN DO;

      680    18963    3               I = X;                 /* Begin at first byte */

  18963   1 0004BC  C847 0011                            LDR,R4   X,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:101  
          1 0004BE  CF47 0012                            STR,R4   I,AUTO

      681    18964    3               CALL DCMPRS_BSC;

  18964   1 0004C0  E3C0 073B                            LNJ,B6   s:0,PREL
          1 0004C2       0001                            DC       s:18968,PREL

      682    18965
      683    18966                    /* If this 2780/3780 breaks records between blocks,
      684    18967                       do appropriate "cutting" and "pasting". */
      685    18968    4               IF KZ$LINCTX.PRO.LSTRECCTN THEN DO;

  18968   1 0004C3  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 0004C5  82C6 004B                            LB,'0100'X        75,B6
          1 0004C7       0100
          1 0004C8  0581 014C                            BBF      s:19031,PREL

      686    18969    4                  IF BYT(NEXTI) = '26'X AND

  18969   1 0004CA  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 0004CC  B847 001D                            LDR,R3   NEXTI,AUTO
          1 0004CE  E2B5                                 LLH,R6   ,B5,R3
          1 0004CF  6008                                 SOL,R6   8
          1 0004D0  E970 2600                            CMR,R6   9728,IMO
          1 0004D2  0981 006F                            BNE      s:18992,PREL
          1 0004D4  5C01                                 LDV,R5   1
          1 0004D5  0022                                 ACM      ;
          1 0004D6       C135 FFFF                                ALPHANUM(65535,B5,R3,1,1,FILL),;
          1 0004D8       C006 0042                                ALPHANUM(66,B6,1,R5,FILL)
          1 0004DA  5381 0067                            CBE      s:18992,PREL

      687    18970    5                     BYT(NEXTI-1) ~= KZ$LINCTX.PRO.IRSCHR /* Default '1E'X */ THEN DO;

      688    18971                          /* "Cut" the record out of the block, saving it on the
      689    18972                             BRK (broken) device queue. */
      690    18973    5                     SZ = SIZEW(KZ$INPBFR);

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:102  
  18973   1 0004DC  4C08                                 LDV,R4   8
          1 0004DD  CF47 0023                            STR,R4   SZ,AUTO

      691    18974    5                     CALL KVB$GETSYS (SZ,T$) ALTRET(NOBUF);

  18974   1 0004DF  CBC7 001A                            LAB,B4   T$,AUTO
          1 0004E1  CFC7 005A                            STB,B4   CTX$+4,AUTO
          1 0004E3  BBC7 0023                            LAB,B3   SZ,AUTO
          1 0004E5  BFC7 0058                            STB,B3   CTX$+2,AUTO
          1 0004E7  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 0004E9  CBF0 0200                            LAB,B4   512,IMO
          1 0004EB  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          1 0004EE       02D9                            DC       s:19177,PREL

      692    18975    5                     KZ$INPBFR = KZ_INPBFR;

  18975   1 0004EF  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 0004F2  2C2E                                 LDV,R2   46
          1 0004F3  6C10                                 LDV,R6   16
          1 0004F4  BCC7 001A                            LDB,B3   T$,AUTO
          1 0004F6  3C00                                 LDV,R3   0
          1 0004F7  0008                                 MMM

      693    18976    5                     KZ$INPBFR.BFR_SIZ = KZ$LINCTX.INPRECSIZ;

  18976   1 0004F8  ECC7 001A                            LDB,B6   T$,AUTO
          1 0004FA  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
          1 0004FC  E845 0065                            LDR,R6   101,B5
          1 0004FE  EF46 0004                            STR,R6   4,B6

      694    18977    5                     KZ$INPBFR.DATA_SIZ = RECSIZE;

  18977   1 000500  ECC7 001A                            LDB,B6   T$,AUTO
          1 000502  E847 0022                            LDR,R6   RECSIZE,AUTO
          1 000504  EF46 0003                            STR,R6   3,B6

      695    18978    5                     KZ$INPBFR.DATA$ = BUF$;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:103  

  18978   1 000506  ECC7 0018                            LDB,B6   BUF$,AUTO
          1 000508  CCC7 001A                            LDB,B4   T$,AUTO
          1 00050A  EFC4 0006                            STB,B6   6,B4

      696    18979    5                     IF KZ$SDVCTX.ACCESS_METHOD = %KZ_S_ACSPRINT# THEN

  18979   1 00050C  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 00050E  D846 0022                            LDR,R5   34,B6
          1 000510  D570 00FF                            AND,R5   255,IMO
          1 000512  5D01                                 CMV,R5   1
          1 000513  0981 0009                            BNE      s:18982,PREL

      697    18980    5                        KZ$INPBFR.BYTX = BITBIN(CP6_VFC);

  18980   1 000515  C2C7 0051                            LLH,R4   CP6_VFC,AUTO
          1 000517  CCC7 001A                            LDB,B4   T$,AUTO
          1 000519  CF44 0005                            STR,R4   5,B4
          1 00051B  0F81 0007                            B        s:18983,PREL

      698    18981    5                     ELSE
      699    18982    5                        KZ$INPBFR.BYTX = BITBIN(HASP_VFC);

  18982   1 00051D  C2C7 0052                            LLH,R4   HASP_VFC,AUTO
          1 00051F  CCC7 001A                            LDB,B4   T$,AUTO
          1 000521  CF44 0005                            STR,R4   5,B4

      700    18983    5                     IF KZ$SDVCTX.BRKTL$ ~= ADDR(NIL) THEN

  18983   1 000523  8DC6 001A                            CMN      26,B6
          1 000525  0901 0008                            BE       s:18986,PREL

      701    18984    5                        KZ$SDVCTX.BRKTL$->KZ$INPBFR.LNK$ = T$;

  18984   1 000527  CCC6 001A                            LDB,B4   26,B6
          1 000529  BCC7 001A                            LDB,B3   T$,AUTO
          1 00052B  BF84                                 STB,B3   ,B4
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:104  
          1 00052C  0F81 0005                            B        s:18987,PREL

      702    18985    5                     ELSE
      703    18986    5                        KZ$SDVCTX.BRKHD$ = T$;

  18986   1 00052E  CCC7 001A                            LDB,B4   T$,AUTO
          1 000530  CFC6 0018                            STB,B4   24,B6

      704    18987    5                     KZ$SDVCTX.BRKTL$ = T$;

  18987   1 000532  CCC7 001A                            LDB,B4   T$,AUTO
          1 000534  CFC6 001A                            STB,B4   26,B6

      705    18988    5                     KZ$SDVCTX.BRKBYTES = KZ$SDVCTX.BRKBYTES+RECSIZE;

  18988   1 000536  EA46 001C                            ADD,R6   28,B6
          1 000538  EF46 001C                            STR,R6   28,B6

      706    18989    5                     KZ$LINCTX.INPREC$ = ADDR(NIL);

  18989   1 00053A  BB80 0000 0000                       LAB,B3   0
          1 00053D  BFC5 0060                            STB,B3   96,B5

      707    18990    5                     RETURN;

  18990   1 00053F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      708    18991    5                     END;
      709    18992    5                  IF KZ$SDVCTX.BRKBYTES ~= 0 THEN DO;

  18992   1 000542  CCC7 000A                            LDB,B4   DCTX$,AUTO
          1 000544  D844 001C                            LDR,R5   28,B4
          1 000546  5901 00CE                            BEZ,R5   s:19031,PREL

      710    18993                          /* "Paste" the record(s) on the broken queue
      711    18994                             together with the one just received (which must
      712    18995                             have been the first, or only, record in a block). */
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:105  
      713    18996    5                     SZ = (KZ$SDVCTX.BRKBYTES+RECSIZE+1)/2;

  18996   1 000548  DA47 0022                            ADD,R5   RECSIZE,AUTO
          1 00054A  5E01                                 ADV,R5   1
          1 00054B  5041                                 SOR,R5   1
          1 00054C  DF47 0023                            STR,R5   SZ,AUTO

      714    18997    5                     CALL KVB$GETSYS (SZ,BRK$) ALTRET(NOBUF);

  18997   1 00054E  BBC7 000E                            LAB,B3   BRK$,AUTO
          1 000550  BFC7 005A                            STB,B3   CTX$+4,AUTO
          1 000552  ABC7 0023                            LAB,B2   SZ,AUTO
          1 000554  AFC7 0058                            STB,B2   CTX$+2,AUTO
          1 000556  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 000558  CBF0 0200                            LAB,B4   512,IMO
          1 00055A  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          1 00055D       026A                            DC       s:19177,PREL

      715    18998    5                     J = 0;

  18998   1 00055E  8747 0013                            CL       J,AUTO

      716    18999    6                     DO WHILE (KZ$SDVCTX.BRKHD$ ~= ADDR(NIL));

  18999   1 000560  0F81 0049                            B        s:19007,PREL

      717    19000    6                        T$ = KZ$SDVCTX.BRKHD$;

  19000   1 000562  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 000564  DCC6 0018                            LDB,B5   24,B6
          1 000566  DFC7 001A                            STB,B5   T$,AUTO

      718    19001    6                        N = KZ$INPBFR.DATA_SIZ;

  19001   1 000568  E845 0003                            LDR,R6   3,B5
          1 00056A  EF47 0016                            STR,R6   N,AUTO

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:106  
      719    19002    6                        ADDR(BRK$->BYT(J))->CHRN = KZ$INPBFR.DATA$->CHRN;

  19002   1 00056C  CCC5 0006                            LDB,B4   6,B5
          1 00056E  AB84                                 LAB,B2   ,B4
          1 00056F  2C00                                 LDV,R2   0
          1 000570  BCC7 000E                            LDB,B3   BRK$,AUTO
          1 000572  B847 0013                            LDR,R3   J,AUTO
          1 000574  0008                                 MMM

      720    19003    6                        J = J+N;

  19003   1 000575  E847 0013                            LDR,R6   J,AUTO
          1 000577  EA47 0016                            ADD,R6   N,AUTO
          1 000579  EF47 0013                            STR,R6   J,AUTO

      721    19004    6                        KZ$SDVCTX.BRKHD$ = KZ$INPBFR.LNK$;

  19004   1 00057B  ECC7 001A                            LDB,B6   T$,AUTO
          1 00057D  DC86                                 LDB,B5   ,B6
          1 00057E  BCC7 000A                            LDB,B3   DCTX$,AUTO
          1 000580  DFC3 0018                            STB,B5   24,B3

      722    19005    6                        CALL KVB$RLSSYS ((KZ$INPBFR.BFR_SIZ+1)/2,KZ$INPBFR.DATA$);

  19005   1 000582  ECC7 001A                            LDB,B6   T$,AUTO
          1 000584  D846 0004                            LDR,R5   4,B6
          1 000586  5E01                                 ADV,R5   1
          1 000587  5041                                 SOR,R5   1
          1 000588  DF47 0058                            STR,R5   CTX$+2,AUTO
          1 00058A  DBC6 0006                            LAB,B5   6,B6
          1 00058C  DFC7 005B                            STB,B5   CTX$+5,AUTO
          1 00058E  9BC7 0058                            LAB,B1   CTX$+2,AUTO
          1 000590  9FC7 0059                            STB,B1   CTX$+3,AUTO
          1 000592  BBC7 0059                            LAB,B3   CTX$+3,AUTO
          1 000594  CBF0 0200                            LAB,B4   512,IMO
          1 000596  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 000599       0001                            DC       s:19006,PREL
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:107  

      723    19006    6                        CALL KVB$RLSSYS (SIZEW(KZ$INPBFR),T$);

  19006   1 00059A  EBF0 0008                            LAB,B6   8,IMO
          1 00059C  DBC7 001A                            LAB,B5   T$,AUTO
          1 00059E  DFC7 005A                            STB,B5   CTX$+4,AUTO
          1 0005A0  EFC7 0058                            STB,B6   CTX$+2,AUTO
          1 0005A2  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 0005A4  CBF0 0200                            LAB,B4   512,IMO
          1 0005A6  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 0005A9       0001                            DC       s:19007,PREL

      724    19007    6                        END;

  19007   1 0005AA  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 0005AC  8DC6 0018                            CMN      24,B6
          1 0005AE  0981 FFB3                            BNE      s:19000,PREL

      725    19008    5                     IF J = 0 THEN CALL M$XXX;

  19008   1 0005B0  E847 0013                            LDR,R6   J,AUTO
          1 0005B2  6981 0005                            BNEZ,R6  s:19009,PREL

  19008   1 0005B4  B870 0082                            LDR,R3   130,IMO
          1 0005B6  0001                                 MCL
          1 0005B7       0000                            DC       s:19008+7,PREL

      726    19009    5                     KZ$SDVCTX.BRKTL$ = ADDR(NIL);

  19009   1 0005B8  EB80 0000 0000                       LAB,B6   0
          1 0005BB  DCC7 000A                            LDB,B5   DCTX$,AUTO
          1 0005BD  EFC5 001A                            STB,B6   26,B5

      727    19010    5                     KZ$SDVCTX.BRKBYTES = 0;

  19010   1 0005BF  8745 001C                            CL       28,B5

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:108  
      728    19011    5                     N = RECSIZE;

  19011   1 0005C1  E847 0022                            LDR,R6   RECSIZE,AUTO
          1 0005C3  EF47 0016                            STR,R6   N,AUTO

      729    19012    5                     ADDR(BRK$->BYT(J))->CHRN = BUF$->CHRN;

  19012   1 0005C5  ACC7 0018                            LDB,B2   BUF$,AUTO
          1 0005C7  2C00                                 LDV,R2   0
          1 0005C8  BCC7 000E                            LDB,B3   BRK$,AUTO
          1 0005CA  B847 0013                            LDR,R3   J,AUTO
          1 0005CC  0008                                 MMM

      730    19013    5                     CALL KVB$RLSSYS ((KZ$LINCTX.INPRECSIZ+1)/2,KZ$LINCTX.INPREC$);

  19013   1 0005CD  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 0005CF  E846 0065                            LDR,R6   101,B6
          1 0005D1  6E01                                 ADV,R6   1
          1 0005D2  6041                                 SOR,R6   1
          1 0005D3  EF47 0058                            STR,R6   CTX$+2,AUTO
          1 0005D5  DBC6 0060                            LAB,B5   96,B6
          1 0005D7  DFC7 005B                            STB,B5   CTX$+5,AUTO
          1 0005D9  CBC7 0058                            LAB,B4   CTX$+2,AUTO
          1 0005DB  CFC7 0059                            STB,B4   CTX$+3,AUTO
          1 0005DD  BBC7 0059                            LAB,B3   CTX$+3,AUTO
          1 0005DF  CBF0 0200                            LAB,B4   512,IMO
          1 0005E1  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 0005E4       0001                            DC       s:19014,PREL

      731    19014    5                     BUF$ = BRK$;

  19014   1 0005E5  ECC7 000E                            LDB,B6   BRK$,AUTO
          1 0005E7  EFC7 0018                            STB,B6   BUF$,AUTO

      732    19015    5                     KZ$LINCTX.INPREC$ = BUF$;

  19015   1 0005E9  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:109  
          1 0005EB  EFC5 0060                            STB,B6   96,B5

      733    19016    5                     RECSIZE = J+N;

  19016   1 0005ED  E847 0013                            LDR,R6   J,AUTO
          1 0005EF  EA47 0016                            ADD,R6   N,AUTO
          1 0005F1  EF47 0022                            STR,R6   RECSIZE,AUTO

      734    19017    5                     KZ$LINCTX.INPRECSIZ = RECSIZE;

  19017   1 0005F3  EF45 0065                            STR,R6   101,B5

      735    19018    5                     END;

      736    19019    4                  END;

      737    19020    3               END;

  19020   1 0005F5  0F81 001F                            B        s:19031,PREL

      738    19021    3            ELSE DO;

      739    19022    3               I = X+2;               /* Begin at first SCB  */

  19022   1 0005F7  C847 0011                            LDR,R4   X,AUTO
          1 0005F9  4E02                                 ADV,R4   2
          1 0005FA  CF47 0012                            STR,R4   I,AUTO

      740    19023    3               CALL DCMPRS_HASP;

  19023   1 0005FC  E3C0 0580                            LNJ,B6   s:0,PREL
          1 0005FE       0001                            DC       s:19024,PREL

      741    19024    3               HASP_VFC=BYT(X+1);

  19024   1 0005FF  ECC7 000C                            LDB,B6   BLK$,AUTO
          1 000601  B847 0011                            LDR,R3   X,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:110  
          1 000603  3E01                                 ADV,R3   1
          1 000604  E2B6                                 LLH,R6   ,B6,R3
          1 000605  6008                                 SOL,R6   8
          1 000606  6048                                 SOR,R6   8
          1 000607  E7C7 0052                            STH,R6   HASP_VFC,AUTO

      742    19025    3               IF KZ$SDVCTX.ACCESS_METHOD=%KZ_S_ACSPRINT# THEN

  19025   1 000609  DCC7 000A                            LDB,B5   DCTX$,AUTO
          1 00060B  E845 0022                            LDR,R6   34,B5
          1 00060D  E570 00FF                            AND,R6   255,IMO
          1 00060F  6D01                                 CMV,R6   1
          1 000610  0981 0004                            BNE      s:19031,PREL

      743    19026    3                  CALL CNVRT_HASP_VFC;

  19026   1 000612  E3C0 047B                            LNJ,B6   s:0,PREL
          1 000614       0001                            DC       s:19031,PREL

      744    19027    3               END;

      745    19028
      746    19029                 /* Send the record on its way if the device is open  */
      747    19030
      748    19031    2            KZ$SDVCTX.HOST_RECORDS_IN=KZ$SDVCTX.HOST_RECORDS_IN+1;

  19031   1 000615  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 000617  8AC6 0027                            INC      39,B6
          1 000619  8EC6 0026                            CAD      38,B6

      749    19032    2            KZ$SDVCTX.HOST_BYTES_IN=KZ$SDVCTX.HOST_BYTES_IN+RECSIZE;

  19032   1 00061B  F847 0022                            LDR,R7   RECSIZE,AUTO
          1 00061D  6C00                                 LDV,R6   0
          1 00061E  8446 002E                            AID      46,B6
          1 000620  8D46 002E                            SDI      46,B6

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:111  
      750    19033    2            IF KZ$SDVCTX.STATE = %KZ_S_SOPEN# AND

  19033   1 000622  D2C6 000A                            LLH,R5   10,B6
          1 000624  5D04                                 CMV,R5   4
          1 000625  0981 017A                            BNE      s:19163,PREL
          1 000627  C2C6 0022                            LLH,R4   34,B6
          1 000629  4D02                                 CMV,R4   2
          1 00062A  0901 0175                            BE       s:19163,PREL

      751    19034    3               KZ$SDVCTX.MGR_TYPE~=%KZ_S_DMOUTPUT# THEN DO;

      752    19035
      753    19036                 /* Defer input record if throttled by VDH   */
      754    19037
      755    19038    3               VDH_ENTERED = '0'B;

  19038   1 00062C  8747 001C                            CL       VDH_ENTERED,AUTO

      756    19039    3               IF KZ$SDVCTX.FLAGS.SUSPEND_IN THEN

  19039   1 00062E  89C6 001E                            CMZ      30,B6
          1 000630  0801 00D2                            BAL      s:19116,PREL

      757    19040    3                  GOTO DFRINPT;
      758    19041                 %KV$USRENT (VDI$=KZ$SDVCTX.VDI$,
      759    19042                             DFR$=DFRINPT,
      760    19043                             SCHRSN=%KV_SCHRSN_DFR1);
             19056    3           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             19056                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;

  19056   1 000632  DCC6 000B                            LDB,B5   11,B6
          1 000634  CCC5 0008                            LDB,B4   8,B5
          1 000636  BCC4 0033                            LDB,B3   51,B4
          1 000638  8AC3 0039                            INC      57,B3
          1 00063A  8EC3 0038                            CAD      56,B3

             19057    4           IF NOT KZ$SDVCTX.VDI$->KV$VDI.BSY THEN DO;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:112  

  19057   1 00063C  DCC6 000B                            LDB,B5   11,B6
          1 00063E  82C5 0019                            LB,'0080'X        25,B5
          1 000640       0080
          1 000641  0501 0012                            BBT      s:19063,PREL

             19058    4              KZ$SDVCTX.VDI$->KV$VDI.BSY = '1'B;

  19058   1 000643  8945 0019                            LBT,'0080'X       25,B5
  19058   1 000645       0080

             19059    4              KV@USRENT.SVDPTR$ = KV$PTR$;

  19059   1 000646  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000649  DFC7 0006                            STB,B5   KV@USRENT,AUTO

             19060    4              KV$PTR$ = KZ$SDVCTX.VDI$->KV$VDI.ASNINPPTR$;

  19060   1 00064B  CCC6 000B                            LDB,B4   11,B6
          1 00064D  BCC4 0006                            LDB,B3   6,B4
          1 00064F  BF80 0000 0000  xsym                 STB,B3   KV$PTR$

             19061    4              END;                         /* ELSE IF ~BSY                       */

  19061   1 000652  0F81 0010                            B        s:19069,PREL

             19062    4           ELSE DO;

             19063    4              KZ$SDVCTX.VDI$->KV$VDI.DFR.USR(1) = '1'B;

  19063   1 000654  8945 0018                            LBT,'4000'X       24,B5
  19063   1 000656       4000

             19064    4           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             19064                   KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;

  19064   1 000657  DCC6 000B                            LDB,B5   11,B6
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:113  
          1 000659  CCC5 0008                            LDB,B4   8,B5
          1 00065B  BCC4 0033                            LDB,B3   51,B4
          1 00065D  8AC3 003B                            INC      59,B3
          1 00065F  8EC3 003A                            CAD      58,B3

             19065    4              GOTO DFRINPT;

  19065   1 000661  0F81 00A1                            B        s:19116,PREL

             19066    4              END;                         /* END IF                             */
      761    19069    3               VDH_ENTERED = '1'B;

  19069   1 000663  8947 001C                            LBT,'8000'X       VDH_ENTERED,AUTO
  19069   1 000665       8000

      762    19070    3               IF NOT KZ$SDVCTX.VDI$->KV$VDI.USRRQSDAT.RED THEN

  19070   1 000666  82C4 001D                            LB,'0010'X        29,B4
  19070   1 000668       0010
          1 000669  0581 0099                            BBF      s:19116,PREL

      763    19071    3                  GOTO DFRINPT;
      764    19072
      765    19073    3               KV$VDH_DAT=KV_VDH_DAT;

  19073   1 00066B  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_DAT
          1 00066E  2C00                                 LDV,R2   0
          1 00066F  6C10                                 LDV,R6   16
          1 000670  BBC7 0049                            LAB,B3   KV$VDH_DAT,AUTO
          1 000672  3C00                                 LDV,R3   0
          1 000673  0008                                 MMM

      766    19074    3               KV$VDH_DAT.DAT__.BFRBYTSIZ = RECSIZE;

  19074   1 000674  E847 0022                            LDR,R6   RECSIZE,AUTO
          1 000676  EF47 004E                            STR,R6   KV$VDH_DAT+5,AUTO

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:114  
      767    19075    3               KV$VDH_DAT.DAT__.ADR$ = BUF$;

  19075   1 000678  ECC7 0018                            LDB,B6   BUF$,AUTO
          1 00067A  EFC7 004A                            STB,B6   KV$VDH_DAT+1,AUTO

      768    19076    3               KV$VDH_DAT.DAT__.DATBYTSIZ = RECSIZE;

  19076   1 00067C  EF47 004D                            STR,R6   KV$VDH_DAT+4,AUTO

      769    19077    3               IF ( KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#

  19077   1 00067E  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
          1 000680  D845 003A                            LDR,R5   58,B5
          1 000682  5D03                                 CMV,R5   3
          1 000683  0901 0004                            BE       s:19077+10,PREL
          1 000685  5D07                                 CMV,R5   7
          1 000686  0981 0003                            BNE      s:19081,PREL
          1 000688  6901 0057                            BEZ,R6   s:19100,PREL

      770    19078    3                  OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# )
      771    19079    3                  AND RECSIZE = 0 THEN
      772    19080    3                  GOTO SENDEOF;
      773    19081    4               IF KZ$SDVCTX.ACCESS_METHOD = %KZ_S_ACSPRINT# THEN DO;

  19081   1 00068A  CCC7 000A                            LDB,B4   DCTX$,AUTO
          1 00068C  C844 0022                            LDR,R4   34,B4
          1 00068E  C570 00FF                            AND,R4   255,IMO
          1 000690  4D01                                 CMV,R4   1
          1 000691  0981 000C                            BNE      s:19086,PREL

      774    19082    4                  KV$VDH_DAT.DATCTRCHR=BITASC(CP6_VFC);

  19082   1 000693  B0C7 0051                            LDH,R3   CP6_VFC,AUTO
          1 000695  BAC7 0050                            SRM,R3,'00FF'X    KV$VDH_DAT+7,AUTO
          1 000697       00FF

      775    19083    4                  KV$VDH_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_VFC;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:115  

  19083   1 000698  5C20                                 LDV,R5   32
          1 000699  DAC7 0049                            SRM,R5,'0030'X    KV$VDH_DAT,AUTO
          1 00069B       0030

      776    19084    4                  END;

  19084   1 00069C  0F81 0023                            B        s:19096,PREL

      777    19085    3               ELSE
      778    19086    3                  IF ( ( KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#

  19086   1 00069E  5D03                                 CMV,R5   3
          1 00069F  0901 0004                            BE       s:19086+6,PREL
          1 0006A1  5D07                                 CMV,R5   7
          1 0006A2  0981 000B                            BNE      s:19086+16,PREL
          1 0006A4  82C4 001E                            LB,'0200'X        30,B4
          1 0006A6       0200
          1 0006A7  0581 0006                            BBF      s:19086+16,PREL
          1 0006A9  82C7 0052                            LB,'1000'X        HASP_VFC,AUTO
          1 0006AB       1000
          1 0006AC  0501 000F                            BBT      s:19095,PREL
          1 0006AE  5D07                                 CMV,R5   7
          1 0006AF  0981 0010                            BNE      s:19096,PREL
          1 0006B1  BCC7 000C                            LDB,B3   BLK$,AUTO
          1 0006B3  B847 0011                            LDR,R3   X,AUTO
          1 0006B5  3E01                                 ADV,R3   1
          1 0006B6  A2B3                                 LLH,R2   ,B3,R3
          1 0006B7  2008                                 SOL,R2   8
          1 0006B8  A970 8000                            CMR,R2   -32768,IMO
          1 0006BA  0381 0005                            BLE      s:19096,PREL

      779    19087    3                     OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# )
      780    19088    3                     AND KZ$SDVCTX.FLAGS.BINARY_OK
      781    19089    3                     AND HASP_VFC.V.BIN )
      782    19090    3                     OR ( KZ$LINCTX.PRO.PROTYP = %KLPT_NJE#
      783    19091    3                     AND BYT(X+1) > '80'X ) THEN
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:116  
      784    19092                       /* If it's HASP or NJE, SRCB "binary", and OK to send binary,
      785    19093                          or it's NJE, and SRCB "control record",
      786    19094                          then don't translate it. */
      787    19095    3                     KV$VDH_DAT.DATMOD=%KV#DATMOD_BNR;

  19095   1 0006BC  3C08                                 LDV,R3   8
          1 0006BD  BAC7 0049                            SRM,R3,'000C'X    KV$VDH_DAT,AUTO
          1 0006BF       000C

      788    19096    3               CALL KVV$VDI (KV$VDH_DAT);

  19096   1 0006C0  BBC7 0049                            LAB,B3   KV$VDH_DAT,AUTO
          1 0006C2  BFC7 0058                            STB,B3   CTX$+2,AUTO
          1 0006C4  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 0006C6  CBF0 0100                            LAB,B4   256,IMO
          1 0006C8  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 0006CB       0001                            DC       s:19098,PREL

      789    19097
      790    19098    3               IF ( KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP#

  19098   1 0006CC  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 0006CE  E846 003A                            LDR,R6   58,B6
          1 0006D0  6D03                                 CMV,R6   3
          1 0006D1  0901 002F                            BE       s:19115,PREL
          1 0006D3  6D07                                 CMV,R6   7
          1 0006D4  0901 002C                            BE       s:19115,PREL
          1 0006D6  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 0006D8  B847 001D                            LDR,R3   NEXTI,AUTO
          1 0006DA  D2B5                                 LLH,R5   ,B5,R3
          1 0006DB  5008                                 SOL,R5   8
          1 0006DC  D970 0300                            CMR,R5   768,IMO
          1 0006DE  0981 0022                            BNE      s:19115,PREL

      791    19099    3                  AND KZ$LINCTX.PRO.PROTYP ~= %KLPT_NJE# )
      792    19100    4                  AND BYT(NEXTI) = '03'X THEN DO;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:117  
      793    19101
      794    19102                    /* Move in completion code of EOF and clobber PTS_IN  */
      795    19103                    /*  Ignore EOF on consoles     */
      796    19104
      797    19105    5   SENDEOF:       IF KZ$SDVCTX.MGR_TYPE ~= %KZ_S_DMCONSOLE# THEN DO;

  19105   1 0006E0  ECC7 000A            SENDEOF         LDB,B6   DCTX$,AUTO
          1 0006E2  E2C6 0022                            LLH,R6   34,B6
          1 0006E4  6D03                                 CMV,R6   3
          1 0006E5  0901 001B                            BE       s:19115,PREL

      798    19106    5                     KV$VDH_DAT.CMPCOD=%KV_CMPCOD_EOF;

  19106   1 0006E7  5C01                                 LDV,R5   1
          1 0006E8  D7C7 0050                            STH,R5   KV$VDH_DAT+7,AUTO

      799    19107    5                     KZ$SDVCTX.FLAGS.PTS_IN = '0'B;

  19107   1 0006EA  8846 001E                            LBF,'2000'X       30,B6
  19107   1 0006EC       2000

      800    19108    5                     KZ$SDVCTX.FLAGS.SUSPEND_IN = '0'B;

  19108   1 0006ED  8846 001E                            LBF,'8000'X       30,B6
  19108   1 0006EF       8000

      801    19109    5                     KZ$SDVCTX.STATE = %KZ_S_SAWAITING_CLOSE#;

  19109   1 0006F0  6C05                                 LDV,R6   5
          1 0006F1  E7C6 000A                            STH,R6   10,B6

      802    19110    5                     KV$VDH_DAT.DAT__.DATBYTSIZ = 0;

  19110   1 0006F3  8747 004D                            CL       KV$VDH_DAT+4,AUTO

      803    19111    5                     CALL KVV$VDI (KV$VDH_DAT);

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:118  
  19111   1 0006F5  DBC7 0049                            LAB,B5   KV$VDH_DAT,AUTO
          1 0006F7  DFC7 0058                            STB,B5   CTX$+2,AUTO
          1 0006F9  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 0006FB  CBF0 0100                            LAB,B4   256,IMO
          1 0006FD  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 000700       0001                            DC       s:19115,PREL

      804    19112    5                     END;

      805    19113    4                  END;

      806    19114
      807    19115    4               DO WHILE ('0'B);

  19115   1 000701  0F81 0090                            B        s:19155,PREL

      808    19116    4   DFRINPT:       KZ$SDVCTX.FLAGS.SUSPEND_IN = '1'B;

  19116   1 000703  8946 001E            DFRINPT         LBT,'8000'X       30,B6
  19116   1 000705       8000

      809    19117    4                  SZ = SIZEW(KZ$INPBFR);

  19117   1 000706  6C08                                 LDV,R6   8
          1 000707  EF47 0023                            STR,R6   SZ,AUTO

      810    19118    4                  CALL KVB$GETSYS (SZ,T$) ALTRET(NOBUF);

  19118   1 000709  DBC7 001A                            LAB,B5   T$,AUTO
          1 00070B  DFC7 005A                            STB,B5   CTX$+4,AUTO
          1 00070D  CBC7 0023                            LAB,B4   SZ,AUTO
          1 00070F  CFC7 0058                            STB,B4   CTX$+2,AUTO
          1 000711  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 000713  CBF0 0200                            LAB,B4   512,IMO
          1 000715  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          1 000718       00AF                            DC       s:19177,PREL

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:119  
      811    19119    4                  KZ$INPBFR = KZ_INPBFR;

  19119   1 000719  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 00071C  2C2E                                 LDV,R2   46
          1 00071D  6C10                                 LDV,R6   16
          1 00071E  BCC7 001A                            LDB,B3   T$,AUTO
          1 000720  3C00                                 LDV,R3   0
          1 000721  0008                                 MMM

      812    19120    4                  KZ$INPBFR.BFR_SIZ = KZ$LINCTX.INPRECSIZ;

  19120   1 000722  ECC7 001A                            LDB,B6   T$,AUTO
          1 000724  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
          1 000726  E845 0065                            LDR,R6   101,B5
          1 000728  EF46 0004                            STR,R6   4,B6

      813    19121    4                  KZ$INPBFR.DATA_SIZ = RECSIZE;

  19121   1 00072A  ECC7 001A                            LDB,B6   T$,AUTO
          1 00072C  E847 0022                            LDR,R6   RECSIZE,AUTO
          1 00072E  EF46 0003                            STR,R6   3,B6

      814    19122    4                  KZ$INPBFR.DATA$ = BUF$;

  19122   1 000730  ECC7 0018                            LDB,B6   BUF$,AUTO
          1 000732  CCC7 001A                            LDB,B4   T$,AUTO
          1 000734  EFC4 0006                            STB,B6   6,B4

      815    19123    4                  IF KZ$SDVCTX.ACCESS_METHOD = %KZ_S_ACSPRINT# THEN

  19123   1 000736  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 000738  D846 0022                            LDR,R5   34,B6
          1 00073A  D570 00FF                            AND,R5   255,IMO
          1 00073C  5D01                                 CMV,R5   1
          1 00073D  0981 0009                            BNE      s:19126,PREL

      816    19124    4                     KZ$INPBFR.BYTX=BITBIN(CP6_VFC);
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:120  

  19124   1 00073F  C2C7 0051                            LLH,R4   CP6_VFC,AUTO
          1 000741  CCC7 001A                            LDB,B4   T$,AUTO
          1 000743  CF44 0005                            STR,R4   5,B4
          1 000745  0F81 0007                            B        s:19127,PREL

      817    19125    4                  ELSE
      818    19126    4                     KZ$INPBFR.BYTX=BITBIN(HASP_VFC);

  19126   1 000747  C2C7 0052                            LLH,R4   HASP_VFC,AUTO
          1 000749  CCC7 001A                            LDB,B4   T$,AUTO
          1 00074B  CF44 0005                            STR,R4   5,B4

      819    19127    4                  IF ( ( KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#

  19127   1 00074D  D845 003A                            LDR,R5   58,B5
          1 00074F  5D03                                 CMV,R5   3
          1 000750  0901 0004                            BE       s:19127+8,PREL
          1 000752  5D07                                 CMV,R5   7
          1 000753  0981 0003                            BNE      s:19127+10,PREL
          1 000755  6901 0010                            BEZ,R6   s:19133,PREL
          1 000757  5D03                                 CMV,R5   3
          1 000758  0901 001B                            BE       s:19138,PREL
          1 00075A  0901 0019                            BE       s:19138,PREL
          1 00075C  CCC7 000C                            LDB,B4   BLK$,AUTO
          1 00075E  B847 001D                            LDR,R3   NEXTI,AUTO
          1 000760  C2B4                                 LLH,R4   ,B4,R3
          1 000761  4008                                 SOL,R4   8
          1 000762  C970 0300                            CMR,R4   768,IMO
          1 000764  0981 000F                            BNE      s:19138,PREL

      820    19128    4                     OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# )
      821    19129    4                     AND RECSIZE = 0 )
      822    19130    4                     OR ( ( KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP#
      823    19131    4                     AND KZ$LINCTX.PRO.PROTYP ~= %KLPT_HASP# )
      824    19132    5                     AND BYT(NEXTI) = '03'X ) THEN DO;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:121  
      825    19133    5                     KZ$INPBFR.FLAGS.LAST# = '1'B;

  19133   1 000766  CCC7 001A                            LDB,B4   T$,AUTO
          1 000768  8944 0002                            LBT,'0040'X       2,B4
          1 00076A       0040

      826    19134    5                     KZ$SDVCTX.FLAGS.PTS_IN = '0'B;

  19134   1 00076B  8846 001E                            LBF,'2000'X       30,B6
  19134   1 00076D       2000

      827    19135    5                     KZ$SDVCTX.FLAGS.SUSPEND_IN = '0'B;

  19135   1 00076E  8846 001E                            LBF,'8000'X       30,B6
  19135   1 000770       8000

      828    19136    5                     KZ$SDVCTX.STATE = %KZ_S_SAWAITING_CLOSE#;

  19136   1 000771  5C05                                 LDV,R5   5
          1 000772  D7C6 000A                            STH,R5   10,B6

      829    19137    5                     END;

      830    19138    4                  IF KZ$SDVCTX.DFRTL$ ~= ADDR(NIL) THEN

  19138   1 000774  8DC6 0015                            CMN      21,B6
          1 000776  0901 0008                            BE       s:19141,PREL

      831    19139    4                     KZ$SDVCTX.DFRTL$->KZ$INPBFR.LNK$ = T$;

  19139   1 000778  CCC6 0015                            LDB,B4   21,B6
          1 00077A  BCC7 001A                            LDB,B3   T$,AUTO
          1 00077C  BF84                                 STB,B3   ,B4
          1 00077D  0F81 0005                            B        s:19142,PREL

      832    19140    4                  ELSE
      833    19141    4                     KZ$SDVCTX.DFRHD$ = T$;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:122  

  19141   1 00077F  CCC7 001A                            LDB,B4   T$,AUTO
          1 000781  CFC6 0013                            STB,B4   19,B6

      834    19142    4                  KZ$SDVCTX.DFRTL$ = T$;

  19142   1 000783  CCC7 001A                            LDB,B4   T$,AUTO
          1 000785  CFC6 0015                            STB,B4   21,B6

      835    19143    4                  KZ$LINCTX.INPREC$ = ADDR(NIL);

  19143   1 000787  BB80 0000 0000                       LAB,B3   0
          1 00078A  BFC5 0060                            STB,B3   96,B5

      836    19144    4                  KZ$LINCTX.INPRECSIZ = 0;

  19144   1 00078C  8745 0065                            CL       101,B5

      837    19145    4                  IF NOT VDH_ENTERED THEN

  19145   1 00078E  89C7 001C                            CMZ      VDH_ENTERED,AUTO
          1 000790  0881 0012                            BAGE     s:19166,PREL

      838    19146    4                     GOTO NXT_RECORD;
      839    19147    4                  END;

      840    19148
      841    19149                    %KV$USREXT;
             19155    3           KV$PTR.VDI$->KV$VDI.BSY = '0'B;

  19155   1 000792  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000795  DC86                                 LDB,B5   ,B6
          1 000796  8845 0019                            LBF,'0080'X       25,B5
          1 000798       0080

             19157    3           KV$PTR$ = KV@USRENT.SVDPTR$;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:123  
  19157   1 000799  DCC7 0006                            LDB,B5   KV@USRENT,AUTO
          1 00079B  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

      842    19159    3               END;

  19159   1 00079E  0F81 0004                            B        s:19166,PREL

      843    19160    2            ELSE
      844    19161                    /*N* Device is closed for some reason...
      845    19162                         we should wonder why. */
      846    19163    2               ALTRETURN;

  19163   1 0007A0  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      847    19164
      848    19165    2   NXT_RECORD:
      849    19166    3            IF DCTX$ ~= ADDR(NIL) THEN DO;

  19166   1 0007A3  8DC7 000A            NXT_RECORD      CMN      DCTX$,AUTO
          1 0007A5  0901 0013                            BE       s:19170,PREL

      850    19167    3               KZ$SDVCTX.LINE_RECORDS_IN=KZ$SDVCTX.LINE_RECORDS_IN+1;

  19167   1 0007A7  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 0007A9  8AC6 002B                            INC      43,B6
          1 0007AB  8EC6 002A                            CAD      42,B6

      851    19168    3               KZ$SDVCTX.LINE_BYTES_IN=KZ$SDVCTX.LINE_BYTES_IN+(NEXTI-X+1);

  19168   1 0007AD  E847 001D                            LDR,R6   NEXTI,AUTO
          1 0007AF  E247 0011                            SUB,R6   X,AUTO
          1 0007B1  70F0                                 DAR,R7   16
          1 0007B2  8446 0032                            AID      50,B6
          1 0007B4  8470 0000 0001                       AID      1,IMO
          1 0007B7  8D46 0032                            SDI      50,B6

      852    19169    3               END;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:124  

      853    19170    2            X = NEXTI+1;        /* Index of next RCB  */

  19170   1 0007B9  E847 001D                            LDR,R6   NEXTI,AUTO
          1 0007BB  6E01                                 ADV,R6   1
          1 0007BC  EF47 0011                            STR,R6   X,AUTO

      854    19171    2            END;                      /* End Deblocking Loop  */

  19171   1 0007BE  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 0007C0  E946 0059                            CMR,R6   89,B6
          1 0007C2  0201 F990                            BL       s:18578,PREL

      855    19172    1         RETURN;

  19172   1 0007C4  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      856    19173        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:125  
      857    19174              /*    Log "Out of MEMory" error and kill the line.    */
      858    19175
      859    19176    1   NOBUF:
      860    19177    1         FPT_WRSYSLOG = FPT@WRSYSLOG;

  19177   1 0007C7  AB80 0000 0000  00   NOBUF           LAB,B2   KV@VDH_EVT
          1 0007CA  2C04                                 LDV,R2   4
          1 0007CB  6C2A                                 LDV,R6   42
          1 0007CC  BB87                                 LAB,B3   ,AUTO
          1 0007CD  3C68                                 LDV,R3   104
          1 0007CE  0008                                 MMM

      861    19178    1         FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$NOBFR;

  19178   1 0007CF  E870 0380                            LDR,R6   896,IMO
          1 0007D1  EAC7 003B                            SRM,R6,'FFF8'X    FPT_WRSYSLOG+7,AUTO
          1 0007D3       FFF8

      862    19179    1         FPT_WRSYSLOG.V.ERRCODE.SEV = %G_WRSYSLOG_SEV_LINE_ABORT#;

  19179   1 0007D4  5C06                                 LDV,R5   6
          1 0007D5  DAC7 003B                            SRM,R5,'0007'X    FPT_WRSYSLOG+7,AUTO
          1 0007D7       0007

      863    19180    1         FPT_WRSYSLOG.V.TERMID = KZ$LINCTX.LINID;

  19180   1 0007D8  ACC7 0004                            LDB,B2   @KZ$LINCTX,AUTO
          1 0007DA  2C08                                 LDV,R2   8
          1 0007DB  6C10                                 LDV,R6   16
          1 0007DC  BB87                                 LAB,B3   ,AUTO
          1 0007DD  3C78                                 LDV,R3   120
          1 0007DE  0008                                 MMM

      864    19181    1         FPT_WRSYSLOG.V.VALUES (0) = SZ;

  19181   1 0007DF  E847 0023                            LDR,R6   SZ,AUTO
          1 0007E1  EF47 0044                            STR,R6   FPT_WRSYSLOG+16,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:126  

      865    19182    1         CALL KHA$ERRLOG (FPT_WRSYSLOG);

  19182   1 0007E3  EBC7 0034                            LAB,B6   FPT_WRSYSLOG,AUTO
          1 0007E5  EFC7 0058                            STB,B6   CTX$+2,AUTO
          1 0007E7  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 0007E9  CBF0 0100                            LAB,B4   256,IMO
          1 0007EB  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 0007EE       0001                            DC       s:19190,PREL

      866    19183        /*E*  ERROR:        KZL-E$NOBFR-6
      867    19184              MESSAGE:      Insufficient BISYNC MEMory (a NETCON parameter).
      868    19185              DESCRIPTION:  A KVB call ALTRETed to indicate that BISYNC is out of
      869    19186                            MEMory.  Since a necessary I/O buffer or device context
      870    19187                            could not be allocated, the HASP/2780/3780 TERMinal
      871    19188                            associated with the request has been disconnected.
      872    19189        */
      873    19190    1         GOTO KILL_LINE;

  19190   1 0007EF  0F81 FC25                            B        s:18890,PREL

      874    19191
      875    19192
      876    19193    1   BRKRQS: PROC;

  19193   1 0007F1  EFC7 0054            BRKRQS          STB,B6   HASP_VFC+2,AUTO

      877    19194
      878    19195        /*    Give VDH an ATTENTION event                                  */
      879    19196
      880    19197    2         IF KZ$SDVCTX.STATE = %KZ_S_SAWAITING_CLOSE# THEN

  19197   1 0007F3  DCC7 000A                            LDB,B5   DCTX$,AUTO
          1 0007F5  E2C5 000A                            LLH,R6   10,B5
          1 0007F7  6D05                                 CMV,R6   5
          1 0007F8  0981 0008                            BNE      s:19200,PREL

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:127  
      881    19198    2   DFRBRK:  KZ$SDVCTX.FLAGS.BRKRQD = '1'B;

  19198   1 0007FA  ECC7 000A            DFRBRK          LDB,B6   DCTX$,AUTO
          1 0007FC  8946 001E                            LBT,'0100'X       30,B6
          1 0007FE       0100
          1 0007FF  0F81 0057                            B        s:19244,PREL

      882    19199    2         ELSE
      883    19200    3            IF KZ$SDVCTX.STATE = %KZ_S_SCONNECTED# THEN DO;

  19200   1 000801  6D02                                 CMV,R6   2
          1 000802  0981 0054                            BNE      s:19244,PREL

      884    19201              %KV$USRENT (VDI$=KZ$SDVCTX.VDI$,
      885    19202                          DFR$=DFRBRK,
      886    19203                          SCHRSN=%KV_SCHRSN_DFR2);
             19216    3           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             19216                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;

  19216   1 000804  CCC5 000B                            LDB,B4   11,B5
          1 000806  BCC4 0008                            LDB,B3   8,B4
          1 000808  ACC3 0033                            LDB,B2   51,B3
          1 00080A  8AC2 0039                            INC      57,B2
          1 00080C  8EC2 0038                            CAD      56,B2

             19217    4           IF NOT KZ$SDVCTX.VDI$->KV$VDI.BSY THEN DO;

  19217   1 00080E  ECC5 000B                            LDB,B6   11,B5
          1 000810  82C6 0019                            LB,'0080'X        25,B6
          1 000812       0080
          1 000813  0501 0012                            BBT      s:19223,PREL

             19218    4              KZ$SDVCTX.VDI$->KV$VDI.BSY = '1'B;

  19218   1 000815  8946 0019                            LBT,'0080'X       25,B6
  19218   1 000817       0080

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:128  
             19219    4              KV@USRENT.SVDPTR$ = KV$PTR$;

  19219   1 000818  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00081B  EFC7 0006                            STB,B6   KV@USRENT,AUTO

             19220    4              KV$PTR$ = KZ$SDVCTX.VDI$->KV$VDI.ASNINPPTR$;

  19220   1 00081D  CCC5 000B                            LDB,B4   11,B5
          1 00081F  BCC4 0006                            LDB,B3   6,B4
          1 000821  BF80 0000 0000  xsym                 STB,B3   KV$PTR$

             19221    4              END;                         /* ELSE IF ~BSY                       */

  19221   1 000824  0F81 000F                            B        s:19229,PREL

             19222    4           ELSE DO;

             19223    4              KZ$SDVCTX.VDI$->KV$VDI.DFR.USR(2) = '1'B;

  19223   1 000826  8946 0018                            LBT,'2000'X       24,B6
  19223   1 000828       2000

             19224    4           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             19224                   KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;

  19224   1 000829  ECC5 000B                            LDB,B6   11,B5
          1 00082B  CCC6 0008                            LDB,B4   8,B6
          1 00082D  BCC4 0033                            LDB,B3   51,B4
          1 00082F  8AC3 003B                            INC      59,B3
          1 000831  8EC3 003A                            CAD      58,B3

             19225    4              GOTO DFRBRK;

  19225   1 000833  0FC7                                 B        s:19198,SPREL

             19226    4              END;                         /* END IF                             */
      887    19229    3               KV$VDH_EVT=KV@VDH_EVT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:129  

  19229   1 000834  8C80 0000 0000  00                   LDI      KV@VDH_EVT
          1 000837  8D47 0032                            SDI      KV$VDH_EVT,AUTO

      888    19230    3               KV$VDH_EVT.PRM=1;

  19230   1 000839  5C01                                 LDV,R5   1
          1 00083A  DF47 0033                            STR,R5   KV$VDH_EVT+1,AUTO

      889    19231    3               KZ$SDVCTX.STATE = %KZ_S_SAWAITING_PTS#;

  19231   1 00083C  4C03                                 LDV,R4   3
          1 00083D  C7C5 000A                            STH,R4   10,B5

      890    19232    3               CALL KVV$VDI (KV$VDH_EVT);

  19232   1 00083F  CBC7 0032                            LAB,B4   KV$VDH_EVT,AUTO
          1 000841  CFC7 0058                            STB,B4   CTX$+2,AUTO
          1 000843  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 000845  CBF0 0100                            LAB,B4   256,IMO
          1 000847  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 00084A       0001                            DC       s:19239,PREL

      891    19233                    %KV$USREXT;
             19239    3           KV$PTR.VDI$->KV$VDI.BSY = '0'B;

  19239   1 00084B  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00084E  DC86                                 LDB,B5   ,B6
          1 00084F  8845 0019                            LBF,'0080'X       25,B5
          1 000851       0080

             19241    3           KV$PTR$ = KV@USRENT.SVDPTR$;

  19241   1 000852  DCC7 0006                            LDB,B5   KV@USRENT,AUTO
          1 000854  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

      892    19243    3               END;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:130  

      893    19244    2         RETURN;

  19244   1 000857  ECC7 0054                            LDB,B6   HASP_VFC+2,AUTO
          1 000859  C3C6 0001                            LNJ,B4   1,B6

      894    19245    2   END;
      895    19246        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:131  
      896    19247
      897    19248        /*F* NAME:   KZL$BBLK
      898    19249             PURPOSE:
      899    19250                 To obtain an output data block for a Synch line.
      900    19251                                                                           */
      901    19252
      902    19253        /*D* NAME: KZL$BBLK
      903    19254             CALL:
      904    19255                   CALL KZL$BBLK (Line-context) ALTRET(label);
      905    19256              PARAMETERS:
      906    19257                 Line-context is the line context table.
      907    19258              OUTPUT:
      908    19259                 KZ$LINCTX.OTPBFR$ is a pointer to the output block.
      909    19260                 KZ$LINCTX.OTPDATSIZ is the size of the output data in bytes
      910    19261              DESCRIPTION:
      911    19262                 On each call, an output block is obtained from the next
      912    19263                 device on the line which has output ready.  The next device
      913    19264                 is selected in a round-robin manner.  If no device has
      914    19265                 output ready, and there is no change in the FCS from the
      915    19266                 previous output, nothing is sent.
      916    19267
      917    19268                 The output block is dequeued from the device output queue
      918    19269                 and its address placed in KZ$LINCTX.OTPBFR.  If it is a HASP
      919    19270
      920    19271                 An ALTRETURN can occur if there was not output ready for the
      921    19272                 device.
      922    19273
      923    19274
      924    19275                                                                           */
      925    19276    1   KZL$BBLK: ENTRY (KZ$LINCTX) ALTRET;

  19276   1 00085B  D380 0000 0000  xent KZL$BBLK        LNJ,B5   X6A_AUTO_1
          1 00085E       005D 0001                       DC       93,1

      926    19277
      927    19278
      928    19279
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:132  
      929    19280    1         LCTX$=ADDR(KZ$LINCTX);

  19280   1 000860  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 000862  EFC7 0008                            STB,B6   LCTX$,AUTO

      930    19281
      931    19282    1         IF KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#

  19282   1 000864  E846 003A                            LDR,R6   58,B6
          1 000866  6D03                                 CMV,R6   3
          1 000867  0901 0004                            BE       s:19285,PREL
          1 000869  6D07                                 CMV,R6   7
          1 00086A  0981 00B3                            BNE      s:19368,PREL

      932    19283    2            OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# THEN DO;

      933    19284
      934    19285    2            CALL BLD_SUSBITS;

  19285   1 00086C  E3C0 03FF                            LNJ,B6   s:0,PREL
          1 00086E       0001                            DC       s:19287,PREL

      935    19286
      936    19287    2            IF KZ$LINCTX.FLAGS.RCVWAB OR

  19287   1 00086F  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 000871  82C6 0034                            LB,'0800'X        52,B6
          1 000873       0800
          1 000874  0501 015C                            BBT      s:19440,PREL
          1 000876  8D86                                 CMN      ,B6
          1 000877  0901 0159                            BE       s:19440,PREL

      937    19288    2               KZ$LINCTX.CTRHD$ = ADDR(NIL) THEN
      938    19289    2               GOTO NOOTP;
      939    19290    2            IF KZ$LINCTX.CURDEV$ = ADDR(NIL) THEN

  19290   1 000879  8DC6 0050                            CMN      80,B6
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:133  
          1 00087B  0981 0004                            BNE      s:19292,PREL

      940    19291    2               KZ$LINCTX.CURDEV$ = KZ$LINCTX.CTRHD$;

  19291   1 00087D  DC86                                 LDB,B5   ,B6
          1 00087E  DFC6 0050                            STB,B5   80,B6

      941    19292    2            DCTX$ = KZ$LINCTX.CURDEV$->KZ$SDVCTX.LNK$;

  19292   1 000880  DCC6 0050                            LDB,B5   80,B6
          1 000882  CC85                                 LDB,B4   ,B5
          1 000883  CFC7 000A                            STB,B4   DCTX$,AUTO

      942    19293    2            IF DCTX$ = ADDR(NIL) THEN

  19293   1 000885  8DC7 000A                            CMN      DCTX$,AUTO
          1 000887  0981 0004                            BNE      s:19303,PREL

      943    19294    2               DCTX$ = KZ$LINCTX.CTRHD$;

  19294   1 000889  BC86                                 LDB,B3   ,B6
          1 00088A  BFC7 000A                            STB,B3   DCTX$,AUTO

      944    19295
      945    19296
      946    19297
      947    19298              /* Select HASP device. Look for the next device with PTS and
      948    19299                 not SUSPEND_OUT with a block on
      949    19300                 its output list or completed record in its current output block
      950    19301                 that could be truncated and sent.
      951    19302                                                                           */
      952    19303    2   FNDOTP:  IF NOT (KZ$LINCTX.PRO.SLAVE AND KZ$SDVCTX.RCB_CODE='91'X) AND

  19303   1 00088C  ECC7 0004            FNDOTP          LDB,B6   @KZ$LINCTX,AUTO
          1 00088E  89C6 004B                            CMZ      75,B6
          1 000890  0881 000A                            BAGE     s:19303+15,PREL
          1 000892  DCC7 000A                            LDB,B5   DCTX$,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:134  
          1 000894  E2C5 0024                            LLH,R6   36,B5
          1 000896  6008                                 SOL,R6   8
          1 000897  E970 9100                            CMR,R6   -28416,IMO
          1 000899  0901 0070                            BE       s:19353,PREL
          1 00089B  89C6 004B                            CMZ      75,B6
          1 00089D  0801 000A                            BAL      s:19303+28,PREL
          1 00089F  DCC7 000A                            LDB,B5   DCTX$,AUTO
          1 0008A1  E2C5 0024                            LLH,R6   36,B5
          1 0008A3  6008                                 SOL,R6   8
          1 0008A4  E970 9200                            CMR,R6   -28160,IMO
          1 0008A6  0901 0063                            BE       s:19353,PREL
          1 0008A8  DCC7 000A                            LDB,B5   DCTX$,AUTO
          1 0008AA  82C5 001E                            LB,'4000'X        30,B5
          1 0008AC       4000
          1 0008AD  0501 005C                            BBT      s:19353,PREL
          1 0008AF  82C5 001E                            LB,'1000'X        30,B5
          1 0008B1       1000
          1 0008B2  0581 0057                            BBF      s:19353,PREL

      953    19304    2               NOT (NOT KZ$LINCTX.PRO.SLAVE AND KZ$SDVCTX.RCB_CODE='92'X) AND
      954    19305    2               NOT KZ$SDVCTX.FLAGS.SUSPEND_OUT AND
      955    19306    3               KZ$SDVCTX.FLAGS.PTS_OUT THEN DO;

      956    19307
      957    19308    3               IF KZ$SDVCTX.OTPHD$ = ADDR(NIL) AND

  19308   1 0008B4  8DC5 000F                            CMN      15,B5
          1 0008B6  0981 004D                            BNE      s:19351,PREL
          1 0008B8  CCC5 000B                            LDB,B4   11,B5
          1 0008BA  8DC4 000A                            CMN      10,B4
          1 0008BC  0901 0047                            BE       s:19351,PREL
          1 0008BE  E844 000C                            LDR,R6   12,B4
          1 0008C0  6D16                                 CMV,R6   22
          1 0008C1  0A81 0042                            BALE     s:19351,PREL

      958    19309    3                  KZ$SDVCTX.VDI$->KV$VDI.OTPBFR_.ADR$ ~= ADDR(NIL) AND
      959    19310    3                  KZ$SDVCTX.VDI$->KV$VDI.OTPBFR_.BYTX > SIZEC(KZ$OTPBFR)+
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:135  
      960    19311    4                  SIZEC(KZ$HASPBLK) THEN DO;

      961    19312                    %KV$USRENT (VDI$=KZ$SDVCTX.VDI$,DFR$=DFRTRNC,
      962    19313                                SCHRSN=%KV_SCHRSN_DFR1);
             19326    4           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             19326                    KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;

  19326   1 0008C3  BCC4 0008                            LDB,B3   8,B4
          1 0008C5  ACC3 0033                            LDB,B2   51,B3
          1 0008C7  8AC2 0039                            INC      57,B2
          1 0008C9  8EC2 0038                            CAD      56,B2

             19327    5           IF NOT KZ$SDVCTX.VDI$->KV$VDI.BSY THEN DO;

  19327   1 0008CB  CCC5 000B                            LDB,B4   11,B5
          1 0008CD  82C4 0019                            LB,'0080'X        25,B4
          1 0008CF       0080
          1 0008D0  0501 0012                            BBT      s:19333,PREL

             19328    5              KZ$SDVCTX.VDI$->KV$VDI.BSY = '1'B;

  19328   1 0008D2  8944 0019                            LBT,'0080'X       25,B4
  19328   1 0008D4       0080

             19329    5              KV@USRENT.SVDPTR$ = KV$PTR$;

  19329   1 0008D5  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 0008D8  CFC7 0006                            STB,B4   KV@USRENT,AUTO

             19330    5              KV$PTR$ = KZ$SDVCTX.VDI$->KV$VDI.ASNINPPTR$;

  19330   1 0008DA  BCC5 000B                            LDB,B3   11,B5
          1 0008DC  ACC3 0006                            LDB,B2   6,B3
          1 0008DE  AF80 0000 0000  xsym                 STB,B2   KV$PTR$

             19331    5              END;                         /* ELSE IF ~BSY                       */

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:136  
  19331   1 0008E1  0F81 0010                            B        s:19339,PREL

             19332    5           ELSE DO;

             19333    5              KZ$SDVCTX.VDI$->KV$VDI.DFR.USR(1) = '1'B;

  19333   1 0008E3  8944 0018                            LBT,'4000'X       24,B4
  19333   1 0008E5       4000

             19334    5           KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             19334                   KZ$SDVCTX.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1;

  19334   1 0008E6  CCC5 000B                            LDB,B4   11,B5
          1 0008E8  BCC4 0008                            LDB,B3   8,B4
          1 0008EA  ACC3 0033                            LDB,B2   51,B3
          1 0008EC  8AC2 003B                            INC      59,B2
          1 0008EE  8EC2 003A                            CAD      58,B2

             19335    5              GOTO DFRTRNC;

  19335   1 0008F0  0F81 0019                            B        s:19353,PREL

             19336    5              END;                         /* END IF                             */
      963    19339    4                  CALL KZD$TRNCOTPBLK;

  19339   1 0008F2  CBF0 0000                            LAB,B4   0,IMO
          1 0008F4  E380 0000 0000  xent                 LNJ,B6   KZD$TRNCOTPBLK
          1 0008F7       0001                            DC       s:19346,PREL

      964    19340                    %KV$USREXT;
             19346    4           KV$PTR.VDI$->KV$VDI.BSY = '0'B;

  19346   1 0008F8  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0008FB  DC86                                 LDB,B5   ,B6
          1 0008FC  8845 0019                            LBF,'0080'X       25,B5
          1 0008FE       0080

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:137  
             19348    4           KV$PTR$ = KV@USRENT.SVDPTR$;

  19348   1 0008FF  DCC7 0006                            LDB,B5   KV@USRENT,AUTO
          1 000901  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

      965    19350    4                  END;

      966    19351    3               IF KZ$SDVCTX.OTPHD$ ~= ADDR(NIL) THEN

  19351   1 000904  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 000906  8DC6 000F                            CMN      15,B6
          1 000908  0981 0034                            BNE      s:19380,PREL

      967    19352    3                  GOTO SNDOTP;
      968    19353    3               END;

  19352   1                              DFRTRNC         null
      969    19354    2   DFRTRNC: ;
      970    19355    2            IF DCTX$ = KZ$LINCTX.CURDEV$ THEN

  19355   1 00090A  ECC7 000A            DFRTRNC         LDB,B6   DCTX$,AUTO
          1 00090C  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
          1 00090E  EDC5 0050                            CMB,B6   80,B5
          1 000910  0901 00C0                            BE       s:19440,PREL

      971    19356    2               GOTO NOOTP;
      972    19357    2            DCTX$ = KZ$SDVCTX.LNK$;

  19357   1 000912  CC86                                 LDB,B4   ,B6
          1 000913  CFC7 000A                            STB,B4   DCTX$,AUTO

      973    19358    2            IF DCTX$ = ADDR(NIL) THEN

  19358   1 000915  8DC7 000A                            CMN      DCTX$,AUTO
          1 000917  0981 0004                            BNE      s:19360,PREL

      974    19359    2               DCTX$ = KZ$LINCTX.CTRHD$;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:138  

  19359   1 000919  EC85                                 LDB,B6   ,B5
          1 00091A  EFC7 000A                            STB,B6   DCTX$,AUTO

      975    19360    2            GOTO FNDOTP;

  19360   1 00091C  0F81 FF6F                            B        s:19303,PREL

      976    19361    2            END;
      977    19362    2         ELSE DO;

      978    19363
      979    19364                 /* Select 2780/3780 device.  Once a device is selected,
      980    19365                    stick with it until the end.  Start at the next device after
      981    19366                    that to search for the next output device.             */
      982    19367
      983    19368    2            DCTX$ = KZ$LINCTX.CURDEV$;

  19368   1 00091E  DCC6 0050                            LDB,B5   80,B6
          1 000920  DFC7 000A                            STB,B5   DCTX$,AUTO

      984    19369    3            IF DCTX$ = ADDR(NIL) THEN DO;

  19369   1 000922  8DC7 000A                            CMN      DCTX$,AUTO
          1 000924  0981 0014                            BNE      s:19378,PREL

      985    19370    3               DCTX$=KZ$LINCTX.CTRHD$;

  19370   1 000926  CC86                                 LDB,B4   ,B6
          1 000927  CFC7 000A                            STB,B4   DCTX$,AUTO

      986    19371    4               DO WHILE DCTX$ ~= ADDR(NIL);

  19371   1 000929  0F81 000A                            B        s:19375,PREL

      987    19372    4                  IF KZ$SDVCTX.OTPHD$ ~= ADDR(NIL) THEN

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:139  
  19372   1 00092B  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 00092D  8DC6 000F                            CMN      15,B6
          1 00092F  0981 000D                            BNE      s:19380,PREL

      988    19373    4                     GOTO SNDOTP;
      989    19374    4                  DCTX$ = KZ$SDVCTX.LNK$;

  19374   1 000931  DC86                                 LDB,B5   ,B6
          1 000932  DFC7 000A                            STB,B5   DCTX$,AUTO

      990    19375    4                  END;

  19375   1 000934  8DC7 000A                            CMN      DCTX$,AUTO
          1 000936  09F5                                 BNE      s:19372,SPREL

      991    19376    3               GOTO NOOTP;

  19376   1 000937  0F81 0099                            B        s:19440,PREL

      992    19377    3               END;
      993    19378    2            IF KZ$SDVCTX.OTPHD$ = ADDR(NIL) THEN

  19378   1 000939  8DC5 000F                            CMN      15,B5
          1 00093B  0901 0095                            BE       s:19440,PREL

      994    19379    2               GOTO NOOTP;
      995    19380    2            END;

      996    19381
      997    19382
      998    19383              /* Found the next device with an output block ready to go */
      999    19384
     1000    19385    1   SNDOTP:
     1001    19386    1         KZ$LINCTX.OTPHD$ = KZ$SDVCTX.OTPHD$;

  19386   1 00093D  ECC7 000A            SNDOTP          LDB,B6   DCTX$,AUTO
          1 00093F  DCC6 000F                            LDB,B5   15,B6
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:140  
          1 000941  CCC7 0004                            LDB,B4   @KZ$LINCTX,AUTO
          1 000943  DFC4 0052                            STB,B5   82,B4

     1002    19387    1         KZ$LINCTX.OTPBFR$ = PINCRW(KZ$SDVCTX.OTPHD$,SIZEW(KZ$OTPBFR));

  19387   1 000945  BCC6 000F                            LDB,B3   15,B6
          1 000947  ABC3 0008                            LAB,B2   8,B3
          1 000949  AFC4 005A                            STB,B2   90,B4

     1003    19388    1         KZ$LINCTX.OTPDATSIZ = KZ$SDVCTX.OTPHD$->KZ$OTPBFR.DATA_SIZ;

  19388   1 00094B  BCC6 000F                            LDB,B3   15,B6
          1 00094D  E843 0003                            LDR,R6   3,B3
          1 00094F  EF44 005D                            STR,R6   93,B4

     1004    19389    1         KZ$SDVCTX.FLAGS.OTPBSY = '1'B;

  19389   1 000951  8946 001E                            LBT,'0020'X       30,B6
  19389   1 000953       0020

     1005    19390    1         IF KZ$SDVCTX.OTPHD$->KZ$OTPBFR.FLAGS.HALT THEN

  19390   1 000954  DCC6 000F                            LDB,B5   15,B6
          1 000956  82C5 0002                            LB,'000C'X        2,B5
          1 000958       000C
          1 000959  0581 0004                            BBF      s:19392,PREL

     1006    19391    1            KZ$SDVCTX.FLAGS.PTS_OUT='0'B;

  19391   1 00095B  8846 001E                            LBF,'1000'X       30,B6
  19391   1 00095D       1000

     1007    19392    1         KZ$SDVCTX.OTPHD$ = KZ$SDVCTX.OTPHD$->KZ$OTPBFR.LNK$;

  19392   1 00095E  BC85                                 LDB,B3   ,B5
          1 00095F  BFC6 000F                            STB,B3   15,B6

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:141  
     1008    19393    1         IF KZ$SDVCTX.OTPHD$ = ADDR(NIL) THEN

  19393   1 000961  8DC6 000F                            CMN      15,B6
          1 000963  0981 0006                            BNE      s:19395,PREL

     1009    19394    1            KZ$SDVCTX.OTPTL$ = ADDR(NIL);

  19394   1 000965  DB80 0000 0000                       LAB,B5   0
          1 000968  DFC6 0011                            STB,B5   17,B6

     1010    19395    1         KZ$LINCTX.OTPHD$->KZ$OTPBFR.LNK$ = ADDR(NIL);

  19395   1 00096A  DCC4 0052                            LDB,B5   82,B4
          1 00096C  AB80 0000 0000                       LAB,B2   0
          1 00096F  AF85                                 STB,B2   ,B5

     1011    19396
     1012    19397    1         IF KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#

  19397   1 000970  E844 003A                            LDR,R6   58,B4
          1 000972  6D03                                 CMV,R6   3
          1 000973  0901 0004                            BE       s:19398,PREL
          1 000975  6D07                                 CMV,R6   7
          1 000976  0981 0039                            BNE      s:19420,PREL

     1013    19398    2            OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# THEN DO;

     1014    19399    2   SETFCS:  KZ$LINCTX.SNDFCS = SNDFCS;

  19399   1 000978  ECC7 0004            SETFCS          LDB,B6   @KZ$LINCTX,AUTO
          1 00097A  E847 0021                            LDR,R6   SNDFCS,AUTO
          1 00097C  EF46 0037                            STR,R6   55,B6

     1015    19400    2            KZ$LINCTX.OTPBFR$->KZ$HASPBLK.FCS = SNDFCS;

  19400   1 00097E  DCC6 005A                            LDB,B5   90,B6
          1 000980  AB87                                 LAB,B2   ,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:142  
          1 000981  2C42                                 LDV,R2   66
          1 000982  6C02                                 LDV,R6   2
          1 000983  BB85                                 LAB,B3   ,B5
          1 000984  3C01                                 LDV,R3   1
          1 000985  0008                                 MMM

     1016    19401    3            IF KZ$LINCTX.OTPDATSIZ ~= 0 THEN DO;

  19401   1 000986  E846 005D                            LDR,R6   93,B6
          1 000988  6901 003F                            BEZ,R6   s:19428,PREL

     1017    19402    4               IF KZ$LINCTX.FLAGS.BCB_INIT THEN DO;

  19402   1 00098A  82C6 0034                            LB,'0400'X        52,B6
  19402   1 00098C       0400
          1 00098D  0581 0017                            BBF      s:19408,PREL

     1018    19403    4                  KZ$LINCTX.OTPBFR$->KZ$HASPBLK.BCB = '80'X;

  19403   1 00098F  CCC6 005A                            LDB,B4   90,B6
          1 000991  D870 8000                            LDR,R5   -32768,IMO
          1 000993  5048                                 SOR,R5   8
          1 000994  D784                                 STH,R5   ,B4

     1019    19404    4                  KZ$LINCTX.OTPBFR$->KZ$HASPBLK.BCB.CNT = KZ$LINCTX.BCB.SND;

  19404   1 000995  CCC6 005A                            LDB,B4   90,B6
          1 000997  E846 004D                            LDR,R6   77,B6
          1 000999  6008                                 SOL,R6   8
          1 00099A  EA84                                 SRM,R6,'0F00'X    ,B4
          1 00099B       0F00

     1020    19405    4                  KZ$LINCTX.BCB.SND = KZ$LINCTX.BCB.SND + 1;

  19405   1 00099C  E846 004D                            LDR,R6   77,B6
          1 00099E  EA70 0001                            ADD,R6   1,IMO
          1 0009A0  EAC6 004D                            SRM,R6,'00FF'X    77,B6
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:143  
          1 0009A2       00FF

     1021    19406    4                  END;

  19406   1 0009A3  0F81 0024                            B        s:19428,PREL

     1022    19407    4               ELSE DO;

     1023    19408    4                  KZ$LINCTX.OTPBFR$->KZ$HASPBLK.BCB = 'A0'X;

  19408   1 0009A5  CCC6 005A                            LDB,B4   90,B6
          1 0009A7  D870 A000                            LDR,R5   -24576,IMO
          1 0009A9  5048                                 SOR,R5   8
          1 0009AA  D784                                 STH,R5   ,B4

     1024    19409    4                  KZ$LINCTX.FLAGS.BCB_INIT = '1'B;

  19409   1 0009AB  8946 0034                            LBT,'0400'X       52,B6
  19409   1 0009AD       0400

     1025    19410    4                  END;

     1026    19411    3               END;

     1027    19412    2            END;

  19412   1 0009AE  0F81 0019                            B        s:19428,PREL

     1028    19413    2         ELSE DO;

     1029    19414
     1030    19415                 /* 2780/3780 - If EOF then set FIRST to make the line manager
     1031    19416                    send ETX, otherwise he will send ETB.  This is a strange
     1032    19417                    meaning for FIRST handed down from antiquity.  Also, if EOF,
     1033    19418                    set CURDEV to next device with an output block ready to go. */
     1034    19419
     1035    19420    3            IF KZ$LINCTX.OTPHD$->KZ$OTPBFR.FLAGS.LAST# THEN DO;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:144  

  19420   1 0009B0  DCC4 0052                            LDB,B5   82,B4
          1 0009B2  82C5 0002                            LB,'0040'X        2,B5
          1 0009B4       0040
          1 0009B5  0581 0012                            BBF      s:19428,PREL

     1036    19421    3               KZ$LINCTX.FLAGS.FIRST = '1'B;

  19421   1 0009B7  8944 0034                            LBT,'0080'X       52,B4
  19421   1 0009B9       0080

     1037    19422    4               DO WHILE DCTX$ ~= ADDR(NIL);

  19422   1 0009BA  0F81 000A                            B        s:19426,PREL

     1038    19423    4                  IF KZ$SDVCTX.OTPHD$ ~= ADDR(NIL) THEN

  19423   1 0009BC  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 0009BE  8DC6 000F                            CMN      15,B6
          1 0009C0  0981 0007                            BNE      s:19428,PREL

     1039    19424    4                     GOTO NXTDV;
     1040    19425    4                  DCTX$ = KZ$SDVCTX.LNK$;

  19425   1 0009C2  DC86                                 LDB,B5   ,B6
          1 0009C3  DFC7 000A                            STB,B5   DCTX$,AUTO

     1041    19426    4                  END;

  19426   1 0009C5  8DC7 000A                            CMN      DCTX$,AUTO
          1 0009C7  09F5                                 BNE      s:19423,SPREL

     1042    19427    3               END;

     1043    19428    2            END;

     1044    19429    1   NXTDV: KZ$LINCTX.CURDEV$ = DCTX$;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:145  

  19429   1 0009C8  ECC7 000A            NXTDV           LDB,B6   DCTX$,AUTO
          1 0009CA  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
          1 0009CC  EFC5 0050                            STB,B6   80,B5

     1045    19430
     1046    19431    1         RETURN;

  19431   1 0009CE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1047    19432
     1048    19433
     1049    19434
     1050    19435              /* No output.  If HASP and FCS has changed, build output block
     1051    19436                 just for FCS.                                             */
     1052    19437
     1053    19438
     1054    19439    1   NOOTP:
     1055    19440    1         IF ( KZ$LINCTX.PRO.PROTYP = %KLPT_HASP#

  19440   1 0009D1  ECC7 0004            NOOTP           LDB,B6   @KZ$LINCTX,AUTO
          1 0009D3  E846 003A                            LDR,R6   58,B6
          1 0009D5  6D03                                 CMV,R6   3
          1 0009D6  0901 0004                            BE       s:19440+10,PREL
          1 0009D8  6D07                                 CMV,R6   7
          1 0009D9  0981 0091                            BNE      s:19468,PREL
          1 0009DB  D846 0037                            LDR,R5   55,B6
          1 0009DD  D947 0021                            CMR,R5   SNDFCS,AUTO
          1 0009DF  0901 008B                            BE       s:19468,PREL

     1056    19441    1            OR KZ$LINCTX.PRO.PROTYP = %KLPT_NJE# )
     1057    19442    2            AND KZ$LINCTX.SNDFCS ~= SNDFCS THEN DO;

     1058    19443    2            SZ = SIZEW(KZ$OTPBFR)+(KZ$LINCTX.PRO.BLKBYTES+1)/2;

  19443   1 0009E1  C846 003C                            LDR,R4   60,B6
          1 0009E3  4E01                                 ADV,R4   1
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:146  
          1 0009E4  4041                                 SOR,R4   1
          1 0009E5  4E08                                 ADV,R4   8
          1 0009E6  CF47 0023                            STR,R4   SZ,AUTO

     1059    19444    2            CALL KVB$GET2NSYS (SZ,BUF$)

  19444   1 0009E8  DBC7 0018                            LAB,B5   BUF$,AUTO
          1 0009EA  DFC7 005A                            STB,B5   CTX$+4,AUTO
          1 0009EC  CBC7 0023                            LAB,B4   SZ,AUTO
          1 0009EE  CFC7 0058                            STB,B4   CTX$+2,AUTO
          1 0009F0  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 0009F2  CBF0 0200                            LAB,B4   512,IMO
          1 0009F4  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          1 0009F7       0003                            DC       s:19447,PREL
          1 0009F8  0F81 0037                            B        s:19457,PREL

     1060    19445    2            WHENALTRETURN
     1061    19446    3            DO;

     1062    19447    3               KZ$LINCTX.OTPDATSIZ=0;

  19447   1 0009FA  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 0009FC  8746 005D                            CL       93,B6

     1063    19448    3               FPT_WRSYSLOG = FPT@WRSYSLOG;

  19448   1 0009FE  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 000A01  2C04                                 LDV,R2   4
          1 000A02  6C2A                                 LDV,R6   42
          1 000A03  BB87                                 LAB,B3   ,AUTO
          1 000A04  3C68                                 LDV,R3   104
          1 000A05  0008                                 MMM

     1064    19449    3               FPT_WRSYSLOG.V.ERRCODE.ERR# = %E$NOBFR;

  19449   1 000A06  E870 0380                            LDR,R6   896,IMO
          1 000A08  EAC7 003B                            SRM,R6,'FFF8'X    FPT_WRSYSLOG+7,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:147  
          1 000A0A       FFF8

     1065    19450    3               FPT_WRSYSLOG.V.ERRCODE.SEV = %G_WRSYSLOG_SEV_LINE_ABORT#;

  19450   1 000A0B  5C06                                 LDV,R5   6
          1 000A0C  DAC7 003B                            SRM,R5,'0007'X    FPT_WRSYSLOG+7,AUTO
          1 000A0E       0007

     1066    19451    3               FPT_WRSYSLOG.V.TERMID = KZ$LINCTX.LINID;

  19451   1 000A0F  AB86                                 LAB,B2   ,B6
          1 000A10  2C08                                 LDV,R2   8
          1 000A11  6C10                                 LDV,R6   16
          1 000A12  BB87                                 LAB,B3   ,AUTO
          1 000A13  3C78                                 LDV,R3   120
          1 000A14  0008                                 MMM

     1067    19452    3               FPT_WRSYSLOG.V.VALUES (0) = SZ;

  19452   1 000A15  E847 0023                            LDR,R6   SZ,AUTO
          1 000A17  EF47 0044                            STR,R6   FPT_WRSYSLOG+16,AUTO

     1068    19453    3               CALL KHA$ERRLOG (FPT_WRSYSLOG);

  19453   1 000A19  DBC7 0034                            LAB,B5   FPT_WRSYSLOG,AUTO
          1 000A1B  DFC7 0058                            STB,B5   CTX$+2,AUTO
          1 000A1D  BBC7 0058                            LAB,B3   CTX$+2,AUTO
          1 000A1F  CBF0 0100                            LAB,B4   256,IMO
          1 000A21  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 000A24       0001                            DC       s:19454,PREL

     1069    19454    3               CALL KZR$KILL_LINE (KZ$LINCTX);

  19454   1 000A25  BBC7 0004                            LAB,B3   @KZ$LINCTX,AUTO
          1 000A27  CBF0 0100                            LAB,B4   256,IMO
          1 000A29  E380 0000 0000  xent                 LNJ,B6   KZR$KILL_LINE
          1 000A2C       0001                            DC       s:19455,PREL
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:148  

     1070    19455    3               ALTRETURN;

  19455   1 000A2D  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1071    19456    3               END;
     1072    19457    2            KZ$LINCTX.OTPHD$=BUF$;

  19457   1 000A30  ECC7 0018                            LDB,B6   BUF$,AUTO
          1 000A32  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
          1 000A34  EFC5 0052                            STB,B6   82,B5

     1073    19458    2            BUF$->KZ$OTPBFR = KZ_OTPBFR;

  19458   1 000A36  AB80 0000 0000  xsym                 LAB,B2   KZ_OTPBFR
          1 000A39  2C00                                 LDV,R2   0
          1 000A3A  6C10                                 LDV,R6   16
          1 000A3B  BB86                                 LAB,B3   ,B6
          1 000A3C  3C00                                 LDV,R3   0
          1 000A3D  0008                                 MMM

     1074    19459    2            BUF$->KZ$OTPBFR.DEV$=KZ$LINCTX.CTRHD$;

  19459   1 000A3E  CC85                                 LDB,B4   ,B5
          1 000A3F  ACC7 0018                            LDB,B2   BUF$,AUTO
          1 000A41  CFC2 0006                            STB,B4   6,B2

     1075    19460    2            DCTX$=KZ$LINCTX.CTRHD$;

  19460   1 000A43  CC85                                 LDB,B4   ,B5
          1 000A44  CFC7 000A                            STB,B4   DCTX$,AUTO

     1076    19461    2            BUF$->KZ$OTPBFR.BFRSIZ = SZ;

  19461   1 000A46  ACC7 0018                            LDB,B2   BUF$,AUTO
          1 000A48  E847 0023                            LDR,R6   SZ,AUTO
          1 000A4A  EF42 0004                            STR,R6   4,B2
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:149  

     1077    19462    2            KZ$LINCTX.OTPBFR$ = PINCRW(BUF$,SIZEW(KZ$OTPBFR));

  19462   1 000A4C  ACC7 0018                            LDB,B2   BUF$,AUTO
          1 000A4E  9BC2 0008                            LAB,B1   8,B2
          1 000A50  9FC5 005A                            STB,B1   90,B5

     1078    19463    2            KZ$LINCTX.OTPBFR$->KZ$HASPBLK.FLG.RCB = '0'B;

  19463   1 000A52  8841 0001                            LBF,'00FF'X       1,B1
  19463   1 000A54       00FF

     1079    19464    2            KZ$LINCTX.OTPDATSIZ=POFFC(ADDR(KZ$LINCTX.OTPBFR$->KZ$HASPBLK.FLG.SRCB),

  19464   1 000A55  ACC5 005A                            LDB,B2   90,B5
          1 000A57  8CC5 005A                            LDI      90,B5
          1 000A59  7031                                 DCL,R7   1
          1 000A5A  AFC7 0058                            STB,B2   CTX$+2,AUTO
          1 000A5C  8D47 005A                            SDI      CTX$+4,AUTO
          1 000A5E  8CC7 0058                            LDI      CTX$+2,AUTO
          1 000A60  8470 0000 0002                       AID      2,IMO
          1 000A63  7031                                 DCL,R7   1
          1 000A64  84C7 005A                            SID      CTX$+4,AUTO
          1 000A66  E857                                 LDR,R6   R7
          1 000A67  EF45 005D                            STR,R6   93,B5

     1080    19465    2               KZ$LINCTX.OTPBFR$);
     1081    19466    2            GOTO SETFCS;

  19466   1 000A69  0F81 FF0E                            B        s:19398,PREL

     1082    19467    2            END;
     1083    19468    1         KZ$LINCTX.OTPDATSIZ=0;       /* Indicate no output */

  19468   1 000A6B  8746 005D                            CL       93,B6

     1084    19469    1         ALTRETURN;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:150  

  19469   1 000A6D  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1085    19470        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:151  
     1086    19471        /*D*  NAME: KZL$OTPRDY
     1087    19472              CALL:
     1088    19473                 CALL KZL$OTPRDY (Line-context) ALTRETURN(label);
     1089    19474              PARAMETERS:
     1090    19475                 Line-context is the line context table.
     1091    19476              DESCRIPTION:
     1092    19477                 This procedure searches the list of devices for this line for
     1093    19478                 a device with output ready.  If there is none, the ALTRETURN
     1094    19479                 is taken.  If one is found, a normal return occurs.
     1095    19480                                                                           */
     1096    19481
     1097    19482    1   KZL$OTPRDY: ENTRY (KZ$LINCTX) ALTRET;

  19482   1 000A70  D380 0000 0000  xent KZL$OTPRDY      LNJ,B5   X6A_AUTO_1
          1 000A73       005D 0001                       DC       93,1

     1098    19483
     1099    19484    1         DCTX$ = KZ$LINCTX.CTRHD$;

  19484   1 000A75  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 000A77  DC86                                 LDB,B5   ,B6
          1 000A78  DFC7 000A                            STB,B5   DCTX$,AUTO

     1100    19485    2         DO WHILE DCTX$ ~= ADDR(NIL);

  19485   1 000A7A  0F81 000D                            B        s:19489,PREL

     1101    19486    2            IF KZ$SDVCTX.OTPHD$ ~= ADDR(NIL) THEN

  19486   1 000A7C  ECC7 000A                            LDB,B6   DCTX$,AUTO
          1 000A7E  8DC6 000F                            CMN      15,B6
          1 000A80  0901 0004                            BE       s:19488,PREL

     1102    19487    2               RETURN;

  19487   1 000A82  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:152  
     1103    19488    2            DCTX$ = KZ$SDVCTX.LNK$;

  19488   1 000A85  DC86                                 LDB,B5   ,B6
          1 000A86  DFC7 000A                            STB,B5   DCTX$,AUTO

     1104    19489    2            END;

  19489   1 000A88  8DC7 000A                            CMN      DCTX$,AUTO
          1 000A8A  09F2                                 BNE      s:19486,SPREL

     1105    19490    1         ALTRETURN;

  19490   1 000A8B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1106    19491
     1107    19492        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:153  
     1108    19493
     1109    19494    1   CNVRT_HASP_VFC: PROC;

  19494   1 000A8E  EFC7 0054            CNVRT_HASP_VFC  STB,B6   HASP_VFC+2,AUTO

     1110    19495
     1111    19496              /* Convert HASP vfc to CP6 vfc.                              */
     1112    19497
     1113    19498
     1114    19499    3         IF HASP_VFC.VFC_TYPE = %KZ#HASPVFC_SPA THEN DO;

  19499   1 000A90  82C7 0052                            LB,'7000'X        HASP_VFC,AUTO
  19499   1 000A92       7000
          1 000A93  0501 001E                            BBT      s:19510,PREL

     1115    19500    4            IF HASP_VFC.S.UPSP_CT = 0 THEN DO;

  19500   1 000A95  82C7 0052                            LB,'0300'X        HASP_VFC,AUTO
  19500   1 000A97       0300
          1 000A98  0501 000B                            BBT      s:19505,PREL

     1116    19501    4               CP6_VFC.FCN = %VFCF_SPB;

  19501   1 000A9A  E870 6000                            LDR,R6   24576,IMO
          1 000A9C  EAC7 0051                            SRM,R6,'7000'X    CP6_VFC,AUTO
          1 000A9E       7000

     1117    19502    4               CP6_VFC.COUNT = 0;

  19502   1 000A9F  8847 0051                            LBF,'0F00'X       CP6_VFC,AUTO
  19502   1 000AA1       0F00

     1118    19503    4               END;

  19503   1 000AA2  0F81 005E                            B        s:19533,PREL

     1119    19504    4            ELSE DO;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:154  

     1120    19505    4               CP6_VFC.FCN=%VFCF_SPA;

  19505   1 000AA4  E870 4000                            LDR,R6   16384,IMO
          1 000AA6  EAC7 0051                            SRM,R6,'7000'X    CP6_VFC,AUTO
          1 000AA8       7000

     1121    19506    4               CP6_VFC.COUNT=HASP_VFC.S.UPSP_CT;

  19506   1 000AA9  D847 0052                            LDR,R5   HASP_VFC,AUTO
          1 000AAB  D570 0300                            AND,R5   768,IMO
          1 000AAD  DAC7 0051                            SRM,R5,'0F00'X    CP6_VFC,AUTO
          1 000AAF       0F00

     1122    19507    4               END;

     1123    19508    3            END;

  19508   1 000AB0  0F81 0050                            B        s:19533,PREL

     1124    19509    2         ELSE
     1125    19510    3            IF HASP_VFC.VFC_TYPE = %KZ#HASPVFC_SKA THEN DO;

  19510   1 000AB2  E847 0052                            LDR,R6   HASP_VFC,AUTO
          1 000AB4  604C                                 SOR,R6   12
          1 000AB5  E570 0007                            AND,R6   7,IMO
          1 000AB7  6D01                                 CMV,R6   1
          1 000AB8  0981 001D                            BNE      s:19520,PREL

     1126    19511    3               CP6_VFC.FCN = %VFCF_SKA;

  19511   1 000ABA  D870 5000                            LDR,R5   20480,IMO
          1 000ABC  DAC7 0051                            SRM,R5,'7000'X    CP6_VFC,AUTO
          1 000ABE       7000

     1127    19512    3               CP6_VFC.COUNT = HASP_VFC.SKIP_TO;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:155  
  19512   1 000ABF  C847 0052                            LDR,R4   HASP_VFC,AUTO
          1 000AC1  CAC7 0051                            SRM,R4,'0F00'X    CP6_VFC,AUTO
          1 000AC3       0F00

     1128    19513    3               IF HASP_VFC.SKIP_TO ~= 1 THEN

  19513   1 000AC4  B847 0052                            LDR,R3   HASP_VFC,AUTO
          1 000AC6  3048                                 SOR,R3   8
          1 000AC7  B570 000F                            AND,R3   15,IMO
          1 000AC9  3D01                                 CMV,R3   1
          1 000ACA  0901 0006                            BE       s:19517,PREL

     1129    19514    3                  CP6_VFC.COUNT = HASP_VFC.SKIP_TO;

  19514   1 000ACC  CAC7 0051                            SRM,R4,'0F00'X    CP6_VFC,AUTO
  19514   1 000ACE       0F00
          1 000ACF  0F81 0031                            B        s:19533,PREL

     1130    19515    3               ELSE
     1131    19516                                   /* Top of form. Change to channel 0.               */
     1132    19517    3                  CP6_VFC.COUNT = 0;

  19517   1 000AD1  8847 0051                            LBF,'0F00'X       CP6_VFC,AUTO
  19517   1 000AD3       0F00

     1133    19518    3               END;

  19518   1 000AD4  0F81 002C                            B        s:19533,PREL

     1134    19519    2            ELSE
     1135    19520    3               IF HASP_VFC.VFC_TYPE = %KZ#HASPVFC_SPB THEN DO;

  19520   1 000AD6  6D02                                 CMV,R6   2
          1 000AD7  0981 000F                            BNE      s:19525,PREL

     1136    19521    3                  CP6_VFC.FCN = %VFCF_SPB;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:156  
  19521   1 000AD9  D870 6000                            LDR,R5   24576,IMO
          1 000ADB  DAC7 0051                            SRM,R5,'7000'X    CP6_VFC,AUTO
          1 000ADD       7000

     1137    19522    3                  CP6_VFC.COUNT = HASP_VFC.S.UPSP_CT;

  19522   1 000ADE  C847 0052                            LDR,R4   HASP_VFC,AUTO
          1 000AE0  C570 0300                            AND,R4   768,IMO
          1 000AE2  CAC7 0051                            SRM,R4,'0F00'X    CP6_VFC,AUTO
          1 000AE4       0F00

     1138    19523    3                  END;

  19523   1 000AE5  0F81 001B                            B        s:19533,PREL

     1139    19524    2               ELSE
     1140    19525    3                  IF HASP_VFC.VFC_TYPE = %KZ#HASPVFC_SKB THEN DO;

  19525   1 000AE7  6D03                                 CMV,R6   3
          1 000AE8  0981 0018                            BNE      s:19533,PREL

     1141    19526    3                     CP6_VFC.FCN = %VFCF_SKB;

  19526   1 000AEA  D870 3000                            LDR,R5   12288,IMO
          1 000AEC  DAC7 0051                            SRM,R5,'7000'X    CP6_VFC,AUTO
          1 000AEE       7000

     1142    19527    3                     IF HASP_VFC.SKIP_TO ~= 1 THEN

  19527   1 000AEF  C847 0052                            LDR,R4   HASP_VFC,AUTO
          1 000AF1  4048                                 SOR,R4   8
          1 000AF2  C570 000F                            AND,R4   15,IMO
          1 000AF4  4D01                                 CMV,R4   1
          1 000AF5  0901 0008                            BE       s:19531,PREL

     1143    19528    3                        CP6_VFC.COUNT = HASP_VFC.SKIP_TO;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:157  
  19528   1 000AF7  B847 0052                            LDR,R3   HASP_VFC,AUTO
          1 000AF9  BAC7 0051                            SRM,R3,'0F00'X    CP6_VFC,AUTO
          1 000AFB       0F00
          1 000AFC  0F81 0004                            B        s:19533,PREL

     1144    19529    3                     ELSE
     1145    19530                                   /* Top of form. Change to channel 0.               */
     1146    19531    3                        CP6_VFC.COUNT = 0;

  19531   1 000AFE  8847 0051                            LBF,'0F00'X       CP6_VFC,AUTO
  19531   1 000B00       0F00

     1147    19532    3                     END;

     1148    19533    2         RETURN;

  19533   1 000B01  ECC7 0054                            LDB,B6   HASP_VFC+2,AUTO
          1 000B03  C3C6 0001                            LNJ,B4   1,B6

     1149    19534    2   END;
     1150    19535
     1151    19536    1   CNVRT_BSC_VFC: PROC;

  19536   1 000B05  EFC7 0054            CNVRT_BSC_VFC   STB,B6   HASP_VFC+2,AUTO

     1152    19537
     1153    19538              /* Convert 2780/3780 escape vfc sequence to CP6 VFC
     1154    19539                 Returns X and I set to first data byte in record.
     1155    19540                 Returns CP6_VFC.                                          */
     1156    19541
     1157    19542    2   DCL BSCVFC(0:11) BIT(8) CONSTANT INIT(
     1158    19543    2         '61'X,'E2'X,'E3'X,'D4'X,'C1'X,'C2'X,'C3'X,'C4'X,'C5'X,'C6'X,
     1159    19544    2         'C7'X,'C8'X);
     1160    19545    2   DCL CP6VFC(0:11) BIT(8) CONSTANT INIT(
     1161    19546    2         '41'X,'42'X,'43'X,'40'X,'51'X,'52'X,'53'X,'54'X,'55'X,'56'X,
     1162    19547    2         '57'X,'58'X);
     1163    19548
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:158  
     1164    19549    3         DO J = 0 TO 11;

  19549   1 000B07  8747 0013                            CL       J,AUTO

     1165    19550    4            IF BYT(I+1)=BSCVFC(J) THEN DO;

  19550   1 000B09  ECC7 000C                            LDB,B6   BLK$,AUTO
          1 000B0B  B847 0012                            LDR,R3   I,AUTO
          1 000B0D  3E01                                 ADV,R3   1
          1 000B0E  E0B6                                 LDH,R6   ,B6,R3
          1 000B0F  A847 0013                            LDR,R2   J,AUTO
          1 000B11  E1A0 0000 003F  00                   CMH,R6   BSCVFC,R2
          1 000B14  0981 000A                            BNE      s:19554,PREL

     1166    19551    4               CP6_VFC=CP6VFC(J);

  19551   1 000B16  D2A0 0000 0045  00                   LLH,R5   CP6VFC,R2
          1 000B19  5008                                 SOL,R5   8
          1 000B1A  5048                                 SOR,R5   8
          1 000B1B  D7C7 0051                            STH,R5   CP6_VFC,AUTO

     1167    19552    4               GOTO CNVRT_BSC_X;

  19552   1 000B1D  0F81 000E                            B        s:19556,PREL

     1168    19553    4               END;
     1169    19554    3            END;

  19554   1 000B1F  8AC7 0013                            INC      J,AUTO
          1 000B21  D847 0013                            LDR,R5   J,AUTO
          1 000B23  5D0B                                 CMV,R5   11
          1 000B24  03E5                                 BLE      s:19550,SPREL

     1170    19555    2         CP6_VFC=CP6VFC(0);

  19555   1 000B25  C280 0000 0045  00                   LLH,R4   CP6VFC
          1 000B28  4008                                 SOL,R4   8
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:159  
          1 000B29  4048                                 SOR,R4   8
          1 000B2A  C7C7 0051                            STH,R4   CP6_VFC,AUTO

     1171    19556    2   CNVRT_BSC_X: I=I+2;

  19556   1 000B2C  D847 0012            CNVRT_BSC_X     LDR,R5   I,AUTO
          1 000B2E  5E02                                 ADV,R5   2
          1 000B2F  DF47 0012                            STR,R5   I,AUTO

     1172    19557    2         X=I;

  19557   1 000B31  DF47 0011                            STR,R5   X,AUTO

     1173    19558    2         RETURN;

  19558   1 000B33  ECC7 0054                            LDB,B6   HASP_VFC+2,AUTO
          1 000B35  C3C6 0001                            LNJ,B4   1,B6

     1174    19559    2   END;
     1175    19560         %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:160  
     1176    19561
     1177    19562    1   SKP_HASP: PROC;

  19562   1 000B37  EFC7 0054            SKP_HASP        STB,B6   HASP_VFC+2,AUTO

     1178    19563        /*    Entered with I = index of first SCB in record.
     1179    19564              Returns with I = index of last SCB (i.e., ~ SCB.NOTEND)
     1180    19565              and RECSIZE = number of bytes in decompressed record.
     1181    19566                                                                           */
     1182    19567
     1183    19568    2   DCL II UBIN;
     1184    19569
     1185    19570
     1186    19571    3         DO WHILE (I<=KZ$LINCTX.INPDATSIZ AND KZ$HASPSCB.NOT_END(I));

  19571   1 000B39  0F81 0031                            B        s:19583,PREL

     1187    19572    4            IF KZ$HASPSCB.I.NOT_IDENT(I) THEN DO;

  19572   1 000B3B  ECC7 000C                            LDB,B6   BLK$,AUTO
          1 000B3D  B847 0012                            LDR,R3   I,AUTO
          1 000B3F  3003                                 SOL,R3   3
          1 000B40  3E01                                 ADV,R3   1
          1 000B41  82B6                                 LB       ,B6,R3
          1 000B42  0581 0014                            BBF      s:19578,PREL

     1188    19573    4               II=BITBIN(KZ$HASPSCB(I)&'3F'X);

  19573   1 000B44  A847 0012                            LDR,R2   I,AUTO
          1 000B46  E2A6                                 LLH,R6   ,B6,R2
          1 000B47  6008                                 SOL,R6   8
          1 000B48  E570 3F00                            AND,R6   16128,IMO
          1 000B4A  6048                                 SOR,R6   8
          1 000B4B  EF47 0056                            STR,R6   II,AUTO

     1189    19574    4               RECSIZE = RECSIZE+II;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:161  
  19574   1 000B4D  EA47 0022                            ADD,R6   RECSIZE,AUTO
          1 000B4F  EF47 0022                            STR,R6   RECSIZE,AUTO

     1190    19575    4               I = I+II;

  19575   1 000B51  AA47 0056                            ADD,R2   II,AUTO
          1 000B53  AF47 0012                            STR,R2   I,AUTO

     1191    19576    4               END;

  19576   1 000B55  0F81 0013                            B        s:19582,PREL

     1192    19577    4            ELSE DO;

     1193    19578    4               RECSIZE=RECSIZE + BITBIN(KZ$HASPSCB(I)&'1F'X);

  19578   1 000B57  A847 0012                            LDR,R2   I,AUTO
          1 000B59  E2A6                                 LLH,R6   ,B6,R2
          1 000B5A  6008                                 SOL,R6   8
          1 000B5B  E570 1F00                            AND,R6   7936,IMO
          1 000B5D  6048                                 SOR,R6   8
          1 000B5E  EA47 0022                            ADD,R6   RECSIZE,AUTO
          1 000B60  EF47 0022                            STR,R6   RECSIZE,AUTO

     1194    19579    4               IF KZ$HASPSCB.I.NOT_BLANK(I) THEN

  19579   1 000B62  2003                                 SOL,R2   3
          1 000B63  2E02                                 ADV,R2   2
          1 000B64  82A6                                 LB       ,B6,R2
          1 000B65  0581 0003                            BBF      s:19582,PREL

     1195    19580    4                  I = I+1;

  19580   1 000B67  8AC7 0012                            INC      I,AUTO

     1196    19581    4               END;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:162  
     1197    19582    3            I = I+1;

  19582   1 000B69  8AC7 0012                            INC      I,AUTO

     1198    19583    3            END;

  19583   1 000B6B  ECC7 0004                            LDB,B6   @KZ$LINCTX,AUTO
          1 000B6D  E847 0012                            LDR,R6   I,AUTO
          1 000B6F  E946 0059                            CMR,R6   89,B6
          1 000B71  0301 0007                            BG       s:19584,PREL
          1 000B73  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 000B75  B856                                 LDR,R3   R6
          1 000B76  3003                                 SOL,R3   3
          1 000B77  82B5                                 LB       ,B5,R3
          1 000B78  0543                                 BBT      s:19572,SPREL

     1199    19584    2         RETURN;

  19584   1 000B79  ECC7 0054                            LDB,B6   HASP_VFC+2,AUTO
          1 000B7B  C3C6 0001                            LNJ,B4   1,B6

     1200    19585    2   END;
     1201    19586
     1202    19587
     1203    19588
     1204    19589    1   DCMPRS_HASP: PROC;

  19589   1 000B7D  EFC7 0054            DCMPRS_HASP     STB,B6   HASP_VFC+2,AUTO

     1205    19590
     1206    19591        /*    Entered with I = index of first SCB in the record.
     1207    19592              Returns with I = index of last SCB (i.e., ~ SCB.NOTEND)
     1208    19593                                                                           */
     1209    19594    2   DCL STRNG CHAR(N) BASED;
     1210    19595
     1211    19596
     1212    19597    3         DO WHILE (KZ$HASPSCB.NOT_END(I));
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:163  

  19597   1 000B7F  DCC7 000C                            LDB,B5   BLK$,AUTO
          1 000B81  B847 0012                            LDR,R3   I,AUTO
          1 000B83  3003                                 SOL,R3   3
          1 000B84  82B5                                 LB       ,B5,R3
          1 000B85  0581 0072                            BBF      s:19627,PREL

     1213    19598    4            IF KZ$HASPSCB.I.NOT_IDENT(I) THEN DO;

  19598   1 000B87  ECC7 000C                            LDB,B6   BLK$,AUTO
          1 000B89  B847 0012                            LDR,R3   I,AUTO
          1 000B8B  3003                                 SOL,R3   3
          1 000B8C  3E01                                 ADV,R3   1
          1 000B8D  82B6                                 LB       ,B6,R3
          1 000B8E  0581 001F                            BBF      s:19612,PREL

     1214    19599
     1215    19600                       /* String of nonidentical characters               */
     1216    19601
     1217    19602    4               N=BITBIN(KZ$HASPSCB(I)&'3F'X);

  19602   1 000B90  A847 0012                            LDR,R2   I,AUTO
          1 000B92  E2A6                                 LLH,R6   ,B6,R2
          1 000B93  6008                                 SOL,R6   8
          1 000B94  E570 3F00                            AND,R6   16128,IMO
          1 000B96  6048                                 SOR,R6   8
          1 000B97  EF47 0016                            STR,R6   N,AUTO

     1218    19603    4               ADDR(BUF$->BYT(J))->STRNG = ADDR(BYT(I+1))->STRNG;

  19603   1 000B99  AB86                                 LAB,B2   ,B6
          1 000B9A  2E01                                 ADV,R2   1
          1 000B9B  BCC7 0018                            LDB,B3   BUF$,AUTO
          1 000B9D  B847 0013                            LDR,R3   J,AUTO
          1 000B9F  0008                                 MMM

     1219    19604    4               J=J+N;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:164  

  19604   1 000BA0  E847 0013                            LDR,R6   J,AUTO
          1 000BA2  EA47 0016                            ADD,R6   N,AUTO
          1 000BA4  EF47 0013                            STR,R6   J,AUTO

     1220    19605    4               I=I+N;

  19605   1 000BA6  D847 0012                            LDR,R5   I,AUTO
          1 000BA8  DA47 0016                            ADD,R5   N,AUTO
          1 000BAA  DF47 0012                            STR,R5   I,AUTO

     1221    19606
     1222    19607    4               END;

  19607   1 000BAC  0F81 0041                            B        s:19625,PREL

     1223    19608    4            ELSE DO;

     1224    19609
     1225    19610                       /* String of identical characters                  */
     1226    19611
     1227    19612    4               N=BITBIN(KZ$HASPSCB(I)&'1F'X);

  19612   1 000BAE  A847 0012                            LDR,R2   I,AUTO
          1 000BB0  E2A6                                 LLH,R6   ,B6,R2
          1 000BB1  6008                                 SOL,R6   8
          1 000BB2  E570 1F00                            AND,R6   7936,IMO
          1 000BB4  6048                                 SOR,R6   8
          1 000BB5  EF47 0016                            STR,R6   N,AUTO

     1228    19613    5               IF KZ$HASPSCB.I.NOT_BLANK(I) THEN DO;

  19613   1 000BB7  2003                                 SOL,R2   3
          1 000BB8  2E02                                 ADV,R2   2
          1 000BB9  82A6                                 LB       ,B6,R2
          1 000BBA  0581 001F                            BBF      s:19621,PREL

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:165  
     1229    19614    5                  I = I+1;

  19614   1 000BBC  8AC7 0012                            INC      I,AUTO

     1230    19615    6                  DO L = 1 TO N;

  19615   1 000BBE  5C01                                 LDV,R5   1
          1 000BBF  DF47 0015                            STR,R5   L,AUTO
          1 000BC1  0F81 0011                            B        s:19618+2,PREL

     1231    19616    6                     BUF$->BYT(J)=BYT(I);   /* Identical nonblanks  */

  19616   1 000BC3  ECC7 000C                            LDB,B6   BLK$,AUTO
          1 000BC5  B847 0012                            LDR,R3   I,AUTO
          1 000BC7  E2B6                                 LLH,R6   ,B6,R3
          1 000BC8  6008                                 SOL,R6   8
          1 000BC9  6048                                 SOR,R6   8
          1 000BCA  DCC7 0018                            LDB,B5   BUF$,AUTO
          1 000BCC  A847 0013                            LDR,R2   J,AUTO
          1 000BCE  E7A5                                 STH,R6   ,B5,R2

     1232    19617    6                     J = J+1;

  19617   1 000BCF  8AC7 0013                            INC      J,AUTO

     1233    19618    6                     END;

  19618   1 000BD1  8AC7 0015                            INC      L,AUTO
          1 000BD3  E847 0015                            LDR,R6   L,AUTO
          1 000BD5  E947 0016                            CMR,R6   N,AUTO
          1 000BD7  03EC                                 BLE      s:19616,SPREL

     1234    19619    5                  END;

  19619   1 000BD8  0F81 0015                            B        s:19625,PREL

     1235    19620    5               ELSE DO;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:166  

     1236    19621    5                  ADDR(BUF$->BYT(J))->STRNG=BLANKS_IN_EBCDIC;

  19621   1 000BDA  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 000BDD  2C3E                                 LDV,R2   62
          1 000BDE  6C40                                 LDV,R6   64
          1 000BDF  BCC7 0018                            LDB,B3   BUF$,AUTO
          1 000BE1  B847 0013                            LDR,R3   J,AUTO
          1 000BE3  F847 0016                            LDR,R7   N,AUTO
          1 000BE5  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

     1237    19622    5                  J = J+N;

  19622   1 000BE8  E847 0013                            LDR,R6   J,AUTO
          1 000BEA  EA47 0016                            ADD,R6   N,AUTO
          1 000BEC  EF47 0013                            STR,R6   J,AUTO

     1238    19623    5                  END;

     1239    19624    4               END;

     1240    19625    3            I = I+1;

  19625   1 000BEE  8AC7 0012                            INC      I,AUTO

     1241    19626    3            END;

  19626   1 000BF0  ECC7 000C                            LDB,B6   BLK$,AUTO
          1 000BF2  B847 0012                            LDR,R3   I,AUTO
          1 000BF4  3003                                 SOL,R3   3
          1 000BF5  82B6                                 LB       ,B6,R3
          1 000BF6  0501 FF90                            BBT      s:19598,PREL

     1242    19627    2         RETURN;

  19627   1 000BF8  ECC7 0054                            LDB,B6   HASP_VFC+2,AUTO
          1 000BFA  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:167  

     1243    19628    2   END;
     1244    19629
     1245    19630    1   DCMPRS_BSC: PROC;

  19630   1 000BFC  EFC7 0054            DCMPRS_BSC      STB,B6   HASP_VFC+2,AUTO

     1246    19631
     1247    19632    2   DCL STRNG CHAR(N) BASED;
     1248    19633
     1249    19634
     1250    19635    2         K=I;

  19635   1 000BFE  E847 0012                            LDR,R6   I,AUTO
          1 000C00  EF47 0014                            STR,R6   K,AUTO

     1251    19636    2         N=0;

  19636   1 000C02  8747 0016                            CL       N,AUTO

     1252    19637    3         DO WHILE I < NEXTI;

  19637   1 000C04  E947 001D                            CMR,R6   NEXTI,AUTO
          1 000C06  0281 0053                            BGE      s:19656,PREL

     1253    19638    4            IF BYT(I) = '1D'X THEN DO;

  19638   1 000C08  ECC7 000C                            LDB,B6   BLK$,AUTO
          1 000C0A  B847 0012                            LDR,R3   I,AUTO
          1 000C0C  E2B6                                 LLH,R6   ,B6,R3
          1 000C0D  6008                                 SOL,R6   8
          1 000C0E  E970 1D00                            CMR,R6   7424,IMO
          1 000C10  0981 003F                            BNE      s:19652,PREL

     1254    19639    5               IF N ~= 0 THEN DO;

  19639   1 000C12  D847 0016                            LDR,R5   N,AUTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:168  
          1 000C14  5901 0010                            BEZ,R5   s:19643,PREL

     1255    19640    5                  ADDR(BUF$->BYT(J))->STRNG=ADDR(BYT(K))->STRNG;

  19640   1 000C16  AB86                                 LAB,B2   ,B6
          1 000C17  A847 0014                            LDR,R2   K,AUTO
          1 000C19  E855                                 LDR,R6   R5
          1 000C1A  BCC7 0018                            LDB,B3   BUF$,AUTO
          1 000C1C  B847 0013                            LDR,R3   J,AUTO
          1 000C1E  0008                                 MMM

     1256    19641    5                  J=J+N;

  19641   1 000C1F  E847 0013                            LDR,R6   J,AUTO
          1 000C21  EA47 0016                            ADD,R6   N,AUTO
          1 000C23  EF47 0013                            STR,R6   J,AUTO

     1257    19642    5                  END;

     1258    19643    4               I=I+1;

  19643   1 000C25  8AC7 0012                            INC      I,AUTO

     1259    19644    4               N=BITBIN(BYT(I)&'3F'X);

  19644   1 000C27  ECC7 000C                            LDB,B6   BLK$,AUTO
          1 000C29  B847 0012                            LDR,R3   I,AUTO
          1 000C2B  E2B6                                 LLH,R6   ,B6,R3
          1 000C2C  6008                                 SOL,R6   8
          1 000C2D  E570 3F00                            AND,R6   16128,IMO
          1 000C2F  6048                                 SOR,R6   8
          1 000C30  EF47 0016                            STR,R6   N,AUTO

     1260    19645    4               ADDR(BUF$->BYT(J))->STRNG=BLANKS_IN_EBCDIC;

  19645   1 000C32  AB80 0000 0000  00                   LAB,B2   KV@VDH_EVT
          1 000C35  2C3E                                 LDV,R2   62
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:169  
          1 000C36  6C40                                 LDV,R6   64
          1 000C37  BCC7 0018                            LDB,B3   BUF$,AUTO
          1 000C39  B847 0013                            LDR,R3   J,AUTO
          1 000C3B  F847 0016                            LDR,R7   N,AUTO
          1 000C3D  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

     1261    19646    4               J=J+N;

  19646   1 000C40  E847 0013                            LDR,R6   J,AUTO
          1 000C42  EA47 0016                            ADD,R6   N,AUTO
          1 000C44  EF47 0013                            STR,R6   J,AUTO

     1262    19647    4               I=I+1;

  19647   1 000C46  8AC7 0012                            INC      I,AUTO

     1263    19648    4               K=I;

  19648   1 000C48  D847 0012                            LDR,R5   I,AUTO
          1 000C4A  DF47 0014                            STR,R5   K,AUTO

     1264    19649    4               N=0;

  19649   1 000C4C  8747 0016                            CL       N,AUTO

     1265    19650    4               END;

  19650   1 000C4E  0F81 0005                            B        s:19655,PREL

     1266    19651    4            ELSE DO;

     1267    19652    4               I=I+1;

  19652   1 000C50  8AC7 0012                            INC      I,AUTO

     1268    19653    4               N=N+1;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:170  
  19653   1 000C52  8AC7 0016                            INC      N,AUTO

     1269    19654    4               END;

     1270    19655    3            END;

  19655   1 000C54  E847 0012                            LDR,R6   I,AUTO
          1 000C56  E947 001D                            CMR,R6   NEXTI,AUTO
          1 000C58  0201 FFAF                            BL       s:19638,PREL

     1271    19656    2         IF N ~= 0 THEN

  19656   1 000C5A  D847 0016                            LDR,R5   N,AUTO
          1 000C5C  5901 000B                            BEZ,R5   s:19658,PREL

     1272    19657    2            ADDR(BUF$->BYT(J))->STRNG=ADDR(BYT(K))->STRNG;

  19657   1 000C5E  ACC7 000C                            LDB,B2   BLK$,AUTO
          1 000C60  A847 0014                            LDR,R2   K,AUTO
          1 000C62  E855                                 LDR,R6   R5
          1 000C63  BCC7 0018                            LDB,B3   BUF$,AUTO
          1 000C65  B847 0013                            LDR,R3   J,AUTO
          1 000C67  0008                                 MMM

     1273    19658    2         RETURN;

  19658   1 000C68  ECC7 0054                            LDB,B6   HASP_VFC+2,AUTO
          1 000C6A  C3C6 0001                            LNJ,B4   1,B6

     1274    19659    2   END;
     1275    19660        %EJECT;
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:171  
     1276    19661        /*    Build SUSBITS for output block                               */
     1277    19662
     1278    19663    1   BLD_SUSBITS: PROC;

  19663   1 000C6C  EFC7 0054            BLD_SUSBITS     STB,B6   HASP_VFC+2,AUTO

     1279    19664
     1280    19665    2   DCL CTX$ PTR;
     1281    19666
     1282    19667    2         SNDFCS = '8080'X;            /* Initial temp FCS  */

  19667   1 000C6E  E870 8080                            LDR,R6   -32640,IMO
          1 000C70  EF47 0021                            STR,R6   SNDFCS,AUTO

     1283    19668    2         CTX$ = KZ$LINCTX.CTRHD$;

  19668   1 000C72  DCC7 0004                            LDB,B5   @KZ$LINCTX,AUTO
          1 000C74  CC85                                 LDB,B4   ,B5
          1 000C75  CFC7 0056                            STB,B4   CTX$,AUTO

     1284    19669    3         DO WHILE (CTX$ ~= ADDR(NIL));

  19669   1 000C77  0F81 001F                            B        s:19677,PREL

     1285    19670    3            IF (CTX$->KZ$SDVCTX.MGR_TYPE ~= %KZ_S_DMOUTPUT# AND

  19670   1 000C79  ECC7 0056                            LDB,B6   CTX$,AUTO
          1 000C7B  E2C6 0022                            LLH,R6   34,B6
          1 000C7D  6D02                                 CMV,R6   2
          1 000C7E  0901 0006                            BE       s:19670+12,PREL
          1 000C80  D2C6 000A                            LLH,R5   10,B6
          1 000C82  5D02                                 CMV,R5   2
          1 000C83  0901 000A                            BE       s:19674,PREL
          1 000C85  89C6 001E                            CMZ      30,B6
          1 000C87  0801 000C                            BAL      s:19676,PREL
          1 000C89  82C6 001E                            LB,'2000'X        30,B6
          1 000C8B       2000
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:172  
          1 000C8C  0581 0007                            BBF      s:19676,PREL

     1286    19671    3               CTX$->KZ$SDVCTX.STATE = %KZ_S_SCONNECTED#) OR
     1287    19672    3               (NOT CTX$->KZ$SDVCTX.FLAGS.SUSPEND_IN AND
     1288    19673    3               CTX$->KZ$SDVCTX.FLAGS.PTS_IN) THEN
     1289    19674    3               SNDFCS = SNDFCS | CTX$->KZ$SDVCTX.SUSBIT_MASK;

  19674   1 000C8E  D847 0021                            LDR,R5   SNDFCS,AUTO
          1 000C90  D446 0023                            OR,R5    35,B6
          1 000C92  DF47 0021                            STR,R5   SNDFCS,AUTO

     1290    19675
     1291    19676    3            CTX$ = CTX$->KZ$SDVCTX.LNK$;

  19676   1 000C94  DC86                                 LDB,B5   ,B6
          1 000C95  DFC7 0056                            STB,B5   CTX$,AUTO

     1292    19677    3            END;

  19677   1 000C97  8DC7 0056                            CMN      CTX$,AUTO
          1 000C99  09E0                                 BNE      s:19670,SPREL

     1293    19678    2         RETURN;

  19678   1 000C9A  ECC7 0054                            LDB,B6   HASP_VFC+2,AUTO
          1 000C9C  C3C6 0001                            LNJ,B4   1,B6
     1294    19679    2   END;
     1295    19680    1   END;

PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:173  
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   KZ_3270_C.:E05TOU  is referenced.
   KZ$INPBFR.:E05TOU  is referenced.
   KZ$OTPBFR.:E05TOU  is referenced.
   KZ_PERR_C.:E05TOU  is referenced.
   KZ$RBT_M.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KV$VDO.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
      No diagnostics issued in procedure KZL$DBLK.
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:174  

 **** Variables and constants ****

  ****  Section 000 RoData KZL$DBLK

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    1F-0-0/c CHAR(64)    r     1 BLANKS_IN_EBCDIC
    1F-0-0/b BIT (8)     r     1 BLANK_ARRAY_IN_EBCDIC(0:63)
    3F-0-0/b BIT (8)     r     1 BSCVFC(0:11)              45-0-0/b BIT (8)     r     1 CP6VFC(0:11)
     2-0-0/w STRC(336)   r     1 FPT@WRSYSLOG               0-0-0/w STRC(32)    r     1 KV@VDH_EVT
    17-0-0/w STRC(128)   r     1 KZ_INPBFR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KZ$LINCTX                 C-0-0/w PTR         r     1 BLK$
     E-0-0/w PTR         r     1 BRK$                      18-0-0/w PTR         r     1 BUF$
    51-0-0/c STRC(8)     r     1 CP6_VFC                   56-0-0/w PTR         r     1 CTX$
     A-0-0/w PTR         r     1 DCTX$                     34-0-0/w STRC(336)   r     1 FPT_WRSYSLOG
    52-0-0/c STRC(8)     r     1 HASP_VFC                  12-0-0/w UBIN(16)    r     1 I
    56-0-0/w UBIN(16)    r     1 II                        13-0-0/w UBIN(16)    r     1 J
    14-0-0/w SBIN(16)    r     1 K                         49-0-0/w STRC(128)   r     1 KV$VDH_DAT
    32-0-0/w STRC(32)    r     1 KV$VDH_EVT                 6-0-0/w STRC(32)    r     1 KV@USRENT
    *0-0-0/w STRC(2192)  r     1 KZ$LINCTX                 15-0-0/w UBIN(16)    r     1 L
     8-0-0/w PTR         r     1 LCTX$                     16-0-0/w UBIN(16)    r     1 N
    1D-0-0/w UBIN(16)    r     1 NEXTI                     22-0-0/w UBIN(16)    r     1 RECSIZE
    21-0-0/b BIT (16)    r     1 SNDFCS                    23-0-0/w UBIN(16)    r     1 SZ
    1A-0-0/w PTR         r     1 T$                        1C-0-0/b BIT         r     1 VDH_ENTERED
    11-0-0/w UBIN(16)    r     1 X

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:175  

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(128)   r     1 KV_VDH_DAT
     0-0-0/w EPTR        r     1 KZR_CNCDSC@                0-0-0/w STRC(128)   r     1 KZ_OTPBFR
     0-0-0/w BIT (8)     r     1 KZ_SLCCHR2780PNC           0-0-0/w BIT (8)     r     1 KZ_SLCCHR3780PNC1

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(8)     r     1 BYT(0:0)                   0-0-0/c CHAR(32)    r     1 CHR32
     0-0-0/c ACHR        r     1 CHRN                       0-0-0/w STRC(64)    r     1 ERRCTX
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(8960)  r     1 KV$STT
     0-0-0/w STRC(912)   r     1 KV$USRPRM                  0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(48)    r     1 KZ$HASPBLK
     0-0-0/c STRC(8)     r     1 KZ$HASPRCB(0:511)
     0-0-0/c STRC(8)     r     1 KZ$HASPSCB(0:511)
     0-0-0/w STRC(128)   r     1 KZ$INPBFR                  0-0-0/w STRC(128)   r     1 KZ$OTPBFR
     0-0-0/w STRC(928)   r     1 KZ$SDVCTX                  0-0-0/c ACHR        r     1 STRNG
     0-0-0/c ACHR        r     1 STRNG


   Procedure KZL$DBLK requires 3230 words for executable code.
   Procedure KZL$DBLK requires 93 words of local(AUTO) storage.

    No errors detected in file KZL$DBLK.:E05TSI    .
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:176  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:177  
          MINI XREF LISTING

BLANKS_IN_EBCDIC
     18424**DCL     19621>>ASSIGN  19645>>ASSIGN
BLANK_ARRAY_IN_EBCDIC
     18423**DCL     18424--REDEF
BLD_SUSBITS
     19663**PROC    19285--CALL
BLK$
     18046**DCL     16200--IMP-PTR 16233--IMP-PTR 16251--IMP-PTR 18063--IMP-PTR 18416--IMP-PTR 18440<<ASSIGN
     18457>>IF      18457>>IF      18457>>IF      18468>>IF      18542>>ASSIGN  18542>>ASSIGN  18546>>IF
     18546>>IF      18555>>ASSIGN  18586>>IF      18591>>IF      18593>>DOWHILE 18593>>DOWHILE 18593>>DOWHILE
     18597>>IF      18598>>ASSIGN  18609>>IF      18619>>ASSIGN  18634>>IF      18639>>IF      18639>>IF
     18652>>IF      18653>>IF      18665>>IF      18681>>ASSIGN  18682>>ASSIGN  18770>>ASSIGN  18771>>ASSIGN
     18791>>IF      18812>>IF      18833>>ASSIGN  18834>>ASSIGN  18859>>IF      18877>>ASSIGN  18878>>ASSIGN
     18969>>IF      18969>>IF      19024>>ASSIGN  19086>>IF      19098>>IF      19127>>IF      19550>>IF
     19571>>DOWHILE 19572>>IF      19573>>ASSIGN  19578>>ASSIGN  19579>>IF      19597>>DOWHILE 19598>>IF
     19602>>ASSIGN  19603>>ASSIGN  19612>>ASSIGN  19613>>IF      19616>>ASSIGN  19638>>IF      19640>>ASSIGN
     19644>>ASSIGN  19657>>ASSIGN
BRK$
     18047**DCL     18997<>CALL    19002>>ASSIGN  19012>>ASSIGN  19014>>ASSIGN
BRKRQS
     19193**PROC    18483--CALL    18673--CALL
BSCVFC IN PROCEDURE CNVRT_BSC_VFC
     19542**DCL     19550>>IF
BUF$
     18056**DCL     18956<<ASSIGN  18978>>ASSIGN  19012>>ASSIGN  19014<<ASSIGN  19015>>ASSIGN  19075>>ASSIGN
     19122>>ASSIGN  19444<>CALL    19457>>ASSIGN  19458>>ASSIGN  19459>>ASSIGN  19461>>ASSIGN  19462>>ASSIGN
     19603>>ASSIGN  19616>>ASSIGN  19621>>ASSIGN  19640>>ASSIGN  19645>>ASSIGN  19657>>ASSIGN
BYT
     18416**DCL     18457>>IF      18457>>IF      18457>>IF      18468>>IF      18586>>IF      18591>>IF
     18593>>DOWHILE 18593>>DOWHILE 18593>>DOWHILE 18597>>IF      18598>>ASSIGN  18619--ASSIGN  18652>>IF
     18681>>ASSIGN  18682>>ASSIGN  18770>>ASSIGN  18771>>ASSIGN  18833>>ASSIGN  18834>>ASSIGN  18859>>IF
     18877>>ASSIGN  18878>>ASSIGN  18969>>IF      18969>>IF      19002--ASSIGN  19012--ASSIGN  19024>>ASSIGN
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:178  
     19086>>IF      19098>>IF      19127>>IF      19550>>IF      19603--ASSIGN  19603--ASSIGN  19616<<ASSIGN
     19616>>ASSIGN  19621--ASSIGN  19638>>IF      19640--ASSIGN  19640--ASSIGN  19644>>ASSIGN  19645--ASSIGN
     19657--ASSIGN  19657--ASSIGN
CHR32
     18063**DCL     18555--ASSIGN  18619--ASSIGN
CHRN
     18062**DCL     19002<<ASSIGN  19002>>ASSIGN  19012<<ASSIGN  19012>>ASSIGN
CNVRT_BSC_VFC
     19536**PROC    18592--CALL
CNVRT_BSC_X IN PROCEDURE CNVRT_BSC_VFC
     19556**LABEL   19552--GOTO
CNVRT_HASP_VFC
     19494**PROC    19026--CALL
CP6VFC IN PROCEDURE CNVRT_BSC_VFC
     19545**DCL     19551>>ASSIGN  19555>>ASSIGN
CP6_VFC
     18370**DCL     18441<<ASSIGN  18980>>ASSIGN  19082>>ASSIGN  19124>>ASSIGN  19551<<ASSIGN  19555<<ASSIGN
CP6_VFC.COUNT
     18374**DCL     19502<<ASSIGN  19506<<ASSIGN  19512<<ASSIGN  19514<<ASSIGN  19517<<ASSIGN  19522<<ASSIGN
     19528<<ASSIGN  19531<<ASSIGN
CP6_VFC.FCN
     18374**DCL     19501<<ASSIGN  19505<<ASSIGN  19511<<ASSIGN  19521<<ASSIGN  19526<<ASSIGN
CTX$ IN PROCEDURE BLD_SUSBITS
     19665**DCL     19668<<ASSIGN  19669>>DOWHILE 19670>>IF      19670>>IF      19670>>IF      19670>>IF
     19674>>ASSIGN  19676<<ASSIGN  19676>>ASSIGN
DBLK2
     18869**LABEL   18494--GOTO    18861--GOTO
DCMPRS_BSC
     19630**PROC    18964--CALL
DCMPRS_HASP
     19589**PROC    19023--CALL
DCTX$
     18045**DCL     15888--IMP-PTR 18443<<ASSIGN  18475>>DOWHILE 18476>>IF      18476>>IF      18481>>ASSIGN
     18482>>ASSIGN  18487<<ASSIGN  18487>>ASSIGN  18499<<ASSIGN  18500>>IF      18502>>IF      18508>>IF
     18521>>ASSIGN  18527>>DOWHILE 18528>>IF      18532>>IF      18533>>ASSIGN  18535>>ASSIGN  18537<<ASSIGN
     18537>>ASSIGN  18649<<ASSIGN  18651>>DOWHILE 18652>>IF      18654>>IF      18658>>IF      18660<<ASSIGN
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:179  
     18660>>ASSIGN  18669>>IF      18669>>IF      18680>>ASSIGN  18702>>IF      18702>>IF      18707>>ASSIGN
     18708>>IF      18710>>ASSIGN  18712>>IF      18733>>ASSIGN  18733>>ASSIGN  18734>>IF      18735>>ASSIGN
     18737>>ASSIGN  18740>>ASSIGN  18741>>ASSIGN  18741>>ASSIGN  18746>>CALL    18757>>ASSIGN  18760>>ASSIGN
     18769>>ASSIGN  18798>>ASSIGN  18832>>ASSIGN  18857<<ASSIGN  18858>>DOWHILE 18859>>IF      18859>>IF
     18862<<ASSIGN  18862>>ASSIGN  18869>>IF      18869>>IF      18876>>ASSIGN  18896>>IF      18896>>IF
     18901>>IF      18915>>ASSIGN  18916>>ASSIGN  18979>>IF      18983>>IF      18984>>ASSIGN  18986>>ASSIGN
     18987>>ASSIGN  18988>>ASSIGN  18988>>ASSIGN  18992>>IF      18996>>ASSIGN  18999>>DOWHILE 19000>>ASSIGN
     19004>>ASSIGN  19009>>ASSIGN  19010>>ASSIGN  19025>>IF      19031>>ASSIGN  19031>>ASSIGN  19032>>ASSIGN
     19032>>ASSIGN  19033>>IF      19033>>IF      19039>>IF      19056>>ASSIGN  19056>>ASSIGN  19057>>IF
     19058>>ASSIGN  19060>>ASSIGN  19063>>ASSIGN  19064>>ASSIGN  19064>>ASSIGN  19070>>IF      19081>>IF
     19086>>IF      19105>>IF      19107>>ASSIGN  19108>>ASSIGN  19109>>ASSIGN  19116>>ASSIGN  19123>>IF
     19134>>ASSIGN  19135>>ASSIGN  19136>>ASSIGN  19138>>IF      19139>>ASSIGN  19141>>ASSIGN  19142>>ASSIGN
     19166>>IF      19167>>ASSIGN  19167>>ASSIGN  19168>>ASSIGN  19168>>ASSIGN  19197>>IF      19198>>ASSIGN
     19200>>IF      19216>>ASSIGN  19216>>ASSIGN  19217>>IF      19218>>ASSIGN  19220>>ASSIGN  19223>>ASSIGN
     19224>>ASSIGN  19224>>ASSIGN  19231>>ASSIGN  19292<<ASSIGN  19293>>IF      19294<<ASSIGN  19303>>IF
     19303>>IF      19303>>IF      19303>>IF      19308>>IF      19308>>IF      19308>>IF      19326>>ASSIGN
     19326>>ASSIGN  19327>>IF      19328>>ASSIGN  19330>>ASSIGN  19333>>ASSIGN  19334>>ASSIGN  19334>>ASSIGN
     19351>>IF      19355>>IF      19357<<ASSIGN  19357>>ASSIGN  19358>>IF      19359<<ASSIGN  19368<<ASSIGN
     19369>>IF      19370<<ASSIGN  19371>>DOWHILE 19372>>IF      19374<<ASSIGN  19374>>ASSIGN  19378>>IF
     19386>>ASSIGN  19387>>ASSIGN  19388>>ASSIGN  19389>>ASSIGN  19390>>IF      19391>>ASSIGN  19392>>ASSIGN
     19392>>ASSIGN  19393>>IF      19394>>ASSIGN  19422>>DOWHILE 19423>>IF      19425<<ASSIGN  19425>>ASSIGN
     19429>>ASSIGN  19460<<ASSIGN  19484<<ASSIGN  19485>>DOWHILE 19486>>IF      19488<<ASSIGN  19488>>ASSIGN
DFRBRK IN PROCEDURE BRKRQS
     19198**LABEL   19225--GOTO
DFREOFREC
     18760**LABEL   18742--GOTO
DFRINPT
     19116**LABEL   19040--GOTO    19065--GOTO    19071--GOTO
DFRTRNC
     19352**LABEL   19335--GOTO
ERRCTX.DVCTX$
     16317**DCL     18680<<ASSIGN  18769<<ASSIGN  18798<<ASSIGN  18832<<ASSIGN  18876<<ASSIGN  18915<<ASSIGN
ERRCTX.LCTX$
     16316**DCL     16317--REDEF
ERRCTX.RCB
     16320**DCL     18681<<ASSIGN  18770<<ASSIGN  18833<<ASSIGN  18877<<ASSIGN  18916<<ASSIGN
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:180  
ERRCTX.SNDFCS
     16318**DCL     16319--REDEF   18917<<ASSIGN
ERRCTX.SRCB
     16321**DCL     18682<<ASSIGN  18771<<ASSIGN  18834<<ASSIGN  18878<<ASSIGN
FIND_PTS_DEVICE
     18651**LABEL   18655--EXIT    18659--EXIT
FNDOTP
     19303**LABEL   19360--GOTO
FPT@WRSYSLOG
     17465**DCL     18553>>ASSIGN  18617>>ASSIGN  18678>>ASSIGN  18767>>ASSIGN  18795>>ASSIGN  18830>>ASSIGN
     18873>>ASSIGN  18912>>ASSIGN  19177>>ASSIGN  19448>>ASSIGN
FPT@WRSYSLOG.V
     17469**DCL     17467--DCLINIT
FPT@WRSYSLOG.V.TERMID.TERM
     17534**DCL     17543--REDEF
FPT_WRSYSLOG
     18197**DCL     18553<<ASSIGN  18557<>CALL    18617<<ASSIGN  18621<>CALL    18678<<ASSIGN  18684<>CALL
     18767<<ASSIGN  18773<>CALL    18795<<ASSIGN  18799<>CALL    18830<<ASSIGN  18836<>CALL    18873<<ASSIGN
     18879<>CALL    18912<<ASSIGN  18918<>CALL    19177<<ASSIGN  19182<>CALL    19448<<ASSIGN  19453<>CALL
FPT_WRSYSLOG.BUF_
     18199**DCL     18555<<ASSIGN  18619<<ASSIGN
FPT_WRSYSLOG.V.ERRCODE.ERR#
     18245**DCL     18556<<ASSIGN  18620<<ASSIGN  18683<<ASSIGN  18772<<ASSIGN  18797<<ASSIGN  18835<<ASSIGN
     18875<<ASSIGN  18914<<ASSIGN  19178<<ASSIGN  19449<<ASSIGN
FPT_WRSYSLOG.V.ERRCODE.SEV
     18246**DCL     19179<<ASSIGN  19450<<ASSIGN
FPT_WRSYSLOG.V.TERMID
     18264**DCL     18554<<ASSIGN  18618<<ASSIGN  18679<<ASSIGN  18768<<ASSIGN  18796<<ASSIGN  18831<<ASSIGN
     18874<<ASSIGN  18913<<ASSIGN  19180<<ASSIGN  19451<<ASSIGN
FPT_WRSYSLOG.V.TERMID.TERM
     18266**DCL     18275--REDEF
FPT_WRSYSLOG.V.VALUES
     18277**DCL     18680--ASSIGN  18681--ASSIGN  18682--ASSIGN  18769--ASSIGN  18770--ASSIGN  18771--ASSIGN
     18798--ASSIGN  18832--ASSIGN  18833--ASSIGN  18834--ASSIGN  18876--ASSIGN  18877--ASSIGN  18878--ASSIGN
     18915--ASSIGN  18916--ASSIGN  18917--ASSIGN  19181<<ASSIGN  19452<<ASSIGN
GTINPRC
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:181  
     18946**LABEL   18940--GOTO
HASP_VFC
     18390**DCL     18982>>ASSIGN  19024<<ASSIGN  19126>>ASSIGN
HASP_VFC.S.UPSP_CT
     18399**DCL     19500>>IF      19506>>ASSIGN  19522>>ASSIGN
HASP_VFC.SKIP_TO
     18396**DCL     18397--REDEF   19512>>ASSIGN  19513>>IF      19514>>ASSIGN  19527>>IF      19528>>ASSIGN
HASP_VFC.V.BIN
     18395**DCL     19086>>IF
HASP_VFC.VFC_TYPE
     18392**DCL     18393--REDEF   19499>>IF      19510>>IF      19520>>IF      19525>>IF
I
     18050**DCL     18578<<ASSIGN  18586>>IF      18591>>IF      18593>>DOWHILE 18593>>DOWHILE 18593>>DOWHILE
     18593>>DOWHILE 18597>>IF      18598>>ASSIGN  18599<<ASSIGN  18599>>ASSIGN  18603<<ASSIGN  18603>>ASSIGN
     18605>>ASSIGN  18609>>IF      18613<<ASSIGN  18613>>ASSIGN  18615>>ASSIGN  18616>>IF      18619>>ASSIGN
     18963<<ASSIGN  19022<<ASSIGN  19550>>IF      19556<<ASSIGN  19556>>ASSIGN  19557>>ASSIGN  19571>>DOWHILE
     19571>>DOWHILE 19572>>IF      19573>>ASSIGN  19575<<ASSIGN  19575>>ASSIGN  19578>>ASSIGN  19579>>IF
     19580<<ASSIGN  19580>>ASSIGN  19582<<ASSIGN  19582>>ASSIGN  19597>>DOWHILE 19598>>IF      19602>>ASSIGN
     19603>>ASSIGN  19605<<ASSIGN  19605>>ASSIGN  19612>>ASSIGN  19613>>IF      19614<<ASSIGN  19614>>ASSIGN
     19616>>ASSIGN  19625<<ASSIGN  19625>>ASSIGN  19635>>ASSIGN  19637>>DOWHILE 19638>>IF      19643<<ASSIGN
     19643>>ASSIGN  19644>>ASSIGN  19647<<ASSIGN  19647>>ASSIGN  19648>>ASSIGN  19652<<ASSIGN  19652>>ASSIGN
II IN PROCEDURE SKP_HASP
     19568**DCL     19573<<ASSIGN  19574>>ASSIGN  19575>>ASSIGN
J
     18051**DCL     18461<<ASSIGN  18463<<ASSIGN  18469<<ASSIGN  18471<<ASSIGN  18474<<ASSIGN  18476>>IF
     18519>>IF      18958<<ASSIGN  18998<<ASSIGN  19002>>ASSIGN  19003<<ASSIGN  19003>>ASSIGN  19008>>IF
     19012>>ASSIGN  19016>>ASSIGN  19549<<DOINDEX 19550>>IF      19551>>ASSIGN  19603>>ASSIGN  19604<<ASSIGN
     19604>>ASSIGN  19616>>ASSIGN  19617<<ASSIGN  19617>>ASSIGN  19621>>ASSIGN  19622<<ASSIGN  19622>>ASSIGN
     19640>>ASSIGN  19641<<ASSIGN  19641>>ASSIGN  19645>>ASSIGN  19646<<ASSIGN  19646>>ASSIGN  19657>>ASSIGN
K
     18052**DCL     19635<<ASSIGN  19640>>ASSIGN  19648<<ASSIGN  19657>>ASSIGN
KHA$ERRLOG
     18411**DCL-ENT 18557--CALL    18621--CALL    18684--CALL    18773--CALL    18799--CALL    18836--CALL
     18879--CALL    18918--CALL    19182--CALL    19453--CALL
KILL_LINE
     18890**LABEL   18629--GOTO    18808--GOTO    19190--GOTO
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:182  
KV$PTR.INPCNDPND
     16699**DCL     16708--REDEF   16712--REDEF
KV$PTR.LINLST$
     16695**DCL     16696--REDEF
KV$PTR.VDI$
     16693**DCL     18753>>ASSIGN  19155>>ASSIGN  19239>>ASSIGN  19346>>ASSIGN
KV$PTR$
     16687**DCL     16693--IMP-PTR 18736>>ASSIGN  18737<<ASSIGN  18753>>ASSIGN  18755<<ASSIGN  19059>>ASSIGN
     19060<<ASSIGN  19155>>ASSIGN  19157<<ASSIGN  19219>>ASSIGN  19220<<ASSIGN  19239>>ASSIGN  19241<<ASSIGN
     19329>>ASSIGN  19330<<ASSIGN  19346>>ASSIGN  19348<<ASSIGN
KV$SSN.REDRSPCNT
     16795**DCL     16796--REDEF
KV$STT.REQSTATS.DSPMSK
     17118**DCL     17124--REDEF
KV$STT.REQSTATS.SLCMSK
     17159**DCL     17166--REDEF
KV$STT.USRENTCNT
     17228**DCL     18733<<ASSIGN  18733>>ASSIGN  19056<<ASSIGN  19056>>ASSIGN  19216<<ASSIGN  19216>>ASSIGN
     19326<<ASSIGN  19326>>ASSIGN
KV$STT.USRENTDFRCNT
     17229**DCL     18741<<ASSIGN  18741>>ASSIGN  19064<<ASSIGN  19064>>ASSIGN  19224<<ASSIGN  19224>>ASSIGN
     19334<<ASSIGN  19334>>ASSIGN
KV$USRPRM.STT$
     16763**DCL     18733>>ASSIGN  18733>>ASSIGN  18741>>ASSIGN  18741>>ASSIGN  19056>>ASSIGN  19056>>ASSIGN
     19064>>ASSIGN  19064>>ASSIGN  19216>>ASSIGN  19216>>ASSIGN  19224>>ASSIGN  19224>>ASSIGN  19326>>ASSIGN
     19326>>ASSIGN  19334>>ASSIGN  19334>>ASSIGN
KV$VDH_DAT
     18312**DCL     19073<<ASSIGN  19096<>CALL    19111<>CALL
KV$VDH_DAT.CMPCOD
     18352**DCL     19106<<ASSIGN
KV$VDH_DAT.DATCTRCHR
     18354**DCL     19082<<ASSIGN
KV$VDH_DAT.DATCTRCHRTYP
     18319**DCL     19083<<ASSIGN
KV$VDH_DAT.DATMOD
     18320**DCL     19095<<ASSIGN
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:183  
KV$VDH_DAT.DAT__.ADR$
     18348**DCL     19075<<ASSIGN
KV$VDH_DAT.DAT__.BFRBYTSIZ
     18349**DCL     19074<<ASSIGN
KV$VDH_DAT.DAT__.DATBYTSIZ
     18348**DCL     19076<<ASSIGN  19110<<ASSIGN
KV$VDH_EVT
     18176**DCL     19229<<ASSIGN  19232<>CALL
KV$VDH_EVT.PRM
     18182**DCL     19230<<ASSIGN
KV$VDI.ASNINPPTR$
     16623**DCL     18737>>ASSIGN  19060>>ASSIGN  19220>>ASSIGN  19330>>ASSIGN
KV$VDI.BSY
     16657**DCL     18734>>IF      18735<<ASSIGN  18753<<ASSIGN  19057>>IF      19058<<ASSIGN  19155<<ASSIGN
     19217>>IF      19218<<ASSIGN  19239<<ASSIGN  19327>>IF      19328<<ASSIGN  19346<<ASSIGN
KV$VDI.DFR.USR
     16654**DCL     18740<<ASSIGN  19063<<ASSIGN  19223<<ASSIGN  19333<<ASSIGN
KV$VDI.OTPBFR_.ADR$
     16648**DCL     19308>>IF
KV$VDI.OTPBFR_.BYTX
     16648**DCL     19308>>IF
KV$VDI.USRPRM$
     16623**DCL     18733>>ASSIGN  18733>>ASSIGN  18741>>ASSIGN  18741>>ASSIGN  19056>>ASSIGN  19056>>ASSIGN
     19064>>ASSIGN  19064>>ASSIGN  19216>>ASSIGN  19216>>ASSIGN  19224>>ASSIGN  19224>>ASSIGN  19326>>ASSIGN
     19326>>ASSIGN  19334>>ASSIGN  19334>>ASSIGN
KV$VDI.USRRQSDAT.RED
     16663**DCL     19070>>IF
KV@USRENT.SVDPTR$
     17257**DCL     18736<<ASSIGN  18755>>ASSIGN  19059<<ASSIGN  19157>>ASSIGN  19219<<ASSIGN  19241>>ASSIGN
     19329<<ASSIGN  19348>>ASSIGN
KV@VDH_EVT
     17440**DCL     19229>>ASSIGN
KVB$GET2NSYS
     18409**DCL-ENT 19444--CALL
KVB$GETSYS
     18407**DCL-ENT 18947--CALL    18974--CALL    18997--CALL    19118--CALL
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:184  
KVB$RLSSYS
     18408**DCL-ENT 18939--CALL    19005--CALL    19006--CALL    19013--CALL
KVV$VDI
     18410**DCL-ENT 19096--CALL    19111--CALL    19232--CALL
KV_VDH_DAT
     17297**DCL     19073>>ASSIGN
KZ$HASPBLK
     16200**DCL     18542--ASSIGN  19308--IF
KZ$HASPBLK.BCB
     16201**DCL     19403<<ASSIGN  19408<<ASSIGN
KZ$HASPBLK.BCB.CNT
     16205**DCL     19404<<ASSIGN
KZ$HASPBLK.FCS
     16206**DCL     19400<<ASSIGN
KZ$HASPBLK.FLG
     16215**DCL     18542--ASSIGN  18546>>IF      18546>>IF
KZ$HASPBLK.FLG.RCB
     16216**DCL     19463<<ASSIGN
KZ$HASPBLK.FLG.SRCB
     16217**DCL     19464--ASSIGN
KZ$HASPRCB
     16233**DCL     18634>>IF      18639>>IF      18639>>IF      18653>>IF      18665>>IF      18791>>IF
     18812>>IF
KZ$HASPRCB.NOT_END
     16234**DCL     18609>>IF
KZ$HASPSCB
     16251**DCL     19573>>ASSIGN  19578>>ASSIGN  19602>>ASSIGN  19612>>ASSIGN
KZ$HASPSCB.I
     16253**DCL     16257--REDEF
KZ$HASPSCB.I.NOT_BLANK
     16255**DCL     19579>>IF      19613>>IF
KZ$HASPSCB.I.NOT_IDENT
     16254**DCL     19572>>IF      19598>>IF
KZ$HASPSCB.NOT_END
     16252**DCL     19571>>DOWHILE 19597>>DOWHILE
KZ$INPBFR
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:185  
     16553**DCL     18973--ASSIGN  18975<<ASSIGN  19006--CALL    19117--ASSIGN  19119<<ASSIGN
KZ$INPBFR.BFR_SIZ
     16568**DCL     18976<<ASSIGN  19005>>CALL    19120<<ASSIGN
KZ$INPBFR.BYTX
     16570**DCL     18980<<ASSIGN  18982<<ASSIGN  19124<<ASSIGN  19126<<ASSIGN
KZ$INPBFR.DATA$
     16572**DCL     18978<<ASSIGN  19002>>ASSIGN  19005<>CALL    19122<<ASSIGN
KZ$INPBFR.DATA_SIZ
     16566**DCL     18977<<ASSIGN  19001>>ASSIGN  19121<<ASSIGN
KZ$INPBFR.FLAGS.LAST#
     16561**DCL     19133<<ASSIGN
KZ$INPBFR.LNK$
     16554**DCL     18984<<ASSIGN  19004>>ASSIGN  19139<<ASSIGN
KZ$LINCTX
     17621**DCL        11--PROC    18439--ASSIGN  18890<>CALL    19276--ENTRY   19280--ASSIGN  19454<>CALL
     19482--ENTRY
KZ$LINCTX.BCB.SND
     17915**DCL     19404>>ASSIGN  19405<<ASSIGN  19405>>ASSIGN
KZ$LINCTX.CTRHD$
     17622**DCL     18443>>ASSIGN  18649>>ASSIGN  18857>>ASSIGN  19287>>IF      19291>>ASSIGN  19294>>ASSIGN
     19359>>ASSIGN  19370>>ASSIGN  19459>>ASSIGN  19460>>ASSIGN  19484>>ASSIGN  19668>>ASSIGN
KZ$LINCTX.CURDEV$
     17920**DCL     18452>>IF      18481<<ASSIGN  18499>>ASSIGN  19290>>IF      19291<<ASSIGN  19292>>ASSIGN
     19355>>IF      19368>>ASSIGN  19429<<ASSIGN
KZ$LINCTX.FLAGS.BCB_INIT
     17734**DCL     19402>>IF      19409<<ASSIGN
KZ$LINCTX.FLAGS.FIRST
     17754**DCL     19421<<ASSIGN
KZ$LINCTX.FLAGS.RCVWAB
     17731**DCL     19287>>IF
KZ$LINCTX.INPBFR$
     17927**DCL     18440>>ASSIGN
KZ$LINCTX.INPDATSIZ
     17931**DCL     18577>>DOWHILE 18593>>DOWHILE 18616>>IF      19571>>DOWHILE
KZ$LINCTX.INPREC$
     17942**DCL     18937>>IF      18939<>CALL    18947<>CALL    18956>>ASSIGN  18989<<ASSIGN  19013<>CALL
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:186  
     19015<<ASSIGN  19143<<ASSIGN
KZ$LINCTX.INPRECSIZ
     17957**DCL     18938>>IF      18939>>CALL    18950<<ASSIGN  18953<<ASSIGN  18976>>ASSIGN  19013>>CALL
     19017<<ASSIGN  19120>>ASSIGN  19144<<ASSIGN
KZ$LINCTX.LINID
     17642**DCL     18554>>ASSIGN  18618>>ASSIGN  18679>>ASSIGN  18768>>ASSIGN  18796>>ASSIGN  18831>>ASSIGN
     18874>>ASSIGN  18913>>ASSIGN  19180>>ASSIGN  19451>>ASSIGN
KZ$LINCTX.LINID.TERM
     17644**DCL     17653--REDEF
KZ$LINCTX.OTPBFR$
     17933**DCL     19387<<ASSIGN  19400>>ASSIGN  19403>>ASSIGN  19404>>ASSIGN  19408>>ASSIGN  19462<<ASSIGN
     19463>>ASSIGN  19464>>ASSIGN  19464>>ASSIGN
KZ$LINCTX.OTPCNT
     17909**DCL     17912--REDEF
KZ$LINCTX.OTPDATSIZ
     17937**DCL     19388<<ASSIGN  19401>>IF      19447<<ASSIGN  19464<<ASSIGN  19468<<ASSIGN
KZ$LINCTX.OTPHD$
     17922**DCL     19386<<ASSIGN  19395>>ASSIGN  19420>>IF      19457<<ASSIGN
KZ$LINCTX.POLSIZ
     17955**DCL     17957--REDEF
KZ$LINCTX.PRO.BLKBYTES
     17812**DCL     19443>>ASSIGN
KZ$LINCTX.PRO.IRSCHR
     17846**DCL     18593>>DOWHILE 18969>>IF
KZ$LINCTX.PRO.LSTRECCTN
     17883**DCL     18968>>IF
KZ$LINCTX.PRO.PROTYP
     17805**DCL     18444>>IF      18444>>IF      18457>>IF      18457>>IF      18516>>IF      18546>>IF
     18546>>IF      18580>>IF      18580>>IF      18812>>IF      18961>>IF      18961>>IF      19077>>IF
     19077>>IF      19086>>IF      19086>>IF      19086>>IF      19098>>IF      19098>>IF      19127>>IF
     19127>>IF      19127>>IF      19127>>IF      19282>>IF      19282>>IF      19397>>IF      19397>>IF
     19440>>IF      19440>>IF
KZ$LINCTX.PRO.SLAVE
     17860**DCL     18453>>IF      18508>>IF      18591>>IF      19303>>IF      19303>>IF
KZ$LINCTX.PRO.SLC
     17897**DCL     18454>>IF      18508>>IF
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:187  
KZ$LINCTX.PRO.SLCALLBLK
     17900**DCL     18508>>IF
KZ$LINCTX.RCVFCS
     17784**DCL     18532>>IF
KZ$LINCTX.SNDFCS
     17788**DCL     18901>>IF      18917>>ASSIGN  19399<<ASSIGN  19440>>IF
KZ$OTPBFR
     16488**DCL     19308--IF      19387--ASSIGN  19443--ASSIGN  19458<<ASSIGN  19462--ASSIGN
KZ$OTPBFR.BFRSIZ
     16531**DCL     19461<<ASSIGN
KZ$OTPBFR.DATA_SIZ
     16529**DCL     19388>>ASSIGN
KZ$OTPBFR.DEV$
     16539**DCL     19459<<ASSIGN
KZ$OTPBFR.FLAGS.HALT
     16509**DCL     19390>>IF
KZ$OTPBFR.FLAGS.LAST#
     16499**DCL     19420>>IF
KZ$OTPBFR.LNK$
     16489**DCL     19392>>ASSIGN  19395<<ASSIGN
KZ$SDVCTX
     15888**DCL     18746<>CALL
KZ$SDVCTX.ACCESS_METHOD
     16115**DCL     18476>>IF      18979>>IF      19025>>IF      19081>>IF      19123>>IF
KZ$SDVCTX.BRKBYTES
     15985**DCL     18988<<ASSIGN  18988>>ASSIGN  18992>>IF      18996>>ASSIGN  19010<<ASSIGN
KZ$SDVCTX.BRKHD$
     15969**DCL     18986<<ASSIGN  18999>>DOWHILE 19000>>ASSIGN  19004<<ASSIGN
KZ$SDVCTX.BRKTL$
     15980**DCL     18983>>IF      18984>>ASSIGN  18987<<ASSIGN  19009<<ASSIGN
KZ$SDVCTX.DFR.EOFREC
     16094**DCL     18760<<ASSIGN
KZ$SDVCTX.DFRHD$
     15955**DCL     19141<<ASSIGN
KZ$SDVCTX.DFRTL$
     15960**DCL     19138>>IF      19139>>ASSIGN  19142<<ASSIGN
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:188  
KZ$SDVCTX.FLAGS.BINARY_OK
     16041**DCL     19086>>IF
KZ$SDVCTX.FLAGS.BRKRQD
     16047**DCL     19198<<ASSIGN
KZ$SDVCTX.FLAGS.FIRST
     16060**DCL     18482<<ASSIGN  18508>>IF      18521<<ASSIGN
KZ$SDVCTX.FLAGS.OTPBSY
     16064**DCL     19389<<ASSIGN
KZ$SDVCTX.FLAGS.PTS_IN
     16018**DCL     18669>>IF      18869>>IF      19107<<ASSIGN  19134<<ASSIGN  19670>>IF
KZ$SDVCTX.FLAGS.PTS_OUT
     16024**DCL     18702>>IF      18707<<ASSIGN  19303>>IF      19391<<ASSIGN
KZ$SDVCTX.FLAGS.SUSPEND_IN
     16005**DCL     18502>>IF      19039>>IF      19108<<ASSIGN  19116<<ASSIGN  19135<<ASSIGN  19670>>IF
KZ$SDVCTX.FLAGS.SUSPEND_OUT
     16012**DCL     18533<<ASSIGN  18535<<ASSIGN  19303>>IF
KZ$SDVCTX.HOST_BYTES_IN
     16156**DCL     19032<<ASSIGN  19032>>ASSIGN
KZ$SDVCTX.HOST_RECORDS_IN
     16136**DCL     19031<<ASSIGN  19031>>ASSIGN
KZ$SDVCTX.LCLENDPNTID.TERM
     15912**DCL     15921--REDEF
KZ$SDVCTX.LINE_BYTES_IN
     16166**DCL     19168<<ASSIGN  19168>>ASSIGN
KZ$SDVCTX.LINE_RECORDS_IN
     16146**DCL     19167<<ASSIGN  19167>>ASSIGN
KZ$SDVCTX.LNK$
     15889**DCL     18487>>ASSIGN  18537>>ASSIGN  18660>>ASSIGN  18862>>ASSIGN  19292>>ASSIGN  19357>>ASSIGN
     19374>>ASSIGN  19425>>ASSIGN  19488>>ASSIGN  19676>>ASSIGN
KZ$SDVCTX.MGR_TYPE
     16107**DCL     16109--REDEF   18476>>IF      18528>>IF      18654>>IF      18658>>IF      18859>>IF
     19033>>IF      19105>>IF      19670>>IF
KZ$SDVCTX.OTPHD$
     15944**DCL     19308>>IF      19351>>IF      19372>>IF      19378>>IF      19386>>ASSIGN  19387>>ASSIGN
     19388>>ASSIGN  19390>>IF      19392<<ASSIGN  19392>>ASSIGN  19393>>IF      19423>>IF      19486>>IF
KZ$SDVCTX.OTPTL$
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:189  
     15950**DCL     19394<<ASSIGN
KZ$SDVCTX.RCB_CODE
     16125**DCL     18652>>IF      18859>>IF      18896>>IF      18896>>IF      18916>>ASSIGN  19303>>IF
     19303>>IF
KZ$SDVCTX.STATE
     15927**DCL     18500>>IF      18708>>IF      18710<<ASSIGN  18712>>IF      18757<<ASSIGN  19033>>IF
     19109<<ASSIGN  19136<<ASSIGN  19197>>IF      19200>>IF      19231<<ASSIGN  19670>>IF
KZ$SDVCTX.SUSBIT_MASK
     16120**DCL     18532>>IF      18901>>IF      19674>>ASSIGN
KZ$SDVCTX.VDI$
     15934**DCL     18733>>ASSIGN  18733>>ASSIGN  18734>>IF      18735>>ASSIGN  18737>>ASSIGN  18740>>ASSIGN
     18741>>ASSIGN  18741>>ASSIGN  19056>>ASSIGN  19056>>ASSIGN  19057>>IF      19058>>ASSIGN  19060>>ASSIGN
     19063>>ASSIGN  19064>>ASSIGN  19064>>ASSIGN  19070>>IF      19216>>ASSIGN  19216>>ASSIGN  19217>>IF
     19218>>ASSIGN  19220>>ASSIGN  19223>>ASSIGN  19224>>ASSIGN  19224>>ASSIGN  19308>>IF      19308>>IF
     19326>>ASSIGN  19326>>ASSIGN  19327>>IF      19328>>ASSIGN  19330>>ASSIGN  19333>>ASSIGN  19334>>ASSIGN
     19334>>ASSIGN
KZD$BLDEOF
     18403**DCL-ENT 18746--CALL
KZD$TRNCOTPBLK
     18404**DCL-ENT 19339--CALL
KZR$KILL_LINE
     18405**DCL-ENT 18890--CALL    19454--CALL
KZ_INPBFR
     17558**DCL     18975>>ASSIGN  19119>>ASSIGN
KZ_OTPBFR
     17355**DCL     19458>>ASSIGN
KZ_SLCCHR2780PNC
     18431**DCL     18457>>IF
KZ_SLCCHR3780PNC1
     18432**DCL     18457>>IF
L
     18053**DCL     19615<<DOINDEX
LCTX$
     18044**DCL     18439<<ASSIGN  19280<<ASSIGN
M$XXX
     15040**DCL-ENT 19008--CALL
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:190  
N
     18054**DCL     18062--IMP-SIZ 19001<<ASSIGN  19002>>ASSIGN  19002>>ASSIGN  19003>>ASSIGN  19011<<ASSIGN
     19012>>ASSIGN  19012>>ASSIGN  19016>>ASSIGN  19594--IMP-SIZ 19602<<ASSIGN  19603>>ASSIGN  19603>>ASSIGN
     19604>>ASSIGN  19605>>ASSIGN  19612<<ASSIGN  19615>>DOINDEX 19621>>ASSIGN  19622>>ASSIGN  19632--IMP-SIZ
     19636<<ASSIGN  19639>>IF      19640>>ASSIGN  19640>>ASSIGN  19641>>ASSIGN  19644<<ASSIGN  19645>>ASSIGN
     19646>>ASSIGN  19649<<ASSIGN  19653<<ASSIGN  19653>>ASSIGN  19656>>IF      19657>>ASSIGN  19657>>ASSIGN
NEXTI
     18059**DCL     18605<<ASSIGN  18615<<ASSIGN  18969>>IF      18969>>IF      19098>>IF      19127>>IF
     19168>>ASSIGN  19170>>ASSIGN  19637>>DOWHILE
NOBUF
     19177**LABEL   18951--GOTO    18974--CALLALT 18997--CALLALT 19118--CALLALT
NOOTP
     19440**LABEL   19289--GOTO    19356--GOTO    19376--GOTO    19379--GOTO
NXTDV
     19429**LABEL   19424--GOTO
NXT_RECORD
     19166**LABEL   18851--GOTO    19146--GOTO
RECSIZE
     18065**DCL     18579<<ASSIGN  18598<<ASSIGN  18598>>ASSIGN  18602<<ASSIGN  18602>>ASSIGN  18938>>IF
     18944>>IF      18946>>ASSIGN  18953>>ASSIGN  18977>>ASSIGN  18988>>ASSIGN  18996>>ASSIGN  19011>>ASSIGN
     19016<<ASSIGN  19017>>ASSIGN  19032>>ASSIGN  19074>>ASSIGN  19076>>ASSIGN  19077>>IF      19121>>ASSIGN
     19127>>IF      19574<<ASSIGN  19574>>ASSIGN  19578<<ASSIGN  19578>>ASSIGN
SENDEOF
     19105**LABEL   19080--GOTO
SEND_EOFREC
     18714**LABEL   18758--EXIT
SETFCS
     19399**LABEL   19466--GOTO
SKP_HASP
     19562**PROC    18614--CALL    18850--CALL
SNDFCS
     18064**DCL     19399>>ASSIGN  19400>>ASSIGN  19440>>IF      19667<<ASSIGN  19674<<ASSIGN  19674>>ASSIGN
SNDOTP
     19386**LABEL   19352--GOTO    19373--GOTO
STRNG IN PROCEDURE DCMPRS_BSC
     19632**DCL     19640<<ASSIGN  19640>>ASSIGN  19645<<ASSIGN  19657<<ASSIGN  19657>>ASSIGN
PL6.E3A0      #001=KZL$DBLK File=KZL$DBLK.:E05TSI                                WED 07/30/97 02:55 Page:191  
STRNG IN PROCEDURE DCMPRS_HASP
     19594**DCL     19603<<ASSIGN  19603>>ASSIGN  19621<<ASSIGN
SZ
     18066**DCL     18946<<ASSIGN  18947<>CALL    18973<<ASSIGN  18974<>CALL    18996<<ASSIGN  18997<>CALL
     19117<<ASSIGN  19118<>CALL    19181>>ASSIGN  19443<<ASSIGN  19444<>CALL    19452>>ASSIGN  19461>>ASSIGN
T$
     18057**DCL     16553--IMP-PTR 18974<>CALL    18975>>ASSIGN  18976>>ASSIGN  18977>>ASSIGN  18978>>ASSIGN
     18980>>ASSIGN  18982>>ASSIGN  18984>>ASSIGN  18986>>ASSIGN  18987>>ASSIGN  19000<<ASSIGN  19001>>ASSIGN
     19002>>ASSIGN  19004>>ASSIGN  19005>>CALL    19005>>CALL    19006<>CALL    19118<>CALL    19119>>ASSIGN
     19120>>ASSIGN  19121>>ASSIGN  19122>>ASSIGN  19124>>ASSIGN  19126>>ASSIGN  19133>>ASSIGN  19139>>ASSIGN
     19141>>ASSIGN  19142>>ASSIGN
VDH_ENTERED
     18058**DCL     19038<<ASSIGN  19069<<ASSIGN  19145>>IF
X
     18049**DCL     18493<<ASSIGN  18507<<ASSIGN  18517<<ASSIGN  18520<<ASSIGN  18542<<ASSIGN  18577>>DOWHILE
     18578>>ASSIGN  18634>>IF      18639>>IF      18639>>IF      18652>>IF      18653>>IF      18665>>IF
     18681>>ASSIGN  18682>>ASSIGN  18770>>ASSIGN  18771>>ASSIGN  18791>>IF      18812>>IF      18833>>ASSIGN
     18834>>ASSIGN  18859>>IF      18877>>ASSIGN  18878>>ASSIGN  18963>>ASSIGN  19022>>ASSIGN  19024>>ASSIGN
     19086>>IF      19168>>ASSIGN  19170<<ASSIGN  19557<<ASSIGN
