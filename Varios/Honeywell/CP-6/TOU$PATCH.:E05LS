VERSION E05

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:1    
        1        1        /*M* TOU$PATCH     DEckfile Editor Routine PATCH Function */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$PATCH
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEckfile Editor Routine PATCH Function
       14       14              DESCRIPTION: This program is called when the PATCH function
       15       15                           is invoked by the CP-6 deckfile editor driver.
       16       16                           This program adds patch cards to  object decks
       17       17                           in the CP-6 deckfile.
       18       18              REFERENCE:   CP-6 Release C0M0
       19       19              LAST UPDATE: 10/27/83
       20       20        */
       21       21        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:2    
       22       22        /*F*  NAME:        TOU$PATCH
       23       23              DESCRIPTION: Procedure Nesting Hierarchy
       24       24
       25       25              TOU$PATCH: procedure
       26       26                 P_INIT_DUP: procedure
       27       27                 P_COMMAND_SETUP: procedure
       28       28                 P_FIND_DECK: procedure ALTRET
       29       29                 P_PATCH_DECK: procedure ALTRET
       30       30                    P_SET_BCD#: procedure
       31       31                    P_CHECK_NEW_ADDRESSES: procedure ALTRET
       32       32                    P_CHECK_PATCHED_ADDRESSES: procedure ALTRET
       33       33                    P_GET_TEMP_LIST: procedure ALTRET
       34       34                    P_FORM_TEMP_LIST: procedure (START, STOP) ALTRET
       35       35                    P_REFORM_BCD_LIST: procedure ALTRET
       36       36                    P_FREE_TEMP_LIST: procedure ALTRET
       37       37                    P_APPEND_DKEND: procedure ALTRET
       38       38                    P_SAVE_CHANGED_DECK: procedure ALTRET
       39       39                    P_SETUP_PRINT: procedure
       40       40                    P-PRINT_DECK_LINE: procedure
       41       41        */
       42       42        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:3    
       43       43        TOU$PATCH: PROC ;
       44       44
       45       45        /* Include Files */
       46       46
       47       47           %INCLUDE TOU_DEER_M ;
       48     1458           %INCLUDE TOU_RQSTS_E ;
       49     1533           %INCLUDE TO_PERR_C ;
       50     2118           %INCLUDE XU_MACRO_C ;
       51     5224
       52     5225        /* Macros */
       53     5226
       54     5227           %DUP (STCLASS = SYMREF) ;
       55     5370           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
       56     5382           %BCD_KEY (STCLASS = SYMREF) ;
       57     5396           %BINARY_KEY (STCLASS = SYMREF) ;
       58     5410           %DKEND (STCLASS = SYMREF) ;
       59     5434           %ID (STCLASS = SYMREF) ;
       60     5451           %OBJECT (STCLASS = SYMREF) ;
       61     5514           %OBJECT_KEY (STCLASS = SYMREF) ;
       62     5527           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
       63     5541           %OBJECT_SEARCH_KEY (STCLASS = SYMREF) ;
       64     5553
       65     5554        /* Variables */
       66     5555
       67     5556    1      DCL BCD#           UBIN WORD SYMREF ;
       68     5557    1      DCL BIN#           UBIN WORD SYMREF ;
       69     5558    1      DCL CUR#           UBIN WORD SYMREF ;
       70     5559    1      DCL OVERWRITE      BIT (1) CALIGNED ;
       71     5560    1      DCL RETAIN         BIT (1) CALIGNED ;
       72     5561           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:4    
       73     5562        /* External Entry Points */
       74     5563
       75     5564    1      DCL TOU$DU_SET_IFAD_FID            ENTRY ALTRET ;
       76     5565    1      DCL TOU$DU_OPEN_IFAD               ENTRY ALTRET ;
       77     5566    1      DCL TOU$DU_CLOSE_IFAD              ENTRY ALTRET ;
       78     5567
       79     5568    1      DCL TOU$DU_SET_DF_FID              ENTRY ALTRET ;
       80     5569    1      DCL TOU$DU_OPEN_DF                 ENTRY ALTRET ;
       81     5570    1      DCL TOU$DU_CLOSE_DF                ENTRY ALTRET ;
       82     5571
       83     5572    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
       84     5573    1      DCL TOU$DU_PRINTER_WRITE           ENTRY ALTRET ;
       85     5574    1      DCL TOU$DU_GET_DATA_SEGMENT        ENTRY ALTRET ;
       86     5575    1      DCL TOU$DU_FREE_DATA_SEGMENT       ENTRY ALTRET ;
       87     5576    1      DCL TOU$DU_SET_EDIT_PROMPT         ENTRY ALTRET ;
       88     5577    1      DCL TOU$DU_SET_PROMPT              ENTRY ALTRET ;
       89     5578    1      DCL TOU$DU_UPDATE_LOG              ENTRY ALTRET ;
       90     5579
       91     5580    1      DCL TOU$CHECKSUM                   ENTRY (4) ALTRET ;
       92     5581    1      DCL TOU$REFORM_DECK_CHECKSUM       ENTRY (4) ALTRET ;
       93     5582
       94     5583    1      DCL TOU$CLEAR_IFAD                 ENTRY ALTRET ;
       95     5584    1      DCL TOU$GET_PATCH_CARDS            ENTRY ALTRET ;
       96     5585    1      DCL TOU$B_SHOW_DCBS                ENTRY ALTRET ;
       97     5586    1      DCL TOU$B_PRINT_DECK_LINE          ENTRY ALTRET ;
       98     5587           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:5    
       99     5588        /* External Entry Points */
      100     5589
      101     5590    1      DCL TOU$DFU_DF_DL_DECK             ENTRY ALTRET ;
      102     5591    1      DCL TOU$DFU_DF_CHECK_FOR_KEY       ENTRY ALTRET ;
      103     5592    1      DCL TOU$DFU_DF_RD_BINARY           ENTRY ALTRET ;
      104     5593    1      DCL TOU$DFU_DF_RD_BCD_CARDS        ENTRY ALTRET ;
      105     5594    1      DCL TOU$DFU_DF_RD_OBJECT_REFLIST   ENTRY ALTRET ;
      106     5595    1      DCL TOU$DFU_DF_RD_LOG              ENTRY ALTRET ;
      107     5596    1      DCL TOU$DFU_DF_WR_OBJECT           ENTRY ALTRET ;
      108     5597    1      DCL TOU$DFU_DF_WR_BINARY           ENTRY ALTRET ;
      109     5598    1      DCL TOU$DFU_DF_WR_BCD_CARDS        ENTRY ALTRET ;
      110     5599    1      DCL TOU$DFU_DF_WR_OBJECT_REFLIST   ENTRY ALTRET ;
      111     5600    1      DCL TOU$DFU_DF_WR_LOG              ENTRY ALTRET ;
      112     5601           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:6    
      113     5602        /* ********************
      114     5603           ********************
      115     5604           **  Main Program  **
      116     5605           ********************
      117     5606           ******************** */
      118     5607
      119     5608    1      CALL P_INIT_DUP ;
      120     5609    1      CALL P_COMMAND_SETUP ALTRET (ERROR_RETURN) ;
      121     5610    1      CALL TOU$B_SHOW_DCBS ;
      122     5611    1      CALL TOU$DU_OPEN_DF ALTRET (ERROR_RETURN) ;
      123     5612    1      CALL P_FIND_DECK ALTRET (ERROR_RETURN) ;
      124     5613    1      CALL P_PATCH_DECK ALTRET (ERROR_RETURN) ;
      125     5614    1      CALL TOU$DU_CLOSE_DF ALTRET (ERROR_RETURN) ;
      126     5615
      127     5616        /* NORMAL_RETURN: */
      128     5617    1      DUP.MSG_CODE = %T$P_SUCCESS;
      129     5618    1      CALL TOU$DU_USER_WRITE ;
      130     5619    1      RETURN ;
      131     5620
      132     5621    1   ERROR_RETURN:
      133     5622    1      CALL TOU$DU_CLOSE_DF ;
      134     5623    1      DUP.MSG_CODE = %T$P_FAILURE;
      135     5624    1      CALL TOU$DU_USER_WRITE ;
      136     5625    1      RETURN ;
      137     5626
      138     5627        /* ********************
      139     5628           ********************
      140     5629           **  End Of  Main  **
      141     5630           ********************
      142     5631           ******************** */
      143     5632        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:7    
      144     5633        /*I*  NAME:        P_INIT_DUP
      145     5634              AUTHOR:      Scott S. Sheppard
      146     5635              PURPOSE:     Initilization
      147     5636              INTERFACE:   None called.
      148     5637              INPUT:       Set of system equates.
      149     5638              OUTPUT:      DUP
      150     5639                           RETAIN
      151     5640                           OVERWRITE
      152     5641              DESCRIPTION: This procedure initializes variables to
      153     5642                           appropriate starting values.
      154     5643        */
      155     5644
      156     5645    1   P_INIT_DUP: PROC ;
      157     5646
      158     5647        /* Code */
      159     5648
      160     5649    2      DUP.HDR_CODE = %H$PATCH ;
      161     5650    2      DUP.LINE_VFC = %SKIP_WRITE ;
      162     5651    2      DUP.FORCE_NEW_PAGE = %TRUE ;
      163     5652    2      DUP.IFAD.ME_ALLOWED = %TRUE ;
      164     5653    2      DUP.IFAD.ENTERED = %FALSE ;
      165     5654    2      DUP.DF.ENTERED = %FALSE ;
      166     5655    2      DUP.DF.OPEN_TYPE = %UPDATE_FILE ;
      167     5656    2      DUP.DF.REPORT_ERROR = %FALSE ;
      168     5657    2      DUP.DF.CLOSE_TYPE = %SAVE_FILE ;
      169     5658    2      RETAIN = %FALSE ;
      170     5659    2      OVERWRITE = %FALSE ;
      171     5660    2      RETURN ;
      172     5661
      173     5662    2   END P_INIT_DUP ;
      174     5663        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:8    
      175     5664        /*I*  NAME:        P_COMMAND_SETUP
      176     5665              AUTHOR:      Scott S. Sheppard
      177     5666              PURPOSE:     Sets up PATCH Command
      178     5667              INTERFACE:   TOU$DU_SET_IFAD_FID
      179     5668                           TOU$DU_SET_DF_FID
      180     5669              INPUT:       DUP.CMD$ - pointer to the parse control block
      181     5670              OUTPUT:      DUP.DF.HOLD_AREA
      182     5671                           DUP.DF.HOLD_AREA_LGTH
      183     5672                           DUP.IFAD.ENTERED
      184     5673                           DUP.DF.ENTERED
      185     5674                           OBJECT_SEARCH_KEY
      186     5675                           RETAIN
      187     5676                           OVERWRITE
      188     5677              DESCRIPTION: This procedure sets up the PATCH command from the
      189     5678                           information entered by the user.    DUP.CMD$ is a
      190     5679                           pointer to a   parse control block  that contains
      191     5680                           the tokens entered by the user.
      192     5681                           COMMAND FORMS:
      193     5682              Case 1: P <object key> [(options)]
      194     5683              Case 2: P <patch fid> <object key> [(options)]
      195     5684              Case 3: P <object key> INTO <deckfile fid> [(options)]
      196     5685              Case 4: P <patch fid> <object key> INTO <deckfile fid> [(options)]
      197     5686        */
      198     5687
      199     5688    1   P_COMMAND_SETUP: PROC ALTRET ;
      200     5689
      201     5690    2      DCL OUTBLK#                    UBIN WORD ALIGNED ;
      202     5691    2      DCL OUTBLK$                    PTR ALIGNED ;
      203     5692    2      DCL OPT#                       UBIN WORD ALIGNED ;
      204     5693    2      DCL OPT$                       PTR ALIGNED ;
      205     5694           %PARSE$OUT (STCLASS = BASED) ;
      206     5739           %PARSE$SYM (STCLASS = BASED) ;
      207     5777           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:9    
      208     5778        /* Code */
      209     5779
      210     5780    3      DO OUTBLK# = 0 TO DUP.CMD$ -> OUT$BLK.NSUBLKS - 1 ;
      211     5781    3         OUTBLK$ = DUP.CMD$ -> OUT$BLK.SUBLK$(OUTBLK#) ;
      212     5782    4         DO CASE (OUTBLK$ -> OUT$BLK.CODE) ;
      213     5783    4            CASE (%IFAD_FID) ;
      214     5784    4               DUP.IFAD.ENTERED = %TRUE ;
      215     5785    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;
      216     5786    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;
      217     5787    4               CALL TOU$DU_SET_IFAD_FID ALTRET (ERROR) ;
      218     5788    4            CASE (%OBJKEY) ;
      219     5789    4               OBJECT_SEARCH_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;
      220     5790    4            CASE (%DECKFILE_FID) ;
      221     5791    4               DUP.DF.ENTERED = %TRUE ;
      222     5792    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;
      223     5793    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;
      224     5794    4               CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;
      225     5795    4            CASE (%PATCH_OPTS) ;
      226     5796    5               DO OPT# = 0 TO OUTBLK$ -> OUT$BLK.NSUBLKS - 1 ;
      227     5797    5                  OPT$ = OUTBLK$ -> OUT$BLK.SUBLK$(OPT#) ;
      228     5798    6                  DO CASE (OPT$ -> OUT$BLK.CODE) ;
      229     5799    6                     CASE (%RETAIN) ;
      230     5800    6                        RETAIN = %TRUE ;
      231     5801    6                     CASE (%OVERWRITE) ;
      232     5802    6                        OVERWRITE = %TRUE ;
      233     5803    6                  END /* CASE */ ;
      234     5804    5               END /* DO */ ;
      235     5805    4         END /* CASE */ ;
      236     5806    3      END /* DO */ ;
      237     5807           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:10   
      238     5808    2      IF DUP.IFAD.ENTERED
      239     5809    2      THEN /* FID set from DEER command */ ;
      240     5810    2      ELSE CALL TOU$DU_SET_IFAD_FID ALTRET (ERROR) ;
      241     5811
      242     5812    2      IF DUP.DF.ENTERED
      243     5813    2      THEN /* FID set from DEER command */ ;
      244     5814    2      ELSE CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;
      245     5815    2      RETURN ;
      246     5816
      247     5817    2   ERROR:
      248     5818    2      ALTRETURN ;
      249     5819
      250     5820    2   END P_COMMAND_SETUP ;
      251     5821        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:11   
      252     5822        /*I*  NAME:        P_FIND_DECK
      253     5823              AUTHOR:      Scott S. Sheppard
      254     5824              PURPOSE:     Locates Object Deck
      255     5825              INTERFACE:   TOU$DFU_DF_CHECK_FOR_KEY
      256     5826                           TOU$DFU_DF_RD_BINARY
      257     5827                           TOU$DFU_DF_RD_BCD_CARDS
      258     5828                           TOU$DFU_DF_RD_OBJECT_REFLIST
      259     5829                           TOU$DFU_DF_RD_LOG
      260     5830                           TOU$DU_USER_WRITE
      261     5831              INPUT:       OBJECT_SEARCH_KEY
      262     5832                           OBJECT
      263     5833              OUTPUT:      OBJECT_KEY
      264     5834                           BINARY_KEY
      265     5835                           BIN#
      266     5836                           BCD_KEY
      267     5837                           BCD#
      268     5838                           DKEND
      269     5839                           ID.REVISION
      270     5840                           DUP.MSG_CODE
      271     5841              DESCRIPTION: This procedure locates and reads all of the records
      272     5842                           of the object deck to be patched.
      273     5843        */
      274     5844        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:12   
      275     5845    1   P_FIND_DECK: PROC ALTRET ;
      276     5846
      277     5847        /* Code */
      278     5848
      279     5849    2      OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;
      280     5850    2      CALL TOU$DFU_DF_CHECK_FOR_KEY ALTRET (NOT_FOUND) ;
      281     5851
      282     5852    2      BINARY_KEY.DECK# = OBJECT.DECK# ;
      283     5853    2      BIN# = OBJECT.BINARY_COUNT ;
      284     5854    2      CALL TOU$DFU_DF_RD_BINARY ALTRET (ERROR) ;
      285     5855
      286     5856    2      BCD_KEY.DECK# = OBJECT.DECK# ;
      287     5857    2      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;
      288     5858    2      CALL TOU$DFU_DF_RD_BCD_CARDS ALTRET (ERROR) ;
      289     5859    2      DKEND_ = BCD_B(BCD# - 1) ;
      290     5860    2      ID.REVISION = DKEND.BCD.REVISION ;
      291     5861
      292     5862    2      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;
      293     5863    2      CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;
      294     5864
      295     5865    2      CALL TOU$DFU_DF_RD_LOG ALTRET (ERROR) ;
      296     5866    2      RETURN ;
      297     5867
      298     5868    2   NOT_FOUND:
      299     5869    2      DUP.MSG_CODE = %E$DFD_NO_OBJ_IN_DF ;
      300     5870    2      CALL TOU$DU_USER_WRITE ;
      301     5871    2   ERROR:
      302     5872    2      ALTRETURN ;
      303     5873
      304     5874    2   END P_FIND_DECK ;
      305     5875        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:13   
      306     5876        /*I*  NAME:        P_PATCH_DECK
      307     5877              AUTHOR:      Scott S. Sheppard
      308     5878              PURPOSE:     Patch Deck Driver
      309     5879              INTERFACE:   P_SET_BCD#
      310     5880                           P_CHECK_NEW_ADDRESSES
      311     5881                           P_CHECK_PATCHED_ADDRESSES
      312     5882                           P_APPEND_DKEND
      313     5883                           P_SAVE_CHANGED_DECK
      314     5884                           P_SETUP_PRINT
      315     5885                           P_PRINT_PATCHED_DECK
      316     5886                           TOU$DU_OPEN_IFAD
      317     5887                           TOU$DU_CLOSE_IFAD
      318     5888                           TOU$CLEAR_IFAD
      319     5889                           TOU$GET_PATCH_CARDS
      320     5890                           TOU$B_PRINT_DECK_LINE
      321     5891              INPUT:       RETAIN
      322     5892              OUTPUT:      DUP.BREAK_DISABLED
      323     5893              DESCRIPTION: This procedure is the driver which obtains the patch
      324     5894                           input and saves it in the deckfile.
      325     5895        */
      326     5896
      327     5897    1   P_PATCH_DECK: PROC ALTRET ;
      328     5898
      329     5899    2      DCL 1 TEMP_V DALIGNED,
      330     5900    2            2 FLAGS   UBIN WORD UNAL,
      331     5901    2            2 PTR$    PTR UNAL ;
      332     5902           %BCD_B (NAME = TEMP_B,
      333     5903                   STCLASS = "BASED (TEMP_V.PTR$)") ;
      334     5915    2      DCL TEMP#       UBIN WORD ALIGNED ;
      335     5916    2      DCL TEMP_SIZE   UBIN WORD ALIGNED ;
      336     5917    2      DCL 1 MATCH ALIGNED,
      337     5918    2            2 COUNT   UBIN WORD UNAL,
      338     5919    2            2 INDEXES (0:%(MAX_PATCHES - 1)) UBIN BYTE UNAL ;
      339     5920    2      DCL FIRST_NEW#  UBIN WORD ALIGNED ;
      340     5921           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:14   
      341     5922        /* Code */
      342     5923
      343     5924    2      CALL P_SET_BCD# ;
      344     5925    2      CALL TOU$DU_OPEN_IFAD ALTRET (ERROR) ;
      345     5926    2      CALL TOU$CLEAR_IFAD ;
      346     5927    2      DUP.HOLD_AREA = 'Enter Patch: ' ;
      347     5928    2      DUP.HOLD_AREA_LGTH = 13 ;
      348     5929    2      CALL TOU$DU_SET_PROMPT ;
      349     5930    2      CALL TOU$GET_PATCH_CARDS ALTRET (ERROR) ;
      350     5931    2      CALL TOU$DU_SET_EDIT_PROMPT ;
      351     5932    2      CALL TOU$DU_CLOSE_IFAD ALTRET (ERROR) ;
      352     5933    2      CALL P_CHECK_NEW_ADDRESSES ALTRET (ERROR) ;
      353     5934    2      IF RETAIN
      354     5935    2      THEN CALL P_CHECK_PATCHED_ADDRESSES ALTRET (ERROR) ;
      355     5936    2      ELSE /* No previously patched addresses to check */ ;
      356     5937    2      CALL P_APPEND_DKEND ;
      357     5938
      358     5939    2      DUP.BREAK_DISABLED = %TRUE ;
      359     5940    2      CALL P_SAVE_CHANGED_DECK ALTRET (ERROR) ;
      360     5941    2      CALL P_SETUP_PRINT ;
      361     5942    2      CALL TOU$B_PRINT_DECK_LINE ;
      362     5943    2      CALL P_PRINT_PATCHED_DECK ;
      363     5944    2      DUP.BREAK_DISABLED = %FALSE ;
      364     5945    2      RETURN ;
      365     5946
      366     5947    2   ERROR:
      367     5948    2      CALL TOU$DU_CLOSE_IFAD ;
      368     5949    2      CALL TOU$DU_SET_EDIT_PROMPT ;
      369     5950    2      DUP.BREAK_DISABLED = %FALSE ;
      370     5951    2      ALTRETURN ;
      371     5952
      372     5953    2   /* END P_PATCH_DECK */ ;
      373     5954        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:15   
      374     5955        /*I*  NAME:        P_SET_BCD#
      375     5956              AUTHOR:      Scott S. Sheppard
      376     5957              PURPOSE:     Sets BCD array index
      377     5958              INTERFACE:   None Called.
      378     5959              INPUT:       RETAIN
      379     5960              OUTPUT:      BCD#
      380     5961                           FIRST_NEW#
      381     5962              DESCRIPTION: This procedure sets the BCD# to be used as an index into
      382     5963                           the BCD_B array when storing PATCH cards.   Setting BCD#
      383     5964                           to  zero  allows new patch cards to be added to the list
      384     5965                           replacing any existing ones.
      385     5966        */
      386     5967
      387     5968    2   P_SET_BCD#: PROC ;
      388     5969
      389     5970        /* Code */
      390     5971
      391     5972    3      IF RETAIN
      392     5973    3      THEN BCD# = BCD# - 1 ;
      393     5974    3      ELSE BCD# = 0 ;
      394     5975    3      FIRST_NEW# = BCD# ;
      395     5976    3      RETURN ;
      396     5977
      397     5978    3   END P_SET_BCD# ;
      398     5979        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:16   
      399     5980        /*I*  NAME:        P_CHECK_NEW_ADDRESSES
      400     5981              AUTHOR:      Scott S. Sheppard
      401     5982              PURPOSE:     Validates New Patches from IFAD
      402     5983              INTERFACE:   P_GET_TEMP_LIST
      403     5984                           P_FORM_TEMP_LIST
      404     5985                           P_FREE_TEMP_LIST
      405     5986                           TOU$DU_USER_WRITE
      406     5987              INPUT:       MATCH.COUNT - number of duplicate addresses
      407     5988                           MATCH.INDEXES - indexes into BCD_B array
      408     5989                           FIRST_NEW# - index of first new BCD card
      409     5990                           BCD# - total number of BCD cards
      410     5991              OUTPUT:      DUP.MSG_CODE
      411     5992                           CUR#
      412     5993                           BCD_B
      413     5994              DESCRIPTION: This procedure ensures that no two patches from theset of
      414     5995                           new patches modify the same object deck address.
      415     5996        */
      416     5997
      417     5998    2   P_CHECK_NEW_ADDRESSES: PROC ALTRET ;
      418     5999
      419     6000    3      DCL MATCH_INX   UBIN WORD ALIGNED ;
      420     6001           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:17   
      421     6002        /* Code */
      422     6003
      423     6004    3      IF FIRST_NEW# = BCD#
      424     6005    4      THEN DO ;
      425     6006    4              DUP.MSG_CODE = %E$PCNA_NONE_INPUT ;
      426     6007    4              CALL TOU$DU_USER_WRITE ;
      427     6008    4              ALTRETURN ;
      428     6009    4           END /* THEN */ ;
      429     6010    4      ELSE DO ;
      430     6011    4              CALL P_GET_TEMP_LIST ALTRET (ERROR) ;
      431     6012    4              CALL P_FORM_TEMP_LIST (FIRST_NEW#, BCD# - 1) ;
      432     6013    4              IF MATCH.COUNT > 0
      433     6014    5              THEN DO ;
      434     6015    5                      DUP.MSG_CODE = %E$PCNA_SAME_ADDRESS ;
      435     6016    5                      CALL TOU$DU_USER_WRITE ;
      436     6017    6                      DO MATCH_INX = 0 TO MATCH.COUNT - 1 ;
      437     6018    6                         SUBSTR (BCD_B(MATCH.INDEXES(MATCH_INX)), 42, 17) =
      438     6019    6                                 '*** duplicate ***' ;
      439     6020    6                      END /* DO */ ;
      440     6021    5                      DUP.MSG_CODE = %T$B_PATCH ;
      441     6022    6                      DO CUR# = FIRST_NEW# TO BCD# - 1 ;
      442     6023    6                         CALL TOU$DU_USER_WRITE ;
      443     6024    6                      END /* DO */ ;
      444     6025    5                      CALL P_FREE_TEMP_LIST ;
      445     6026    5   ERROR:
      446     6027    5                      ALTRETURN ;
      447     6028    5                   END /* THEN */ ;
      448     6029    5              ELSE DO ;
      449     6030    5                      CALL P_FREE_TEMP_LIST ALTRET (ERROR) ;
      450     6031    5                      RETURN ;
      451     6032    5                   END /* ELSE */ ;
      452     6033    4           END /* ELSE */ ;
      453     6034
      454     6035    3   END P_CHECK_NEW_ADDRESSES ;
      455     6036        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:18   
      456     6037        /*I*  NAME:        P_CHECK_PATCHED_ADDRESSES
      457     6038              AUTHOR:      Scott S. Sheppard
      458     6039              PURPOSE:     Validates All Patches from IFAD
      459     6040              INTERFACE:   P_GET_TEMP_LIST
      460     6041                           P_FORM_TEMP_LIST
      461     6042                           P_FREE_TEMP_LIST
      462     6043                           TOU$DU_USER_WRITE
      463     6044              INPUT:       MATCH.COUNT - number of duplicate addresses
      464     6045                           MATCH.INDEXES - indexes into BCD_B array
      465     6046                           BCD# - total number of BCD cards
      466     6047              OUTPUT:      DUP.MSG_CODE
      467     6048                           CUR# - set so TOU$REPLACE will print the right entry
      468     6049                                  of BCD_B when a '~PATCH' is encountered
      469     6050                           DUP.ERROR_IMAGE - set so TOU$REPLACE will print theTEMP_B
      470     6051                                             entry for '~PTCH2'
      471     6052              DESCRIPTION: This procedure ensures that no two patches from theset of
      472     6053                           new patches  and  existing patches modify the same object
      473     6054                           deck address.
      474     6055        */
      475     6056        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:19   
      476     6057    2   P_CHECK_PATCHED_ADDRESSES: PROC ALTRET ;
      477     6058
      478     6059    3      DCL MATCH_INX   UBIN WORD ALIGNED ;
      479     6060
      480     6061        /* Code */
      481     6062
      482     6063    3      CALL P_GET_TEMP_LIST ALTRET (ERROR) ;
      483     6064    3      CALL P_FORM_TEMP_LIST (0, BCD# - 1) ;
      484     6065    3      IF MATCH.COUNT > 0
      485     6066    3      THEN IF OVERWRITE
      486     6067    3         THEN CALL P_REFORM_BCD_LIST ;
      487     6068    4         ELSE DO ;
      488     6069    4                 DUP.MSG_CODE = %E$PCPA_SAME_ADDRESS ;
      489     6070    4                 CALL TOU$DU_USER_WRITE ;
      490     6071    5                 DO MATCH_INX = 0 TO MATCH.COUNT - 1 ;
      491     6072    5                    SUBSTR (BCD_B(MATCH.INDEXES(MATCH_INX)), 42, 19) =
      492     6073    5                            '* already patched *' ;
      493     6074    5                 END /* DO */ ;
      494     6075    4                 DUP.MSG_CODE = %T$B_PATCH ;
      495     6076    5                 DO CUR# = 0 TO BCD# - 1 ;
      496     6077    5                    CALL TOU$DU_USER_WRITE ;
      497     6078    5                 END /* DO */ ;
      498     6079    4                 CALL P_FREE_TEMP_LIST ;
      499     6080    4   ERROR:
      500     6081    4                 ALTRETURN ;
      501     6082    4              END /* ELSE */ ;
      502     6083    3      ELSE /* All old and new patches modify unique addresses */ ;
      503     6084    3      CALL P_FREE_TEMP_LIST ALTRET (ERROR) ;
      504     6085    3      RETURN ;
      505     6086
      506     6087    3   END P_CHECK_PATCHED_ADDRESSES ;
      507     6088        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:20   
      508     6089        /*I*  NAME:        P_GET_TEMP_LIST
      509     6090              AUTHOR:      Scott S. Sheppard
      510     6091              PURPOSE:     Gets Space for temporary list of BCD cards
      511     6092              INTERFACE:   TOU$DU_GET_DATA_SEGMENT
      512     6093              INPUT:       MAX_PATCHES
      513     6094                           BCD_RCD_LGTH
      514     6095              OUTPUT:      TEMP_V
      515     6096                           TEMP_SIZE
      516     6097                           DUP.DS_V
      517     6098                           DUP.NUM_WORDS
      518     6099              DESCRIPTION: This procedure acquires space for a temporary list of BCD
      519     6100                           cards.
      520     6101        */
      521     6102
      522     6103    2   P_GET_TEMP_LIST: PROC ALTRET ;
      523     6104
      524     6105    3   /* Code */ ;
      525     6106
      526     6107    3      TEMP_V.FLAGS = 0 ;
      527     6108    3      TEMP_V.PTR$ = ADDR(NIL) ;
      528     6109    3      TEMP_SIZE = (%MAX_PATCHES * %BCD_RCD_LGTH) / 4 ;
      529     6110    3      DUP.DS_V = TEMP_V ;
      530     6111    3      DUP.NUM_WORDS = TEMP_SIZE ;
      531     6112    3      CALL TOU$DU_GET_DATA_SEGMENT ALTRET (ERROR) ;
      532     6113    3      TEMP_V = DUP.DS_V ;
      533     6114    3      RETURN ;
      534     6115
      535     6116    3   ERROR:
      536     6117    3      ALTRETURN ;
      537     6118
      538     6119    3   END P_GET_TEMP_LIST ;
      539     6120        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:21   
      540     6121        /*I*  NAME:        P_FORM_TEMP_LIST
      541     6122              AUTHOR:      Scott S. Sheppard
      542     6123              PURPOSE:     Forms a list of Unique Patch Cards
      543     6124              INTERFACE:   None called.
      544     6125              INPUT:       BCD_B
      545     6126                           BCD#
      546     6127              OUTPUT:      TEMP_B
      547     6128                           TEMP#
      548     6129                           MATCH
      549     6130              DESCRIPTION: This procedure forms a temporary list of BCD cards
      550     6131                           omitting an  earlier  patches that modify the same
      551     6132                           deck address.
      552     6133        */
      553     6134        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:22   
      554     6135    2   P_FORM_TEMP_LIST: PROC (FIRST, LAST) ;
      555     6136
      556     6137    3      DCL FIRST     UBIN WORD ALIGNED ;
      557     6138    3      DCL LAST      UBIN WORD ALIGNED ;
      558     6139    3      DCL BCD_INX   SBIN WORD ALIGNED ;
      559     6140    3      DCL TEMP_INX  SBIN WORD ALIGNED ;
      560     6141    3      DCL FOUND     BIT (1) CALIGNED ;
      561     6142
      562     6143        /* Code */
      563     6144
      564     6145    3      TEMP_B(0) = BCD_B(LAST) ;
      565     6146    3      TEMP# = 1 ;
      566     6147    3      MATCH.COUNT = 0 ;
      567     6148    4      DO BCD_INX = LAST - 1 DOWNTO FIRST BY -1 ;
      568     6149    4         FOUND = %FALSE ;
      569     6150    4         TEMP_INX = 0 ;
      570     6151    5         DO WHILE (~FOUND & TEMP_INX < TEMP#) ;
      571     6152    5            IF SUBSTR (BCD_B(BCD_INX), 0, 6) = SUBSTR (TEMP_B(TEMP_INX), 0, 6)
      572     6153    6            THEN DO ;
      573     6154    6                    FOUND = %TRUE ;
      574     6155    6                    MATCH.INDEXES(MATCH.COUNT) = BCD_INX ;
      575     6156    6                    MATCH.COUNT = MATCH.COUNT + 1 ;
      576     6157    6                 END /* THEN */ ;
      577     6158    5            ELSE TEMP_INX = TEMP_INX + 1 ;
      578     6159    5         END /* DO */ ;
      579     6160    4         IF FOUND
      580     6161    4         THEN /* do not add duplicate entry to the TEMP array */ ;
      581     6162    5         ELSE DO ;
      582     6163    5                 TEMP_B(TEMP#) = BCD_B(BCD_INX) ;
      583     6164    5                 TEMP# = TEMP# + 1 ;
      584     6165    5              END /* ELSE */ ;
      585     6166    4      END /* DO */ ;
      586     6167    3      RETURN ;
      587     6168
      588     6169    3   END P_FORM_TEMP_LIST ;
      589     6170        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:23   
      590     6171        /*I*  NAME:        P_REFORM_BCD_LIST
      591     6172              AUTHOR:      Scott S. Sheppard
      592     6173              PURPOSE:     Re-assigns BCD list
      593     6174              INTERFACE:   TOU$DU_USER_WRITE
      594     6175              INPUT:       TEMP_B
      595     6176                           TEMP#
      596     6177              OUTPUT:      DUP.MSG_CODE
      597     6178                           BCD_B
      598     6179                           BCD#
      599     6180              DESCRIPTION: This procedure assigns the BCD list from the temporary list.
      600     6181        */
      601     6182
      602     6183    2   P_REFORM_BCD_LIST: PROC ;
      603     6184
      604     6185    3      DCL I          UBIN WORD ALIGNED ;
      605     6186
      606     6187        /* Code */
      607     6188
      608     6189    3      DUP.MSG_CODE = %T$P_OVERWRITE ;
      609     6190    3      CALL TOU$DU_USER_WRITE ;
      610     6191    3      DUP.MSG_CODE = %T$B_PATCH ;
      611     6192    4      DO I = 0 TO MATCH.COUNT - 1 ;
      612     6193    4         CUR# = MATCH.INDEXES(I) ;
      613     6194    4         SUBSTR (BCD_B(CUR#), 42, 17) = '** overwritten **' ;
      614     6195    4         CALL TOU$DU_USER_WRITE ;
      615     6196    4      END /* DO */ ;
      616     6197
      617     6198    4      DO I = 0 TO TEMP# - 1 ;
      618     6199    4         BCD_B(I) = TEMP_B(TEMP# - 1 - I) ;
      619     6200    4      END /* DO */ ;
      620     6201    3      BCD# = TEMP# ;
      621     6202    3      RETURN ;
      622     6203
      623     6204    3   END P_REFORM_BCD_LIST ;
      624     6205        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:24   
      625     6206        /*I*  NAME:        P_FREE_TEMP_LIST
      626     6207              AUTHOR:      Scott S. Sheppard
      627     6208              PURPOSE:     Releases Temporary Memory
      628     6209              INTERFACE:   TOU$DU_FREE_DATA_SEGMENT
      629     6210              INPUT:       TEMP_V
      630     6211                           TEMP_SIZE
      631     6212              OUTPUT:      DUP.DS_V
      632     6213                           DUP.NUM_WORDS
      633     6214              DESCRIPTION: This procedure releases the temporary BCD list.
      634     6215        */
      635     6216
      636     6217    2   P_FREE_TEMP_LIST: PROC ALTRET ;
      637     6218
      638     6219    3   /* Code */ ;
      639     6220
      640     6221    3      DUP.DS_V = TEMP_V ;
      641     6222    3      DUP.NUM_WORDS = TEMP_SIZE ;
      642     6223    3      CALL TOU$DU_FREE_DATA_SEGMENT ALTRET (ERROR) ;
      643     6224    3      RETURN ;
      644     6225
      645     6226    3   ERROR:
      646     6227    3      ALTRETURN ;
      647     6228
      648     6229    3   END P_FREE_TEMP_LIST ;
      649     6230        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:25   
      650     6231        /*I*  NAME:        P_APPEND_DKEND
      651     6232              AUTHOR:      Scott S. Sheppard
      652     6233              PURPOSE:     Adds $DKEND CARD
      653     6234              INTERFACE:   None Called.
      654     6235              INPUT:       BCD# - current number of BCD cards (all patches)
      655     6236                           DKEND - $DKEND card stored
      656     6237              OUTPUT:      BCD# - incremented by 1 to include the $DKEND
      657     6238                           BCD_B - $DKEND card added to the array
      658     6239              DESCRIPTION: This procedure places the $DKEND card at the end ofthe list
      659     6240                           of BCD cards. (was previously removed to add patches)
      660     6241        */
      661     6242
      662     6243    2   P_APPEND_DKEND: PROC ;
      663     6244
      664     6245        /* Code */
      665     6246
      666     6247    3      BCD_B(BCD#) = DKEND_ ;
      667     6248    3      BCD# = BCD# + 1 ;
      668     6249    3      RETURN ;
      669     6250
      670     6251    3   END P_APPEND_DKEND ;
      671     6252        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:26   
      672     6253        /*I*  NAME:        P_SAVE_CHANGED_DECK
      673     6254              AUTHOR:      Scott S. Sheppard
      674     6255              PURPOSE:     Saves New Object Deck Records
      675     6256              INTERFACE:   TOU$CHECKSUM
      676     6257                           TOU$REFORM_DECK_CHECKSUM
      677     6258                           TOU$DU_UPDATE_LOG
      678     6259                           TOU$DFU_DF_WR_LOG
      679     6260                           TOU$DFU_DF_DL_DECK
      680     6261                           TOU$DFU_DF_WR_OBJECT
      681     6262                           TOU$DFU_DF_WR_BINARY
      682     6263                           TOU$DFU_DF_WR_BCD_CARDS
      683     6264                           TOU$DFU_DF_WR_OBJECT_REFLIST
      684     6265              INPUT:       OBJECT
      685     6266                           BCD#
      686     6267              OUTPUT:      Updated records written to the deckfile.
      687     6268              DESCRIPTION: This procedure deletes the old object deck and saves
      688     6269                           the new one in its place.
      689     6270        */
      690     6271        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:27   
      691     6272    2   P_SAVE_CHANGED_DECK: PROC ALTRET ;
      692     6273
      693     6274        /* Code */
      694     6275
      695     6276    3      CALL TOU$DFU_DF_DL_DECK ALTRET (ERROR) ;
      696     6277    3      OBJECT.TOTAL_COUNT = OBJECT.BINARY_COUNT + BCD# + 1 ;
      697     6278    3      CALL TOU$REFORM_DECK_CHECKSUM (,,,) ;
      698     6279    3      CALL TOU$CHECKSUM (0, ADDR(OBJECT), 23, OBJECT.CHECKSUM) ;
      699     6280    3      CALL TOU$DFU_DF_WR_OBJECT ALTRET (ERROR) ;
      700     6281
      701     6282    3      CALL TOU$DFU_DF_WR_BINARY ALTRET (SYNC_ERROR) ;
      702     6283    3      CALL TOU$DFU_DF_WR_BCD_CARDS ALTRET (SYNC_ERROR) ;
      703     6284    3      CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (SYNC_ERROR) ;
      704     6285
      705     6286    3      DUP.LOG.TYPE = %T$SF_PATCH ;
      706     6287    3      DUP.LOG.CATALOG = ' ' ;
      707     6288    3      DUP.LOG.DECK = OBJECT_KEY.DATA ;
      708     6289    3      DUP.HOLD_AREA = DUP.IFAD.FID ;
      709     6290    3      CALL TOU$DU_UPDATE_LOG ALTRET (SYNC_ERROR) ;
      710     6291    3      CALL TOU$DFU_DF_WR_LOG ALTRET (SYNC_ERROR) ;
      711     6292    3      RETURN ;
      712     6293
      713     6294    3   ERROR:
      714     6295    3      ALTRETURN ;
      715     6296
      716     6297    3   SYNC_ERROR:
      717     6298    3      DUP.DF.CLOSE_TYPE = %DISCARD_FILE ;
      718     6299    3      DUP.MSG_CODE = %E$PSCD_BAD_DF ;
      719     6300    3      CALL TOU$DU_USER_WRITE ;
      720     6301    3      ALTRETURN ;
      721     6302
      722     6303    3   END P_SAVE_CHANGED_DECK ;
      723     6304        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:28   
      724     6305        /*I*  NAME:        P_SETUP_PRINT
      725     6306              AUTHOR:      Scott S. Sheppard
      726     6307              PURPOSE:     Assign Replacement Variables
      727     6308              INTERFACE:   None Called.
      728     6309              INPUT:       OBJECT.BCD.LIBRARY - used to determine GECALL or not
      729     6310                           OBJECT.BCD.CLASS   - used to determine ITR or MDR
      730     6311                           H$PATCH_ITR
      731     6312                           H$PATCH_MDR
      732     6313                           H$PATCH_PROG
      733     6314                           T$RD_ITR
      734     6315                           T$RD_MDR
      735     6316                           T$RD_GECALL
      736     6317              OUTPUT:      DUP.HDR_CODE  - set to correct heading
      737     6318                           DUP.MSG_CODE  - used to write messages
      738     6319                           ID.ID         - set for IDENT CODE field
      739     6320              DESCRIPTION: This procedure assigns variables needed values so
      740     6321                           that TOU$REPLACE  will insert proper  values  for
      741     6322                           the dummy ~strings.
      742     6323        */
      743     6324        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:29   
      744     6325    2   P_SETUP_PRINT: PROC ;
      745     6326
      746     6327        /* Code */
      747     6328
      748     6329    3      IF OBJECT.BCD.LIBRARY = 'HMPCJ1'
      749     6330    3      THEN IF OBJECT.BCD.CLASS = 'I' | OBJECT.BCD.CLASS = 'F'
      750     6331    4         THEN DO ;
      751     6332    4                 IF OBJECT.BCD.CLASS = 'F'
      752     6333    4                 THEN ID.ID = SUBSTR (OBJECT_KEY.DATA, 7, 6) ;
      753     6334    4                 ELSE ID.ID = SUBSTR (OBJECT_KEY.DATA, 4, 6) ;
      754     6335    4                 DUP.HDR_CODE = %H$PATCH_ITR ;
      755     6336    4                 DUP.MSG_CODE = %T$RD_ITR ;
      756     6337    4              END /* THEN */ ;
      757     6338    4         ELSE DO ;
      758     6339    4                 ID.ID = SUBSTR (OBJECT_KEY.DATA, 4, 6) ;
      759     6340    4                 DUP.HDR_CODE = %H$PATCH_MDR ;
      760     6341    4                 DUP.MSG_CODE = %T$RD_MDR ;
      761     6342    4              END /* ELSE */ ;
      762     6343    4      ELSE DO ;
      763     6344    4              DUP.HDR_CODE = %H$PATCH_PROG ;
      764     6345    4              DUP.MSG_CODE = %T$RD_GECALL ;
      765     6346    4           END /* ELSE */ ;
      766     6347    3      RETURN ;
      767     6348
      768     6349    3   END P_SETUP_PRINT ;
      769     6350        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:30   
      770     6351        /*I*  NAME:        P_PRINT_PATCHED_DECK
      771     6352              AUTHOR:      Scott S. Sheppard
      772     6353              PURPOSE:     Prints Patched Deck line
      773     6354              INTERFACE:   TOU$DU_USER_WRITE
      774     6355                           TOU$DU_PRINTER_WRITE
      775     6356              INPUT:       T$P_INFORM
      776     6357              OUTPUT:      DUP.MSG_CODE - integer message number
      777     6358              DESCRIPTION: This procedure notifies the user and logs to the
      778     6359                           edit listing that the deck has been patched.
      779     6360        */
      780     6361
      781     6362    2   P_PRINT_PATCHED_DECK: PROC ;
      782     6363
      783     6364        /* Code */
      784     6365
      785     6366    3      DUP.MSG_CODE = %T$P_INFORM ;
      786     6367    3      CALL TOU$DU_USER_WRITE ;
      787     6368    3      CALL TOU$DU_PRINTER_WRITE ;
      788     6369    3      RETURN ;
      789     6370
      790     6371    3   END P_PRINT_PATCHED_DECK ;
      791     6372    2   END P_PATCH_DECK ;
      792     6373    1   END TOU$PATCH ;

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:31   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$PATCH.

   Procedure TOU$PATCH requires 731 words for executable code.
   Procedure TOU$PATCH requires 80 words of local(AUTO) storage.

    No errors detected in file TOU$PATCH.:E05TSI    .

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:32   

 Object Unit name= TOU$PATCH                                  File name= TOU$PATCH.:E05TOU
 UTS= JUL 30 '97 06:49:07.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     21     25  TOU$PATCH
    1   Proc  even  none   731   1333  TOU$PATCH
    2  RoData even  none     8     10  TOU$PATCH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  TOU$PATCH
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:33   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 TOU$B_SHOW_DCBS
 yes     yes           Std       0 TOU$DU_CLOSE_DF
 yes     yes           Std       0 TOU$DU_OPEN_DF
 yes     yes           Std       0 TOU$DU_USER_WRITE
 yes     yes           Std       0 TOU$DU_SET_IFAD_FID
 yes     yes           Std       0 TOU$DU_SET_DF_FID
 yes     yes           Std       0 TOU$DFU_DF_CHECK_FOR_KEY
 yes     yes           Std       0 TOU$DFU_DF_RD_BINARY
 yes     yes           Std       0 TOU$DFU_DF_RD_BCD_CARDS
 yes     yes           Std       0 TOU$DFU_DF_RD_OBJECT_REFLIST
 yes     yes           Std       0 TOU$DFU_DF_RD_LOG
 yes     yes           Std       0 TOU$DU_OPEN_IFAD
 yes     yes           Std       0 TOU$CLEAR_IFAD
 yes     yes           Std       0 TOU$DU_SET_EDIT_PROMPT
 yes     yes           Std       0 TOU$B_PRINT_DECK_LINE
 yes     yes           Std       0 TOU$DU_SET_PROMPT
 yes     yes           Std       0 TOU$GET_PATCH_CARDS
 yes     yes           Std       0 TOU$DU_CLOSE_IFAD
 yes     yes           Std       0 TOU$DU_GET_DATA_SEGMENT
 yes     yes           Std       0 TOU$DU_FREE_DATA_SEGMENT
 yes     yes           Std       0 TOU$DFU_DF_DL_DECK
 yes     yes           Std       4 TOU$REFORM_DECK_CHECKSUM
 yes     yes           Std       0 TOU$DFU_DF_WR_OBJECT
 yes     yes           Std       0 TOU$DFU_DF_WR_BCD_CARDS
 yes     yes           Std       0 TOU$DFU_DF_WR_OBJECT_REFLIST
 yes     yes           Std       0 TOU$DFU_DF_WR_LOG
 yes     yes           Std       4 TOU$CHECKSUM
 yes     yes           Std       0 TOU$DFU_DF_WR_BINARY
 yes     yes           Std       0 TOU$DU_UPDATE_LOG
 yes     yes           Std       0 TOU$DU_PRINTER_WRITE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:34   
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DUP                                   BCD_KEY                               BINARY_KEY
     DKEND                                 ID                                    OBJECT
     OBJECT_KEY                            OBJECT_REFLIST_KEY                    OBJECT_SEARCH_KEY
     BCD#                                  BIN#                                  CUR#
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:35   


        1        1        /*M* TOU$PATCH     DEckfile Editor Routine PATCH Function */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$PATCH
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEckfile Editor Routine PATCH Function
       14       14              DESCRIPTION: This program is called when the PATCH function
       15       15                           is invoked by the CP-6 deckfile editor driver.
       16       16                           This program adds patch cards to  object decks
       17       17                           in the CP-6 deckfile.
       18       18              REFERENCE:   CP-6 Release C0M0
       19       19              LAST UPDATE: 10/27/83
       20       20        */
       21       21        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:36   
       22       22        /*F*  NAME:        TOU$PATCH
       23       23              DESCRIPTION: Procedure Nesting Hierarchy
       24       24
       25       25              TOU$PATCH: procedure
       26       26                 P_INIT_DUP: procedure
       27       27                 P_COMMAND_SETUP: procedure
       28       28                 P_FIND_DECK: procedure ALTRET
       29       29                 P_PATCH_DECK: procedure ALTRET
       30       30                    P_SET_BCD#: procedure
       31       31                    P_CHECK_NEW_ADDRESSES: procedure ALTRET
       32       32                    P_CHECK_PATCHED_ADDRESSES: procedure ALTRET
       33       33                    P_GET_TEMP_LIST: procedure ALTRET
       34       34                    P_FORM_TEMP_LIST: procedure (START, STOP) ALTRET
       35       35                    P_REFORM_BCD_LIST: procedure ALTRET
       36       36                    P_FREE_TEMP_LIST: procedure ALTRET
       37       37                    P_APPEND_DKEND: procedure ALTRET
       38       38                    P_SAVE_CHANGED_DECK: procedure ALTRET
       39       39                    P_SETUP_PRINT: procedure
       40       40                    P-PRINT_DECK_LINE: procedure
       41       41        */
       42       42        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:37   
       43       43        TOU$PATCH: PROC ;

     43  1 000000   000000 700200 xent  TOU$PATCH    TSX0  ! X66_AUTO_0
         1 000001   000120 000000                    ZERO    80,0

       44       44
       45       45        /* Include Files */
       46       46
       47       47           %INCLUDE TOU_DEER_M ;
       48     1458           %INCLUDE TOU_RQSTS_E ;
       49     1533           %INCLUDE TO_PERR_C ;
       50     2118           %INCLUDE XU_MACRO_C ;
       51     5224
       52     5225        /* Macros */
       53     5226
       54     5227           %DUP (STCLASS = SYMREF) ;
       55     5370           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
       56     5382           %BCD_KEY (STCLASS = SYMREF) ;
       57     5396           %BINARY_KEY (STCLASS = SYMREF) ;
       58     5410           %DKEND (STCLASS = SYMREF) ;
       59     5434           %ID (STCLASS = SYMREF) ;
       60     5451           %OBJECT (STCLASS = SYMREF) ;
       61     5514           %OBJECT_KEY (STCLASS = SYMREF) ;
       62     5527           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
       63     5541           %OBJECT_SEARCH_KEY (STCLASS = SYMREF) ;
       64     5553
       65     5554        /* Variables */
       66     5555
       67     5556    1      DCL BCD#           UBIN WORD SYMREF ;
       68     5557    1      DCL BIN#           UBIN WORD SYMREF ;
       69     5558    1      DCL CUR#           UBIN WORD SYMREF ;
       70     5559    1      DCL OVERWRITE      BIT (1) CALIGNED ;
       71     5560    1      DCL RETAIN         BIT (1) CALIGNED ;
       72     5561           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:38   
       73     5562        /* External Entry Points */
       74     5563
       75     5564    1      DCL TOU$DU_SET_IFAD_FID            ENTRY ALTRET ;
       76     5565    1      DCL TOU$DU_OPEN_IFAD               ENTRY ALTRET ;
       77     5566    1      DCL TOU$DU_CLOSE_IFAD              ENTRY ALTRET ;
       78     5567
       79     5568    1      DCL TOU$DU_SET_DF_FID              ENTRY ALTRET ;
       80     5569    1      DCL TOU$DU_OPEN_DF                 ENTRY ALTRET ;
       81     5570    1      DCL TOU$DU_CLOSE_DF                ENTRY ALTRET ;
       82     5571
       83     5572    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
       84     5573    1      DCL TOU$DU_PRINTER_WRITE           ENTRY ALTRET ;
       85     5574    1      DCL TOU$DU_GET_DATA_SEGMENT        ENTRY ALTRET ;
       86     5575    1      DCL TOU$DU_FREE_DATA_SEGMENT       ENTRY ALTRET ;
       87     5576    1      DCL TOU$DU_SET_EDIT_PROMPT         ENTRY ALTRET ;
       88     5577    1      DCL TOU$DU_SET_PROMPT              ENTRY ALTRET ;
       89     5578    1      DCL TOU$DU_UPDATE_LOG              ENTRY ALTRET ;
       90     5579
       91     5580    1      DCL TOU$CHECKSUM                   ENTRY (4) ALTRET ;
       92     5581    1      DCL TOU$REFORM_DECK_CHECKSUM       ENTRY (4) ALTRET ;
       93     5582
       94     5583    1      DCL TOU$CLEAR_IFAD                 ENTRY ALTRET ;
       95     5584    1      DCL TOU$GET_PATCH_CARDS            ENTRY ALTRET ;
       96     5585    1      DCL TOU$B_SHOW_DCBS                ENTRY ALTRET ;
       97     5586    1      DCL TOU$B_PRINT_DECK_LINE          ENTRY ALTRET ;
       98     5587           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:39   
       99     5588        /* External Entry Points */
      100     5589
      101     5590    1      DCL TOU$DFU_DF_DL_DECK             ENTRY ALTRET ;
      102     5591    1      DCL TOU$DFU_DF_CHECK_FOR_KEY       ENTRY ALTRET ;
      103     5592    1      DCL TOU$DFU_DF_RD_BINARY           ENTRY ALTRET ;
      104     5593    1      DCL TOU$DFU_DF_RD_BCD_CARDS        ENTRY ALTRET ;
      105     5594    1      DCL TOU$DFU_DF_RD_OBJECT_REFLIST   ENTRY ALTRET ;
      106     5595    1      DCL TOU$DFU_DF_RD_LOG              ENTRY ALTRET ;
      107     5596    1      DCL TOU$DFU_DF_WR_OBJECT           ENTRY ALTRET ;
      108     5597    1      DCL TOU$DFU_DF_WR_BINARY           ENTRY ALTRET ;
      109     5598    1      DCL TOU$DFU_DF_WR_BCD_CARDS        ENTRY ALTRET ;
      110     5599    1      DCL TOU$DFU_DF_WR_OBJECT_REFLIST   ENTRY ALTRET ;
      111     5600    1      DCL TOU$DFU_DF_WR_LOG              ENTRY ALTRET ;
      112     5601           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:40   
      113     5602        /* ********************
      114     5603           ********************
      115     5604           **  Main Program  **
      116     5605           ********************
      117     5606           ******************** */
      118     5607
      119     5608    1      CALL P_INIT_DUP ;

   5608  1 000002   000042 701000 1                  TSX1    P_INIT_DUP
         1 000003   000000 011000                    NOP     0

      120     5609    1      CALL P_COMMAND_SETUP ALTRET (ERROR_RETURN) ;

   5609  1 000004   000066 701000 1                  TSX1    P_COMMAND_SETUP
         1 000005   000031 702000 1                  TSX2    ERROR_RETURN

      121     5610    1      CALL TOU$B_SHOW_DCBS ;

   5610  1 000006   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000007   000000 701000 xent               TSX1    TOU$B_SHOW_DCBS
         1 000010   000000 011000                    NOP     0

      122     5611    1      CALL TOU$DU_OPEN_DF ALTRET (ERROR_RETURN) ;

   5611  1 000011   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000012   000000 701000 xent               TSX1    TOU$DU_OPEN_DF
         1 000013   000031 702000 1                  TSX2    ERROR_RETURN

      123     5612    1      CALL P_FIND_DECK ALTRET (ERROR_RETURN) ;

   5612  1 000014   000250 701000 1                  TSX1    P_FIND_DECK
         1 000015   000031 702000 1                  TSX2    ERROR_RETURN

      124     5613    1      CALL P_PATCH_DECK ALTRET (ERROR_RETURN) ;

   5613  1 000016   000341 701000 1                  TSX1    P_PATCH_DECK
         1 000017   000031 702000 1                  TSX2    ERROR_RETURN
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:41   

      125     5614    1      CALL TOU$DU_CLOSE_DF ALTRET (ERROR_RETURN) ;

   5614  1 000020   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000021   000000 701000 xent               TSX1    TOU$DU_CLOSE_DF
         1 000022   000031 702000 1                  TSX2    ERROR_RETURN

      126     5615
      127     5616        /* NORMAL_RETURN: */
      128     5617    1      DUP.MSG_CODE = %T$P_SUCCESS;

   5617  1 000023   000240 235007                    LDA     160,DL
         1 000024   000020 755000 xsym               STA     DUP+16

      129     5618    1      CALL TOU$DU_USER_WRITE ;

   5618  1 000025   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000026   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000027   000000 011000                    NOP     0

      130     5619    1      RETURN ;

   5619  1 000030   000000 702200 xent               TSX2  ! X66_ARET

      131     5620
      132     5621    1   ERROR_RETURN:
      133     5622    1      CALL TOU$DU_CLOSE_DF ;

   5622  1 000031   000002 631400 xsym  ERROR_RETURN EPPR1   B_VECTNIL+2
         1 000032   000000 701000 xent               TSX1    TOU$DU_CLOSE_DF
         1 000033   000000 011000                    NOP     0

      134     5623    1      DUP.MSG_CODE = %T$P_FAILURE;

   5623  1 000034   000241 235007                    LDA     161,DL
         1 000035   000020 755000 xsym               STA     DUP+16

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:42   
      135     5624    1      CALL TOU$DU_USER_WRITE ;

   5624  1 000036   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000037   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000040   000000 011000                    NOP     0

      136     5625    1      RETURN ;

   5625  1 000041   000000 702200 xent               TSX2  ! X66_ARET

      137     5626
      138     5627        /* ********************
      139     5628           ********************
      140     5629           **  End Of  Main  **
      141     5630           ********************
      142     5631           ******************** */
      143     5632        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:43   
      144     5633        /*I*  NAME:        P_INIT_DUP
      145     5634              AUTHOR:      Scott S. Sheppard
      146     5635              PURPOSE:     Initilization
      147     5636              INTERFACE:   None called.
      148     5637              INPUT:       Set of system equates.
      149     5638              OUTPUT:      DUP
      150     5639                           RETAIN
      151     5640                           OVERWRITE
      152     5641              DESCRIPTION: This procedure initializes variables to
      153     5642                           appropriate starting values.
      154     5643        */
      155     5644
      156     5645    1   P_INIT_DUP: PROC ;

   5645  1 000042   200006 741300       P_INIT_DUP   STX1  ! RETAIN+2,,AUTO

      157     5646
      158     5647        /* Code */
      159     5648
      160     5649    2      DUP.HDR_CODE = %H$PATCH ;

   5649  1 000043   001464 235007                    LDA     820,DL
         1 000044   000021 755000 xsym               STA     DUP+17

      161     5650    2      DUP.LINE_VFC = %SKIP_WRITE ;

   5650  1 000045   142000 236003                    LDQ     50176,DU
         1 000046   000026 756000 xsym               STQ     DUP+22

      162     5651    2      DUP.FORCE_NEW_PAGE = %TRUE ;

   5651  1 000047   400000 236003                    LDQ     -131072,DU
         1 000050   000056 756000 xsym               STQ     DUP+46

      163     5652    2      DUP.IFAD.ME_ALLOWED = %TRUE ;

   5652  1 000051   000057 256000 xsym               ORSQ    DUP+47
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:44   

      164     5653    2      DUP.IFAD.ENTERED = %FALSE ;

   5653  1 000052   000000 236000 2                  LDQ     0
         1 000053   000057 356000 xsym               ANSQ    DUP+47

      165     5654    2      DUP.DF.ENTERED = %FALSE ;

   5654  1 000054   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000055   000104 356000 xsym               ANSQ    DUP+68

      166     5655    2      DUP.DF.OPEN_TYPE = %UPDATE_FILE ;

   5655  1 000056   000001 235007                    LDA     1,DL
         1 000057   000105 755000 xsym               STA     DUP+69

      167     5656    2      DUP.DF.REPORT_ERROR = %FALSE ;

   5656  1 000060   000001 236000 2                  LDQ     1
         1 000061   000104 356000 xsym               ANSQ    DUP+68

      168     5657    2      DUP.DF.CLOSE_TYPE = %SAVE_FILE ;

   5657  1 000062   000106 450000 xsym               STZ     DUP+70

      169     5658    2      RETAIN = %FALSE ;

   5658  1 000063   200004 450100                    STZ     RETAIN,,AUTO

      170     5659    2      OVERWRITE = %FALSE ;

   5659  1 000064   200003 450100                    STZ     OVERWRITE,,AUTO

      171     5660    2      RETURN ;

   5660  1 000065   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:45   
      172     5661
      173     5662    2   END P_INIT_DUP ;
      174     5663        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:46   
      175     5664        /*I*  NAME:        P_COMMAND_SETUP
      176     5665              AUTHOR:      Scott S. Sheppard
      177     5666              PURPOSE:     Sets up PATCH Command
      178     5667              INTERFACE:   TOU$DU_SET_IFAD_FID
      179     5668                           TOU$DU_SET_DF_FID
      180     5669              INPUT:       DUP.CMD$ - pointer to the parse control block
      181     5670              OUTPUT:      DUP.DF.HOLD_AREA
      182     5671                           DUP.DF.HOLD_AREA_LGTH
      183     5672                           DUP.IFAD.ENTERED
      184     5673                           DUP.DF.ENTERED
      185     5674                           OBJECT_SEARCH_KEY
      186     5675                           RETAIN
      187     5676                           OVERWRITE
      188     5677              DESCRIPTION: This procedure sets up the PATCH command from the
      189     5678                           information entered by the user.    DUP.CMD$ is a
      190     5679                           pointer to a   parse control block  that contains
      191     5680                           the tokens entered by the user.
      192     5681                           COMMAND FORMS:
      193     5682              Case 1: P <object key> [(options)]
      194     5683              Case 2: P <patch fid> <object key> [(options)]
      195     5684              Case 3: P <object key> INTO <deckfile fid> [(options)]
      196     5685              Case 4: P <patch fid> <object key> INTO <deckfile fid> [(options)]
      197     5686        */
      198     5687
      199     5688    1   P_COMMAND_SETUP: PROC ALTRET ;

   5688  1 000066   200006 741300       P_COMMAND_S* STX1  ! RETAIN+2,,AUTO

      200     5689
      201     5690    2      DCL OUTBLK#                    UBIN WORD ALIGNED ;
      202     5691    2      DCL OUTBLK$                    PTR ALIGNED ;
      203     5692    2      DCL OPT#                       UBIN WORD ALIGNED ;
      204     5693    2      DCL OPT$                       PTR ALIGNED ;
      205     5694           %PARSE$OUT (STCLASS = BASED) ;
      206     5739           %PARSE$SYM (STCLASS = BASED) ;
      207     5777           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:47   
      208     5778        /* Code */
      209     5779
      210     5780    3      DO OUTBLK# = 0 TO DUP.CMD$ -> OUT$BLK.NSUBLKS - 1 ;

   5780  1 000067   200007 450100                    STZ     OUTBLK#,,AUTO
         1 000070   000223 710000 1                  TRA     s:5806+3

      211     5781    3         OUTBLK$ = DUP.CMD$ -> OUT$BLK.SUBLK$(OUTBLK#) ;

   5781  1 000071   000017 470400 xsym               LDP0    DUP+15
         1 000072   200007 720100                    LXL0    OUTBLK#,,AUTO
         1 000073   000003 236110                    LDQ     3,X0,PR0
         1 000074   200010 756100                    STQ     OUTBLK$,,AUTO

      212     5782    4         DO CASE (OUTBLK$ -> OUT$BLK.CODE) ;

   5782  1 000075   200010 471500                    LDP1    OUTBLK$,,AUTO
         1 000076   100000 721100                    LXL1    0,,PR1
         1 000077   000015 101003                    CMPX1   13,DU
         1 000100   000102 602011 1                  TNC     s:5782+5,X1
         1 000101   000220 710000 1                  TRA     s:5806
         1 000102   000220 710000 1                  TRA     s:5806
         1 000103   000117 710000 1                  TRA     s:5784
         1 000104   000220 710000 1                  TRA     s:5806
         1 000105   000220 710000 1                  TRA     s:5806
         1 000106   000145 710000 1                  TRA     s:5791
         1 000107   000220 710000 1                  TRA     s:5806
         1 000110   000220 710000 1                  TRA     s:5806
         1 000111   000220 710000 1                  TRA     s:5806
         1 000112   000220 710000 1                  TRA     s:5806
         1 000113   000136 710000 1                  TRA     s:5789
         1 000114   000220 710000 1                  TRA     s:5806
         1 000115   000220 710000 1                  TRA     s:5806
         1 000116   000164 710000 1                  TRA     s:5796

      213     5783    4            CASE (%IFAD_FID) ;

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:48   
      214     5784    4               DUP.IFAD.ENTERED = %TRUE ;

   5784  1 000117   000400 236003                    LDQ     256,DU
         1 000120   000057 256000 xsym               ORSQ    DUP+47

      215     5785    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;

   5785  1 000121   100004 236100                    LDQ     4,,PR1
         1 000122   000033 772000                    QRL     27
         1 000123   000000 621006                    EAX1    0,QL
         1 000124   040000 100540                    MLR     fill='040'O
         1 000125   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         1 000126   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      216     5786    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;

   5786  1 000127   100004 236100                    LDQ     4,,PR1
         1 000130   000033 772000                    QRL     27
         1 000131   000154 756000 xsym               STQ     DUP+108

      217     5787    4               CALL TOU$DU_SET_IFAD_FID ALTRET (ERROR) ;

   5787  1 000132   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000133   000000 701000 xent               TSX1    TOU$DU_SET_IFAD_FID
         1 000134   000246 702000 1                  TSX2    ERROR
         1 000135   000220 710000 1                  TRA     s:5806

      218     5788    4            CASE (%OBJKEY) ;

      219     5789    4               OBJECT_SEARCH_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;

   5789  1 000136   100004 236100                    LDQ     4,,PR1
         1 000137   000033 772000                    QRL     27
         1 000140   000000 622006                    EAX2    0,QL
         1 000141   040000 100540                    MLR     fill='040'O
         1 000142   100004 200012                    ADSC9   4,,PR1                   cn=1,n=*X2
         1 000143   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:49   
         1 000144   000220 710000 1                  TRA     s:5806

      220     5790    4            CASE (%DECKFILE_FID) ;

      221     5791    4               DUP.DF.ENTERED = %TRUE ;

   5791  1 000145   400000 236003                    LDQ     -131072,DU
         1 000146   000104 256000 xsym               ORSQ    DUP+68

      222     5792    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;

   5792  1 000147   100004 236100                    LDQ     4,,PR1
         1 000150   000033 772000                    QRL     27
         1 000151   000000 621006                    EAX1    0,QL
         1 000152   040000 100540                    MLR     fill='040'O
         1 000153   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         1 000154   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      223     5793    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;

   5793  1 000155   100004 236100                    LDQ     4,,PR1
         1 000156   000033 772000                    QRL     27
         1 000157   000154 756000 xsym               STQ     DUP+108

      224     5794    4               CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;

   5794  1 000160   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000161   000000 701000 xent               TSX1    TOU$DU_SET_DF_FID
         1 000162   000246 702000 1                  TSX2    ERROR
         1 000163   000220 710000 1                  TRA     s:5806

      225     5795    4            CASE (%PATCH_OPTS) ;

      226     5796    5               DO OPT# = 0 TO OUTBLK$ -> OUT$BLK.NSUBLKS - 1 ;

   5796  1 000164   200011 450100                    STZ     OPT#,,AUTO
         1 000165   000212 710000 1                  TRA     s:5804+3
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:50   

      227     5797    5                  OPT$ = OUTBLK$ -> OUT$BLK.SUBLK$(OPT#) ;

   5797  1 000166   200010 470500                    LDP0    OUTBLK$,,AUTO
         1 000167   200011 720100                    LXL0    OPT#,,AUTO
         1 000170   000003 236110                    LDQ     3,X0,PR0
         1 000171   200012 756100                    STQ     OPT$,,AUTO

      228     5798    6                  DO CASE (OPT$ -> OUT$BLK.CODE) ;

   5798  1 000172   200012 471500                    LDP1    OPT$,,AUTO
         1 000173   100000 721100                    LXL1    0,,PR1
         1 000174   000003 101003                    CMPX1   3,DU
         1 000175   000177 602011 1                  TNC     s:5798+5,X1
         1 000176   000207 710000 1                  TRA     s:5804
         1 000177   000207 710000 1                  TRA     s:5804
         1 000200   000202 710000 1                  TRA     s:5800
         1 000201   000205 710000 1                  TRA     s:5802

      229     5799    6                     CASE (%RETAIN) ;

      230     5800    6                        RETAIN = %TRUE ;

   5800  1 000202   400000 236003                    LDQ     -131072,DU
         1 000203   200004 756100                    STQ     RETAIN,,AUTO
         1 000204   000207 710000 1                  TRA     s:5804

      231     5801    6                     CASE (%OVERWRITE) ;

      232     5802    6                        OVERWRITE = %TRUE ;

   5802  1 000205   400000 236003                    LDQ     -131072,DU
         1 000206   200003 756100                    STQ     OVERWRITE,,AUTO

      233     5803    6                  END /* CASE */ ;

      234     5804    5               END /* DO */ ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:51   

   5804  1 000207   200011 235100                    LDA     OPT#,,AUTO
         1 000210   000001 035007                    ADLA    1,DL
         1 000211   200011 755100                    STA     OPT#,,AUTO
         1 000212   200010 470500                    LDP0    OUTBLK$,,AUTO
         1 000213   000001 236100                    LDQ     1,,PR0
         1 000214   000022 772000                    QRL     18
         1 000215   200011 116100                    CMPQ    OPT#,,AUTO
         1 000216   000220 600000 1                  TZE     s:5806
         1 000217   000166 603000 1                  TRC     s:5797

      235     5805    4         END /* CASE */ ;

      236     5806    3      END /* DO */ ;

   5806  1 000220   200007 235100                    LDA     OUTBLK#,,AUTO
         1 000221   000001 035007                    ADLA    1,DL
         1 000222   200007 755100                    STA     OUTBLK#,,AUTO
         1 000223   000017 470400 xsym               LDP0    DUP+15
         1 000224   000001 236100                    LDQ     1,,PR0
         1 000225   000022 772000                    QRL     18
         1 000226   200007 116100                    CMPQ    OUTBLK#,,AUTO
         1 000227   000231 600000 1                  TZE     s:5808
         1 000230   000071 603000 1                  TRC     s:5781

      237     5807           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:52   
      238     5808    2      IF DUP.IFAD.ENTERED

   5808  1 000231   000057 236000 xsym               LDQ     DUP+47
         1 000232   000400 316003                    CANQ    256,DU
         1 000233   000237 601000 1                  TNZ     s:5812

      239     5809    2      THEN /* FID set from DEER command */ ;
      240     5810    2      ELSE CALL TOU$DU_SET_IFAD_FID ALTRET (ERROR) ;

   5810  1 000234   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000235   000000 701000 xent               TSX1    TOU$DU_SET_IFAD_FID
         1 000236   000246 702000 1                  TSX2    ERROR

      241     5811
      242     5812    2      IF DUP.DF.ENTERED

   5812  1 000237   000104 234000 xsym               SZN     DUP+68
         1 000240   000244 604000 1                  TMI     s:5815

      243     5813    2      THEN /* FID set from DEER command */ ;
      244     5814    2      ELSE CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;

   5814  1 000241   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000242   000000 701000 xent               TSX1    TOU$DU_SET_DF_FID
         1 000243   000246 702000 1                  TSX2    ERROR

      245     5815    2      RETURN ;

   5815  1 000244   200006 221300                    LDX1  ! RETAIN+2,,AUTO
         1 000245   000001 702211                    TSX2  ! 1,X1

      246     5816
      247     5817    2   ERROR:
      248     5818    2      ALTRETURN ;

   5818  1 000246   200006 221300       ERROR        LDX1  ! RETAIN+2,,AUTO
         1 000247   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:53   

      249     5819
      250     5820    2   END P_COMMAND_SETUP ;
      251     5821        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:54   
      252     5822        /*I*  NAME:        P_FIND_DECK
      253     5823              AUTHOR:      Scott S. Sheppard
      254     5824              PURPOSE:     Locates Object Deck
      255     5825              INTERFACE:   TOU$DFU_DF_CHECK_FOR_KEY
      256     5826                           TOU$DFU_DF_RD_BINARY
      257     5827                           TOU$DFU_DF_RD_BCD_CARDS
      258     5828                           TOU$DFU_DF_RD_OBJECT_REFLIST
      259     5829                           TOU$DFU_DF_RD_LOG
      260     5830                           TOU$DU_USER_WRITE
      261     5831              INPUT:       OBJECT_SEARCH_KEY
      262     5832                           OBJECT
      263     5833              OUTPUT:      OBJECT_KEY
      264     5834                           BINARY_KEY
      265     5835                           BIN#
      266     5836                           BCD_KEY
      267     5837                           BCD#
      268     5838                           DKEND
      269     5839                           ID.REVISION
      270     5840                           DUP.MSG_CODE
      271     5841              DESCRIPTION: This procedure locates and reads all of the records
      272     5842                           of the object deck to be patched.
      273     5843        */
      274     5844        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:55   
      275     5845    1   P_FIND_DECK: PROC ALTRET ;

   5845  1 000250   200006 741300       P_FIND_DECK  STX1  ! RETAIN+2,,AUTO

      276     5846
      277     5847        /* Code */
      278     5848
      279     5849    2      OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;

   5849  1 000251   040000 100400                    MLR     fill='040'O
         1 000252   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         1 000253   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      280     5850    2      CALL TOU$DFU_DF_CHECK_FOR_KEY ALTRET (NOT_FOUND) ;

   5850  1 000254   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000255   000000 701000 xent               TSX1    TOU$DFU_DF_CHECK_FOR_KEY
         1 000256   000332 702000 1                  TSX2    NOT_FOUND

      281     5851
      282     5852    2      BINARY_KEY.DECK# = OBJECT.DECK# ;

   5852  1 000257   000024 236000 xsym               LDQ     OBJECT+20
         1 000260   000011 772000                    QRL     9
         1 000261   000000 552030 xsym               STBQ    BINARY_KEY,'30'O

      283     5853    2      BIN# = OBJECT.BINARY_COUNT ;

   5853  1 000262   000024 236000 xsym               LDQ     OBJECT+20
         1 000263   777777 376007                    ANQ     -1,DL
         1 000264   000000 756000 xsym               STQ     BIN#

      284     5854    2      CALL TOU$DFU_DF_RD_BINARY ALTRET (ERROR) ;

   5854  1 000265   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000266   000000 701000 xent               TSX1    TOU$DFU_DF_RD_BINARY
         1 000267   000337 702000 1                  TSX2    ERROR
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:56   

      285     5855
      286     5856    2      BCD_KEY.DECK# = OBJECT.DECK# ;

   5856  1 000270   000024 236000 xsym               LDQ     OBJECT+20
         1 000271   000011 772000                    QRL     9
         1 000272   000000 552030 xsym               STBQ    BCD_KEY,'30'O

      287     5857    2      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;

   5857  1 000273   000024 236000 xsym               LDQ     OBJECT+20
         1 000274   777777 376007                    ANQ     -1,DL
         1 000275   200110 756100                    STQ     FOUND+1,,AUTO
         1 000276   000025 236000 xsym               LDQ     OBJECT+21
         1 000277   000022 772000                    QRL     18
         1 000300   200110 136100                    SBLQ    FOUND+1,,AUTO
         1 000301   000001 136007                    SBLQ    1,DL
         1 000302   000000 756000 xsym               STQ     BCD#

      288     5858    2      CALL TOU$DFU_DF_RD_BCD_CARDS ALTRET (ERROR) ;

   5858  1 000303   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000304   000000 701000 xent               TSX1    TOU$DFU_DF_RD_BCD_CARDS
         1 000305   000337 702000 1                  TSX2    ERROR

      289     5859    2      DKEND_ = BCD_B(BCD# - 1) ;

   5859  1 000306   000000 236000 xsym               LDQ     BCD#
         1 000307   000124 402007                    MPY     84,DL
         1 000310   000103 470400 xsym               LDP0    DUP+67
         1 000311   040000 100506                    MLR     fill='040'O
         1 000312   077753 000124                    ADSC9   -21,Q,PR0                cn=0,n=84
         1 000313   000000 000124 xsym               ADSC9   DKEND                    cn=0,n=84

      290     5860    2      ID.REVISION = DKEND.BCD.REVISION ;

   5860  1 000314   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:57   
         1 000315   000020 400006 xsym               ADSC9   DKEND+16                 cn=2,n=6
         1 000316   000001 400006 xsym               ADSC9   ID+1                     cn=2,n=6

      291     5861
      292     5862    2      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;

   5862  1 000317   000024 236000 xsym               LDQ     OBJECT+20
         1 000320   000011 772000                    QRL     9
         1 000321   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O

      293     5863    2      CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;

   5863  1 000322   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000323   000000 701000 xent               TSX1    TOU$DFU_DF_RD_OBJECT_REFLIST
         1 000324   000337 702000 1                  TSX2    ERROR

      294     5864
      295     5865    2      CALL TOU$DFU_DF_RD_LOG ALTRET (ERROR) ;

   5865  1 000325   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000326   000000 701000 xent               TSX1    TOU$DFU_DF_RD_LOG
         1 000327   000337 702000 1                  TSX2    ERROR

      296     5866    2      RETURN ;

   5866  1 000330   200006 221300                    LDX1  ! RETAIN+2,,AUTO
         1 000331   000001 702211                    TSX2  ! 1,X1

      297     5867
      298     5868    2   NOT_FOUND:
      299     5869    2      DUP.MSG_CODE = %E$DFD_NO_OBJ_IN_DF ;

   5869  1 000332   001010 235007       NOT_FOUND    LDA     520,DL
         1 000333   000020 755000 xsym               STA     DUP+16

      300     5870    2      CALL TOU$DU_USER_WRITE ;

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:58   
   5870  1 000334   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000335   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000336   000000 011000                    NOP     0

      301     5871    2   ERROR:
      302     5872    2      ALTRETURN ;

   5872  1 000337   200006 221300       ERROR        LDX1  ! RETAIN+2,,AUTO
         1 000340   000000 702211                    TSX2  ! 0,X1

      303     5873
      304     5874    2   END P_FIND_DECK ;
      305     5875        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:59   
      306     5876        /*I*  NAME:        P_PATCH_DECK
      307     5877              AUTHOR:      Scott S. Sheppard
      308     5878              PURPOSE:     Patch Deck Driver
      309     5879              INTERFACE:   P_SET_BCD#
      310     5880                           P_CHECK_NEW_ADDRESSES
      311     5881                           P_CHECK_PATCHED_ADDRESSES
      312     5882                           P_APPEND_DKEND
      313     5883                           P_SAVE_CHANGED_DECK
      314     5884                           P_SETUP_PRINT
      315     5885                           P_PRINT_PATCHED_DECK
      316     5886                           TOU$DU_OPEN_IFAD
      317     5887                           TOU$DU_CLOSE_IFAD
      318     5888                           TOU$CLEAR_IFAD
      319     5889                           TOU$GET_PATCH_CARDS
      320     5890                           TOU$B_PRINT_DECK_LINE
      321     5891              INPUT:       RETAIN
      322     5892              OUTPUT:      DUP.BREAK_DISABLED
      323     5893              DESCRIPTION: This procedure is the driver which obtains the patch
      324     5894                           input and saves it in the deckfile.
      325     5895        */
      326     5896
      327     5897    1   P_PATCH_DECK: PROC ALTRET ;

   5897  1 000341   200006 741300       P_PATCH_DECK STX1  ! RETAIN+2,,AUTO

      328     5898
      329     5899    2      DCL 1 TEMP_V DALIGNED,
      330     5900    2            2 FLAGS   UBIN WORD UNAL,
      331     5901    2            2 PTR$    PTR UNAL ;
      332     5902           %BCD_B (NAME = TEMP_B,
      333     5903                   STCLASS = "BASED (TEMP_V.PTR$)") ;
      334     5915    2      DCL TEMP#       UBIN WORD ALIGNED ;
      335     5916    2      DCL TEMP_SIZE   UBIN WORD ALIGNED ;
      336     5917    2      DCL 1 MATCH ALIGNED,
      337     5918    2            2 COUNT   UBIN WORD UNAL,
      338     5919    2            2 INDEXES (0:%(MAX_PATCHES - 1)) UBIN BYTE UNAL ;
      339     5920    2      DCL FIRST_NEW#  UBIN WORD ALIGNED ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:60   
      340     5921           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:61   
      341     5922        /* Code */
      342     5923
      343     5924    2      CALL P_SET_BCD# ;

   5924  1 000342   000434 701000 1                  TSX1    P_SET_BCD#
         1 000343   000000 011000                    NOP     0

      344     5925    2      CALL TOU$DU_OPEN_IFAD ALTRET (ERROR) ;

   5925  1 000344   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000345   000000 701000 xent               TSX1    TOU$DU_OPEN_IFAD
         1 000346   000422 702000 1                  TSX2    ERROR

      345     5926    2      CALL TOU$CLEAR_IFAD ;

   5926  1 000347   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000350   000000 701000 xent               TSX1    TOU$CLEAR_IFAD
         1 000351   000000 011000                    NOP     0

      346     5927    2      DUP.HOLD_AREA = 'Enter Patch: ' ;

   5927  1 000352   040000 100400                    MLR     fill='040'O
         1 000353   000000 000015 0                  ADSC9   0                        cn=0,n=13
         1 000354   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      347     5928    2      DUP.HOLD_AREA_LGTH = 13 ;

   5928  1 000355   000015 235007                    LDA     13,DL
         1 000356   000154 755000 xsym               STA     DUP+108

      348     5929    2      CALL TOU$DU_SET_PROMPT ;

   5929  1 000357   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000360   000000 701000 xent               TSX1    TOU$DU_SET_PROMPT
         1 000361   000000 011000                    NOP     0

      349     5930    2      CALL TOU$GET_PATCH_CARDS ALTRET (ERROR) ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:62   

   5930  1 000362   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000363   000000 701000 xent               TSX1    TOU$GET_PATCH_CARDS
         1 000364   000422 702000 1                  TSX2    ERROR

      350     5931    2      CALL TOU$DU_SET_EDIT_PROMPT ;

   5931  1 000365   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000366   000000 701000 xent               TSX1    TOU$DU_SET_EDIT_PROMPT
         1 000367   000000 011000                    NOP     0

      351     5932    2      CALL TOU$DU_CLOSE_IFAD ALTRET (ERROR) ;

   5932  1 000370   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000371   000000 701000 xent               TSX1    TOU$DU_CLOSE_IFAD
         1 000372   000422 702000 1                  TSX2    ERROR

      352     5933    2      CALL P_CHECK_NEW_ADDRESSES ALTRET (ERROR) ;

   5933  1 000373   000447 701000 1                  TSX1    P_CHECK_NEW_ADDRESSES
         1 000374   000422 702000 1                  TSX2    ERROR

      353     5934    2      IF RETAIN

   5934  1 000375   200004 234100                    SZN     RETAIN,,AUTO
         1 000376   000401 605000 1                  TPL     s:5937

      354     5935    2      THEN CALL P_CHECK_PATCHED_ADDRESSES ALTRET (ERROR) ;

   5935  1 000377   000554 701000 1                  TSX1    P_CHECK_PATCHED_ADDRESSES
         1 000400   000422 702000 1                  TSX2    ERROR

      355     5936    2      ELSE /* No previously patched addresses to check */ ;
      356     5937    2      CALL P_APPEND_DKEND ;

   5937  1 000401   001117 701000 1                  TSX1    P_APPEND_DKEND
         1 000402   000000 011000                    NOP     0
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:63   

      357     5938
      358     5939    2      DUP.BREAK_DISABLED = %TRUE ;

   5939  1 000403   000400 236003                    LDQ     256,DU
         1 000404   000155 256000 xsym               ORSQ    DUP+109

      359     5940    2      CALL P_SAVE_CHANGED_DECK ALTRET (ERROR) ;

   5940  1 000405   001133 701000 1                  TSX1    P_SAVE_CHANGED_DECK
         1 000406   000422 702000 1                  TSX2    ERROR

      360     5941    2      CALL P_SETUP_PRINT ;

   5941  1 000407   001235 701000 1                  TSX1    P_SETUP_PRINT
         1 000410   000000 011000                    NOP     0

      361     5942    2      CALL TOU$B_PRINT_DECK_LINE ;

   5942  1 000411   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000412   000000 701000 xent               TSX1    TOU$B_PRINT_DECK_LINE
         1 000413   000000 011000                    NOP     0

      362     5943    2      CALL P_PRINT_PATCHED_DECK ;

   5943  1 000414   001320 701000 1                  TSX1    P_PRINT_PATCHED_DECK
         1 000415   000000 011000                    NOP     0

      363     5944    2      DUP.BREAK_DISABLED = %FALSE ;

   5944  1 000416   000000 236000 2                  LDQ     0
         1 000417   000155 356000 xsym               ANSQ    DUP+109

      364     5945    2      RETURN ;

   5945  1 000420   200006 221300                    LDX1  ! RETAIN+2,,AUTO
         1 000421   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:64   

      365     5946
      366     5947    2   ERROR:
      367     5948    2      CALL TOU$DU_CLOSE_IFAD ;

   5948  1 000422   000002 631400 xsym  ERROR        EPPR1   B_VECTNIL+2
         1 000423   000000 701000 xent               TSX1    TOU$DU_CLOSE_IFAD
         1 000424   000000 011000                    NOP     0

      368     5949    2      CALL TOU$DU_SET_EDIT_PROMPT ;

   5949  1 000425   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000426   000000 701000 xent               TSX1    TOU$DU_SET_EDIT_PROMPT
         1 000427   000000 011000                    NOP     0

      369     5950    2      DUP.BREAK_DISABLED = %FALSE ;

   5950  1 000430   000000 236000 2                  LDQ     0
         1 000431   000155 356000 xsym               ANSQ    DUP+109

      370     5951    2      ALTRETURN ;

   5951  1 000432   200006 221300                    LDX1  ! RETAIN+2,,AUTO
         1 000433   000000 702211                    TSX2  ! 0,X1

      371     5952
      372     5953    2   /* END P_PATCH_DECK */ ;
      373     5954        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:65   
      374     5955        /*I*  NAME:        P_SET_BCD#
      375     5956              AUTHOR:      Scott S. Sheppard
      376     5957              PURPOSE:     Sets BCD array index
      377     5958              INTERFACE:   None Called.
      378     5959              INPUT:       RETAIN
      379     5960              OUTPUT:      BCD#
      380     5961                           FIRST_NEW#
      381     5962              DESCRIPTION: This procedure sets the BCD# to be used as an index into
      382     5963                           the BCD_B array when storing PATCH cards.   Setting BCD#
      383     5964                           to  zero  allows new patch cards to be added to the list
      384     5965                           replacing any existing ones.
      385     5966        */
      386     5967
      387     5968    2   P_SET_BCD#: PROC ;

   5968  1 000434   200100 741300       P_SET_BCD#   STX1  ! FIRST_NEW#+1,,AUTO

      388     5969
      389     5970        /* Code */
      390     5971
      391     5972    3      IF RETAIN

   5972  1 000435   200004 234100                    SZN     RETAIN,,AUTO
         1 000436   000443 605000 1                  TPL     s:5974

      392     5973    3      THEN BCD# = BCD# - 1 ;

   5973  1 000437   000000 235000 xsym               LDA     BCD#
         1 000440   000001 135007                    SBLA    1,DL
         1 000441   000000 755000 xsym               STA     BCD#
         1 000442   000444 710000 1                  TRA     s:5975

      393     5974    3      ELSE BCD# = 0 ;

   5974  1 000443   000000 450000 xsym               STZ     BCD#

      394     5975    3      FIRST_NEW# = BCD# ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:66   

   5975  1 000444   000000 235000 xsym               LDA     BCD#
         1 000445   200077 755100                    STA     FIRST_NEW#,,AUTO

      395     5976    3      RETURN ;

   5976  1 000446   000001 702211                    TSX2  ! 1,X1

      396     5977
      397     5978    3   END P_SET_BCD# ;
      398     5979        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:67   
      399     5980        /*I*  NAME:        P_CHECK_NEW_ADDRESSES
      400     5981              AUTHOR:      Scott S. Sheppard
      401     5982              PURPOSE:     Validates New Patches from IFAD
      402     5983              INTERFACE:   P_GET_TEMP_LIST
      403     5984                           P_FORM_TEMP_LIST
      404     5985                           P_FREE_TEMP_LIST
      405     5986                           TOU$DU_USER_WRITE
      406     5987              INPUT:       MATCH.COUNT - number of duplicate addresses
      407     5988                           MATCH.INDEXES - indexes into BCD_B array
      408     5989                           FIRST_NEW# - index of first new BCD card
      409     5990                           BCD# - total number of BCD cards
      410     5991              OUTPUT:      DUP.MSG_CODE
      411     5992                           CUR#
      412     5993                           BCD_B
      413     5994              DESCRIPTION: This procedure ensures that no two patches from theset of
      414     5995                           new patches modify the same object deck address.
      415     5996        */
      416     5997
      417     5998    2   P_CHECK_NEW_ADDRESSES: PROC ALTRET ;

   5998  1 000447   200100 741300       P_CHECK_NEW* STX1  ! FIRST_NEW#+1,,AUTO

      418     5999
      419     6000    3      DCL MATCH_INX   UBIN WORD ALIGNED ;
      420     6001           %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:68   
      421     6002        /* Code */
      422     6003
      423     6004    3      IF FIRST_NEW# = BCD#

   6004  1 000450   200077 236100                    LDQ     FIRST_NEW#,,AUTO
         1 000451   000000 116000 xsym               CMPQ    BCD#
         1 000452   000462 601000 1                  TNZ     s:6011

      424     6005    4      THEN DO ;

      425     6006    4              DUP.MSG_CODE = %E$PCNA_NONE_INPUT ;

   6006  1 000453   001060 235007                    LDA     560,DL
         1 000454   000020 755000 xsym               STA     DUP+16

      426     6007    4              CALL TOU$DU_USER_WRITE ;

   6007  1 000455   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000456   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000457   000000 011000                    NOP     0

      427     6008    4              ALTRETURN ;

   6008  1 000460   200100 221300                    LDX1  ! FIRST_NEW#+1,,AUTO
         1 000461   000000 702211                    TSX2  ! 0,X1

      428     6009    4           END /* THEN */ ;
      429     6010    4      ELSE DO ;

      430     6011    4              CALL P_GET_TEMP_LIST ALTRET (ERROR) ;

   6011  1 000462   000653 701000 1                  TSX1    P_GET_TEMP_LIST
         1 000463   000546 702000 1                  TSX2    ERROR

      431     6012    4              CALL P_FORM_TEMP_LIST (FIRST_NEW#, BCD# - 1) ;

   6012  1 000464   000000 235000 xsym               LDA     BCD#
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:69   
         1 000465   000001 135007                    SBLA    1,DL
         1 000466   200116 755100                    STA     FOUND+7,,AUTO
         1 000467   200116 630500                    EPPR0   FOUND+7,,AUTO
         1 000470   200104 450500                    STP0    I+1,,AUTO
         1 000471   200077 631500                    EPPR1   FIRST_NEW#,,AUTO
         1 000472   200103 451500                    STP1    MATCH_INX+2,,AUTO
         1 000473   000676 701000 1                  TSX1    P_FORM_TEMP_LIST
         1 000474   000000 011000                    NOP     0

      432     6013    4              IF MATCH.COUNT > 0

   6013  1 000475   200014 235100                    LDA     MATCH,,AUTO
         1 000476   000550 600000 1                  TZE     s:6030

      433     6014    5              THEN DO ;

      434     6015    5                      DUP.MSG_CODE = %E$PCNA_SAME_ADDRESS ;

   6015  1 000477   001061 236007                    LDQ     561,DL
         1 000500   000020 756000 xsym               STQ     DUP+16

      435     6016    5                      CALL TOU$DU_USER_WRITE ;

   6016  1 000501   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000502   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000503   000000 011000                    NOP     0

      436     6017    6                      DO MATCH_INX = 0 TO MATCH.COUNT - 1 ;

   6017  1 000504   200101 450100                    STZ     MATCH_INX,,AUTO
         1 000505   000523 710000 1                  TRA     s:6020+3

      437     6018    6                         SUBSTR (BCD_B(MATCH.INDEXES(MATCH_INX)), 42, 17) =

   6018  1 000506   200101 235100                    LDA     MATCH_INX,,AUTO
         1 000507   000100 101505                    MRL     fill='000'O
         1 000510   200015 000001                    ADSC9   MATCH+1,A,AUTO           cn=0,n=1
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:70   
         1 000511   200110 000004                    ADSC9   FOUND+1,,AUTO            cn=0,n=4
         1 000512   200110 236100                    LDQ     FOUND+1,,AUTO
         1 000513   000124 402007                    MPY     84,DL
         1 000514   000103 470400 xsym               LDP0    DUP+67
         1 000515   040106 100400                    MLR     fill='040'O
         1 000516   000004 000021 0                  ADSC9   4                        cn=0,n=17
         1 000517   000012 400021                    ADSC9   10,Q,PR0                 cn=2,n=17

      438     6019    6                                 '*** duplicate ***' ;
      439     6020    6                      END /* DO */ ;

   6020  1 000520   200101 235100                    LDA     MATCH_INX,,AUTO
         1 000521   000001 035007                    ADLA    1,DL
         1 000522   200101 755100                    STA     MATCH_INX,,AUTO
         1 000523   200101 236100                    LDQ     MATCH_INX,,AUTO
         1 000524   200014 116100                    CMPQ    MATCH,,AUTO
         1 000525   000506 602000 1                  TNC     s:6018

      440     6021    5                      DUP.MSG_CODE = %T$B_PATCH ;

   6021  1 000526   000036 235007                    LDA     30,DL
         1 000527   000020 755000 xsym               STA     DUP+16

      441     6022    6                      DO CUR# = FIRST_NEW# TO BCD# - 1 ;

   6022  1 000530   200077 235100                    LDA     FIRST_NEW#,,AUTO
         1 000531   000000 755000 xsym               STA     CUR#
         1 000532   000541 710000 1                  TRA     s:6024+3

      442     6023    6                         CALL TOU$DU_USER_WRITE ;

   6023  1 000533   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000534   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000535   000000 011000                    NOP     0

      443     6024    6                      END /* DO */ ;

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:71   
   6024  1 000536   000000 235000 xsym               LDA     CUR#
         1 000537   000001 035007                    ADLA    1,DL
         1 000540   000000 755000 xsym               STA     CUR#
         1 000541   000000 236000 xsym               LDQ     CUR#
         1 000542   000000 116000 xsym               CMPQ    BCD#
         1 000543   000533 602000 1                  TNC     s:6023

      444     6025    5                      CALL P_FREE_TEMP_LIST ;

   6025  1 000544   001103 701000 1                  TSX1    P_FREE_TEMP_LIST
         1 000545   000000 011000                    NOP     0

      445     6026    5   ERROR:
      446     6027    5                      ALTRETURN ;

   6027  1 000546   200100 221300       ERROR        LDX1  ! FIRST_NEW#+1,,AUTO
         1 000547   000000 702211                    TSX2  ! 0,X1

      447     6028    5                   END /* THEN */ ;
      448     6029    5              ELSE DO ;

      449     6030    5                      CALL P_FREE_TEMP_LIST ALTRET (ERROR) ;

   6030  1 000550   001103 701000 1                  TSX1    P_FREE_TEMP_LIST
         1 000551   000546 702000 1                  TSX2    ERROR

      450     6031    5                      RETURN ;

   6031  1 000552   200100 221300                    LDX1  ! FIRST_NEW#+1,,AUTO
         1 000553   000001 702211                    TSX2  ! 1,X1

      451     6032    5                   END /* ELSE */ ;
      452     6033    4           END /* ELSE */ ;
      453     6034
      454     6035    3   END P_CHECK_NEW_ADDRESSES ;
      455     6036        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:72   
      456     6037        /*I*  NAME:        P_CHECK_PATCHED_ADDRESSES
      457     6038              AUTHOR:      Scott S. Sheppard
      458     6039              PURPOSE:     Validates All Patches from IFAD
      459     6040              INTERFACE:   P_GET_TEMP_LIST
      460     6041                           P_FORM_TEMP_LIST
      461     6042                           P_FREE_TEMP_LIST
      462     6043                           TOU$DU_USER_WRITE
      463     6044              INPUT:       MATCH.COUNT - number of duplicate addresses
      464     6045                           MATCH.INDEXES - indexes into BCD_B array
      465     6046                           BCD# - total number of BCD cards
      466     6047              OUTPUT:      DUP.MSG_CODE
      467     6048                           CUR# - set so TOU$REPLACE will print the right entry
      468     6049                                  of BCD_B when a '~PATCH' is encountered
      469     6050                           DUP.ERROR_IMAGE - set so TOU$REPLACE will print theTEMP_B
      470     6051                                             entry for '~PTCH2'
      471     6052              DESCRIPTION: This procedure ensures that no two patches from theset of
      472     6053                           new patches  and  existing patches modify the same object
      473     6054                           deck address.
      474     6055        */
      475     6056        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:73   
      476     6057    2   P_CHECK_PATCHED_ADDRESSES: PROC ALTRET ;

   6057  1 000554   200100 741300       P_CHECK_PAT* STX1  ! FIRST_NEW#+1,,AUTO

      477     6058
      478     6059    3      DCL MATCH_INX   UBIN WORD ALIGNED ;
      479     6060
      480     6061        /* Code */
      481     6062
      482     6063    3      CALL P_GET_TEMP_LIST ALTRET (ERROR) ;

   6063  1 000555   000653 701000 1                  TSX1    P_GET_TEMP_LIST
         1 000556   000645 702000 1                  TSX2    ERROR

      483     6064    3      CALL P_FORM_TEMP_LIST (0, BCD# - 1) ;

   6064  1 000557   000000 235000 xsym               LDA     BCD#
         1 000560   000001 135007                    SBLA    1,DL
         1 000561   200117 755100                    STA     FOUND+8,,AUTO
         1 000562   200117 630500                    EPPR0   FOUND+8,,AUTO
         1 000563   200104 450500                    STP0    I+1,,AUTO
         1 000564   000002 236000 2                  LDQ     2
         1 000565   200103 756100                    STQ     MATCH_INX+2,,AUTO
         1 000566   000676 701000 1                  TSX1    P_FORM_TEMP_LIST
         1 000567   000000 011000                    NOP     0

      484     6065    3      IF MATCH.COUNT > 0

   6065  1 000570   200014 235100                    LDA     MATCH,,AUTO
         1 000571   000647 600000 1                  TZE     s:6084

      485     6066    3      THEN IF OVERWRITE

   6066  1 000572   200003 234100                    SZN     OVERWRITE,,AUTO
         1 000573   000577 605000 1                  TPL     s:6069

      486     6067    3         THEN CALL P_REFORM_BCD_LIST ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:74   

   6067  1 000574   001016 701000 1                  TSX1    P_REFORM_BCD_LIST
         1 000575   000000 011000                    NOP     0
         1 000576   000647 710000 1                  TRA     s:6084

      487     6068    4         ELSE DO ;

      488     6069    4                 DUP.MSG_CODE = %E$PCPA_SAME_ADDRESS ;

   6069  1 000577   001062 236007                    LDQ     562,DL
         1 000600   000020 756000 xsym               STQ     DUP+16

      489     6070    4                 CALL TOU$DU_USER_WRITE ;

   6070  1 000601   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000602   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000603   000000 011000                    NOP     0

      490     6071    5                 DO MATCH_INX = 0 TO MATCH.COUNT - 1 ;

   6071  1 000604   200101 450100                    STZ     MATCH_INX,,AUTO
         1 000605   000623 710000 1                  TRA     s:6074+3

      491     6072    5                    SUBSTR (BCD_B(MATCH.INDEXES(MATCH_INX)), 42, 19) =

   6072  1 000606   200101 235100                    LDA     MATCH_INX,,AUTO
         1 000607   000100 101505                    MRL     fill='000'O
         1 000610   200015 000001                    ADSC9   MATCH+1,A,AUTO           cn=0,n=1
         1 000611   200110 000004                    ADSC9   FOUND+1,,AUTO            cn=0,n=4
         1 000612   200110 236100                    LDQ     FOUND+1,,AUTO
         1 000613   000124 402007                    MPY     84,DL
         1 000614   000103 470400 xsym               LDP0    DUP+67
         1 000615   040106 100400                    MLR     fill='040'O
         1 000616   000011 000023 0                  ADSC9   9                        cn=0,n=19
         1 000617   000012 400023                    ADSC9   10,Q,PR0                 cn=2,n=19

      492     6073    5                            '* already patched *' ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:75   
      493     6074    5                 END /* DO */ ;

   6074  1 000620   200101 235100                    LDA     MATCH_INX,,AUTO
         1 000621   000001 035007                    ADLA    1,DL
         1 000622   200101 755100                    STA     MATCH_INX,,AUTO
         1 000623   200101 236100                    LDQ     MATCH_INX,,AUTO
         1 000624   200014 116100                    CMPQ    MATCH,,AUTO
         1 000625   000606 602000 1                  TNC     s:6072

      494     6075    4                 DUP.MSG_CODE = %T$B_PATCH ;

   6075  1 000626   000036 235007                    LDA     30,DL
         1 000627   000020 755000 xsym               STA     DUP+16

      495     6076    5                 DO CUR# = 0 TO BCD# - 1 ;

   6076  1 000630   000000 450000 xsym               STZ     CUR#
         1 000631   000640 710000 1                  TRA     s:6078+3

      496     6077    5                    CALL TOU$DU_USER_WRITE ;

   6077  1 000632   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000633   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000634   000000 011000                    NOP     0

      497     6078    5                 END /* DO */ ;

   6078  1 000635   000000 235000 xsym               LDA     CUR#
         1 000636   000001 035007                    ADLA    1,DL
         1 000637   000000 755000 xsym               STA     CUR#
         1 000640   000000 236000 xsym               LDQ     CUR#
         1 000641   000000 116000 xsym               CMPQ    BCD#
         1 000642   000632 602000 1                  TNC     s:6077

      498     6079    4                 CALL P_FREE_TEMP_LIST ;

   6079  1 000643   001103 701000 1                  TSX1    P_FREE_TEMP_LIST
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:76   
         1 000644   000000 011000                    NOP     0

      499     6080    4   ERROR:
      500     6081    4                 ALTRETURN ;

   6081  1 000645   200100 221300       ERROR        LDX1  ! FIRST_NEW#+1,,AUTO
         1 000646   000000 702211                    TSX2  ! 0,X1

      501     6082    4              END /* ELSE */ ;
      502     6083    3      ELSE /* All old and new patches modify unique addresses */ ;
      503     6084    3      CALL P_FREE_TEMP_LIST ALTRET (ERROR) ;

   6084  1 000647   001103 701000 1                  TSX1    P_FREE_TEMP_LIST
         1 000650   000645 702000 1                  TSX2    ERROR

      504     6085    3      RETURN ;

   6085  1 000651   200100 221300                    LDX1  ! FIRST_NEW#+1,,AUTO
         1 000652   000001 702211                    TSX2  ! 1,X1

      505     6086
      506     6087    3   END P_CHECK_PATCHED_ADDRESSES ;
      507     6088        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:77   
      508     6089        /*I*  NAME:        P_GET_TEMP_LIST
      509     6090              AUTHOR:      Scott S. Sheppard
      510     6091              PURPOSE:     Gets Space for temporary list of BCD cards
      511     6092              INTERFACE:   TOU$DU_GET_DATA_SEGMENT
      512     6093              INPUT:       MAX_PATCHES
      513     6094                           BCD_RCD_LGTH
      514     6095              OUTPUT:      TEMP_V
      515     6096                           TEMP_SIZE
      516     6097                           DUP.DS_V
      517     6098                           DUP.NUM_WORDS
      518     6099              DESCRIPTION: This procedure acquires space for a temporary list of BCD
      519     6100                           cards.
      520     6101        */
      521     6102
      522     6103    2   P_GET_TEMP_LIST: PROC ALTRET ;

   6103  1 000653   200102 741300       P_GET_TEMP_* STX1  ! MATCH_INX+1,,AUTO

      523     6104
      524     6105    3   /* Code */ ;
      525     6106
      526     6107    3      TEMP_V.FLAGS = 0 ;

   6107  1 000654   200010 450100                    STZ     TEMP_V,,AUTO

      527     6108    3      TEMP_V.PTR$ = ADDR(NIL) ;

   6108  1 000655   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000656   200011 756100                    STQ     OPT#,,AUTO

      528     6109    3      TEMP_SIZE = (%MAX_PATCHES * %BCD_RCD_LGTH) / 4 ;

   6109  1 000657   010150 235007                    LDA     4200,DL
         1 000660   200013 755100                    STA     TEMP_SIZE,,AUTO

      529     6110    3      DUP.DS_V = TEMP_V ;

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:78   
   6110  1 000661   200010 237100                    LDAQ    TEMP_V,,AUTO
         1 000662   000002 757000 xsym               STAQ    DUP+2

      530     6111    3      DUP.NUM_WORDS = TEMP_SIZE ;

   6111  1 000663   200013 720100                    LXL0    TEMP_SIZE,,AUTO
         1 000664   000001 740000 xsym               STX0    DUP+1

      531     6112    3      CALL TOU$DU_GET_DATA_SEGMENT ALTRET (ERROR) ;

   6112  1 000665   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000666   000000 701000 xent               TSX1    TOU$DU_GET_DATA_SEGMENT
         1 000667   000674 702000 1                  TSX2    ERROR

      532     6113    3      TEMP_V = DUP.DS_V ;

   6113  1 000670   000002 237000 xsym               LDAQ    DUP+2
         1 000671   200010 757100                    STAQ    TEMP_V,,AUTO

      533     6114    3      RETURN ;

   6114  1 000672   200102 221300                    LDX1  ! MATCH_INX+1,,AUTO
         1 000673   000001 702211                    TSX2  ! 1,X1

      534     6115
      535     6116    3   ERROR:
      536     6117    3      ALTRETURN ;

   6117  1 000674   200102 221300       ERROR        LDX1  ! MATCH_INX+1,,AUTO
         1 000675   000000 702211                    TSX2  ! 0,X1

      537     6118
      538     6119    3   END P_GET_TEMP_LIST ;
      539     6120        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:79   
      540     6121        /*I*  NAME:        P_FORM_TEMP_LIST
      541     6122              AUTHOR:      Scott S. Sheppard
      542     6123              PURPOSE:     Forms a list of Unique Patch Cards
      543     6124              INTERFACE:   None called.
      544     6125              INPUT:       BCD_B
      545     6126                           BCD#
      546     6127              OUTPUT:      TEMP_B
      547     6128                           TEMP#
      548     6129                           MATCH
      549     6130              DESCRIPTION: This procedure forms a temporary list of BCD cards
      550     6131                           omitting an  earlier  patches that modify the same
      551     6132                           deck address.
      552     6133        */
      553     6134        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:80   
      554     6135    2   P_FORM_TEMP_LIST: PROC (FIRST, LAST) ;

   6135  1 000676   200102 741300       P_FORM_TEMP* STX1  ! MATCH_INX+1,,AUTO

      555     6136
      556     6137    3      DCL FIRST     UBIN WORD ALIGNED ;
      557     6138    3      DCL LAST      UBIN WORD ALIGNED ;
      558     6139    3      DCL BCD_INX   SBIN WORD ALIGNED ;
      559     6140    3      DCL TEMP_INX  SBIN WORD ALIGNED ;
      560     6141    3      DCL FOUND     BIT (1) CALIGNED ;
      561     6142
      562     6143        /* Code */
      563     6144
      564     6145    3      TEMP_B(0) = BCD_B(LAST) ;

   6145  1 000677   200104 470500                    LDP0    @LAST,,AUTO
         1 000700   000000 235100                    LDA     0,,PR0
         1 000701   000044 733000                    LRS     36
         1 000702   000124 402007                    MPY     84,DL
         1 000703   000103 471400 xsym               LDP1    DUP+67
         1 000704   200011 473500                    LDP3    OPT#,,AUTO
         1 000705   040100 100506                    MLR     fill='040'O
         1 000706   100000 000124                    ADSC9   0,Q,PR1                  cn=0,n=84
         1 000707   300000 000124                    ADSC9   0,,PR3                   cn=0,n=84

      565     6146    3      TEMP# = 1 ;

   6146  1 000710   000001 235007                    LDA     1,DL
         1 000711   200012 755100                    STA     TEMP#,,AUTO

      566     6147    3      MATCH.COUNT = 0 ;

   6147  1 000712   200014 450100                    STZ     MATCH,,AUTO

      567     6148    4      DO BCD_INX = LAST - 1 DOWNTO FIRST BY -1 ;

   6148  1 000713   000000 235100                    LDA     0,,PR0
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:81   
         1 000714   000001 135007                    SBLA    1,DL
         1 000715   200105 755100                    STA     BCD_INX,,AUTO
         1 000716   001007 710000 1                  TRA     s:6166+2

      568     6149    4         FOUND = %FALSE ;

   6149  1 000717   200107 450100                    STZ     FOUND,,AUTO

      569     6150    4         TEMP_INX = 0 ;

   6150  1 000720   200106 450100                    STZ     TEMP_INX,,AUTO

      570     6151    5         DO WHILE (~FOUND & TEMP_INX < TEMP#) ;

   6151  1 000721   000750 710000 1                  TRA     s:6159

      571     6152    5            IF SUBSTR (BCD_B(BCD_INX), 0, 6) = SUBSTR (TEMP_B(TEMP_INX), 0, 6)

   6152  1 000722   200105 236100                    LDQ     BCD_INX,,AUTO
         1 000723   000124 402007                    MPY     84,DL
         1 000724   200110 756100                    STQ     FOUND+1,,AUTO
         1 000725   200106 236100                    LDQ     TEMP_INX,,AUTO
         1 000726   000124 402007                    MPY     84,DL
         1 000727   000103 470400 xsym               LDP0    DUP+67
         1 000730   200110 235100                    LDA     FOUND+1,,AUTO
         1 000731   200011 471500                    LDP1    OPT#,,AUTO
         1 000732   040106 106505                    CMPC    fill='040'O
         1 000733   000000 000006                    ADSC9   0,A,PR0                  cn=0,n=6
         1 000734   100000 000006                    ADSC9   0,Q,PR1                  cn=0,n=6
         1 000735   000747 601000 1                  TNZ     s:6158

      572     6153    6            THEN DO ;

      573     6154    6                    FOUND = %TRUE ;

   6154  1 000736   400000 236003                    LDQ     -131072,DU
         1 000737   200107 756100                    STQ     FOUND,,AUTO
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:82   

      574     6155    6                    MATCH.INDEXES(MATCH.COUNT) = BCD_INX ;

   6155  1 000740   200014 235100                    LDA     MATCH,,AUTO
         1 000741   000105 101500                    MRL     fill='000'O
         1 000742   200105 000004                    ADSC9   BCD_INX,,AUTO            cn=0,n=4
         1 000743   200015 000001                    ADSC9   MATCH+1,A,AUTO           cn=0,n=1

      575     6156    6                    MATCH.COUNT = MATCH.COUNT + 1 ;

   6156  1 000744   000001 035007                    ADLA    1,DL
         1 000745   200014 755100                    STA     MATCH,,AUTO

      576     6157    6                 END /* THEN */ ;

   6157  1 000746   000750 710000 1                  TRA     s:6159

      577     6158    5            ELSE TEMP_INX = TEMP_INX + 1 ;

   6158  1 000747   200106 054100                    AOS     TEMP_INX,,AUTO

      578     6159    5         END /* DO */ ;

   6159  1 000750   400000 220003                    LDX0    -131072,DU
         1 000751   200106 236100                    LDQ     TEMP_INX,,AUTO
         1 000752   000756 604000 1                  TMI     s:6159+6
         1 000753   200012 116100                    CMPQ    TEMP#,,AUTO
         1 000754   000756 602000 1                  TNC     s:6159+6
         1 000755   000000 220003                    LDX0    0,DU
         1 000756   200107 236100                    LDQ     FOUND,,AUTO
         1 000757   400000 376003                    ANQ     -131072,DU
         1 000760   400000 676003                    ERQ     -131072,DU
         1 000761   200110 756100                    STQ     FOUND+1,,AUTO
         1 000762   000000 636010                    EAQ     0,X0
         1 000763   200110 376100                    ANQ     FOUND+1,,AUTO
         1 000764   000722 601000 1                  TNZ     s:6152

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:83   
      579     6160    4         IF FOUND

   6160  1 000765   200107 234100                    SZN     FOUND,,AUTO
         1 000766   001005 604000 1                  TMI     s:6166

      580     6161    4         THEN /* do not add duplicate entry to the TEMP array */ ;
      581     6162    5         ELSE DO ;

      582     6163    5                 TEMP_B(TEMP#) = BCD_B(BCD_INX) ;

   6163  1 000767   200105 236100                    LDQ     BCD_INX,,AUTO
         1 000770   000124 402007                    MPY     84,DL
         1 000771   200110 756100                    STQ     FOUND+1,,AUTO
         1 000772   200012 236100                    LDQ     TEMP#,,AUTO
         1 000773   000124 402007                    MPY     84,DL
         1 000774   000103 470400 xsym               LDP0    DUP+67
         1 000775   200110 235100                    LDA     FOUND+1,,AUTO
         1 000776   200011 471500                    LDP1    OPT#,,AUTO
         1 000777   040106 100505                    MLR     fill='040'O
         1 001000   000000 000124                    ADSC9   0,A,PR0                  cn=0,n=84
         1 001001   100000 000124                    ADSC9   0,Q,PR1                  cn=0,n=84

      583     6164    5                 TEMP# = TEMP# + 1 ;

   6164  1 001002   200012 235100                    LDA     TEMP#,,AUTO
         1 001003   000001 035007                    ADLA    1,DL
         1 001004   200012 755100                    STA     TEMP#,,AUTO

      584     6165    5              END /* ELSE */ ;

      585     6166    4      END /* DO */ ;

   6166  1 001005   000001 336007                    LCQ     1,DL
         1 001006   200105 056100                    ASQ     BCD_INX,,AUTO
         1 001007   200103 470500                    LDP0    @FIRST,,AUTO
         1 001010   200105 236100                    LDQ     BCD_INX,,AUTO
         1 001011   001014 604000 1                  TMI     s:6167
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:84   
         1 001012   000000 116100                    CMPQ    0,,PR0
         1 001013   000717 603000 1                  TRC     s:6149

      586     6167    3      RETURN ;

   6167  1 001014   200102 221300                    LDX1  ! MATCH_INX+1,,AUTO
         1 001015   000001 702211                    TSX2  ! 1,X1

      587     6168
      588     6169    3   END P_FORM_TEMP_LIST ;
      589     6170        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:85   
      590     6171        /*I*  NAME:        P_REFORM_BCD_LIST
      591     6172              AUTHOR:      Scott S. Sheppard
      592     6173              PURPOSE:     Re-assigns BCD list
      593     6174              INTERFACE:   TOU$DU_USER_WRITE
      594     6175              INPUT:       TEMP_B
      595     6176                           TEMP#
      596     6177              OUTPUT:      DUP.MSG_CODE
      597     6178                           BCD_B
      598     6179                           BCD#
      599     6180              DESCRIPTION: This procedure assigns the BCD list from the temporary list.
      600     6181        */
      601     6182
      602     6183    2   P_REFORM_BCD_LIST: PROC ;

   6183  1 001016   200102 741300       P_REFORM_BC* STX1  ! MATCH_INX+1,,AUTO

      603     6184
      604     6185    3      DCL I          UBIN WORD ALIGNED ;
      605     6186
      606     6187        /* Code */
      607     6188
      608     6189    3      DUP.MSG_CODE = %T$P_OVERWRITE ;

   6189  1 001017   000243 235007                    LDA     163,DL
         1 001020   000020 755000 xsym               STA     DUP+16

      609     6190    3      CALL TOU$DU_USER_WRITE ;

   6190  1 001021   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001022   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 001023   000000 011000                    NOP     0

      610     6191    3      DUP.MSG_CODE = %T$B_PATCH ;

   6191  1 001024   000036 235007                    LDA     30,DL
         1 001025   000020 755000 xsym               STA     DUP+16

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:86   
      611     6192    4      DO I = 0 TO MATCH.COUNT - 1 ;

   6192  1 001026   200103 450100                    STZ     I,,AUTO
         1 001027   001050 710000 1                  TRA     s:6196+3

      612     6193    4         CUR# = MATCH.INDEXES(I) ;

   6193  1 001030   200103 235100                    LDA     I,,AUTO
         1 001031   000000 101505                    MRL     fill='000'O
         1 001032   200015 000001                    ADSC9   MATCH+1,A,AUTO           cn=0,n=1
         1 001033   000000 000004 xsym               ADSC9   CUR#                     cn=0,n=4

      613     6194    4         SUBSTR (BCD_B(CUR#), 42, 17) = '** overwritten **' ;

   6194  1 001034   000000 236000 xsym               LDQ     CUR#
         1 001035   000124 402007                    MPY     84,DL
         1 001036   000103 470400 xsym               LDP0    DUP+67
         1 001037   040106 100400                    MLR     fill='040'O
         1 001040   000016 000021 0                  ADSC9   14                       cn=0,n=17
         1 001041   000012 400021                    ADSC9   10,Q,PR0                 cn=2,n=17

      614     6195    4         CALL TOU$DU_USER_WRITE ;

   6195  1 001042   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001043   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 001044   000000 011000                    NOP     0

      615     6196    4      END /* DO */ ;

   6196  1 001045   200103 235100                    LDA     I,,AUTO
         1 001046   000001 035007                    ADLA    1,DL
         1 001047   200103 755100                    STA     I,,AUTO
         1 001050   200103 236100                    LDQ     I,,AUTO
         1 001051   200014 116100                    CMPQ    MATCH,,AUTO
         1 001052   001030 602000 1                  TNC     s:6193

      616     6197
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:87   
      617     6198    4      DO I = 0 TO TEMP# - 1 ;

   6198  1 001053   200103 450100                    STZ     I,,AUTO
         1 001054   001074 710000 1                  TRA     s:6200+3

      618     6199    4         BCD_B(I) = TEMP_B(TEMP# - 1 - I) ;

   6199  1 001055   200012 236100                    LDQ     TEMP#,,AUTO
         1 001056   200103 136100                    SBLQ    I,,AUTO
         1 001057   000124 402007                    MPY     84,DL
         1 001060   200110 756100                    STQ     FOUND+1,,AUTO
         1 001061   200103 236100                    LDQ     I,,AUTO
         1 001062   000124 402007                    MPY     84,DL
         1 001063   200011 470500                    LDP0    OPT#,,AUTO
         1 001064   200110 235100                    LDA     FOUND+1,,AUTO
         1 001065   000103 471400 xsym               LDP1    DUP+67
         1 001066   040106 100505                    MLR     fill='040'O
         1 001067   077753 000124                    ADSC9   -21,A,PR0                cn=0,n=84
         1 001070   100000 000124                    ADSC9   0,Q,PR1                  cn=0,n=84

      619     6200    4      END /* DO */ ;

   6200  1 001071   200103 235100                    LDA     I,,AUTO
         1 001072   000001 035007                    ADLA    1,DL
         1 001073   200103 755100                    STA     I,,AUTO
         1 001074   200103 236100                    LDQ     I,,AUTO
         1 001075   200012 116100                    CMPQ    TEMP#,,AUTO
         1 001076   001055 602000 1                  TNC     s:6199

      620     6201    3      BCD# = TEMP# ;

   6201  1 001077   200012 235100                    LDA     TEMP#,,AUTO
         1 001100   000000 755000 xsym               STA     BCD#

      621     6202    3      RETURN ;

   6202  1 001101   200102 221300                    LDX1  ! MATCH_INX+1,,AUTO
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:88   
         1 001102   000001 702211                    TSX2  ! 1,X1

      622     6203
      623     6204    3   END P_REFORM_BCD_LIST ;
      624     6205        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:89   
      625     6206        /*I*  NAME:        P_FREE_TEMP_LIST
      626     6207              AUTHOR:      Scott S. Sheppard
      627     6208              PURPOSE:     Releases Temporary Memory
      628     6209              INTERFACE:   TOU$DU_FREE_DATA_SEGMENT
      629     6210              INPUT:       TEMP_V
      630     6211                           TEMP_SIZE
      631     6212              OUTPUT:      DUP.DS_V
      632     6213                           DUP.NUM_WORDS
      633     6214              DESCRIPTION: This procedure releases the temporary BCD list.
      634     6215        */
      635     6216
      636     6217    2   P_FREE_TEMP_LIST: PROC ALTRET ;

   6217  1 001103   200102 741300       P_FREE_TEMP* STX1  ! MATCH_INX+1,,AUTO

      637     6218
      638     6219    3   /* Code */ ;
      639     6220
      640     6221    3      DUP.DS_V = TEMP_V ;

   6221  1 001104   200010 237100                    LDAQ    TEMP_V,,AUTO
         1 001105   000002 757000 xsym               STAQ    DUP+2

      641     6222    3      DUP.NUM_WORDS = TEMP_SIZE ;

   6222  1 001106   200013 720100                    LXL0    TEMP_SIZE,,AUTO
         1 001107   000001 740000 xsym               STX0    DUP+1

      642     6223    3      CALL TOU$DU_FREE_DATA_SEGMENT ALTRET (ERROR) ;

   6223  1 001110   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001111   000000 701000 xent               TSX1    TOU$DU_FREE_DATA_SEGMENT
         1 001112   001115 702000 1                  TSX2    ERROR

      643     6224    3      RETURN ;

   6224  1 001113   200102 221300                    LDX1  ! MATCH_INX+1,,AUTO
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:90   
         1 001114   000001 702211                    TSX2  ! 1,X1

      644     6225
      645     6226    3   ERROR:
      646     6227    3      ALTRETURN ;

   6227  1 001115   200102 221300       ERROR        LDX1  ! MATCH_INX+1,,AUTO
         1 001116   000000 702211                    TSX2  ! 0,X1

      647     6228
      648     6229    3   END P_FREE_TEMP_LIST ;
      649     6230        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:91   
      650     6231        /*I*  NAME:        P_APPEND_DKEND
      651     6232              AUTHOR:      Scott S. Sheppard
      652     6233              PURPOSE:     Adds $DKEND CARD
      653     6234              INTERFACE:   None Called.
      654     6235              INPUT:       BCD# - current number of BCD cards (all patches)
      655     6236                           DKEND - $DKEND card stored
      656     6237              OUTPUT:      BCD# - incremented by 1 to include the $DKEND
      657     6238                           BCD_B - $DKEND card added to the array
      658     6239              DESCRIPTION: This procedure places the $DKEND card at the end ofthe list
      659     6240                           of BCD cards. (was previously removed to add patches)
      660     6241        */
      661     6242
      662     6243    2   P_APPEND_DKEND: PROC ;

   6243  1 001117   200100 741300       P_APPEND_DK* STX1  ! FIRST_NEW#+1,,AUTO

      663     6244
      664     6245        /* Code */
      665     6246
      666     6247    3      BCD_B(BCD#) = DKEND_ ;

   6247  1 001120   000000 236000 xsym               LDQ     BCD#
         1 001121   000124 402007                    MPY     84,DL
         1 001122   000103 470400 xsym               LDP0    DUP+67
         1 001123   040106 100400                    MLR     fill='040'O
         1 001124   000000 000124 xsym               ADSC9   DKEND                    cn=0,n=84
         1 001125   000000 000124                    ADSC9   0,Q,PR0                  cn=0,n=84

      667     6248    3      BCD# = BCD# + 1 ;

   6248  1 001126   000000 235000 xsym               LDA     BCD#
         1 001127   000001 035007                    ADLA    1,DL
         1 001130   000000 755000 xsym               STA     BCD#

      668     6249    3      RETURN ;

   6249  1 001131   200100 221300                    LDX1  ! FIRST_NEW#+1,,AUTO
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:92   
         1 001132   000001 702211                    TSX2  ! 1,X1

      669     6250
      670     6251    3   END P_APPEND_DKEND ;
      671     6252        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:93   
      672     6253        /*I*  NAME:        P_SAVE_CHANGED_DECK
      673     6254              AUTHOR:      Scott S. Sheppard
      674     6255              PURPOSE:     Saves New Object Deck Records
      675     6256              INTERFACE:   TOU$CHECKSUM
      676     6257                           TOU$REFORM_DECK_CHECKSUM
      677     6258                           TOU$DU_UPDATE_LOG
      678     6259                           TOU$DFU_DF_WR_LOG
      679     6260                           TOU$DFU_DF_DL_DECK
      680     6261                           TOU$DFU_DF_WR_OBJECT
      681     6262                           TOU$DFU_DF_WR_BINARY
      682     6263                           TOU$DFU_DF_WR_BCD_CARDS
      683     6264                           TOU$DFU_DF_WR_OBJECT_REFLIST
      684     6265              INPUT:       OBJECT
      685     6266                           BCD#
      686     6267              OUTPUT:      Updated records written to the deckfile.
      687     6268              DESCRIPTION: This procedure deletes the old object deck and saves
      688     6269                           the new one in its place.
      689     6270        */
      690     6271        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:94   
      691     6272    2   P_SAVE_CHANGED_DECK: PROC ALTRET ;

   6272  1 001133   200100 741300       P_SAVE_CHAN* STX1  ! FIRST_NEW#+1,,AUTO

      692     6273
      693     6274        /* Code */
      694     6275
      695     6276    3      CALL TOU$DFU_DF_DL_DECK ALTRET (ERROR) ;

   6276  1 001134   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001135   000000 701000 xent               TSX1    TOU$DFU_DF_DL_DECK
         1 001136   001222 702000 1                  TSX2    ERROR

      696     6277    3      OBJECT.TOTAL_COUNT = OBJECT.BINARY_COUNT + BCD# + 1 ;

   6277  1 001137   000024 236000 xsym               LDQ     OBJECT+20
         1 001140   777777 376007                    ANQ     -1,DL
         1 001141   000000 036000 xsym               ADLQ    BCD#
         1 001142   000001 620006                    EAX0    1,QL
         1 001143   000025 740000 xsym               STX0    OBJECT+21

      697     6278    3      CALL TOU$REFORM_DECK_CHECKSUM (,,,) ;

   6278  1 001144   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001145   000000 701000 xent               TSX1    TOU$REFORM_DECK_CHECKSUM
         1 001146   000000 011000                    NOP     0

      698     6279    3      CALL TOU$CHECKSUM (0, ADDR(OBJECT), 23, OBJECT.CHECKSUM) ;

   6279  1 001147   000003 236000 2                  LDQ     3
         1 001150   200110 756100                    STQ     FOUND+1,,AUTO
         1 001151   000006 237000 2                  LDAQ    6
         1 001152   200114 757100                    STAQ    FOUND+5,,AUTO
         1 001153   200110 630500                    EPPR0   FOUND+1,,AUTO
         1 001154   200113 450500                    STP0    FOUND+4,,AUTO
         1 001155   000002 236000 2                  LDQ     2
         1 001156   200112 756100                    STQ     FOUND+3,,AUTO
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:95   
         1 001157   200112 630500                    EPPR0   FOUND+3,,AUTO
         1 001160   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 001161   000000 701000 xent               TSX1    TOU$CHECKSUM
         1 001162   000000 011000                    NOP     0

      699     6280    3      CALL TOU$DFU_DF_WR_OBJECT ALTRET (ERROR) ;

   6280  1 001163   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001164   000000 701000 xent               TSX1    TOU$DFU_DF_WR_OBJECT
         1 001165   001222 702000 1                  TSX2    ERROR

      700     6281
      701     6282    3      CALL TOU$DFU_DF_WR_BINARY ALTRET (SYNC_ERROR) ;

   6282  1 001166   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001167   000000 701000 xent               TSX1    TOU$DFU_DF_WR_BINARY
         1 001170   001224 702000 1                  TSX2    SYNC_ERROR

      702     6283    3      CALL TOU$DFU_DF_WR_BCD_CARDS ALTRET (SYNC_ERROR) ;

   6283  1 001171   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001172   000000 701000 xent               TSX1    TOU$DFU_DF_WR_BCD_CARDS
         1 001173   001224 702000 1                  TSX2    SYNC_ERROR

      703     6284    3      CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (SYNC_ERROR) ;

   6284  1 001174   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001175   000000 701000 xent               TSX1    TOU$DFU_DF_WR_OBJECT_REFLIST
         1 001176   001224 702000 1                  TSX2    SYNC_ERROR

      704     6285
      705     6286    3      DUP.LOG.TYPE = %T$SF_PATCH ;

   6286  1 001177   000120 235007                    LDA     80,DL
         1 001200   000122 755000 xsym               STA     DUP+82

      706     6287    3      DUP.LOG.CATALOG = ' ' ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:96   

   6287  1 001201   040000 100400                    MLR     fill='040'O
         1 001202   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 001203   000123 000025 xsym               ADSC9   DUP+83                   cn=0,n=21

      707     6288    3      DUP.LOG.DECK = OBJECT_KEY.DATA ;

   6288  1 001204   040000 100400                    MLR     fill='040'O
         1 001205   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23
         1 001206   000130 200027 xsym               ADSC9   DUP+88                   cn=1,n=23

      708     6289    3      DUP.HOLD_AREA = DUP.IFAD.FID ;

   6289  1 001207   040000 100400                    MLR     fill='040'O
         1 001210   000063 200050 xsym               ADSC9   DUP+51                   cn=1,n=40
         1 001211   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      709     6290    3      CALL TOU$DU_UPDATE_LOG ALTRET (SYNC_ERROR) ;

   6290  1 001212   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001213   000000 701000 xent               TSX1    TOU$DU_UPDATE_LOG
         1 001214   001224 702000 1                  TSX2    SYNC_ERROR

      710     6291    3      CALL TOU$DFU_DF_WR_LOG ALTRET (SYNC_ERROR) ;

   6291  1 001215   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001216   000000 701000 xent               TSX1    TOU$DFU_DF_WR_LOG
         1 001217   001224 702000 1                  TSX2    SYNC_ERROR

      711     6292    3      RETURN ;

   6292  1 001220   200100 221300                    LDX1  ! FIRST_NEW#+1,,AUTO
         1 001221   000001 702211                    TSX2  ! 1,X1

      712     6293
      713     6294    3   ERROR:
      714     6295    3      ALTRETURN ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:97   

   6295  1 001222   200100 221300       ERROR        LDX1  ! FIRST_NEW#+1,,AUTO
         1 001223   000000 702211                    TSX2  ! 0,X1

      715     6296
      716     6297    3   SYNC_ERROR:
      717     6298    3      DUP.DF.CLOSE_TYPE = %DISCARD_FILE ;

   6298  1 001224   000001 235007       SYNC_ERROR   LDA     1,DL
         1 001225   000106 755000 xsym               STA     DUP+70

      718     6299    3      DUP.MSG_CODE = %E$PSCD_BAD_DF ;

   6299  1 001226   001063 236007                    LDQ     563,DL
         1 001227   000020 756000 xsym               STQ     DUP+16

      719     6300    3      CALL TOU$DU_USER_WRITE ;

   6300  1 001230   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001231   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 001232   000000 011000                    NOP     0

      720     6301    3      ALTRETURN ;

   6301  1 001233   200100 221300                    LDX1  ! FIRST_NEW#+1,,AUTO
         1 001234   000000 702211                    TSX2  ! 0,X1

      721     6302
      722     6303    3   END P_SAVE_CHANGED_DECK ;
      723     6304        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:98   
      724     6305        /*I*  NAME:        P_SETUP_PRINT
      725     6306              AUTHOR:      Scott S. Sheppard
      726     6307              PURPOSE:     Assign Replacement Variables
      727     6308              INTERFACE:   None Called.
      728     6309              INPUT:       OBJECT.BCD.LIBRARY - used to determine GECALL or not
      729     6310                           OBJECT.BCD.CLASS   - used to determine ITR or MDR
      730     6311                           H$PATCH_ITR
      731     6312                           H$PATCH_MDR
      732     6313                           H$PATCH_PROG
      733     6314                           T$RD_ITR
      734     6315                           T$RD_MDR
      735     6316                           T$RD_GECALL
      736     6317              OUTPUT:      DUP.HDR_CODE  - set to correct heading
      737     6318                           DUP.MSG_CODE  - used to write messages
      738     6319                           ID.ID         - set for IDENT CODE field
      739     6320              DESCRIPTION: This procedure assigns variables needed values so
      740     6321                           that TOU$REPLACE  will insert proper  values  for
      741     6322                           the dummy ~strings.
      742     6323        */
      743     6324        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:99   
      744     6325    2   P_SETUP_PRINT: PROC ;

   6325  1 001235   200100 741300       P_SETUP_PRI* STX1  ! FIRST_NEW#+1,,AUTO

      745     6326
      746     6327        /* Code */
      747     6328
      748     6329    3      IF OBJECT.BCD.LIBRARY = 'HMPCJ1'

   6329  1 001236   040000 106400                    CMPC    fill='040'O
         1 001237   000003 600006 xsym               ADSC9   OBJECT+3                 cn=3,n=6
         1 001240   000023 000006 0                  ADSC9   19                       cn=0,n=6
         1 001241   001313 601000 1                  TNZ     s:6344

      749     6330    3      THEN IF OBJECT.BCD.CLASS = 'I' | OBJECT.BCD.CLASS = 'F'

   6330  1 001242   400000 220003                    LDX0    -131072,DU
         1 001243   000005 236000 xsym               LDQ     OBJECT+5
         1 001244   777000 376007                    ANQ     -512,DL
         1 001245   111000 116007                    CMPQ    37376,DL
         1 001246   001250 600000 1                  TZE     s:6330+6
         1 001247   000000 220003                    LDX0    0,DU
         1 001250   400000 222003                    LDX2    -131072,DU
         1 001251   000005 236000 xsym               LDQ     OBJECT+5
         1 001252   777000 376007                    ANQ     -512,DL
         1 001253   106000 116007                    CMPQ    35840,DL
         1 001254   001256 600000 1                  TZE     s:6330+12
         1 001255   000000 222003                    LDX2    0,DU
         1 001256   000000 636012                    EAQ     0,X2
         1 001257   200110 756100                    STQ     FOUND+1,,AUTO
         1 001260   000000 636010                    EAQ     0,X0
         1 001261   200110 276100                    ORQ     FOUND+1,,AUTO
         1 001262   001303 600000 1                  TZE     s:6339

      750     6331    4         THEN DO ;

      751     6332    4                 IF OBJECT.BCD.CLASS = 'F'
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:100  

   6332  1 001263   000005 236000 xsym               LDQ     OBJECT+5
         1 001264   777000 376007                    ANQ     -512,DL
         1 001265   106000 116007                    CMPQ    35840,DL
         1 001266   001273 601000 1                  TNZ     s:6334

      752     6333    4                 THEN ID.ID = SUBSTR (OBJECT_KEY.DATA, 7, 6) ;

   6333  1 001267   040000 100400                    MLR     fill='040'O
         1 001270   000002 000006 xsym               ADSC9   OBJECT_KEY+2             cn=0,n=6
         1 001271   000000 000006 xsym               ADSC9   ID                       cn=0,n=6
         1 001272   001276 710000 1                  TRA     s:6335

      753     6334    4                 ELSE ID.ID = SUBSTR (OBJECT_KEY.DATA, 4, 6) ;

   6334  1 001273   040000 100400                    MLR     fill='040'O
         1 001274   000001 200006 xsym               ADSC9   OBJECT_KEY+1             cn=1,n=6
         1 001275   000000 000006 xsym               ADSC9   ID                       cn=0,n=6

      754     6335    4                 DUP.HDR_CODE = %H$PATCH_ITR ;

   6335  1 001276   001465 235007                    LDA     821,DL
         1 001277   000021 755000 xsym               STA     DUP+17

      755     6336    4                 DUP.MSG_CODE = %T$RD_ITR ;

   6336  1 001300   000161 236007                    LDQ     113,DL
         1 001301   000020 756000 xsym               STQ     DUP+16

      756     6337    4              END /* THEN */ ;

   6337  1 001302   001317 710000 1                  TRA     s:6347

      757     6338    4         ELSE DO ;

      758     6339    4                 ID.ID = SUBSTR (OBJECT_KEY.DATA, 4, 6) ;

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:101  
   6339  1 001303   040000 100400                    MLR     fill='040'O
         1 001304   000001 200006 xsym               ADSC9   OBJECT_KEY+1             cn=1,n=6
         1 001305   000000 000006 xsym               ADSC9   ID                       cn=0,n=6

      759     6340    4                 DUP.HDR_CODE = %H$PATCH_MDR ;

   6340  1 001306   001466 235007                    LDA     822,DL
         1 001307   000021 755000 xsym               STA     DUP+17

      760     6341    4                 DUP.MSG_CODE = %T$RD_MDR ;

   6341  1 001310   000162 236007                    LDQ     114,DL
         1 001311   000020 756000 xsym               STQ     DUP+16

      761     6342    4              END /* ELSE */ ;

   6342  1 001312   001317 710000 1                  TRA     s:6347

      762     6343    4      ELSE DO ;

      763     6344    4              DUP.HDR_CODE = %H$PATCH_PROG ;

   6344  1 001313   001467 235007                    LDA     823,DL
         1 001314   000021 755000 xsym               STA     DUP+17

      764     6345    4              DUP.MSG_CODE = %T$RD_GECALL ;

   6345  1 001315   000160 236007                    LDQ     112,DL
         1 001316   000020 756000 xsym               STQ     DUP+16

      765     6346    4           END /* ELSE */ ;

      766     6347    3      RETURN ;

   6347  1 001317   000001 702211                    TSX2  ! 1,X1

      767     6348
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:102  
      768     6349    3   END P_SETUP_PRINT ;
      769     6350        %EJECT ;
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:103  
      770     6351        /*I*  NAME:        P_PRINT_PATCHED_DECK
      771     6352              AUTHOR:      Scott S. Sheppard
      772     6353              PURPOSE:     Prints Patched Deck line
      773     6354              INTERFACE:   TOU$DU_USER_WRITE
      774     6355                           TOU$DU_PRINTER_WRITE
      775     6356              INPUT:       T$P_INFORM
      776     6357              OUTPUT:      DUP.MSG_CODE - integer message number
      777     6358              DESCRIPTION: This procedure notifies the user and logs to the
      778     6359                           edit listing that the deck has been patched.
      779     6360        */
      780     6361
      781     6362    2   P_PRINT_PATCHED_DECK: PROC ;

   6362  1 001320   200100 741300       P_PRINT_PAT* STX1  ! FIRST_NEW#+1,,AUTO

      782     6363
      783     6364        /* Code */
      784     6365
      785     6366    3      DUP.MSG_CODE = %T$P_INFORM ;

   6366  1 001321   000242 235007                    LDA     162,DL
         1 001322   000020 755000 xsym               STA     DUP+16

      786     6367    3      CALL TOU$DU_USER_WRITE ;

   6367  1 001323   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001324   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 001325   000000 011000                    NOP     0

      787     6368    3      CALL TOU$DU_PRINTER_WRITE ;

   6368  1 001326   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001327   000000 701000 xent               TSX1    TOU$DU_PRINTER_WRITE
         1 001330   000000 011000                    NOP     0

      788     6369    3      RETURN ;

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:104  
   6369  1 001331   200100 221300                    LDX1  ! FIRST_NEW#+1,,AUTO
         1 001332   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   0     000   105156 164145   162040 120141   164143 150072   040040 040040    Enter Patch:
   0     004   052052 052040   144165 160154   151143 141164   145040 052052    *** duplicate **
   0     010   052040 040040   052040 141154   162145 141144   171040 160141    *   * already pa
   0     014   164143 150145   144040 052040   052052 040157   166145 162167    tched * ** overw
   0     020   162151 164164   145156 040052   052040 040040   110115 120103    ritten **   HMPC
   0     024   112061 040040                                                    J1

(unnamed)
 Sect OctLoc
   2     000   777377 777777   777777 377777   000002 006000   000000 006000    ................
   2     004   000000 000027   000000 000000   000004 006000   000027 006000    ................
      789     6370
      790     6371    3   END P_PRINT_PATCHED_DECK ;
      791     6372    2   END P_PATCH_DECK ;
      792     6373    1   END TOU$PATCH ;

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:105  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$PATCH.
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:106  

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0    43-  6373    262    57     1      0  y   y    0   1 TOU$PATCH
  1  5645-  5662     13     0     1     42  y   y    0     2 P_INIT_DUP
  2  5688-  5820     34    11     1     66  y y y    0     2 P_COMMAND_SETUP
  3  5845-  5874     18     0     1    250  y y y    0     2 P_FIND_DECK
  4  5897-  6372    182    10     1    341  y y y    0     2 P_PATCH_DECK
  5  5968-  5978      6     0     1    434  y   y    0      3 P_SET_BCD#
  6  5998-  6035     25     1     1    447  y y y    0      3 P_CHECK_NEW_ADDRESSES
  7  6057-  6087     20     1     1    554  y y y    0      3 P_CHECK_PATCHED_ADDRESSES
  8  6103-  6119     11     0     1    653  y y y    0      3 P_GET_TEMP_LIST
  9  6135-  6169     23     7     1    676  y   y    2      3 P_FORM_TEMP_LIST
 10  6183-  6204     14     1     1   1016  y   y    0      3 P_REFORM_BCD_LIST
 11  6217-  6229      7     0     1   1103  y y y    0      3 P_FREE_TEMP_LIST
 12  6243-  6251      4     0     1   1117  y   y    0      3 P_APPEND_DKEND
 13  6272-  6303     21     0     1   1133  y y y    0      3 P_SAVE_CHANGED_DECK
 14  6325-  6349     20     0     1   1235  y   y    0      3 P_SETUP_PRINT
 15  6362-  6371      5     0     1   1320  y   y    0      3 P_PRINT_PATCHED_DECK
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:107  

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

              43   1      0 Proc    0                              5608   1      2 Call    0
            5609   1      4 Call    0                              5610   1      6 Call    0
            5611   1     11 Call    0                              5612   1     14 Call    0
            5613   1     16 Call    0                              5614   1     20 Call    0
            5617   1     23 Assign  0                              5618   1     25 Call    0
            5619   1     30 Return  0                              5622   1     31 Call    0 ERROR_RETURN
            5623   1     34 Assign  0                              5624   1     36 Call    0
            5625   1     41 Return  0                              5645   1     42 Proc    1
            5649   1     43 Assign  1                              5650   1     45 Assign  1
            5651   1     47 Assign  1                              5652   1     51 Assign  1
            5653   1     52 Assign  1                              5654   1     54 Assign  1
            5655   1     56 Assign  1                              5656   1     60 Assign  1
            5657   1     62 Assign  1                              5658   1     63 Assign  1
            5659   1     64 Assign  1                              5660   1     65 Return  1
            5688   1     66 Proc    2                              5780   1     67 DoIndx  2
         $  5781   1     71 Assign  2                     $$$$$$$  5782   1     75 DoCase  2
            5783   1    117 Case    2                              5784   1    117 Assign  2
         $  5785   1    121 Assign  2                              5786   1    127 Assign  2
            5787   1    132 Call    2                              5788   1    136 Case    2
         $  5789   1    136 Assign  2                              5790   1    145 Case    2
            5791   1    145 Assign  2                           $  5792   1    147 Assign  2
            5793   1    155 Assign  2                              5794   1    160 Call    2
            5795   1    164 Case    2                              5796   1    164 DoIndx  2
         $  5797   1    166 Assign  2                          $$  5798   1    172 DoCase  2
            5799   1    202 Case    2                              5800   1    202 Assign  2
            5801   1    205 Case    2                              5802   1    205 Assign  2
            5803   1    207 EndCse  2                          $$  5804   1    207 EndInd  2
            5805   1    220 EndCse  2                          $$  5806   1    220 EndInd  2
            5808   1    231 If      2                              5810   1    234 Call    2
            5812   1    237 If      2                              5814   1    241 Call    2
            5815   1    244 Return  2                              5818   1    246 Altret  2 ERROR
            5845   1    250 Proc    3                              5849   1    251 Assign  3
            5850   1    254 Call    3                              5852   1    257 Assign  3
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:108  
            5853   1    262 Assign  3                              5854   1    265 Call    3
            5856   1    270 Assign  3                           $  5857   1    273 Assign  3
            5858   1    303 Call    3                         $$$  5859   1    306 Assign  3
            5860   1    314 Assign  3                              5862   1    317 Assign  3
            5863   1    322 Call    3                              5865   1    325 Call    3
            5866   1    330 Return  3                              5869   1    332 Assign  3 NOT_FOUND
            5870   1    334 Call    3                              5872   1    337 Altret  3 ERROR
            5897   1    341 Proc    4                              5924   1    342 Call    4
            5925   1    344 Call    4                              5926   1    347 Call    4
            5927   1    352 Assign  4                              5928   1    355 Assign  4
            5929   1    357 Call    4                              5930   1    362 Call    4
            5931   1    365 Call    4                              5932   1    370 Call    4
            5933   1    373 Call    4                              5934   1    375 If      4
            5935   1    377 Call    4                              5937   1    401 Call    4
            5939   1    403 Assign  4                              5940   1    405 Call    4
            5941   1    407 Call    4                              5942   1    411 Call    4
            5943   1    414 Call    4                              5944   1    416 Assign  4
            5945   1    420 Return  4                              5948   1    422 Call    4 ERROR
            5949   1    425 Call    4                              5950   1    430 Assign  4
            5951   1    432 Altret  4                              5949   1    434 Null    4
            5968   1    434 Proc    5                              5972   1    435 If      5
            5973   1    437 Assign  5                              5974   1    443 Assign  5
            5975   1    444 Assign  5                              5976   1    446 Return  5
            5998   1    447 Proc    6                              6004   1    450 If      6
            6005   1    453 Do      6                              6006   1    453 Assign  6
            6007   1    455 Call    6                              6008   1    460 Altret  6
            6010   1    462 Do      6                              6011   1    462 Call    6
        $$  6012   1    464 Call    6                              6013   1    475 If      6
            6014   1    477 Do      6                              6015   1    477 Assign  6
            6016   1    501 Call    6                              6017   1    504 DoIndx  6
    $$$$$$  6018   1    506 Assign  6                              6020   1    520 EndInd  6
            6021   1    526 Assign  6                              6022   1    530 DoIndx  6
            6023   1    533 Call    6                              6024   1    536 EndInd  6
            6025   1    544 Call    6                              6027   1    546 Altret  6 ERROR
            6029   1    550 Do      6                              6030   1    550 Call    6
            6031   1    552 Return  6                              6057   1    554 Proc    7
            6063   1    555 Call    7                          $$  6064   1    557 Call    7
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:109  
            6065   1    570 If      7                              6066   1    572 If      7
            6067   1    574 Call    7                              6068   1    577 Do      7
            6069   1    577 Assign  7                              6070   1    601 Call    7
            6071   1    604 DoIndx  7                      $$$$$$  6072   1    606 Assign  7
            6074   1    620 EndInd  7                              6075   1    626 Assign  7
            6076   1    630 DoIndx  7                              6077   1    632 Call    7
            6078   1    635 EndInd  7                              6079   1    643 Call    7
            6081   1    645 Altret  7 ERROR                        6084   1    647 Call    7
            6085   1    651 Return  7                              6103   1    653 Proc    8
            6079   1    654 Null    8                              6107   1    654 Assign  8
            6108   1    655 Assign  8                              6109   1    657 Assign  8
            6110   1    661 Assign  8                              6111   1    663 Assign  8
            6112   1    665 Call    8                              6113   1    670 Assign  8
            6114   1    672 Return  8                              6117   1    674 Altret  8 ERROR
            6135   1    676 Proc    9                      $$$$$$  6145   1    677 Assign  9
            6146   1    710 Assign  9                              6147   1    712 Assign  9
            6148   1    713 DoIndx  9                              6149   1    717 Assign  9
            6150   1    720 Assign  9                              6151   1    721 DoWhil  9
  $$$$$$$$  6152   1    722 If      9                              6153   1    736 Do      9
            6154   1    736 Assign  9                           $  6155   1    740 Assign  9
            6156   1    744 Assign  9                              6157   1    746 EndDo   9
            6158   1    747 Assign  9                         $$$  6159   1    750 EndWhi  9
            6160   1    765 If      9                              6162   1    767 Do      9
  $$$$$$$$  6163   1    767 Assign  9                              6164   1   1002 Assign  9
            6165   1   1005 EndDo   9                          $$  6166   1   1005 EndInd  9
            6167   1   1014 Return  9                              6183   1   1016 Proc   10
            6189   1   1017 Assign 10                              6190   1   1021 Call   10
            6191   1   1024 Assign 10                              6192   1   1026 DoIndx 10
         $  6193   1   1030 Assign 10                         $$$  6194   1   1034 Assign 10
            6195   1   1042 Call   10                              6196   1   1045 EndInd 10
            6198   1   1053 DoIndx 10                    $$$$$$$$  6199   1   1055 Assign 10
            6200   1   1071 EndInd 10                              6201   1   1077 Assign 10
            6202   1   1101 Return 10                              6217   1   1103 Proc   11
            6194   1   1104 Null   11                              6221   1   1104 Assign 11
            6222   1   1106 Assign 11                              6223   1   1110 Call   11
            6224   1   1113 Return 11                              6227   1   1115 Altret 11 ERROR
            6243   1   1117 Proc   12                         $$$  6247   1   1120 Assign 12
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:110  
            6248   1   1126 Assign 12                              6249   1   1131 Return 12
            6272   1   1133 Proc   13                              6276   1   1134 Call   13
            6277   1   1137 Assign 13                              6278   1   1144 Call   13
       $$$  6279   1   1147 Call   13                              6280   1   1163 Call   13
            6282   1   1166 Call   13                              6283   1   1171 Call   13
            6284   1   1174 Call   13                              6286   1   1177 Assign 13
            6287   1   1201 Assign 13                              6288   1   1204 Assign 13
            6289   1   1207 Assign 13                              6290   1   1212 Call   13
            6291   1   1215 Call   13                              6292   1   1220 Return 13
            6295   1   1222 Altret 13 ERROR                        6298   1   1224 Assign 13 SYNC_ERROR
            6299   1   1226 Assign 13                              6300   1   1230 Call   13
            6301   1   1233 Altret 13                              6325   1   1235 Proc   14
            6329   1   1236 If     14                        $$$$  6330   1   1242 If     14
            6331   1   1263 Do     14                              6332   1   1263 If     14
            6333   1   1267 Assign 14                              6334   1   1273 Assign 14
            6335   1   1276 Assign 14                              6336   1   1300 Assign 14
            6337   1   1302 EndDo  14                              6338   1   1303 Do     14
            6339   1   1303 Assign 14                              6340   1   1306 Assign 14
            6341   1   1310 Assign 14                              6342   1   1312 EndDo  14
            6343   1   1313 Do     14                              6344   1   1313 Assign 14
            6345   1   1315 Assign 14                              6346   1   1317 EndDo  14
            6347   1   1317 Return 14                              6362   1   1320 Proc   15
            6366   1   1321 Assign 15                              6367   1   1323 Call   15
            6368   1   1326 Call   15                              6369   1   1331 Return 15


  **** Statement type totals  ****

     3 Null      92 Assign    66 Call      13 If         6 Case      17 Return
    10 Altret     9 DoIndx     1 DoWhil     2 DoCase    10 Do         9 EndInd
     1 EndWhi     2 EndCse     5 EndDo     16 Proc      11 Labels

 # major stmts=  210 Code/major= 3.48 # stmts=  262 Code/stmt= 2.79  Point total=102.4
 Cost/major stmt=  3.0 Cost/stmt=  2.4 Total cost=    643.2

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:111  
   6-8  $$
  8-10  $$
 10-12
 12-14
 14-16  $
 16-18
 18-20  $
 20-22
 22-??
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:112  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   103-0-0/w PTR         r     1 @FIRST                   104-0-0/w PTR         r     1 @LAST
   105-0-0/w SBIN        r     1 BCD_INX                   *0-0-0/w UBIN        r     1 FIRST
    77-0-0/w UBIN        r     1 FIRST_NEW#               107-0-0/c BIT         r     1 FOUND
   103-0-0/w UBIN        r     1 I                         *0-0-0/w UBIN        r     1 LAST
   101-0-0/w UBIN        r     1 MATCH_INX                101-0-0/w UBIN        r     1 MATCH_INX
    11-0-0/w UBIN        r     1 OPT#                      12-0-0/w PTR         r     1 OPT$
     7-0-0/w UBIN        r     1 OUTBLK#                   10-0-0/w PTR         r     1 OUTBLK$
     3-0-0/c BIT         r     1 OVERWRITE                  4-0-0/c BIT         r     1 RETAIN
    12-0-0/w UBIN        r     1 TEMP#                    106-0-0/w SBIN        r     1 TEMP_INX
    13-0-0/w UBIN        r     1 TEMP_SIZE

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

    14-0-0/w STRC(1836)  r     1 MATCH
    14-0-0/b UBIN        r         2 COUNT
    15-0-0/b UBIN(9)     r         2 INDEXES(0:199)

    10-0-0/d STRC(72)    r     1 TEMP_V
    10-0-0/b UBIN        r         2 FLAGS
    11-0-0/b PTR         r         2 PTR$


  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 BCD#                       0-0-0/w UBIN        r     1 BIN#
     0-0-0/w UBIN        r     1 CUR#                       0-0-0/w CHAR(84)    r     1 DKEND_
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:113  

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(45)    r     1 BCD_KEY
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(45)    r     1 BINARY_KEY
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/w STRC(756)   r     1 DKEND
     0-0-0/c STRC(720)   r         2 BCD
    20-2-0/c CHAR(6)     r          3 REVISION

     0-0-0/d STRC(5220)  r     1 DUP
     1-0-0/h UBIN(18)    r         2 NUM_WORDS
     2-0-0/d BIT (72)    r         2 DS_V
    17-0-0/w PTR         r         2 CMD$
    20-0-0/w UBIN        r         2 MSG_CODE
    21-0-0/w UBIN        r         2 HDR_CODE
    26-0-0/c CHAR        r         2 LINE_VFC
    56-0-0/c BIT         r         2 FORCE_NEW_PAGE
    57-0-0/w STRC(576)   r         2 IFAD
    57-0-0/c BIT         r          3 ME_ALLOWED
    57-1-0/c BIT         r          3 ENTERED
    63-1-0/c CHAR(40)    r          3 FID
   102-0-0/d STRC(72)    r         2 BCD_V
   103-0-0/b PTR         r          3 PTR$
   104-0-0/w STRC(504)   r         2 DF
   104-0-0/c BIT         r          3 ENTERED
   104-2-0/c BIT         r          3 REPORT_ERROR
   105-0-0/w UBIN        r          3 OPEN_TYPE
   106-0-0/w UBIN        r          3 CLOSE_TYPE
   122-0-0/w STRC(432)   r         2 LOG
   122-0-0/w UBIN        r          3 TYPE
   123-0-0/c CHAR(21)    r          3 CATALOG
   130-1-0/c CHAR(23)    r          3 DECK
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:114  
   142-0-0/c CHAR(40)    r         2 HOLD_AREA
   154-0-0/w UBIN        r         2 HOLD_AREA_LGTH
   155-1-0/c BIT         r         2 BREAK_DISABLED

     0-0-0/c STRC(162)   r     1 ID
     0-0-0/c CHAR(6)     r         2 ID
     1-2-0/c CHAR(6)     r         2 REVISION

     0-0-0/w STRC(864)   r     1 OBJECT
     0-0-0/w STRC(720)   r         2 BCD
     3-3-0/c CHAR(6)     r          3 LIBRARY
     5-2-0/c CHAR        r          3 CLASS
    24-0-0/b UBIN(18)    r         2 DECK#
    24-2-0/b UBIN(18)    r         2 BINARY_COUNT
    25-0-0/b UBIN(18)    r         2 TOTAL_COUNT
    27-0-0/w UBIN        r         2 CHECKSUM

     0-0-0/w STRC(216)   r     1 OBJECT_KEY
     0-1-0/c CHAR(23)    r         2 DATA

     0-0-0/c STRC(45)    r     1 OBJECT_REFLIST_KEY
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(207)   r     1 OBJECT_SEARCH_KEY
     0-0-0/c CHAR(23)    r         2 DATA


  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(84)    r     1 BCD_B(0:199)               0-0-0/c CHAR(84)    r     1 TEMP_B(0:199)

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:115  
     0-0-0/w STRC(144)   r     1 OUT$BLK
     0-2-0/h UBIN(18)    r         2 CODE
     1-0-0/h UBIN(18)    r         2 NSUBLKS
     3-0-0/b PTR         r         2 SUBLK$(0:0)

     0-0-0/w ASTR(153)   r     1 OUT$SYM
     4-0-0/c UBIN(9)     r         2 COUNT
     4-1-0/c ACHR        r         2 TEXT



   Procedure TOU$PATCH requires 731 words for executable code.
   Procedure TOU$PATCH requires 80 words of local(AUTO) storage.

    No errors detected in file TOU$PATCH.:E05TSI    .
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:116  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:117  
          MINI XREF LISTING

BCD#
      5556**DCL      5857<<ASSIGN   5859>>ASSIGN   5973<<ASSIGN   5973>>ASSIGN   5974<<ASSIGN   5975>>ASSIGN
      6004>>IF       6012>>CALL     6022>>DOINDEX  6064>>CALL     6076>>DOINDEX  6201<<ASSIGN   6247>>ASSIGN
      6248<<ASSIGN   6248>>ASSIGN   6277>>ASSIGN
BCD_B
      5379**DCL      5859>>ASSIGN   6018<<ASSIGN   6072<<ASSIGN   6145>>ASSIGN   6152>>IF       6163>>ASSIGN
      6194<<ASSIGN   6199<<ASSIGN   6247<<ASSIGN
BCD_INX IN PROCEDURE P_FORM_TEMP_LIST
      6139**DCL      6148<<DOINDEX  6152>>IF       6155>>ASSIGN   6163>>ASSIGN
BCD_KEY.DECK#
      5393**DCL      5856<<ASSIGN
BIN#
      5557**DCL      5853<<ASSIGN
BINARY_KEY.DECK#
      5407**DCL      5852<<ASSIGN
CUR#
      5558**DCL      6022<<DOINDEX  6076<<DOINDEX  6193<<ASSIGN   6194>>ASSIGN
DKEND
      5419**DCL      5432--REDEF
DKEND.BCD
      5420**DCL      5430--REDEF
DKEND.BCD.REVISION
      5427**DCL      5860>>ASSIGN
DKEND_
      5432**DCL      5859<<ASSIGN   6247>>ASSIGN
DUP.BCD_V.PTR$
      5310**DCL      5379--IMP-PTR  5859>>ASSIGN   6018>>ASSIGN   6072>>ASSIGN   6145>>ASSIGN   6152>>IF
      6163>>ASSIGN   6194>>ASSIGN   6199>>ASSIGN   6247>>ASSIGN
DUP.BREAK_DISABLED
      5356**DCL      5939<<ASSIGN   5944<<ASSIGN   5950<<ASSIGN
DUP.CMD$
      5254**DCL      5780>>DOINDEX  5781>>ASSIGN
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:118  
DUP.DF.CLOSE_TYPE
      5322**DCL      5657<<ASSIGN   6298<<ASSIGN
DUP.DF.ENTERED
      5314**DCL      5654<<ASSIGN   5791<<ASSIGN   5812>>IF
DUP.DF.OPEN_TYPE
      5320**DCL      5655<<ASSIGN
DUP.DF.REPORT_ERROR
      5318**DCL      5656<<ASSIGN
DUP.DS_V
      5247**DCL      6110<<ASSIGN   6113>>ASSIGN   6221<<ASSIGN
DUP.FORCE_NEW_PAGE
      5278**DCL      5651<<ASSIGN
DUP.HDR_CODE
      5259**DCL      5649<<ASSIGN   6335<<ASSIGN   6340<<ASSIGN   6344<<ASSIGN
DUP.HOLD_AREA
      5349**DCL      5785<<ASSIGN   5792<<ASSIGN   5927<<ASSIGN   6289<<ASSIGN
DUP.HOLD_AREA_LGTH
      5351**DCL      5786<<ASSIGN   5793<<ASSIGN   5928<<ASSIGN
DUP.IFAD.ENTERED
      5284**DCL      5653<<ASSIGN   5784<<ASSIGN   5808>>IF
DUP.IFAD.FID
      5298**DCL      6289>>ASSIGN
DUP.IFAD.ME_ALLOWED
      5282**DCL      5652<<ASSIGN
DUP.LINE_VFC
      5268**DCL      5650<<ASSIGN
DUP.LOG.CATALOG
      5332**DCL      6287<<ASSIGN
DUP.LOG.DECK
      5334**DCL      6288<<ASSIGN
DUP.LOG.TYPE
      5330**DCL      6286<<ASSIGN
DUP.LOG_V
      5336**DCL      5341--REDEF
DUP.MSG_CODE
      5257**DCL      5617<<ASSIGN   5623<<ASSIGN   5869<<ASSIGN   6006<<ASSIGN   6015<<ASSIGN   6021<<ASSIGN
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:119  
      6069<<ASSIGN   6075<<ASSIGN   6189<<ASSIGN   6191<<ASSIGN   6299<<ASSIGN   6336<<ASSIGN   6341<<ASSIGN
      6345<<ASSIGN   6366<<ASSIGN
DUP.NUM_WORDS
      5245**DCL      6111<<ASSIGN   6222<<ASSIGN
ERROR IN PROCEDURE P_CHECK_NEW_ADDRESSES
      6027**LABEL    6011--CALLALT  6030--CALLALT
ERROR IN PROCEDURE P_CHECK_PATCHED_ADDRESSES
      6081**LABEL    6063--CALLALT  6084--CALLALT
ERROR IN PROCEDURE P_COMMAND_SETUP
      5818**LABEL    5787--CALLALT  5794--CALLALT  5810--CALLALT  5814--CALLALT
ERROR IN PROCEDURE P_FIND_DECK
      5872**LABEL    5854--CALLALT  5858--CALLALT  5863--CALLALT  5865--CALLALT
ERROR IN PROCEDURE P_FREE_TEMP_LIST
      6227**LABEL    6223--CALLALT
ERROR IN PROCEDURE P_GET_TEMP_LIST
      6117**LABEL    6112--CALLALT
ERROR IN PROCEDURE P_PATCH_DECK
      5948**LABEL    5925--CALLALT  5930--CALLALT  5932--CALLALT  5933--CALLALT  5935--CALLALT  5940--CALLALT
ERROR IN PROCEDURE P_SAVE_CHANGED_DECK
      6295**LABEL    6276--CALLALT  6280--CALLALT
ERROR_RETURN
      5622**LABEL    5609--CALLALT  5611--CALLALT  5612--CALLALT  5613--CALLALT  5614--CALLALT
FIRST IN PROCEDURE P_FORM_TEMP_LIST
      6137**DCL      6135--PROC     6148>>DOINDEX
FIRST_NEW# IN PROCEDURE P_PATCH_DECK
      5920**DCL      5975<<ASSIGN   6004>>IF       6012<>CALL     6022>>DOINDEX
FOUND IN PROCEDURE P_FORM_TEMP_LIST
      6141**DCL      6149<<ASSIGN   6151>>DOWHILE  6154<<ASSIGN   6160>>IF
I IN PROCEDURE P_REFORM_BCD_LIST
      6185**DCL      6192<<DOINDEX  6193>>ASSIGN   6198<<DOINDEX  6199>>ASSIGN   6199>>ASSIGN
ID.ID
      5444**DCL      6333<<ASSIGN   6334<<ASSIGN   6339<<ASSIGN
ID.REVISION
      5445**DCL      5446--REDEF    5860<<ASSIGN
LAST IN PROCEDURE P_FORM_TEMP_LIST
      6138**DCL      6135--PROC     6145>>ASSIGN   6148>>DOINDEX
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:120  
MATCH.COUNT IN PROCEDURE P_PATCH_DECK
      5918**DCL      6013>>IF       6017>>DOINDEX  6065>>IF       6071>>DOINDEX  6147<<ASSIGN   6155>>ASSIGN
      6156<<ASSIGN   6156>>ASSIGN   6192>>DOINDEX
MATCH.INDEXES IN PROCEDURE P_PATCH_DECK
      5919**DCL      6018>>ASSIGN   6072>>ASSIGN   6155<<ASSIGN   6193>>ASSIGN
MATCH_INX IN PROCEDURE P_CHECK_NEW_ADDRESSES
      6000**DCL      6017<<DOINDEX  6018>>ASSIGN
MATCH_INX IN PROCEDURE P_CHECK_PATCHED_ADDRESSES
      6059**DCL      6071<<DOINDEX  6072>>ASSIGN
NOT_FOUND IN PROCEDURE P_FIND_DECK
      5869**LABEL    5850--CALLALT
OBJECT
      5460**DCL      6279--CALL
OBJECT.BCD
      5461**DCL      5483--REDEF    5506--REDEF
OBJECT.BCD.CLASS
      5466**DCL      6330>>IF       6330>>IF       6332>>IF
OBJECT.BCD.LIBRARY
      5464**DCL      6329>>IF
OBJECT.BINARY_COUNT
      5508**DCL      5853>>ASSIGN   5857>>ASSIGN   6277>>ASSIGN
OBJECT.CHECKSUM
      5512**DCL      6279<>CALL
OBJECT.DECK#
      5507**DCL      5852>>ASSIGN   5856>>ASSIGN   5862>>ASSIGN
OBJECT.NIO_BCD.X_OF_N
      5494**DCL      5499--REDEF
OBJECT.TOTAL_COUNT
      5509**DCL      5857>>ASSIGN   6277<<ASSIGN
OBJECT_KEY.DATA
      5525**DCL      5849<<ASSIGN   6288>>ASSIGN   6333>>ASSIGN   6334>>ASSIGN   6339>>ASSIGN
OBJECT_REFLIST_KEY.DECK#
      5538**DCL      5862<<ASSIGN
OBJECT_SEARCH_KEY.DATA
      5551**DCL      5789<<ASSIGN   5849>>ASSIGN
OPT# IN PROCEDURE P_COMMAND_SETUP
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:121  
      5692**DCL      5796<<DOINDEX  5797>>ASSIGN
OPT$ IN PROCEDURE P_COMMAND_SETUP
      5693**DCL      5797<<ASSIGN   5798>>DOCASE
OUT$BLK.CODE IN PROCEDURE P_COMMAND_SETUP
      5708**DCL      5782>>DOCASE   5798>>DOCASE
OUT$BLK.NSUBLKS IN PROCEDURE P_COMMAND_SETUP
      5712**DCL      5780>>DOINDEX  5796>>DOINDEX
OUT$BLK.SUBLK$ IN PROCEDURE P_COMMAND_SETUP
      5733**DCL      5781>>ASSIGN   5797>>ASSIGN
OUT$SYM.COUNT IN PROCEDURE P_COMMAND_SETUP
      5769**DCL      5772--IMP-SIZ  5785>>ASSIGN   5786>>ASSIGN   5789>>ASSIGN   5792>>ASSIGN   5793>>ASSIGN
OUT$SYM.TEXT IN PROCEDURE P_COMMAND_SETUP
      5772**DCL      5785>>ASSIGN   5789>>ASSIGN   5792>>ASSIGN
OUTBLK# IN PROCEDURE P_COMMAND_SETUP
      5690**DCL      5780<<DOINDEX  5781>>ASSIGN
OUTBLK$ IN PROCEDURE P_COMMAND_SETUP
      5691**DCL      5781<<ASSIGN   5782>>DOCASE   5785>>ASSIGN   5785>>ASSIGN   5786>>ASSIGN   5789>>ASSIGN
      5789>>ASSIGN   5792>>ASSIGN   5792>>ASSIGN   5793>>ASSIGN   5796>>DOINDEX  5797>>ASSIGN
OVERWRITE
      5559**DCL      5659<<ASSIGN   5802<<ASSIGN   6066>>IF
P_APPEND_DKEND IN PROCEDURE P_PATCH_DECK
      6243**PROC     5937--CALL
P_CHECK_NEW_ADDRESSES IN PROCEDURE P_PATCH_DECK
      5998**PROC     5933--CALL
P_CHECK_PATCHED_ADDRESSES IN PROCEDURE P_PATCH_DECK
      6057**PROC     5935--CALL
P_COMMAND_SETUP
      5688**PROC     5609--CALL
P_FIND_DECK
      5845**PROC     5612--CALL
P_FORM_TEMP_LIST IN PROCEDURE P_PATCH_DECK
      6135**PROC     6012--CALL     6064--CALL
P_FREE_TEMP_LIST IN PROCEDURE P_PATCH_DECK
      6217**PROC     6025--CALL     6030--CALL     6079--CALL     6084--CALL
P_GET_TEMP_LIST IN PROCEDURE P_PATCH_DECK
      6103**PROC     6011--CALL     6063--CALL
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:122  
P_INIT_DUP
      5645**PROC     5608--CALL
P_PATCH_DECK
      5897**PROC     5613--CALL
P_PRINT_PATCHED_DECK IN PROCEDURE P_PATCH_DECK
      6362**PROC     5943--CALL
P_REFORM_BCD_LIST IN PROCEDURE P_PATCH_DECK
      6183**PROC     6067--CALL
P_SAVE_CHANGED_DECK IN PROCEDURE P_PATCH_DECK
      6272**PROC     5940--CALL
P_SETUP_PRINT IN PROCEDURE P_PATCH_DECK
      6325**PROC     5941--CALL
P_SET_BCD# IN PROCEDURE P_PATCH_DECK
      5968**PROC     5924--CALL
RETAIN
      5560**DCL      5658<<ASSIGN   5800<<ASSIGN   5934>>IF       5972>>IF
SYNC_ERROR IN PROCEDURE P_SAVE_CHANGED_DECK
      6298**LABEL    6282--CALLALT  6283--CALLALT  6284--CALLALT  6290--CALLALT  6291--CALLALT
TEMP# IN PROCEDURE P_PATCH_DECK
      5915**DCL      6146<<ASSIGN   6151>>DOWHILE  6163>>ASSIGN   6164<<ASSIGN   6164>>ASSIGN   6198>>DOINDEX
      6199>>ASSIGN   6201>>ASSIGN
TEMP_B IN PROCEDURE P_PATCH_DECK
      5912**DCL      6145<<ASSIGN   6152>>IF       6163<<ASSIGN   6199>>ASSIGN
TEMP_INX IN PROCEDURE P_FORM_TEMP_LIST
      6140**DCL      6150<<ASSIGN   6151>>DOWHILE  6152>>IF       6158<<ASSIGN   6158>>ASSIGN
TEMP_SIZE IN PROCEDURE P_PATCH_DECK
      5916**DCL      6109<<ASSIGN   6111>>ASSIGN   6222>>ASSIGN
TEMP_V IN PROCEDURE P_PATCH_DECK
      5899**DCL      6110>>ASSIGN   6113<<ASSIGN   6221>>ASSIGN
TEMP_V.FLAGS IN PROCEDURE P_PATCH_DECK
      5900**DCL      6107<<ASSIGN
TEMP_V.PTR$ IN PROCEDURE P_PATCH_DECK
      5901**DCL      5912--IMP-PTR  6108<<ASSIGN   6145>>ASSIGN   6152>>IF       6163>>ASSIGN   6199>>ASSIGN
TOU$B_PRINT_DECK_LINE
      5586**DCL-ENT  5942--CALL
TOU$B_SHOW_DCBS
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:123  
      5585**DCL-ENT  5610--CALL
TOU$CHECKSUM
      5580**DCL-ENT  6279--CALL
TOU$CLEAR_IFAD
      5583**DCL-ENT  5926--CALL
TOU$DFU_DF_CHECK_FOR_KEY
      5591**DCL-ENT  5850--CALL
TOU$DFU_DF_DL_DECK
      5590**DCL-ENT  6276--CALL
TOU$DFU_DF_RD_BCD_CARDS
      5593**DCL-ENT  5858--CALL
TOU$DFU_DF_RD_BINARY
      5592**DCL-ENT  5854--CALL
TOU$DFU_DF_RD_LOG
      5595**DCL-ENT  5865--CALL
TOU$DFU_DF_RD_OBJECT_REFLIST
      5594**DCL-ENT  5863--CALL
TOU$DFU_DF_WR_BCD_CARDS
      5598**DCL-ENT  6283--CALL
TOU$DFU_DF_WR_BINARY
      5597**DCL-ENT  6282--CALL
TOU$DFU_DF_WR_LOG
      5600**DCL-ENT  6291--CALL
TOU$DFU_DF_WR_OBJECT
      5596**DCL-ENT  6280--CALL
TOU$DFU_DF_WR_OBJECT_REFLIST
      5599**DCL-ENT  6284--CALL
TOU$DU_CLOSE_DF
      5570**DCL-ENT  5614--CALL     5622--CALL
TOU$DU_CLOSE_IFAD
      5566**DCL-ENT  5932--CALL     5948--CALL
TOU$DU_FREE_DATA_SEGMENT
      5575**DCL-ENT  6223--CALL
TOU$DU_GET_DATA_SEGMENT
      5574**DCL-ENT  6112--CALL
TOU$DU_OPEN_DF
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:124  
      5569**DCL-ENT  5611--CALL
TOU$DU_OPEN_IFAD
      5565**DCL-ENT  5925--CALL
TOU$DU_PRINTER_WRITE
      5573**DCL-ENT  6368--CALL
TOU$DU_SET_DF_FID
      5568**DCL-ENT  5794--CALL     5814--CALL
TOU$DU_SET_EDIT_PROMPT
      5576**DCL-ENT  5931--CALL     5949--CALL
TOU$DU_SET_IFAD_FID
      5564**DCL-ENT  5787--CALL     5810--CALL
TOU$DU_SET_PROMPT
      5577**DCL-ENT  5929--CALL
TOU$DU_UPDATE_LOG
      5578**DCL-ENT  6290--CALL
TOU$DU_USER_WRITE
      5572**DCL-ENT  5618--CALL     5624--CALL     5870--CALL     6007--CALL     6016--CALL     6023--CALL
      6070--CALL     6077--CALL     6190--CALL     6195--CALL     6300--CALL     6367--CALL
TOU$GET_PATCH_CARDS
      5584**DCL-ENT  5930--CALL
TOU$REFORM_DECK_CHECKSUM
      5581**DCL-ENT  6278--CALL
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:125  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:126  
              FULL UREF LISTING

BCD_KEY
      5391**DCL
BCD_KEY.CARD#
      5394**DCL
BCD_KEY.SIZE
      5392**DCL
BINARY_KEY
      5405**DCL
BINARY_KEY.ENTRY#
      5408**DCL
BINARY_KEY.SIZE
      5406**DCL
DKEND.BCD.CONTROL
      5421**DCL
DKEND.BCD.DATE
      5426**DCL
DKEND.BCD.LBL
      5428**DCL
DKEND.BCD.MOD_DATE
      5425**DCL
DKEND.BCD.SEQ
      5429**DCL
DKEND.BCD.TTL_DATE
      5424**DCL
DKEND.BCD.TYPE
      5422**DCL
DKEND.BCD_
      5430**DCL
DKEND.CHECKSUM
      5431**DCL
DUP
      5236**DCL
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:127  
DUP.BATCH_MODE
      5238**DCL
DUP.BCD_V
      5307**DCL
DUP.BINARY_V
      5302**DCL
DUP.BINARY_V.PTR$
      5305**DCL
DUP.BOTTOM_LINE#
      5274**DCL
DUP.BREAK_RETURN
      5358**DCL
DUP.BREAK_TERMINATE
      5354**DCL
DUP.CPU_TYPE
      5367**DCL
DUP.CURRENT_LINE#
      5272**DCL
DUP.CURRENT_PAGE#
      5270**DCL
DUP.DF
      5313**DCL
DUP.DF.FID
      5324**DCL
DUP.DF.FID_LGTH
      5326**DCL
DUP.DF.NO_EXIST
      5316**DCL
DUP.ERROR_IMAGE
      5276**DCL
DUP.FAULT_ERROR
      5242**DCL
DUP.IFAD
      5281**DCL
DUP.IFAD.CONFIG_TAB
      5290**DCL
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:128  
DUP.IFAD.DEVICE_INPUT
      5286**DCL
DUP.IFAD.DRIVE_NUMBER
      5296**DCL
DUP.IFAD.FID_LGTH
      5300**DCL
DUP.IFAD.IMU_NUMBER
      5294**DCL
DUP.IFAD.IMU_TAB
      5288**DCL
DUP.IFAD.NUM_VOLUMES
      5292**DCL
DUP.LOG
      5329**DCL
DUP.LOG_V.PTR$
      5339**DCL
DUP.LOG_V_
      5341**DCL
DUP.MSG_V
      5263**DCL
DUP.MSG_V.PTR$
      5266**DCL
DUP.NUM_LINES
      5261**DCL
DUP.PROCESS_COMPLETE
      5240**DCL
DUP.RESPONSE
      5250**DCL
DUP.RESPONSE_LGTH
      5252**DCL
DUP.SITE_ID
      5365**DCL
DUP.SITE_NAME
      5360**DCL
DUP.SITE_NAME.LGTH
      5361**DCL
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:129  
DUP.SITE_NAME.TEXT
      5363**DCL
DUP.TEMP
      5343**DCL
DUP.TEMP.CLOSE_TYPE
      5346**DCL
DUP.TEMP.OPEN_TYPE
      5344**DCL
ID
      5443**DCL
ID.REV
      5446**DCL
ID.REV.LEVEL
      5448**DCL
ID.USAGE
      5449**DCL
MATCH IN PROCEDURE P_PATCH_DECK
      5917**DCL
OBJECT.BCD.ASSEMBLER
      5478**DCL
OBJECT.BCD.CONTROL
      5462**DCL
OBJECT.BCD.DATE
      5480**DCL
OBJECT.BCD.DONT_APPLY
      5467**DCL
OBJECT.BCD.DONT_APPLY.CP6
      5469**DCL
OBJECT.BCD.DONT_APPLY.DPS8000
      5472**DCL
OBJECT.BCD.DONT_APPLY.DPS90
      5471**DCL
OBJECT.BCD.FILENAME
      5476**DCL
OBJECT.BCD.GECALL
      5479**DCL
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:130  
OBJECT.BCD.LBL
      5481**DCL
OBJECT.BCD.LOAD_TYPE
      5465**DCL
OBJECT.BCD.MODEL
      5475**DCL
OBJECT.BCD.SEQ
      5482**DCL
OBJECT.BCD.TYPE
      5463**DCL
OBJECT.BCD_
      5506**DCL
OBJECT.DECK_CHECKSUM
      5511**DCL
OBJECT.LOAD_SIZE
      5510**DCL
OBJECT.NIO_BCD
      5483**DCL
OBJECT.NIO_BCD.ASSEMBLER
      5500**DCL
OBJECT.NIO_BCD.CLASS
      5488**DCL
OBJECT.NIO_BCD.CONTROL
      5484**DCL
OBJECT.NIO_BCD.DATA
      5490**DCL
OBJECT.NIO_BCD.EQUIP_TYPE
      5492**DCL
OBJECT.NIO_BCD.FILE_NAME
      5493**DCL
OBJECT.NIO_BCD.LBL
      5504**DCL
OBJECT.NIO_BCD.LIBRARY
      5486**DCL
OBJECT.NIO_BCD.LOAD_TYPE
      5487**DCL
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:131  
OBJECT.NIO_BCD.PRD_NUM_TAB
      5501**DCL
OBJECT.NIO_BCD.PRG_NUM_TAB
      5502**DCL
OBJECT.NIO_BCD.SEQ
      5505**DCL
OBJECT.NIO_BCD.TYPE
      5485**DCL
OBJECT.NIO_BCD.X_OF_N.N
      5498**DCL
OBJECT.NIO_BCD.X_OF_N.X
      5496**DCL
OBJECT.NIO_BCD.X_OF_N_
      5499**DCL
OBJECT_KEY
      5523**DCL
OBJECT_KEY.SIZE
      5524**DCL
OBJECT_REFLIST_KEY
      5536**DCL
OBJECT_REFLIST_KEY.ENTRY#
      5539**DCL
OBJECT_REFLIST_KEY.SIZE
      5537**DCL
OBJECT_SEARCH_KEY
      5550**DCL
OUT$BLK IN PROCEDURE P_COMMAND_SETUP
      5700**DCL
OUT$BLK.CPOS IN PROCEDURE P_COMMAND_SETUP
      5726**DCL
OUT$BLK.NDTYPE IN PROCEDURE P_COMMAND_SETUP
      5703**DCL
OUT$BLK.SCRITCH IN PROCEDURE P_COMMAND_SETUP
      5716**DCL
OUT$BLK.TEMP IN PROCEDURE P_COMMAND_SETUP
      5701**DCL
PL6.E3A0      #001=TOU$PATCH File=TOU$PATCH.:E05TSI                              WED 07/30/97 06:49 Page:132  
OUT$SYM IN PROCEDURE P_COMMAND_SETUP
      5746**DCL
OUT$SYM.CODE IN PROCEDURE P_COMMAND_SETUP
      5752**DCL
OUT$SYM.CPOS IN PROCEDURE P_COMMAND_SETUP
      5761**DCL
OUT$SYM.NDTYPE IN PROCEDURE P_COMMAND_SETUP
      5749**DCL
OUT$SYM.NSUBLKS IN PROCEDURE P_COMMAND_SETUP
      5755**DCL
OUT$SYM.SCRITCH IN PROCEDURE P_COMMAND_SETUP
      5758**DCL
OUT$SYM.TEMP IN PROCEDURE P_COMMAND_SETUP
      5747**DCL
OUT$SYM.TEXTC$ IN PROCEDURE P_COMMAND_SETUP
      5764**DCL
TOU$PATCH
        43**PROC
