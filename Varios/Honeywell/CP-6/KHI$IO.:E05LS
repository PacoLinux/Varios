VERSION E05

CALF.D00   KHI$IO - Execute IO instruction                                      WED JUL 30 '97 00:30 Page:2
                                     1  *M* KHI$IO - Execute IO instructions, etc.
                                     2  *T***********************************************************
                                     3  *T*                                                         *
                                     4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                     5  *T*                                                         *
                                     6  *T***********************************************************
                                     8  * NAME:     KHI$IO
                                     9  *
                                    10  * PURPOSE:  Issue IO instructions, with error retries,
                                    11  *           error logging, and channel table coordination.
                                    12  *
                                    13      OUNAME    KHI$IO
                                    14  *
                                    15     ENTDEF    KHI$IO
                                    16      ENTDEF    KHI$DISABLE
                                    17      ENTDEF    KHI$ENABLE
                                    18      ENTDEF    KHI$SLAVE
                                    19      ENTDEF    KHI$IO_INP
                                    20      ENTDEF    KHI$IO_OTP
                                    21      ENTDEF    KHI$IO_INPLCTBYT
                                    22      ENTDEF    KHI$IO_OTPLCTBYT
                                    23      ENTDEF    KHI$IOLD
                                    24      ENTDEF    KHI$IOLD_FNC
                                    25  *
                                    26      ENTREF    (KHD$ERR_IO,OPTIONAL)
                                    27      ENTREF    (KHD$ERR_IOLD,OPTIONAL)
                                    28      ENTREF    (KHD$ERR_IOLD_OTPCCBCTR,OPTIONAL)
                                    29  *
         00000008                   30  KH#CHN_LCT55_WRDX EQU 8             Word index to KH$CHN.LCT55
                                    31  *
         000000(0)                  32  KHI$IO SECT   PROC
         000000(0)                  33  KHI$IO ALIGN

CALF.D00   KHI$IO_INP - Execute input IO instruction                            WED JUL 30 '97 00:30 Page:3
                                    35  *F* NAME:  KHI$IO_INP_ - Issue Input IO Instruction
                                    36  *,*
                                    37  *,*KHI$IO_INP issues input IO instructions, with error
                                    38  *,*retries, error logging, and channel table coordination.
                                    39  *,*'Input' IO instructions are those
                                    40  *,*that are returning a value (typically some sort of
                                    41  *,*status) to the caller.
                                    42  *,*If an IONAK or trap 15 occurs, the IO will be retried,
                                    43  *,*and an error log entry will be made.  If the IO
                                    44  *,*doesn't succeed after the retries, the ALTRET will
                                    45  *,*be taken.
                                    46  *,*.spb
                                    47  *,*The form of the call for this services is as follows:
                                    48  *,*.spb
                                    49  *,*CALL KHI$IO_INP(KH$CHN, KH$IO) ALTRET(IONAK);
                                    50  *,*
                                    51  *
 00000   9CC3 0002                  52  KHI$IO_INP ;
                                    53      LDB,B1    2,B3                  B1 = ADR of KH$IO
 00002   AC83                       54      LDB,B2    ,B3                   B2 = ADR of KH$CHN
 00003   C802                       55      LDR,R4    ,B2                   R4 = channel address
 00004   9801                       56      LDR,R1    ,B1                   R1 = INP/OTP CHN, function
 00005   9AD4 007F                  57      SRM,R1,'007F'X R4               R4 = complete IO CAS
 00007   8055 0054                  58      IO        (R5),(R4)             Do IO
 00009   0705                       59      BIOT      Y$IO_INP_OK,SPREL     B/IO succeeded
 0000A   D3C0 00B2                  60      LNJ,B5    Y$IO_RE_TRY,PREL      re-try the IO
 0000C   0781 003C                  61      BIOF      Y$ERR_IO,PREL         B/IO never succeeded
 0000E   DF41 0001                  62  Y$IO_INP_OK ;
                                    63  *N* DO TRACING CONDITIONALLY
                                    64      STR,R5    1,B1                  return results of IO
 00010   C3C6 0001                  65      LNJ,B4    1,B6                  return; IO ok

CALF.D00   KHI$IO_OTP - Execute output IO instruction                           WED JUL 30 '97 00:30 Page:4
                                    67  *F* NAME:  KHI$IO_OTP_ - Issue Output IO Instruction
                                    68  *,*
                                    69  *,*KHI$IO_OTP issues output IO instructions, with error
                                    70  *,*retries, error logging, and channel table coordination.
                                    71  *,*'Output' IO instructions are those
                                    72  *,*that passing a value (typically some sort of
                                    73  *,*command) to the IO device.
                                    74  *,*If an IONAK or trap 15 occurs, the IO will be retried,
                                    75  *,*and an error log entry will be made.  If the IO
                                    76  *,*doesn't succeed after the retries, the ALTRET will
                                    77  *,*be taken.
                                    78  *,*.spb
                                    79  *,*The form of the call for this service is as follows:
                                    80  *,*.spb
                                    81  *,*CALL KHI$IO_OTP(KH$CHN, KH$IO) ALTRET(IONAK);
                                    82  *,*
                                    83  *
 00012   9CC3 0002                  84  KHI$IO_OTP ;
                                    85      LDB,B1    2,B3                  B1 = ADR of KH$IO
 00014   AC83                       86      LDB,B2    ,B3                   B2 = ADR of KH$CHN
 00015   C802                       87      LDR,R4    ,B2                   R4 = channel address
 00016   9801                       88      LDR,R1    ,B1                   R1 = INP/OTP CHN, function
 00017   9AD4 007F                  89      SRM,R1,'007F'X R4               R4 = complete IO CAS
 00019   D841 0001                  90      LDR,R5    1,B1                  parameter for IO
 0001B   8055 0054                  91      IO        (R5),(R4)             Do IO
 0001D   0704                       92      BIOT      Y$IO_OTP_OK,SPREL     B/IO succeeded
 0001E   D3C0 009E                  93      LNJ,B5    Y$IO_RE_TRY,PREL      re-try the IO
 00020   07A9                       94      BIOF      Y$ERR_IO,SPREL        B/IO never succeeded
 00021   C3C6 0001                  95  Y$IO_OTP_OK ;
                                    96  *N* DO TRACING CONDITIONALLY
                                    97      LNJ,B4    1,B6                  return; IO ok

CALF.D00   KHI$IO_INPLCTBYT - Execute input LCT byte IO instruction             WED JUL 30 '97 00:30 Page:5
                                    99  *F* NAME:  KHI$IO_INPLCTBYT - Issue Input LCT Byte IO Instruction
                                   100  *,*
                                   101  *,*KHI$IO_INPLCTBYT issues input LCT byte IO instructions,
                                   102  *,*with error retries, error logging, and channel table coordination.
                                   103  *,*If an IONAK or trap 15 occurs, the IO will be retried,
                                   104  *,*and an error log entry will be made.  If the IO
                                   105  *,*doesn't succeed after the retries, the ALTRET will
                                   106  *,*be taken.
                                   107  *,*.spb
                                   108  *,*The form of the call for this service is as follows:
                                   109  *,*.spb
                                   110  *,*CALL KHI$IO_INPLCTBYT(KH$CHN, KH$IO) ALTRET(IONAK);
                                   111  *,*
                                   112  *
 00023   9CC3 0002                 113  KHI$IO_INPLCTBYT ;
                                   114      LDB,B1    2,B3                  B1 = ADR of KH$IO
 00025   AC83                      115      LDB,B2    ,B3                   B2 = ADR of KH$CHN
 00026   C802                      116      LDR,R4    ,B2                   R4 = channel address
 00027   C570 FF80                 117      AND,R4    'FF80'X,IMO           R4 = channel address only
 00029   D841 0001                 118      LDR,R5    1,B1                  LCT data, LCT ADR
 0002B   B2D5                      119      LLH,R3    R5                    LCT ADR
 0002C   B1C2 0008                 120      CMH,R3    KH#CHN_LCT55_WRDX,B2  LCT ADR, KH$CHN.LCT55
 0002E   090F                      121      BE        Y$IO_INPLCTBYT_LCT55OK,SPREL  B/LCT 55 already set up
 0002F   5008                      122      SOL,R5    8                     left justify new LCT55 contents
 00030   5E37                      123      ADV,R5    55                    indicate output to LCT55
 00031   4E0B                      124      ADV,R4    '0B'X                 function code = output LCT byte
 00032   8055 0054                 125      IO        (R5),(R4)             Output LCT byte
 00034   0704                      126      BIOT      Y$IO_INPLCTBYT_OTPOK,SPREL  B/IO succeeded
 00035   D3C0 0087                 127      LNJ,B5    Y$IO_RE_TRY,PREL      retry IO
 00037   0792                      128      BIOF      Y$ERR_IO,SPREL        B/IO never succeeded
 00038   4EF5                      129  Y$IO_INPLCTBYT_OTPOK ;
                                   130      ADV,R4    -'0B'X                subtract off function code
 00039   D841 0001                 131      LDR,R5    1,B1                  (LCT data), LCT adr
 0003B   D7C2 0008                 132      STH,R5    KH#CHN_LCT55_WRDX,B2  save new LCT55 contents
 0003D   4E1E                      133  Y$IO_INPLCTBYT_LCT55OK ;
                                   134      ADV,R4    '1E'X                 function code = input LCT byte
CALF.D00   KHI$IO_INPLCTBYT - Execute input LCT byte IO instruction             WED JUL 30 '97 00:30 Page:6
 0003E   8055 0054                 135      IO        (R5),(R4)             Do IO
 00040   0704                      136      BIOT      Y$IO_INPLCTBYT_OK,SPREL   B/IO succeeded
 00041   D3C0 007B                 137      LNJ,B5    Y$IO_RE_TRY,PREL      re-try the IO
 00043   0786                      138      BIOF      Y$ERR_IO,SPREL        B/IO never succeeded
 00044   DAC1 0001 FF00            139  Y$IO_INPLCTBYT_OK ;
                                   140  *N* DO TRACING CONDITIONALLY
                                   141      SRM,R5,'FF00'X  1,B1            return LCT data to caller
 00047   C3C6 0001                 142      LNJ,B4    1,B6                  return; IO ok
                                   143  *

CALF.D00   KHI$IO - IO Error handling                                           WED JUL 30 '97 00:30 Page:7
 00049   AB80 000000(0)e           145  Y$ERR_IO ;
                                   146  *
                                   147  * Log the irrecoverable error if KHD is linked in.
                                   148  *
                                   149      LAB,B2    KHD$ERR_IO
 0004C   8DD2                      150      CMN       B2
 0004D   0980 000000(0)e           151      BNE       KHD$ERR_IO            Log; KHD$ERR_IO will do ALTRET
 00050   B806                      152  Y$ALTRET ;
                                   153      LDR,R3    ,B6                   ALTRET branch index
 00051   C3B6                      154      LNJ,B4    ,B6,R3                ALTRET
                                   155  *
 00052   AB80 000000(1)e           156  Y$ERR_IOLD ;
                                   157  *
                                   158  * Log the irrecoverable error if KHD is linked in.
                                   159  *
                                   160      LAB,B2    KHD$ERR_IOLD
 00055   8DD2                      161      CMN       B2
 00056   097A                      162      BE        Y$ALTRET,SPREL        ALTRET
 00057   8382                      163      JMP       ,B2                   Log; KHD$ERR_IOLD will do ALTRET
                                   164  *
 00058   AB80 000000(2)e           165  Y$ERR_IOLD_OTPCCBCTR ;
                                   166  *
                                   167  * Log the irrecoverable error if KHD is linked in.
                                   168  *
                                   169      LAB,B2    KHD$ERR_IOLD_OTPCCBCTR
 0005B   8DD2                      170      CMN       B2
 0005C   0974                      171      BE        Y$ALTRET,SPREL        ALTRET
 0005D   8382                      172      JMP       ,B2                   Log; KHD$ERR_IOLD_OTPCCBCTR will
                                      ::do ALTRET

CALF.D00   KHI$IO_OTPLCTBYT - Execute output LCT byte IO instruction            WED JUL 30 '97 00:30 Page:8
                                   174  *F* NAME:  KHI$IO_OTPLCTBYT - Issue Output LCT Byte IO Instruction
                                   175  *,*
                                   176  *,*KHI$IO_OTPLCTBYT issues output LCT byte IO instructions,
                                   177  *,*with error retries, error logging, and channel table coordination.
                                   178  *,*If an IONAK or trap 15 occurs, the IO will be retried,
                                   179  *,*and an error log entry will be made.  If the IO
                                   180  *,*doesn't succeed after the retries, the ALTRET will
                                   181  *,*be taken.
                                   182  *,*.spb
                                   183  *,*The form of the call for this service is as follows:
                                   184  *,*.spb
                                   185  *,*CALL KHI$IO_OTPLCTBYT(KH$CHN, KH$IO) ALTRET(IONAK);
                                   186  *,*
                                   187  *
 0005E   9CC3 0002                 188  KHI$IO_OTPLCTBYT ;
                                   189      LDB,B1    2,B3                  B1 = ADR of KH$IO
 00060   AC83                      190      LDB,B2    ,B3                   B2 = ADR of KH$CHN
 00061   C802                      191      LDR,R4    ,B2                   R4 = channel address
 00062   C570 FF80                 192      AND,R4    'FF80'X,IMO           R4 = channel address only
 00064   4E0B                      193      ADV,R4    '0B'X                 function code = output LCT byte
 00065   D841 0001                 194      LDR,R5    1,B1                  LCT data, LCT ADR
 00067   8055 0054                 195      IO        (R5),(R4)             Do IO
 00069   0704                      196      BIOT      Y$IO_OTPLCTBYT_OK,SPREL  B/IO succeeded
 0006A   D3C0 0052                 197      LNJ,B5    Y$IO_RE_TRY,PREL      re-try the IO
 0006C   07DD                      198      BIOF      Y$ERR_IO,SPREL        B/IO never succeeded
 0006D   3C37                      199  Y$IO_OTPLCTBYT_OK ;
                                   200  *N* DO TRACING CONDITIONALLY
                                   201      LDV,R3    55                    check for LCT55 store
 0006E   B1D5                      202      CMH,R3    R5                    compare 55 w/LCT adr
 0006F   0984                      203      BNE       Y$IO_OTPLCTBYT_NOT55,SPREL  B/not LCT 55 store
 00070   DAC2 0008 FF00            204      SRM,R5,'FF00'X KH#CHN_LCT55_WRDX,B2 save new contents of LCT55
 00073   C3C6 0001                 205  Y$IO_OTPLCTBYT_NOT55 ;
                                   206      LNJ,B4    1,B6                  return; IO ok

CALF.D00   KHI$IOLD - Execute IOLD instruction                                  WED JUL 30 '97 00:30 Page:9
                                   208  *F* NAME:  KHI$IOLD - Issue IOLD Instruction
                                   209  *,*
                                   210  *,*KHI$IOLD issues IOLD [and IO (output CCB control)] instructions,
                                   211  *,*with error retries, error logging, and channel table
                                   212  *,*coordination.
                                   213  *,*The IO (output CCB control) is only issued if the
                                   214  *,*validate-CCB bit (KH$IOLD.VLDCCB) is set.
                                   215  *,*If an IONAK or trap 15 occurs, the IO will be retried,
                                   216  *,*and an error log entry will be made.  If the IO
                                   217  *,*doesn't succeed after the retries, the ALTRET will
                                   218  *,*be taken.
                                   219  *,*.spb
                                   220  *,*The form of the call for this service is as follows:
                                   221  *,*.spb
                                   222  *,*CALL KHI$IOLD(KH$CHN, KH$IOLD) ALTRET(IONAK);
                                   223  *,*
                                   224  *
 00075   9CC3 0002                 225  KHI$IOLD ;
                                   226      LDB,B1    2,B3                  B1 = ADR of KH$IO
 00077   AC83                      227      LDB,B2    ,B3                   B2 = ADR of KH$CHN
 00078   C802                      228      LDR,R4    ,B2                   R4 = channel address
 00079   ACC1 0001                 229      LDB,B2    1,B1                  B2 = ADR of buffer to IOLD
 0007B   D841 0004                 230      LDR,R5    4,B1                  R5 = byte size of buffer
 0007D   B841 0003                 231      LDR,R3    3,B1                  R3 = byte index to data in buffer
 0007F   9801                      232      LDR,R1    ,B1                   R1 = INP/OTP CHN
 00080   9AD4 0040                 233      SRM,R1,'0040'X R4               R4 = complete IO channel
 00082   C570 FFC0                 234      AND,R4    'FFC0'X,IMO           clear function code
 00084   4E09                      235      ADV,R4    9                     R4 = complete CAS (FNC added)
 00085   81B2 0054 0055            236      IOLD      (,B2,R3),(R4),(R5)    Do IOLD (DAS,CAS,RAS)
 00088   070A                      237      BIOT      Y$IOLD_OK,SPREL       B/IO succeeded
                                   238  *
                                   239  * Retry a failed IOLD instruction up to 10 times.
                                   240  * Do error logging.
                                   241  *
 00089   2C0A                      242      LDV,R2    10                    10 retries
 0008A   88D2                      243  Y$IOLD_RE_TRYAGN ;
CALF.D00   KHI$IOLD - Execute IOLD instruction                                  WED JUL 30 '97 00:30 Page:10
                                   244      DEC       R2                    decrement try counter
 0008B   81B2 0054 0055            245      IOLD      (,B2,R3),(R4),(R5)    Do IOLD (DAS,CAS,RAS)
 0008E   0704                      246      BIOT      Y$IOLD_RE_TRY_OK_NOW,SPREL  B/IO succeeded
 0008F   29FB                      247      BNEZ,R2   Y$IOLD_RE_TRYAGN,SPREL   B/more tries left; try again
 00090   0F81 FFC1                 248      B         Y$ERR_IOLD,PREL       ALTRET; total failure on IOLD; Lo
                                      ::g & return
         000092(0)                 249  Y$IOLD_RE_TRY_OK_NOW  ALIGN
 00092   8281 4000                 250  Y$IOLD_OK ;
                                   251  *N* DO TRACING CONDITIONALLY
                                   252      LB,'4000'X ,B1                  test for valid-CCB set
 00094   058B                      253      BBF       Y$IOLD_NO_OTPCCBCTR,SPREL  B/not to do output CCB contr
                                      ::ol IO
 00095   D281                      254      LLH,R5    ,B1                   R5 = data for output CCB control
                                      ::IO
 00096   4E06                      255      ADV,R4    -9+15                 adjust function to output CCB con
                                      ::trol
 00097   8055 0054                 256      IO        (R5),(R4)             IO (output CCB control)
 00099   0706                      257      BIOT      Y$IO_OTPCCBCTR_OK,SPREL  B/IO succeeded
 0009A   D3C0 0022                 258      LNJ,B5    Y$IO_RE_TRY,PREL      re-try the IO
 0009C   0780 000058(0)            259      BIOF      Y$ERR_IOLD_OTPCCBCTR  B/IO never succeeded
         00009F(0)                 260  Y$IO_OTPCCBCTR_OK  ALIGN
                                   261  *N* DO TRACING CONDITIONALLY
 0009F   C3C6 0001                 262  Y$IOLD_NO_OTPCCBCTR ;
                                   263      LNJ,B4    1,B6                  return; IOs ok

CALF.D00   KHI$IOLD_RAMDATTRN - Execute IOLD instruction, RAM data transfer     WED JUL 30 '97 00:30 Page:11
                                   265  *F* NAME:  KHI$IOLD_FNC - Issue IOLD with Function in FPT
                                   266  *,*
                                   267  *,*KHI$IOLD_FNC is intended for IOLDs such as MCL-16 RAM data transfe
                                      ::r
                                   268  *,*where the function code isn't 9.  It issues IOLD instructions,
                                   269  *,*with error retries, error logging, and channel table
                                   270  *,*coordination.
                                   271  *,*If an IONAK or trap 15 occurs, the IO will be retried,
                                   272  *,*and an error log entry will be made.  If the IO
                                   273  *,*doesn't succeed after the retries, the ALTRET will
                                   274  *,*be taken.
                                   275  *,*.spb
                                   276  *,*The form of the call for this service is as follows:
                                   277  *,*.spb
                                   278  *,*CALL KHI$IOLD_FNC(KH$CHN, KH$IOLD) ALTRET(IONAK);
                                   279  *,*
                                   280  *
 000A1   9CC3 0002                 281  KHI$IOLD_FNC ;
                                   282      LDB,B1    2,B3                  B1 = ADR of KH$IO
 000A3   AC83                      283      LDB,B2    ,B3                   B2 = ADR of KH$CHN
 000A4   C802                      284      LDR,R4    ,B2                   R4 = channel address
 000A5   ACC1 0001                 285      LDB,B2    1,B1                  B2 = ADR of buffer to IOLD
 000A7   D841 0004                 286      LDR,R5    4,B1                  R5 = byte size of buffer
 000A9   B841 0003                 287      LDR,R3    3,B1                  R3 = byte index to data in buffer
 000AB   9801                      288      LDR,R1    ,B1                   R1 = INP/OTP CHN (read vs write R
                                      ::AM)
 000AC   9AD4 007F                 289      SRM,R1,'7F'X R4                 R4 = complete CAS (OTP and  FNC a
                                      ::dded)
 000AE   81B2 0054 0055            290      IOLD      (,B2,R3),(R4),(R5)    Do IOLD (DAS,CAS,RAS)
 000B1   070A                      291      BIOT      Y$IOLD_RAMDATTRN_OK,SPREL       B/IO succeeded
                                   292  *
                                   293  * Retry a failed IOLD instruction up to 10 times.
                                   294  * Do error logging.
                                   295  *
 000B2   2C0A                      296      LDV,R2    10                    10 retries
 000B3   88D2                      297  Y$IOLD_RAMDATTRN_RE_TRYAGN ;
CALF.D00   KHI$IOLD_RAMDATTRN - Execute IOLD instruction, RAM data transfer     WED JUL 30 '97 00:30 Page:12
                                   298      DEC       R2                    decrement try counter
 000B4   81B2 0054 0055            299      IOLD      (,B2,R3),(R4),(R5)    Do IOLD (DAS,CAS,RAS)
 000B7   0704                      300      BIOT      Y$IOLD_RAMDATTRN_RE_TRY_OK_NOW,SPREL  B/IO succeeded
 000B8   29FB                      301      BNEZ,R2   Y$IOLD_RAMDATTRN_RE_TRYAGN,SPREL   B/more tries left; t
                                      ::ry again
 000B9   0F81 FF98                 302      B         Y$ERR_IOLD,PREL       ALTRET; total failure on IOLD; Lo
                                      ::g & return
         0000BB(0)                 303  Y$IOLD_RAMDATTRN_RE_TRY_OK_NOW  ALIGN
 000BB   C3C6 0001                 304  Y$IOLD_RAMDATTRN_OK ;
                                   305  *N* DO TRACING CONDITIONALLY
                                   306      LNJ,B4    1,B6                  return; IOLD ok

CALF.D00   KHI$IO/Y$IO_RE_TRY - re-try IO                                       WED JUL 30 '97 00:30 Page:13
                                   308  *
                                   309  * Retry a failed IO instruction up to 10 times.
                                   310  * Do error logging.
                                   311  *
 000BD   2C0A                      312  Y$IO_RE_TRY  ;
                                   313      LDV,R2    10                    10 retries
 000BE   88D2                      314  Y$IO_RE_TRYAGN ;
                                   315      DEC       R2                    decrement try counter
 000BF   8055 0054                 316      IO        (R5),(R4)             retry IO
 000C1   0702                      317      BIOT      Y$IO_RE_TRY_OK_NOW,SPREL   B/IO succeeded
 000C2   29FC                      318      BNEZ,R2   Y$IO_RE_TRYAGN,SPREL  B/more tries left; try again
 000C3   8385                      319  Y$IO_RE_TRY_OK_NOW ;
                                   320      JMP       ,B5                   return to IO routine

CALF.D00   KHI$DISABLE/KHI$ENABLE - Useful LEV instructions.                    WED JUL 30 '97 00:30 Page:14
                                   322  *F* NAME:  KHI$ENABLE - Enable Interrupts
                                   323  *,*
                                   324  *,*KHI$ENABLE performs a LEV '803F'X,IMO, which is a privileged instr
                                      ::uction.
                                   325  *,*.spb
                                   326  *,*The form of the call for this service is as follows:
                                   327  *,*.spb
                                   328  *,*CALL KHI$ENABLE;
                                   329  *
         0000C4(0)                 330  KHI$ENABLE ALIGN
 000C4   8E70 803F                 331         LEV     '803F'X,IMO
 000C6   83C6 0001                 332         JMP     1,B6
                                   333  *F* NAME:  KHI$DISABLE - Disable Interrupts
                                   334  *,*
                                   335  *,*KHI$DISABLE disables to the (UBIN) parameter level and saves
                                   336  *,*the previous execution level in its place.
                                   337  *,*The parameter word should be a plain level number.
                                   338  *,*It will be unchanged if the current level is numerically at or
                                   339  *,*below it.  This routine executes a LEV instruction,
                                   340  *,*which is privileged.
                                   341  *,*.spb
                                   342  *,*The form of the call for this service is as follows:
                                   343  *,*.spb
                                   344  *,*CALL KHI$DISABLE(level);
                                   345  *
         0000C8(0)                 346  KHI$DISABLE ALIGN
 000C8   BC83                      347         LDB,B3  ,B3
 000C9   9803                      348         LDR,R1  ,B3
 000CA   8C52                      349         STS     R2
 000CB   A570 003F                 350         AND,R2  '3F'X,IMO
 000CD   9952                      351         CMR,R1  R2
 000CE   0287                      352         BGE     DISABLE1,SPREL
 000CF   AF03                      353         STR,R2  ,B3
 000D0   9470 0080                 354         OR,R1   '80'X,IMO
 000D2   8E51                      355         LEV     R1
 000D3   83C6 0001                 356         JMP     1,B6            Patch this to save B6 for debugging.
CALF.D00   KHI$DISABLE/KHI$ENABLE - Useful LEV instructions.                    WED JUL 30 '97 00:30 Page:15
         0000D5(0)                 357  DISABLE1 ALIGN
 000D5   83C6 0001                 358         JMP     1,B6
                                   359  *
                                   360  *F* NAME:  KHI$SLAVE - Return Master Mode Program to User Mode
                                   361  *,*
                                   362  *,*KHI$SLAVE issues an ENT instruction to enter user mode.
                                   363  *,*.spb
                                   364  *,*The form of the call for this service is as follows:
                                   365  *,*.spb
                                   366  *,*CALL KHI$SLAVE;
                                   367  *
         0000D7(0)                 368  KHI$SLAVE      ALIGN
 000D7   8B80 0000DA(0)            369         ENT     GOSLAVE
         0000DA(0)                 370  GOSLAVE        ALIGN
 000DA   83C6 0001                 371         JMP     1,B6
                                   372  *
                                   373      END
      No Errors in this assembly.
