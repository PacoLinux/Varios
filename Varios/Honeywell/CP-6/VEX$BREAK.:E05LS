VERSION E05

PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:1    
        1        1        /*M*    VEX$BREAK - BREAK ROUTINES FOR EDIT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$BREAK: PROC ASYNC;
        9        9        /**/
       10       10        /*****************************************************************/
       11       11        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       12       12        /*****************************************************************/
       13       13        /**/
       14       14        %INCLUDE VE_FLAGS_R;
       15       65        %INCLUDE VE_SUBS_C;
       16      259        /**/
       17      260    1   DCL REMEM_CMD_READ REMEMBER SYMREF;     /* UNWIND TO RESTART                 */
       18      261    1   DCL LAST_KEY UBIN WORD SYMREF;
       19      262    1   DCL 1 SUB_BUF_1 SYMREF,
       20      263    1          2 COUNT UBIN(9) UNAL,
       21      264    1          2 TEXT CHAR(31) UNAL;
       22      265    1   DCL 1 SUB_BUF_2 SYMREF,
       23      266    1          2 COUNT UBIN(9) UNAL,
       24      267    1          2 TEXT CHAR(31) UNAL;
       25      268    1   DCL 1 SUB_BUF_3 SYMREF,
       26      269    1          2 COUNT UBIN(9) UNAL,
       27      270    1          2 TEXT CHAR(31) UNAL;
       28      271    1   DCL 1 TYPE_BUF SYMREF ,
       29      272    1          2 VFC CHAR(1) CALIGNED,
       30      273    1          2 TEXT CHAR(PC_DISPRECSIZE#) CALIGNED;
       31      274    1   DCL FILE_TYP UBIN WORD SYMREF ;         /* What type file? */
       32      275    1   DCL I UBIN WORD SYMREF;
       33      276    1   DCL INCR UBIN WORD SYMREF;
       34      277    1   DCL EXEC_SEQNUM UBIN WORD SYMREF;
       35      278    1   DCL LO_SEQNUM UBIN WORD SYMREF;
       36      279    1   DCL HI_SEQNUM UBIN WORD SYMREF;
       37      280    1   DCL SAVE_KEY UBIN WORD SYMREF;
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:2    
       38      281    1   DCL CMD_CODE UBIN WORD SYMREF;
       39      282    1   DCL SEQ_TEXT_BUF CHAR(9) SYMREF;
       40      283    1   DCL CMD_BUF CHAR(256) SYMREF;
       41      284    1   DCL CMD_SIZE UBIN WORD SYMREF;
       42      285    1   DCL TEMP_CMD_BUF CHAR(256) SYMREF;
       43      286    1   DCL TEMP_CMD_SIZE UBIN WORD SYMREF;
       44      287    1   DCL Y003 UBIN WORD SYMREF;
       45      288    1   DCL M$UC$ PTR SYMREF;
       46      289        /**/
       47      290    1   DCL MK_BASE$ PTR SYMREF;
       48      291    1   DCL COPYDS_PTR$ PTR SYMREF;
       49      292    1   DCL BREAK_ARS UBIN WORD SYMREF ;
       50      293        /**/
       51      294    1   DCL M$FILE DCB;
       52      295    1   DCL M$FILE2 DCB;
       53      296        /**/
       54      297    1   DCL IN_DCBNUM UBIN WORD SYMREF ;
       55      298    1   DCL SI_DCBNUM UBIN WORD SYMREF ;
       56      299
       57      300        %INCLUDE VE_PERR_C;
       58      517        %INCLUDE CP_6;
       59      598        %INCLUDE F$DCB;
       60      647        /**/
       61      648        /***********************************************************/
       62      649        /*   ENTRYS   ENTRYS   ENTRYS   ENTRYS   ENTRYS   ENTRYS   */
       63      650        /***********************************************************/
       64      651        /**/
       65      652    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       66      653    1   DCL VEX$READ_TERM_REC ENTRY(2) ALTRET;
       67      654    1   DCL VEX$READ_RANDOM ENTRY(1) ALTRET;
       68      655    1   DCL VEX$SEQNUM_TEXT ENTRY(2);
       69      656    1   DCL VEX$SET_PROMPT ENTRY(1);
       70      657    1   DCL VEX$TYPE_REC ENTRY(1) ;
       71      658        /**/
       72      659        /********************************************************************/
       73      660        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
       74      661        /********************************************************************/
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:3    
       75      662        /**/
       76      663        %FPT_CLOSE    (FPTN = CLOSE_FPT, STCLASS = CONSTANT,
       77      664                       DCB = M$FILE,
       78      665                       DISP = SAVE);
       79      707        %FPT_CLOSE    (FPTN = CLOSE2_FPT, STCLASS = CONSTANT,
       80      708                       DCB = M$FILE2,
       81      709                       DISP = SAVE);
       82      751        %FPT_CLOSE    (FPTN = CLOSE2_REL, STCLASS = CONSTANT,
       83      752                       DCB = M$FILE2,
       84      753                       DISP = RELEASE);
       85      795        %FPT_CLOSE (  FPTN = CLOSE_SIREAD_FPT, STCLASS = SYMREF ) ;
       86      837        %FPT_READ     (FPTN = READ_UC, STCLASS = CONSTANT,
       87      838                       DCB = M$UC,
       88      839                       BUF = TEMP_CMD_BUF);
       89      878        %FPT_WRITE    (FPTN=WRITE_UC, STCLASS = CONSTANT,
       90      879                   DCB = M$UC,
       91      880                   BUF = BRKMSG,
       92      881                   VFC = YES);
       93      912        %FPT_WRITE    (FPTN=WRITE_CR, STCLASS = CONSTANT,
       94      913                   DCB = M$UC,
       95      914                   BUF = CRMSG,
       96      915                   VFC = YES);
       97      946        %FPT_GDS      (FPTN=DS_FPT, STCLASS = CONSTANT,
       98      947                       RESULTS = DS_RESULTS,
       99      948                       SEGSIZE = 10240);
      100      964        %FPT_TRMPRG      (FPTN = TRMPRG_FPT, STCLASS = CONSTANT,
      101      965                          RSTBRK = YES);
      102      994        %VLP_VECTOR   (FPTN = DS_RESULTS);
      103     1009        %FPT_RELDCB ( FPTN = RELDCB_FPT,
      104     1010                      STCLASS = STATIC) ;
      105     1024        %FPT_PRECORD (  FPTN = PREC_FPT,
      106     1025                        DCB = M$FILE,
      107     1026                        BRK = YES,
      108     1027                        KEYS = YES,
      109     1028                        KEYR = YES) ;
      110     1049        /**/
      111     1050        /*****************************************************************************/
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:4    
      112     1051        /*   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   */
      113     1052        /*****************************************************************************/
      114     1053        /**/
      115     1054    1   DCL BRKMSG CHAR(23) CONSTANT INIT('aEnter ''C'' to continue ');
      116     1055    1   DCL CRMSG CHAR(2) CONSTANT INIT('a ');
      117     1056        /**/
      118     1057        /**/
      119     1058        /**********************************************************************/
      120     1059        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
      121     1060        /**********************************************************************/
      122     1061    1   DCL 1 MK$RECS BASED ALIGNED,            /* BOOKKEEPPING                       */
      123     1062    1          2 SIZE (0:MKCOUNTMAX) UBIN BYTE UNAL,
      124     1063    1          2 OFFSET (0:MKCOUNTMAX) UBIN HALF UNAL,
      125     1064    1          2 KEY (0:MKCOUNTMAX) UBIN WORD UNAL ,
      126     1065    1          2 DVBYTE (0:MKCOUNTMAX) BIT(36) UNAL ;
      127     1066        /**/
      128     1067        /*****************************************************************/
      129     1068        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      130     1069        /*****************************************************************/
      131     1070        /**/
      132     1071    1        DS_RESULTS.PTR$ = ADDR(NIL);
      133     1072        /**/
      134     1073    1        CALL M$TRMPRG(TRMPRG_FPT);
      135     1074                                                /* Command level?                     */
      136     1075    2        IF FLAGS.INPUT = '1'B THEN DO ;
      137     1076    2           CALL M$WRITE(WRITE_CR) ALTRET(CR_ERR) ;
      138     1077    2   CR_ERR:
      139     1078    2           RETURN ;
      140     1079    2           END ;
      141     1080    1        IF CMD_CODE = HELPCMD
      142     1081    1        THEN
      143     1082                                                    /*
      144     1083                                                      Can not continue HELP.
      145     1084                                                    */
      146     1085    1           RETURN ;
      147     1086                                                /* Not first BREAK?                   */
      148     1087    1        IF FLAGS.BREAK = '1'B THEN RETURN ;
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:5    
      149     1088    1        FLAGS.BREAK = '1'B ;
      150     1089        /**/
      151     1090    1        TEMP_CMD_BUF= ' ';                 /* CLEAR OLD CMD */
      152     1091        /**/
      153     1092        /**/
      154     1093    2        IF (FLAGS.INTRA_CMD)OR(CMD_CODE=MERGECMD)OR(CMD_CODE=COPYCMD) THEN DO;
      155     1094    2           CALL VEX$SEQNUM_TEXT(LAST_KEY,SUB_BUF_1);
      156     1095    2           IF FLAGS.INTRA_CMD
      157     1096    2           THEN
      158     1097    2              CALL VEX$ERROR(E$E_INTRABREAK,1); /* SEE WHAT HE WANTS TO DO    */
      159     1098    2           ELSE
      160     1099    2              CALL VEX$ERROR(E$E_FILEBREAK,1); /* SEE WHAT HE WANTS TO DO     */
      161     1100    2           TEMP_CMD_SIZE = 0 ;
      162     1101    2           CALL M$WRITE(WRITE_UC) ALTRET(BREAKOUT);
      163     1102    2           CALL VEX$SET_PROMPT(PR_1AST);
      164     1103    2           CALL M$READ (READ_UC) ALTRET (BREAKOUT);
      165     1104    2           TEMP_CMD_SIZE = M$UC$ -> F$DCB.ARS;
      166     1105    2           IF ((TEMP_CMD_SIZE=1)AND((SUBSTR(TEMP_CMD_BUF,0,1)='C')OR
      167     1106    3              (SUBSTR(TEMP_CMD_BUF,0,1)='c'))) THEN DO ;
      168     1107    3              FLAGS.BREAK = '0'B ;
      169     1108    3              CALL VEX$SET_PROMPT(PR_SEQNUM);
      170     1109    3              RETURN;
      171     1110    3              END;
      172     1111    2           END;
      173     1112        /**/
      174     1113        /*E*     ERROR:    VEE-E$E_INTRABREAK-0
      175     1114                 MESSAGE:  Intra record command interrupt at %U1
      176     1115                 DESCRIPTION:   USER HIT BREAK DURRING INTRARECORD COMMAND - SEE
      177     1116                           WHAT HE WANTS TO DO NOW       */
      178     1117        /**/
      179     1118        /*E*     ERROR:    VEE-E$E_FILEBREAK-0
      180     1119                 MESSAGE:  File command interrupt at %U1
      181     1120                 DESCRIPTION:   USER HIT BREAK DURRING FILE COMMAND - SEE
      182     1121                           WHAT HE WANTS TO DO NOW       */
      183     1122        /**/
      184     1123    2        ELSE DO;
      185     1124    2   BREAK1:
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:6    
      186     1125    2           TEMP_CMD_SIZE = 0 ;
      187     1126    2           CALL M$WRITE(WRITE_UC) ALTRET(BREAKOUT);
      188     1127    2           CALL VEX$SET_PROMPT(PR_1AST);
      189     1128    2           CALL M$READ (READ_UC) ALTRET (BREAKOUT);
      190     1129    2           TEMP_CMD_SIZE = M$UC$ -> F$DCB.ARS;
      191     1130    2           IF ((TEMP_CMD_SIZE=1)AND((SUBSTR(TEMP_CMD_BUF,0,1)='C')OR
      192     1131    3              (SUBSTR(TEMP_CMD_BUF,0,1)='c'))) THEN DO;
      193     1132    3              IF (CMD_CODE = BUILDCMD)OR
      194     1133    3                 (CMD_CODE = INCMD)OR
      195     1134    3                 (CMD_CODE = IPCMD)OR
      196     1135    3                 (CMD_CODE = IACMD)OR
      197     1136    3                 (CMD_CODE = IBCMD)OR
      198     1137    4                 (CMD_CODE = APCMD) THEN DO;
      199     1138    4                 CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM);
      200     1139    4                 CALL VEX$SET_PROMPT(PR_SEQNUM);
      201     1140    4                 END;
      202     1141    3              IF (CMD_CODE = ISCMD) THEN CALL VEX$SET_PROMPT(PR_PERIOD);
      203     1142    4              IF CMD_CODE = RRCMD THEN DO ;
      204     1143    4                 CALL VEX$SET_PROMPT(PR_SEQNUM);
      205     1144    4                 END ;                     /* THEN DO */
      206     1145    3              FLAGS.BREAK = '0'B ;
      207     1146    3              IF CMD_CODE = HELPCMD
      208     1147    3              THEN
      209     1148    4              DO ;                         /* Disallow BREAK during HELP. */
      210     1149    4                 CMD_BUF = ' ' ;
      211     1150    4                 GOTO BREAKOUT ;
      212     1151    4                 END ;                     /* THEN DO */
      213     1152    3              RETURN;
      214     1153    3              END;
      215     1154    2           END;
      216     1155        /**/
      217     1156    1   BREAKOUT:
      218     1157    1        CALL M$CLRSTK;
      219     1158    1        FLAGS.INTRA_CMD = FALSE;
      220     1159    1        FLAGS.STEP_MODE = FALSE;
      221     1160    1        FLAGS.IBEX_BUILD = FALSE;
      222     1161    1        IF (FLAGS.CONSEC_MODE) THEN CALL VEX$READ_RANDOM(Y003); /* POSITION   */
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:7    
      223     1162    1        IF (CMD_CODE = COPYCMD)OR(CMD_CODE = MERGECMD) THEN
      224     1163    1           DS_RESULTS.PTR$ = COPYDS_PTR$;
      225     1164    1        IF (DS_RESULTS.PTR$ ~= ADDR(NIL)) THEN CALL M$FDS(DS_FPT);
      226     1165    2        DO CASE (CMD_CODE);
      227     1166    2        CASE (EDITCMD,COPYCMD,DELETECMD,MERGECMD,EXAMINECMD);
      228     1167    2           CALL M$CLOSE(CLOSE_FPT);
      229     1168    2           FLAGS.EDIT_MODE = FALSE;
      230     1169    2           FLAGS.CONSEC_MODE = FALSE;
      231     1170    2           FLAGS.REL_MODE = FALSE;
      232     1171
      233     1172    2        CASE (ELSE);
      234     1173    2           ;
      235     1174    2        END;                               /* DO CASE ON CMD_CODE */
      236     1175    1        IF (CMD_CODE = MERGECMD) THEN CALL M$CLOSE(CLOSE2_FPT);
      237     1176    1        IF (CMD_CODE = COPYCMD) THEN CALL M$CLOSE(CLOSE2_REL);
      238     1177    1        IF IN_DCBNUM ~= SI_DCBNUM
      239     1178    1        THEN
      240     1179    2        DO ;                               /* READ command in progress. */
      241     1180    2           CLOSE_SIREAD_FPT.V.DCB# = IN_DCBNUM ;
      242     1181    2           CALL M$CLOSE(CLOSE_SIREAD_FPT) ALTRET(CLOSE_SIREAD_ERR) ;
      243     1182
      244     1183    2   CLOSE_SIREAD_ERR:
      245     1184    2           RELDCB_FPT.V.DCB# = IN_DCBNUM ;
      246     1185    2           CALL M$RELDCB(RELDCB_FPT) ALTRET(RELDCB_ERR) ;
      247     1186    2   RELDCB_ERR:
      248     1187    2           IN_DCBNUM = SI_DCBNUM ;
      249     1188    2           END ;                           /* THEN DO */
      250     1189    1        IF (CMD_CODE = BUILDCMD) OR
      251     1190    1           (CMD_CODE = INCMD) OR
      252     1191    1           (CMD_CODE = IPCMD) OR
      253     1192    1           (CMD_CODE = IACMD) OR
      254     1193    1           (CMD_CODE = IBCMD) OR
      255     1194    1           (CMD_CODE = ISCMD) THEN
      256     1195    1           HI_SEQNUM = EXEC_SEQNUM ;
      257     1196    1        IF CMD_CODE = APCMD
      258     1197    1        THEN
      259     1198    2        DO ;
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:8    
      260     1199                                                    /*
      261     1200                                                      Need to get the key of the last
      262     1201                                                      record we wrote.
      263     1202                                                    */
      264     1203    2           PREC_FPT.KEY_ = VECTOR (EXEC_SEQNUM) ;
      265     1204    2           PREC_FPT.V.N# = -1 ;
      266     1205    2           CALL M$PRECORD (PREC_FPT)
      267     1206    2           WHENALTRETURN
      268     1207    3           DO ;
      269     1208    3              EXEC_SEQNUM = Y003 ;
      270     1209    3              END ;                        /* Whenaltreturn */
      271     1210    2           HI_SEQNUM = EXEC_SEQNUM ;
      272     1211    2           LO_SEQNUM = EXEC_SEQNUM ;
      273     1212    2           END ;
      274     1213    1        FLAGS.BREAK = '0'B ;
      275     1214    1        BREAK_ARS = TEMP_CMD_SIZE ;
      276     1215    1        CMD_SIZE = TEMP_CMD_SIZE ;
      277     1216    1        CMD_BUF = TEMP_CMD_BUF ;
      278     1217    1        UNWIND TO REMEM_CMD_READ;          /* RESTART                            */
      279     1218        /**/
      280     1219    1   VEX$BREAKMK: ENTRY ASYNC;
      281     1220        /**/
      282     1221    1        DS_RESULTS.PTR$ = MK_BASE$;
      283     1222        /**/
      284     1223    2        IF (I <= MKCOUNTMAX) THEN DO;
      285     1224    2           CALL VEX$SEQNUM_TEXT(MK_BASE$ -> MK$RECS.KEY(I),SUB_BUF_1);
      286     1225    2           CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM,SUB_BUF_2);
      287     1226    2           END;
      288     1227        /**/
      289     1228    2        ELSE DO;                           /* IN READ TO DATA SEG LOOP           */
      290     1229    2           CALL VEX$SEQNUM_TEXT(SAVE_KEY,SUB_BUF_1);
      291     1230    2           CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM-INCR,SUB_BUF_2);
      292     1231    2           END;
      293     1232        /**/
      294     1233    1        CALL VEX$ERROR(E$E_MKBREAK,2);
      295     1234        /*E*     ERROR:    VEE-E$E_MKBREAK-0
      296     1235                 MESSAGE:  Command interrupt at %U1 (%U2)
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:9    
      297     1236                 DESCRIPTION: BREAK IN MK,MD COMMAND     */
      298     1237        /**/
      299     1238    2        IF (CMD_CODE = MDCMD)OR(CMD_CODE = MDPCMD) THEN DO;
      300     1239    2           CALL VEX$SEQNUM_TEXT(SAVE_KEY,SUB_BUF_3);
      301     1240    2           CALL VEX$ERROR(E$E_MDBRKDEL,2);
      302     1241    2           END;
      303     1242        /*E*     ERROR:    VEE-E$E_MDBRKDEL-0
      304     1243                 MESSAGE:  Break durring MD - last record deleted is %U3
      305     1244                 DESCRIPTION: TELL USER LAST RECORD DELETED        */
      306     1245        /**/
      307     1246    1        GOTO BREAK1;
      308     1247    1   END;

PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:10   
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VEX$BREAK.

   Procedure VEX$BREAK requires 352 words for executable code.
   Procedure VEX$BREAK requires 8 words of local(AUTO) storage.

    No errors detected in file VEX$BREAK.:E05TSI    .

PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:11   

 Object Unit name= VEX$BREAK                                  File name= VEX$BREAK.:E05TOU
 UTS= JUL 30 '97 07:09:50.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$FILE
    1   DCB   even  none     0      0  M$FILE2
    2   DCB   even  none     0      0  M$UC
    3  RoData even  UTS    149    225  VEX$BREAK
    4   Data  even  none    16     20  VEX$BREAK
    5   Proc  even  none   352    540  VEX$BREAK
    6  RoData even  none    32     40  VEX$BREAK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes     Async       0  VEX$BREAK
     5    450                  yes     Async       0  VEX$BREAKMK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 VEX$SEQNUM_TEXT
 yes     yes           Std       2 VEX$ERROR
 yes     yes           Std       1 VEX$READ_RANDOM
         yes           Std       1 VEX$SET_PROMPT
                       nStd      0 X66_AAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AARET
                       nStd      0 X66_AAUNWIND
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:12   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FLAGS                                 REMEM_CMD_READ                        LAST_KEY
     SUB_BUF_1                             SUB_BUF_2                             SUB_BUF_3
     I                                     INCR                                  EXEC_SEQNUM
     LO_SEQNUM                             HI_SEQNUM                             SAVE_KEY
     CMD_CODE                              CMD_BUF                               CMD_SIZE
     TEMP_CMD_BUF                          TEMP_CMD_SIZE                         Y003
     M$UC$                                 MK_BASE$                              COPYDS_PTR$
     BREAK_ARS                             M$FILE                                M$FILE2
     IN_DCBNUM                             SI_DCBNUM                             M$UC
     CLOSE_SIREAD_FPT                      B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:13   


        1        1        /*M*    VEX$BREAK - BREAK ROUTINES FOR EDIT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$BREAK: PROC ASYNC;

      8  5 000000   000000 700200 xent  VEX$BREAK    TSX0  ! X66_AAUTO
         5 000001   000010 000000                    ZERO    8,0

        9        9        /**/
       10       10        /*****************************************************************/
       11       11        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       12       12        /*****************************************************************/
       13       13        /**/
       14       14        %INCLUDE VE_FLAGS_R;
       15       65        %INCLUDE VE_SUBS_C;
       16      259        /**/
       17      260    1   DCL REMEM_CMD_READ REMEMBER SYMREF;     /* UNWIND TO RESTART                 */
       18      261    1   DCL LAST_KEY UBIN WORD SYMREF;
       19      262    1   DCL 1 SUB_BUF_1 SYMREF,
       20      263    1          2 COUNT UBIN(9) UNAL,
       21      264    1          2 TEXT CHAR(31) UNAL;
       22      265    1   DCL 1 SUB_BUF_2 SYMREF,
       23      266    1          2 COUNT UBIN(9) UNAL,
       24      267    1          2 TEXT CHAR(31) UNAL;
       25      268    1   DCL 1 SUB_BUF_3 SYMREF,
       26      269    1          2 COUNT UBIN(9) UNAL,
       27      270    1          2 TEXT CHAR(31) UNAL;
       28      271    1   DCL 1 TYPE_BUF SYMREF ,
       29      272    1          2 VFC CHAR(1) CALIGNED,
       30      273    1          2 TEXT CHAR(PC_DISPRECSIZE#) CALIGNED;
       31      274    1   DCL FILE_TYP UBIN WORD SYMREF ;         /* What type file? */
       32      275    1   DCL I UBIN WORD SYMREF;
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:14   
       33      276    1   DCL INCR UBIN WORD SYMREF;
       34      277    1   DCL EXEC_SEQNUM UBIN WORD SYMREF;
       35      278    1   DCL LO_SEQNUM UBIN WORD SYMREF;
       36      279    1   DCL HI_SEQNUM UBIN WORD SYMREF;
       37      280    1   DCL SAVE_KEY UBIN WORD SYMREF;
       38      281    1   DCL CMD_CODE UBIN WORD SYMREF;
       39      282    1   DCL SEQ_TEXT_BUF CHAR(9) SYMREF;
       40      283    1   DCL CMD_BUF CHAR(256) SYMREF;
       41      284    1   DCL CMD_SIZE UBIN WORD SYMREF;
       42      285    1   DCL TEMP_CMD_BUF CHAR(256) SYMREF;
       43      286    1   DCL TEMP_CMD_SIZE UBIN WORD SYMREF;
       44      287    1   DCL Y003 UBIN WORD SYMREF;
       45      288    1   DCL M$UC$ PTR SYMREF;
       46      289        /**/
       47      290    1   DCL MK_BASE$ PTR SYMREF;
       48      291    1   DCL COPYDS_PTR$ PTR SYMREF;
       49      292    1   DCL BREAK_ARS UBIN WORD SYMREF ;
       50      293        /**/
       51      294    1   DCL M$FILE DCB;
       52      295    1   DCL M$FILE2 DCB;
       53      296        /**/
       54      297    1   DCL IN_DCBNUM UBIN WORD SYMREF ;
       55      298    1   DCL SI_DCBNUM UBIN WORD SYMREF ;
       56      299
       57      300        %INCLUDE VE_PERR_C;
       58      517        %INCLUDE CP_6;
       59      598        %INCLUDE F$DCB;
       60      647        /**/
       61      648        /***********************************************************/
       62      649        /*   ENTRYS   ENTRYS   ENTRYS   ENTRYS   ENTRYS   ENTRYS   */
       63      650        /***********************************************************/
       64      651        /**/
       65      652    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       66      653    1   DCL VEX$READ_TERM_REC ENTRY(2) ALTRET;
       67      654    1   DCL VEX$READ_RANDOM ENTRY(1) ALTRET;
       68      655    1   DCL VEX$SEQNUM_TEXT ENTRY(2);
       69      656    1   DCL VEX$SET_PROMPT ENTRY(1);
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:15   
       70      657    1   DCL VEX$TYPE_REC ENTRY(1) ;
       71      658        /**/
       72      659        /********************************************************************/
       73      660        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
       74      661        /********************************************************************/
       75      662        /**/
       76      663        %FPT_CLOSE    (FPTN = CLOSE_FPT, STCLASS = CONSTANT,
       77      664                       DCB = M$FILE,
       78      665                       DISP = SAVE);
       79      707        %FPT_CLOSE    (FPTN = CLOSE2_FPT, STCLASS = CONSTANT,
       80      708                       DCB = M$FILE2,
       81      709                       DISP = SAVE);
       82      751        %FPT_CLOSE    (FPTN = CLOSE2_REL, STCLASS = CONSTANT,
       83      752                       DCB = M$FILE2,
       84      753                       DISP = RELEASE);
       85      795        %FPT_CLOSE (  FPTN = CLOSE_SIREAD_FPT, STCLASS = SYMREF ) ;
       86      837        %FPT_READ     (FPTN = READ_UC, STCLASS = CONSTANT,
       87      838                       DCB = M$UC,
       88      839                       BUF = TEMP_CMD_BUF);
       89      878        %FPT_WRITE    (FPTN=WRITE_UC, STCLASS = CONSTANT,
       90      879                   DCB = M$UC,
       91      880                   BUF = BRKMSG,
       92      881                   VFC = YES);
       93      912        %FPT_WRITE    (FPTN=WRITE_CR, STCLASS = CONSTANT,
       94      913                   DCB = M$UC,
       95      914                   BUF = CRMSG,
       96      915                   VFC = YES);
       97      946        %FPT_GDS      (FPTN=DS_FPT, STCLASS = CONSTANT,
       98      947                       RESULTS = DS_RESULTS,
       99      948                       SEGSIZE = 10240);
      100      964        %FPT_TRMPRG      (FPTN = TRMPRG_FPT, STCLASS = CONSTANT,
      101      965                          RSTBRK = YES);
      102      994        %VLP_VECTOR   (FPTN = DS_RESULTS);
      103     1009        %FPT_RELDCB ( FPTN = RELDCB_FPT,
      104     1010                      STCLASS = STATIC) ;
      105     1024        %FPT_PRECORD (  FPTN = PREC_FPT,
      106     1025                        DCB = M$FILE,
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:16   
      107     1026                        BRK = YES,
      108     1027                        KEYS = YES,
      109     1028                        KEYR = YES) ;
      110     1049        /**/
      111     1050        /*****************************************************************************/
      112     1051        /*   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   */
      113     1052        /*****************************************************************************/
      114     1053        /**/
      115     1054    1   DCL BRKMSG CHAR(23) CONSTANT INIT('aEnter ''C'' to continue ');
      116     1055    1   DCL CRMSG CHAR(2) CONSTANT INIT('a ');
      117     1056        /**/
      118     1057        /**/
      119     1058        /**********************************************************************/
      120     1059        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
      121     1060        /**********************************************************************/
      122     1061    1   DCL 1 MK$RECS BASED ALIGNED,            /* BOOKKEEPPING                       */
      123     1062    1          2 SIZE (0:MKCOUNTMAX) UBIN BYTE UNAL,
      124     1063    1          2 OFFSET (0:MKCOUNTMAX) UBIN HALF UNAL,
      125     1064    1          2 KEY (0:MKCOUNTMAX) UBIN WORD UNAL ,
      126     1065    1          2 DVBYTE (0:MKCOUNTMAX) BIT(36) UNAL ;
      127     1066        /**/
      128     1067        /*****************************************************************/
      129     1068        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      130     1069        /*****************************************************************/
      131     1070        /**/
      132     1071    1        DS_RESULTS.PTR$ = ADDR(NIL);

   1071  5 000002   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 000003   000001 756000 4                  STQ     DS_RESULTS+1

      133     1072        /**/
      134     1073    1        CALL M$TRMPRG(TRMPRG_FPT);

   1073  5 000004   000206 630400 3                  EPPR0   TRMPRG_FPT
         5 000005   160004 713400                    CLIMB   57348
         5 000006   400400 401760                    pmme    nvectors=2

PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:17   
      135     1074                                                /* Command level?                     */
      136     1075    2        IF FLAGS.INPUT = '1'B THEN DO ;

   1075  5 000007   000000 236000 xsym               LDQ     FLAGS
         5 000010   000100 316007                    CANQ    64,DL
         5 000011   000017 600000 5                  TZE     s:1080

      137     1076    2           CALL M$WRITE(WRITE_CR) ALTRET(CR_ERR) ;

   1076  5 000012   000164 630400 3                  EPPR0   WRITE_CR
         5 000013   440001 713400                    CLIMB   alt,write
         5 000014   401400 401760                    pmme    nvectors=4
         5 000015   000016 702000 5                  TSX2    CR_ERR

      138     1077    2   CR_ERR:
      139     1078    2           RETURN ;

   1078  5 000016   000000 702200 xent  CR_ERR       TSX2  ! X66_AARET

      140     1079    2           END ;
      141     1080    1        IF CMD_CODE = HELPCMD

   1080  5 000017   000000 235000 xsym               LDA     CMD_CODE
         5 000020   000001 115007                    CMPA    1,DL
         5 000021   000023 601000 5                  TNZ     s:1087

      142     1081    1        THEN
      143     1082                                                    /*
      144     1083                                                      Can not continue HELP.
      145     1084                                                    */
      146     1085    1           RETURN ;

   1085  5 000022   000000 702200 xent               TSX2  ! X66_AARET

      147     1086                                                /* Not first BREAK?                   */
      148     1087    1        IF FLAGS.BREAK = '1'B THEN RETURN ;

PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:18   
   1087  5 000023   000200 316007                    CANQ    128,DL
         5 000024   000026 600000 5                  TZE     s:1088

   1087  5 000025   000000 702200 xent               TSX2  ! X66_AARET

      149     1088    1        FLAGS.BREAK = '1'B ;

   1088  5 000026   000200 236007                    LDQ     128,DL
         5 000027   000000 256000 xsym               ORSQ    FLAGS

      150     1089        /**/
      151     1090    1        TEMP_CMD_BUF= ' ';                 /* CLEAR OLD CMD */

   1090  5 000030   040000 100400                    MLR     fill='040'O
         5 000031   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 000032   000000 000400 xsym               ADSC9   TEMP_CMD_BUF             cn=0,n=256

      152     1091        /**/
      153     1092        /**/
      154     1093    2        IF (FLAGS.INTRA_CMD)OR(CMD_CODE=MERGECMD)OR(CMD_CODE=COPYCMD) THEN DO;

   1093  5 000033   000000 236000 xsym               LDQ     FLAGS
         5 000034   200000 316003                    CANQ    65536,DU
         5 000035   000042 601000 5                  TNZ     s:1094
         5 000036   000032 115007                    CMPA    26,DL
         5 000037   000042 600000 5                  TZE     s:1094
         5 000040   000030 115007                    CMPA    24,DL
         5 000041   000123 601000 5                  TNZ     BREAK1

      155     1094    2           CALL VEX$SEQNUM_TEXT(LAST_KEY,SUB_BUF_1);

   1094  5 000042   000000 630400 6                  EPPR0   0
         5 000043   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000044   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         5 000045   000000 011000                    NOP     0

      156     1095    2           IF FLAGS.INTRA_CMD
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:19   

   1095  5 000046   000000 236000 xsym               LDQ     FLAGS
         5 000047   200000 316003                    CANQ    65536,DU
         5 000050   000056 600000 5                  TZE     s:1099

      157     1096    2           THEN
      158     1097    2              CALL VEX$ERROR(E$E_INTRABREAK,1); /* SEE WHAT HE WANTS TO DO    */

   1097  5 000051   000003 630400 6                  EPPR0   3
         5 000052   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000053   000000 701000 xent               TSX1    VEX$ERROR
         5 000054   000000 011000                    NOP     0
         5 000055   000062 710000 5                  TRA     s:1100

      159     1098    2           ELSE
      160     1099    2              CALL VEX$ERROR(E$E_FILEBREAK,1); /* SEE WHAT HE WANTS TO DO     */

   1099  5 000056   000006 630400 6                  EPPR0   6
         5 000057   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000060   000000 701000 xent               TSX1    VEX$ERROR
         5 000061   000000 011000                    NOP     0

      161     1100    2           TEMP_CMD_SIZE = 0 ;

   1100  5 000062   000000 450000 xsym               STZ     TEMP_CMD_SIZE

      162     1101    2           CALL M$WRITE(WRITE_UC) ALTRET(BREAKOUT);

   1101  5 000063   000150 630400 3                  EPPR0   WRITE_UC
         5 000064   440001 713400                    CLIMB   alt,write
         5 000065   401400 401760                    pmme    nvectors=4
         5 000066   000232 702000 5                  TSX2    BREAKOUT

      163     1102    2           CALL VEX$SET_PROMPT(PR_1AST);

   1102  5 000067   000004 630400 6                  EPPR0   4
         5 000070   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:20   
         5 000071   000000 701000 xent               TSX1    VEX$SET_PROMPT
         5 000072   000000 011000                    NOP     0

      164     1103    2           CALL M$READ (READ_UC) ALTRET (BREAKOUT);

   1103  5 000073   000132 630400 3                  EPPR0   READ_UC
         5 000074   440000 713400                    CLIMB   alt,read
         5 000075   401400 401760                    pmme    nvectors=4
         5 000076   000232 702000 5                  TSX2    BREAKOUT

      165     1104    2           TEMP_CMD_SIZE = M$UC$ -> F$DCB.ARS;

   1104  5 000077   000000 470400 xsym               LDP0    M$UC$
         5 000100   000000 235100                    LDA     0,,PR0
         5 000101   000000 755000 xsym               STA     TEMP_CMD_SIZE

      166     1105    2           IF ((TEMP_CMD_SIZE=1)AND((SUBSTR(TEMP_CMD_BUF,0,1)='C')OR

   1105  5 000102   000001 115007                    CMPA    1,DL
         5 000103   000232 601000 5                  TNZ     BREAKOUT
         5 000104   000000 236000 xsym               LDQ     TEMP_CMD_BUF
         5 000105   777000 376003                    ANQ     -512,DU
         5 000106   103000 116003                    CMPQ    34304,DU
         5 000107   000114 600000 5                  TZE     s:1107
         5 000110   000000 236000 xsym               LDQ     TEMP_CMD_BUF
         5 000111   777000 376003                    ANQ     -512,DU
         5 000112   143000 116003                    CMPQ    50688,DU
         5 000113   000232 601000 5                  TNZ     BREAKOUT

      167     1106    3              (SUBSTR(TEMP_CMD_BUF,0,1)='c'))) THEN DO ;

      168     1107    3              FLAGS.BREAK = '0'B ;

   1107  5 000114   000010 236000 6                  LDQ     8
         5 000115   000000 356000 xsym               ANSQ    FLAGS

      169     1108    3              CALL VEX$SET_PROMPT(PR_SEQNUM);
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:21   

   1108  5 000116   000011 630400 6                  EPPR0   9
         5 000117   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000120   000000 701000 xent               TSX1    VEX$SET_PROMPT
         5 000121   000000 011000                    NOP     0

      170     1109    3              RETURN;

   1109  5 000122   000000 702200 xent               TSX2  ! X66_AARET

      171     1110    3              END;
      172     1111    2           END;
      173     1112        /**/
      174     1113        /*E*     ERROR:    VEE-E$E_INTRABREAK-0
      175     1114                 MESSAGE:  Intra record command interrupt at %U1
      176     1115                 DESCRIPTION:   USER HIT BREAK DURRING INTRARECORD COMMAND - SEE
      177     1116                           WHAT HE WANTS TO DO NOW       */
      178     1117        /**/
      179     1118        /*E*     ERROR:    VEE-E$E_FILEBREAK-0
      180     1119                 MESSAGE:  File command interrupt at %U1
      181     1120                 DESCRIPTION:   USER HIT BREAK DURRING FILE COMMAND - SEE
      182     1121                           WHAT HE WANTS TO DO NOW       */
      183     1122        /**/
      184     1123    2        ELSE DO;

      185     1124    2   BREAK1:
      186     1125    2           TEMP_CMD_SIZE = 0 ;

   1125  5 000123   000000 450000 xsym  BREAK1       STZ     TEMP_CMD_SIZE

      187     1126    2           CALL M$WRITE(WRITE_UC) ALTRET(BREAKOUT);

   1126  5 000124   000150 630400 3                  EPPR0   WRITE_UC
         5 000125   440001 713400                    CLIMB   alt,write
         5 000126   401400 401760                    pmme    nvectors=4
         5 000127   000232 702000 5                  TSX2    BREAKOUT

PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:22   
      188     1127    2           CALL VEX$SET_PROMPT(PR_1AST);

   1127  5 000130   000004 630400 6                  EPPR0   4
         5 000131   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000132   000000 701000 xent               TSX1    VEX$SET_PROMPT
         5 000133   000000 011000                    NOP     0

      189     1128    2           CALL M$READ (READ_UC) ALTRET (BREAKOUT);

   1128  5 000134   000132 630400 3                  EPPR0   READ_UC
         5 000135   440000 713400                    CLIMB   alt,read
         5 000136   401400 401760                    pmme    nvectors=4
         5 000137   000232 702000 5                  TSX2    BREAKOUT

      190     1129    2           TEMP_CMD_SIZE = M$UC$ -> F$DCB.ARS;

   1129  5 000140   000000 470400 xsym               LDP0    M$UC$
         5 000141   000000 235100                    LDA     0,,PR0
         5 000142   000000 755000 xsym               STA     TEMP_CMD_SIZE

      191     1130    2           IF ((TEMP_CMD_SIZE=1)AND((SUBSTR(TEMP_CMD_BUF,0,1)='C')OR

   1130  5 000143   000001 115007                    CMPA    1,DL
         5 000144   000232 601000 5                  TNZ     BREAKOUT
         5 000145   000000 236000 xsym               LDQ     TEMP_CMD_BUF
         5 000146   777000 376003                    ANQ     -512,DU
         5 000147   103000 116003                    CMPQ    34304,DU
         5 000150   000155 600000 5                  TZE     s:1132
         5 000151   000000 236000 xsym               LDQ     TEMP_CMD_BUF
         5 000152   777000 376003                    ANQ     -512,DU
         5 000153   143000 116003                    CMPQ    50688,DU
         5 000154   000232 601000 5                  TNZ     BREAKOUT

      192     1131    3              (SUBSTR(TEMP_CMD_BUF,0,1)='c'))) THEN DO;

      193     1132    3              IF (CMD_CODE = BUILDCMD)OR

PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:23   
   1132  5 000155   000000 236000 xsym               LDQ     CMD_CODE
         5 000156   000027 116007                    CMPQ    23,DL
         5 000157   000172 600000 5                  TZE     s:1138
         5 000160   000046 116007                    CMPQ    38,DL
         5 000161   000172 600000 5                  TZE     s:1138
         5 000162   000047 116007                    CMPQ    39,DL
         5 000163   000172 600000 5                  TZE     s:1138
         5 000164   000051 116007                    CMPQ    41,DL
         5 000165   000172 600000 5                  TZE     s:1138
         5 000166   000052 116007                    CMPQ    42,DL
         5 000167   000172 600000 5                  TZE     s:1138
         5 000170   000053 116007                    CMPQ    43,DL
         5 000171   000202 601000 5                  TNZ     s:1141

      194     1133    3                 (CMD_CODE = INCMD)OR
      195     1134    3                 (CMD_CODE = IPCMD)OR
      196     1135    3                 (CMD_CODE = IACMD)OR
      197     1136    3                 (CMD_CODE = IBCMD)OR
      198     1137    4                 (CMD_CODE = APCMD) THEN DO;

      199     1138    4                 CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM);

   1138  5 000172   000012 630400 6                  EPPR0   10
         5 000173   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000174   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         5 000175   000000 011000                    NOP     0

      200     1139    4                 CALL VEX$SET_PROMPT(PR_SEQNUM);

   1139  5 000176   000011 630400 6                  EPPR0   9
         5 000177   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000200   000000 701000 xent               TSX1    VEX$SET_PROMPT
         5 000201   000000 011000                    NOP     0

      201     1140    4                 END;

      202     1141    3              IF (CMD_CODE = ISCMD) THEN CALL VEX$SET_PROMPT(PR_PERIOD);
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:24   

   1141  5 000202   000000 235000 xsym               LDA     CMD_CODE
         5 000203   000050 115007                    CMPA    40,DL
         5 000204   000211 601000 5                  TNZ     s:1142

   1141  5 000205   000013 630400 6                  EPPR0   11
         5 000206   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000207   000000 701000 xent               TSX1    VEX$SET_PROMPT
         5 000210   000000 011000                    NOP     0

      203     1142    4              IF CMD_CODE = RRCMD THEN DO ;

   1142  5 000211   000000 235000 xsym               LDA     CMD_CODE
         5 000212   000070 115007                    CMPA    56,DL
         5 000213   000220 601000 5                  TNZ     s:1145

      204     1143    4                 CALL VEX$SET_PROMPT(PR_SEQNUM);

   1143  5 000214   000011 630400 6                  EPPR0   9
         5 000215   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000216   000000 701000 xent               TSX1    VEX$SET_PROMPT
         5 000217   000000 011000                    NOP     0

      205     1144    4                 END ;                     /* THEN DO */

      206     1145    3              FLAGS.BREAK = '0'B ;

   1145  5 000220   000010 236000 6                  LDQ     8
         5 000221   000000 356000 xsym               ANSQ    FLAGS

      207     1146    3              IF CMD_CODE = HELPCMD

   1146  5 000222   000000 235000 xsym               LDA     CMD_CODE
         5 000223   000001 115007                    CMPA    1,DL
         5 000224   000231 601000 5                  TNZ     s:1152

      208     1147    3              THEN
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:25   
      209     1148    4              DO ;                         /* Disallow BREAK during HELP. */

      210     1149    4                 CMD_BUF = ' ' ;

   1149  5 000225   040000 100400                    MLR     fill='040'O
         5 000226   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 000227   000000 000400 xsym               ADSC9   CMD_BUF                  cn=0,n=256

      211     1150    4                 GOTO BREAKOUT ;

   1150  5 000230   000232 710000 5                  TRA     BREAKOUT

      212     1151    4                 END ;                     /* THEN DO */
      213     1152    3              RETURN;

   1152  5 000231   000000 702200 xent               TSX2  ! X66_AARET

      214     1153    3              END;
      215     1154    2           END;
      216     1155        /**/
      217     1156    1   BREAKOUT:
      218     1157    1        CALL M$CLRSTK;

   1157  5 000232   010013 713400       BREAKOUT     CLIMB   4107
         5 000233   000000 401760                    pmme    nvectors=0

      219     1158    1        FLAGS.INTRA_CMD = FALSE;

   1158  5 000234   000014 236000 6                  LDQ     12
         5 000235   000000 356000 xsym               ANSQ    FLAGS

      220     1159    1        FLAGS.STEP_MODE = FALSE;

   1159  5 000236   000015 236000 6                  LDQ     13
         5 000237   000000 356000 xsym               ANSQ    FLAGS

      221     1160    1        FLAGS.IBEX_BUILD = FALSE;
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:26   

   1160  5 000240   000016 236000 6                  LDQ     14
         5 000241   000000 356000 xsym               ANSQ    FLAGS

      222     1161    1        IF (FLAGS.CONSEC_MODE) THEN CALL VEX$READ_RANDOM(Y003); /* POSITION   */

   1161  5 000242   000000 236000 xsym               LDQ     FLAGS
         5 000243   002000 316003                    CANQ    1024,DU
         5 000244   000251 600000 5                  TZE     s:1162

   1161  5 000245   000017 630400 6                  EPPR0   15
         5 000246   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000247   000000 701000 xent               TSX1    VEX$READ_RANDOM
         5 000250   000000 011000                    NOP     0

      223     1162    1        IF (CMD_CODE = COPYCMD)OR(CMD_CODE = MERGECMD) THEN

   1162  5 000251   000000 235000 xsym               LDA     CMD_CODE
         5 000252   000030 115007                    CMPA    24,DL
         5 000253   000256 600000 5                  TZE     s:1163
         5 000254   000032 115007                    CMPA    26,DL
         5 000255   000260 601000 5                  TNZ     s:1164

      224     1163    1           DS_RESULTS.PTR$ = COPYDS_PTR$;

   1163  5 000256   000000 236000 xsym               LDQ     COPYDS_PTR$
         5 000257   000001 756000 4                  STQ     DS_RESULTS+1

      225     1164    1        IF (DS_RESULTS.PTR$ ~= ADDR(NIL)) THEN CALL M$FDS(DS_FPT);

   1164  5 000260   000001 236000 4                  LDQ     DS_RESULTS+1
         5 000261   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000262   000266 600000 5                  TZE     s:1165

   1164  5 000263   000200 630400 3                  EPPR0   DS_FPT
         5 000264   030002 713400                    CLIMB   fds
         5 000265   400400 401760                    pmme    nvectors=2
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:27   

      226     1165    2        DO CASE (CMD_CODE);

   1165  5 000266   000000 235000 xsym               LDA     CMD_CODE
         5 000267   000026 135007                    SBLA    22,DL
         5 000270   000034 115007                    CMPA    28,DL
         5 000271   000273 602005 5                  TNC     s:1165+5,AL
         5 000272   000341 710000 5                  TRA     s:1175
         5 000273   000327 710000 5                  TRA     s:1167
         5 000274   000341 710000 5                  TRA     s:1175
         5 000275   000327 710000 5                  TRA     s:1167
         5 000276   000327 710000 5                  TRA     s:1167
         5 000277   000327 710000 5                  TRA     s:1167
         5 000300   000341 710000 5                  TRA     s:1175
         5 000301   000341 710000 5                  TRA     s:1175
         5 000302   000341 710000 5                  TRA     s:1175
         5 000303   000341 710000 5                  TRA     s:1175
         5 000304   000341 710000 5                  TRA     s:1175
         5 000305   000341 710000 5                  TRA     s:1175
         5 000306   000341 710000 5                  TRA     s:1175
         5 000307   000341 710000 5                  TRA     s:1175
         5 000310   000341 710000 5                  TRA     s:1175
         5 000311   000341 710000 5                  TRA     s:1175
         5 000312   000341 710000 5                  TRA     s:1175
         5 000313   000341 710000 5                  TRA     s:1175
         5 000314   000341 710000 5                  TRA     s:1175
         5 000315   000341 710000 5                  TRA     s:1175
         5 000316   000341 710000 5                  TRA     s:1175
         5 000317   000341 710000 5                  TRA     s:1175
         5 000320   000341 710000 5                  TRA     s:1175
         5 000321   000341 710000 5                  TRA     s:1175
         5 000322   000341 710000 5                  TRA     s:1175
         5 000323   000341 710000 5                  TRA     s:1175
         5 000324   000341 710000 5                  TRA     s:1175
         5 000325   000341 710000 5                  TRA     s:1175
         5 000326   000327 710000 5                  TRA     s:1167

PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:28   
      227     1166    2        CASE (EDITCMD,COPYCMD,DELETECMD,MERGECMD,EXAMINECMD);

      228     1167    2           CALL M$CLOSE(CLOSE_FPT);

   1167  5 000327   000000 630400 3                  EPPR0   CLOSE_FPT
         5 000330   050001 713400                    CLIMB   close
         5 000331   406000 401760                    pmme    nvectors=13

      229     1168    2           FLAGS.EDIT_MODE = FALSE;

   1168  5 000332   000031 236000 xsym               LDQ     B_VECTNIL+25
         5 000333   000000 356000 xsym               ANSQ    FLAGS

      230     1169    2           FLAGS.CONSEC_MODE = FALSE;

   1169  5 000334   000020 236000 6                  LDQ     16
         5 000335   000000 356000 xsym               ANSQ    FLAGS

      231     1170    2           FLAGS.REL_MODE = FALSE;

   1170  5 000336   000021 236000 6                  LDQ     17
         5 000337   000000 356000 xsym               ANSQ    FLAGS
         5 000340   000341 710000 5                  TRA     s:1175

      232     1171
      233     1172    2        CASE (ELSE);

      234     1173    2           ;
      235     1174    2        END;                               /* DO CASE ON CMD_CODE */

      236     1175    1        IF (CMD_CODE = MERGECMD) THEN CALL M$CLOSE(CLOSE2_FPT);

   1175  5 000341   000000 235000 xsym               LDA     CMD_CODE
         5 000342   000032 115007                    CMPA    26,DL
         5 000343   000347 601000 5                  TNZ     s:1176

   1175  5 000344   000036 630400 3                  EPPR0   CLOSE2_FPT
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:29   
         5 000345   050001 713400                    CLIMB   close
         5 000346   406000 401760                    pmme    nvectors=13

      237     1176    1        IF (CMD_CODE = COPYCMD) THEN CALL M$CLOSE(CLOSE2_REL);

   1176  5 000347   000000 235000 xsym               LDA     CMD_CODE
         5 000350   000030 115007                    CMPA    24,DL
         5 000351   000355 601000 5                  TNZ     s:1177

   1176  5 000352   000074 630400 3                  EPPR0   CLOSE2_REL
         5 000353   050001 713400                    CLIMB   close
         5 000354   406000 401760                    pmme    nvectors=13

      238     1177    1        IF IN_DCBNUM ~= SI_DCBNUM

   1177  5 000355   000000 236000 xsym               LDQ     IN_DCBNUM
         5 000356   000000 116000 xsym               CMPQ    SI_DCBNUM
         5 000357   000376 600000 5                  TZE     s:1189

      239     1178    1        THEN
      240     1179    2        DO ;                               /* READ command in progress. */

      241     1180    2           CLOSE_SIREAD_FPT.V.DCB# = IN_DCBNUM ;

   1180  5 000360   000000 620006                    EAX0    0,QL
         5 000361   000032 740000 xsym               STX0    CLOSE_SIREAD_FPT+26

      242     1181    2           CALL M$CLOSE(CLOSE_SIREAD_FPT) ALTRET(CLOSE_SIREAD_ERR) ;

   1181  5 000362   000000 630400 xsym               EPPR0   CLOSE_SIREAD_FPT
         5 000363   450001 713400                    CLIMB   alt,close
         5 000364   406000 401760                    pmme    nvectors=13
         5 000365   000366 702000 5                  TSX2    CLOSE_SIREAD_ERR

      243     1182
      244     1183    2   CLOSE_SIREAD_ERR:
      245     1184    2           RELDCB_FPT.V.DCB# = IN_DCBNUM ;
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:30   

   1184  5 000366   000000 720000 xsym  CLOSE_SIREA* LXL0    IN_DCBNUM
         5 000367   000004 740000 4                  STX0    RELDCB_FPT+2

      246     1185    2           CALL M$RELDCB(RELDCB_FPT) ALTRET(RELDCB_ERR) ;

   1185  5 000370   000002 630400 4                  EPPR0   RELDCB_FPT
         5 000371   460003 713400                    CLIMB   alt,+24579
         5 000372   400000 401760                    pmme    nvectors=1
         5 000373   000374 702000 5                  TSX2    RELDCB_ERR

      247     1186    2   RELDCB_ERR:
      248     1187    2           IN_DCBNUM = SI_DCBNUM ;

   1187  5 000374   000000 235000 xsym  RELDCB_ERR   LDA     SI_DCBNUM
         5 000375   000000 755000 xsym               STA     IN_DCBNUM

      249     1188    2           END ;                           /* THEN DO */

      250     1189    1        IF (CMD_CODE = BUILDCMD) OR

   1189  5 000376   000000 235000 xsym               LDA     CMD_CODE
         5 000377   000027 115007                    CMPA    23,DL
         5 000400   000413 600000 5                  TZE     s:1195
         5 000401   000046 115007                    CMPA    38,DL
         5 000402   000413 600000 5                  TZE     s:1195
         5 000403   000047 115007                    CMPA    39,DL
         5 000404   000413 600000 5                  TZE     s:1195
         5 000405   000051 115007                    CMPA    41,DL
         5 000406   000413 600000 5                  TZE     s:1195
         5 000407   000052 115007                    CMPA    42,DL
         5 000410   000413 600000 5                  TZE     s:1195
         5 000411   000050 115007                    CMPA    40,DL
         5 000412   000415 601000 5                  TNZ     s:1196

      251     1190    1           (CMD_CODE = INCMD) OR
      252     1191    1           (CMD_CODE = IPCMD) OR
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:31   
      253     1192    1           (CMD_CODE = IACMD) OR
      254     1193    1           (CMD_CODE = IBCMD) OR
      255     1194    1           (CMD_CODE = ISCMD) THEN
      256     1195    1           HI_SEQNUM = EXEC_SEQNUM ;

   1195  5 000413   000000 236000 xsym               LDQ     EXEC_SEQNUM
         5 000414   000000 756000 xsym               STQ     HI_SEQNUM

      257     1196    1        IF CMD_CODE = APCMD

   1196  5 000415   000053 115007                    CMPA    43,DL
         5 000416   000435 601000 5                  TNZ     s:1213

      258     1197    1        THEN
      259     1198    2        DO ;

      260     1199                                                    /*
      261     1200                                                      Need to get the key of the last
      262     1201                                                      record we wrote.
      263     1202                                                    */
      264     1203    2           PREC_FPT.KEY_ = VECTOR (EXEC_SEQNUM) ;

   1203  5 000417   000022 237000 6                  LDAQ    18
         5 000420   000010 757000 4                  STAQ    PREC_FPT+2

      265     1204    2           PREC_FPT.V.N# = -1 ;

   1204  5 000421   000001 335007                    LCA     1,DL
         5 000422   000015 755000 4                  STA     PREC_FPT+7

      266     1205    2           CALL M$PRECORD (PREC_FPT)

   1205  5 000423   000006 630400 4                  EPPR0   PREC_FPT
         5 000424   440003 713400                    CLIMB   alt,+16387
         5 000425   401000 401760                    pmme    nvectors=3
         5 000426   000430 702000 5                  TSX2    s:1208
         5 000427   000432 710000 5                  TRA     s:1210
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:32   

      267     1206    2           WHENALTRETURN
      268     1207    3           DO ;

      269     1208    3              EXEC_SEQNUM = Y003 ;

   1208  5 000430   000000 235000 xsym               LDA     Y003
         5 000431   000000 755000 xsym               STA     EXEC_SEQNUM

      270     1209    3              END ;                        /* Whenaltreturn */

      271     1210    2           HI_SEQNUM = EXEC_SEQNUM ;

   1210  5 000432   000000 235000 xsym               LDA     EXEC_SEQNUM
         5 000433   000000 755000 xsym               STA     HI_SEQNUM

      272     1211    2           LO_SEQNUM = EXEC_SEQNUM ;

   1211  5 000434   000000 755000 xsym               STA     LO_SEQNUM

      273     1212    2           END ;

      274     1213    1        FLAGS.BREAK = '0'B ;

   1213  5 000435   000010 236000 6                  LDQ     8
         5 000436   000000 356000 xsym               ANSQ    FLAGS

      275     1214    1        BREAK_ARS = TEMP_CMD_SIZE ;

   1214  5 000437   000000 235000 xsym               LDA     TEMP_CMD_SIZE
         5 000440   000000 755000 xsym               STA     BREAK_ARS

      276     1215    1        CMD_SIZE = TEMP_CMD_SIZE ;

   1215  5 000441   000000 755000 xsym               STA     CMD_SIZE

      277     1216    1        CMD_BUF = TEMP_CMD_BUF ;
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:33   

   1216  5 000442   040000 100400                    MLR     fill='040'O
         5 000443   000000 000400 xsym               ADSC9   TEMP_CMD_BUF             cn=0,n=256
         5 000444   000000 000400 xsym               ADSC9   CMD_BUF                  cn=0,n=256

      278     1217    1        UNWIND TO REMEM_CMD_READ;          /* RESTART                            */

   1217  5 000445   000000 237200 xsym               LDAQ  ! REMEM_CMD_READ
         5 000446   000000 700200 xent               TSX0  ! X66_AAUNWIND
         5 000447   000000 000200                    ZERO    0,128

      279     1218        /**/
      280     1219    1   VEX$BREAKMK: ENTRY ASYNC;

   1219  5 000450   000000 700200 xent  VEX$BREAKMK  TSX0  ! X66_AAUTO
         5 000451   000010 000000                    ZERO    8,0

      281     1220        /**/
      282     1221    1        DS_RESULTS.PTR$ = MK_BASE$;

   1221  5 000452   000000 236000 xsym               LDQ     MK_BASE$
         5 000453   000001 756000 4                  STQ     DS_RESULTS+1

      283     1222        /**/
      284     1223    2        IF (I <= MKCOUNTMAX) THEN DO;

   1223  5 000454   000000 235000 xsym               LDA     I
         5 000455   000144 115007                    CMPA    100,DL
         5 000456   000477 603000 5                  TRC     s:1229

      285     1224    2           CALL VEX$SEQNUM_TEXT(MK_BASE$ -> MK$RECS.KEY(I),SUB_BUF_1);

   1224  5 000457   000001 236000 6                  LDQ     1
         5 000460   200005 756100                    STQ     5,,AUTO
         5 000461   000000 236000 xsym               LDQ     I
         5 000462   000022 736000                    QLS     18
         5 000463   000113 036003                    ADLQ    75,DU
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:34   
         5 000464   000000 036000 xsym               ADLQ    MK_BASE$
         5 000465   200004 756100                    STQ     4,,AUTO
         5 000466   200004 630500                    EPPR0   4,,AUTO
         5 000467   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000470   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         5 000471   000000 011000                    NOP     0

      286     1225    2           CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM,SUB_BUF_2);

   1225  5 000472   000024 630400 6                  EPPR0   20
         5 000473   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000474   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         5 000475   000000 011000                    NOP     0

      287     1226    2           END;

   1226  5 000476   000516 710000 5                  TRA     s:1233

      288     1227        /**/
      289     1228    2        ELSE DO;                           /* IN READ TO DATA SEG LOOP           */

      290     1229    2           CALL VEX$SEQNUM_TEXT(SAVE_KEY,SUB_BUF_1);

   1229  5 000477   000026 630400 6                  EPPR0   22
         5 000500   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000501   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         5 000502   000000 011000                    NOP     0

      291     1230    2           CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM-INCR,SUB_BUF_2);

   1230  5 000503   000000 236000 xsym               LDQ     EXEC_SEQNUM
         5 000504   000000 136000 xsym               SBLQ    INCR
         5 000505   200004 756100                    STQ     4,,AUTO
         5 000506   000025 236000 6                  LDQ     21
         5 000507   200007 756100                    STQ     7,,AUTO
         5 000510   200004 630500                    EPPR0   4,,AUTO
         5 000511   200006 450500                    STP0    6,,AUTO
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:35   
         5 000512   200006 630500                    EPPR0   6,,AUTO
         5 000513   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000514   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         5 000515   000000 011000                    NOP     0

      292     1231    2           END;

      293     1232        /**/
      294     1233    1        CALL VEX$ERROR(E$E_MKBREAK,2);

   1233  5 000516   000031 630400 6                  EPPR0   25
         5 000517   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000520   000000 701000 xent               TSX1    VEX$ERROR
         5 000521   000000 011000                    NOP     0

      295     1234        /*E*     ERROR:    VEE-E$E_MKBREAK-0
      296     1235                 MESSAGE:  Command interrupt at %U1 (%U2)
      297     1236                 DESCRIPTION: BREAK IN MK,MD COMMAND     */
      298     1237        /**/
      299     1238    2        IF (CMD_CODE = MDCMD)OR(CMD_CODE = MDPCMD) THEN DO;

   1238  5 000522   000000 235000 xsym               LDA     CMD_CODE
         5 000523   000041 115007                    CMPA    33,DL
         5 000524   000527 600000 5                  TZE     s:1239
         5 000525   000043 115007                    CMPA    35,DL
         5 000526   000537 601000 5                  TNZ     s:1246

      300     1239    2           CALL VEX$SEQNUM_TEXT(SAVE_KEY,SUB_BUF_3);

   1239  5 000527   000033 630400 6                  EPPR0   27
         5 000530   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000531   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         5 000532   000000 011000                    NOP     0

      301     1240    2           CALL VEX$ERROR(E$E_MDBRKDEL,2);

   1240  5 000533   000036 630400 6                  EPPR0   30
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:36   
         5 000534   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000535   000000 701000 xent               TSX1    VEX$ERROR
         5 000536   000000 011000                    NOP     0

      302     1241    2           END;

      303     1242        /*E*     ERROR:    VEE-E$E_MDBRKDEL-0
      304     1243                 MESSAGE:  Break durring MD - last record deleted is %U3
      305     1244                 DESCRIPTION: TELL USER LAST RECORD DELETED        */
      306     1245        /**/
      307     1246    1        GOTO BREAK1;

   1246  5 000537   000123 710000 5                  TRA     BREAK1
      308     1247    1   END;

PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:37   
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VEX$BREAK.
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:38   

 **** Variables and constants ****

  ****  Section 003 RoData VEX$BREAK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   216-0-0/c CHAR(23)    r     1 BRKMSG                    36-0-0/d STRC(1080)  r     1 CLOSE2_FPT
    74-0-0/d STRC(1080)  r     1 CLOSE2_REL                 0-0-0/d STRC(1080)  r     1 CLOSE_FPT
   224-0-0/c CHAR(2)     r     1 CRMSG                    200-0-0/d STRC(216)   r     1 DS_FPT
   132-0-0/d STRC(504)   r     1 READ_UC                  206-0-0/d STRC(288)   r     1 TRMPRG_FPT
   164-0-0/d STRC(432)   r     1 WRITE_CR                 150-0-0/d STRC(432)   r     1 WRITE_UC

  ****  Section 004  Data  VEX$BREAK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(72)    r     1 DS_RESULTS                 6-0-0/d STRC(360)   r     1 PREC_FPT
     2-0-0/d STRC(144)   r     1 RELDCB_FPT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 BREAK_ARS                  0-0-0/d STRC(1080)  r     1 CLOSE_SIREAD_FPT
     0-0-0/c CHAR(256)   r     1 CMD_BUF                    0-0-0/w UBIN        r     1 CMD_CODE
     0-0-0/w UBIN        r     1 CMD_SIZE                   0-0-0/w PTR         r     1 COPYDS_PTR$
     0-0-0/w UBIN        r     1 EXEC_SEQNUM                0-0-0/b STRC(72)    r     1 FLAGS
     0-0-0/w UBIN        r     1 HI_SEQNUM                  0-0-0/w UBIN        r     1 I
     0-0-0/w UBIN        r     1 INCR                       0-0-0/w UBIN        r     1 IN_DCBNUM
     0-0-0/w UBIN        r     1 LAST_KEY                   0-0-0/w UBIN        r     1 LO_SEQNUM
     0-0-0/w PTR         r     1 M$UC$                      0-0-0/w PTR         r     1 MK_BASE$
     0-0-0/d REMB        r     1 REMEM_CMD_READ             0-0-0/w UBIN        r     1 SAVE_KEY
     0-0-0/w UBIN        r     1 SI_DCBNUM                  0-0-0/c STRC(288)   r     1 SUB_BUF_1
     0-0-0/c STRC(288)   r     1 SUB_BUF_2                  0-0-0/c STRC(288)   r     1 SUB_BUF_3
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:39   
     0-0-0/c CHAR(256)   r     1 TEMP_CMD_BUF               0-0-0/w UBIN        r     1 TEMP_CMD_SIZE
     0-0-0/w UBIN        r     1 Y003

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$FILE
     0-0-0N  NULL        r     1 M$FILE2                    0-0-0N  NULL        r     1 M$UC
     0-0-0/w STRC(9900)  r     1 MK$RECS


   Procedure VEX$BREAK requires 352 words for executable code.
   Procedure VEX$BREAK requires 8 words of local(AUTO) storage.

    No errors detected in file VEX$BREAK.:E05TSI    .
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:40   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:41   
          MINI XREF LISTING

BREAK1
      1125**LABEL    1246--GOTO
BREAKOUT
      1157**LABEL    1101--CALLALT  1103--CALLALT  1126--CALLALT  1128--CALLALT  1150--GOTO
BREAK_ARS
       292**DCL      1214<<ASSIGN
BRKMSG
      1054**DCL       899--DCLINIT   900--DCLINIT
CLOSE2_FPT
       732**DCL      1175<>CALL
CLOSE2_FPT.SN_
       732**DCL       732--REDEF
CLOSE2_FPT.UTL_
       733**DCL       733--REDEF
CLOSE2_FPT.V
       737**DCL       732--DCLINIT
CLOSE2_FPT.V.EXPIRE#
       747**DCL       747--REDEF
CLOSE2_FPT.V.TYPE#
       745**DCL       745--REDEF
CLOSE2_FPT.V.XTNSIZE#
       742**DCL       742--REDEF     744--REDEF
CLOSE2_REL
       776**DCL      1176<>CALL
CLOSE2_REL.SN_
       776**DCL       776--REDEF
CLOSE2_REL.UTL_
       777**DCL       777--REDEF
CLOSE2_REL.V
       781**DCL       776--DCLINIT
CLOSE2_REL.V.EXPIRE#
       791**DCL       791--REDEF
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:42   
CLOSE2_REL.V.TYPE#
       789**DCL       789--REDEF
CLOSE2_REL.V.XTNSIZE#
       786**DCL       786--REDEF     788--REDEF
CLOSE_FPT
       688**DCL      1167<>CALL
CLOSE_FPT.SN_
       688**DCL       688--REDEF
CLOSE_FPT.UTL_
       689**DCL       689--REDEF
CLOSE_FPT.V
       693**DCL       688--DCLINIT
CLOSE_FPT.V.EXPIRE#
       703**DCL       703--REDEF
CLOSE_FPT.V.TYPE#
       701**DCL       701--REDEF
CLOSE_FPT.V.XTNSIZE#
       698**DCL       698--REDEF     700--REDEF
CLOSE_SIREAD_ERR
      1184**LABEL    1181--CALLALT
CLOSE_SIREAD_FPT
       818**DCL      1181<>CALL
CLOSE_SIREAD_FPT.SN_
       818**DCL       818--REDEF
CLOSE_SIREAD_FPT.UTL_
       819**DCL       819--REDEF
CLOSE_SIREAD_FPT.V.DCB#
       824**DCL      1180<<ASSIGN
CLOSE_SIREAD_FPT.V.EXPIRE#
       833**DCL       833--REDEF
CLOSE_SIREAD_FPT.V.TYPE#
       831**DCL       831--REDEF
CLOSE_SIREAD_FPT.V.XTNSIZE#
       828**DCL       828--REDEF     830--REDEF
CMD_BUF
       283**DCL      1149<<ASSIGN   1216<<ASSIGN
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:43   
CMD_CODE
       281**DCL      1080>>IF       1093>>IF       1093>>IF       1132>>IF       1132>>IF       1132>>IF
      1132>>IF       1132>>IF       1132>>IF       1141>>IF       1142>>IF       1146>>IF       1162>>IF
      1162>>IF       1165>>DOCASE   1175>>IF       1176>>IF       1189>>IF       1189>>IF       1189>>IF
      1189>>IF       1189>>IF       1189>>IF       1196>>IF       1238>>IF       1238>>IF
CMD_SIZE
       284**DCL      1215<<ASSIGN
COPYDS_PTR$
       291**DCL      1163>>ASSIGN
CRMSG
      1055**DCL       933--DCLINIT   934--DCLINIT
CR_ERR
      1078**LABEL    1076--CALLALT
DS_FPT
       959**DCL      1164<>CALL
DS_FPT.V
       959**DCL       959--DCLINIT
DS_RESULTS
      1005**DCL       959--DCLINIT
DS_RESULTS.PTR$
      1007**DCL      1071<<ASSIGN   1163<<ASSIGN   1164>>IF       1221<<ASSIGN
DS_RESULTS.W2
      1006**DCL      1007--REDEF
EXEC_SEQNUM
       277**DCL      1138<>CALL     1195>>ASSIGN   1203--ASSIGN   1208<<ASSIGN   1210>>ASSIGN   1211>>ASSIGN
      1225<>CALL     1230>>CALL
F$DCB.ACTPOS
       624**DCL       624--REDEF
F$DCB.ARS
       599**DCL       599--REDEF    1104>>ASSIGN   1129>>ASSIGN
F$DCB.ATTR
       617**DCL       618--REDEF
F$DCB.BORROW
       632**DCL       632--REDEF     632--REDEF     632--REDEF
F$DCB.DCBNAME.L
       646**DCL       646--IMP-SIZ
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:44   
F$DCB.EOMCHAR
       603**DCL       603--REDEF
F$DCB.FLDID
       627**DCL       627--REDEF
F$DCB.FORM$
       621**DCL       621--REDEF
F$DCB.FSECT
       637**DCL       637--REDEF
F$DCB.FSN
       614**DCL       614--REDEF     614--REDEF     615--REDEF
F$DCB.HEADER$
       620**DCL       620--REDEF
F$DCB.IXTNSIZE
       618**DCL       618--REDEF
F$DCB.LASTSTA$
       608**DCL       608--REDEF
F$DCB.LVL
       633**DCL       633--REDEF
F$DCB.NAME.C
       608**DCL       608--REDEF
F$DCB.NOEOF
       629**DCL       629--REDEF
F$DCB.NRECS
       619**DCL       619--REDEF
F$DCB.NRECX
       638**DCL       638--REDEF
F$DCB.OHDR
       630**DCL       630--REDEF
F$DCB.ORG
       613**DCL       613--REDEF
F$DCB.PRECNO
       636**DCL       636--REDEF
F$DCB.RCSZ
       641**DCL       641--REDEF
F$DCB.RES
       609**DCL       609--REDEF
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:45   
F$DCB.SETX
       621**DCL       621--REDEF
F$DCB.TAB$
       620**DCL       621--REDEF
F$DCB.TDA
       635**DCL       635--REDEF
F$DCB.WSN
       610**DCL       610--REDEF
FLAGS.BREAK
        51**DCL      1087>>IF       1088<<ASSIGN   1107<<ASSIGN   1145<<ASSIGN   1213<<ASSIGN
FLAGS.CONSEC_MODE
        30**DCL      1161>>IF       1169<<ASSIGN
FLAGS.EDIT_MODE
        23**DCL      1168<<ASSIGN
FLAGS.IBEX_BUILD
        39**DCL      1160<<ASSIGN
FLAGS.INPUT
        52**DCL      1075>>IF
FLAGS.INTRA_CMD
        24**DCL      1093>>IF       1095>>IF       1158<<ASSIGN
FLAGS.REL_MODE
        41**DCL      1170<<ASSIGN
FLAGS.STEP_MODE
        25**DCL      1159<<ASSIGN
HI_SEQNUM
       279**DCL      1195<<ASSIGN   1210<<ASSIGN
I
       275**DCL      1223>>IF       1224>>CALL
INCR
       276**DCL      1230>>CALL
IN_DCBNUM
       297**DCL      1177>>IF       1180>>ASSIGN   1184>>ASSIGN   1187<<ASSIGN
LAST_KEY
       261**DCL      1094<>CALL
LO_SEQNUM
       278**DCL      1211<<ASSIGN
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:46   
M$CLOSE
       526**DCL-ENT  1167--CALL     1175--CALL     1176--CALL     1181--CALL
M$CLRSTK
       584**DCL-ENT  1157--CALL
M$FDS
       561**DCL-ENT  1164--CALL
M$PRECORD
       530**DCL-ENT  1205--CALL
M$READ
       527**DCL-ENT  1103--CALL     1128--CALL
M$RELDCB
       532**DCL-ENT  1185--CALL
M$TRMPRG
       551**DCL-ENT  1073--CALL
M$UC$
       288**DCL      1104>>ASSIGN   1129>>ASSIGN
M$WRITE
       527**DCL-ENT  1076--CALL     1101--CALL     1126--CALL
MK$RECS.KEY
      1064**DCL      1224<>CALL
MK_BASE$
       290**DCL      1221>>ASSIGN   1224>>CALL
PREC_FPT
      1039**DCL      1205<>CALL
PREC_FPT.KEY_
      1039**DCL      1203<<ASSIGN
PREC_FPT.V
      1041**DCL      1039--DCLINIT
PREC_FPT.V.N#
      1045**DCL      1204<<ASSIGN
READ_UC
       856**DCL      1103<>CALL     1128<>CALL
READ_UC.STATION_
       859**DCL       860--REDEF
READ_UC.V
       860**DCL       856--DCLINIT
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:47   
READ_UC.V.DVBYTE.REREAD#
       871**DCL       871--REDEF
READ_UC.V.INDX#
       869**DCL       869--REDEF
RELDCB_ERR
      1187**LABEL    1185--CALLALT
RELDCB_FPT
      1021**DCL      1185<>CALL
RELDCB_FPT.V
      1021**DCL      1021--DCLINIT
RELDCB_FPT.V.DCB#
      1021**DCL      1184<<ASSIGN
REMEM_CMD_READ
       260**DCL      1217>>UNWIND
SAVE_KEY
       280**DCL      1229<>CALL     1239<>CALL
SI_DCBNUM
       298**DCL      1177>>IF       1187>>ASSIGN
SUB_BUF_1
       262**DCL      1094<>CALL     1224<>CALL     1229<>CALL
SUB_BUF_2
       265**DCL      1225<>CALL     1230<>CALL
SUB_BUF_3
       268**DCL      1239<>CALL
TEMP_CMD_BUF
       285**DCL       858--DCLINIT   859--DCLINIT  1090<<ASSIGN   1105>>IF       1105>>IF       1130>>IF
      1130>>IF       1216>>ASSIGN
TEMP_CMD_SIZE
       286**DCL      1100<<ASSIGN   1104<<ASSIGN   1105>>IF       1125<<ASSIGN   1129<<ASSIGN   1130>>IF
      1214>>ASSIGN   1215>>ASSIGN
TRMPRG_FPT
       981**DCL      1073<>CALL
TRMPRG_FPT.V
       988**DCL       983--DCLINIT
TRMPRG_FPT.V.CTLFLG.RSTBRK#
       989**DCL       990--REDEF
PL6.E3A0      #001=VEX$BREAK File=VEX$BREAK.:E05TSI                              WED 07/30/97 07:09 Page:48   
VEX$ERROR
       652**DCL-ENT  1097--CALL     1099--CALL     1233--CALL     1240--CALL
VEX$READ_RANDOM
       654**DCL-ENT  1161--CALL
VEX$SEQNUM_TEXT
       655**DCL-ENT  1094--CALL     1138--CALL     1224--CALL     1225--CALL     1229--CALL     1230--CALL
      1239--CALL
VEX$SET_PROMPT
       656**DCL-ENT  1102--CALL     1108--CALL     1127--CALL     1139--CALL     1141--CALL     1143--CALL
WRITE_CR
       932**DCL      1076<>CALL
WRITE_CR.STATION_
       934**DCL       934--REDEF
WRITE_CR.V
       935**DCL       932--DCLINIT
WRITE_CR.V.DVBYTE.VFC#
       941**DCL       941--REDEF
WRITE_UC
       898**DCL      1101<>CALL     1126<>CALL
WRITE_UC.STATION_
       900**DCL       900--REDEF
WRITE_UC.V
       901**DCL       898--DCLINIT
WRITE_UC.V.DVBYTE.VFC#
       907**DCL       907--REDEF
Y003
       287**DCL      1161<>CALL     1208>>ASSIGN
