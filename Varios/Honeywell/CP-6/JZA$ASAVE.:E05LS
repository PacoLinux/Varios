VERSION E05

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:1    
        1        1        /*M* JZA$ASAVE - The main module for autosave                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8        /*F*    NAME:   JZA$ASAVE
        9        9                PURPOSE: To preserve an active user (not at job step) when
       10       10                        his timesharing communication line fails, allowing
       11       11                        him to re-establish the connection and resume his work
       12       12                        at the point of interruption.
       13       13        */
       14       14        JZA$ASAVE: PROC ALTRET;
       15       15
       16       16        %INCLUDE B$JIT;
       17      619        %INCLUDE B$P;
       18      703        %INCLUDE B$ROSEG;
       19      766        %INCLUDE B$USER;
       20      982        %INCLUDE CP_6_SUBS;
       21     1522        %INCLUDE F$DCB;
       22     1571        %INCLUDE F_FPTCODE_C;
       23     1607        %INCLUDE JZ_DATA_R;
       24     2160        %INCLUDE KI_SUBS_C;
       25     2296        %INCLUDE KV_PRMID_E;
       26     2470        %INCLUDE NK$LDCT;
       27     2572        %INCLUDE NK_LDCT_R;
       28     2581        %INCLUDE NK_VFC_C;
       29     2655        %INCLUDE OC_SUBS_C;
       30     3386        %INCLUDE SS_SCHED_C;
       31     3619
       32     3620                                                /* AUTO Storage                       */
       33     3621    1   DCL BLOCK$ PTR;
       34     3622    1   DCL CUR_TIME UBIN;
       35     3623    1   DCL WAKEUP_TIME UBIN;
       36     3624    1   DCL M$UC$ PTR;
       37     3625    1   DCL PCODE UBIN(9);
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:2    
       38     3626    1   DCL I SBIN;
       39     3627    1   DCL TEMP UBIN;
       40     3628    1   DCL ERR BIT(36);
       41     3629    1   DCL JUNK BIT(18);
       42     3630    1   DCL 1 MSG_INFO,
       43     3631    1         2 FEP UBIN BYTE UNAL,
       44     3632    1         2 PORT UBIN HALF UNAL,
       45     3633    1         2 ACCT CHAR(8) UNAL,
       46     3634    1         2 UNAME CHAR(12) UNAL;
       47     3635
       48     3636                                                /* External Data                      */
       49     3637    1   DCL B$JIT$ PTR SYMREF READONLY;
       50     3638    1   DCL B$M$UC$ PTR SYMREF READONLY;
       51     3639    1   DCL B$ROSEG$ PTR SYMREF READONLY;
       52     3640    1   DCL B$USRT$ PTR SYMREF;
       53     3641    1   DCL B_ZIP UBIN SYMREF;
       54     3642    1   DCL S$CU$ PTR SYMREF;
       55     3643    1   DCL S_CUN UBIN SYMREF;
       56     3644    1   DCL JZ_RETIM UBIN SYMREF;
       57     3645    1   DCL 1 J_LOGON SYMREF READONLY,
       58     3646    1         2 CNT UBIN(9) UNAL,
       59     3647    1         2 NAME CHAR(7) UNAL;
       60     3648
       61     3649                                                /* Internal Data                      */
       62     3650        %KV_PRMID_E;
       63     3806    1   DCL 1 RSTDBPMT CONSTANT DALIGNED,
       64     3807    1         2 T UBIN BYTE UNAL INIT(%KV_PRMID_PROMPT),
       65     3808    1         2 L UBIN BYTE UNAL INIT(4),
       66     3809    1         2 PFB UBIN BYTE UNAL INIT(KIDM_DB),
       67     3810    1         2 DVBYTE UBIN BYTE UNAL INIT(0),
       68     3811    1         2 VFC CHAR(1) UNAL INIT('@'),
       69     3812    1         2 PROMPT CHAR(1) UNAL INIT('>');
       70     3813
       71     3814    1   DCL MSG_LEN(0:3) UBIN BYTE CONSTANT UNAL INIT(1,2,8,12);
       72     3815
       73     3816                                                /* External Procedures                */
       74     3817    1   DCL JZB$GET ENTRY(1) ALTRET;
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:3    
       75     3818    1   DCL JZB$FREE ENTRY(1) ALTRET;
       76     3819    1   DCL JZC$FIND ENTRY(3) ALTRET;
       77     3820    1   DCL JZC$INSERT ENTRY(1);
       78     3821    1   DCL JZC$DELETE ENTRY(1);
       79     3822    1   DCL JLL$LINK ENTRY(6) ALTRET;
       80     3823    1   DCL JLL$ASAVE_RTN ENTRY ALTRET;
       81     3824    1   DCL JSE$ABORTM ENTRY;
       82     3825    1   DCL JSR$RUNDOWN ENTRY ALTRET;
       83     3826    1   DCL FMM$DFLOPN ENTRY;
       84     3827    1   DCL OCI$MK_WR ENTRY(7);
       85     3828    1   DCL SSR$REG ENTRY(3) ALTRET;
       86     3829    1   DCL SSS$CURTIME ENTRY(1) ALTRET;
       87     3830    1   DCL KIA$DCLSTR ENTRY(2) ALTRET;
       88     3831    1   DCL KIA$UCIOD ENTRY(4) ALTRET;
       89     3832    1   DCL KIA$UCIO ENTRY(5) ALTRET;
       90     3833    1   DCL NKU$UCCLS ENTRY ALTRET;
       91     3834    1   DCL UDB$AUTO ENTRY;
       92     3835    1   DCL UDB$PMMEXIT2 ENTRY;
       93     3836    1   DCL UDN$MAGIC ENTRY;
       94     3837
       95     3838                                                /* BASED Structures                   */
       96     3839        %NK$LDCT;
       97     3885    1   DCL 1 CLEAR_VALID BASED,
       98     3886    1         2 *(0:3) UBIN;
       99     3887
      100     3888                                                /* SUBs and EQUs                      */
      101     3889        %SUB    B$P=B$P$->B$P;
      102     3890        %SUB    B$ROSEG = B$ROSEG$->B$ROSEG;
      103     3891        %SUB    B$U=S$CU$->B$U;
      104     3892        %SUB    M$UC=M$UC$->F$DCB;
      105     3893
      106     3894        %EJECT;
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:4    
      107     3895        /* There are several conditions under which we won't autosave a
      108     3896           user: If the system retention time is zero. If the user is at
      109     3897           job step. If the user is in LOGON. If the user is not online.
      110     3898           If the user is not authorized for autosave.  And, finally, if
      111     3899           we are unable to enlarge data segment 2 to make room to save him.
      112     3900
      113     3901           Also, we'll save any user with job files, *G, or *L.
      114     3902        */
      115     3903    1      IF JZ_RETIM = 0 OR B_ZIP ~= 0
      116     3904    1      THEN
      117     3905    1           ALTRETURN;
      118     3906    1      IF (B$JIT.CPFLAGS1 & %CP_JSTEP#)
      119     3907    2      THEN DO;
      120     3908    2           TEMP = 0;
      121     3909    3           DO I = 0 TO 2;
      122     3910    3                TEMP = TEMP + B$JIT.STAR.DA(I);
      123     3911    3                END;
      124     3912    2           IF TEMP = 0 THEN ALTRETURN;
      125     3913    2           END;
      126     3914    1      IF B$P.NAME.TEXT(B$U.ACP) = J_LOGON.NAME THEN ALTRETURN;
      127     3915    1      IF B$JIT.MODE ~= %M_INT# THEN ALTRETURN;
      128     3916    1      IF NOT (B$JIT.PRIV.ACTIVE & %PR_ASAVE#) THEN ALTRETURN;
      129     3917
      130     3918        /* This test handles someone's line going out while he's reconnect-
      131     3919           ing to a previously autosaved image.
      132     3920        */
      133     3921    1      M$UC$ = B$M$UC$;
      134     3922    1      IF M$UC.LDCTX = 0 THEN ALTRETURN;    /* Already autosaved                  */
      135     3923
      136     3924        /* Get a block and record the user's name, account, user number
      137     3925           and terminal information.
      138     3926        */
      139     3927    1      CALL JZB$GET(BLOCK$)
      140     3928    2      WHENALTRETURN DO;
      141     3929    2           ALTRETURN;
      142     3930    2           END;
      143     3931
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:5    
      144     3932    1      BLOCK$->JZ$INFO.UNAME = B$JIT.UNAME;
      145     3933    1      BLOCK$->JZ$INFO.ACCT = B$JIT.ACCN;
      146     3934    1      BLOCK$->JZ$INFO.USER# = S_CUN;
      147     3935
      148     3936    1      ERR = B$JIT.ERR;
      149     3937    1      JUNK = B$JIT.JUNK;    /* Save JUNK in case CP is parsing a link command    */
      150     3938        /* In which case, MLINKIP and RTNXIT are set, and we're in danger of closing
      151     3939           the DCBs twice, since they're also in the image saved for the 2-step link */
      152     3940        /* Restoring JIT.JUNK after restoring the ASAVE image avoids that problem. */
      153     3941
      154     3942        /* Call the JLL$LDLNK routine to write the image so that the memory
      155     3943           assigned to this user may be released.
      156     3944        */
      157     3945    1      IF NOT(B$JIT.CPFLAGS1 & %CP_JSTEP#)
      158     3946    2      THEN DO;
      159     3947    2           B$JIT.JUNK2 = (B$JIT.JUNK2 | %JJ2_ASAVE_LNK#);
      160     3948    2           CALL JLL$LINK
      161     3949    3           WHENRETURN DO;
      162     3950    3                CALL JSR$RUNDOWN;
      163     3951    3                B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_MLINKIP#);
      164     3952    3                END;
      165     3953
      166     3954    3           WHENALTRETURN DO;
      167     3955    3                B$JIT.JUNK2 = (B$JIT.JUNK2 &~ %JJ2_ASAVE_LNK#);
      168     3956    3                END;
      169     3957    2           END;
      170     3958
      171     3959        /* Set up for funny read to front end to get terminal info.
      172     3960        */
      173     3961    1      M$UC.UB$ = ADDR(BLOCK$->JZ$INFO.TERM_INFO);
      174     3962    1      M$UC.UBYTES = LENGTHC(BLOCK$->JZ$INFO.TERM_INFO);
      175     3963    1      M$UC.WAIT = 1;
      176     3964    1      B$JIT.DCB$ = M$UC$;
      177     3965    1      M$UC$->F$DCB.STR = KIDM_CP;
      178     3966    1      PCODE = %KV_PRMID_AUTSAV;
      179     3967
      180     3968    1      CALL KIA$UCIOD(MFC_RSTAT,0,PCODE,0)
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:6    
      181     3969    2      WHENRETURN DO;
      182     3970    2           BLOCK$->JZ$INFO.INFO_SIZE = M$UC.ARS;
      183     3971    2           END;
      184     3972
      185     3973    2      WHENALTRETURN DO;
      186     3974    2           BLOCK$->JZ$INFO.INFO_SIZE = 0;  /* Couldn't read front end            */
      187     3975    2           END;
      188     3976
      189     3977        /* Save parameters for the 'disconnected, suspended' message.
      190     3978        */
      191     3979    1      MSG_INFO.FEP = B$JIT.TSLINE.FEX;
      192     3980    1      MSG_INFO.PORT = B$JIT.TSLINE.PORT;
      193     3981    1      MSG_INFO.ACCT = B$JIT.ACCN;
      194     3982    1      MSG_INFO.UNAME = B$JIT.UNAME;
      195     3983
      196     3984        /* Free up the front end path which this user was hooked up to.
      197     3985        */
      198     3986    1      CALL NKU$UCCLS ALTRET(CONTINUE);
      199     3987
      200     3988        /* Clear out the valid streams */
      201     3989    1      ADDR(B$ROSEG.STREAM_VALID(0))->CLEAR_VALID = '34'O;
      202     3990
      203     3991    1   CONTINUE:
      204     3992
      205     3993        /* Reset the disconnect flags, and set 'suspended user'.
      206     3994        */
      207     3995    1      B$JIT.RNST = B$JIT.RNST & ~(%RS_DROP# | %RS_ABRT#);
      208     3996    1      B$U.FLG.HUP = '0'B;
      209     3997    1      B$U.FLG.SUSP = '1'B;
      210     3998
      211     3999        /* Add this guy to the list of suspended users, output a message
      212     4000           on the OC, and put the user to sleep.
      213     4001           The REG to sleep will altret if the suspended user got 'X-ed'
      214     4002           by the operator - an indication that he is to be gotten rid of.
      215     4003        */
      216     4004    1      CALL JZC$INSERT(BLOCK$);
      217     4005    1      CALL OCI$MK_WR(M_SYS,DISCON_MSG#,4,MSG_LEN,MSG_INFO);
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:7    
      218     4006    1   SLEEP:
      219     4007    1      CALL SSR$REG(%SS_SL,,JZ_RETIM)
      220     4008    2      WHENRETURN DO;
      221     4009    2           CALL SSS$CURTIME(CUR_TIME);
      222     4010    2           WAKEUP_TIME = B$U.MISC;
      223     4011    2           END;
      224     4012
      225     4013    2      WHENALTRETURN DO;
      226     4014    2           WAKEUP_TIME = 0;
      227     4015    2           END;
      228     4016
      229     4017        /* Remove this user's entry from the list of suspended users.
      230     4018        */
      231     4019    1      CALL JZC$DELETE(BLOCK$);
      232     4020    1      B$U.FLG.SUSP = '0'B;                 /* Not a suspended user anymore       */
      233     4021
      234     4022        %EJECT;
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:8    
      235     4023        /*************************************************************
      236     4024         *                                                           *
      237     4025         *                    Reconnected User                       *
      238     4026         *                                                           *
      239     4027         *************************************************************/
      240     4028        /* Now that he's woken up, see if he timed out or is being recon-
      241     4029           nected by computing the difference between the current time and
      242     4030           the time at which he was supposed to time out...
      243     4031        */
      244     4032    1      IF CUR_TIME < WAKEUP_TIME
      245     4033    2      THEN DO;
      246     4034
      247     4035        /* To reconnect, hook this user to the communication path which has
      248     4036           been established to the partially logged-on user who is reconnecting
      249     4037           Handle the timing problem where the new line goes away before we
      250     4038           can hook the woken-up user to it.
      251     4039        */
      252     4040    2           IF NK$LDCT$(BLOCK$->JZ$INFO.LDCT#) = ADDR(NIL)
      253     4041    3           THEN DO;
      254     4042    3                B$U.FLG.SUSP = '1'B;       /* Prepare to put him back to sleep   */
      255     4043    3                CALL JZC$INSERT(BLOCK$);
      256     4044    3                GOTO SLEEP;
      257     4045    3                END;
      258     4046
      259     4047    2           NK$LDCT$(BLOCK$->JZ$INFO.LDCT#)->NK$LDCT.USER =
      260     4048    2             BLOCK$->JZ$INFO.USER#;
      261     4049    2           M$UC.LDCTX = BLOCK$->JZ$INFO.LDCT#;
      262     4050    2           B$JIT.TSLINE = BLOCK$->JZ$INFO.TSLINE#;
      263     4051
      264     4052    2           TEMP = KIDM_CP;
      265     4053    3           DO I=4 TO 15;
      266     4054    3                IF (B$ROSEG.LDEVNAME(I) ~= '    ') AND (B$ROSEG.STREAMID.UC_STR(I) =
              4054                         '1'B)
      267     4055    3                THEN CALL KIA$DCLSTR(TEMP,I);
      268     4056    3                END;
      269     4057
      270     4058        /* If the user image was written to the *N file, restore it now.
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:9    
      271     4059        */
      272     4060    2           IF (B$JIT.JUNK2 & %JJ2_ASAVE_LNK#)
      273     4061    2           THEN CALL JLL$ASAVE_RTN;
      274     4062    2           B$JIT.JUNK = JUNK;
      275     4063
      276     4064        /* Reset all error information.
      277     4065        */
      278     4066    2           B$JIT.ERR = '0'B;
      279     4067    2           B$JIT.USRERR = '0'B;
      280     4068    2           B$JIT.USRRNST = '0'B;
      281     4069
      282     4070        /* Restore terminal information.
      283     4071        */
      284     4072    2           IF BLOCK$->JZ$INFO.INFO_SIZE > 0
      285     4073    3           THEN DO;
      286     4074    3                M$UC.UB$ = ADDR(BLOCK$->JZ$INFO.TERM_INFO);
      287     4075    3                M$UC.UBYTES = BLOCK$->JZ$INFO.INFO_SIZE;
      288     4076    3                M$UC.WAIT = 1;
      289     4077    3                B$JIT.DCB$ = M$UC$;
      290     4078    3                PCODE = ASCBIN(%VFC_SPR);
      291     4079    3                CALL KIA$UCIOD(MFC_WRITE,%DVBYTE_VFC#,PCODE,0) ALTRET(SKIP_IT);
      292     4080    3   SKIP_IT:     END;
      293     4081
      294     4082        /* Restore DELTA's prompt, if there was no saved front end info to
      295     4083           do it for us.
      296     4084        */
      297     4085    3           ELSE DO;
      298     4086    3                B$JIT.DCB$ = M$UC$;
      299     4087    3                M$UC.UB$ = ADDR(RSTDBPMT);
      300     4088    3                M$UC.UBYTES = LENGTHC(RSTDBPMT);
      301     4089    3                CALL KIA$UCIO(MFC_WRITE,%DVBYTE_VFC#,%VFC_SPM,0);
      302     4090    3                END;
      303     4091
      304     4092        /* Shove input tabs from M$UC down to the front end now.
      305     4093        */
      306     4094    2           M$UC.UB$=M$UC.TAB$;
      307     4095    2           M$UC.UBYTES=32;
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:10   
      308     4096                                 /* *** ABOVE SHUDBE SIZEC(VLP_TAB, SLEEZE FOR B03+.*/
      309     4097    2           M$UC.WAIT=1;
      310     4098    2           B$JIT.DCB$=M$UC$;
      311     4099    2           CALL KIA$UCIO(MFC_WRITE,%DVBYTE_VFC#,%VFC_ITB,0);
      312     4100
      313     4101        /* Free this user's autosave block.
      314     4102        */
      315     4103    2           CALL JZB$FREE(BLOCK$);
      316     4104    2           B$U.FLG.STIP = '0'B;            /* Step is no longer in progress      */
      317     4105
      318     4106        /* Pick up the new FEP#, PORT# for our 'reconnected' message.
      319     4107        */
      320     4108    2           MSG_INFO.FEP = B$JIT.TSLINE.FEX;
      321     4109    2           MSG_INFO.PORT = B$JIT.TSLINE.PORT;
      322     4110    2           CALL OCI$MK_WR(M_SYS,RECON_MSG#,4,MSG_LEN,MSG_INFO);
      323     4111
      324     4112    2           IF B$JIT.JUNK & %JJ_BAKIC#
      325     4113    3           THEN DO;
      326     4114    3                CALL UDN$MAGIC;
      327     4115    3                CALL UDB$PMMEXIT2;         /*Entry for CALCOMP                   */
      328     4116    3                END;
      329     4117    2           ELSE CALL UDB$AUTO;
      330     4118    2           END;
      331     4119
      332     4120        %EJECT;
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:11   
      333     4121        /*************************************************************
      334     4122         *                                                           *
      335     4123         *                    Timed Out User                         *
      336     4124         *                                                           *
      337     4125         *************************************************************/
      338     4126        /* Make the timed-out user's M$UC DCB look like device 'NO' so that
      339     4127           any I/O which his exit control routine might attempt will get
      340     4128           swallowed.  Make LDCTX zero so if we ever call NKU$UCCLS or DRQ,
      341     4129           we will screech.
      342     4130        */
      343     4131    2      ELSE DO;                             /* User timed out                     */
      344     4132    2           B$JIT.RNST = (B$JIT.RNST | %RS_DROP#);
      345     4133
      346     4134    2           M$UC.FCD = '0'B;
      347     4135    2           M$UC.ASN = %DEVICE#;
      348     4136    2           M$UC.IASN = 0;
      349     4137    2           M$UC.RES = 'NO';
      350     4138    2           M$UC.WSN = ' ';
      351     4139    2           M$UC.LDCTX = 0;
      352     4140    2           B$JIT.DCB$ = M$UC$;
      353     4141    2           CALL FMM$DFLOPN;
      354     4142
      355     4143    2           IF (B$JIT.JUNK2 & %JJ2_ASAVE_LNK#)
      356     4144    2           THEN CALL JLL$ASAVE_RTN;
      357     4145    2           B$JIT.JUNK = JUNK;
      358     4146
      359     4147    2           CALL JZB$FREE(BLOCK$);
      360     4148    2           B$JIT.ERR = ERR;
      361     4149    2           RETURN;                         /* Resume rundown process             */
      362     4150    2           END;
      363     4151    1   END JZA$ASAVE;

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:12   
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   JZ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JZA$ASAVE.

   Procedure JZA$ASAVE requires 419 words for executable code.
   Procedure JZA$ASAVE requires 24 words of local(AUTO) storage.

    No errors detected in file JZA$ASAVE.:E05TSI    .

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:13   

 Object Unit name= JZA$ASAVE                                  File name= JZA$ASAVE.:E05TOU
 UTS= JUL 29 '97 23:52:01.56 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      6      6  JZA$ASAVE
    1   Proc  even  none   419    643  JZA$ASAVE
    2  RoData even  none    35     43  JZA$ASAVE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        0  JZA$ASAVE
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:14   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 JZB$GET
 yes     yes           Std       0 JSR$RUNDOWN
 yes     yes           Std       3 SSR$REG
 yes     yes           Std       0 JLL$ASAVE_RTN
 yes     yes           Std       5 KIA$UCIO
 yes     yes           Std       1 JZB$FREE
 yes     yes           Std       4 KIA$UCIOD
         yes           Std       0 UDB$PMMEXIT2
 yes     yes           Std       6 JLL$LINK
         yes           Std       1 JZC$INSERT
         yes           Std       7 OCI$MK_WR
         yes           Std       1 JZC$DELETE
         yes           Std       0 UDB$AUTO
 yes     yes           Std       0 NKU$UCCLS
 yes     yes           Std       2 KIA$DCLSTR
         yes           Std       0 UDN$MAGIC
         yes           Std       0 FMM$DFLOPN
 yes     yes           Std       1 SSS$CURTIME
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$P$                                  JZ_PAGE                               N$DCT$$
r    B$JIT$                           r    B$M$UC$                          r    B$ROSEG$
     B_ZIP                                 S$CU$                                 S_CUN
     JZ_RETIM                         r    J_LOGON                               B_VECTNIL
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:15   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:16   


        1        1        /*M* JZA$ASAVE - The main module for autosave                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8        /*F*    NAME:   JZA$ASAVE
        9        9                PURPOSE: To preserve an active user (not at job step) when
       10       10                        his timesharing communication line fails, allowing
       11       11                        him to re-establish the connection and resume his work
       12       12                        at the point of interruption.
       13       13        */
       14       14        JZA$ASAVE: PROC ALTRET;

     14  1 000000   000000 700200 xent  JZA$ASAVE    TSX0  ! X66_AUTO_0
         1 000001   000030 000000                    ZERO    24,0

       15       15
       16       16        %INCLUDE B$JIT;
       17      619        %INCLUDE B$P;
       18      703        %INCLUDE B$ROSEG;
       19      766        %INCLUDE B$USER;
       20      982        %INCLUDE CP_6_SUBS;
       21     1522        %INCLUDE F$DCB;
       22     1571        %INCLUDE F_FPTCODE_C;
       23     1607        %INCLUDE JZ_DATA_R;
       24     2160        %INCLUDE KI_SUBS_C;
       25     2296        %INCLUDE KV_PRMID_E;
       26     2470        %INCLUDE NK$LDCT;
       27     2572        %INCLUDE NK_LDCT_R;
       28     2581        %INCLUDE NK_VFC_C;
       29     2655        %INCLUDE OC_SUBS_C;
       30     3386        %INCLUDE SS_SCHED_C;
       31     3619
       32     3620                                                /* AUTO Storage                       */
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:17   
       33     3621    1   DCL BLOCK$ PTR;
       34     3622    1   DCL CUR_TIME UBIN;
       35     3623    1   DCL WAKEUP_TIME UBIN;
       36     3624    1   DCL M$UC$ PTR;
       37     3625    1   DCL PCODE UBIN(9);
       38     3626    1   DCL I SBIN;
       39     3627    1   DCL TEMP UBIN;
       40     3628    1   DCL ERR BIT(36);
       41     3629    1   DCL JUNK BIT(18);
       42     3630    1   DCL 1 MSG_INFO,
       43     3631    1         2 FEP UBIN BYTE UNAL,
       44     3632    1         2 PORT UBIN HALF UNAL,
       45     3633    1         2 ACCT CHAR(8) UNAL,
       46     3634    1         2 UNAME CHAR(12) UNAL;
       47     3635
       48     3636                                                /* External Data                      */
       49     3637    1   DCL B$JIT$ PTR SYMREF READONLY;
       50     3638    1   DCL B$M$UC$ PTR SYMREF READONLY;
       51     3639    1   DCL B$ROSEG$ PTR SYMREF READONLY;
       52     3640    1   DCL B$USRT$ PTR SYMREF;
       53     3641    1   DCL B_ZIP UBIN SYMREF;
       54     3642    1   DCL S$CU$ PTR SYMREF;
       55     3643    1   DCL S_CUN UBIN SYMREF;
       56     3644    1   DCL JZ_RETIM UBIN SYMREF;
       57     3645    1   DCL 1 J_LOGON SYMREF READONLY,
       58     3646    1         2 CNT UBIN(9) UNAL,
       59     3647    1         2 NAME CHAR(7) UNAL;
       60     3648
       61     3649                                                /* Internal Data                      */
       62     3650        %KV_PRMID_E;
       63     3806    1   DCL 1 RSTDBPMT CONSTANT DALIGNED,
       64     3807    1         2 T UBIN BYTE UNAL INIT(%KV_PRMID_PROMPT),
       65     3808    1         2 L UBIN BYTE UNAL INIT(4),
       66     3809    1         2 PFB UBIN BYTE UNAL INIT(KIDM_DB),
       67     3810    1         2 DVBYTE UBIN BYTE UNAL INIT(0),
       68     3811    1         2 VFC CHAR(1) UNAL INIT('@'),
       69     3812    1         2 PROMPT CHAR(1) UNAL INIT('>');
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:18   
       70     3813
       71     3814    1   DCL MSG_LEN(0:3) UBIN BYTE CONSTANT UNAL INIT(1,2,8,12);
       72     3815
       73     3816                                                /* External Procedures                */
       74     3817    1   DCL JZB$GET ENTRY(1) ALTRET;
       75     3818    1   DCL JZB$FREE ENTRY(1) ALTRET;
       76     3819    1   DCL JZC$FIND ENTRY(3) ALTRET;
       77     3820    1   DCL JZC$INSERT ENTRY(1);
       78     3821    1   DCL JZC$DELETE ENTRY(1);
       79     3822    1   DCL JLL$LINK ENTRY(6) ALTRET;
       80     3823    1   DCL JLL$ASAVE_RTN ENTRY ALTRET;
       81     3824    1   DCL JSE$ABORTM ENTRY;
       82     3825    1   DCL JSR$RUNDOWN ENTRY ALTRET;
       83     3826    1   DCL FMM$DFLOPN ENTRY;
       84     3827    1   DCL OCI$MK_WR ENTRY(7);
       85     3828    1   DCL SSR$REG ENTRY(3) ALTRET;
       86     3829    1   DCL SSS$CURTIME ENTRY(1) ALTRET;
       87     3830    1   DCL KIA$DCLSTR ENTRY(2) ALTRET;
       88     3831    1   DCL KIA$UCIOD ENTRY(4) ALTRET;
       89     3832    1   DCL KIA$UCIO ENTRY(5) ALTRET;
       90     3833    1   DCL NKU$UCCLS ENTRY ALTRET;
       91     3834    1   DCL UDB$AUTO ENTRY;
       92     3835    1   DCL UDB$PMMEXIT2 ENTRY;
       93     3836    1   DCL UDN$MAGIC ENTRY;
       94     3837
       95     3838                                                /* BASED Structures                   */
       96     3839        %NK$LDCT;
       97     3885    1   DCL 1 CLEAR_VALID BASED,
       98     3886    1         2 *(0:3) UBIN;
       99     3887
      100     3888                                                /* SUBs and EQUs                      */
      101     3889        %SUB    B$P=B$P$->B$P;
      102     3890        %SUB    B$ROSEG = B$ROSEG$->B$ROSEG;
      103     3891        %SUB    B$U=S$CU$->B$U;
      104     3892        %SUB    M$UC=M$UC$->F$DCB;
      105     3893
      106     3894        %EJECT;
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:19   
      107     3895        /* There are several conditions under which we won't autosave a
      108     3896           user: If the system retention time is zero. If the user is at
      109     3897           job step. If the user is in LOGON. If the user is not online.
      110     3898           If the user is not authorized for autosave.  And, finally, if
      111     3899           we are unable to enlarge data segment 2 to make room to save him.
      112     3900
      113     3901           Also, we'll save any user with job files, *G, or *L.
      114     3902        */
      115     3903    1      IF JZ_RETIM = 0 OR B_ZIP ~= 0

   3903  1 000002   000000 235000 xsym               LDA     JZ_RETIM
         1 000003   000006 600000 1                  TZE     s:3905
         1 000004   000000 236000 xsym               LDQ     B_ZIP
         1 000005   000007 600000 1                  TZE     s:3906

      116     3904    1      THEN
      117     3905    1           ALTRETURN;

   3905  1 000006   000000 702200 xent               TSX2  ! X66_AALT

      118     3906    1      IF (B$JIT.CPFLAGS1 & %CP_JSTEP#)

   3906  1 000007   000000 470400 xsym               LDP0    B$JIT$
         1 000010   000143 236100                    LDQ     99,,PR0
         1 000011   000003 376000 0                  ANQ     MSG_LEN+1
         1 000012   000031 600000 1                  TZE     s:3914

      119     3907    2      THEN DO;

      120     3908    2           TEMP = 0;

   3908  1 000013   200011 450100                    STZ     TEMP,,AUTO

      121     3909    3           DO I = 0 TO 2;

   3909  1 000014   200010 450100                    STZ     I,,AUTO

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:20   
      122     3910    3                TEMP = TEMP + B$JIT.STAR.DA(I);

   3910  1 000015   000000 470400 xsym               LDP0    B$JIT$
         1 000016   200010 720100                    LXL0    I,,AUTO
         1 000017   200011 236100                    LDQ     TEMP,,AUTO
         1 000020   000222 036110                    ADLQ    146,X0,PR0
         1 000021   200011 756100                    STQ     TEMP,,AUTO

      123     3911    3                END;

   3911  1 000022   200010 054100                    AOS     I,,AUTO
         1 000023   200010 235100                    LDA     I,,AUTO
         1 000024   000002 115007                    CMPA    2,DL
         1 000025   000015 604400 1                  TMOZ    s:3910

      124     3912    2           IF TEMP = 0 THEN ALTRETURN;

   3912  1 000026   000000 116003                    CMPQ    0,DU
         1 000027   000031 601000 1                  TNZ     s:3914

   3912  1 000030   000000 702200 xent               TSX2  ! X66_AALT

      125     3913    2           END;
      126     3914    1      IF B$P.NAME.TEXT(B$U.ACP) = J_LOGON.NAME THEN ALTRETURN;

   3914  1 000031   000000 471400 xsym               LDP1    S$CU$
         1 000032   100006 236100                    LDQ     6,,PR1
         1 000033   000022 772000                    QRL     18
         1 000034   000777 376007                    ANQ     511,DL
         1 000035   000021 402007                    MPY     17,DL
         1 000036   000003 736000                    QLS     3
         1 000037   000000 473400 xsym               LDP3    B$P$
         1 000040   040000 106506                    CMPC    fill='040'O
         1 000041   300032 200037                    ADSC9   26,Q,PR3                 cn=1,n=31
         1 000042   000000 200007 xsym               ADSC9   J_LOGON                  cn=1,n=7
         1 000043   000045 601000 1                  TNZ     s:3915

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:21   
   3914  1 000044   000000 702200 xent               TSX2  ! X66_AALT

      127     3915    1      IF B$JIT.MODE ~= %M_INT# THEN ALTRETURN;

   3915  1 000045   000000 236100                    LDQ     0,,PR0
         1 000046   740000 376003                    ANQ     -16384,DU
         1 000047   140000 116003                    CMPQ    49152,DU
         1 000050   000052 600000 1                  TZE     s:3916

   3915  1 000051   000000 702200 xent               TSX2  ! X66_AALT

      128     3916    1      IF NOT (B$JIT.PRIV.ACTIVE & %PR_ASAVE#) THEN ALTRETURN;

   3916  1 000052   000013 236100                    LDQ     11,,PR0
         1 000053   000017 376000 xsym               ANQ     B_VECTNIL+15
         1 000054   000056 601000 1                  TNZ     s:3921

   3916  1 000055   000000 702200 xent               TSX2  ! X66_AALT

      129     3917
      130     3918        /* This test handles someone's line going out while he's reconnect-
      131     3919           ing to a previously autosaved image.
      132     3920        */
      133     3921    1      M$UC$ = B$M$UC$;

   3921  1 000056   000000 236000 xsym               LDQ     B$M$UC$
         1 000057   200006 756100                    STQ     M$UC$,,AUTO

      134     3922    1      IF M$UC.LDCTX = 0 THEN ALTRETURN;    /* Already autosaved                  */

   3922  1 000060   200006 474500                    LDP4    M$UC$,,AUTO
         1 000061   400051 220100                    LDX0    41,,PR4
         1 000062   000064 601000 1                  TNZ     s:3927

   3922  1 000063   000000 702200 xent               TSX2  ! X66_AALT

      135     3923
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:22   
      136     3924        /* Get a block and record the user's name, account, user number
      137     3925           and terminal information.
      138     3926        */
      139     3927    1      CALL JZB$GET(BLOCK$)

   3927  1 000064   200003 635500                    EPPR5   BLOCK$,,AUTO
         1 000065   200022 455500                    STP5    MSG_INFO+6,,AUTO
         1 000066   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000067   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000070   000000 701000 xent               TSX1    JZB$GET
         1 000071   000073 702000 1                  TSX2    s:3929
         1 000072   000074 710000 1                  TRA     s:3932

      140     3928    2      WHENALTRETURN DO;

      141     3929    2           ALTRETURN;

   3929  1 000073   000000 702200 xent               TSX2  ! X66_AALT

      142     3930    2           END;
      143     3931
      144     3932    1      BLOCK$->JZ$INFO.UNAME = B$JIT.UNAME;

   3932  1 000074   000000 470400 xsym               LDP0    B$JIT$
         1 000075   200003 471500                    LDP1    BLOCK$,,AUTO
         1 000076   040100 100500                    MLR     fill='040'O
         1 000077   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
         1 000100   100005 000014                    ADSC9   5,,PR1                   cn=0,n=12

      145     3933    1      BLOCK$->JZ$INFO.ACCT = B$JIT.ACCN;

   3933  1 000101   040100 100500                    MLR     fill='040'O
         1 000102   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         1 000103   100003 000010                    ADSC9   3,,PR1                   cn=0,n=8

      146     3934    1      BLOCK$->JZ$INFO.USER# = S_CUN;

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:23   
   3934  1 000104   200003 471500                    LDP1    BLOCK$,,AUTO
         1 000105   000000 236000 xsym               LDQ     S_CUN
         1 000106   000033 736000                    QLS     27
         1 000107   100002 552140                    STBQ    2,'40'O,PR1

      147     3935
      148     3936    1      ERR = B$JIT.ERR;

   3936  1 000110   000012 236100                    LDQ     10,,PR0
         1 000111   200012 756100                    STQ     ERR,,AUTO

      149     3937    1      JUNK = B$JIT.JUNK;    /* Save JUNK in case CP is parsing a link command    */

   3937  1 000112   000315 220100                    LDX0    205,,PR0
         1 000113   200013 740100                    STX0    JUNK,,AUTO

      150     3938        /* In which case, MLINKIP and RTNXIT are set, and we're in danger of closing
      151     3939           the DCBs twice, since they're also in the image saved for the 2-step link */
      152     3940        /* Restoring JIT.JUNK after restoring the ASAVE image avoids that problem. */
      153     3941
      154     3942        /* Call the JLL$LDLNK routine to write the image so that the memory
      155     3943           assigned to this user may be released.
      156     3944        */
      157     3945    1      IF NOT(B$JIT.CPFLAGS1 & %CP_JSTEP#)

   3945  1 000114   000143 236100                    LDQ     99,,PR0
         1 000115   000003 376000 0                  ANQ     MSG_LEN+1
         1 000116   000141 601000 1                  TNZ     s:3961

      158     3946    2      THEN DO;

      159     3947    2           B$JIT.JUNK2 = (B$JIT.JUNK2 | %JJ2_ASAVE_LNK#);

   3947  1 000117   000321 221100                    LDX1    209,,PR0
         1 000120   000020 261003                    ORX1    16,DU
         1 000121   000321 741100                    STX1    209,,PR0

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:24   
      160     3948    2           CALL JLL$LINK

   3948  1 000122   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000123   000000 701000 xent               TSX1    JLL$LINK
         1 000124   000135 702000 1                  TSX2    s:3955

      161     3949    3           WHENRETURN DO;

      162     3950    3                CALL JSR$RUNDOWN;

   3950  1 000125   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000126   000000 701000 xent               TSX1    JSR$RUNDOWN
         1 000127   000000 011000                    NOP     0

      163     3951    3                B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_MLINKIP#);

   3951  1 000130   000000 470400 xsym               LDP0    B$JIT$
         1 000131   000315 220100                    LDX0    205,,PR0
         1 000132   777776 360003                    ANX0    -2,DU
         1 000133   000315 740100                    STX0    205,,PR0

      164     3952    3                END;

   3952  1 000134   000141 710000 1                  TRA     s:3961

      165     3953
      166     3954    3           WHENALTRETURN DO;

      167     3955    3                B$JIT.JUNK2 = (B$JIT.JUNK2 &~ %JJ2_ASAVE_LNK#);

   3955  1 000135   000000 470400 xsym               LDP0    B$JIT$
         1 000136   000321 220100                    LDX0    209,,PR0
         1 000137   777757 360003                    ANX0    -17,DU
         1 000140   000321 740100                    STX0    209,,PR0

      168     3956    3                END;

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:25   
      169     3957    2           END;

      170     3958
      171     3959        /* Set up for funny read to front end to get terminal info.
      172     3960        */
      173     3961    1      M$UC.UB$ = ADDR(BLOCK$->JZ$INFO.TERM_INFO);

   3961  1 000141   200003 236100                    LDQ     BLOCK$,,AUTO
         1 000142   000010 036003                    ADLQ    8,DU
         1 000143   200006 471500                    LDP1    M$UC$,,AUTO
         1 000144   100075 756100                    STQ     61,,PR1

      174     3962    1      M$UC.UBYTES = LENGTHC(BLOCK$->JZ$INFO.TERM_INFO);

   3962  1 000145   001000 235007                    LDA     512,DL
         1 000146   100076 755100                    STA     62,,PR1

      175     3963    1      M$UC.WAIT = 1;

   3963  1 000147   000020 236007                    LDQ     16,DL
         1 000150   100064 256100                    ORSQ    52,,PR1

      176     3964    1      B$JIT.DCB$ = M$UC$;

   3964  1 000151   200006 236100                    LDQ     M$UC$,,AUTO
         1 000152   000232 756100                    STQ     154,,PR0

      177     3965    1      M$UC$->F$DCB.STR = KIDM_CP;

   3965  1 000153   000001 236007                    LDQ     1,DL
         1 000154   100077 552104                    STBQ    63,'04'O,PR1

      178     3966    1      PCODE = %KV_PRMID_AUTSAV;

   3966  1 000155   001000 236003                    LDQ     512,DU
         1 000156   200007 756100                    STQ     PCODE,,AUTO

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:26   
      179     3967
      180     3968    1      CALL KIA$UCIOD(MFC_RSTAT,0,PCODE,0)

   3968  1 000157   000000 236000 2                  LDQ     0
         1 000160   200025 756100                    STQ     MSG_INFO+9,,AUTO
         1 000161   200007 633500                    EPPR3   PCODE,,AUTO
         1 000162   200024 453500                    STP3    MSG_INFO+8,,AUTO
         1 000163   000002 237000 2                  LDAQ    2
         1 000164   200022 757100                    STAQ    MSG_INFO+6,,AUTO
         1 000165   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000166   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000167   000000 701000 xent               TSX1    KIA$UCIOD
         1 000170   000176 702000 1                  TSX2    s:3974

      181     3969    2      WHENRETURN DO;

      182     3970    2           BLOCK$->JZ$INFO.INFO_SIZE = M$UC.ARS;

   3970  1 000171   200003 470500                    LDP0    BLOCK$,,AUTO
         1 000172   200006 471500                    LDP1    M$UC$,,AUTO
         1 000173   100000 236100                    LDQ     0,,PR1
         1 000174   000002 552104                    STBQ    2,'04'O,PR0

      183     3971    2           END;

   3971  1 000175   000201 710000 1                  TRA     s:3979

      184     3972
      185     3973    2      WHENALTRETURN DO;

      186     3974    2           BLOCK$->JZ$INFO.INFO_SIZE = 0;  /* Couldn't read front end            */

   3974  1 000176   200003 470500                    LDP0    BLOCK$,,AUTO
         1 000177   000000 236003                    LDQ     0,DU
         1 000200   000002 552104                    STBQ    2,'04'O,PR0

      187     3975    2           END;
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:27   

      188     3976
      189     3977        /* Save parameters for the 'disconnected, suspended' message.
      190     3978        */
      191     3979    1      MSG_INFO.FEP = B$JIT.TSLINE.FEX;

   3979  1 000201   000000 470400 xsym               LDP0    B$JIT$
         1 000202   000337 236100                    LDQ     223,,PR0
         1 000203   200014 552140                    STBQ    MSG_INFO,'40'O,AUTO

      192     3980    1      MSG_INFO.PORT = B$JIT.TSLINE.PORT;

   3980  1 000204   000011 736000                    QLS     9
         1 000205   200014 552130                    STBQ    MSG_INFO,'30'O,AUTO

      193     3981    1      MSG_INFO.ACCT = B$JIT.ACCN;

   3981  1 000206   040100 100500                    MLR     fill='040'O
         1 000207   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         1 000210   200014 600010                    ADSC9   MSG_INFO,,AUTO           cn=3,n=8

      194     3982    1      MSG_INFO.UNAME = B$JIT.UNAME;

   3982  1 000211   040100 100500                    MLR     fill='040'O
         1 000212   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
         1 000213   200016 600014                    ADSC9   MSG_INFO+2,,AUTO         cn=3,n=12

      195     3983
      196     3984        /* Free up the front end path which this user was hooked up to.
      197     3985        */
      198     3986    1      CALL NKU$UCCLS ALTRET(CONTINUE);

   3986  1 000214   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000215   000000 701000 xent               TSX1    NKU$UCCLS
         1 000216   000223 702000 1                  TSX2    CONTINUE

      199     3987
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:28   
      200     3988        /* Clear out the valid streams */
      201     3989    1      ADDR(B$ROSEG.STREAM_VALID(0))->CLEAR_VALID = '34'O;

   3989  1 000217   000000 470400 xsym               LDP0    B$ROSEG$
         1 000220   000100 100400                    MLR     fill='000'O
         1 000221   000004 000001 2                  ADSC9   4                        cn=0,n=1
         1 000222   000117 000020                    ADSC9   79,,PR0                  cn=0,n=16

      202     3990
      203     3991    1   CONTINUE:
      204     3992
      205     3993        /* Reset the disconnect flags, and set 'suspended user'.
      206     3994        */
      207     3995    1      B$JIT.RNST = B$JIT.RNST & ~(%RS_DROP# | %RS_ABRT#);

   3995  1 000223   000000 470400 xsym  CONTINUE     LDP0    B$JIT$
         1 000224   000314 236100                    LDQ     204,,PR0
         1 000225   777000 376003                    ANQ     -512,DU
         1 000226   567000 376003                    ANQ     -70144,DU
         1 000227   000314 552140                    STBQ    204,'40'O,PR0

      208     3996    1      B$U.FLG.HUP = '0'B;

   3996  1 000230   000000 471400 xsym               LDP1    S$CU$
         1 000231   000005 236000 2                  LDQ     5
         1 000232   100000 356100                    ANSQ    0,,PR1

      209     3997    1      B$U.FLG.SUSP = '1'B;

   3997  1 000233   000000 471400 xsym               LDP1    S$CU$
         1 000234   002000 236003                    LDQ     1024,DU
         1 000235   100000 256100                    ORSQ    0,,PR1

      210     3998
      211     3999        /* Add this guy to the list of suspended users, output a message
      212     4000           on the OC, and put the user to sleep.
      213     4001           The REG to sleep will altret if the suspended user got 'X-ed'
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:29   
      214     4002           by the operator - an indication that he is to be gotten rid of.
      215     4003        */
      216     4004    1      CALL JZC$INSERT(BLOCK$);

   4004  1 000236   200003 631500                    EPPR1   BLOCK$,,AUTO
         1 000237   200022 451500                    STP1    MSG_INFO+6,,AUTO
         1 000240   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000241   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000242   000000 701000 xent               TSX1    JZC$INSERT
         1 000243   000000 011000                    NOP     0

      217     4005    1      CALL OCI$MK_WR(M_SYS,DISCON_MSG#,4,MSG_LEN,MSG_INFO);

   4005  1 000244   200014 630500                    EPPR0   MSG_INFO,,AUTO
         1 000245   200026 450500                    STP0    MSG_INFO+10,,AUTO
         1 000246   000010 237000 2                  LDAQ    8
         1 000247   200024 757100                    STAQ    MSG_INFO+8,,AUTO
         1 000250   000012 237000 2                  LDAQ    10
         1 000251   200022 757100                    STAQ    MSG_INFO+6,,AUTO
         1 000252   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000253   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000254   000000 701000 xent               TSX1    OCI$MK_WR
         1 000255   000000 011000                    NOP     0

      218     4006    1   SLEEP:
      219     4007    1      CALL SSR$REG(%SS_SL,,JZ_RETIM)

   4007  1 000256   000015 236000 2     SLEEP        LDQ     13
         1 000257   200024 756100                    STQ     MSG_INFO+8,,AUTO
         1 000260   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000261   000016 235000 2                  LDA     14
         1 000262   200022 757100                    STAQ    MSG_INFO+6,,AUTO
         1 000263   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000264   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000265   000000 701000 xent               TSX1    SSR$REG
         1 000266   000301 702000 1                  TSX2    s:4014

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:30   
      220     4008    2      WHENRETURN DO;

      221     4009    2           CALL SSS$CURTIME(CUR_TIME);

   4009  1 000267   200004 630500                    EPPR0   CUR_TIME,,AUTO
         1 000270   200022 450500                    STP0    MSG_INFO+6,,AUTO
         1 000271   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000272   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000273   000000 701000 xent               TSX1    SSS$CURTIME
         1 000274   000000 011000                    NOP     0

      222     4010    2           WAKEUP_TIME = B$U.MISC;

   4010  1 000275   000000 470400 xsym               LDP0    S$CU$
         1 000276   000017 235100                    LDA     15,,PR0
         1 000277   200005 755100                    STA     WAKEUP_TIME,,AUTO

      223     4011    2           END;

   4011  1 000300   000302 710000 1                  TRA     s:4019

      224     4012
      225     4013    2      WHENALTRETURN DO;

      226     4014    2           WAKEUP_TIME = 0;

   4014  1 000301   200005 450100                    STZ     WAKEUP_TIME,,AUTO

      227     4015    2           END;

      228     4016
      229     4017        /* Remove this user's entry from the list of suspended users.
      230     4018        */
      231     4019    1      CALL JZC$DELETE(BLOCK$);

   4019  1 000302   200003 630500                    EPPR0   BLOCK$,,AUTO
         1 000303   200022 450500                    STP0    MSG_INFO+6,,AUTO
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:31   
         1 000304   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000305   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000306   000000 701000 xent               TSX1    JZC$DELETE
         1 000307   000000 011000                    NOP     0

      232     4020    1      B$U.FLG.SUSP = '0'B;                 /* Not a suspended user anymore       */

   4020  1 000310   000000 470400 xsym               LDP0    S$CU$
         1 000311   000017 236000 2                  LDQ     15
         1 000312   000000 356100                    ANSQ    0,,PR0

      233     4021
      234     4022        %EJECT;
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:32   
      235     4023        /*************************************************************
      236     4024         *                                                           *
      237     4025         *                    Reconnected User                       *
      238     4026         *                                                           *
      239     4027         *************************************************************/
      240     4028        /* Now that he's woken up, see if he timed out or is being recon-
      241     4029           nected by computing the difference between the current time and
      242     4030           the time at which he was supposed to time out...
      243     4031        */
      244     4032    1      IF CUR_TIME < WAKEUP_TIME

   4032  1 000313   200004 236100                    LDQ     CUR_TIME,,AUTO
         1 000314   200005 116100                    CMPQ    WAKEUP_TIME,,AUTO
         1 000315   000563 603000 1                  TRC     s:4132

      245     4033    2      THEN DO;

      246     4034
      247     4035        /* To reconnect, hook this user to the communication path which has
      248     4036           been established to the partially logged-on user who is reconnecting
      249     4037           Handle the timing problem where the new line goes away before we
      250     4038           can hook the woken-up user to it.
      251     4039        */
      252     4040    2           IF NK$LDCT$(BLOCK$->JZ$INFO.LDCT#) = ADDR(NIL)

   4040  1 000316   200003 470500                    LDP0    BLOCK$,,AUTO
         1 000317   000002 236100                    LDQ     2,,PR0
         1 000320   000011 772000                    QRL     9
         1 000321   777777 376007                    ANQ     -1,DL
         1 000322   000000 471400 xsym               LDP1    N$DCT$$
         1 000323   100000 236106                    LDQ     0,QL,PR1
         1 000324   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000325   000340 601000 1                  TNZ     s:4047

      253     4041    3           THEN DO;

      254     4042    3                B$U.FLG.SUSP = '1'B;       /* Prepare to put him back to sleep   */
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:33   

   4042  1 000326   000000 473400 xsym               LDP3    S$CU$
         1 000327   002000 236003                    LDQ     1024,DU
         1 000330   300000 256100                    ORSQ    0,,PR3

      255     4043    3                CALL JZC$INSERT(BLOCK$);

   4043  1 000331   200003 630500                    EPPR0   BLOCK$,,AUTO
         1 000332   200022 450500                    STP0    MSG_INFO+6,,AUTO
         1 000333   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000334   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000335   000000 701000 xent               TSX1    JZC$INSERT
         1 000336   000000 011000                    NOP     0

      256     4044    3                GOTO SLEEP;

   4044  1 000337   000256 710000 1                  TRA     SLEEP

      257     4045    3                END;
      258     4046
      259     4047    2           NK$LDCT$(BLOCK$->JZ$INFO.LDCT#)->NK$LDCT.USER =

   4047  1 000340   000002 236100                    LDQ     2,,PR0
         1 000341   000011 772000                    QRL     9
         1 000342   777777 376007                    ANQ     -1,DL
         1 000343   100000 473506                    LDP3    0,QL,PR1
         1 000344   000002 236100                    LDQ     2,,PR0
         1 000345   000011 772000                    QRL     9
         1 000346   300007 552120                    STBQ    7,'20'O,PR3

      260     4048    2             BLOCK$->JZ$INFO.USER#;
      261     4049    2           M$UC.LDCTX = BLOCK$->JZ$INFO.LDCT#;

   4049  1 000347   000002 236100                    LDQ     2,,PR0
         1 000350   000011 772000                    QRL     9
         1 000351   777777 376007                    ANQ     -1,DL
         1 000352   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:34   
         1 000353   200006 473500                    LDP3    M$UC$,,AUTO
         1 000354   300051 740100                    STX0    41,,PR3

      262     4050    2           B$JIT.TSLINE = BLOCK$->JZ$INFO.TSLINE#;

   4050  1 000355   000000 474400 xsym               LDP4    B$JIT$
         1 000356   000100 100500                    MLR     fill='000'O
         1 000357   000001 000004                    ADSC9   1,,PR0                   cn=0,n=4
         1 000360   400337 000014                    ADSC9   223,,PR4                 cn=0,n=12

      263     4051
      264     4052    2           TEMP = KIDM_CP;

   4052  1 000361   000001 235007                    LDA     1,DL
         1 000362   200011 755100                    STA     TEMP,,AUTO

      265     4053    3           DO I=4 TO 15;

   4053  1 000363   000004 236007                    LDQ     4,DL
         1 000364   200010 756100                    STQ     I,,AUTO

      266     4054    3                IF (B$ROSEG.LDEVNAME(I) ~= '    ') AND (B$ROSEG.STREAMID.UC_STR(I) =
              4054                         '1'B)

   4054  1 000365   000000 470400 xsym               LDP0    B$ROSEG$
         1 000366   200010 720100                    LXL0    I,,AUTO
         1 000367   000054 236110                    LDQ     44,X0,PR0
         1 000370   000004 116000 0                  CMPQ    MSG_LEN+2
         1 000371   000405 600000 1                  TZE     s:4056
         1 000372   000074 236110                    LDQ     60,X0,PR0
         1 000373   000001 316003                    CANQ    1,DU
         1 000374   000405 600000 1                  TZE     s:4056

      267     4055    3                THEN CALL KIA$DCLSTR(TEMP,I);

   4055  1 000375   200010 631500                    EPPR1   I,,AUTO
         1 000376   200023 451500                    STP1    MSG_INFO+7,,AUTO
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:35   
         1 000377   200011 633500                    EPPR3   TEMP,,AUTO
         1 000400   200022 453500                    STP3    MSG_INFO+6,,AUTO
         1 000401   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000402   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000403   000000 701000 xent               TSX1    KIA$DCLSTR
         1 000404   000000 011000                    NOP     0

      268     4056    3                END;

   4056  1 000405   200010 054100                    AOS     I,,AUTO
         1 000406   200010 235100                    LDA     I,,AUTO
         1 000407   000017 115007                    CMPA    15,DL
         1 000410   000365 604400 1                  TMOZ    s:4054

      269     4057
      270     4058        /* If the user image was written to the *N file, restore it now.
      271     4059        */
      272     4060    2           IF (B$JIT.JUNK2 & %JJ2_ASAVE_LNK#)

   4060  1 000411   000000 470400 xsym               LDP0    B$JIT$
         1 000412   000321 220100                    LDX0    209,,PR0
         1 000413   000020 360003                    ANX0    16,DU
         1 000414   000420 600000 1                  TZE     s:4062

      273     4061    2           THEN CALL JLL$ASAVE_RTN;

   4061  1 000415   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000416   000000 701000 xent               TSX1    JLL$ASAVE_RTN
         1 000417   000000 011000                    NOP     0

      274     4062    2           B$JIT.JUNK = JUNK;

   4062  1 000420   200013 220100                    LDX0    JUNK,,AUTO
         1 000421   000000 470400 xsym               LDP0    B$JIT$
         1 000422   000315 740100                    STX0    205,,PR0

      275     4063
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:36   
      276     4064        /* Reset all error information.
      277     4065        */
      278     4066    2           B$JIT.ERR = '0'B;

   4066  1 000423   000012 450100                    STZ     10,,PR0

      279     4067    2           B$JIT.USRERR = '0'B;

   4067  1 000424   000144 450100                    STZ     100,,PR0

      280     4068    2           B$JIT.USRRNST = '0'B;

   4068  1 000425   000000 236003                    LDQ     0,DU
         1 000426   000145 552110                    STBQ    101,'10'O,PR0

      281     4069
      282     4070        /* Restore terminal information.
      283     4071        */
      284     4072    2           IF BLOCK$->JZ$INFO.INFO_SIZE > 0

   4072  1 000427   200003 471500                    LDP1    BLOCK$,,AUTO
         1 000430   100002 236100                    LDQ     2,,PR1
         1 000431   000777 316007                    CANQ    511,DL
         1 000432   000463 600000 1                  TZE     s:4086

      285     4073    3           THEN DO;

      286     4074    3                M$UC.UB$ = ADDR(BLOCK$->JZ$INFO.TERM_INFO);

   4074  1 000433   200003 236100                    LDQ     BLOCK$,,AUTO
         1 000434   000010 036003                    ADLQ    8,DU
         1 000435   200006 473500                    LDP3    M$UC$,,AUTO
         1 000436   300075 756100                    STQ     61,,PR3

      287     4075    3                M$UC.UBYTES = BLOCK$->JZ$INFO.INFO_SIZE;

   4075  1 000437   100002 236100                    LDQ     2,,PR1
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:37   
         1 000440   000777 376007                    ANQ     511,DL
         1 000441   300076 756100                    STQ     62,,PR3

      288     4076    3                M$UC.WAIT = 1;

   4076  1 000442   000020 236007                    LDQ     16,DL
         1 000443   300064 256100                    ORSQ    52,,PR3

      289     4077    3                B$JIT.DCB$ = M$UC$;

   4077  1 000444   200006 236100                    LDQ     M$UC$,,AUTO
         1 000445   000232 756100                    STQ     154,,PR0

      290     4078    3                PCODE = ASCBIN(%VFC_SPR);

   4078  1 000446   025000 236003                    LDQ     10752,DU
         1 000447   200007 756100                    STQ     PCODE,,AUTO

      291     4079    3                CALL KIA$UCIOD(MFC_WRITE,%DVBYTE_VFC#,PCODE,0) ALTRET(SKIP_IT);

   4079  1 000450   000000 236000 2                  LDQ     0
         1 000451   200025 756100                    STQ     MSG_INFO+9,,AUTO
         1 000452   200007 634500                    EPPR4   PCODE,,AUTO
         1 000453   200024 454500                    STP4    MSG_INFO+8,,AUTO
         1 000454   000022 237000 2                  LDAQ    18
         1 000455   200022 757100                    STAQ    MSG_INFO+6,,AUTO
         1 000456   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000457   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000460   000000 701000 xent               TSX1    KIA$UCIOD
         1 000461   000462 702000 1                  TSX2    SKIP_IT

      292     4080    3   SKIP_IT:     END;

   4080  1 000462   000476 710000 1     SKIP_IT      TRA     s:4094

      293     4081
      294     4082        /* Restore DELTA's prompt, if there was no saved front end info to
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:38   
      295     4083           do it for us.
      296     4084        */
      297     4085    3           ELSE DO;

      298     4086    3                B$JIT.DCB$ = M$UC$;

   4086  1 000463   200006 236100                    LDQ     M$UC$,,AUTO
         1 000464   000232 756100                    STQ     154,,PR0

      299     4087    3                M$UC.UB$ = ADDR(RSTDBPMT);

   4087  1 000465   000021 236000 2                  LDQ     17
         1 000466   200006 473500                    LDP3    M$UC$,,AUTO
         1 000467   300075 756100                    STQ     61,,PR3

      300     4088    3                M$UC.UBYTES = LENGTHC(RSTDBPMT);

   4088  1 000470   000006 235007                    LDA     6,DL
         1 000471   300076 755100                    STA     62,,PR3

      301     4089    3                CALL KIA$UCIO(MFC_WRITE,%DVBYTE_VFC#,%VFC_SPM,0);

   4089  1 000472   000025 630400 2                  EPPR0   21
         1 000473   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000474   000000 701000 xent               TSX1    KIA$UCIO
         1 000475   000000 011000                    NOP     0

      302     4090    3                END;

      303     4091
      304     4092        /* Shove input tabs from M$UC down to the front end now.
      305     4093        */
      306     4094    2           M$UC.UB$=M$UC.TAB$;

   4094  1 000476   200006 470500                    LDP0    M$UC$,,AUTO
         1 000477   000047 236100                    LDQ     39,,PR0
         1 000500   000075 756100                    STQ     61,,PR0
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:39   

      307     4095    2           M$UC.UBYTES=32;

   4095  1 000501   000040 235007                    LDA     32,DL
         1 000502   000076 755100                    STA     62,,PR0

      308     4096                                 /* *** ABOVE SHUDBE SIZEC(VLP_TAB, SLEEZE FOR B03+.*/
      309     4097    2           M$UC.WAIT=1;

   4097  1 000503   000020 236007                    LDQ     16,DL
         1 000504   000064 256100                    ORSQ    52,,PR0

      310     4098    2           B$JIT.DCB$=M$UC$;

   4098  1 000505   200006 236100                    LDQ     M$UC$,,AUTO
         1 000506   000000 471400 xsym               LDP1    B$JIT$
         1 000507   100232 756100                    STQ     154,,PR1

      311     4099    2           CALL KIA$UCIO(MFC_WRITE,%DVBYTE_VFC#,%VFC_ITB,0);

   4099  1 000510   000032 630400 2                  EPPR0   26
         1 000511   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000512   000000 701000 xent               TSX1    KIA$UCIO
         1 000513   000000 011000                    NOP     0

      312     4100
      313     4101        /* Free this user's autosave block.
      314     4102        */
      315     4103    2           CALL JZB$FREE(BLOCK$);

   4103  1 000514   200003 630500                    EPPR0   BLOCK$,,AUTO
         1 000515   200022 450500                    STP0    MSG_INFO+6,,AUTO
         1 000516   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000517   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000520   000000 701000 xent               TSX1    JZB$FREE
         1 000521   000000 011000                    NOP     0

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:40   
      316     4104    2           B$U.FLG.STIP = '0'B;            /* Step is no longer in progress      */

   4104  1 000522   000000 470400 xsym               LDP0    S$CU$
         1 000523   000036 236000 2                  LDQ     30
         1 000524   000000 356100                    ANSQ    0,,PR0

      317     4105
      318     4106        /* Pick up the new FEP#, PORT# for our 'reconnected' message.
      319     4107        */
      320     4108    2           MSG_INFO.FEP = B$JIT.TSLINE.FEX;

   4108  1 000525   000000 470400 xsym               LDP0    B$JIT$
         1 000526   000337 236100                    LDQ     223,,PR0
         1 000527   200014 552140                    STBQ    MSG_INFO,'40'O,AUTO

      321     4109    2           MSG_INFO.PORT = B$JIT.TSLINE.PORT;

   4109  1 000530   000011 736000                    QLS     9
         1 000531   200014 552130                    STBQ    MSG_INFO,'30'O,AUTO

      322     4110    2           CALL OCI$MK_WR(M_SYS,RECON_MSG#,4,MSG_LEN,MSG_INFO);

   4110  1 000532   200014 631500                    EPPR1   MSG_INFO,,AUTO
         1 000533   200026 451500                    STP1    MSG_INFO+10,,AUTO
         1 000534   000010 237000 2                  LDAQ    8
         1 000535   200024 757100                    STAQ    MSG_INFO+8,,AUTO
         1 000536   000040 237000 2                  LDAQ    32
         1 000537   200022 757100                    STAQ    MSG_INFO+6,,AUTO
         1 000540   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000541   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000542   000000 701000 xent               TSX1    OCI$MK_WR
         1 000543   000000 011000                    NOP     0

      323     4111
      324     4112    2           IF B$JIT.JUNK & %JJ_BAKIC#

   4112  1 000544   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:41   
         1 000545   000315 220100                    LDX0    205,,PR0
         1 000546   001000 360003                    ANX0    512,DU
         1 000547   000557 600000 1                  TZE     s:4117

      325     4113    3           THEN DO;

      326     4114    3                CALL UDN$MAGIC;

   4114  1 000550   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000551   000000 701000 xent               TSX1    UDN$MAGIC
         1 000552   000000 011000                    NOP     0

      327     4115    3                CALL UDB$PMMEXIT2;         /*Entry for CALCOMP                   */

   4115  1 000553   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000554   000000 701000 xent               TSX1    UDB$PMMEXIT2
         1 000555   000000 011000                    NOP     0

      328     4116    3                END;

   4116  1 000556   000642 710000 1                  TRA     s:4151

      329     4117    2           ELSE CALL UDB$AUTO;

   4117  1 000557   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000560   000000 701000 xent               TSX1    UDB$AUTO
         1 000561   000000 011000                    NOP     0

      330     4118    2           END;

   4118  1 000562   000642 710000 1                  TRA     s:4151

      331     4119
      332     4120        %EJECT;
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:42   
      333     4121        /*************************************************************
      334     4122         *                                                           *
      335     4123         *                    Timed Out User                         *
      336     4124         *                                                           *
      337     4125         *************************************************************/
      338     4126        /* Make the timed-out user's M$UC DCB look like device 'NO' so that
      339     4127           any I/O which his exit control routine might attempt will get
      340     4128           swallowed.  Make LDCTX zero so if we ever call NKU$UCCLS or DRQ,
      341     4129           we will screech.
      342     4130        */
      343     4131    2      ELSE DO;                             /* User timed out                     */

      344     4132    2           B$JIT.RNST = (B$JIT.RNST | %RS_DROP#);

   4132  1 000563   000000 470400 xsym               LDP0    B$JIT$
         1 000564   000314 236100                    LDQ     204,,PR0
         1 000565   777000 376003                    ANQ     -512,DU
         1 000566   200000 276003                    ORQ     65536,DU
         1 000567   000314 552140                    STBQ    204,'40'O,PR0

      345     4133
      346     4134    2           M$UC.FCD = '0'B;

   4134  1 000570   200006 471500                    LDP1    M$UC$,,AUTO
         1 000571   000042 236000 2                  LDQ     34
         1 000572   100031 356100                    ANSQ    25,,PR1

      347     4135    2           M$UC.ASN = %DEVICE#;

   4135  1 000573   003000 236007                    LDQ     1536,DL
         1 000574   100032 552110                    STBQ    26,'10'O,PR1

      348     4136    2           M$UC.IASN = 0;

   4136  1 000575   000000 236003                    LDQ     0,DU
         1 000576   100103 552104                    STBQ    67,'04'O,PR1

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:43   
      349     4137    2           M$UC.RES = 'NO';

   4137  1 000577   000005 236000 0                  LDQ     MSG_LEN+3
         1 000600   777777 376003                    ANQ     -1,DU
         1 000601   040040 276007                    ORQ     16416,DL
         1 000602   100026 756100                    STQ     22,,PR1

      350     4138    2           M$UC.WSN = ' ';

   4138  1 000603   000035 235000 xsym               LDA     B_VECTNIL+29
         1 000604   000035 236000 xsym               LDQ     B_VECTNIL+29
         1 000605   100027 755100                    STA     23,,PR1
         1 000606   100030 756100                    STQ     24,,PR1

      351     4139    2           M$UC.LDCTX = 0;

   4139  1 000607   000000 220003                    LDX0    0,DU
         1 000610   100051 740100                    STX0    41,,PR1

      352     4140    2           B$JIT.DCB$ = M$UC$;

   4140  1 000611   200006 236100                    LDQ     M$UC$,,AUTO
         1 000612   000232 756100                    STQ     154,,PR0

      353     4141    2           CALL FMM$DFLOPN;

   4141  1 000613   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000614   000000 701000 xent               TSX1    FMM$DFLOPN
         1 000615   000000 011000                    NOP     0

      354     4142
      355     4143    2           IF (B$JIT.JUNK2 & %JJ2_ASAVE_LNK#)

   4143  1 000616   000000 470400 xsym               LDP0    B$JIT$
         1 000617   000321 220100                    LDX0    209,,PR0
         1 000620   000020 360003                    ANX0    16,DU
         1 000621   000625 600000 1                  TZE     s:4145
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:44   

      356     4144    2           THEN CALL JLL$ASAVE_RTN;

   4144  1 000622   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000623   000000 701000 xent               TSX1    JLL$ASAVE_RTN
         1 000624   000000 011000                    NOP     0

      357     4145    2           B$JIT.JUNK = JUNK;

   4145  1 000625   200013 220100                    LDX0    JUNK,,AUTO
         1 000626   000000 470400 xsym               LDP0    B$JIT$
         1 000627   000315 740100                    STX0    205,,PR0

      358     4146
      359     4147    2           CALL JZB$FREE(BLOCK$);

   4147  1 000630   200003 631500                    EPPR1   BLOCK$,,AUTO
         1 000631   200022 451500                    STP1    MSG_INFO+6,,AUTO
         1 000632   200022 630500                    EPPR0   MSG_INFO+6,,AUTO
         1 000633   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000634   000000 701000 xent               TSX1    JZB$FREE
         1 000635   000000 011000                    NOP     0

      360     4148    2           B$JIT.ERR = ERR;

   4148  1 000636   200012 236100                    LDQ     ERR,,AUTO
         1 000637   000000 470400 xsym               LDP0    B$JIT$
         1 000640   000012 756100                    STQ     10,,PR0

      361     4149    2           RETURN;                         /* Resume rundown process             */

   4149  1 000641   000000 702200 xent               TSX2  ! X66_ARET

      362     4150    2           END;
      363     4151    1   END JZA$ASAVE;

   4151  1 000642   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:45   

RSTDBPMT
 Sect OctLoc
   0     000   005004 003000   100076 ******                                    ....@>..

MSG_LEN
 Sect OctLoc
   0     002   001002 010014                                                    ....

(unnamed)
 Sect OctLoc
   0     003   200000 000000   040040 040040   116117 040040                    ....    NO

(unnamed)
 Sect OctLoc
   2     000   000002 006000   000000 000000   000013 006000   000002 006000    ................
   2     004   340000 000000   773777 777777   200000 000000   000000 000146    ...............f
   2     010   000006 006000   000002 006000   000006 006000   000007 006000    ................
   2     014   000000 000031   000000 006000   000014 006000   775777 777777    ................
   2     020   100000 000000   000000 006000   000003 006000   000020 006000    @...............
   2     024   024040 040040   000003 006000   000020 006000   000024 006000    .   ............
   2     030   000002 006000   023040 040040   000003 006000   000020 006000    .....   ........
   2     034   000031 006000   000002 006000   777577 777777   000000 000147    ...............g
   2     040   000006 006000   000037 006000   777777 757777                    ............

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:46   
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   JZ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JZA$ASAVE.
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:47   

 **** Variables and constants ****

  ****  Section 000 RoData JZA$ASAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/b UBIN(9)     r     1 MSG_LEN(0:3)
     0-0-0/d STRC(54)    r     1 RSTDBPMT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 BLOCK$                     4-0-0/w UBIN        r     1 CUR_TIME
    12-0-0/b BIT         r     1 ERR                       10-0-0/w SBIN        r     1 I
    13-0-0/b BIT (18)    r     1 JUNK                       6-0-0/w PTR         r     1 M$UC$
    14-0-0/c STRC(207)   r     1 MSG_INFO                   7-0-0/w UBIN(9)     r     1 PCODE
    11-0-0/w UBIN        r     1 TEMP                       5-0-0/w UBIN        r     1 WAKEUP_TIME

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$M$UC$
     0-0-0/w PTR         r     1 B$P$                       0-0-0/w PTR         r     1 B$ROSEG$
     0-0-0/w UBIN        r     1 B_ZIP                      0-0-0/w UBIN        r     1 JZ_RETIM
     0-0-0/c STRC(72)    r     1 J_LOGON                    0-0-0/w PTR         r     1 N$DCT$$
     0-0-0/w PTR         r     1 S$CU$                      0-0-0/w UBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:48   
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(1224)  r     1 B$P(0:0)
     0-0-0/d STRC(3024)  r     1 B$ROSEG                    0-0-0/d STRC(576)   r     1 B$U
     0-0-0/w STRC(144)   r     1 CLEAR_VALID                0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(4896)  r     1 JZ$INFO                    0-0-0/d STRC(864)   r     1 NK$LDCT
     0-0-0/w PTR         r     1 NK$LDCT$(0:0)


   Procedure JZA$ASAVE requires 419 words for executable code.
   Procedure JZA$ASAVE requires 24 words of local(AUTO) storage.

    No errors detected in file JZA$ASAVE.:E05TSI    .
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:49   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:50   
          MINI XREF LISTING

B$DO.ECCINFO
       917**DCL       918--REDEF
B$JIT.ACCN
       343**DCL      3933>>ASSIGN   3981>>ASSIGN
B$JIT.CPFLAGS1
       432**DCL      3906>>IF       3945>>IF
B$JIT.CPFLAGS1.SLEAZE
       437**DCL       437--REDEF
B$JIT.DCB$
       511**DCL      3964<<ASSIGN   4077<<ASSIGN   4086<<ASSIGN   4098<<ASSIGN   4140<<ASSIGN
B$JIT.ERR
       343**DCL      3936>>ASSIGN   4066<<ASSIGN   4148<<ASSIGN
B$JIT.ERR.MID
       344**DCL       344--REDEF
B$JIT.JRESPEAK
       505**DCL       506--REDEF
B$JIT.JUNK
       543**DCL      3937>>ASSIGN   3951<<ASSIGN   3951>>ASSIGN   4062<<ASSIGN   4112>>IF       4145<<ASSIGN
B$JIT.JUNK2
       597**DCL      3947<<ASSIGN   3947>>ASSIGN   3955<<ASSIGN   3955>>ASSIGN   4060>>IF       4143>>IF
B$JIT.MODE
       338**DCL      3915>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
       614**DCL       614--REDEF     615--REDEF
B$JIT.PNR
       518**DCL       518--REDEF
B$JIT.PRIV.ACTIVE
       344**DCL      3916>>IF
B$JIT.RNST
       522**DCL      3995<<ASSIGN   3995>>ASSIGN   4132<<ASSIGN   4132>>ASSIGN
B$JIT.STAR.DA
       511**DCL      3910>>ASSIGN
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:51   
B$JIT.TSLINE
       612**DCL       613--REDEF    4050<<ASSIGN
B$JIT.TSLINE.FEX
       612**DCL      3979>>ASSIGN   4108>>ASSIGN
B$JIT.TSLINE.PORT
       612**DCL      3980>>ASSIGN   4109>>ASSIGN
B$JIT.UNAME
       343**DCL      3932>>ASSIGN   3982>>ASSIGN
B$JIT.USRERR
       479**DCL      4067<<ASSIGN
B$JIT.USRRNST
       479**DCL      4068<<ASSIGN
B$JIT$
      3637**DCL       338--IMP-PTR  3906>>IF       3910>>ASSIGN   3915>>IF       3916>>IF       3932>>ASSIGN
      3933>>ASSIGN   3936>>ASSIGN   3937>>ASSIGN   3945>>IF       3947>>ASSIGN   3947>>ASSIGN   3951>>ASSIGN
      3951>>ASSIGN   3955>>ASSIGN   3955>>ASSIGN   3964>>ASSIGN   3979>>ASSIGN   3980>>ASSIGN   3981>>ASSIGN
      3982>>ASSIGN   3995>>ASSIGN   3995>>ASSIGN   4050>>ASSIGN   4060>>IF       4062>>ASSIGN   4066>>ASSIGN
      4067>>ASSIGN   4068>>ASSIGN   4077>>ASSIGN   4086>>ASSIGN   4098>>ASSIGN   4108>>ASSIGN   4109>>ASSIGN
      4112>>IF       4132>>ASSIGN   4132>>ASSIGN   4140>>ASSIGN   4143>>IF       4145>>ASSIGN   4148>>ASSIGN
B$M$UC$
      3638**DCL      3921>>ASSIGN
B$P.NAME.TEXT
       653**DCL      3914>>IF
B$P$
       681**DCL      3914>>IF
B$ROSEG.LDEVNAME
       724**DCL      4054>>IF
B$ROSEG.STREAMID.UC_STR
       732**DCL      4054>>IF
B$ROSEG.STREAM_VALID
       746**DCL      3989--ASSIGN
B$ROSEG$
      3639**DCL      3989>>ASSIGN   4054>>IF       4054>>IF
B$U.ACP
       873**DCL      3914>>IF
B$U.FLG.HUP
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:52   
       792**DCL      3996<<ASSIGN
B$U.FLG.STIP
       797**DCL      4104<<ASSIGN
B$U.FLG.SUSP
       793**DCL      3997<<ASSIGN   4020<<ASSIGN   4042<<ASSIGN
B$U.MISC
       896**DCL       897--REDEF    4010>>ASSIGN
B$USER.MISC
       972**DCL       973--REDEF
BLOCK$
      3621**DCL      3927<>CALL     3932>>ASSIGN   3933>>ASSIGN   3934>>ASSIGN   3961>>ASSIGN   3962>>ASSIGN
      3970>>ASSIGN   3974>>ASSIGN   4004<>CALL     4019<>CALL     4040>>IF       4043<>CALL     4047>>ASSIGN
      4047>>ASSIGN   4049>>ASSIGN   4050>>ASSIGN   4072>>IF       4074>>ASSIGN   4075>>ASSIGN   4103<>CALL
      4147<>CALL
B_ZIP
      3641**DCL      3903>>IF
CLEAR_VALID
      3885**DCL      3989<<ASSIGN
CONTINUE
      3995**LABEL    3986--CALLALT
CUR_TIME
      3622**DCL      4009<>CALL     4032>>IF
ERR
      3628**DCL      3936<<ASSIGN   4148>>ASSIGN
F$DCB.ACTPOS
      1548**DCL      1548--REDEF
F$DCB.ARS
      1523**DCL      1523--REDEF    3970>>ASSIGN
F$DCB.ASN
      1538**DCL      4135<<ASSIGN
F$DCB.ATTR
      1541**DCL      1542--REDEF
F$DCB.BORROW
      1556**DCL      1556--REDEF    1556--REDEF    1556--REDEF
F$DCB.DCBNAME.L
      1570**DCL      1570--IMP-SIZ
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:53   
F$DCB.EOMCHAR
      1527**DCL      1527--REDEF
F$DCB.FCD
      1536**DCL      4134<<ASSIGN
F$DCB.FLDID
      1551**DCL      1551--REDEF
F$DCB.FORM$
      1545**DCL      1545--REDEF
F$DCB.FSECT
      1561**DCL      1561--REDEF
F$DCB.FSN
      1538**DCL      1538--REDEF    1538--REDEF    1539--REDEF
F$DCB.HEADER$
      1544**DCL      1544--REDEF
F$DCB.IASN
      1564**DCL      4136<<ASSIGN
F$DCB.IXTNSIZE
      1542**DCL      1542--REDEF
F$DCB.LASTSTA$
      1532**DCL      1532--REDEF
F$DCB.LDCTX
      1545**DCL      3922>>IF       4049<<ASSIGN   4139<<ASSIGN
F$DCB.LVL
      1557**DCL      1557--REDEF
F$DCB.NAME.C
      1532**DCL      1532--REDEF
F$DCB.NOEOF
      1553**DCL      1553--REDEF
F$DCB.NRECS
      1543**DCL      1543--REDEF
F$DCB.NRECX
      1562**DCL      1562--REDEF
F$DCB.OHDR
      1554**DCL      1554--REDEF
F$DCB.ORG
      1537**DCL      1537--REDEF
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:54   
F$DCB.PRECNO
      1560**DCL      1560--REDEF
F$DCB.RCSZ
      1565**DCL      1565--REDEF
F$DCB.RES
      1533**DCL      1533--REDEF    4137<<ASSIGN
F$DCB.SETX
      1545**DCL      1545--REDEF
F$DCB.STR
      1561**DCL      3965<<ASSIGN
F$DCB.TAB$
      1544**DCL      1545--REDEF    4094>>ASSIGN
F$DCB.TDA
      1559**DCL      1559--REDEF
F$DCB.UB$
      1561**DCL      3961<<ASSIGN   4074<<ASSIGN   4087<<ASSIGN   4094<<ASSIGN
F$DCB.UBYTES
      1561**DCL      3962<<ASSIGN   4075<<ASSIGN   4088<<ASSIGN   4095<<ASSIGN
F$DCB.WAIT
      1555**DCL      3963<<ASSIGN   4076<<ASSIGN   4097<<ASSIGN
F$DCB.WSN
      1534**DCL      1534--REDEF    4138<<ASSIGN
FMM$DFLOPN
      3826**DCL-ENT  4141--CALL
I
      3626**DCL      3909<<DOINDEX  3910>>ASSIGN   4053<<DOINDEX  4054>>IF       4054>>IF       4055<>CALL
JLL$ASAVE_RTN
      3823**DCL-ENT  4061--CALL     4144--CALL
JLL$LINK
      3822**DCL-ENT  3948--CALL
JSR$RUNDOWN
      3825**DCL-ENT  3950--CALL
JUNK
      3629**DCL      3937<<ASSIGN   4062>>ASSIGN   4145>>ASSIGN
JZ$INFO.ACCT
      2159**DCL      2159--REDEF    3933<<ASSIGN
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:55   
JZ$INFO.BLK_COUNT
      2158**DCL      2158--REDEF
JZ$INFO.INFO_SIZE
      2158**DCL      3970<<ASSIGN   3974<<ASSIGN   4072>>IF       4075>>ASSIGN
JZ$INFO.LDCT#
      2158**DCL      4040>>IF       4047>>ASSIGN   4049>>ASSIGN
JZ$INFO.TERM_INFO
      2159**DCL      3961--ASSIGN   3962--ASSIGN   4074--ASSIGN
JZ$INFO.TSLINE#
      2157**DCL      4050>>ASSIGN
JZ$INFO.UNAME
      2159**DCL      3932<<ASSIGN
JZ$INFO.USER#
      2158**DCL      3934<<ASSIGN   4047>>ASSIGN
JZB$FREE
      3818**DCL-ENT  4103--CALL     4147--CALL
JZB$GET
      3817**DCL-ENT  3927--CALL
JZC$DELETE
      3821**DCL-ENT  4019--CALL
JZC$INSERT
      3820**DCL-ENT  4004--CALL     4043--CALL
JZ_PAGE
      2154**DCL      2154--REDEF
JZ_RETIM
      3644**DCL      3903>>IF       4007<>CALL
J_LOGON.NAME
      3647**DCL      3914>>IF
KIA$DCLSTR
      3830**DCL-ENT  4055--CALL
KIA$UCIO
      3832**DCL-ENT  4089--CALL     4099--CALL
KIA$UCIOD
      3831**DCL-ENT  3968--CALL     4079--CALL
M$UC$
      3624**DCL      3921<<ASSIGN   3922>>IF       3961>>ASSIGN   3962>>ASSIGN   3963>>ASSIGN   3964>>ASSIGN
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:56   
      3965>>ASSIGN   3970>>ASSIGN   4049>>ASSIGN   4074>>ASSIGN   4075>>ASSIGN   4076>>ASSIGN   4077>>ASSIGN
      4086>>ASSIGN   4087>>ASSIGN   4088>>ASSIGN   4094>>ASSIGN   4094>>ASSIGN   4095>>ASSIGN   4097>>ASSIGN
      4098>>ASSIGN   4134>>ASSIGN   4135>>ASSIGN   4136>>ASSIGN   4137>>ASSIGN   4138>>ASSIGN   4139>>ASSIGN
      4140>>ASSIGN
MSG_INFO
      3630**DCL      4005<>CALL     4110<>CALL
MSG_INFO.ACCT
      3633**DCL      3981<<ASSIGN
MSG_INFO.FEP
      3631**DCL      3979<<ASSIGN   4108<<ASSIGN
MSG_INFO.PORT
      3632**DCL      3980<<ASSIGN   4109<<ASSIGN
MSG_INFO.UNAME
      3634**DCL      3982<<ASSIGN
MSG_LEN
      3814**DCL      4005<>CALL     4110<>CALL
N$DCT$$
      2579**DCL      2579--IMP-PTR  4040>>IF       4047>>ASSIGN
NK$LDCT.DDT$
      3854**DCL      3854--REDEF
NK$LDCT.IOQ$
      3853**DCL      3854--REDEF
NK$LDCT.LDCTX
      3855**DCL      3855--REDEF
NK$LDCT.LKFLG.ABORTED
      3867**DCL      3868--REDEF
NK$LDCT.RLCID.LDCTX
      3877**DCL      3877--REDEF
NK$LDCT.STA$
      3873**DCL      3874--REDEF
NK$LDCT.SYMB$
      3852**DCL      3852--REDEF    3852--REDEF    3853--REDEF
NK$LDCT.USER
      3862**DCL      4047<<ASSIGN
NK$LDCT$
      2579**DCL      4040>>IF       4047>>ASSIGN
PL6.E3A0      #001=JZA$ASAVE File=JZA$ASAVE.:E05TSI                              TUE 07/29/97 23:52 Page:57   
NKU$UCCLS
      3833**DCL-ENT  3986--CALL
OCI$MK_WR
      3827**DCL-ENT  4005--CALL     4110--CALL
PCODE
      3625**DCL      3966<<ASSIGN   3968<>CALL     4078<<ASSIGN   4079<>CALL
RSTDBPMT
      3806**DCL      4087--ASSIGN   4088--ASSIGN
S$CU$
      3642**DCL      3914>>IF       3996>>ASSIGN   3997>>ASSIGN   4010>>ASSIGN   4020>>ASSIGN   4042>>ASSIGN
      4104>>ASSIGN
SKIP_IT
      4080**LABEL    4079--CALLALT
SLEEP
      4007**LABEL    4044--GOTO
SSR$REG
      3828**DCL-ENT  4007--CALL
SSS$CURTIME
      3829**DCL-ENT  4009--CALL
S_CUN
      3643**DCL      3934>>ASSIGN
TEMP
      3627**DCL      3908<<ASSIGN   3910<<ASSIGN   3910>>ASSIGN   3912>>IF       4052<<ASSIGN   4055<>CALL
UDB$AUTO
      3834**DCL-ENT  4117--CALL
UDB$PMMEXIT2
      3835**DCL-ENT  4115--CALL
UDN$MAGIC
      3836**DCL-ENT  4114--CALL
WAKEUP_TIME
      3623**DCL      4010<<ASSIGN   4014<<ASSIGN   4032>>IF
