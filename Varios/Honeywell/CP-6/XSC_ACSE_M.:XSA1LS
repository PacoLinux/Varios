

10:39 OCT 01 '97 XSC_ACSE_M.:XSA1SI                                        1    
    1      /*M*    XSC_ACSE_M      User-visible macros for ISO ACSE layer.         */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* DDA */
    8      %EQU XSC_RDONLYFPT# = '302303000200'O;  /* hardwired E$RDONLYFPT errcode */
    9      /*F*    NAME:   XSC$$ERRCODE
   10
   11              XSC$$ERRCODE is an internal copy of VLP_ERRCODE with more reasonable
   12              initialization possibilities.
   13      */
   14      %MACRO XSC$$ERRCODE( NAME=XSC$$ERRCODE, LVL=1, LAST=";", STCLASS=BASED,
   15              FCG='0'B, MID='0'B, MON='0'B, ERR#=0, SEV=0);
   16      %LSET LISTDIR = '0'B;
   17      %LSET LISTEXP = '1'B;
   18      %LSET LISTCOM = '0'B;
   19      %LSET LISTSUB = '1'B;
   20      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
   21      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
   22          %LSET INIT = CHARTEXT( ' INIT');
   23          %LSET ENIT = CHARTEXT( '');
   24      %ELSE;
   25          %LSET INIT = CHARTEXT( '/*');
   26          %LSET ENIT = CHARTEXT( '*/');
   27      %ENDIF;
   28      %IF LENGTHC( 'NAME') = 0;
   29          %LSET LVL = LVL - 1;
   30      %ELSE;
   31          %IF LVL = 1;
   32              DCL 1 NAME STCLASS ALIGNED,
   33          %ELSE;
   34              %LVL NAME STCLASS ALIGNED,
   35          %ENDIF;
   36      %ENDIF;
   37      %LSET LVL1 = LVL + 1;
10:39 OCT 01 '97 XSC_ACSE_M.:XSA1SI                                        2    
   38
   39          %LVL1 %CHARTEXT( 'FCG') BIT(12) %INIT( FCG)%ENIT UNAL,
   40          %LVL1 %CHARTEXT( 'MID') BIT(6) %INIT( MID)%ENIT UNAL,
   41          %LVL1 %CHARTEXT( 'MON') BIT(1) %INIT( MON)%ENIT UNAL,
   42          %LVL1 %CHARTEXT( 'ERR#') UBIN(14) %INIT( ERR#)%ENIT UNAL,
   43          %LVL1 %CHARTEXT( 'SEV') UBIN(3) %INIT( SEV)%ENIT UNAL LAST
   44      %MEND;
   45
   46      /*F*    NAME:   XSC$PRIMITIVES
   47
   48              XSC$PRIMITIVES defines all of the XSC primitive service FPTs.
   49              This is useful in situations where the type of incoming FPT is not
   50              known in advance and they all need to be defined as BASED on some
   51              pointer filled in at run time.
   52      */
   53      %MACRO XSC$PRIMITIVES( STCLASS=BASED);
   54          %XSC$GENERIC( STCLASS=STCLASS);
   55          %XSC$ASSOCIATE( STCLASS=STCLASS);
   56          %XSC$P_ABORT( STCLASS=STCLASS);
   57          %XSC$RELEASE( STCLASS=STCLASS);
   58          %XSC$U_ABORT( STCLASS=STCLASS);
   59      %MEND;
   60
   61      /*F*    NAME:   XSC_PRIMITIVES
   62
   63              XSC_PRIMITIVES defines all of the XSC primitive service FPTs.
   64              This macro is similar to XSC$PRIMITIVES, but uses '_' in each of the
   65              resulting structure names to indicate STATIC storage class.
   66      */
   67      %MACRO XSC_PRIMITIVES( STCLASS=STATIC);
   68          %XSC$GENERIC( FPTN=XSC_GENERIC, STCLASS=STCLASS);
   69          %XSC$ASSOCIATE( FPTN=XSC_ASSOCIATE, STCLASS=STCLASS);
   70          %XSC$P_ABORT( FPTN=XSC_P_ABORT, STCLASS=STCLASS);
   71          %XSC$RELEASE( FPTN=XSC_RELEASE, STCLASS=STCLASS);
   72          %XSC$U_ABORT( FPTN=XSC_U_ABORT, STCLASS=STCLASS);
   73      %MEND;
   74
10:39 OCT 01 '97 XSC_ACSE_M.:XSA1SI                                        3    
   75      /*F*    NAME:   XSC$GENERIC
   76
   77              XSC$GENERIC is a macro containing the items common to all of the
   78              ACSE FPTs (FNC, CCID, ERROR).  In addition, it has a trailing '*'
   79              item big enough to allow any ACSE FPT to fit inside this generic FPT.
   80      */
   81      %MACRO XSC$GENERIC(
   82              FPTN=XSC$GENERIC, LVL=1, LAST=";", STCLASS=BASED);
   83      %LSET LISTDIR = '0'B;
   84      %LSET LISTEXP = '1'B;
   85      %LSET LISTCOM = '0'B;
   86      %LSET LISTSUB = '1'B;
   87      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
   88      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
   89          %LSET INIT = CHARTEXT( ' INIT');
   90          %LSET ENIT = CHARTEXT( '');
   91      %ELSE;
   92          %LSET INIT = CHARTEXT( '/*');
   93          %LSET ENIT = CHARTEXT( '*/');
   94      %ENDIF;
   95      %IF LENGTHC( 'FPTN') = 0;
   96          %LSET LVL = LVL - 1;
   97      %ELSE;
   98          %IF LVL = 1;
   99              DCL 1 FPTN STCLASS ALIGNED,
  100          %ELSE;
  101              %LVL FPTN,
  102          %ENDIF;
  103      %ENDIF;
  104      %LSET LVL1 = LVL + 1;
  105
  106          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( %XSC_FNC_NONE#)%ENIT CALIGNED,
  107          %LVL1 %CHARTEXT( 'CCID') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
  108          %LVL1 %CHARTEXT( '*(0:1)') UBIN BYTE %INIT( 0*0)%ENIT CALIGNED,
  109          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSC_RDONLYFPT#)%ENIT ALIGNED,
  110          %XSC$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  111          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( NIL))%ENIT,
10:39 OCT 01 '97 XSC_ACSE_M.:XSA1SI                                        4    
  112          %LVL1 %CHARTEXT( '*(0:10)') UBIN %INIT( 0*0)%ENIT ALIGNED LAST
  113      %MEND;
  114
  115      /*F*    NAME:   XSC$ASSOCIATE
  116      */
  117      %MACRO XSC$ASSOCIATE(
  118              FPTN=XSC$ASSOCIATE, LVL=1, LAST=";", STCLASS=BASED,
  119              FNC( REQ=%XSC_FNC_AASCREQ#,
  120                   IND=%XSC_FNC_AASCIND#,
  121                   RSP=%XSC_FNC_AASCRSP#,
  122                   CNF=%XSC_FNC_AASCCNF#)=%XSC_FNC_NONE#,
  123              CCID=0,
  124              RSDIAG=%XSC_RSDIAG_NULL#,
  125              RESULT=%XSC_RSLT_ACCEPTED#,
  126              DATA=NIL,
  127              ACN=NIL,
  128              IAPT=NIL,
  129              IAEQ=NIL,
  130              IAPID=0,
  131              IAEID=0,
  132              RAPT=NIL,
  133              RAEQ=NIL,
  134              RAPID=0,
  135              RAEID=0,
  136              IMPL=NIL,
  137              CTXT=NIL);
  138      %LSET LISTDIR = '0'B;
  139      %LSET LISTEXP = '1'B;
  140      %LSET LISTCOM = '0'B;
  141      %LSET LISTSUB = '1'B;
  142      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  143      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  144          %LSET INIT = CHARTEXT( ' INIT');
  145          %LSET ENIT = CHARTEXT( '');
  146      %ELSE;
  147          %LSET INIT = CHARTEXT( '/*');
  148          %LSET ENIT = CHARTEXT( '*/');
10:39 OCT 01 '97 XSC_ACSE_M.:XSA1SI                                        5    
  149      %ENDIF;
  150      %IF LENGTHC( 'FPTN') = 0;
  151          %LSET LVL = LVL - 1;
  152      %ELSE;
  153          %IF LVL = 1;
  154              DCL 1 FPTN STCLASS ALIGNED,
  155          %ELSE;
  156              %LVL FPTN,
  157          %ENDIF;
  158      %ENDIF;
  159      %LSET LVL1 = LVL + 1;
  160      %IF MODE_FEP;
  161          %LSET L6 = 1;
  162      %ELSE;
  163          %LSET L6 = 0;
  164      %ENDIF;
  165
  166          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  167          %LVL1 %CHARTEXT( 'CCID') UBIN BYTE %INIT( CCID)%ENIT CALIGNED,
  168          %LVL1 %CHARTEXT( 'RSDIAG') UBIN BYTE %INIT( RSDIAG)%ENIT CALIGNED,
  169          %LVL1 %CHARTEXT( 'RESULT') UBIN BYTE %INIT( RESULT)%ENIT CALIGNED,
  170          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSC_RDONLYFPT#)%ENIT ALIGNED,
  171          %XSC$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  172          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT,
  173          %LVL1 %CHARTEXT( 'ACN$') PTR %INIT( ADDR( ACN))%ENIT,
  174          %LVL1 %CHARTEXT( 'IAPT$') PTR %INIT( ADDR( IAPT))%ENIT,
  175          %LVL1 %CHARTEXT( 'IAEQ$') PTR %INIT( ADDR( IAEQ))%ENIT,
  176          %LVL1 %CHARTEXT( 'IAPID') UBIN %INIT( IAPID)%ENIT ALIGNED,
  177          %LVL1 %CHARTEXT( 'IAEID') UBIN %INIT( IAEID)%ENIT ALIGNED,
  178          %LVL1 %CHARTEXT( 'RAPT$') PTR %INIT( ADDR( RAPT))%ENIT,
  179          %LVL1 %CHARTEXT( 'RAEQ$') PTR %INIT( ADDR( RAEQ))%ENIT,
  180          %LVL1 %CHARTEXT( 'RAPID') UBIN %INIT( RAPID)%ENIT ALIGNED,
  181          %LVL1 %CHARTEXT( 'RAEID') UBIN %INIT( RAEID)%ENIT ALIGNED,
  182          %LVL1 %CHARTEXT( 'IMPL$') PTR %INIT( ADDR( IMPL))%ENIT,
  183          %LVL1 %CHARTEXT( 'CTXT$') PTR %INIT( ADDR( CTXT))%ENIT LAST
  184      %MEND;
  185
10:39 OCT 01 '97 XSC_ACSE_M.:XSA1SI                                        6    
  186      /*F*    NAME:   XSC$P_ABORT
  187      */
  188      %MACRO XSC$P_ABORT(
  189              FPTN=XSC$P_ABORT, LVL=1, LAST=";", STCLASS=BASED,
  190              FNC( REQ=%XSC_FNC_APABIND#)=%XSC_FNC_APABIND#,
  191              CCID=0,
  192              ABRTSRC=%XSC_ABRTSRC_USER#,
  193              DATA=NIL);
  194      %LSET LISTDIR = '0'B;
  195      %LSET LISTEXP = '1'B;
  196      %LSET LISTCOM = '0'B;
  197      %LSET LISTSUB = '1'B;
  198      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  199      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  200          %LSET INIT = CHARTEXT( ' INIT');
  201          %LSET ENIT = CHARTEXT( '');
  202      %ELSE;
  203          %LSET INIT = CHARTEXT( '/*');
  204          %LSET ENIT = CHARTEXT( '*/');
  205      %ENDIF;
  206      %IF LENGTHC( 'FPTN') = 0;
  207          %LSET LVL = LVL - 1;
  208      %ELSE;
  209          %IF LVL = 1;
  210              DCL 1 FPTN STCLASS ALIGNED,
  211          %ELSE;
  212              %LVL FPTN,
  213          %ENDIF;
  214      %ENDIF;
  215      %LSET LVL1 = LVL + 1;
  216
  217          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  218          %LVL1 %CHARTEXT( 'CCID') UBIN BYTE %INIT( CCID)%ENIT CALIGNED,
  219          %LVL1 %CHARTEXT( 'ABRTSRC') UBIN BYTE %INIT( ABRTSRC)%ENIT CALIGNED,
  220          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
  221          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSC_RDONLYFPT#)%ENIT ALIGNED,
  222          %XSC$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
10:39 OCT 01 '97 XSC_ACSE_M.:XSA1SI                                        7    
  223          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT LAST
  224      %MEND;
  225
  226      /*F*    NAME:   XSC$RELEASE
  227      */
  228      %MACRO XSC$RELEASE(
  229              FPTN=XSC$RELEASE, LVL=1, LAST=";", STCLASS=BASED,
  230              FNC( REQ=%XSC_FNC_ARELREQ#,
  231                   IND=%XSC_FNC_ARELIND#,
  232                   RSP=%XSC_FNC_ARELRSP#,
  233                   CNF=%XSC_FNC_ARELCNF#)=%XSC_FNC_NONE#,
  234              CCID=0,
  235              REASON=%XSC_RELREQ_NORMAL#,
  236              DATA=NIL);
  237      %LSET LISTDIR = '0'B;
  238      %LSET LISTEXP = '1'B;
  239      %LSET LISTCOM = '0'B;
  240      %LSET LISTSUB = '1'B;
  241      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  242      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  243          %LSET INIT = CHARTEXT( ' INIT');
  244          %LSET ENIT = CHARTEXT( '');
  245      %ELSE;
  246          %LSET INIT = CHARTEXT( '/*');
  247          %LSET ENIT = CHARTEXT( '*/');
  248      %ENDIF;
  249      %IF LENGTHC( 'FPTN') = 0;
  250          %LSET LVL = LVL - 1;
  251      %ELSE;
  252          %IF LVL = 1;
  253              DCL 1 FPTN STCLASS ALIGNED,
  254          %ELSE;
  255              %LVL FPTN,
  256          %ENDIF;
  257      %ENDIF;
  258      %LSET LVL1 = LVL + 1;
  259
10:39 OCT 01 '97 XSC_ACSE_M.:XSA1SI                                        8    
  260          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  261          %LVL1 %CHARTEXT( 'CCID') UBIN BYTE %INIT( CCID)%ENIT CALIGNED,
  262          %LVL1 %CHARTEXT( 'REASON') UBIN BYTE %INIT( REASON)%ENIT CALIGNED,
  263          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
  264          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSC_RDONLYFPT#)%ENIT ALIGNED,
  265          %XSC$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  266          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( DATA))%ENIT LAST
  267      %MEND;
  268
  269      /*F*    NAME:   XSC$U_ABORT
  270      */
  271      %MACRO XSC$U_ABORT(
  272              FPTN=XSC$U_ABORT, LVL=1, LAST=";", STCLASS=BASED,
  273              FNC( REQ=%XSC_FNC_AUABREQ#,
  274                   IND=%XSC_FNC_AUABIND#)=%XSC_FNC_AUABREQ#,
  275              CCID=0,
  276              ABRTSRC=%XSC_ABRTSRC_USER#,
  277              DATA=NIL);
  278      %LSET LISTDIR = '0'B;
  279      %LSET LISTEXP = '1'B;
  280      %LSET LISTCOM = '0'B;
  281      %LSET LISTSUB = '1'B;
  282      %LSET STC = SUBSTR( CONCAT( TEXTCHAR(STCLASS), '   '), 0, 3);
  283      %IF ( STC = 'STA') OR ( STC = 'CON') OR ( STC = 'EXT');
  284          %LSET INIT = CHARTEXT( ' INIT');
  285          %LSET ENIT = CHARTEXT( '');
  286      %ELSE;
  287          %LSET INIT = CHARTEXT( '/*');
  288          %LSET ENIT = CHARTEXT( '*/');
  289      %ENDIF;
  290      %IF LENGTHC( 'FPTN') = 0;
  291          %LSET LVL = LVL - 1;
  292      %ELSE;
  293          %IF LVL = 1;
  294              DCL 1 FPTN STCLASS ALIGNED,
  295          %ELSE;
  296              %LVL FPTN,
10:39 OCT 01 '97 XSC_ACSE_M.:XSA1SI                                        9    
  297          %ENDIF;
  298      %ENDIF;
  299      %LSET LVL1 = LVL + 1;
  300
  301          %LVL1 %CHARTEXT( 'FNC') UBIN BYTE %INIT( FNC)%ENIT CALIGNED,
  302          %LVL1 %CHARTEXT( 'CCID') UBIN BYTE %INIT( CCID)%ENIT CALIGNED,
  303          %LVL1 %CHARTEXT( 'ABRTSRC') UBIN BYTE %INIT( ABRTSRC)%ENIT CALIGNED,
  304          %LVL1 %CHARTEXT( '*') UBIN BYTE %INIT( 0)%ENIT CALIGNED,
  305          %LVL1 %CHARTEXT( 'ERRDEF') BIT(36) %INIT( %XSC_RDONLYFPT#)%ENIT ALIGNED,
  306          %XSC$$ERRCODE( NAME=ERROR, LVL=%LVL1, LAST=",", STCLASS="REDEF ERRDEF");
  307          %LVL1 %CHARTEXT( 'DATA$') PTR %INIT( ADDR( NIL))%ENIT LAST
  308      %MEND;

