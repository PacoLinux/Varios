VERSION E05

PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:1    
        1        1        /*M* VPE$COPY This module contains routines common to COPY type commands      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=1,THI=1  */
        8        8        /* Next available error code = 80  (by 10's)  */
        9        9        VPE$COPY: PROC;
       10       10        /*D* NAME: VPE$COPY
       11       11             CALL: CALL VPE$COPY;
       12       12             DESCRIPTION: COPY drives the COPY command. It gets the first input file,
       13       13                          OPENs the output file, and if no errors occur, goes into a
       14       14                          loop which copies in to out, closes in, gets next in.
       15       15        */
       16       16        %INCLUDE VP_DATA_R;
       17     7003        %INCLUDE B_ERRORS_C;
       18     8130        %INCLUDE F$DCB;
       19     8179        %INCLUDE B$JIT;
       20     8469        %INCLUDE FM$FIT;
       21     8690        %CODE03;
       22     8697        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
       23     8742        %FPT_OPEN(FPTN = FPT_OPEN_EI_DEFAULT,
       24     8743                  TEST = NO,
       25     8744                  DCB = M$EI,
       26     8745                  STCLASS = STATIC);
       27     8854    1   DCL CODE03$ PTR;
       28     8855    1   DCL COP_MSG CHAR(0) CONSTANT INIT('..COPYing');
       29     8856    1   DCL COPY_ERROR_FLAG SBIN WORD;
       30     8857    1   DCL STARTED SBIN WORD;
       31     8858    1   DCL RET_VAL SBIN WORD;
       32     8859    1   DCL OPEN_NEXT_RET_VAL SBIN WORD;
       33     8860    1   DCL PTR$ PTR;
       34     8861    1   DCL SOURCELIST$ PTR;
       35     8862    1   DCL OUTSPEC$ PTR;
       36     8863    1   DCL IDX SBIN WORD;
       37     8864        /**/
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:2    
       38     8865        /*  ENTRY DCLS  */
       39     8866        /**/
       40     8867        %VP_ENTRIES (OMIT=VPE$COPY);
       41     9075    1   DCL XSF$LOCCODP ENTRY (2) ALTRET;
       42     9076        /**/
       43     9077    1           REMEMBER ABORT_COPY IN ABORT_CMD;
       44     9078    1           REMEMBER ABORT_COPY IN BREAK_LOC;
       45     9079    1           STARTED = 0;
       46     9080    1           SOURCELIST$ = ADDR(NIL);
       47     9081    1           OUTSPEC$ = ADDR(NIL);
       48     9082    2           DO IDX=0 TO PCB.OUT$->OUT$BLK.NSUBLKS-1;
       49     9083    2              PTR$ = PCB.OUT$->OUT$BLK.SUBLK$(IDX);
       50     9084    3              DO CASE(PTR$->OUT$BLK.CODE);
       51     9085    3               CASE(1);                    /* SOURCELIST                         */
       52     9086    3                 SOURCELIST$ = PTR$;
       53     9087    3               CASE(2);                    /* OUTSPEC                            */
       54     9088    3                 OUTSPEC$ = PTR$;
       55     9089    3               CASE(3);                    /* FROM 'FID'                         */
       56     9090    3                 CALL VPF$SET_FROM_INFO(PTR$->OUT$BLK.SUBLK$(0));
       57     9091    3               END;                        /* END CASE                           */
       58     9092    2              END;
       59     9093    1           COPY_ERROR_FLAG = 0;            /* NO COPY ERRORS SO FAR              */
       60     9094    1           OPEN_NEXT_RET_VAL = %VPOC_EXHAUSTED#;
       61     9095    1           CALL VPF$GET_NEXT_SPEC(RET_VAL,SOURCELIST$);
       62     9096    1           GOTO FIRST_TIME;
       63     9097    2   DUM1:   DO WHILE('1'B);                 /* DO FOREVER                         */
       64     9098    3              DO WHILE(OPEN_NEXT_RET_VAL=%VPOC_EXHAUSTED#);
       65     9099    3                 CALL VPF$GET_NEXT_SPEC(RET_VAL);
       66     9100    4   FIRST_TIME:   DO CASE(RET_VAL);
       67     9101    4                  CASE(0);                 /* No errors, new SPEC exists         */
       68     9102    4                    CALL VPF$OPEN_NEXT(OPEN_NEXT_RET_VAL,4);
       69     9103    4                  CASE(1);                 /* No more SOURCELIST                 */
       70     9104    4                    IF STARTED=0
       71     9105    5                     THEN DO;
       72     9106    5                        IF ~ERR_FLG
       73     9107    5                         THEN
       74     9108    5                           CALL VPL$ERR_PROC(1,10,'05'O); /* NOTHING TO COPY     */
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:3    
       75     9109        /*E* ERROR:   VPE-00010
       76     9110             MESSAGE: Nothing to copy
       77     9111            MESSAGE1: No files were acceptable to copy in that input spec
       78     9112        */
       79     9113    5                        END;
       80     9114    4                     ELSE
       81     9115    5                     DO;                   /* NO MORE FILES TO COPY              */
       82     9116    5                        REMEMBER ABORT_COPY IN ABORT_STEP; /* 'case CLOSE dies   */
       83     9117    5                        CALL VPD$CLOSE_OUT(COPY_ERROR_FLAG);
       84     9118    5                        EO_OCB = OCB;      /* SAVE FOR POSSIBLE EXTENSION        */
       85     9119    5                        CALL VPD$MINIMIZE_BUF;
       86     9120    5                        END;
       87     9121    4                    RETURN;
       88     9122    4                  CASE(2);                 /* ERROR                              */
       89     9123    4                    CALL VPL$ERR_SEV_HANDLER(3); /* Abort command                */
       90     9124    4                  END;                     /* END CASE                           */
       91     9125    3                 REMEMBER COPY_STEP_ABORT IN ABORT_STEP;
       92     9126    3                 END;
       93     9127    2              IF NOT M$EI$ -> F$DCB.FCD
       94     9128    2               THEN                        /* Gotta do a REAL OPEN               */
       95     9129    3               DO;
       96     9130    3                  CALL VPF$CALL_OPEN (FPT_OPEN_EI_DEFAULT)
       97     9131    4                   WHENALTRETURN DO;
       98     9132    4                      CALL VPL$ERR_PROC(3,0,,INPUT_ERR,,,M$EI#); /* Abort cmnd   */
       99     9133    4                      END;                 /*  END ALTRETURN                     */
      100     9134    3                  END;
      101     9135    2              NRECS_IN_COPY_FILE = -1;
      102     9136    2              IF ICB.FLAVOR.MANAGED
      103     9137    3               THEN DO;
      104     9138    3                  CODE03$ = FPARAM$;
      105     9139    3                  CALL XSF$LOCCODP (CODE03$, 3)
      106     9140    4                   WHENRETURN DO;
      107     9141    4                      NRECS_IN_COPY_FILE = CODE03$ -> CODE03.NRECS;
      108     9142    4                      END;
      109     9143    3                  END;
      110     9144    2              IF STARTED=0
      111     9145    2               THEN                        /* This is the first file to be       */
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:4    
      112     9146                                                /* copied, so set things up           */
      113     9147    3               DO;
      114     9148    3                  CALL VPC$SETOUT(OUTSPEC$); /* Prepare & open output file       */
      115     9149    3                  CALL VPG$SET_UP_WRITE;
      116     9150    3                  IF ~M$EI$->F$DCB.DDEV.IC /* IF INPUT not from terminal         */
      117     9151    3                    AND ~M$EO$->F$DCB.DDEV.IC /* AND OUTPUT not to terminal      */
      118     9152    3                    AND B$JIT$ -> B$JIT.MODE = %M_INT# /* AND user HAS a terminal */
      119     9153    3                   THEN                    /* Put out the COPYing message        */
      120     9154    4                   DO;
      121     9155    4                      FPT_WRITE_ME.BUF_ = VECTOR(COP_MSG);
      122     9156    4                      FPT_WRITE_ME.V.DVBYTE.VFC# = %NO#;
      123     9157    4                      CALL M$WRITE(FPT_WRITE_ME);
      124     9158    4                      END;
      125     9159    3                  STARTED = 1;
      126     9160    3                  END;
      127     9161    3              CALL VPE$READ_WRITE WHENALTRETURN DO; END; /* Do the copy          */
      128     9162    2              CALL VPF$CLOSE_IN(1)
      129     9163    3               WHENALTRETURN DO;
      130     9164    3                  CALL VPL$ERR_PROC(3,0,,INPUT_ERR);
      131     9165    3                  END;
      132     9166    2   NEXT_FILE: CALL VPF$OPEN_NEXT(OPEN_NEXT_RET_VAL,1);
      133     9167    2              END;
      134     9168    1   COPY_STEP_ABORT: COPY_ERROR_FLAG = 1;   /* A COPY ERROR HAS OCCURRED          */
      135     9169    1           IF ERR_SAVE_REL = 2 AND OCB.ERR_SAVE =0 /* Should we keep the file    */
      136     9170    1            THEN                           /* Don't bother to finish the COPY,   */
      137     9171                                                /* we're going to scratch it anyway   */
      138     9172    1              GOTO ABORT_COPY;
      139     9173    1           IF M$EI$->F$DCB.FCD
      140     9174    1            THEN
      141     9175    1              CALL VPF$CLOSE_IN(1) ALTRET(ALT_C1);
      142     9176    1           GOTO NEXT_FILE;
      143     9177    1   ALT_C1: IF ~M$EO$->F$DCB.FCD
      144     9178    1            THEN
      145     9179    1              GOTO NEXT_FILE;              /* Don't keep closing M$EO            */
      146     9180    1   ABORT_COPY: IF M$EI$->F$DCB.FCD
      147     9181    1            THEN
      148     9182    1              CALL VPF$CLOSE_IN(1) ALTRET(ALT_C2);
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:5    
      149     9183    1           EO_OCB = '0'O;        /* This tells VPC$SETOUT to default dest to ME  */
      150     9184    1   ALT_C2: IF M$EO$->F$DCB.FCD
      151     9185    1            THEN
      152     9186    1              CALL VPD$CLOSE_OUT(1);       /* close with error                   */
      153     9187    1           CALL VPD$MINIMIZE_BUF;
      154     9188    1           RETURN;
      155     9189    1   END VPE$COPY;
      156     9190        %EOD;

PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:6    
--  Include file information  --

   FM$FIT.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPE$COPY.

   Procedure VPE$COPY requires 267 words for executable code.
   Procedure VPE$COPY requires 20 words of local(AUTO) storage.

PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:7    

 Object Unit name= VPE$COPY                                   File name= VPE$COPY.:E05TOU
 UTS= JUL 30 '97 07:24:56.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10   Data  even  none    58     72  VPE$COPY
   11  RoData even  UTS      3      3  VPE$COPY
   12   Proc  even  none   267    413  VPE$COPY
   13  RoData even  none    15     17  VPE$COPY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        0  VPE$COPY
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:8    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 VPF$SET_FROM_INFO
         yes           Std       2 VPF$GET_NEXT_SPEC
         yes           Std       3 VPF$OPEN_NEXT
         yes           Std       8 VPL$ERR_PROC
         yes           Std       1 VPD$CLOSE_OUT
         yes           Std       0 VPD$MINIMIZE_BUF
 yes     yes           Std       1 VPF$CALL_OPEN
         yes           Std       1 VPC$SETOUT
 yes     yes           Std       0 VPE$READ_WRITE
 yes     yes           Std       1 VPF$CLOSE_IN
 yes     yes           Std       2 XSF$LOCCODP
         yes           Std       0 VPG$SET_UP_WRITE
         yes           Std       8 VPL$ERR_SEV_HANDLER
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  PCB                                   INPUT_ERR
     ERR_FLG                               ABORT_STEP                            ABORT_CMD
     ERR_SAVE_REL                          BREAK_LOC                             BREAK_MESSAGE_REPORTER
     FPARAM$                               SPEC_BUF                              OCB
     EO_OCB                                IN_RES                                ICB
     NRECS_IN_COPY_FILE                    M$EI                                  M$EI$
     M$EI#                                 M$EO                                  M$EO$
     M$EO1                                 M$ME                                  M$SI
     M$READFILE                            M$DO                                  M$STD1
     M$SORT1                               B$JIT$                                FPT_WRITE_ME
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:10   


        1        1        /*M* VPE$COPY This module contains routines common to COPY type commands      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=1,THI=1  */
        8        8        /* Next available error code = 80  (by 10's)  */
        9        9        VPE$COPY: PROC;

      9 12 000000   000000 700200 xent  VPE$COPY     TSX0  ! X66_AUTO_0
        12 000001   000024 000000                    ZERO    20,0

       10       10        /*D* NAME: VPE$COPY
       11       11             CALL: CALL VPE$COPY;
       12       12             DESCRIPTION: COPY drives the COPY command. It gets the first input file,
       13       13                          OPENs the output file, and if no errors occur, goes into a
       14       14                          loop which copies in to out, closes in, gets next in.
       15       15        */
       16       16        %INCLUDE VP_DATA_R;
       17     7003        %INCLUDE B_ERRORS_C;
       18     8130        %INCLUDE F$DCB;
       19     8179        %INCLUDE B$JIT;
       20     8469        %INCLUDE FM$FIT;
       21     8690        %CODE03;
       22     8697        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
       23     8742        %FPT_OPEN(FPTN = FPT_OPEN_EI_DEFAULT,
       24     8743                  TEST = NO,
       25     8744                  DCB = M$EI,
       26     8745                  STCLASS = STATIC);
       27     8854    1   DCL CODE03$ PTR;
       28     8855    1   DCL COP_MSG CHAR(0) CONSTANT INIT('..COPYing');
       29     8856    1   DCL COPY_ERROR_FLAG SBIN WORD;
       30     8857    1   DCL STARTED SBIN WORD;
       31     8858    1   DCL RET_VAL SBIN WORD;
       32     8859    1   DCL OPEN_NEXT_RET_VAL SBIN WORD;
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:11   
       33     8860    1   DCL PTR$ PTR;
       34     8861    1   DCL SOURCELIST$ PTR;
       35     8862    1   DCL OUTSPEC$ PTR;
       36     8863    1   DCL IDX SBIN WORD;
       37     8864        /**/
       38     8865        /*  ENTRY DCLS  */
       39     8866        /**/
       40     8867        %VP_ENTRIES (OMIT=VPE$COPY);
       41     9075    1   DCL XSF$LOCCODP ENTRY (2) ALTRET;
       42     9076        /**/
       43     9077    1           REMEMBER ABORT_COPY IN ABORT_CMD;

   9077 12 000002   000364 635000 12                 EAA     ABORT_COPY
        12 000003   000000 452400 xsym               STP2    ABORT_CMD
        12 000004   000001 755000 xsym               STA     ABORT_CMD+1

       44     9078    1           REMEMBER ABORT_COPY IN BREAK_LOC;

   9078 12 000005   000364 635000 12                 EAA     ABORT_COPY
        12 000006   000000 452400 xsym               STP2    BREAK_LOC
        12 000007   000001 755000 xsym               STA     BREAK_LOC+1

       45     9079    1           STARTED = 0;

   9079 12 000010   200005 450100                    STZ     STARTED,,AUTO

       46     9080    1           SOURCELIST$ = ADDR(NIL);

   9080 12 000011   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000012   200011 756100                    STQ     SOURCELIST$,,AUTO

       47     9081    1           OUTSPEC$ = ADDR(NIL);

   9081 12 000013   200012 756100                    STQ     OUTSPEC$,,AUTO

       48     9082    2           DO IDX=0 TO PCB.OUT$->OUT$BLK.NSUBLKS-1;

PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:12   
   9082 12 000014   200013 450100                    STZ     IDX,,AUTO
        12 000015   000046 710000 12                 TRA     s:9092+1

       49     9083    2              PTR$ = PCB.OUT$->OUT$BLK.SUBLK$(IDX);

   9083 12 000016   000003 470400 xsym               LDP0    PCB+3
        12 000017   200013 720100                    LXL0    IDX,,AUTO
        12 000020   000003 236110                    LDQ     3,X0,PR0
        12 000021   200010 756100                    STQ     PTR$,,AUTO

       50     9084    3              DO CASE(PTR$->OUT$BLK.CODE);

   9084 12 000022   200010 471500                    LDP1    PTR$,,AUTO
        12 000023   100000 721100                    LXL1    0,,PR1
        12 000024   000004 101003                    CMPX1   4,DU
        12 000025   000027 602011 12                 TNC     s:9084+5,X1
        12 000026   000045 710000 12                 TRA     s:9092
        12 000027   000045 710000 12                 TRA     s:9092
        12 000030   000033 710000 12                 TRA     s:9086
        12 000031   000035 710000 12                 TRA     s:9088
        12 000032   000037 710000 12                 TRA     s:9090

       51     9085    3               CASE(1);                    /* SOURCELIST                         */

       52     9086    3                 SOURCELIST$ = PTR$;

   9086 12 000033   200011 756100                    STQ     SOURCELIST$,,AUTO
        12 000034   000045 710000 12                 TRA     s:9092

       53     9087    3               CASE(2);                    /* OUTSPEC                            */

       54     9088    3                 OUTSPEC$ = PTR$;

   9088 12 000035   200012 756100                    STQ     OUTSPEC$,,AUTO
        12 000036   000045 710000 12                 TRA     s:9092

       55     9089    3               CASE(3);                    /* FROM 'FID'                         */
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:13   

       56     9090    3                 CALL VPF$SET_FROM_INFO(PTR$->OUT$BLK.SUBLK$(0));

   9090 12 000037   000003 036003                    ADLQ    3,DU
        12 000040   200014 756100                    STQ     IDX+1,,AUTO
        12 000041   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000042   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000043   000000 701000 xent               TSX1    VPF$SET_FROM_INFO
        12 000044   000000 011000                    NOP     0

       57     9091    3               END;                        /* END CASE                           */

       58     9092    2              END;

   9092 12 000045   200013 054100                    AOS     IDX,,AUTO
        12 000046   000003 470400 xsym               LDP0    PCB+3
        12 000047   000001 236100                    LDQ     1,,PR0
        12 000050   000022 772000                    QRL     18
        12 000051   200013 116100                    CMPQ    IDX,,AUTO
        12 000052   000016 605400 12                 TPNZ    s:9083

       59     9093    1           COPY_ERROR_FLAG = 0;            /* NO COPY ERRORS SO FAR              */

   9093 12 000053   200004 450100                    STZ     COPY_ERROR_FLAG,,AUTO

       60     9094    1           OPEN_NEXT_RET_VAL = %VPOC_EXHAUSTED#;

   9094 12 000054   000001 235007                    LDA     1,DL
        12 000055   200007 755100                    STA     OPEN_NEXT_RET_VAL,,AUTO

       61     9095    1           CALL VPF$GET_NEXT_SPEC(RET_VAL,SOURCELIST$);

   9095 12 000056   200011 631500                    EPPR1   SOURCELIST$,,AUTO
        12 000057   200015 451500                    STP1    IDX+2,,AUTO
        12 000060   200006 633500                    EPPR3   RET_VAL,,AUTO
        12 000061   200014 453500                    STP3    IDX+1,,AUTO
        12 000062   200014 630500                    EPPR0   IDX+1,,AUTO
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:14   
        12 000063   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000064   000000 701000 xent               TSX1    VPF$GET_NEXT_SPEC
        12 000065   000000 011000                    NOP     0

       62     9096    1           GOTO FIRST_TIME;

   9096 12 000066   000100 710000 12                 TRA     FIRST_TIME

       63     9097    2   DUM1:   DO WHILE('1'B);                 /* DO FOREVER                         */

   9097 12 000067                       DUM1         null
       64     9098    3              DO WHILE(OPEN_NEXT_RET_VAL=%VPOC_EXHAUSTED#);

   9098 12 000067   200007 235100                    LDA     OPEN_NEXT_RET_VAL,,AUTO
        12 000070   000001 115007                    CMPA    1,DL
        12 000071   000165 601000 12                 TNZ     s:9127

       65     9099    3                 CALL VPF$GET_NEXT_SPEC(RET_VAL);

   9099 12 000072   200006 630500                    EPPR0   RET_VAL,,AUTO
        12 000073   200014 450500                    STP0    IDX+1,,AUTO
        12 000074   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000075   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000076   000000 701000 xent               TSX1    VPF$GET_NEXT_SPEC
        12 000077   000000 011000                    NOP     0

       66     9100    4   FIRST_TIME:   DO CASE(RET_VAL);

   9100 12 000100   200006 235100       FIRST_TIME   LDA     RET_VAL,,AUTO
        12 000101   000003 115007                    CMPA    3,DL
        12 000102   000104 602005 12                 TNC     FIRST_TIME+4,AL
        12 000103   000157 710000 12                 TRA     s:9125
        12 000104   000107 710000 12                 TRA     s:9102
        12 000105   000120 710000 12                 TRA     s:9104
        12 000106   000153 710000 12                 TRA     s:9123

       67     9101    4                  CASE(0);                 /* No errors, new SPEC exists         */
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:15   

       68     9102    4                    CALL VPF$OPEN_NEXT(OPEN_NEXT_RET_VAL,4);

   9102 12 000107   000000 236000 13                 LDQ     0
        12 000110   200015 756100                    STQ     IDX+2,,AUTO
        12 000111   200007 630500                    EPPR0   OPEN_NEXT_RET_VAL,,AUTO
        12 000112   200014 450500                    STP0    IDX+1,,AUTO
        12 000113   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000114   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000115   000000 701000 xent               TSX1    VPF$OPEN_NEXT
        12 000116   000000 011000                    NOP     0
        12 000117   000157 710000 12                 TRA     s:9125

       69     9103    4                  CASE(1);                 /* No more SOURCELIST                 */

       70     9104    4                    IF STARTED=0

   9104 12 000120   200005 236100                    LDQ     STARTED,,AUTO
        12 000121   000133 601000 12                 TNZ     s:9116

       71     9105    5                     THEN DO;

       72     9106    5                        IF ~ERR_FLG

   9106 12 000122   000000 236000 xsym               LDQ     ERR_FLG
        12 000123   400000 376003                    ANQ     -131072,DU
        12 000124   400000 676003                    ERQ     -131072,DU
        12 000125   000152 600000 12                 TZE     s:9121

       73     9107    5                         THEN
       74     9108    5                           CALL VPL$ERR_PROC(1,10,'05'O); /* NOTHING TO COPY     */

   9108 12 000126   000002 630400 13                 EPPR0   2
        12 000127   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000130   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000131   000000 011000                    NOP     0

PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:16   
       75     9109        /*E* ERROR:   VPE-00010
       76     9110             MESSAGE: Nothing to copy
       77     9111            MESSAGE1: No files were acceptable to copy in that input spec
       78     9112        */
       79     9113    5                        END;

   9113 12 000132   000152 710000 12                 TRA     s:9121

       80     9114    4                     ELSE
       81     9115    5                     DO;                   /* NO MORE FILES TO COPY              */

       82     9116    5                        REMEMBER ABORT_COPY IN ABORT_STEP; /* 'case CLOSE dies   */

   9116 12 000133   000364 635000 12                 EAA     ABORT_COPY
        12 000134   000000 452400 xsym               STP2    ABORT_STEP
        12 000135   000001 755000 xsym               STA     ABORT_STEP+1

       83     9117    5                        CALL VPD$CLOSE_OUT(COPY_ERROR_FLAG);

   9117 12 000136   200004 630500                    EPPR0   COPY_ERROR_FLAG,,AUTO
        12 000137   200014 450500                    STP0    IDX+1,,AUTO
        12 000140   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000141   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000142   000000 701000 xent               TSX1    VPD$CLOSE_OUT
        12 000143   000000 011000                    NOP     0

       84     9118    5                        EO_OCB = OCB;      /* SAVE FOR POSSIBLE EXTENSION        */

   9118 12 000144   000000 100400                    MLR     fill='000'O
        12 000145   000000 001370 xsym               ADSC9   OCB                      cn=0,n=760
        12 000146   000000 001370 xsym               ADSC9   EO_OCB                   cn=0,n=760

       85     9119    5                        CALL VPD$MINIMIZE_BUF;

   9119 12 000147   000002 631400 xsym               EPPR1   B_VECTNIL+2
        12 000150   000000 701000 xent               TSX1    VPD$MINIMIZE_BUF
        12 000151   000000 011000                    NOP     0
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:17   

       86     9120    5                        END;

       87     9121    4                    RETURN;

   9121 12 000152   000000 702200 xent               TSX2  ! X66_ARET

       88     9122    4                  CASE(2);                 /* ERROR                              */

       89     9123    4                    CALL VPL$ERR_SEV_HANDLER(3); /* Abort command                */

   9123 12 000153   000005 630400 13                 EPPR0   5
        12 000154   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000155   000000 701000 xent               TSX1    VPL$ERR_SEV_HANDLER
        12 000156   000000 011000                    NOP     0

       90     9124    4                  END;                     /* END CASE                           */

       91     9125    3                 REMEMBER COPY_STEP_ABORT IN ABORT_STEP;

   9125 12 000157   000336 635000 12                 EAA     COPY_STEP_ABORT
        12 000160   000000 452400 xsym               STP2    ABORT_STEP
        12 000161   000001 755000 xsym               STA     ABORT_STEP+1

       92     9126    3                 END;

   9126 12 000162   200007 236100                    LDQ     OPEN_NEXT_RET_VAL,,AUTO
        12 000163   000001 116007                    CMPQ    1,DL
        12 000164   000072 600000 12                 TZE     s:9099

       93     9127    2              IF NOT M$EI$ -> F$DCB.FCD

   9127 12 000165   000000 470400 xsym               LDP0    M$EI$
        12 000166   000031 236100                    LDQ     25,,PR0
        12 000167   020000 316007                    CANQ    8192,DL
        12 000170   000214 601000 12                 TNZ     s:9135

PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:18   
       94     9128    2               THEN                        /* Gotta do a REAL OPEN               */
       95     9129    3               DO;

       96     9130    3                  CALL VPF$CALL_OPEN (FPT_OPEN_EI_DEFAULT)

   9130 12 000171   000006 630400 13                 EPPR0   6
        12 000172   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000173   000000 701000 xent               TSX1    VPF$CALL_OPEN
        12 000174   000176 702000 12                 TSX2    s:9132
        12 000175   000214 710000 12                 TRA     s:9135

       97     9131    4                   WHENALTRETURN DO;

       98     9132    4                      CALL VPL$ERR_PROC(3,0,,INPUT_ERR,,,M$EI#); /* Abort cmnd   */

   9132 12 000176   000007 236000 13                 LDQ     7
        12 000177   200022 756100                    STQ     IDX+7,,AUTO
        12 000200   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000201   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000202   200020 757100                    STAQ    IDX+5,,AUTO
        12 000203   000010 236000 13                 LDQ     8
        12 000204   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000205   200016 757100                    STAQ    IDX+3,,AUTO
        12 000206   000012 237000 13                 LDAQ    10
        12 000207   200014 757100                    STAQ    IDX+1,,AUTO
        12 000210   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000211   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 000212   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000213   000000 011000                    NOP     0

       99     9133    4                      END;                 /*  END ALTRETURN                     */

      100     9134    3                  END;

      101     9135    2              NRECS_IN_COPY_FILE = -1;

   9135 12 000214   000001 335007                    LCA     1,DL
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:19   
        12 000215   000000 755000 xsym               STA     NRECS_IN_COPY_FILE

      102     9136    2              IF ICB.FLAVOR.MANAGED

   9136 12 000216   000172 236000 xsym               LDQ     ICB+122
        12 000217   000010 316003                    CANQ    8,DU
        12 000220   000236 600000 12                 TZE     s:9144

      103     9137    3               THEN DO;

      104     9138    3                  CODE03$ = FPARAM$;

   9138 12 000221   000000 236000 xsym               LDQ     FPARAM$
        12 000222   200003 756100                    STQ     CODE03$,,AUTO

      105     9139    3                  CALL XSF$LOCCODP (CODE03$, 3)

   9139 12 000223   000005 236000 13                 LDQ     5
        12 000224   200015 756100                    STQ     IDX+2,,AUTO
        12 000225   200003 630500                    EPPR0   CODE03$,,AUTO
        12 000226   200014 450500                    STP0    IDX+1,,AUTO
        12 000227   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000230   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000231   000000 701000 xent               TSX1    XSF$LOCCODP
        12 000232   000236 702000 12                 TSX2    s:9144

      106     9140    4                   WHENRETURN DO;

      107     9141    4                      NRECS_IN_COPY_FILE = CODE03$ -> CODE03.NRECS;

   9141 12 000233   200003 470500                    LDP0    CODE03$,,AUTO
        12 000234   000002 235100                    LDA     2,,PR0
        12 000235   000000 755000 xsym               STA     NRECS_IN_COPY_FILE

      108     9142    4                      END;

      109     9143    3                  END;
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:20   

      110     9144    2              IF STARTED=0

   9144 12 000236   200005 235100                    LDA     STARTED,,AUTO
        12 000237   000303 601000 12                 TNZ     s:9161

      111     9145    2               THEN                        /* This is the first file to be       */
      112     9146                                                /* copied, so set things up           */
      113     9147    3               DO;

      114     9148    3                  CALL VPC$SETOUT(OUTSPEC$); /* Prepare & open output file       */

   9148 12 000240   200012 630500                    EPPR0   OUTSPEC$,,AUTO
        12 000241   200014 450500                    STP0    IDX+1,,AUTO
        12 000242   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000243   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000244   000000 701000 xent               TSX1    VPC$SETOUT
        12 000245   000000 011000                    NOP     0

      115     9149    3                  CALL VPG$SET_UP_WRITE;

   9149 12 000246   000002 631400 xsym               EPPR1   B_VECTNIL+2
        12 000247   000000 701000 xent               TSX1    VPG$SET_UP_WRITE
        12 000250   000000 011000                    NOP     0

      116     9150    3                  IF ~M$EI$->F$DCB.DDEV.IC /* IF INPUT not from terminal         */

   9150 12 000251   000000 470400 xsym               LDP0    M$EI$
        12 000252   000004 236100                    LDQ     4,,PR0
        12 000253   000024 736000                    QLS     20
        12 000254   400000 376003                    ANQ     -131072,DU
        12 000255   400000 676003                    ERQ     -131072,DU
        12 000256   000301 600000 12                 TZE     s:9159
        12 000257   000000 471400 xsym               LDP1    M$EO$
        12 000260   100004 236100                    LDQ     4,,PR1
        12 000261   000024 736000                    QLS     20
        12 000262   400000 376003                    ANQ     -131072,DU
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:21   
        12 000263   400000 676003                    ERQ     -131072,DU
        12 000264   000301 600000 12                 TZE     s:9159
        12 000265   000000 473400 xsym               LDP3    B$JIT$
        12 000266   300000 236100                    LDQ     0,,PR3
        12 000267   740000 376003                    ANQ     -16384,DU
        12 000270   140000 116003                    CMPQ    49152,DU
        12 000271   000301 601000 12                 TNZ     s:9159

      117     9151    3                    AND ~M$EO$->F$DCB.DDEV.IC /* AND OUTPUT not to terminal      */
      118     9152    3                    AND B$JIT$ -> B$JIT.MODE = %M_INT# /* AND user HAS a terminal */
      119     9153    3                   THEN                    /* Put out the COPYing message        */
      120     9154    4                   DO;

      121     9155    4                      FPT_WRITE_ME.BUF_ = VECTOR(COP_MSG);

   9155 12 000272   000014 237000 13                 LDAQ    12
        12 000273   000004 757000 xsym               STAQ    FPT_WRITE_ME+4

      122     9156    4                      FPT_WRITE_ME.V.DVBYTE.VFC# = %NO#;

   9156 12 000274   000016 236000 13                 LDQ     14
        12 000275   000013 356000 xsym               ANSQ    FPT_WRITE_ME+11

      123     9157    4                      CALL M$WRITE(FPT_WRITE_ME);

   9157 12 000276   000000 630400 xsym               EPPR0   FPT_WRITE_ME
        12 000277   040001 713400                    CLIMB   write
        12 000300   401400 401760                    pmme    nvectors=4

      124     9158    4                      END;

      125     9159    3                  STARTED = 1;

   9159 12 000301   000001 235007                    LDA     1,DL
        12 000302   200005 755100                    STA     STARTED,,AUTO

      126     9160    3                  END;
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:22   

      127     9161    3              CALL VPE$READ_WRITE WHENALTRETURN DO; END; /* Do the copy          */

   9161 12 000303   000002 631400 xsym               EPPR1   B_VECTNIL+2
        12 000304   000000 701000 xent               TSX1    VPE$READ_WRITE
        12 000305   000307 702000 12                 TSX2    s:9162
        12 000306   000307 710000 12                 TRA     s:9162

      128     9162    2              CALL VPF$CLOSE_IN(1)

   9162 12 000307   000002 630400 13                 EPPR0   2
        12 000310   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000311   000000 701000 xent               TSX1    VPF$CLOSE_IN
        12 000312   000314 702000 12                 TSX2    s:9164
        12 000313   000325 710000 12                 TRA     NEXT_FILE

      129     9163    3               WHENALTRETURN DO;

      130     9164    3                  CALL VPL$ERR_PROC(3,0,,INPUT_ERR);

   9164 12 000314   000010 236000 13                 LDQ     8
        12 000315   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000316   200016 757100                    STAQ    IDX+3,,AUTO
        12 000317   000012 237000 13                 LDAQ    10
        12 000320   200014 757100                    STAQ    IDX+1,,AUTO
        12 000321   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000322   000022 631400 xsym               EPPR1   B_VECTNIL+18
        12 000323   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000324   000000 011000                    NOP     0

      131     9165    3                  END;

      132     9166    2   NEXT_FILE: CALL VPF$OPEN_NEXT(OPEN_NEXT_RET_VAL,1);

   9166 12 000325   000002 236000 13    NEXT_FILE    LDQ     2
        12 000326   200015 756100                    STQ     IDX+2,,AUTO
        12 000327   200007 630500                    EPPR0   OPEN_NEXT_RET_VAL,,AUTO
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:23   
        12 000330   200014 450500                    STP0    IDX+1,,AUTO
        12 000331   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000332   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000333   000000 701000 xent               TSX1    VPF$OPEN_NEXT
        12 000334   000000 011000                    NOP     0

      133     9167    2              END;

   9167 12 000335   000067 710000 12                 TRA     DUM1

      134     9168    1   COPY_STEP_ABORT: COPY_ERROR_FLAG = 1;   /* A COPY ERROR HAS OCCURRED          */

   9168 12 000336   000001 235007       COPY_STEP_A* LDA     1,DL
        12 000337   200004 755100                    STA     COPY_ERROR_FLAG,,AUTO

      135     9169    1           IF ERR_SAVE_REL = 2 AND OCB.ERR_SAVE =0 /* Should we keep the file    */

   9169 12 000340   000000 236000 xsym               LDQ     ERR_SAVE_REL
        12 000341   000002 116007                    CMPQ    2,DL
        12 000342   000345 601000 12                 TNZ     s:9173
        12 000343   000272 235000 xsym               LDA     OCB+186
        12 000344   000364 600000 12                 TZE     ABORT_COPY

      136     9170    1            THEN                           /* Don't bother to finish the COPY,   */
      137     9171                                                /* we're going to scratch it anyway   */
      138     9172    1              GOTO ABORT_COPY;
      139     9173    1           IF M$EI$->F$DCB.FCD

   9173 12 000345   000000 470400 xsym               LDP0    M$EI$
        12 000346   000031 236100                    LDQ     25,,PR0
        12 000347   020000 316007                    CANQ    8192,DL
        12 000350   000355 600000 12                 TZE     s:9176

      140     9174    1            THEN
      141     9175    1              CALL VPF$CLOSE_IN(1) ALTRET(ALT_C1);

   9175 12 000351   000002 630400 13                 EPPR0   2
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:24   
        12 000352   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000353   000000 701000 xent               TSX1    VPF$CLOSE_IN
        12 000354   000356 702000 12                 TSX2    ALT_C1

      142     9176    1           GOTO NEXT_FILE;

   9176 12 000355   000325 710000 12                 TRA     NEXT_FILE

      143     9177    1   ALT_C1: IF ~M$EO$->F$DCB.FCD

   9177 12 000356   000000 470400 xsym  ALT_C1       LDP0    M$EO$
        12 000357   000031 236100                    LDQ     25,,PR0
        12 000360   000026 736000                    QLS     22
        12 000361   400000 376003                    ANQ     -131072,DU
        12 000362   400000 676003                    ERQ     -131072,DU
        12 000363   000325 601000 12                 TNZ     NEXT_FILE

      144     9178    1            THEN
      145     9179    1              GOTO NEXT_FILE;              /* Don't keep closing M$EO            */
      146     9180    1   ABORT_COPY: IF M$EI$->F$DCB.FCD

   9180 12 000364   000000 470400 xsym  ABORT_COPY   LDP0    M$EI$
        12 000365   000031 236100                    LDQ     25,,PR0
        12 000366   020000 316007                    CANQ    8192,DL
        12 000367   000374 600000 12                 TZE     s:9183

      147     9181    1            THEN
      148     9182    1              CALL VPF$CLOSE_IN(1) ALTRET(ALT_C2);

   9182 12 000370   000002 630400 13                 EPPR0   2
        12 000371   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000372   000000 701000 xent               TSX1    VPF$CLOSE_IN
        12 000373   000377 702000 12                 TSX2    ALT_C2

      149     9183    1           EO_OCB = '0'O;        /* This tells VPC$SETOUT to default dest to ME  */

   9183 12 000374   000000 100400                    MLR     fill='000'O
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:25   
        12 000375   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
        12 000376   000000 001370 xsym               ADSC9   EO_OCB                   cn=0,n=760

      150     9184    1   ALT_C2: IF M$EO$->F$DCB.FCD

   9184 12 000377   000000 470400 xsym  ALT_C2       LDP0    M$EO$
        12 000400   000031 236100                    LDQ     25,,PR0
        12 000401   020000 316007                    CANQ    8192,DL
        12 000402   000407 600000 12                 TZE     s:9187

      151     9185    1            THEN
      152     9186    1              CALL VPD$CLOSE_OUT(1);       /* close with error                   */

   9186 12 000403   000002 630400 13                 EPPR0   2
        12 000404   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000405   000000 701000 xent               TSX1    VPD$CLOSE_OUT
        12 000406   000000 011000                    NOP     0

      153     9187    1           CALL VPD$MINIMIZE_BUF;

   9187 12 000407   000002 631400 xsym               EPPR1   B_VECTNIL+2
        12 000410   000000 701000 xent               TSX1    VPD$MINIMIZE_BUF
        12 000411   000000 011000                    NOP     0

      154     9188    1           RETURN;

   9188 12 000412   000000 702200 xent               TSX2  ! X66_ARET
      155     9189    1   END VPE$COPY;
      156     9190        %EOD;

PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:26   
--  Include file information  --

   FM$FIT.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPE$COPY.
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:27   

 **** Variables and constants ****

  ****  Section 010  Data  VPE$COPY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2088)  r     1 FPT_OPEN_EI_DEFAULT

  ****  Section 011 RoData VPE$COPY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(9)     r     1 COP_MSG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 CODE03$                    4-0-0/w SBIN        r     1 COPY_ERROR_FLAG
    13-0-0/w SBIN        r     1 IDX                        7-0-0/w SBIN        r     1 OPEN_NEXT_RET_VAL
    12-0-0/w PTR         r     1 OUTSPEC$                  10-0-0/w PTR         r     1 PTR$
     6-0-0/w SBIN        r     1 RET_VAL                   11-0-0/w PTR         r     1 SOURCELIST$
     5-0-0/w SBIN        r     1 STARTED

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d REMB        r     1 ABORT_CMD                  0-0-0/d REMB        r     1 ABORT_STEP
     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/d REMB        r     1 BREAK_LOC
     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
     0-0-0/d STRC(6840)  r     1 EO_OCB                     0-0-0/w BIT         r     1 ERR_FLG
     0-0-0/w SBIN        r     1 ERR_SAVE_REL               0-0-0/w PTR         r     1 FPARAM$
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:28   
     0-0-0/d STRC(432)   r     1 FPT_WRITE_ME               0-0-0/d STRC(5868)  r     1 ICB
     0-0-0/w STRC        r     1 INPUT_ERR                  0-0-0/w SBIN        r     1 M$EI#
     0-0-0/w PTR         r     1 M$EI$                      0-0-0/w PTR         r     1 M$EO$
     0-0-0/w SBIN        r     1 NRECS_IN_COPY_FILE         0-0-0/d STRC(6840)  r     1 OCB
     0-0-0/w STRC(504)   r     1 PCB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(324)   r     1 CODE03
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$EI
     0-0-0/w STRC(144)   r     1 OUT$BLK


   Procedure VPE$COPY requires 267 words for executable code.
   Procedure VPE$COPY requires 20 words of local(AUTO) storage.
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:29   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:30   
          MINI XREF LISTING

ABORT_CMD
      5188**DCL      9077<<REMEMBR
ABORT_COPY
      9180**LABEL    9077--REMEMBR  9078--REMEMBR  9116--REMEMBR  9172--GOTO
ABORT_STEP
      5187**DCL      9116<<REMEMBR  9125<<REMEMBR
ALT_C1
      9177**LABEL    9175--CALLALT
ALT_C2
      9184**LABEL    9182--CALLALT
B$JIT.CPFLAGS1.SLEAZE
      8287**DCL      8287--REDEF
B$JIT.ERR.MID
      8194**DCL      8194--REDEF
B$JIT.JRESPEAK
      8355**DCL      8356--REDEF
B$JIT.MODE
      8188**DCL      9150>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
      8464**DCL      8464--REDEF    8465--REDEF
B$JIT.PNR
      8368**DCL      8368--REDEF
B$JIT.TSLINE
      8462**DCL      8463--REDEF
B$JIT$
      5988**DCL      8188--IMP-PTR  9150>>IF
BREAK_LOC
      5223**DCL      5223--REDEF    9078<<REMEMBR
CODE03.NRECS
      8693**DCL      9141>>ASSIGN
CODE03$
      8854**DCL      9138<<ASSIGN   9139<>CALL     9141>>ASSIGN
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:31   
COPY_ERROR_FLAG
      8856**DCL      9093<<ASSIGN   9117<>CALL     9168<<ASSIGN
COPY_STEP_ABORT
      9168**LABEL    9125--REMEMBR
COP_MSG
      8855**DCL      9155--ASSIGN
DEF_ICB.FID.STRING
      5821**DCL      5822--REDEF
DEV_ICB.FID.STRING
      5707**DCL      5708--REDEF
EI_KEY.KEY
      5919**DCL      5919--REDEF    5919--REDEF    5919--REDEF
EO_OCB
      5373**DCL      9118<<ASSIGN   9183<<ASSIGN
EO_OCB.TYPE
      5419**DCL      5420--REDEF
ERR_FLG
      5186**DCL      9106>>IF
ERR_SAVE_REL
      5218**DCL      9169>>IF
F$DCB.ACTPOS
      8156**DCL      8156--REDEF
F$DCB.ARS
      8131**DCL      8131--REDEF
F$DCB.ATTR
      8149**DCL      8150--REDEF
F$DCB.BORROW
      8164**DCL      8164--REDEF    8164--REDEF    8164--REDEF
F$DCB.DCBNAME.L
      8178**DCL      8178--IMP-SIZ
F$DCB.DDEV.IC
      8137**DCL      9150>>IF       9150>>IF
F$DCB.EOMCHAR
      8135**DCL      8135--REDEF
F$DCB.FCD
      8144**DCL      9127>>IF       9173>>IF       9177>>IF       9180>>IF       9184>>IF
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:32   
F$DCB.FLDID
      8159**DCL      8159--REDEF
F$DCB.FORM$
      8153**DCL      8153--REDEF
F$DCB.FSECT
      8169**DCL      8169--REDEF
F$DCB.FSN
      8146**DCL      8146--REDEF    8146--REDEF    8147--REDEF
F$DCB.HEADER$
      8152**DCL      8152--REDEF
F$DCB.IXTNSIZE
      8150**DCL      8150--REDEF
F$DCB.LASTSTA$
      8140**DCL      8140--REDEF
F$DCB.LVL
      8165**DCL      8165--REDEF
F$DCB.NAME.C
      8140**DCL      8140--REDEF
F$DCB.NOEOF
      8161**DCL      8161--REDEF
F$DCB.NRECS
      8151**DCL      8151--REDEF
F$DCB.NRECX
      8170**DCL      8170--REDEF
F$DCB.OHDR
      8162**DCL      8162--REDEF
F$DCB.ORG
      8145**DCL      8145--REDEF
F$DCB.PRECNO
      8168**DCL      8168--REDEF
F$DCB.RCSZ
      8173**DCL      8173--REDEF
F$DCB.RES
      8141**DCL      8141--REDEF
F$DCB.SETX
      8153**DCL      8153--REDEF
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:33   
F$DCB.TAB$
      8152**DCL      8153--REDEF
F$DCB.TDA
      8167**DCL      8167--REDEF
F$DCB.WSN
      8142**DCL      8142--REDEF
FIRST_TIME
      9100**LABEL    9096--GOTO
FPARAM$
      5224**DCL      9138>>ASSIGN
FPT_CLOSE_EI.SN_
      6760**DCL      6760--REDEF
FPT_CLOSE_EI.UTL_
      6761**DCL      6761--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6775**DCL      6775--REDEF
FPT_CLOSE_EI.V.TYPE#
      6773**DCL      6773--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6770**DCL      6770--REDEF    6772--REDEF
FPT_CLOSE_PTL.SN_
      6886**DCL      6886--REDEF
FPT_CLOSE_PTL.UTL_
      6887**DCL      6887--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6901**DCL      6901--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6899**DCL      6899--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6896**DCL      6896--REDEF    6898--REDEF
FPT_CLOSE_READ.SN_
      6802**DCL      6802--REDEF
FPT_CLOSE_READ.UTL_
      6803**DCL      6803--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6817**DCL      6817--REDEF
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:34   
FPT_CLOSE_READ.V.TYPE#
      6815**DCL      6815--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6812**DCL      6812--REDEF    6814--REDEF
FPT_CLOSE_SI.SN_
      6970**DCL      6970--REDEF
FPT_CLOSE_SI.UTL_
      6971**DCL      6971--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      6985**DCL      6985--REDEF
FPT_CLOSE_SI.V.TYPE#
      6983**DCL      6983--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      6980**DCL      6980--REDEF    6982--REDEF
FPT_CLOSE_STD.SN_
      6928**DCL      6928--REDEF
FPT_CLOSE_STD.UTL_
      6929**DCL      6929--REDEF
FPT_CLOSE_STD.V.EXPIRE#
      6943**DCL      6943--REDEF
FPT_CLOSE_STD.V.TYPE#
      6941**DCL      6941--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6938**DCL      6938--REDEF    6940--REDEF
FPT_CLSEI_FT.SN_
      6844**DCL      6844--REDEF
FPT_CLSEI_FT.UTL_
      6845**DCL      6845--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6859**DCL      6859--REDEF
FPT_CLSEI_FT.V.TYPE#
      6857**DCL      6857--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6854**DCL      6854--REDEF    6856--REDEF
FPT_OPEN_EI.ACSVEH_
      6415**DCL      6416--REDEF
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:35   
FPT_OPEN_EI.ALTKEYS_
      6421**DCL      6422--REDEF    6422--REDEF
FPT_OPEN_EI.HDR_
      6420**DCL      6421--REDEF
FPT_OPEN_EI.TAB_
      6419**DCL      6420--REDEF
FPT_OPEN_EI.UHL_
      6413**DCL      6414--REDEF    6414--REDEF
FPT_OPEN_EI.V.FSN#
      6453**DCL      6453--REDEF    6453--REDEF
FPT_OPEN_EI.WSN_
      6419**DCL      6419--REDEF
FPT_OPEN_EI_DEFAULT
      8810**DCL      9130<>CALL
FPT_OPEN_EI_DEFAULT.ACSVEH_
      8812**DCL      8813--REDEF
FPT_OPEN_EI_DEFAULT.ALTKEYS_
      8818**DCL      8819--REDEF    8819--REDEF
FPT_OPEN_EI_DEFAULT.HDR_
      8817**DCL      8818--REDEF
FPT_OPEN_EI_DEFAULT.TAB_
      8816**DCL      8817--REDEF
FPT_OPEN_EI_DEFAULT.UHL_
      8810**DCL      8811--REDEF    8811--REDEF
FPT_OPEN_EI_DEFAULT.V
      8819**DCL      8810--DCLINIT
FPT_OPEN_EI_DEFAULT.V.FSN#
      8850**DCL      8850--REDEF    8850--REDEF
FPT_OPEN_EI_DEFAULT.WSN_
      8816**DCL      8816--REDEF
FPT_OPEN_EI_SAVE.ACSVEH_
      6524**DCL      6525--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
      6530**DCL      6531--REDEF    6531--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6529**DCL      6530--REDEF
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:36   
FPT_OPEN_EI_SAVE.TAB_
      6528**DCL      6529--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6522**DCL      6523--REDEF    6523--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6562**DCL      6562--REDEF    6562--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6528**DCL      6528--REDEF
FPT_OPEN_OUT.ACSVEH_
      6306**DCL      6307--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6312**DCL      6313--REDEF    6313--REDEF
FPT_OPEN_OUT.HDR_
      6311**DCL      6312--REDEF
FPT_OPEN_OUT.TAB_
      6310**DCL      6311--REDEF
FPT_OPEN_OUT.UHL_
      6304**DCL      6305--REDEF    6305--REDEF
FPT_OPEN_OUT.V.FSN#
      6344**DCL      6344--REDEF    6344--REDEF
FPT_OPEN_OUT.WSN_
      6310**DCL      6310--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6197**DCL      6198--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6203**DCL      6204--REDEF    6204--REDEF
FPT_OPEN_OUT_SAVE.HDR_
      6202**DCL      6203--REDEF
FPT_OPEN_OUT_SAVE.TAB_
      6201**DCL      6202--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6195**DCL      6196--REDEF    6196--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
      6235**DCL      6235--REDEF    6235--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6201**DCL      6201--REDEF
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:37   
FPT_READ_STD.STATION_
      6625**DCL      6626--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6637**DCL      6637--REDEF
FPT_READ_STD.V.INDX#
      6635**DCL      6635--REDEF
FPT_READ_UC.STATION_
      6586**DCL      6587--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6598**DCL      6598--REDEF
FPT_READ_UC.V.INDX#
      6596**DCL      6596--REDEF
FPT_WRITE_ME
      6692**DCL      9157<>CALL
FPT_WRITE_ME.BUF_
      6692**DCL      9155<<ASSIGN
FPT_WRITE_ME.STATION_
      6694**DCL      6694--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6701**DCL      6701--REDEF    9156<<ASSIGN
FPT_WRITE_OUT.STATION_
      6725**DCL      6725--REDEF
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6732**DCL      6732--REDEF
FPT_WRITE_UC.STATION_
      6663**DCL      6663--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6670**DCL      6670--REDEF
FROM_SN.SN
      5569**DCL      5570--REDEF
GETCMD.OUT$
      4776**DCL      4782--REDEF
ICB.FID.STRING
      5593**DCL      5594--REDEF
ICB.FLAVOR.MANAGED
      5658**DCL      9136>>IF
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:38   
IDX
      8863**DCL      9082<<DOINDEX  9083>>ASSIGN
IFSFA_PARAM.EOMCHAR#
      5948**DCL      5949--REDEF
IFSFA_PARAM.SIG1
      5942**DCL      5942--REDEF
IFSFA_PARAM.SIG2
      5942**DCL      5943--REDEF
INPUT_ERR
      5108**DCL      9132<>CALL     9164<>CALL
IN_RES
      5515**DCL      5515--REDEF
IN_SN.SN
      5531**DCL      5532--REDEF
M$EI#
      5984**DCL      9132<>CALL
M$EI$
      5984**DCL      9127>>IF       9150>>IF       9173>>IF       9180>>IF
M$EO$
      5984**DCL      9150>>IF       9177>>IF       9184>>IF
M$WRITE
        34**DCL-ENT  9157--CALL
NEXT_FILE
      9166**LABEL    9176--GOTO     9179--GOTO
NRECS_IN_COPY_FILE
      5921**DCL      9135<<ASSIGN   9141<<ASSIGN
OCB
      5231**DCL      9118>>ASSIGN
OCB.ERR_SAVE
      5367**DCL      9169>>IF
OCB.TYPE
      5277**DCL      5278--REDEF
OFSFA_PARAM.EOMCHAR#
      5978**DCL      5979--REDEF
OFSFA_PARAM.SIG1
      5972**DCL      5972--REDEF
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:39   
OFSFA_PARAM.SIG2
      5972**DCL      5973--REDEF
OPEN_NEXT_RET_VAL
      8859**DCL      9094<<ASSIGN   9098>>DOWHILE  9102<>CALL     9166<>CALL
OUT$BLK.CODE
      8711**DCL      9084>>DOCASE
OUT$BLK.NSUBLKS
      8715**DCL      9082>>DOINDEX
OUT$BLK.SUBLK$
      8736**DCL      9083>>ASSIGN   9090<>CALL
OUTSPEC$
      8862**DCL      9081<<ASSIGN   9088<<ASSIGN   9148<>CALL
OUT_SN.SN
      5549**DCL      5550--REDEF
PCB.OUT$
      4590**DCL      9082>>DOINDEX  9083>>ASSIGN
PTR$
      8860**DCL      9083<<ASSIGN   9084>>DOCASE   9086>>ASSIGN   9088>>ASSIGN   9090>>CALL
RET_VAL
      8858**DCL      9095<>CALL     9099<>CALL     9100>>DOCASE
SOURCELIST$
      8861**DCL      9080<<ASSIGN   9086<<ASSIGN   9095<>CALL
SPEC_BUF
      5227**DCL      5227--REDEF
STARTED
      8857**DCL      9079<<ASSIGN   9104>>IF       9144>>IF       9159<<ASSIGN
VPC$SETOUT
      8877**DCL-ENT  9148--CALL
VPD$CLOSE_OUT
      8892**DCL-ENT  9117--CALL     9186--CALL
VPD$MINIMIZE_BUF
      8904**DCL-ENT  9119--CALL     9187--CALL
VPE$READ_WRITE
      8965**DCL-ENT  9161--CALL
VPF$CALL_OPEN
      8972**DCL-ENT  9130--CALL
PL6.E3A0      #001=VPE$COPY File=VPE$COPY.:E05TSI                                WED 07/30/97 07:24 Page:40   
VPF$CLOSE_IN
      8975**DCL-ENT  9162--CALL     9175--CALL     9182--CALL
VPF$GET_NEXT_SPEC
      8978**DCL-ENT  9095--CALL     9099--CALL
VPF$OPEN_NEXT
      8981**DCL-ENT  9102--CALL     9166--CALL
VPF$SET_FROM_INFO
      8987**DCL-ENT  9090--CALL
VPG$SET_UP_WRITE
      8990**DCL-ENT  9149--CALL
VPL$ERR_PROC
      9049**DCL-ENT  9108--CALL     9132--CALL     9164--CALL
VPL$ERR_SEV_HANDLER
      9050**DCL-ENT  9123--CALL
XSF$LOCCODP
      9075**DCL-ENT  9139--CALL

PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:41   
      157        1        /*T***********************************************************/
      158        2        /*T*                                                         */
      159        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      160        4        /*T*                                                         */
      161        5        /*T***********************************************************/
      162        6        VPE$COPYALL: PROC;
      163        7        /*D* NAME: VPE$COPYALL
      164        8             CALL: CALL VPE$COPYALL;
      165        9             DESCRIPTION: This procedure drives the COPYALL and COPYSTD commands.
      166       10        */
      167       11        %INCLUDE VP_DATA_R;
      168     6998        %INCLUDE F$DCB;
      169     7047        %B$TCB;
      170     7050        %B$ALT;
      171     7058        %INCLUDE B_ERRORS_C;
      172     8185        %INCLUDE NK_VFC_C;
      173     8259        %INCLUDE FM$FIT;
      174     8480        %CODE03;
      175     8487        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
      176     8532    1   DCL 1 TEXT$C BASED,
      177     8533    1         2 LEN UBIN BYTE UNAL,
      178     8534    1         2 STRING CHAR(TEXT$C.LEN);
      179     8535    1   DCL X_CHAR CHAR(1);
      180     8536    1   DCL ABORT_AT_END CHAR(0) CONSTANT INIT(%CONCAT(VFC_TRANSITION1,
              8536            'C to continue at end'));
      181     8537    1   DCL ABORT_NOW CHAR(0) CONSTANT INIT(%CONCAT(VFC_TRANSITION1,'C to continue'));
      182     8538        %FPT_OPEN(FPTN = FPT_OPEN_EI_DEFAULT,
      183     8539                  TEST = NO,
      184     8540                  DCB = M$EI,
      185     8541                  STCLASS = CONSTANT);
      186     8650        %FPT_CORRES(FPTN = FPT_CORRES,
      187     8651                    DCB1 = M$ME,
      188     8652                    DCB2 = M$EO1);
      189     8666        %FPT_PFIL(FPTN=FPT_PFIL_EI,
      190     8667                  DCB=M$EI);
      191     8682        %FPT_CLOSE(FPTN = FPT_CLOSE_EO1_REL,
      192     8683                   DCB  = M$EO1,
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:42   
      193     8684                   DISP = SCRATCH,
      194     8685                   STCLASS = CONSTANT);
      195     8727    1   DCL CODE03$ PTR;
      196     8728    1   DCL CRLF_VFC CHAR(1) CONSTANT INIT('a');
      197     8729    1   DCL STEP_ABORT_FLAG SBIN WORD;
      198     8730    1   DCL NEXT_SPEC_RET_VAL SBIN WORD;
      199     8731    1   DCL OPEN_NEXT_RET_VAL SBIN WORD;
      200     8732    1   DCL PTR$ PTR;
      201     8733    1   DCL SOURCELIST$ PTR;
      202     8734    1   DCL OUTSPEC$ PTR;
      203     8735    1   DCL IDX SBIN WORD;
      204     8736        /**/
      205     8737        /*  ENTRY DCLS  */
      206     8738        /**/
      207     8739    1   DCL X$PARSE ENTRY(1) ALTRET;
      208     8740        %VP_ENTRIES (OMIT=VPE$COPYALL);
      209     8948    1   DCL XSF$LOCCODP ENTRY (2) ALTRET;
      210     8949        %INCLUDE XUG_ENTRY;
      211     8980        /**/
      212     8981    1   VPE$COPYSTD: ENTRY;
      213     8982    1           REMEMBER COPYALL_STEP_ABORT IN ABORT_STEP;
      214     8983    1           REMEMBER ABORT_COPYALL IN ABORT_CMD;
      215     8984    1           REMEMBER ABORT_COPYALL IN BREAK_LOC;
      216     8985    1           STEP_ABORT_FLAG = 0;
      217     8986    1           SOURCELIST$ = ADDR(NIL);
      218     8987    1           OUTSPEC$ = ADDR(NIL);
      219     8988    2           DO IDX=0 TO PCB.OUT$->OUT$BLK.NSUBLKS-1;
      220     8989    2              PTR$ = PCB.OUT$->OUT$BLK.SUBLK$(IDX);
      221     8990    3              DO CASE(PTR$->OUT$BLK.CODE);
      222     8991    3               CASE(1);                    /* SOURCELIST                         */
      223     8992    3                 SOURCELIST$ = PTR$;
      224     8993    3               CASE(2);                    /* OUTSPEC                            */
      225     8994    3                 OUTSPEC$ = PTR$;
      226     8995    3               CASE(3);                    /* FROM 'FID'                         */
      227     8996    3                 CALL VPF$SET_FROM_INFO(PTR$->OUT$BLK.SUBLK$(0));
      228     8997    3               CASE(4);                    /* COPYSTD 'FID'                      */
      229     8998    3                 CALL VPD$INIT_STD_FILE(PTR$);
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:43   
      230     8999    3               END;                        /* END CASE                           */
      231     9000    2              END;
      232     9001    1           IF CMD_MASK(3)                  /* IF COPYSTD                         */
      233     9002    1            THEN
      234     9003    2            DO;                            /* Set up parse of STD's SOURCELIST   */
      235     9004    2   COPYSTD_L:                              /* Get a SOURCELIST from STD file     */
      236     9005    2               CALL M$READ(FPT_READ_STD) ALTRET(STD_READ_ALT);
      237     9006    2               PCB.NCHARS = M$STD1$->F$DCB.ARS;
      238     9007    2               CALL X$PARSE(PCB) ALTRET(STD_PARSE_ALT);
      239     9008    2               SOURCELIST$ = PCB.OUT$;
      240     9009    2               END;
      241     9010    1           CALL VPF$GET_NEXT_SPEC(NEXT_SPEC_RET_VAL,SOURCELIST$);
      242     9011    2           DO WHILE(NEXT_SPEC_RET_VAL = 0); /* DO WHILE INPUT SPECs remain       */
      243     9012    2              REMEMBER COPYALL_STEP_ABORT IN ABORT_STEP;
      244     9013    2              IF NEXT_SPEC_RET_VAL=0
      245     9014    2               THEN                        /* All fine, source spec. processed   */
      246     9015    3               DO;
      247     9016    3                  CALL VPF$OPEN_NEXT(OPEN_NEXT_RET_VAL,4); /* OPEN first input   */
      248     9017                                                /* file in new INPUT SPEC             */
      249     9018    4                  DO WHILE(OPEN_NEXT_RET_VAL=%VPOC_GOTFILE#);
      250     9019                                                /* A file is now OPEN or TOPEN        */
      251     9020    4                     NRECS_IN_COPY_FILE = -1;
      252     9021    4                     IF ICB.FLAVOR.MANAGED
      253     9022    5                      THEN DO;
      254     9023    5                         CODE03$ = FPARAM$;
      255     9024    5                         CALL XSF$LOCCODP (CODE03$, 3)
      256     9025    6                          WHENRETURN DO;
      257     9026    6                             NRECS_IN_COPY_FILE = CODE03$ -> CODE03.NRECS;
      258     9027    6                             END;
      259     9028    5                         END;
      260     9029    4                     IF NOT M$EI$ -> F$DCB.FCD
      261     9030    4                      THEN                 /* File is TOPEN                      */
      262     9031    4                        CALL VPF$CALL_OPEN (FPT_OPEN_EI_DEFAULT) /* Really OPEN  */
      263     9032    5                         WHENALTRETURN DO;
              9032                                  /* Whoops - file is probably busy or something */
      264     9033    5                            CALL VPL$ERR_PROC(0,0,,INPUT_ERR,,,M$EI#);
              9033                                     /* Tell the user */
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:44   
      265     9034    5                            GOTO COPYALL_STEP_ABORT; /* and continue             */
      266     9035    5                            END;
      267     9036    4                     CALL VPC$SETOUT(OUTSPEC$); /* Prepare & open output file    */
      268     9037    4                     IF THIS_STD_FILE
      269     9038    4                       AND OCB.FLAVOR.JE
      270     9039    5                      THEN DO;             /* DON'T COPY STD FILE TO JE          */
      271     9040    5                         CALL VPF$CLOSE_IN(1);
      272     9041    5                         CALL VPC$CALL_CLOSE(FPT_CLOSE_EO1_REL); /* Scratch the  */
      273     9042                                                /* STD file copied to JE              */
      274     9043    5                         END;
      275     9044    5                      ELSE DO;
      276     9045    5                         CALL VPG$SET_UP_WRITE;
      277     9046    5                         CALL VPE$READ_WRITE
      278     9047    6                          WHENALTRETURN DO;
      279     9048    6                             OPEN_NEXT_RET_VAL = 1; /* Force loop exit           */
      280     9049    6                             END;
      281     9050    5                         IF M$EI$->F$DCB.FCD
      282     9051    5                          THEN
      283     9052    5                            CALL VPF$CLOSE_IN(1) ALTRET(COPYALL_STEP_ABORT);
      284     9053    5                         CALL VPD$CLOSE_OUT(0); /* Close with save               */
      285     9054    5                         CALL M$CORRES(FPT_CORRES) ALTRET(COPIED_OK);
      286     9055    5                         IF OCB.FLAVOR.MANAGED
      287     9056    5                          THEN
      288     9057    5                            CALL VPD$OUT_NAMES(DIN_NAME,M$EO1$->F$DCB.NAME);
      289     9058                                      /* Put out both filenames...if the name changed */
      290     9059    5                          ELSE
      291     9060    5                            CALL VPD$OUT_NAMES(DIN_NAME,0);
      292     9061                                      /* Don't put out the second filename unless to  */
      293     9062                                                /* managed place                      */
      294     9063    5                         END;
      295     9064    4   COPIED_OK:        ;
      296     9065    4                     CALL VPD$COUNTER_BUMP(0);
      297     9066    4   NEXT_FILE:
      298     9067    4                     IF M$EI$->F$DCB.FCD
      299     9068    4                      THEN
      300     9069    4                        CALL VPF$CLOSE_IN(1) ALTRET(COPYALL_STEP_ABORT);
      301     9070    4                     THIS_STD_FILE = '0'B; /* No longer working on STD file      */
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:45   
      302     9071    4                     IF OLD_BREAKS>0 OR BREAKS>0
      303     9072    4                      THEN
      304     9073    5                      DO;
      305     9074    5                         BREAK_MESSAGE_REPORTER = ENTADDR(VPE$BREAK_IN_COPYALL);
      306     9075    5                         REMEMBER ABORT_COPYALL IN BREAK_LOC;
      307     9076    5                         CALL XUG$SIMULATE_BREAK (GETCMD);
      308     9077    5                         BREAKS = 0;
      309     9078    5                         OLD_BREAKS = 0;
      310     9079    5                         END;
      311     9080    4                     IF OPEN_NEXT_RET_VAL ~= 1
      312     9081    4                      THEN
      313     9082    4                        CALL VPF$OPEN_NEXT(OPEN_NEXT_RET_VAL,5); /* OPEN next input */
      314     9083                                                /* file in INPUT SPEC                 */
      315     9084    4                     END;
      316     9085    3                  END;
      317     9086    2              CALL VPF$GET_NEXT_SPEC(NEXT_SPEC_RET_VAL);
      318     9087    2              END;                         /* End WHILE files remain             */
      319     9088    1           IF CMD_MASK(3)                  /* IF COPYSTD                         */
      320     9089    1            THEN
      321     9090    1              GOTO COPYSTD_L;              /* Get next SOURCELIST from STD file  */
      322     9091    1   ABORT_COPYALL:
      323     9092    1           CALL VPD$FINISH_NLIST;          /* Finish dangling name list          */
      324     9093    1           CALL VPD$MINIMIZE_BUF;
      325     9094    1           IF M$EI$->F$DCB.FCD
      326     9095    1            THEN
      327     9096    2            DO;
      328     9097    2               IF ~M$EI$->F$DCB.TYC.EOD(1) AND ICB.FLAVOR.FFTAPE
      329     9098    2                THEN
      330     9099    2                  CALL M$PFIL(FPT_PFIL_EI) ALTRET(CHK_EO1);
      331     9100    2               CALL VPF$CLOSE_IN(1) ALTRET(CHK_EO1);
      332     9101    2               END;
      333     9102    1   CHK_EO1:IF M$EO1$->F$DCB.FCD
      334     9103    1            THEN
      335     9104    1              CALL VPD$CLOSE_OUT(1);       /* Close with error                   */
      336     9105    1           IF STEP_ABORT_FLAG=1
      337     9106    1            THEN
      338     9107    2            DO;
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:46   
      339     9108    2               STEP_ABORT_FLAG = 0;
      340     9109    2               GOTO NEXT_FILE;
      341     9110    2               END;
      342     9111    1           IF M$STD1$->F$DCB.FCD
      343     9112    1            THEN
      344     9113    1              CALL M$CLOSE(FPT_CLOSE_STD) ALTRET(ABORT_RET);
      345     9114    1   ABORT_RET: ;
      346     9115    1           CALL VPD$COUNTER_PRINT(0);
      347     9116    1           IF TOT_FILES(0) = 0 THEN
      348     9117    1              CALL VPL$ERR_NO_PRINT(1,0,0,0);
      349     9118    1           RETURN;
      350     9119    1   COPYALL_STEP_ABORT:
      351     9120    1           STEP_ABORT_FLAG = 1;
      352     9121    1           GOTO ABORT_COPYALL;
      353     9122    1   STD_READ_ALT:
      354     9123    1           IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF
      355     9124    1            THEN
      356     9125    1              GOTO ABORT_COPYALL;
      357     9126    1            ELSE
      358     9127    1              CALL VPL$ERR_PROC(3,0);
      359     9128    1   STD_PARSE_ALT:
      360     9129    1           CALL VPL$ERR_PROC(0,0,,PCB.ERROR);
      361     9130    1           CALL VPL$ERR_PROC(3,50,'05'O);
      362     9131        /*E*   ERROR: VPE-00050
      363     9132             MESSAGE: in COPY's STD file.  COPY aborts.
      364     9133            MESSAGE1: A record in the STD file has a bad source or option.
      365     9134        */
      366     9135        %EJECT;
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:47   
      367     9136    1   VPE$BREAK_IN_COPYALL: ENTRY;
      368     9137
      369     9138        /*D*  ENTRY: VPE$BREAK_IN_COPYALL
      370     9139              DESCRIPTION: This entry serves to print the appropriate break
      371     9140                    message during the COPYALL and COPYSTD commands.
      372     9141        */
      373     9142
      374     9143    1           OUT_COL = 0;
      375     9144    1           IF OLD_BREAKS>0
      376     9145    1            THEN
      377     9146    1              FPT_WRITE_UC.BUF_ = VECTOR(ABORT_AT_END);
      378     9147    1            ELSE
      379     9148    1              FPT_WRITE_UC.BUF_ = VECTOR(ABORT_NOW);
      380     9149    1           FPT_WRITE_UC.V.DVBYTE.VFC# = %YES#;
      381     9150    1           CALL M$WRITE(FPT_WRITE_UC);
      382     9151    1           FPT_WRITE_UC.V.DVBYTE.VFC# = %NO#;
      383     9152    1           RETURN;
      384     9153
      385     9154    1   END VPE$COPYALL;
      386     9155        %EOD;

PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:48   
--  Include file information  --

   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   FM$FIT.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPE$COPYALL.

   Procedure VPE$COPYALL requires 356 words for executable code.
   Procedure VPE$COPYALL requires 20 words of local(AUTO) storage.

PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:49   

 Object Unit name= VPE$COPYALL                                File name= VPE$COPY.:E05TOU
 UTS= JUL 30 '97 07:26:08.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10  RoData even  UTS     99    143  VPE$COPYALL
   11   Data  even  none     8     10  VPE$COPYALL
   12   Proc  even  none   356    544  VPE$COPYALL
   13  RoData even  none    33     41  VPE$COPYALL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        0  VPE$COPYALL
    12      3                  yes      Std        0  VPE$COPYSTD
    12    522                  yes      Std        0  VPE$BREAK_IN_COPYALL
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:50   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 VPF$SET_FROM_INFO
         yes           Std       1 VPD$INIT_STD_FILE
         yes           Std       3 VPF$OPEN_NEXT
         yes           Std       8 VPL$ERR_PROC
         yes           Std       1 XUG$SIMULATE_BREAK
         yes           Std       1 VPD$CLOSE_OUT
         yes           Std       1 VPD$COUNTER_BUMP
 yes     yes           Std       2 XSF$LOCCODP
 yes     yes           Std       1 VPF$CALL_OPEN
         yes           Std       1 VPC$SETOUT
 yes     yes           Std       0 VPE$READ_WRITE
         yes           Std       2 VPD$OUT_NAMES
 yes     yes           Std       1 VPF$CLOSE_IN
         yes           Std       8 VPL$ERR_NO_PRINT
 yes     yes           Std       1 VPC$CALL_CLOSE
         yes           Std       0 VPG$SET_UP_WRITE
         yes           Std       2 VPD$FINISH_NLIST
         yes           Std       0 VPD$MINIMIZE_BUF
         yes           Std       2 VPF$GET_NEXT_SPEC
         yes           Std       1 VPD$COUNTER_PRINT
 yes     yes           Std       1 X$PARSE
         yes           Std       0 VPE$BREAK_IN_COPYALL
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:51   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  PCB                                   GETCMD
     INPUT_ERR                             ABORT_STEP                            ABORT_CMD
     THIS_STD_FILE                         OUT_COL                               BREAK_LOC
     BREAKS                                OLD_BREAKS                            BREAK_MESSAGE_REPORTER
     FPARAM$                               CMD_MASK                              TOT_FILES
     SPEC_BUF                              OCB                                   DIN_NAME
     IN_RES                                ICB                                   NRECS_IN_COPY_FILE
     M$EI                                  M$EI$                                 M$EI#
     M$EO                                  M$EO1                                 M$EO1$
     M$ME                                  M$SI                                  M$READFILE
     M$DO                                  M$STD1                                M$STD1$
     M$SORT1                               B$TCB$                           r    FPT_READ_STD
     FPT_WRITE_UC                     r    FPT_CLOSE_STD                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:52   


      157        1        /*T***********************************************************/
      158        2        /*T*                                                         */
      159        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      160        4        /*T*                                                         */
      161        5        /*T***********************************************************/
      162        6        VPE$COPYALL: PROC;

      6 12 000000   000000 700200 xent  VPE$COPYALL  TSX0  ! X66_AUTO_0
        12 000001   000024 000000                    ZERO    20,0
        12 000002   000005 710000 12                 TRA     s:8982

      163        7        /*D* NAME: VPE$COPYALL
      164        8             CALL: CALL VPE$COPYALL;
      165        9             DESCRIPTION: This procedure drives the COPYALL and COPYSTD commands.
      166       10        */
      167       11        %INCLUDE VP_DATA_R;
      168     6998        %INCLUDE F$DCB;
      169     7047        %B$TCB;
      170     7050        %B$ALT;
      171     7058        %INCLUDE B_ERRORS_C;
      172     8185        %INCLUDE NK_VFC_C;
      173     8259        %INCLUDE FM$FIT;
      174     8480        %CODE03;
      175     8487        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
      176     8532    1   DCL 1 TEXT$C BASED,
      177     8533    1         2 LEN UBIN BYTE UNAL,
      178     8534    1         2 STRING CHAR(TEXT$C.LEN);
      179     8535    1   DCL X_CHAR CHAR(1);
      180     8536    1   DCL ABORT_AT_END CHAR(0) CONSTANT INIT(%CONCAT(VFC_TRANSITION1,
              8536            'C to continue at end'));
      181     8537    1   DCL ABORT_NOW CHAR(0) CONSTANT INIT(%CONCAT(VFC_TRANSITION1,'C to continue'));
      182     8538        %FPT_OPEN(FPTN = FPT_OPEN_EI_DEFAULT,
      183     8539                  TEST = NO,
      184     8540                  DCB = M$EI,
      185     8541                  STCLASS = CONSTANT);
      186     8650        %FPT_CORRES(FPTN = FPT_CORRES,
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:53   
      187     8651                    DCB1 = M$ME,
      188     8652                    DCB2 = M$EO1);
      189     8666        %FPT_PFIL(FPTN=FPT_PFIL_EI,
      190     8667                  DCB=M$EI);
      191     8682        %FPT_CLOSE(FPTN = FPT_CLOSE_EO1_REL,
      192     8683                   DCB  = M$EO1,
      193     8684                   DISP = SCRATCH,
      194     8685                   STCLASS = CONSTANT);
      195     8727    1   DCL CODE03$ PTR;
      196     8728    1   DCL CRLF_VFC CHAR(1) CONSTANT INIT('a');
      197     8729    1   DCL STEP_ABORT_FLAG SBIN WORD;
      198     8730    1   DCL NEXT_SPEC_RET_VAL SBIN WORD;
      199     8731    1   DCL OPEN_NEXT_RET_VAL SBIN WORD;
      200     8732    1   DCL PTR$ PTR;
      201     8733    1   DCL SOURCELIST$ PTR;
      202     8734    1   DCL OUTSPEC$ PTR;
      203     8735    1   DCL IDX SBIN WORD;
      204     8736        /**/
      205     8737        /*  ENTRY DCLS  */
      206     8738        /**/
      207     8739    1   DCL X$PARSE ENTRY(1) ALTRET;
      208     8740        %VP_ENTRIES (OMIT=VPE$COPYALL);
      209     8948    1   DCL XSF$LOCCODP ENTRY (2) ALTRET;
      210     8949        %INCLUDE XUG_ENTRY;
      211     8980        /**/
      212     8981    1   VPE$COPYSTD: ENTRY;

   8981 12 000003   000000 700200 xent  VPE$COPYSTD  TSX0  ! X66_AUTO_0
        12 000004   000024 000000                    ZERO    20,0

      213     8982    1           REMEMBER COPYALL_STEP_ABORT IN ABORT_STEP;

   8982 12 000005   000467 635000 12                 EAA     COPYALL_STEP_ABORT
        12 000006   000000 452400 xsym               STP2    ABORT_STEP
        12 000007   000001 755000 xsym               STA     ABORT_STEP+1

      214     8983    1           REMEMBER ABORT_COPYALL IN ABORT_CMD;
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:54   

   8983 12 000010   000375 635000 12                 EAA     ABORT_COPYALL
        12 000011   000000 452400 xsym               STP2    ABORT_CMD
        12 000012   000001 755000 xsym               STA     ABORT_CMD+1

      215     8984    1           REMEMBER ABORT_COPYALL IN BREAK_LOC;

   8984 12 000013   000375 635000 12                 EAA     ABORT_COPYALL
        12 000014   000000 452400 xsym               STP2    BREAK_LOC
        12 000015   000001 755000 xsym               STA     BREAK_LOC+1

      216     8985    1           STEP_ABORT_FLAG = 0;

   8985 12 000016   200005 450100                    STZ     STEP_ABORT_FLAG,,AUTO

      217     8986    1           SOURCELIST$ = ADDR(NIL);

   8986 12 000017   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000020   200011 756100                    STQ     SOURCELIST$,,AUTO

      218     8987    1           OUTSPEC$ = ADDR(NIL);

   8987 12 000021   200012 756100                    STQ     OUTSPEC$,,AUTO

      219     8988    2           DO IDX=0 TO PCB.OUT$->OUT$BLK.NSUBLKS-1;

   8988 12 000022   200013 450100                    STZ     IDX,,AUTO
        12 000023   000064 710000 12                 TRA     s:9000+1

      220     8989    2              PTR$ = PCB.OUT$->OUT$BLK.SUBLK$(IDX);

   8989 12 000024   000003 470400 xsym               LDP0    PCB+3
        12 000025   200013 720100                    LXL0    IDX,,AUTO
        12 000026   000003 236110                    LDQ     3,X0,PR0
        12 000027   200010 756100                    STQ     PTR$,,AUTO

      221     8990    3              DO CASE(PTR$->OUT$BLK.CODE);
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:55   

   8990 12 000030   200010 471500                    LDP1    PTR$,,AUTO
        12 000031   100000 721100                    LXL1    0,,PR1
        12 000032   000005 101003                    CMPX1   5,DU
        12 000033   000035 602011 12                 TNC     s:8990+5,X1
        12 000034   000063 710000 12                 TRA     s:9000
        12 000035   000063 710000 12                 TRA     s:9000
        12 000036   000042 710000 12                 TRA     s:8992
        12 000037   000044 710000 12                 TRA     s:8994
        12 000040   000046 710000 12                 TRA     s:8996
        12 000041   000055 710000 12                 TRA     s:8998

      222     8991    3               CASE(1);                    /* SOURCELIST                         */

      223     8992    3                 SOURCELIST$ = PTR$;

   8992 12 000042   200011 756100                    STQ     SOURCELIST$,,AUTO
        12 000043   000063 710000 12                 TRA     s:9000

      224     8993    3               CASE(2);                    /* OUTSPEC                            */

      225     8994    3                 OUTSPEC$ = PTR$;

   8994 12 000044   200012 756100                    STQ     OUTSPEC$,,AUTO
        12 000045   000063 710000 12                 TRA     s:9000

      226     8995    3               CASE(3);                    /* FROM 'FID'                         */

      227     8996    3                 CALL VPF$SET_FROM_INFO(PTR$->OUT$BLK.SUBLK$(0));

   8996 12 000046   000003 036003                    ADLQ    3,DU
        12 000047   200014 756100                    STQ     IDX+1,,AUTO
        12 000050   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000051   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000052   000000 701000 xent               TSX1    VPF$SET_FROM_INFO
        12 000053   000000 011000                    NOP     0
        12 000054   000063 710000 12                 TRA     s:9000
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:56   

      228     8997    3               CASE(4);                    /* COPYSTD 'FID'                      */

      229     8998    3                 CALL VPD$INIT_STD_FILE(PTR$);

   8998 12 000055   200010 633500                    EPPR3   PTR$,,AUTO
        12 000056   200014 453500                    STP3    IDX+1,,AUTO
        12 000057   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000060   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000061   000000 701000 xent               TSX1    VPD$INIT_STD_FILE
        12 000062   000000 011000                    NOP     0

      230     8999    3               END;                        /* END CASE                           */

      231     9000    2              END;

   9000 12 000063   200013 054100                    AOS     IDX,,AUTO
        12 000064   000003 470400 xsym               LDP0    PCB+3
        12 000065   000001 236100                    LDQ     1,,PR0
        12 000066   000022 772000                    QRL     18
        12 000067   200013 116100                    CMPQ    IDX,,AUTO
        12 000070   000024 605400 12                 TPNZ    s:8989

      232     9001    1           IF CMD_MASK(3)                  /* IF COPYSTD                         */

   9001 12 000071   000000 236000 xsym               LDQ     CMD_MASK
        12 000072   040000 316003                    CANQ    16384,DU
        12 000073   000111 600000 12                 TZE     s:9010

      233     9002    1            THEN
      234     9003    2            DO;                            /* Set up parse of STD's SOURCELIST   */

      235     9004    2   COPYSTD_L:                              /* Get a SOURCELIST from STD file     */
      236     9005    2               CALL M$READ(FPT_READ_STD) ALTRET(STD_READ_ALT);

   9005 12 000074   000000 630400 xsym  COPYSTD_L    EPPR0   FPT_READ_STD
        12 000075   440000 713400                    CLIMB   alt,read
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:57   
        12 000076   401400 401760                    pmme    nvectors=4
        12 000077   000472 702000 12                 TSX2    STD_READ_ALT

      237     9006    2               PCB.NCHARS = M$STD1$->F$DCB.ARS;

   9006 12 000100   000000 470400 xsym               LDP0    M$STD1$
        12 000101   000000 235100                    LDA     0,,PR0
        12 000102   000011 755000 xsym               STA     PCB+9

      238     9007    2               CALL X$PARSE(PCB) ALTRET(STD_PARSE_ALT);

   9007 12 000103   000000 630400 13                 EPPR0   0
        12 000104   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000105   000000 701000 xent               TSX1    X$PARSE
        12 000106   000504 702000 12                 TSX2    STD_PARSE_ALT

      239     9008    2               SOURCELIST$ = PCB.OUT$;

   9008 12 000107   000003 236000 xsym               LDQ     PCB+3
        12 000110   200011 756100                    STQ     SOURCELIST$,,AUTO

      240     9009    2               END;

      241     9010    1           CALL VPF$GET_NEXT_SPEC(NEXT_SPEC_RET_VAL,SOURCELIST$);

   9010 12 000111   200011 630500                    EPPR0   SOURCELIST$,,AUTO
        12 000112   200015 450500                    STP0    IDX+2,,AUTO
        12 000113   200006 631500                    EPPR1   NEXT_SPEC_RET_VAL,,AUTO
        12 000114   200014 451500                    STP1    IDX+1,,AUTO
        12 000115   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000116   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000117   000000 701000 xent               TSX1    VPF$GET_NEXT_SPEC
        12 000120   000000 011000                    NOP     0

      242     9011    2           DO WHILE(NEXT_SPEC_RET_VAL = 0); /* DO WHILE INPUT SPECs remain       */

   9011 12 000121   200006 235100                    LDA     NEXT_SPEC_RET_VAL,,AUTO
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:58   
        12 000122   000372 601000 12                 TNZ     s:9088

      243     9012    2              REMEMBER COPYALL_STEP_ABORT IN ABORT_STEP;

   9012 12 000123   000467 635000 12                 EAA     COPYALL_STEP_ABORT
        12 000124   000000 452400 xsym               STP2    ABORT_STEP
        12 000125   000001 755000 xsym               STA     ABORT_STEP+1

      244     9013    2              IF NEXT_SPEC_RET_VAL=0

   9013 12 000126   200006 236100                    LDQ     NEXT_SPEC_RET_VAL,,AUTO
        12 000127   000362 601000 12                 TNZ     s:9086

      245     9014    2               THEN                        /* All fine, source spec. processed   */
      246     9015    3               DO;

      247     9016    3                  CALL VPF$OPEN_NEXT(OPEN_NEXT_RET_VAL,4); /* OPEN first input   */

   9016 12 000130   000001 236000 13                 LDQ     1
        12 000131   200015 756100                    STQ     IDX+2,,AUTO
        12 000132   200007 630500                    EPPR0   OPEN_NEXT_RET_VAL,,AUTO
        12 000133   200014 450500                    STP0    IDX+1,,AUTO
        12 000134   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000135   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000136   000000 701000 xent               TSX1    VPF$OPEN_NEXT
        12 000137   000000 011000                    NOP     0

      248     9017                                                /* file in new INPUT SPEC             */
      249     9018    4                  DO WHILE(OPEN_NEXT_RET_VAL=%VPOC_GOTFILE#);

   9018 12 000140   200007 235100                    LDA     OPEN_NEXT_RET_VAL,,AUTO
        12 000141   000362 601000 12                 TNZ     s:9086

      250     9019                                                /* A file is now OPEN or TOPEN        */
      251     9020    4                     NRECS_IN_COPY_FILE = -1;

   9020 12 000142   000001 335007                    LCA     1,DL
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:59   
        12 000143   000000 755000 xsym               STA     NRECS_IN_COPY_FILE

      252     9021    4                     IF ICB.FLAVOR.MANAGED

   9021 12 000144   000172 236000 xsym               LDQ     ICB+122
        12 000145   000010 316003                    CANQ    8,DU
        12 000146   000164 600000 12                 TZE     s:9029

      253     9022    5                      THEN DO;

      254     9023    5                         CODE03$ = FPARAM$;

   9023 12 000147   000000 236000 xsym               LDQ     FPARAM$
        12 000150   200004 756100                    STQ     CODE03$,,AUTO

      255     9024    5                         CALL XSF$LOCCODP (CODE03$, 3)

   9024 12 000151   000002 236000 13                 LDQ     2
        12 000152   200015 756100                    STQ     IDX+2,,AUTO
        12 000153   200004 630500                    EPPR0   CODE03$,,AUTO
        12 000154   200014 450500                    STP0    IDX+1,,AUTO
        12 000155   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000156   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000157   000000 701000 xent               TSX1    XSF$LOCCODP
        12 000160   000164 702000 12                 TSX2    s:9029

      256     9025    6                          WHENRETURN DO;

      257     9026    6                             NRECS_IN_COPY_FILE = CODE03$ -> CODE03.NRECS;

   9026 12 000161   200004 470500                    LDP0    CODE03$,,AUTO
        12 000162   000002 235100                    LDA     2,,PR0
        12 000163   000000 755000 xsym               STA     NRECS_IN_COPY_FILE

      258     9027    6                             END;

      259     9028    5                         END;
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:60   

      260     9029    4                     IF NOT M$EI$ -> F$DCB.FCD

   9029 12 000164   000000 470400 xsym               LDP0    M$EI$
        12 000165   000031 236100                    LDQ     25,,PR0
        12 000166   020000 316007                    CANQ    8192,DL
        12 000167   000214 601000 12                 TNZ     s:9036

      261     9030    4                      THEN                 /* File is TOPEN                      */
      262     9031    4                        CALL VPF$CALL_OPEN (FPT_OPEN_EI_DEFAULT) /* Really OPEN  */

   9031 12 000170   000003 630400 13                 EPPR0   3
        12 000171   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000172   000000 701000 xent               TSX1    VPF$CALL_OPEN
        12 000173   000175 702000 12                 TSX2    s:9033
        12 000174   000214 710000 12                 TRA     s:9036

      263     9032    5                         WHENALTRETURN DO;
              9032                                  /* Whoops - file is probably busy or something */

      264     9033    5                            CALL VPL$ERR_PROC(0,0,,INPUT_ERR,,,M$EI#);
              9033                                     /* Tell the user */

   9033 12 000175   000004 236000 13                 LDQ     4
        12 000176   200022 756100                    STQ     IDX+7,,AUTO
        12 000177   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000200   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000201   200020 757100                    STAQ    IDX+5,,AUTO
        12 000202   000005 236000 13                 LDQ     5
        12 000203   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000204   200016 757100                    STAQ    IDX+3,,AUTO
        12 000205   000006 237000 13                 LDAQ    6
        12 000206   200014 757100                    STAQ    IDX+1,,AUTO
        12 000207   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000210   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 000211   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000212   000000 011000                    NOP     0
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:61   

      265     9034    5                            GOTO COPYALL_STEP_ABORT; /* and continue             */

   9034 12 000213   000467 710000 12                 TRA     COPYALL_STEP_ABORT

      266     9035    5                            END;
      267     9036    4                     CALL VPC$SETOUT(OUTSPEC$); /* Prepare & open output file    */

   9036 12 000214   200012 630500                    EPPR0   OUTSPEC$,,AUTO
        12 000215   200014 450500                    STP0    IDX+1,,AUTO
        12 000216   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000217   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000220   000000 701000 xent               TSX1    VPC$SETOUT
        12 000221   000000 011000                    NOP     0

      268     9037    4                     IF THIS_STD_FILE

   9037 12 000222   000000 234000 xsym               SZN     THIS_STD_FILE
        12 000223   000240 605000 12                 TPL     s:9045
        12 000224   000256 236000 xsym               LDQ     OCB+174
        12 000225   040000 316003                    CANQ    16384,DU
        12 000226   000240 600000 12                 TZE     s:9045

      269     9038    4                       AND OCB.FLAVOR.JE
      270     9039    5                      THEN DO;             /* DON'T COPY STD FILE TO JE          */

      271     9040    5                         CALL VPF$CLOSE_IN(1);

   9040 12 000227   000010 630400 13                 EPPR0   8
        12 000230   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000231   000000 701000 xent               TSX1    VPF$CLOSE_IN
        12 000232   000000 011000                    NOP     0

      272     9041    5                         CALL VPC$CALL_CLOSE(FPT_CLOSE_EO1_REL); /* Scratch the  */

   9041 12 000233   000011 630400 13                 EPPR0   9
        12 000234   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:62   
        12 000235   000000 701000 xent               TSX1    VPC$CALL_CLOSE
        12 000236   000000 011000                    NOP     0

      273     9042                                                /* STD file copied to JE              */
      274     9043    5                         END;

   9043 12 000237   000311 710000 12                 TRA     COPIED_OK

      275     9044    5                      ELSE DO;

      276     9045    5                         CALL VPG$SET_UP_WRITE;

   9045 12 000240   000002 631400 xsym               EPPR1   B_VECTNIL+2
        12 000241   000000 701000 xent               TSX1    VPG$SET_UP_WRITE
        12 000242   000000 011000                    NOP     0

      277     9046    5                         CALL VPE$READ_WRITE

   9046 12 000243   000002 631400 xsym               EPPR1   B_VECTNIL+2
        12 000244   000000 701000 xent               TSX1    VPE$READ_WRITE
        12 000245   000247 702000 12                 TSX2    s:9048
        12 000246   000251 710000 12                 TRA     s:9050

      278     9047    6                          WHENALTRETURN DO;

      279     9048    6                             OPEN_NEXT_RET_VAL = 1; /* Force loop exit           */

   9048 12 000247   000001 235007                    LDA     1,DL
        12 000250   200007 755100                    STA     OPEN_NEXT_RET_VAL,,AUTO

      280     9049    6                             END;

      281     9050    5                         IF M$EI$->F$DCB.FCD

   9050 12 000251   000000 470400 xsym               LDP0    M$EI$
        12 000252   000031 236100                    LDQ     25,,PR0
        12 000253   020000 316007                    CANQ    8192,DL
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:63   
        12 000254   000261 600000 12                 TZE     s:9053

      282     9051    5                          THEN
      283     9052    5                            CALL VPF$CLOSE_IN(1) ALTRET(COPYALL_STEP_ABORT);

   9052 12 000255   000010 630400 13                 EPPR0   8
        12 000256   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000257   000000 701000 xent               TSX1    VPF$CLOSE_IN
        12 000260   000467 702000 12                 TSX2    COPYALL_STEP_ABORT

      284     9053    5                         CALL VPD$CLOSE_OUT(0); /* Close with save               */

   9053 12 000261   000006 630400 13                 EPPR0   6
        12 000262   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000263   000000 701000 xent               TSX1    VPD$CLOSE_OUT
        12 000264   000000 011000                    NOP     0

      285     9054    5                         CALL M$CORRES(FPT_CORRES) ALTRET(COPIED_OK);

   9054 12 000265   000000 630400 11                 EPPR0   FPT_CORRES
        12 000266   460000 713400                    CLIMB   alt,+24576
        12 000267   400000 401760                    pmme    nvectors=1
        12 000270   000311 702000 12                 TSX2    COPIED_OK

      286     9055    5                         IF OCB.FLAVOR.MANAGED

   9055 12 000271   000256 236000 xsym               LDQ     OCB+174
        12 000272   020000 316003                    CANQ    8192,DU
        12 000273   000305 600000 12                 TZE     s:9060

      287     9056    5                          THEN
      288     9057    5                            CALL VPD$OUT_NAMES(DIN_NAME,M$EO1$->F$DCB.NAME);

   9057 12 000274   000000 236000 xsym               LDQ     M$EO1$
        12 000275   000010 036003                    ADLQ    8,DU
        12 000276   000012 235000 13                 LDA     10
        12 000277   200014 757100                    STAQ    IDX+1,,AUTO
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:64   
        12 000300   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000301   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000302   000000 701000 xent               TSX1    VPD$OUT_NAMES
        12 000303   000000 011000                    NOP     0
        12 000304   000311 710000 12                 TRA     COPIED_OK

      289     9058                                      /* Put out both filenames...if the name changed */
      290     9059    5                          ELSE
      291     9060    5                            CALL VPD$OUT_NAMES(DIN_NAME,0);

   9060 12 000305   000013 630400 13                 EPPR0   11
        12 000306   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000307   000000 701000 xent               TSX1    VPD$OUT_NAMES
        12 000310   000000 011000                    NOP     0

      292     9061                                      /* Don't put out the second filename unless to  */
      293     9062                                                /* managed place                      */
      294     9063    5                         END;

   9063 12 000311                       COPIED_OK    null
      295     9064    4   COPIED_OK:        ;
      296     9065    4                     CALL VPD$COUNTER_BUMP(0);

   9065 12 000311   000006 630400 13                 EPPR0   6
        12 000312   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000313   000000 701000 xent               TSX1    VPD$COUNTER_BUMP
        12 000314   000000 011000                    NOP     0

      297     9066    4   NEXT_FILE:
      298     9067    4                     IF M$EI$->F$DCB.FCD

   9067 12 000315   000000 470400 xsym  NEXT_FILE    LDP0    M$EI$
        12 000316   000031 236100                    LDQ     25,,PR0
        12 000317   020000 316007                    CANQ    8192,DL
        12 000320   000325 600000 12                 TZE     s:9070

      299     9068    4                      THEN
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:65   
      300     9069    4                        CALL VPF$CLOSE_IN(1) ALTRET(COPYALL_STEP_ABORT);

   9069 12 000321   000010 630400 13                 EPPR0   8
        12 000322   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000323   000000 701000 xent               TSX1    VPF$CLOSE_IN
        12 000324   000467 702000 12                 TSX2    COPYALL_STEP_ABORT

      301     9070    4                     THIS_STD_FILE = '0'B; /* No longer working on STD file      */

   9070 12 000325   000000 450000 xsym               STZ     THIS_STD_FILE

      302     9071    4                     IF OLD_BREAKS>0 OR BREAKS>0

   9071 12 000326   000000 235000 xsym               LDA     OLD_BREAKS
        12 000327   000332 605400 12                 TPNZ    s:9074
        12 000330   000000 236000 xsym               LDQ     BREAKS
        12 000331   000345 604400 12                 TMOZ    s:9080

      303     9072    4                      THEN
      304     9073    5                      DO;

      305     9074    5                         BREAK_MESSAGE_REPORTER = ENTADDR(VPE$BREAK_IN_COPYALL);

   9074 12 000332   000522 636000 12                 EAQ     s:9136
        12 000333   000000 756000 xsym               STQ     BREAK_MESSAGE_REPORTER

      306     9075    5                         REMEMBER ABORT_COPYALL IN BREAK_LOC;

   9075 12 000334   000375 635000 12                 EAA     ABORT_COPYALL
        12 000335   000000 452400 xsym               STP2    BREAK_LOC
        12 000336   000001 755000 xsym               STA     BREAK_LOC+1

      307     9076    5                         CALL XUG$SIMULATE_BREAK (GETCMD);

   9076 12 000337   000015 630400 13                 EPPR0   13
        12 000340   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000341   000000 701000 xent               TSX1    XUG$SIMULATE_BREAK
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:66   
        12 000342   000000 011000                    NOP     0

      308     9077    5                         BREAKS = 0;

   9077 12 000343   000000 450000 xsym               STZ     BREAKS

      309     9078    5                         OLD_BREAKS = 0;

   9078 12 000344   000000 450000 xsym               STZ     OLD_BREAKS

      310     9079    5                         END;

      311     9080    4                     IF OPEN_NEXT_RET_VAL ~= 1

   9080 12 000345   200007 235100                    LDA     OPEN_NEXT_RET_VAL,,AUTO
        12 000346   000001 115007                    CMPA    1,DL
        12 000347   000360 600000 12                 TZE     s:9084

      312     9081    4                      THEN
      313     9082    4                        CALL VPF$OPEN_NEXT(OPEN_NEXT_RET_VAL,5); /* OPEN next input */

   9082 12 000350   000016 236000 13                 LDQ     14
        12 000351   200015 756100                    STQ     IDX+2,,AUTO
        12 000352   200007 630500                    EPPR0   OPEN_NEXT_RET_VAL,,AUTO
        12 000353   200014 450500                    STP0    IDX+1,,AUTO
        12 000354   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000355   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000356   000000 701000 xent               TSX1    VPF$OPEN_NEXT
        12 000357   000000 011000                    NOP     0

      314     9083                                                /* file in INPUT SPEC                 */
      315     9084    4                     END;

   9084 12 000360   200007 235100                    LDA     OPEN_NEXT_RET_VAL,,AUTO
        12 000361   000142 600000 12                 TZE     s:9020

      316     9085    3                  END;
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:67   

      317     9086    2              CALL VPF$GET_NEXT_SPEC(NEXT_SPEC_RET_VAL);

   9086 12 000362   200006 630500                    EPPR0   NEXT_SPEC_RET_VAL,,AUTO
        12 000363   200014 450500                    STP0    IDX+1,,AUTO
        12 000364   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000365   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000366   000000 701000 xent               TSX1    VPF$GET_NEXT_SPEC
        12 000367   000000 011000                    NOP     0

      318     9087    2              END;                         /* End WHILE files remain             */

   9087 12 000370   200006 235100                    LDA     NEXT_SPEC_RET_VAL,,AUTO
        12 000371   000123 600000 12                 TZE     s:9012

      319     9088    1           IF CMD_MASK(3)                  /* IF COPYSTD                         */

   9088 12 000372   000000 236000 xsym               LDQ     CMD_MASK
        12 000373   040000 316003                    CANQ    16384,DU
        12 000374   000074 601000 12                 TNZ     COPYSTD_L

      320     9089    1            THEN
      321     9090    1              GOTO COPYSTD_L;              /* Get next SOURCELIST from STD file  */
      322     9091    1   ABORT_COPYALL:
      323     9092    1           CALL VPD$FINISH_NLIST;          /* Finish dangling name list          */

   9092 12 000375   000002 631400 xsym  ABORT_COPYA* EPPR1   B_VECTNIL+2
        12 000376   000000 701000 xent               TSX1    VPD$FINISH_NLIST
        12 000377   000000 011000                    NOP     0

      324     9093    1           CALL VPD$MINIMIZE_BUF;

   9093 12 000400   000002 631400 xsym               EPPR1   B_VECTNIL+2
        12 000401   000000 701000 xent               TSX1    VPD$MINIMIZE_BUF
        12 000402   000000 011000                    NOP     0

      325     9094    1           IF M$EI$->F$DCB.FCD
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:68   

   9094 12 000403   000000 470400 xsym               LDP0    M$EI$
        12 000404   000031 236100                    LDQ     25,,PR0
        12 000405   020000 316007                    CANQ    8192,DL
        12 000406   000427 600000 12                 TZE     CHK_EO1

      326     9095    1            THEN
      327     9096    2            DO;

      328     9097    2               IF ~M$EI$->F$DCB.TYC.EOD(1) AND ICB.FLAVOR.FFTAPE

   9097 12 000407   000002 236100                    LDQ     2,,PR0
        12 000410   000012 736000                    QLS     10
        12 000411   400000 376003                    ANQ     -131072,DU
        12 000412   400000 676003                    ERQ     -131072,DU
        12 000413   000423 600000 12                 TZE     s:9100
        12 000414   000172 236000 xsym               LDQ     ICB+122
        12 000415   000040 316003                    CANQ    32,DU
        12 000416   000423 600000 12                 TZE     s:9100

      329     9098    2                THEN
      330     9099    2                  CALL M$PFIL(FPT_PFIL_EI) ALTRET(CHK_EO1);

   9099 12 000417   000004 630400 11                 EPPR0   FPT_PFIL_EI
        12 000420   440004 713400                    CLIMB   alt,+16388
        12 000421   400000 401760                    pmme    nvectors=1
        12 000422   000427 702000 12                 TSX2    CHK_EO1

      331     9100    2               CALL VPF$CLOSE_IN(1) ALTRET(CHK_EO1);

   9100 12 000423   000010 630400 13                 EPPR0   8
        12 000424   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000425   000000 701000 xent               TSX1    VPF$CLOSE_IN
        12 000426   000427 702000 12                 TSX2    CHK_EO1

      332     9101    2               END;

PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:69   
      333     9102    1   CHK_EO1:IF M$EO1$->F$DCB.FCD

   9102 12 000427   000000 470400 xsym  CHK_EO1      LDP0    M$EO1$
        12 000430   000031 236100                    LDQ     25,,PR0
        12 000431   020000 316007                    CANQ    8192,DL
        12 000432   000437 600000 12                 TZE     s:9105

      334     9103    1            THEN
      335     9104    1              CALL VPD$CLOSE_OUT(1);       /* Close with error                   */

   9104 12 000433   000010 630400 13                 EPPR0   8
        12 000434   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000435   000000 701000 xent               TSX1    VPD$CLOSE_OUT
        12 000436   000000 011000                    NOP     0

      336     9105    1           IF STEP_ABORT_FLAG=1

   9105 12 000437   200005 235100                    LDA     STEP_ABORT_FLAG,,AUTO
        12 000440   000001 115007                    CMPA    1,DL
        12 000441   000444 601000 12                 TNZ     s:9111

      337     9106    1            THEN
      338     9107    2            DO;

      339     9108    2               STEP_ABORT_FLAG = 0;

   9108 12 000442   200005 450100                    STZ     STEP_ABORT_FLAG,,AUTO

      340     9109    2               GOTO NEXT_FILE;

   9109 12 000443   000315 710000 12                 TRA     NEXT_FILE

      341     9110    2               END;
      342     9111    1           IF M$STD1$->F$DCB.FCD

   9111 12 000444   000000 470400 xsym               LDP0    M$STD1$
        12 000445   000031 236100                    LDQ     25,,PR0
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:70   
        12 000446   020000 316007                    CANQ    8192,DL
        12 000447   000454 600000 12                 TZE     ABORT_RET

      343     9112    1            THEN
      344     9113    1              CALL M$CLOSE(FPT_CLOSE_STD) ALTRET(ABORT_RET);

   9113 12 000450   000000 630400 xsym               EPPR0   FPT_CLOSE_STD
        12 000451   450001 713400                    CLIMB   alt,close
        12 000452   406000 401760                    pmme    nvectors=13
        12 000453   000454 702000 12                 TSX2    ABORT_RET

   9111 12 000454                       ABORT_RET    null
      345     9114    1   ABORT_RET: ;
      346     9115    1           CALL VPD$COUNTER_PRINT(0);

   9115 12 000454   000006 630400 13                 EPPR0   6
        12 000455   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000456   000000 701000 xent               TSX1    VPD$COUNTER_PRINT
        12 000457   000000 011000                    NOP     0

      347     9116    1           IF TOT_FILES(0) = 0 THEN

   9116 12 000460   000000 235000 xsym               LDA     TOT_FILES
        12 000461   000466 601000 12                 TNZ     s:9118

      348     9117    1              CALL VPL$ERR_NO_PRINT(1,0,0,0);

   9117 12 000462   000017 630400 13                 EPPR0   15
        12 000463   000022 631400 xsym               EPPR1   B_VECTNIL+18
        12 000464   000000 701000 xent               TSX1    VPL$ERR_NO_PRINT
        12 000465   000000 011000                    NOP     0

      349     9118    1           RETURN;

   9118 12 000466   000000 702200 xent               TSX2  ! X66_ARET

      350     9119    1   COPYALL_STEP_ABORT:
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:71   
      351     9120    1           STEP_ABORT_FLAG = 1;

   9120 12 000467   000001 235007       COPYALL_STE* LDA     1,DL
        12 000470   200005 755100                    STA     STEP_ABORT_FLAG,,AUTO

      352     9121    1           GOTO ABORT_COPYALL;

   9121 12 000471   000375 710000 12                 TRA     ABORT_COPYALL

      353     9122    1   STD_READ_ALT:
      354     9123    1           IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF

   9123 12 000472   000000 470400 xsym  STD_READ_ALT LDP0    B$TCB$
        12 000473   000000 471500                    LDP1    0,,PR0
        12 000474   100102 236100                    LDQ     66,,PR1
        12 000475   377770 376007                    ANQ     131064,DL
        12 000476   000060 116007                    CMPQ    48,DL
        12 000477   000375 600000 12                 TZE     ABORT_COPYALL

      355     9124    1            THEN
      356     9125    1              GOTO ABORT_COPYALL;
      357     9126    1            ELSE
      358     9127    1              CALL VPL$ERR_PROC(3,0);

   9127 12 000500   000023 630400 13                 EPPR0   19
        12 000501   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000502   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000503   000000 011000                    NOP     0

      359     9128    1   STD_PARSE_ALT:
      360     9129    1           CALL VPL$ERR_PROC(0,0,,PCB.ERROR);

   9129 12 000504   000025 236000 13    STD_PARSE_A* LDQ     21
        12 000505   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000506   200016 757100                    STAQ    IDX+3,,AUTO
        12 000507   000006 237000 13                 LDAQ    6
        12 000510   200014 757100                    STAQ    IDX+1,,AUTO
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:72   
        12 000511   200014 630500                    EPPR0   IDX+1,,AUTO
        12 000512   000022 631400 xsym               EPPR1   B_VECTNIL+18
        12 000513   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000514   000000 011000                    NOP     0

      361     9130    1           CALL VPL$ERR_PROC(3,50,'05'O);

   9130 12 000515   000030 630400 13                 EPPR0   24
        12 000516   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000517   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000520   000000 011000                    NOP     0
        12 000521   000524 710000 12                 TRA     s:9143

      362     9131        /*E*   ERROR: VPE-00050
      363     9132             MESSAGE: in COPY's STD file.  COPY aborts.
      364     9133            MESSAGE1: A record in the STD file has a bad source or option.
      365     9134        */
      366     9135        %EJECT;
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:73   
      367     9136    1   VPE$BREAK_IN_COPYALL: ENTRY;

   9136 12 000522   000000 700200 xent  VPE$BREAK_I* TSX0  ! X66_AUTO_0
        12 000523   000024 000000                    ZERO    20,0

      368     9137
      369     9138        /*D*  ENTRY: VPE$BREAK_IN_COPYALL
      370     9139              DESCRIPTION: This entry serves to print the appropriate break
      371     9140                    message during the COPYALL and COPYSTD commands.
      372     9141        */
      373     9142
      374     9143    1           OUT_COL = 0;

   9143 12 000524   000000 450000 xsym               STZ     OUT_COL

      375     9144    1           IF OLD_BREAKS>0

   9144 12 000525   000000 235000 xsym               LDA     OLD_BREAKS
        12 000526   000532 604400 12                 TMOZ    s:9148

      376     9145    1            THEN
      377     9146    1              FPT_WRITE_UC.BUF_ = VECTOR(ABORT_AT_END);

   9146 12 000527   000034 237000 13                 LDAQ    28
        12 000530   000004 757000 xsym               STAQ    FPT_WRITE_UC+4
        12 000531   000534 710000 12                 TRA     s:9149

      378     9147    1            ELSE
      379     9148    1              FPT_WRITE_UC.BUF_ = VECTOR(ABORT_NOW);

   9148 12 000532   000036 237000 13                 LDAQ    30
        12 000533   000004 757000 xsym               STAQ    FPT_WRITE_UC+4

      380     9149    1           FPT_WRITE_UC.V.DVBYTE.VFC# = %YES#;

   9149 12 000534   100000 236003                    LDQ     32768,DU
        12 000535   000013 256000 xsym               ORSQ    FPT_WRITE_UC+11
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:74   

      381     9150    1           CALL M$WRITE(FPT_WRITE_UC);

   9150 12 000536   000000 630400 xsym               EPPR0   FPT_WRITE_UC
        12 000537   040001 713400                    CLIMB   write
        12 000540   401400 401760                    pmme    nvectors=4

      382     9151    1           FPT_WRITE_UC.V.DVBYTE.VFC# = %NO#;

   9151 12 000541   000040 236000 13                 LDQ     32
        12 000542   000013 356000 xsym               ANSQ    FPT_WRITE_UC+11

      383     9152    1           RETURN;

   9152 12 000543   000000 702200 xent               TSX2  ! X66_ARET
      384     9153
      385     9154    1   END VPE$COPYALL;
      386     9155        %EOD;

PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:75   
--  Include file information  --

   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   FM$FIT.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPE$COPYALL.
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:76   

 **** Variables and constants ****

  ****  Section 010 RoData VPE$COPYALL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(21)    r     1 ABORT_AT_END               6-0-0/c CHAR(14)    r     1 ABORT_NOW
   104-0-0/d STRC(1080)  r     1 FPT_CLOSE_EO1_REL         12-0-0/d STRC(2088)  r     1 FPT_OPEN_EI_DEFAULT

  ****  Section 011  Data  VPE$COPYALL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(144)   r     1 FPT_CORRES                 4-0-0/d STRC(144)   r     1 FPT_PFIL_EI

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 CODE03$                   13-0-0/w SBIN        r     1 IDX
     6-0-0/w SBIN        r     1 NEXT_SPEC_RET_VAL          7-0-0/w SBIN        r     1 OPEN_NEXT_RET_VAL
    12-0-0/w PTR         r     1 OUTSPEC$                  10-0-0/w PTR         r     1 PTR$
    11-0-0/w PTR         r     1 SOURCELIST$                5-0-0/w SBIN        r     1 STEP_ABORT_FLAG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d REMB        r     1 ABORT_CMD                  0-0-0/d REMB        r     1 ABORT_STEP
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w SBIN        r     1 BREAKS
     0-0-0/d REMB        r     1 BREAK_LOC
     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
     0-0-0/b BIT         r     1 CMD_MASK(0:71)
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:77   
     0-0-0/c STRC(288)   r     1 DIN_NAME                   0-0-0/w PTR         r     1 FPARAM$
     0-0-0/d STRC(1080)  r     1 FPT_CLOSE_STD              0-0-0/d STRC(504)   r     1 FPT_READ_STD
     0-0-0/d STRC(432)   r     1 FPT_WRITE_UC               0-0-0/d STRC(1512)  r     1 GETCMD
     0-0-0/d STRC(5868)  r     1 ICB                        0-0-0/w STRC        r     1 INPUT_ERR
     0-0-0/w SBIN        r     1 M$EI#                      0-0-0/w PTR         r     1 M$EI$
     0-0-0/w PTR         r     1 M$EO1$                     0-0-0/w PTR         r     1 M$STD1$
     0-0-0/w SBIN        r     1 NRECS_IN_COPY_FILE         0-0-0/d STRC(6840)  r     1 OCB
     0-0-0/w SBIN        r     1 OLD_BREAKS                 0-0-0/w SBIN        r     1 OUT_COL
     0-0-0/w STRC(504)   r     1 PCB                        0-0-0/b BIT         r     1 THIS_STD_FILE
     0-0-0/w SBIN        r     1 TOT_FILES(0:4)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(324)   r     1 CODE03                     0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0N  NULL        r     1 M$EI                       0-0-0N  NULL        r     1 M$EO1
     0-0-0N  NULL        r     1 M$ME                       0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/c ASTR(9)     r     1 TEXT$C


   Procedure VPE$COPYALL requires 356 words for executable code.
   Procedure VPE$COPYALL requires 20 words of local(AUTO) storage.
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:78   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:79   
          MINI XREF LISTING

ABORT_AT_END
      8536**DCL      9146--ASSIGN
ABORT_CMD
      5183**DCL      8983<<REMEMBR
ABORT_COPYALL
      9092**LABEL    8983--REMEMBR  8984--REMEMBR  9075--REMEMBR  9121--GOTO     9125--GOTO
ABORT_NOW
      8537**DCL      9148--ASSIGN
ABORT_RET
      9111**LABEL    9113--CALLALT
ABORT_STEP
      5182**DCL      8982<<REMEMBR  9012<<REMEMBR
B$ALT.CODE
      7052**DCL      7052--REDEF    7053--REDEF    7053--REDEF
B$ALT.ERR.CODE
      7054**DCL      9123>>IF
B$ALT.ERR.ERR#
      7054**DCL      7054--REDEF
B$ALT.EVID
      7053**DCL      7053--REDEF    7053--REDEF
B$TCB.ALT$
      7048**DCL      9123>>IF
B$TCB$
      5983**DCL      9123>>IF
BREAKS
      5218**DCL      9071>>IF       9077<<ASSIGN
BREAK_LOC
      5218**DCL      5218--REDEF    8984<<REMEMBR  9075<<REMEMBR
BREAK_MESSAGE_REPORTER
      5219**DCL      9074<<ASSIGN
CHK_EO1
      9102**LABEL    9099--CALLALT  9100--CALLALT
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:80   
CMD_MASK
      5220**DCL      9001>>IF       9088>>IF
CODE03.NRECS
      8483**DCL      9026>>ASSIGN
CODE03$
      8727**DCL      9023<<ASSIGN   9024<>CALL     9026>>ASSIGN
COPIED_OK
      9063**LABEL    9054--CALLALT
COPYALL_STEP_ABORT
      9120**LABEL    8982--REMEMBR  9012--REMEMBR  9034--GOTO     9052--CALLALT  9069--CALLALT
COPYSTD_L
      9005**LABEL    9090--GOTO
DEF_ICB.FID.STRING
      5816**DCL      5817--REDEF
DEV_ICB.FID.STRING
      5702**DCL      5703--REDEF
DIN_NAME
      5509**DCL      9057<>CALL     9060<>CALL
EI_KEY.KEY
      5914**DCL      5914--REDEF    5914--REDEF    5914--REDEF
EO_OCB.TYPE
      5414**DCL      5415--REDEF
F$DCB.ACTPOS
      7024**DCL      7024--REDEF
F$DCB.ARS
      6999**DCL      6999--REDEF    9006>>ASSIGN
F$DCB.ATTR
      7017**DCL      7018--REDEF
F$DCB.BORROW
      7032**DCL      7032--REDEF    7032--REDEF    7032--REDEF
F$DCB.DCBNAME.L
      7046**DCL      7046--IMP-SIZ
F$DCB.EOMCHAR
      7003**DCL      7003--REDEF
F$DCB.FCD
      7012**DCL      9029>>IF       9050>>IF       9067>>IF       9094>>IF       9102>>IF       9111>>IF
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:81   
F$DCB.FLDID
      7027**DCL      7027--REDEF
F$DCB.FORM$
      7021**DCL      7021--REDEF
F$DCB.FSECT
      7037**DCL      7037--REDEF
F$DCB.FSN
      7014**DCL      7014--REDEF    7014--REDEF    7015--REDEF
F$DCB.HEADER$
      7020**DCL      7020--REDEF
F$DCB.IXTNSIZE
      7018**DCL      7018--REDEF
F$DCB.LASTSTA$
      7008**DCL      7008--REDEF
F$DCB.LVL
      7033**DCL      7033--REDEF
F$DCB.NAME
      7008**DCL      9057<>CALL
F$DCB.NAME.C
      7008**DCL      7008--REDEF
F$DCB.NOEOF
      7029**DCL      7029--REDEF
F$DCB.NRECS
      7019**DCL      7019--REDEF
F$DCB.NRECX
      7038**DCL      7038--REDEF
F$DCB.OHDR
      7030**DCL      7030--REDEF
F$DCB.ORG
      7013**DCL      7013--REDEF
F$DCB.PRECNO
      7036**DCL      7036--REDEF
F$DCB.RCSZ
      7041**DCL      7041--REDEF
F$DCB.RES
      7009**DCL      7009--REDEF
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:82   
F$DCB.SETX
      7021**DCL      7021--REDEF
F$DCB.TAB$
      7020**DCL      7021--REDEF
F$DCB.TDA
      7035**DCL      7035--REDEF
F$DCB.TYC.EOD
      7000**DCL      9097>>IF
F$DCB.WSN
      7010**DCL      7010--REDEF
FPARAM$
      5219**DCL      9023>>ASSIGN
FPT_CLOSE_EI.SN_
      6755**DCL      6755--REDEF
FPT_CLOSE_EI.UTL_
      6756**DCL      6756--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6770**DCL      6770--REDEF
FPT_CLOSE_EI.V.TYPE#
      6768**DCL      6768--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6765**DCL      6765--REDEF    6767--REDEF
FPT_CLOSE_EO1_REL
      8708**DCL      9041<>CALL
FPT_CLOSE_EO1_REL.SN_
      8708**DCL      8708--REDEF
FPT_CLOSE_EO1_REL.UTL_
      8709**DCL      8709--REDEF
FPT_CLOSE_EO1_REL.V
      8713**DCL      8708--DCLINIT
FPT_CLOSE_EO1_REL.V.EXPIRE#
      8723**DCL      8723--REDEF
FPT_CLOSE_EO1_REL.V.TYPE#
      8721**DCL      8721--REDEF
FPT_CLOSE_EO1_REL.V.XTNSIZE#
      8718**DCL      8718--REDEF    8720--REDEF
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:83   
FPT_CLOSE_PTL.SN_
      6881**DCL      6881--REDEF
FPT_CLOSE_PTL.UTL_
      6882**DCL      6882--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6896**DCL      6896--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6894**DCL      6894--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6891**DCL      6891--REDEF    6893--REDEF
FPT_CLOSE_READ.SN_
      6797**DCL      6797--REDEF
FPT_CLOSE_READ.UTL_
      6798**DCL      6798--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6812**DCL      6812--REDEF
FPT_CLOSE_READ.V.TYPE#
      6810**DCL      6810--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6807**DCL      6807--REDEF    6809--REDEF
FPT_CLOSE_SI.SN_
      6965**DCL      6965--REDEF
FPT_CLOSE_SI.UTL_
      6966**DCL      6966--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      6980**DCL      6980--REDEF
FPT_CLOSE_SI.V.TYPE#
      6978**DCL      6978--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      6975**DCL      6975--REDEF    6977--REDEF
FPT_CLOSE_STD
      6923**DCL      9113<>CALL
FPT_CLOSE_STD.SN_
      6923**DCL      6923--REDEF
FPT_CLOSE_STD.UTL_
      6924**DCL      6924--REDEF
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:84   
FPT_CLOSE_STD.V.EXPIRE#
      6938**DCL      6938--REDEF
FPT_CLOSE_STD.V.TYPE#
      6936**DCL      6936--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6933**DCL      6933--REDEF    6935--REDEF
FPT_CLSEI_FT.SN_
      6839**DCL      6839--REDEF
FPT_CLSEI_FT.UTL_
      6840**DCL      6840--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6854**DCL      6854--REDEF
FPT_CLSEI_FT.V.TYPE#
      6852**DCL      6852--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6849**DCL      6849--REDEF    6851--REDEF
FPT_CORRES
      8663**DCL      9054<>CALL
FPT_CORRES.V
      8663**DCL      8663--DCLINIT
FPT_OPEN_EI.ACSVEH_
      6410**DCL      6411--REDEF
FPT_OPEN_EI.ALTKEYS_
      6416**DCL      6417--REDEF    6417--REDEF
FPT_OPEN_EI.HDR_
      6415**DCL      6416--REDEF
FPT_OPEN_EI.TAB_
      6414**DCL      6415--REDEF
FPT_OPEN_EI.UHL_
      6408**DCL      6409--REDEF    6409--REDEF
FPT_OPEN_EI.V.FSN#
      6448**DCL      6448--REDEF    6448--REDEF
FPT_OPEN_EI.WSN_
      6414**DCL      6414--REDEF
FPT_OPEN_EI_DEFAULT
      8606**DCL      9031<>CALL
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:85   
FPT_OPEN_EI_DEFAULT.ACSVEH_
      8608**DCL      8609--REDEF
FPT_OPEN_EI_DEFAULT.ALTKEYS_
      8614**DCL      8615--REDEF    8615--REDEF
FPT_OPEN_EI_DEFAULT.HDR_
      8613**DCL      8614--REDEF
FPT_OPEN_EI_DEFAULT.TAB_
      8612**DCL      8613--REDEF
FPT_OPEN_EI_DEFAULT.UHL_
      8606**DCL      8607--REDEF    8607--REDEF
FPT_OPEN_EI_DEFAULT.V
      8615**DCL      8606--DCLINIT
FPT_OPEN_EI_DEFAULT.V.FSN#
      8646**DCL      8646--REDEF    8646--REDEF
FPT_OPEN_EI_DEFAULT.WSN_
      8612**DCL      8612--REDEF
FPT_OPEN_EI_SAVE.ACSVEH_
      6519**DCL      6520--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
      6525**DCL      6526--REDEF    6526--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6524**DCL      6525--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6523**DCL      6524--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6517**DCL      6518--REDEF    6518--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6557**DCL      6557--REDEF    6557--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6523**DCL      6523--REDEF
FPT_OPEN_OUT.ACSVEH_
      6301**DCL      6302--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6307**DCL      6308--REDEF    6308--REDEF
FPT_OPEN_OUT.HDR_
      6306**DCL      6307--REDEF
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:86   
FPT_OPEN_OUT.TAB_
      6305**DCL      6306--REDEF
FPT_OPEN_OUT.UHL_
      6299**DCL      6300--REDEF    6300--REDEF
FPT_OPEN_OUT.V.FSN#
      6339**DCL      6339--REDEF    6339--REDEF
FPT_OPEN_OUT.WSN_
      6305**DCL      6305--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6192**DCL      6193--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6198**DCL      6199--REDEF    6199--REDEF
FPT_OPEN_OUT_SAVE.HDR_
      6197**DCL      6198--REDEF
FPT_OPEN_OUT_SAVE.TAB_
      6196**DCL      6197--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6190**DCL      6191--REDEF    6191--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
      6230**DCL      6230--REDEF    6230--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6196**DCL      6196--REDEF
FPT_PFIL_EI
      8678**DCL      9099<>CALL
FPT_PFIL_EI.V
      8678**DCL      8678--DCLINIT
FPT_READ_STD
      6617**DCL      9005<>CALL
FPT_READ_STD.STATION_
      6620**DCL      6621--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6632**DCL      6632--REDEF
FPT_READ_STD.V.INDX#
      6630**DCL      6630--REDEF
FPT_READ_UC.STATION_
      6581**DCL      6582--REDEF
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:87   
FPT_READ_UC.V.DVBYTE.REREAD#
      6593**DCL      6593--REDEF
FPT_READ_UC.V.INDX#
      6591**DCL      6591--REDEF
FPT_WRITE_ME.STATION_
      6689**DCL      6689--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6696**DCL      6696--REDEF
FPT_WRITE_OUT.STATION_
      6720**DCL      6720--REDEF
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6727**DCL      6727--REDEF
FPT_WRITE_UC
      6656**DCL      9150<>CALL
FPT_WRITE_UC.BUF_
      6656**DCL      9146<<ASSIGN   9148<<ASSIGN
FPT_WRITE_UC.STATION_
      6658**DCL      6658--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6665**DCL      6665--REDEF    9149<<ASSIGN   9151<<ASSIGN
FROM_SN.SN
      5564**DCL      5565--REDEF
GETCMD
      4766**DCL      9076<>CALL
GETCMD.OUT$
      4771**DCL      4777--REDEF
ICB.FID.STRING
      5588**DCL      5589--REDEF
ICB.FLAVOR.FFTAPE
      5651**DCL      9097>>IF
ICB.FLAVOR.MANAGED
      5653**DCL      9021>>IF
IDX
      8735**DCL      8988<<DOINDEX  8989>>ASSIGN
IFSFA_PARAM.EOMCHAR#
      5943**DCL      5944--REDEF
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:88   
IFSFA_PARAM.SIG1
      5937**DCL      5937--REDEF
IFSFA_PARAM.SIG2
      5937**DCL      5938--REDEF
INPUT_ERR
      5103**DCL      9033<>CALL
IN_RES
      5510**DCL      5510--REDEF
IN_SN.SN
      5526**DCL      5527--REDEF
M$CLOSE
        28**DCL-ENT  9113--CALL
M$CORRES
        33**DCL-ENT  9054--CALL
M$EI#
      5979**DCL      9033<>CALL
M$EI$
      5979**DCL      9029>>IF       9050>>IF       9067>>IF       9094>>IF       9097>>IF
M$EO1$
      5980**DCL      9057>>CALL     9102>>IF
M$PFIL
        30**DCL-ENT  9099--CALL
M$READ
        29**DCL-ENT  9005--CALL
M$STD1$
      5982**DCL      9006>>ASSIGN   9111>>IF
M$WRITE
        29**DCL-ENT  9150--CALL
NEXT_FILE
      9067**LABEL    9109--GOTO
NEXT_SPEC_RET_VAL
      8730**DCL      9010<>CALL     9011>>DOWHILE  9013>>IF       9086<>CALL
NRECS_IN_COPY_FILE
      5916**DCL      9020<<ASSIGN   9026<<ASSIGN
OCB.FLAVOR.JE
      5319**DCL      9037>>IF
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:89   
OCB.FLAVOR.MANAGED
      5320**DCL      9055>>IF
OCB.TYPE
      5272**DCL      5273--REDEF
OFSFA_PARAM.EOMCHAR#
      5973**DCL      5974--REDEF
OFSFA_PARAM.SIG1
      5967**DCL      5967--REDEF
OFSFA_PARAM.SIG2
      5967**DCL      5968--REDEF
OLD_BREAKS
      5219**DCL      9071>>IF       9078<<ASSIGN   9144>>IF
OPEN_NEXT_RET_VAL
      8731**DCL      9016<>CALL     9018>>DOWHILE  9048<<ASSIGN   9080>>IF       9082<>CALL
OUT$BLK.CODE
      8501**DCL      8990>>DOCASE
OUT$BLK.NSUBLKS
      8505**DCL      8988>>DOINDEX
OUT$BLK.SUBLK$
      8526**DCL      8989>>ASSIGN   8996<>CALL
OUTSPEC$
      8734**DCL      8987<<ASSIGN   8994<<ASSIGN   9036<>CALL
OUT_COL
      5216**DCL      9143<<ASSIGN
OUT_SN.SN
      5544**DCL      5545--REDEF
PCB
      4572**DCL      9007<>CALL
PCB.ERROR
      4676**DCL      9129<>CALL
PCB.NCHARS
      4719**DCL      9006<<ASSIGN
PCB.OUT$
      4585**DCL      8988>>DOINDEX  8989>>ASSIGN   9008>>ASSIGN
PTR$
      8732**DCL      8989<<ASSIGN   8990>>DOCASE   8992>>ASSIGN   8994>>ASSIGN   8996>>CALL     8998<>CALL
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:90   
SOURCELIST$
      8733**DCL      8986<<ASSIGN   8992<<ASSIGN   9008<<ASSIGN   9010<>CALL
SPEC_BUF
      5222**DCL      5222--REDEF
STD_PARSE_ALT
      9129**LABEL    9007--CALLALT
STD_READ_ALT
      9123**LABEL    9005--CALLALT
STEP_ABORT_FLAG
      8729**DCL      8985<<ASSIGN   9105>>IF       9108<<ASSIGN   9120<<ASSIGN
TEXT$C.LEN
      8533**DCL      8534--IMP-SIZ
THIS_STD_FILE
      5216**DCL      9037>>IF       9070<<ASSIGN
TOT_FILES
      5221**DCL      9116>>IF
VPC$CALL_CLOSE
      8742**DCL-ENT  9041--CALL
VPC$SETOUT
      8750**DCL-ENT  9036--CALL
VPD$CLOSE_OUT
      8765**DCL-ENT  9053--CALL     9104--CALL
VPD$COUNTER_BUMP
      8771**DCL-ENT  9065--CALL
VPD$COUNTER_PRINT
      8772**DCL-ENT  9115--CALL
VPD$FINISH_NLIST
      8783**DCL-ENT  9092--CALL
VPD$INIT_STD_FILE
      8809**DCL-ENT  8998--CALL
VPD$MINIMIZE_BUF
      8777**DCL-ENT  9093--CALL
VPD$OUT_NAMES
      8784**DCL-ENT  9057--CALL     9060--CALL
VPE$BREAK_IN_COPYALL
      9136**ENTRY    9074--ASSIGN
PL6.E3A0      #002=VPE$COPYALL File=VPE$COPY.:E05TSI                             WED 07/30/97 07:26 Page:91   
VPE$READ_WRITE
      8838**DCL-ENT  9046--CALL
VPF$CALL_OPEN
      8845**DCL-ENT  9031--CALL
VPF$CLOSE_IN
      8848**DCL-ENT  9040--CALL     9052--CALL     9069--CALL     9100--CALL
VPF$GET_NEXT_SPEC
      8851**DCL-ENT  9010--CALL     9086--CALL
VPF$OPEN_NEXT
      8854**DCL-ENT  9016--CALL     9082--CALL
VPF$SET_FROM_INFO
      8860**DCL-ENT  8996--CALL
VPG$SET_UP_WRITE
      8863**DCL-ENT  9045--CALL
VPL$ERR_NO_PRINT
      8921**DCL-ENT  9117--CALL
VPL$ERR_PROC
      8922**DCL-ENT  9033--CALL     9127--CALL     9129--CALL     9130--CALL
X$PARSE
      8739**DCL-ENT  9007--CALL
XSF$LOCCODP
      8948**DCL-ENT  9024--CALL
XUG$SIMULATE_BREAK
      8970**DCL-ENT  9076--CALL

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:92   
      387        1        /*T***********************************************************/
      388        2        /*T*                                                         */
      389        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      390        4        /*T*                                                         */
      391        5        /*T***********************************************************/
      392        6        VPE$READ_WRITE: PROC ALTRET;            /* Only altrets on DEOD of FT         */
      393        7        /*D* NAME: VPE$READ_WRITE
      394        8             CALL: CALL VPE$READ_WRITE;
      395        9             DESCRIPTION: This procedure copies the input file to the output file with
      396       10                          all specified options applied.
      397       11        */
      398       12        /**/
      399       13        /*  INCLUDE FILES  */
      400       14        /**/
      401       15        %INCLUDE VP_DATA_R;
      402     7002        %INCLUDE F$DCB;
      403     7051        %INCLUDE FM$FIT;
      404     7272        %INCLUDE B_ERRORS_C;
      405     8399        %INCLUDE NK_VFC_C;
      406     8473        /**/
      407     8474        /*  BASED DATA  */
      408     8475        /**/
      409     8476        %CODE03;
      410     8483        %B$TCB;
      411     8486        %B$ALT;
      412     8494    1   DCL CHAR$140 CHAR(140) BASED;
      413     8495    1   DCL 1 TEXT$C BASED,
      414     8496    1         2 LEN UBIN BYTE UNAL,
      415     8497    1         2 STRING CHAR(TEXT$C.LEN);
      416     8498    1   DCL 1 TEXT$C_BIT BASED,
      417     8499    1         2 LEN UBIN BYTE UNAL,
      418     8500    1         2 STRING,
      419     8501    1           3 * CHAR(TEXT$C_BIT.LEN);
      420     8502        /**/
      421     8503        /*  CONSTANT  */
      422     8504        /**/
      423     8505    1   DCL MOP_7_DIGITS(0:1) BIT(9) CONSTANT INIT(%MVZB6,%MVC1);
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:93   
      424     8506    1   DCL CONTINUE_MSG CHAR(0) CONSTANT INIT('@C to continue ');
      425     8507        /**/
      426     8508        /*  LOCAL AUTO  */
      427     8509        /**/
      428     8510    1   DCL X_CHAR CHAR(1);
      429     8511    1   DCL TEMP SBIN WORD;
      430     8512    1   DCL I SBIN;                             /* Temp location                      */
      431     8513    1   DCL RET_VAL SBIN WORD;
      432     8514    1   DCL REC_SEL_IDX SBIN WORD;
      433     8515    1   DCL SEQ_READ SBIN WORD;
      434     8516    1   DCL LAST_SEQ_NO SBIN WORD;
      435     8517        /**/
      436     8518        /*  LOCAL STATIC  */
      437     8519        /**/
      438     8520    1   DCL HEAD_TO_USE UBIN STATIC;            /* Will contain the final HEAD/NHEAD  */
      439     8521        %FPT_READ(FPTN = FPT_READ_EI,
      440     8522                  DCB = M$EI,
      441     8523                  WAIT = YES,
      442     8524                  CONT = NO,
      443     8525                FULL = YES,
      444     8526                  KEYR = YES);
      445     8565        %FPT_WRITE(FPTN = FPT_WRITE_HDR,
      446     8566                   VFC = YES,
      447     8567                    STCLASS = STATIC);
      448     8598        %FPT_DEVICE (FPTN = FPT_DEVICE,         /* set skip to next page              */
      449     8599                    PAGE = YES);
      450     8617        %FPT_PRECORD(FPTN = FPT_PREC_EI,
      451     8618                     DCB = M$EI,
      452     8619                     BRK = YES,
      453     8620                     KEYR = NO);
      454     8641        %FPT_PFIL(FPTN = FPT_PFIL_EI,
      455     8642                  DCB  = M$EI);
      456     8657        %FPT_CVOL(FPTN = FPT_CVOL_EI,
      457     8658                  DCB = M$EI,
      458     8659                  STCLASS = STATIC);
      459     8674        /**/
      460     8675        /*  ENTRY DCLS  */
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:94   
      461     8676        /**/
      462     8677    1   DCL XSF$LOCCODE ENTRY(2) ALTRET;
      463     8678        %VP_ENTRIES (OMIT=VPE$READ_WRITE);
      464     8886        /**/
      465     8887    1           REMEMBER NEXT_REC IN CLEAN_POINT;
      466     8888    1           EI_KEY.LEN = BITBIN('777777777777'O); /* KEEPS KEYED OR RANDOM FILES  */
      467     8889                                                /* FROM BEING WRITTEN WITH BAD        */
      468     8890                                                /* KEY BY CAUSING M$WRITE TO          */
      469     8891                                                /* ALTRET                             */
      470     8892    1           FPT_DEVICE.V.DCB# = OCB.DCBNM;  /*  COPY DCB is M$EO                  */
      471     8893                                                /*  COPYALL  is M$EO1                 */
      472     8894    1           CALL SET_UP_IN;
      473     8895                                                /* Put out a header (maybe)           */
      474     8896    1           BREAK_MESSAGE_REPORTER = ENTADDR(VPE$BREAK_ON_READ_WRITE);
      475     8897    1           IF OCB.PAGE = 2                 /* PAGE title requested               */
      476     8898    1            THEN
      477     8899    1              CALL M$DEVICE(FPT_DEVICE);
      478     8900    1           IF HEAD_TO_USE = 2              /* Put out a HEADER                   */
      479     8901    1            THEN
      480     8902    2            DO;
      481     8903    2               CALL VPD$GET_SPEC_BUF(1,1);
      482     8904    2               FPT_WRITE_HDR.BUF_ = VECTOR(ADDR(SPEC_BUF)->TEXT$C);
      483     8905    2               SPEC_BUF.LEN = ASCBIN('B'); /* SPACE 2 AFTER                      */
      484     8906    2               FPT_WRITE_HDR.V.DCB# = OCB.DCBNM;
      485     8907    2               IF OCB.ORG = 4              /* Need to put an EDIT key on header  */
      486     8908    2                THEN
      487     8909    3                DO;
      488     8910    3                   OCB.LN.CURRENT = OCB.LN.CURRENT + OCB.LN.K; /* Bump key       */
      489     8911    3                   OCB.LN.KEY.CURRENT = OCB.LN.CURRENT;
      490     8912    3                   FPT_WRITE_HDR.KEY_ = VECTOR(OCB.LN.KEY);
      491     8913    3                   END;
      492     8914    2                ELSE
      493     8915    2                  FPT_WRITE_HDR.KEY_ = VECTOR(NIL);
      494     8916    2               CALL WRITE;
      495     8917    2               END;
      496     8918    2           DO WHILE('1'B);                 /* This is THE COPY loop              */
      497     8919    2   NEXT_REC:  CALL GET_NEXT_REC(RET_VAL);
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:95   
      498     8920    3              DO CASE(RET_VAL);
      499     8921    3               CASE(0);                    /* NORMAL RETURN                      */
      500     8922    3                 USE_CONT = '0'B;
      501     8923    3                 CALL VPG$WRITE_OUT(IN_ARS,0);
      502     8924    3               CASE(1);                    /* NO MORE RECORDS                    */
      503     8925    3                 RETURN;
      504     8926    3               CASE(2);                    /* SINGLE EOD hit                     */
      505     8927    3                 IF ICB.DEOD = 0
      506     8928    3                  THEN                     /* End of this file                   */
      507     8929    4                  DO;
      508     8930    4                     CALL VPG$WRITE_OUT(0,1);
      509     8931    4                     RETURN;
      510     8932    4                     END;
      511     8933    3                  ELSE                     /* Keep going until double EOD        */
      512     8934    3                    ;
      513     8935    3               CASE(3);                    /* NO RECORD BUT OK TO CHECK BRK      */
      514     8936    3                 ;                         /* We tried to read a RANDOM or IDS   */
      515     8937                                                /* record that had not been written.  */
      516     8938                                                /* Don't do anything about it         */
      517     8939    3               CASE(4);                    /* DOUBLE EOD hit                     */
      518     8940    3                 IF M$EI$ -> F$DCB.VOL ~= IN_SN.COUNT /* Not last VOL            */
      519     8941    3                  THEN                     /* Just a VOL transition              */
      520     8942    4                  DO;
      521     8943    4                     CALL M$CVOL (FPT_CVOL_EI)
      522     8944    5                      WHENALTRETURN DO;
      523     8945    5                         CALL VPL$ERR_PROC(3,0,,,,,M$EI#);
      524     8946    5                         END;              /*  end  ALTRETURN                    */
      525     8947    4                     END;
      526     8948    3                  ELSE                     /* This means end of set              */
      527     8949    4                  DO;
      528     8950    4                     CALL VPG$WRITE_OUT(0,1);
      529     8951    4                     ALTRETURN;            /* Cause CA loop to exit              */
      530     8952    4                     END;
      531     8953    3               CASE(5);                    /* This is a chunk of a huge record   */
      532     8954    3                 CALL VPG$WRITE_OUT(IN_ARS,0);
      533     8955    3               END;                        /* END CASE                           */
      534     8956    2              END;                         /* END WHILE                          */
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:96   
      535     8957        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:97   
      536     8958        /******************************************************************************/
      537     8959        /* COPY output utility routines.  These routines simulate the appropriate     */
      538     8960        /* PMMEs.                                                                     */
      539     8961        /******************************************************************************/
      540     8962    1   WRITE:  PROC ALTRET;
      541     8963        /**/
      542     8964        /*  Entry points  */
      543     8965        /**/
      544     8966    2   DCL XSA$WRITE ENTRY(2) ALTRET;
      545     8967        /**/
      546     8968    3           DO CASE(WRITE_MODE);
      547     8969    3            CASE(0);                       /* Normal PMME                        */
      548     8970    3              CALL M$WRITE(FPT_WRITE_HDR) ALTRET(PMME_ALT);
      549     8971    3            CASE(1);                       /* FSFA routines                      */
      550     8972    3              CALL XSA$WRITE(FPT_WRITE_HDR,OFSFA_PARAM) ALTRET(FSFA_ALT);
      551     8973    3            END;                           /* END CASE                           */
      552     8974    2           RETURN;
      553     8975        /**/
      554     8976    2   PMME_ALT: ;                             /* Normal PMME ALTRET                 */
      555     8977    2           OUTPUT_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      556     8978    2           ALTRETURN;
      557     8979        /**/
      558     8980    2   FSFA_ALT: ;                             /* FSFA routine ALTRET                */
      559     8981    2           OUTPUT_ERR = OFSFA_PARAM.ERR;
      560     8982    2           ALTRETURN;
      561     8983        /**/
      562     8984    2   END WRITE;
      563     8985        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:98   
      564     8986    1   GET_NEXT_REC: PROC(RET_VAL);
      565     8987        /*I* NAME: GET_NEXT_REC
      566     8988             PURPOSE: To get the next input record.
      567     8989             CALL: CALL GET_NEXT_REC(RET_VAL);
      568     8990             DESCRIPTION: This procedure attempts to get the next record specified for
      569     8991                          the input file. It maintains CUR_SEQ_NO (SBIN WORD), a value
      570     8992                          which is the sequence number of the current record; if it is
      571     8993                          not known what the current sequence number is, the value
      572     8994                          will be -1. On returning, RET_VAL (SBIN WORD) will be:
      573     8995                            RET_VAL          DESCRIPTION
      574     8996                            -------          -----------
      575     8997                               0             All fine. The record was obtained.
      576     8998                               1             Done. No more records this specification.
      577     8999                               2             ONE EOD was hit.
      578     9000                               3             Attempt to read a record that had not
      579     9001                                             been written on a RANDOM or IDS file
      580     9002                               4             DOUBLE EOD was hit.
      581     9003                               5             This is a chunk of a huge record.
      582     9004        */
      583     9005    2   DCL RET_VAL SBIN WORD;
      584     9006    2   DCL UBIN_KEY UBIN WORD;
      585     9007    2           RET_VAL = 0;
      586     9008    2   NEXT_REC:
      587     9009    2           IF SEQ_READ = 1
      588     9010    2            THEN                           /* SEQUENTIAL READ                    */
      589     9011    3            DO;
      590     9012    3               IF CUR_SEQ_NO>-1 AND ~USE_CONT
      591     9013    3                THEN
      592     9014    3                  CUR_SEQ_NO = CUR_SEQ_NO+1;
      593     9015    3   READ_REC:   CALL READ ALTRET(READ_EI_ALT);
      594     9016    3               IF ICB.DEV_MASK.DEV_TAPE    /* DEVICE/FREE TAPE                   */
      595     9017    3                 AND IN_ARS = FPT_READ_EI.BUF_.BOUND+1
      596     9018    3                THEN
      597     9019    3                  GOTO LD;
      598     9020    3               IF ICB.REC_SEL.CNT>0        /* IF RECORD SELECTION IN EFFECT      */
      599     9021    3                THEN
      600     9022    4                DO CASE(ICB.REC_SEL.SPEC.TYPE(REC_SEL_IDX));
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:99   
      601     9023    4                 CASE(2);                  /* KEYED RANGE                        */
      602     9024    4                   IF ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX) = ADDR(NIL)
      603     9025    4                    THEN                   /* Open ended range specified         */
      604     9026    4                      GOTO KSELR_OK;
      605     9027    4                   IF ADDR(EI_KEY)->TEXT$C_BIT.STRING =
      606     9028    4                     ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->
      607     9029    4                     TEXT$C_BIT.STRING
      608     9030    4                    THEN                   /* Return key matches END key content */
      609     9031    5                    DO;
      610     9032    5                       IF EI_KEY.LEN=ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->TEXT$C.
              9032                                LEN
      611     9033    5                        THEN
      612     9034    5                          SEQ_READ = 0;    /* LAST OF RANGE                      */
      613     9035    5                       IF EI_KEY.LEN>ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->TEXT$C.
              9035                                LEN
      614     9036    5                        THEN
      615     9037    6                        DO;                /* PAST END OF RANGE                  */
      616     9038    6                           SEQ_READ = 0;
      617     9039    6                           GOTO NEXT_REC;
      618     9040    6                           END;
      619     9041    5                       IF EI_KEY.LEN<ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->TEXT$C.
              9041                                LEN
      620     9042    5                        THEN               /* IN RANGE                           */
      621     9043    5                          ;
      622     9044    5                       END;
      623     9045    4                   IF ADDR(EI_KEY)->TEXT$C_BIT.STRING >
      624     9046    4                     ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->
      625     9047    4                     TEXT$C_BIT.STRING
      626     9048    4                    THEN                   /* Return key too big                 */
      627     9049    5                    DO;
      628     9050    5                       SEQ_READ = 0;
      629     9051    5                       GOTO NEXT_REC;
      630     9052    5                       END;
      631     9053    4                   IF ADDR(EI_KEY)->TEXT$C_BIT.STRING <
      632     9054    4                     ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->
      633     9055    4                     TEXT$C_BIT.STRING
      634     9056    4                    THEN                   /* Still in selected range            */
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:100  
      635     9057    4   KSELR_OK:          ;
      636     9058    4                 CASE(1);                  /* LOGICAL RECORD NUMBER RANGE        */
      637     9059    4                   IF CUR_SEQ_NO = ICB.REC_SEL.SPEC.FINISH.SEQ(REC_SEL_IDX)
      638     9060    4                    THEN
      639     9061    4                      SEQ_READ = 0;
      640     9062    4                 END;                      /* END CASE                           */
      641     9063    3               END;
      642     9064        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:101  
      643     9065    2            ELSE                           /* KEYED READ                         */
      644     9066    3            DO;
      645     9067    3               IF ICB.REC_SEL.CNT=0        /* IF NO RECORD SELECTION             */
      646     9068    3                THEN
      647     9069    4                DO;                        /* NO - START OR TRY SOME MORE        */
      648     9070    4                   SEQ_READ = 1;
      649     9071    4                   GOTO NEXT_REC;
      650     9072    4                   END;
      651     9073    3                ELSE                       /* RECORD SELECTION IN EFFECT         */
      652     9074    4                DO;
      653     9075    4                   REC_SEL_IDX = REC_SEL_IDX+1;
      654     9076    4                   IF REC_SEL_IDX>=ICB.REC_SEL.CNT
      655     9077    4                    THEN
      656     9078    5                    DO;
      657     9079    5                       IF ICB.DEV_MASK.DEV_TAPE
      658     9080    5                         AND ICB.CLPOS=1
      659     9081    5                        THEN
      660     9082    6                        DO;                /* GET TO NEXT FT FILE                */
      661     9083    6                           FPT_PFIL_EI.V.BOF# = %NO#;
      662     9084    6                           CALL PFIL;
      663     9085    6                           END;
      664     9086    5                       RET_VAL = 1;
      665     9087    5                       END;
      666     9088    5                    ELSE DO;
      667     9089    5                       FPT_PREC_EI.V.N# = 0; /* In case of PREC by KEY           */
      668     9090    6                       DO CASE(ICB.REC_SEL.SPEC.TYPE(REC_SEL_IDX));
      669     9091    6                        CASE(2);           /* KEYED RANGE                        */
      670     9092    6                          IF NOT (M$EI$->F$DCB.ORG=%KEYED# OR M$EI$->F$DCB.ORG=%
              9092                                   INDEXED#)
      671     9093    6                           THEN
      672     9094    6                             CALL VPL$ERR_PROC(2,20,'05'O,,,,DCBNUM(M$EI));
      673     9095        /*E* ERROR:   VPE-00020
      674     9096             MESSAGE: Keyed record selection not allowed% on %UF%
      675     9097         MESSAGE1: File %%UF %is not KEYED or INDEXED, so keyed record selection is not allo
              9097        wed.
      676     9098        */
      677     9099    6                          IF M$EI$->F$DCB.ORG=%INDEXED#
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:102  
      678     9100    6                            OR M$EI$->F$DCB.ORG=%IREL#
      679     9101    6                           THEN            /* INDEXED files KEY by data only     */
      680     9102    6                             FPT_PREC_EI.KEY_ =
      681     9103    6                               VECTOR(ICB.REC_SEL.SPEC.START.KEY$(REC_SEL_IDX)
      682     9104    6                               ->TEXT$C.STRING);
      683     9105    6                           ELSE            /* Other files KEY by TEXTC           */
      684     9106    6                             FPT_PREC_EI.KEY_ =
      685     9107    6                               VECTOR(ICB.REC_SEL.SPEC.START.KEY$(REC_SEL_IDX)->TEXT$C)
              9107                                        ;
      686     9108    6                          FPT_PREC_EI.V.KEYS# = %YES#;
      687     9109    6                          CUR_SEQ_NO = -1; /* LOST TRACK OF SEQUENCE NUM         */
      688     9110    6                          IF ICB.DEV_MASK.MAN_TAPE
      689     9111    6                           THEN            /* MUST PFIL TO START OF TAPE FILE*/
      690     9112    7                           DO;
      691     9113    7                              FPT_PFIL_EI.V.BOF# = %YES#;
      692     9114    7                              CALL PFIL;
      693     9115    7                              END;
      694     9116    6                        CASE(1);           /* LOGICAL RECORD NUMBER RANGE        */
      695     9117    6                          FPT_PREC_EI.V.KEYS# = %NO#;
      696     9118    6                          IF CUR_SEQ_NO=-1
      697     9119    6                           THEN
      698     9120    7                           DO;             /* POSITION TO START OF FILE          */
      699     9121    7                              FPT_PFIL_EI.V.BOF# = %YES#;
      700     9122    7                              CALL PFIL
      701     9123    8                               WHENRETURN DO;
      702     9124    8                                  IF ICB.DEV_MASK.DEV_TAPE
      703     9125    8                                   THEN    /* MUST SKIP TAPE MARK ON FT#         */
      704     9126    8                                     CALL READ ALTRET(IGNORE_ERR);
      705     9127    8                                  END;     /*  end  RETURN                       */
      706     9128    8                               WHENALTRETURN DO;
      707     9129    8                                  IF INPUT_ERR.ERR# ~= %E$BOT
      708     9130    8                                   THEN
      709     9131    8                                     GOTO STEP_ERR;
      710     9132    8                                  END;     /*  end  ALTRETURN                    */
      711     9133    7   IGNORE_ERR:                CUR_SEQ_NO = 0;
      712     9134    7                              END;
      713     9135    6                          FPT_PREC_EI.V.N# = ICB.REC_SEL.SPEC.START.SEQ(REC_SEL_IDX)
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:103  
      714     9136    6                            -CUR_SEQ_NO-1;
      715     9137    6                          CUR_SEQ_NO = ICB.REC_SEL.SPEC.START.SEQ(REC_SEL_IDX)-1;
      716     9138    6                        END;               /* END CASE                           */
      717     9139    5   PREC:               CALL PRECORD ALTRET(PREC_EI_ALT);
      718     9140    5                       SEQ_READ = 1;
      719     9141    5                       GOTO NEXT_REC;
      720     9142    5                       END;
      721     9143    4                   END;
      722     9144    3               END;
      723     9145    2           RETURN;
      724     9146        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:104  
      725     9147    2   PREC_EI_ALT: IF INPUT_ERR.ERR# = %E$EOF OR
      726     9148    2             INPUT_ERR.ERR# = %E$RANBADBLK
      727     9149    2            THEN
      728     9150    3            DO;
      729     9151    3               IF ICB.DEV_MASK.DEV_TAPE    /* DEVICE/FREE TAPE                   */
      730     9152    3                THEN
      731     9153    4                DO;                        /* GET BACK INSIDE CURRENT FT FILE    */
      732     9154    4                   FPT_PFIL_EI.V.BOF# = %YES#;
      733     9155    4                   CALL PFIL;
      734     9156    4                   END;
      735     9157    3               CALL VPL$ERR_PROC(2,30,'05'O,,,,DCBNUM(M$EI));
      736     9158        /*E* ERROR:   VPE-00030
      737     9159             MESSAGE: Sequence number or key past EOF% on %UF%
      738     9160            MESSAGE1: The sequence number or key specifies records past the end% of %UF%
      739     9161        */
      740     9162    3               CUR_SEQ_NO = -1;
      741     9163    3               GOTO NEXT_REC;
      742     9164    3               END;
      743     9165    2           IF INPUT_ERR.ERR# = %E$NOKEY THEN
      744     9166    2              IF ICB.REC_SEL.SPEC.START.KEY$(REC_SEL_IDX) = ADDR(NIL)
      745     9167    3                OR ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX) = ADDR(NIL) THEN DO;
      746     9168    3                  SEQ_READ = 1;
      747     9169    3                  GOTO NEXT_REC;
      748     9170    3                  END;
      749     9171    2               ELSE
      750     9172    2                 IF ICB.REC_SEL.SPEC.START.KEY$(REC_SEL_IDX)->TEXT$C
      751     9173    2                   ~=ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->TEXT$C
      752     9174    3                  THEN DO;                 /* RANGE                              */
      753     9175    3                     SEQ_READ = 1;
      754     9176    3                     GOTO NEXT_REC;
      755     9177    3                     END;
      756     9178                /* If the user hit break during the PRECORD, and then continued,
      757     9179                   we have to update the number of records to skip and retry the
      758     9180                   precord to get to the correct record                          */
      759     9181    3           IF INPUT_ERR.ERR# = %E$PMMEINT THEN DO;
      760     9182    3               FPT_PREC_EI.V.N# = FPT_PREC_EI.V.N# - M$EI$->F$DCB.ARS;
      761     9183    3               GOTO PREC;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:105  
      762     9184    3               END;
      763     9185    2           GOTO STEP_ERR;                  /* REPORT UNEXPECTED ERROR AS A       */
      764     9186                                                /* ABORT-STEP ERROR                   */
      765     9187        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:106  
      766     9188    2   READ_EI_ALT: IF INPUT_ERR.ERR# = %E$EOF
      767     9189    2            THEN
      768     9190    3            DO;
      769     9191    3               SEQ_READ = 0;
      770     9192    3               EOF_SOURCE = '1'B;
      771     9193    3               IF ICB.REC_SEL.CNT>0
      772     9194    3                THEN
      773     9195    4                DO;
      774     9196    4                   LAST_SEQ_NO = CUR_SEQ_NO; /* Stash before stomp	*/
      775     9197    4                   IF ICB.DEV_MASK.DEV_TAPE
      776     9198    4                    THEN                   /* FT                                 */
      777     9199    5                    DO;                    /* Get back inside the FT file        */
      778     9200    5                       FPT_PFIL_EI.V.BOF# = %YES#;
      779     9201    5                       CALL PFIL;
      780     9202    5                       CUR_SEQ_NO = CUR_SEQ_NO-1;
      781     9203    5                       END;
      782     9204    4                    ELSE
      783     9205    4                      CUR_SEQ_NO = -1;
      784     9206    4                   IF ICB.REC_SEL.SPEC.TYPE(REC_SEL_IDX) = 1 /*LOGICAL*/
      785     9207    4                     AND LAST_SEQ_NO = ICB.REC_SEL.SPEC.START.SEQ(REC_SEL_IDX)
      786     9208    4                    THEN                   /* We never got anything              */
      787     9209    4                      CALL VPL$ERR_PROC(2,30,'05'O,,,,DCBNUM(M$EI));
      788     9210    4                   IF (ICB.REC_SEL.SPEC.TYPE(REC_SEL_IDX)=2 /*KEYED*/
      789     9211    4                     AND ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)~=ADDR(NIL))
      790     9212    4                     OR (ICB.REC_SEL.SPEC.TYPE(REC_SEL_IDX)=1 /*LOGICAL*/
      791     9213    4                     AND ICB.REC_SEL.SPEC.FINISH.SEQ(REC_SEL_IDX)~=0)
      792     9214    4                    THEN
      793     9215    4                      CALL VPL$ERR_PROC(2,40,'05'O,,,,DCBNUM(M$EI));
      794     9216    4                   GOTO NEXT_REC;
      795     9217    4                   END;
      796     9218        /*E*   ERROR: VPE-00040
      797     9219             MESSAGE: EOF hit before end of record sequence range% on %UF%
      798     9220            MESSAGE1: File %%UF %does not contain enough records to satisfy the
      799     9221                      record selection criteria.
      800     9222        */
      801     9223    3                ELSE
      802     9224    4                DO;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:107  
      803     9225    4                   CUR_SEQ_NO = 0;         /* Start new sequence numbers         */
      804     9226    4                   IF M$EI$->F$DCB.TYC.EOD(1)
      805     9227    4                    THEN
      806     9228    4                      CALL EOD_HIT;
      807     9229    4                    ELSE
      808     9230    4                      RET_VAL = 1;
      809     9231    4                   RETURN;
      810     9232    4                   END;
      811     9233    3               END;
      812     9234    2           IF INPUT_ERR.ERR# = %E$LD
      813     9235    2            THEN
      814     9236    3   LD:      DO;                            /* LOST DATA                          */
      815     9237    3               IF ~USE_CONT
      816     9238    3                THEN
      817     9239    3                  CALL VPD$ENLARGE_BUF(0); /* Double the buffer size             */
      818     9240    3               IF USE_CONT                 /* Did we run out of Data Segment ?   */
      819     9241    3                THEN
      820     9242    4                DO;
      821     9243    4                   RET_VAL = 5;
      822     9244    4                   RETURN;
      823     9245    4                   END;
      824     9246    3               FPT_READ_EI.BUF_   = IN_BUF_VECTOR;
      825     9247    3               FPT_PREC_EI.V.N# = -1;
      826     9248    3               FPT_PREC_EI.V.KEYS# = %NO#;
      827     9249    3               CALL PRECORD ALTRET(STEP_ERR);
      828     9250    3               GOTO READ_REC;              /* Try again with bigger buffer       */
      829     9251    3               END;
      830     9252    2           IF INPUT_ERR.ERR# = %E$DI AND
      831     9253    2             ICB.FLAVOR.HOLY_ORG
      832     9254    2            THEN                           /* We tried to read an un-written     */
      833     9255                                                /* record on file with ORG that       */
      834     9256                                                /* allows 'holes'                     */
      835     9257    3            DO;                            /* IGNORE E$DI FOR 'HOLE OK' ORGS     */
      836     9258    3               IF REC_SEL_IDX > -1 AND ICB.REC_SEL.SPEC.FINISH.SEQ(REC_SEL_IDX) <=
              9258                        CUR_SEQ_NO
      837     9259    3                THEN
      838     9260    3                  SEQ_READ = 0;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:108  
      839     9261    3               RET_VAL = 3;
      840     9262    3               RETURN;
      841     9263    3               END;
      842     9264    2           IF INPUT_ERR.ERR# = %E$BLNKTP   /* Blank tape on read                 */
      843     9265    2             OR INPUT_ERR.ERR# = %E$IOERR  /* unrecoverable I/O error            */
      844     9266    3            THEN DO;
      845     9267    3               CALL VPF$CLOSE_IN(1)
      846     9268    4                WHENRETURN DO;
      847     9269    4                   CALL VPL$ERR_PROC(3,0,,INPUT_ERR,,,M$EI#); /* Abort Command   */
      848     9270    4                   END;                    /*  end  RETURN                       */
      849     9271    4                WHENALTRETURN DO;
      850     9272    4                   END;                    /*  ignore ALTRETURN                  */
      851     9273    3               END;
      852     9274    2   STEP_ERR: ;
      853     9275    2           CALL VPL$ERR_PROC(2,0,,INPUT_ERR,,,M$EI#); /* REPORT UNEXPECTED ERROR:*/
      854     9276                                                /* ABORT-STEP ERROR                   */
      855     9277    2           RETURN;
      856     9278        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:109  
      857     9279        /******************************************************************************/
      858     9280        /* AN EOD HAS BEEN HIT.                                                       */
      859     9281        /* This routine checks for a following (I.E. double) EOD.  If a double        */
      860     9282        /* EOD is detected, RET_VAL is set to 4 and the tape is left positioned       */
      861     9283        /* after the second one.                                                      */
      862     9284        /* If legitimate data is detected after the first EOD, the tape is re-        */
      863     9285        /* positioned to after the first EOD.                                         */
      864     9286        /******************************************************************************/
      865     9287    2   EOD_HIT: PROC;
      866     9288    3           IF NOT ICB.DEV_MASK.DEV_TAPE
      867     9289    3            THEN                           /* Don't bother with DEOD check       */
      868     9290    4            DO;
      869     9291    4               RET_VAL = 2;                /* One EOD                            */
      870     9292    4               RETURN;
      871     9293    4               END;
      872     9294    3           CALL READ
      873     9295    4            WHENALTRETURN DO;
      874     9296    4               IF INPUT_ERR.ERR# = %E$EOF AND /* EOD error                       */
      875     9297    4                 M$EI$ -> F$DCB.TYC.EOD(1) /* DCB also says EOD                  */
      876     9298    4                THEN                       /* Second EOD just read               */
      877     9299    5                DO;
      878     9300    5                   RET_VAL = 4;
      879     9301    5                   RETURN;
      880     9302    5                   END;
      881     9303    4               IF INPUT_ERR.ERR# = %E$BLNKTP OR /* Read blank tape error         */
      882     9304    4                 INPUT_ERR.ERR# = %E$IOERR /* Just any plain tape I/O error      */
      883     9305    4                THEN                       /* Tell user about it                 */
      884     9306    4                  CALL VPL$ERR_PROC(3,0,,,,,M$EI#);
      885     9307        /**/
      886     9308        /*          Otherwise the error will be treated as a data error, in which     */
      887     9309        /*          case we just act as if the read worked fine (ha-ha)               */
      888     9310        /**/
      889     9311    4               END;
      890     9312    3           FPT_PREC_EI.V.KEYS# = %NO#;
      891     9313    3           IF ICB.CLPOS = 2 /* BOF - We need to back up to the file just read    */
      892     9314    3            THEN
      893     9315    3              FPT_PREC_EI.V.N# = -2;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:110  
      894     9316    3            ELSE
      895     9317    3              FPT_PREC_EI.V.N# = -1;
      896     9318    3           CALL PRECORD
      897     9319    4            WHENALTRETURN DO;
      898     9320    4               IF INPUT_ERR.ERR# ~= %E$BOF
      899     9321    4                THEN
      900     9322    4                  CALL VPL$ERR_PROC(3,0,,,,,M$EI#);
      901     9323    4               END;
      902     9324    3           RET_VAL = 2;                    /* ONE EOD encountered                */
      903     9325        /**/
      904     9326    3   END EOD_HIT;
      905     9327        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:111  
      906     9328        /******************************************************************************/
      907     9329        /* COPY input utility routines.  These routines simulate the appropriate      */
      908     9330        /* PMMEs.                                                                     */
      909     9331        /******************************************************************************/
      910     9332    2   READ:   PROC ALTRET;
      911     9333        /**/
      912     9334        /*  Entry points  */
      913     9335        /**/
      914     9336    3   DCL XSA$PFIL ENTRY(2) ALTRET;
      915     9337    3   DCL XSA$READ ENTRY(2) ALTRET;
      916     9338    3   DCL XSA$PRECORD ENTRY(2) ALTRET;
      917     9339        /**/
      918     9340    3           FPT_READ_EI.V.DVBYTE.CONT# = USE_CONT;
      919     9341    4           DO CASE(READ_MODE);
      920     9342    4            CASE(0);                       /* Normal PMME                        */
      921     9343    4              CALL M$READ(FPT_READ_EI) ALTRET(PMME_ALT);
      922     9344    4              GOTO PMME_OK;
      923     9345    4            CASE(1);                       /* FSFA routines                      */
      924     9346    4              CALL XSA$READ(FPT_READ_EI,IFSFA_PARAM) ALTRET(FSFA_ALT);
      925     9347    4              GOTO FSFA_OK;
      926     9348    4            END;                           /* END CASE                           */
      927     9349        /**/
      928     9350    3   PFIL:   ENTRY ALTRET;
      929     9351    4           DO CASE(READ_MODE);
      930     9352    4            CASE(0);                       /* Normal PMME                        */
      931     9353    4              CALL M$PFIL(FPT_PFIL_EI) ALTRET(PMME_ALT);
      932     9354    4              GOTO PMME_OK;
      933     9355    4            CASE(1);                       /* FSFA routines                      */
      934     9356    4              CALL XSA$PFIL(FPT_PFIL_EI,IFSFA_PARAM) ALTRET(FSFA_ALT);
      935     9357    4              GOTO FSFA_OK;
      936     9358    4            END;                           /* END CASE                           */
      937     9359        /**/
      938     9360    3   PRECORD: ENTRY ALTRET;
      939     9361    4           DO CASE(READ_MODE);
      940     9362    4            CASE(0);                       /* Normal PMME                        */
      941     9363    4              CALL M$PRECORD(FPT_PREC_EI) ALTRET(PMME_ALT);
      942     9364    4              GOTO PMME_OK;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:112  
      943     9365    4            CASE(1);                       /* FSFA routines                      */
      944     9366    4              CALL XSA$PRECORD(FPT_PREC_EI,IFSFA_PARAM) ALTRET(FSFA_ALT);
      945     9367    4              GOTO FSFA_OK;
      946     9368    4            END;                           /* END CASE                           */
      947     9369        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:113  
      948     9370    3   PMME_ALT: ;                             /* Normal PMME ALTRET                 */
      949     9371    3           INPUT_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      950     9372    3           IN_ARS = M$EI$->F$DCB.ARS;
      951     9373    3           ALTRETURN;
      952     9374        /**/
      953     9375    3   FSFA_ALT: ;                             /* FSFA routine ALTRET                */
      954     9376    3           INPUT_ERR = IFSFA_PARAM.ERR;
      955     9377    3           IN_ARS = IFSFA_PARAM.ARS#;
      956     9378    3           ALTRETURN;
      957     9379        /**/
      958     9380    3   PMME_OK: ;                              /* Normal PMME normal return          */
      959     9381    3           IN_ARS = M$EI$ -> F$DCB.ARS;
      960     9382    3           IN_DVBYTE = M$EI$ -> F$DCB.DVBYTE;
      961     9383    3           IN_EOMCHAR = M$EI$ -> F$DCB.EOMCHAR;
      962     9384    3           RETURN;
      963     9385        /**/
      964     9386    3   FSFA_OK: ;                              /* FSFA routine normal return         */
      965     9387    3           IN_ARS = IFSFA_PARAM.ARS#;
      966     9388    3           IN_DVBYTE = IFSFA_PARAM.DVBYTE;
      967     9389    3           IN_EOMCHAR = IFSFA_PARAM.EOMCHAR#;
      968     9390    3           RETURN;
      969     9391        /**/
      970     9392    3   END READ;
      971     9393    2   END GET_NEXT_REC;
      972     9394        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:114  
      973     9395    1   SET_UP_IN: PROC;
      974     9396        /*I* NAME: SET_UP_IN
      975     9397             PURPOSE: To prepare for reading from input file.
      976     9398             CALL: CALL SET_UP_IN;
      977     9399             DESCRIPTION: This procedure prepares for reading input by
      978     9400                          trying to get a large enough buffer, setting up the READ
      979     9401                          FPT, and setting up control variables.
      980     9402        */
      981     9403    2   DCL I SBIN WORD;
      982     9404    2   DCL TEMP SBIN WORD;
      983     9405    2   DCL PTR$ PTR;
      984     9406    2           IF ICB.FLAVOR.MANAGED           /* IF MANAGED                         */
      985     9407    2            THEN
      986     9408    3            DO;
      987     9409    3               PTR$ = ADDR(FPARAM_BUF);
      988     9410    3               TEMP = 3;
      989     9411    3               CALL XSF$LOCCODE(PTR$,TEMP) ALTRET(XSF_ALT);
      990     9412    3               I = PTR$->CODE03.RCSZ+2;    /* MAX RECORD SIZE + 1K               */
      991     9413    3               END;
      992     9414    2            ELSE
      993     9415    2   XSF_ALT:   I=MIN_PAGES;
      994     9416    2           IF (MAXIMUM(OCB.RECSIZE.MIN_SIZE,OCB.RECSIZE.MAX_SIZE)+4119)/4096 > I
      995     9417    2            THEN
      996     9418    2              I = (MAXIMUM(OCB.RECSIZE.MIN_SIZE,OCB.RECSIZE.MAX_SIZE)+4119)/4096;
      997     9419                                                /* SIZE NEEDED FOR RECSIZE            */
      998     9420    2           CALL VPD$ENLARGE_BUF(I);
      999     9421    2           USE_CONT = %NO#;                /* We will find out later if we must  */
     1000     9422    2           FPT_READ_EI.BUF_   = IN_BUF_VECTOR;
     1001     9423    2           IF ICB.FLAVOR.GRANB
     1002     9424    2             OR M$EI$->F$DCB.ORG=%IDS#
     1003     9425    2             OR M$EI$->F$DCB.ORG=%CG#
     1004     9426    2            THEN
     1005     9427    2              FPT_READ_EI.BUF_.BOUND = 4095;
     1006     9428    2           FPT_READ_EI.V.SEED# = BINBIT(ICB.CRPT,36);
     1007     9429    2           FPT_READ_EI.V.DVBYTE.BIN# = ICB.BIN;
     1008     9430    2           FPT_READ_EI.V.DVBYTE.TRANS# = ICB.TRANS;
     1009     9431    2           CUR_SEQ_NO = 0;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:115  
     1010     9432    2           REC_SEL_IDX = -1;
     1011     9433    2           SEQ_READ = 0;
     1012     9434    2           IF M$EI$ -> F$DCB.ORG = %INDEXED#
     1013     9435    2             OR M$EI$ -> F$DCB.ORG = %IREL#
     1014     9436    2            THEN                           /* KEY_ frames data only              */
     1015     9437    3            DO;
     1016     9438    3               FPT_READ_EI.KEY_ = VECTOR(EI_KEY.KEY);
     1017     9439    3               EI_KEY.LEN = M$EI$->F$DCB.KEYL; /* Fake LEN byte                  */
     1018     9440    3               END;
     1019     9441    2            ELSE                           /* KEY_ frames TEXTC key              */
     1020     9442    2              FPT_READ_EI.KEY_ = VECTOR(EI_KEY);
     1021     9443        /**/
     1022     9444        /*  HEAD defaults to YES if we are going to a UR destination, and the         */
     1023     9445        /*  source was not UR.  Note that specifying ORG=UR on the destination is     */
     1024     9446        /*  tantamount to changing to UR.                                             */
     1025     9447        /**/
     1026     9448    2           HEAD_TO_USE = OCB.HEAD;         /* Output option determines default   */
     1027     9449    2           IF ICB.HEAD_OPT ~= 0            /* IF there is an INPUT option        */
     1028     9450    2            THEN                           /* it takes prescedence               */
     1029     9451    2              HEAD_TO_USE = ICB.HEAD_OPT;
     1030     9452    2           IF HEAD_TO_USE > 0              /* If HEAD specified, leave it alone  */
     1031     9453    2            THEN
     1032     9454    2              GOTO HEAD_DONE;
     1033     9455    2           IF ((~ICB.FLAVOR.UR             /* If flavor is changing to UR        */
     1034     9456    2             AND OCB.FLAVOR.UR)
     1035     9457    2             OR OCB.ORG = 9)               /* OR ORG=UR re-specified             */
     1036     9458    2             AND ~M$EO$->F$DCB.DDEV.GR     /* AND It's not a graphics place      */
     1037     9459    2            THEN
     1038     9460    2              HEAD_TO_USE = 2;             /* PUT OUT THE HEADER                 */
     1039     9461    2            ELSE
     1040     9462    2              HEAD_TO_USE = 1;             /* DONT                               */
     1041     9463    2   HEAD_DONE: ;
     1042     9464        /**/
     1043     9465        /*  PAGE defaults to YES only if we intend to print a header.  */
     1044     9466        /**/
     1045     9467    2           IF OCB.PAGE > 0                 /* PAGE specified                     */
     1046     9468    2            THEN
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:116  
     1047     9469    2              GOTO PAGE_DONE;
     1048     9470    2           IF HEAD_TO_USE = 2              /* If we intend to print head         */
     1049     9471    2            THEN
     1050     9472    2              OCB.PAGE = 2;                /* Start it on a new page             */
     1051     9473    2            ELSE
     1052     9474    2              OCB.PAGE = 1;                /* DONT                               */
     1053     9475    2   PAGE_DONE: ;
     1054     9476    2   END SET_UP_IN;
     1055     9477        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:117  
     1056     9478    1   VPE$BREAK_ON_READ_WRITE: ENTRY ALTRET;
     1057     9479
     1058     9480        /*D*  ENTRY:   VPE$BREAK_ON_READ_WRITE
     1059     9481              DESCRIPTION: Prints the "Break at ... C to continue" message during a
     1060     9482                       COPY, COPYALL, or COPYSTD operation.
     1061     9483        */
     1062     9484
     1063     9485    1           OUT_COL = 0;
     1064     9486    1           OLD_BREAKS = 1;
     1065     9487
     1066     9488        /*  Format and print message with interrupt type and status.  */
     1067     9489
     1068     9490    1           CALL VPE$FMT_ABORT(60,'05'O,M$EI#);
     1069     9491
     1070     9492        /*E*   ERROR: VPE-00060
     1071     9493               MESSAGE: aBREAK at%U1 (%UF).  C to continue.
     1072     9494        */
     1073     9495    1           SUBSTR (ERR_BUF, 0, 1) = %VFC_TRANSITION1;
     1074     9496    1           FPT_WRITE_UC.BUF_ = VECTOR(SUBSTR(ERR_BUF,0,ERR_LEN));
     1075     9497    1           FPT_WRITE_UC.V.DVBYTE.VFC# = %YES#;
     1076     9498    1           CALL M$WRITE(FPT_WRITE_UC);
     1077     9499    1           FPT_WRITE_UC.BUF_=VECTOR(CONTINUE_MSG);
     1078     9500    1           CALL M$WRITE(FPT_WRITE_UC);
     1079     9501    1           FPT_WRITE_UC.V.DVBYTE.VFC# = %NO#;
     1080     9502
     1081     9503    1           RETURN;
     1082     9504
     1083     9505    1   END VPE$READ_WRITE;
     1084     9506        %EOD;

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:118  
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPE$READ_WRITE.

   Procedure VPE$READ_WRITE requires 984 words for executable code.
   Procedure VPE$READ_WRITE requires 26 words of local(AUTO) storage.

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:119  

 Object Unit name= VPE$READ_WRITE                             File name= VPE$COPY.:E05TOU
 UTS= JUL 30 '97 07:27:16.16 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10  RoData even  UTS      5      5  VPE$READ_WRITE
   11   Data  even  none    60     74  VPE$READ_WRITE
   12   Proc  even  none   984   1730  VPE$READ_WRITE
   13  RoData even  none    55     67  VPE$READ_WRITE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes    yes     yes      Std        0  VPE$READ_WRITE
    12   1673          yes     yes      Std        0  VPE$BREAK_ON_READ_WRITE
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:120  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       8 VPL$ERR_PROC
         yes           Std       4 VPE$FMT_ABORT
         yes           Std       2 VPD$GET_SPEC_BUF
         yes           Std       2 VPG$WRITE_OUT
 yes     yes           Std       2 XSA$WRITE
         yes           Std       1 VPD$ENLARGE_BUF
 yes     yes           Std       1 VPF$CLOSE_IN
 yes     yes           Std       2 XSA$READ
 yes     yes           Std       2 XSA$PRECORD
 yes     yes           Std       2 XSA$PFIL
 yes     yes           Std       2 XSF$LOCCODE
                       Std       0 B_CONSPOOL_D
 yes     yes           Std       0 VPE$BREAK_ON_READ_WRITE
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:121  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  INPUT_ERR                             OUTPUT_ERR
     ERR_BUF                               ERR_LEN                               CLEAN_POINT
r    MIN_PAGES                             USE_CONT                              EOF_SOURCE
     OUT_COL                               BREAK_LOC                             OLD_BREAKS
     BREAK_MESSAGE_REPORTER                FPARAM_BUF                            SPEC_BUF
     OCB                                   IN_RES                                IN_SN
     ICB                                   IN_ARS                                IN_DVBYTE
     IN_EOMCHAR                            IN_BUF_VECTOR                         EI_KEY
     CUR_SEQ_NO                            READ_MODE                             WRITE_MODE
     IFSFA_PARAM                           OFSFA_PARAM                           M$EI
     M$EI$                                 M$EI#                                 M$EO
     M$EO$                                 M$EO1                                 M$ME
     M$SI                                  M$READFILE                            M$DO
     M$STD1                                M$SORT1                               B$TCB$
     FPT_WRITE_UC                          B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:122  


      387        1        /*T***********************************************************/
      388        2        /*T*                                                         */
      389        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      390        4        /*T*                                                         */
      391        5        /*T***********************************************************/
      392        6        VPE$READ_WRITE: PROC ALTRET;            /* Only altrets on DEOD of FT         */

      6 12 000000   000000 700200 xent  VPE$READ_WR* TSX0  ! X66_AUTO_0
        12 000001   000032 000000                    ZERO    26,0

      393        7        /*D* NAME: VPE$READ_WRITE
      394        8             CALL: CALL VPE$READ_WRITE;
      395        9             DESCRIPTION: This procedure copies the input file to the output file with
      396       10                          all specified options applied.
      397       11        */
      398       12        /**/
      399       13        /*  INCLUDE FILES  */
      400       14        /**/
      401       15        %INCLUDE VP_DATA_R;
      402     7002        %INCLUDE F$DCB;
      403     7051        %INCLUDE FM$FIT;
      404     7272        %INCLUDE B_ERRORS_C;
      405     8399        %INCLUDE NK_VFC_C;
      406     8473        /**/
      407     8474        /*  BASED DATA  */
      408     8475        /**/
      409     8476        %CODE03;
      410     8483        %B$TCB;
      411     8486        %B$ALT;
      412     8494    1   DCL CHAR$140 CHAR(140) BASED;
      413     8495    1   DCL 1 TEXT$C BASED,
      414     8496    1         2 LEN UBIN BYTE UNAL,
      415     8497    1         2 STRING CHAR(TEXT$C.LEN);
      416     8498    1   DCL 1 TEXT$C_BIT BASED,
      417     8499    1         2 LEN UBIN BYTE UNAL,
      418     8500    1         2 STRING,
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:123  
      419     8501    1           3 * CHAR(TEXT$C_BIT.LEN);
      420     8502        /**/
      421     8503        /*  CONSTANT  */
      422     8504        /**/
      423     8505    1   DCL MOP_7_DIGITS(0:1) BIT(9) CONSTANT INIT(%MVZB6,%MVC1);
      424     8506    1   DCL CONTINUE_MSG CHAR(0) CONSTANT INIT('@C to continue ');
      425     8507        /**/
      426     8508        /*  LOCAL AUTO  */
      427     8509        /**/
      428     8510    1   DCL X_CHAR CHAR(1);
      429     8511    1   DCL TEMP SBIN WORD;
      430     8512    1   DCL I SBIN;                             /* Temp location                      */
      431     8513    1   DCL RET_VAL SBIN WORD;
      432     8514    1   DCL REC_SEL_IDX SBIN WORD;
      433     8515    1   DCL SEQ_READ SBIN WORD;
      434     8516    1   DCL LAST_SEQ_NO SBIN WORD;
      435     8517        /**/
      436     8518        /*  LOCAL STATIC  */
      437     8519        /**/
      438     8520    1   DCL HEAD_TO_USE UBIN STATIC;            /* Will contain the final HEAD/NHEAD  */
      439     8521        %FPT_READ(FPTN = FPT_READ_EI,
      440     8522                  DCB = M$EI,
      441     8523                  WAIT = YES,
      442     8524                  CONT = NO,
      443     8525                FULL = YES,
      444     8526                  KEYR = YES);
      445     8565        %FPT_WRITE(FPTN = FPT_WRITE_HDR,
      446     8566                   VFC = YES,
      447     8567                    STCLASS = STATIC);
      448     8598        %FPT_DEVICE (FPTN = FPT_DEVICE,         /* set skip to next page              */
      449     8599                    PAGE = YES);
      450     8617        %FPT_PRECORD(FPTN = FPT_PREC_EI,
      451     8618                     DCB = M$EI,
      452     8619                     BRK = YES,
      453     8620                     KEYR = NO);
      454     8641        %FPT_PFIL(FPTN = FPT_PFIL_EI,
      455     8642                  DCB  = M$EI);
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:124  
      456     8657        %FPT_CVOL(FPTN = FPT_CVOL_EI,
      457     8658                  DCB = M$EI,
      458     8659                  STCLASS = STATIC);
      459     8674        /**/
      460     8675        /*  ENTRY DCLS  */
      461     8676        /**/
      462     8677    1   DCL XSF$LOCCODE ENTRY(2) ALTRET;
      463     8678        %VP_ENTRIES (OMIT=VPE$READ_WRITE);
      464     8886        /**/
      465     8887    1           REMEMBER NEXT_REC IN CLEAN_POINT;

   8887 12 000002   000065 635000 12                 EAA     NEXT_REC
        12 000003   000000 452400 xsym               STP2    CLEAN_POINT
        12 000004   000001 755000 xsym               STA     CLEAN_POINT+1

      466     8888    1           EI_KEY.LEN = BITBIN('777777777777'O); /* KEEPS KEYED OR RANDOM FILES  */

   8888 12 000005   000027 236000 xsym               LDQ     B_VECTNIL+23
        12 000006   000033 736000                    QLS     27
        12 000007   000000 552040 xsym               STBQ    EI_KEY,'40'O

      467     8889                                                /* FROM BEING WRITTEN WITH BAD        */
      468     8890                                                /* KEY BY CAUSING M$WRITE TO          */
      469     8891                                                /* ALTRET                             */
      470     8892    1           FPT_DEVICE.V.DCB# = OCB.DCBNM;  /*  COPY DCB is M$EO                  */

   8892 12 000010   000000 720000 xsym               LXL0    OCB
        12 000011   000042 740000 11                 STX0    FPT_DEVICE+6

      471     8893                                                /*  COPYALL  is M$EO1                 */
      472     8894    1           CALL SET_UP_IN;

   8894 12 000012   001465 701000 12                 TSX1    SET_UP_IN
        12 000013   000000 011000                    NOP     0

      473     8895                                                /* Put out a header (maybe)           */
      474     8896    1           BREAK_MESSAGE_REPORTER = ENTADDR(VPE$BREAK_ON_READ_WRITE);
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:125  

   8896 12 000014   001673 636000 12                 EAQ     s:9478
        12 000015   000000 756000 xsym               STQ     BREAK_MESSAGE_REPORTER

      475     8897    1           IF OCB.PAGE = 2                 /* PAGE title requested               */

   8897 12 000016   000264 235000 xsym               LDA     OCB+180
        12 000017   000002 115007                    CMPA    2,DL
        12 000020   000024 601000 12                 TNZ     s:8900

      476     8898    1            THEN
      477     8899    1              CALL M$DEVICE(FPT_DEVICE);

   8899 12 000021   000034 630400 11                 EPPR0   FPT_DEVICE
        12 000022   050006 713400                    CLIMB   20486
        12 000023   401000 401760                    pmme    nvectors=3

      478     8900    1           IF HEAD_TO_USE = 2              /* Put out a HEADER                   */

   8900 12 000024   000000 235000 11                 LDA     HEAD_TO_USE
        12 000025   000002 115007                    CMPA    2,DL
        12 000026   000065 601000 12                 TNZ     NEXT_REC

      479     8901    1            THEN
      480     8902    2            DO;

      481     8903    2               CALL VPD$GET_SPEC_BUF(1,1);

   8903 12 000027   000000 630400 13                 EPPR0   0
        12 000030   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000031   000000 701000 xent               TSX1    VPD$GET_SPEC_BUF
        12 000032   000000 011000                    NOP     0

      482     8904    2               FPT_WRITE_HDR.BUF_ = VECTOR(ADDR(SPEC_BUF)->TEXT$C);

   8904 12 000033   000000 236000 xsym               LDQ     SPEC_BUF
        12 000034   000033 772000                    QRL     27
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:126  
        12 000035   000001 620006                    EAX0    1,QL
        12 000036   000000 635010                    EAA     0,X0
        12 000037   000002 771000                    ARL     2
        12 000040   000140 135007                    SBLA    96,DL
        12 000041   000002 236000 13                 LDQ     2
        12 000042   000024 757000 11                 STAQ    FPT_WRITE_HDR+4

      483     8905    2               SPEC_BUF.LEN = ASCBIN('B'); /* SPACE 2 AFTER                      */

   8905 12 000043   102000 236003                    LDQ     33792,DU
        12 000044   000000 552040 xsym               STBQ    SPEC_BUF,'40'O

      484     8906    2               FPT_WRITE_HDR.V.DCB# = OCB.DCBNM;

   8906 12 000045   000000 720000 xsym               LXL0    OCB
        12 000046   000030 740000 11                 STX0    FPT_WRITE_HDR+8

      485     8907    2               IF OCB.ORG = 4              /* Need to put an EDIT key on header  */

   8907 12 000047   000035 235000 xsym               LDA     OCB+29
        12 000050   000004 115007                    CMPA    4,DL
        12 000051   000061 601000 12                 TNZ     s:8915

      486     8908    2                THEN
      487     8909    3                DO;

      488     8910    3                   OCB.LN.CURRENT = OCB.LN.CURRENT + OCB.LN.K; /* Bump key       */

   8910 12 000052   000031 236000 xsym               LDQ     OCB+25
        12 000053   000033 036000 xsym               ADLQ    OCB+27
        12 000054   000031 756000 xsym               STQ     OCB+25

      489     8911    3                   OCB.LN.KEY.CURRENT = OCB.LN.CURRENT;

   8911 12 000055   000030 552034 xsym               STBQ    OCB+24,'34'O

      490     8912    3                   FPT_WRITE_HDR.KEY_ = VECTOR(OCB.LN.KEY);
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:127  

   8912 12 000056   000004 237000 13                 LDAQ    4
        12 000057   000022 757000 11                 STAQ    FPT_WRITE_HDR+2

      491     8913    3                   END;

   8913 12 000060   000063 710000 12                 TRA     s:8916

      492     8914    2                ELSE
      493     8915    2                  FPT_WRITE_HDR.KEY_ = VECTOR(NIL);

   8915 12 000061   000006 237000 13                 LDAQ    6
        12 000062   000022 757000 11                 STAQ    FPT_WRITE_HDR+2

      494     8916    2               CALL WRITE;

   8916 12 000063   000164 701000 12                 TSX1    WRITE
        12 000064   000000 011000                    NOP     0

      495     8917    2               END;

      496     8918    2           DO WHILE('1'B);                 /* This is THE COPY loop              */

      497     8919    2   NEXT_REC:  CALL GET_NEXT_REC(RET_VAL);

   8919 12 000065   200006 630500       NEXT_REC     EPPR0   RET_VAL,,AUTO
        12 000066   200013 450500                    STP0    LAST_SEQ_NO+2,,AUTO
        12 000067   000220 701000 12                 TSX1    GET_NEXT_REC
        12 000070   000000 011000                    NOP     0

      498     8920    3              DO CASE(RET_VAL);

   8920 12 000071   200006 235100                    LDA     RET_VAL,,AUTO
        12 000072   000006 115007                    CMPA    6,DL
        12 000073   000075 602005 12                 TNC     s:8920+4,AL
        12 000074   000065 710000 12                 TRA     NEXT_REC
        12 000075   000103 710000 12                 TRA     s:8922
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:128  
        12 000076   000111 710000 12                 TRA     s:8925
        12 000077   000112 710000 12                 TRA     s:8927
        12 000100   000163 710000 12                 TRA     s:8956
        12 000101   000121 710000 12                 TRA     s:8940
        12 000102   000157 710000 12                 TRA     s:8954

      499     8921    3               CASE(0);                    /* NORMAL RETURN                      */

      500     8922    3                 USE_CONT = '0'B;

   8922 12 000103   000000 450000 xsym               STZ     USE_CONT

      501     8923    3                 CALL VPG$WRITE_OUT(IN_ARS,0);

   8923 12 000104   000010 630400 13                 EPPR0   8
        12 000105   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000106   000000 701000 xent               TSX1    VPG$WRITE_OUT
        12 000107   000000 011000                    NOP     0
        12 000110   000065 710000 12                 TRA     NEXT_REC

      502     8924    3               CASE(1);                    /* NO MORE RECORDS                    */

      503     8925    3                 RETURN;

   8925 12 000111   000000 702200 xent               TSX2  ! X66_ARET

      504     8926    3               CASE(2);                    /* SINGLE EOD hit                     */

      505     8927    3                 IF ICB.DEOD = 0

   8927 12 000112   000010 236000 xsym               LDQ     ICB+8
        12 000113   000065 601000 12                 TNZ     NEXT_REC

      506     8928    3                  THEN                     /* End of this file                   */
      507     8929    4                  DO;

      508     8930    4                     CALL VPG$WRITE_OUT(0,1);
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:129  

   8930 12 000114   000012 630400 13                 EPPR0   10
        12 000115   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000116   000000 701000 xent               TSX1    VPG$WRITE_OUT
        12 000117   000000 011000                    NOP     0

      509     8931    4                     RETURN;

   8931 12 000120   000000 702200 xent               TSX2  ! X66_ARET

      510     8932    4                     END;
      511     8933    3                  ELSE                     /* Keep going until double EOD        */
      512     8934    3                    ;
      513     8935    3               CASE(3);                    /* NO RECORD BUT OK TO CHECK BRK      */

      514     8936    3                 ;                         /* We tried to read a RANDOM or IDS   */
      515     8937                                                /* record that had not been written.  */
      516     8938                                                /* Don't do anything about it         */
      517     8939    3               CASE(4);                    /* DOUBLE EOD hit                     */

      518     8940    3                 IF M$EI$ -> F$DCB.VOL ~= IN_SN.COUNT /* Not last VOL            */

   8940 12 000121   000000 470400 xsym               LDP0    M$EI$
        12 000122   000043 236100                    LDQ     35,,PR0
        12 000123   000033 772000                    QRL     27
        12 000124   000000 116000 xsym               CMPQ    IN_SN
        12 000125   000152 600000 12                 TZE     s:8950

      519     8941    3                  THEN                     /* Just a VOL transition              */
      520     8942    4                  DO;

      521     8943    4                     CALL M$CVOL (FPT_CVOL_EI)

   8943 12 000126   000064 630400 11                 EPPR0   FPT_CVOL_EI
        12 000127   450004 713400                    CLIMB   alt,+20484
        12 000130   401000 401760                    pmme    nvectors=3
        12 000131   000133 702000 12                 TSX2    s:8945
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:130  
        12 000132   000151 710000 12                 TRA     s:8947

      522     8944    5                      WHENALTRETURN DO;

      523     8945    5                         CALL VPL$ERR_PROC(3,0,,,,,M$EI#);

   8945 12 000133   000014 236000 13                 LDQ     12
        12 000134   200030 756100                    STQ     PTR$+11,,AUTO
        12 000135   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000136   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000137   200026 757100                    STAQ    PTR$+9,,AUTO
        12 000140   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000141   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000142   200024 757100                    STAQ    PTR$+7,,AUTO
        12 000143   000016 237000 13                 LDAQ    14
        12 000144   200022 757100                    STAQ    PTR$+5,,AUTO
        12 000145   200022 630500                    EPPR0   PTR$+5,,AUTO
        12 000146   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 000147   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000150   000000 011000                    NOP     0

      524     8946    5                         END;              /*  end  ALTRETURN                    */

      525     8947    4                     END;

   8947 12 000151   000065 710000 12                 TRA     NEXT_REC

      526     8948    3                  ELSE                     /* This means end of set              */
      527     8949    4                  DO;

      528     8950    4                     CALL VPG$WRITE_OUT(0,1);

   8950 12 000152   000012 630400 13                 EPPR0   10
        12 000153   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000154   000000 701000 xent               TSX1    VPG$WRITE_OUT
        12 000155   000000 011000                    NOP     0

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:131  
      529     8951    4                     ALTRETURN;            /* Cause CA loop to exit              */

   8951 12 000156   000000 702200 xent               TSX2  ! X66_AALT

      530     8952    4                     END;
      531     8953    3               CASE(5);                    /* This is a chunk of a huge record   */

      532     8954    3                 CALL VPG$WRITE_OUT(IN_ARS,0);

   8954 12 000157   000010 630400 13                 EPPR0   8
        12 000160   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000161   000000 701000 xent               TSX1    VPG$WRITE_OUT
        12 000162   000000 011000                    NOP     0

      533     8955    3               END;                        /* END CASE                           */

      534     8956    2              END;                         /* END WHILE                          */

   8956 12 000163   000065 710000 12                 TRA     NEXT_REC

      535     8957        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:132  
      536     8958        /******************************************************************************/
      537     8959        /* COPY output utility routines.  These routines simulate the appropriate     */
      538     8960        /* PMMEs.                                                                     */
      539     8961        /******************************************************************************/
      540     8962    1   WRITE:  PROC ALTRET;

   8962 12 000164   200012 741300       WRITE        STX1  ! LAST_SEQ_NO+1,,AUTO

      541     8963        /**/
      542     8964        /*  Entry points  */
      543     8965        /**/
      544     8966    2   DCL XSA$WRITE ENTRY(2) ALTRET;
      545     8967        /**/
      546     8968    3           DO CASE(WRITE_MODE);

   8968 12 000165   000000 235000 xsym               LDA     WRITE_MODE
        12 000166   000002 115007                    CMPA    2,DL
        12 000167   000171 602005 12                 TNC     s:8968+4,AL
        12 000170   000204 710000 12                 TRA     s:8974
        12 000171   000173 710000 12                 TRA     s:8970
        12 000172   000200 710000 12                 TRA     s:8972

      547     8969    3            CASE(0);                       /* Normal PMME                        */

      548     8970    3              CALL M$WRITE(FPT_WRITE_HDR) ALTRET(PMME_ALT);

   8970 12 000173   000020 630400 11                 EPPR0   FPT_WRITE_HDR
        12 000174   440001 713400                    CLIMB   alt,write
        12 000175   401400 401760                    pmme    nvectors=4
        12 000176   000206 702000 12                 TSX2    PMME_ALT
        12 000177   000204 710000 12                 TRA     s:8974

      549     8971    3            CASE(1);                       /* FSFA routines                      */

      550     8972    3              CALL XSA$WRITE(FPT_WRITE_HDR,OFSFA_PARAM) ALTRET(FSFA_ALT);

   8972 12 000200   000020 630400 13                 EPPR0   16
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:133  
        12 000201   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000202   000000 701000 xent               TSX1    XSA$WRITE
        12 000203   000214 702000 12                 TSX2    FSFA_ALT

      551     8973    3            END;                           /* END CASE                           */

      552     8974    2           RETURN;

   8974 12 000204   200012 221300                    LDX1  ! LAST_SEQ_NO+1,,AUTO
        12 000205   000001 702211                    TSX2  ! 1,X1

   8968 12 000206                       PMME_ALT     null
      553     8975        /**/
      554     8976    2   PMME_ALT: ;                             /* Normal PMME ALTRET                 */
      555     8977    2           OUTPUT_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   8977 12 000206   000000 470400 xsym               LDP0    B$TCB$
        12 000207   000000 471500                    LDP1    0,,PR0
        12 000210   100102 236100                    LDQ     66,,PR1
        12 000211   000000 756000 xsym               STQ     OUTPUT_ERR

      556     8978    2           ALTRETURN;

   8978 12 000212   200012 221300                    LDX1  ! LAST_SEQ_NO+1,,AUTO
        12 000213   000000 702211                    TSX2  ! 0,X1

   8977 12 000214                       FSFA_ALT     null
      557     8979        /**/
      558     8980    2   FSFA_ALT: ;                             /* FSFA routine ALTRET                */
      559     8981    2           OUTPUT_ERR = OFSFA_PARAM.ERR;

   8981 12 000214   000001 236000 xsym               LDQ     OFSFA_PARAM+1
        12 000215   000000 756000 xsym               STQ     OUTPUT_ERR

      560     8982    2           ALTRETURN;

   8982 12 000216   200012 221300                    LDX1  ! LAST_SEQ_NO+1,,AUTO
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:134  
        12 000217   000000 702211                    TSX2  ! 0,X1

      561     8983        /**/
      562     8984    2   END WRITE;
      563     8985        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:135  
      564     8986    1   GET_NEXT_REC: PROC(RET_VAL);

   8986 12 000220   200012 741300       GET_NEXT_REC STX1  ! LAST_SEQ_NO+1,,AUTO

      565     8987        /*I* NAME: GET_NEXT_REC
      566     8988             PURPOSE: To get the next input record.
      567     8989             CALL: CALL GET_NEXT_REC(RET_VAL);
      568     8990             DESCRIPTION: This procedure attempts to get the next record specified for
      569     8991                          the input file. It maintains CUR_SEQ_NO (SBIN WORD), a value
      570     8992                          which is the sequence number of the current record; if it is
      571     8993                          not known what the current sequence number is, the value
      572     8994                          will be -1. On returning, RET_VAL (SBIN WORD) will be:
      573     8995                            RET_VAL          DESCRIPTION
      574     8996                            -------          -----------
      575     8997                               0             All fine. The record was obtained.
      576     8998                               1             Done. No more records this specification.
      577     8999                               2             ONE EOD was hit.
      578     9000                               3             Attempt to read a record that had not
      579     9001                                             been written on a RANDOM or IDS file
      580     9002                               4             DOUBLE EOD was hit.
      581     9003                               5             This is a chunk of a huge record.
      582     9004        */
      583     9005    2   DCL RET_VAL SBIN WORD;
      584     9006    2   DCL UBIN_KEY UBIN WORD;
      585     9007    2           RET_VAL = 0;

   9007 12 000221   200013 470500                    LDP0    @RET_VAL,,AUTO
        12 000222   000000 450100                    STZ     0,,PR0

      586     9008    2   NEXT_REC:
      587     9009    2           IF SEQ_READ = 1

   9009 12 000223   200010 235100       NEXT_REC     LDA     SEQ_READ,,AUTO
        12 000224   000001 115007                    CMPA    1,DL
        12 000225   000365 601000 12                 TNZ     s:9067

      588     9010    2            THEN                           /* SEQUENTIAL READ                    */
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:136  
      589     9011    3            DO;

      590     9012    3               IF CUR_SEQ_NO>-1 AND ~USE_CONT

   9012 12 000226   000000 236000 xsym               LDQ     CUR_SEQ_NO
        12 000227   000235 604000 12                 TMI     READ_REC
        12 000230   000000 236000 xsym               LDQ     USE_CONT
        12 000231   400000 376003                    ANQ     -131072,DU
        12 000232   400000 676003                    ERQ     -131072,DU
        12 000233   000235 600000 12                 TZE     READ_REC

      591     9013    3                THEN
      592     9014    3                  CUR_SEQ_NO = CUR_SEQ_NO+1;

   9014 12 000234   000000 054000 xsym               AOS     CUR_SEQ_NO

      593     9015    3   READ_REC:   CALL READ ALTRET(READ_EI_ALT);

   9015 12 000235   001324 701000 12    READ_REC     TSX1    READ
        12 000236   000720 702000 12                 TSX2    READ_EI_ALT

      594     9016    3               IF ICB.DEV_MASK.DEV_TAPE    /* DEVICE/FREE TAPE                   */

   9016 12 000237   000171 236000 xsym               LDQ     ICB+121
        12 000240   040000 316003                    CANQ    16384,DU
        12 000241   000247 600000 12                 TZE     s:9020
        12 000242   000006 236000 11                 LDQ     FPT_READ_EI+4
        12 000243   000020 772000                    QRL     16
        12 000244   000001 036007                    ADLQ    1,DL
        12 000245   000000 116000 xsym               CMPQ    IN_ARS
        12 000246   001057 600000 12                 TZE     LD

      595     9017    3                 AND IN_ARS = FPT_READ_EI.BUF_.BOUND+1
      596     9018    3                THEN
      597     9019    3                  GOTO LD;
      598     9020    3               IF ICB.REC_SEL.CNT>0        /* IF RECORD SELECTION IN EFFECT      */

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:137  
   9020 12 000247   000047 235000 xsym               LDA     ICB+39
        12 000250   000600 604400 12                 TMOZ    s:9145

      599     9021    3                THEN
      600     9022    4                DO CASE(ICB.REC_SEL.SPEC.TYPE(REC_SEL_IDX));

   9022 12 000251   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000252   000005 402007                    MPY     5,DL
        12 000253   000050 235006 xsym               LDA     ICB+40,QL
        12 000254   000003 115007                    CMPA    3,DL
        12 000255   000257 602005 12                 TNC     s:9022+6,AL
        12 000256   000600 710000 12                 TRA     s:9145
        12 000257   000364 710000 12                 TRA     s:9063
        12 000260   000357 710000 12                 TRA     s:9059
        12 000261   000262 710000 12                 TRA     s:9024

      601     9023    4                 CASE(2);                  /* KEYED RANGE                        */

      602     9024    4                   IF ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX) = ADDR(NIL)

   9024 12 000262   000053 236006 xsym               LDQ     ICB+43,QL
        12 000263   000001 116000 xsym               CMPQ    B_VECTNIL+1
        12 000264   000356 600000 12                 TZE     KSELR_OK

      603     9025    4                    THEN                   /* Open ended range specified         */
      604     9026    4                      GOTO KSELR_OK;
      605     9027    4                   IF ADDR(EI_KEY)->TEXT$C_BIT.STRING =

   9027 12 000265   000000 236000 xsym               LDQ     EI_KEY
        12 000266   000033 772000                    QRL     27
        12 000267   000000 620006                    EAX0    0,QL
        12 000270   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000271   000005 402007                    MPY     5,DL
        12 000272   000053 470406 xsym               LDP0    ICB+43,QL
        12 000273   000100 101500                    MRL     fill='000'O
        12 000274   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        12 000275   200022 000002                    ADSC9   PTR$+5,,AUTO             cn=0,n=2
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:138  
        12 000276   200022 221100                    LDX1    PTR$+5,,AUTO
        12 000277   000140 106440                    CMPC    fill='000'O
        12 000300   000000 200010 xsym               ADSC9   EI_KEY                   cn=1,n=*X0
        12 000301   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
        12 000302   000331 601000 12                 TNZ     s:9045

      606     9028    4                     ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->
      607     9029    4                     TEXT$C_BIT.STRING
      608     9030    4                    THEN                   /* Return key matches END key content */
      609     9031    5                    DO;

      610     9032    5                      IF EI_KEY.LEN=ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->TEXT$C.
              9032                                LEN

   9032 12 000303   000100 101500                    MRL     fill='000'O
        12 000304   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        12 000305   200022 000004                    ADSC9   PTR$+5,,AUTO             cn=0,n=4
        12 000306   000000 236000 xsym               LDQ     EI_KEY
        12 000307   000033 772000                    QRL     27
        12 000310   200022 116100                    CMPQ    PTR$+5,,AUTO
        12 000311   000313 601000 12                 TNZ     s:9035

      611     9033    5                        THEN
      612     9034    5                          SEQ_READ = 0;    /* LAST OF RANGE                      */

   9034 12 000312   200010 450100                    STZ     SEQ_READ,,AUTO

      613     9035    5                      IF EI_KEY.LEN>ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->TEXT$C.
              9035                                LEN

   9035 12 000313   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000314   000005 402007                    MPY     5,DL
        12 000315   000053 470406 xsym               LDP0    ICB+43,QL
        12 000316   000000 236000 xsym               LDQ     EI_KEY
        12 000317   000033 772000                    QRL     27
        12 000320   200022 756100                    STQ     PTR$+5,,AUTO
        12 000321   000100 101500                    MRL     fill='000'O
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:139  
        12 000322   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        12 000323   200023 000004                    ADSC9   PTR$+6,,AUTO             cn=0,n=4
        12 000324   200023 236100                    LDQ     PTR$+6,,AUTO
        12 000325   200022 116100                    CMPQ    PTR$+5,,AUTO
        12 000326   000331 605000 12                 TPL     s:9045

      614     9036    5                        THEN
      615     9037    6                        DO;                /* PAST END OF RANGE                  */

      616     9038    6                           SEQ_READ = 0;

   9038 12 000327   200010 450100                    STZ     SEQ_READ,,AUTO

      617     9039    6                           GOTO NEXT_REC;

   9039 12 000330   000223 710000 12                 TRA     NEXT_REC

      618     9040    6                           END;
      619     9041    5                      IF EI_KEY.LEN<ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->TEXT$C.
              9041                                LEN

      620     9042    5                        THEN               /* IN RANGE                           */
      621     9043    5                          ;
      622     9044    5                       END;

      623     9045    4                   IF ADDR(EI_KEY)->TEXT$C_BIT.STRING >

   9045 12 000331   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000332   000005 402007                    MPY     5,DL
        12 000333   000053 470406 xsym               LDP0    ICB+43,QL
        12 000334   000100 101500                    MRL     fill='000'O
        12 000335   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        12 000336   200022 000002                    ADSC9   PTR$+5,,AUTO             cn=0,n=2
        12 000337   200022 221100                    LDX1    PTR$+5,,AUTO
        12 000340   000040 106540                    CMPC    fill='000'O
        12 000341   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
        12 000342   000000 200010 xsym               ADSC9   EI_KEY                   cn=1,n=*X0
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:140  
        12 000343   000346 603000 12                 TRC     s:9053

      624     9046    4                     ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->
      625     9047    4                     TEXT$C_BIT.STRING
      626     9048    4                    THEN                   /* Return key too big                 */
      627     9049    5                    DO;

      628     9050    5                       SEQ_READ = 0;

   9050 12 000344   200010 450100                    STZ     SEQ_READ,,AUTO

      629     9051    5                       GOTO NEXT_REC;

   9051 12 000345   000223 710000 12                 TRA     NEXT_REC

      630     9052    5                       END;
      631     9053    4                   IF ADDR(EI_KEY)->TEXT$C_BIT.STRING <

   9053 12 000346   000100 101500                    MRL     fill='000'O
        12 000347   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        12 000350   200022 000002                    ADSC9   PTR$+5,,AUTO             cn=0,n=2
        12 000351   200022 221100                    LDX1    PTR$+5,,AUTO
        12 000352   000140 106440                    CMPC    fill='000'O
        12 000353   000000 200010 xsym               ADSC9   EI_KEY                   cn=1,n=*X0
        12 000354   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
        12 000355   000600 603000 12                 TRC     s:9145

      632     9054    4                     ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->

   9054 12 000356   000600 710000 12    KSELR_OK     TRA     s:9145

      633     9055    4                     TEXT$C_BIT.STRING
      634     9056    4                    THEN                   /* Still in selected range            */
      635     9057    4   KSELR_OK:          ;
      636     9058    4                 CASE(1);                  /* LOGICAL RECORD NUMBER RANGE        */

      637     9059    4                   IF CUR_SEQ_NO = ICB.REC_SEL.SPEC.FINISH.SEQ(REC_SEL_IDX)
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:141  

   9059 12 000357   000054 236006 xsym               LDQ     ICB+44,QL
        12 000360   000600 604000 12                 TMI     s:9145
        12 000361   000000 116000 xsym               CMPQ    CUR_SEQ_NO
        12 000362   000600 601000 12                 TNZ     s:9145

      638     9060    4                    THEN
      639     9061    4                      SEQ_READ = 0;

   9061 12 000363   200010 450100                    STZ     SEQ_READ,,AUTO

      640     9062    4                 END;                      /* END CASE                           */

      641     9063    3               END;

   9063 12 000364   000600 710000 12                 TRA     s:9145

      642     9064        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:142  
      643     9065    2            ELSE                           /* KEYED READ                         */
      644     9066    3            DO;

      645     9067    3               IF ICB.REC_SEL.CNT=0        /* IF NO RECORD SELECTION             */

   9067 12 000365   000047 236000 xsym               LDQ     ICB+39
        12 000366   000372 601000 12                 TNZ     s:9075

      646     9068    3                THEN
      647     9069    4                DO;                        /* NO - START OR TRY SOME MORE        */

      648     9070    4                   SEQ_READ = 1;

   9070 12 000367   000001 235007                    LDA     1,DL
        12 000370   200010 755100                    STA     SEQ_READ,,AUTO

      649     9071    4                   GOTO NEXT_REC;

   9071 12 000371   000223 710000 12                 TRA     NEXT_REC

      650     9072    4                   END;
      651     9073    3                ELSE                       /* RECORD SELECTION IN EFFECT         */
      652     9074    4                DO;

      653     9075    4                   REC_SEL_IDX = REC_SEL_IDX+1;

   9075 12 000372   200007 054100                    AOS     REC_SEL_IDX,,AUTO

      654     9076    4                   IF REC_SEL_IDX>=ICB.REC_SEL.CNT

   9076 12 000373   200007 116100                    CMPQ    REC_SEL_IDX,,AUTO
        12 000374   000413 605400 12                 TPNZ    s:9089

      655     9077    4                    THEN
      656     9078    5                    DO;

      657     9079    5                       IF ICB.DEV_MASK.DEV_TAPE
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:143  

   9079 12 000375   000171 236000 xsym               LDQ     ICB+121
        12 000376   040000 316003                    CANQ    16384,DU
        12 000377   000407 600000 12                 TZE     s:9086
        12 000400   000233 235000 xsym               LDA     ICB+155
        12 000401   000001 115007                    CMPA    1,DL
        12 000402   000407 601000 12                 TNZ     s:9086

      658     9080    5                         AND ICB.CLPOS=1
      659     9081    5                        THEN
      660     9082    6                        DO;                /* GET TO NEXT FT FILE                */

      661     9083    6                           FPT_PFIL_EI.V.BOF# = %NO#;

   9083 12 000403   000022 236000 13                 LDQ     18
        12 000404   000062 356000 11                 ANSQ    FPT_PFIL_EI+2

      662     9084    6                           CALL PFIL;

   9084 12 000405   001353 701000 12                 TSX1    PFIL
        12 000406   000000 011000                    NOP     0

      663     9085    6                           END;

      664     9086    5                       RET_VAL = 1;

   9086 12 000407   000001 235007                    LDA     1,DL
        12 000410   200013 470500                    LDP0    @RET_VAL,,AUTO
        12 000411   000000 755100                    STA     0,,PR0

      665     9087    5                       END;

   9087 12 000412   000600 710000 12                 TRA     s:9145

      666     9088    5                    ELSE DO;

      667     9089    5                       FPT_PREC_EI.V.N# = 0; /* In case of PREC by KEY           */
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:144  

   9089 12 000413   000055 450000 11                 STZ     FPT_PREC_EI+7

      668     9090    6                       DO CASE(ICB.REC_SEL.SPEC.TYPE(REC_SEL_IDX));

   9090 12 000414   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000415   000005 402007                    MPY     5,DL
        12 000416   000050 235006 xsym               LDA     ICB+40,QL
        12 000417   000003 115007                    CMPA    3,DL
        12 000420   000422 602005 12                 TNC     s:9090+6,AL
        12 000421   000573 710000 12                 TRA     PREC
        12 000422   000573 710000 12                 TRA     PREC
        12 000423   000534 710000 12                 TRA     s:9117
        12 000424   000425 710000 12                 TRA     s:9092

      669     9091    6                        CASE(2);           /* KEYED RANGE                        */

      670     9092    6                          IF NOT (M$EI$->F$DCB.ORG=%KEYED# OR M$EI$->F$DCB.ORG=%
              9092                                   INDEXED#)

   9092 12 000425   000000 470400 xsym               LDP0    M$EI$
        12 000426   000032 236100                    LDQ     26,,PR0
        12 000427   777000 376003                    ANQ     -512,DU
        12 000430   002000 116003                    CMPQ    1024,DU
        12 000431   000454 600000 12                 TZE     s:9099
        12 000432   006000 116003                    CMPQ    3072,DU
        12 000433   000454 600000 12                 TZE     s:9099

      671     9093    6                           THEN
      672     9094    6                             CALL VPL$ERR_PROC(2,20,'05'O,,,,DCBNUM(M$EI));

   9094 12 000434   000000 236007 xsym               LDQ     M$EI,DL
        12 000435   200022 756100                    STQ     PTR$+5,,AUTO
        12 000436   200022 631500                    EPPR1   PTR$+5,,AUTO
        12 000437   200031 451500                    STP1    PTR$+12,,AUTO
        12 000440   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000441   200030 756100                    STQ     PTR$+11,,AUTO
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:145  
        12 000442   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000443   200026 757100                    STAQ    PTR$+9,,AUTO
        12 000444   000026 237000 13                 LDAQ    22
        12 000445   200024 757100                    STAQ    PTR$+7,,AUTO
        12 000446   000025 236000 13                 LDQ     21
        12 000447   200023 756100                    STQ     PTR$+6,,AUTO
        12 000450   200023 630500                    EPPR0   PTR$+6,,AUTO
        12 000451   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 000452   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000453   000000 011000                    NOP     0

      673     9095        /*E* ERROR:   VPE-00020
      674     9096             MESSAGE: Keyed record selection not allowed% on %UF%
      675     9097        MESSAGE1: File %%UF %is not KEYED or INDEXED, so keyed record selection is not allo
              9097        wed.
      676     9098        */
      677     9099    6                          IF M$EI$->F$DCB.ORG=%INDEXED#

   9099 12 000454   000000 470400 xsym               LDP0    M$EI$
        12 000455   000032 236100                    LDQ     26,,PR0
        12 000456   777000 376003                    ANQ     -512,DU
        12 000457   006000 116003                    CMPQ    3072,DU
        12 000460   000463 600000 12                 TZE     s:9102
        12 000461   015000 116003                    CMPQ    6656,DU
        12 000462   000502 601000 12                 TNZ     s:9106

      678     9100    6                            OR M$EI$->F$DCB.ORG=%IREL#
      679     9101    6                           THEN            /* INDEXED files KEY by data only     */
      680     9102    6                             FPT_PREC_EI.KEY_ =

   9102 12 000463   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000464   000005 402007                    MPY     5,DL
        12 000465   000051 471406 xsym               LDP1    ICB+41,QL
        12 000466   000100 101500                    MRL     fill='000'O
        12 000467   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
        12 000470   200022 000002                    ADSC9   PTR$+5,,AUTO             cn=0,n=2
        12 000471   200022 220100                    LDX0    PTR$+5,,AUTO
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:146  
        12 000472   000000 635010                    EAA     0,X0
        12 000473   000002 771000                    ARL     2
        12 000474   000140 135007                    SBLA    96,DL
        12 000475   200023 451500                    STP1    PTR$+6,,AUTO
        12 000476   200023 236100                    LDQ     PTR$+6,,AUTO
        12 000477   200000 036007                    ADLQ    65536,DL
        12 000500   000050 757000 11                 STAQ    FPT_PREC_EI+2
        12 000501   000520 710000 12                 TRA     s:9108

      681     9103    6                               VECTOR(ICB.REC_SEL.SPEC.START.KEY$(REC_SEL_IDX)
      682     9104    6                               ->TEXT$C.STRING);
      683     9105    6                           ELSE            /* Other files KEY by TEXTC           */
      684     9106    6                             FPT_PREC_EI.KEY_ =

   9106 12 000502   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000503   000005 402007                    MPY     5,DL
        12 000504   000051 471406 xsym               LDP1    ICB+41,QL
        12 000505   000100 101500                    MRL     fill='000'O
        12 000506   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
        12 000507   200022 000002                    ADSC9   PTR$+5,,AUTO             cn=0,n=2
        12 000510   200022 220100                    LDX0    PTR$+5,,AUTO
        12 000511   000001 621010                    EAX1    1,X0
        12 000512   000000 635011                    EAA     0,X1
        12 000513   000002 771000                    ARL     2
        12 000514   000140 135007                    SBLA    96,DL
        12 000515   200023 451500                    STP1    PTR$+6,,AUTO
        12 000516   200023 236100                    LDQ     PTR$+6,,AUTO
        12 000517   000050 757000 11                 STAQ    FPT_PREC_EI+2

      685     9107    6                              VECTOR(ICB.REC_SEL.SPEC.START.KEY$(REC_SEL_IDX)->TEXT$C)
              9107                                        ;
      686     9108    6                          FPT_PREC_EI.V.KEYS# = %YES#;

   9108 12 000520   400000 236007                    LDQ     -131072,DL
        12 000521   000054 256000 11                 ORSQ    FPT_PREC_EI+6

      687     9109    6                          CUR_SEQ_NO = -1; /* LOST TRACK OF SEQUENCE NUM         */
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:147  

   9109 12 000522   000001 335007                    LCA     1,DL
        12 000523   000000 755000 xsym               STA     CUR_SEQ_NO

      688     9110    6                          IF ICB.DEV_MASK.MAN_TAPE

   9110 12 000524   000171 236000 xsym               LDQ     ICB+121
        12 000525   100000 316003                    CANQ    32768,DU
        12 000526   000573 600000 12                 TZE     PREC

      689     9111    6                           THEN            /* MUST PFIL TO START OF TAPE FILE*/
      690     9112    7                           DO;

      691     9113    7                              FPT_PFIL_EI.V.BOF# = %YES#;

   9113 12 000527   400000 236007                    LDQ     -131072,DL
        12 000530   000062 256000 11                 ORSQ    FPT_PFIL_EI+2

      692     9114    7                              CALL PFIL;

   9114 12 000531   001353 701000 12                 TSX1    PFIL
        12 000532   000000 011000                    NOP     0

      693     9115    7                              END;

   9115 12 000533   000573 710000 12                 TRA     PREC

      694     9116    6                        CASE(1);           /* LOGICAL RECORD NUMBER RANGE        */

      695     9117    6                          FPT_PREC_EI.V.KEYS# = %NO#;

   9117 12 000534   000022 236000 13                 LDQ     18
        12 000535   000054 356000 11                 ANSQ    FPT_PREC_EI+6

      696     9118    6                          IF CUR_SEQ_NO=-1

   9118 12 000536   000000 235000 xsym               LDA     CUR_SEQ_NO
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:148  
        12 000537   000027 115000 xsym               CMPA    B_VECTNIL+23
        12 000540   000560 601000 12                 TNZ     s:9135

      697     9119    6                           THEN
      698     9120    7                           DO;             /* POSITION TO START OF FILE          */

      699     9121    7                              FPT_PFIL_EI.V.BOF# = %YES#;

   9121 12 000541   400000 236007                    LDQ     -131072,DL
        12 000542   000062 256000 11                 ORSQ    FPT_PFIL_EI+2

      700     9122    7                              CALL PFIL

   9122 12 000543   001353 701000 12                 TSX1    PFIL
        12 000544   000553 702000 12                 TSX2    s:9129

      701     9123    8                               WHENRETURN DO;

      702     9124    8                                  IF ICB.DEV_MASK.DEV_TAPE

   9124 12 000545   000171 236000 xsym               LDQ     ICB+121
        12 000546   040000 316003                    CANQ    16384,DU
        12 000547   000552 600000 12                 TZE     s:9127

      703     9125    8                                   THEN    /* MUST SKIP TAPE MARK ON FT#         */
      704     9126    8                                     CALL READ ALTRET(IGNORE_ERR);

   9126 12 000550   001324 701000 12                 TSX1    READ
        12 000551   000557 702000 12                 TSX2    IGNORE_ERR

      705     9127    8                                  END;     /*  end  RETURN                       */

   9127 12 000552   000557 710000 12                 TRA     IGNORE_ERR

      706     9128    8                               WHENALTRETURN DO;

      707     9129    8                                  IF INPUT_ERR.ERR# ~= %E$BOT
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:149  

   9129 12 000553   000000 236000 xsym               LDQ     INPUT_ERR
        12 000554   377770 376007                    ANQ     131064,DL
        12 000555   000030 116007                    CMPQ    24,DL
        12 000556   001163 601000 12                 TNZ     STEP_ERR

      708     9130    8                                   THEN
      709     9131    8                                     GOTO STEP_ERR;
      710     9132    8                                  END;     /*  end  ALTRETURN                    */

      711     9133    7   IGNORE_ERR:                CUR_SEQ_NO = 0;

   9133 12 000557   000000 450000 xsym  IGNORE_ERR   STZ     CUR_SEQ_NO

      712     9134    7                              END;

      713     9135    6                          FPT_PREC_EI.V.N# = ICB.REC_SEL.SPEC.START.SEQ(REC_SEL_IDX)

   9135 12 000560   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000561   000005 402007                    MPY     5,DL
        12 000562   000052 236006 xsym               LDQ     ICB+42,QL
        12 000563   000000 136000 xsym               SBLQ    CUR_SEQ_NO
        12 000564   000001 136007                    SBLQ    1,DL
        12 000565   000055 756000 11                 STQ     FPT_PREC_EI+7

      714     9136    6                            -CUR_SEQ_NO-1;
      715     9137    6                          CUR_SEQ_NO = ICB.REC_SEL.SPEC.START.SEQ(REC_SEL_IDX)-1;

   9137 12 000566   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000567   000005 402007                    MPY     5,DL
        12 000570   000052 235006 xsym               LDA     ICB+42,QL
        12 000571   000001 135007                    SBLA    1,DL
        12 000572   000000 755000 xsym               STA     CUR_SEQ_NO

      716     9138    6                        END;               /* END CASE                           */

      717     9139    5   PREC:               CALL PRECORD ALTRET(PREC_EI_ALT);
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:150  

   9139 12 000573   001375 701000 12    PREC         TSX1    PRECORD
        12 000574   000602 702000 12                 TSX2    PREC_EI_ALT

      718     9140    5                       SEQ_READ = 1;

   9140 12 000575   000001 235007                    LDA     1,DL
        12 000576   200010 755100                    STA     SEQ_READ,,AUTO

      719     9141    5                       GOTO NEXT_REC;

   9141 12 000577   000223 710000 12                 TRA     NEXT_REC

      720     9142    5                       END;
      721     9143    4                   END;
      722     9144    3               END;
      723     9145    2           RETURN;

   9145 12 000600   200012 221300                    LDX1  ! LAST_SEQ_NO+1,,AUTO
        12 000601   000001 702211                    TSX2  ! 1,X1

      724     9146        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:151  
      725     9147    2   PREC_EI_ALT: IF INPUT_ERR.ERR# = %E$EOF OR

   9147 12 000602   000000 236000 xsym  PREC_EI_ALT  LDQ     INPUT_ERR
        12 000603   377770 376007                    ANQ     131064,DL
        12 000604   000060 116007                    CMPQ    48,DL
        12 000605   000610 600000 12                 TZE     s:9151
        12 000606   001070 116007                    CMPQ    568,DL
        12 000607   000642 601000 12                 TNZ     s:9165

      726     9148    2             INPUT_ERR.ERR# = %E$RANBADBLK
      727     9149    2            THEN
      728     9150    3            DO;

      729     9151    3               IF ICB.DEV_MASK.DEV_TAPE    /* DEVICE/FREE TAPE                   */

   9151 12 000610   000171 236000 xsym               LDQ     ICB+121
        12 000611   040000 316003                    CANQ    16384,DU
        12 000612   000617 600000 12                 TZE     s:9157

      730     9152    3                THEN
      731     9153    4                DO;                        /* GET BACK INSIDE CURRENT FT FILE    */

      732     9154    4                   FPT_PFIL_EI.V.BOF# = %YES#;

   9154 12 000613   400000 236007                    LDQ     -131072,DL
        12 000614   000062 256000 11                 ORSQ    FPT_PFIL_EI+2

      733     9155    4                   CALL PFIL;

   9155 12 000615   001353 701000 12                 TSX1    PFIL
        12 000616   000000 011000                    NOP     0

      734     9156    4                   END;

      735     9157    3               CALL VPL$ERR_PROC(2,30,'05'O,,,,DCBNUM(M$EI));

   9157 12 000617   000000 236007 xsym               LDQ     M$EI,DL
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:152  
        12 000620   200022 756100                    STQ     PTR$+5,,AUTO
        12 000621   200022 630500                    EPPR0   PTR$+5,,AUTO
        12 000622   200031 450500                    STP0    PTR$+12,,AUTO
        12 000623   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000624   200030 756100                    STQ     PTR$+11,,AUTO
        12 000625   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000626   200026 757100                    STAQ    PTR$+9,,AUTO
        12 000627   000032 237000 13                 LDAQ    26
        12 000630   200024 757100                    STAQ    PTR$+7,,AUTO
        12 000631   000025 236000 13                 LDQ     21
        12 000632   200023 756100                    STQ     PTR$+6,,AUTO
        12 000633   200023 630500                    EPPR0   PTR$+6,,AUTO
        12 000634   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 000635   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000636   000000 011000                    NOP     0

      736     9158        /*E* ERROR:   VPE-00030
      737     9159             MESSAGE: Sequence number or key past EOF% on %UF%
      738     9160            MESSAGE1: The sequence number or key specifies records past the end% of %UF%
      739     9161        */
      740     9162    3               CUR_SEQ_NO = -1;

   9162 12 000637   000001 335007                    LCA     1,DL
        12 000640   000000 755000 xsym               STA     CUR_SEQ_NO

      741     9163    3               GOTO NEXT_REC;

   9163 12 000641   000223 710000 12                 TRA     NEXT_REC

      742     9164    3               END;
      743     9165    2           IF INPUT_ERR.ERR# = %E$NOKEY THEN

   9165 12 000642   001020 116007                    CMPQ    528,DL
        12 000643   000706 601000 12                 TNZ     s:9181

      744     9166    2              IF ICB.REC_SEL.SPEC.START.KEY$(REC_SEL_IDX) = ADDR(NIL)

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:153  
   9166 12 000644   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000645   000005 402007                    MPY     5,DL
        12 000646   000051 236006 xsym               LDQ     ICB+41,QL
        12 000647   000001 116000 xsym               CMPQ    B_VECTNIL+1
        12 000650   000656 600000 12                 TZE     s:9168
        12 000651   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000652   000005 402007                    MPY     5,DL
        12 000653   000053 236006 xsym               LDQ     ICB+43,QL
        12 000654   000001 116000 xsym               CMPQ    B_VECTNIL+1
        12 000655   000661 601000 12                 TNZ     s:9172

      745     9167    3                OR ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX) = ADDR(NIL) THEN DO;

      746     9168    3                  SEQ_READ = 1;

   9168 12 000656   000001 235007                    LDA     1,DL
        12 000657   200010 755100                    STA     SEQ_READ,,AUTO

      747     9169    3                  GOTO NEXT_REC;

   9169 12 000660   000223 710000 12                 TRA     NEXT_REC

      748     9170    3                  END;
      749     9171    2               ELSE
      750     9172    2                 IF ICB.REC_SEL.SPEC.START.KEY$(REC_SEL_IDX)->TEXT$C

   9172 12 000661   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000662   000005 402007                    MPY     5,DL
        12 000663   000051 470406 xsym               LDP0    ICB+41,QL
        12 000664   000100 101500                    MRL     fill='000'O
        12 000665   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        12 000666   200022 000002                    ADSC9   PTR$+5,,AUTO             cn=0,n=2
        12 000667   200022 220100                    LDX0    PTR$+5,,AUTO
        12 000670   000001 621010                    EAX1    1,X0
        12 000671   000053 471406 xsym               LDP1    ICB+43,QL
        12 000672   000100 101500                    MRL     fill='000'O
        12 000673   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:154  
        12 000674   200023 000002                    ADSC9   PTR$+6,,AUTO             cn=0,n=2
        12 000675   200023 222100                    LDX2    PTR$+6,,AUTO
        12 000676   000001 623012                    EAX3    1,X2
        12 000677   000140 106540                    CMPC    fill='000'O
        12 000700   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
        12 000701   100000 000013                    ADSC9   0,,PR1                   cn=0,n=*X3
        12 000702   000706 600000 12                 TZE     s:9181

      751     9173    2                   ~=ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)->TEXT$C
      752     9174    3                  THEN DO;                 /* RANGE                              */

      753     9175    3                     SEQ_READ = 1;

   9175 12 000703   000001 235007                    LDA     1,DL
        12 000704   200010 755100                    STA     SEQ_READ,,AUTO

      754     9176    3                     GOTO NEXT_REC;

   9176 12 000705   000223 710000 12                 TRA     NEXT_REC

      755     9177    3                     END;
      756     9178                /* If the user hit break during the PRECORD, and then continued,
      757     9179                   we have to update the number of records to skip and retry the
      758     9180                   precord to get to the correct record                          */
      759     9181    3           IF INPUT_ERR.ERR# = %E$PMMEINT THEN DO;

   9181 12 000706   000000 236000 xsym               LDQ     INPUT_ERR
        12 000707   377770 376007                    ANQ     131064,DL
        12 000710   001230 116007                    CMPQ    664,DL
        12 000711   000717 601000 12                 TNZ     s:9185

      760     9182    3               FPT_PREC_EI.V.N# = FPT_PREC_EI.V.N# - M$EI$->F$DCB.ARS;

   9182 12 000712   000000 470400 xsym               LDP0    M$EI$
        12 000713   000055 236000 11                 LDQ     FPT_PREC_EI+7
        12 000714   000000 136100                    SBLQ    0,,PR0
        12 000715   000055 756000 11                 STQ     FPT_PREC_EI+7
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:155  

      761     9183    3               GOTO PREC;

   9183 12 000716   000573 710000 12                 TRA     PREC

      762     9184    3               END;
      763     9185    2           GOTO STEP_ERR;                  /* REPORT UNEXPECTED ERROR AS A       */

   9185 12 000717   001163 710000 12                 TRA     STEP_ERR

      764     9186                                                /* ABORT-STEP ERROR                   */
      765     9187        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:156  
      766     9188    2   READ_EI_ALT: IF INPUT_ERR.ERR# = %E$EOF

   9188 12 000720   000000 236000 xsym  READ_EI_ALT  LDQ     INPUT_ERR
        12 000721   377770 376007                    ANQ     131064,DL
        12 000722   000060 116007                    CMPQ    48,DL
        12 000723   001055 601000 12                 TNZ     s:9234

      767     9189    2            THEN
      768     9190    3            DO;

      769     9191    3               SEQ_READ = 0;

   9191 12 000724   200010 450100                    STZ     SEQ_READ,,AUTO

      770     9192    3               EOF_SOURCE = '1'B;

   9192 12 000725   400000 236003                    LDQ     -131072,DU
        12 000726   000000 756000 xsym               STQ     EOF_SOURCE

      771     9193    3               IF ICB.REC_SEL.CNT>0

   9193 12 000727   000047 235000 xsym               LDA     ICB+39
        12 000730   001040 604400 12                 TMOZ    s:9225

      772     9194    3                THEN
      773     9195    4                DO;

      774     9196    4                   LAST_SEQ_NO = CUR_SEQ_NO; /* Stash before stomp	*/

   9196 12 000731   000000 235000 xsym               LDA     CUR_SEQ_NO
        12 000732   200011 755100                    STA     LAST_SEQ_NO,,AUTO

      775     9197    4                   IF ICB.DEV_MASK.DEV_TAPE

   9197 12 000733   000171 236000 xsym               LDQ     ICB+121
        12 000734   040000 316003                    CANQ    16384,DU
        12 000735   000745 600000 12                 TZE     s:9205
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:157  

      776     9198    4                    THEN                   /* FT                                 */
      777     9199    5                    DO;                    /* Get back inside the FT file        */

      778     9200    5                       FPT_PFIL_EI.V.BOF# = %YES#;

   9200 12 000736   400000 236007                    LDQ     -131072,DL
        12 000737   000062 256000 11                 ORSQ    FPT_PFIL_EI+2

      779     9201    5                       CALL PFIL;

   9201 12 000740   001353 701000 12                 TSX1    PFIL
        12 000741   000000 011000                    NOP     0

      780     9202    5                       CUR_SEQ_NO = CUR_SEQ_NO-1;

   9202 12 000742   000001 336007                    LCQ     1,DL
        12 000743   000000 056000 xsym               ASQ     CUR_SEQ_NO

      781     9203    5                       END;

   9203 12 000744   000747 710000 12                 TRA     s:9206

      782     9204    4                    ELSE
      783     9205    4                      CUR_SEQ_NO = -1;

   9205 12 000745   000001 335007                    LCA     1,DL
        12 000746   000000 755000 xsym               STA     CUR_SEQ_NO

      784     9206    4                   IF ICB.REC_SEL.SPEC.TYPE(REC_SEL_IDX) = 1 /*LOGICAL*/

   9206 12 000747   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 000750   000005 402007                    MPY     5,DL
        12 000751   000050 235006 xsym               LDA     ICB+40,QL
        12 000752   000001 115007                    CMPA    1,DL
        12 000753   001000 601000 12                 TNZ     s:9210
        12 000754   000052 236006 xsym               LDQ     ICB+42,QL
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:158  
        12 000755   001000 604000 12                 TMI     s:9210
        12 000756   200011 116100                    CMPQ    LAST_SEQ_NO,,AUTO
        12 000757   001000 601000 12                 TNZ     s:9210

      785     9207    4                     AND LAST_SEQ_NO = ICB.REC_SEL.SPEC.START.SEQ(REC_SEL_IDX)
      786     9208    4                    THEN                   /* We never got anything              */
      787     9209    4                      CALL VPL$ERR_PROC(2,30,'05'O,,,,DCBNUM(M$EI));

   9209 12 000760   000000 236007 xsym               LDQ     M$EI,DL
        12 000761   200022 756100                    STQ     PTR$+5,,AUTO
        12 000762   200022 630500                    EPPR0   PTR$+5,,AUTO
        12 000763   200031 450500                    STP0    PTR$+12,,AUTO
        12 000764   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000765   200030 756100                    STQ     PTR$+11,,AUTO
        12 000766   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000767   200026 757100                    STAQ    PTR$+9,,AUTO
        12 000770   000032 237000 13                 LDAQ    26
        12 000771   200024 757100                    STAQ    PTR$+7,,AUTO
        12 000772   000025 236000 13                 LDQ     21
        12 000773   200023 756100                    STQ     PTR$+6,,AUTO
        12 000774   200023 630500                    EPPR0   PTR$+6,,AUTO
        12 000775   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 000776   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000777   000000 011000                    NOP     0

      788     9210    4                   IF (ICB.REC_SEL.SPEC.TYPE(REC_SEL_IDX)=2 /*KEYED*/

   9210 12 001000   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 001001   000005 402007                    MPY     5,DL
        12 001002   000050 235006 xsym               LDA     ICB+40,QL
        12 001003   000002 115007                    CMPA    2,DL
        12 001004   001010 601000 12                 TNZ     s:9210+8
        12 001005   000053 236006 xsym               LDQ     ICB+43,QL
        12 001006   000001 116000 xsym               CMPQ    B_VECTNIL+1
        12 001007   001017 601000 12                 TNZ     s:9215
        12 001010   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 001011   000005 402007                    MPY     5,DL
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:159  
        12 001012   000050 235006 xsym               LDA     ICB+40,QL
        12 001013   000001 115007                    CMPA    1,DL
        12 001014   001037 601000 12                 TNZ     s:9216
        12 001015   000054 235006 xsym               LDA     ICB+44,QL
        12 001016   001037 600000 12                 TZE     s:9216

      789     9211    4                     AND ICB.REC_SEL.SPEC.FINISH.KEY$(REC_SEL_IDX)~=ADDR(NIL))
      790     9212    4                     OR (ICB.REC_SEL.SPEC.TYPE(REC_SEL_IDX)=1 /*LOGICAL*/
      791     9213    4                     AND ICB.REC_SEL.SPEC.FINISH.SEQ(REC_SEL_IDX)~=0)
      792     9214    4                    THEN
      793     9215    4                      CALL VPL$ERR_PROC(2,40,'05'O,,,,DCBNUM(M$EI));

   9215 12 001017   000000 236007 xsym               LDQ     M$EI,DL
        12 001020   200022 756100                    STQ     PTR$+5,,AUTO
        12 001021   200022 630500                    EPPR0   PTR$+5,,AUTO
        12 001022   200031 450500                    STP0    PTR$+12,,AUTO
        12 001023   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 001024   200030 756100                    STQ     PTR$+11,,AUTO
        12 001025   000001 235000 xsym               LDA     B_VECTNIL+1
        12 001026   200026 757100                    STAQ    PTR$+9,,AUTO
        12 001027   000034 237000 13                 LDAQ    28
        12 001030   200024 757100                    STAQ    PTR$+7,,AUTO
        12 001031   000025 236000 13                 LDQ     21
        12 001032   200023 756100                    STQ     PTR$+6,,AUTO
        12 001033   200023 630500                    EPPR0   PTR$+6,,AUTO
        12 001034   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 001035   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 001036   000000 011000                    NOP     0

      794     9216    4                   GOTO NEXT_REC;

   9216 12 001037   000223 710000 12                 TRA     NEXT_REC

      795     9217    4                   END;
      796     9218        /*E*   ERROR: VPE-00040
      797     9219             MESSAGE: EOF hit before end of record sequence range% on %UF%
      798     9220            MESSAGE1: File %%UF %does not contain enough records to satisfy the
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:160  
      799     9221                      record selection criteria.
      800     9222        */
      801     9223    3                ELSE
      802     9224    4                DO;

      803     9225    4                   CUR_SEQ_NO = 0;         /* Start new sequence numbers         */

   9225 12 001040   000000 450000 xsym               STZ     CUR_SEQ_NO

      804     9226    4                   IF M$EI$->F$DCB.TYC.EOD(1)

   9226 12 001041   000000 470400 xsym               LDP0    M$EI$
        12 001042   000002 236100                    LDQ     2,,PR0
        12 001043   000200 316003                    CANQ    128,DU
        12 001044   001050 600000 12                 TZE     s:9230

      805     9227    4                    THEN
      806     9228    4                      CALL EOD_HIT;

   9228 12 001045   001203 701000 12                 TSX1    EOD_HIT
        12 001046   000000 011000                    NOP     0
        12 001047   001053 710000 12                 TRA     s:9231

      807     9229    4                    ELSE
      808     9230    4                      RET_VAL = 1;

   9230 12 001050   000001 235007                    LDA     1,DL
        12 001051   200013 471500                    LDP1    @RET_VAL,,AUTO
        12 001052   100000 755100                    STA     0,,PR1

      809     9231    4                   RETURN;

   9231 12 001053   200012 221300                    LDX1  ! LAST_SEQ_NO+1,,AUTO
        12 001054   000001 702211                    TSX2  ! 1,X1

      810     9232    4                   END;
      811     9233    3               END;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:161  
      812     9234    2           IF INPUT_ERR.ERR# = %E$LD

   9234 12 001055   000070 116007                    CMPQ    56,DL
        12 001056   001107 601000 12                 TNZ     s:9252

      813     9235    2            THEN
      814     9236    3   LD:      DO;                            /* LOST DATA                          */

   9236 12 001057                       LD           null
      815     9237    3               IF ~USE_CONT

   9237 12 001057   000000 236000 xsym               LDQ     USE_CONT
        12 001060   400000 376003                    ANQ     -131072,DU
        12 001061   400000 676003                    ERQ     -131072,DU
        12 001062   001067 600000 12                 TZE     s:9240

      816     9238    3                THEN
      817     9239    3                  CALL VPD$ENLARGE_BUF(0); /* Double the buffer size             */

   9239 12 001063   000011 630400 13                 EPPR0   9
        12 001064   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 001065   000000 701000 xent               TSX1    VPD$ENLARGE_BUF
        12 001066   000000 011000                    NOP     0

      818     9240    3               IF USE_CONT                 /* Did we run out of Data Segment ?   */

   9240 12 001067   000000 234000 xsym               SZN     USE_CONT
        12 001070   001076 605000 12                 TPL     s:9246

      819     9241    3                THEN
      820     9242    4                DO;

      821     9243    4                   RET_VAL = 5;

   9243 12 001071   000005 235007                    LDA     5,DL
        12 001072   200013 470500                    LDP0    @RET_VAL,,AUTO
        12 001073   000000 755100                    STA     0,,PR0
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:162  

      822     9244    4                   RETURN;

   9244 12 001074   200012 221300                    LDX1  ! LAST_SEQ_NO+1,,AUTO
        12 001075   000001 702211                    TSX2  ! 1,X1

      823     9245    4                   END;
      824     9246    3               FPT_READ_EI.BUF_   = IN_BUF_VECTOR;

   9246 12 001076   000000 237000 xsym               LDAQ    IN_BUF_VECTOR
        12 001077   000006 757000 11                 STAQ    FPT_READ_EI+4

      825     9247    3               FPT_PREC_EI.V.N# = -1;

   9247 12 001100   000001 335007                    LCA     1,DL
        12 001101   000055 755000 11                 STA     FPT_PREC_EI+7

      826     9248    3               FPT_PREC_EI.V.KEYS# = %NO#;

   9248 12 001102   000022 236000 13                 LDQ     18
        12 001103   000054 356000 11                 ANSQ    FPT_PREC_EI+6

      827     9249    3               CALL PRECORD ALTRET(STEP_ERR);

   9249 12 001104   001375 701000 12                 TSX1    PRECORD
        12 001105   001163 702000 12                 TSX2    STEP_ERR

      828     9250    3               GOTO READ_REC;              /* Try again with bigger buffer       */

   9250 12 001106   000235 710000 12                 TRA     READ_REC

      829     9251    3               END;
      830     9252    2           IF INPUT_ERR.ERR# = %E$DI AND

   9252 12 001107   000110 116007                    CMPQ    72,DL
        12 001110   001132 601000 12                 TNZ     s:9264
        12 001111   000172 236000 xsym               LDQ     ICB+122
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:163  
        12 001112   000020 316003                    CANQ    16,DU
        12 001113   001132 600000 12                 TZE     s:9264

      831     9253    2             ICB.FLAVOR.HOLY_ORG
      832     9254    2            THEN                           /* We tried to read an un-written     */
      833     9255                                                /* record on file with ORG that       */
      834     9256                                                /* allows 'holes'                     */
      835     9257    3            DO;                            /* IGNORE E$DI FOR 'HOLE OK' ORGS     */

      836     9258    3               IF REC_SEL_IDX > -1 AND ICB.REC_SEL.SPEC.FINISH.SEQ(REC_SEL_IDX) <=
              9258                        CUR_SEQ_NO

   9258 12 001114   200007 235100                    LDA     REC_SEL_IDX,,AUTO
        12 001115   001125 604000 12                 TMI     s:9261
        12 001116   200007 236100                    LDQ     REC_SEL_IDX,,AUTO
        12 001117   000005 402007                    MPY     5,DL
        12 001120   000054 236006 xsym               LDQ     ICB+44,QL
        12 001121   001125 604000 12                 TMI     s:9261
        12 001122   000000 116000 xsym               CMPQ    CUR_SEQ_NO
        12 001123   001125 605400 12                 TPNZ    s:9261

      837     9259    3                THEN
      838     9260    3                  SEQ_READ = 0;

   9260 12 001124   200010 450100                    STZ     SEQ_READ,,AUTO

      839     9261    3               RET_VAL = 3;

   9261 12 001125   000003 235007                    LDA     3,DL
        12 001126   200013 470500                    LDP0    @RET_VAL,,AUTO
        12 001127   000000 755100                    STA     0,,PR0

      840     9262    3               RETURN;

   9262 12 001130   200012 221300                    LDX1  ! LAST_SEQ_NO+1,,AUTO
        12 001131   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:164  
      841     9263    3               END;
      842     9264    2           IF INPUT_ERR.ERR# = %E$BLNKTP   /* Blank tape on read                 */

   9264 12 001132   000000 236000 xsym               LDQ     INPUT_ERR
        12 001133   377770 376007                    ANQ     131064,DL
        12 001134   000050 116007                    CMPQ    40,DL
        12 001135   001140 600000 12                 TZE     s:9267
        12 001136   000100 116007                    CMPQ    64,DL
        12 001137   001163 601000 12                 TNZ     STEP_ERR

      843     9265    2             OR INPUT_ERR.ERR# = %E$IOERR  /* unrecoverable I/O error            */
      844     9266    3            THEN DO;

      845     9267    3               CALL VPF$CLOSE_IN(1)

   9267 12 001140   000000 630400 13                 EPPR0   0
        12 001141   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 001142   000000 701000 xent               TSX1    VPF$CLOSE_IN
        12 001143   001163 702000 12                 TSX2    STEP_ERR

      846     9268    4                WHENRETURN DO;

      847     9269    4                   CALL VPL$ERR_PROC(3,0,,INPUT_ERR,,,M$EI#); /* Abort Command   */

   9269 12 001144   000014 236000 13                 LDQ     12
        12 001145   200030 756100                    STQ     PTR$+11,,AUTO
        12 001146   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 001147   000001 235000 xsym               LDA     B_VECTNIL+1
        12 001150   200026 757100                    STAQ    PTR$+9,,AUTO
        12 001151   000036 236000 13                 LDQ     30
        12 001152   000001 235000 xsym               LDA     B_VECTNIL+1
        12 001153   200024 757100                    STAQ    PTR$+7,,AUTO
        12 001154   000016 237000 13                 LDAQ    14
        12 001155   200022 757100                    STAQ    PTR$+5,,AUTO
        12 001156   200022 630500                    EPPR0   PTR$+5,,AUTO
        12 001157   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 001160   000000 701000 xent               TSX1    VPL$ERR_PROC
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:165  
        12 001161   000000 011000                    NOP     0

      848     9270    4                   END;                    /*  end  RETURN                       */

   9270 12 001162   001163 710000 12                 TRA     STEP_ERR

      849     9271    4                WHENALTRETURN DO;

      850     9272    4                   END;                    /*  ignore ALTRETURN                  */

      851     9273    3               END;

   9264 12 001163                       STEP_ERR     null
      852     9274    2   STEP_ERR: ;
      853     9275    2           CALL VPL$ERR_PROC(2,0,,INPUT_ERR,,,M$EI#); /* REPORT UNEXPECTED ERROR:*/

   9275 12 001163   000014 236000 13                 LDQ     12
        12 001164   200030 756100                    STQ     PTR$+11,,AUTO
        12 001165   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 001166   000001 235000 xsym               LDA     B_VECTNIL+1
        12 001167   200026 757100                    STAQ    PTR$+9,,AUTO
        12 001170   000036 236000 13                 LDQ     30
        12 001171   000001 235000 xsym               LDA     B_VECTNIL+1
        12 001172   200024 757100                    STAQ    PTR$+7,,AUTO
        12 001173   000040 237000 13                 LDAQ    32
        12 001174   200022 757100                    STAQ    PTR$+5,,AUTO
        12 001175   200022 630500                    EPPR0   PTR$+5,,AUTO
        12 001176   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 001177   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 001200   000000 011000                    NOP     0

      854     9276                                                /* ABORT-STEP ERROR                   */
      855     9277    2           RETURN;

   9277 12 001201   200012 221300                    LDX1  ! LAST_SEQ_NO+1,,AUTO
        12 001202   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:166  
      856     9278        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:167  
      857     9279        /******************************************************************************/
      858     9280        /* AN EOD HAS BEEN HIT.                                                       */
      859     9281        /* This routine checks for a following (I.E. double) EOD.  If a double        */
      860     9282        /* EOD is detected, RET_VAL is set to 4 and the tape is left positioned       */
      861     9283        /* after the second one.                                                      */
      862     9284        /* If legitimate data is detected after the first EOD, the tape is re-        */
      863     9285        /* positioned to after the first EOD.                                         */
      864     9286        /******************************************************************************/
      865     9287    2   EOD_HIT: PROC;

   9287 12 001203   200016 741300       EOD_HIT      STX1  ! PTR$+1,,AUTO

      866     9288    3           IF NOT ICB.DEV_MASK.DEV_TAPE

   9288 12 001204   000171 236000 xsym               LDQ     ICB+121
        12 001205   040000 316003                    CANQ    16384,DU
        12 001206   001214 601000 12                 TNZ     s:9294

      867     9289    3            THEN                           /* Don't bother with DEOD check       */
      868     9290    4            DO;

      869     9291    4               RET_VAL = 2;                /* One EOD                            */

   9291 12 001207   000002 235007                    LDA     2,DL
        12 001210   200013 470500                    LDP0    @RET_VAL,,AUTO
        12 001211   000000 755100                    STA     0,,PR0

      870     9292    4               RETURN;

   9292 12 001212   200016 221300                    LDX1  ! PTR$+1,,AUTO
        12 001213   000001 702211                    TSX2  ! 1,X1

      871     9293    4               END;
      872     9294    3           CALL READ

   9294 12 001214   001324 701000 12                 TSX1    READ
        12 001215   001217 702000 12                 TSX2    s:9296
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:168  
        12 001216   001260 710000 12                 TRA     s:9312

      873     9295    4            WHENALTRETURN DO;

      874     9296    4               IF INPUT_ERR.ERR# = %E$EOF AND /* EOD error                       */

   9296 12 001217   000000 236000 xsym               LDQ     INPUT_ERR
        12 001220   377770 376007                    ANQ     131064,DL
        12 001221   000060 116007                    CMPQ    48,DL
        12 001222   001234 601000 12                 TNZ     s:9303
        12 001223   000000 470400 xsym               LDP0    M$EI$
        12 001224   000002 236100                    LDQ     2,,PR0
        12 001225   000200 316003                    CANQ    128,DU
        12 001226   001234 600000 12                 TZE     s:9303

      875     9297    4                 M$EI$ -> F$DCB.TYC.EOD(1) /* DCB also says EOD                  */
      876     9298    4                THEN                       /* Second EOD just read               */
      877     9299    5                DO;

      878     9300    5                   RET_VAL = 4;

   9300 12 001227   000004 235007                    LDA     4,DL
        12 001230   200013 471500                    LDP1    @RET_VAL,,AUTO
        12 001231   100000 755100                    STA     0,,PR1

      879     9301    5                   RETURN;

   9301 12 001232   200016 221300                    LDX1  ! PTR$+1,,AUTO
        12 001233   000001 702211                    TSX2  ! 1,X1

      880     9302    5                   END;
      881     9303    4               IF INPUT_ERR.ERR# = %E$BLNKTP OR /* Read blank tape error         */

   9303 12 001234   000000 236000 xsym               LDQ     INPUT_ERR
        12 001235   377770 376007                    ANQ     131064,DL
        12 001236   000050 116007                    CMPQ    40,DL
        12 001237   001242 600000 12                 TZE     s:9306
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:169  
        12 001240   000100 116007                    CMPQ    64,DL
        12 001241   001260 601000 12                 TNZ     s:9312

      882     9304    4                 INPUT_ERR.ERR# = %E$IOERR /* Just any plain tape I/O error      */
      883     9305    4                THEN                       /* Tell user about it                 */
      884     9306    4                  CALL VPL$ERR_PROC(3,0,,,,,M$EI#);

   9306 12 001242   000014 236000 13                 LDQ     12
        12 001243   200030 756100                    STQ     PTR$+11,,AUTO
        12 001244   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 001245   000001 235000 xsym               LDA     B_VECTNIL+1
        12 001246   200026 757100                    STAQ    PTR$+9,,AUTO
        12 001247   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 001250   000001 235000 xsym               LDA     B_VECTNIL+1
        12 001251   200024 757100                    STAQ    PTR$+7,,AUTO
        12 001252   000016 237000 13                 LDAQ    14
        12 001253   200022 757100                    STAQ    PTR$+5,,AUTO
        12 001254   200022 630500                    EPPR0   PTR$+5,,AUTO
        12 001255   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 001256   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 001257   000000 011000                    NOP     0

      885     9307        /**/
      886     9308        /*          Otherwise the error will be treated as a data error, in which     */
      887     9309        /*          case we just act as if the read worked fine (ha-ha)               */
      888     9310        /**/
      889     9311    4               END;

      890     9312    3           FPT_PREC_EI.V.KEYS# = %NO#;

   9312 12 001260   000022 236000 13                 LDQ     18
        12 001261   000054 356000 11                 ANSQ    FPT_PREC_EI+6

      891     9313    3           IF ICB.CLPOS = 2 /* BOF - We need to back up to the file just read    */

   9313 12 001262   000233 235000 xsym               LDA     ICB+155
        12 001263   000002 115007                    CMPA    2,DL
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:170  
        12 001264   001270 601000 12                 TNZ     s:9317

      892     9314    3            THEN
      893     9315    3              FPT_PREC_EI.V.N# = -2;

   9315 12 001265   000002 335007                    LCA     2,DL
        12 001266   000055 755000 11                 STA     FPT_PREC_EI+7
        12 001267   001272 710000 12                 TRA     s:9318

      894     9316    3            ELSE
      895     9317    3              FPT_PREC_EI.V.N# = -1;

   9317 12 001270   000001 335007                    LCA     1,DL
        12 001271   000055 755000 11                 STA     FPT_PREC_EI+7

      896     9318    3           CALL PRECORD

   9318 12 001272   001375 701000 12                 TSX1    PRECORD
        12 001273   001275 702000 12                 TSX2    s:9320
        12 001274   001317 710000 12                 TRA     s:9324

      897     9319    4            WHENALTRETURN DO;

      898     9320    4               IF INPUT_ERR.ERR# ~= %E$BOF

   9320 12 001275   000000 236000 xsym               LDQ     INPUT_ERR
        12 001276   377770 376007                    ANQ     131064,DL
        12 001277   000040 116007                    CMPQ    32,DL
        12 001300   001317 600000 12                 TZE     s:9324

      899     9321    4                THEN
      900     9322    4                  CALL VPL$ERR_PROC(3,0,,,,,M$EI#);

   9322 12 001301   000014 236000 13                 LDQ     12
        12 001302   200030 756100                    STQ     PTR$+11,,AUTO
        12 001303   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 001304   000001 235000 xsym               LDA     B_VECTNIL+1
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:171  
        12 001305   200026 757100                    STAQ    PTR$+9,,AUTO
        12 001306   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 001307   000001 235000 xsym               LDA     B_VECTNIL+1
        12 001310   200024 757100                    STAQ    PTR$+7,,AUTO
        12 001311   000016 237000 13                 LDAQ    14
        12 001312   200022 757100                    STAQ    PTR$+5,,AUTO
        12 001313   200022 630500                    EPPR0   PTR$+5,,AUTO
        12 001314   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 001315   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 001316   000000 011000                    NOP     0

      901     9323    4               END;

      902     9324    3           RET_VAL = 2;                    /* ONE EOD encountered                */

   9324 12 001317   000002 235007                    LDA     2,DL
        12 001320   200013 470500                    LDP0    @RET_VAL,,AUTO
        12 001321   000000 755100                    STA     0,,PR0

      903     9325        /**/
      904     9326    3   END EOD_HIT;

   9326 12 001322   200016 221300                    LDX1  ! PTR$+1,,AUTO
        12 001323   000001 702211                    TSX2  ! 1,X1

      905     9327        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:172  
      906     9328        /******************************************************************************/
      907     9329        /* COPY input utility routines.  These routines simulate the appropriate      */
      908     9330        /* PMMEs.                                                                     */
      909     9331        /******************************************************************************/
      910     9332    2   READ:   PROC ALTRET;

   9332 12 001324   200020 741300       READ         STX1  ! PTR$+3,,AUTO

      911     9333        /**/
      912     9334        /*  Entry points  */
      913     9335        /**/
      914     9336    3   DCL XSA$PFIL ENTRY(2) ALTRET;
      915     9337    3   DCL XSA$READ ENTRY(2) ALTRET;
      916     9338    3   DCL XSA$PRECORD ENTRY(2) ALTRET;
      917     9339        /**/
      918     9340    3           FPT_READ_EI.V.DVBYTE.CONT# = USE_CONT;

   9340 12 001325   000000 236000 xsym               LDQ     USE_CONT
        12 001326   000010 772000                    QRL     8
        12 001327   000015 676000 11                 ERQ     FPT_READ_EI+11
        12 001330   001000 376003                    ANQ     512,DU
        12 001331   000015 656000 11                 ERSQ    FPT_READ_EI+11

      919     9341    4           DO CASE(READ_MODE);

   9341 12 001332   000000 235000 xsym               LDA     READ_MODE
        12 001333   000002 115007                    CMPA    2,DL
        12 001334   001336 602005 12                 TNC     s:9341+4,AL
        12 001335   001352 710000 12                 TRA     s:9348
        12 001336   001340 710000 12                 TRA     s:9343
        12 001337   001345 710000 12                 TRA     s:9346

      920     9342    4            CASE(0);                       /* Normal PMME                        */

      921     9343    4              CALL M$READ(FPT_READ_EI) ALTRET(PMME_ALT);

   9343 12 001340   000002 630400 11                 EPPR0   FPT_READ_EI
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:173  
        12 001341   440000 713400                    CLIMB   alt,read
        12 001342   401400 401760                    pmme    nvectors=4
        12 001343   001416 702000 12                 TSX2    PMME_ALT

      922     9344    4              GOTO PMME_OK;

   9344 12 001344   001435 710000 12                 TRA     PMME_OK

      923     9345    4            CASE(1);                       /* FSFA routines                      */

      924     9346    4              CALL XSA$READ(FPT_READ_EI,IFSFA_PARAM) ALTRET(FSFA_ALT);

   9346 12 001345   000042 630400 13                 EPPR0   34
        12 001346   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 001347   000000 701000 xent               TSX1    XSA$READ
        12 001350   001427 702000 12                 TSX2    FSFA_ALT

      925     9347    4              GOTO FSFA_OK;

   9347 12 001351   001451 710000 12                 TRA     FSFA_OK

      926     9348    4            END;                           /* END CASE                           */

   9348 12 001352   001354 710000 12                 TRA     s:9351

      927     9349        /**/
      928     9350    3   PFIL:   ENTRY ALTRET;

   9350 12 001353   200020 741300       PFIL         STX1  ! PTR$+3,,AUTO

      929     9351    4           DO CASE(READ_MODE);

   9351 12 001354   000000 235000 xsym               LDA     READ_MODE
        12 001355   000002 115007                    CMPA    2,DL
        12 001356   001360 602005 12                 TNC     s:9351+4,AL
        12 001357   001374 710000 12                 TRA     s:9358
        12 001360   001362 710000 12                 TRA     s:9353
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:174  
        12 001361   001367 710000 12                 TRA     s:9356

      930     9352    4            CASE(0);                       /* Normal PMME                        */

      931     9353    4              CALL M$PFIL(FPT_PFIL_EI) ALTRET(PMME_ALT);

   9353 12 001362   000060 630400 11                 EPPR0   FPT_PFIL_EI
        12 001363   440004 713400                    CLIMB   alt,+16388
        12 001364   400000 401760                    pmme    nvectors=1
        12 001365   001416 702000 12                 TSX2    PMME_ALT

      932     9354    4              GOTO PMME_OK;

   9354 12 001366   001435 710000 12                 TRA     PMME_OK

      933     9355    4            CASE(1);                       /* FSFA routines                      */

      934     9356    4              CALL XSA$PFIL(FPT_PFIL_EI,IFSFA_PARAM) ALTRET(FSFA_ALT);

   9356 12 001367   000044 630400 13                 EPPR0   36
        12 001370   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 001371   000000 701000 xent               TSX1    XSA$PFIL
        12 001372   001427 702000 12                 TSX2    FSFA_ALT

      935     9357    4              GOTO FSFA_OK;

   9357 12 001373   001451 710000 12                 TRA     FSFA_OK

      936     9358    4            END;                           /* END CASE                           */

   9358 12 001374   001376 710000 12                 TRA     s:9361

      937     9359        /**/
      938     9360    3   PRECORD: ENTRY ALTRET;

   9360 12 001375   200020 741300       PRECORD      STX1  ! PTR$+3,,AUTO

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:175  
      939     9361    4           DO CASE(READ_MODE);

   9361 12 001376   000000 235000 xsym               LDA     READ_MODE
        12 001377   000002 115007                    CMPA    2,DL
        12 001400   001402 602005 12                 TNC     s:9361+4,AL
        12 001401   001416 710000 12                 TRA     PMME_ALT
        12 001402   001404 710000 12                 TRA     s:9363
        12 001403   001411 710000 12                 TRA     s:9366

      940     9362    4            CASE(0);                       /* Normal PMME                        */

      941     9363    4              CALL M$PRECORD(FPT_PREC_EI) ALTRET(PMME_ALT);

   9363 12 001404   000046 630400 11                 EPPR0   FPT_PREC_EI
        12 001405   440003 713400                    CLIMB   alt,+16387
        12 001406   401000 401760                    pmme    nvectors=3
        12 001407   001416 702000 12                 TSX2    PMME_ALT

      942     9364    4              GOTO PMME_OK;

   9364 12 001410   001435 710000 12                 TRA     PMME_OK

      943     9365    4            CASE(1);                       /* FSFA routines                      */

      944     9366    4              CALL XSA$PRECORD(FPT_PREC_EI,IFSFA_PARAM) ALTRET(FSFA_ALT);

   9366 12 001411   000046 630400 13                 EPPR0   38
        12 001412   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 001413   000000 701000 xent               TSX1    XSA$PRECORD
        12 001414   001427 702000 12                 TSX2    FSFA_ALT

      945     9367    4              GOTO FSFA_OK;

   9367 12 001415   001451 710000 12                 TRA     FSFA_OK

      946     9368    4            END;                           /* END CASE                           */

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:176  
   9361 12 001416                       PMME_ALT     null
      947     9369        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:177  
      948     9370    3   PMME_ALT: ;                             /* Normal PMME ALTRET                 */
      949     9371    3           INPUT_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   9371 12 001416   000000 470400 xsym               LDP0    B$TCB$
        12 001417   000000 471500                    LDP1    0,,PR0
        12 001420   100102 236100                    LDQ     66,,PR1
        12 001421   000000 756000 xsym               STQ     INPUT_ERR

      950     9372    3           IN_ARS = M$EI$->F$DCB.ARS;

   9372 12 001422   000000 471400 xsym               LDP1    M$EI$
        12 001423   100000 235100                    LDA     0,,PR1
        12 001424   000000 755000 xsym               STA     IN_ARS

      951     9373    3           ALTRETURN;

   9373 12 001425   200020 221300                    LDX1  ! PTR$+3,,AUTO
        12 001426   000000 702211                    TSX2  ! 0,X1

   9372 12 001427                       FSFA_ALT     null
      952     9374        /**/
      953     9375    3   FSFA_ALT: ;                             /* FSFA routine ALTRET                */
      954     9376    3           INPUT_ERR = IFSFA_PARAM.ERR;

   9376 12 001427   000001 236000 xsym               LDQ     IFSFA_PARAM+1
        12 001430   000000 756000 xsym               STQ     INPUT_ERR

      955     9377    3           IN_ARS = IFSFA_PARAM.ARS#;

   9377 12 001431   000000 235000 xsym               LDA     IFSFA_PARAM
        12 001432   000000 755000 xsym               STA     IN_ARS

      956     9378    3           ALTRETURN;

   9378 12 001433   200020 221300                    LDX1  ! PTR$+3,,AUTO
        12 001434   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:178  
   9377 12 001435                       PMME_OK      null
      957     9379        /**/
      958     9380    3   PMME_OK: ;                              /* Normal PMME normal return          */
      959     9381    3           IN_ARS = M$EI$ -> F$DCB.ARS;

   9381 12 001435   000000 470400 xsym               LDP0    M$EI$
        12 001436   000000 235100                    LDA     0,,PR0
        12 001437   000000 755000 xsym               STA     IN_ARS

      960     9382    3           IN_DVBYTE = M$EI$ -> F$DCB.DVBYTE;

   9382 12 001440   000003 236100                    LDQ     3,,PR0
        12 001441   776000 376003                    ANQ     -1024,DU
        12 001442   000000 756000 xsym               STQ     IN_DVBYTE

      961     9383    3           IN_EOMCHAR = M$EI$ -> F$DCB.EOMCHAR;

   9383 12 001443   000003 236100                    LDQ     3,,PR0
        12 001444   000033 736000                    QLS     27
        12 001445   000050 276000 13                 ORQ     40
        12 001446   000000 756000 xsym               STQ     IN_EOMCHAR

      962     9384    3           RETURN;

   9384 12 001447   200020 221300                    LDX1  ! PTR$+3,,AUTO
        12 001450   000001 702211                    TSX2  ! 1,X1

   9383 12 001451                       FSFA_OK      null
      963     9385        /**/
      964     9386    3   FSFA_OK: ;                              /* FSFA routine normal return         */
      965     9387    3           IN_ARS = IFSFA_PARAM.ARS#;

   9387 12 001451   000000 235000 xsym               LDA     IFSFA_PARAM
        12 001452   000000 755000 xsym               STA     IN_ARS

      966     9388    3           IN_DVBYTE = IFSFA_PARAM.DVBYTE;

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:179  
   9388 12 001453   000014 236000 xsym               LDQ     IFSFA_PARAM+12
        12 001454   000001 736000                    QLS     1
        12 001455   776000 376003                    ANQ     -1024,DU
        12 001456   000000 756000 xsym               STQ     IN_DVBYTE

      967     9389    3           IN_EOMCHAR = IFSFA_PARAM.EOMCHAR#;

   9389 12 001457   000015 236000 xsym               LDQ     IFSFA_PARAM+13
        12 001460   777000 376003                    ANQ     -512,DU
        12 001461   000050 276000 13                 ORQ     40
        12 001462   000000 756000 xsym               STQ     IN_EOMCHAR

      968     9390    3           RETURN;

   9390 12 001463   200020 221300                    LDX1  ! PTR$+3,,AUTO
        12 001464   000001 702211                    TSX2  ! 1,X1

      969     9391        /**/
      970     9392    3   END READ;
      971     9393    2   END GET_NEXT_REC;
      972     9394        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:180  
      973     9395    1   SET_UP_IN: PROC;

   9395 12 001465   200012 741300       SET_UP_IN    STX1  ! LAST_SEQ_NO+1,,AUTO

      974     9396        /*I* NAME: SET_UP_IN
      975     9397             PURPOSE: To prepare for reading from input file.
      976     9398             CALL: CALL SET_UP_IN;
      977     9399             DESCRIPTION: This procedure prepares for reading input by
      978     9400                          trying to get a large enough buffer, setting up the READ
      979     9401                          FPT, and setting up control variables.
      980     9402        */
      981     9403    2   DCL I SBIN WORD;
      982     9404    2   DCL TEMP SBIN WORD;
      983     9405    2   DCL PTR$ PTR;
      984     9406    2           IF ICB.FLAVOR.MANAGED           /* IF MANAGED                         */

   9406 12 001466   000172 236000 xsym               LDQ     ICB+122
        12 001467   000010 316003                    CANQ    8,DU
        12 001470   001513 600000 12                 TZE     XSF_ALT

      985     9407    2            THEN
      986     9408    3            DO;

      987     9409    3               PTR$ = ADDR(FPARAM_BUF);

   9409 12 001471   000051 236000 13                 LDQ     41
        12 001472   200015 756100                    STQ     PTR$,,AUTO

      988     9410    3               TEMP = 3;

   9410 12 001473   000003 235007                    LDA     3,DL
        12 001474   200014 755100                    STA     TEMP,,AUTO

      989     9411    3               CALL XSF$LOCCODE(PTR$,TEMP) ALTRET(XSF_ALT);

   9411 12 001475   200014 630500                    EPPR0   TEMP,,AUTO
        12 001476   200023 450500                    STP0    PTR$+6,,AUTO
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:181  
        12 001477   200015 631500                    EPPR1   PTR$,,AUTO
        12 001500   200022 451500                    STP1    PTR$+5,,AUTO
        12 001501   200022 630500                    EPPR0   PTR$+5,,AUTO
        12 001502   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 001503   000000 701000 xent               TSX1    XSF$LOCCODE
        12 001504   001513 702000 12                 TSX2    XSF_ALT

      990     9412    3               I = PTR$->CODE03.RCSZ+2;    /* MAX RECORD SIZE + 1K               */

   9412 12 001505   200015 470500                    LDP0    PTR$,,AUTO
        12 001506   000003 236100                    LDQ     3,,PR0
        12 001507   000033 772000                    QRL     27
        12 001510   000002 036007                    ADLQ    2,DL
        12 001511   200013 756100                    STQ     I,,AUTO

      991     9413    3               END;

   9413 12 001512   001515 710000 12                 TRA     s:9416

      992     9414    2            ELSE
      993     9415    2   XSF_ALT:   I=MIN_PAGES;

   9415 12 001513   000000 235000 xsym  XSF_ALT      LDA     MIN_PAGES
        12 001514   200013 755100                    STA     I,,AUTO

      994     9416    2           IF (MAXIMUM(OCB.RECSIZE.MIN_SIZE,OCB.RECSIZE.MAX_SIZE)+4119)/4096 > I

   9416 12 001515   000006 236000 xsym               LDQ     OCB+6
        12 001516   000004 116000 xsym               CMPQ    OCB+4
        12 001517   001521 605000 12                 TPL     s:9416+4
        12 001520   000004 236000 xsym               LDQ     OCB+4
        12 001521   010027 036007                    ADLQ    4119,DL
        12 001522   010000 506007                    DIV     4096,DL
        12 001523   200013 116100                    CMPQ    I,,AUTO
        12 001524   001534 604400 12                 TMOZ    s:9420

      995     9417    2            THEN
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:182  
      996     9418    2              I = (MAXIMUM(OCB.RECSIZE.MIN_SIZE,OCB.RECSIZE.MAX_SIZE)+4119)/4096;

   9418 12 001525   000006 236000 xsym               LDQ     OCB+6
        12 001526   000004 116000 xsym               CMPQ    OCB+4
        12 001527   001531 605000 12                 TPL     s:9418+4
        12 001530   000004 236000 xsym               LDQ     OCB+4
        12 001531   010027 036007                    ADLQ    4119,DL
        12 001532   010000 506007                    DIV     4096,DL
        12 001533   200013 756100                    STQ     I,,AUTO

      997     9419                                                /* SIZE NEEDED FOR RECSIZE            */
      998     9420    2           CALL VPD$ENLARGE_BUF(I);

   9420 12 001534   200013 630500                    EPPR0   I,,AUTO
        12 001535   200022 450500                    STP0    PTR$+5,,AUTO
        12 001536   200022 630500                    EPPR0   PTR$+5,,AUTO
        12 001537   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 001540   000000 701000 xent               TSX1    VPD$ENLARGE_BUF
        12 001541   000000 011000                    NOP     0

      999     9421    2           USE_CONT = %NO#;                /* We will find out later if we must  */

   9421 12 001542   000000 450000 xsym               STZ     USE_CONT

     1000     9422    2           FPT_READ_EI.BUF_   = IN_BUF_VECTOR;

   9422 12 001543   000000 237000 xsym               LDAQ    IN_BUF_VECTOR
        12 001544   000006 757000 11                 STAQ    FPT_READ_EI+4

     1001     9423    2           IF ICB.FLAVOR.GRANB

   9423 12 001545   000172 236000 xsym               LDQ     ICB+122
        12 001546   000200 316003                    CANQ    128,DU
        12 001547   001557 601000 12                 TNZ     s:9427
        12 001550   000000 470400 xsym               LDP0    M$EI$
        12 001551   000032 236100                    LDQ     26,,PR0
        12 001552   777000 376003                    ANQ     -512,DU
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:183  
        12 001553   007000 116003                    CMPQ    3584,DU
        12 001554   001557 600000 12                 TZE     s:9427
        12 001555   013000 116003                    CMPQ    5632,DU
        12 001556   001563 601000 12                 TNZ     s:9428

     1002     9424    2             OR M$EI$->F$DCB.ORG=%IDS#
     1003     9425    2             OR M$EI$->F$DCB.ORG=%CG#
     1004     9426    2            THEN
     1005     9427    2              FPT_READ_EI.BUF_.BOUND = 4095;

   9427 12 001557   000006 236000 11                 LDQ     FPT_READ_EI+4
        12 001560   177777 376007                    ANQ     65535,DL
        12 001561   000052 276000 13                 ORQ     42
        12 001562   000006 756000 11                 STQ     FPT_READ_EI+4

     1006     9428    2           FPT_READ_EI.V.SEED# = BINBIT(ICB.CRPT,36);

   9428 12 001563   000007 236000 xsym               LDQ     ICB+7
        12 001564   000014 756000 11                 STQ     FPT_READ_EI+10

     1007     9429    2           FPT_READ_EI.V.DVBYTE.BIN# = ICB.BIN;

   9429 12 001565   000001 236000 xsym               LDQ     ICB+1
        12 001566   000003 772000                    QRL     3
        12 001567   000015 676000 11                 ERQ     FPT_READ_EI+11
        12 001570   040000 376003                    ANQ     16384,DU
        12 001571   000015 656000 11                 ERSQ    FPT_READ_EI+11

     1008     9430    2           FPT_READ_EI.V.DVBYTE.TRANS# = ICB.TRANS;

   9430 12 001572   000004 236000 xsym               LDQ     ICB+4
        12 001573   000004 772000                    QRL     4
        12 001574   000015 676000 11                 ERQ     FPT_READ_EI+11
        12 001575   020000 376003                    ANQ     8192,DU
        12 001576   000015 656000 11                 ERSQ    FPT_READ_EI+11

     1009     9431    2           CUR_SEQ_NO = 0;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:184  

   9431 12 001577   000000 450000 xsym               STZ     CUR_SEQ_NO

     1010     9432    2           REC_SEL_IDX = -1;

   9432 12 001600   000001 336007                    LCQ     1,DL
        12 001601   200007 756100                    STQ     REC_SEL_IDX,,AUTO

     1011     9433    2           SEQ_READ = 0;

   9433 12 001602   200010 450100                    STZ     SEQ_READ,,AUTO

     1012     9434    2           IF M$EI$ -> F$DCB.ORG = %INDEXED#

   9434 12 001603   000000 470400 xsym               LDP0    M$EI$
        12 001604   000032 236100                    LDQ     26,,PR0
        12 001605   777000 376003                    ANQ     -512,DU
        12 001606   006000 116003                    CMPQ    3072,DU
        12 001607   001612 600000 12                 TZE     s:9438
        12 001610   015000 116003                    CMPQ    6656,DU
        12 001611   001620 601000 12                 TNZ     s:9442

     1013     9435    2             OR M$EI$ -> F$DCB.ORG = %IREL#
     1014     9436    2            THEN                           /* KEY_ frames data only              */
     1015     9437    3            DO;

     1016     9438    3               FPT_READ_EI.KEY_ = VECTOR(EI_KEY.KEY);

   9438 12 001612   000054 237000 13                 LDAQ    44
        12 001613   000004 757000 11                 STAQ    FPT_READ_EI+2

     1017     9439    3               EI_KEY.LEN = M$EI$->F$DCB.KEYL; /* Fake LEN byte                  */

   9439 12 001614   000036 236100                    LDQ     30,,PR0
        12 001615   000022 736000                    QLS     18
        12 001616   000000 552040 xsym               STBQ    EI_KEY,'40'O

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:185  
     1018     9440    3               END;

   9440 12 001617   001622 710000 12                 TRA     s:9448

     1019     9441    2            ELSE                           /* KEY_ frames TEXTC key              */
     1020     9442    2              FPT_READ_EI.KEY_ = VECTOR(EI_KEY);

   9442 12 001620   000056 237000 13                 LDAQ    46
        12 001621   000004 757000 11                 STAQ    FPT_READ_EI+2

     1021     9443        /**/
     1022     9444        /*  HEAD defaults to YES if we are going to a UR destination, and the         */
     1023     9445        /*  source was not UR.  Note that specifying ORG=UR on the destination is     */
     1024     9446        /*  tantamount to changing to UR.                                             */
     1025     9447        /**/
     1026     9448    2           HEAD_TO_USE = OCB.HEAD;         /* Output option determines default   */

   9448 12 001622   000263 236000 xsym               LDQ     OCB+179
        12 001623   000000 756000 11                 STQ     HEAD_TO_USE

     1027     9449    2           IF ICB.HEAD_OPT ~= 0            /* IF there is an INPUT option        */

   9449 12 001624   000015 235000 xsym               LDA     ICB+13
        12 001625   001627 600000 12                 TZE     s:9452

     1028     9450    2            THEN                           /* it takes prescedence               */
     1029     9451    2              HEAD_TO_USE = ICB.HEAD_OPT;

   9451 12 001626   000000 755000 11                 STA     HEAD_TO_USE

     1030     9452    2           IF HEAD_TO_USE > 0              /* If HEAD specified, leave it alone  */

   9452 12 001627   000000 235000 11                 LDA     HEAD_TO_USE
        12 001630   001657 601000 12                 TNZ     HEAD_DONE

     1031     9453    2            THEN
     1032     9454    2              GOTO HEAD_DONE;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:186  
     1033     9455    2           IF ((~ICB.FLAVOR.UR             /* If flavor is changing to UR        */

   9455 12 001631   000172 236000 xsym               LDQ     ICB+122
        12 001632   000020 736000                    QLS     16
        12 001633   400000 376003                    ANQ     -131072,DU
        12 001634   400000 676003                    ERQ     -131072,DU
        12 001635   001641 600000 12                 TZE     s:9455+8
        12 001636   000256 236000 xsym               LDQ     OCB+174
        12 001637   002000 316003                    CANQ    1024,DU
        12 001640   001644 601000 12                 TNZ     s:9455+11
        12 001641   000035 236000 xsym               LDQ     OCB+29
        12 001642   000011 116007                    CMPQ    9,DL
        12 001643   001655 601000 12                 TNZ     s:9462
        12 001644   000000 471400 xsym               LDP1    M$EO$
        12 001645   100004 236100                    LDQ     4,,PR1
        12 001646   000027 736000                    QLS     23
        12 001647   400000 376003                    ANQ     -131072,DU
        12 001650   400000 676003                    ERQ     -131072,DU
        12 001651   001655 600000 12                 TZE     s:9462

     1034     9456    2             AND OCB.FLAVOR.UR)
     1035     9457    2             OR OCB.ORG = 9)               /* OR ORG=UR re-specified             */
     1036     9458    2             AND ~M$EO$->F$DCB.DDEV.GR     /* AND It's not a graphics place      */
     1037     9459    2            THEN
     1038     9460    2              HEAD_TO_USE = 2;             /* PUT OUT THE HEADER                 */

   9460 12 001652   000002 236007                    LDQ     2,DL
        12 001653   000000 756000 11                 STQ     HEAD_TO_USE
        12 001654   001657 710000 12                 TRA     HEAD_DONE

     1039     9461    2            ELSE
     1040     9462    2              HEAD_TO_USE = 1;             /* DONT                               */

   9462 12 001655   000001 236007                    LDQ     1,DL
        12 001656   000000 756000 11                 STQ     HEAD_TO_USE

   9455 12 001657                       HEAD_DONE    null
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:187  
     1041     9463    2   HEAD_DONE: ;
     1042     9464        /**/
     1043     9465        /*  PAGE defaults to YES only if we intend to print a header.  */
     1044     9466        /**/
     1045     9467    2           IF OCB.PAGE > 0                 /* PAGE specified                     */

   9467 12 001657   000264 235000 xsym               LDA     OCB+180
        12 001660   001671 605400 12                 TPNZ    PAGE_DONE

     1046     9468    2            THEN
     1047     9469    2              GOTO PAGE_DONE;
     1048     9470    2           IF HEAD_TO_USE = 2              /* If we intend to print head         */

   9470 12 001661   000000 236000 11                 LDQ     HEAD_TO_USE
        12 001662   000002 116007                    CMPQ    2,DL
        12 001663   001667 601000 12                 TNZ     s:9474

     1049     9471    2            THEN
     1050     9472    2              OCB.PAGE = 2;                /* Start it on a new page             */

   9472 12 001664   000002 235007                    LDA     2,DL
        12 001665   000264 755000 xsym               STA     OCB+180
        12 001666   001671 710000 12                 TRA     PAGE_DONE

     1051     9473    2            ELSE
     1052     9474    2              OCB.PAGE = 1;                /* DONT                               */

   9474 12 001667   000001 235007                    LDA     1,DL
        12 001670   000264 755000 xsym               STA     OCB+180

   9470 12 001671                       PAGE_DONE    null
     1053     9475    2   PAGE_DONE: ;
     1054     9476    2   END SET_UP_IN;

   9476 12 001671   200012 221300                    LDX1  ! LAST_SEQ_NO+1,,AUTO
        12 001672   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:188  
     1055     9477        %EJECT;
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:189  
     1056     9478    1   VPE$BREAK_ON_READ_WRITE: ENTRY ALTRET;

   9478 12 001673   000000 700200 xent  VPE$BREAK_O* TSX0  ! X66_AUTO_0
        12 001674   000032 000000                    ZERO    26,0

     1057     9479
     1058     9480        /*D*  ENTRY:   VPE$BREAK_ON_READ_WRITE
     1059     9481              DESCRIPTION: Prints the "Break at ... C to continue" message during a
     1060     9482                       COPY, COPYALL, or COPYSTD operation.
     1061     9483        */
     1062     9484
     1063     9485    1           OUT_COL = 0;

   9485 12 001675   000000 450000 xsym               STZ     OUT_COL

     1064     9486    1           OLD_BREAKS = 1;

   9486 12 001676   000001 235007                    LDA     1,DL
        12 001677   000000 755000 xsym               STA     OLD_BREAKS

     1065     9487
     1066     9488        /*  Format and print message with interrupt type and status.  */
     1067     9489
     1068     9490    1           CALL VPE$FMT_ABORT(60,'05'O,M$EI#);

   9490 12 001700   000060 630400 13                 EPPR0   48
        12 001701   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 001702   000000 701000 xent               TSX1    VPE$FMT_ABORT
        12 001703   000000 011000                    NOP     0

     1069     9491
     1070     9492        /*E*   ERROR: VPE-00060
     1071     9493               MESSAGE: aBREAK at%U1 (%UF).  C to continue.
     1072     9494        */
     1073     9495    1           SUBSTR (ERR_BUF, 0, 1) = %VFC_TRANSITION1;

   9495 12 001704   037000 236003                    LDQ     15872,DU
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:190  
        12 001705   000000 552040 xsym               STBQ    ERR_BUF,'40'O

     1074     9496    1           FPT_WRITE_UC.BUF_ = VECTOR(SUBSTR(ERR_BUF,0,ERR_LEN));

   9496 12 001706   000000 235000 xsym               LDA     ERR_LEN
        12 001707   000020 735000                    ALS     16
        12 001710   000140 135007                    SBLA    96,DL
        12 001711   000063 236000 13                 LDQ     51
        12 001712   000004 757000 xsym               STAQ    FPT_WRITE_UC+4

     1075     9497    1           FPT_WRITE_UC.V.DVBYTE.VFC# = %YES#;

   9497 12 001713   100000 236003                    LDQ     32768,DU
        12 001714   000013 256000 xsym               ORSQ    FPT_WRITE_UC+11

     1076     9498    1           CALL M$WRITE(FPT_WRITE_UC);

   9498 12 001715   000000 630400 xsym               EPPR0   FPT_WRITE_UC
        12 001716   040001 713400                    CLIMB   write
        12 001717   401400 401760                    pmme    nvectors=4

     1077     9499    1           FPT_WRITE_UC.BUF_=VECTOR(CONTINUE_MSG);

   9499 12 001720   000064 237000 13                 LDAQ    52
        12 001721   000004 757000 xsym               STAQ    FPT_WRITE_UC+4

     1078     9500    1           CALL M$WRITE(FPT_WRITE_UC);

   9500 12 001722   000000 630400 xsym               EPPR0   FPT_WRITE_UC
        12 001723   040001 713400                    CLIMB   write
        12 001724   401400 401760                    pmme    nvectors=4

     1079     9501    1           FPT_WRITE_UC.V.DVBYTE.VFC# = %NO#;

   9501 12 001725   000066 236000 13                 LDQ     54
        12 001726   000013 356000 xsym               ANSQ    FPT_WRITE_UC+11

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:191  
     1080     9502
     1081     9503    1           RETURN;

   9503 12 001727   000000 702200 xent               TSX2  ! X66_ARET
     1082     9504
     1083     9505    1   END VPE$READ_WRITE;
     1084     9506        %EOD;

PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:192  
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPE$READ_WRITE.
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:193  

 **** Variables and constants ****

  ****  Section 010 RoData VPE$READ_WRITE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c CHAR(15)    r     1 CONTINUE_MSG

  ****  Section 011  Data  VPE$READ_WRITE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    64-0-0/d STRC(288)   r     1 FPT_CVOL_EI               34-0-0/d STRC(360)   r     1 FPT_DEVICE
    60-0-0/d STRC(144)   r     1 FPT_PFIL_EI               46-0-0/d STRC(360)   r     1 FPT_PREC_EI
     2-0-0/d STRC(504)   r     1 FPT_READ_EI               20-0-0/d STRC(432)   r     1 FPT_WRITE_HDR
     0-0-0/w UBIN        r     1 HEAD_TO_USE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    13-0-0/w PTR         r     1 @RET_VAL                  13-0-0/w SBIN        r     1 I
    11-0-0/w SBIN        r     1 LAST_SEQ_NO               15-0-0/w PTR         r     1 PTR$
     7-0-0/w SBIN        r     1 REC_SEL_IDX                6-0-0/w SBIN        r     1 RET_VAL
    *0-0-0/w SBIN        r     1 RET_VAL                   10-0-0/w SBIN        r     1 SEQ_READ
    14-0-0/w SBIN        r     1 TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:194  
     0-0-0/d REMB        r     1 CLEAN_POINT                0-0-0/w SBIN        r     1 CUR_SEQ_NO
     0-0-0/c STRC(4608)  r     1 EI_KEY                     0-0-0/w BIT         r     1 EOF_SOURCE
     0-0-0/c CHAR(120)   r     1 ERR_BUF                    0-0-0/w SBIN        r     1 ERR_LEN
     0-0-0/d SBIN        r     1 FPARAM_BUF(0:1023)
     0-0-0/d STRC(432)   r     1 FPT_WRITE_UC               0-0-0/d STRC(5868)  r     1 ICB
     0-0-0/d STRC(504)   r     1 IFSFA_PARAM                0-0-0/w STRC        r     1 INPUT_ERR
     0-0-0/w SBIN        r     1 IN_ARS                     0-0-0/d STRC(72)    r     1 IN_BUF_VECTOR
     0-0-0/b STRC(8)     r     1 IN_DVBYTE                  0-0-0/c CHAR        r     1 IN_EOMCHAR
     0-0-0/w STRC(1116)  r     1 IN_SN                      0-0-0/w SBIN        r     1 M$EI#
     0-0-0/w PTR         r     1 M$EI$                      0-0-0/w PTR         r     1 M$EO$
     0-0-0/w SBIN        r     1 MIN_PAGES                  0-0-0/d STRC(6840)  r     1 OCB
     0-0-0/d STRC(504)   r     1 OFSFA_PARAM                0-0-0/w SBIN        r     1 OLD_BREAKS
     0-0-0/w STRC        r     1 OUTPUT_ERR                 0-0-0/w SBIN        r     1 OUT_COL
     0-0-0/w SBIN        r     1 READ_MODE                  0-0-0/c STRC(1260)  r     1 SPEC_BUF
     0-0-0/b BIT         r     1 USE_CONT                   0-0-0/w SBIN        r     1 WRITE_MODE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(324)   r     1 CODE03                     0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0N  NULL        r     1 M$EI                       0-0-0/c ASTR(9)     r     1 TEXT$C
     0-0-0/c ASTR(9)     r     1 TEXT$C_BIT


   Procedure VPE$READ_WRITE requires 984 words for executable code.
   Procedure VPE$READ_WRITE requires 26 words of local(AUTO) storage.
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:195  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:196  
          MINI XREF LISTING

B$ALT.CODE
      8488**DCL      8488--REDEF    8489--REDEF    8489--REDEF
B$ALT.ERR
      8489**DCL      8977>>ASSIGN   9371>>ASSIGN
B$ALT.ERR.ERR#
      8490**DCL      8490--REDEF
B$ALT.EVID
      8489**DCL      8489--REDEF    8489--REDEF
B$TCB.ALT$
      8484**DCL      8977>>ASSIGN   9371>>ASSIGN
B$TCB$
      5987**DCL      8977>>ASSIGN   9371>>ASSIGN
BREAK_LOC
      5222**DCL      5222--REDEF
BREAK_MESSAGE_REPORTER
      5223**DCL      8896<<ASSIGN
CLEAN_POINT
      5187**DCL      8887<<REMEMBR
CODE03.RCSZ
      8479**DCL      9412>>ASSIGN
CONTINUE_MSG
      8506**DCL      9499--ASSIGN
CUR_SEQ_NO
      5919**DCL      9012>>IF       9014<<ASSIGN   9014>>ASSIGN   9059>>IF       9109<<ASSIGN   9118>>IF
      9133<<ASSIGN   9135>>ASSIGN   9137<<ASSIGN   9162<<ASSIGN   9196>>ASSIGN   9202<<ASSIGN   9202>>ASSIGN
      9205<<ASSIGN   9225<<ASSIGN   9258>>IF       9431<<ASSIGN
DEF_ICB.FID.STRING
      5820**DCL      5821--REDEF
DEV_ICB.FID.STRING
      5706**DCL      5707--REDEF
EI_KEY
      5917**DCL      9027--IF       9027--IF       9045--IF       9045--IF       9053--IF       9053--IF
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:197  
      9442--ASSIGN
EI_KEY.KEY
      5918**DCL      5918--REDEF    5918--REDEF    5918--REDEF    9438--ASSIGN
EI_KEY.LEN
      5918**DCL      8888<<ASSIGN   9032>>IF       9035>>IF       9041>>IF       9439<<ASSIGN
EOD_HIT IN PROCEDURE GET_NEXT_REC
      9287**PROC     9228--CALL
EOF_SOURCE
      5219**DCL      9192<<ASSIGN
EO_OCB.TYPE
      5418**DCL      5419--REDEF
ERR_BUF
      5186**DCL      9495<<ASSIGN   9496--ASSIGN
ERR_LEN
      5186**DCL      9496>>ASSIGN
F$DCB.ACTPOS
      7028**DCL      7028--REDEF
F$DCB.ARS
      7003**DCL      7003--REDEF    9182>>ASSIGN   9372>>ASSIGN   9381>>ASSIGN
F$DCB.ATTR
      7021**DCL      7022--REDEF
F$DCB.BORROW
      7036**DCL      7036--REDEF    7036--REDEF    7036--REDEF
F$DCB.DCBNAME.L
      7050**DCL      7050--IMP-SIZ
F$DCB.DDEV.GR
      7009**DCL      9455>>IF
F$DCB.DVBYTE
      7006**DCL      9382>>ASSIGN
F$DCB.EOMCHAR
      7007**DCL      7007--REDEF    9383>>ASSIGN
F$DCB.FLDID
      7031**DCL      7031--REDEF
F$DCB.FORM$
      7025**DCL      7025--REDEF
F$DCB.FSECT
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:198  
      7041**DCL      7041--REDEF
F$DCB.FSN
      7018**DCL      7018--REDEF    7018--REDEF    7019--REDEF
F$DCB.HEADER$
      7024**DCL      7024--REDEF
F$DCB.IXTNSIZE
      7022**DCL      7022--REDEF
F$DCB.KEYL
      7020**DCL      9439>>ASSIGN
F$DCB.LASTSTA$
      7012**DCL      7012--REDEF
F$DCB.LVL
      7037**DCL      7037--REDEF
F$DCB.NAME.C
      7012**DCL      7012--REDEF
F$DCB.NOEOF
      7033**DCL      7033--REDEF
F$DCB.NRECS
      7023**DCL      7023--REDEF
F$DCB.NRECX
      7042**DCL      7042--REDEF
F$DCB.OHDR
      7034**DCL      7034--REDEF
F$DCB.ORG
      7017**DCL      7017--REDEF    9092>>IF       9092>>IF       9099>>IF       9099>>IF       9423>>IF
      9423>>IF       9434>>IF       9434>>IF
F$DCB.PRECNO
      7040**DCL      7040--REDEF
F$DCB.RCSZ
      7045**DCL      7045--REDEF
F$DCB.RES
      7013**DCL      7013--REDEF
F$DCB.SETX
      7025**DCL      7025--REDEF
F$DCB.TAB$
      7024**DCL      7025--REDEF
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:199  
F$DCB.TDA
      7039**DCL      7039--REDEF
F$DCB.TYC.EOD
      7004**DCL      9226>>IF       9296>>IF
F$DCB.VOL
      7023**DCL      8940>>IF
F$DCB.WSN
      7014**DCL      7014--REDEF
FPARAM_BUF
      5223**DCL      9409--ASSIGN
FPT_CLOSE_EI.SN_
      6759**DCL      6759--REDEF
FPT_CLOSE_EI.UTL_
      6760**DCL      6760--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6774**DCL      6774--REDEF
FPT_CLOSE_EI.V.TYPE#
      6772**DCL      6772--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6769**DCL      6769--REDEF    6771--REDEF
FPT_CLOSE_PTL.SN_
      6885**DCL      6885--REDEF
FPT_CLOSE_PTL.UTL_
      6886**DCL      6886--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6900**DCL      6900--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6898**DCL      6898--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6895**DCL      6895--REDEF    6897--REDEF
FPT_CLOSE_READ.SN_
      6801**DCL      6801--REDEF
FPT_CLOSE_READ.UTL_
      6802**DCL      6802--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6816**DCL      6816--REDEF
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:200  
FPT_CLOSE_READ.V.TYPE#
      6814**DCL      6814--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6811**DCL      6811--REDEF    6813--REDEF
FPT_CLOSE_SI.SN_
      6969**DCL      6969--REDEF
FPT_CLOSE_SI.UTL_
      6970**DCL      6970--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      6984**DCL      6984--REDEF
FPT_CLOSE_SI.V.TYPE#
      6982**DCL      6982--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      6979**DCL      6979--REDEF    6981--REDEF
FPT_CLOSE_STD.SN_
      6927**DCL      6927--REDEF
FPT_CLOSE_STD.UTL_
      6928**DCL      6928--REDEF
FPT_CLOSE_STD.V.EXPIRE#
      6942**DCL      6942--REDEF
FPT_CLOSE_STD.V.TYPE#
      6940**DCL      6940--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6937**DCL      6937--REDEF    6939--REDEF
FPT_CLSEI_FT.SN_
      6843**DCL      6843--REDEF
FPT_CLSEI_FT.UTL_
      6844**DCL      6844--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6858**DCL      6858--REDEF
FPT_CLSEI_FT.V.TYPE#
      6856**DCL      6856--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6853**DCL      6853--REDEF    6855--REDEF
FPT_CVOL_EI
      8670**DCL      8943<>CALL
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:201  
FPT_CVOL_EI.V
      8671**DCL      8670--DCLINIT
FPT_DEVICE
      8610**DCL      8899<>CALL
FPT_DEVICE.V
      8611**DCL      8610--DCLINIT
FPT_DEVICE.V.DCB#
      8611**DCL      8892<<ASSIGN
FPT_OPEN_EI.ACSVEH_
      6414**DCL      6415--REDEF
FPT_OPEN_EI.ALTKEYS_
      6420**DCL      6421--REDEF    6421--REDEF
FPT_OPEN_EI.HDR_
      6419**DCL      6420--REDEF
FPT_OPEN_EI.TAB_
      6418**DCL      6419--REDEF
FPT_OPEN_EI.UHL_
      6412**DCL      6413--REDEF    6413--REDEF
FPT_OPEN_EI.V.FSN#
      6452**DCL      6452--REDEF    6452--REDEF
FPT_OPEN_EI.WSN_
      6418**DCL      6418--REDEF
FPT_OPEN_EI_SAVE.ACSVEH_
      6523**DCL      6524--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
      6529**DCL      6530--REDEF    6530--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6528**DCL      6529--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6527**DCL      6528--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6521**DCL      6522--REDEF    6522--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6561**DCL      6561--REDEF    6561--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6527**DCL      6527--REDEF
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:202  
FPT_OPEN_OUT.ACSVEH_
      6305**DCL      6306--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6311**DCL      6312--REDEF    6312--REDEF
FPT_OPEN_OUT.HDR_
      6310**DCL      6311--REDEF
FPT_OPEN_OUT.TAB_
      6309**DCL      6310--REDEF
FPT_OPEN_OUT.UHL_
      6303**DCL      6304--REDEF    6304--REDEF
FPT_OPEN_OUT.V.FSN#
      6343**DCL      6343--REDEF    6343--REDEF
FPT_OPEN_OUT.WSN_
      6309**DCL      6309--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6196**DCL      6197--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6202**DCL      6203--REDEF    6203--REDEF
FPT_OPEN_OUT_SAVE.HDR_
      6201**DCL      6202--REDEF
FPT_OPEN_OUT_SAVE.TAB_
      6200**DCL      6201--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6194**DCL      6195--REDEF    6195--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
      6234**DCL      6234--REDEF    6234--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6200**DCL      6200--REDEF
FPT_PFIL_EI
      8653**DCL      9353<>CALL     9356<>CALL
FPT_PFIL_EI.V
      8653**DCL      8653--DCLINIT
FPT_PFIL_EI.V.BOF#
      8654**DCL      9083<<ASSIGN   9113<<ASSIGN   9121<<ASSIGN   9154<<ASSIGN   9200<<ASSIGN
FPT_PREC_EI
      8631**DCL      9363<>CALL     9366<>CALL
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:203  
FPT_PREC_EI.KEY_
      8631**DCL      9102<<ASSIGN   9106<<ASSIGN
FPT_PREC_EI.V
      8633**DCL      8631--DCLINIT
FPT_PREC_EI.V.KEYS#
      8634**DCL      9108<<ASSIGN   9117<<ASSIGN   9248<<ASSIGN   9312<<ASSIGN
FPT_PREC_EI.V.N#
      8637**DCL      9089<<ASSIGN   9135<<ASSIGN   9182<<ASSIGN   9182>>ASSIGN   9247<<ASSIGN   9315<<ASSIGN
      9317<<ASSIGN
FPT_READ_EI
      8543**DCL      9343<>CALL     9346<>CALL
FPT_READ_EI.BUF_
      8545**DCL      9246<<ASSIGN   9422<<ASSIGN
FPT_READ_EI.BUF_.BOUND
      8545**DCL      9016>>IF       9427<<ASSIGN
FPT_READ_EI.KEY_
      8543**DCL      9438<<ASSIGN   9442<<ASSIGN
FPT_READ_EI.STATION_
      8546**DCL      8547--REDEF
FPT_READ_EI.V
      8547**DCL      8543--DCLINIT
FPT_READ_EI.V.DVBYTE.BIN#
      8558**DCL      9429<<ASSIGN
FPT_READ_EI.V.DVBYTE.CONT#
      8560**DCL      9340<<ASSIGN
FPT_READ_EI.V.DVBYTE.REREAD#
      8558**DCL      8558--REDEF
FPT_READ_EI.V.DVBYTE.TRANS#
      8559**DCL      9430<<ASSIGN
FPT_READ_EI.V.INDX#
      8556**DCL      8556--REDEF
FPT_READ_EI.V.SEED#
      8557**DCL      9428<<ASSIGN
FPT_READ_STD.STATION_
      6624**DCL      6625--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:204  
      6636**DCL      6636--REDEF
FPT_READ_STD.V.INDX#
      6634**DCL      6634--REDEF
FPT_READ_UC.STATION_
      6585**DCL      6586--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6597**DCL      6597--REDEF
FPT_READ_UC.V.INDX#
      6595**DCL      6595--REDEF
FPT_WRITE_HDR
      8584**DCL      8970<>CALL     8972<>CALL
FPT_WRITE_HDR.BUF_
      8584**DCL      8904<<ASSIGN
FPT_WRITE_HDR.KEY_
      8584**DCL      8912<<ASSIGN   8915<<ASSIGN
FPT_WRITE_HDR.STATION_
      8586**DCL      8586--REDEF
FPT_WRITE_HDR.V
      8587**DCL      8584--DCLINIT
FPT_WRITE_HDR.V.DCB#
      8587**DCL      8906<<ASSIGN
FPT_WRITE_HDR.V.DVBYTE.VFC#
      8593**DCL      8593--REDEF
FPT_WRITE_ME.STATION_
      6693**DCL      6693--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6700**DCL      6700--REDEF
FPT_WRITE_OUT.STATION_
      6724**DCL      6724--REDEF
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6731**DCL      6731--REDEF
FPT_WRITE_UC
      6660**DCL      9498<>CALL     9500<>CALL
FPT_WRITE_UC.BUF_
      6660**DCL      9496<<ASSIGN   9499<<ASSIGN
FPT_WRITE_UC.STATION_
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:205  
      6662**DCL      6662--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6669**DCL      6669--REDEF    9497<<ASSIGN   9501<<ASSIGN
FROM_SN.SN
      5568**DCL      5569--REDEF
FSFA_ALT IN PROCEDURE READ
      9372**LABEL    9346--CALLALT  9356--CALLALT  9366--CALLALT
FSFA_ALT IN PROCEDURE WRITE
      8977**LABEL    8972--CALLALT
FSFA_OK IN PROCEDURE READ
      9383**LABEL    9347--GOTO     9357--GOTO     9367--GOTO
GETCMD.OUT$
      4775**DCL      4781--REDEF
GET_NEXT_REC
      8986**PROC     8919--CALL
HEAD_DONE IN PROCEDURE SET_UP_IN
      9455**LABEL    9454--GOTO
HEAD_TO_USE
      8520**DCL      8900>>IF       9448<<ASSIGN   9451<<ASSIGN   9452>>IF       9460<<ASSIGN   9462<<ASSIGN
      9470>>IF
I IN PROCEDURE SET_UP_IN
      9403**DCL      9412<<ASSIGN   9415<<ASSIGN   9416>>IF       9418<<ASSIGN   9420<>CALL
ICB.BIN
      5575**DCL      9429>>ASSIGN
ICB.CLPOS
      5675**DCL      9079>>IF       9313>>IF
ICB.CRPT
      5581**DCL      9428>>ASSIGN
ICB.DEOD
      5582**DCL      8927>>IF
ICB.DEV_MASK.DEV_TAPE
      5646**DCL      9016>>IF       9079>>IF       9124>>IF       9151>>IF       9197>>IF       9288>>IF
ICB.DEV_MASK.MAN_TAPE
      5645**DCL      9110>>IF
ICB.FID.STRING
      5592**DCL      5593--REDEF
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:206  
ICB.FLAVOR.GRANB
      5653**DCL      9423>>IF
ICB.FLAVOR.HOLY_ORG
      5656**DCL      9252>>IF
ICB.FLAVOR.MANAGED
      5657**DCL      9406>>IF
ICB.FLAVOR.UR
      5659**DCL      9455>>IF
ICB.HEAD_OPT
      5587**DCL      9449>>IF       9451>>ASSIGN
ICB.REC_SEL.CNT
      5600**DCL      9020>>IF       9067>>IF       9076>>IF       9193>>IF
ICB.REC_SEL.SPEC.FINISH.KEY$
      5607**DCL      9024>>IF       9027>>IF       9027>>IF       9032>>IF       9035>>IF       9041>>IF
      9045>>IF       9045>>IF       9053>>IF       9053>>IF       9166>>IF       9172>>IF       9172>>IF
      9210>>IF
ICB.REC_SEL.SPEC.FINISH.SEQ
      5608**DCL      9059>>IF       9210>>IF       9258>>IF
ICB.REC_SEL.SPEC.START.KEY$
      5604**DCL      9102>>ASSIGN   9102>>ASSIGN   9106>>ASSIGN   9106>>ASSIGN   9166>>IF       9172>>IF
      9172>>IF
ICB.REC_SEL.SPEC.START.SEQ
      5605**DCL      9135>>ASSIGN   9137>>ASSIGN   9206>>IF
ICB.REC_SEL.SPEC.TYPE
      5602**DCL      9022>>DOCASE   9090>>DOCASE   9206>>IF       9210>>IF       9210>>IF
ICB.TRANS
      5578**DCL      9430>>ASSIGN
IFSFA_PARAM
      5931**DCL      9346<>CALL     9356<>CALL     9366<>CALL
IFSFA_PARAM.ARS#
      5935**DCL      9377>>ASSIGN   9387>>ASSIGN
IFSFA_PARAM.DVBYTE
      5944**DCL      9388>>ASSIGN
IFSFA_PARAM.EOMCHAR#
      5947**DCL      5948--REDEF    9389>>ASSIGN
IFSFA_PARAM.ERR
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:207  
      5935**DCL      9376>>ASSIGN
IFSFA_PARAM.SIG1
      5941**DCL      5941--REDEF
IFSFA_PARAM.SIG2
      5941**DCL      5942--REDEF
IGNORE_ERR IN PROCEDURE GET_NEXT_REC
      9133**LABEL    9126--CALLALT
INPUT_ERR
      5107**DCL      9269<>CALL     9275<>CALL     9371<<ASSIGN   9376<<ASSIGN
INPUT_ERR.ERR#
      5137**DCL      9129>>IF       9147>>IF       9147>>IF       9165>>IF       9181>>IF       9188>>IF
      9234>>IF       9252>>IF       9264>>IF       9264>>IF       9296>>IF       9303>>IF       9303>>IF
      9320>>IF
IN_ARS
      5915**DCL      8923<>CALL     8954<>CALL     9016>>IF       9372<<ASSIGN   9377<<ASSIGN   9381<<ASSIGN
      9387<<ASSIGN
IN_BUF_VECTOR
      5916**DCL      9246>>ASSIGN   9422>>ASSIGN
IN_DVBYTE
      5915**DCL      9382<<ASSIGN   9388<<ASSIGN
IN_EOMCHAR
      5916**DCL      9383<<ASSIGN   9389<<ASSIGN
IN_RES
      5514**DCL      5514--REDEF
IN_SN.COUNT
      5529**DCL      8940>>IF
IN_SN.SN
      5530**DCL      5531--REDEF
KSELR_OK IN PROCEDURE GET_NEXT_REC
      9054**LABEL    9026--GOTO
LAST_SEQ_NO
      8516**DCL      9196<<ASSIGN   9206>>IF
LD IN PROCEDURE GET_NEXT_REC
      9236**LABEL    9019--GOTO
M$CVOL
        35**DCL-ENT  8943--CALL
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:208  
M$DEVICE
        36**DCL-ENT  8899--CALL
M$EI
      5983**DCL      9094<>CALL     9157<>CALL     9209<>CALL     9215<>CALL
M$EI#
      5983**DCL      8945<>CALL     9269<>CALL     9275<>CALL     9306<>CALL     9322<>CALL     9490<>CALL
M$EI$
      5983**DCL      8940>>IF       9092>>IF       9092>>IF       9099>>IF       9099>>IF       9182>>ASSIGN
      9226>>IF       9296>>IF       9372>>ASSIGN   9381>>ASSIGN   9382>>ASSIGN   9383>>ASSIGN   9423>>IF
      9423>>IF       9434>>IF       9434>>IF       9439>>ASSIGN
M$EO$
      5983**DCL      9455>>IF
M$PFIL
        34**DCL-ENT  9353--CALL
M$PRECORD
        36**DCL-ENT  9363--CALL
M$READ
        33**DCL-ENT  9343--CALL
M$WRITE
        33**DCL-ENT  8970--CALL     9498--CALL     9500--CALL
MIN_PAGES
      5218**DCL      9415>>ASSIGN
NEXT_REC
      8919**LABEL    8887--REMEMBR
NEXT_REC IN PROCEDURE GET_NEXT_REC
      9009**LABEL    9039--GOTO     9051--GOTO     9071--GOTO     9141--GOTO     9163--GOTO     9169--GOTO
      9176--GOTO     9216--GOTO
OCB.DCBNM
      5231**DCL      8892>>ASSIGN   8906>>ASSIGN
OCB.FLAVOR.UR
      5327**DCL      9455>>IF
OCB.HEAD
      5337**DCL      9448>>ASSIGN
OCB.LN.CURRENT
      5264**DCL      8910<<ASSIGN   8910>>ASSIGN   8911>>ASSIGN
OCB.LN.K
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:209  
      5266**DCL      8910>>ASSIGN
OCB.LN.KEY
      5261**DCL      8912--ASSIGN
OCB.LN.KEY.CURRENT
      5263**DCL      8911<<ASSIGN
OCB.ORG
      5268**DCL      8907>>IF       9455>>IF
OCB.PAGE
      5338**DCL      8897>>IF       9467>>IF       9472<<ASSIGN   9474<<ASSIGN
OCB.RECSIZE.MAX_SIZE
      5238**DCL      9416>>IF       9418>>ASSIGN
OCB.RECSIZE.MIN_SIZE
      5236**DCL      9416>>IF       9418>>ASSIGN
OCB.TYPE
      5276**DCL      5277--REDEF
OFSFA_PARAM
      5961**DCL      8972<>CALL
OFSFA_PARAM.EOMCHAR#
      5977**DCL      5978--REDEF
OFSFA_PARAM.ERR
      5965**DCL      8981>>ASSIGN
OFSFA_PARAM.SIG1
      5971**DCL      5971--REDEF
OFSFA_PARAM.SIG2
      5971**DCL      5972--REDEF
OLD_BREAKS
      5223**DCL      9486<<ASSIGN
OUTPUT_ERR
      5152**DCL      8977<<ASSIGN   8981<<ASSIGN
OUT_COL
      5220**DCL      9485<<ASSIGN
OUT_SN.SN
      5548**DCL      5549--REDEF
PAGE_DONE IN PROCEDURE SET_UP_IN
      9470**LABEL    9469--GOTO
PFIL IN PROCEDURE READ
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:210  
      9350**ENTRY    9084--CALL     9114--CALL     9122--CALL     9155--CALL     9201--CALL
PMME_ALT IN PROCEDURE READ
      9361**LABEL    9343--CALLALT  9353--CALLALT  9363--CALLALT
PMME_ALT IN PROCEDURE WRITE
      8968**LABEL    8970--CALLALT
PMME_OK IN PROCEDURE READ
      9377**LABEL    9344--GOTO     9354--GOTO     9364--GOTO
PREC IN PROCEDURE GET_NEXT_REC
      9139**LABEL    9183--GOTO
PRECORD IN PROCEDURE READ
      9360**ENTRY    9139--CALL     9249--CALL     9318--CALL
PREC_EI_ALT IN PROCEDURE GET_NEXT_REC
      9147**LABEL    9139--CALLALT
PTR$ IN PROCEDURE SET_UP_IN
      9405**DCL      9409<<ASSIGN   9411<>CALL     9412>>ASSIGN
READ IN PROCEDURE GET_NEXT_REC
      9332**PROC     9015--CALL     9126--CALL     9294--CALL
READ_EI_ALT IN PROCEDURE GET_NEXT_REC
      9188**LABEL    9015--CALLALT
READ_MODE
      5920**DCL      9341>>DOCASE   9351>>DOCASE   9361>>DOCASE
READ_REC IN PROCEDURE GET_NEXT_REC
      9015**LABEL    9250--GOTO
REC_SEL_IDX
      8514**DCL      9022>>DOCASE   9024>>IF       9027>>IF       9027>>IF       9032>>IF       9035>>IF
      9041>>IF       9045>>IF       9045>>IF       9053>>IF       9053>>IF       9059>>IF       9075<<ASSIGN
      9075>>ASSIGN   9076>>IF       9090>>DOCASE   9102>>ASSIGN   9102>>ASSIGN   9106>>ASSIGN   9106>>ASSIGN
      9135>>ASSIGN   9137>>ASSIGN   9166>>IF       9166>>IF       9172>>IF       9172>>IF       9172>>IF
      9172>>IF       9206>>IF       9206>>IF       9210>>IF       9210>>IF       9210>>IF       9210>>IF
      9258>>IF       9258>>IF       9432<<ASSIGN
RET_VAL
      8513**DCL      8919<>CALL     8920>>DOCASE
RET_VAL IN PROCEDURE GET_NEXT_REC
      9005**DCL      8986--PROC     9007<<ASSIGN   9086<<ASSIGN   9230<<ASSIGN   9243<<ASSIGN   9261<<ASSIGN
      9291<<ASSIGN   9300<<ASSIGN   9324<<ASSIGN
SEQ_READ
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:211  
      8515**DCL      9009>>IF       9034<<ASSIGN   9038<<ASSIGN   9050<<ASSIGN   9061<<ASSIGN   9070<<ASSIGN
      9140<<ASSIGN   9168<<ASSIGN   9175<<ASSIGN   9191<<ASSIGN   9260<<ASSIGN   9433<<ASSIGN
SET_UP_IN
      9395**PROC     8894--CALL
SPEC_BUF
      5226**DCL      5226--REDEF    8904--ASSIGN   8904--ASSIGN
SPEC_BUF.LEN
      5226**DCL      8905<<ASSIGN
STEP_ERR IN PROCEDURE GET_NEXT_REC
      9264**LABEL    9131--GOTO     9185--GOTO     9249--CALLALT
TEMP IN PROCEDURE SET_UP_IN
      9404**DCL      9410<<ASSIGN   9411<>CALL
TEXT$C
      8495**DCL      8904--ASSIGN   9106--ASSIGN   9172>>IF       9172>>IF
TEXT$C.LEN
      8496**DCL      8497--IMP-SIZ  8904>>ASSIGN   9032>>IF       9035>>IF       9041>>IF       9102>>ASSIGN
      9106>>ASSIGN   9172>>IF       9172>>IF
TEXT$C.STRING
      8497**DCL      9102--ASSIGN
TEXT$C_BIT.LEN
      8499**DCL      8501--IMP-SIZ  9027>>IF       9027>>IF       9045>>IF       9045>>IF       9053>>IF
      9053>>IF
TEXT$C_BIT.STRING
      8500**DCL      9027>>IF       9027>>IF       9045>>IF       9045>>IF       9053>>IF       9053>>IF
USE_CONT
      5218**DCL      8922<<ASSIGN   9012>>IF       9237>>IF       9240>>IF       9340>>ASSIGN   9421<<ASSIGN
VPD$ENLARGE_BUF
      8713**DCL-ENT  9239--CALL     9420--CALL
VPD$GET_SPEC_BUF
      8741**DCL-ENT  8903--CALL
VPE$BREAK_ON_READ_WRITE
      9478**ENTRY    8896--ASSIGN
VPE$FMT_ABORT
      8779**DCL-ENT  9490--CALL
VPF$CLOSE_IN
      8786**DCL-ENT  9267--CALL
PL6.E3A0      #003=VPE$READ_WRITE File=VPE$COPY.:E05TSI                          WED 07/30/97 07:27 Page:212  
VPG$WRITE_OUT
      8804**DCL-ENT  8923--CALL     8930--CALL     8950--CALL     8954--CALL
VPL$ERR_PROC
      8860**DCL-ENT  8945--CALL     9094--CALL     9157--CALL     9209--CALL     9215--CALL     9269--CALL
      9275--CALL     9306--CALL     9322--CALL
WRITE
      8962**PROC     8916--CALL
WRITE_MODE
      5921**DCL      8968>>DOCASE
XSA$PFIL IN PROCEDURE READ
      9336**DCL-ENT  9356--CALL
XSA$PRECORD IN PROCEDURE READ
      9338**DCL-ENT  9366--CALL
XSA$READ IN PROCEDURE READ
      9337**DCL-ENT  9346--CALL
XSA$WRITE IN PROCEDURE WRITE
      8966**DCL-ENT  8972--CALL
XSF$LOCCODE
      8677**DCL-ENT  9411--CALL
XSF_ALT IN PROCEDURE SET_UP_IN
      9415**LABEL    9411--CALLALT

PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:213  
     1085        1        /*T***********************************************************/
     1086        2        /*T*                                                         */
     1087        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1088        4        /*T*                                                         */
     1089        5        /*T***********************************************************/
     1090        6        VPE$FMT_ABORT: PROC (CODE,MID,DCBNM,FIELD2_);
     1091        7        /*I* NAME: VPE$FMT_ABORT
     1092        8             CALL: CALL VPE$FMT_ABORT(CODE,MID,DCBNM,FIELD2_);
     1093        9             DESCRIPTION: Formats the ABORT_BUF wit the message to report on
     1094       10             a BREAK.
     1095       11        */
     1096       12        %INCLUDE VP_DATA_R;
     1097     6999        %INCLUDE F$DCB;
     1098     7048        %VP_ENTRIES(OMIT=VPE$FMT_ABORT);
     1099     7256    1   DCL CODE SBIN WORD;
     1100     7257    1   DCL MID BIT(6);
     1101     7258    1   DCL DCBNM UBIN WORD;
     1102     7259    1   DCL FIELD2_ VECTOR;
     1103     7260    1   DCL CHAR8 CHAR(8);
     1104     7261    1   DCL I SBIN WORD;
     1105     7262    1   DCL CHAR9 CHAR(9);
     1106     7263    1   DCL CHAR9_ARY(0:8) REDEF CHAR9 CHAR(1);
     1107     7264    1   DCL MOP_EKEY(0:3) BIT(9) CONSTANT INIT(%MVC5,%SES10,%INSB7,%MVC3);
     1108     7265    1   DCL NIBS SBIN;
     1109     7266    1   DCL KEYLEN SBIN;
     1110     7267    1   DCL KEY$ PTR;
     1111     7268    1   DCL OCT$KEY$ARY(0:0) UBIN(3) UNAL BASED;
     1112     7269    1   DCL 1 ABORT_BUF STATIC,
     1113     7270    1         2 LEN UBIN BYTE UNAL,
     1114     7271    1         2 STRING CHAR(93),
     1115     7272    1         2 STR_ARY(0:92) REDEF STRING CHAR(1);
     1116     7273    1   DCL KEY_TOO_BIG BIT(1);
     1117     7274    1           KEY_TOO_BIG = %NO#;
     1118     7275    1           ABORT_BUF.STRING = ' ';
     1119     7276    1           ABORT_BUF.LEN = 0;
     1120     7277    1           IF CUR_SEQ_NO~=-1
     1121     7278    2            THEN DO;                       /* Output the rec seq no. Its known   */
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:214  
     1122     7279    2               CALL BINCHAR(CHAR9,CUR_SEQ_NO);
     1123     7280    2               CALL STUFF_CHAR9;
     1124     7281    2               IF NRECS_IN_COPY_FILE > 0
     1125     7282    3                THEN DO;
     1126     7283    3                   SUBSTR (ABORT_BUF.STRING, ABORT_BUF.LEN, 3) = ' of';
     1127     7284    3                   ABORT_BUF.LEN = ABORT_BUF.LEN + 3;
     1128     7285    3                   CALL BINCHAR (CHAR9, NRECS_IN_COPY_FILE);
     1129     7286    3                   CALL STUFF_CHAR9;
     1130     7287    3                   END;
     1131     7288    2               END;
     1132     7289    1           IF CUR_SEQ_NO~=0
     1133     7290    1             AND ICB.FLAVOR.KNOWKEY
     1134     7291    2            THEN DO;                       /* Output key. Its known.             */
     1135     7292    2               IF CUR_SEQ_NO~=-1
     1136     7293    3                THEN DO;
     1137     7294    3                   CALL INSERT(ABORT_BUF.STRING,ABORT_BUF.LEN,2,' -');
     1138     7295    3                   ABORT_BUF.LEN = ABORT_BUF.LEN+2;
     1139     7296    3                   END;
     1140     7297    2               IF M$EI$->F$DCB.ORG=%KEYED# AND EI_KEY.LEN=3 AND EI_KEY.EKEY.KEY<
              7297                        100000000
     1141     7298    3                THEN DO;                   /* Put out as an EDIT key             */
     1142     7299    3                   CALL BINCHAR(CHAR8,EI_KEY.EKEY.KEY);
     1143     7300    3                   CALL EDITCHAR(CHAR9,,,MOP_EKEY,CHAR8);
     1144     7301    3                   CALL STUFF_CHAR9;
     1145     7302    3                   END;
     1146     7303    3                ELSE DO;                   /* Put out as octal key               */
     1147     7304    3                   CALL INSERT(ABORT_BUF.STRING,ABORT_BUF.LEN,3,' O''');
     1148     7305    3                   ABORT_BUF.LEN = ABORT_BUF.LEN+3;
     1149     7306    3                   IF M$EI$->F$DCB.ORG=%KEYED#
     1150     7307    4                    THEN DO;
     1151     7308    4                       KEYLEN = EI_KEY.LEN;
     1152     7309    4                       KEY$ = ADDR(EI_KEY.KEY);
     1153     7310    4                       END;
     1154     7311    4                    ELSE DO;
     1155     7312    4                       KEYLEN = M$EI$->F$DCB.KEYL;
     1156     7313    4                       KEY$ = ADDR(EI_KEY);
     1157     7314    4                       END;
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:215  
     1158     7315    3                   IF 3*KEYLEN > 30-ABORT_BUF.LEN
     1159     7316    3                    THEN
     1160     7317    4                    DO;
     1161     7318    4                       NIBS=25-ABORT_BUF.LEN;
     1162     7319    4                       KEY_TOO_BIG = %YES#;
     1163     7320    4                       END;
     1164     7321    3                    ELSE
     1165     7322    3                      NIBS = KEYLEN*3-1;
     1166     7323    4                   DO I=0 TO NIBS;
     1167     7324    4                      CALL BINCHAR(ABORT_BUF.STR_ARY(ABORT_BUF.LEN+I),KEY$->OCT$KEY$ARY
              7324                               (I));
     1168     7325    4                      END;
     1169     7326    3                   ABORT_BUF.LEN = ABORT_BUF.LEN+NIBS+1;
     1170     7327    3                   IF KEY_TOO_BIG
     1171     7328    4                    THEN DO;
     1172     7329    4                       CALL INSERT(ABORT_BUF.STRING,ABORT_BUF.LEN,4,'...''');
     1173     7330    4                       ABORT_BUF.LEN = ABORT_BUF.LEN+4;
     1174     7331    4                       END;
     1175     7332    4                    ELSE DO;
     1176     7333    4                       ABORT_BUF.STR_ARY(ABORT_BUF.LEN) = '''';
     1177     7334    4                       ABORT_BUF.LEN = ABORT_BUF.LEN+1;
     1178     7335    4                       END;
     1179     7336    3                   END;
     1180     7337    2               END;
     1181     7338    1           IF ABORT_BUF.LEN>31
     1182     7339    1            THEN
     1183     7340    1              ABORT_BUF.LEN=31;            /* CHOP IT OFF SO M$ERRMSG SURVIVES   */
     1184     7341    1           CALL VPL$ERR_FETCH(1,CODE,MID,,VECTOR(ABORT_BUF),FIELD2_,DCBNM);
     1185     7342    1           RETURN;
     1186     7343        %EJECT;
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:216  
     1187     7344    1   STUFF_CHAR9: PROC;
     1188     7345        /*I* NAME: STUFF_CHAR9
     1189     7346             CALL: CALL STUFF_CHAR9;
     1190     7347             DESCRIPTION: Stuffs string found in CHAR9 with leading 0's stripped
     1191     7348             and preceeded with a single blank into ABORT_BUF. Also updates
     1192     7349             ABORT_BUF.LEN.
     1193     7350        */
     1194     7351    2           I=0;
     1195     7352    3           DO WHILE(CHAR9_ARY(I)='0' AND I<LENGTHC(CHAR9)-1);
     1196     7353    3              I=I+1;
     1197     7354    3              END;
     1198     7355    2           CALL INSERT(ABORT_BUF.STRING,ABORT_BUF.LEN,,' ',SUBSTR(CHAR9,I));
     1199     7356    2           ABORT_BUF.LEN = ABORT_BUF.LEN+1+LENGTHC(CHAR9)-I;
     1200     7357    2           RETURN;
     1201     7358    2   END STUFF_CHAR9;
     1202     7359    1   END VPE$FMT_ABORT;
     1203     7360        %EJECT;
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:217  

PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:218  
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPE$FMT_ABORT.

   Procedure VPE$FMT_ABORT requires 226 words for executable code.
   Procedure VPE$FMT_ABORT requires 28 words of local(AUTO) storage.

    No errors detected in file VPE$COPY.:E05TSI    .

PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:219  

 Object Unit name= VPE$FMT_ABORT                              File name= VPE$COPY.:E05TOU
 UTS= JUL 30 '97 07:28:46.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10  RoData even  UTS      5      5  VPE$FMT_ABORT
   11   Data  even  none    24     30  VPE$FMT_ABORT
   12   Proc  even  none   226    342  VPE$FMT_ABORT
   13  RoData even  none     9     11  VPE$FMT_ABORT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        4  VPE$FMT_ABORT
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:220  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       8 VPL$ERR_FETCH
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  BREAK_LOC                             BREAK_MESSAGE_REPORTER
     SPEC_BUF                              IN_RES                                ICB
     EI_KEY                                CUR_SEQ_NO                            NRECS_IN_COPY_FILE
     M$EI                                  M$EI$                                 M$EO
     M$EO1                                 M$ME                                  M$SI
     M$READFILE                            M$DO                                  M$STD1
     M$SORT1                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:221  


     1085        1        /*T***********************************************************/
     1086        2        /*T*                                                         */
     1087        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1088        4        /*T*                                                         */
     1089        5        /*T***********************************************************/
     1090        6        VPE$FMT_ABORT: PROC (CODE,MID,DCBNM,FIELD2_);

      6 12 000000   000000 700200 xent  VPE$FMT_ABO* TSX0  ! X66_AUTO_4
        12 000001   000034 000004                    ZERO    28,4

     1091        7        /*I* NAME: VPE$FMT_ABORT
     1092        8             CALL: CALL VPE$FMT_ABORT(CODE,MID,DCBNM,FIELD2_);
     1093        9             DESCRIPTION: Formats the ABORT_BUF wit the message to report on
     1094       10             a BREAK.
     1095       11        */
     1096       12        %INCLUDE VP_DATA_R;
     1097     6999        %INCLUDE F$DCB;
     1098     7048        %VP_ENTRIES(OMIT=VPE$FMT_ABORT);
     1099     7256    1   DCL CODE SBIN WORD;
     1100     7257    1   DCL MID BIT(6);
     1101     7258    1   DCL DCBNM UBIN WORD;
     1102     7259    1   DCL FIELD2_ VECTOR;
     1103     7260    1   DCL CHAR8 CHAR(8);
     1104     7261    1   DCL I SBIN WORD;
     1105     7262    1   DCL CHAR9 CHAR(9);
     1106     7263    1   DCL CHAR9_ARY(0:8) REDEF CHAR9 CHAR(1);
     1107     7264    1   DCL MOP_EKEY(0:3) BIT(9) CONSTANT INIT(%MVC5,%SES10,%INSB7,%MVC3);
     1108     7265    1   DCL NIBS SBIN;
     1109     7266    1   DCL KEYLEN SBIN;
     1110     7267    1   DCL KEY$ PTR;
     1111     7268    1   DCL OCT$KEY$ARY(0:0) UBIN(3) UNAL BASED;
     1112     7269    1   DCL 1 ABORT_BUF STATIC,
     1113     7270    1         2 LEN UBIN BYTE UNAL,
     1114     7271    1         2 STRING CHAR(93),
     1115     7272    1         2 STR_ARY(0:92) REDEF STRING CHAR(1);
     1116     7273    1   DCL KEY_TOO_BIG BIT(1);
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:222  
     1117     7274    1           KEY_TOO_BIG = %NO#;

   7274 12 000002   200020 450100                    STZ     KEY_TOO_BIG,,AUTO

     1118     7275    1           ABORT_BUF.STRING = ' ';

   7275 12 000003   040000 100400                    MLR     fill='040'O
        12 000004   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 000005   000000 200135 11                 ADSC9   ABORT_BUF                cn=1,n=93

     1119     7276    1           ABORT_BUF.LEN = 0;

   7276 12 000006   000000 236003                    LDQ     0,DU
        12 000007   000000 552040 11                 STBQ    ABORT_BUF,'40'O

     1120     7277    1           IF CUR_SEQ_NO~=-1

   7277 12 000010   000000 235000 xsym               LDA     CUR_SEQ_NO
        12 000011   000027 115000 xsym               CMPA    B_VECTNIL+23
        12 000012   000037 600000 12                 TZE     s:7289

     1121     7278    2            THEN DO;                       /* Output the rec seq no. Its known   */

     1122     7279    2               CALL BINCHAR(CHAR9,CUR_SEQ_NO);

   7279 12 000013   000100 301400                    BTD
        12 000014   000000 000004 xsym               NDSC9   CUR_SEQ_NO               cn=0,s=lsgnf,sf=0,n=4
        12 000015   200012 030011                    NDSC9   CHAR9,,AUTO              cn=0,s=nosgn,sf=0,n=9

     1123     7280    2               CALL STUFF_CHAR9;

   7280 12 000016   000274 701000 12                 TSX1    STUFF_CHAR9
        12 000017   000000 011000                    NOP     0

     1124     7281    2               IF NRECS_IN_COPY_FILE > 0

   7281 12 000020   000000 235000 xsym               LDA     NRECS_IN_COPY_FILE
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:223  
        12 000021   000037 604400 12                 TMOZ    s:7289

     1125     7282    3                THEN DO;

     1126     7283    3                   SUBSTR (ABORT_BUF.STRING, ABORT_BUF.LEN, 3) = ' of';

   7283 12 000022   000000 236000 11                 LDQ     ABORT_BUF
        12 000023   000033 772000                    QRL     27
        12 000024   040006 100400                    MLR     fill='040'O
        12 000025   000001 000003 10                 ADSC9   MOP_EKEY+1               cn=0,n=3
        12 000026   000000 200003 11                 ADSC9   ABORT_BUF,Q              cn=1,n=3

     1127     7284    3                   ABORT_BUF.LEN = ABORT_BUF.LEN + 3;

   7284 12 000027   000000 236000 11                 LDQ     ABORT_BUF
        12 000030   003000 036003                    ADLQ    1536,DU
        12 000031   000000 552040 11                 STBQ    ABORT_BUF,'40'O

     1128     7285    3                   CALL BINCHAR (CHAR9, NRECS_IN_COPY_FILE);

   7285 12 000032   000100 301400                    BTD
        12 000033   000000 000004 xsym               NDSC9   NRECS_IN_COPY_FILE       cn=0,s=lsgnf,sf=0,n=4
        12 000034   200012 030011                    NDSC9   CHAR9,,AUTO              cn=0,s=nosgn,sf=0,n=9

     1129     7286    3                   CALL STUFF_CHAR9;

   7286 12 000035   000274 701000 12                 TSX1    STUFF_CHAR9
        12 000036   000000 011000                    NOP     0

     1130     7287    3                   END;

     1131     7288    2               END;

     1132     7289    1           IF CUR_SEQ_NO~=0

   7289 12 000037   000000 235000 xsym               LDA     CUR_SEQ_NO
        12 000040   000246 600000 12                 TZE     s:7338
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:224  
        12 000041   000172 430000 xsym               FSZN    ICB+122
        12 000042   000246 605000 12                 TPL     s:7338

     1133     7290    1             AND ICB.FLAVOR.KNOWKEY
     1134     7291    2            THEN DO;                       /* Output key. Its known.             */

     1135     7292    2               IF CUR_SEQ_NO~=-1

   7292 12 000043   000027 115000 xsym               CMPA    B_VECTNIL+23
        12 000044   000055 600000 12                 TZE     s:7297

     1136     7293    3                THEN DO;

     1137     7294    3                   CALL INSERT(ABORT_BUF.STRING,ABORT_BUF.LEN,2,' -');

   7294 12 000045   000000 236000 11                 LDQ     ABORT_BUF
        12 000046   000033 772000                    QRL     27
        12 000047   040006 100400                    MLR     fill='040'O
        12 000050   000002 000002 10                 ADSC9   MOP_EKEY+2               cn=0,n=2
        12 000051   000000 200002 11                 ADSC9   ABORT_BUF,Q              cn=1,n=2

     1138     7295    3                   ABORT_BUF.LEN = ABORT_BUF.LEN+2;

   7295 12 000052   000000 236000 11                 LDQ     ABORT_BUF
        12 000053   002000 036003                    ADLQ    1024,DU
        12 000054   000000 552040 11                 STBQ    ABORT_BUF,'40'O

     1139     7296    3                   END;

     1140     7297    2               IF M$EI$->F$DCB.ORG=%KEYED# AND EI_KEY.LEN=3 AND EI_KEY.EKEY.KEY<
              7297                        100000000

   7297 12 000055   000000 470400 xsym               LDP0    M$EI$
        12 000056   000032 236100                    LDQ     26,,PR0
        12 000057   777000 376003                    ANQ     -512,DU
        12 000060   002000 116003                    CMPQ    1024,DU
        12 000061   000106 601000 12                 TNZ     s:7304
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:225  
        12 000062   000000 236000 xsym               LDQ     EI_KEY
        12 000063   777000 376003                    ANQ     -512,DU
        12 000064   003000 116003                    CMPQ    1536,DU
        12 000065   000106 601000 12                 TNZ     s:7304
        12 000066   000000 236000 xsym               LDQ     EI_KEY
        12 000067   000032 376000 xsym               ANQ     B_VECTNIL+26
        12 000070   000000 116000 13                 CMPQ    0
        12 000071   000106 603000 12                 TRC     s:7304

     1141     7298    3                THEN DO;                   /* Put out as an EDIT key             */

     1142     7299    3                   CALL BINCHAR(CHAR8,EI_KEY.EKEY.KEY);

   7299 12 000072   000000 235003                    LDA     0,DU
        12 000073   200024 757100                    STAQ    KEY_TOO_BIG+4,,AUTO
        12 000074   000100 301500                    BTD
        12 000075   200024 000010                    NDSC9   KEY_TOO_BIG+4,,AUTO      cn=0,s=lsgnf,sf=0,n=8
        12 000076   200007 030010                    NDSC9   CHAR8,,AUTO              cn=0,s=nosgn,sf=0,n=8

     1143     7300    3                   CALL EDITCHAR(CHAR9,,,MOP_EKEY,CHAR8);

   7300 12 000077   100000 024500                    MVNE
        12 000100   200007 030010                    NDSC9   CHAR8,,AUTO              cn=0,s=nosgn,sf=0,n=8
        12 000101   000000 000004 10                 ADSC9   MOP_EKEY                 cn=0,n=4
        12 000102   200012 000011                    ADSC9   CHAR9,,AUTO              cn=0,n=9

     1144     7301    3                   CALL STUFF_CHAR9;

   7301 12 000103   000274 701000 12                 TSX1    STUFF_CHAR9
        12 000104   000000 011000                    NOP     0

     1145     7302    3                   END;

   7302 12 000105   000246 710000 12                 TRA     s:7338

     1146     7303    3                ELSE DO;                   /* Put out as octal key               */

PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:226  
     1147     7304    3                   CALL INSERT(ABORT_BUF.STRING,ABORT_BUF.LEN,3,' O''');

   7304 12 000106   000000 236000 11                 LDQ     ABORT_BUF
        12 000107   000033 772000                    QRL     27
        12 000110   040006 100400                    MLR     fill='040'O
        12 000111   000003 000003 10                 ADSC9   MOP_EKEY+3               cn=0,n=3
        12 000112   000000 200003 11                 ADSC9   ABORT_BUF,Q              cn=1,n=3

     1148     7305    3                   ABORT_BUF.LEN = ABORT_BUF.LEN+3;

   7305 12 000113   000000 236000 11                 LDQ     ABORT_BUF
        12 000114   003000 036003                    ADLQ    1536,DU
        12 000115   000000 552040 11                 STBQ    ABORT_BUF,'40'O

     1149     7306    3                   IF M$EI$->F$DCB.ORG=%KEYED#

   7306 12 000116   000032 236100                    LDQ     26,,PR0
        12 000117   777000 376003                    ANQ     -512,DU
        12 000120   002000 116003                    CMPQ    1024,DU
        12 000121   000130 601000 12                 TNZ     s:7312

     1150     7307    4                    THEN DO;

     1151     7308    4                       KEYLEN = EI_KEY.LEN;

   7308 12 000122   000000 236000 xsym               LDQ     EI_KEY
        12 000123   000033 772000                    QRL     27
        12 000124   200016 756100                    STQ     KEYLEN,,AUTO

     1152     7309    4                       KEY$ = ADDR(EI_KEY.KEY);

   7309 12 000125   000001 236000 13                 LDQ     1
        12 000126   200017 756100                    STQ     KEY$,,AUTO

     1153     7310    4                       END;

   7310 12 000127   000136 710000 12                 TRA     s:7315
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:227  

     1154     7311    4                    ELSE DO;

     1155     7312    4                       KEYLEN = M$EI$->F$DCB.KEYL;

   7312 12 000130   000036 236100                    LDQ     30,,PR0
        12 000131   000011 772000                    QRL     9
        12 000132   000777 376007                    ANQ     511,DL
        12 000133   200016 756100                    STQ     KEYLEN,,AUTO

     1156     7313    4                       KEY$ = ADDR(EI_KEY);

   7313 12 000134   000002 236000 13                 LDQ     2
        12 000135   200017 756100                    STQ     KEY$,,AUTO

     1157     7314    4                       END;

     1158     7315    3                   IF 3*KEYLEN > 30-ABORT_BUF.LEN

   7315 12 000136   200016 236100                    LDQ     KEYLEN,,AUTO
        12 000137   000003 402007                    MPY     3,DL
        12 000140   200024 756100                    STQ     KEY_TOO_BIG+4,,AUTO
        12 000141   000000 236000 11                 LDQ     ABORT_BUF
        12 000142   000033 772000                    QRL     27
        12 000143   000027 676000 xsym               ERQ     B_VECTNIL+23
        12 000144   000037 036007                    ADLQ    31,DL
        12 000145   200024 116100                    CMPQ    KEY_TOO_BIG+4,,AUTO
        12 000146   000157 605000 12                 TPL     s:7322

     1159     7316    3                    THEN
     1160     7317    4                    DO;

     1161     7318    4                       NIBS=25-ABORT_BUF.LEN;

   7318 12 000147   000000 236000 11                 LDQ     ABORT_BUF
        12 000150   000033 772000                    QRL     27
        12 000151   000027 676000 xsym               ERQ     B_VECTNIL+23
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:228  
        12 000152   000032 036007                    ADLQ    26,DL
        12 000153   200015 756100                    STQ     NIBS,,AUTO

     1162     7319    4                       KEY_TOO_BIG = %YES#;

   7319 12 000154   400000 236003                    LDQ     -131072,DU
        12 000155   200020 756100                    STQ     KEY_TOO_BIG,,AUTO

     1163     7320    4                       END;

   7320 12 000156   000163 710000 12                 TRA     s:7323

     1164     7321    3                    ELSE
     1165     7322    3                      NIBS = KEYLEN*3-1;

   7322 12 000157   200016 236100                    LDQ     KEYLEN,,AUTO
        12 000160   000003 402007                    MPY     3,DL
        12 000161   000001 136007                    SBLQ    1,DL
        12 000162   200015 756100                    STQ     NIBS,,AUTO

     1166     7323    4                   DO I=0 TO NIBS;

   7323 12 000163   200011 450100                    STZ     I,,AUTO
        12 000164   000212 710000 12                 TRA     s:7325+1

     1167     7324    4                     CALL BINCHAR(ABORT_BUF.STR_ARY(ABORT_BUF.LEN+I),KEY$->OCT$KEY$ARY
              7324                               (I));

   7324 12 000165   000000 236000 11                 LDQ     ABORT_BUF
        12 000166   000033 772000                    QRL     27
        12 000167   200011 036100                    ADLQ    I,,AUTO
        12 000170   200025 756100                    STQ     KEY_TOO_BIG+5,,AUTO
        12 000171   200011 236100                    LDQ     I,,AUTO
        12 000172   000003 402007                    MPY     3,DL
        12 000173   000000 116003                    CMPQ    0,DU
        12 000174   000176 605000 12                 TPL     s:7324+9
        12 000175   000044 036003                    ADLQ    36,DU
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:229  
        12 000176   200017 470500                    LDP0    KEY$,,AUTO
        12 000177   003100 061506                    CSR     bolr='003'O
        12 000200   000000 000003                    BDSC    0,Q,PR0                  by=0,bit=0,n=3
        12 000201   200024 000044                    BDSC    KEY_TOO_BIG+4,,AUTO      by=0,bit=0,n=36
        12 000202   200024 236100                    LDQ     KEY_TOO_BIG+4,,AUTO
        12 000203   000000 235003                    LDA     0,DU
        12 000204   200026 757100                    STAQ    KEY_TOO_BIG+6,,AUTO
        12 000205   200025 235100                    LDA     KEY_TOO_BIG+5,,AUTO
        12 000206   000005 301500                    BTD
        12 000207   200026 000010                    NDSC9   KEY_TOO_BIG+6,,AUTO      cn=0,s=lsgnf,sf=0,n=8
        12 000210   000000 230001 11                 NDSC9   ABORT_BUF,A              cn=1,s=nosgn,sf=0,n=1

     1168     7325    4                      END;

   7325 12 000211   200011 054100                    AOS     I,,AUTO
        12 000212   200011 236100                    LDQ     I,,AUTO
        12 000213   200015 116100                    CMPQ    NIBS,,AUTO
        12 000214   000165 604400 12                 TMOZ    s:7324

     1169     7326    3                   ABORT_BUF.LEN = ABORT_BUF.LEN+NIBS+1;

   7326 12 000215   000000 236000 11                 LDQ     ABORT_BUF
        12 000216   000033 772000                    QRL     27
        12 000217   200015 036100                    ADLQ    NIBS,,AUTO
        12 000220   000001 036007                    ADLQ    1,DL
        12 000221   000033 736000                    QLS     27
        12 000222   000000 552040 11                 STBQ    ABORT_BUF,'40'O

     1170     7327    3                   IF KEY_TOO_BIG

   7327 12 000223   200020 234100                    SZN     KEY_TOO_BIG,,AUTO
        12 000224   000236 605000 12                 TPL     s:7333

     1171     7328    4                    THEN DO;

     1172     7329    4                       CALL INSERT(ABORT_BUF.STRING,ABORT_BUF.LEN,4,'...''');

PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:230  
   7329 12 000225   000000 236000 11                 LDQ     ABORT_BUF
        12 000226   000033 772000                    QRL     27
        12 000227   040006 100400                    MLR     fill='040'O
        12 000230   000004 000004 10                 ADSC9   MOP_EKEY+4               cn=0,n=4
        12 000231   000000 200004 11                 ADSC9   ABORT_BUF,Q              cn=1,n=4

     1173     7330    4                       ABORT_BUF.LEN = ABORT_BUF.LEN+4;

   7330 12 000232   000000 236000 11                 LDQ     ABORT_BUF
        12 000233   004000 036003                    ADLQ    2048,DU
        12 000234   000000 552040 11                 STBQ    ABORT_BUF,'40'O

     1174     7331    4                       END;

   7331 12 000235   000246 710000 12                 TRA     s:7338

     1175     7332    4                    ELSE DO;

     1176     7333    4                       ABORT_BUF.STR_ARY(ABORT_BUF.LEN) = '''';

   7333 12 000236   000000 236000 11                 LDQ     ABORT_BUF
        12 000237   000033 772000                    QRL     27
        12 000240   040006 100400                    MLR     fill='040'O
        12 000241   000003 000001 13                 ADSC9   3                        cn=0,n=1
        12 000242   000000 200001 11                 ADSC9   ABORT_BUF,Q              cn=1,n=1

     1177     7334    4                       ABORT_BUF.LEN = ABORT_BUF.LEN+1;

   7334 12 000243   000000 236000 11                 LDQ     ABORT_BUF
        12 000244   001000 036003                    ADLQ    512,DU
        12 000245   000000 552040 11                 STBQ    ABORT_BUF,'40'O

     1178     7335    4                       END;

     1179     7336    3                   END;

     1180     7337    2               END;
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:231  

     1181     7338    1           IF ABORT_BUF.LEN>31

   7338 12 000246   000000 236000 11                 LDQ     ABORT_BUF
        12 000247   777000 376003                    ANQ     -512,DU
        12 000250   040000 116003                    CMPQ    16384,DU
        12 000251   000254 602000 12                 TNC     s:7341

     1182     7339    1            THEN
     1183     7340    1              ABORT_BUF.LEN=31;            /* CHOP IT OFF SO M$ERRMSG SURVIVES   */

   7340 12 000252   037000 236003                    LDQ     15872,DU
        12 000253   000000 552040 11                 STBQ    ABORT_BUF,'40'O

     1184     7341    1           CALL VPL$ERR_FETCH(1,CODE,MID,,VECTOR(ABORT_BUF),FIELD2_,DCBNM);

   7341 12 000254   200005 236100                    LDQ     @DCBNM,,AUTO
        12 000255   200032 756100                    STQ     KEY_TOO_BIG+10,,AUTO
        12 000256   200006 236100                    LDQ     @FIELD2_,,AUTO
        12 000257   000006 235000 13                 LDA     6
        12 000260   200030 757100                    STAQ    KEY_TOO_BIG+8,,AUTO
        12 000261   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000262   200004 235100                    LDA     @MID,,AUTO
        12 000263   200026 757100                    STAQ    KEY_TOO_BIG+6,,AUTO
        12 000264   200003 236100                    LDQ     @CODE,,AUTO
        12 000265   000007 235000 13                 LDA     7
        12 000266   200024 757100                    STAQ    KEY_TOO_BIG+4,,AUTO
        12 000267   200024 630500                    EPPR0   KEY_TOO_BIG+4,,AUTO
        12 000270   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 000271   000000 701000 xent               TSX1    VPL$ERR_FETCH
        12 000272   000000 011000                    NOP     0

     1185     7342    1           RETURN;

   7342 12 000273   000000 702200 xent               TSX2  ! X66_ARET

     1186     7343        %EJECT;
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:232  
     1187     7344    1   STUFF_CHAR9: PROC;

   7344 12 000274   200022 741300       STUFF_CHAR9  STX1  ! KEY_TOO_BIG+2,,AUTO

     1188     7345        /*I* NAME: STUFF_CHAR9
     1189     7346             CALL: CALL STUFF_CHAR9;
     1190     7347             DESCRIPTION: Stuffs string found in CHAR9 with leading 0's stripped
     1191     7348             and preceeded with a single blank into ABORT_BUF. Also updates
     1192     7349             ABORT_BUF.LEN.
     1193     7350        */
     1194     7351    2           I=0;

   7351 12 000275   200011 450100                    STZ     I,,AUTO

     1195     7352    3           DO WHILE(CHAR9_ARY(I)='0' AND I<LENGTHC(CHAR9)-1);

   7352 12 000276   000300 710000 12                 TRA     s:7354

     1196     7353    3              I=I+1;

   7353 12 000277   200011 054100                    AOS     I,,AUTO

     1197     7354    3              END;

   7354 12 000300   200011 235100                    LDA     I,,AUTO
        12 000301   040000 106505                    CMPC    fill='040'O
        12 000302   200012 000001                    ADSC9   CHAR9,A,AUTO             cn=0,n=1
        12 000303   000010 000001 13                 ADSC9   8                        cn=0,n=1
        12 000304   000307 601000 12                 TNZ     s:7355
        12 000305   000010 115007                    CMPA    8,DL
        12 000306   000277 604000 12                 TMI     s:7353

     1198     7355    2           CALL INSERT(ABORT_BUF.STRING,ABORT_BUF.LEN,,' ',SUBSTR(CHAR9,I));

   7355 12 000307   000000 236000 11                 LDQ     ABORT_BUF
        12 000310   000033 772000                    QRL     27
        12 000311   777642 620006                    EAX0    -94,QL
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:233  
        12 000312   777777 660003                    ERX0    -1,DU
        12 000313   040046 100400                    MLR     fill='040'O
        12 000314   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 000315   000000 200010 11                 ADSC9   ABORT_BUF,Q              cn=1,n=*X0
        12 000316   200024 756100                    STQ     KEY_TOO_BIG+4,,AUTO
        12 000317   000000 636010                    EAQ     0,X0
        12 000320   000022 772000                    QRL     18
        12 000321   000002 116007                    CMPQ    2,DL
        12 000322   000332 602000 12                 TNC     s:7356
        12 000323   777766 621005                    EAX1    -10,AL
        12 000324   777777 661003                    ERX1    -1,DU
        12 000325   777777 622010                    EAX2    -1,X0
        12 000326   200024 236100                    LDQ     KEY_TOO_BIG+4,,AUTO
        12 000327   040046 100545                    MLR     fill='040'O
        12 000330   200012 000011                    ADSC9   CHAR9,A,AUTO             cn=0,n=*X1
        12 000331   000000 400012 11                 ADSC9   ABORT_BUF,Q              cn=2,n=*X2

     1199     7356    2           ABORT_BUF.LEN = ABORT_BUF.LEN+1+LENGTHC(CHAR9)-I;

   7356 12 000332   000000 236000 11                 LDQ     ABORT_BUF
        12 000333   000033 772000                    QRL     27
        12 000334   200011 136100                    SBLQ    I,,AUTO
        12 000335   000012 036007                    ADLQ    10,DL
        12 000336   000033 736000                    QLS     27
        12 000337   000000 552040 11                 STBQ    ABORT_BUF,'40'O

     1200     7357    2           RETURN;

   7357 12 000340   200022 221300                    LDX1  ! KEY_TOO_BIG+2,,AUTO
        12 000341   000001 702211                    TSX2  ! 1,X1
     1201     7358    2   END STUFF_CHAR9;
     1202     7359    1   END VPE$FMT_ABORT;
     1203     7360        %EJECT;
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:234  

PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:235  
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPE$FMT_ABORT.
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:236  

 **** Variables and constants ****

  ****  Section 010 RoData VPE$FMT_ABORT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT (9)     r     1 MOP_EKEY(0:3)

  ****  Section 011  Data  VPE$FMT_ABORT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(846)   r     1 ABORT_BUF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CODE                      5-0-0/w PTR         r     1 @DCBNM
     6-0-0/w PTR         r     1 @FIELD2_                   4-0-0/w PTR         r     1 @MID
     7-0-0/c CHAR(8)     r     1 CHAR8                     12-0-0/c CHAR(9)     r     1 CHAR9
    12-0-0/c CHAR        r     1 CHAR9_ARY(0:8)
    *0-0-0/w SBIN        r     1 CODE                      *0-0-0/w UBIN        r     1 DCBNM
    *0-0-0/d VECT        r     1 FIELD2_                   11-0-0/w SBIN        r     1 I
    17-0-0/w PTR         r     1 KEY$                      16-0-0/w SBIN        r     1 KEYLEN
    20-0-0/b BIT         r     1 KEY_TOO_BIG               *0-0-0/b BIT (6)     r     1 MID
    15-0-0/w SBIN        r     1 NIBS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:237  
     0-0-0/w SBIN        r     1 CUR_SEQ_NO                 0-0-0/c STRC(4608)  r     1 EI_KEY
     0-0-0/d STRC(5868)  r     1 ICB                        0-0-0/w PTR         r     1 M$EI$
     0-0-0/w SBIN        r     1 NRECS_IN_COPY_FILE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/b UBIN(3)     r     1 OCT$KEY$ARY(0:0)


   Procedure VPE$FMT_ABORT requires 226 words for executable code.
   Procedure VPE$FMT_ABORT requires 28 words of local(AUTO) storage.

    No errors detected in file VPE$COPY.:E05TSI    .
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:238  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:239  
          MINI XREF LISTING

ABORT_BUF
      7269**DCL      7341--CALL
ABORT_BUF.LEN
      7270**DCL      7276<<ASSIGN   7283>>ASSIGN   7284<<ASSIGN   7284>>ASSIGN   7294>>CALLBLT  7295<<ASSIGN
      7295>>ASSIGN   7304>>CALLBLT  7305<<ASSIGN   7305>>ASSIGN   7315>>IF       7318>>ASSIGN   7324>>CALLBLT
      7326<<ASSIGN   7326>>ASSIGN   7329>>CALLBLT  7330<<ASSIGN   7330>>ASSIGN   7333>>ASSIGN   7334<<ASSIGN
      7334>>ASSIGN   7338>>IF       7340<<ASSIGN   7355>>CALLBLT  7356<<ASSIGN   7356>>ASSIGN
ABORT_BUF.STRING
      7271**DCL      7272--REDEF    7275<<ASSIGN   7283<<ASSIGN   7294<<CALLBLT  7304<<CALLBLT  7329<<CALLBLT
      7355<<CALLBLT
ABORT_BUF.STR_ARY
      7272**DCL      7324<<CALLBLT  7333<<ASSIGN
BREAK_LOC
      5219**DCL      5219--REDEF
CHAR8
      7260**DCL      7299<<CALLBLT  7300>>CALLBLT
CHAR9
      7262**DCL      7263--REDEF    7279<<CALLBLT  7285<<CALLBLT  7300<<CALLBLT  7352--DOWHILE  7355>>CALLBLT
      7356--ASSIGN
CHAR9_ARY
      7263**DCL      7352>>DOWHILE
CODE
      7256**DCL         6--PROC     7341<>CALL
CUR_SEQ_NO
      5916**DCL      7277>>IF       7279>>CALLBLT  7289>>IF       7292>>IF
DCBNM
      7258**DCL         6--PROC     7341<>CALL
DEF_ICB.FID.STRING
      5817**DCL      5818--REDEF
DEV_ICB.FID.STRING
      5703**DCL      5704--REDEF
EI_KEY
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:240  
      5914**DCL      7313--ASSIGN
EI_KEY.EKEY.KEY
      5916**DCL      7297>>IF       7299>>CALLBLT
EI_KEY.KEY
      5915**DCL      5915--REDEF    5915--REDEF    5915--REDEF    7309--ASSIGN
EI_KEY.LEN
      5915**DCL      7297>>IF       7308>>ASSIGN
EO_OCB.TYPE
      5415**DCL      5416--REDEF
F$DCB.ACTPOS
      7025**DCL      7025--REDEF
F$DCB.ARS
      7000**DCL      7000--REDEF
F$DCB.ATTR
      7018**DCL      7019--REDEF
F$DCB.BORROW
      7033**DCL      7033--REDEF    7033--REDEF    7033--REDEF
F$DCB.DCBNAME.L
      7047**DCL      7047--IMP-SIZ
F$DCB.EOMCHAR
      7004**DCL      7004--REDEF
F$DCB.FLDID
      7028**DCL      7028--REDEF
F$DCB.FORM$
      7022**DCL      7022--REDEF
F$DCB.FSECT
      7038**DCL      7038--REDEF
F$DCB.FSN
      7015**DCL      7015--REDEF    7015--REDEF    7016--REDEF
F$DCB.HEADER$
      7021**DCL      7021--REDEF
F$DCB.IXTNSIZE
      7019**DCL      7019--REDEF
F$DCB.KEYL
      7017**DCL      7312>>ASSIGN
F$DCB.LASTSTA$
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:241  
      7009**DCL      7009--REDEF
F$DCB.LVL
      7034**DCL      7034--REDEF
F$DCB.NAME.C
      7009**DCL      7009--REDEF
F$DCB.NOEOF
      7030**DCL      7030--REDEF
F$DCB.NRECS
      7020**DCL      7020--REDEF
F$DCB.NRECX
      7039**DCL      7039--REDEF
F$DCB.OHDR
      7031**DCL      7031--REDEF
F$DCB.ORG
      7014**DCL      7014--REDEF    7297>>IF       7306>>IF
F$DCB.PRECNO
      7037**DCL      7037--REDEF
F$DCB.RCSZ
      7042**DCL      7042--REDEF
F$DCB.RES
      7010**DCL      7010--REDEF
F$DCB.SETX
      7022**DCL      7022--REDEF
F$DCB.TAB$
      7021**DCL      7022--REDEF
F$DCB.TDA
      7036**DCL      7036--REDEF
F$DCB.WSN
      7011**DCL      7011--REDEF
FIELD2_
      7259**DCL         6--PROC     7341<>CALL
FPT_CLOSE_EI.SN_
      6756**DCL      6756--REDEF
FPT_CLOSE_EI.UTL_
      6757**DCL      6757--REDEF
FPT_CLOSE_EI.V.EXPIRE#
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:242  
      6771**DCL      6771--REDEF
FPT_CLOSE_EI.V.TYPE#
      6769**DCL      6769--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6766**DCL      6766--REDEF    6768--REDEF
FPT_CLOSE_PTL.SN_
      6882**DCL      6882--REDEF
FPT_CLOSE_PTL.UTL_
      6883**DCL      6883--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6897**DCL      6897--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6895**DCL      6895--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6892**DCL      6892--REDEF    6894--REDEF
FPT_CLOSE_READ.SN_
      6798**DCL      6798--REDEF
FPT_CLOSE_READ.UTL_
      6799**DCL      6799--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6813**DCL      6813--REDEF
FPT_CLOSE_READ.V.TYPE#
      6811**DCL      6811--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6808**DCL      6808--REDEF    6810--REDEF
FPT_CLOSE_SI.SN_
      6966**DCL      6966--REDEF
FPT_CLOSE_SI.UTL_
      6967**DCL      6967--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      6981**DCL      6981--REDEF
FPT_CLOSE_SI.V.TYPE#
      6979**DCL      6979--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      6976**DCL      6976--REDEF    6978--REDEF
FPT_CLOSE_STD.SN_
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:243  
      6924**DCL      6924--REDEF
FPT_CLOSE_STD.UTL_
      6925**DCL      6925--REDEF
FPT_CLOSE_STD.V.EXPIRE#
      6939**DCL      6939--REDEF
FPT_CLOSE_STD.V.TYPE#
      6937**DCL      6937--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6934**DCL      6934--REDEF    6936--REDEF
FPT_CLSEI_FT.SN_
      6840**DCL      6840--REDEF
FPT_CLSEI_FT.UTL_
      6841**DCL      6841--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6855**DCL      6855--REDEF
FPT_CLSEI_FT.V.TYPE#
      6853**DCL      6853--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6850**DCL      6850--REDEF    6852--REDEF
FPT_OPEN_EI.ACSVEH_
      6411**DCL      6412--REDEF
FPT_OPEN_EI.ALTKEYS_
      6417**DCL      6418--REDEF    6418--REDEF
FPT_OPEN_EI.HDR_
      6416**DCL      6417--REDEF
FPT_OPEN_EI.TAB_
      6415**DCL      6416--REDEF
FPT_OPEN_EI.UHL_
      6409**DCL      6410--REDEF    6410--REDEF
FPT_OPEN_EI.V.FSN#
      6449**DCL      6449--REDEF    6449--REDEF
FPT_OPEN_EI.WSN_
      6415**DCL      6415--REDEF
FPT_OPEN_EI_SAVE.ACSVEH_
      6520**DCL      6521--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:244  
      6526**DCL      6527--REDEF    6527--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6525**DCL      6526--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6524**DCL      6525--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6518**DCL      6519--REDEF    6519--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6558**DCL      6558--REDEF    6558--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6524**DCL      6524--REDEF
FPT_OPEN_OUT.ACSVEH_
      6302**DCL      6303--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6308**DCL      6309--REDEF    6309--REDEF
FPT_OPEN_OUT.HDR_
      6307**DCL      6308--REDEF
FPT_OPEN_OUT.TAB_
      6306**DCL      6307--REDEF
FPT_OPEN_OUT.UHL_
      6300**DCL      6301--REDEF    6301--REDEF
FPT_OPEN_OUT.V.FSN#
      6340**DCL      6340--REDEF    6340--REDEF
FPT_OPEN_OUT.WSN_
      6306**DCL      6306--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6193**DCL      6194--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6199**DCL      6200--REDEF    6200--REDEF
FPT_OPEN_OUT_SAVE.HDR_
      6198**DCL      6199--REDEF
FPT_OPEN_OUT_SAVE.TAB_
      6197**DCL      6198--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6191**DCL      6192--REDEF    6192--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:245  
      6231**DCL      6231--REDEF    6231--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6197**DCL      6197--REDEF
FPT_READ_STD.STATION_
      6621**DCL      6622--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6633**DCL      6633--REDEF
FPT_READ_STD.V.INDX#
      6631**DCL      6631--REDEF
FPT_READ_UC.STATION_
      6582**DCL      6583--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6594**DCL      6594--REDEF
FPT_READ_UC.V.INDX#
      6592**DCL      6592--REDEF
FPT_WRITE_ME.STATION_
      6690**DCL      6690--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6697**DCL      6697--REDEF
FPT_WRITE_OUT.STATION_
      6721**DCL      6721--REDEF
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6728**DCL      6728--REDEF
FPT_WRITE_UC.STATION_
      6659**DCL      6659--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6666**DCL      6666--REDEF
FROM_SN.SN
      5565**DCL      5566--REDEF
GETCMD.OUT$
      4772**DCL      4778--REDEF
I
      7261**DCL      7323<<DOINDEX  7324>>CALLBLT  7324>>CALLBLT  7351<<ASSIGN   7352>>DOWHILE  7352>>DOWHILE
      7353<<ASSIGN   7353>>ASSIGN   7355>>CALLBLT  7356>>ASSIGN
ICB.FID.STRING
      5589**DCL      5590--REDEF
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:246  
ICB.FLAVOR.KNOWKEY
      5648**DCL      7289>>IF
IFSFA_PARAM.EOMCHAR#
      5944**DCL      5945--REDEF
IFSFA_PARAM.SIG1
      5938**DCL      5938--REDEF
IFSFA_PARAM.SIG2
      5938**DCL      5939--REDEF
IN_RES
      5511**DCL      5511--REDEF
IN_SN.SN
      5527**DCL      5528--REDEF
KEY$
      7267**DCL      7309<<ASSIGN   7313<<ASSIGN   7324>>CALLBLT
KEYLEN
      7266**DCL      7308<<ASSIGN   7312<<ASSIGN   7315>>IF       7322>>ASSIGN
KEY_TOO_BIG
      7273**DCL      7274<<ASSIGN   7319<<ASSIGN   7327>>IF
M$EI$
      5980**DCL      7297>>IF       7306>>IF       7312>>ASSIGN
MID
      7257**DCL         6--PROC     7341<>CALL
MOP_EKEY
      7264**DCL      7300>>CALLBLT
NIBS
      7265**DCL      7318<<ASSIGN   7322<<ASSIGN   7323>>DOINDEX  7326>>ASSIGN
NRECS_IN_COPY_FILE
      5917**DCL      7281>>IF       7285>>CALLBLT
OCB.TYPE
      5273**DCL      5274--REDEF
OCT$KEY$ARY
      7268**DCL      7324>>CALLBLT
OFSFA_PARAM.EOMCHAR#
      5974**DCL      5975--REDEF
OFSFA_PARAM.SIG1
      5968**DCL      5968--REDEF
PL6.E3A0      #004=VPE$FMT_ABORT File=VPE$COPY.:E05TSI                           WED 07/30/97 07:28 Page:247  
OFSFA_PARAM.SIG2
      5968**DCL      5969--REDEF
OUT_SN.SN
      5545**DCL      5546--REDEF
SPEC_BUF
      5223**DCL      5223--REDEF
STUFF_CHAR9
      7344**PROC     7280--CALL     7286--CALL     7301--CALL
VPL$ERR_FETCH
      7228**DCL-ENT  7341--CALL
