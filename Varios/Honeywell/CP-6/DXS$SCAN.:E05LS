VERSION E05

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:1    
        1        1        /*M* DDS$SCAN DELTA COMMAND SCANNER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*P* NAME: DDS$SCAN
       10       10             PURPOSE: TO READ, SCAN, & ENCODE INPUT COMMANDS TO DELTA.
       11       11             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       12       12             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       13       13             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
       14       14             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       15       15             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       16       16             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       17       17             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0. */
       18       18        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:2    
       19       19        /*F* NAME: DDS$SCAN
       20       20             PURPOSE: TO READ, SCAN, & ENCODE INPUT COMMANDS TO DELTA.
       21       21             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       22       22             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       23       23             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
       24       24             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       25       25             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       26       26             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       27       27             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0. */
       28       28        /*D* NAME: DDS$SCAN
       29       29             CALL: CALL DDS$SCAN;
       30       30             INTERFACE: X$PARSE
       31       31                        DDA$KILL1
       32       32                        DDS$PROMPT
       33       33                        DDS$PROMPTC
       34       34                        DDE$ERROR
       35       35                        DDD$BUMP_D$
       36       36                        DDS$DECIMAL
       37       37                        DDS$STOREDA
       38       38                        DDS$ATTDIRA
       39       39                        DDS$SET_C2D
       40       40                        DDS$SET_D2Q
       41       41                        DDS$SET_Q2D
       42       42                        DDS$VREFCOM
       43       43                        DDS$CNSNT
       44       44                        DUA$RUM_COMM;
       45       45                        D_DCMDS
       46       46             ENVIRONMENT: XDELTA OR USER DELTA.
       47       47             INPUT: IMPLICIT REQUEST FOR DIRECT COMMAND.
       48       48             OUTPUT: DIRECT COMMAND BUILT IN DIRECT COMMAND BUFFER.
       49       49                     STORED COMMANDS ADDED TO STORED OMMAND BUFFERS ALONG
       50       50                     THE WAY.
       51       51             SCRATCH: DDS$PROMPT PLAYS WITH THE INPUT BUFFER.
       52       52                      LOCAL AUTO.
       53       53             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       54       54             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       55       55             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:3    
       56       56             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       57       57             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       58       58             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       59       59             ALTRETS ONLY IF ENTERED AT DDS$SCAN1 & COMMAND
       60       60             COULD NOT BE BUILT. */
       61       61                                                /**/
       62       62        DDS$SCAN: PROC ALTRET;
       63       63                                                /**/
       64       64        %INCLUDE DD_SUBS_C;                     /* %SUBS */
       65      335        %INCLUDE B$JIT;
       66      625    1   DCL B$JIT$ PTR SYMREF;
       67      626        %INCLUDE XU_MACRO_C;                    /* X$PARSE MACROS */
       68     3732        %INCLUDE XU_SUBS_C;                     /* X$PARSE %SUBs */
       69     3824        %INCLUDE DD_ERR_C;                      /* ERROR CODE %SUBS */
       70     4221        %INCLUDE XU_PERR_C;                     /* X$PARSE ERROR CODES */
       71     4412        %INCLUDE DD_PSUBS_C;                    /* SYNTAX TREE %SUBS */
       72     4887        %INCLUDE B$OBJECT_C;                    /* OBJECT LANGUAGE TEMPLATES */
       73     8317        %SUB FIXCOMSIZE="(SIZEW(S_D.FIXCOM)/SIZEW(S_D.FIXCOM(0)))-1";
       74     8318        %P$PCB (NAME=PCB,STCLASS=AUTO);
       75     8519    1   DCL U$$ EPTR CONSTANT INIT( ENTADDR( DDS$SUCCESS ) );
       76     8520    1   DCL TEMPID SBIN;                        /* TEMPORARY CMD ID */
       77     8521    1   DCL NC$ PTR;                            /* CURRENT NODE PTR */
       78     8522    1   DCL NCC$ PTR;                           /* ANOTHER NODE POINTER */
       79     8523    1   DCL NCMD$ PTR;                          /* CURRENT COMMAND NODE PTR */
       80     8524    1   DCL IX SBIN;                            /* COMMAND LOOP INDEX */
       81     8525    1   DCL TEMPCODE SBIN;                      /* TEMP FOR COMMAND CODE */
       82     8526    1   DCL MAERR SBIN;                         /* MACTIVE ERROR CODE */
       83     8527    1   DCL MAERR$ PTR;                         /* MACTIVE ERROR SYMBOL */
       84     8528    1   DCL 1 MAERRTEXTC,                       /* MACTIVE ERROR SYMBOL */
       85     8529    1         2 SIZE UBIN BYTE UNAL,
       86     8530    1         2 TEXT CHAR(63) UNAL;             /* DON'T WORRY ABOUT TRUNCATION */
       87     8531    1   DCL MACHAR UBIN;                        /* MACTIVE ERROR HI_CHAR */
       88     8532    1   DCL LASTBLT$ PTR;                       /* =S_D.LASTBLT$, USED AS IMPLIED PTR */
       89     8533    1   DCL SCAN1 BIT(1) ALIGNED;               /* HOW ENTERED FLAG */
       90     8534    1   DCL SCAN2 BIT(1) ALIGNED;               /* Another how entered flag */
       91     8535    1   DCL TRAIL_SEMI BIT(1) ALIGNED;
       92     8536    1   DCL SEMI_OFFSET UBIN;              /* OFFSET TO SEMI_COLON IN PARSED TEXT */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:4    
       93     8537    1   DCL ATT_SIZE UBIN;
       94     8538    1   DCL ATTEXT$ PTR;
       95     8539    1   DCL CHAR$ATT CHAR(ATT_SIZE) BASED;
       96     8540    1   DCL VCPOS UBIN;                    /* CPOS of VREF for WHEN so SHOW will work */
       97     8541        %INCLUDE DD$DITEM;                      /* DATA DESCRIPTOR STUFF */
       12+    8644             %LIST;
       13+    8645    1        DCL SDD$ PTR;
       14+    8646    1        DCL ZITEM$ PTR;
       15+    8647    1        DCL SDD_L6$ PTR;
       16+    8648    1        DCL ZITEM_L6$ PTR;
       98     9222        %ZITEM;
       99     9294        %B$TREE_TABLE (HDR_NAME=B$TREEHDR,NODE_NAME="B$NODE(0:0)");
      100     9352        %PARSE$OUT (NAME=POB,STCLASS=BASED,NSUBLKS=NSB);
      101     9397        %INCLUDE DD$BASED;                      /* BASED STRUCTURES */
      102    10700        %AT_FIRST;
      103    10728        %ALL_ATTACH;
      104    10743        %TEXT$C;
      105    10748        %IF$CONST;
      106    10786        %FPRG$CONTEXT;
      107    10849        %INCLUDE XUH_MACRO_C;
      108    10933        %INCLUDE DD_SD_M;                       /* "STATIC" DATA */
      109    12269        %S_D;
      110    13587        %S_D_PTRS;
      111    13624        %P_PCB (STCLASS=CONSTANT,C=YES,C_LD=' "',C_TL=' "',CNTU=NO);
      112    13823    1   DCL ATREEA(0:3) UBIN BYTE UNAL CONSTANT INIT( 57, /* C_STEP */
      113    13824    1                                   8, /* C_EVAL */
      114    13825    1                                 28, /* C_MODIFY */
      115    13826    1                              29 ); /* C_MACTIVE */
      116    13827    1   DCL ATREET REDEF ATREEA CHAR(4);
      117    13828    1   DCL SKILLA(0:3) UBIN BYTE UNAL CONSTANT INIT( 30, /* C_OA */
      118    13829    1                                     32, /* C_OE */
      119    13830    1                                53, /* C_ONCALLS */
      120    13831    1                              54 ); /* C_ONNODES */
      121    13832    1   DCL SKILLT REDEF SKILLA CHAR(4);
      122    13833    1   DCL PARSE$ PTR SYMREF;                  /* X$PARSE WORK BUFFER */
      123    13834    1   DCL D_DCMDS SBIN SYMREF;                /* COMMANDS SYNTAX TREE */
      124    13835    1   DCL D_CCMDS UBIN SYMREF;                /* CONTINUED COMMANDS PARSE TREE */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:5    
      125    13836    1   DCL D_ACMDS UBIN SYMREF;                /* ATTACHMENT COMMANDS PARSE TREE */
      126    13837    1   DCL D_MTREE UBIN SYMREF;                /* INTERACTIVE MODIFY PARSE TREE */
      127    13838    1   DCL D_XDELTA BIT(1) ALIGNED SYMREF;     /* EXEC DELTA/USER DELTA FLAG */
      128    13839    1   DCL D_ATREE UBIN SYMREF;           /* DELTA ACTIVATION CHARACTER PARSE TREE */
      129    13840    1   DCL X$PARSE ENTRY(1) ALTRET;            /* X$PARSE */
      130    13841    1   DCL DDA$KILL1 ENTRY(0);                 /* KILLS A STORED COMMAND */
      131    13842    1   DCL DFA$KILL1 ENTRY(3);
      132    13843    1   DCL DDS$PROMPT ENTRY;                   /* PROMPT & READ USER'S COMMAND */
      133    13844    1   DCL DDS$PROMPTC ENTRY;             /* PROMPT & READ CONTINUED USER'S COMMAND */
      134    13845    1   DCL DDE$ERROR ENTRY(0);                 /* ERROR MSG REPORTER */
      135    13846    1   DCL DDD$BUMP_D$ ENTRY(1) ALTRET;        /* BUMPS S_D.D$ */
      136    13847    1   DCL DDS$DECIMAL ENTRY(2) ALTRET;        /* HANDLES DECIMALS NODE */
      137    13848    1   DCL DDS$STOREDA ENTRY(2) ALTRET;        /* COMMON STORED COMMAND CODE */
      138    13849    1   DCL DDS$ATTDIRA ENTRY(2) ALTRET;   /* ATTACHABLE | DIRECT COMMAND COMMON CODE */
      139    13850    1   DCL DDS$SET_C2D ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      140    13851    1   DCL DDS$SET_D2Q ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      141    13852    1   DCL DDS$SET_Q2D ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      142    13853    1   DCL DDS$VREFCOM ENTRY(2) ALTRET;        /* BUILDS DATA DESCRIPTOR */
      143    13854    1   DCL DDS$CNSNT ENTRY(4) ALTRET;          /* EVALUATES "CNSNT_REF" NODE */
      144    13855    1   DCL DUA$RUM_COMM ENTRY(0);              /* RECORDS COMMENTS FOR RUM MODE */
      145    13856    1   DCL DDS$BLD ENTRY(1) ALTRET;            /* COMMON BUILD ROUTINES */
      146    13857    1   DCL DDS$SUCCESS ENTRY(1);               /* U$ ROUTINE FOR X$PARSE */
      147    13858    1   DCL DDB$CHECK_ADDR ENTRY(2) ALTRET;
      148    13859    1   DCL DDR$BINTXT ENTRY(4);
      149    13860    1   DCL DDQ$WRITE ENTRY(2);
      150    13861        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:6    
      151    13862        /*D* NAME: DDS$SCAN
      152    13863             CALL: CALL DDS$SCAN
      153    13864             ENVIRONMENT: XDELTA OR USER DELTA.
      154    13865             INPUT: IMPLICIT REQUEST FOR DIRECT COMMAND.
      155    13866             OUTPUT: DIRECT COMMAND BUILT IN DIRECT COMMAND BUFFER.
      156    13867                     STORED COMMANDS ADDED TO STORED OMMAND BUFFERS ALONG
      157    13868                     THE WAY.
      158    13869             SCRATCH: DDS$PROMPT PLAYS WITH THE INPUT BUFFER.
      159    13870                      LOCAL AUTO.
      160    13871             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
      161    13872             DEVICE. THE COMMAND IS PARSED USING M$PARSE FACILITY.
      162    13873             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
      163    13874             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
      164    13875             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
      165    13876             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
      166    13877             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0.
      167    13878        */
      168    13879    1        SCAN1 = '0'B;                      /* DDS$SCAN ENTRY POINT */
      169    13880    1        SCAN2 = '0'B;
      170    13881    1        SEMI_OFFSET = 0;
      171    13882    1        GOTO START;
      172    13883                                                /**/
      173    13884    1   DDS$SCAN1: ENTRY ALTRET;
      174    13885                                                /**/
      175    13886    1        SCAN1 = '1'B;                      /* DDS$SCAN1 ENTRY POINT */
      176    13887    1        SCAN2 = '0'B;
      177    13888    1        SEMI_OFFSET = 0;
      178    13889    1        GOTO START;
      179    13890
      180    13891    1   DDS$SCAN2: ENTRY ALTRET;                /* DDS$SCAN2 entry point */
      181    13892
      182    13893    1        SCAN2 = '1'B;
      183    13894    1        SCAN1 = '0'B;
      184    13895    1   START:
      185    13896        /* SETUP THE PARSE CONTROL BLOCK FOR X$PARSE */
      186    13897    1        PCB = P_PCB;
      187    13898    1        PCB.TEXT$ = ADDR( S_D.INPUT );
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:7    
      188    13899    1        PCB.WORK$ = PARSE$;
      189    13900    1        PCB.WKSZ = S_D.PARSIZE;
      190    13901    1        PCB.U$$ = U$$;
      191    13902    1        S_D.REMACTIVE = S_D.MACTIVE;       /* FOR EVAL, MACTIVE BLD ROUTINES */
      192    13903    1        S_D.ERROR_SYM$ = ADDR( NIL );
      193    13904    1        IF NOT S_D.MACTIVE
      194    13905    1        THEN CALL DDS$SET_C2D;
      195    13906        /* SET STORED FLAG AS NOT WORKING ON A STORED COMMAND */
      196    13907    1        S_D.STORED=0;
      197    13908        /* READ THE COMMAND FROM THE CURRENT INPUT DEVICE */
      198    13909    1   PARSMORE:
      199    13910    1        S_D.RUM_COMMAND = '0'B;
      200    13911    1        MAERR = 0;
      201    13912    1        S_D.SACT = '0'B;
      202    13913    1        IF ( NOT SCAN1 AND NOT SCAN2 ) OR ( SCAN2 AND S_D.MACTIVE )
      203    13914    2        THEN DO;                           /* PROMPT & GET COMMAND */
      204    13915    2             IF S_D.STORED ~= 0
      205    13916    2             THEN CALL DDS$PROMPTC;
      206    13917    2             ELSE CALL DDS$PROMPT;
      207    13918    2           END;                            /* PROMPT & GET COMMAND */
      208    13919    1        PCB.NCHARS = S_D.NCHARS;
      209    13920    1        IF S_D.SACT
      210    13921    2        THEN DO;                           /* SPECIAL ACTIVATION CHARACTER MODE */
      211    13922    2             IF S_D.STORED ~= 0
      212    13923    2             THEN GOTO USERSY;             /* CANNOT ACTIVATE ON STORED CMD */
      213    13924    2             IF S_D.RUM_SKIP
      214    13925    2             THEN GOTO USERSK;
      215    13926    2             S_D.MACTIVE = '0'B;
      216    13927    2             PCB.ROOT$ = ADDR( D_ATREE );
      217    13928    2             S_D.QUALIFIED = '0'B;
      218    13929    2             S_D.ERROR_SYM$ = ADDR( NIL );
      219    13930    2             S_D.ERROR = 0;
      220    13931    2             S_D.IFSPEC$ = ADDR( NIL );
      221    13932    2             CALL ATTDIR_INIT ALTRET( USERRERR );
      222    13933    2             CALL DDS$SET_D2Q;
      223    13934    2             CALL X$PARSE( PCB ) ALTRET( USERR0 );
      224    13935    2             NCMD$ = PCB.OUT$ -> POB.SUBLK$( 0 );
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:8    
      225    13936    2             S_D.NCMD$ = NCMD$;
      226    13937    2             TEMPCODE = NCMD$ -> POB.CODE;
      227    13938    2             CALL INDEX( IX, BINASC( TEMPCODE ), ATREET ) ALTRET( UDERR1 );
      228    13939    3             DO CASE ( IX );
      229    13940    3               CASE ( 0 );                 /* STEP */
      230    13941    3                  IF S_D.PATCH THEN GOTO USERPA;
      231    13942    3                  IF S_D.RUM OR S_D.ANLZ THEN GOTO USERNDE;
      232    13943    3                  CALL DDS$BLD( 57 ) ALTRET( USERRERR ); /* C_STEP */
      233    13944    3               CASE ( 1 );                 /* EVAL */
      234    13945    3                  CALL DDS$BLD( 8 ) ALTRET( USERRERR ); /* C_EVAL */
      235    13946    3               CASE ( 2 );                 /* MODIFY */
      236    13947    3                  CALL DDS$BLD( 28 ) ALTRET( USERRERR ); /* C_MODIFY */
      237    13948    3               CASE ( 3 );                 /* MACTIVE */
      238    13949    3                  CALL DDS$BLD( 69 ) ALTRET( USERRERR ); /* C_MACTIVE1 */
      239    13950    3               END;
      240    13951    2             S_D.LASTBLT$ -> ALL_ATTACH.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );
      241    13952    2             RETURN;
      242    13953    2           END;                            /* SPECIAL ACTIVATION CHARACTER MODE */
      243    13954    1        IF S_D.MACTIVE
      244    13955    2        THEN DO;
      245    13956    2             PCB.ROOT$ = ADDR( D_MTREE );
      246    13957    2             S_D.QUALIFIED = '0'B;
      247    13958    2             S_D.ERROR_SYM$ = ADDR( NIL );
      248    13959    2             S_D.ERROR = 0;
      249    13960    2             S_D.IFSPEC$ = ADDR( NIL );
      250    13961    2             CALL ATTDIR_INIT ALTRET( USERRERR );
      251    13962    2             CALL DDS$SET_D2Q;
      252    13963    2             IF SUBSTR( S_D.INPUT, 0, S_D.NCHARS ) = ' '
      253    13964    3             THEN DO;
      254    13965    3                  IF S_D.RUM_SKIP
      255    13966    3                  THEN GOTO USERSK;
      256    13967    3                  CALL DDS$BLD( 14 ) ALTRET( USERRERR ); /* C_MACLOSE */
      257    13968    3                END;
      258    13969    3             ELSE DO;
      259    13970    3                  CALL X$PARSE( PCB ) ALTRET( BIGTREE );
      260    13971    3                  NCMD$ = PCB.OUT$;
      261    13972    3                  S_D.NCMD$ = NCMD$;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:9    
      262    13973    3                  CALL DDS$BLD( 69 ) ALTRET( REMERR ); /* C_MACTIVE1 */
      263    13974    3                  IF S_D.RUM_SKIP
      264    13975    3                  THEN GOTO USERSK;
      265    13976    3                END;
      266    13977    2             S_D.LASTBLT$ -> ALL_ATTACH.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );
      267    13978    2             RETURN;
      268    13979    2   BIGTREE:
      269    13980    2             IF SCAN2 OR PCB.ERROR.CODE ~= %E$SYNERR
      270    13981    2             THEN GOTO USERR0;
      271    13982    2             ELSE GOTO RESETMA;
      272    13983    2   REMERR:
      273    13984    2             IF SCAN2
      274    13985    2             THEN GOTO USERRERR;
      275    13986    2             MAERR = S_D.ERROR;
      276    13987    2             MAERR$ = S_D.ERROR_SYM$;
      277    13988    2             IF MAERR$ ~= ADDR( NIL )
      278    13989    3             THEN DO;
      279    13990    3                  MAERRTEXTC = MAERR$ -> TEXT$C;
      280    13991    3                  IF MAERRTEXTC.SIZE > LENGTHC( MAERRTEXTC.TEXT )
      281    13992    3                  THEN MAERRTEXTC.SIZE = LENGTHC( MAERRTEXTC.TEXT );
      282    13993    3                  MAERR$ = ADDR( MAERRTEXTC );
      283    13994    3                END;
      284    13995    2             MACHAR = PCB.HI_CHAR;
      285    13996    2   RESETMA:
      286    13997    2             CALL DDS$SET_C2D;
      287    13998    2             S_D.MACTIVE = '0'B;
      288    13999    2           END;
      289    14000    1        IF SCAN2
      290    14001    2        THEN DO;
      291    14002    2             PCB.ROOT$ = ADDR( D_ACMDS );
      292    14003    2             ATT_SIZE = S_D.ACMDS_SIZE;
      293    14004    2             S_D.INPUT = SUBSTR( S_D.ACMDS$ -> CHAR$ATT, S_D.ACMDS_OFF );
      294    14005    2             PCB.NCHARS = ATT_SIZE - S_D.ACMDS_OFF;
      295    14006    2             S_D.QUALIFIED = '0'B;
      296    14007    2             S_D.ERROR_SYM$ = ADDR( NIL );
      297    14008    2             S_D.ERROR = 0;
      298    14009    2             CALL DDS$SET_D2Q;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:10   
      299    14010    2             CALL X$PARSE( PCB ) ALTRET( USERR0 );
      300    14011    2             NC$ = PCB.OUT$ -> POB.SUBLK$( 0 );
      301    14012    2             NCMD$ = NC$ -> POB.SUBLK$( 0 );
      302    14013    2             S_D.NCMD$ = NCMD$;
      303    14014    2             CALL SET_IF_SEMI;
      304    14015    2             CALL ATTDIR_INIT ALTRET( USERRERR );
      305    14016    2             TEMPCODE = NCMD$ -> POB.CODE;
      306    14017    2             IF S_D.RUM_SKIP
      307    14018    2             THEN IF NOT (
      308    14019    2                    ( TEMPCODE = 72 ) OR /* C_RUM */
      309    14020    2                    ( TEMPCODE = 42 ) OR /* C_READ */
      310    14021    2                    ( TEMPCODE = 39 ) OR /* C_QUIT */
      311    14022    2                    ( TEMPCODE = 11 ) OR /* C_GOTO */
      312    14023    2                    ( TEMPCODE = 58 ) ) /* C_ALIB */
      313    14024    2                  THEN GOTO USERSK;
      314    14025                                      /* Check for multiple command don't want to allow
      315    14026                                         unless it is the last multiple command. */
      316    14027    2             IF (( TEMPCODE = 78) OR  /* C_DBOOT */
      317    14028    2               ( TEMPCODE = 70 ) OR    /* C_MINI */
      318    14029    2               ( TEMPCODE = 57 ) OR    /* C_STEP */
      319    14030    2               ( TEMPCODE = 61) OR    /* C_TBOOT */
      320    14031    2               ( TEMPCODE = 68  ))      /* C_XEQ */
      321    14032    2               AND SEMI_OFFSET ~= 0        /* not last command */
      322    14033    2               AND S_D.DO_ATTACH = 0       /* multiple command, not attachment */
      323    14034    3             THEN DO;
      324    14035    4                  DO CASE ( TEMPCODE );
      325    14036    4                    CASE ( 78 );      /* C_DBOOT */
      326    14037    4                       S_D.ERROR = 241; /* E@DBOOT_NOTALLOWED */
      327    14038    4                    CASE ( 70 );       /* C_MINI */
      328    14039    4                       S_D.ERROR = 242; /* E@MINI_NOTALLOWED */
      329    14040    4                    CASE ( 57 );       /* C_STEP */
      330    14041    4                       S_D.ERROR = 243; /* E@STEP_NOTALLOWED */
      331    14042    4                    CASE ( 61 );      /* C_TBOOT */
      332    14043    4                       S_D.ERROR = 244; /* E@TBOOT_NOTALLOWED */
      333    14044    4                    CASE ( 68 );        /* C_XEQ */
      334    14045    4                       S_D.ERROR = 245; /* E@XEQ_NOTALLOWED */
      335    14046    4                    END;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:11   
      336    14047    3                  GOTO USERRERR;
      337    14048    3                END;
      338    14049    2             CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );
      339    14050    2             IF SEMI_OFFSET ~= 0
      340    14051    2             THEN S_D.ACMDS_OFF = S_D.ACMDS_OFF + SEMI_OFFSET + 1;
      341    14052    2             ELSE S_D.ACMDS_OFF = S_D.ACMDS_SIZE;
      342    14053    2             RETURN;
      343    14054    2           END;
      344    14055    1        IF SUBSTR( S_D.INPUT, 0, S_D.NCHARS ) = ' '
      345    14056    1        THEN IF SCAN1
      346    14057    1             THEN GOTO USERNU;
      347    14058    1             ELSE IF S_D.STORED = 0
      348    14059    1                  THEN GOTO PARSMORE;      /* RE-PROMPT & TRY AGAIN */
      349    14060    2                  ELSE DO;       /* IMPLIED DONE WITH CONTINUED STORED COMMAND */
      350    14061    2                       IF S_D.STORED > S_D.FIXLAST
      351    14062    2                       THEN S_D.FIXLAST = S_D.STORED;
      352    14063    2                       GOTO START;
      353    14064    2                     END;
      354    14065        /* Call X$PARSE to see what we got */
      355    14066    1        S_D.QUALIFIED = '0'B;
      356    14067    1        CALL DDS$SET_D2Q;
      357    14068    1        S_D.ERROR_SYM$ = ADDR(NIL);
      358    14069    1        S_D.ERROR = 0;
      359    14070    1        IF S_D.STORED = 0
      360    14071    2        THEN DO;                           /* Initial stored or direct command */
      361    14072    2             PCB.ROOT$ = ADDR( D_DCMDS );
      362    14073    2             CALL X$PARSE( PCB ) ALTRET( USERR0 );
      363    14074    2             NC$ = PCB.OUT$ -> POB.SUBLK$( 0 );
      364    14075    2             IF NC$ -> POB.CODE = 55 /* C@STORED_CMD */
      365    14076    3             THEN DO;                      /* Stored command */
      366    14077    3                  NCMD$ = NC$ -> POB.SUBLK$( 0 );
      367    14078    3                  IF NC$ -> POB.NSB > 1
      368    14079    4                  THEN DO;
      369    14080    4                       CALL DDS$DECIMAL( NCMD$, TEMPID ) ALTRET( USERRERR );
      370    14081    4                       IF ( TEMPID < 1 ) OR ( TEMPID > (SIZEW(S_D.FIXCOM)/SIZEW(S_D.
             14081                                FIXCOM(0)))-1 )
      371    14082    4                       THEN GOTO USERR1;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:12   
      372    14083    4                       NCMD$ = NC$ -> POB.SUBLK$( 1 );
      373    14084    4                     END;
      374    14085    3                  ELSE TEMPID = -1;
      375    14086    3                  CALL SET_TRAIL_SEMI;
      376    14087    3                  IF TRAIL_SEMI
      377    14088    3                  THEN IF SCAN1            /* Continuation */
      378    14089    3                       THEN GOTO UDERNC;
      379    14090    3                  S_D.NCMD$ = NCMD$;
      380    14091    3                  CALL SET_IF_SEMI;
      381    14092    3                  TEMPCODE = NCMD$ -> POB.CODE;
      382    14093    3                  IF S_D.RUM_SKIP
      383    14094    3                  THEN GOTO USERSK;
      384    14095    3                  IF TEMPCODE = 67     /* C_WHEN */
      385    14096    4                  THEN DO;
      386    14097    4                       IF D_XDELTA THEN GOTO USERR7;
      387    14098    4                       CALL ATTDIR_INIT ALTRET( USERRERR );
      388    14099    4                       CALL DDS$BLD_WHEN ALTRET( USERRERR );
      389    14100    4                     END;
      390    14101    4                  ELSE DO;
      391    14102    4                       CALL STORED_INIT ALTRET( USERRERR );
      392    14103    4                       CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );
      393    14104    4                       VCPOS = 0;
      394    14105    4                     END;
      395    14106    3                  S_D.LASTBLT$ -> AT_FIRST.TEXT_OFFSET = POFFC( S_D.D$, S_D.LASTBLT$ )
             14106                           ;
      396    14107    3                  IF S_D.IFSPEC$ ~= ADDR(NIL)
      397    14108    3                  THEN S_D.LASTBLT$ -> AT_FIRST.IF_OFFSET = S_D.IFSPEC$ -> POB.CPOS;
      398    14109    3                  IF SEMI_OFFSET ~= 0
      399    14110    3                  THEN S_D.LASTBLT$ -> AT_FIRST.ATT_OFFSET = SEMI_OFFSET + 1;
      400    14111    3                  ATT_SIZE = S_D.NCHARS;
      401    14112    3                  S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE = ATT_SIZE ;
      402    14113    3                  ATTEXT$ = S_D.D$;
      403    14114    3                  CALL DDD$BUMP_D$( (S_D.NCHARS+3)/4 ) ALTRET( USERRERR );
      404    14115    3                  ATTEXT$ -> CHAR$ATT = S_D.INPUT;
      405    14116    3                  S_D.LASTBLT$ -> AT_FIRST.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );
      406    14117    3                  S_D.VARNEXT$ = S_D.D$;
      407    14118    3                  S_D.FIXCOM.TAL( S_D.STORED ) = S_D.LASTBLT$ -> AT_FIRST.LENGTH;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:13   
      408    14119    3                  IF TRAIL_SEMI
      409    14120    3                  THEN GOTO PARSMORE;
      410    14121    3                END;                       /* Stored command */
      411    14122    2             ELSE IF NC$ -> POB.CODE = 56 /* C@DIRECT_CMD */
      412    14123    3                  THEN DO;                 /* Direct command */
      413    14124    3                       NCMD$ = NC$ -> POB.SUBLK$( 0 );
      414    14125    3                       S_D.NCMD$ = NCMD$;
      415    14126    3                       CALL SET_TRAIL_SEMI;
      416    14127    3                       IF TRAIL_SEMI
      417    14128    3                       THEN GOTO UDERNC;   /* Continuation */
      418    14129    3                       CALL SET_IF_SEMI;
      419    14130    3                       CALL ATTDIR_INIT ALTRET( USERRERR );
      420    14131    3                       TEMPCODE = NCMD$ -> POB.CODE;
      421    14132    3                       IF S_D.RUM_SKIP
      422    14133    3                       THEN IF NOT (
      423    14134    3                              ( TEMPCODE = 72 ) OR /* C_RUM */
      424    14135    3                              ( TEMPCODE = 42 ) OR /* C_READ */
      425    14136    3                              ( TEMPCODE = 39 ) OR /* C_QUIT */
      426    14137    3                              ( TEMPCODE = 11 ) OR /* C_GOTO */
      427    14138    3                              ( TEMPCODE = 58 ) ) /* C_ALIB */
      428    14139    3                            THEN GOTO USERSK;
      429    14140    3                       CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );
      430    14141    3                       IF SEMI_OFFSET ~= 0
      431    14142    4                       THEN DO;
      432    14143    4                            S_D.DIRECT_TEXT = SUBSTR( S_D.INPUT, SEMI_OFFSET + 1 );
      433    14144    4                            S_D.DIRECT_SIZE = S_D.NCHARS - SEMI_OFFSET;
      434    14145    4                            S_D.DIRECT_OFF = 0;
      435    14146    4                          END;
      436    14147    3                     END;                  /* Direct command */
      437    14148    2                  ELSE IF NC$ -> POB.CODE = 23 /* C_COMMENTS */
      438    14149    3                       THEN DO;            /* Command is comments only */
      439    14150    3                            IF S_D.RUM
      440    14151    3                            THEN CALL DUA$RUM_COMM;
      441    14152    3                            ELSE IF SCAN1
      442    14153    3                                 THEN GOTO USERNU;
      443    14154    3                            GOTO PARSMORE;
      444    14155    3                          END;             /* Command is comments only */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:14   
      445    14156    2                       ELSE GOTO UDERR1;   /* Unknown code returned */
      446    14157    2           END;                            /* Initial stored or direct command */
      447    14158    2        ELSE DO;                           /* Continuation to a stored command */
      448    14159    2             PCB.ROOT$ = ADDR( D_CCMDS );
      449    14160    2             CALL X$PARSE( PCB ) ALTRET( USERR0A );
      450    14161    2             NC$ = PCB.OUT$ -> POB.SUBLK$( 0 );
      451    14162    2             NCMD$ = NC$ -> POB.SUBLK$( 0 );
      452    14163    2             S_D.NCMD$ = NCMD$;
      453    14164    2             ATT_SIZE = S_D.NCHARS;
      454    14165    2             ATTEXT$ = PINCRC( S_D.LASTBLT$, S_D.LASTBLT$ -> AT_FIRST.TEXT_OFFSET + S_D
             14165                      .LASTBLT$ -> AT_FIRST.TEXT_SIZE );
      455    14166    2             S_D.D$ = S_D.VARNEXT$;
      456    14167    2             CALL DDD$BUMP_D$(
      457    14168    2               ((S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE + ATT_SIZE + 3)/4) -
      458    14169    2               ((S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE + 3)/4)
      459    14170    2               ) ALTRET( USERRERR );
      460    14171    2             S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE = S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE +
             14171                      ATT_SIZE;
      461    14172    2             ATTEXT$ -> CHAR$ATT = S_D.INPUT;
      462    14173    2             S_D.LASTBLT$ -> AT_FIRST.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );
      463    14174    2             S_D.VARNEXT$ = S_D.D$;
      464    14175    2             S_D.FIXCOM.TAL( S_D.STORED ) = S_D.LASTBLT$ -> AT_FIRST.LENGTH;
      465    14176    2             CALL SET_TRAIL_SEMI;
      466    14177    2             IF TRAIL_SEMI
      467    14178    2             THEN GOTO PARSMORE;
      468    14179    2           END;                            /* Continuation to a stored command */
      469    14180    1        IF S_D.STORED=0
      470    14181    1        THEN RETURN;
      471    14182        /* SET NEW LAST COMMAND, IF APPROPRIATE */
      472    14183    1        IF ( S_D.STORED > S_D.FIXLAST )
      473    14184    1        THEN S_D.FIXLAST = S_D.STORED;
      474    14185    1        IF SCAN1
      475    14186    1        THEN RETURN;
      476    14187    1        ELSE GOTO START;
      477    14188        /**/
      478    14189        /*D* ERROR ENCOUNTERED DURING COMMAND BUILD. PRINT APPROPRIATE
      479    14190             ERROR MESSAGE, RELEASE ANY MEMORY ACQUIRED FROM FIXCOM/VARCOM,
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:15   
      480    14191             AND START OVER AGAIN. */
      481    14192        /**/
      482    14193    1   USERR0A:
      483    14194    1        IF PCB.ERROR.CODE = %E$SYNERR
      484    14195    2        THEN DO;
      485    14196    2             S_D.ERROR = 11;          /* E@UERR0 */
      486    14197    2             S_D.ERROR_HICHAR = PCB.HI_CHAR;
      487    14198    2             CALL DDE$ERROR;
      488    14199    2             IF S_D.RUM_COMMAND AND S_D.GHOST1
      489    14200    2             THEN S_D.RUM_SKIP = '1'B;
      490    14201    2             GOTO PARSMORE;
      491    14202    2           END;
      492    14203    1   USERR0:
      493    14204    1        IF PCB.ERROR.CODE = %E$SYNERR      /* %E$SYNERR */
      494    14205    1        THEN IF MAERR ~= 0
      495    14206    2             THEN DO;
      496    14207    2                  S_D.ERROR = MAERR;
      497    14208    2                  S_D.ERROR_SYM$ = MAERR$;
      498    14209    2                  S_D.ERROR_HICHAR = MACHAR;
      499    14210    2                END;
      500    14211    2             ELSE DO;
      501    14212    2                  S_D.ERROR = 11;     /* E@UERR0 */
      502    14213    2                  S_D.ERROR_HICHAR = PCB.HI_CHAR;
      503    14214    2                  IF SEMI_OFFSET ~= 0 THEN
      504    14215    2                       IF S_D.DO_ATTACH ~= 0 THEN
      505    14216    2                            S_D.ERROR_HICHAR = S_D.ERROR_HICHAR + S_D.ACMDS_OFF;
      506    14217    2                       ELSE
      507    14218    2                            S_D.ERROR_HICHAR = S_D.ERROR_HICHAR + SEMI_OFFSET + 1;
      508    14219    2                  ELSE ;
      509    14220    2                  IF S_D.RUM_COMMAND AND S_D.GHOST1
      510    14221    2                  THEN S_D.RUM_SKIP = '1'B;
      511    14222    2                END;
      512    14223    2        ELSE DO;
      513    14224    2             S_D.ERROR = 500;        /* E@PARSERR */
      514    14225    2             S_D.ERROR_HICHAR = PCB.ERROR.CODE;
      515    14226    2           END;
      516    14227    1        GOTO USERRERR;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:16   
      517    14228    1   USERR1: S_D.ERROR = 12; GOTO USERRERR; /* E@UERR1 */
      518    14229    1   UDERR1: S_D.ERROR = 501; GOTO USERRERR; /* E@DERR1 */
      519    14230    1   UDERNC: S_D.ERROR = 136; GOTO USERRERR; /* E@SCAN1_CONT */
      520    14231    1   USERSY: S_D.ERROR = 53; GOTO USERRERR; /* E@SYNTAX */
      521    14232    1   USERPA: S_D.ERROR = 115; GOTO USERRERR; /* E@NOT_IN_PATCH */
      522    14233    1   USERNDE: S_D.ERROR = 125; GOTO USERRERR; /* E@NOTDELTA */
      523    14234    1   USERNU: S_D.ERROR = 135; GOTO USERRERR; /* E@NULLCMD */
      524    14235    1   USERSK: S_D.ERROR = 224; GOTO USERRERR; /* E@RUMSKIP */
      525    14236    1   USERR7: S_D.ERROR = 18; GOTO USERRERR; /* E@UERR7 */
      526    14237    1   USERRERR:
      527    14238    1        IF SCAN2
      528    14239    1        THEN S_D.MACTIVE = S_D.REMACTIVE;
      529    14240    1        ELSE S_D.MACTIVE = '0'B;
      530    14241    1        IF SCAN1 AND S_D.ERROR = 135 /* E@NULLCMD */
      531    14242    2        THEN DO;                           /* Nothing! */
      532    14243    2           END;
      533    14244    1        ELSE CALL DDE$ERROR;
      534    14245    1        IF S_D.STORED ~= 0
      535    14246    1        THEN IF S_D.FIXCOM.CMD(S_D.STORED) ~= 0
      536    14247    2             THEN DO;            /* RELEASE MEMORY FROM VARCOM, & FIXCOM SLOT */
      537    14248    2                  S_D.VARNEXT$ = PINCRW(S_D.VARNEXT$,-S_D.FIXCOM.TAL(S_D.STORED));
      538    14249    2                  S_D.FIXCOM.CMD(S_D.STORED) = 0;
      539    14250    2                END;
      540    14251        /* TRY AGAIN */
      541    14252    1        IF SCAN1 OR ( SCAN2 AND NOT S_D.MACTIVE )
      542    14253    1        THEN ALTRETURN;
      543    14254    1        ELSE GOTO START;
      544    14255        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:17   
      545    14256        /*F* NAME: DDS$BLD_WHEN
      546    14257             PURPOSE: TO BUILD THE WHEN COMMAND.
      547    14258             DESCRIPTION: BUILDS THE WHEN STORED COMMAND "FIRST ATTACHMENT"
      548    14259             IN VARCOM. SETS UP THE FIELDS IN THE FIXCOM SLOT. BUILDS THE
      549    14260             OPTIONAL BYPASS COUNT (#) AND IFSPEC FIELDS IN THE FIRST
      550    14261             ATTACHMENT. EVALUATES & BUILDS THE POSITION. RETURNS IF BUILD
      551    14262             IS SUCCESSFUL, ELSE ALTRETURNS. */
      552    14263        /*D* NAME: DDS$BLD_WHEN
      553    14264             INTERFACE:
      554    14265             ENVIRONMENT: DDS$SCAN ACTIVE.
      555    14266             INPUT: S_D.STORED - COMMAND ID.
      556    14267                    NCMD$ - POINTER TO N_WHEN NODE.
      557    14268             OUTPUT: S_D.D$ - POINTER TO NEXT FREE WORD IN VARCOM.
      558    14269             SCRATCH: LOCAL AUTO ONLY
      559    14270             DESCRIPTION: BUILDS THE WHEN STORED COMMAND "FIRST ATTACHMENT"
      560    14271             IN VARCOM. SETS UP THE FIELDS IN THE FIXCOM SLOT. BUILDS THE
      561    14272             OPTIONAL BYPASS COUNT (#) AND IFSPEC FIELDS IN THE FIRST
      562    14273             ATTACHMENT. EVALUATES & BUILDS THE POSITION. RETURNS IF BUILD
      563    14274             IS SUCCESSFUL, ELSE ALTRETURNS. */
      564    14275                                                /**/
      565    14276    1   DDS$BLD_WHEN: PROC ALTRET;
      566    14277                                                /**/
      567    14278    2   DCL IXX SBIN;
      568    14279    2   DCL IXXX SBIN;
      569    14280    2   DCL UBIN36 UBIN(36) BASED;
      570    14281    2   DCL TCODE SBIN;
      571    14282    2   DCL TCODEC UBIN;
      572    14283    2   DCL NCC$ PTR;
      573    14284    2   DCL L$ PTR;
      574    14285    2   DCL S1$ PTR;
      575    14286    2   DCL S2$ PTR;
      576    14287    2   DCL CHAR22 CHAR(22) BASED;
      577    14288    2   DCL BB$ PTR;
      578    14289    2   DCL SIZE UBIN;
      579    14290    2   DCL WOFF UBIN;
      580    14291    2   DCL SILENT BIT(1) ALIGNED;
      581    14292    2   DCL INACTIVE BIT(1) ALIGNED;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:18   
      582    14293    2   DCL 1 BUFF$ER BASED ALIGNED,
      583    14294    2         2 * CHAR( TCODEC );
      584    14295    2   DCL WHEN$ PTR;
      585    14296    2   DCL DDK$EVAL ENTRY(6) ALTRET;
      586    14297    2   DCL DDK$GETWVAL ENTRY(6) ALTRET;
      587    14298        %WHEN_FIRST (NAME=WHEN$CMD,STCLASS="BASED(LASTBLT$)");
      588    14335        %FPRG$CONTEXT;
      589    14398                                                /**/
      590    14399        /*   IF B$JIT.UNAME = '350COHEN'
      591    14400             THEN DO;
      592    14401                  S_D.ERROR = E@WHENCOHEN;
      593    14402                  GOTO ALTRT;
      594    14403                END;  */
      595    14404    2        IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %L6
      596    14405    3        THEN DO;
      597    14406    3             S_D.ERROR = 331;  /* E@CMDNOTSUPPORT */
      598    14407    3             GOTO ALTRT;
      599    14408    3           END;
      600    14409    2        IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ ~= ADDR(NIL)
      601    14410    3        THEN DO;
      602    14411    3             IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.INTERPRETIVE
      603    14412    4             THEN DO;
      604    14413    4                  S_D.ERROR = 309; /* E@NOT_INTERPRETIVE */
      605    14414    4                  GOTO ALTRT;
      606    14415    4                END;
      607    14416    3           END;
      608    14417    2        ELSE IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ = ADDR(NIL)
      609    14418    3             THEN DO;
      610    14419    3                  S_D.ERROR = 502;
      611    14420    3                  GOTO ALTRT;
      612    14421    3                END;
      613    14422    2        SILENT = '0'B;
      614    14423    2        LASTBLT$ = S_D.LASTBLT$;
      615    14424    2        INACTIVE = '0'B;
      616    14425    3        DO IXX = 0 TO NCMD$ -> POB.NSB - 1;
      617    14426    3             NCC$ = NCMD$ -> POB.SUBLK$( IXX ); /* GET POINTER TO NEXT LEVEL NODE */
      618    14427    3             TCODE = NCC$ -> POB.CODE;     /* PICK UP CODE */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:19   
      619    14428    3             L$ = S_D.D$;
      620    14429    3             IF ( TCODE = 38 )      /* VREF_CODE */
      621    14430    4             THEN DO;
      622    14431        /*D* Build WHEN vref data descriptor in fixed command buffer (DIRCOM) so
      623    14432             that default schema is setup correctly before building IFSPEC.
      624    14433             Copy WHEN vref data descriptor to stored command buffer (VARCOM)
      625    14434             after IFSPEC is built. */
      626    14435    4                  CALL WHEN_INIT ALTRET( ALTRT );
      627    14436    4                  CALL DDS$ATTDIRA( SIZEW( WHEN$CMD ), 67 ) ALTRET( ALTRT );
             14436                           /* C_WHEN */
      628    14437    4                  S1$ = S_D.D$;
      629    14438    4                  CALL DDS$VREFCOM( NCC$ ) ALTRET( ALTRT );
      630    14439    4                  VCPOS = NCC$ -> POB.SUBLK$(0) -> POB.CPOS;
      631    14440    4                  WOFF = POFFW(S_D.D$, S_D.DESC$) + SIZEW(WHEN$CMD);
      632    14441    4                  S2$ = S_D.D$;
      633    14442    4                  CALL DDS$SET_Q2D;
      634    14443    4                  CALL STORED_INIT ALTRET( ALTRT );
      635    14444    4                  CALL DDS$STOREDA( SIZEW( WHEN$CMD ), 67 ) ALTRET( ALTRT );
      636    14445    4                  L$ = S_D.D$;
      637    14446    4                  TCODEC = POFFC( S2$, S1$ );
      638    14447    4                  TCODE = TCODEC / LENGTHC( TCODEC );
      639    14448    4                  S_D.FIXCOM.CDF( S_D.STORED ) = POFFW( L$, S_D.LASTBLT$ );
             14448                           /* Offset to WHEN vref */
      640    14449    4                  S_D.FIXCOM.SILENT( S_D.STORED ) = SILENT;
      641    14450    4                  S_D.FIXCOM.INACTIVE( S_D.STORED ) = INACTIVE;
      642    14451    4                  WHEN$CMD.OVALUE$ = ADDR( NIL );
      643    14452    4                  WHEN$CMD.U.CONST_OFFSET = WOFF;
      644    14453    4                  CALL DDD$BUMP_D$( TCODE ) ALTRET( ALTRT );
      645    14454    4                  L$ -> BUFF$ER = S1$ -> BUFF$ER;
      646    14455    4                  S_D.DESC$ = L$;
      647    14456    4                  CALL DDK$EVAL (WHEN$CMD.ADDRESS, WHEN$CMD.SEG, WHEN$CMD.DESC#,
      648    14457    4                    WHEN$CMD.NOT_IS, WHEN$CMD.BOFF, WHEN$CMD.BSIZE) ALTRET(ALTRT);
      649    14458    4                  IF WHEN$CMD.NOT_IS
      650    14459    5                  THEN DO;
      651    14460    5                       IF WHEN$CMD.SEG = 3
      652    14461    6                       THEN DO;
      653    14462    6                            IF WHEN$CMD.DESC# - 3 < 1 OR
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:20   
      654    14463    6                              WHEN$CMD.DESC# - 3 > 8
      655    14464    7                            THEN DO;
      656    14465    7                                 S_D.ERROR = 208; /* E@WHEN_NOTIS_OR_DS */
      657    14466    7                                 GOTO ALTRT;
      658    14467    7                               END;
      659    14468    6                          END;
      660    14469    6                       ELSE DO;
      661    14470    6                            S_D.ERROR = 208; /* E@WHEN_NOTIS_OR_DS */
      662    14471    6                            GOTO ALTRT;
      663    14472    6                          END;
      664    14473    5                     END;
      665    14474    4                  WHEN$CMD.START_PAGE = WHEN$CMD.ADDRESS/1024;
      666    14475    4                  WHEN$CMD.END_PAGE = (WHEN$CMD.ADDRESS + (WHEN$CMD.BOFF + WHEN$CMD.
             14475                           BSIZE - 1)/36)/1024;
      667    14476    4                  IF ( NOT L$ -> ZITEM.FLAGS.MDSE.M )
      668    14477    5                  THEN DO;
      669    14478    5                       S_D.ERROR = 42; /* E@NOMOD */
      670    14479    5                       GOTO ALTRT;
      671    14480    5                     END;
      672    14481    4                  IF ( NOT L$ -> ZITEM.FLAGS.MDSE.E ) AND ( L$ -> ZITEM.FLAGS.ADDREXP )
      673    14482    5                  THEN DO; /* CAN'T HAVE NON-MODIFYABLE SPECIAL SYMBOL IN EXPRESSION */
      674    14483    5                       S_D.ERROR = 87; /* E@EXPNOTVALID */
      675    14484    5                       GOTO ALTRT;
      676    14485    5                     END;
      677    14486    4                  TCODEC = TCODE;
      678    14487    4                  TCODE = S_D.UNODE.USENODE;
      679    14488    4                  WHEN$CMD.NODE = TCODE;
      680    14489    4                  IF S_D.OVERLAID
      681    14490    4                  THEN IF NOT S_D.B$TREE$ -> B$NODE.FLGS.NOW_IN( TCODE )
      682    14491    4                       THEN S_D.FIXCOM.NOT_IN( S_D.STORED ) = '1'B;
      683    14492    4                END;
      684    14493    3             ELSE IF ( TCODE >= 1 ) AND ( TCODE <= 6 ) /* C@GREATER, C@EQUALS */
      685    14494    3                  THEN WHEN$CMD.WCOND = TCODE;
      686    14495    3                  ELSE IF ( TCODE = 17 ) /* C@CNSNT_REF */
      687    14496    4                       THEN DO;
      688    14497    4                            CALL DDD$BUMP_D$( SIZEW( IF$CONST ) ) ALTRET( ALTRT );
      689    14498    4                            CALL DDS$CNSNT( NCC$, L$ -> TEXT$C, TCODE ) ALTRET( ALTRT )
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:21   
             14498                                     ;
      690    14499    4                            WHEN$CMD.WCTYPE = TCODE;
      691    14500    4                          END;
      692    14501    3                       ELSE IF ( TCODE = 42 ) /* C@N_AT11 */
      693    14502    4                            THEN DO;       /* N_WHEN11 - BYPASS COUNT */
      694    14503    4                                 NCC$ = NCC$ -> POB.SUBLK$( 0 );
             14503                                          /* POINT TO TEXT ( DECIMAL LEXEME ) */
      695    14504    4                                 CALL DDS$DECIMAL( NCC$, TCODE ) ALTRET( ALTRT );
             14504                                          /* GET THE NUMBER */
      696    14505    4                                 WHEN$CMD.BYPASS_COUNT = TCODE;
      697    14506    4                                 WHEN$CMD.CURRENT_COUNT = TCODE;
      698    14507    4                               END;
      699    14508    3                            ELSE IF ( TCODE = 100 ) /* C@SILENT */
      700    14509    3                                 THEN SILENT = '1'B;
      701    14510    3                                 ELSE IF ( TCODE = 101 ) /* C@INACTIVE */
      702    14511    3                                      THEN INACTIVE = '1'B;
      703    14512    4                                      ELSE DO; /* UNKNOWN COMMAND */
      704    14513    4                                           S_D.ERROR = 501; /* E@DERR1 */
      705    14514    4                                           GOTO ALTRT; /* SPLIT */
      706    14515    4                                         END;
      707    14516    3           END;                            /* END "DO IX" */
      708    14517        /*D* Duplicate WHEN breakpoints are allowed */
      709    14518    2        TCODEC = WHEN$CMD.BSIZE;
      710    14519    2        WHEN$ = ADDR(S_D.OUTPUT);
      711    14520    2        CALL DDK$GETWVAL (WHEN$, WHEN$CMD.ADDRESS, WHEN$CMD.BOFF,
      712    14521    2          WHEN$CMD.BSIZE, WHEN$CMD.DESC#, WHEN$CMD.NOT_IS) ALTRET(S_FAULT);
      713    14522    2        RETURN;
      714    14523                                                /**/
      715    14524    2   ALTRT:
      716    14525    2        ALTRETURN;
      717    14526    2   S_FAULT: ;
      718    14527    2        S_D.ERROR = 237;          /* E@CANTACCESS */
      719    14528    2        CALL DDE$ERROR;
      720    14529    2        S_D.OUTPUT = 'Data Breakpoint ';
      721    14530    2        BB$ = PINCRC(ADDR(S_D.OUTPUT), SIZEC('Data Breakpoint '));
      722    14531    2        CALL DDR$BINTXT(BB$, S_D.STORED, %UINT_FMT, SIZE);
      723    14532    2        BB$ = PINCRC(BB$, SIZE);
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:22   
      724    14533    2        BB$ -> CHAR22 = ' set inactive by DELTA';
      725    14534    2        CALL DDQ$WRITE(ADDR(S_D.OUTPUT), SIZEC('Data Breakpoint ')+22+SIZE);
      726    14535    2        S_D.FIXCOM.INACTIVE(S_D.STORED) = '1'B;
      727    14536    2        RETURN;
      728    14537                                                /**/
      729    14538    2   END DDS$BLD_WHEN;
      730    14539        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:23   
      731    14540        /*D* NAME: SET_TRAIL_SEMI
      732    14541             CALL: CALL SET_TRAIL_SEMI
      733    14542             INPUT: PCB.OUT$ - Pointer to root node.
      734    14543             OUTPUT: TRAIL_SEMI - Set if commands have a trailing semicolon.
      735    14544             DESCRIPTION: Determines if there is a trailing SEMICOLON node.
      736    14545                          If so sets TRAIL_SEMI, else resets TRAIL_SEMI. */
      737    14546
      738    14547    1   SET_TRAIL_SEMI: PROC;
      739    14548
      740    14549    2   DCL NSB SBIN;
      741    14550    2   DCL NC$ PTR;
      742    14551
      743    14552    2        TRAIL_SEMI = '0'B;
      744    14553        /* Point to last C@STORED or C@DIRECT command */
      745    14554    2        NC$ = PCB.OUT$ -> POB.SUBLK$( PCB.OUT$ -> POB.NSB - 1 );
      746    14555        /* Point to last C_COMMAND */
      747    14556    2        NC$ = NC$ -> POB.SUBLK$( NC$ -> POB.NSB - 1 );
      748    14557        /* Get number of subnodes from C_COMMAND */
      749    14558    2        NSB = NC$ -> POB.NSB - 1;
      750    14559    2        IF NSB >= 0
      751    14560    3        THEN DO;
      752    14561        /* The last subnode may be a SEMICOLON */
      753    14562    3             NC$ = NC$ -> POB.SUBLK$( NSB );
      754    14563    3             IF NC$ -> POB.CODE = 93 /* C@SEMICOLON */
      755    14564    3             THEN TRAIL_SEMI = '1'B;
      756    14565    3           END;
      757    14566
      758    14567    2        RETURN;
      759    14568
      760    14569    2   END SET_TRAIL_SEMI;
      761    14570        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:24   
      762    14571        /*D* NAME: SET_IF_SEMI
      763    14572             CALL: CALL SET_IF_SEMI;
      764    14573             INPUT: NCMD$ - Pointer to DELTA command node.
      765    14574             OUTPUT: SEMI_OFFSET - Offset to semicolon, 0 if none.
      766    14575                     S_D.IFSPEC$ - Address of IFSPEC node, NIL if none.
      767    14576             DESCRIPTION: Determines if there is a SEMICOLON node. If so,
      768    14577                          remembers the offset to it in SEMI_OFFSET, and
      769    14578                          decrements the number of subnodes on this command.
      770    14579                          Does the same with IFSPEC. RETURNs when done. */
      771    14580
      772    14581    1   SET_IF_SEMI: PROC;
      773    14582
      774    14583    2   DCL NSB SBIN;
      775    14584    2   DCL NODE$ PTR;
      776    14585
      777    14586    2        NSB = NCMD$ -> POB.NSB - 1;
      778    14587    2        SEMI_OFFSET = 0;
      779    14588    2        S_D.IFSPEC$ = ADDR(NIL);
      780    14589    3        DO WHILE ( NSB >= 0 );
      781    14590    3             NODE$ = NCMD$ -> POB.SUBLK$( NSB );
      782    14591    3             IF NODE$ -> POB.CODE = 93 /* C@SEMICOLON */
      783    14592    3             THEN SEMI_OFFSET = NODE$ -> POB.CPOS;
      784    14593    3             ELSE IF NODE$ -> POB.CODE = 11 /* C@IFSPEC */
      785    14594    3                  THEN S_D.IFSPEC$ = NODE$;
      786    14595    3                  ELSE RETURN;             /* No SEMICOLON or IFSPEC */
      787    14596    3             NCMD$ -> POB.NSB = NSB;
      788    14597    3             NSB = NSB - 1;
      789    14598    3           END;
      790    14599
      791    14600    2        RETURN;
      792    14601
      793    14602    2   END SET_IF_SEMI;
      794    14603        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:25   
      795    14604        /*F* NAME: ATTDIR_INIT
      796    14605             PURPOSE: TO SETUP BEFORE BUILDING A COMMAND IN THE DIRECT
      797    14606             COMMAND BUFFER.
      798    14607             DESCRIPTION: IF AN ID WAS SPECIFIED THE COMMAND IS REJECTED.
      799    14608             IF NOT WORKING ON A STORED COMMAND THE NUMBER OF COMMANDS
      800    14609             SPECIFIED MUST BE =1. THE BUILD BUFFER IS SET TO VARCOM IF WORKING
      801    14610             ON A STORED COMMAND; FOR A DIRECT COMMAND IT IS SET TO DIRCOM.
      802    14611             IN EITHER CASE, THE BUILD BUFFER MUST NOT BE EMPTY. */
      803    14612        /*D* NAME: ATTDIR_INIT
      804    14613             CALL: CALL ATTDIR_INIT
      805    14614             INTERFACE:
      806    14615             ENVIRONMENT:
      807    14616             INPUT:
      808    14617             OUTPUT: S_D.DESC$ - START OF BUILD BUFFER
      809    14618                     S_D.D$ - START OF BUILD BUFFER
      810    14619                     S_D.LASTBLT$ - START OF BUILD BUFFER
      811    14620                     LASTBLT$ - SAME AS S_D.LASTBLT$
      812    14621             SCRATCH:
      813    14622             DESCRIPTION: IF AN ID WAS SPECIFIED THE COMMAND IS REJECTED.
      814    14623             IF NOT WORKING ON A STORED COMMAND THE NUMBER OF COMMANDS
      815    14624             SPECIFIED MUST BE =1. THE BUILD BUFFER IS SET TO VARCOM IF WORKING
      816    14625             ON A STORED COMMAND; FOR A DIRECT COMMAND IT IS SET TO DIRCOM.
      817    14626             IN EITHER CASE, THE BUILD BUFFER MUST NOT BE EMPTY. */
      818    14627        /**/
      819    14628    1   ATTDIR_INIT: PROC ALTRET;
      820    14629        /**/
      821    14630    2   DCL IXX SBIN;                           /* TEMP INDEX */
      822    14631    2   DCL V UBIN;
      823    14632                                                /**/
      824    14633    2        IF S_D.STORED~=0
      825    14634    3        THEN DO;                           /* STORED COMMAND */
      826    14635    3             S_D.DESC$=S_D.VARNEXT$;
      827    14636    3             S_D.DESCL$ = S_D.VARCOM_HIGH$;
      828    14637    3           END;
      829    14638        /* NON-STORED COMMAND */
      830    14639    3        ELSE DO;
      831    14640    3             S_D.DESC$ = ADDR( S_D.DIRCOM );
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:26   
      832    14641    3             S_D.DESCL$ = PINCRW( ADDR( S_D.DIRCOM ), SIZEW( S_D.DIRCOM ) );
      833    14642    3           END;
      834    14643        /* CHECK FOR SPACE IN BUILD BUFFER */
      835    14644    2        GOTO CHKSPACE;
      836    14645        /**/
      837    14646    2   WHEN_INIT: ENTRY ALTRET;
      838    14647        /**/
      839    14648    2        S_D.DESC$ = ADDR( S_D.DIRCOM );
      840    14649    2        S_D.DESCL$ = PINCRW( ADDR( S_D.DIRCOM ), SIZEW( S_D.DIRCOM ) );
      841    14650    2        GOTO CHKSPACE;
      842    14651        /**/
      843    14652        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:27   
      844    14653        /*D* NAME: STORED_INIT
      845    14654             CALL: CALL STORED_INIT
      846    14655             INTERFACE:
      847    14656             ENVIRONMENT:
      848    14657             INPUT:
      849    14658             OUTPUT: S_D.DESC$ - START OF BUILD BUFFER
      850    14659                     S_D.D$ - START OF BUILD BUFFER
      851    14660                     S_D.LASTBLT$ - START OF BUILD BUFFER
      852    14661                     LASTBLT$ - SAME AS S_D.LASTBLT$
      853    14662                     S_D.STORED - STORED COMMAND ID
      854    14663                     TEMPID - SET TO -1 FOR SCAN LOOP
      855    14664             SCRATCH:
      856    14665             DESCRIPTION: IF ALREADY WORKING ON A STORED COMMAND THE COMMAND IS
      857    14666             REJECTED. IF NO ID WAS SPECIFIED THEN FIXCOM IS SEARCHED
      858    14667             FOR AN AVAILABLE SLOT. IF NOT SLOT IS FOUND THEN SET ERROR
      859    14668             CODE & ALTRET. THE STORED COMMAND'S ID IS ASSIGNED TO THE
      860    14669             STORED FLAG. THE BUILD BUFFER IS SET TO VARCOM, AND CHECKED
      861    14670             FOR BEING NOT EMPTY. */
      862    14671        /**/
      863    14672    2   STORED_INIT: ENTRY ALTRET;
      864    14673        /**/
      865    14674        /* MAKE SURE THE STORED COMMAND IS NOT SPECIFIED AS AN ATTACHMENT */
      866    14675    2        IF S_D.RUM OR S_D.ANLZ
      867    14676    3        THEN DO;
      868    14677    3             S_D.ERROR = 125;       /* E@NOTDELTA */
      869    14678    3             ALTRETURN;
      870    14679    3           END;
      871    14680    2        IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.FANLZ
      872    14681    3        THEN DO;
      873    14682    3             S_D.ERROR = 125;       /* E@NOTDELTA */
      874    14683    3             ALTRETURN;
      875    14684    3           END;
      876    14685        /* CHECK IF ID WAS SPECIFIED */
      877    14686    2        IF TEMPID=-1
      878    14687    3        THEN DO;            /* ID NOT SPECIFIED - TRY TO FIND AN AVAILABLE ONE */
      879    14688    4             DO IXX=1 TO (SIZEW(S_D.FIXCOM)/SIZEW(S_D.FIXCOM(0)))-1;
      880    14689    4                  IF S_D.FIXCOM.CMD(IXX)=0
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:28   
      881    14690    4                  THEN GOTO FOUND;
      882    14691    4                END;
      883    14692                                                /* NO SLOTS AVAILABLE */
      884    14693    3             S_D.ERROR=17;            /* E@UERR6 */
      885    14694    3             ALTRETURN;
      886    14695    3   FOUND:                                  /* FOUND A FREE SLOT IN FIXCOM */
      887    14696    3             S_D.STORED=IXX;
      888    14697    3           END;
      889    14698    3        ELSE DO;                      /* ID SPECIFIED, GET IT & SET STORED FLAG */
      890    14699    3             V = S_D.FIXCOM.CMD( TEMPID );
      891    14700    3             IF V ~= 0
      892    14701    4             THEN DO;       /* IMPLICIT KILL, EVEN IF FURTHER ERROR ENCOUNTERED */
      893    14702    4                  S_D.KILL1 = TEMPID;
      894    14703    4                  CALL INDEX( IXX, BINASC( V ), SKILLT ) ALTRET( GOKILL1 );
      895    14704    4                  IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %HOST
      896    14705    5                  THEN DO;
      897    14706    6                       DO CASE ( IXX );
      898    14707    6                         CASE ( 0 );
      899    14708    6                            S_D.ONABORT = 0;
      900    14709    6                         CASE ( 1 );
      901    14710    6                            S_D.ONEXIT = 0;
      902    14711    6                         CASE ( 2 );
      903    14712    6                            S_D.ONCALLS = 0;
      904    14713    6                         CASE ( 3 );
      905    14714    6                            S_D.ONNODES = 0;
      906    14715    6                         END;
      907    14716    5   GOKILL1:
      908    14717    5                       CALL DDA$KILL1;
      909    14718    5                     END;
      910    14719    4                  ELSE CALL DFA$KILL1('1'B, V, '1'B);
      911    14720    4                END;                       /* IMPLICIT KILL */
      912    14721    3             S_D.STORED=TEMPID;
      913    14722    3           END;
      914    14723    2        TEMPID = -1;                       /* RESET FOR SCAN LOOP */
      915    14724        /* INITIALIZE FIXCOM SLOT */
      916    14725    2        S_D.FIXCOM(S_D.STORED) = '0'B;
      917    14726        /* SETUP BUILD BUFFER AS VARCOM */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:29   
      918    14727    2        S_D.DESC$=S_D.VARNEXT$;
      919    14728    2        S_D.DESCL$ = S_D.VARCOM_HIGH$;
      920    14729                                           /* MAKE SURE BUILD BUFFER IS NOT EMPTY */
      921    14730    2   CHKSPACE:
      922    14731                                                /**/
      923    14732    2        IF S_D.DESC$<S_D.DESCL$
      924    14733    3        THEN DO;                           /* BUFFER NOT EMPTY */
      925    14734    3             S_D.D$ = S_D.DESC$;
      926    14735    3             S_D.LASTBLT$ = S_D.DESC$;
      927    14736    3             LASTBLT$ = S_D.DESC$;
      928    14737    3             RETURN;
      929    14738    3           END;
      930    14739    3        ELSE DO;                           /* BUFFER IS EMPTY */
      931    14740    3             S_D.ERROR = 15;          /* E@UERR4 */
      932    14741    3             ALTRETURN;
      933    14742    3           END;
      934    14743                                                /**/
      935    14744    2   END ATTDIR_INIT;
      936    14745                                                /**/
      937    14746    1   END DDS$SCAN;
      938    14747        %EOD;

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:30   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$SCAN.

   Procedure DDS$SCAN requires 1438 words for executable code.
   Procedure DDS$SCAN requires 80 words of local(AUTO) storage.

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:31   

 Object Unit name= DDS$SCAN                                   File name= DXS$SCAN.:E05TOU
 UTS= JUL 29 '97 15:14:34.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     27     33  DDS$SCAN
    1   Proc  even  none  1438   2636  DDS$SCAN
    2  RoData even  none    23     27  DDS$SCAN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        0  DDS$SCAN
     1      6          yes     yes      Std        0  DDS$SCAN1
     1     15          yes     yes      Std        0  DDS$SCAN2
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:32   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 DDS$SUCCESS
 yes     yes           Std       0 DDS$SET_C2D
         yes           Std       0 DDS$PROMPT
         yes           Std       0 DUA$RUM_COMM
 yes     yes           Std       2 DDS$DECIMAL
         yes           Std       0 DDS$PROMPTC
 yes     yes           Std       1 DDS$BLD
 yes     yes           Std       1 DDD$BUMP_D$
 yes     yes           Std       0 DDS$SET_D2Q
         yes           Std       0 DDE$ERROR
 yes     yes           Std       1 X$PARSE
 yes     yes           Std       0 DDS$SET_Q2D
 yes     yes           Std       6 DDK$EVAL
 yes     yes           Std       4 DDS$CNSNT
 yes     yes           Std       6 DDK$GETWVAL
         yes           Std       2 DDQ$WRITE
 yes     yes           Std       2 DDS$ATTDIRA
 yes     yes           Std       2 DDS$VREFCOM
 yes     yes           Std       2 DDS$STOREDA
         yes           Std       4 DDR$BINTXT
         yes           Std       0 DDA$KILL1
         yes           Std       3 DFA$KILL1
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:33   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                           r    S_D$                                  PARSE$
     D_DCMDS                               D_CCMDS                               D_ACMDS
     D_MTREE                               D_XDELTA                              D_ATREE
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:34   


        1        1        /*M* DDS$SCAN DELTA COMMAND SCANNER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*P* NAME: DDS$SCAN
       10       10             PURPOSE: TO READ, SCAN, & ENCODE INPUT COMMANDS TO DELTA.
       11       11             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       12       12             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       13       13             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
       14       14             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       15       15             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       16       16             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       17       17             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0. */
       18       18        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:35   
       19       19        /*F* NAME: DDS$SCAN
       20       20             PURPOSE: TO READ, SCAN, & ENCODE INPUT COMMANDS TO DELTA.
       21       21             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       22       22             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       23       23             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
       24       24             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       25       25             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       26       26             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       27       27             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0. */
       28       28        /*D* NAME: DDS$SCAN
       29       29             CALL: CALL DDS$SCAN;
       30       30             INTERFACE: X$PARSE
       31       31                        DDA$KILL1
       32       32                        DDS$PROMPT
       33       33                        DDS$PROMPTC
       34       34                        DDE$ERROR
       35       35                        DDD$BUMP_D$
       36       36                        DDS$DECIMAL
       37       37                        DDS$STOREDA
       38       38                        DDS$ATTDIRA
       39       39                        DDS$SET_C2D
       40       40                        DDS$SET_D2Q
       41       41                        DDS$SET_Q2D
       42       42                        DDS$VREFCOM
       43       43                        DDS$CNSNT
       44       44                        DUA$RUM_COMM;
       45       45                        D_DCMDS
       46       46             ENVIRONMENT: XDELTA OR USER DELTA.
       47       47             INPUT: IMPLICIT REQUEST FOR DIRECT COMMAND.
       48       48             OUTPUT: DIRECT COMMAND BUILT IN DIRECT COMMAND BUFFER.
       49       49                     STORED COMMANDS ADDED TO STORED OMMAND BUFFERS ALONG
       50       50                     THE WAY.
       51       51             SCRATCH: DDS$PROMPT PLAYS WITH THE INPUT BUFFER.
       52       52                      LOCAL AUTO.
       53       53             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       54       54             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       55       55             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:36   
       56       56             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       57       57             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       58       58             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       59       59             ALTRETS ONLY IF ENTERED AT DDS$SCAN1 & COMMAND
       60       60             COULD NOT BE BUILT. */
       61       61                                                /**/
       62       62        DDS$SCAN: PROC ALTRET;

     62  1 000000   000000 700200 xent  DDS$SCAN     TSX0  ! X66_AUTO_0
         1 000001   000120 000000                    ZERO    80,0

       63       63                                                /**/
       64       64        %INCLUDE DD_SUBS_C;                     /* %SUBS */
       65      335        %INCLUDE B$JIT;
       66      625    1   DCL B$JIT$ PTR SYMREF;
       67      626        %INCLUDE XU_MACRO_C;                    /* X$PARSE MACROS */
       68     3732        %INCLUDE XU_SUBS_C;                     /* X$PARSE %SUBs */
       69     3824        %INCLUDE DD_ERR_C;                      /* ERROR CODE %SUBS */
       70     4221        %INCLUDE XU_PERR_C;                     /* X$PARSE ERROR CODES */
       71     4412        %INCLUDE DD_PSUBS_C;                    /* SYNTAX TREE %SUBS */
       72     4887        %INCLUDE B$OBJECT_C;                    /* OBJECT LANGUAGE TEMPLATES */
       73     8317        %SUB FIXCOMSIZE="(SIZEW(S_D.FIXCOM)/SIZEW(S_D.FIXCOM(0)))-1";
       74     8318        %P$PCB (NAME=PCB,STCLASS=AUTO);
       75     8519    1   DCL U$$ EPTR CONSTANT INIT( ENTADDR( DDS$SUCCESS ) );
       76     8520    1   DCL TEMPID SBIN;                        /* TEMPORARY CMD ID */
       77     8521    1   DCL NC$ PTR;                            /* CURRENT NODE PTR */
       78     8522    1   DCL NCC$ PTR;                           /* ANOTHER NODE POINTER */
       79     8523    1   DCL NCMD$ PTR;                          /* CURRENT COMMAND NODE PTR */
       80     8524    1   DCL IX SBIN;                            /* COMMAND LOOP INDEX */
       81     8525    1   DCL TEMPCODE SBIN;                      /* TEMP FOR COMMAND CODE */
       82     8526    1   DCL MAERR SBIN;                         /* MACTIVE ERROR CODE */
       83     8527    1   DCL MAERR$ PTR;                         /* MACTIVE ERROR SYMBOL */
       84     8528    1   DCL 1 MAERRTEXTC,                       /* MACTIVE ERROR SYMBOL */
       85     8529    1         2 SIZE UBIN BYTE UNAL,
       86     8530    1         2 TEXT CHAR(63) UNAL;             /* DON'T WORRY ABOUT TRUNCATION */
       87     8531    1   DCL MACHAR UBIN;                        /* MACTIVE ERROR HI_CHAR */
       88     8532    1   DCL LASTBLT$ PTR;                       /* =S_D.LASTBLT$, USED AS IMPLIED PTR */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:37   
       89     8533    1   DCL SCAN1 BIT(1) ALIGNED;               /* HOW ENTERED FLAG */
       90     8534    1   DCL SCAN2 BIT(1) ALIGNED;               /* Another how entered flag */
       91     8535    1   DCL TRAIL_SEMI BIT(1) ALIGNED;
       92     8536    1   DCL SEMI_OFFSET UBIN;              /* OFFSET TO SEMI_COLON IN PARSED TEXT */
       93     8537    1   DCL ATT_SIZE UBIN;
       94     8538    1   DCL ATTEXT$ PTR;
       95     8539    1   DCL CHAR$ATT CHAR(ATT_SIZE) BASED;
       96     8540    1   DCL VCPOS UBIN;                    /* CPOS of VREF for WHEN so SHOW will work */
       97     8541        %INCLUDE DD$DITEM;                      /* DATA DESCRIPTOR STUFF */
       12+    8644             %LIST;
       13+    8645    1        DCL SDD$ PTR;
       14+    8646    1        DCL ZITEM$ PTR;
       15+    8647    1        DCL SDD_L6$ PTR;
       16+    8648    1        DCL ZITEM_L6$ PTR;
       98     9222        %ZITEM;
       99     9294        %B$TREE_TABLE (HDR_NAME=B$TREEHDR,NODE_NAME="B$NODE(0:0)");
      100     9352        %PARSE$OUT (NAME=POB,STCLASS=BASED,NSUBLKS=NSB);
      101     9397        %INCLUDE DD$BASED;                      /* BASED STRUCTURES */
      102    10700        %AT_FIRST;
      103    10728        %ALL_ATTACH;
      104    10743        %TEXT$C;
      105    10748        %IF$CONST;
      106    10786        %FPRG$CONTEXT;
      107    10849        %INCLUDE XUH_MACRO_C;
      108    10933        %INCLUDE DD_SD_M;                       /* "STATIC" DATA */
      109    12269        %S_D;
      110    13587        %S_D_PTRS;
      111    13624        %P_PCB (STCLASS=CONSTANT,C=YES,C_LD=' "',C_TL=' "',CNTU=NO);
      112    13823    1   DCL ATREEA(0:3) UBIN BYTE UNAL CONSTANT INIT( 57, /* C_STEP */
      113    13824    1                                   8, /* C_EVAL */
      114    13825    1                                 28, /* C_MODIFY */
      115    13826    1                              29 ); /* C_MACTIVE */
      116    13827    1   DCL ATREET REDEF ATREEA CHAR(4);
      117    13828    1   DCL SKILLA(0:3) UBIN BYTE UNAL CONSTANT INIT( 30, /* C_OA */
      118    13829    1                                     32, /* C_OE */
      119    13830    1                                53, /* C_ONCALLS */
      120    13831    1                              54 ); /* C_ONNODES */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:38   
      121    13832    1   DCL SKILLT REDEF SKILLA CHAR(4);
      122    13833    1   DCL PARSE$ PTR SYMREF;                  /* X$PARSE WORK BUFFER */
      123    13834    1   DCL D_DCMDS SBIN SYMREF;                /* COMMANDS SYNTAX TREE */
      124    13835    1   DCL D_CCMDS UBIN SYMREF;                /* CONTINUED COMMANDS PARSE TREE */
      125    13836    1   DCL D_ACMDS UBIN SYMREF;                /* ATTACHMENT COMMANDS PARSE TREE */
      126    13837    1   DCL D_MTREE UBIN SYMREF;                /* INTERACTIVE MODIFY PARSE TREE */
      127    13838    1   DCL D_XDELTA BIT(1) ALIGNED SYMREF;     /* EXEC DELTA/USER DELTA FLAG */
      128    13839    1   DCL D_ATREE UBIN SYMREF;           /* DELTA ACTIVATION CHARACTER PARSE TREE */
      129    13840    1   DCL X$PARSE ENTRY(1) ALTRET;            /* X$PARSE */
      130    13841    1   DCL DDA$KILL1 ENTRY(0);                 /* KILLS A STORED COMMAND */
      131    13842    1   DCL DFA$KILL1 ENTRY(3);
      132    13843    1   DCL DDS$PROMPT ENTRY;                   /* PROMPT & READ USER'S COMMAND */
      133    13844    1   DCL DDS$PROMPTC ENTRY;             /* PROMPT & READ CONTINUED USER'S COMMAND */
      134    13845    1   DCL DDE$ERROR ENTRY(0);                 /* ERROR MSG REPORTER */
      135    13846    1   DCL DDD$BUMP_D$ ENTRY(1) ALTRET;        /* BUMPS S_D.D$ */
      136    13847    1   DCL DDS$DECIMAL ENTRY(2) ALTRET;        /* HANDLES DECIMALS NODE */
      137    13848    1   DCL DDS$STOREDA ENTRY(2) ALTRET;        /* COMMON STORED COMMAND CODE */
      138    13849    1   DCL DDS$ATTDIRA ENTRY(2) ALTRET;   /* ATTACHABLE | DIRECT COMMAND COMMON CODE */
      139    13850    1   DCL DDS$SET_C2D ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      140    13851    1   DCL DDS$SET_D2Q ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      141    13852    1   DCL DDS$SET_Q2D ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      142    13853    1   DCL DDS$VREFCOM ENTRY(2) ALTRET;        /* BUILDS DATA DESCRIPTOR */
      143    13854    1   DCL DDS$CNSNT ENTRY(4) ALTRET;          /* EVALUATES "CNSNT_REF" NODE */
      144    13855    1   DCL DUA$RUM_COMM ENTRY(0);              /* RECORDS COMMENTS FOR RUM MODE */
      145    13856    1   DCL DDS$BLD ENTRY(1) ALTRET;            /* COMMON BUILD ROUTINES */
      146    13857    1   DCL DDS$SUCCESS ENTRY(1);               /* U$ ROUTINE FOR X$PARSE */
      147    13858    1   DCL DDB$CHECK_ADDR ENTRY(2) ALTRET;
      148    13859    1   DCL DDR$BINTXT ENTRY(4);
      149    13860    1   DCL DDQ$WRITE ENTRY(2);
      150    13861        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:39   
      151    13862        /*D* NAME: DDS$SCAN
      152    13863             CALL: CALL DDS$SCAN
      153    13864             ENVIRONMENT: XDELTA OR USER DELTA.
      154    13865             INPUT: IMPLICIT REQUEST FOR DIRECT COMMAND.
      155    13866             OUTPUT: DIRECT COMMAND BUILT IN DIRECT COMMAND BUFFER.
      156    13867                     STORED COMMANDS ADDED TO STORED OMMAND BUFFERS ALONG
      157    13868                     THE WAY.
      158    13869             SCRATCH: DDS$PROMPT PLAYS WITH THE INPUT BUFFER.
      159    13870                      LOCAL AUTO.
      160    13871             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
      161    13872             DEVICE. THE COMMAND IS PARSED USING M$PARSE FACILITY.
      162    13873             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
      163    13874             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
      164    13875             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
      165    13876             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
      166    13877             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0.
      167    13878        */
      168    13879    1        SCAN1 = '0'B;                      /* DDS$SCAN ENTRY POINT */

  13879  1 000002   200053 450100                    STZ     SCAN1,,AUTO

      169    13880    1        SCAN2 = '0'B;

  13880  1 000003   200054 450100                    STZ     SCAN2,,AUTO

      170    13881    1        SEMI_OFFSET = 0;

  13881  1 000004   200056 450100                    STZ     SEMI_OFFSET,,AUTO

      171    13882    1        GOTO START;

  13882  1 000005   000022 710000 1                  TRA     START

      172    13883                                                /**/
      173    13884    1   DDS$SCAN1: ENTRY ALTRET;

  13884  1 000006   000000 700200 xent  DDS$SCAN1    TSX0  ! X66_AUTO_0
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:40   
         1 000007   000120 000000                    ZERO    80,0

      174    13885                                                /**/
      175    13886    1        SCAN1 = '1'B;                      /* DDS$SCAN1 ENTRY POINT */

  13886  1 000010   400000 236003                    LDQ     -131072,DU
         1 000011   200053 756100                    STQ     SCAN1,,AUTO

      176    13887    1        SCAN2 = '0'B;

  13887  1 000012   200054 450100                    STZ     SCAN2,,AUTO

      177    13888    1        SEMI_OFFSET = 0;

  13888  1 000013   200056 450100                    STZ     SEMI_OFFSET,,AUTO

      178    13889    1        GOTO START;

  13889  1 000014   000022 710000 1                  TRA     START

      179    13890
      180    13891    1   DDS$SCAN2: ENTRY ALTRET;                /* DDS$SCAN2 entry point */

  13891  1 000015   000000 700200 xent  DDS$SCAN2    TSX0  ! X66_AUTO_0
         1 000016   000120 000000                    ZERO    80,0

      181    13892
      182    13893    1        SCAN2 = '1'B;

  13893  1 000017   400000 236003                    LDQ     -131072,DU
         1 000020   200054 756100                    STQ     SCAN2,,AUTO

      183    13894    1        SCAN1 = '0'B;

  13894  1 000021   200053 450100                    STZ     SCAN1,,AUTO

      184    13895    1   START:
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:41   
      185    13896        /* SETUP THE PARSE CONTROL BLOCK FOR X$PARSE */
      186    13897    1        PCB = P_PCB;

  13897  1 000022   000100 100400       START        MLR     fill='000'O
         1 000023   000001 000070 0                  ADSC9   P_PCB                    cn=0,n=56
         1 000024   200003 000070                    ADSC9   PCB,,AUTO                cn=0,n=56

      187    13898    1        PCB.TEXT$ = ADDR( S_D.INPUT );

  13898  1 000025   000000 236000 xsym               LDQ     S_D$
         1 000026   000610 036003                    ADLQ    392,DU
         1 000027   200003 756100                    STQ     PCB,,AUTO

      188    13899    1        PCB.WORK$ = PARSE$;

  13899  1 000030   000000 236000 xsym               LDQ     PARSE$
         1 000031   200005 756100                    STQ     PCB+2,,AUTO

      189    13900    1        PCB.WKSZ = S_D.PARSIZE;

  13900  1 000032   000000 470400 xsym               LDP0    S_D$
         1 000033   001033 720100                    LXL0    539,,PR0
         1 000034   200010 740100                    STX0    PCB+5,,AUTO

      190    13901    1        PCB.U$$ = U$$;

  13901  1 000035   000000 236000 0                  LDQ     U$$
         1 000036   200007 756100                    STQ     PCB+4,,AUTO

      191    13902    1        S_D.REMACTIVE = S_D.MACTIVE;       /* FOR EVAL, MACTIVE BLD ROUTINES */

  13902  1 000037   000713 236100                    LDQ     459,,PR0
         1 000040   400000 376003                    ANQ     -131072,DU
         1 000041   000506 756100                    STQ     326,,PR0

      192    13903    1        S_D.ERROR_SYM$ = ADDR( NIL );

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:42   
  13903  1 000042   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000043   000032 756100                    STQ     26,,PR0

      193    13904    1        IF NOT S_D.MACTIVE

  13904  1 000044   000713 234100                    SZN     459,,PR0
         1 000045   000051 604000 1                  TMI     s:13907

      194    13905    1        THEN CALL DDS$SET_C2D;

  13905  1 000046   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000047   000000 701000 xent               TSX1    DDS$SET_C2D
         1 000050   000000 011000                    NOP     0

      195    13906        /* SET STORED FLAG AS NOT WORKING ON A STORED COMMAND */
      196    13907    1        S_D.STORED=0;

  13907  1 000051   000000 470400 xsym               LDP0    S_D$
         1 000052   000135 450100                    STZ     93,,PR0

      197    13908        /* READ THE COMMAND FROM THE CURRENT INPUT DEVICE */
      198    13909    1   PARSMORE:
      199    13910    1        S_D.RUM_COMMAND = '0'B;

  13910  1 000053   000000 470400 xsym  PARSMORE     LDP0    S_D$
         1 000054   000072 450100                    STZ     58,,PR0

      200    13911    1        MAERR = 0;

  13911  1 000055   200027 450100                    STZ     MAERR,,AUTO

      201    13912    1        S_D.SACT = '0'B;

  13912  1 000056   000501 450100                    STZ     321,,PR0

      202    13913    1        IF ( NOT SCAN1 AND NOT SCAN2 ) OR ( SCAN2 AND S_D.MACTIVE )

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:43   
  13913  1 000057   200053 234100                    SZN     SCAN1,,AUTO
         1 000060   000063 604000 1                  TMI     s:13913+4
         1 000061   200054 234100                    SZN     SCAN2,,AUTO
         1 000062   000067 605000 1                  TPL     s:13915
         1 000063   200054 234100                    SZN     SCAN2,,AUTO
         1 000064   000100 605000 1                  TPL     s:13919
         1 000065   000713 234100                    SZN     459,,PR0
         1 000066   000100 605000 1                  TPL     s:13919

      203    13914    2        THEN DO;                           /* PROMPT & GET COMMAND */

      204    13915    2             IF S_D.STORED ~= 0

  13915  1 000067   000135 235100                    LDA     93,,PR0
         1 000070   000075 600000 1                  TZE     s:13917

      205    13916    2             THEN CALL DDS$PROMPTC;

  13916  1 000071   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000072   000000 701000 xent               TSX1    DDS$PROMPTC
         1 000073   000000 011000                    NOP     0
         1 000074   000100 710000 1                  TRA     s:13919

      206    13917    2             ELSE CALL DDS$PROMPT;

  13917  1 000075   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000076   000000 701000 xent               TSX1    DDS$PROMPT
         1 000077   000000 011000                    NOP     0

      207    13918    2           END;                            /* PROMPT & GET COMMAND */

      208    13919    1        PCB.NCHARS = S_D.NCHARS;

  13919  1 000100   000000 470400 xsym               LDP0    S_D$
         1 000101   000065 235100                    LDA     53,,PR0
         1 000102   200014 755100                    STA     PCB+9,,AUTO

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:44   
      209    13920    1        IF S_D.SACT

  13920  1 000103   000501 234100                    SZN     321,,PR0
         1 000104   000231 605000 1                  TPL     s:13954

      210    13921    2        THEN DO;                           /* SPECIAL ACTIVATION CHARACTER MODE */

      211    13922    2             IF S_D.STORED ~= 0

  13922  1 000105   000135 235100                    LDA     93,,PR0
         1 000106   001407 601000 1                  TNZ     USERSY

      212    13923    2             THEN GOTO USERSY;             /* CANNOT ACTIVATE ON STORED CMD */
      213    13924    2             IF S_D.RUM_SKIP

  13924  1 000107   000051 234100                    SZN     41,,PR0
         1 000110   001424 604000 1                  TMI     USERSK

      214    13925    2             THEN GOTO USERSK;
      215    13926    2             S_D.MACTIVE = '0'B;

  13926  1 000111   000713 450100                    STZ     459,,PR0

      216    13927    2             PCB.ROOT$ = ADDR( D_ATREE );

  13927  1 000112   000000 236000 2                  LDQ     0
         1 000113   200004 756100                    STQ     PCB+1,,AUTO

      217    13928    2             S_D.QUALIFIED = '0'B;

  13928  1 000114   000712 450100                    STZ     458,,PR0

      218    13929    2             S_D.ERROR_SYM$ = ADDR( NIL );

  13929  1 000115   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000116   000032 756100                    STQ     26,,PR0

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:45   
      219    13930    2             S_D.ERROR = 0;

  13930  1 000117   000013 450100                    STZ     11,,PR0

      220    13931    2             S_D.IFSPEC$ = ADDR( NIL );

  13931  1 000120   000055 756100                    STQ     45,,PR0

      221    13932    2             CALL ATTDIR_INIT ALTRET( USERRERR );

  13932  1 000121   002417 701000 1                  TSX1    ATTDIR_INIT
         1 000122   001433 702000 1                  TSX2    USERRERR

      222    13933    2             CALL DDS$SET_D2Q;

  13933  1 000123   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000124   000000 701000 xent               TSX1    DDS$SET_D2Q
         1 000125   000000 011000                    NOP     0

      223    13934    2             CALL X$PARSE( PCB ) ALTRET( USERR0 );

  13934  1 000126   200003 630500                    EPPR0   PCB,,AUTO
         1 000127   200112 450500                    STP0    V+2,,AUTO
         1 000130   200112 630500                    EPPR0   V+2,,AUTO
         1 000131   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000132   000000 701000 xent               TSX1    X$PARSE
         1 000133   001316 702000 1                  TSX2    USERR0

      224    13935    2             NCMD$ = PCB.OUT$ -> POB.SUBLK$( 0 );

  13935  1 000134   200006 470500                    LDP0    PCB+3,,AUTO
         1 000135   000003 236100                    LDQ     3,,PR0
         1 000136   200024 756100                    STQ     NCMD$,,AUTO

      225    13936    2             S_D.NCMD$ = NCMD$;

  13936  1 000137   000000 471400 xsym               LDP1    S_D$
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:46   
         1 000140   104750 756100                    STQ     2536,,PR1

      226    13937    2             TEMPCODE = NCMD$ -> POB.CODE;

  13937  1 000141   200024 473500                    LDP3    NCMD$,,AUTO
         1 000142   300000 236100                    LDQ     0,,PR3
         1 000143   777777 376007                    ANQ     -1,DL
         1 000144   200026 756100                    STQ     TEMPCODE,,AUTO

      227    13938    2             CALL INDEX( IX, BINASC( TEMPCODE ), ATREET ) ALTRET( UDERR1 );

  13938  1 000145   000033 736000                    QLS     27
         1 000146   000001 276000 2                  ORQ     1
         1 000147   200112 756100                    STQ     V+2,,AUTO
         1 000150   000100 124400                    SCM     mask='000'O
         1 000151   000017 000004 0                  ADSC9   ATREEA                   cn=0,n=4
         1 000152   200112 000001                    ADSC9   V+2,,AUTO                cn=0,n=1
         1 000153   200025 000100                    ARG     IX,,AUTO
         1 000154   001377 606400 1                  TTN     UDERR1

      228    13939    3             DO CASE ( IX );

  13939  1 000155   200025 235100                    LDA     IX,,AUTO
         1 000156   000004 115007                    CMPA    4,DL
         1 000157   000161 602005 1                  TNC     s:13939+4,AL
         1 000160   000216 710000 1                  TRA     s:13951
         1 000161   000165 710000 1                  TRA     s:13941
         1 000162   000200 710000 1                  TRA     s:13945
         1 000163   000205 710000 1                  TRA     s:13947
         1 000164   000212 710000 1                  TRA     s:13949

      229    13940    3               CASE ( 0 );                 /* STEP */

      230    13941    3                  IF S_D.PATCH THEN GOTO USERPA;

  13941  1 000165   104754 234100                    SZN     2540,,PR1
         1 000166   001412 604000 1                  TMI     USERPA
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:47   

      231    13942    3                  IF S_D.RUM OR S_D.ANLZ THEN GOTO USERNDE;

  13942  1 000167   104755 234100                    SZN     2541,,PR1
         1 000170   001415 604000 1                  TMI     USERNDE
         1 000171   104756 234100                    SZN     2542,,PR1
         1 000172   001415 604000 1                  TMI     USERNDE

      232    13943    3                  CALL DDS$BLD( 57 ) ALTRET( USERRERR ); /* C_STEP */

  13943  1 000173   000003 630400 2                  EPPR0   3
         1 000174   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000175   000000 701000 xent               TSX1    DDS$BLD
         1 000176   001433 702000 1                  TSX2    USERRERR
         1 000177   000216 710000 1                  TRA     s:13951

      233    13944    3               CASE ( 1 );                 /* EVAL */

      234    13945    3                  CALL DDS$BLD( 8 ) ALTRET( USERRERR ); /* C_EVAL */

  13945  1 000200   000004 630400 2                  EPPR0   4
         1 000201   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000202   000000 701000 xent               TSX1    DDS$BLD
         1 000203   001433 702000 1                  TSX2    USERRERR
         1 000204   000216 710000 1                  TRA     s:13951

      235    13946    3               CASE ( 2 );                 /* MODIFY */

      236    13947    3                  CALL DDS$BLD( 28 ) ALTRET( USERRERR ); /* C_MODIFY */

  13947  1 000205   000006 630400 2                  EPPR0   6
         1 000206   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000207   000000 701000 xent               TSX1    DDS$BLD
         1 000210   001433 702000 1                  TSX2    USERRERR
         1 000211   000216 710000 1                  TRA     s:13951

      237    13948    3               CASE ( 3 );                 /* MACTIVE */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:48   

      238    13949    3                  CALL DDS$BLD( 69 ) ALTRET( USERRERR ); /* C_MACTIVE1 */

  13949  1 000212   000010 630400 2                  EPPR0   8
         1 000213   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000214   000000 701000 xent               TSX1    DDS$BLD
         1 000215   001433 702000 1                  TSX2    USERRERR

      239    13950    3               END;

      240    13951    2             S_D.LASTBLT$ -> ALL_ATTACH.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );

  13951  1 000216   000000 470400 xsym               LDP0    S_D$
         1 000217   000134 471500                    LDP1    92,,PR0
         1 000220   000134 236100                    LDQ     92,,PR0
         1 000221   000022 772000                    QRL     18
         1 000222   200112 756100                    STQ     V+2,,AUTO
         1 000223   000044 236100                    LDQ     36,,PR0
         1 000224   000022 772000                    QRL     18
         1 000225   200112 136100                    SBLQ    V+2,,AUTO
         1 000226   000000 620006                    EAX0    0,QL
         1 000227   100000 440100                    SXL0    0,,PR1

      241    13952    2             RETURN;

  13952  1 000230   000000 702200 xent               TSX2  ! X66_ARET

      242    13953    2           END;                            /* SPECIAL ACTIVATION CHARACTER MODE */
      243    13954    1        IF S_D.MACTIVE

  13954  1 000231   000713 234100                    SZN     459,,PR0
         1 000232   000366 605000 1                  TPL     s:14000

      244    13955    2        THEN DO;

      245    13956    2             PCB.ROOT$ = ADDR( D_MTREE );

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:49   
  13956  1 000233   000011 236000 2                  LDQ     9
         1 000234   200004 756100                    STQ     PCB+1,,AUTO

      246    13957    2             S_D.QUALIFIED = '0'B;

  13957  1 000235   000712 450100                    STZ     458,,PR0

      247    13958    2             S_D.ERROR_SYM$ = ADDR( NIL );

  13958  1 000236   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000237   000032 756100                    STQ     26,,PR0

      248    13959    2             S_D.ERROR = 0;

  13959  1 000240   000013 450100                    STZ     11,,PR0

      249    13960    2             S_D.IFSPEC$ = ADDR( NIL );

  13960  1 000241   000055 756100                    STQ     45,,PR0

      250    13961    2             CALL ATTDIR_INIT ALTRET( USERRERR );

  13961  1 000242   002417 701000 1                  TSX1    ATTDIR_INIT
         1 000243   001433 702000 1                  TSX2    USERRERR

      251    13962    2             CALL DDS$SET_D2Q;

  13962  1 000244   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000245   000000 701000 xent               TSX1    DDS$SET_D2Q
         1 000246   000000 011000                    NOP     0

      252    13963    2             IF SUBSTR( S_D.INPUT, 0, S_D.NCHARS ) = ' '

  13963  1 000247   000000 470400 xsym               LDP0    S_D$
         1 000250   000065 720100                    LXL0    53,,PR0
         1 000251   040000 106540                    CMPC    fill='040'O
         1 000252   000610 000010                    ADSC9   392,,PR0                 cn=0,n=*X0
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:50   
         1 000253   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000254   000264 601000 1                  TNZ     s:13970

      253    13964    3             THEN DO;

      254    13965    3                  IF S_D.RUM_SKIP

  13965  1 000255   000051 234100                    SZN     41,,PR0
         1 000256   001424 604000 1                  TMI     USERSK

      255    13966    3                  THEN GOTO USERSK;
      256    13967    3                  CALL DDS$BLD( 14 ) ALTRET( USERRERR ); /* C_MACLOSE */

  13967  1 000257   000013 630400 2                  EPPR0   11
         1 000260   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000261   000000 701000 xent               TSX1    DDS$BLD
         1 000262   001433 702000 1                  TSX2    USERRERR

      257    13968    3                END;

  13968  1 000263   000305 710000 1                  TRA     s:13977

      258    13969    3             ELSE DO;

      259    13970    3                  CALL X$PARSE( PCB ) ALTRET( BIGTREE );

  13970  1 000264   200003 631500                    EPPR1   PCB,,AUTO
         1 000265   200112 451500                    STP1    V+2,,AUTO
         1 000266   200112 630500                    EPPR0   V+2,,AUTO
         1 000267   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000270   000000 701000 xent               TSX1    X$PARSE
         1 000271   000320 702000 1                  TSX2    BIGTREE

      260    13971    3                  NCMD$ = PCB.OUT$;

  13971  1 000272   200006 236100                    LDQ     PCB+3,,AUTO
         1 000273   200024 756100                    STQ     NCMD$,,AUTO
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:51   

      261    13972    3                  S_D.NCMD$ = NCMD$;

  13972  1 000274   000000 470400 xsym               LDP0    S_D$
         1 000275   004750 756100                    STQ     2536,,PR0

      262    13973    3                  CALL DDS$BLD( 69 ) ALTRET( REMERR ); /* C_MACTIVE1 */

  13973  1 000276   000010 630400 2                  EPPR0   8
         1 000277   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000300   000000 701000 xent               TSX1    DDS$BLD
         1 000301   000327 702000 1                  TSX2    REMERR

      263    13974    3                  IF S_D.RUM_SKIP

  13974  1 000302   000000 470400 xsym               LDP0    S_D$
         1 000303   000051 234100                    SZN     41,,PR0
         1 000304   001424 604000 1                  TMI     USERSK

      264    13975    3                  THEN GOTO USERSK;
      265    13976    3                END;

      266    13977    2             S_D.LASTBLT$ -> ALL_ATTACH.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );

  13977  1 000305   000000 470400 xsym               LDP0    S_D$
         1 000306   000134 471500                    LDP1    92,,PR0
         1 000307   000134 236100                    LDQ     92,,PR0
         1 000310   000022 772000                    QRL     18
         1 000311   200112 756100                    STQ     V+2,,AUTO
         1 000312   000044 236100                    LDQ     36,,PR0
         1 000313   000022 772000                    QRL     18
         1 000314   200112 136100                    SBLQ    V+2,,AUTO
         1 000315   000000 620006                    EAX0    0,QL
         1 000316   100000 440100                    SXL0    0,,PR1

      267    13978    2             RETURN;

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:52   
  13978  1 000317   000000 702200 xent               TSX2  ! X66_ARET

      268    13979    2   BIGTREE:
      269    13980    2             IF SCAN2 OR PCB.ERROR.CODE ~= %E$SYNERR

  13980  1 000320   200054 234100       BIGTREE      SZN     SCAN2,,AUTO
         1 000321   001316 604000 1                  TMI     USERR0
         1 000322   200011 236100                    LDQ     PCB+6,,AUTO
         1 000323   377770 376007                    ANQ     131064,DL
         1 000324   000010 116007                    CMPQ    8,DL
         1 000325   001316 601000 1                  TNZ     USERR0

      270    13981    2             THEN GOTO USERR0;
      271    13982    2             ELSE GOTO RESETMA;

  13982  1 000326   000361 710000 1                  TRA     RESETMA

      272    13983    2   REMERR:
      273    13984    2             IF SCAN2

  13984  1 000327   200054 234100       REMERR       SZN     SCAN2,,AUTO
         1 000330   001433 604000 1                  TMI     USERRERR

      274    13985    2             THEN GOTO USERRERR;
      275    13986    2             MAERR = S_D.ERROR;

  13986  1 000331   000000 470400 xsym               LDP0    S_D$
         1 000332   000013 235100                    LDA     11,,PR0
         1 000333   200027 755100                    STA     MAERR,,AUTO

      276    13987    2             MAERR$ = S_D.ERROR_SYM$;

  13987  1 000334   000032 236100                    LDQ     26,,PR0
         1 000335   200030 756100                    STQ     MAERR$,,AUTO

      277    13988    2             IF MAERR$ ~= ADDR( NIL )

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:53   
  13988  1 000336   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000337   000357 600000 1                  TZE     s:13995

      278    13989    3             THEN DO;

      279    13990    3                  MAERRTEXTC = MAERR$ -> TEXT$C;

  13990  1 000340   200030 471500                    LDP1    MAERR$,,AUTO
         1 000341   100000 236100                    LDQ     0,,PR1
         1 000342   000033 772000                    QRL     27
         1 000343   000001 620006                    EAX0    1,QL
         1 000344   000100 100540                    MLR     fill='000'O
         1 000345   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 000346   200031 000100                    ADSC9   MAERRTEXTC,,AUTO         cn=0,n=64

      280    13991    3                  IF MAERRTEXTC.SIZE > LENGTHC( MAERRTEXTC.TEXT )

  13991  1 000347   200031 236100                    LDQ     MAERRTEXTC,,AUTO
         1 000350   777000 376003                    ANQ     -512,DU
         1 000351   100000 116003                    CMPQ    32768,DU
         1 000352   000355 602000 1                  TNC     s:13993

      281    13992    3                  THEN MAERRTEXTC.SIZE = LENGTHC( MAERRTEXTC.TEXT );

  13992  1 000353   077000 236003                    LDQ     32256,DU
         1 000354   200031 552140                    STBQ    MAERRTEXTC,'40'O,AUTO

      282    13993    3                  MAERR$ = ADDR( MAERRTEXTC );

  13993  1 000355   200031 633500                    EPPR3   MAERRTEXTC,,AUTO
         1 000356   200030 453500                    STP3    MAERR$,,AUTO

      283    13994    3                END;

      284    13995    2             MACHAR = PCB.HI_CHAR;

  13995  1 000357   200015 236100                    LDQ     PCB+10,,AUTO
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:54   
         1 000360   200051 756100                    STQ     MACHAR,,AUTO

      285    13996    2   RESETMA:
      286    13997    2             CALL DDS$SET_C2D;

  13997  1 000361   000002 631400 xsym  RESETMA      EPPR1   B_VECTNIL+2
         1 000362   000000 701000 xent               TSX1    DDS$SET_C2D
         1 000363   000000 011000                    NOP     0

      287    13998    2             S_D.MACTIVE = '0'B;

  13998  1 000364   000000 470400 xsym               LDP0    S_D$
         1 000365   000713 450100                    STZ     459,,PR0

      288    13999    2           END;

      289    14000    1        IF SCAN2

  14000  1 000366   200054 234100                    SZN     SCAN2,,AUTO
         1 000367   000572 605000 1                  TPL     s:14055

      290    14001    2        THEN DO;

      291    14002    2             PCB.ROOT$ = ADDR( D_ACMDS );

  14002  1 000370   000014 236000 2                  LDQ     12
         1 000371   200004 756100                    STQ     PCB+1,,AUTO

      292    14003    2             ATT_SIZE = S_D.ACMDS_SIZE;

  14003  1 000372   000511 235100                    LDA     329,,PR0
         1 000373   200057 755100                    STA     ATT_SIZE,,AUTO

      293    14004    2             S_D.INPUT = SUBSTR( S_D.ACMDS$ -> CHAR$ATT, S_D.ACMDS_OFF );

  14004  1 000374   000510 471500                    LDP1    328,,PR0
         1 000375   200057 236100                    LDQ     ATT_SIZE,,AUTO
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:55   
         1 000376   000507 136100                    SBLQ    327,,PR0
         1 000377   000507 235100                    LDA     327,,PR0
         1 000400   000000 620006                    EAX0    0,QL
         1 000401   040100 100545                    MLR     fill='040'O
         1 000402   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0
         1 000403   000610 000400                    ADSC9   392,,PR0                 cn=0,n=256

      294    14005    2             PCB.NCHARS = ATT_SIZE - S_D.ACMDS_OFF;

  14005  1 000404   200057 236100                    LDQ     ATT_SIZE,,AUTO
         1 000405   000507 136100                    SBLQ    327,,PR0
         1 000406   200014 756100                    STQ     PCB+9,,AUTO

      295    14006    2             S_D.QUALIFIED = '0'B;

  14006  1 000407   000712 450100                    STZ     458,,PR0

      296    14007    2             S_D.ERROR_SYM$ = ADDR( NIL );

  14007  1 000410   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000411   000032 756100                    STQ     26,,PR0

      297    14008    2             S_D.ERROR = 0;

  14008  1 000412   000013 450100                    STZ     11,,PR0

      298    14009    2             CALL DDS$SET_D2Q;

  14009  1 000413   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000414   000000 701000 xent               TSX1    DDS$SET_D2Q
         1 000415   000000 011000                    NOP     0

      299    14010    2             CALL X$PARSE( PCB ) ALTRET( USERR0 );

  14010  1 000416   200003 630500                    EPPR0   PCB,,AUTO
         1 000417   200112 450500                    STP0    V+2,,AUTO
         1 000420   200112 630500                    EPPR0   V+2,,AUTO
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:56   
         1 000421   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000422   000000 701000 xent               TSX1    X$PARSE
         1 000423   001316 702000 1                  TSX2    USERR0

      300    14011    2             NC$ = PCB.OUT$ -> POB.SUBLK$( 0 );

  14011  1 000424   200006 470500                    LDP0    PCB+3,,AUTO
         1 000425   000003 236100                    LDQ     3,,PR0
         1 000426   200022 756100                    STQ     NC$,,AUTO

      301    14012    2             NCMD$ = NC$ -> POB.SUBLK$( 0 );

  14012  1 000427   200022 471500                    LDP1    NC$,,AUTO
         1 000430   100003 236100                    LDQ     3,,PR1
         1 000431   200024 756100                    STQ     NCMD$,,AUTO

      302    14013    2             S_D.NCMD$ = NCMD$;

  14013  1 000432   000000 473400 xsym               LDP3    S_D$
         1 000433   304750 756100                    STQ     2536,,PR3

      303    14014    2             CALL SET_IF_SEMI;

  14014  1 000434   002353 701000 1                  TSX1    SET_IF_SEMI
         1 000435   000000 011000                    NOP     0

      304    14015    2             CALL ATTDIR_INIT ALTRET( USERRERR );

  14015  1 000436   002417 701000 1                  TSX1    ATTDIR_INIT
         1 000437   001433 702000 1                  TSX2    USERRERR

      305    14016    2             TEMPCODE = NCMD$ -> POB.CODE;

  14016  1 000440   200024 470500                    LDP0    NCMD$,,AUTO
         1 000441   000000 236100                    LDQ     0,,PR0
         1 000442   777777 376007                    ANQ     -1,DL
         1 000443   200026 756100                    STQ     TEMPCODE,,AUTO
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:57   

      306    14017    2             IF S_D.RUM_SKIP

  14017  1 000444   000000 471400 xsym               LDP1    S_D$
         1 000445   100051 234100                    SZN     41,,PR1
         1 000446   000461 605000 1                  TPL     s:14027

      307    14018    2             THEN IF NOT (

  14018  1 000447   000110 116007                    CMPQ    72,DL
         1 000450   000461 600000 1                  TZE     s:14027
         1 000451   000052 116007                    CMPQ    42,DL
         1 000452   000461 600000 1                  TZE     s:14027
         1 000453   000047 116007                    CMPQ    39,DL
         1 000454   000461 600000 1                  TZE     s:14027
         1 000455   000013 116007                    CMPQ    11,DL
         1 000456   000461 600000 1                  TZE     s:14027
         1 000457   000072 116007                    CMPQ    58,DL
         1 000460   001424 601000 1                  TNZ     USERSK

      308    14019    2                    ( TEMPCODE = 72 ) OR /* C_RUM */
      309    14020    2                    ( TEMPCODE = 42 ) OR /* C_READ */
      310    14021    2                    ( TEMPCODE = 39 ) OR /* C_QUIT */
      311    14022    2                    ( TEMPCODE = 11 ) OR /* C_GOTO */
      312    14023    2                    ( TEMPCODE = 58 ) ) /* C_ALIB */
      313    14024    2                  THEN GOTO USERSK;
      314    14025                                      /* Check for multiple command don't want to allow
      315    14026                                         unless it is the last multiple command. */
      316    14027    2             IF (( TEMPCODE = 78) OR  /* C_DBOOT */

  14027  1 000461   000116 116007                    CMPQ    78,DL
         1 000462   000473 600000 1                  TZE     s:14027+10
         1 000463   000106 116007                    CMPQ    70,DL
         1 000464   000473 600000 1                  TZE     s:14027+10
         1 000465   000071 116007                    CMPQ    57,DL
         1 000466   000473 600000 1                  TZE     s:14027+10
         1 000467   000075 116007                    CMPQ    61,DL
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:58   
         1 000470   000473 600000 1                  TZE     s:14027+10
         1 000471   000104 116007                    CMPQ    68,DL
         1 000472   000550 601000 1                  TNZ     s:14049
         1 000473   200056 235100                    LDA     SEMI_OFFSET,,AUTO
         1 000474   000550 600000 1                  TZE     s:14049
         1 000475   100512 235100                    LDA     330,,PR1
         1 000476   000550 601000 1                  TNZ     s:14049

      317    14028    2               ( TEMPCODE = 70 ) OR    /* C_MINI */
      318    14029    2               ( TEMPCODE = 57 ) OR    /* C_STEP */
      319    14030    2               ( TEMPCODE = 61) OR    /* C_TBOOT */
      320    14031    2               ( TEMPCODE = 68  ))      /* C_XEQ */
      321    14032    2               AND SEMI_OFFSET ~= 0        /* not last command */
      322    14033    2               AND S_D.DO_ATTACH = 0       /* multiple command, not attachment */
      323    14034    3             THEN DO;

      324    14035    4                  DO CASE ( TEMPCODE );

  14035  1 000477   000071 136007                    SBLQ    57,DL
         1 000500   000026 116007                    CMPQ    22,DL
         1 000501   000503 602006 1                  TNC     s:14035+4,QL
         1 000502   000547 710000 1                  TRA     s:14047
         1 000503   000537 710000 1                  TRA     s:14041
         1 000504   000547 710000 1                  TRA     s:14047
         1 000505   000547 710000 1                  TRA     s:14047
         1 000506   000547 710000 1                  TRA     s:14047
         1 000507   000542 710000 1                  TRA     s:14043
         1 000510   000547 710000 1                  TRA     s:14047
         1 000511   000547 710000 1                  TRA     s:14047
         1 000512   000547 710000 1                  TRA     s:14047
         1 000513   000547 710000 1                  TRA     s:14047
         1 000514   000547 710000 1                  TRA     s:14047
         1 000515   000547 710000 1                  TRA     s:14047
         1 000516   000545 710000 1                  TRA     s:14045
         1 000517   000547 710000 1                  TRA     s:14047
         1 000520   000534 710000 1                  TRA     s:14039
         1 000521   000547 710000 1                  TRA     s:14047
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:59   
         1 000522   000547 710000 1                  TRA     s:14047
         1 000523   000547 710000 1                  TRA     s:14047
         1 000524   000547 710000 1                  TRA     s:14047
         1 000525   000547 710000 1                  TRA     s:14047
         1 000526   000547 710000 1                  TRA     s:14047
         1 000527   000547 710000 1                  TRA     s:14047
         1 000530   000531 710000 1                  TRA     s:14037

      325    14036    4                    CASE ( 78 );      /* C_DBOOT */

      326    14037    4                       S_D.ERROR = 241; /* E@DBOOT_NOTALLOWED */

  14037  1 000531   000361 235007                    LDA     241,DL
         1 000532   100013 755100                    STA     11,,PR1
         1 000533   000547 710000 1                  TRA     s:14047

      327    14038    4                    CASE ( 70 );       /* C_MINI */

      328    14039    4                       S_D.ERROR = 242; /* E@MINI_NOTALLOWED */

  14039  1 000534   000362 235007                    LDA     242,DL
         1 000535   100013 755100                    STA     11,,PR1
         1 000536   000547 710000 1                  TRA     s:14047

      329    14040    4                    CASE ( 57 );       /* C_STEP */

      330    14041    4                       S_D.ERROR = 243; /* E@STEP_NOTALLOWED */

  14041  1 000537   000363 235007                    LDA     243,DL
         1 000540   100013 755100                    STA     11,,PR1
         1 000541   000547 710000 1                  TRA     s:14047

      331    14042    4                    CASE ( 61 );      /* C_TBOOT */

      332    14043    4                       S_D.ERROR = 244; /* E@TBOOT_NOTALLOWED */

  14043  1 000542   000364 235007                    LDA     244,DL
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:60   
         1 000543   100013 755100                    STA     11,,PR1
         1 000544   000547 710000 1                  TRA     s:14047

      333    14044    4                    CASE ( 68 );        /* C_XEQ */

      334    14045    4                       S_D.ERROR = 245; /* E@XEQ_NOTALLOWED */

  14045  1 000545   000365 235007                    LDA     245,DL
         1 000546   100013 755100                    STA     11,,PR1

      335    14046    4                    END;

      336    14047    3                  GOTO USERRERR;

  14047  1 000547   001433 710000 1                  TRA     USERRERR

      337    14048    3                END;
      338    14049    2             CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );

  14049  1 000550   200026 633500                    EPPR3   TEMPCODE,,AUTO
         1 000551   200112 453500                    STP3    V+2,,AUTO
         1 000552   200112 630500                    EPPR0   V+2,,AUTO
         1 000553   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000554   000000 701000 xent               TSX1    DDS$BLD
         1 000555   001433 702000 1                  TSX2    USERRERR

      339    14050    2             IF SEMI_OFFSET ~= 0

  14050  1 000556   200056 235100                    LDA     SEMI_OFFSET,,AUTO
         1 000557   000566 600000 1                  TZE     s:14052

      340    14051    2             THEN S_D.ACMDS_OFF = S_D.ACMDS_OFF + SEMI_OFFSET + 1;

  14051  1 000560   000000 470400 xsym               LDP0    S_D$
         1 000561   000507 236100                    LDQ     327,,PR0
         1 000562   200056 036100                    ADLQ    SEMI_OFFSET,,AUTO
         1 000563   000001 036007                    ADLQ    1,DL
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:61   
         1 000564   000507 756100                    STQ     327,,PR0
         1 000565   000571 710000 1                  TRA     s:14053

      341    14052    2             ELSE S_D.ACMDS_OFF = S_D.ACMDS_SIZE;

  14052  1 000566   000000 470400 xsym               LDP0    S_D$
         1 000567   000511 235100                    LDA     329,,PR0
         1 000570   000507 755100                    STA     327,,PR0

      342    14053    2             RETURN;

  14053  1 000571   000000 702200 xent               TSX2  ! X66_ARET

      343    14054    2           END;
      344    14055    1        IF SUBSTR( S_D.INPUT, 0, S_D.NCHARS ) = ' '

  14055  1 000572   000065 720100                    LXL0    53,,PR0
         1 000573   040000 106540                    CMPC    fill='040'O
         1 000574   000610 000010                    ADSC9   392,,PR0                 cn=0,n=*X0
         1 000575   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000576   000610 601000 1                  TNZ     s:14066

      345    14056    1        THEN IF SCAN1

  14056  1 000577   200053 234100                    SZN     SCAN1,,AUTO
         1 000600   001420 604000 1                  TMI     USERNU

      346    14057    1             THEN GOTO USERNU;
      347    14058    1             ELSE IF S_D.STORED = 0

  14058  1 000601   000135 235100                    LDA     93,,PR0
         1 000602   000053 600000 1                  TZE     PARSMORE

      348    14059    1                  THEN GOTO PARSMORE;      /* RE-PROMPT & TRY AGAIN */
      349    14060    2                  ELSE DO;       /* IMPLIED DONE WITH CONTINUED STORED COMMAND */

      350    14061    2                       IF S_D.STORED > S_D.FIXLAST
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:62   

  14061  1 000603   000135 236100                    LDQ     93,,PR0
         1 000604   000047 116100                    CMPQ    39,,PR0
         1 000605   000607 604400 1                  TMOZ    s:14063

      351    14062    2                       THEN S_D.FIXLAST = S_D.STORED;

  14062  1 000606   000047 756100                    STQ     39,,PR0

      352    14063    2                       GOTO START;

  14063  1 000607   000022 710000 1                  TRA     START

      353    14064    2                     END;
      354    14065        /* Call X$PARSE to see what we got */
      355    14066    1        S_D.QUALIFIED = '0'B;

  14066  1 000610   000712 450100                    STZ     458,,PR0

      356    14067    1        CALL DDS$SET_D2Q;

  14067  1 000611   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000612   000000 701000 xent               TSX1    DDS$SET_D2Q
         1 000613   000000 011000                    NOP     0

      357    14068    1        S_D.ERROR_SYM$ = ADDR(NIL);

  14068  1 000614   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000615   000000 470400 xsym               LDP0    S_D$
         1 000616   000032 756100                    STQ     26,,PR0

      358    14069    1        S_D.ERROR = 0;

  14069  1 000617   000013 450100                    STZ     11,,PR0

      359    14070    1        IF S_D.STORED = 0

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:63   
  14070  1 000620   000135 235100                    LDA     93,,PR0
         1 000621   001133 601000 1                  TNZ     s:14159

      360    14071    2        THEN DO;                           /* Initial stored or direct command */

      361    14072    2             PCB.ROOT$ = ADDR( D_DCMDS );

  14072  1 000622   000015 236000 2                  LDQ     13
         1 000623   200004 756100                    STQ     PCB+1,,AUTO

      362    14073    2             CALL X$PARSE( PCB ) ALTRET( USERR0 );

  14073  1 000624   200003 631500                    EPPR1   PCB,,AUTO
         1 000625   200112 451500                    STP1    V+2,,AUTO
         1 000626   200112 630500                    EPPR0   V+2,,AUTO
         1 000627   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000630   000000 701000 xent               TSX1    X$PARSE
         1 000631   001316 702000 1                  TSX2    USERR0

      363    14074    2             NC$ = PCB.OUT$ -> POB.SUBLK$( 0 );

  14074  1 000632   200006 470500                    LDP0    PCB+3,,AUTO
         1 000633   000003 236100                    LDQ     3,,PR0
         1 000634   200022 756100                    STQ     NC$,,AUTO

      364    14075    2             IF NC$ -> POB.CODE = 55 /* C@STORED_CMD */

  14075  1 000635   200022 471500                    LDP1    NC$,,AUTO
         1 000636   100000 720100                    LXL0    0,,PR1
         1 000637   000067 100003                    CMPX0   55,DU
         1 000640   001035 601000 1                  TNZ     s:14122

      365    14076    3             THEN DO;                      /* Stored command */

      366    14077    3                  NCMD$ = NC$ -> POB.SUBLK$( 0 );

  14077  1 000641   100003 236100                    LDQ     3,,PR1
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:64   
         1 000642   200024 756100                    STQ     NCMD$,,AUTO

      367    14078    3                  IF NC$ -> POB.NSB > 1

  14078  1 000643   100001 220100                    LDX0    1,,PR1
         1 000644   000002 100003                    CMPX0   2,DU
         1 000645   000666 602000 1                  TNC     s:14085

      368    14079    4                  THEN DO;

      369    14080    4                       CALL DDS$DECIMAL( NCMD$, TEMPID ) ALTRET( USERRERR );

  14080  1 000646   200021 633500                    EPPR3   TEMPID,,AUTO
         1 000647   200113 453500                    STP3    V+3,,AUTO
         1 000650   200024 634500                    EPPR4   NCMD$,,AUTO
         1 000651   200112 454500                    STP4    V+2,,AUTO
         1 000652   200112 630500                    EPPR0   V+2,,AUTO
         1 000653   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000654   000000 701000 xent               TSX1    DDS$DECIMAL
         1 000655   001433 702000 1                  TSX2    USERRERR

      370    14081    4                       IF ( TEMPID < 1 ) OR ( TEMPID > (SIZEW(S_D.FIXCOM)/SIZEW(S_D.
             14081                                FIXCOM(0)))-1 )

  14081  1 000656   200021 235100                    LDA     TEMPID,,AUTO
         1 000657   001373 604400 1                  TMOZ    USERR1
         1 000660   000453 115007                    CMPA    299,DL
         1 000661   001373 605400 1                  TPNZ    USERR1

      371    14082    4                       THEN GOTO USERR1;
      372    14083    4                       NCMD$ = NC$ -> POB.SUBLK$( 1 );

  14083  1 000662   200022 470500                    LDP0    NC$,,AUTO
         1 000663   000004 236100                    LDQ     4,,PR0
         1 000664   200024 756100                    STQ     NCMD$,,AUTO

      373    14084    4                     END;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:65   

  14084  1 000665   000670 710000 1                  TRA     s:14086

      374    14085    3                  ELSE TEMPID = -1;

  14085  1 000666   000001 335007                    LCA     1,DL
         1 000667   200021 755100                    STA     TEMPID,,AUTO

      375    14086    3                  CALL SET_TRAIL_SEMI;

  14086  1 000670   002322 701000 1                  TSX1    SET_TRAIL_SEMI
         1 000671   000000 011000                    NOP     0

      376    14087    3                  IF TRAIL_SEMI

  14087  1 000672   200055 234100                    SZN     TRAIL_SEMI,,AUTO
         1 000673   000676 605000 1                  TPL     s:14090

      377    14088    3                  THEN IF SCAN1            /* Continuation */

  14088  1 000674   200053 234100                    SZN     SCAN1,,AUTO
         1 000675   001403 604000 1                  TMI     UDERNC

      378    14089    3                       THEN GOTO UDERNC;
      379    14090    3                  S_D.NCMD$ = NCMD$;

  14090  1 000676   200024 236100                    LDQ     NCMD$,,AUTO
         1 000677   000000 470400 xsym               LDP0    S_D$
         1 000700   004750 756100                    STQ     2536,,PR0

      380    14091    3                  CALL SET_IF_SEMI;

  14091  1 000701   002353 701000 1                  TSX1    SET_IF_SEMI
         1 000702   000000 011000                    NOP     0

      381    14092    3                  TEMPCODE = NCMD$ -> POB.CODE;

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:66   
  14092  1 000703   200024 470500                    LDP0    NCMD$,,AUTO
         1 000704   000000 236100                    LDQ     0,,PR0
         1 000705   777777 376007                    ANQ     -1,DL
         1 000706   200026 756100                    STQ     TEMPCODE,,AUTO

      382    14093    3                  IF S_D.RUM_SKIP

  14093  1 000707   000000 471400 xsym               LDP1    S_D$
         1 000710   100051 234100                    SZN     41,,PR1
         1 000711   001424 604000 1                  TMI     USERSK

      383    14094    3                  THEN GOTO USERSK;
      384    14095    3                  IF TEMPCODE = 67     /* C_WHEN */

  14095  1 000712   000103 116007                    CMPQ    67,DL
         1 000713   000723 601000 1                  TNZ     s:14102

      385    14096    4                  THEN DO;

      386    14097    4                       IF D_XDELTA THEN GOTO USERR7;

  14097  1 000714   000000 234000 xsym               SZN     D_XDELTA
         1 000715   001430 604000 1                  TMI     USERR7

      387    14098    4                       CALL ATTDIR_INIT ALTRET( USERRERR );

  14098  1 000716   002417 701000 1                  TSX1    ATTDIR_INIT
         1 000717   001433 702000 1                  TSX2    USERRERR

      388    14099    4                       CALL DDS$BLD_WHEN ALTRET( USERRERR );

  14099  1 000720   001514 701000 1                  TSX1    DDS$BLD_WHEN
         1 000721   001433 702000 1                  TSX2    USERRERR

      389    14100    4                     END;

  14100  1 000722   000734 710000 1                  TRA     s:14106
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:67   

      390    14101    4                  ELSE DO;

      391    14102    4                       CALL STORED_INIT ALTRET( USERRERR );

  14102  1 000723   002450 701000 1                  TSX1    STORED_INIT
         1 000724   001433 702000 1                  TSX2    USERRERR

      392    14103    4                       CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );

  14103  1 000725   200026 630500                    EPPR0   TEMPCODE,,AUTO
         1 000726   200112 450500                    STP0    V+2,,AUTO
         1 000727   200112 630500                    EPPR0   V+2,,AUTO
         1 000730   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000731   000000 701000 xent               TSX1    DDS$BLD
         1 000732   001433 702000 1                  TSX2    USERRERR

      393    14104    4                       VCPOS = 0;

  14104  1 000733   200061 450100                    STZ     VCPOS,,AUTO

      394    14105    4                     END;

      395    14106    3                  S_D.LASTBLT$ -> AT_FIRST.TEXT_OFFSET = POFFC( S_D.D$, S_D.LASTBLT$ )
             14106                           ;

  14106  1 000734   000000 470400 xsym               LDP0    S_D$
         1 000735   000134 471500                    LDP1    92,,PR0
         1 000736   000134 236100                    LDQ     92,,PR0
         1 000737   000020 772000                    QRL     16
         1 000740   200112 756100                    STQ     V+2,,AUTO
         1 000741   000044 236100                    LDQ     36,,PR0
         1 000742   000020 772000                    QRL     16
         1 000743   200112 136100                    SBLQ    V+2,,AUTO
         1 000744   000000 620006                    EAX0    0,QL
         1 000745   100006 740100                    STX0    6,,PR1

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:68   
      396    14107    3                  IF S_D.IFSPEC$ ~= ADDR(NIL)

  14107  1 000746   000055 236100                    LDQ     45,,PR0
         1 000747   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000750   000755 600000 1                  TZE     s:14109

      397    14108    3                  THEN S_D.LASTBLT$ -> AT_FIRST.IF_OFFSET = S_D.IFSPEC$ -> POB.CPOS;

  14108  1 000751   000134 471500                    LDP1    92,,PR0
         1 000752   000055 473500                    LDP3    45,,PR0
         1 000753   300002 720100                    LXL0    2,,PR3
         1 000754   100007 440100                    SXL0    7,,PR1

      398    14109    3                  IF SEMI_OFFSET ~= 0

  14109  1 000755   200056 235100                    LDA     SEMI_OFFSET,,AUTO
         1 000756   000762 600000 1                  TZE     s:14111

      399    14110    3                  THEN S_D.LASTBLT$ -> AT_FIRST.ATT_OFFSET = SEMI_OFFSET + 1;

  14110  1 000757   000134 471500                    LDP1    92,,PR0
         1 000760   000001 620005                    EAX0    1,AL
         1 000761   100007 740100                    STX0    7,,PR1

      400    14111    3                  ATT_SIZE = S_D.NCHARS;

  14111  1 000762   000065 235100                    LDA     53,,PR0
         1 000763   200057 755100                    STA     ATT_SIZE,,AUTO

      401    14112    3                  S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE = ATT_SIZE ;

  14112  1 000764   000134 471500                    LDP1    92,,PR0
         1 000765   000000 620005                    EAX0    0,AL
         1 000766   100006 440100                    SXL0    6,,PR1

      402    14113    3                  ATTEXT$ = S_D.D$;

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:69   
  14113  1 000767   000044 236100                    LDQ     36,,PR0
         1 000770   200060 756100                    STQ     ATTEXT$,,AUTO

      403    14114    3                  CALL DDD$BUMP_D$( (S_D.NCHARS+3)/4 ) ALTRET( USERRERR );

  14114  1 000771   000065 236100                    LDQ     53,,PR0
         1 000772   000003 036007                    ADLQ    3,DL
         1 000773   000004 506007                    DIV     4,DL
         1 000774   200112 756100                    STQ     V+2,,AUTO
         1 000775   200112 631500                    EPPR1   V+2,,AUTO
         1 000776   200113 451500                    STP1    V+3,,AUTO
         1 000777   200113 630500                    EPPR0   V+3,,AUTO
         1 001000   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001001   000000 701000 xent               TSX1    DDD$BUMP_D$
         1 001002   001433 702000 1                  TSX2    USERRERR

      404    14115    3                  ATTEXT$ -> CHAR$ATT = S_D.INPUT;

  14115  1 001003   000000 470400 xsym               LDP0    S_D$
         1 001004   200060 471500                    LDP1    ATTEXT$,,AUTO
         1 001005   200057 720100                    LXL0    ATT_SIZE,,AUTO
         1 001006   040140 100500                    MLR     fill='040'O
         1 001007   000610 000400                    ADSC9   392,,PR0                 cn=0,n=256
         1 001010   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      405    14116    3                  S_D.LASTBLT$ -> AT_FIRST.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );

  14116  1 001011   000134 473500                    LDP3    92,,PR0
         1 001012   000134 236100                    LDQ     92,,PR0
         1 001013   000022 772000                    QRL     18
         1 001014   200112 756100                    STQ     V+2,,AUTO
         1 001015   000044 236100                    LDQ     36,,PR0
         1 001016   000022 772000                    QRL     18
         1 001017   200112 136100                    SBLQ    V+2,,AUTO
         1 001020   000000 621006                    EAX1    0,QL
         1 001021   300000 441100                    SXL1    0,,PR3

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:70   
      406    14117    3                  S_D.VARNEXT$ = S_D.D$;

  14117  1 001022   000044 236100                    LDQ     36,,PR0
         1 001023   000033 756100                    STQ     27,,PR0

      407    14118    3                  S_D.FIXCOM.TAL( S_D.STORED ) = S_D.LASTBLT$ -> AT_FIRST.LENGTH;

  14118  1 001024   000135 236100                    LDQ     93,,PR0
         1 001025   000003 402007                    MPY     3,DL
         1 001026   000001 736000                    QLS     1
         1 001027   000134 473500                    LDP3    92,,PR0
         1 001030   300000 721100                    LXL1    0,,PR3
         1 001031   001212 441106                    SXL1    650,QL,PR0

      408    14119    3                  IF TRAIL_SEMI

  14119  1 001032   200055 234100                    SZN     TRAIL_SEMI,,AUTO
         1 001033   000053 604000 1                  TMI     PARSMORE

      409    14120    3                  THEN GOTO PARSMORE;
      410    14121    3                END;                       /* Stored command */

  14121  1 001034   001257 710000 1                  TRA     s:14180

      411    14122    2             ELSE IF NC$ -> POB.CODE = 56 /* C@DIRECT_CMD */

  14122  1 001035   000070 100003                    CMPX0   56,DU
         1 001036   001117 601000 1                  TNZ     s:14148

      412    14123    3                  THEN DO;                 /* Direct command */

      413    14124    3                       NCMD$ = NC$ -> POB.SUBLK$( 0 );

  14124  1 001037   100003 236100                    LDQ     3,,PR1
         1 001040   200024 756100                    STQ     NCMD$,,AUTO

      414    14125    3                       S_D.NCMD$ = NCMD$;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:71   

  14125  1 001041   000000 473400 xsym               LDP3    S_D$
         1 001042   304750 756100                    STQ     2536,,PR3

      415    14126    3                       CALL SET_TRAIL_SEMI;

  14126  1 001043   002322 701000 1                  TSX1    SET_TRAIL_SEMI
         1 001044   000000 011000                    NOP     0

      416    14127    3                       IF TRAIL_SEMI

  14127  1 001045   200055 234100                    SZN     TRAIL_SEMI,,AUTO
         1 001046   001403 604000 1                  TMI     UDERNC

      417    14128    3                       THEN GOTO UDERNC;   /* Continuation */
      418    14129    3                       CALL SET_IF_SEMI;

  14129  1 001047   002353 701000 1                  TSX1    SET_IF_SEMI
         1 001050   000000 011000                    NOP     0

      419    14130    3                       CALL ATTDIR_INIT ALTRET( USERRERR );

  14130  1 001051   002417 701000 1                  TSX1    ATTDIR_INIT
         1 001052   001433 702000 1                  TSX2    USERRERR

      420    14131    3                       TEMPCODE = NCMD$ -> POB.CODE;

  14131  1 001053   200024 470500                    LDP0    NCMD$,,AUTO
         1 001054   000000 236100                    LDQ     0,,PR0
         1 001055   777777 376007                    ANQ     -1,DL
         1 001056   200026 756100                    STQ     TEMPCODE,,AUTO

      421    14132    3                       IF S_D.RUM_SKIP

  14132  1 001057   000000 471400 xsym               LDP1    S_D$
         1 001060   100051 234100                    SZN     41,,PR1
         1 001061   001074 605000 1                  TPL     s:14140
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:72   

      422    14133    3                       THEN IF NOT (

  14133  1 001062   000110 116007                    CMPQ    72,DL
         1 001063   001074 600000 1                  TZE     s:14140
         1 001064   000052 116007                    CMPQ    42,DL
         1 001065   001074 600000 1                  TZE     s:14140
         1 001066   000047 116007                    CMPQ    39,DL
         1 001067   001074 600000 1                  TZE     s:14140
         1 001070   000013 116007                    CMPQ    11,DL
         1 001071   001074 600000 1                  TZE     s:14140
         1 001072   000072 116007                    CMPQ    58,DL
         1 001073   001424 601000 1                  TNZ     USERSK

      423    14134    3                              ( TEMPCODE = 72 ) OR /* C_RUM */
      424    14135    3                              ( TEMPCODE = 42 ) OR /* C_READ */
      425    14136    3                              ( TEMPCODE = 39 ) OR /* C_QUIT */
      426    14137    3                              ( TEMPCODE = 11 ) OR /* C_GOTO */
      427    14138    3                              ( TEMPCODE = 58 ) ) /* C_ALIB */
      428    14139    3                            THEN GOTO USERSK;
      429    14140    3                       CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );

  14140  1 001074   200026 633500                    EPPR3   TEMPCODE,,AUTO
         1 001075   200112 453500                    STP3    V+2,,AUTO
         1 001076   200112 630500                    EPPR0   V+2,,AUTO
         1 001077   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001100   000000 701000 xent               TSX1    DDS$BLD
         1 001101   001433 702000 1                  TSX2    USERRERR

      430    14141    3                       IF SEMI_OFFSET ~= 0

  14141  1 001102   200056 235100                    LDA     SEMI_OFFSET,,AUTO
         1 001103   001257 600000 1                  TZE     s:14180

      431    14142    4                       THEN DO;

      432    14143    4                            S_D.DIRECT_TEXT = SUBSTR( S_D.INPUT, SEMI_OFFSET + 1 );
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:73   

  14143  1 001104   777400 620005                    EAX0    -256,AL
         1 001105   777777 660003                    ERX0    -1,DU
         1 001106   000000 470400 xsym               LDP0    S_D$
         1 001107   040100 100545                    MLR     fill='040'O
         1 001110   000610 200010                    ADSC9   392,A,PR0                cn=1,n=*X0
         1 001111   006335 000400                    ADSC9   3293,,PR0                cn=0,n=256

      433    14144    4                            S_D.DIRECT_SIZE = S_D.NCHARS - SEMI_OFFSET;

  14144  1 001112   000065 236100                    LDQ     53,,PR0
         1 001113   200056 136100                    SBLQ    SEMI_OFFSET,,AUTO
         1 001114   004675 756100                    STQ     2493,,PR0

      434    14145    4                            S_D.DIRECT_OFF = 0;

  14145  1 001115   004676 450100                    STZ     2494,,PR0

      435    14146    4                          END;

      436    14147    3                     END;                  /* Direct command */

  14147  1 001116   001257 710000 1                  TRA     s:14180

      437    14148    2                  ELSE IF NC$ -> POB.CODE = 23 /* C_COMMENTS */

  14148  1 001117   000027 100003                    CMPX0   23,DU
         1 001120   001377 601000 1                  TNZ     UDERR1

      438    14149    3                       THEN DO;            /* Command is comments only */

      439    14150    3                            IF S_D.RUM

  14150  1 001121   000000 473400 xsym               LDP3    S_D$
         1 001122   304755 234100                    SZN     2541,,PR3
         1 001123   001130 605000 1                  TPL     s:14152

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:74   
      440    14151    3                            THEN CALL DUA$RUM_COMM;

  14151  1 001124   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001125   000000 701000 xent               TSX1    DUA$RUM_COMM
         1 001126   000000 011000                    NOP     0
         1 001127   001132 710000 1                  TRA     s:14154

      441    14152    3                            ELSE IF SCAN1

  14152  1 001130   200053 234100                    SZN     SCAN1,,AUTO
         1 001131   001420 604000 1                  TMI     USERNU

      442    14153    3                                 THEN GOTO USERNU;
      443    14154    3                            GOTO PARSMORE;

  14154  1 001132   000053 710000 1                  TRA     PARSMORE

      444    14155    3                          END;             /* Command is comments only */
      445    14156    2                       ELSE GOTO UDERR1;   /* Unknown code returned */
      446    14157    2           END;                            /* Initial stored or direct command */
      447    14158    2        ELSE DO;                           /* Continuation to a stored command */

      448    14159    2             PCB.ROOT$ = ADDR( D_CCMDS );

  14159  1 001133   000016 236000 2                  LDQ     14
         1 001134   200004 756100                    STQ     PCB+1,,AUTO

      449    14160    2             CALL X$PARSE( PCB ) ALTRET( USERR0A );

  14160  1 001135   200003 631500                    EPPR1   PCB,,AUTO
         1 001136   200112 451500                    STP1    V+2,,AUTO
         1 001137   200112 630500                    EPPR0   V+2,,AUTO
         1 001140   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001141   000000 701000 xent               TSX1    X$PARSE
         1 001142   001272 702000 1                  TSX2    USERR0A

      450    14161    2             NC$ = PCB.OUT$ -> POB.SUBLK$( 0 );
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:75   

  14161  1 001143   200006 470500                    LDP0    PCB+3,,AUTO
         1 001144   000003 236100                    LDQ     3,,PR0
         1 001145   200022 756100                    STQ     NC$,,AUTO

      451    14162    2             NCMD$ = NC$ -> POB.SUBLK$( 0 );

  14162  1 001146   200022 471500                    LDP1    NC$,,AUTO
         1 001147   100003 236100                    LDQ     3,,PR1
         1 001150   200024 756100                    STQ     NCMD$,,AUTO

      452    14163    2             S_D.NCMD$ = NCMD$;

  14163  1 001151   000000 473400 xsym               LDP3    S_D$
         1 001152   304750 756100                    STQ     2536,,PR3

      453    14164    2             ATT_SIZE = S_D.NCHARS;

  14164  1 001153   300065 235100                    LDA     53,,PR3
         1 001154   200057 755100                    STA     ATT_SIZE,,AUTO

      454    14165    2            ATTEXT$ = PINCRC( S_D.LASTBLT$, S_D.LASTBLT$ -> AT_FIRST.TEXT_OFFSET + S_D
             14165                      .LASTBLT$ -> AT_FIRST.TEXT_SIZE );

  14165  1 001155   300134 474500                    LDP4    92,,PR3
         1 001156   400006 236100                    LDQ     6,,PR4
         1 001157   777777 376007                    ANQ     -1,DL
         1 001160   200112 756100                    STQ     V+2,,AUTO
         1 001161   400006 236100                    LDQ     6,,PR4
         1 001162   000022 772000                    QRL     18
         1 001163   200112 036100                    ADLQ    V+2,,AUTO
         1 001164   000011 402007                    MPY     9,DL
         1 001165   400000 503506                    ABD     0,QL,PR4
         1 001166   200060 454500                    STP4    ATTEXT$,,AUTO

      455    14166    2             S_D.D$ = S_D.VARNEXT$;

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:76   
  14166  1 001167   300033 236100                    LDQ     27,,PR3
         1 001170   300044 756100                    STQ     36,,PR3

      456    14167    2             CALL DDD$BUMP_D$(

  14167  1 001171   300134 475500                    LDP5    92,,PR3
         1 001172   500006 236100                    LDQ     6,,PR5
         1 001173   777777 376007                    ANQ     -1,DL
         1 001174   200057 036100                    ADLQ    ATT_SIZE,,AUTO
         1 001175   000003 036007                    ADLQ    3,DL
         1 001176   000002 772000                    QRL     2
         1 001177   200112 756100                    STQ     V+2,,AUTO
         1 001200   500006 236100                    LDQ     6,,PR5
         1 001201   777777 376007                    ANQ     -1,DL
         1 001202   000003 036007                    ADLQ    3,DL
         1 001203   000002 772000                    QRL     2
         1 001204   200113 756100                    STQ     V+3,,AUTO
         1 001205   200112 236100                    LDQ     V+2,,AUTO
         1 001206   200113 136100                    SBLQ    V+3,,AUTO
         1 001207   200114 756100                    STQ     V+4,,AUTO
         1 001210   200114 636500                    EPPR6   V+4,,AUTO
         1 001211   200115 456500                    STP6    V+5,,AUTO
         1 001212   200115 630500                    EPPR0   V+5,,AUTO
         1 001213   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001214   000000 701000 xent               TSX1    DDD$BUMP_D$
         1 001215   001433 702000 1                  TSX2    USERRERR

      457    14168    2               ((S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE + ATT_SIZE + 3)/4) -
      458    14169    2               ((S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE + 3)/4)
      459    14170    2               ) ALTRET( USERRERR );
      460    14171    2             S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE = S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE +
             14171                      ATT_SIZE;

  14171  1 001216   000000 470400 xsym               LDP0    S_D$
         1 001217   000134 471500                    LDP1    92,,PR0
         1 001220   100006 236100                    LDQ     6,,PR1
         1 001221   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:77   
         1 001222   200057 036100                    ADLQ    ATT_SIZE,,AUTO
         1 001223   000000 620006                    EAX0    0,QL
         1 001224   100006 440100                    SXL0    6,,PR1

      461    14172    2             ATTEXT$ -> CHAR$ATT = S_D.INPUT;

  14172  1 001225   200060 471500                    LDP1    ATTEXT$,,AUTO
         1 001226   200057 720100                    LXL0    ATT_SIZE,,AUTO
         1 001227   040140 100500                    MLR     fill='040'O
         1 001230   000610 000400                    ADSC9   392,,PR0                 cn=0,n=256
         1 001231   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      462    14173    2             S_D.LASTBLT$ -> AT_FIRST.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );

  14173  1 001232   000134 473500                    LDP3    92,,PR0
         1 001233   000134 236100                    LDQ     92,,PR0
         1 001234   000022 772000                    QRL     18
         1 001235   200112 756100                    STQ     V+2,,AUTO
         1 001236   000044 236100                    LDQ     36,,PR0
         1 001237   000022 772000                    QRL     18
         1 001240   200112 136100                    SBLQ    V+2,,AUTO
         1 001241   000000 621006                    EAX1    0,QL
         1 001242   300000 441100                    SXL1    0,,PR3

      463    14174    2             S_D.VARNEXT$ = S_D.D$;

  14174  1 001243   000044 236100                    LDQ     36,,PR0
         1 001244   000033 756100                    STQ     27,,PR0

      464    14175    2             S_D.FIXCOM.TAL( S_D.STORED ) = S_D.LASTBLT$ -> AT_FIRST.LENGTH;

  14175  1 001245   000135 236100                    LDQ     93,,PR0
         1 001246   000003 402007                    MPY     3,DL
         1 001247   000001 736000                    QLS     1
         1 001250   000134 473500                    LDP3    92,,PR0
         1 001251   300000 721100                    LXL1    0,,PR3
         1 001252   001212 441106                    SXL1    650,QL,PR0
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:78   

      465    14176    2             CALL SET_TRAIL_SEMI;

  14176  1 001253   002322 701000 1                  TSX1    SET_TRAIL_SEMI
         1 001254   000000 011000                    NOP     0

      466    14177    2             IF TRAIL_SEMI

  14177  1 001255   200055 234100                    SZN     TRAIL_SEMI,,AUTO
         1 001256   000053 604000 1                  TMI     PARSMORE

      467    14178    2             THEN GOTO PARSMORE;
      468    14179    2           END;                            /* Continuation to a stored command */

      469    14180    1        IF S_D.STORED=0

  14180  1 001257   000000 470400 xsym               LDP0    S_D$
         1 001260   000135 235100                    LDA     93,,PR0
         1 001261   001263 601000 1                  TNZ     s:14183

      470    14181    1        THEN RETURN;

  14181  1 001262   000000 702200 xent               TSX2  ! X66_ARET

      471    14182        /* SET NEW LAST COMMAND, IF APPROPRIATE */
      472    14183    1        IF ( S_D.STORED > S_D.FIXLAST )

  14183  1 001263   000135 236100                    LDQ     93,,PR0
         1 001264   000047 116100                    CMPQ    39,,PR0
         1 001265   001267 604400 1                  TMOZ    s:14185

      473    14184    1        THEN S_D.FIXLAST = S_D.STORED;

  14184  1 001266   000047 756100                    STQ     39,,PR0

      474    14185    1        IF SCAN1

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:79   
  14185  1 001267   200053 234100                    SZN     SCAN1,,AUTO
         1 001270   000022 605000 1                  TPL     START

      475    14186    1        THEN RETURN;

  14186  1 001271   000000 702200 xent               TSX2  ! X66_ARET

      476    14187    1        ELSE GOTO START;
      477    14188        /**/
      478    14189        /*D* ERROR ENCOUNTERED DURING COMMAND BUILD. PRINT APPROPRIATE
      479    14190             ERROR MESSAGE, RELEASE ANY MEMORY ACQUIRED FROM FIXCOM/VARCOM,
      480    14191             AND START OVER AGAIN. */
      481    14192        /**/
      482    14193    1   USERR0A:
      483    14194    1        IF PCB.ERROR.CODE = %E$SYNERR

  14194  1 001272   200011 236100       USERR0A      LDQ     PCB+6,,AUTO
         1 001273   377770 376007                    ANQ     131064,DL
         1 001274   000010 116007                    CMPQ    8,DL
         1 001275   001316 601000 1                  TNZ     USERR0

      484    14195    2        THEN DO;

      485    14196    2             S_D.ERROR = 11;          /* E@UERR0 */

  14196  1 001276   000013 235007                    LDA     11,DL
         1 001277   000000 470400 xsym               LDP0    S_D$
         1 001300   000013 755100                    STA     11,,PR0

      486    14197    2             S_D.ERROR_HICHAR = PCB.HI_CHAR;

  14197  1 001301   200015 235100                    LDA     PCB+10,,AUTO
         1 001302   004753 755100                    STA     2539,,PR0

      487    14198    2             CALL DDE$ERROR;

  14198  1 001303   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:80   
         1 001304   000000 701000 xent               TSX1    DDE$ERROR
         1 001305   000000 011000                    NOP     0

      488    14199    2             IF S_D.RUM_COMMAND AND S_D.GHOST1

  14199  1 001306   000000 470400 xsym               LDP0    S_D$
         1 001307   000072 234100                    SZN     58,,PR0
         1 001310   001315 605000 1                  TPL     s:14201
         1 001311   000605 234100                    SZN     389,,PR0
         1 001312   001315 605000 1                  TPL     s:14201

      489    14200    2             THEN S_D.RUM_SKIP = '1'B;

  14200  1 001313   400000 236003                    LDQ     -131072,DU
         1 001314   000051 756100                    STQ     41,,PR0

      490    14201    2             GOTO PARSMORE;

  14201  1 001315   000053 710000 1                  TRA     PARSMORE

      491    14202    2           END;
      492    14203    1   USERR0:
      493    14204    1        IF PCB.ERROR.CODE = %E$SYNERR      /* %E$SYNERR */

  14204  1 001316   200011 236100       USERR0       LDQ     PCB+6,,AUTO
         1 001317   377770 376007                    ANQ     131064,DL
         1 001320   000010 116007                    CMPQ    8,DL
         1 001321   001363 601000 1                  TNZ     s:14224

      494    14205    1        THEN IF MAERR ~= 0

  14205  1 001322   200027 235100                    LDA     MAERR,,AUTO
         1 001323   001333 600000 1                  TZE     s:14212

      495    14206    2             THEN DO;

      496    14207    2                  S_D.ERROR = MAERR;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:81   

  14207  1 001324   000000 470400 xsym               LDP0    S_D$
         1 001325   000013 755100                    STA     11,,PR0

      497    14208    2                  S_D.ERROR_SYM$ = MAERR$;

  14208  1 001326   200030 236100                    LDQ     MAERR$,,AUTO
         1 001327   000032 756100                    STQ     26,,PR0

      498    14209    2                  S_D.ERROR_HICHAR = MACHAR;

  14209  1 001330   200051 235100                    LDA     MACHAR,,AUTO
         1 001331   004753 755100                    STA     2539,,PR0

      499    14210    2                END;

  14210  1 001332   001372 710000 1                  TRA     s:14227

      500    14211    2             ELSE DO;

      501    14212    2                  S_D.ERROR = 11;     /* E@UERR0 */

  14212  1 001333   000013 235007                    LDA     11,DL
         1 001334   000000 470400 xsym               LDP0    S_D$
         1 001335   000013 755100                    STA     11,,PR0

      502    14213    2                  S_D.ERROR_HICHAR = PCB.HI_CHAR;

  14213  1 001336   200015 235100                    LDA     PCB+10,,AUTO
         1 001337   004753 755100                    STA     2539,,PR0

      503    14214    2                  IF SEMI_OFFSET ~= 0 THEN

  14214  1 001340   200056 235100                    LDA     SEMI_OFFSET,,AUTO
         1 001341   001354 600000 1                  TZE     s:14220

      504    14215    2                       IF S_D.DO_ATTACH ~= 0 THEN
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:82   

  14215  1 001342   000512 235100                    LDA     330,,PR0
         1 001343   001350 600000 1                  TZE     s:14218

      505    14216    2                            S_D.ERROR_HICHAR = S_D.ERROR_HICHAR + S_D.ACMDS_OFF;

  14216  1 001344   004753 236100                    LDQ     2539,,PR0
         1 001345   000507 036100                    ADLQ    327,,PR0
         1 001346   004753 756100                    STQ     2539,,PR0
         1 001347   001354 710000 1                  TRA     s:14220

      506    14217    2                       ELSE
      507    14218    2                            S_D.ERROR_HICHAR = S_D.ERROR_HICHAR + SEMI_OFFSET + 1;

  14218  1 001350   004753 236100                    LDQ     2539,,PR0
         1 001351   200056 036100                    ADLQ    SEMI_OFFSET,,AUTO
         1 001352   000001 036007                    ADLQ    1,DL
         1 001353   004753 756100                    STQ     2539,,PR0

      508    14219    2                  ELSE ;
      509    14220    2                  IF S_D.RUM_COMMAND AND S_D.GHOST1

  14220  1 001354   000072 234100                    SZN     58,,PR0
         1 001355   001372 605000 1                  TPL     s:14227
         1 001356   000605 234100                    SZN     389,,PR0
         1 001357   001372 605000 1                  TPL     s:14227

      510    14221    2                  THEN S_D.RUM_SKIP = '1'B;

  14221  1 001360   400000 236003                    LDQ     -131072,DU
         1 001361   000051 756100                    STQ     41,,PR0

      511    14222    2                END;

  14222  1 001362   001372 710000 1                  TRA     s:14227

      512    14223    2        ELSE DO;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:83   

      513    14224    2             S_D.ERROR = 500;        /* E@PARSERR */

  14224  1 001363   000764 235007                    LDA     500,DL
         1 001364   000000 470400 xsym               LDP0    S_D$
         1 001365   000013 755100                    STA     11,,PR0

      514    14225    2             S_D.ERROR_HICHAR = PCB.ERROR.CODE;

  14225  1 001366   200011 236100                    LDQ     PCB+6,,AUTO
         1 001367   000003 772000                    QRL     3
         1 001370   037777 376007                    ANQ     16383,DL
         1 001371   004753 756100                    STQ     2539,,PR0

      515    14226    2           END;

      516    14227    1        GOTO USERRERR;

  14227  1 001372   001433 710000 1                  TRA     USERRERR

      517    14228    1   USERR1: S_D.ERROR = 12; GOTO USERRERR; /* E@UERR1 */

  14228  1 001373   000014 236007       USERR1       LDQ     12,DL
         1 001374   000000 470400 xsym               LDP0    S_D$
         1 001375   000013 756100                    STQ     11,,PR0

  14228  1 001376   001433 710000 1                  TRA     USERRERR

      518    14229    1   UDERR1: S_D.ERROR = 501; GOTO USERRERR; /* E@DERR1 */

  14229  1 001377   000765 235007       UDERR1       LDA     501,DL
         1 001400   000000 470400 xsym               LDP0    S_D$
         1 001401   000013 755100                    STA     11,,PR0

  14229  1 001402   001433 710000 1                  TRA     USERRERR

      519    14230    1   UDERNC: S_D.ERROR = 136; GOTO USERRERR; /* E@SCAN1_CONT */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:84   

  14230  1 001403   000210 235007       UDERNC       LDA     136,DL
         1 001404   000000 470400 xsym               LDP0    S_D$
         1 001405   000013 755100                    STA     11,,PR0

  14230  1 001406   001433 710000 1                  TRA     USERRERR

      520    14231    1   USERSY: S_D.ERROR = 53; GOTO USERRERR; /* E@SYNTAX */

  14231  1 001407   000065 236007       USERSY       LDQ     53,DL
         1 001410   000013 756100                    STQ     11,,PR0

  14231  1 001411   001433 710000 1                  TRA     USERRERR

      521    14232    1   USERPA: S_D.ERROR = 115; GOTO USERRERR; /* E@NOT_IN_PATCH */

  14232  1 001412   000163 236007       USERPA       LDQ     115,DL
         1 001413   100013 756100                    STQ     11,,PR1

  14232  1 001414   001433 710000 1                  TRA     USERRERR

      522    14233    1   USERNDE: S_D.ERROR = 125; GOTO USERRERR; /* E@NOTDELTA */

  14233  1 001415   000175 236007       USERNDE      LDQ     125,DL
         1 001416   100013 756100                    STQ     11,,PR1

  14233  1 001417   001433 710000 1                  TRA     USERRERR

      523    14234    1   USERNU: S_D.ERROR = 135; GOTO USERRERR; /* E@NULLCMD */

  14234  1 001420   000207 235007       USERNU       LDA     135,DL
         1 001421   000000 470400 xsym               LDP0    S_D$
         1 001422   000013 755100                    STA     11,,PR0

  14234  1 001423   001433 710000 1                  TRA     USERRERR

      524    14235    1   USERSK: S_D.ERROR = 224; GOTO USERRERR; /* E@RUMSKIP */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:85   

  14235  1 001424   000340 235007       USERSK       LDA     224,DL
         1 001425   000000 470400 xsym               LDP0    S_D$
         1 001426   000013 755100                    STA     11,,PR0

  14235  1 001427   001433 710000 1                  TRA     USERRERR

      525    14236    1   USERR7: S_D.ERROR = 18; GOTO USERRERR; /* E@UERR7 */

  14236  1 001430   000022 235007       USERR7       LDA     18,DL
         1 001431   100013 755100                    STA     11,,PR1

  14236  1 001432   001433 710000 1                  TRA     USERRERR

      526    14237    1   USERRERR:
      527    14238    1        IF SCAN2

  14238  1 001433   200054 234100       USERRERR     SZN     SCAN2,,AUTO
         1 001434   001442 605000 1                  TPL     s:14240

      528    14239    1        THEN S_D.MACTIVE = S_D.REMACTIVE;

  14239  1 001435   000000 470400 xsym               LDP0    S_D$
         1 001436   000506 236100                    LDQ     326,,PR0
         1 001437   400000 376003                    ANQ     -131072,DU
         1 001440   000713 756100                    STQ     459,,PR0
         1 001441   001444 710000 1                  TRA     s:14241

      529    14240    1        ELSE S_D.MACTIVE = '0'B;

  14240  1 001442   000000 470400 xsym               LDP0    S_D$
         1 001443   000713 450100                    STZ     459,,PR0

      530    14241    1        IF SCAN1 AND S_D.ERROR = 135 /* E@NULLCMD */

  14241  1 001444   200053 234100                    SZN     SCAN1,,AUTO
         1 001445   001452 605000 1                  TPL     s:14244
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:86   
         1 001446   000013 235100                    LDA     11,,PR0
         1 001447   000207 115007                    CMPA    135,DL
         1 001450   001452 601000 1                  TNZ     s:14244

      531    14242    2        THEN DO;                           /* Nothing! */

      532    14243    2           END;

  14243  1 001451   001455 710000 1                  TRA     s:14245

      533    14244    1        ELSE CALL DDE$ERROR;

  14244  1 001452   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001453   000000 701000 xent               TSX1    DDE$ERROR
         1 001454   000000 011000                    NOP     0

      534    14245    1        IF S_D.STORED ~= 0

  14245  1 001455   000000 470400 xsym               LDP0    S_D$
         1 001456   000135 235100                    LDA     93,,PR0
         1 001457   001505 600000 1                  TZE     s:14252

      535    14246    1        THEN IF S_D.FIXCOM.CMD(S_D.STORED) ~= 0

  14246  1 001460   000135 236100                    LDQ     93,,PR0
         1 001461   000003 402007                    MPY     3,DL
         1 001462   000001 736000                    QLS     1
         1 001463   001212 236106                    LDQ     650,QL,PR0
         1 001464   777000 316003                    CANQ    -512,DU
         1 001465   001505 600000 1                  TZE     s:14252

      536    14247    2             THEN DO;            /* RELEASE MEMORY FROM VARCOM, & FIXCOM SLOT */

      537    14248    2                  S_D.VARNEXT$ = PINCRW(S_D.VARNEXT$,-S_D.FIXCOM.TAL(S_D.STORED));

  14248  1 001466   000135 236100                    LDQ     93,,PR0
         1 001467   000003 402007                    MPY     3,DL
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:87   
         1 001470   000001 736000                    QLS     1
         1 001471   001212 720106                    LXL0    650,QL,PR0
         1 001472   000033 471500                    LDP1    27,,PR0
         1 001473   777777 620010                    EAX0    -1,X0
         1 001474   777777 660003                    ERX0    -1,DU
         1 001475   100000 633510                    EPPR3   0,X0,PR1
         1 001476   000033 453500                    STP3    27,,PR0

      538    14249    2                  S_D.FIXCOM.CMD(S_D.STORED) = 0;

  14249  1 001477   000135 236100                    LDQ     93,,PR0
         1 001500   000003 402007                    MPY     3,DL
         1 001501   000001 736000                    QLS     1
         1 001502   000000 620006                    EAX0    0,QL
         1 001503   000032 236000 xsym               LDQ     B_VECTNIL+26
         1 001504   001212 356110                    ANSQ    650,X0,PR0

      539    14250    2                END;

      540    14251        /* TRY AGAIN */
      541    14252    1        IF SCAN1 OR ( SCAN2 AND NOT S_D.MACTIVE )

  14252  1 001505   200053 234100                    SZN     SCAN1,,AUTO
         1 001506   001513 604000 1                  TMI     s:14253
         1 001507   200054 234100                    SZN     SCAN2,,AUTO
         1 001510   000022 605000 1                  TPL     START
         1 001511   000713 234100                    SZN     459,,PR0
         1 001512   000022 604000 1                  TMI     START

      542    14253    1        THEN ALTRETURN;

  14253  1 001513   000000 702200 xent               TSX2  ! X66_AALT

      543    14254    1        ELSE GOTO START;
      544    14255        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:88   
      545    14256        /*F* NAME: DDS$BLD_WHEN
      546    14257             PURPOSE: TO BUILD THE WHEN COMMAND.
      547    14258             DESCRIPTION: BUILDS THE WHEN STORED COMMAND "FIRST ATTACHMENT"
      548    14259             IN VARCOM. SETS UP THE FIELDS IN THE FIXCOM SLOT. BUILDS THE
      549    14260             OPTIONAL BYPASS COUNT (#) AND IFSPEC FIELDS IN THE FIRST
      550    14261             ATTACHMENT. EVALUATES & BUILDS THE POSITION. RETURNS IF BUILD
      551    14262             IS SUCCESSFUL, ELSE ALTRETURNS. */
      552    14263        /*D* NAME: DDS$BLD_WHEN
      553    14264             INTERFACE:
      554    14265             ENVIRONMENT: DDS$SCAN ACTIVE.
      555    14266             INPUT: S_D.STORED - COMMAND ID.
      556    14267                    NCMD$ - POINTER TO N_WHEN NODE.
      557    14268             OUTPUT: S_D.D$ - POINTER TO NEXT FREE WORD IN VARCOM.
      558    14269             SCRATCH: LOCAL AUTO ONLY
      559    14270             DESCRIPTION: BUILDS THE WHEN STORED COMMAND "FIRST ATTACHMENT"
      560    14271             IN VARCOM. SETS UP THE FIELDS IN THE FIXCOM SLOT. BUILDS THE
      561    14272             OPTIONAL BYPASS COUNT (#) AND IFSPEC FIELDS IN THE FIRST
      562    14273             ATTACHMENT. EVALUATES & BUILDS THE POSITION. RETURNS IF BUILD
      563    14274             IS SUCCESSFUL, ELSE ALTRETURNS. */
      564    14275                                                /**/
      565    14276    1   DDS$BLD_WHEN: PROC ALTRET;

  14276  1 001514   200066 741300       DDS$BLD_WHEN STX1  ! ZITEM$+3,,AUTO

      566    14277                                                /**/
      567    14278    2   DCL IXX SBIN;
      568    14279    2   DCL IXXX SBIN;
      569    14280    2   DCL UBIN36 UBIN(36) BASED;
      570    14281    2   DCL TCODE SBIN;
      571    14282    2   DCL TCODEC UBIN;
      572    14283    2   DCL NCC$ PTR;
      573    14284    2   DCL L$ PTR;
      574    14285    2   DCL S1$ PTR;
      575    14286    2   DCL S2$ PTR;
      576    14287    2   DCL CHAR22 CHAR(22) BASED;
      577    14288    2   DCL BB$ PTR;
      578    14289    2   DCL SIZE UBIN;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:89   
      579    14290    2   DCL WOFF UBIN;
      580    14291    2   DCL SILENT BIT(1) ALIGNED;
      581    14292    2   DCL INACTIVE BIT(1) ALIGNED;
      582    14293    2   DCL 1 BUFF$ER BASED ALIGNED,
      583    14294    2         2 * CHAR( TCODEC );
      584    14295    2   DCL WHEN$ PTR;
      585    14296    2   DCL DDK$EVAL ENTRY(6) ALTRET;
      586    14297    2   DCL DDK$GETWVAL ENTRY(6) ALTRET;
      587    14298        %WHEN_FIRST (NAME=WHEN$CMD,STCLASS="BASED(LASTBLT$)");
      588    14335        %FPRG$CONTEXT;
      589    14398                                                /**/
      590    14399        /*   IF B$JIT.UNAME = '350COHEN'
      591    14400             THEN DO;
      592    14401                  S_D.ERROR = E@WHENCOHEN;
      593    14402                  GOTO ALTRT;
      594    14403                END;  */
      595    14404    2        IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %L6

  14404  1 001515   000000 470400 xsym               LDP0    S_D$
         1 001516   006714 235100                    LDA     3532,,PR0
         1 001517   000002 115007                    CMPA    2,DL
         1 001520   001524 601000 1                  TNZ     s:14409

      596    14405    3        THEN DO;

      597    14406    3             S_D.ERROR = 331;  /* E@CMDNOTSUPPORT */

  14406  1 001521   000513 236007                    LDQ     331,DL
         1 001522   000013 756100                    STQ     11,,PR0

      598    14407    3             GOTO ALTRT;

  14407  1 001523   002227 710000 1                  TRA     ALTRT

      599    14408    3           END;
      600    14409    2        IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ ~= ADDR(NIL)

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:90   
  14409  1 001524   000101 234100                    SZN     65,,PR0
         1 001525   001540 605000 1                  TPL     s:14417
         1 001526   000102 236100                    LDQ     66,,PR0
         1 001527   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001530   001540 600000 1                  TZE     s:14417

      601    14410    3        THEN DO;

      602    14411    3             IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.INTERPRETIVE

  14411  1 001531   000102 471500                    LDP1    66,,PR0
         1 001532   100001 236100                    LDQ     1,,PR1
         1 001533   200000 316003                    CANQ    65536,DU
         1 001534   001550 600000 1                  TZE     s:14422

      603    14412    4             THEN DO;

      604    14413    4                  S_D.ERROR = 309; /* E@NOT_INTERPRETIVE */

  14413  1 001535   000465 235007                    LDA     309,DL
         1 001536   000013 755100                    STA     11,,PR0

      605    14414    4                  GOTO ALTRT;

  14414  1 001537   002227 710000 1                  TRA     ALTRT

      606    14415    4                END;
      607    14416    3           END;
      608    14417    2        ELSE IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ = ADDR(NIL)

  14417  1 001540   000101 234100                    SZN     65,,PR0
         1 001541   001550 605000 1                  TPL     s:14422
         1 001542   000102 236100                    LDQ     66,,PR0
         1 001543   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001544   001550 601000 1                  TNZ     s:14422

      609    14418    3             THEN DO;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:91   

      610    14419    3                  S_D.ERROR = 502;

  14419  1 001545   000766 235007                    LDA     502,DL
         1 001546   000013 755100                    STA     11,,PR0

      611    14420    3                  GOTO ALTRT;

  14420  1 001547   002227 710000 1                  TRA     ALTRT

      612    14421    3                END;
      613    14422    2        SILENT = '0'B;

  14422  1 001550   200102 450100                    STZ     SILENT,,AUTO

      614    14423    2        LASTBLT$ = S_D.LASTBLT$;

  14423  1 001551   000134 236100                    LDQ     92,,PR0
         1 001552   200052 756100                    STQ     LASTBLT$,,AUTO

      615    14424    2        INACTIVE = '0'B;

  14424  1 001553   200103 450100                    STZ     INACTIVE,,AUTO

      616    14425    3        DO IXX = 0 TO NCMD$ -> POB.NSB - 1;

  14425  1 001554   200067 450100                    STZ     IXX,,AUTO
         1 001555   002165 710000 1                  TRA     s:14516+1

      617    14426    3             NCC$ = NCMD$ -> POB.SUBLK$( IXX ); /* GET POINTER TO NEXT LEVEL NODE */

  14426  1 001556   200024 470500                    LDP0    NCMD$,,AUTO
         1 001557   200067 720100                    LXL0    IXX,,AUTO
         1 001560   000003 236110                    LDQ     3,X0,PR0
         1 001561   200073 756100                    STQ     NCC$,,AUTO

      618    14427    3             TCODE = NCC$ -> POB.CODE;     /* PICK UP CODE */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:92   

  14427  1 001562   200073 471500                    LDP1    NCC$,,AUTO
         1 001563   100000 236100                    LDQ     0,,PR1
         1 001564   777777 376007                    ANQ     -1,DL
         1 001565   200071 756100                    STQ     TCODE,,AUTO

      619    14428    3             L$ = S_D.D$;

  14428  1 001566   000000 473400 xsym               LDP3    S_D$
         1 001567   300044 236100                    LDQ     36,,PR3
         1 001570   200074 756100                    STQ     L$,,AUTO

      620    14429    3             IF ( TCODE = 38 )      /* VREF_CODE */

  14429  1 001571   200071 235100                    LDA     TCODE,,AUTO
         1 001572   000046 115007                    CMPA    38,DL
         1 001573   002072 601000 1                  TNZ     s:14493

      621    14430    4             THEN DO;

      622    14431        /*D* Build WHEN vref data descriptor in fixed command buffer (DIRCOM) so
      623    14432             that default schema is setup correctly before building IFSPEC.
      624    14433             Copy WHEN vref data descriptor to stored command buffer (VARCOM)
      625    14434             after IFSPEC is built. */
      626    14435    4                  CALL WHEN_INIT ALTRET( ALTRT );

  14435  1 001574   002437 701000 1                  TSX1    WHEN_INIT
         1 001575   002227 702000 1                  TSX2    ALTRT

      627    14436    4                  CALL DDS$ATTDIRA( SIZEW( WHEN$CMD ), 67 ) ALTRET( ALTRT );
             14436                           /* C_WHEN */

  14436  1 001576   000021 630400 2                  EPPR0   17
         1 001577   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001600   000000 701000 xent               TSX1    DDS$ATTDIRA
         1 001601   002227 702000 1                  TSX2    ALTRT

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:93   
      628    14437    4                  S1$ = S_D.D$;

  14437  1 001602   000000 470400 xsym               LDP0    S_D$
         1 001603   000044 236100                    LDQ     36,,PR0
         1 001604   200075 756100                    STQ     S1$,,AUTO

      629    14438    4                  CALL DDS$VREFCOM( NCC$ ) ALTRET( ALTRT );

  14438  1 001605   200073 631500                    EPPR1   NCC$,,AUTO
         1 001606   200112 451500                    STP1    V+2,,AUTO
         1 001607   200112 630500                    EPPR0   V+2,,AUTO
         1 001610   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001611   000000 701000 xent               TSX1    DDS$VREFCOM
         1 001612   002227 702000 1                  TSX2    ALTRT

      630    14439    4                  VCPOS = NCC$ -> POB.SUBLK$(0) -> POB.CPOS;

  14439  1 001613   200073 470500                    LDP0    NCC$,,AUTO
         1 001614   000003 471500                    LDP1    3,,PR0
         1 001615   100002 235100                    LDA     2,,PR1
         1 001616   200061 755100                    STA     VCPOS,,AUTO

      631    14440    4                  WOFF = POFFW(S_D.D$, S_D.DESC$) + SIZEW(WHEN$CMD);

  14440  1 001617   000000 473400 xsym               LDP3    S_D$
         1 001620   300041 236100                    LDQ     33,,PR3
         1 001621   000022 772000                    QRL     18
         1 001622   200112 756100                    STQ     V+2,,AUTO
         1 001623   300044 236100                    LDQ     36,,PR3
         1 001624   000022 772000                    QRL     18
         1 001625   200112 136100                    SBLQ    V+2,,AUTO
         1 001626   000021 036007                    ADLQ    17,DL
         1 001627   200101 756100                    STQ     WOFF,,AUTO

      632    14441    4                  S2$ = S_D.D$;

  14441  1 001630   300044 236100                    LDQ     36,,PR3
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:94   
         1 001631   200076 756100                    STQ     S2$,,AUTO

      633    14442    4                  CALL DDS$SET_Q2D;

  14442  1 001632   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001633   000000 701000 xent               TSX1    DDS$SET_Q2D
         1 001634   000000 011000                    NOP     0

      634    14443    4                  CALL STORED_INIT ALTRET( ALTRT );

  14443  1 001635   002450 701000 1                  TSX1    STORED_INIT
         1 001636   002227 702000 1                  TSX2    ALTRT

      635    14444    4                  CALL DDS$STOREDA( SIZEW( WHEN$CMD ), 67 ) ALTRET( ALTRT );

  14444  1 001637   000021 630400 2                  EPPR0   17
         1 001640   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001641   000000 701000 xent               TSX1    DDS$STOREDA
         1 001642   002227 702000 1                  TSX2    ALTRT

      636    14445    4                  L$ = S_D.D$;

  14445  1 001643   000000 470400 xsym               LDP0    S_D$
         1 001644   000044 236100                    LDQ     36,,PR0
         1 001645   200074 756100                    STQ     L$,,AUTO

      637    14446    4                  TCODEC = POFFC( S2$, S1$ );

  14446  1 001646   200075 236100                    LDQ     S1$,,AUTO
         1 001647   000020 772000                    QRL     16
         1 001650   200112 756100                    STQ     V+2,,AUTO
         1 001651   200076 236100                    LDQ     S2$,,AUTO
         1 001652   000020 772000                    QRL     16
         1 001653   200112 136100                    SBLQ    V+2,,AUTO
         1 001654   200072 756100                    STQ     TCODEC,,AUTO

      638    14447    4                  TCODE = TCODEC / LENGTHC( TCODEC );
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:95   

  14447  1 001655   000002 772000                    QRL     2
         1 001656   200071 756100                    STQ     TCODE,,AUTO

      639    14448    4                  S_D.FIXCOM.CDF( S_D.STORED ) = POFFW( L$, S_D.LASTBLT$ );
             14448                           /* Offset to WHEN vref */

  14448  1 001657   000135 236100                    LDQ     93,,PR0
         1 001660   000003 402007                    MPY     3,DL
         1 001661   000001 736000                    QLS     1
         1 001662   000000 620006                    EAX0    0,QL
         1 001663   000134 236100                    LDQ     92,,PR0
         1 001664   000022 772000                    QRL     18
         1 001665   200112 756100                    STQ     V+2,,AUTO
         1 001666   200074 236100                    LDQ     L$,,AUTO
         1 001667   000022 772000                    QRL     18
         1 001670   200112 136100                    SBLQ    V+2,,AUTO
         1 001671   001213 756110                    STQ     651,X0,PR0

      640    14449    4                  S_D.FIXCOM.SILENT( S_D.STORED ) = SILENT;

  14449  1 001672   000135 236100                    LDQ     93,,PR0
         1 001673   000003 402007                    MPY     3,DL
         1 001674   000001 736000                    QLS     1
         1 001675   000000 620006                    EAX0    0,QL
         1 001676   200102 236100                    LDQ     SILENT,,AUTO
         1 001677   000012 772000                    QRL     10
         1 001700   001212 676110                    ERQ     650,X0,PR0
         1 001701   000200 376003                    ANQ     128,DU
         1 001702   001212 656110                    ERSQ    650,X0,PR0

      641    14450    4                  S_D.FIXCOM.INACTIVE( S_D.STORED ) = INACTIVE;

  14450  1 001703   000135 236100                    LDQ     93,,PR0
         1 001704   000003 402007                    MPY     3,DL
         1 001705   000001 736000                    QLS     1
         1 001706   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:96   
         1 001707   200103 236100                    LDQ     INACTIVE,,AUTO
         1 001710   000011 772000                    QRL     9
         1 001711   001212 676110                    ERQ     650,X0,PR0
         1 001712   000400 376003                    ANQ     256,DU
         1 001713   001212 656110                    ERSQ    650,X0,PR0

      642    14451    4                  WHEN$CMD.OVALUE$ = ADDR( NIL );

  14451  1 001714   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001715   200052 471500                    LDP1    LASTBLT$,,AUTO
         1 001716   100002 756100                    STQ     2,,PR1

      643    14452    4                  WHEN$CMD.U.CONST_OFFSET = WOFF;

  14452  1 001717   200101 720100                    LXL0    WOFF,,AUTO
         1 001720   100001 740100                    STX0    1,,PR1

      644    14453    4                  CALL DDD$BUMP_D$( TCODE ) ALTRET( ALTRT );

  14453  1 001721   200071 633500                    EPPR3   TCODE,,AUTO
         1 001722   200112 453500                    STP3    V+2,,AUTO
         1 001723   200112 630500                    EPPR0   V+2,,AUTO
         1 001724   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001725   000000 701000 xent               TSX1    DDD$BUMP_D$
         1 001726   002227 702000 1                  TSX2    ALTRT

      645    14454    4                  L$ -> BUFF$ER = S1$ -> BUFF$ER;

  14454  1 001727   200075 470500                    LDP0    S1$,,AUTO
         1 001730   200072 720100                    LXL0    TCODEC,,AUTO
         1 001731   200074 471500                    LDP1    L$,,AUTO
         1 001732   000140 100540                    MLR     fill='000'O
         1 001733   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         1 001734   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      646    14455    4                  S_D.DESC$ = L$;

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:97   
  14455  1 001735   200074 236100                    LDQ     L$,,AUTO
         1 001736   000000 473400 xsym               LDP3    S_D$
         1 001737   300041 756100                    STQ     33,,PR3

      647    14456    4                  CALL DDK$EVAL (WHEN$CMD.ADDRESS, WHEN$CMD.SEG, WHEN$CMD.DESC#,

  14456  1 001740   200052 236100                    LDQ     LASTBLT$,,AUTO
         1 001741   000016 036003                    ADLQ    14,DU
         1 001742   200117 756100                    STQ     V+7,,AUTO
         1 001743   200052 236100                    LDQ     LASTBLT$,,AUTO
         1 001744   000017 036003                    ADLQ    15,DU
         1 001745   200116 756100                    STQ     V+6,,AUTO
         1 001746   200052 236100                    LDQ     LASTBLT$,,AUTO
         1 001747   000015 036003                    ADLQ    13,DU
         1 001750   200115 756100                    STQ     V+5,,AUTO
         1 001751   200052 236100                    LDQ     LASTBLT$,,AUTO
         1 001752   000014 036003                    ADLQ    12,DU
         1 001753   200114 756100                    STQ     V+4,,AUTO
         1 001754   200052 236100                    LDQ     LASTBLT$,,AUTO
         1 001755   000013 036003                    ADLQ    11,DU
         1 001756   200113 756100                    STQ     V+3,,AUTO
         1 001757   200052 236100                    LDQ     LASTBLT$,,AUTO
         1 001760   000012 036003                    ADLQ    10,DU
         1 001761   200112 756100                    STQ     V+2,,AUTO
         1 001762   200112 630500                    EPPR0   V+2,,AUTO
         1 001763   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 001764   000000 701000 xent               TSX1    DDK$EVAL
         1 001765   002227 702000 1                  TSX2    ALTRT

      648    14457    4                    WHEN$CMD.NOT_IS, WHEN$CMD.BOFF, WHEN$CMD.BSIZE) ALTRET(ALTRT);
      649    14458    4                  IF WHEN$CMD.NOT_IS

  14458  1 001766   200052 470500                    LDP0    LASTBLT$,,AUTO
         1 001767   000015 234100                    SZN     13,,PR0
         1 001770   002011 605000 1                  TPL     s:14474

      650    14459    5                  THEN DO;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:98   

      651    14460    5                       IF WHEN$CMD.SEG = 3

  14460  1 001771   000013 235100                    LDA     11,,PR0
         1 001772   000003 115007                    CMPA    3,DL
         1 001773   002005 601000 1                  TNZ     s:14470

      652    14461    6                       THEN DO;

      653    14462    6                            IF WHEN$CMD.DESC# - 3 < 1 OR

  14462  1 001774   000014 235100                    LDA     12,,PR0
         1 001775   000004 115007                    CMPA    4,DL
         1 001776   002001 602000 1                  TNC     s:14465
         1 001777   000014 115007                    CMPA    12,DL
         1 002000   002011 602000 1                  TNC     s:14474

      654    14463    6                              WHEN$CMD.DESC# - 3 > 8
      655    14464    7                            THEN DO;

      656    14465    7                                 S_D.ERROR = 208; /* E@WHEN_NOTIS_OR_DS */

  14465  1 002001   000320 236007                    LDQ     208,DL
         1 002002   000000 471400 xsym               LDP1    S_D$
         1 002003   100013 756100                    STQ     11,,PR1

      657    14466    7                                 GOTO ALTRT;

  14466  1 002004   002227 710000 1                  TRA     ALTRT

      658    14467    7                               END;
      659    14468    6                          END;
      660    14469    6                       ELSE DO;

      661    14470    6                            S_D.ERROR = 208; /* E@WHEN_NOTIS_OR_DS */

  14470  1 002005   000320 236007                    LDQ     208,DL
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:99   
         1 002006   000000 471400 xsym               LDP1    S_D$
         1 002007   100013 756100                    STQ     11,,PR1

      662    14471    6                            GOTO ALTRT;

  14471  1 002010   002227 710000 1                  TRA     ALTRT

      663    14472    6                          END;
      664    14473    5                     END;
      665    14474    4                  WHEN$CMD.START_PAGE = WHEN$CMD.ADDRESS/1024;

  14474  1 002011   000012 236100                    LDQ     10,,PR0
         1 002012   000012 772000                    QRL     10
         1 002013   000000 620006                    EAX0    0,QL
         1 002014   000020 740100                    STX0    16,,PR0

      666    14475    4                  WHEN$CMD.END_PAGE = (WHEN$CMD.ADDRESS + (WHEN$CMD.BOFF + WHEN$CMD.
             14475                           BSIZE - 1)/36)/1024;

  14475  1 002015   000017 236100                    LDQ     15,,PR0
         1 002016   000016 036100                    ADLQ    14,,PR0
         1 002017   000001 136007                    SBLQ    1,DL
         1 002020   000044 506007                    DIV     36,DL
         1 002021   000012 036100                    ADLQ    10,,PR0
         1 002022   000012 772000                    QRL     10
         1 002023   000000 621006                    EAX1    0,QL
         1 002024   000020 441100                    SXL1    16,,PR0

      667    14476    4                  IF ( NOT L$ -> ZITEM.FLAGS.MDSE.M )

  14476  1 002025   200074 471500                    LDP1    L$,,AUTO
         1 002026   100001 234100                    SZN     1,,PR1
         1 002027   002034 604000 1                  TMI     s:14481

      668    14477    5                  THEN DO;

      669    14478    5                       S_D.ERROR = 42; /* E@NOMOD */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:100  

  14478  1 002030   000052 235007                    LDA     42,DL
         1 002031   000000 473400 xsym               LDP3    S_D$
         1 002032   300013 755100                    STA     11,,PR3

      670    14479    5                       GOTO ALTRT;

  14479  1 002033   002227 710000 1                  TRA     ALTRT

      671    14480    5                     END;
      672    14481    4                 IF ( NOT L$ -> ZITEM.FLAGS.MDSE.E ) AND ( L$ -> ZITEM.FLAGS.ADDREXP )

  14481  1 002034   100001 236100                    LDQ     1,,PR1
         1 002035   040000 316003                    CANQ    16384,DU
         1 002036   002045 601000 1                  TNZ     s:14486
         1 002037   020000 316003                    CANQ    8192,DU
         1 002040   002045 600000 1                  TZE     s:14486

      673    14482    5                 THEN DO; /* CAN'T HAVE NON-MODIFYABLE SPECIAL SYMBOL IN EXPRESSION */

      674    14483    5                       S_D.ERROR = 87; /* E@EXPNOTVALID */

  14483  1 002041   000127 235007                    LDA     87,DL
         1 002042   000000 473400 xsym               LDP3    S_D$
         1 002043   300013 755100                    STA     11,,PR3

      675    14484    5                       GOTO ALTRT;

  14484  1 002044   002227 710000 1                  TRA     ALTRT

      676    14485    5                     END;
      677    14486    4                  TCODEC = TCODE;

  14486  1 002045   200071 235100                    LDA     TCODE,,AUTO
         1 002046   200072 755100                    STA     TCODEC,,AUTO

      678    14487    4                  TCODE = S_D.UNODE.USENODE;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:101  

  14487  1 002047   000000 473400 xsym               LDP3    S_D$
         1 002050   304760 235100                    LDA     2544,,PR3
         1 002051   200071 755100                    STA     TCODE,,AUTO

      679    14488    4                  WHEN$CMD.NODE = TCODE;

  14488  1 002052   000000 620005                    EAX0    0,AL
         1 002053   000003 740100                    STX0    3,,PR0

      680    14489    4                  IF S_D.OVERLAID

  14489  1 002054   304764 234100                    SZN     2548,,PR3
         1 002055   002164 605000 1                  TPL     s:14516

      681    14490    4                  THEN IF NOT S_D.B$TREE$ -> B$NODE.FLGS.NOW_IN( TCODE )

  14490  1 002056   304767 474500                    LDP4    2551,,PR3
         1 002057   200071 236100                    LDQ     TCODE,,AUTO
         1 002060   000006 402007                    MPY     6,DL
         1 002061   400001 234106                    SZN     1,QL,PR4
         1 002062   002164 604000 1                  TMI     s:14516

      682    14491    4                       THEN S_D.FIXCOM.NOT_IN( S_D.STORED ) = '1'B;

  14491  1 002063   300135 236100                    LDQ     93,,PR3
         1 002064   000003 402007                    MPY     3,DL
         1 002065   000001 736000                    QLS     1
         1 002066   000000 621006                    EAX1    0,QL
         1 002067   000100 236003                    LDQ     64,DU
         1 002070   301212 256111                    ORSQ    650,X1,PR3

      683    14492    4                END;

  14492  1 002071   002164 710000 1                  TRA     s:14516

      684    14493    3             ELSE IF ( TCODE >= 1 ) AND ( TCODE <= 6 ) /* C@GREATER, C@EQUALS */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:102  

  14493  1 002072   000000 115003                    CMPA    0,DU
         1 002073   002101 604400 1                  TMOZ    s:14495
         1 002074   000006 115007                    CMPA    6,DL
         1 002075   002101 605400 1                  TPNZ    s:14495

      685    14494    3                  THEN WHEN$CMD.WCOND = TCODE;

  14494  1 002076   200052 474500                    LDP4    LASTBLT$,,AUTO
         1 002077   400011 755100                    STA     9,,PR4
         1 002100   002164 710000 1                  TRA     s:14516

      686    14495    3                  ELSE IF ( TCODE = 17 ) /* C@CNSNT_REF */

  14495  1 002101   000021 115007                    CMPA    17,DL
         1 002102   002125 601000 1                  TNZ     s:14501

      687    14496    4                       THEN DO;

      688    14497    4                            CALL DDD$BUMP_D$( SIZEW( IF$CONST ) ) ALTRET( ALTRT );

  14497  1 002103   000024 630400 2                  EPPR0   20
         1 002104   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002105   000000 701000 xent               TSX1    DDD$BUMP_D$
         1 002106   002227 702000 1                  TSX2    ALTRT

      689    14498    4                           CALL DDS$CNSNT( NCC$, L$ -> TEXT$C, TCODE ) ALTRET( ALTRT )
             14498                                     ;

  14498  1 002107   200071 630500                    EPPR0   TCODE,,AUTO
         1 002110   200114 450500                    STP0    V+4,,AUTO
         1 002111   200074 236100                    LDQ     L$,,AUTO
         1 002112   200113 756100                    STQ     V+3,,AUTO
         1 002113   200073 631500                    EPPR1   NCC$,,AUTO
         1 002114   200112 451500                    STP1    V+2,,AUTO
         1 002115   200112 630500                    EPPR0   V+2,,AUTO
         1 002116   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:103  
         1 002117   000000 701000 xent               TSX1    DDS$CNSNT
         1 002120   002227 702000 1                  TSX2    ALTRT

      690    14499    4                            WHEN$CMD.WCTYPE = TCODE;

  14499  1 002121   200071 235100                    LDA     TCODE,,AUTO
         1 002122   200052 470500                    LDP0    LASTBLT$,,AUTO
         1 002123   000010 755100                    STA     8,,PR0

      691    14500    4                          END;

  14500  1 002124   002164 710000 1                  TRA     s:14516

      692    14501    3                       ELSE IF ( TCODE = 42 ) /* C@N_AT11 */

  14501  1 002125   000052 115007                    CMPA    42,DL
         1 002126   002147 601000 1                  TNZ     s:14508

      693    14502    4                            THEN DO;       /* N_WHEN11 - BYPASS COUNT */

      694    14503    4                                 NCC$ = NCC$ -> POB.SUBLK$( 0 );
             14503                                          /* POINT TO TEXT ( DECIMAL LEXEME ) */

  14503  1 002127   100003 236100                    LDQ     3,,PR1
         1 002130   200073 756100                    STQ     NCC$,,AUTO

      695    14504    4                                 CALL DDS$DECIMAL( NCC$, TCODE ) ALTRET( ALTRT );
             14504                                          /* GET THE NUMBER */

  14504  1 002131   200071 631500                    EPPR1   TCODE,,AUTO
         1 002132   200113 451500                    STP1    V+3,,AUTO
         1 002133   200073 634500                    EPPR4   NCC$,,AUTO
         1 002134   200112 454500                    STP4    V+2,,AUTO
         1 002135   200112 630500                    EPPR0   V+2,,AUTO
         1 002136   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 002137   000000 701000 xent               TSX1    DDS$DECIMAL
         1 002140   002227 702000 1                  TSX2    ALTRT
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:104  

      696    14505    4                                 WHEN$CMD.BYPASS_COUNT = TCODE;

  14505  1 002141   200052 470500                    LDP0    LASTBLT$,,AUTO
         1 002142   200071 235100                    LDA     TCODE,,AUTO
         1 002143   000004 755100                    STA     4,,PR0

      697    14506    4                                 WHEN$CMD.CURRENT_COUNT = TCODE;

  14506  1 002144   200071 236100                    LDQ     TCODE,,AUTO
         1 002145   000005 756100                    STQ     5,,PR0

      698    14507    4                               END;

  14507  1 002146   002164 710000 1                  TRA     s:14516

      699    14508    3                            ELSE IF ( TCODE = 100 ) /* C@SILENT */

  14508  1 002147   000144 115007                    CMPA    100,DL
         1 002150   002154 601000 1                  TNZ     s:14510

      700    14509    3                                 THEN SILENT = '1'B;

  14509  1 002151   400000 236003                    LDQ     -131072,DU
         1 002152   200102 756100                    STQ     SILENT,,AUTO
         1 002153   002164 710000 1                  TRA     s:14516

      701    14510    3                                 ELSE IF ( TCODE = 101 ) /* C@INACTIVE */

  14510  1 002154   000145 115007                    CMPA    101,DL
         1 002155   002161 601000 1                  TNZ     s:14513

      702    14511    3                                      THEN INACTIVE = '1'B;

  14511  1 002156   400000 236003                    LDQ     -131072,DU
         1 002157   200103 756100                    STQ     INACTIVE,,AUTO
         1 002160   002164 710000 1                  TRA     s:14516
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:105  

      703    14512    4                                      ELSE DO; /* UNKNOWN COMMAND */

      704    14513    4                                           S_D.ERROR = 501; /* E@DERR1 */

  14513  1 002161   000765 235007                    LDA     501,DL
         1 002162   300013 755100                    STA     11,,PR3

      705    14514    4                                           GOTO ALTRT; /* SPLIT */

  14514  1 002163   002227 710000 1                  TRA     ALTRT

      706    14515    4                                         END;
      707    14516    3           END;                            /* END "DO IX" */

  14516  1 002164   200067 054100                    AOS     IXX,,AUTO
         1 002165   200024 470500                    LDP0    NCMD$,,AUTO
         1 002166   000001 236100                    LDQ     1,,PR0
         1 002167   000022 772000                    QRL     18
         1 002170   200067 116100                    CMPQ    IXX,,AUTO
         1 002171   001556 605400 1                  TPNZ    s:14426

      708    14517        /*D* Duplicate WHEN breakpoints are allowed */
      709    14518    2        TCODEC = WHEN$CMD.BSIZE;

  14518  1 002172   200052 471500                    LDP1    LASTBLT$,,AUTO
         1 002173   100016 235100                    LDA     14,,PR1
         1 002174   200072 755100                    STA     TCODEC,,AUTO

      710    14519    2        WHEN$ = ADDR(S_D.OUTPUT);

  14519  1 002175   000000 236000 xsym               LDQ     S_D$
         1 002176   005335 036003                    ADLQ    2781,DU
         1 002177   200104 756100                    STQ     WHEN$,,AUTO

      711    14520    2        CALL DDK$GETWVAL (WHEN$, WHEN$CMD.ADDRESS, WHEN$CMD.BOFF,

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:106  
  14520  1 002200   200052 236100                    LDQ     LASTBLT$,,AUTO
         1 002201   000015 036003                    ADLQ    13,DU
         1 002202   200117 756100                    STQ     V+7,,AUTO
         1 002203   200052 236100                    LDQ     LASTBLT$,,AUTO
         1 002204   000014 036003                    ADLQ    12,DU
         1 002205   200116 756100                    STQ     V+6,,AUTO
         1 002206   200052 236100                    LDQ     LASTBLT$,,AUTO
         1 002207   000016 036003                    ADLQ    14,DU
         1 002210   200115 756100                    STQ     V+5,,AUTO
         1 002211   200052 236100                    LDQ     LASTBLT$,,AUTO
         1 002212   000017 036003                    ADLQ    15,DU
         1 002213   200114 756100                    STQ     V+4,,AUTO
         1 002214   200052 236100                    LDQ     LASTBLT$,,AUTO
         1 002215   000012 036003                    ADLQ    10,DU
         1 002216   200113 756100                    STQ     V+3,,AUTO
         1 002217   200104 633500                    EPPR3   WHEN$,,AUTO
         1 002220   200112 453500                    STP3    V+2,,AUTO
         1 002221   200112 630500                    EPPR0   V+2,,AUTO
         1 002222   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 002223   000000 701000 xent               TSX1    DDK$GETWVAL
         1 002224   002231 702000 1                  TSX2    S_FAULT

      712    14521    2          WHEN$CMD.BSIZE, WHEN$CMD.DESC#, WHEN$CMD.NOT_IS) ALTRET(S_FAULT);
      713    14522    2        RETURN;

  14522  1 002225   200066 221300                    LDX1  ! ZITEM$+3,,AUTO
         1 002226   000001 702211                    TSX2  ! 1,X1

      714    14523                                                /**/
      715    14524    2   ALTRT:
      716    14525    2        ALTRETURN;

  14525  1 002227   200066 221300       ALTRT        LDX1  ! ZITEM$+3,,AUTO
         1 002230   000000 702211                    TSX2  ! 0,X1

  14519  1 002231                       S_FAULT      null
      717    14526    2   S_FAULT: ;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:107  
      718    14527    2        S_D.ERROR = 237;          /* E@CANTACCESS */

  14527  1 002231   000355 235007                    LDA     237,DL
         1 002232   000000 470400 xsym               LDP0    S_D$
         1 002233   000013 755100                    STA     11,,PR0

      719    14528    2        CALL DDE$ERROR;

  14528  1 002234   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002235   000000 701000 xent               TSX1    DDE$ERROR
         1 002236   000000 011000                    NOP     0

      720    14529    2        S_D.OUTPUT = 'Data Breakpoint ';

  14529  1 002237   000000 470400 xsym               LDP0    S_D$
         1 002240   040100 100400                    MLR     fill='040'O
         1 002241   000021 000020 0                  ADSC9   SKILLA+1                 cn=0,n=16
         1 002242   005335 004000                    ADSC9   2781,,PR0                cn=0,n=2048

      721    14530    2        BB$ = PINCRC(ADDR(S_D.OUTPUT), SIZEC('Data Breakpoint '));

  14530  1 002243   000000 236000 xsym               LDQ     S_D$
         1 002244   005341 036003                    ADLQ    2785,DU
         1 002245   200077 756100                    STQ     BB$,,AUTO

      722    14531    2        CALL DDR$BINTXT(BB$, S_D.STORED, %UINT_FMT, SIZE);

  14531  1 002246   200100 631500                    EPPR1   SIZE,,AUTO
         1 002247   200115 451500                    STP1    V+5,,AUTO
         1 002250   000025 236000 2                  LDQ     21
         1 002251   200114 756100                    STQ     V+4,,AUTO
         1 002252   000000 236000 xsym               LDQ     S_D$
         1 002253   000135 036003                    ADLQ    93,DU
         1 002254   200113 756100                    STQ     V+3,,AUTO
         1 002255   200077 633500                    EPPR3   BB$,,AUTO
         1 002256   200112 453500                    STP3    V+2,,AUTO
         1 002257   200112 630500                    EPPR0   V+2,,AUTO
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:108  
         1 002260   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 002261   000000 701000 xent               TSX1    DDR$BINTXT
         1 002262   000000 011000                    NOP     0

      723    14532    2        BB$ = PINCRC(BB$, SIZE);

  14532  1 002263   200100 236100                    LDQ     SIZE,,AUTO
         1 002264   000020 736000                    QLS     16
         1 002265   200077 036100                    ADLQ    BB$,,AUTO
         1 002266   200077 756100                    STQ     BB$,,AUTO

      724    14533    2        BB$ -> CHAR22 = ' set inactive by DELTA';

  14533  1 002267   200077 470500                    LDP0    BB$,,AUTO
         1 002270   040100 100400                    MLR     fill='040'O
         1 002271   000025 000026 0                  ADSC9   SKILLA+5                 cn=0,n=22
         1 002272   000000 000026                    ADSC9   0,,PR0                   cn=0,n=22

      725    14534    2        CALL DDQ$WRITE(ADDR(S_D.OUTPUT), SIZEC('Data Breakpoint ')+22+SIZE);

  14534  1 002273   000000 236000 xsym               LDQ     S_D$
         1 002274   005335 036003                    ADLQ    2781,DU
         1 002275   200112 756100                    STQ     V+2,,AUTO
         1 002276   200100 235100                    LDA     SIZE,,AUTO
         1 002277   000046 035007                    ADLA    38,DL
         1 002300   200113 755100                    STA     V+3,,AUTO
         1 002301   200113 630500                    EPPR0   V+3,,AUTO
         1 002302   200115 450500                    STP0    V+5,,AUTO
         1 002303   200112 631500                    EPPR1   V+2,,AUTO
         1 002304   200114 451500                    STP1    V+4,,AUTO
         1 002305   200114 630500                    EPPR0   V+4,,AUTO
         1 002306   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 002307   000000 701000 xent               TSX1    DDQ$WRITE
         1 002310   000000 011000                    NOP     0

      726    14535    2        S_D.FIXCOM.INACTIVE(S_D.STORED) = '1'B;

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:109  
  14535  1 002311   000000 470400 xsym               LDP0    S_D$
         1 002312   000135 236100                    LDQ     93,,PR0
         1 002313   000003 402007                    MPY     3,DL
         1 002314   000001 736000                    QLS     1
         1 002315   000000 620006                    EAX0    0,QL
         1 002316   000400 236003                    LDQ     256,DU
         1 002317   001212 256110                    ORSQ    650,X0,PR0

      727    14536    2        RETURN;

  14536  1 002320   200066 221300                    LDX1  ! ZITEM$+3,,AUTO
         1 002321   000001 702211                    TSX2  ! 1,X1

      728    14537                                                /**/
      729    14538    2   END DDS$BLD_WHEN;
      730    14539        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:110  
      731    14540        /*D* NAME: SET_TRAIL_SEMI
      732    14541             CALL: CALL SET_TRAIL_SEMI
      733    14542             INPUT: PCB.OUT$ - Pointer to root node.
      734    14543             OUTPUT: TRAIL_SEMI - Set if commands have a trailing semicolon.
      735    14544             DESCRIPTION: Determines if there is a trailing SEMICOLON node.
      736    14545                          If so sets TRAIL_SEMI, else resets TRAIL_SEMI. */
      737    14546
      738    14547    1   SET_TRAIL_SEMI: PROC;

  14547  1 002322   200066 741300       SET_TRAIL_S* STX1  ! ZITEM$+3,,AUTO

      739    14548
      740    14549    2   DCL NSB SBIN;
      741    14550    2   DCL NC$ PTR;
      742    14551
      743    14552    2        TRAIL_SEMI = '0'B;

  14552  1 002323   200055 450100                    STZ     TRAIL_SEMI,,AUTO

      744    14553        /* Point to last C@STORED or C@DIRECT command */
      745    14554    2        NC$ = PCB.OUT$ -> POB.SUBLK$( PCB.OUT$ -> POB.NSB - 1 );

  14554  1 002324   200006 470500                    LDP0    PCB+3,,AUTO
         1 002325   000001 220100                    LDX0    1,,PR0
         1 002326   000002 236110                    LDQ     2,X0,PR0
         1 002327   200070 756100                    STQ     NC$,,AUTO

      746    14555        /* Point to last C_COMMAND */
      747    14556    2        NC$ = NC$ -> POB.SUBLK$( NC$ -> POB.NSB - 1 );

  14556  1 002330   200070 471500                    LDP1    NC$,,AUTO
         1 002331   100001 222100                    LDX2    1,,PR1
         1 002332   100002 236112                    LDQ     2,X2,PR1
         1 002333   200070 756100                    STQ     NC$,,AUTO

      748    14557        /* Get number of subnodes from C_COMMAND */
      749    14558    2        NSB = NC$ -> POB.NSB - 1;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:111  

  14558  1 002334   200070 471500                    LDP1    NC$,,AUTO
         1 002335   100001 236100                    LDQ     1,,PR1
         1 002336   000022 772000                    QRL     18
         1 002337   000001 136007                    SBLQ    1,DL
         1 002340   200067 756100                    STQ     NSB,,AUTO

      750    14559    2        IF NSB >= 0

  14559  1 002341   002352 604000 1                  TMI     s:14567

      751    14560    3        THEN DO;

      752    14561        /* The last subnode may be a SEMICOLON */
      753    14562    3             NC$ = NC$ -> POB.SUBLK$( NSB );

  14562  1 002342   100003 236106                    LDQ     3,QL,PR1
         1 002343   200070 756100                    STQ     NC$,,AUTO

      754    14563    3             IF NC$ -> POB.CODE = 93 /* C@SEMICOLON */

  14563  1 002344   200070 471500                    LDP1    NC$,,AUTO
         1 002345   100000 722100                    LXL2    0,,PR1
         1 002346   000135 102003                    CMPX2   93,DU
         1 002347   002352 601000 1                  TNZ     s:14567

      755    14564    3             THEN TRAIL_SEMI = '1'B;

  14564  1 002350   400000 236003                    LDQ     -131072,DU
         1 002351   200055 756100                    STQ     TRAIL_SEMI,,AUTO

      756    14565    3           END;

      757    14566
      758    14567    2        RETURN;

  14567  1 002352   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:112  

      759    14568
      760    14569    2   END SET_TRAIL_SEMI;
      761    14570        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:113  
      762    14571        /*D* NAME: SET_IF_SEMI
      763    14572             CALL: CALL SET_IF_SEMI;
      764    14573             INPUT: NCMD$ - Pointer to DELTA command node.
      765    14574             OUTPUT: SEMI_OFFSET - Offset to semicolon, 0 if none.
      766    14575                     S_D.IFSPEC$ - Address of IFSPEC node, NIL if none.
      767    14576             DESCRIPTION: Determines if there is a SEMICOLON node. If so,
      768    14577                          remembers the offset to it in SEMI_OFFSET, and
      769    14578                          decrements the number of subnodes on this command.
      770    14579                          Does the same with IFSPEC. RETURNs when done. */
      771    14580
      772    14581    1   SET_IF_SEMI: PROC;

  14581  1 002353   200066 741300       SET_IF_SEMI  STX1  ! ZITEM$+3,,AUTO

      773    14582
      774    14583    2   DCL NSB SBIN;
      775    14584    2   DCL NODE$ PTR;
      776    14585
      777    14586    2        NSB = NCMD$ -> POB.NSB - 1;

  14586  1 002354   200024 470500                    LDP0    NCMD$,,AUTO
         1 002355   000001 236100                    LDQ     1,,PR0
         1 002356   000022 772000                    QRL     18
         1 002357   000001 136007                    SBLQ    1,DL
         1 002360   200067 756100                    STQ     NSB,,AUTO

      778    14587    2        SEMI_OFFSET = 0;

  14587  1 002361   200056 450100                    STZ     SEMI_OFFSET,,AUTO

      779    14588    2        S_D.IFSPEC$ = ADDR(NIL);

  14588  1 002362   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 002363   000000 471400 xsym               LDP1    S_D$
         1 002364   100055 756100                    STQ     45,,PR1

      780    14589    3        DO WHILE ( NSB >= 0 );
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:114  

  14589  1 002365   200067 235100                    LDA     NSB,,AUTO
         1 002366   002415 604000 1                  TMI     s:14600

      781    14590    3             NODE$ = NCMD$ -> POB.SUBLK$( NSB );

  14590  1 002367   200024 470500                    LDP0    NCMD$,,AUTO
         1 002370   200067 720100                    LXL0    NSB,,AUTO
         1 002371   000003 236110                    LDQ     3,X0,PR0
         1 002372   200070 756100                    STQ     NODE$,,AUTO

      782    14591    3             IF NODE$ -> POB.CODE = 93 /* C@SEMICOLON */

  14591  1 002373   200070 471500                    LDP1    NODE$,,AUTO
         1 002374   100000 721100                    LXL1    0,,PR1
         1 002375   000135 101003                    CMPX1   93,DU
         1 002376   002402 601000 1                  TNZ     s:14593

      783    14592    3             THEN SEMI_OFFSET = NODE$ -> POB.CPOS;

  14592  1 002377   100002 235100                    LDA     2,,PR1
         1 002400   200056 755100                    STA     SEMI_OFFSET,,AUTO
         1 002401   002411 710000 1                  TRA     s:14596

      784    14593    3             ELSE IF NODE$ -> POB.CODE = 11 /* C@IFSPEC */

  14593  1 002402   000013 101003                    CMPX1   11,DU
         1 002403   002407 601000 1                  TNZ     s:14595

      785    14594    3                  THEN S_D.IFSPEC$ = NODE$;

  14594  1 002404   000000 473400 xsym               LDP3    S_D$
         1 002405   300055 756100                    STQ     45,,PR3
         1 002406   002411 710000 1                  TRA     s:14596

      786    14595    3                  ELSE RETURN;             /* No SEMICOLON or IFSPEC */

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:115  
  14595  1 002407   200066 221300                    LDX1  ! ZITEM$+3,,AUTO
         1 002410   000001 702211                    TSX2  ! 1,X1

      787    14596    3             NCMD$ -> POB.NSB = NSB;

  14596  1 002411   000001 740100                    STX0    1,,PR0

      788    14597    3             NSB = NSB - 1;

  14597  1 002412   000001 336007                    LCQ     1,DL
         1 002413   200067 056100                    ASQ     NSB,,AUTO

      789    14598    3           END;

  14598  1 002414   002367 605000 1                  TPL     s:14590

      790    14599
      791    14600    2        RETURN;

  14600  1 002415   200066 221300                    LDX1  ! ZITEM$+3,,AUTO
         1 002416   000001 702211                    TSX2  ! 1,X1

      792    14601
      793    14602    2   END SET_IF_SEMI;
      794    14603        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:116  
      795    14604        /*F* NAME: ATTDIR_INIT
      796    14605             PURPOSE: TO SETUP BEFORE BUILDING A COMMAND IN THE DIRECT
      797    14606             COMMAND BUFFER.
      798    14607             DESCRIPTION: IF AN ID WAS SPECIFIED THE COMMAND IS REJECTED.
      799    14608             IF NOT WORKING ON A STORED COMMAND THE NUMBER OF COMMANDS
      800    14609             SPECIFIED MUST BE =1. THE BUILD BUFFER IS SET TO VARCOM IF WORKING
      801    14610             ON A STORED COMMAND; FOR A DIRECT COMMAND IT IS SET TO DIRCOM.
      802    14611             IN EITHER CASE, THE BUILD BUFFER MUST NOT BE EMPTY. */
      803    14612        /*D* NAME: ATTDIR_INIT
      804    14613             CALL: CALL ATTDIR_INIT
      805    14614             INTERFACE:
      806    14615             ENVIRONMENT:
      807    14616             INPUT:
      808    14617             OUTPUT: S_D.DESC$ - START OF BUILD BUFFER
      809    14618                     S_D.D$ - START OF BUILD BUFFER
      810    14619                     S_D.LASTBLT$ - START OF BUILD BUFFER
      811    14620                     LASTBLT$ - SAME AS S_D.LASTBLT$
      812    14621             SCRATCH:
      813    14622             DESCRIPTION: IF AN ID WAS SPECIFIED THE COMMAND IS REJECTED.
      814    14623             IF NOT WORKING ON A STORED COMMAND THE NUMBER OF COMMANDS
      815    14624             SPECIFIED MUST BE =1. THE BUILD BUFFER IS SET TO VARCOM IF WORKING
      816    14625             ON A STORED COMMAND; FOR A DIRECT COMMAND IT IS SET TO DIRCOM.
      817    14626             IN EITHER CASE, THE BUILD BUFFER MUST NOT BE EMPTY. */
      818    14627        /**/
      819    14628    1   ATTDIR_INIT: PROC ALTRET;

  14628  1 002417   200106 741300       ATTDIR_INIT  STX1  ! WHEN$+2,,AUTO

      820    14629        /**/
      821    14630    2   DCL IXX SBIN;                           /* TEMP INDEX */
      822    14631    2   DCL V UBIN;
      823    14632                                                /**/
      824    14633    2        IF S_D.STORED~=0

  14633  1 002420   000000 470400 xsym               LDP0    S_D$
         1 002421   000135 235100                    LDA     93,,PR0
         1 002422   002430 600000 1                  TZE     s:14640
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:117  

      825    14634    3        THEN DO;                           /* STORED COMMAND */

      826    14635    3             S_D.DESC$=S_D.VARNEXT$;

  14635  1 002423   000033 236100                    LDQ     27,,PR0
         1 002424   000041 756100                    STQ     33,,PR0

      827    14636    3             S_D.DESCL$ = S_D.VARCOM_HIGH$;

  14636  1 002425   004623 236100                    LDQ     2451,,PR0
         1 002426   000042 756100                    STQ     34,,PR0

      828    14637    3           END;

  14637  1 002427   002436 710000 1                  TRA     s:14644

      829    14638        /* NON-STORED COMMAND */
      830    14639    3        ELSE DO;

      831    14640    3             S_D.DESC$ = ADDR( S_D.DIRCOM );

  14640  1 002430   000000 236000 xsym               LDQ     S_D$
         1 002431   001046 036003                    ADLQ    550,DU
         1 002432   000041 756100                    STQ     33,,PR0

      832    14641    3             S_D.DESCL$ = PINCRW( ADDR( S_D.DIRCOM ), SIZEW( S_D.DIRCOM ) );

  14641  1 002433   000000 236000 xsym               LDQ     S_D$
         1 002434   001212 036003                    ADLQ    650,DU
         1 002435   000042 756100                    STQ     34,,PR0

      833    14642    3           END;

      834    14643        /* CHECK FOR SPACE IN BUILD BUFFER */
      835    14644    2        GOTO CHKSPACE;

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:118  
  14644  1 002436   002621 710000 1                  TRA     CHKSPACE

      836    14645        /**/
      837    14646    2   WHEN_INIT: ENTRY ALTRET;

  14646  1 002437   200106 741300       WHEN_INIT    STX1  ! WHEN$+2,,AUTO

      838    14647        /**/
      839    14648    2        S_D.DESC$ = ADDR( S_D.DIRCOM );

  14648  1 002440   000000 236000 xsym               LDQ     S_D$
         1 002441   001046 036003                    ADLQ    550,DU
         1 002442   000000 470400 xsym               LDP0    S_D$
         1 002443   000041 756100                    STQ     33,,PR0

      840    14649    2        S_D.DESCL$ = PINCRW( ADDR( S_D.DIRCOM ), SIZEW( S_D.DIRCOM ) );

  14649  1 002444   000000 236000 xsym               LDQ     S_D$
         1 002445   001212 036003                    ADLQ    650,DU
         1 002446   000042 756100                    STQ     34,,PR0

      841    14650    2        GOTO CHKSPACE;

  14650  1 002447   002621 710000 1                  TRA     CHKSPACE

      842    14651        /**/
      843    14652        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:119  
      844    14653        /*D* NAME: STORED_INIT
      845    14654             CALL: CALL STORED_INIT
      846    14655             INTERFACE:
      847    14656             ENVIRONMENT:
      848    14657             INPUT:
      849    14658             OUTPUT: S_D.DESC$ - START OF BUILD BUFFER
      850    14659                     S_D.D$ - START OF BUILD BUFFER
      851    14660                     S_D.LASTBLT$ - START OF BUILD BUFFER
      852    14661                     LASTBLT$ - SAME AS S_D.LASTBLT$
      853    14662                     S_D.STORED - STORED COMMAND ID
      854    14663                     TEMPID - SET TO -1 FOR SCAN LOOP
      855    14664             SCRATCH:
      856    14665             DESCRIPTION: IF ALREADY WORKING ON A STORED COMMAND THE COMMAND IS
      857    14666             REJECTED. IF NO ID WAS SPECIFIED THEN FIXCOM IS SEARCHED
      858    14667             FOR AN AVAILABLE SLOT. IF NOT SLOT IS FOUND THEN SET ERROR
      859    14668             CODE & ALTRET. THE STORED COMMAND'S ID IS ASSIGNED TO THE
      860    14669             STORED FLAG. THE BUILD BUFFER IS SET TO VARCOM, AND CHECKED
      861    14670             FOR BEING NOT EMPTY. */
      862    14671        /**/
      863    14672    2   STORED_INIT: ENTRY ALTRET;

  14672  1 002450   200106 741300       STORED_INIT  STX1  ! WHEN$+2,,AUTO

      864    14673        /**/
      865    14674        /* MAKE SURE THE STORED COMMAND IS NOT SPECIFIED AS AN ATTACHMENT */
      866    14675    2        IF S_D.RUM OR S_D.ANLZ

  14675  1 002451   000000 470400 xsym               LDP0    S_D$
         1 002452   004755 234100                    SZN     2541,,PR0
         1 002453   002456 604000 1                  TMI     s:14677
         1 002454   004756 234100                    SZN     2542,,PR0
         1 002455   002462 605000 1                  TPL     s:14680

      867    14676    3        THEN DO;

      868    14677    3             S_D.ERROR = 125;       /* E@NOTDELTA */

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:120  
  14677  1 002456   000175 235007                    LDA     125,DL
         1 002457   000013 755100                    STA     11,,PR0

      869    14678    3             ALTRETURN;

  14678  1 002460   200106 221300                    LDX1  ! WHEN$+2,,AUTO
         1 002461   000000 702211                    TSX2  ! 0,X1

      870    14679    3           END;
      871    14680    2        IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.FANLZ

  14680  1 002462   000101 234100                    SZN     65,,PR0
         1 002463   002473 605000 1                  TPL     s:14686
         1 002464   000102 471500                    LDP1    66,,PR0
         1 002465   100001 430100                    FSZN    1,,PR1
         1 002466   002473 605000 1                  TPL     s:14686

      872    14681    3        THEN DO;

      873    14682    3             S_D.ERROR = 125;       /* E@NOTDELTA */

  14682  1 002467   000175 235007                    LDA     125,DL
         1 002470   000013 755100                    STA     11,,PR0

      874    14683    3             ALTRETURN;

  14683  1 002471   200106 221300                    LDX1  ! WHEN$+2,,AUTO
         1 002472   000000 702211                    TSX2  ! 0,X1

      875    14684    3           END;
      876    14685        /* CHECK IF ID WAS SPECIFIED */
      877    14686    2        IF TEMPID=-1

  14686  1 002473   200021 235100                    LDA     TEMPID,,AUTO
         1 002474   000027 115000 xsym               CMPA    B_VECTNIL+23
         1 002475   002522 601000 1                  TNZ     s:14699

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:121  
      878    14687    3        THEN DO;            /* ID NOT SPECIFIED - TRY TO FIND AN AVAILABLE ONE */

      879    14688    4             DO IXX=1 TO (SIZEW(S_D.FIXCOM)/SIZEW(S_D.FIXCOM(0)))-1;

  14688  1 002476   000001 236007                    LDQ     1,DL
         1 002477   200107 756100                    STQ     IXX,,AUTO
         1 002500   002510 710000 1                  TRA     s:14691+1

      880    14689    4                  IF S_D.FIXCOM.CMD(IXX)=0

  14689  1 002501   200107 236100                    LDQ     IXX,,AUTO
         1 002502   000006 402007                    MPY     6,DL
         1 002503   000000 470400 xsym               LDP0    S_D$
         1 002504   001212 236106                    LDQ     650,QL,PR0
         1 002505   777000 316003                    CANQ    -512,DU
         1 002506   002517 600000 1                  TZE     FOUND

      881    14690    4                  THEN GOTO FOUND;
      882    14691    4                END;

  14691  1 002507   200107 054100                    AOS     IXX,,AUTO
         1 002510   200107 235100                    LDA     IXX,,AUTO
         1 002511   000453 115007                    CMPA    299,DL
         1 002512   002501 604400 1                  TMOZ    s:14689

      883    14692                                                /* NO SLOTS AVAILABLE */
      884    14693    3             S_D.ERROR=17;            /* E@UERR6 */

  14693  1 002513   000021 236007                    LDQ     17,DL
         1 002514   000013 756100                    STQ     11,,PR0

      885    14694    3             ALTRETURN;

  14694  1 002515   200106 221300                    LDX1  ! WHEN$+2,,AUTO
         1 002516   000000 702211                    TSX2  ! 0,X1

      886    14695    3   FOUND:                                  /* FOUND A FREE SLOT IN FIXCOM */
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:122  
      887    14696    3             S_D.STORED=IXX;

  14696  1 002517   200107 235100       FOUND        LDA     IXX,,AUTO
         1 002520   000135 755100                    STA     93,,PR0

      888    14697    3           END;

  14697  1 002521   002605 710000 1                  TRA     s:14723

      889    14698    3        ELSE DO;                      /* ID SPECIFIED, GET IT & SET STORED FLAG */

      890    14699    3             V = S_D.FIXCOM.CMD( TEMPID );

  14699  1 002522   200021 236100                    LDQ     TEMPID,,AUTO
         1 002523   000006 402007                    MPY     6,DL
         1 002524   001212 236106                    LDQ     650,QL,PR0
         1 002525   000033 772000                    QRL     27
         1 002526   200110 756100                    STQ     V,,AUTO

      891    14700    3             IF V ~= 0

  14700  1 002527   002602 600000 1                  TZE     s:14721

      892    14701    4             THEN DO;       /* IMPLICIT KILL, EVEN IF FURTHER ERROR ENCOUNTERED */

      893    14702    4                  S_D.KILL1 = TEMPID;

  14702  1 002530   200021 235100                    LDA     TEMPID,,AUTO
         1 002531   000063 755100                    STA     51,,PR0

      894    14703    4                  CALL INDEX( IXX, BINASC( V ), SKILLT ) ALTRET( GOKILL1 );

  14703  1 002532   200110 236100                    LDQ     V,,AUTO
         1 002533   000033 736000                    QLS     27
         1 002534   000001 276000 2                  ORQ     1
         1 002535   200112 756100                    STQ     V+2,,AUTO
         1 002536   000100 124400                    SCM     mask='000'O
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:123  
         1 002537   000020 000004 0                  ADSC9   SKILLA                   cn=0,n=4
         1 002540   200112 000001                    ADSC9   V+2,,AUTO                cn=0,n=1
         1 002541   200107 000100                    ARG     IXX,,AUTO
         1 002542   002565 606400 1                  TTN     GOKILL1

      895    14704    4                  IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %HOST

  14704  1 002543   006714 235100                    LDA     3532,,PR0
         1 002544   000001 115007                    CMPA    1,DL
         1 002545   002571 601000 1                  TNZ     s:14719

      896    14705    5                  THEN DO;

      897    14706    6                       DO CASE ( IXX );

  14706  1 002546   200107 236100                    LDQ     IXX,,AUTO
         1 002547   000004 116007                    CMPQ    4,DL
         1 002550   002552 602006 1                  TNC     s:14706+4,QL
         1 002551   002565 710000 1                  TRA     GOKILL1
         1 002552   002556 710000 1                  TRA     s:14708
         1 002553   002560 710000 1                  TRA     s:14710
         1 002554   002562 710000 1                  TRA     s:14712
         1 002555   002564 710000 1                  TRA     s:14714

      898    14707    6                         CASE ( 0 );

      899    14708    6                            S_D.ONABORT = 0;

  14708  1 002556   004744 450100                    STZ     2532,,PR0
         1 002557   002565 710000 1                  TRA     GOKILL1

      900    14709    6                         CASE ( 1 );

      901    14710    6                            S_D.ONEXIT = 0;

  14710  1 002560   004746 450100                    STZ     2534,,PR0
         1 002561   002565 710000 1                  TRA     GOKILL1
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:124  

      902    14711    6                         CASE ( 2 );

      903    14712    6                            S_D.ONCALLS = 0;

  14712  1 002562   004745 450100                    STZ     2533,,PR0
         1 002563   002565 710000 1                  TRA     GOKILL1

      904    14713    6                         CASE ( 3 );

      905    14714    6                            S_D.ONNODES = 0;

  14714  1 002564   004747 450100                    STZ     2535,,PR0

      906    14715    6                         END;

      907    14716    5   GOKILL1:
      908    14717    5                       CALL DDA$KILL1;

  14717  1 002565   000002 631400 xsym  GOKILL1      EPPR1   B_VECTNIL+2
         1 002566   000000 701000 xent               TSX1    DDA$KILL1
         1 002567   000000 011000                    NOP     0

      909    14718    5                     END;

  14718  1 002570   002602 710000 1                  TRA     s:14721

      910    14719    4                  ELSE CALL DFA$KILL1('1'B, V, '1'B);

  14719  1 002571   000026 236000 2                  LDQ     22
         1 002572   200114 756100                    STQ     V+4,,AUTO
         1 002573   200110 631500                    EPPR1   V,,AUTO
         1 002574   200113 451500                    STP1    V+3,,AUTO
         1 002575   200112 756100                    STQ     V+2,,AUTO
         1 002576   200112 630500                    EPPR0   V+2,,AUTO
         1 002577   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 002600   000000 701000 xent               TSX1    DFA$KILL1
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:125  
         1 002601   000000 011000                    NOP     0

      911    14720    4                END;                       /* IMPLICIT KILL */

      912    14721    3             S_D.STORED=TEMPID;

  14721  1 002602   000000 470400 xsym               LDP0    S_D$
         1 002603   200021 235100                    LDA     TEMPID,,AUTO
         1 002604   000135 755100                    STA     93,,PR0

      913    14722    3           END;

      914    14723    2        TEMPID = -1;                       /* RESET FOR SCAN LOOP */

  14723  1 002605   000001 336007                    LCQ     1,DL
         1 002606   200021 756100                    STQ     TEMPID,,AUTO

      915    14724        /* INITIALIZE FIXCOM SLOT */
      916    14725    2        S_D.FIXCOM(S_D.STORED) = '0'B;

  14725  1 002607   000135 236100                    LDQ     93,,PR0
         1 002610   000003 402007                    MPY     3,DL
         1 002611   000003 736000                    QLS     3
         1 002612   000106 100400                    MLR     fill='000'O
         1 002613   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 002614   001212 000030                    ADSC9   650,Q,PR0                cn=0,n=24

      917    14726        /* SETUP BUILD BUFFER AS VARCOM */
      918    14727    2        S_D.DESC$=S_D.VARNEXT$;

  14727  1 002615   000033 236100                    LDQ     27,,PR0
         1 002616   000041 756100                    STQ     33,,PR0

      919    14728    2        S_D.DESCL$ = S_D.VARCOM_HIGH$;

  14728  1 002617   004623 236100                    LDQ     2451,,PR0
         1 002620   000042 756100                    STQ     34,,PR0
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:126  

      920    14729                                           /* MAKE SURE BUILD BUFFER IS NOT EMPTY */
      921    14730    2   CHKSPACE:
      922    14731                                                /**/
      923    14732    2        IF S_D.DESC$<S_D.DESCL$

  14732  1 002621   000041 116100       CHKSPACE     CMPQ    33,,PR0
         1 002622   002632 602000 1                  TNC     s:14740
         1 002623   002632 600000 1                  TZE     s:14740

      924    14733    3        THEN DO;                           /* BUFFER NOT EMPTY */

      925    14734    3             S_D.D$ = S_D.DESC$;

  14734  1 002624   000041 236100                    LDQ     33,,PR0
         1 002625   000044 756100                    STQ     36,,PR0

      926    14735    3             S_D.LASTBLT$ = S_D.DESC$;

  14735  1 002626   000134 756100                    STQ     92,,PR0

      927    14736    3             LASTBLT$ = S_D.DESC$;

  14736  1 002627   200052 756100                    STQ     LASTBLT$,,AUTO

      928    14737    3             RETURN;

  14737  1 002630   200106 221300                    LDX1  ! WHEN$+2,,AUTO
         1 002631   000001 702211                    TSX2  ! 1,X1

      929    14738    3           END;
      930    14739    3        ELSE DO;                           /* BUFFER IS EMPTY */

      931    14740    3             S_D.ERROR = 15;          /* E@UERR4 */

  14740  1 002632   000017 235007                    LDA     15,DL
         1 002633   000013 755100                    STA     11,,PR0
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:127  

      932    14741    3             ALTRETURN;

  14741  1 002634   200106 221300                    LDX1  ! WHEN$+2,,AUTO
         1 002635   000000 702211                    TSX2  ! 0,X1

U$$
 Sect OctLoc
   0     000   000000 000000                                                    ....

P_PCB
 Sect OctLoc
   0     001   000000 006014   000000 006014   000000 006014   000000 006014    ................
   0     005   000000 000000   000000 400000   000000 000000   040042 040042    ............ " "
   0     011   000000 040000   000000 000000   000000 000000   000000 006014    .. .............
   0     015   000000 006014   000000 000000                                    ........

ATREEA
 Sect OctLoc
   0     017   071010 034035                                                    9...

SKILLA
 Sect OctLoc
   0     020   036040 065066                                                    . 56

(unnamed)
 Sect OctLoc
   0     021   104141 164141   040102 162145   141153 160157   151156 164040    Data Breakpoint
   0     025   040163 145164   040151 156141   143164 151166   145040 142171     set inactive by
   0     031   040104 105114   124101 040040                                     DELTA

(unnamed)
 Sect OctLoc
   2     000   000000 006000   000040 040040   000000 000071   000002 006000    .....   ...9....
   2     004   000012 006000   000000 000034   000005 006000   000000 000105    ...............E
   2     010   000007 006000   000000 006000   000000 000016   000012 006000    ................
   2     014   000000 006000   000000 006000   000000 006000   000000 000021    ................
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:128  
   2     020   000000 000103   000017 006000   000020 006000   000000 000020    ...C............
   2     024   000023 006000   000004 006000   000030 006000                    ............
      933    14742    3           END;
      934    14743                                                /**/
      935    14744    2   END ATTDIR_INIT;
      936    14745                                                /**/
      937    14746    1   END DDS$SCAN;
      938    14747        %EOD;

PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:129  
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$SCAN.

   Procedure DDS$SCAN requires 1438 words for executable code.
   Procedure DDS$SCAN requires 80 words of local(AUTO) storage.
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:130  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:131  
          MINI XREF LISTING

ALL_ATTACH.LENGTH
     10732**DCL     13951<<ASSIGN  13977<<ASSIGN
ALL_ATTACH.UNUSED
     10733**DCL     10734--REDEF   10738--REDEF
ALTRT IN PROCEDURE DDS$BLD_WHEN
     14525**LABEL   14407--GOTO    14414--GOTO    14420--GOTO    14435--CALLALT 14436--CALLALT 14438--CALLALT
     14443--CALLALT 14444--CALLALT 14453--CALLALT 14456--CALLALT 14466--GOTO    14471--GOTO    14479--GOTO
     14484--GOTO    14497--CALLALT 14498--CALLALT 14504--CALLALT 14514--GOTO
ATREEA
     13823**DCL     13827--REDEF
ATREET
     13827**DCL     13938>>CALLBLT
ATTDIR_INIT
     14628**PROC    13932--CALL    13961--CALL    14015--CALL    14098--CALL    14130--CALL
ATTEXT$
      8538**DCL     14113<<ASSIGN  14115>>ASSIGN  14165<<ASSIGN  14172>>ASSIGN
ATT_SIZE
      8537**DCL      8539--IMP-SIZ 14003<<ASSIGN  14004>>ASSIGN  14005>>ASSIGN  14111<<ASSIGN  14112>>ASSIGN
     14115>>ASSIGN  14164<<ASSIGN  14167>>CALL    14171>>ASSIGN  14172>>ASSIGN
AT_FIRST.ATT_OFFSET
     10725**DCL     14110<<ASSIGN
AT_FIRST.IF_OFFSET
     10726**DCL     14108<<ASSIGN
AT_FIRST.LENGTH
     10704**DCL     14116<<ASSIGN  14118>>ASSIGN  14173<<ASSIGN  14175>>ASSIGN
AT_FIRST.TEXT_OFFSET
     10723**DCL     14106<<ASSIGN  14165>>ASSIGN
AT_FIRST.TEXT_SIZE
     10724**DCL     14112<<ASSIGN  14165>>ASSIGN  14167>>CALL    14167>>CALL    14171<<ASSIGN  14171>>ASSIGN
AT_FIRST.UNUSED
     10705**DCL     10706--REDEF   10710--REDEF
B$JIT.CPFLAGS1.SLEAZE
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:132  
       443**DCL       443--REDEF
B$JIT.ERR.MID
       350**DCL       350--REDEF
B$JIT.JRESPEAK
       511**DCL       512--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       620**DCL       620--REDEF     621--REDEF
B$JIT.PNR
       524**DCL       524--REDEF
B$JIT.TSLINE
       618**DCL       619--REDEF
B$JIT$
       625**DCL       344--IMP-PTR
B$NODE.FLGS.NOW_IN
      9317**DCL     14490>>IF
BB$ IN PROCEDURE DDS$BLD_WHEN
     14288**DCL     14530<<ASSIGN  14531<>CALL    14532<<ASSIGN  14532>>ASSIGN  14533>>ASSIGN
BIGTREE
     13980**LABEL   13970--CALLALT
BUFF$ER IN PROCEDURE DDS$BLD_WHEN
     14293**DCL     14454<<ASSIGN  14454>>ASSIGN
CHAR$ATT
      8539**DCL     14004>>ASSIGN  14115<<ASSIGN  14172<<ASSIGN
CHAR22 IN PROCEDURE DDS$BLD_WHEN
     14287**DCL     14533<<ASSIGN
CHKSPACE IN PROCEDURE ATTDIR_INIT
     14732**LABEL   14644--GOTO    14650--GOTO
DDA$KILL1
     13841**DCL-ENT 14717--CALL
DDD$BUMP_D$
     13846**DCL-ENT 14114--CALL    14167--CALL    14453--CALL    14497--CALL
DDE$ERROR
     13845**DCL-ENT 14198--CALL    14244--CALL    14528--CALL
DDK$EVAL IN PROCEDURE DDS$BLD_WHEN
     14296**DCL-ENT 14456--CALL
DDK$GETWVAL IN PROCEDURE DDS$BLD_WHEN
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:133  
     14297**DCL-ENT 14520--CALL
DDQ$WRITE
     13860**DCL-ENT 14534--CALL
DDR$BINTXT
     13859**DCL-ENT 14531--CALL
DDS$ATTDIRA
     13849**DCL-ENT 14436--CALL
DDS$BLD
     13856**DCL-ENT 13943--CALL    13945--CALL    13947--CALL    13949--CALL    13967--CALL    13973--CALL
     14049--CALL    14103--CALL    14140--CALL
DDS$BLD_WHEN
     14276**PROC    14099--CALL
DDS$CNSNT
     13854**DCL-ENT 14498--CALL
DDS$DECIMAL
     13847**DCL-ENT 14080--CALL    14504--CALL
DDS$PROMPT
     13843**DCL-ENT 13917--CALL
DDS$PROMPTC
     13844**DCL-ENT 13916--CALL
DDS$SET_C2D
     13850**DCL-ENT 13905--CALL    13997--CALL
DDS$SET_D2Q
     13851**DCL-ENT 13933--CALL    13962--CALL    14009--CALL    14067--CALL
DDS$SET_Q2D
     13852**DCL-ENT 14442--CALL
DDS$STOREDA
     13848**DCL-ENT 14444--CALL
DDS$SUCCESS
     13857**DCL-ENT  8519--DCLINIT
DDS$VREFCOM
     13853**DCL-ENT 14438--CALL
DFA$KILL1
     13842**DCL-ENT 14719--CALL
DUA$RUM_COMM
     13855**DCL-ENT 14151--CALL
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:134  
D_ACMDS
     13836**DCL     14002--ASSIGN
D_ATREE
     13839**DCL     13927--ASSIGN
D_CCMDS
     13835**DCL     14159--ASSIGN
D_DCMDS
     13834**DCL     14072--ASSIGN
D_MTREE
     13837**DCL     13956--ASSIGN
D_XDELTA
     13838**DCL     14097>>IF
FOUND IN PROCEDURE ATTDIR_INIT
     14696**LABEL   14690--GOTO
FPRG$CONTEXT.FANLZ
     10801**DCL     14680>>IF
FPRG$CONTEXT.INTERPRETIVE IN PROCEDURE DDS$BLD_WHEN
     14341**DCL     14411>>IF
GOKILL1 IN PROCEDURE ATTDIR_INIT
     14717**LABEL   14703--CALLALT
IF$CONST
     10749**DCL     14497--CALL
IF$CONST.CONS.TANT
     10760**DCL     10761--REDEF
IF$CONST.P.ADR
     10769**DCL     10773--REDEF
IF$CONST.SIZE
     10750**DCL     10751--REDEF
IF$CONST.TEXT
     10752**DCL     10753--REDEF   10754--REDEF   10758--REDEF   10763--REDEF   10767--REDEF   10780--REDEF
IF$CONST.TEXTA8.BYT
     10756**DCL     10757--REDEF
INACTIVE IN PROCEDURE DDS$BLD_WHEN
     14292**DCL     14424<<ASSIGN  14450>>ASSIGN  14511<<ASSIGN
IX
      8524**DCL     13938<<CALLBLT 13939>>DOCASE
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:135  
IXX IN PROCEDURE ATTDIR_INIT
     14630**DCL     14688<<DOINDEX 14689>>IF      14696>>ASSIGN  14703<<CALLBLT 14706>>DOCASE
IXX IN PROCEDURE DDS$BLD_WHEN
     14278**DCL     14425<<DOINDEX 14426>>ASSIGN
L$ IN PROCEDURE DDS$BLD_WHEN
     14284**DCL     14428<<ASSIGN  14445<<ASSIGN  14448>>ASSIGN  14454>>ASSIGN  14455>>ASSIGN  14476>>IF
     14481>>IF      14481>>IF      14498>>CALL    14498>>CALL
LASTBLT$
      8532**DCL     14299--IMP-PTR 14423<<ASSIGN  14451>>ASSIGN  14452>>ASSIGN  14456>>CALL    14456>>CALL
     14456>>CALL    14456>>CALL    14456>>CALL    14456>>CALL    14458>>IF      14460>>IF      14462>>IF
     14462>>IF      14474>>ASSIGN  14474>>ASSIGN  14475>>ASSIGN  14475>>ASSIGN  14475>>ASSIGN  14475>>ASSIGN
     14488>>ASSIGN  14494>>ASSIGN  14499>>ASSIGN  14505>>ASSIGN  14506>>ASSIGN  14518>>ASSIGN  14520>>CALL
     14520>>CALL    14520>>CALL    14520>>CALL    14520>>CALL    14736<<ASSIGN
MACHAR
      8531**DCL     13995<<ASSIGN  14209>>ASSIGN
MAERR
      8526**DCL     13911<<ASSIGN  13986<<ASSIGN  14205>>IF      14207>>ASSIGN
MAERR$
      8527**DCL     13987<<ASSIGN  13988>>IF      13990>>ASSIGN  13990>>ASSIGN  13993<<ASSIGN  14208>>ASSIGN
MAERRTEXTC
      8528**DCL     13990<<ASSIGN  13993--ASSIGN
MAERRTEXTC.SIZE
      8529**DCL     13991>>IF      13992<<ASSIGN
MAERRTEXTC.TEXT
      8530**DCL     13991--IF      13992--ASSIGN
NC$
      8521**DCL     14011<<ASSIGN  14012>>ASSIGN  14074<<ASSIGN  14075>>IF      14077>>ASSIGN  14078>>IF
     14083>>ASSIGN  14122>>IF      14124>>ASSIGN  14148>>IF      14161<<ASSIGN  14162>>ASSIGN
NC$ IN PROCEDURE SET_TRAIL_SEMI
     14550**DCL     14554<<ASSIGN  14556<<ASSIGN  14556>>ASSIGN  14556>>ASSIGN  14558>>ASSIGN  14562<<ASSIGN
     14562>>ASSIGN  14563>>IF
NCC$ IN PROCEDURE DDS$BLD_WHEN
     14283**DCL     14426<<ASSIGN  14427>>ASSIGN  14438<>CALL    14439>>ASSIGN  14498<>CALL    14503<<ASSIGN
     14503>>ASSIGN  14504<>CALL
NCMD$
      8523**DCL     13935<<ASSIGN  13936>>ASSIGN  13937>>ASSIGN  13971<<ASSIGN  13972>>ASSIGN  14012<<ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:136  
     14013>>ASSIGN  14016>>ASSIGN  14077<<ASSIGN  14080<>CALL    14083<<ASSIGN  14090>>ASSIGN  14092>>ASSIGN
     14124<<ASSIGN  14125>>ASSIGN  14131>>ASSIGN  14162<<ASSIGN  14163>>ASSIGN  14425>>DOINDEX 14426>>ASSIGN
     14586>>ASSIGN  14590>>ASSIGN  14596>>ASSIGN
NODE$ IN PROCEDURE SET_IF_SEMI
     14584**DCL     14590<<ASSIGN  14591>>IF      14592>>ASSIGN  14593>>IF      14594>>ASSIGN
NSB IN PROCEDURE SET_IF_SEMI
     14583**DCL     14586<<ASSIGN  14589>>DOWHILE 14590>>ASSIGN  14596>>ASSIGN  14597<<ASSIGN  14597>>ASSIGN
NSB IN PROCEDURE SET_TRAIL_SEMI
     14549**DCL     14558<<ASSIGN  14559>>IF      14562>>ASSIGN
PARSE$
     13833**DCL     13899>>ASSIGN
PARSMORE
     13910**LABEL   14059--GOTO    14120--GOTO    14154--GOTO    14178--GOTO    14201--GOTO
PCB
      8337**DCL     13897<<ASSIGN  13934<>CALL    13970<>CALL    14010<>CALL    14073<>CALL    14160<>CALL
PCB.ERROR.CODE
      8449**DCL     13980>>IF      14194>>IF      14204>>IF      14225>>ASSIGN
PCB.HI_CHAR
      8488**DCL     13995>>ASSIGN  14197>>ASSIGN  14213>>ASSIGN
PCB.NCHARS
      8484**DCL     13919<<ASSIGN  14005<<ASSIGN
PCB.OUT$
      8350**DCL     13935>>ASSIGN  13971>>ASSIGN  14011>>ASSIGN  14074>>ASSIGN  14161>>ASSIGN  14554>>ASSIGN
     14554>>ASSIGN
PCB.ROOT$
      8342**DCL     13927<<ASSIGN  13956<<ASSIGN  14002<<ASSIGN  14072<<ASSIGN  14159<<ASSIGN
PCB.TEXT$
      8338**DCL     13898<<ASSIGN
PCB.U$$
      8355**DCL     13901<<ASSIGN
PCB.WKSZ
      8367**DCL     13900<<ASSIGN
PCB.WORK$
      8346**DCL     13899<<ASSIGN
POB.CODE
      9366**DCL     13937>>ASSIGN  14016>>ASSIGN  14075>>IF      14092>>ASSIGN  14122>>IF      14131>>ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:137  
     14148>>IF      14427>>ASSIGN  14563>>IF      14591>>IF      14593>>IF
POB.CPOS
      9384**DCL     14108>>ASSIGN  14439>>ASSIGN  14592>>ASSIGN
POB.NSB
      9370**DCL     14078>>IF      14425>>DOINDEX 14554>>ASSIGN  14556>>ASSIGN  14558>>ASSIGN  14586>>ASSIGN
     14596<<ASSIGN
POB.SUBLK$
      9391**DCL     13935>>ASSIGN  14011>>ASSIGN  14012>>ASSIGN  14074>>ASSIGN  14077>>ASSIGN  14083>>ASSIGN
     14124>>ASSIGN  14161>>ASSIGN  14162>>ASSIGN  14426>>ASSIGN  14439>>ASSIGN  14503>>ASSIGN  14554>>ASSIGN
     14556>>ASSIGN  14562>>ASSIGN  14590>>ASSIGN
P_PCB
     13642**DCL     13897>>ASSIGN
REMERR
     13984**LABEL   13973--CALLALT
RESETMA
     13997**LABEL   13982--GOTO
S1$ IN PROCEDURE DDS$BLD_WHEN
     14285**DCL     14437<<ASSIGN  14446>>ASSIGN  14454>>ASSIGN
S2$ IN PROCEDURE DDS$BLD_WHEN
     14286**DCL     14441<<ASSIGN  14446>>ASSIGN
SCAN1
      8533**DCL     13879<<ASSIGN  13886<<ASSIGN  13894<<ASSIGN  13913>>IF      14056>>IF      14088>>IF
     14152>>IF      14185>>IF      14241>>IF      14252>>IF
SCAN2
      8534**DCL     13880<<ASSIGN  13887<<ASSIGN  13893<<ASSIGN  13913>>IF      13913>>IF      13980>>IF
     13984>>IF      14000>>IF      14238>>IF      14252>>IF
SEMI_OFFSET
      8536**DCL     13881<<ASSIGN  13888<<ASSIGN  14027>>IF      14050>>IF      14051>>ASSIGN  14109>>IF
     14110>>ASSIGN  14141>>IF      14143>>ASSIGN  14144>>ASSIGN  14214>>IF      14218>>ASSIGN  14587<<ASSIGN
     14592<<ASSIGN
SET_IF_SEMI
     14581**PROC    14014--CALL    14091--CALL    14129--CALL
SET_TRAIL_SEMI
     14547**PROC    14086--CALL    14126--CALL    14176--CALL
SILENT IN PROCEDURE DDS$BLD_WHEN
     14291**DCL     14422<<ASSIGN  14449>>ASSIGN  14509<<ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:138  
SIZE IN PROCEDURE DDS$BLD_WHEN
     14289**DCL     14531<>CALL    14532>>ASSIGN  14534>>CALL
SKILLA
     13828**DCL     13832--REDEF
SKILLT
     13832**DCL     14703>>CALLBLT
START
     13897**LABEL   13882--GOTO    13889--GOTO    14063--GOTO    14187--GOTO    14254--GOTO
STORED_INIT IN PROCEDURE ATTDIR_INIT
     14672**ENTRY   14102--CALL    14443--CALL
S_D.ACMDS$
     12492**DCL     14004>>ASSIGN
S_D.ACMDS_OFF
     12490**DCL     14004>>ASSIGN  14005>>ASSIGN  14051<<ASSIGN  14051>>ASSIGN  14052<<ASSIGN  14216>>ASSIGN
S_D.ACMDS_SIZE
     12494**DCL     14003>>ASSIGN  14052>>ASSIGN
S_D.ANLZ
     12921**DCL     13942>>IF      14675>>IF
S_D.B$TREE$
     12941**DCL     14490>>IF
S_D.CURRENT_CHANNEL
     13221**DCL     13223--REDEF
S_D.CURRENT_FPRG_CONTEXT$
     12421**DCL     14409>>IF      14411>>IF      14417>>IF      14680>>IF
S_D.D$
     12359**DCL     13951>>ASSIGN  13977>>ASSIGN  14106>>ASSIGN  14113>>ASSIGN  14116>>ASSIGN  14117>>ASSIGN
     14166<<ASSIGN  14173>>ASSIGN  14174>>ASSIGN  14428>>ASSIGN  14437>>ASSIGN  14440>>ASSIGN  14441>>ASSIGN
     14445>>ASSIGN  14734<<ASSIGN
S_D.DEBUGA
     12373**DCL     12375--REDEF
S_D.DESC$
     12353**DCL     14440>>ASSIGN  14455<<ASSIGN  14635<<ASSIGN  14640<<ASSIGN  14648<<ASSIGN  14727<<ASSIGN
     14732>>IF      14734>>ASSIGN  14735>>ASSIGN  14736>>ASSIGN
S_D.DESCL$
     12355**DCL     14636<<ASSIGN  14641<<ASSIGN  14649<<ASSIGN  14728<<ASSIGN  14732>>IF
S_D.DIRCOM
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:139  
     12725**DCL     14640--ASSIGN  14641--ASSIGN  14641--ASSIGN  14648--ASSIGN  14649--ASSIGN  14649--ASSIGN
S_D.DIRECT_OFF
     12814**DCL     14145<<ASSIGN
S_D.DIRECT_SIZE
     12812**DCL     14144<<ASSIGN
S_D.DIRECT_TEXT
     13262**DCL     14143<<ASSIGN
S_D.DO_ATTACH
     12496**DCL     14027>>IF      14215>>IF
S_D.EIS
     13331**DCL     13360--REDEF
S_D.ERROR
     12302**DCL     13930<<ASSIGN  13959<<ASSIGN  13986>>ASSIGN  14008<<ASSIGN  14037<<ASSIGN  14039<<ASSIGN
     14041<<ASSIGN  14043<<ASSIGN  14045<<ASSIGN  14069<<ASSIGN  14196<<ASSIGN  14207<<ASSIGN  14212<<ASSIGN
     14224<<ASSIGN  14228<<ASSIGN  14229<<ASSIGN  14230<<ASSIGN  14231<<ASSIGN  14232<<ASSIGN  14233<<ASSIGN
     14234<<ASSIGN  14235<<ASSIGN  14236<<ASSIGN  14241>>IF      14406<<ASSIGN  14413<<ASSIGN  14419<<ASSIGN
     14465<<ASSIGN  14470<<ASSIGN  14478<<ASSIGN  14483<<ASSIGN  14513<<ASSIGN  14527<<ASSIGN  14677<<ASSIGN
     14682<<ASSIGN  14693<<ASSIGN  14740<<ASSIGN
S_D.ERROR_HICHAR
     12915**DCL     14197<<ASSIGN  14209<<ASSIGN  14213<<ASSIGN  14216<<ASSIGN  14216>>ASSIGN  14218<<ASSIGN
     14218>>ASSIGN  14225<<ASSIGN
S_D.ERROR_SYM$
     12326**DCL     13903<<ASSIGN  13929<<ASSIGN  13958<<ASSIGN  13987>>ASSIGN  14007<<ASSIGN  14068<<ASSIGN
     14208<<ASSIGN
S_D.FIXCOM
     12727**DCL     14081--IF      14081--IF      14688--DOINDEX 14688--DOINDEX 14725<<ASSIGN
S_D.FIXCOM.CDF
     12737**DCL     14448<<ASSIGN
S_D.FIXCOM.CMD
     12729**DCL     14246>>IF      14249<<ASSIGN  14689>>IF      14699>>ASSIGN
S_D.FIXCOM.INACTIVE
     12730**DCL     14450<<ASSIGN  14535<<ASSIGN
S_D.FIXCOM.NOT_IN
     12732**DCL     14491<<ASSIGN
S_D.FIXCOM.SILENT
     12731**DCL     14449<<ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:140  
S_D.FIXCOM.TAL
     12736**DCL     14118<<ASSIGN  14175<<ASSIGN  14248>>ASSIGN
S_D.FIXLAST
     12365**DCL     14061>>IF      14062<<ASSIGN  14183>>IF      14184<<ASSIGN
S_D.FPRG
     12419**DCL     14409>>IF      14417>>IF      14680>>IF
S_D.GHOST1
     12528**DCL     14199>>IF      14220>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
     13264**DCL     13265--REDEF   13279--REDEF
S_D.IFSPEC$
     12379**DCL     13931<<ASSIGN  13960<<ASSIGN  14107>>IF      14108>>ASSIGN  14588<<ASSIGN  14594<<ASSIGN
S_D.INPUT
     12536**DCL     13898--ASSIGN  13963>>IF      14004<<ASSIGN  14055>>IF      14115>>ASSIGN  14143>>ASSIGN
     14172>>ASSIGN
S_D.JDE
     12878**DCL     12879--REDEF
S_D.KILL1
     12391**DCL     14702<<ASSIGN
S_D.L$.VALUE
     12431**DCL     12437--REDEF   12445--REDEF   12448--REDEF   12451--REDEF   12454--REDEF
S_D.L$.VALUE.L
     12432**DCL     12433--REDEF   12434--REDEF
S_D.L6_MESSAGE_BUF
     13285**DCL     13287--REDEF
S_D.LASTBLT$
     12465**DCL     13951>>ASSIGN  13951>>ASSIGN  13977>>ASSIGN  13977>>ASSIGN  14106>>ASSIGN  14106>>ASSIGN
     14108>>ASSIGN  14110>>ASSIGN  14112>>ASSIGN  14116>>ASSIGN  14116>>ASSIGN  14118>>ASSIGN  14165>>ASSIGN
     14165>>ASSIGN  14165>>ASSIGN  14167>>CALL    14167>>CALL    14171>>ASSIGN  14171>>ASSIGN  14173>>ASSIGN
     14173>>ASSIGN  14175>>ASSIGN  14423>>ASSIGN  14448>>ASSIGN  14735<<ASSIGN
S_D.MACTIVE
     12542**DCL     13902>>ASSIGN  13904>>IF      13913>>IF      13926<<ASSIGN  13954>>IF      13998<<ASSIGN
     14239<<ASSIGN  14240<<ASSIGN  14252>>IF
S_D.NCHARS
     12395**DCL     13919>>ASSIGN  13963>>IF      14055>>IF      14111>>ASSIGN  14114>>CALL    14144>>ASSIGN
     14164>>ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:141  
S_D.NCMD$
     12909**DCL     13936<<ASSIGN  13972<<ASSIGN  14013<<ASSIGN  14090<<ASSIGN  14125<<ASSIGN  14163<<ASSIGN
S_D.ONABORT
     12901**DCL     14708<<ASSIGN
S_D.ONCALLS
     12903**DCL     14712<<ASSIGN
S_D.ONEXIT
     12905**DCL     14710<<ASSIGN
S_D.ONE_TO_TWO.EXEC_DOMAIN
     13296**DCL     14404>>IF      14704>>IF
S_D.ONNODES
     12907**DCL     14714<<ASSIGN
S_D.OUTPUT
     13251**DCL     13253--REDEF   14519--ASSIGN  14529<<ASSIGN  14530--ASSIGN  14534--CALL
S_D.OVERLAID
     12935**DCL     14489>>IF
S_D.PARSIZE
     12703**DCL     13900>>ASSIGN
S_D.PATCH
     12917**DCL     13941>>IF
S_D.QUALIFIED
     12540**DCL     13928<<ASSIGN  13957<<ASSIGN  14006<<ASSIGN  14066<<ASSIGN
S_D.REMACTIVE
     12488**DCL     13902<<ASSIGN  14239>>ASSIGN
S_D.REMOTE_MSG.FNCC
     13270**DCL     13271--REDEF
S_D.REMOTE_MSG.STXC
     13266**DCL     13267--REDEF
S_D.REMOTE_MSG.SUBFNCC
     13274**DCL     13275--REDEF
S_D.RUM
     12919**DCL     13942>>IF      14150>>IF      14675>>IF
S_D.RUM_COMMAND
     12405**DCL     13910<<ASSIGN  14199>>IF      14220>>IF
S_D.RUM_SKIP
     12369**DCL     13924>>IF      13965>>IF      13974>>IF      14017>>IF      14093>>IF      14132>>IF
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:142  
     14200<<ASSIGN  14221<<ASSIGN
S_D.SACT
     12478**DCL     13912<<ASSIGN  13920>>IF
S_D.STORED
     12467**DCL     13907<<ASSIGN  13915>>IF      13922>>IF      14058>>IF      14061>>IF      14062>>ASSIGN
     14070>>IF      14118>>ASSIGN  14175>>ASSIGN  14180>>IF      14183>>IF      14184>>ASSIGN  14245>>IF
     14246>>IF      14248>>ASSIGN  14249>>ASSIGN  14448>>ASSIGN  14449>>ASSIGN  14450>>ASSIGN  14491>>ASSIGN
     14531<>CALL    14535>>ASSIGN  14633>>IF      14696<<ASSIGN  14721<<ASSIGN  14725>>ASSIGN
S_D.SV
     12330**DCL     12351--REDEF
S_D.UNODE.USENODE
     12927**DCL     14487>>ASSIGN
S_D.VARCOM_HIGH$
     12744**DCL     14636>>ASSIGN  14728>>ASSIGN
S_D.VARNEXT$
     12328**DCL     14117<<ASSIGN  14166>>ASSIGN  14174<<ASSIGN  14248<<ASSIGN  14248>>ASSIGN  14635>>ASSIGN
     14727>>ASSIGN
S_D$
     13582**DCL     12278--IMP-PTR 13898>>ASSIGN  13900>>ASSIGN  13902>>ASSIGN  13902>>ASSIGN  13903>>ASSIGN
     13904>>IF      13907>>ASSIGN  13910>>ASSIGN  13912>>ASSIGN  13913>>IF      13915>>IF      13919>>ASSIGN
     13920>>IF      13922>>IF      13924>>IF      13926>>ASSIGN  13928>>ASSIGN  13929>>ASSIGN  13930>>ASSIGN
     13931>>ASSIGN  13936>>ASSIGN  13941>>IF      13942>>IF      13942>>IF      13951>>ASSIGN  13951>>ASSIGN
     13951>>ASSIGN  13954>>IF      13957>>ASSIGN  13958>>ASSIGN  13959>>ASSIGN  13960>>ASSIGN  13963>>IF
     13963>>IF      13965>>IF      13972>>ASSIGN  13974>>IF      13977>>ASSIGN  13977>>ASSIGN  13977>>ASSIGN
     13986>>ASSIGN  13987>>ASSIGN  13998>>ASSIGN  14003>>ASSIGN  14004>>ASSIGN  14004>>ASSIGN  14004>>ASSIGN
     14005>>ASSIGN  14006>>ASSIGN  14007>>ASSIGN  14008>>ASSIGN  14013>>ASSIGN  14017>>IF      14027>>IF
     14037>>ASSIGN  14039>>ASSIGN  14041>>ASSIGN  14043>>ASSIGN  14045>>ASSIGN  14051>>ASSIGN  14051>>ASSIGN
     14052>>ASSIGN  14052>>ASSIGN  14055>>IF      14055>>IF      14058>>IF      14061>>IF      14061>>IF
     14062>>ASSIGN  14062>>ASSIGN  14066>>ASSIGN  14068>>ASSIGN  14069>>ASSIGN  14070>>IF      14090>>ASSIGN
     14093>>IF      14106>>ASSIGN  14106>>ASSIGN  14106>>ASSIGN  14107>>IF      14108>>ASSIGN  14108>>ASSIGN
     14110>>ASSIGN  14111>>ASSIGN  14112>>ASSIGN  14113>>ASSIGN  14114>>CALL    14115>>ASSIGN  14116>>ASSIGN
     14116>>ASSIGN  14116>>ASSIGN  14117>>ASSIGN  14117>>ASSIGN  14118>>ASSIGN  14118>>ASSIGN  14118>>ASSIGN
     14125>>ASSIGN  14132>>IF      14143>>ASSIGN  14143>>ASSIGN  14144>>ASSIGN  14144>>ASSIGN  14145>>ASSIGN
     14150>>IF      14163>>ASSIGN  14164>>ASSIGN  14165>>ASSIGN  14165>>ASSIGN  14165>>ASSIGN  14166>>ASSIGN
     14166>>ASSIGN  14167>>CALL    14167>>CALL    14171>>ASSIGN  14171>>ASSIGN  14172>>ASSIGN  14173>>ASSIGN
     14173>>ASSIGN  14173>>ASSIGN  14174>>ASSIGN  14174>>ASSIGN  14175>>ASSIGN  14175>>ASSIGN  14175>>ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:143  
     14180>>IF      14183>>IF      14183>>IF      14184>>ASSIGN  14184>>ASSIGN  14196>>ASSIGN  14197>>ASSIGN
     14199>>IF      14199>>IF      14200>>ASSIGN  14207>>ASSIGN  14208>>ASSIGN  14209>>ASSIGN  14212>>ASSIGN
     14213>>ASSIGN  14215>>IF      14216>>ASSIGN  14216>>ASSIGN  14216>>ASSIGN  14218>>ASSIGN  14218>>ASSIGN
     14220>>IF      14220>>IF      14221>>ASSIGN  14224>>ASSIGN  14225>>ASSIGN  14228>>ASSIGN  14229>>ASSIGN
     14230>>ASSIGN  14231>>ASSIGN  14232>>ASSIGN  14233>>ASSIGN  14234>>ASSIGN  14235>>ASSIGN  14236>>ASSIGN
     14239>>ASSIGN  14239>>ASSIGN  14240>>ASSIGN  14241>>IF      14245>>IF      14246>>IF      14246>>IF
     14248>>ASSIGN  14248>>ASSIGN  14248>>ASSIGN  14248>>ASSIGN  14249>>ASSIGN  14249>>ASSIGN  14252>>IF
     14404>>IF      14406>>ASSIGN  14409>>IF      14409>>IF      14411>>IF      14413>>ASSIGN  14417>>IF
     14417>>IF      14419>>ASSIGN  14423>>ASSIGN  14428>>ASSIGN  14437>>ASSIGN  14440>>ASSIGN  14440>>ASSIGN
     14441>>ASSIGN  14445>>ASSIGN  14448>>ASSIGN  14448>>ASSIGN  14448>>ASSIGN  14449>>ASSIGN  14449>>ASSIGN
     14450>>ASSIGN  14450>>ASSIGN  14455>>ASSIGN  14465>>ASSIGN  14470>>ASSIGN  14478>>ASSIGN  14483>>ASSIGN
     14487>>ASSIGN  14489>>IF      14490>>IF      14491>>ASSIGN  14491>>ASSIGN  14513>>ASSIGN  14519>>ASSIGN
     14527>>ASSIGN  14529>>ASSIGN  14530>>ASSIGN  14531>>CALL    14534>>CALL    14535>>ASSIGN  14535>>ASSIGN
     14588>>ASSIGN  14594>>ASSIGN  14633>>IF      14635>>ASSIGN  14635>>ASSIGN  14636>>ASSIGN  14636>>ASSIGN
     14640>>ASSIGN  14640>>ASSIGN  14641>>ASSIGN  14641>>ASSIGN  14648>>ASSIGN  14648>>ASSIGN  14649>>ASSIGN
     14649>>ASSIGN  14675>>IF      14675>>IF      14677>>ASSIGN  14680>>IF      14680>>IF      14682>>ASSIGN
     14689>>IF      14693>>ASSIGN  14696>>ASSIGN  14699>>ASSIGN  14702>>ASSIGN  14704>>IF      14708>>ASSIGN
     14710>>ASSIGN  14712>>ASSIGN  14714>>ASSIGN  14721>>ASSIGN  14725>>ASSIGN  14725>>ASSIGN  14727>>ASSIGN
     14727>>ASSIGN  14728>>ASSIGN  14728>>ASSIGN  14732>>IF      14732>>IF      14734>>ASSIGN  14734>>ASSIGN
     14735>>ASSIGN  14735>>ASSIGN  14736>>ASSIGN  14740>>ASSIGN
S_FAULT IN PROCEDURE DDS$BLD_WHEN
     14519**LABEL   14520--CALLALT
TCODE IN PROCEDURE DDS$BLD_WHEN
     14281**DCL     14427<<ASSIGN  14429>>IF      14447<<ASSIGN  14453<>CALL    14486>>ASSIGN  14487<<ASSIGN
     14488>>ASSIGN  14490>>IF      14493>>IF      14493>>IF      14494>>ASSIGN  14495>>IF      14498<>CALL
     14499>>ASSIGN  14501>>IF      14504<>CALL    14505>>ASSIGN  14506>>ASSIGN  14508>>IF      14510>>IF
TCODEC IN PROCEDURE DDS$BLD_WHEN
     14282**DCL     14294--IMP-SIZ 14446<<ASSIGN  14447>>ASSIGN  14447--ASSIGN  14454>>ASSIGN  14454>>ASSIGN
     14486<<ASSIGN  14518<<ASSIGN
TEMPCODE
      8525**DCL     13937<<ASSIGN  13938>>CALLBLT 14016<<ASSIGN  14018>>IF      14018>>IF      14018>>IF
     14018>>IF      14018>>IF      14027>>IF      14027>>IF      14027>>IF      14027>>IF      14027>>IF
     14035>>DOCASE  14049<>CALL    14092<<ASSIGN  14095>>IF      14103<>CALL    14131<<ASSIGN  14133>>IF
     14133>>IF      14133>>IF      14133>>IF      14133>>IF      14140<>CALL
TEMPID
      8520**DCL     14080<>CALL    14081>>IF      14081>>IF      14085<<ASSIGN  14686>>IF      14699>>ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:144  
     14702>>ASSIGN  14721>>ASSIGN  14723<<ASSIGN
TEXT$C
     10744**DCL     13990>>ASSIGN  14498<>CALL
TEXT$C.SIZE
     10745**DCL     10746--IMP-SIZ 13990>>ASSIGN  14498>>CALL
TRAIL_SEMI
      8535**DCL     14087>>IF      14119>>IF      14127>>IF      14177>>IF      14552<<ASSIGN  14564<<ASSIGN
U$$
      8519**DCL     13901>>ASSIGN
UDERNC
     14230**LABEL   14089--GOTO    14128--GOTO
UDERR1
     14229**LABEL   13938--CALLALT 14156--GOTO
USERNDE
     14233**LABEL   13942--GOTO
USERNU
     14234**LABEL   14057--GOTO    14153--GOTO
USERPA
     14232**LABEL   13941--GOTO
USERR0
     14204**LABEL   13934--CALLALT 13981--GOTO    14010--CALLALT 14073--CALLALT
USERR0A
     14194**LABEL   14160--CALLALT
USERR1
     14228**LABEL   14082--GOTO
USERR7
     14236**LABEL   14097--GOTO
USERRERR
     14238**LABEL   13932--CALLALT 13943--CALLALT 13945--CALLALT 13947--CALLALT 13949--CALLALT 13961--CALLALT
     13967--CALLALT 13985--GOTO    14015--CALLALT 14047--GOTO    14049--CALLALT 14080--CALLALT 14098--CALLALT
     14099--CALLALT 14102--CALLALT 14103--CALLALT 14114--CALLALT 14130--CALLALT 14140--CALLALT 14167--CALLALT
     14227--GOTO    14228--GOTO    14229--GOTO    14230--GOTO    14231--GOTO    14232--GOTO    14233--GOTO
     14234--GOTO    14235--GOTO    14236--GOTO
USERSK
     14235**LABEL   13925--GOTO    13966--GOTO    13975--GOTO    14024--GOTO    14094--GOTO    14139--GOTO
USERSY
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:145  
     14231**LABEL   13923--GOTO
V IN PROCEDURE ATTDIR_INIT
     14631**DCL     14699<<ASSIGN  14700>>IF      14703>>CALLBLT 14719<>CALL
VCPOS
      8540**DCL     14104<<ASSIGN  14439<<ASSIGN
WHEN$ IN PROCEDURE DDS$BLD_WHEN
     14295**DCL     14519<<ASSIGN  14520<>CALL
WHEN$CMD IN PROCEDURE DDS$BLD_WHEN
     14299**DCL     14436--CALL    14440--ASSIGN  14444--CALL
WHEN$CMD.ADDRESS IN PROCEDURE DDS$BLD_WHEN
     14326**DCL     14456<>CALL    14474>>ASSIGN  14475>>ASSIGN  14520<>CALL
WHEN$CMD.BOFF IN PROCEDURE DDS$BLD_WHEN
     14331**DCL     14456<>CALL    14475>>ASSIGN  14520<>CALL
WHEN$CMD.BSIZE IN PROCEDURE DDS$BLD_WHEN
     14330**DCL     14456<>CALL    14475>>ASSIGN  14518>>ASSIGN  14520<>CALL
WHEN$CMD.BYPASS_COUNT IN PROCEDURE DDS$BLD_WHEN
     14317**DCL     14505<<ASSIGN
WHEN$CMD.CURRENT_COUNT IN PROCEDURE DDS$BLD_WHEN
     14318**DCL     14506<<ASSIGN
WHEN$CMD.DESC# IN PROCEDURE DDS$BLD_WHEN
     14328**DCL     14456<>CALL    14462>>IF      14462>>IF      14520<>CALL
WHEN$CMD.END_PAGE IN PROCEDURE DDS$BLD_WHEN
     14333**DCL     14475<<ASSIGN
WHEN$CMD.NODE IN PROCEDURE DDS$BLD_WHEN
     14314**DCL     14488<<ASSIGN
WHEN$CMD.NOT_IS IN PROCEDURE DDS$BLD_WHEN
     14329**DCL     14456<>CALL    14458>>IF      14520<>CALL
WHEN$CMD.OVALUE$ IN PROCEDURE DDS$BLD_WHEN
     14312**DCL     14451<<ASSIGN
WHEN$CMD.SEG IN PROCEDURE DDS$BLD_WHEN
     14327**DCL     14456<>CALL    14460>>IF
WHEN$CMD.START_PAGE IN PROCEDURE DDS$BLD_WHEN
     14332**DCL     14474<<ASSIGN
WHEN$CMD.U.APT IN PROCEDURE DDS$BLD_WHEN
     14305**DCL     14306--REDEF
WHEN$CMD.U.CONST_OFFSET IN PROCEDURE DDS$BLD_WHEN
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:146  
     14306**DCL     14452<<ASSIGN
WHEN$CMD.UNUSED IN PROCEDURE DDS$BLD_WHEN
     14303**DCL     14304--REDEF
WHEN$CMD.WCOND IN PROCEDURE DDS$BLD_WHEN
     14325**DCL     14494<<ASSIGN
WHEN$CMD.WCTYPE IN PROCEDURE DDS$BLD_WHEN
     14324**DCL     14499<<ASSIGN
WHEN_INIT IN PROCEDURE ATTDIR_INIT
     14646**ENTRY   14435--CALL
WOFF IN PROCEDURE DDS$BLD_WHEN
     14290**DCL     14440<<ASSIGN  14452>>ASSIGN
X$PARSE
     13840**DCL-ENT 13934--CALL    13970--CALL    14010--CALL    14073--CALL    14160--CALL
ZITEM.ADDRESS
      9257**DCL      9262--REDEF    9263--REDEF    9264--REDEF
ZITEM.FLAGS.ADDREXP
      9236**DCL     14481>>IF
ZITEM.FLAGS.MDSE.E
      9234**DCL     14481>>IF
ZITEM.FLAGS.MDSE.M
      9228**DCL     14476>>IF
ZITEM.SP.VD
      9265**DCL      9269--REDEF    9272--REDEF
ZITEM$
      8646**DCL      9223--IMP-PTR
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:147  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:148  
              MINI UREF LISTING

B$TREEHDR    9295**DCL
DDB$CHECK_ADDR   13858**DCL-ENT
DDS$SCAN      62**PROC
DDS$SCAN1   13884**ENTRY
DDS$SCAN2   13891**ENTRY
IXXX IN PROCEDURE DDS$BLD_WHEN  14279**DCL
NCC$    8522**DCL
SDD$    8645**DCL
SDD_L6$    8647**DCL
S_D_ACCESS$   13597**DCL
S_D_ANLZ$   13599**DCL
S_D_ASTACKOFF$   13598**DCL
S_D_BREAK$   13600**DCL
S_D_DO_SCAN$   13601**DCL
S_D_ERROR$   13602**DCL
S_D_FAULTCMD$$   13603**DCL
S_D_FAULTINS$$   13604**DCL
S_D_GOIC$   13605**DCL
S_D_GO_MODE$   13606**DCL
S_D_HOST_MESSAGE$   13618**DCL
S_D_HW_PTB_UNITS$   13622**DCL
S_D_HW_RES_MEM$   13620**DCL
S_D_HW_WSQ0PT$   13621**DCL
S_D_IPRFLT$   13608**DCL
S_D_IXFIX$   13607**DCL
S_D_L6_MESSAGE$   13619**DCL
S_D_REM_ACCESS$   13609**DCL
S_D_REM_DISKBOOT$   13611**DCL
S_D_REM_DO_SCAN$   13610**DCL
S_D_RETURNN$   13612**DCL
S_D_SAD$   13613**DCL
S_D_SAVEIC$   13614**DCL
PL6.E3A0      #001=DDS$SCAN File=DXS$SCAN.:E05TSI                                TUE 07/29/97 15:14 Page:149  
S_D_SEG$   13596**DCL
S_D_TCB$$   13615**DCL
S_D_UREG$$   13616**DCL
S_D_USS$$   13617**DCL
UBIN36 IN PROCEDURE DDS$BLD_WHEN  14280**DCL
ZITEM_L6$    8648**DCL

PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:150  
      939        1        /*T***********************************************************/
      940        2        /*T*                                                         */
      941        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      942        4        /*T*                                                         */
      943        5        /*T***********************************************************/
      944        6        /*D* NAME:  DDS$SUCCESS
      945        7             CALL:  This routine is called by X$PARSE.
      946        8             INTERFACE:  X$PARSE
      947        9             ENVIRONMENT:  XDELTA OR USER DELTA
      948       10             INPUT:  PARSE$PARAM FROM X$PARSE
      949       11             OUTPUT:  PARSE$PARAM.ACCEPT
      950       12                      DD_INSTR_CONT
      951       13             SCRATCH:  None
      952       14             DESCRIPTION:  This is the U$ routine for X$PARSE.  It is
      953       15                  entered for success processing when HOST instructions
      954       16                  are found.  It sets up the correct parse nodes for
      955       17                  further parsing of the HOST instruction.  This is since
      956       18                  EIS, DSC, and DFLT instructions all have different
      957       19                  formats.                                                 */
      958       20
      959       21        DDS$SUCCESS: PROC( PARSE$PARAM );
      960       22
      961       23        %INCLUDE XU_MACRO_C;                    /* X$PARSE MACROS */
      962     3129        %INCLUDE XU_SUBS_C;                     /* X$PARSE %SUBs */
      963     3221        %PARSE$PARAM(NAME=PARSE$PARAM,
      964     3222                     STCLASS=);
      965     3303        %INCLUDE XUH_MACRO_C;
      966     3387        %INCLUDE DD_SD_M;
      967     4723        %S_D;
      968     6041        %PARSE$SYM (NAME=OUT$SYM,STCLASS=BASED);
      969     6079        %INCLUDE DD_SUBS_C;                     /* decoded instr defs */
      970     6350        %INCLUDE DD_PSUBS_C;                    /* parse tree node defs */
      971     6825        %INCLUDE DD_KNODES_D;                   /* INSTR node stuff */
      972     7041        %NODE_DEFS(STCLASS=SYMREF);
      973     7430        %INCLUDE DD$BASED;
      974     8733
      975     8734    1   DCL INSTR_MNEM CHAR(6);
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:151  
      976     8735    1   DCL DDB$MNEM_TO_INSTR ENTRY(2) ALTRET;
      977     8736        %OP$TAB (STCLASS=AUTO);
      978     8763    1   DCL INSTR_EIS SBIN SYMREF;
      979     8764    1   DCL INSTR_ADSC SBIN SYMREF;
      980     8765    1   DCL INSTR_BDSC SBIN SYMREF;
      981     8766    1   DCL INSTR_NDSC SBIN SYMREF;
      982     8767    1   DCL INSTR_SDSC SBIN SYMREF;
      983     8768    1   DCL INSTR_VDSC SBIN SYMREF;
      984     8769    1   DCL INSTR_DFLT SBIN SYMREF;
      985     8770    1   DCL INSTR_ZERO SBIN SYMREF;
      986     8771        %S_D_PTRS;
      987     8808
      988     8809    1        PARSE$PARAM.ACCEPT = '0'B;
      989     8810    1        PARSE$PARAM.REJECT = '0'B;
      990     8811    1        PARSE$PARAM.RETRY = '0'B;
      991     8812    1        IF PARSE$PARAM.OUT$ ~= ADDR(NIL) AND
      992     8813    1          PARSE$PARAM.OUT$ -> OUT$SYM.CODE = SYM_CODE
      993     8814    2        THEN DO;
      994     8815    2             INSTR_MNEM = PARSE$PARAM.OUT$ -> OUT$SYM.TEXT;
      995     8816    2             DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_DFLT);
      996     8817    2             CALL DDB$MNEM_TO_INSTR (INSTR_MNEM, OP$TAB)
      997     8818    3             WHENALTRETURN DO;             /* can't find it */
      998     8819    3                  PARSE$PARAM.REJECT = '1'B;
      999     8820    3                  PARSE$PARAM.CHARPOS = PARSE$PARAM.OUT$ -> OUT$SYM.CPOS;
     1000     8821    3                  RETURN;
     1001     8822    3                END;
     1002     8823    2             IF OP$TAB.TYPE = T_INPUT
     1003     8824    3             THEN DO;
     1004     8825    4                  DO CASE (OP$TAB.OPCODE);
     1005     8826    4                    CASE (T_ADSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ADSC);
     1006     8827    4                    CASE (T_BDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_BDSC);
     1007     8828    4                    CASE (T_NDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_NDSC);
     1008     8829    4                    CASE (T_SDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_SDSC);
     1009     8830    4                    CASE (T_VDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_VDSC);
     1010     8831    4                    CASE (T_ZERO); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ZERO);
     1011     8832    4                    CASE (T_PTR); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ZERO);
     1012     8833    4                    END;                   /* do case */
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:152  
     1013     8834    3                END;                       /* then do */
     1014     8835    2             IF OP$TAB.TYPE = T_EIS
     1015     8836    3             THEN DO;
     1016     8837    3                  DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_EIS);
     1017     8838    3                END;
     1018     8839    2           END;                            /* if OUT$SYM.CODE = SYM_CODE */
     1019     8840    2        ELSE DO;                           /* assume its a RUM command */
     1020     8841    2             S_D.RUM_COMMAND = '1'B;
     1021     8842    2           END;
     1022     8843    1        PARSE$PARAM.ACCEPT = '1'B;
     1023     8844
     1024     8845    1        RETURN;
     1025     8846
     1026     8847    1   END DDS$SUCCESS;

PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:153  
--  Include file information  --

   DD$BASED.:E05TOU  is referenced.
   DD_KNODES_D.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$SUCCESS.

   Procedure DDS$SUCCESS requires 101 words for executable code.
   Procedure DDS$SUCCESS requires 12 words of local(AUTO) storage.

    No errors detected in file DXS$SCAN.:E05TSI    .

PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:154  

 Object Unit name= DDS$SUCCESS                                File name= DXS$SCAN.:E05TOU
 UTS= JUL 29 '97 15:15:16.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   101    145  DDS$SUCCESS
    1  RoData even  none    11     13  DDS$SUCCESS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  DDS$SUCCESS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDB$MNEM_TO_INSTR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  DD_INSTR_CONT                         INSTR_EIS
     INSTR_ADSC                            INSTR_BDSC                            INSTR_NDSC
     INSTR_SDSC                            INSTR_VDSC                            INSTR_DFLT
     INSTR_ZERO                            B_VECTNIL
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:155  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:156  


      939        1        /*T***********************************************************/
      940        2        /*T*                                                         */
      941        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      942        4        /*T*                                                         */
      943        5        /*T***********************************************************/
      944        6        /*D* NAME:  DDS$SUCCESS
      945        7             CALL:  This routine is called by X$PARSE.
      946        8             INTERFACE:  X$PARSE
      947        9             ENVIRONMENT:  XDELTA OR USER DELTA
      948       10             INPUT:  PARSE$PARAM FROM X$PARSE
      949       11             OUTPUT:  PARSE$PARAM.ACCEPT
      950       12                      DD_INSTR_CONT
      951       13             SCRATCH:  None
      952       14             DESCRIPTION:  This is the U$ routine for X$PARSE.  It is
      953       15                  entered for success processing when HOST instructions
      954       16                  are found.  It sets up the correct parse nodes for
      955       17                  further parsing of the HOST instruction.  This is since
      956       18                  EIS, DSC, and DFLT instructions all have different
      957       19                  formats.                                                 */
      958       20
      959       21        DDS$SUCCESS: PROC( PARSE$PARAM );

     21  0 000000   000000 700200 xent  DDS$SUCCESS  TSX0  ! X66_AUTO_1
         0 000001   000014 000001                    ZERO    12,1

      960       22
      961       23        %INCLUDE XU_MACRO_C;                    /* X$PARSE MACROS */
      962     3129        %INCLUDE XU_SUBS_C;                     /* X$PARSE %SUBs */
      963     3221        %PARSE$PARAM(NAME=PARSE$PARAM,
      964     3222                     STCLASS=);
      965     3303        %INCLUDE XUH_MACRO_C;
      966     3387        %INCLUDE DD_SD_M;
      967     4723        %S_D;
      968     6041        %PARSE$SYM (NAME=OUT$SYM,STCLASS=BASED);
      969     6079        %INCLUDE DD_SUBS_C;                     /* decoded instr defs */
      970     6350        %INCLUDE DD_PSUBS_C;                    /* parse tree node defs */
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:157  
      971     6825        %INCLUDE DD_KNODES_D;                   /* INSTR node stuff */
      972     7041        %NODE_DEFS(STCLASS=SYMREF);
      973     7430        %INCLUDE DD$BASED;
      974     8733
      975     8734    1   DCL INSTR_MNEM CHAR(6);
      976     8735    1   DCL DDB$MNEM_TO_INSTR ENTRY(2) ALTRET;
      977     8736        %OP$TAB (STCLASS=AUTO);
      978     8763    1   DCL INSTR_EIS SBIN SYMREF;
      979     8764    1   DCL INSTR_ADSC SBIN SYMREF;
      980     8765    1   DCL INSTR_BDSC SBIN SYMREF;
      981     8766    1   DCL INSTR_NDSC SBIN SYMREF;
      982     8767    1   DCL INSTR_SDSC SBIN SYMREF;
      983     8768    1   DCL INSTR_VDSC SBIN SYMREF;
      984     8769    1   DCL INSTR_DFLT SBIN SYMREF;
      985     8770    1   DCL INSTR_ZERO SBIN SYMREF;
      986     8771        %S_D_PTRS;
      987     8808
      988     8809    1        PARSE$PARAM.ACCEPT = '0'B;

   8809  0 000002   200003 470500                    LDP0    @PARSE$PARAM,,AUTO
         0 000003   000000 236000 1                  LDQ     0
         0 000004   000000 356100                    ANSQ    0,,PR0

      989     8810    1        PARSE$PARAM.REJECT = '0'B;

   8810  0 000005   000001 236000 1                  LDQ     1
         0 000006   000000 356100                    ANSQ    0,,PR0

      990     8811    1        PARSE$PARAM.RETRY = '0'B;

   8811  0 000007   000002 236000 1                  LDQ     2
         0 000010   000000 356100                    ANSQ    0,,PR0

      991     8812    1        IF PARSE$PARAM.OUT$ ~= ADDR(NIL) AND

   8812  0 000011   000002 236100                    LDQ     2,,PR0
         0 000012   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:158  
         0 000013   000136 600000 0                  TZE     s:8841
         0 000014   000002 471500                    LDP1    2,,PR0
         0 000015   100000 720100                    LXL0    0,,PR1
         0 000016   000016 100003                    CMPX0   14,DU
         0 000017   000136 601000 0                  TNZ     s:8841

      992     8813    1          PARSE$PARAM.OUT$ -> OUT$SYM.CODE = SYM_CODE
      993     8814    2        THEN DO;

      994     8815    2             INSTR_MNEM = PARSE$PARAM.OUT$ -> OUT$SYM.TEXT;

   8815  0 000020   100004 236100                    LDQ     4,,PR1
         0 000021   000033 772000                    QRL     27
         0 000022   000000 621006                    EAX1    0,QL
         0 000023   040100 100540                    MLR     fill='040'O
         0 000024   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         0 000025   200004 000006                    ADSC9   INSTR_MNEM,,AUTO         cn=0,n=6

      995     8816    2             DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_DFLT);

   8816  0 000026   000003 236000 1                  LDQ     3
         0 000027   000001 756000 xsym               STQ     DD_INSTR_CONT+1

      996     8817    2             CALL DDB$MNEM_TO_INSTR (INSTR_MNEM, OP$TAB)

   8817  0 000030   200006 631500                    EPPR1   OP$TAB,,AUTO
         0 000031   200013 451500                    STP1    OP$TAB+5,,AUTO
         0 000032   200004 633500                    EPPR3   INSTR_MNEM,,AUTO
         0 000033   200012 453500                    STP3    OP$TAB+4,,AUTO
         0 000034   200012 630500                    EPPR0   OP$TAB+4,,AUTO
         0 000035   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000036   000000 701000 xent               TSX1    DDB$MNEM_TO_INSTR
         0 000037   000041 702000 0                  TSX2    s:8819
         0 000040   000050 710000 0                  TRA     s:8823

      997     8818    3             WHENALTRETURN DO;             /* can't find it */

PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:159  
      998     8819    3                  PARSE$PARAM.REJECT = '1'B;

   8819  0 000041   200003 470500                    LDP0    @PARSE$PARAM,,AUTO
         0 000042   000200 236003                    LDQ     128,DU
         0 000043   000000 256100                    ORSQ    0,,PR0

      999     8820    3                  PARSE$PARAM.CHARPOS = PARSE$PARAM.OUT$ -> OUT$SYM.CPOS;

   8820  0 000044   000002 471500                    LDP1    2,,PR0
         0 000045   100002 235100                    LDA     2,,PR1
         0 000046   000004 755100                    STA     4,,PR0

     1000     8821    3                  RETURN;

   8821  0 000047   000000 702200 xent               TSX2  ! X66_ARET

     1001     8822    3                END;
     1002     8823    2             IF OP$TAB.TYPE = T_INPUT

   8823  0 000050   200006 236100                    LDQ     OP$TAB,,AUTO
         0 000051   000370 376007                    ANQ     248,DL
         0 000052   000060 116007                    CMPQ    48,DL
         0 000053   000127 601000 0                  TNZ     s:8835

     1003     8824    3             THEN DO;

     1004     8825    4                  DO CASE (OP$TAB.OPCODE);

   8825  0 000054   200006 236100                    LDQ     OP$TAB,,AUTO
         0 000055   000010 772000                    QRL     8
         0 000056   001777 376007                    ANQ     1023,DL
         0 000057   000021 116007                    CMPQ    17,DL
         0 000060   000062 602006 0                  TNC     s:8825+6,QL
         0 000061   000127 710000 0                  TRA     s:8835
         0 000062   000127 710000 0                  TRA     s:8835
         0 000063   000127 710000 0                  TRA     s:8835
         0 000064   000103 710000 0                  TRA     s:8826
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:160  
         0 000065   000127 710000 0                  TRA     s:8835
         0 000066   000106 710000 0                  TRA     s:8827
         0 000067   000127 710000 0                  TRA     s:8835
         0 000070   000111 710000 0                  TRA     s:8828
         0 000071   000127 710000 0                  TRA     s:8835
         0 000072   000114 710000 0                  TRA     s:8829
         0 000073   000127 710000 0                  TRA     s:8835
         0 000074   000117 710000 0                  TRA     s:8830
         0 000075   000127 710000 0                  TRA     s:8835
         0 000076   000127 710000 0                  TRA     s:8835
         0 000077   000127 710000 0                  TRA     s:8835
         0 000100   000122 710000 0                  TRA     s:8831
         0 000101   000127 710000 0                  TRA     s:8835
         0 000102   000125 710000 0                  TRA     s:8832

     1005     8826    4                    CASE (T_ADSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ADSC);

   8826  0 000103   000004 236000 1                  LDQ     4
         0 000104   000001 756000 xsym               STQ     DD_INSTR_CONT+1
         0 000105   000127 710000 0                  TRA     s:8835

     1006     8827    4                    CASE (T_BDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_BDSC);

   8827  0 000106   000005 236000 1                  LDQ     5
         0 000107   000001 756000 xsym               STQ     DD_INSTR_CONT+1
         0 000110   000127 710000 0                  TRA     s:8835

     1007     8828    4                    CASE (T_NDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_NDSC);

   8828  0 000111   000006 236000 1                  LDQ     6
         0 000112   000001 756000 xsym               STQ     DD_INSTR_CONT+1
         0 000113   000127 710000 0                  TRA     s:8835

     1008     8829    4                    CASE (T_SDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_SDSC);

   8829  0 000114   000007 236000 1                  LDQ     7
         0 000115   000001 756000 xsym               STQ     DD_INSTR_CONT+1
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:161  
         0 000116   000127 710000 0                  TRA     s:8835

     1009     8830    4                    CASE (T_VDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_VDSC);

   8830  0 000117   000010 236000 1                  LDQ     8
         0 000120   000001 756000 xsym               STQ     DD_INSTR_CONT+1
         0 000121   000127 710000 0                  TRA     s:8835

     1010     8831    4                    CASE (T_ZERO); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ZERO);

   8831  0 000122   000011 236000 1                  LDQ     9
         0 000123   000001 756000 xsym               STQ     DD_INSTR_CONT+1
         0 000124   000127 710000 0                  TRA     s:8835

     1011     8832    4                    CASE (T_PTR); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ZERO);

   8832  0 000125   000011 236000 1                  LDQ     9
         0 000126   000001 756000 xsym               STQ     DD_INSTR_CONT+1

     1012     8833    4                    END;                   /* do case */

     1013     8834    3                END;                       /* then do */

     1014     8835    2             IF OP$TAB.TYPE = T_EIS

   8835  0 000127   200006 236100                    LDQ     OP$TAB,,AUTO
         0 000130   000370 376007                    ANQ     248,DL
         0 000131   000010 116007                    CMPQ    8,DL
         0 000132   000141 601000 0                  TNZ     s:8843

     1015     8836    3             THEN DO;

     1016     8837    3                  DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_EIS);

   8837  0 000133   000012 236000 1                  LDQ     10
         0 000134   000001 756000 xsym               STQ     DD_INSTR_CONT+1

PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:162  
     1017     8838    3                END;

     1018     8839    2           END;                            /* if OUT$SYM.CODE = SYM_CODE */

   8839  0 000135   000141 710000 0                  TRA     s:8843

     1019     8840    2        ELSE DO;                           /* assume its a RUM command */

     1020     8841    2             S_D.RUM_COMMAND = '1'B;

   8841  0 000136   400000 236003                    LDQ     -131072,DU
         0 000137   000000 471400 xsym               LDP1    S_D$
         0 000140   100072 756100                    STQ     58,,PR1

     1021     8842    2           END;

     1022     8843    1        PARSE$PARAM.ACCEPT = '1'B;

   8843  0 000141   200003 470500                    LDP0    @PARSE$PARAM,,AUTO
         0 000142   000400 236003                    LDQ     256,DU
         0 000143   000000 256100                    ORSQ    0,,PR0

     1023     8844
     1024     8845    1        RETURN;

   8845  0 000144   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   777377 777777   777577 777777   777677 777777   000000 006000    ................
   1     004   000000 006000   000000 006000   000000 006000   000000 006000    ................
   1     010   000000 006000   000000 006000   000000 006000                    ............
     1025     8846
     1026     8847    1   END DDS$SUCCESS;

PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:163  
--  Include file information  --

   DD$BASED.:E05TOU  is referenced.
   DD_KNODES_D.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$SUCCESS.

   Procedure DDS$SUCCESS requires 101 words for executable code.
   Procedure DDS$SUCCESS requires 12 words of local(AUTO) storage.

    No errors detected in file DXS$SCAN.:E05TSI    .
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:164  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:165  
          MINI XREF LISTING

DDB$MNEM_TO_INSTR
      8735**DCL-ENT  8817--CALL
DD_INSTR_CONT.SUBNDS$
      7135**DCL      8816<<ASSIGN   8826<<ASSIGN   8827<<ASSIGN   8828<<ASSIGN   8829<<ASSIGN   8830<<ASSIGN
      8831<<ASSIGN   8832<<ASSIGN   8837<<ASSIGN
INSTR_ADSC
      8764**DCL      8826--ASSIGN
INSTR_BDSC
      8765**DCL      8827--ASSIGN
INSTR_DFLT
      8769**DCL      8816--ASSIGN
INSTR_EIS
      8763**DCL      8837--ASSIGN
INSTR_MNEM
      8734**DCL      8815<<ASSIGN   8817<>CALL
INSTR_NDSC
      8766**DCL      8828--ASSIGN
INSTR_SDSC
      8767**DCL      8829--ASSIGN
INSTR_VDSC
      8768**DCL      8830--ASSIGN
INSTR_ZERO
      8770**DCL      8831--ASSIGN   8832--ASSIGN
OP$TAB
      8737**DCL      8817<>CALL
OP$TAB.EIS
      8739**DCL      8747--REDEF
OP$TAB.OPCODE
      8754**DCL      8825>>DOCASE
OP$TAB.TYPE
      8755**DCL      8823>>IF       8835>>IF
OUT$SYM.CODE
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:166  
      6054**DCL      8812>>IF
OUT$SYM.COUNT
      6071**DCL      6074--IMP-SIZ  8815>>ASSIGN
OUT$SYM.CPOS
      6063**DCL      8820>>ASSIGN
OUT$SYM.TEXT
      6074**DCL      8815>>ASSIGN
PARSE$PARAM
      3241**DCL        21--PROC
PARSE$PARAM.ACCEPT
      3248**DCL      8809<<ASSIGN   8843<<ASSIGN
PARSE$PARAM.CHARPOS
      3279**DCL      8820<<ASSIGN
PARSE$PARAM.OUT$
      3271**DCL      8812>>IF       8812>>IF       8815>>ASSIGN   8815>>ASSIGN   8820>>ASSIGN
PARSE$PARAM.REJECT
      3253**DCL      8810<<ASSIGN   8819<<ASSIGN
PARSE$PARAM.RETRY
      3257**DCL      8811<<ASSIGN
S_D.CURRENT_CHANNEL
      5675**DCL      5677--REDEF
S_D.DEBUGA
      4827**DCL      4829--REDEF
S_D.EIS
      5785**DCL      5814--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      5718**DCL      5719--REDEF    5733--REDEF
S_D.JDE
      5332**DCL      5333--REDEF
S_D.L$.VALUE
      4885**DCL      4891--REDEF    4899--REDEF    4902--REDEF    4905--REDEF    4908--REDEF
S_D.L$.VALUE.L
      4886**DCL      4887--REDEF    4888--REDEF
S_D.L6_MESSAGE_BUF
      5739**DCL      5741--REDEF
S_D.OUTPUT
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:167  
      5705**DCL      5707--REDEF
S_D.REMOTE_MSG.FNCC
      5724**DCL      5725--REDEF
S_D.REMOTE_MSG.STXC
      5720**DCL      5721--REDEF
S_D.REMOTE_MSG.SUBFNCC
      5728**DCL      5729--REDEF
S_D.RUM_COMMAND
      4859**DCL      8841<<ASSIGN
S_D.SV
      4784**DCL      4805--REDEF
S_D$
      6036**DCL      4732--IMP-PTR  8841>>ASSIGN
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:168  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:169  
              MINI UREF LISTING

DD$COMP_NODE_PTR$    7050**DCL
DDS$SUCCESS      21**PROC
DD_COMPNODE$    7048**DCL
DD_COMP_NODE_PTR$    7049**DCL
DD_HOST_NODE_PTR$    7045**DCL
DD_L6X_NODE_PTR$    7047**DCL
DD_L6_NODE_PTR$    7046**DCL
DD_MODE_NODE_PTR$    7044**DCL
DD_NODE    7163**DCL
S_D_ACCESS$    8781**DCL
S_D_ANLZ$    8783**DCL
S_D_ASTACKOFF$    8782**DCL
S_D_BREAK$    8784**DCL
S_D_DO_SCAN$    8785**DCL
S_D_ERROR$    8786**DCL
S_D_FAULTCMD$$    8787**DCL
S_D_FAULTINS$$    8788**DCL
S_D_GOIC$    8789**DCL
S_D_GO_MODE$    8790**DCL
S_D_HOST_MESSAGE$    8802**DCL
S_D_HW_PTB_UNITS$    8806**DCL
S_D_HW_RES_MEM$    8804**DCL
S_D_HW_WSQ0PT$    8805**DCL
S_D_IPRFLT$    8792**DCL
S_D_IXFIX$    8791**DCL
S_D_L6_MESSAGE$    8803**DCL
S_D_REM_ACCESS$    8793**DCL
S_D_REM_DISKBOOT$    8795**DCL
S_D_REM_DO_SCAN$    8794**DCL
S_D_RETURNN$    8796**DCL
S_D_SAD$    8797**DCL
S_D_SAVEIC$    8798**DCL
PL6.E3A0      #002=DDS$SUCCESS File=DXS$SCAN.:E05TSI                             TUE 07/29/97 15:15 Page:170  
S_D_SEG$    8780**DCL
S_D_TCB$$    8799**DCL
S_D_UREG$$    8800**DCL
S_D_USS$$    8801**DCL
