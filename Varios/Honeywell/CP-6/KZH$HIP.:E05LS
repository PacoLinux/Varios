VERSION E05

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:1    
        1        1        /*M*      NAME: KZH$HIP   HIP handler VDH/LINE MANAGER Interface           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* */
        8        8        /*P*      NAME:    KZH$HIP                                                  */
        9        9        /*P*      PURPOSE: KZH$HIP  is a package of subroutines which con-          */
       10       10        /*P*               stitutes the VDH and Line manager interface for the       */
       11       11        /*P*               HIP devices. The handler uses this module to accept      */
       12       12        /*P*               events from VDH and provide the nessarry commands         */
       13       13        /*P*               to the HIP devices.                                      */
       14       14        /*P*                                                                         */
       15       15        /*                                                                           */
       16       16        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:2    
       17       17        KZH$HIP: PROC(PARM) ALTRET;
       18       18
       19       19
       20       20        /**/
       21       21        /* Include Files */
       22       22        /**/
       23       23        %INCLUDE CP_6_SUBS;
       24      563        %INCLUDE LCP_6;
       25     4842        %INCLUDE KH$CHN;
       26     4964        %INCLUDE KH$CLK;
       27     5334        %INCLUDE KH_CLKFNC_E;
       28     5379        %INCLUDE KL_MACRO_C;
       29     8731        %INCLUDE KHC_MAC_C;
       30     8772        %INCLUDE KZ_3270_C;
       31     8930        %INCLUDE KZ$HIPBRACKET;
       32     8992        %INCLUDE KZ$HIPDEV;
       33     9259        %INCLUDE KZ$HIPCTR;
       34     9345        %INCLUDE KZ$HIPFLDS;
       35     9412        %INCLUDE KZ$LINCTX;
       36    10032        %INCLUDE KZ$OTPBFR;
       37    10133        %INCLUDE KZ_HIP_C;
       38    10240        %INCLUDE KZ_CLM_E;
       39    10412        %INCLUDE KZ_PERR_C;
       40    10494        %INCLUDE KV$VDH;
       41    10925        %INCLUDE KV$USR;
       42    11237        %INCLUDE KV$GLB;
       43    11656        %INCLUDE KV$GLBCTX;
       44    12101        %INCLUDE KV_GLBCNS_E;
       45    12442        %INCLUDE KV_PRMID_E;
       46    12616        %INCLUDE KV_GLB_M;
       47    12738        %INCLUDE KZ$3270STT;
       48    12802        %INCLUDE KZ$BSCSTT;
       49    12908        %INCLUDE KH$STT;
       50    12938        %INCLUDE KZ_HIPTAB_C;
       51    13180        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:3    
       52    13181        /*  EQUS  */
       53    13182        /**/
       54    13183        %KV_USR_FNC_E;
       55    13199        %KV_INPOPRX_E;
       56    13211        %KV_USR_EVT_ID_E;
       57    13231        %KV_PRMID_E;
       58    13387        %KV_CMPCOD_E;
       59    13401        %KV_STRTYP_E;
       60    13439        %KV_PHSPSTMOD_E;
       61    13446        %KV_ABSGRPRND_E;
       62    13455        %KV#VD_ORG_E;
       63    13463        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:4    
       64    13464
       65    13465
       66    13466        /**/
       67    13467        /* Parameters */
       68    13468        /**/
       69    13469    1   DCL PARM UBIN;
       70    13470         %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:5    
       71    13471
       72    13472        /**/
       73    13473        /* Auto */
       74    13474        /**/
       75    13475    1   DCL PARM$ PTR;                          /* Address of first parameter         */
       76    13476    1   DCL DEV$ PTR;                           /* Device context addr                */
       77    13477    1   DCL CTR$ PTR  /* Pointer to controller context */;
       78    13478    1   DCL LIN$ PTR  /* Pointer to line context */;
       79    13479    1   DCL BFR$ PTR;                 /* Current KZ$OTPBFR, from GV$VDI.OTPBFR_.ADR$  */
       80    13480    1   DCL TBFR$ PTR;
       81    13481    1   DCL T$ PTR;
       82    13482    1   DCL INTLVL UBIN;
       83    13483    1   DCL ROW                            SBIN;/**/
       84    13484    1   DCL COL                            SBIN;/**/
       85    13485    1   DCL ROW1                           SBIN;/**/
       86    13486    1   DCL COL1                           SBIN;/**/
       87    13487    1   DCL COL2                           SBIN;/**/
       88    13488    1   DCL CUR_ROW                        SBIN;/**/
       89    13489    1   DCL CUR_COL                        SBIN;/**/
       90    13490    1   DCL MAX_ROW SBIN;                       /* GV$MRD$->GV$MRD.LNG set in GET_VAL */
       91    13491    1   DCL MAX_COL SBIN;                       /* GV$MRD$->GV$MRD.WDT set in GET_VAL */
       92    13492    1   DCL SZ SBIN;                            /* GET BUFFER SIZE STORAGE            */
       93    13493    1   DCL SZX SBIN;                           /* SIZE ARRARY INDEX                  */
       94    13494    1   DCL NL SBIN;                            /* NEW LINES FOR PRINTER              */
       95    13495    1   DCL K SBIN;
       96    13496    1   DCL LSTBYT UBIN;
       97    13497    1   DCL I                              SBIN;/**/
       98    13498    1   DCL J                              SBIN;/**/
       99    13499    1   DCL BYTX UBIN;                          /* GV$VDI.OTPBFR_.BYTX                */
      100    13500
      101    13501        /*       THROTTLE PARAMETER:
      102    13502                      This parameter deFines the number of BUFFERS that
      103    13503                      may be queued up by a device for output before
      104    13504                      blocking occurs.
      105    13505
      106    13506                      At present, unblocking happens whenever the
      107    13507                      buffer count goes below this threshold.
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:6    
      108    13508        */
      109    13509
      110    13510    1   DCL KZH_BUFFER_THROTTLE UBIN CONSTANT SYMDEF INIT(2);
      111    13511
      112    13512    1   DCL BYTSIZ UBIN;                        /* GV$VDI.OTPBFR_.BYTSIZ              */
      113    13513    1   DCL 1 ATTR_CHAR,
      114    13514    1         2 * BIT(2),
      115    13515    1         2 PROTECT BIT(1),
      116    13516    1         2 NUMERIC BIT(1),
      117    13517    1         2 INTENSITY UBIN(2) UNAL,
      118    13518    1         2 * BIT(1),
      119    13519    1         2 MDT BIT(1);
      120    13520    1   DCL ATTR_CHR REDEF ATTR_CHAR UBIN BYTE CALIGNED;
      121    13521        %KV$GRPRND (STCLASS=);
      122    13548        %KV$VDH_DCLLCLPST (STCLASS=);
      123    13617        %KH$CLK (STCLASS=);
      124    13766        %INHIBIT_DCLS;
      125    13778        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:7    
      126    13779        /**/
      127    13780        /* Based Structures */
      128    13781        /**/
      129    13782        %KZ$HIPHEAD;                            /* FROM KZ$HIPBRACKET                 */
      130    13811        %KZ$HIPTAIL;                            /* FROM KZ$HIPBRACKET                 */
      131    13836        %KZ$LINCTX(STCLASS="BASED(LIN$)");
      132    14267        %KZ$HIPCTR(STCLASS="BASED(CTR$)");
      133    14304        %KZ$HIPDEV (STCLASS="BASED(DEV$)");
      134    14485        %KZ$HIPWCC (STCLASS="BASED(BFR$)",ARY="(0:0)",NAME=WCC);
      135    14511        %KZ$OTPBFR (STCLASS="BASED(BFR$)");
      136    14576        %EQU Y#ID=0;
      137    14577        %KV$PTR;
      138    14620        %KV$MVD;
      139    14664        %KV$SRD;
      140    14939        %KV$VDI;
      141    15010        %EQU ASC=0;
      142    15011        %KV$MRD;
      143    15058        %KV$USR_OTPMRK (STCLASS="BASED(PARM$)");
      144    15120        %KV$USR_DAT (STCLASS="BASED(PARM$)");
      145    15204        %KV$USR_ERS (STCLASS="BASED(PARM$)");
      146    15308        %KV$USR_EVT (STCLASS="BASED(PARM$)");
      147    15343        %KV$USR_INPPRC (STCLASS="BASED(PARM$)");
      148    15379        %KV$USR_SETPRM (STCLASS="BASED(PARM$)");
      149    15441        %KV$USR_GETPRM (STCLASS="BASED(PARM$)");
      150    15502        %KV$USR_GETOTPBFR (STCLASS="BASED(PARM$)");
      151    15537        %KV$USR_EXTINPTRN (STCLASS="BASED(PARM$)");
      152    15573        %KV$USR_EXTOTPTRN (STCLASS="BASED(PARM$)");
      153    15609        %KV$USR_PST (STCLASS="BASED(PARM$)");
      154    15679        %KV$USR_SETATR (STCLASS="BASED(PARM$)");
      155    15802        %KV$OTPMRK (STCLASS=BASED);
      156    15829        %KH$CHN;
      157    15953
      158    15954
      159    15955    1   DCL BYTS CHAR(I) BASED CALIGNED;
      160    15956    1   DCL BYT(0:1023) UBIN BYTE BASED CALIGNED;
      161    15957    1   DCL CHR1 CHAR(1) BASED CALIGNED;
      162    15958    1   DCL BITS(0:0) BIT(8) BASED CALIGNED;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:8    
      163    15959    1   DCL 1 KZ$PRM_HIP BASED CALIGNED,        /* HIP profile parameter              */
      164    15960    1         2 * BIT(4),
      165    15961    1         2 EWALT BIT(2),
      166    15962    1         2 SIOPT BIT(2);
      167    15963         %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:9    
      168    15964
      169    15965        /* STATIC */
      170    15966        %KV$VDH_RLSBFR(STCLASS=STATIC);
      171    16002
      172    16003        /**/
      173    16004        /* External Routines */
      174    16005        /**/
      175    16006    1   DCL   KVV$VDI  ENTRY(1) ALTRET;
      176    16007    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
      177    16008    1   DCL KZH$DFR ENTRY(1) ALTRET;
      178    16009    1   DCL KZH$DSC ENTRY(1) ALTRET;
      179    16010    1   DCL KZH$DSC_CONT ENTRY(1) ALTRET;
      180    16011    1   DCL KZH$RELOTPBFR ENTRY(2) ALTRET;
      181    16012    1   DCL KZH$RLSCTX ENTRY(1) ALTRET;
      182    16013    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      183    16014    1   DCL KHA$ERRLOG ENTRY(2) ALTRET;
      184    16015    1   DCL KZH$DSC_LINE ENTRY(1) ALTRET;
      185    16016    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
      186    16017        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:10   
      187    16018        /**/
      188    16019        /* Constant */
      189    16020        /**/
      190    16021    1   DCL KZ_HIPXLB(0:63) BIT(8) CONSTANT INIT(
      191    16022    1       '40'X,'C1'X,'C2'X,'C3'X,'C4'X,'C5'X,'C6'X,'C7'X,
      192    16023    1       'C8'X,'C9'X,'4A'X,'4B'X,'4C'X,'4D'X,'4E'X,'4F'X,
      193    16024    1       '50'X,'D1'X,'D2'X,'D3'X,'D4'X,'D5'X,'D6'X,'D7'X,
      194    16025    1       'D8'X,'D9'X,'5A'X,'5B'X,'5C'X,'5D'X,'5E'X,'5F'X,
      195    16026    1       '60'X,'61'X,'E2'X,'E3'X,'E4'X,'E5'X,'E6'X,'E7'X,
      196    16027    1       'E8'X,'E9'X,'6A'X,'6B'X,'6C'X,'6D'X,'6E'X,'6F'X,
      197    16028    1       'F0'X,'F1'X,'F2'X,'F3'X,'F4'X,'F5'X,'F6'X,'F7'X,
      198    16029    1       'F8'X,'F9'X,'7A'X,'7B'X,'7C'X,'7D'X,'7E'X,'7F'X);
      199    16030    1   DCL KZ_HIPXL(0:63) REDEF KZ_HIPXLB UBIN BYTE CALIGNED;
      200    16031        /**/
      201    16032    1   DCL KZ_HIP_BFRSIZ(0:8) UBIN CONSTANT SYMDEF INIT(
      202    16033    1       0,16,32,64,128,256,512,1024,2048);
      203    16034        %EQU KZ#MAXBFR=8;
      204    16035        %EQU  ERRLOG_OVRPNT = 1;
      205    16036        %EQU  ERRLOG_LNGRJC = 2;
      206    16037        %EQU QUEUE_ON_HEAD='0'B;
      207    16038        %EQU QUEUE_ON_TAIL='1'B;
      208    16039
      209    16040        /* CHARACTER STRINKZ FOR 7814 SPECIFIC STUFF */
      210    16041        %EQU ESC_CHAR=BITASC('1B'X);
      211    16042    1   DCL 1 VIP7814 CONSTANT,
      212    16043    1         2 STRI,
      213    16044    1           3 THEADLEN SBIN INIT(3),
      214    16045    1           3 *(0:15) CHAR(1) INIT(
      215    16046    1       %ESC_CHAR,'[','l',                  /* TM (go into next mode)             */
      216    16047    1       ' '*0),
      217    16048    1           3 TTAILLEN SBIN INIT(3),
      218    16049    1           3 *(0:15) CHAR(1) INIT(
      219    16050    1       %ESC_CHAR,'[','h',                  /* FM (go into form mode)             */
      220    16051    1       ' '*0),
      221    16052    1           3 PHEADLEN SBIN INIT(8),
      222    16053    1           3 *(0:15) CHAR(1) INIT(
      223    16054    1                     %ESC_CHAR,'[','9','p',/* PDENQ (print delayed enq)          */
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:11   
      224    16055    1                     %ESC_CHAR,'[','4','p',/* PTD   (print transparent data)     */
      225    16056    1        ' '*0),
      226    16057    1           3 PTAILLEN SBIN INIT(4),
      227    16058    1           3 *(0:15) CHAR(1) INIT(
      228    16059    1        %ESC_CHAR,'[','<','p',             /* PDT  (print data terminator)       */
      229    16060    1        ' '*0),
      230    16061    1         2 STRS(0:1) REDEF STRI,
             16061                  /* CHARACTER STRINGS BEFORE AND AFTER, INDEXED BY ADDRESS */
      231    16062    1           3 BEFORE_LEN SBIN,
      232    16063    1           3 BEFORE_TEXT CHAR(16),
      233    16064    1           3 AFTER_LEN SBIN,
      234    16065    1           3 AFTER_TEXT CHAR(16);
      235    16066
      236    16067        /* character strings to be sent before logon, after logon */
      237    16068    1   DCL 1  SSS_7804 CONSTANT,
      238    16069    1         2 N SBIN INIT(3),
      239    16070    1         2 CA(0:15) CHAR(1) INIT
      240    16071    1    ( %ESC_CHAR, '[','e',                  /* SSS, space suppress set            */
      241    16072    1      ' '*0),
      242    16073    1         2 C REDEF CA CHAR(16);
      243    16074    1   DCL 1 SSR_7804 CONSTANT,
      244    16075    1         2 N SBIN INIT(3),
      245    16076    1         2 CA(0:15) CHAR(1) INIT
      246    16077    1    ( %ESC_CHAR, '[','d',                  /* SSR, space suppress reset          */
      247    16078    1      ' '*0),
      248    16079    1         2 C REDEF CA CHAR(16);
      249    16080
      250    16081    1   DCL 1  RMS_7804 CONSTANT,
      251    16082    1         2 N SBIN INIT(3),
      252    16083    1         2 CA(0:15) CHAR(1) INIT
      253    16084    1    (%ESC_CHAR,'r',                        /* RMS, roll mode set                 */
      254    16085    1      ' '*0),
      255    16086    1         2 C REDEF CA CHAR(16);
      256    16087
      257    16088        /* TAB TABLE FOR 7804/7814 INPUT */
      258    16089    1   DCL 1 TABTABLE_7804 STATIC,
      259    16090    1         2 LNK$ PTR INIT(ADDR(NIL)),
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:12   
      260    16091    1         2 BYTSIZ SBIN INIT(8),
      261    16092    1         2 USRCNT UBIN INIT(32767),
      262    16093    1         2 TXT(0:7) UBIN BYTE UNAL INIT(0,81,161,241,000*000);
      263    16094        /**/
      264    16095        %KZ$OTPBFR (NAME=KZ_OTPBFR,STCLASS=CONSTANT);
      265    16160        %KH$CLK (FPTN=KH_CLK_RESET, FNC=%KH#CLK_RESET, STCLASS=CONSTANT);
      266    16309        /* Throttling values */
      267    16310    1   DCL KZH_THRTL_INIT UBIN CONSTANT SYMDEF INIT(1000);
      268    16311    1   DCL KZH_THRTL_UNBLK UBIN CONSTANT SYMDEF INIT(300);
      269    16312    1   DCL KZH_THRTL_BLK  UBIN CONSTANT SYMDEF INIT(1000);
      270    16313
      271    16314
      272    16315        /* Number of bytes to reserve for escape sequences within
      273    16316           a block.
      274    16317        */
      275    16318    1   DCL KZH_ESCAPE_RESERVE SBIN CONSTANT SYMDEF INIT(80);
      276    16319
      277    16320        /* Buffer size power of 2. Must be big enough
      278    16321           to hold KZH_ESCAPE_RESERVE bytes.
      279    16322        */
      280    16323    1   DCL KZH_INITBFR_SIZE SBIN CONSTANT SYMDEF INIT(4);
      281    16324        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:13   
      282    16325        /**/
      283    16326        /* External Data */
      284    16327        /**/
      285    16328        %KV$VDH_DCLLCLPST (NAME=KV@VDH_DCLLCLPST,STCLASS=SYMREF);
      286    16397    1   DCL KH_INHLVL UBIN SYMREF;
      287    16398        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP, STCLASS=SYMREF);
      288    16433        %KV$VDH_EVT (NAME=KV_VDH_EVT_CMPOTP, STCLASS=SYMREF);
      289    16468        %KZ_HIP_HDR (STCLASS=SYMREF);
      290    16492        %KZ$3270STT (STCLASS="BASED(KZ_HIP_HDR.STTBFR$)", NAME=KZ@HIPSTT);
      291    16924        %EJECT
      292    16925
      293    16926
      294    16927
      295    16928        /**/
      296    16929        /* Macros */
      297    16930        /**/
      298    16931        %MACRO MAC_SETBUFADR;
      299    16932                                 /*KV$VDH_RLSBFR.SHRBFRHEDPTR$=KV$VDH_RLSBFR.BFR$;*/
      300    16933           %MEND;
      301    16934        %MACRO MAC_GETBFR;
      302    16935                IF KZ$HIPDEV.PRINTER THEN
      303    16936                   SZX=KZ$HIPDEV.OTPBFRSIZ;     /* Start with largest size            */
      304    16937                ELSE
      305    16938                   SZX=KZH_INITBFR_SIZE;        /* Start with a small buffer          */
      306    16939        /**/
      307    16940                DO WHILE(SZX > 0);
      308    16941                   SZ=KZ_HIP_BFRSIZ(SZX);       /* Size of buffer in words            */
      309    16942                   %DISABLE(INHLVL=KH_INHLVL);
      310    16943                   CALL KVB$GETSYS(SZ,TBFR$) ALTRET(NOBFR);
      311    16944                   %ENABLE(INHLVL=KH_INHLVL);
      312    16945                   KZ@HIPSTT.OTPBFRSIZ(SZX) = KZ@HIPSTT.OTPBFRSIZ(SZX)+1;
      313    16946                   KZ@HIPSTT.KHSTT.OTPBFRBYTUTL = KZ@HIPSTT.KHSTT.OTPBFRBYTUTL+SZ*2;
      314    16947                   GOTO GOTBFR;
      315    16948        NOBFR:
      316    16949                   %ENABLE(INHLVL=KH_INHLVL);
      317    16950                   SZX = SZX -1;
      318    16951                   END;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:14   
      319    16952                ALTRETURN;
      320    16953        /**/
      321    16954        GOTBFR:
      322    16955        %MEND;
      323    16956
      324    16957        /**/
      325    16958        /* EQUs */
      326    16959        /**/
      327    16960        %EQU KZ#ATTR_CHR_PRT='20'X;
      328    16961
      329    16962
      330    16963        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:15   
      331    16964        /**/
      332    16965        /* Warning - the following AUTO cells are assumed to always contain
      333    16966           the indicated values while in this module:
      334    16967
      335    16968           DEV$        Device context
      336    16969           CTR$        Controller context
      337    16970           LIN$        Line context
      338    16971           BFR$        GV$VDI.OTPBFR_.ADR$
      339    16972           BYTX        GV$VDI.OTPBFR_.BYTX
      340    16973           BYTSIZ      GV$VDI.OTPBFR_.BYTSIZ
      341    16974
      342    16975        Note that BFR$, BYTX and BYTSIZ are loaded upon entry (GET_VAL)
      343    16976        and stored back in GV$VDI upon exit (SET_VAL).  GV$VDI.OTPBFR_
      344    16977        should not be looked at or modified except in those two routines,
      345    16978        and in DONE.
      346    16979        */
      347    16980
      348    16981
      349    16982    1           PARM$=ADDR(PARM);
      350    16983    1           DEV$=%KV_VDI.USRCTX$;
      351    16984    1           CTR$=KZ$HIPDEV.CTR$;
      352    16985    1           LIN$=KZ$HIPCTR.LIN$;
      353    16986    1           KZ$HIPDEV.DONE='0'B;
      354    16987    1           IF KV$USR_DAT.FNC=%KV_USR_FNC_EVT THEN
      355    16988    1              IF KV$USR_EVT.ID =%KV_USR_EVT_ID_RLSSTR THEN
      356    16989    1                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN GOTO SKIP_GET;
      357    16990    1           CALL GET_VAL;
      358    16991    1   SKIP_GET: ;
      359    16992
      360    16993        /**/
      361    16994    2           DO CASE(KV$USR_DAT.FNC);
      362    16995        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:16   
      363    16996
      364    16997
      365    16998        /**/
      366    16999        /* Get output buffer -
      367    17000           VDH needs more room to insert data into our output buffers.
      368    17001           We will either expand our current buffer or start a new
      369    17002           buffer and send the current buffer  to the line manager.
      370    17003        */
      371    17004        /**/
      372    17005    2            CASE(%KV_USR_FNC_GETOTPBFR);
      373    17006
      374    17007        /* I cannot split escape sequences across buffer bounds.
      375    17008            I therefore must make sure that 'KZH_ESCAPE_RESERVE' bytes
      376    17009            are left in the output buffer.
      377    17010
      378    17011            Whenever the 'INHIBIT DELETE OUTPUT' event is given to
      379    17012            by VDH, the same test is performed.
      380    17013        */
      381    17014    2              CALL CHK_BFR_SIZ(MAXIMUM(KZH_ESCAPE_RESERVE,KV$USR_GETOTPBFR.ESTBYTSIZ))
             17014                       ALTRET(NO_MEMORY);
      382    17015
      383    17016
      384    17017        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:17   
      385    17018
      386    17019
      387    17020        /**/
      388    17021        /* Erase */
      389    17022        /*
      390    17023           Erase a window on the screen - we are given the top left and
      391    17024           bottom right positions (corners) of the area to be cleared and
      392    17025           a top line offset in case the entire first line is not erased.
      393    17026        */
      394    17027        /**/
      395    17028    2            CASE(%KV_USR_FNC_ERS);
      396    17029
      397    17030
      398    17031        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:18   
      399    17032
      400    17033        /**/
      401    17034        /* Getprm */
      402    17035        /*
      403    17036          Get parameters
      404    17037        */
      405    17038        /**/
      406    17039    2            CASE(%KV_USR_FNC_GETPRM);
      407    17040
      408    17041    2              IF KV$USR_GETPRM.PRMID = %KV_PRMID_CRTLINSPD THEN
      409    17042    2                 KV$USR_GETPRM.VAL = KZ$HIPDEV.CTR$ -> KZ$HIPCTR.LIN$ ->
      410    17043    2                   KZ$LINCTX.CHN$ -> KH$CHN.LINSPD;
      411    17044        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:19   
      412    17045
      413    17046        /*
      414    17047        SETPRM - MASTER REAL DEVICE LENGTH AND WIDTH
      415    17048           We will get preprocessing on VDH set params and if the parameters
      416    17049           being set are the device width or length, we may want to override
      417    17050           VDH. This will be done when the virtual device interface pointer
      418    17051           is nill.
      419    17052        */
      420    17053        /**/
      421    17054    2            CASE(%KV_USR_FNC_SETPRM);
      422    17055
      423    17056
      424    17057        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:20   
      425    17058
      426    17059
      427    17060        /**/
      428    17061        /* Output marker */
      429    17062        /*
      430    17063              Output Marker Request - copy control data from VDH and hang on
      431    17064              to the control data until the line manager says the real data
      432    17065              has been recieved by the device, at which time KV$VDH_OTPMRK
      433    17066              will be called to notify the other end point of completion.
      434    17067
      435    17068              Calculate word size of the buffer needed to hold the control
      436    17069              data and add number of words needed to create the KZ$OTPMRK
      437    17070              structure.
      438    17071
      439    17072        */
      440    17073    2            CASE(%KV_USR_FNC_OTPMRK);
      441    17074
      442    17075
      443    17076    2              IF BFR$=ADDR(NIL) THEN
      444    17077    2                 CALL EXP_BFR ALTRET(NO_MEMORY); /* Must have output buffer      */
      445    17078        /**/
      446    17079    3              IF NOT KV$USR_OTPMRK.DAT.MSTRTR AND KZ$OTPBFR.MRKCNT~=0 THEN DO;
      447    17080    3                 T$=PINCRW(BFR$,KZ_HIP_BFRSIZ(KZ$OTPBFR.BFRSIZ)-SIZEW(KV$OTPMRK));
      448    17081    4                 IF NOT T$->KV$OTPMRK.MSTRTR THEN DO;
      449    17082    4                    T$->KV$OTPMRK=KV$USR_OTPMRK.DAT;
      450    17083    4                    GOTO XIT;
      451    17084    4                    END;
      452    17085    3                 END;
      453    17086        /**/
      454    17087    2              IF BYTSIZ<SIZEW(KV$OTPMRK)*2 THEN
      455    17088    2                 CALL EXP_BFR ALTRET(NO_MEMORY); /* Make room for marker         */
      456    17089        /**/
      457    17090    2              KZ$OTPBFR.MRKCNT=KZ$OTPBFR.MRKCNT+1;
      458    17091    2              T$=PINCRW(BFR$,KZ_HIP_BFRSIZ(KZ$OTPBFR.BFRSIZ)-
      459    17092    2                SIZEW(KV$OTPMRK)*KZ$OTPBFR.MRKCNT);
      460    17093    2              T$->KV$OTPMRK=KV$USR_OTPMRK.DAT;
      461    17094    2              BYTSIZ=BYTSIZ-SIZEW(KV$OTPMRK)*2;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:21   
      462    17095
      463    17096    2              IF KV$USR_OTPMRK.CMPOTP THEN
      464    17097    3              DO;  /* Process this otpmrk thru data stream - we'll recieve
      465    17098                              no more data until the pipe is clear         */
      466    17099    3                 KZ$HIPDEV.LSTOTPLINX = 0;  /* Save 0 bytes in the buffer
      467    17100                                                        even if its a printer BFR. */
      468    17101    3                 CALL DONE(%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
      469    17102    3                 END;
      470    17103
      471    17104        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:22   
      472    17105
      473    17106
      474    17107        /**/
      475    17108        /* Extended translation */
      476    17109        /**/
      477    17110    2            CASE(%KV_USR_FNC_EXTOTPTRN);
      478    17111
      479    17112        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:23   
      480    17113
      481    17114
      482    17115        /**/
      483    17116        /* Transparent Data */
      484    17117        /* I assume the user knows what he is doing, 'cuz
      485    17118           the wrong kind of transparent data can blow the link protocol.
      486    17119        */
      487    17120
      488    17121    2            CASE(%KV_USR_FNC_DAT);
      489    17122
      490    17123    2              K=KV$USR_DAT.DAT__.DATBYTSIZ;
      491    17124    2              CALL CHK_BFR_SIZ(K) ALTRET(NEVER_FITS);
      492    17125    2              K=KV$USR_DAT.DAT__.DATBYTSIZ;
      493    17126    2              T$=KV$USR_DAT.DAT__.ADR$;
      494    17127    2              J=KV$USR_DAT.DAT__.BYTX;
      495    17128
      496    17129    2              CALL INSERT(BFR$->CHR1,BYTX,K,
      497    17130    2                SUBSTR(T$->CHR1,
      498    17131    2                J,
      499    17132    2                K));
      500    17133    2              BYTX=BYTX+K;
      501    17134    2              BYTSIZ=BYTSIZ-K;
      502    17135    3   NEVER_FITS: DO;
      503    17136    3                 END;
      504    17137        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:24   
      505    17138
      506    17139
      507    17140        /**/
      508    17141        /* Position */
      509    17142        /**/
      510    17143    2            CASE(%KV_USR_FNC_PST);
      511    17144
      512    17145
      513    17146        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:25   
      514    17147
      515    17148
      516    17149        /**/
      517    17150        /* Set attribute */
      518    17151        /*
      519    17152           VDH asking us to set device attributes for a particular field.
      520    17153           This is done by inserting a start field command into the data
      521    17154           stream followed by the attribute byte. We may change display
      522    17155           intensity, make it write protected, make it numeric only and
      523    17156           make it selector pen dectectable, all by seting bits in the
      524    17157           attribute character.
      525    17158        */
      526    17159    2            CASE(%KV_USR_FNC_SETATR);
      527    17160
      528    17161
      529    17162        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:26   
      530    17163
      531    17164
      532    17165        /**/
      533    17166        /* Input Procedure */
      534    17167        /**/
      535    17168    2            CASE(%KV_USR_FNC_INPPRC);
      536    17169        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:27   
      537    17170        /**/
      538    17171        /* INPUT SPECIAL CHARACTER -LF */
      539    17172        /**/
      540    17173
      541    17174    2            CASE(%KV_USR_FNC_EXTINPTRN);
      542    17175
      543    17176    3              DO SELECT(KZ$HIPCTR.TYP);
      544    17177    3                 SELECT(7700);
      545    17178        /*            KV$USR_EXTINPTRN.ABR='1'B;            */
      546    17179    3                 GOTO ALTRTN;
      547    17180    3                 SELECT(7804);
      548    17181    3   /* T$=ADDR(NIL);*/ GOTO ALTRTN;
      549    17182    3                 SELECT(ELSE);
      550    17183    3              T$=ADDR(NIL);
      551    17184    3                 END /* DO SELECT */;
      552    17185        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:28   
      553    17186
      554    17187
      555    17188        /**/
      556    17189        /* Event */
      557    17190        /**/
      558    17191    2            CASE(%KV_USR_FNC_EVT);
      559    17192                  /*
      560    17193                    The following do case is used to inform the handler when
      561    17194                    certain events happen in VDH that we are interested in
      562    17195                    because it means some action is required in behalf of
      563    17196                    the device. Such as VDH return to path mngt which is
      564    17197                    a signal that we may send any pending output buffers to the
      565    17198                    device.
      566    17199                  */
      567    17200        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:29   
      568    17201
      569    17202    3              DO CASE(KV$USR_EVT.ID);
      570    17203
      571    17204
      572    17205        /**/
      573    17206        /* Event - Delete output */
      574    17207        /**/
      575    17208    3               CASE(%KV_USR_EVT_ID_DLTOTP);
      576    17209
      577    17210    3                 KZ$HIPDEV.HLT.PAG='0'B;
      578    17211    3                 KZ$HIPDEV.HLT.INP='0'B;
      579    17212    3                 CALL DONE(%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
      580    17213        /*  MERELY MARK THE BUFFERS AS DELETED..
      581    17214            DEVICE MANAGER WILL DELETE THEM WHEN THIS
      582    17215            DEVICE'S TURN TO SEND COMES ALONG.
      583    17216        */
      584    17217    3                 IF KZ$HIPDEV.OTPCNT~=0 THEN
      585    17218    4                 DO;
      586    17219                         %DISABLE(INHLVL=KH_INHLVL);
      587    17223    4                    T$=KZ$HIPDEV.OTPHD$;
      588    17224    5                    DO UNTIL(T$=ADDR(NIL));
      589    17225    5                       T$->KZ$OTPBFR.CMPCOD=%KV_CMPCOD_DLT;
      590    17226    5                       T$=T$->KZ$OTPBFR.LNK$;
      591    17227    5                       END;
      592    17228                         %ENABLE(INHLVL=KH_INHLVL);
      593    17234    4                    END;
      594    17235
      595    17236        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:30   
      596    17237    3               CASE(%KV_USR_EVT_ID_INHDLTOTP);
      597    17238
      598    17239        /* A cursor position or erase is being performed within the
      599    17240           last KZH_ESCAPE_RESERVE bytes of the buffer.
      600    17241
      601    17242           Flush the current buffer, then get another one.
      602    17243        */
      603    17244
      604    17245    3                 IF KZ$HIPDEV.ACTIVE THEN
      605    17246    4                 DO;
      606    17247    4                    CALL CHK_BFR_SIZ(MAXIMUM(KZH_ESCAPE_RESERVE,KV$USR_EVT.PRM)) ALTRET
             17247                             (NO_MEMORY);
      607    17248    4                    END;
      608    17249        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:31   
      609    17250
      610    17251
      611    17252        /**/
      612    17253        /* Event - Disconnect */
      613    17254        /**/
      614    17255    3               CASE(%KV_USR_EVT_ID_DSC);
      615    17256
      616    17257    3                 IF %KV_VDI.SSNCNT > 1 THEN RETURN;
      617    17258    4                 IF NOT KZ$HIPDEV.DSC THEN DO;
      618    17259                         %DISABLE(INHLVL=KH_INHLVL);
      619    17263    4                    KZ$HIPDEV.DSC.INT='1'B;
      620    17264    4                    KZ$HIPDEV.DSC.TOLD_VDH='1'B;
      621    17265    4                    CALL KZH$DSC(KZ$HIPDEV);
      622    17266                         %ENABLE(INHLVL=KH_INHLVL);
      623    17272    4                    END;
      624    17273    3                 RETURN;         /* Dont't do SET_VAL - may have been re-entered */
      625    17274
      626    17275        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:32   
      627    17276
      628    17277
      629    17278        /**/
      630    17279        /* Event - Halt Output */
      631    17280        /*
      632    17281              ESC H or some such was input - Halt output and await users
      633    17282              intervention. (Usually means "Enter to Go"
      634    17283        */
      635    17284    3               CASE(%KV_USR_EVT_ID_HLTOTP);
      636    17285
      637    17286    4                 IF NOT KZ$HIPDEV.DSC THEN DO;
      638    17287    4                    IF BFR$=ADDR(NIL) THEN
      639    17288    4                       CALL INITBFR ALTRET(NO_MEMORY);
      640    17289    4                    IF KV$USR_EVT.PRM=0 THEN
      641    17290    4                       KZ$OTPBFR.FLAGS.HALT.PAG#='1'B;
      642    17291    4                    ELSE
      643    17292    4                       KZ$OTPBFR.FLAGS.HALT.INP#='1'B;
      644    17293    4                    END;
      645    17294    3                 CALL DONE(%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
      646    17295
      647    17296        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:33   
      648    17297
      649    17298
      650    17299        /**/
      651    17300        /* Event - Logon Accept */
      652    17301        /**/
      653    17302    3               CASE(%KV_USR_EVT_ID_LGNACP,%KV_USR_EVT_ID_ENDSETPRM);
      654    17303
      655    17304    4                 DO SELECT(KZ$HIPCTR.TYP*4+BITBIN(%KV_MVD.ORG=%KV#VD_ORG_FORM));
      656    17305    4                    SELECT(%(7814*4+1),%(7804*4+1)); /*FORMS MODE 7814,7804      */
      657    17306        /*               CALL SEND_HTEXTC(SSS_7804);*/
      658    17307    4                    SELECT(%(7814*4+0),%(7804*4+0)); /* TIMESHARING MODE 7814,7804 */
      659    17308        /*               CALL SEND_HTEXTC(SSS_7804);*/
      660    17309    4                    %KV_MVD.TABRELATIVE='0'B;
      661    17310    4                    %KV_MVD.SPACEINSERT='1'B;
      662    17311    4                    %KV_MVD.TABSIM='1'B;
      663    17312    4                    %KV_SRD.SCROLL='0'B;
      664    17313                                      /* RELEASE OLD TAB BUFFER, IF THERE WAS ONE     */
      665    17314    4                    IF (%KV_MVD.INPTAB$~=ADDR(NIL)) AND
      666    17315    4                      (%KV_MVD.INPTAB$~=ADDR(TABTABLE_7804)) THEN
      667    17316    5                    DO;
      668    17317    5                       KV$VDH_RLSBFR.BFR$=%KV_MVD.INPTAB$;
      669    17318    5                       KV$VDH_RLSBFR.STRTYP=%KV_STRTYP_INPTAB;
      670    17319    5                       KV$VDH_RLSBFR.SHRBFRSRC='1'B;
      671    17320    5                       CALL KVV$VDI(KV$VDH_RLSBFR);
      672    17321    5                       END;
      673    17322    4                    %KV_MVD.INPTAB$=ADDR(TABTABLE_7804);
      674    17323    4                    TABTABLE_7804.USRCNT=32767 /*never gets released */;
      675    17324    4                    END /*SELECT ON TERMINAL TYPE, DCB ORG */;
      676    17325        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:34   
      677    17326
      678    17327
      679    17328        /**/
      680    17329        /* Event - Logon Reject */
      681    17330        /**/
      682    17331    3               CASE(%KV_USR_EVT_ID_LGNRJC);
      683    17332
      684    17333    3                 CALL ERRLOG(%E$LGNREJ);
      685    17334    3                 KZ$HIPDEV.ACTIVE='0'B;
      686    17335
      687    17336        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:35   
      688    17337
      689    17338
      690    17339        /**/
      691    17340        /* Event - Release Structure */
      692    17341        /**/
      693    17342    3               CASE(%KV_USR_EVT_ID_RLSSTR);
      694    17343
      695    17344        /*
      696    17345              VDH is ready to get rid of some of our interface context.
      697    17346        */
      698    17347    4                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN DO;
      699    17348                         %DISABLE(INHLVL=KH_INHLVL);
      700    17352    4                    T$=%KV_VDI.OTPBFR_.ADR$;
      701    17353    5                    IF T$~=ADDR(NIL) THEN DO;
      702    17354    5                       I=KZ_HIP_BFRSIZ(T$->KZ$OTPBFR.BFRSIZ);
      703    17355    5                       %KV_VDI.OTPBFR_='0'B;
      704    17356    5                       CALL KVB$RLSSYS(I,T$);
      705    17357    5                       END;
      706    17358    4                    CALL KZH$RLSCTX(KZ$HIPDEV);
      707    17359                         %ENABLE(INHLVL=KH_INHLVL);
      708    17365    4                    RETURN;                /* Must RETURN here - no context left */
      709    17366    4                    END;
      710    17367
      711    17368        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:36   
      712    17369
      713    17370
      714    17371        /**/
      715    17372        /* Event - Schedule */
      716    17373        /**/
      717    17374    3               CASE(%KV_USR_EVT_ID_SCH);
      718    17375                      %DISABLE(INHLVL=KH_INHLVL);
      719    17379
      720    17380    3                 IF KZ$HIPDEV.DFR.CLR THEN
      721    17381    4                 DO;
      722    17382    4                    KZ$HIPDEV.DFR.CLR = '0'B;
      723    17383    4                    CALL KZH$CLEARIMM(KZ$HIPDEV);
      724    17384    4                    END;
      725    17385
      726    17386    3                 IF KZ$HIPDEV.DFRHD$~=ADDR(NIL) THEN
      727    17387    3                    CALL KZH$DFR(KZ$HIPDEV);
      728    17388
      729    17389    3                 IF KZ$HIPDEV.DSC THEN
      730    17390    3                    CALL KZH$DSC_CONT(KZ$HIPDEV); /* Try to continue disconnect  */
      731    17391    3                 ELSE
      732    17392    3                    IF KZ$HIPDEV.DSC_LATER THEN
      733    17393    4                    DO;
      734    17394    4                       KZ$HIPDEV.DSC_LATER='0'B;
      735    17395    4                       CALL KZH$DSC(KZ$HIPDEV);
      736    17396    4                       END;
      737    17397                      %ENABLE(INHLVL=KH_INHLVL);
      738    17403    3                 RETURN;   /* DONT WANT TO FALL THROUGH TO SET_VAL DO TO
      739    17404                                   RE-ENTRANCE PROBLEMS.                    */
      740    17405
      741    17406        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:37   
      742    17407
      743    17408
      744    17409        /**/
      745    17410        /* Event - VDH Exit */
      746    17411        /**/
      747    17412    3               CASE(%KV_USR_EVT_ID_VDHEXT);
      748    17413
      749    17414    3                 IF BFR$~=ADDR(NIL) THEN
      750    17415    3                    IF KZ$HIPDEV.OTPCNT=0 THEN
      751    17416    3                       CALL CMP_OTP ALTRET(NO_MEMORY);
      752    17417    3                    ELSE
      753    17418    4                    DO;
      754    17419    4                       KZ$HIPDEV.DONE='1'B;
      755    17420    4                       IF KZ$HIPDEV.OTPCNT=0 THEN
      756    17421    4                          CALL CMP_OTP ALTRET(NO_MEMORY);
      757    17422    4                       END;
      758    17423        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:38   
      759    17424
      760    17425
      761    17426        /**/
      762    17427        /* Event - Release VDI */
      763    17428        /**/
      764    17429    3               CASE(%KV_USR_EVT_ID_RLSVDI);
      765    17430
      766    17431                      %DISABLE(INHLVL=KH_INHLVL);
      767    17435    3                 KZ$HIPDEV.DSC.VDH_FINAL='1'B;
      768    17436    4                 IF KZ$HIPDEV.OTPHD$~=ADDR(NIL) OR KZ$HIPDEV.DFRHD$~=ADDR(NIL) THEN DO;
      769    17437                         %ENABLE(INHLVL=KH_INHLVL);
      770    17443    4                    GOTO ALTRTN;
      771    17444    4                    END;
      772    17445    4                 ELSE DO;
      773    17446    4                    KZ$HIPDEV.DSC.DEV_FINAL='1'B; /* Device done too             */
      774    17447                         %ENABLE(INHLVL=KH_INHLVL);
      775    17453    4                    END;
      776    17454        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:39   
      777    17455    3               CASE (ELSE);
      778    17456    3                 T$=ADDR(NIL);
      779    17457        /**/
      780    17458    3               END;                        /* END DO CASE(event-id)              */
      781    17459        /**/
      782    17460    2            END;                           /* DO CASE                            */
      783    17461        /**/
      784    17462    1   XIT:    CALL SET_VAL;
      785    17463        /**/
      786    17464    1           RETURN;
      787    17465    1   ALTRTN: CALL SET_VAL;
      788    17466    1           ALTRETURN;
      789    17467
      790    17468    1   NO_MEMORY:
      791    17469    1           CALL ERRLOG(%E$NO_MEMORY);
      792    17470    1           CALL KZH$DSC_LINE(KZ$HIPDEV.CTR$->KZ$HIPCTR.LIN$->KZ$LINCTX);
      793    17471    1           BYTSIZ=0;
      794    17472    1           GOTO ALTRTN;
      795    17473        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:40   
      796    17474    1   SETATR: PROC;
      797    17475    2           IF KV$GRPRND.HDN THEN
      798    17476    2              ATTR_CHAR.INTENSITY=%KZ#ATTR_HIDDEN;
      799    17477    2           ELSE
      800    17478    2              IF KV$GRPRND.INCINT THEN
      801    17479    2                 ATTR_CHAR.INTENSITY=%KZ#ATTR_HIGH;
      802    17480    2              ELSE
      803    17481    2                 IF KV$GRPRND.DCRINT THEN
      804    17482    2                    ATTR_CHAR.INTENSITY=%KZ#ATTR_LOW;
      805    17483    2           RETURN;
      806    17484    2   END SETATR;
      807    17485        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:41   
      808    17486
      809    17487        /* KZH$CLEAR - Called from device manager to clear screen */
      810    17488
      811    17489        /*F*   NAME:   CLEAR
      812    17490              PURPOSE: To insert a clear command into the output queue.
      813    17491                       Also to send any current block to the output stream
      814    17492                       ahead of the clear.
      815    17493        */
      816    17494        /*D*   NAME:    KZH$CLEAR
      817    17495              CALL:    From KZH$HIP
      818    17496        */
      819    17497    1   KZH$CLEAR: ENTRY(PARM) ALTRET;
      820    17498
      821    17499    1           DEV$=ADDR(PARM);
      822    17500    1           CTR$=KZ$HIPDEV.CTR$;
      823    17501    1           LIN$=KZ$HIPCTR.LIN$;
      824    17502        /**/
      825    17503    1           CALL GET_VAL;
      826    17504        /**/
      827    17505    1           CALL CLEAR ALTRET(NO_MEMORY);
      828    17506        /**/
      829    17507    1           CALL SET_VAL;
      830    17508        /**/
      831    17509    1           RETURN;
      832    17510
      833    17511        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:42   
      834    17512
      835    17513        /* KZH$CLEARIMM - Chain a clear on the head of the output queue */
      836    17514
      837    17515        /*F*      NAME:      KZH$CLEARIMM
      838    17516                  PURPOSE:   To send an erase as the next command
      839    17517        */
      840    17518
      841    17519        /*D*      NAME:      KZH$CLEARIMM
      842    17520                  CALL:      CALL KZH$CLEARIMM(KZ$HIPDEV);
      843    17521        */
      844    17522
      845    17523    1   KZH$CLEARIMM: ENTRY(PARM) ALTRET;
      846    17524
      847    17525    1           DEV$=ADDR(PARM);
      848    17526    1           CTR$=KZ$HIPDEV.CTR$;
      849    17527    1           LIN$=KZ$HIPCTR.LIN$;
      850    17528        /**/
      851    17529        /*      PTR$=KZ$HIPDEV.VDI$->KV$VDI.ASNINPPTR$;   */
      852    17530        /**/
      853    17531    1           BFR$=ADDR(NIL);
      854    17532    1           CALL CLEAR ALTRET(NO_MEMORY);
      855    17533        /*     TURN OFF RESET KEYBOARD BIT FOR THE CLEAR */
      856    17534    1           KZ$HIPDEV.KBDLCK='0'B;
      857    17535    1           CALL DONE(%QUEUE_ON_HEAD) ALTRET(NO_MEMORY);
      858    17536    1           KZ$HIPDEV.KBDLCK='1'B;
      859    17537        /**/
      860    17538    1           RETURN;
      861    17539        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:43   
      862    17540
      863    17541        /* KZH$CMPOTP - Call VDH for CMPOTP */
      864    17542
      865    17543    1   KZH$CMPOTP: ENTRY(PARM) ALTRET;
      866    17544
      867    17545    1           DEV$=ADDR(PARM);
      868    17546    1           CTR$=KZ$HIPDEV.CTR$;
      869    17547    1           LIN$=KZ$HIPCTR.LIN$;
      870    17548        /**/
      871    17549    1           CALL GET_VAL;
      872    17550    1           CALL CMP_OTP ALTRET(NO_MEMORY);
      873    17551    1           CALL SET_VAL;
      874    17552        /**/
      875    17553    1           RETURN;
      876    17554
      877    17555        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:44   
      878    17556
      879    17557        /* DONE - Package up current buffer and queue it to be sent to device */
      880    17558
      881    17559        /*F*   NAME:    DONE
      882    17560               PURPOSE: To take the currently being built device output buffer
      883    17561                       for a particular HIP, and place it at the end of that
      884    17562                       devices' output queue.
      885    17563        */
      886    17564        /*D*   NAME:    DONE
      887    17565              CALL:    Via HIP handler routines
      888    17566              USES DATA STRUCTURES
      889    17567                       KZ$HIPCTX
      890    17568                       KZ$OTPBFR
      891    17569              DESCRIPTION:
      892    17570                       A call to this routine indicates that a block is ready
      893    17571                       to be send to the device. It is therefore placed at
      894    17572                       the end of the device output queue by this routine.
      895    17573        */
      896    17574
      897    17575    1   DONE:   PROC(QUEUE_ON_TAIL) ALTRET;
      898    17576    2   DCL ADR SBIN;
      899    17577    2   DCL NRESERVE SBIN;
      900    17578    2   DCL QUEUE_ON_TAIL BIT(1) ALIGNED;
      901    17579
      902    17580    2           IF BFR$=ADDR(NIL) THEN
      903    17581    2              RETURN;
      904    17582        /**/
      905    17583        /**/
      906    17584    3           DO SELECT(KZ$HIPCTR.TYP);
      907    17585    3              SELECT(7700);
      908    17586
      909    17587    3              SELECT(7804,7814);
      910    17588    3              ADR=KZ$HIPDEV.ADR;
      911    17589    3              NRESERVE=VIP7814.STRS.BEFORE_LEN(KZ$HIPDEV.ADR);
      912    17590    3              IF (KZ$HIPDEV.ADR=0) AND (%KV_MVD.ORG~=%KV#VD_ORG_FORM)
      913    17591    3                AND (KV$PTR.SRD$->KV$SRD.SCROLL) THEN
      914    17592    3                 NRESERVE=NRESERVE+RMS_7804.N;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:45   
      915    17593    3              CALL INSERT(BFR$->BYTS,LENGTHC(KZ$HIPHEAD)+SIZEC(KZ$OTPBFR),
      916    17594    3                NRESERVE,
      917    17595    3                SUBSTR(VIP7814.STRS.BEFORE_TEXT(ADR),0,VIP7814.STRS.BEFORE_LEN(ADR)),
      918    17596    3                SUBSTR(RMS_7804.C,0,RMS_7804.N));
      919    17597    3              CALL INSERT(BFR$->CHR1,BYTX,VIP7814.STRS.AFTER_LEN(ADR),
      920    17598    3                SUBSTR(VIP7814.STRS.AFTER_TEXT(ADR),0,VIP7814.STRS.AFTER_LEN(ADR)));
      921    17599    3              BYTX=BYTX+VIP7814.STRS.AFTER_LEN(ADR);
      922    17600    3              END /* DO SELECT ON CONTROLLER TYPE */;
      923    17601        /**/
      924    17602    2           KZ$OTPBFR.DATA_SIZ=BYTX-SIZEC(KZ$OTPBFR);
      925    17603        /**/
      926    17604        /* DISABLE while mucking with items touched by dev manager */
      927    17605                %DISABLE(INHLVL=KH_INHLVL);
      928    17609    2           KZ$OTPBFR.FLAGS.CNT#='1'B;      /* DATA_SIZ added to OTPBYTES         */
      929    17610    2           KZ$HIPDEV.OTPBYTES=KZ$HIPDEV.OTPBYTES+KZ$OTPBFR.DATA_SIZ;
      930    17611        /**/
      931    17612    3           IF NOT KZ$HIPDEV.ACTIVE THEN DO;
      932    17613    3              KZ$OTPBFR.CMPCOD=%KV_CMPCOD_DVCERR;
      933    17614    3              T$ = BFR$;     /* NIL BFR$ pointer before release buffer call
      934    17615                      to prevent looping trying to release the same buffer */
      935    17616    3              BFR$ = ADDR(NIL); %KV_VDI.OTPBFR_.ADR$ = ADDR(NIL);
      936    17617    3              CALL KZH$RELOTPBFR(KZ$HIPDEV,T$);
      937    17618                   %ENABLE(INHLVL=KH_INHLVL);
      938    17624    3              END;
      939    17625    2           ELSE
      940    17626    3   DEVICE_IS_ACTIVE: DO;
      941    17627        /**/
      942    17628
      943    17629        /*  Queue up the buffer onto the device's buffer chain.
      944    17630
      945    17631            If the device is not on the list of devices waiting
      946    17632            to send a block, insert the device onto the chain.
      947    17633
      948    17634        */
      949    17635    3              IF KZ$HIPDEV.OTPCNT=0 THEN
      950    17636    3                 KZ$HIPDEV.OTPHD$=BFR$;
      951    17637    3              ELSE
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:46   
      952    17638    3                 KZ$HIPDEV.OTPTL$->KZ$OTPBFR.LNK$=BFR$;
      953    17639    3              KZ$HIPDEV.OTPTL$=BFR$;
      954    17640    3              KZ$HIPDEV.OTPCNT=KZ$HIPDEV.OTPCNT+1;
      955    17641    3              BFR$->KZ$OTPBFR.LNK$=ADDR(NIL);
      956    17642
      957    17643    3              IF (NOT KZ$HIPDEV.HLT) AND ( NOT KZ$HIPDEV.ONOTP) THEN
      958    17644    4              DO; /* INSERT THIS DEVICE AS THE TAIL OF THOSE WAITING TO SEND     */
      959    17645    4                 KZ$HIPDEV.OTPLNK$=ADDR(NIL);
      960    17646    5                 IF QUEUE_ON_TAIL THEN DO;
      961    17647    5                    IF KZ$LINCTX.OTPCNT=0 THEN
      962    17648    5                       KZ$LINCTX.OTPHD$=DEV$;
      963    17649    5                    ELSE
      964    17650    5                       KZ$LINCTX.OTPTL$->KZ$HIPDEV.OTPLNK$=DEV$;
      965    17651    5                    KZ$LINCTX.OTPTL$=DEV$;
      966    17652    5                    END;
      967    17653    5                 ELSE DO;
      968    17654    5                    IF KZ$LINCTX.OTPCNT=0 THEN
      969    17655    5                       KZ$LINCTX.OTPTL$=DEV$;
      970    17656    5                    ELSE
      971    17657    5                       DEV$->KZ$HIPDEV.OTPLNK$=KZ$LINCTX.OTPHD$;
      972    17658    5                    KZ$LINCTX.OTPHD$=DEV$;
      973    17659    5                    END;
      974    17660    4                 KZ$LINCTX.OTPCNT=KZ$LINCTX.OTPCNT+1;
      975    17661    4                 KZ$HIPDEV.ONOTP='1'B;
      976    17662    4                 END;
      977    17663
      978    17664        /*       CHECK TO SEE IF THE BUFFER THROTTLING LIMIT IS REACHED */
      979    17665    3              IF KZ$HIPDEV.OTPCNT>=KZH_BUFFER_THROTTLE THEN
      980    17666    4              DO;
      981    17667    4                 KZ$HIPDEV.THROTL='1'B;
      982    17668                      %KV$RQSOTP(RQSOTP=NO);
             17674    5           IF KV$PTR.VDI$->KV$VDI.RQSOTP THEN DO;
             17675    5              KV$PTR.VDI$->KV$VDI.RQSOTP = '0'B;
             17676    5              IF KV$PTR.VDI$->KV$VDI.SSNCNT>1
             17677    5              THEN CALL KVV$VDI (KV_VDH_EVT_RQSOTP);
             17678    5              END;
      983    17686    4                 END;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:47   
      984    17687
      985    17688        /* While inhibited, check to see if the line protocol has
      986    17689        suspended itself because there is nothing to do on the line.
      987    17690
      988    17691        If there is such a suspension, cancel the clock and start up
      989    17692        the line protocol again.
      990    17693        */
      991    17694    3              IF LIN$->KZ$LINCTX.PRMCTBTYP=%KZ#CTBTYP_DELAY AND
      992    17695    4                LIN$->KZ$LINCTX.CTB.PRM$~=ADDR(NIL) THEN DO;
      993    17696    4                 KH$CLK=KH_CLK_RESET;
      994    17697    4                 KH$CLK.PRD=0;
      995    17698    4                 KH$CLK.CTBCTX$=LIN$->KZ$LINCTX.CTB.PRM$;
      996    17699    4                 CALL KHC$CLOCK(KH$CLK);
      997    17700    4                 END;
      998    17701                   %ENABLE(INHLVL=KH_INHLVL);
      999    17707    3              END DEVICE_IS_ACTIVE;
     1000    17708        /**/
     1001    17709    2           BFR$=ADDR(NIL);
     1002    17710    2           BYTX=0;
     1003    17711    2           BYTSIZ=0;
     1004    17712        /**/
     1005    17713    2           RETURN;
     1006    17714
     1007    17715    2   END DONE;
     1008    17716
     1009    17717        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:48   
     1010    17718
     1011    17719        /* INITBFR - Build and initialize a new output buffer */
     1012    17720
     1013    17721        /*F*  NAME:    INITBFR
     1014    17722              PURPOSE: To get a chunck of system memory, apply a KZ$OTPBFR
     1015    17723                       header on it then attach the buffer to the device
     1016    17724                       context block based by BREG 1.
     1017    17725        */
     1018    17726        /*D*  NAME:    INITBFR
     1019    17727              CALL:    From DONE,CHK_BFR_SIZE AND CLEAR
     1020    17728              USES DATA STRUCTURES
     1021    17729                       KZ$HIPCTX
     1022    17730                       KZ$OTPBFR
     1023    17731              INPUT:   Address of device context block (B1)
     1024    17732                       A row/col position for the Set Buffer Address command
     1025    17733                       that is inserted at the beginning of the buffer.(R2)
     1026    17734              DESCRIPTION:
     1027    17735                       This routine will get an output buffer and initialize
     1028    17736                       it with header information and attache it to the
     1029    17737                       device context block.
     1030    17738        */
     1031    17739    1   INITBFR:PROC(POWER2) ALTRET;
     1032    17740
     1033    17741    2   DCL POWER2 SBIN;
     1034    17742    2   DCL NRESERVE SBIN;
     1035    17743
     1036    17744    2           IF ADDR(POWER2)~=ADDR(NIL) THEN
     1037    17745    2              SZX=POWER2;
     1038    17746    2           ELSE IF KZ$HIPDEV.PRINTER THEN
     1039    17747    2                 SZX=KZ$HIPDEV.OTPBFRSIZ;  /* MAX ALLOWED                        */
     1040    17748    2              ELSE SZX=KZH_INITBFR_SIZE;   /* DEFAULT FOR TUBES                  */
     1041    17749
     1042    17750    3           DO WHILE(SZX > 0);
     1043    17751    3              SZ=KZ_HIP_BFRSIZ(SZX);       /* Size of buffer in words            */
     1044    17752                   %DISABLE(INHLVL=KH_INHLVL);
     1045    17756    3              CALL KVB$GETSYS(SZ,TBFR$) ALTRET(NOBFR);
     1046    17757                   %ENABLE(INHLVL=KH_INHLVL);
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:49   
     1047    17763    3              KZ@HIPSTT.OTPBFRSIZ(SZX) = KZ@HIPSTT.OTPBFRSIZ(SZX)+1;
     1048    17764    3              KZ@HIPSTT.KHSTT.OTPBFRBYTUTL = KZ@HIPSTT.KHSTT.OTPBFRBYTUTL+SZ*2;
     1049    17765    3              GOTO GOTBFR;
     1050    17766    3   NOBFR:
     1051    17767                   %ENABLE(INHLVL=KH_INHLVL);
     1052    17773    3              SZX = SZX -1;
     1053    17774    3              END;
     1054    17775    2           ALTRETURN;
     1055    17776    2   GOTBFR:
     1056    17777    2           BFR$ = TBFR$;
     1057    17778    2   INITBUFHDR: ENTRY ALTRET;
     1058    17779        /*
     1059    17780              This entry supplied so that buffers may be created in other areas
     1060    17781              of the KZH module, and still be initialized with VDH and header
     1061    17782              info here. Called after PRINTER data has been transfered from
     1062    17783              one buffer to a new buffer.
     1063    17784
     1064    17785              INIT  BUFFER  HEADER WITH FLAGS AND POINTERS.
     1065    17786        */
     1066    17787    2           KZ$OTPBFR=KZ_OTPBFR;
     1067    17788    2           KZ$OTPBFR.BFRSIZ = SZX;
     1068    17789    2           KZ$OTPBFR.FLAGS.FIRST#='1'B;
     1069    17790    2           KZ$OTPBFR.FLAGS.LAST#='1'B;
     1070    17791    2           KZ$OTPBFR.DEV$=ADDR(KZ$HIPDEV);
     1071    17792
     1072    17793        /*       SET BYTX,BYTSIZ TO ACCOUNT FOR HIP HEADER,TRAILER */
     1073    17794
     1074    17795    2           BYTX=SIZEC(KZ$OTPBFR)+LENGTHC(KZ$HIPHEAD);
     1075    17796    2           BYTSIZ = (SZ*2)-(LENGTHC(KZ$HIPHEAD)+LENGTHC(KZ$HIPTAIL)+SIZEC(KZ$OTPBFR));
     1076    17797
     1077    17798    3           DO SELECT(KZ$HIPCTR.TYP);
     1078    17799    3              SELECT(7700);
     1079    17800    3              T$=ADDR(NIL);
     1080    17801    3              SELECT(7804,7814);
     1081    17802    3              NRESERVE=VIP7814.STRS.BEFORE_LEN(KZ$HIPDEV.ADR);
     1082    17803    3              IF (KZ$HIPDEV.ADR=0) AND (%KV_MVD.ORG~=%KV#VD_ORG_FORM) AND
     1083    17804    3                (KV$PTR.SRD$->KV$SRD.SCROLL) THEN
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:50   
     1084    17805    3                 NRESERVE=NRESERVE+RMS_7804.N;
     1085    17806    3              BYTX=BYTX+NRESERVE;
     1086    17807    3              BYTSIZ=BYTSIZ-VIP7814.STRS.BEFORE_LEN(KZ$HIPDEV.ADR)-VIP7814.STRS.
             17807                       AFTER_LEN(KZ$HIPDEV.ADR);
     1087    17808    3              SELECT(ELSE);
     1088    17809    3           T$=ADDR(NIL);
     1089    17810    3              END /*DO SELECT */;
     1090    17811    2           CALL FIT_BLKBYTES;
     1091    17812    2   END INITBFR;
     1092    17813
     1093    17814
     1094    17815    1   FIT_BLKBYTES:PROC;
     1095    17816    2   DCL CURBYTES SBIN;
     1096    17817    2   DCL MAXDATA SBIN;
     1097    17818
     1098    17819        /* A new buffer has just been acquired, or an old
     1099    17820           buffer has just been expanded. Make sure the active
     1100    17821           region of the buffer does not overflow the profile
     1101    17822           specified blocking buffer size.
     1102    17823        */
     1103    17824
     1104    17825    2           CURBYTES=BYTX-SIZEC(KZ$OTPBFR)-LENGTHC(KZ$HIPHEAD);
     1105    17826    2           MAXDATA=KZ$LINCTX.PRO.BLKBYTES;
     1106    17827
     1107    17828    2           IF (CURBYTES+BYTSIZ)>MAXDATA THEN
     1108    17829    2              BYTSIZ=MAXDATA-CURBYTES;
     1109    17830    2   END FIT_BLKBYTES;
     1110    17831        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:51   
     1111    17832
     1112    17833        /* CHK_BFR_SIZ - Make sure there is enough room in buffer */
     1113    17834
     1114    17835        /*F*  NAME:    CHK_BFR_SIZE
     1115    17836              PURPOSE: To look at the affect that the current call will have
     1116    17837                       on the current output buffer and decide if any buffer
     1117    17838                       size modifications are in order.
     1118    17839        */
     1119    17840        /*D*  NAME:    CHK_BFR_SIZE
     1120    17841              CALL:    From ATTR,ATTRIC,CLEAR
     1121    17842              USES DATA STRUCTURES
     1122    17843                       KZ$HIPCTX
     1123    17844                       KZ$OTPBFR
     1124    17845              INPUT:   Address of device context block (B1)
     1125    17846                       No. of bytes the buffer will grow (R2)
     1126    17847              DESCRIPTION:
     1127    17848                       A call to this routine will check the size that this
     1128    17849                       buffer will grow after current data is added, and
     1129    17850                       create a bigger buffer if needed. Then copy the
     1130    17851                       old buffer into the new before executing the current
     1131    17852                       command (TEXT,ATTRIBUTE,CURSOR, or CLEAR).
     1132    17853        */
     1133    17854    1   CHK_BFR_SIZ: PROC(SIZ) ALTRET;
     1134    17855        /**/
     1135    17856    2   DCL SIZ UBIN;
     1136    17857    2   DCL J UBIN;
     1137    17858    2   DCL ENTR_FLG UBIN;
     1138    17859    2   DCL CURCONTENTS CHAR(CURBYTES) BASED CALIGNED;
     1139    17860    2   DCL CURBYTES SBIN;
     1140    17861    2   DCL CURWORDS SBIN;
     1141    17862    2   DCL MARKCONTENTS CHAR(MARKBYTES) CALIGNED BASED;
     1142    17863    2   DCL MARKBYTES SBIN;
     1143    17864    2   DCL NEWBYTES SBIN;
     1144    17865    2   DCL NEWWORDS SBIN;
     1145    17866    2   DCL NEWPOWER2 SBIN;
     1146    17867    2   DCL PRODEVMAX SBIN;
     1147    17868
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:52   
     1148    17869    2           IF BYTSIZ >= SIZ THEN
     1149    17870    2              RETURN;
     1150    17871    2           NEWBYTES=SIZ;
     1151    17872    2           GOTO COMMON_EXPANSION;
     1152    17873
     1153    17874        /*  ENTRY TO DOUBLE SIZE OF EXISTING BUFFER */
     1154    17875    2   EXP_BFR:ENTRY(SIZ) ALTRET;
     1155    17876    2           IF BFR$~=ADDR(NIL) THEN
     1156    17877    2              NEWBYTES=KZ_HIP_BFRSIZ(KZ$OTPBFR.BFRSIZ)*2;
     1157    17878    2           ELSE NEWBYTES=KZ_HIP_BFRSIZ(KZH_INITBFR_SIZE);
     1158    17879
     1159    17880    2   COMMON_EXPANSION:;
     1160    17881    2           NEWWORDS=NEWBYTES/2;
     1161    17882
     1162    17883    2           IF BFR$~=ADDR(NIL) THEN
     1163    17884    3   TEST_EXPAND_CURRENT: DO;
     1164    17885    3              PRODEVMAX=KZ$LINCTX.PRO.BLKBYTES;
     1165    17886    4              DO SELECT(KZ$HIPCTR.TYP);
     1166    17887    4                 SELECT(7700);
     1167    17888    4                 PRODEVMAX=MINIMUM(1920,PRODEVMAX);
     1168    17889    4                 SELECT(7804);
             17889              /* CHANGE THIS WHEN SUPER IS CHANGED: 7814's allow 2048, 7804's allow  1024 */
     1169    17890    4                 PRODEVMAX=MINIMUM(2048,PRODEVMAX);
     1170    17891    4                 END;
     1171    17892
     1172    17893    3              CURWORDS=KZ_HIP_BFRSIZ(KZ$OTPBFR.BFRSIZ);
     1173    17894    3              CURBYTES=CURWORDS*2;
     1174    17895    3              IF CURBYTES+NEWBYTES<PRODEVMAX THEN
     1175    17896    4   EXPANDED_BUFFER_FITS:DO;
     1176    17897
     1177    17898        /*  TRY TO GET NEW BUFFER OF REQUIRED SIZE. IF CAN'T GET ONE,
     1178    17899            THEN FLUSH THE CURRENT BUFFER. */
     1179    17900
     1180    17901    4                 NEWPOWER2=KZH_INITBFR_SIZE;
     1181    17902    5                 DO WHILE (NEWPOWER2< KZ$HIPDEV.OTPBFRSIZ);
     1182    17903    5                    IF KZ_HIP_BFRSIZ(NEWPOWER2)>=CURWORDS+NEWWORDS THEN
     1183    17904    5                       EXIT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:53   
     1184    17905    5                    ELSE NEWPOWER2=NEWPOWER2+1;
     1185    17906    5                    END;
     1186    17907    4                 IF NEWPOWER2<=KZ$HIPDEV.OTPBFRSIZ THEN
     1187    17908    5   FOUND_RIGHT_SIZE:DO;
     1188    17909    5                    J=KZ_HIP_BFRSIZ(NEWPOWER2); /* BUFFER THAT FITS              */
     1189    17910                         %DISABLE(INHLVL=KH_INHLVL);
     1190    17914    5                    CALL KVB$GETSYS(J, TBFR$)
     1191    17915    5                    WHENALTRETURN
     1192    17916    6                    DO;
     1193    17917                            %ENABLE(INHLVL=KH_INHLVL);
     1194    17923    6                       GOTO NEW_BFR;
     1195    17924    6                       END;
     1196    17925                         %ENABLE(INHLVL=KH_INHLVL);
     1197    17931    5                    KZ@HIPSTT.KHSTT.OTPBFRBYTUTL = KZ@HIPSTT.KHSTT.OTPBFRBYTUTL+2*J-
             17931                             CURBYTES;
     1198    17932    5                    KZ@HIPSTT.OTPBFRSIZ(KZ$OTPBFR.BFRSIZ)=KZ@HIPSTT.OTPBFRSIZ(KZ$OTPBFR
             17932                             .BFRSIZ)-1;
     1199    17933    5                    KZ@HIPSTT.OTPBFRSIZ(NEWPOWER2)=KZ@HIPSTT.OTPBFRSIZ(NEWPOWER2)+1;
     1200    17934    5                    TBFR$->CURCONTENTS=BFR$->CURCONTENTS; /* Copy old to new     */
     1201    17935    6                    IF KZ$OTPBFR.MRKCNT~=0 THEN DO; /* Move output markers       */
     1202    17936    6                       MARKBYTES=KZ$OTPBFR.MRKCNT*SIZEW(KV$OTPMRK)*2;
     1203    17937    6                       PINCRW(TBFR$,KZ_HIP_BFRSIZ(NEWPOWER2)-(MARKBYTES/2))->
             17937                                MARKCONTENTS=
     1204    17938    6                         PINCRW(BFR$,KZ_HIP_BFRSIZ(KZ$OTPBFR.BFRSIZ)-(MARKBYTES/2))->
             17938                                  MARKCONTENTS;
     1205    17939    6                       END;
     1206    17940        /**/
     1207    17941                         %DISABLE(INHLVL=KH_INHLVL);
     1208    17945    5                    CALL KVB$RLSSYS(CURWORDS,BFR$);
     1209    17946                         %ENABLE(INHLVL=KH_INHLVL);
     1210    17952        /**/
     1211    17953    5                    BFR$=TBFR$;
     1212    17954    5                    BYTSIZ=BYTSIZ+KZ_HIP_BFRSIZ(NEWPOWER2)*2-CURBYTES;
     1213    17955    5                    KZ$OTPBFR.BFRSIZ=NEWPOWER2;
     1214    17956    5                    CALL FIT_BLKBYTES;
     1215    17957        /**/
     1216    17958    5                    RETURN;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:54   
     1217    17959    5                    END FOUND_RIGHT_SIZE;
     1218    17960    4                 END EXPANDED_BUFFER_FITS;
     1219    17961    3              END TEST_EXPAND_CURRENT;
     1220    17962        /**/
     1221    17963    2   NEW_BFR:
     1222    17964    2           CALL DONE(%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
     1223    17965    2           IF ADDR(SIZ)~=ADDR(NIL) THEN
     1224    17966    3   REQUIRED_MIN_SIZE:DO;
     1225    17967    3              NEWBYTES=SIZ*2+LENGTHC(KZ$OTPBFR)+
     1226    17968    3                LENGTHC(KZ$HIPHEAD)+LENGTHC(KZ$HIPTAIL)+2*LENGTHC(KV$OTPMRK);
     1227    17969    3              NEWWORDS=(NEWBYTES+1)/2;
     1228    17970    3              NEWPOWER2=KZH_INITBFR_SIZE;
     1229    17971    4              DO WHILE(NEWPOWER2<=KZ$HIPDEV.OTPBFRSIZ);
     1230    17972    4                 IF KZ_HIP_BFRSIZ(NEWPOWER2)>=NEWWORDS THEN
     1231    17973    4                    EXIT;
     1232    17974    4                 ELSE
     1233    17975    4                    NEWPOWER2=NEWPOWER2+1;
     1234    17976    4                 END;
     1235    17977    3              IF NEWPOWER2<=KZ$HIPDEV.OTPBFRSIZ THEN
     1236    17978    3                 CALL INITBFR(NEWPOWER2) ALTRET(NO_MEMORY);
     1237    17979    3              ELSE
     1238    17980    3                 CALL INITBFR ALTRET(NO_MEMORY);
     1239    17981    3              END REQUIRED_MIN_SIZE;
     1240    17982    2           ELSE
     1241    17983    2              CALL INITBFR;
     1242    17984
     1243    17985    2           IF ADDR(SIZ)~=ADDR(NIL) THEN
     1244    17986    2              IF BYTSIZ < SIZ THEN
     1245    17987    2                 IF BYTSIZ<SIZ THEN
     1246    17988    2                    ALTRETURN;
     1247    17989    2                 ELSE
     1248    17990    3                 DO;
     1249    17991    3                    BYTSIZ=SIZ;
     1250    17992    3                    END;
     1251    17993    2           RETURN;
     1252    17994
     1253    17995    2   NO_MEMORY:
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:55   
     1254    17996    2           ALTRETURN;
     1255    17997
     1256    17998        /**/
     1257    17999    2   END CHK_BFR_SIZ;
     1258    18000
     1259    18001        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:56   
     1260    18002
     1261    18003        /* SETBUFADR - Build SBA order */
     1262    18004
     1263    18005        /*F*  NAME:    SETBUFADR
     1264    18006              PURPOSE: To insert a SET BUFFER ADDRESS (SBA) command into the
     1265    18007                       device output stream.
     1266    18008        */
     1267    18009        /*D*  NAME:    SETBUFADR
     1268    18010              ENTRY:   SETBUFADR_NCHK
     1269    18011              CALL:    From ATTR,ATTRIC,IC
     1270    18012              USES DATA STRUCTURES
     1271    18013                       KZ$HIPCTX
     1272    18014                       KZ$OTPBFR
     1273    18015              DESCRIPTION:
     1274    18016                       This routine converts the ROW/COLUMN position specified
     1275    18017                       by R2/R3 into a HIP buffer address. Then inserts a set
     1276    18018                       buffer addr (SBA) command followed by the buffer addr.
     1277    18019                       SETBUFADR checks that there is room in the buffer
     1278    18020                       for all three bytes, SETBUFADR_NCHK does not.
     1279    18021        */
     1280    18022    1   SETBUFADR: PROC ALTRET;
     1281    18023
     1282    18024
     1283    18025    2           CALL CHK_BFR_SIZ(3) ALTRET(NO_MEMORY);
     1284    18026        /**/
     1285    18027                %MAC_SETBUFADR;
     1286    18030        /**/
     1287    18031    2           RETURN;
     1288    18032
     1289    18033    2   NO_MEMORY:
     1290    18034    2           ALTRETURN;
     1291    18035
     1292    18036    2   END SETBUFADR;
     1293    18037        /**/
     1294    18038        /**/
     1295    18039    1   SETBUFADR_NCHK: PROC;
     1296    18040        /**/
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:57   
     1297    18041              %MAC_SETBUFADR;
     1298    18044        /**/
     1299    18045    2           RETURN;
     1300    18046    2   END SETBUFADR_NCHK;
     1301    18047
     1302    18048        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:58   
     1303    18049
     1304    18050        /* ATTR - Build attribute char */
     1305    18051
     1306    18052        /*F*  NAME:    ATTR
     1307    18053              PURPOSE: To insert an attribute character (followed by the
     1308    18054                       cursor if ATTRIC is called) at the specified
     1309    18055                       row/column position.
     1310    18056        */
     1311    18057        /*D*  NAME:    ATTR
     1312    18058              CALL:    From KZH$HIP
     1313    18059              USES DATA STRUCTURES
     1314    18060                       KZ$HIPCTX
     1315    18061                       KZ$OTPBFR
     1316    18062              INPUT:   Address of device context block (B1)
     1317    18063                       The value of the attribute character (R4)
     1318    18064                       Device row and column (R2)
     1319    18065              DESCRIPTION:
     1320    18066                       Inserts an attribute (or start field (SF)) character
     1321    18067                       possibly followed by an insert cursor (ATTRIC)
     1322    18068                       at the position specified by row and column (R2)
     1323    18069        */
     1324    18070    1   ATTR:   PROC;
     1325    18071        /**/
     1326    18072
     1327    18073    2           CALL CHK_BFR_SIZ(5);
     1328    18074        /**/
     1329    18075    2           CALL SETBUFADR_NCHK;       /* Set buf adr w/out checking for size     */
     1330    18076        /**/
     1331    18077    2           CALL STORE_MRD(ROW,COL+1);
     1332    18078        /**/
     1333    18079    2           BFR$->BYT(BYTX)=BITBIN(%KZ#START_FIELD);
     1334    18080    2           BFR$->BYT(BYTX+1)=KZ_HIPXL(ATTR_CHR);
     1335    18081        /**/
     1336    18082    2           BYTX=BYTX+2;
     1337    18083    2           BYTSIZ=BYTSIZ-2;
     1338    18084        /**/
     1339    18085    2           RETURN;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:59   
     1340    18086
     1341    18087    2   END ATTR;
     1342    18088
     1343    18089        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:60   
     1344    18090
     1345    18091    1   STORE_MRD: PROC (R,C);
     1346    18092    2   DCL R SBIN;
     1347    18093    2   DCL C SBIN;
     1348    18094    2   DCL R_MRD SBIN;
     1349    18095    2   DCL C_MRD SBIN;
     1350    18096
     1351    18097    2           R_MRD=R; C_MRD=C;
     1352    18098    2           IF C_MRD>MAX_COL THEN
     1353    18099    3           DO;
     1354    18100    3              C_MRD=1;
     1355    18101    3              R_MRD=R_MRD+1;
     1356    18102    3              END;
     1357    18103    2           IF R_MRD>MAX_ROW THEN R_MRD=1;
     1358    18104    2           %KV_MRD.DVCLIN=R_MRD;
     1359    18105    2           %KV_MRD.DVCCLM=C_MRD;
     1360    18106    2           RETURN;
     1361    18107    2   END STORE_MRD;
     1362    18108        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:61   
     1363    18109        /* IC - Insert cursor */
     1364    18110
     1365    18111        /*F*  NAME:    IC
     1366    18112              PURPOSE: To insert a "INSERT CURSOR" command into the output
     1367    18113                       buffer.
     1368    18114        */
     1369    18115        /*D*  NAME:    IC
     1370    18116              CALL:    From KZH$HIP
     1371    18117              USES DATA STRUCTURES
     1372    18118                       KZ$HIPCTX
     1373    18119                       KZ$OTPBFR
     1374    18120              INPUT:   Cursor position as row/column.
     1375    18121        */
     1376    18122    1   IC:     PROC;
     1377    18123        /**/
     1378    18124
     1379    18125
     1380    18126    2   END IC;
     1381    18127
     1382    18128        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:62   
     1383    18129
     1384    18130        /* ERS - Erase an area on the screen */
     1385    18131        /*F*   NAME:    ERS
     1386    18132              PURPOSE: To clear a portion of the screen by using the set
     1387    18133                       buffer address command followed by Repeat address
     1388    18134                       with the null character.
     1389    18135        */
     1390    18136        /*D*   NAME:    ERS
     1391    18137              CALL:    From KZH$HIP
     1392    18138              USES DATA STRUCTURES
     1393    18139                       KZ$HIPCTX
     1394    18140                       KZ$OTPBFR
     1395    18141                       Address of start of clear  and
     1396    18142                       Address of end of clear.
     1397    18143        */
     1398    18144
     1399    18145    1   ERS:    PROC ALTRET;
     1400    18146        /**/
     1401    18147    2   DCL   FILLCHAR UBIN BYTE UNAL;          /* CHAR TO BE REPEATED FOR SPACING    */
     1402    18148        /**/
     1403    18149
     1404    18150    2           CALL CHK_BFR_SIZ(7) ALTRET(NO_MEMORY); /* Space for SBA,RA,null,null  */
     1405    18151        /**/
     1406    18152    2           CALL SETBUFADR_NCHK;       /* Set buf adr w/out checking for size     */
     1407    18153    2           FILLCHAR = BITBIN(%KZ#NULL);
     1408    18154        /**/
     1409    18155    2   ERS2:   ROW = ROW1; COL = COL1+1;       /* Add 1 because repeat order         */
     1410    18156                                                /* goes to addr-1                     */
     1411    18157        /**/
     1412    18158        /**/
     1413    18159    2           RETURN;
     1414    18160        /**/
     1415    18161    2   ERSCUR: ENTRY;                          /* Erase from current position        */
     1416    18162        /**/
     1417    18163    2           FILLCHAR = BITBIN(%KZ#NULL);
     1418    18164    2   ERSC:
     1419    18165    2           ROW1 = ROW;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:63   
     1420    18166    2           COL1 = COL;
     1421    18167    2           GOTO ERS2;
     1422    18168
     1423    18169
     1424    18170    2   ERSCUR_BLNKS: ENTRY;          /* Erase from current position using blanks     */
     1425    18171        /**/
     1426    18172    2           FILLCHAR = %KZ#EBDC_SPACE;
     1427    18173    2           GOTO ERSC;
     1428    18174
     1429    18175    2   NO_MEMORY:
     1430    18176    2           ALTRETURN;
     1431    18177
     1432    18178    2   END ERS;
     1433    18179        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:64   
     1434    18180
     1435    18181        /* ERSWNDW - Erase a window */
     1436    18182
     1437    18183        /*F*   NAME: ERSWNDW
     1438    18184              PURPOSE: To clear a window on the screen of the device. Co-
     1439    18185              ordinates given are the topleft and bottom right corners of
     1440    18186              of the window with an offset column number to start from on
     1441    18187              the top line of the window.
     1442    18188        */
     1443    18189        /*D*   NAME: ERSWNDW
     1444    18190              CALL: From VDH -> VDH-user REQUEST driver.
     1445    18191              USES DATA STRUCTURES:
     1446    18192                   KZ$HIPCTX
     1447    18193                   KV$USR_ERS
     1448    18194              INPUT: Top left and Btmright and top line offset describing
     1449    18195                     window coordinates.
     1450    18196
     1451    18197                 ECOL       ECOL2
     1452    18198                 |          |
     1453    18199         EROW___            ____________________________
     1454    18200                 ___________|                           |
     1455    18201                 |                                      |
     1456    18202                 |                                      |
     1457    18203                 |                                      |
     1458    18204                 |                                      |
     1459    18205                 |                        ______________|
     1460    18206                 |________________________|             _____EROW1
     1461    18207                                          |             |
     1462    18208                                          ECOL3         ECOL1
     1463    18209
     1464    18210        */
     1465    18211    1   ERSWNDW: PROC(EROW,ECOL,EROW1,ECOL1,ECOL2,ECOL3);
     1466    18212        /**/
     1467    18213    2   DCL EROW UBIN;
     1468    18214    2   DCL ECOL UBIN;
     1469    18215    2   DCL EROW1 UBIN;
     1470    18216    2   DCL ECOL1 UBIN;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:65   
     1471    18217    2   DCL ECOL2 UBIN;
     1472    18218    2   DCL ECOL3 UBIN;
     1473    18219    2   DCL I UBIN;
     1474    18220
     1475    18221
     1476    18222    2   END ERSWNDW;
     1477    18223
     1478    18224        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:66   
     1479    18225
     1480    18226        /* CLEAR - Clear the screen */
     1481    18227
     1482    18228    1   CLEAR:  PROC ALTRET;
     1483    18229
     1484    18230
     1485    18231    2   END CLEAR;
     1486    18232
     1487    18233        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:67   
     1488    18234
     1489    18235        /* CMPOTP - Call VDH to complete output, then send output */
     1490    18236
     1491    18237    1   CMP_OTP: PROC ALTRET;
     1492    18238
     1493    18239    2           IF BFR$=ADDR(NIL) THEN
     1494    18240    2              RETURN;
     1495    18241
     1496    18242    2           CALL SET_VAL;                   /* Stuff values - may get re-entered  */
     1497    18243                %KV$CMPOTP;
             18248    3           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;
             18249    3              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);
             18250    3              END;                         /* END IF                             */
     1498    18252    2           CALL GET_VAL;
     1499    18253    2           CALL DONE(%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
     1500    18254    2           KZ$HIPDEV.DONE='0'B;
     1501    18255    2           RETURN;
     1502    18256
     1503    18257    2   NO_MEMORY:
     1504    18258    2           ALTRETURN;
     1505    18259
     1506    18260    2   END CMP_OTP;
     1507    18261
     1508    18262        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:68   
     1509    18263
     1510    18264        /* ERRLOG - Build an ERRLOG FPT */
     1511    18265
     1512    18266    1   ERRLOG: PROC(ERROR);
     1513    18267    2   DCL ERROR UBIN;
     1514    18268
     1515    18269        %FPT_WRSYSLOG (STCLASS=);
     1516    18364        %FPT_WRSYSLOG (FPTN=FPT@WRSYSLOG,STCLASS=CONSTANT,FCG='KZ',MID='H');
     1517    18459
     1518    18460    2           FPT_WRSYSLOG=FPT@WRSYSLOG;
     1519    18461    2           FPT_WRSYSLOG.V.TERMID=KZ$HIPDEV.CTR$->KZ$HIPCTR.LIN$->KZ$LINCTX.LINID;
     1520    18462    2           FPT_WRSYSLOG.V.ERRCODE.ERR#=ERROR;
     1521    18463
     1522    18464    3           DO CASE (ERROR);
     1523    18465    3            CASE (%E$LGNREJ);
     1524    18466        /*E* ERROR:        KZH-E$LGNREJ-7
     1525    18467             MESSAGE:      HIP  device logon rejected.
     1526    18468             DESCRIPTION:  The host rejected a HIP  device logon.
     1527    18469                           V0 = Channel number.
     1528    18470                           V1/V2 = Controller/Device numbers.
     1529    18471                           V3 = Reason:
     1530    18472                                1 = No LDCTs available
     1531    18473                                    (a NETCON parameter)
     1532    18474                                2 = No route available
     1533    18475                                3 = Protocol error
     1534    18476                                4 = Unmatching generation value
     1535    18477                                5 = User rejected connection
     1536    18478                                    (NODEADMN may be out of MEMory).
     1537    18479        */
     1538    18480    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$HIPDEV.CTR$->KZ$HIPCTR.LIN$->KZ$LINCTX.CHAN;
     1539    18481    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$HIPDEV.CTR$->KZ$HIPCTR.ADR;
     1540    18482    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$HIPDEV.ADR;
     1541    18483    3              FPT_WRSYSLOG.V.VALUES(3)=KV$USR_EVT.PRM;
     1542    18484
     1543    18485    3            CASE (%E$DATOVRFLW);
     1544    18486        /*E* ERROR:        KZH-E$DATOVRFLW-7
     1545    18487             MESSAGE:      More overprint data than buffer will allow.
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:69   
     1546    18488             DESCRIPTION:  For printers, all data for a given line must be sent
     1547    18489                           in the same output block.  There is too much data in
     1548    18490                           this line to be sent in one output block.
     1549    18491                           V0 = Channel number.
     1550    18492                           V1/V2 = Controller/Device numbers.
     1551    18493                           V3 = Number of bytes needed to send in this block.
     1552    18494        */
     1553    18495    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$HIPDEV.CTR$->KZ$HIPCTR.LIN$->KZ$LINCTX.CHAN;
     1554    18496    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$HIPDEV.CTR$->KZ$HIPCTR.ADR;
     1555    18497    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$HIPDEV.ADR;
     1556    18498    3              FPT_WRSYSLOG.V.VALUES(3)=J;
     1557    18499
     1558    18500    3            CASE (%E$NO_MEMORY);
     1559    18501        /*E* ERROR:        KZH-E$NO_MEMORY-6
     1560    18502             MESSAGE:      Insufficient BISYNC MEMory (a NETCON parameter).
     1561    18503             DESCRIPTION:  A KVB call ALTRETed to indicate that BISYNC is out of
     1562    18504                           MEMory.  Since a necessary I/O buffer or device context
     1563    18505                           could not be allocated, the 3270 LINE associated
     1564    18506                           with the request has been disconnected.
     1565    18507                           V0 = Channel number.
     1566    18508                           V1/V2 = Controller/Device numbers.
     1567    18509                           V3 = Size of buffer, in words, which could not be allocated.
     1568    18510        */
     1569    18511    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$HIPDEV.CTR$->KZ$HIPCTR.LIN$->
     1570    18512    3                KZ$LINCTX.CHAN;
     1571    18513    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$HIPDEV.CTR$->KZ$HIPCTR.ADR;
     1572    18514    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$HIPDEV.ADR;
     1573    18515    3              FPT_WRSYSLOG.V.VALUES(3)=SZ;
     1574    18516    3            END;
     1575    18517    2           CALL KHA$ERRLOG(FPT_WRSYSLOG);
     1576    18518    2           RETURN;
     1577    18519    2   END ERRLOG;
     1578    18520        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:70   
     1579    18521        /* GET_VAL - Get various interesting values from KV$VDI that describe
     1580    18522           the current buffer */
     1581    18523
     1582    18524    1   GET_VAL: PROC;
     1583    18525
     1584    18526    2           BFR$=%KV_VDI.OTPBFR_.ADR$;
     1585    18527    2           BYTX=%KV_VDI.OTPBFR_.BYTX;
     1586    18528    2           BYTSIZ=%KV_VDI.OTPBFR_.BYTSIZ;
     1587    18529    2           MAX_ROW = %KV_MRD.LNG;
     1588    18530    2           MAX_COL = %KV_MRD.WDT;
     1589    18531    2           RETURN;
     1590    18532    2   END GET_VAL;
     1591    18533
     1592    18534
     1593    18535
     1594    18536        /* SET_VAL - Update the buffer info in KV$VDI */
     1595    18537
     1596    18538    1   SET_VAL: PROC;
     1597    18539
     1598    18540    2           %KV_VDI.OTPBFR_.ADR$=BFR$;
     1599    18541    2           %KV_VDI.OTPBFR_.BYTX=BYTX;
     1600    18542    2           %KV_VDI.OTPBFR_.BYTSIZ=BYTSIZ;
     1601    18543    2           RETURN;
     1602    18544    2   END SET_VAL;
     1603    18545
     1604    18546    1   SEND_HTEXTC:PROC(HTEXTC) ALTRET;
     1605    18547        /* BUFFERS CHARACTERS IN HTEXTC */
     1606    18548    2   DCL 1 HTEXTC,
     1607    18549    2         2 N SBIN,
     1608    18550    2         2 C CHAR(HTEXTC.N);
     1609    18551
     1610    18552    2           CALL CHK_BFR_SIZ(HTEXTC.N) ALTRET(NO_MEMORY);
     1611    18553
     1612    18554    2           CALL INSERT(BFR$->BYTS,BYTX,HTEXTC.N,HTEXTC.C);
     1613    18555    2           BYTX=BYTX+HTEXTC.N;
     1614    18556    2           BYTSIZ=BYTSIZ-HTEXTC.N;
     1615    18557
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:71   
     1616    18558    2           RETURN;
     1617    18559
     1618    18560    2   NO_MEMORY:
     1619    18561    2           ALTRETURN;
     1620    18562
     1621    18563    2   END SEND_HTEXTC;
     1622    18564    1   END KZH$HIP;

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:72   
--  Include file information  --

   KZ_HIPTAB_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KZ$BSCSTT.:E05TOU  is referenced.
   KZ$3270STT.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$USR.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KZ_PERR_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   KZ_HIP_C.:E05TOU  is referenced.
   KZ$OTPBFR.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KZ$HIPFLDS.:E05TOU  is referenced.
   KZ$HIPCTR.:E05TOU  is referenced.
   KZ$HIPDEV.:E05TOU  is referenced.
   KZ$HIPBRACKET.:E05TOU  is referenced.
   KZ_3270_C.:E05TOU  is referenced.
   KHC_MAC_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:73   
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure KZH$HIP.

   Procedure KZH$HIP requires 2896 words for executable code.
   Procedure KZH$HIP requires 91 words of local(AUTO) storage.

    No errors detected in file KZH$HIP.:E05TSI    .

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:74   

 Object Unit name= KZH$HIP                                    File name= KZH$HIP.:E05TOU
 UTS= JUL 30 '97 02:51:30.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS    150     96  KZH$HIP
    1   Data  even  none    15      F  KZH$HIP
    2   Proc  even  none  2896    B50  KZH$HIP
    3  RoData even  none     6      6  KZH$HIP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  KZH$HIP
     2    40C          yes     yes      Std        1  KZH$CLEAR
     2    429          yes     yes      Std        1  KZH$CLEARIMM
     2    456          yes     yes      Std        1  KZH$CMPOTP

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  KZH_BUFFER_THROTTLE                0     21  KZ_HIP_BFRSIZ
    0     7C  KZH_THRTL_INIT                     0     7D  KZH_THRTL_UNBLK
    0     7E  KZH_THRTL_BLK                      0     7F  KZH_ESCAPE_RESERVE
    0     80  KZH_INITBFR_SIZE
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:75   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KHI$DISABLE
         yes           Std       0 KHI$ENABLE
 yes     yes           Std       1 KZH$DSC_LINE
 yes     yes           Std       1 KZH$DFR
 yes     yes           Std       1 KZH$DSC_CONT
 yes     yes           Std       2 KVB$RLSSYS
 yes     yes           Std       1 KVV$VDI
 yes     yes           Std       1 KZH$DSC
 yes     yes           Std       1 KZH$RLSCTX
 yes     yes           Std       2 KZH$RELOTPBFR
 yes     yes           Std       1 KHC$CLOCK
 yes     yes           Std       2 KVB$GETSYS
 yes     yes           Std       2 KHA$ERRLOG
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT
                       nStd      0 X6C_ALR

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KH_INHLVL                             KV_VDH_EVT_RQSOTP
     KV_VDH_EVT_CMPOTP                     KZ_HIP_HDR                       r    G$ROS$
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:76   


        1        1        /*M*      NAME: KZH$HIP   HIP handler VDH/LINE MANAGER Interface           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* */
        8        8        /*P*      NAME:    KZH$HIP                                                  */
        9        9        /*P*      PURPOSE: KZH$HIP  is a package of subroutines which con-          */
       10       10        /*P*               stitutes the VDH and Line manager interface for the       */
       11       11        /*P*               HIP devices. The handler uses this module to accept      */
       12       12        /*P*               events from VDH and provide the nessarry commands         */
       13       13        /*P*               to the HIP devices.                                      */
       14       14        /*P*                                                                         */
       15       15        /*                                                                           */
       16       16        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:77   
       17       17        KZH$HIP: PROC(PARM) ALTRET;

     17   2 000000  D380 0000 0000  xent KZH$HIP         LNJ,B5   X6A_AUTO_1
          2 000003       005B 0001                       DC       91,1

       18       18
       19       19
       20       20        /**/
       21       21        /* Include Files */
       22       22        /**/
       23       23        %INCLUDE CP_6_SUBS;
       24      563        %INCLUDE LCP_6;
       25     4842        %INCLUDE KH$CHN;
       26     4964        %INCLUDE KH$CLK;
       27     5334        %INCLUDE KH_CLKFNC_E;
       28     5379        %INCLUDE KL_MACRO_C;
       29     8731        %INCLUDE KHC_MAC_C;
       30     8772        %INCLUDE KZ_3270_C;
       31     8930        %INCLUDE KZ$HIPBRACKET;
       32     8992        %INCLUDE KZ$HIPDEV;
       33     9259        %INCLUDE KZ$HIPCTR;
       34     9345        %INCLUDE KZ$HIPFLDS;
       35     9412        %INCLUDE KZ$LINCTX;
       36    10032        %INCLUDE KZ$OTPBFR;
       37    10133        %INCLUDE KZ_HIP_C;
       38    10240        %INCLUDE KZ_CLM_E;
       39    10412        %INCLUDE KZ_PERR_C;
       40    10494        %INCLUDE KV$VDH;
       41    10925        %INCLUDE KV$USR;
       42    11237        %INCLUDE KV$GLB;
       43    11656        %INCLUDE KV$GLBCTX;
       44    12101        %INCLUDE KV_GLBCNS_E;
       45    12442        %INCLUDE KV_PRMID_E;
       46    12616        %INCLUDE KV_GLB_M;
       47    12738        %INCLUDE KZ$3270STT;
       48    12802        %INCLUDE KZ$BSCSTT;
       49    12908        %INCLUDE KH$STT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:78   
       50    12938        %INCLUDE KZ_HIPTAB_C;
       51    13180        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:79   
       52    13181        /*  EQUS  */
       53    13182        /**/
       54    13183        %KV_USR_FNC_E;
       55    13199        %KV_INPOPRX_E;
       56    13211        %KV_USR_EVT_ID_E;
       57    13231        %KV_PRMID_E;
       58    13387        %KV_CMPCOD_E;
       59    13401        %KV_STRTYP_E;
       60    13439        %KV_PHSPSTMOD_E;
       61    13446        %KV_ABSGRPRND_E;
       62    13455        %KV#VD_ORG_E;
       63    13463        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:80   
       64    13464
       65    13465
       66    13466        /**/
       67    13467        /* Parameters */
       68    13468        /**/
       69    13469    1   DCL PARM UBIN;
       70    13470         %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:81   
       71    13471
       72    13472        /**/
       73    13473        /* Auto */
       74    13474        /**/
       75    13475    1   DCL PARM$ PTR;                          /* Address of first parameter         */
       76    13476    1   DCL DEV$ PTR;                           /* Device context addr                */
       77    13477    1   DCL CTR$ PTR  /* Pointer to controller context */;
       78    13478    1   DCL LIN$ PTR  /* Pointer to line context */;
       79    13479    1   DCL BFR$ PTR;                 /* Current KZ$OTPBFR, from GV$VDI.OTPBFR_.ADR$  */
       80    13480    1   DCL TBFR$ PTR;
       81    13481    1   DCL T$ PTR;
       82    13482    1   DCL INTLVL UBIN;
       83    13483    1   DCL ROW                            SBIN;/**/
       84    13484    1   DCL COL                            SBIN;/**/
       85    13485    1   DCL ROW1                           SBIN;/**/
       86    13486    1   DCL COL1                           SBIN;/**/
       87    13487    1   DCL COL2                           SBIN;/**/
       88    13488    1   DCL CUR_ROW                        SBIN;/**/
       89    13489    1   DCL CUR_COL                        SBIN;/**/
       90    13490    1   DCL MAX_ROW SBIN;                       /* GV$MRD$->GV$MRD.LNG set in GET_VAL */
       91    13491    1   DCL MAX_COL SBIN;                       /* GV$MRD$->GV$MRD.WDT set in GET_VAL */
       92    13492    1   DCL SZ SBIN;                            /* GET BUFFER SIZE STORAGE            */
       93    13493    1   DCL SZX SBIN;                           /* SIZE ARRARY INDEX                  */
       94    13494    1   DCL NL SBIN;                            /* NEW LINES FOR PRINTER              */
       95    13495    1   DCL K SBIN;
       96    13496    1   DCL LSTBYT UBIN;
       97    13497    1   DCL I                              SBIN;/**/
       98    13498    1   DCL J                              SBIN;/**/
       99    13499    1   DCL BYTX UBIN;                          /* GV$VDI.OTPBFR_.BYTX                */
      100    13500
      101    13501        /*       THROTTLE PARAMETER:
      102    13502                      This parameter deFines the number of BUFFERS that
      103    13503                      may be queued up by a device for output before
      104    13504                      blocking occurs.
      105    13505
      106    13506                      At present, unblocking happens whenever the
      107    13507                      buffer count goes below this threshold.
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:82   
      108    13508        */
      109    13509
      110    13510    1   DCL KZH_BUFFER_THROTTLE UBIN CONSTANT SYMDEF INIT(2);
      111    13511
      112    13512    1   DCL BYTSIZ UBIN;                        /* GV$VDI.OTPBFR_.BYTSIZ              */
      113    13513    1   DCL 1 ATTR_CHAR,
      114    13514    1         2 * BIT(2),
      115    13515    1         2 PROTECT BIT(1),
      116    13516    1         2 NUMERIC BIT(1),
      117    13517    1         2 INTENSITY UBIN(2) UNAL,
      118    13518    1         2 * BIT(1),
      119    13519    1         2 MDT BIT(1);
      120    13520    1   DCL ATTR_CHR REDEF ATTR_CHAR UBIN BYTE CALIGNED;
      121    13521        %KV$GRPRND (STCLASS=);
      122    13548        %KV$VDH_DCLLCLPST (STCLASS=);
      123    13617        %KH$CLK (STCLASS=);
      124    13766        %INHIBIT_DCLS;
      125    13778        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:83   
      126    13779        /**/
      127    13780        /* Based Structures */
      128    13781        /**/
      129    13782        %KZ$HIPHEAD;                            /* FROM KZ$HIPBRACKET                 */
      130    13811        %KZ$HIPTAIL;                            /* FROM KZ$HIPBRACKET                 */
      131    13836        %KZ$LINCTX(STCLASS="BASED(LIN$)");
      132    14267        %KZ$HIPCTR(STCLASS="BASED(CTR$)");
      133    14304        %KZ$HIPDEV (STCLASS="BASED(DEV$)");
      134    14485        %KZ$HIPWCC (STCLASS="BASED(BFR$)",ARY="(0:0)",NAME=WCC);
      135    14511        %KZ$OTPBFR (STCLASS="BASED(BFR$)");
      136    14576        %EQU Y#ID=0;
      137    14577        %KV$PTR;
      138    14620        %KV$MVD;
      139    14664        %KV$SRD;
      140    14939        %KV$VDI;
      141    15010        %EQU ASC=0;
      142    15011        %KV$MRD;
      143    15058        %KV$USR_OTPMRK (STCLASS="BASED(PARM$)");
      144    15120        %KV$USR_DAT (STCLASS="BASED(PARM$)");
      145    15204        %KV$USR_ERS (STCLASS="BASED(PARM$)");
      146    15308        %KV$USR_EVT (STCLASS="BASED(PARM$)");
      147    15343        %KV$USR_INPPRC (STCLASS="BASED(PARM$)");
      148    15379        %KV$USR_SETPRM (STCLASS="BASED(PARM$)");
      149    15441        %KV$USR_GETPRM (STCLASS="BASED(PARM$)");
      150    15502        %KV$USR_GETOTPBFR (STCLASS="BASED(PARM$)");
      151    15537        %KV$USR_EXTINPTRN (STCLASS="BASED(PARM$)");
      152    15573        %KV$USR_EXTOTPTRN (STCLASS="BASED(PARM$)");
      153    15609        %KV$USR_PST (STCLASS="BASED(PARM$)");
      154    15679        %KV$USR_SETATR (STCLASS="BASED(PARM$)");
      155    15802        %KV$OTPMRK (STCLASS=BASED);
      156    15829        %KH$CHN;
      157    15953
      158    15954
      159    15955    1   DCL BYTS CHAR(I) BASED CALIGNED;
      160    15956    1   DCL BYT(0:1023) UBIN BYTE BASED CALIGNED;
      161    15957    1   DCL CHR1 CHAR(1) BASED CALIGNED;
      162    15958    1   DCL BITS(0:0) BIT(8) BASED CALIGNED;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:84   
      163    15959    1   DCL 1 KZ$PRM_HIP BASED CALIGNED,        /* HIP profile parameter              */
      164    15960    1         2 * BIT(4),
      165    15961    1         2 EWALT BIT(2),
      166    15962    1         2 SIOPT BIT(2);
      167    15963         %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:85   
      168    15964
      169    15965        /* STATIC */
      170    15966        %KV$VDH_RLSBFR(STCLASS=STATIC);
      171    16002
      172    16003        /**/
      173    16004        /* External Routines */
      174    16005        /**/
      175    16006    1   DCL   KVV$VDI  ENTRY(1) ALTRET;
      176    16007    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
      177    16008    1   DCL KZH$DFR ENTRY(1) ALTRET;
      178    16009    1   DCL KZH$DSC ENTRY(1) ALTRET;
      179    16010    1   DCL KZH$DSC_CONT ENTRY(1) ALTRET;
      180    16011    1   DCL KZH$RELOTPBFR ENTRY(2) ALTRET;
      181    16012    1   DCL KZH$RLSCTX ENTRY(1) ALTRET;
      182    16013    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      183    16014    1   DCL KHA$ERRLOG ENTRY(2) ALTRET;
      184    16015    1   DCL KZH$DSC_LINE ENTRY(1) ALTRET;
      185    16016    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
      186    16017        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:86   
      187    16018        /**/
      188    16019        /* Constant */
      189    16020        /**/
      190    16021    1   DCL KZ_HIPXLB(0:63) BIT(8) CONSTANT INIT(
      191    16022    1       '40'X,'C1'X,'C2'X,'C3'X,'C4'X,'C5'X,'C6'X,'C7'X,
      192    16023    1       'C8'X,'C9'X,'4A'X,'4B'X,'4C'X,'4D'X,'4E'X,'4F'X,
      193    16024    1       '50'X,'D1'X,'D2'X,'D3'X,'D4'X,'D5'X,'D6'X,'D7'X,
      194    16025    1       'D8'X,'D9'X,'5A'X,'5B'X,'5C'X,'5D'X,'5E'X,'5F'X,
      195    16026    1       '60'X,'61'X,'E2'X,'E3'X,'E4'X,'E5'X,'E6'X,'E7'X,
      196    16027    1       'E8'X,'E9'X,'6A'X,'6B'X,'6C'X,'6D'X,'6E'X,'6F'X,
      197    16028    1       'F0'X,'F1'X,'F2'X,'F3'X,'F4'X,'F5'X,'F6'X,'F7'X,
      198    16029    1       'F8'X,'F9'X,'7A'X,'7B'X,'7C'X,'7D'X,'7E'X,'7F'X);
      199    16030    1   DCL KZ_HIPXL(0:63) REDEF KZ_HIPXLB UBIN BYTE CALIGNED;
      200    16031        /**/
      201    16032    1   DCL KZ_HIP_BFRSIZ(0:8) UBIN CONSTANT SYMDEF INIT(
      202    16033    1       0,16,32,64,128,256,512,1024,2048);
      203    16034        %EQU KZ#MAXBFR=8;
      204    16035        %EQU  ERRLOG_OVRPNT = 1;
      205    16036        %EQU  ERRLOG_LNGRJC = 2;
      206    16037        %EQU QUEUE_ON_HEAD='0'B;
      207    16038        %EQU QUEUE_ON_TAIL='1'B;
      208    16039
      209    16040        /* CHARACTER STRINKZ FOR 7814 SPECIFIC STUFF */
      210    16041        %EQU ESC_CHAR=BITASC('1B'X);
      211    16042    1   DCL 1 VIP7814 CONSTANT,
      212    16043    1         2 STRI,
      213    16044    1           3 THEADLEN SBIN INIT(3),
      214    16045    1           3 *(0:15) CHAR(1) INIT(
      215    16046    1       %ESC_CHAR,'[','l',                  /* TM (go into next mode)             */
      216    16047    1       ' '*0),
      217    16048    1           3 TTAILLEN SBIN INIT(3),
      218    16049    1           3 *(0:15) CHAR(1) INIT(
      219    16050    1       %ESC_CHAR,'[','h',                  /* FM (go into form mode)             */
      220    16051    1       ' '*0),
      221    16052    1           3 PHEADLEN SBIN INIT(8),
      222    16053    1           3 *(0:15) CHAR(1) INIT(
      223    16054    1                     %ESC_CHAR,'[','9','p',/* PDENQ (print delayed enq)          */
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:87   
      224    16055    1                     %ESC_CHAR,'[','4','p',/* PTD   (print transparent data)     */
      225    16056    1        ' '*0),
      226    16057    1           3 PTAILLEN SBIN INIT(4),
      227    16058    1           3 *(0:15) CHAR(1) INIT(
      228    16059    1        %ESC_CHAR,'[','<','p',             /* PDT  (print data terminator)       */
      229    16060    1        ' '*0),
      230    16061    1         2 STRS(0:1) REDEF STRI,
             16061                  /* CHARACTER STRINGS BEFORE AND AFTER, INDEXED BY ADDRESS */
      231    16062    1           3 BEFORE_LEN SBIN,
      232    16063    1           3 BEFORE_TEXT CHAR(16),
      233    16064    1           3 AFTER_LEN SBIN,
      234    16065    1           3 AFTER_TEXT CHAR(16);
      235    16066
      236    16067        /* character strings to be sent before logon, after logon */
      237    16068    1   DCL 1  SSS_7804 CONSTANT,
      238    16069    1         2 N SBIN INIT(3),
      239    16070    1         2 CA(0:15) CHAR(1) INIT
      240    16071    1    ( %ESC_CHAR, '[','e',                  /* SSS, space suppress set            */
      241    16072    1      ' '*0),
      242    16073    1         2 C REDEF CA CHAR(16);
      243    16074    1   DCL 1 SSR_7804 CONSTANT,
      244    16075    1         2 N SBIN INIT(3),
      245    16076    1         2 CA(0:15) CHAR(1) INIT
      246    16077    1    ( %ESC_CHAR, '[','d',                  /* SSR, space suppress reset          */
      247    16078    1      ' '*0),
      248    16079    1         2 C REDEF CA CHAR(16);
      249    16080
      250    16081    1   DCL 1  RMS_7804 CONSTANT,
      251    16082    1         2 N SBIN INIT(3),
      252    16083    1         2 CA(0:15) CHAR(1) INIT
      253    16084    1    (%ESC_CHAR,'r',                        /* RMS, roll mode set                 */
      254    16085    1      ' '*0),
      255    16086    1         2 C REDEF CA CHAR(16);
      256    16087
      257    16088        /* TAB TABLE FOR 7804/7814 INPUT */
      258    16089    1   DCL 1 TABTABLE_7804 STATIC,
      259    16090    1         2 LNK$ PTR INIT(ADDR(NIL)),
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:88   
      260    16091    1         2 BYTSIZ SBIN INIT(8),
      261    16092    1         2 USRCNT UBIN INIT(32767),
      262    16093    1         2 TXT(0:7) UBIN BYTE UNAL INIT(0,81,161,241,000*000);
      263    16094        /**/
      264    16095        %KZ$OTPBFR (NAME=KZ_OTPBFR,STCLASS=CONSTANT);
      265    16160        %KH$CLK (FPTN=KH_CLK_RESET, FNC=%KH#CLK_RESET, STCLASS=CONSTANT);
      266    16309        /* Throttling values */
      267    16310    1   DCL KZH_THRTL_INIT UBIN CONSTANT SYMDEF INIT(1000);
      268    16311    1   DCL KZH_THRTL_UNBLK UBIN CONSTANT SYMDEF INIT(300);
      269    16312    1   DCL KZH_THRTL_BLK  UBIN CONSTANT SYMDEF INIT(1000);
      270    16313
      271    16314
      272    16315        /* Number of bytes to reserve for escape sequences within
      273    16316           a block.
      274    16317        */
      275    16318    1   DCL KZH_ESCAPE_RESERVE SBIN CONSTANT SYMDEF INIT(80);
      276    16319
      277    16320        /* Buffer size power of 2. Must be big enough
      278    16321           to hold KZH_ESCAPE_RESERVE bytes.
      279    16322        */
      280    16323    1   DCL KZH_INITBFR_SIZE SBIN CONSTANT SYMDEF INIT(4);
      281    16324        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:89   
      282    16325        /**/
      283    16326        /* External Data */
      284    16327        /**/
      285    16328        %KV$VDH_DCLLCLPST (NAME=KV@VDH_DCLLCLPST,STCLASS=SYMREF);
      286    16397    1   DCL KH_INHLVL UBIN SYMREF;
      287    16398        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP, STCLASS=SYMREF);
      288    16433        %KV$VDH_EVT (NAME=KV_VDH_EVT_CMPOTP, STCLASS=SYMREF);
      289    16468        %KZ_HIP_HDR (STCLASS=SYMREF);
      290    16492        %KZ$3270STT (STCLASS="BASED(KZ_HIP_HDR.STTBFR$)", NAME=KZ@HIPSTT);
      291    16924        %EJECT
      292    16925
      293    16926
      294    16927
      295    16928        /**/
      296    16929        /* Macros */
      297    16930        /**/
      298    16931        %MACRO MAC_SETBUFADR;
      299    16932                                 /*KV$VDH_RLSBFR.SHRBFRHEDPTR$=KV$VDH_RLSBFR.BFR$;*/
      300    16933           %MEND;
      301    16934        %MACRO MAC_GETBFR;
      302    16935                IF KZ$HIPDEV.PRINTER THEN
      303    16936                   SZX=KZ$HIPDEV.OTPBFRSIZ;     /* Start with largest size            */
      304    16937                ELSE
      305    16938                   SZX=KZH_INITBFR_SIZE;        /* Start with a small buffer          */
      306    16939        /**/
      307    16940                DO WHILE(SZX > 0);
      308    16941                   SZ=KZ_HIP_BFRSIZ(SZX);       /* Size of buffer in words            */
      309    16942                   %DISABLE(INHLVL=KH_INHLVL);
      310    16943                   CALL KVB$GETSYS(SZ,TBFR$) ALTRET(NOBFR);
      311    16944                   %ENABLE(INHLVL=KH_INHLVL);
      312    16945                   KZ@HIPSTT.OTPBFRSIZ(SZX) = KZ@HIPSTT.OTPBFRSIZ(SZX)+1;
      313    16946                   KZ@HIPSTT.KHSTT.OTPBFRBYTUTL = KZ@HIPSTT.KHSTT.OTPBFRBYTUTL+SZ*2;
      314    16947                   GOTO GOTBFR;
      315    16948        NOBFR:
      316    16949                   %ENABLE(INHLVL=KH_INHLVL);
      317    16950                   SZX = SZX -1;
      318    16951                   END;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:90   
      319    16952                ALTRETURN;
      320    16953        /**/
      321    16954        GOTBFR:
      322    16955        %MEND;
      323    16956
      324    16957        /**/
      325    16958        /* EQUs */
      326    16959        /**/
      327    16960        %EQU KZ#ATTR_CHR_PRT='20'X;
      328    16961
      329    16962
      330    16963        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:91   
      331    16964        /**/
      332    16965        /* Warning - the following AUTO cells are assumed to always contain
      333    16966           the indicated values while in this module:
      334    16967
      335    16968           DEV$        Device context
      336    16969           CTR$        Controller context
      337    16970           LIN$        Line context
      338    16971           BFR$        GV$VDI.OTPBFR_.ADR$
      339    16972           BYTX        GV$VDI.OTPBFR_.BYTX
      340    16973           BYTSIZ      GV$VDI.OTPBFR_.BYTSIZ
      341    16974
      342    16975        Note that BFR$, BYTX and BYTSIZ are loaded upon entry (GET_VAL)
      343    16976        and stored back in GV$VDI upon exit (SET_VAL).  GV$VDI.OTPBFR_
      344    16977        should not be looked at or modified except in those two routines,
      345    16978        and in DONE.
      346    16979        */
      347    16980
      348    16981
      349    16982    1           PARM$=ADDR(PARM);

  16982   2 000005  ECC7 0004                            LDB,B6   @PARM,AUTO
          2 000007  EFC7 0006                            STB,B6   PARM$,AUTO

      350    16983    1           DEV$=%KV_VDI.USRCTX$;

  16983   2 000009  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00000C  CC85                                 LDB,B4   ,B5
          2 00000D  BCC4 0002                            LDB,B3   2,B4
          2 00000F  BFC7 0008                            STB,B3   DEV$,AUTO

      351    16984    1           CTR$=KZ$HIPDEV.CTR$;

  16984   2 000011  ACC3 0002                            LDB,B2   2,B3
          2 000013  AFC7 000A                            STB,B2   CTR$,AUTO

      352    16985    1           LIN$=KZ$HIPCTR.LIN$;

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:92   
  16985   2 000015  9CC2 0004                            LDB,B1   4,B2
          2 000017  9FC7 000C                            STB,B1   LIN$,AUTO

      353    16986    1           KZ$HIPDEV.DONE='0'B;

  16986   2 000019  8843 0012                            LBF,'0200'X       18,B3
  16986   2 00001B       0200

      354    16987    1           IF KV$USR_DAT.FNC=%KV_USR_FNC_EVT THEN

  16987   2 00001C  E286                                 LLH,R6   ,B6
          2 00001D  6D04                                 CMV,R6   4
          2 00001E  0981 000C                            BNE      s:16990,PREL

      355    16988    1              IF KV$USR_EVT.ID =%KV_USR_EVT_ID_RLSSTR THEN

  16988   2 000020  D806                                 LDR,R5   ,B6
          2 000021  D570 007F                            AND,R5   127,IMO
          2 000023  5D0B                                 CMV,R5   11
          2 000024  0981 0006                            BNE      s:16990,PREL

      356    16989    1                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN GOTO SKIP_GET;

  16989   2 000026  C846 0001                            LDR,R4   1,B6
          2 000028  4D1D                                 CMV,R4   29
          2 000029  0901 0004                            BE       s:16987,PREL

      357    16990    1           CALL GET_VAL;

  16990   2 00002B  E3C0 0AC6                            LNJ,B6   s:0,PREL
          2 00002D       0001                            DC       s:16987,PREL

  16987   2                              SKIP_GET        null
      358    16991    1   SKIP_GET: ;
      359    16992
      360    16993        /**/
      361    16994    2           DO CASE(KV$USR_DAT.FNC);
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:93   

  16994   2 00002E  ECC7 0006            SKIP_GET        LDB,B6   PARM$,AUTO
          2 000030  B286                                 LLH,R3   ,B6
          2 000031  3D0B                                 CMV,R3   11
          2 000032  0281 038D                            BGE      s:17460,PREL
          2 000034  A830 0000 003A  02                   LDR,R2   SKIP_GET+12,R3
          2 000037  83A0 0000 0045  02                   JMP      s:17014,R2
          2 00003A       037B                            DC       s:17460,PREL
          2 00003B       00A3                            DC       s:17123,PREL
          2 00003C       037B                            DC       s:17460,PREL
          2 00003D       037B                            DC       s:17460,PREL
          2 00003E       00EC                            DC       s:17202,PREL
          2 00003F       00D1                            DC       s:17176,PREL
          2 000040       037B                            DC       s:17460,PREL
          2 000041       0000                            DC       s:17014,PREL
          2 000042       0015                            DC       s:17041,PREL
          2 000043       037B                            DC       s:17460,PREL
          2 000044       002A                            DC       s:17076,PREL

      362    16995        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:94   
      363    16996
      364    16997
      365    16998        /**/
      366    16999        /* Get output buffer -
      367    17000           VDH needs more room to insert data into our output buffers.
      368    17001           We will either expand our current buffer or start a new
      369    17002           buffer and send the current buffer  to the line manager.
      370    17003        */
      371    17004        /**/
      372    17005    2            CASE(%KV_USR_FNC_GETOTPBFR);

      373    17006
      374    17007        /* I cannot split escape sequences across buffer bounds.
      375    17008            I therefore must make sure that 'KZH_ESCAPE_RESERVE' bytes
      376    17009            are left in the output buffer.
      377    17010
      378    17011            Whenever the 'INHIBIT DELETE OUTPUT' event is given to
      379    17012            by VDH, the same test is performed.
      380    17013        */
      381    17014    2              CALL CHK_BFR_SIZ(MAXIMUM(KZH_ESCAPE_RESERVE,KV$USR_GETOTPBFR.ESTBYTSIZ))
             17014                       ALTRET(NO_MEMORY);

  17014   2 000045  E846 0001                            LDR,R6   1,B6
          2 000047  E900 0000 007F  00                   CMR,R6   KZH_ESCAPE_RESERVE
          2 00004A  0881 0004                            BAGE     s:17014+10,PREL
          2 00004C  E800 0000 007F  00                   LDR,R6   KZH_ESCAPE_RESERVE
          2 00004F  EF47 0058                            STR,R6   MAXDATA+7,AUTO
          2 000051  DBC7 0058                            LAB,B5   MAXDATA+7,AUTO
          2 000053  DFC7 003C                            STB,B5   DISABLE_LEVEL+3,AUTO
          2 000055  E3C0 0700                            LNJ,B6   s:0,PREL
          2 000057       0375                            DC       s:17469,PREL
          2 000058  0F81 0367                            B        s:17460,PREL

      382    17015
      383    17016
      384    17017        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:95   
      385    17018
      386    17019
      387    17020        /**/
      388    17021        /* Erase */
      389    17022        /*
      390    17023           Erase a window on the screen - we are given the top left and
      391    17024           bottom right positions (corners) of the area to be cleared and
      392    17025           a top line offset in case the entire first line is not erased.
      393    17026        */
      394    17027        /**/
      395    17028    2            CASE(%KV_USR_FNC_ERS);

      396    17029
      397    17030
      398    17031        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:96   
      399    17032
      400    17033        /**/
      401    17034        /* Getprm */
      402    17035        /*
      403    17036          Get parameters
      404    17037        */
      405    17038        /**/
      406    17039    2            CASE(%KV_USR_FNC_GETPRM);

      407    17040
      408    17041    2              IF KV$USR_GETPRM.PRMID = %KV_PRMID_CRTLINSPD THEN

  17041   2 00005A  E846 0001                            LDR,R6   1,B6
          2 00005C  6D60                                 CMV,R6   96
          2 00005D  0981 0362                            BNE      s:17460,PREL

      409    17042    2                 KV$USR_GETPRM.VAL = KZ$HIPDEV.CTR$ -> KZ$HIPCTR.LIN$ ->

  17042   2 00005F  DCC7 0008                            LDB,B5   DEV$,AUTO
          2 000061  CCC5 0002                            LDB,B4   2,B5
          2 000063  BCC4 0004                            LDB,B3   4,B4
          2 000065  ACC3 0002                            LDB,B2   2,B3
          2 000067  D842 0008                            LDR,R5   8,B2
          2 000069  D570 000F                            AND,R5   15,IMO
          2 00006B  DF46 0002                            STR,R5   2,B6
          2 00006D  0F81 0352                            B        s:17460,PREL

      410    17043    2                   KZ$LINCTX.CHN$ -> KH$CHN.LINSPD;
      411    17044        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:97   
      412    17045
      413    17046        /*
      414    17047        SETPRM - MASTER REAL DEVICE LENGTH AND WIDTH
      415    17048           We will get preprocessing on VDH set params and if the parameters
      416    17049           being set are the device width or length, we may want to override
      417    17050           VDH. This will be done when the virtual device interface pointer
      418    17051           is nill.
      419    17052        */
      420    17053        /**/
      421    17054    2            CASE(%KV_USR_FNC_SETPRM);

      422    17055
      423    17056
      424    17057        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:98   
      425    17058
      426    17059
      427    17060        /**/
      428    17061        /* Output marker */
      429    17062        /*
      430    17063              Output Marker Request - copy control data from VDH and hang on
      431    17064              to the control data until the line manager says the real data
      432    17065              has been recieved by the device, at which time KV$VDH_OTPMRK
      433    17066              will be called to notify the other end point of completion.
      434    17067
      435    17068              Calculate word size of the buffer needed to hold the control
      436    17069              data and add number of words needed to create the KZ$OTPMRK
      437    17070              structure.
      438    17071
      439    17072        */
      440    17073    2            CASE(%KV_USR_FNC_OTPMRK);

      441    17074
      442    17075
      443    17076    2              IF BFR$=ADDR(NIL) THEN

  17076   2 00006F  8DC7 000E                            CMN      BFR$,AUTO
          2 000071  0981 0009                            BNE      s:17079,PREL

      444    17077    2                 CALL EXP_BFR ALTRET(NO_MEMORY); /* Must have output buffer      */

  17077   2 000073  DB80 0000 0000                       LAB,B5   0
          2 000076  DFC7 003C                            STB,B5   DISABLE_LEVEL+3,AUTO
          2 000078  E3C0 06EF                            LNJ,B6   s:0,PREL
          2 00007A       0352                            DC       s:17469,PREL

      445    17078        /**/
      446    17079    3              IF NOT KV$USR_OTPMRK.DAT.MSTRTR AND KZ$OTPBFR.MRKCNT~=0 THEN DO;

  17079   2 00007B  ECC7 0006                            LDB,B6   PARM$,AUTO
          2 00007D  89C6 0001                            CMZ      1,B6
          2 00007F  0801 0023                            BAL      s:17087,PREL
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:99   
          2 000081  DCC7 000E                            LDB,B5   BFR$,AUTO
          2 000083  82C5 0005                            LB,'00FF'X        5,B5
          2 000085       00FF
          2 000086  0581 001C                            BBF      s:17087,PREL

      447    17080    3                 T$=PINCRW(BFR$,KZ_HIP_BFRSIZ(KZ$OTPBFR.BFRSIZ)-SIZEW(KV$OTPMRK));

  17080   2 000088  B845 0004                            LDR,R3   4,B5
          2 00008A  A830 0000 0021  00                   LDR,R2   KZ_HIP_BFRSIZ,R3
          2 00008D  F852                                 LDR,R7   R2
          2 00008E  6C00                                 LDV,R6   0
          2 00008F  8447 000E                            AID      BFR$,AUTO
          2 000091  8470 FFFF FFFD                       AID      -3,IMO
          2 000094  8D47 0012                            SDI      T$,AUTO

      448    17081    4                 IF NOT T$->KV$OTPMRK.MSTRTR THEN DO;

  17081   2 000096  CCC7 0012                            LDB,B4   T$,AUTO
          2 000098  8984                                 CMZ      ,B4
          2 000099  0801 0009                            BAL      s:17087,PREL

      449    17082    4                    T$->KV$OTPMRK=KV$USR_OTPMRK.DAT;

  17082   2 00009B  AB86                                 LAB,B2   ,B6
          2 00009C  2C02                                 LDV,R2   2
          2 00009D  6C06                                 LDV,R6   6
          2 00009E  BB84                                 LAB,B3   ,B4
          2 00009F  3C00                                 LDV,R3   0
          2 0000A0  0008                                 MMM

      450    17083    4                    GOTO XIT;

  17083   2 0000A1  0F81 031E                            B        s:17460,PREL

      451    17084    4                    END;
      452    17085    3                 END;
      453    17086        /**/
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:100  
      454    17087    2              IF BYTSIZ<SIZEW(KV$OTPMRK)*2 THEN

  17087   2 0000A3  E847 0026                            LDR,R6   BYTSIZ,AUTO
          2 0000A5  6D06                                 CMV,R6   6
          2 0000A6  0281 0009                            BGE      s:17090,PREL

      455    17088    2                 CALL EXP_BFR ALTRET(NO_MEMORY); /* Make room for marker         */

  17088   2 0000A8  DB80 0000 0000                       LAB,B5   0
          2 0000AB  DFC7 003C                            STB,B5   DISABLE_LEVEL+3,AUTO
          2 0000AD  E3C0 06BA                            LNJ,B6   s:0,PREL
          2 0000AF       031D                            DC       s:17469,PREL

      456    17089        /**/
      457    17090    2              KZ$OTPBFR.MRKCNT=KZ$OTPBFR.MRKCNT+1;

  17090   2 0000B0  ECC7 000E                            LDB,B6   BFR$,AUTO
          2 0000B2  E846 0005                            LDR,R6   5,B6
          2 0000B4  EA70 0001                            ADD,R6   1,IMO
          2 0000B6  EAC6 0005                            SRM,R6,'00FF'X    5,B6
          2 0000B8       00FF

      458    17091    2              T$=PINCRW(BFR$,KZ_HIP_BFRSIZ(KZ$OTPBFR.BFRSIZ)-

  17091   2 0000B9  ECC7 000E                            LDB,B6   BFR$,AUTO
          2 0000BB  B846 0004                            LDR,R3   4,B6
          2 0000BD  E846 0005                            LDR,R6   5,B6
          2 0000BF  E570 00FF                            AND,R6   255,IMO
          2 0000C1  6FFD                                 MLV,R6   -3
          2 0000C2  EA30 0000 0021  00                   ADD,R6   KZ_HIP_BFRSIZ,R3
          2 0000C5  A856                                 LDR,R2   R6
          2 0000C6  DBA6                                 LAB,B5   ,B6,R2
          2 0000C7  DFC7 0012                            STB,B5   T$,AUTO

      459    17092    2                SIZEW(KV$OTPMRK)*KZ$OTPBFR.MRKCNT);
      460    17093    2              T$->KV$OTPMRK=KV$USR_OTPMRK.DAT;

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:101  
  17093   2 0000C9  ACC7 0006                            LDB,B2   PARM$,AUTO
          2 0000CB  2C02                                 LDV,R2   2
          2 0000CC  6C06                                 LDV,R6   6
          2 0000CD  BB85                                 LAB,B3   ,B5
          2 0000CE  3C00                                 LDV,R3   0
          2 0000CF  0008                                 MMM

      461    17094    2              BYTSIZ=BYTSIZ-SIZEW(KV$OTPMRK)*2;

  17094   2 0000D0  E847 0026                            LDR,R6   BYTSIZ,AUTO
          2 0000D2  6EFA                                 ADV,R6   -6
          2 0000D3  EF47 0026                            STR,R6   BYTSIZ,AUTO

      462    17095
      463    17096    2              IF KV$USR_OTPMRK.CMPOTP THEN

  17096   2 0000D5  ECC7 0006                            LDB,B6   PARM$,AUTO
          2 0000D7  8286                                 LB,'0080'X        ,B6
          2 0000D8       0080
          2 0000D9  0581 02E6                            BBF      s:17460,PREL

      464    17097    3              DO;  /* Process this otpmrk thru data stream - we'll recieve

      465    17098                              no more data until the pipe is clear         */
      466    17099    3                 KZ$HIPDEV.LSTOTPLINX = 0;  /* Save 0 bytes in the buffer

  17099   2 0000DB  CCC7 0008                            LDB,B4   DEV$,AUTO
          2 0000DD  8744 001B                            CL       27,B4

      467    17100                                                        even if its a printer BFR. */
      468    17101    3                 CALL DONE(%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  17101   2 0000DF  ABF0 8000                            LAB,B2   -32768,IMO
          2 0000E1  AFC7 004A                            STB,B2   @ECOL3+4,AUTO
          2 0000E3  E3C0 038F                            LNJ,B6   s:0,PREL
          2 0000E5       02E7                            DC       s:17469,PREL

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:102  
      469    17102    3                 END;

  17102   2 0000E6  0F81 02D9                            B        s:17460,PREL

      470    17103
      471    17104        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:103  
      472    17105
      473    17106
      474    17107        /**/
      475    17108        /* Extended translation */
      476    17109        /**/
      477    17110    2            CASE(%KV_USR_FNC_EXTOTPTRN);

      478    17111
      479    17112        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:104  
      480    17113
      481    17114
      482    17115        /**/
      483    17116        /* Transparent Data */
      484    17117        /* I assume the user knows what he is doing, 'cuz
      485    17118           the wrong kind of transparent data can blow the link protocol.
      486    17119        */
      487    17120
      488    17121    2            CASE(%KV_USR_FNC_DAT);

      489    17122
      490    17123    2              K=KV$USR_DAT.DAT__.DATBYTSIZ;

  17123   2 0000E8  E846 0004                            LDR,R6   4,B6
          2 0000EA  EF47 0021                            STR,R6   K,AUTO

      491    17124    2              CALL CHK_BFR_SIZ(K) ALTRET(NEVER_FITS);

  17124   2 0000EC  DBC7 0021                            LAB,B5   K,AUTO
          2 0000EE  DFC7 003C                            STB,B5   DISABLE_LEVEL+3,AUTO
          2 0000F0  E3C0 0665                            LNJ,B6   s:0,PREL
          2 0000F2       0022                            DC       s:17135,PREL

      492    17125    2              K=KV$USR_DAT.DAT__.DATBYTSIZ;

  17125   2 0000F3  ECC7 0006                            LDB,B6   PARM$,AUTO
          2 0000F5  E846 0004                            LDR,R6   4,B6
          2 0000F7  EF47 0021                            STR,R6   K,AUTO

      493    17126    2              T$=KV$USR_DAT.DAT__.ADR$;

  17126   2 0000F9  DCC6 0001                            LDB,B5   1,B6
          2 0000FB  DFC7 0012                            STB,B5   T$,AUTO

      494    17127    2              J=KV$USR_DAT.DAT__.BYTX;

  17127   2 0000FD  D846 0003                            LDR,R5   3,B6
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:105  
          2 0000FF  DF47 0024                            STR,R5   J,AUTO

      495    17128
      496    17129    2              CALL INSERT(BFR$->CHR1,BYTX,K,

  17129   2 000101  AB85                                 LAB,B2   ,B5
          2 000102  A855                                 LDR,R2   R5
          2 000103  BCC7 000E                            LDB,B3   BFR$,AUTO
          2 000105  B847 0025                            LDR,R3   BYTX,AUTO
          2 000107  0008                                 MMM

      497    17130    2                SUBSTR(T$->CHR1,
      498    17131    2                J,
      499    17132    2                K));
      500    17133    2              BYTX=BYTX+K;

  17133   2 000108  E847 0025                            LDR,R6   BYTX,AUTO
          2 00010A  EA47 0021                            ADD,R6   K,AUTO
          2 00010C  EF47 0025                            STR,R6   BYTX,AUTO

      501    17134    2              BYTSIZ=BYTSIZ-K;

  17134   2 00010E  C847 0026                            LDR,R4   BYTSIZ,AUTO
          2 000110  C247 0021                            SUB,R4   K,AUTO
          2 000112  CF47 0026                            STR,R4   BYTSIZ,AUTO

      502    17135    3   NEVER_FITS: DO;

  17135   2                              NEVER_FITS      null
      503    17136    3                 END;

  17136   2 000114  0F81 02AB            NEVER_FITS      B        s:17460,PREL

      504    17137        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:106  
      505    17138
      506    17139
      507    17140        /**/
      508    17141        /* Position */
      509    17142        /**/
      510    17143    2            CASE(%KV_USR_FNC_PST);

      511    17144
      512    17145
      513    17146        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:107  
      514    17147
      515    17148
      516    17149        /**/
      517    17150        /* Set attribute */
      518    17151        /*
      519    17152           VDH asking us to set device attributes for a particular field.
      520    17153           This is done by inserting a start field command into the data
      521    17154           stream followed by the attribute byte. We may change display
      522    17155           intensity, make it write protected, make it numeric only and
      523    17156           make it selector pen dectectable, all by seting bits in the
      524    17157           attribute character.
      525    17158        */
      526    17159    2            CASE(%KV_USR_FNC_SETATR);

      527    17160
      528    17161
      529    17162        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:108  
      530    17163
      531    17164
      532    17165        /**/
      533    17166        /* Input Procedure */
      534    17167        /**/
      535    17168    2            CASE(%KV_USR_FNC_INPPRC);

      536    17169        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:109  
      537    17170        /**/
      538    17171        /* INPUT SPECIAL CHARACTER -LF */
      539    17172        /**/
      540    17173
      541    17174    2            CASE(%KV_USR_FNC_EXTINPTRN);

      542    17175
      543    17176    3              DO SELECT(KZ$HIPCTR.TYP);

  17176   2 000116  DCC7 000A                            LDB,B5   CTR$,AUTO
          2 000118  E845 0008                            LDR,R6   8,B5
          2 00011A  E970 1E14                            CMR,R6   7700,IMO
          2 00011C  0201 000D                            BL       s:17183,PREL
          2 00011E  0901 0007                            BE       s:17179,PREL
          2 000120  E970 1E7C                            CMR,R6   7804,IMO
          2 000122  0981 0007                            BNE      s:17183,PREL
          2 000124  0F81 0003                            B        s:17181,PREL

      544    17177    3                 SELECT(7700);

      545    17178        /*            KV$USR_EXTINPTRN.ABR='1'B;            */
      546    17179    3                 GOTO ALTRTN;

  17179   2 000126  0F81 029F                            B        s:17465,PREL

      547    17180    3                 SELECT(7804);

      548    17181    3   /* T$=ADDR(NIL);*/ GOTO ALTRTN;

  17181   2 000128  0F81 029D                            B        s:17465,PREL

      549    17182    3                 SELECT(ELSE);

      550    17183    3              T$=ADDR(NIL);

  17183   2 00012A  CB80 0000 0000                       LAB,B4   0
          2 00012D  CFC7 0012                            STB,B4   T$,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:110  

      551    17184    3                 END /* DO SELECT */;

  17184   2 00012F  0F81 0290                            B        s:17460,PREL

      552    17185        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:111  
      553    17186
      554    17187
      555    17188        /**/
      556    17189        /* Event */
      557    17190        /**/
      558    17191    2            CASE(%KV_USR_FNC_EVT);

      559    17192                  /*
      560    17193                    The following do case is used to inform the handler when
      561    17194                    certain events happen in VDH that we are interested in
      562    17195                    because it means some action is required in behalf of
      563    17196                    the device. Such as VDH return to path mngt which is
      564    17197                    a signal that we may send any pending output buffers to the
      565    17198                    device.
      566    17199                  */
      567    17200        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:112  
      568    17201
      569    17202    3              DO CASE(KV$USR_EVT.ID);

  17202   2 000131  9806                                 LDR,R1   ,B6
          2 000132  9570 007F                            AND,R1   127,IMO
          2 000134  1D12                                 CMV,R1   18
          2 000135  0281 0285                            BGE      s:17456,PREL
          2 000137  B810 0000 013D  02                   LDR,R3   s:17202+12,R1
          2 00013A  83B0 0000 014F  02                   JMP      s:17210,R3
          2 00013D       026C                            DC       s:17456,PREL
          2 00013E       026C                            DC       s:17456,PREL
          2 00013F       026C                            DC       s:17456,PREL
          2 000140       0000                            DC       s:17210,PREL
          2 000141       0064                            DC       s:17257,PREL
          2 000142       00D6                            DC       s:17304,PREL
          2 000143       026C                            DC       s:17456,PREL
          2 000144       00A8                            DC       s:17286,PREL
          2 000145       00D6                            DC       s:17304,PREL
          2 000146       014C                            DC       s:17333,PREL
          2 000147       026C                            DC       s:17456,PREL
          2 000148       015A                            DC       s:17347,PREL
          2 000149       01B3                            DC       s:17376,PREL
          2 00014A       026C                            DC       s:17456,PREL
          2 00014B       0214                            DC       s:17414,PREL
          2 00014C       022D                            DC       s:17432,PREL
          2 00014D       026C                            DC       s:17456,PREL
          2 00014E       0048                            DC       s:17245,PREL

      570    17203
      571    17204
      572    17205        /**/
      573    17206        /* Event - Delete output */
      574    17207        /**/
      575    17208    3               CASE(%KV_USR_EVT_ID_DLTOTP);

      576    17209
      577    17210    3                 KZ$HIPDEV.HLT.PAG='0'B;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:113  

  17210   2 00014F  DCC7 0008                            LDB,B5   DEV$,AUTO
          2 000151  8845 0012                            LBF,'0020'X       18,B5
          2 000153       0020

      578    17211    3                 KZ$HIPDEV.HLT.INP='0'B;

  17211   2 000154  8845 0012                            LBF,'0008'X       18,B5
  17211   2 000156       0008

      579    17212    3                 CALL DONE(%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  17212   2 000157  CBF0 8000                            LAB,B4   -32768,IMO
          2 000159  CFC7 004A                            STB,B4   @ECOL3+4,AUTO
          2 00015B  E3C0 0317                            LNJ,B6   s:0,PREL
          2 00015D       026F                            DC       s:17469,PREL

      580    17213        /*  MERELY MARK THE BUFFERS AS DELETED..
      581    17214            DEVICE MANAGER WILL DELETE THEM WHEN THIS
      582    17215            DEVICE'S TURN TO SEND COMES ALONG.
      583    17216        */
      584    17217    3                 IF KZ$HIPDEV.OTPCNT~=0 THEN

  17217   2 00015E  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 000160  E846 0010                            LDR,R6   16,B6
          2 000162  6901 025D                            BEZ,R6   s:17460,PREL

      585    17218    4                 DO;

      586    17219                         %DISABLE(INHLVL=KH_INHLVL);

  17220   2 000164  D800 0000 0000  xsym                 LDR,R5   KH_INHLVL
          2 000167  DF47 0039                            STR,R5   DISABLE_LEVEL,AUTO

  17221   2 000169  DBC7 0039                            LAB,B5   DISABLE_LEVEL,AUTO
          2 00016B  DFC7 0054                            STB,B5   MAXDATA+3,AUTO
          2 00016D  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:114  
          2 00016F  CBF0 0100                            LAB,B4   256,IMO
          2 000171  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 000174       0001                            DC       s:17223,PREL

      587    17223    4                    T$=KZ$HIPDEV.OTPHD$;

  17223   2 000175  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 000177  DCC6 0008                            LDB,B5   8,B6
          2 000179  DFC7 0012                            STB,B5   T$,AUTO

      588    17224    5                    DO UNTIL(T$=ADDR(NIL));

      589    17225    5                       T$->KZ$OTPBFR.CMPCOD=%KV_CMPCOD_DLT;

  17225   2 00017B  6C0C                                 LDV,R6   12
          2 00017C  ECC7 0012                            LDB,B6   T$,AUTO
          2 00017E  E7C6 0005                            STH,R6   5,B6

      590    17226    5                       T$=T$->KZ$OTPBFR.LNK$;

  17226   2 000180  ECC7 0012                            LDB,B6   T$,AUTO
          2 000182  DC86                                 LDB,B5   ,B6
          2 000183  DFC7 0012                            STB,B5   T$,AUTO

      591    17227    5                       END;

  17227   2 000185  8DC7 0012                            CMN      T$,AUTO
          2 000187  09F4                                 BNE      s:17225,SPREL

      592    17228                         %ENABLE(INHLVL=KH_INHLVL);

  17229   2 000188  D847 0039                            LDR,R5   DISABLE_LEVEL,AUTO
          2 00018A  D900 0000 0000  xsym                 CMR,R5   KH_INHLVL
          2 00018D  0901 0232                            BE       s:17460,PREL

  17231   2 00018F  CBF0 0000                            LAB,B4   0,IMO
          2 000191  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:115  
          2 000194       0001                            DC       s:17234,PREL

      593    17234    4                    END;

  17234   2 000195  0F81 022A                            B        s:17460,PREL

      594    17235
      595    17236        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:116  
      596    17237    3               CASE(%KV_USR_EVT_ID_INHDLTOTP);

      597    17238
      598    17239        /* A cursor position or erase is being performed within the
      599    17240           last KZH_ESCAPE_RESERVE bytes of the buffer.
      600    17241
      601    17242           Flush the current buffer, then get another one.
      602    17243        */
      603    17244
      604    17245    3                 IF KZ$HIPDEV.ACTIVE THEN

  17245   2 000197  DCC7 0008                            LDB,B5   DEV$,AUTO
          2 000199  82C5 0012                            LB,'4000'X        18,B5
          2 00019B       4000
          2 00019C  0581 0223                            BBF      s:17460,PREL

      605    17246    4                 DO;

      606    17247    4                   CALL CHK_BFR_SIZ(MAXIMUM(KZH_ESCAPE_RESERVE,KV$USR_EVT.PRM)) ALTRET
             17247                             (NO_MEMORY);

  17247   2 00019E  E846 0001                            LDR,R6   1,B6
          2 0001A0  E900 0000 007F  00                   CMR,R6   KZH_ESCAPE_RESERVE
          2 0001A3  0881 0004                            BAGE     s:17247+10,PREL
          2 0001A5  E800 0000 007F  00                   LDR,R6   KZH_ESCAPE_RESERVE
          2 0001A8  EF47 0059                            STR,R6   MAXDATA+8,AUTO
          2 0001AA  CBC7 0059                            LAB,B4   MAXDATA+8,AUTO
          2 0001AC  CFC7 003C                            STB,B4   DISABLE_LEVEL+3,AUTO
          2 0001AE  E3C0 05A7                            LNJ,B6   s:0,PREL
          2 0001B0       021C                            DC       s:17469,PREL

      607    17248    4                    END;

  17248   2 0001B1  0F81 020E                            B        s:17460,PREL

      608    17249        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:117  
      609    17250
      610    17251
      611    17252        /**/
      612    17253        /* Event - Disconnect */
      613    17254        /**/
      614    17255    3               CASE(%KV_USR_EVT_ID_DSC);

      615    17256
      616    17257    3                 IF %KV_VDI.SSNCNT > 1 THEN RETURN;

  17257   2 0001B3  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0001B6  CC85                                 LDB,B4   ,B5
          2 0001B7  E844 000E                            LDR,R6   14,B4
          2 0001B9  6D01                                 CMV,R6   1
          2 0001BA  0381 0004                            BLE      s:17258,PREL

  17257   2 0001BC  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      617    17258    4                 IF NOT KZ$HIPDEV.DSC THEN DO;

  17258   2 0001BF  BCC7 0008                            LDB,B3   DEV$,AUTO
          2 0001C1  82C3 0015                            LB,'00FF'X        21,B3
          2 0001C3       00FF
          2 0001C4  0501 002F                            BBT      s:17273,PREL

      618    17259                         %DISABLE(INHLVL=KH_INHLVL);

  17260   2 0001C6  D800 0000 0000  xsym                 LDR,R5   KH_INHLVL
          2 0001C9  DF47 0039                            STR,R5   DISABLE_LEVEL,AUTO

  17261   2 0001CB  CBC7 0039                            LAB,B4   DISABLE_LEVEL,AUTO
          2 0001CD  CFC7 0054                            STB,B4   MAXDATA+3,AUTO
          2 0001CF  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 0001D1  CBF0 0100                            LAB,B4   256,IMO
          2 0001D3  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 0001D6       0001                            DC       s:17263,PREL

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:118  
      619    17263    4                    KZ$HIPDEV.DSC.INT='1'B;

  17263   2 0001D7  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 0001D9  8946 0015                            LBT,'0080'X       21,B6
          2 0001DB       0080

      620    17264    4                    KZ$HIPDEV.DSC.TOLD_VDH='1'B;

  17264   2 0001DC  8946 0015                            LBT,'0040'X       21,B6
  17264   2 0001DE       0040

      621    17265    4                    CALL KZH$DSC(KZ$HIPDEV);

  17265   2 0001DF  BBC7 0008                            LAB,B3   DEV$,AUTO
          2 0001E1  CBF0 0100                            LAB,B4   256,IMO
          2 0001E3  E380 0000 0000  xent                 LNJ,B6   KZH$DSC
          2 0001E6       0001                            DC       s:17267,PREL

      622    17266                         %ENABLE(INHLVL=KH_INHLVL);

  17267   2 0001E7  E847 0039                            LDR,R6   DISABLE_LEVEL,AUTO
          2 0001E9  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          2 0001EC  0901 0007                            BE       s:17273,PREL

  17269   2 0001EE  CBF0 0000                            LAB,B4   0,IMO
          2 0001F0  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0001F3       0001                            DC       s:17273,PREL

      623    17272    4                    END;

      624    17273    3                 RETURN;         /* Dont't do SET_VAL - may have been re-entered */

  17273   2 0001F4  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      625    17274
      626    17275        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:119  
      627    17276
      628    17277
      629    17278        /**/
      630    17279        /* Event - Halt Output */
      631    17280        /*
      632    17281              ESC H or some such was input - Halt output and await users
      633    17282              intervention. (Usually means "Enter to Go"
      634    17283        */
      635    17284    3               CASE(%KV_USR_EVT_ID_HLTOTP);

      636    17285
      637    17286    4                 IF NOT KZ$HIPDEV.DSC THEN DO;

  17286   2 0001F7  DCC7 0008                            LDB,B5   DEV$,AUTO
          2 0001F9  82C5 0015                            LB,'00FF'X        21,B5
          2 0001FB       00FF
          2 0001FC  0501 001F                            BBT      s:17294,PREL

      638    17287    4                    IF BFR$=ADDR(NIL) THEN

  17287   2 0001FE  8DC7 000E                            CMN      BFR$,AUTO
          2 000200  0981 0009                            BNE      s:17289,PREL

      639    17288    4                       CALL INITBFR ALTRET(NO_MEMORY);

  17288   2 000202  CB80 0000 0000                       LAB,B4   0
          2 000205  CFC7 004A                            STB,B4   @ECOL3+4,AUTO
          2 000207  E3C0 0416                            LNJ,B6   s:0,PREL
          2 000209       01C3                            DC       s:17469,PREL

      640    17289    4                    IF KV$USR_EVT.PRM=0 THEN

  17289   2 00020A  ECC7 0006                            LDB,B6   PARM$,AUTO
          2 00020C  E846 0001                            LDR,R6   1,B6
          2 00020E  6981 0008                            BNEZ,R6  s:17292,PREL

      641    17290    4                       KZ$OTPBFR.FLAGS.HALT.PAG#='1'B;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:120  

  17290   2 000210  DCC7 000E                            LDB,B5   BFR$,AUTO
          2 000212  8945 0002                            LBT,'0008'X       2,B5
          2 000214       0008
          2 000215  0F81 0006                            B        s:17294,PREL

      642    17291    4                    ELSE
      643    17292    4                       KZ$OTPBFR.FLAGS.HALT.INP#='1'B;

  17292   2 000217  DCC7 000E                            LDB,B5   BFR$,AUTO
          2 000219  8945 0002                            LBT,'0004'X       2,B5
          2 00021B       0004

      644    17293    4                    END;

      645    17294    3                 CALL DONE(%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  17294   2 00021C  DBF0 8000                            LAB,B5   -32768,IMO
          2 00021E  DFC7 004A                            STB,B5   @ECOL3+4,AUTO
          2 000220  E3C0 0252                            LNJ,B6   s:0,PREL
          2 000222       01AA                            DC       s:17469,PREL
          2 000223  0F81 019C                            B        s:17460,PREL

      646    17295
      647    17296        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:121  
      648    17297
      649    17298
      650    17299        /**/
      651    17300        /* Event - Logon Accept */
      652    17301        /**/
      653    17302    3               CASE(%KV_USR_EVT_ID_LGNACP,%KV_USR_EVT_ID_ENDSETPRM);

      654    17303
      655    17304    4                 DO SELECT(KZ$HIPCTR.TYP*4+BITBIN(%KV_MVD.ORG=%KV#VD_ORG_FORM));

  17304   2 000225  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000228  CCC5 0006                            LDB,B4   6,B5
          2 00022A  D870 8000                            LDR,R5   -32768,IMO
          2 00022C  E2C4 0015                            LLH,R6   21,B4
          2 00022E  6D04                                 CMV,R6   4
          2 00022F  0901 0002                            BE       s:17304+13,PREL
          2 000231  5C00                                 LDV,R5   0
          2 000232  504F                                 SOR,R5   15
          2 000233  BCC7 000A                            LDB,B3   CTR$,AUTO
          2 000235  C843 0008                            LDR,R4   8,B3
          2 000237  4002                                 SOL,R4   2
          2 000238  CA55                                 ADD,R4   R5
          2 000239  C970 7A18                            CMR,R4   31256,IMO
          2 00023B  0201 0009                            BL       s:17304+32,PREL
          2 00023D  0901 0017                            BE       s:17309,PREL
          2 00023F  C970 7A19                            CMR,R4   31257,IMO
          2 000241  0981 017E                            BNE      s:17460,PREL
          2 000243  0F81 000F                            B        s:17305,PREL
          2 000245  C970 79F1                            CMR,R4   31217,IMO
          2 000247  0201 0005                            BL       s:17304+40,PREL
          2 000249  0901 0009                            BE       s:17305,PREL
          2 00024B  0F81 0174                            B        s:17460,PREL
          2 00024D  C970 79F0                            CMR,R4   31216,IMO
          2 00024F  0981 0170                            BNE      s:17460,PREL
          2 000251  0F81 0003                            B        s:17309,PREL

      656    17305    4                    SELECT(%(7814*4+1),%(7804*4+1)); /*FORMS MODE 7814,7804      */
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:122  

  17305   2 000253  0F81 016C                            B        s:17460,PREL

      657    17306        /*               CALL SEND_HTEXTC(SSS_7804);*/
      658    17307    4                    SELECT(%(7814*4+0),%(7804*4+0)); /* TIMESHARING MODE 7814,7804 */

      659    17308        /*               CALL SEND_HTEXTC(SSS_7804);*/
      660    17309    4                    %KV_MVD.TABRELATIVE='0'B;

  17309   2 000255  8844 0015                            LBF,'0004'X       21,B4
  17309   2 000257       0004

      661    17310    4                    %KV_MVD.SPACEINSERT='1'B;

  17310   2 000258  CCC5 0006                            LDB,B4   6,B5
          2 00025A  8944 0015                            LBT,'0008'X       21,B4
          2 00025C       0008

      662    17311    4                    %KV_MVD.TABSIM='1'B;

  17311   2 00025D  CCC5 0006                            LDB,B4   6,B5
          2 00025F  8944 0015                            LBT,'0002'X       21,B4
          2 000261       0002

      663    17312    4                    %KV_SRD.SCROLL='0'B;

  17312   2 000262  CCC5 000A                            LDB,B4   10,B5
          2 000264  8844 000E                            LBF,'0008'X       14,B4
          2 000266       0008

      664    17313                                      /* RELEASE OLD TAB BUFFER, IF THERE WAS ONE     */
      665    17314    4                    IF (%KV_MVD.INPTAB$~=ADDR(NIL)) AND

  17314   2 000267  CCC5 0006                            LDB,B4   6,B5
          2 000269  8DC4 0004                            CMN      4,B4
          2 00026B  0901 001E                            BE       s:17322,PREL
          2 00026D  AB80 0000 0007  01                   LAB,B2   TABTABLE_7804
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:123  
          2 000270  ADC4 0004                            CMB,B2   4,B4
          2 000272  0901 0017                            BE       s:17322,PREL

      666    17315    4                      (%KV_MVD.INPTAB$~=ADDR(TABTABLE_7804)) THEN
      667    17316    5                    DO;

      668    17317    5                       KV$VDH_RLSBFR.BFR$=%KV_MVD.INPTAB$;

  17317   2 000274  ACC4 0004                            LDB,B2   4,B4
          2 000276  AF80 0000 0001  01                   STB,B2   KV$VDH_RLSBFR+1

      669    17318    5                       KV$VDH_RLSBFR.STRTYP=%KV_STRTYP_INPTAB;

  17318   2 000279  6C07                                 LDV,R6   7
          2 00027A  E780 0000 0006  01                   STH,R6   KV$VDH_RLSBFR+6

      670    17319    5                       KV$VDH_RLSBFR.SHRBFRSRC='1'B;

  17319   2 00027D  8900 0000 0006  01                   LBT,'0080'X       KV$VDH_RLSBFR+6
  17319   2 000280       0080

      671    17320    5                       CALL KVV$VDI(KV$VDH_RLSBFR);

  17320   2 000281  BB80 0000 0000  03                   LAB,B3   0
          2 000284  CBF0 0100                            LAB,B4   256,IMO
          2 000286  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 000289       0001                            DC       s:17322,PREL

      672    17321    5                       END;

      673    17322    4                    %KV_MVD.INPTAB$=ADDR(TABTABLE_7804);

  17322   2 00028A  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00028D  DCC6 0006                            LDB,B5   6,B6
          2 00028F  CB80 0000 0007  01                   LAB,B4   TABTABLE_7804
          2 000292  CFC5 0004                            STB,B4   4,B5

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:124  
      674    17323    4                    TABTABLE_7804.USRCNT=32767 /*never gets released */;

  17323   2 000294  E870 7FFF                            LDR,R6   32767,IMO
          2 000296  EF00 0000 000A  01                   STR,R6   TABTABLE_7804+3

      675    17324    4                    END /*SELECT ON TERMINAL TYPE, DCB ORG */;

  17324   2 000299  0F81 0126                            B        s:17460,PREL

      676    17325        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:125  
      677    17326
      678    17327
      679    17328        /**/
      680    17329        /* Event - Logon Reject */
      681    17330        /**/
      682    17331    3               CASE(%KV_USR_EVT_ID_LGNRJC);

      683    17332
      684    17333    3                 CALL ERRLOG(%E$LGNREJ);

  17333   2 00029B  DBF0 00CF                            LAB,B5   207,IMO
          2 00029D  DFC7 003C                            STB,B5   DISABLE_LEVEL+3,AUTO
          2 00029F  E3C0 07C7                            LNJ,B6   s:0,PREL
          2 0002A1       0001                            DC       s:17334,PREL

      685    17334    3                 KZ$HIPDEV.ACTIVE='0'B;

  17334   2 0002A2  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 0002A4  8846 0012                            LBF,'4000'X       18,B6
          2 0002A6       4000
          2 0002A7  0F81 0118                            B        s:17460,PREL

      686    17335
      687    17336        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:126  
      688    17337
      689    17338
      690    17339        /**/
      691    17340        /* Event - Release Structure */
      692    17341        /**/
      693    17342    3               CASE(%KV_USR_EVT_ID_RLSSTR);

      694    17343
      695    17344        /*
      696    17345              VDH is ready to get rid of some of our interface context.
      697    17346        */
      698    17347    4                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN DO;

  17347   2 0002A9  E846 0001                            LDR,R6   1,B6
          2 0002AB  6D1D                                 CMV,R6   29
          2 0002AC  0981 0113                            BNE      s:17460,PREL

      699    17348                         %DISABLE(INHLVL=KH_INHLVL);

  17349   2 0002AE  D800 0000 0000  xsym                 LDR,R5   KH_INHLVL
          2 0002B1  DF47 0039                            STR,R5   DISABLE_LEVEL,AUTO

  17350   2 0002B3  DBC7 0039                            LAB,B5   DISABLE_LEVEL,AUTO
          2 0002B5  DFC7 0054                            STB,B5   MAXDATA+3,AUTO
          2 0002B7  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 0002B9  CBF0 0100                            LAB,B4   256,IMO
          2 0002BB  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 0002BE       0001                            DC       s:17352,PREL

      700    17352    4                    T$=%KV_VDI.OTPBFR_.ADR$;

  17352   2 0002BF  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0002C2  DC86                                 LDB,B5   ,B6
          2 0002C3  CCC5 000A                            LDB,B4   10,B5
          2 0002C5  CFC7 0012                            STB,B4   T$,AUTO

      701    17353    5                    IF T$~=ADDR(NIL) THEN DO;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:127  

  17353   2 0002C7  8DC7 0012                            CMN      T$,AUTO
          2 0002C9  0901 0020                            BE       s:17358,PREL

      702    17354    5                       I=KZ_HIP_BFRSIZ(T$->KZ$OTPBFR.BFRSIZ);

  17354   2 0002CB  B844 0004                            LDR,R3   4,B4
          2 0002CD  E830 0000 0021  00                   LDR,R6   KZ_HIP_BFRSIZ,R3
          2 0002D0  EF47 0023                            STR,R6   I,AUTO

      703    17355    5                       %KV_VDI.OTPBFR_='0'B;

  17355   2 0002D2  DC86                                 LDB,B5   ,B6
          2 0002D3  5C08                                 LDV,R5   8
          2 0002D4  0021                                 ALR      ;
          2 0002D5       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0002D7       4005 000A                                ALPHANUM(10,B5,,R5,FILL)

      704    17356    5                       CALL KVB$RLSSYS(I,T$);

  17356   2 0002D9  DBC7 0012                            LAB,B5   T$,AUTO
          2 0002DB  437F                                 CSYNC    s:17356+1,SPREL
          2 0002DC  DFC7 0056                            STB,B5   MAXDATA+5,AUTO
          2 0002DE  CBC7 0023                            LAB,B4   I,AUTO
          2 0002E0  CFC7 0054                            STB,B4   MAXDATA+3,AUTO
          2 0002E2  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 0002E4  CBF0 0200                            LAB,B4   512,IMO
          2 0002E6  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          2 0002E9       0001                            DC       s:17358,PREL

      705    17357    5                       END;

      706    17358    4                    CALL KZH$RLSCTX(KZ$HIPDEV);

  17358   2 0002EA  BBC7 0008                            LAB,B3   DEV$,AUTO
          2 0002EC  CBF0 0100                            LAB,B4   256,IMO
          2 0002EE  E380 0000 0000  xent                 LNJ,B6   KZH$RLSCTX
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:128  
          2 0002F1       0001                            DC       s:17360,PREL

      707    17359                         %ENABLE(INHLVL=KH_INHLVL);

  17360   2 0002F2  E847 0039                            LDR,R6   DISABLE_LEVEL,AUTO
          2 0002F4  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          2 0002F7  0901 0007                            BE       s:17365,PREL

  17362   2 0002F9  CBF0 0000                            LAB,B4   0,IMO
          2 0002FB  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0002FE       0001                            DC       s:17365,PREL

      708    17365    4                    RETURN;                /* Must RETURN here - no context left */

  17365   2 0002FF  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      709    17366    4                    END;
      710    17367
      711    17368        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:129  
      712    17369
      713    17370
      714    17371        /**/
      715    17372        /* Event - Schedule */
      716    17373        /**/
      717    17374    3               CASE(%KV_USR_EVT_ID_SCH);

      718    17375                      %DISABLE(INHLVL=KH_INHLVL);

  17376   2 000302  E800 0000 0000  xsym                 LDR,R6   KH_INHLVL
          2 000305  EF47 0039                            STR,R6   DISABLE_LEVEL,AUTO

  17377   2 000307  DBC7 0039                            LAB,B5   DISABLE_LEVEL,AUTO
          2 000309  DFC7 0054                            STB,B5   MAXDATA+3,AUTO
          2 00030B  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 00030D  CBF0 0100                            LAB,B4   256,IMO
          2 00030F  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 000312       0001                            DC       s:17380,PREL

      719    17379
      720    17380    3                 IF KZ$HIPDEV.DFR.CLR THEN

  17380   2 000313  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 000315  82C6 0016                            LB,'1000'X        22,B6
          2 000317       1000
          2 000318  0581 000B                            BBF      s:17386,PREL

      721    17381    4                 DO;

      722    17382    4                    KZ$HIPDEV.DFR.CLR = '0'B;

  17382   2 00031A  8846 0016                            LBF,'1000'X       22,B6
  17382   2 00031C       1000

      723    17383    4                    CALL KZH$CLEARIMM(KZ$HIPDEV);

  17383   2 00031D  BBC7 0008                            LAB,B3   DEV$,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:130  
          2 00031F  CBF0 0100                            LAB,B4   256,IMO
          2 000321  E3C0 0107                            LNJ,B6   s:17523,PREL
          2 000323       0001                            DC       s:17386,PREL

      724    17384    4                    END;

      725    17385
      726    17386    3                 IF KZ$HIPDEV.DFRHD$~=ADDR(NIL) THEN

  17386   2 000324  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 000326  8DC6 000C                            CMN      12,B6
          2 000328  0901 0009                            BE       s:17389,PREL

      727    17387    3                    CALL KZH$DFR(KZ$HIPDEV);

  17387   2 00032A  BBC7 0008                            LAB,B3   DEV$,AUTO
          2 00032C  CBF0 0100                            LAB,B4   256,IMO
          2 00032E  E380 0000 0000  xent                 LNJ,B6   KZH$DFR
          2 000331       0001                            DC       s:17389,PREL

      728    17388
      729    17389    3                 IF KZ$HIPDEV.DSC THEN

  17389   2 000332  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 000334  82C6 0015                            LB,'00FF'X        21,B6
          2 000336       00FF
          2 000337  0581 000B                            BBF      s:17392,PREL

      730    17390    3                    CALL KZH$DSC_CONT(KZ$HIPDEV); /* Try to continue disconnect  */

  17390   2 000339  BBC7 0008                            LAB,B3   DEV$,AUTO
          2 00033B  CBF0 0100                            LAB,B4   256,IMO
          2 00033D  E380 0000 0000  xent                 LNJ,B6   KZH$DSC_CONT
          2 000340       0001                            DC       s:17390+8,PREL
          2 000341  0F81 0011                            B        s:17398,PREL

      731    17391    3                 ELSE
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:131  
      732    17392    3                    IF KZ$HIPDEV.DSC_LATER THEN

  17392   2 000343  82C6 001C                            LB,'0020'X        28,B6
  17392   2 000345       0020
          2 000346  0581 000C                            BBF      s:17398,PREL

      733    17393    4                    DO;

      734    17394    4                       KZ$HIPDEV.DSC_LATER='0'B;

  17394   2 000348  8846 001C                            LBF,'0020'X       28,B6
  17394   2 00034A       0020

      735    17395    4                       CALL KZH$DSC(KZ$HIPDEV);

  17395   2 00034B  BBC7 0008                            LAB,B3   DEV$,AUTO
          2 00034D  CBF0 0100                            LAB,B4   256,IMO
          2 00034F  E380 0000 0000  xent                 LNJ,B6   KZH$DSC
          2 000352       0001                            DC       s:17398,PREL

      736    17396    4                       END;

      737    17397                      %ENABLE(INHLVL=KH_INHLVL);

  17398   2 000353  E847 0039                            LDR,R6   DISABLE_LEVEL,AUTO
          2 000355  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          2 000358  0901 0007                            BE       s:17403,PREL

  17400   2 00035A  CBF0 0000                            LAB,B4   0,IMO
          2 00035C  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 00035F       0001                            DC       s:17403,PREL

      738    17403    3                 RETURN;   /* DONT WANT TO FALL THROUGH TO SET_VAL DO TO

  17403   2 000360  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      739    17404                                   RE-ENTRANCE PROBLEMS.                    */
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:132  
      740    17405
      741    17406        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:133  
      742    17407
      743    17408
      744    17409        /**/
      745    17410        /* Event - VDH Exit */
      746    17411        /**/
      747    17412    3               CASE(%KV_USR_EVT_ID_VDHEXT);

      748    17413
      749    17414    3                 IF BFR$~=ADDR(NIL) THEN

  17414   2 000363  8DC7 000E                            CMN      BFR$,AUTO
          2 000365  0901 005A                            BE       s:17460,PREL

      750    17415    3                    IF KZ$HIPDEV.OTPCNT=0 THEN

  17415   2 000367  DCC7 0008                            LDB,B5   DEV$,AUTO
          2 000369  E845 0010                            LDR,R6   16,B5
          2 00036B  6981 0006                            BNEZ,R6  s:17419,PREL

      751    17416    3                       CALL CMP_OTP ALTRET(NO_MEMORY);

  17416   2 00036D  E3C0 06C4                            LNJ,B6   s:0,PREL
          2 00036F       005D                            DC       s:17469,PREL
          2 000370  0F81 004F                            B        s:17460,PREL

      752    17417    3                    ELSE
      753    17418    4                    DO;

      754    17419    4                       KZ$HIPDEV.DONE='1'B;

  17419   2 000372  8945 0012                            LBT,'0200'X       18,B5
  17419   2 000374       0200

      755    17420    4                       IF KZ$HIPDEV.OTPCNT=0 THEN

  17420   2 000375  6981 004A                            BNEZ,R6  s:17460,PREL

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:134  
      756    17421    4                          CALL CMP_OTP ALTRET(NO_MEMORY);

  17421   2 000377  E3C0 06BA                            LNJ,B6   s:0,PREL
          2 000379       0053                            DC       s:17469,PREL

      757    17422    4                       END;

  17422   2 00037A  0F81 0045                            B        s:17460,PREL

      758    17423        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:135  
      759    17424
      760    17425
      761    17426        /**/
      762    17427        /* Event - Release VDI */
      763    17428        /**/
      764    17429    3               CASE(%KV_USR_EVT_ID_RLSVDI);

      765    17430
      766    17431                      %DISABLE(INHLVL=KH_INHLVL);

  17432   2 00037C  E800 0000 0000  xsym                 LDR,R6   KH_INHLVL
          2 00037F  EF47 0039                            STR,R6   DISABLE_LEVEL,AUTO

  17433   2 000381  DBC7 0039                            LAB,B5   DISABLE_LEVEL,AUTO
          2 000383  DFC7 0054                            STB,B5   MAXDATA+3,AUTO
          2 000385  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 000387  CBF0 0100                            LAB,B4   256,IMO
          2 000389  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 00038C       0001                            DC       s:17435,PREL

      767    17435    3                 KZ$HIPDEV.DSC.VDH_FINAL='1'B;

  17435   2 00038D  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 00038F  8946 0015                            LBT,'0020'X       21,B6
          2 000391       0020

      768    17436    4                IF KZ$HIPDEV.OTPHD$~=ADDR(NIL) OR KZ$HIPDEV.DFRHD$~=ADDR(NIL) THEN DO;

  17436   2 000392  8DC6 0008                            CMN      8,B6
          2 000394  0981 0005                            BNE      s:17438,PREL
          2 000396  8DC6 000C                            CMN      12,B6
          2 000398  0901 0010                            BE       s:17446,PREL

      769    17437                         %ENABLE(INHLVL=KH_INHLVL);

  17438   2 00039A  E847 0039                            LDR,R6   DISABLE_LEVEL,AUTO
          2 00039C  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:136  
          2 00039F  0901 0007                            BE       s:17443,PREL

  17440   2 0003A1  CBF0 0000                            LAB,B4   0,IMO
          2 0003A3  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0003A6       0001                            DC       s:17443,PREL

      770    17443    4                    GOTO ALTRTN;

  17443   2 0003A7  0F81 001E                            B        s:17465,PREL

      771    17444    4                    END;
      772    17445    4                 ELSE DO;

      773    17446    4                    KZ$HIPDEV.DSC.DEV_FINAL='1'B; /* Device done too             */

  17446   2 0003A9  8946 0015                            LBT,'0010'X       21,B6
  17446   2 0003AB       0010

      774    17447                         %ENABLE(INHLVL=KH_INHLVL);

  17448   2 0003AC  E847 0039                            LDR,R6   DISABLE_LEVEL,AUTO
          2 0003AE  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          2 0003B1  0901 000E                            BE       s:17460,PREL

  17450   2 0003B3  CBF0 0000                            LAB,B4   0,IMO
          2 0003B5  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0003B8       0001                            DC       s:17453,PREL

      775    17453    4                    END;

  17453   2 0003B9  0F81 0006                            B        s:17460,PREL

      776    17454        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:137  
      777    17455    3               CASE (ELSE);

      778    17456    3                 T$=ADDR(NIL);

  17456   2 0003BB  DB80 0000 0000                       LAB,B5   0
          2 0003BE  DFC7 0012                            STB,B5   T$,AUTO

      779    17457        /**/
      780    17458    3               END;                        /* END DO CASE(event-id)              */

      781    17459        /**/
      782    17460    2            END;                           /* DO CASE                            */

      783    17461        /**/
      784    17462    1   XIT:    CALL SET_VAL;

  17462   2 0003C0  E3C0 0752            XIT             LNJ,B6   s:0,PREL
          2 0003C2       0001                            DC       s:17464,PREL

      785    17463        /**/
      786    17464    1           RETURN;

  17464   2 0003C3  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      787    17465    1   ALTRTN: CALL SET_VAL;

  17465   2 0003C6  E3C0 074C            ALTRTN          LNJ,B6   s:0,PREL
          2 0003C8       0001                            DC       s:17466,PREL

      788    17466    1           ALTRETURN;

  17466   2 0003C9  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      789    17467
      790    17468    1   NO_MEMORY:
      791    17469    1           CALL ERRLOG(%E$NO_MEMORY);

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:138  
  17469   2 0003CC  EBF0 00D0            NO_MEMORY       LAB,B6   208,IMO
          2 0003CE  EFC7 003C                            STB,B6   DISABLE_LEVEL+3,AUTO
          2 0003D0  E3C0 0696                            LNJ,B6   s:0,PREL
          2 0003D2       0001                            DC       s:17470,PREL

      792    17470    1           CALL KZH$DSC_LINE(KZ$HIPDEV.CTR$->KZ$HIPCTR.LIN$->KZ$LINCTX);

  17470   2 0003D3  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 0003D5  DCC6 0002                            LDB,B5   2,B6
          2 0003D7  CCC5 0004                            LDB,B4   4,B5
          2 0003D9  CFC7 0054                            STB,B4   MAXDATA+3,AUTO
          2 0003DB  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 0003DD  CBF0 0100                            LAB,B4   256,IMO
          2 0003DF  E380 0000 0000  xent                 LNJ,B6   KZH$DSC_LINE
          2 0003E2       0001                            DC       s:17471,PREL

      793    17471    1           BYTSIZ=0;

  17471   2 0003E3  8747 0026                            CL       BYTSIZ,AUTO

      794    17472    1           GOTO ALTRTN;

  17472   2 0003E5  0FE1                                 B        s:17465,SPREL

      795    17473        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:139  
      796    17474    1   SETATR: PROC;

  17474   2 0003E6  EFC7 003A            SETATR          STB,B6   DISABLE_LEVEL+1,AUTO

      797    17475    2           IF KV$GRPRND.HDN THEN

  17475   2 0003E8  82C7 0028                            LB,'4000'X        KV$GRPRND,AUTO
  17475   2 0003EA       4000
          2 0003EB  0581 0006                            BBF      s:17478,PREL

      798    17476    2              ATTR_CHAR.INTENSITY=%KZ#ATTR_HIDDEN;

  17476   2 0003ED  8947 0027                            LBT,'0C00'X       ATTR_CHAR,AUTO
  17476   2 0003EF       0C00
          2 0003F0  0F81 0017                            B        s:17483,PREL

      799    17477    2           ELSE
      800    17478    2              IF KV$GRPRND.INCINT THEN

  17478   2 0003F2  82C7 0028                            LB,'2000'X        KV$GRPRND,AUTO
  17478   2 0003F4       2000
          2 0003F5  0581 0008                            BBF      s:17481,PREL

      801    17479    2                 ATTR_CHAR.INTENSITY=%KZ#ATTR_HIGH;

  17479   2 0003F7  E870 0800                            LDR,R6   2048,IMO
          2 0003F9  EAC7 0027                            SRM,R6,'0C00'X    ATTR_CHAR,AUTO
          2 0003FB       0C00
          2 0003FC  0F81 000B                            B        s:17483,PREL

      802    17480    2              ELSE
      803    17481    2                 IF KV$GRPRND.DCRINT THEN

  17481   2 0003FE  82C7 0028                            LB,'1000'X        KV$GRPRND,AUTO
  17481   2 000400       1000
          2 000401  0581 0006                            BBF      s:17483,PREL

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:140  
      804    17482    2                    ATTR_CHAR.INTENSITY=%KZ#ATTR_LOW;

  17482   2 000403  E870 0400                            LDR,R6   1024,IMO
          2 000405  EAC7 0027                            SRM,R6,'0C00'X    ATTR_CHAR,AUTO
          2 000407       0C00

      805    17483    2           RETURN;

  17483   2 000408  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 00040A  C3C6 0001                            LNJ,B4   1,B6

      806    17484    2   END SETATR;
      807    17485        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:141  
      808    17486
      809    17487        /* KZH$CLEAR - Called from device manager to clear screen */
      810    17488
      811    17489        /*F*   NAME:   CLEAR
      812    17490              PURPOSE: To insert a clear command into the output queue.
      813    17491                       Also to send any current block to the output stream
      814    17492                       ahead of the clear.
      815    17493        */
      816    17494        /*D*   NAME:    KZH$CLEAR
      817    17495              CALL:    From KZH$HIP
      818    17496        */
      819    17497    1   KZH$CLEAR: ENTRY(PARM) ALTRET;

  17497   2 00040C  D380 0000 0000  xent KZH$CLEAR       LNJ,B5   X6A_AUTO_1
          2 00040F       005B 0001                       DC       91,1

      820    17498
      821    17499    1           DEV$=ADDR(PARM);

  17499   2 000411  ECC7 0004                            LDB,B6   @PARM,AUTO
          2 000413  EFC7 0008                            STB,B6   DEV$,AUTO

      822    17500    1           CTR$=KZ$HIPDEV.CTR$;

  17500   2 000415  DCC6 0002                            LDB,B5   2,B6
          2 000417  DFC7 000A                            STB,B5   CTR$,AUTO

      823    17501    1           LIN$=KZ$HIPCTR.LIN$;

  17501   2 000419  CCC5 0004                            LDB,B4   4,B5
          2 00041B  CFC7 000C                            STB,B4   LIN$,AUTO

      824    17502        /**/
      825    17503    1           CALL GET_VAL;

  17503   2 00041D  E3C0 06D4                            LNJ,B6   s:0,PREL
          2 00041F       0001                            DC       s:17505,PREL
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:142  

      826    17504        /**/
      827    17505    1           CALL CLEAR ALTRET(NO_MEMORY);

  17505   2 000420  E3C0 060B                            LNJ,B6   s:0,PREL
          2 000422       FFAA                            DC       s:17469,PREL

      828    17506        /**/
      829    17507    1           CALL SET_VAL;

  17507   2 000423  E3C0 06EF                            LNJ,B6   s:0,PREL
          2 000425       0001                            DC       s:17509,PREL

      830    17508        /**/
      831    17509    1           RETURN;

  17509   2 000426  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      832    17510
      833    17511        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:143  
      834    17512
      835    17513        /* KZH$CLEARIMM - Chain a clear on the head of the output queue */
      836    17514
      837    17515        /*F*      NAME:      KZH$CLEARIMM
      838    17516                  PURPOSE:   To send an erase as the next command
      839    17517        */
      840    17518
      841    17519        /*D*      NAME:      KZH$CLEARIMM
      842    17520                  CALL:      CALL KZH$CLEARIMM(KZ$HIPDEV);
      843    17521        */
      844    17522
      845    17523    1   KZH$CLEARIMM: ENTRY(PARM) ALTRET;

  17523   2 000429  D380 0000 0000  xent KZH$CLEARIMM    LNJ,B5   X6A_AUTO_1
          2 00042C       005B 0001                       DC       91,1

      846    17524
      847    17525    1           DEV$=ADDR(PARM);

  17525   2 00042E  ECC7 0004                            LDB,B6   @PARM,AUTO
          2 000430  EFC7 0008                            STB,B6   DEV$,AUTO

      848    17526    1           CTR$=KZ$HIPDEV.CTR$;

  17526   2 000432  DCC6 0002                            LDB,B5   2,B6
          2 000434  DFC7 000A                            STB,B5   CTR$,AUTO

      849    17527    1           LIN$=KZ$HIPCTR.LIN$;

  17527   2 000436  CCC5 0004                            LDB,B4   4,B5
          2 000438  CFC7 000C                            STB,B4   LIN$,AUTO

      850    17528        /**/
      851    17529        /*      PTR$=KZ$HIPDEV.VDI$->KV$VDI.ASNINPPTR$;   */
      852    17530        /**/
      853    17531    1           BFR$=ADDR(NIL);

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:144  
  17531   2 00043A  BB80 0000 0000                       LAB,B3   0
          2 00043D  BFC7 000E                            STB,B3   BFR$,AUTO

      854    17532    1           CALL CLEAR ALTRET(NO_MEMORY);

  17532   2 00043F  E3C0 05EC                            LNJ,B6   s:0,PREL
          2 000441       FF8B                            DC       s:17469,PREL

      855    17533        /*     TURN OFF RESET KEYBOARD BIT FOR THE CLEAR */
      856    17534    1           KZ$HIPDEV.KBDLCK='0'B;

  17534   2 000442  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 000444  8846 001C                            LBF,'0080'X       28,B6
          2 000446       0080

      857    17535    1           CALL DONE(%QUEUE_ON_HEAD) ALTRET(NO_MEMORY);

  17535   2 000447  DBF0 0000                            LAB,B5   0,IMO
          2 000449  DFC7 004A                            STB,B5   @ECOL3+4,AUTO
          2 00044B  E3C0 0027                            LNJ,B6   s:0,PREL
          2 00044D       FF7F                            DC       s:17469,PREL

      858    17536    1           KZ$HIPDEV.KBDLCK='1'B;

  17536   2 00044E  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 000450  8946 001C                            LBT,'0080'X       28,B6
          2 000452       0080

      859    17537        /**/
      860    17538    1           RETURN;

  17538   2 000453  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      861    17539        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:145  
      862    17540
      863    17541        /* KZH$CMPOTP - Call VDH for CMPOTP */
      864    17542
      865    17543    1   KZH$CMPOTP: ENTRY(PARM) ALTRET;

  17543   2 000456  D380 0000 0000  xent KZH$CMPOTP      LNJ,B5   X6A_AUTO_1
          2 000459       005B 0001                       DC       91,1

      866    17544
      867    17545    1           DEV$=ADDR(PARM);

  17545   2 00045B  ECC7 0004                            LDB,B6   @PARM,AUTO
          2 00045D  EFC7 0008                            STB,B6   DEV$,AUTO

      868    17546    1           CTR$=KZ$HIPDEV.CTR$;

  17546   2 00045F  DCC6 0002                            LDB,B5   2,B6
          2 000461  DFC7 000A                            STB,B5   CTR$,AUTO

      869    17547    1           LIN$=KZ$HIPCTR.LIN$;

  17547   2 000463  CCC5 0004                            LDB,B4   4,B5
          2 000465  CFC7 000C                            STB,B4   LIN$,AUTO

      870    17548        /**/
      871    17549    1           CALL GET_VAL;

  17549   2 000467  E3C0 068A                            LNJ,B6   s:0,PREL
          2 000469       0001                            DC       s:17550,PREL

      872    17550    1           CALL CMP_OTP ALTRET(NO_MEMORY);

  17550   2 00046A  E3C0 05C7                            LNJ,B6   s:0,PREL
          2 00046C       FF60                            DC       s:17469,PREL

      873    17551    1           CALL SET_VAL;

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:146  
  17551   2 00046D  E3C0 06A5                            LNJ,B6   s:0,PREL
          2 00046F       0001                            DC       s:17553,PREL

      874    17552        /**/
      875    17553    1           RETURN;

  17553   2 000470  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      876    17554
      877    17555        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:147  
      878    17556
      879    17557        /* DONE - Package up current buffer and queue it to be sent to device */
      880    17558
      881    17559        /*F*   NAME:    DONE
      882    17560               PURPOSE: To take the currently being built device output buffer
      883    17561                       for a particular HIP, and place it at the end of that
      884    17562                       devices' output queue.
      885    17563        */
      886    17564        /*D*   NAME:    DONE
      887    17565              CALL:    Via HIP handler routines
      888    17566              USES DATA STRUCTURES
      889    17567                       KZ$HIPCTX
      890    17568                       KZ$OTPBFR
      891    17569              DESCRIPTION:
      892    17570                       A call to this routine indicates that a block is ready
      893    17571                       to be send to the device. It is therefore placed at
      894    17572                       the end of the device output queue by this routine.
      895    17573        */
      896    17574
      897    17575    1   DONE:   PROC(QUEUE_ON_TAIL) ALTRET;

  17575   2 000473  EFC7 0048            DONE            STB,B6   @ECOL3+2,AUTO

      898    17576    2   DCL ADR SBIN;
      899    17577    2   DCL NRESERVE SBIN;
      900    17578    2   DCL QUEUE_ON_TAIL BIT(1) ALIGNED;
      901    17579
      902    17580    2           IF BFR$=ADDR(NIL) THEN

  17580   2 000475  8DC7 000E                            CMN      BFR$,AUTO
          2 000477  0981 0005                            BNE      s:17584,PREL

      903    17581    2              RETURN;

  17581   2 000479  ECC7 0048                            LDB,B6   @ECOL3+2,AUTO
          2 00047B  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:148  
      904    17582        /**/
      905    17583        /**/
      906    17584    3           DO SELECT(KZ$HIPCTR.TYP);

  17584   2 00047D  DCC7 000A                            LDB,B5   CTR$,AUTO
          2 00047F  E845 0008                            LDR,R6   8,B5
          2 000481  E970 1E7C                            CMR,R6   7804,IMO
          2 000483  0201 0009                            BL       s:17584+16,PREL
          2 000485  0901 000F                            BE       s:17588,PREL
          2 000487  E970 1E86                            CMR,R6   7814,IMO
          2 000489  0981 007C                            BNE      s:17602,PREL
          2 00048B  0F81 0009                            B        s:17588,PREL
          2 00048D  E970 1E14                            CMR,R6   7700,IMO
          2 00048F  0981 0076                            BNE      s:17602,PREL
          2 000491  0F81 0001                            B        s:17585,PREL

      907    17585    3              SELECT(7700);

  17585   2 000493  0F81 0072                            B        s:17602,PREL

      908    17586
      909    17587    3              SELECT(7804,7814);

      910    17588    3              ADR=KZ$HIPDEV.ADR;

  17588   2 000495  CCC7 0008                            LDB,B4   DEV$,AUTO
          2 000497  D2C4 0015                            LLH,R5   21,B4
          2 000499  DF47 004C                            STR,R5   ADR,AUTO

      911    17589    3              NRESERVE=VIP7814.STRS.BEFORE_LEN(KZ$HIPDEV.ADR);

  17589   2 00049B  B855                                 LDR,R3   R5
          2 00049C  3F12                                 MLV,R3   18
          2 00049D  C830 0000 002A  00                   LDR,R4   VIP7814,R3
          2 0004A0  CF47 004D                            STR,R4   NRESERVE,AUTO

      912    17590    3              IF (KZ$HIPDEV.ADR=0) AND (%KV_MVD.ORG~=%KV#VD_ORG_FORM)
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:149  

  17590   2 0004A2  5981 0017                            BNEZ,R5  s:17593,PREL
          2 0004A4  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          2 0004A7  ACC3 0006                            LDB,B2   6,B3
          2 0004A9  B2C2 0015                            LLH,R3   21,B2
          2 0004AB  3D04                                 CMV,R3   4
          2 0004AC  0901 000D                            BE       s:17593,PREL
          2 0004AE  9CC3 000A                            LDB,B1   10,B3
          2 0004B0  82C1 000E                            LB,'0008'X        14,B1
          2 0004B2       0008
          2 0004B3  0581 0006                            BBF      s:17593,PREL

      913    17591    3                AND (KV$PTR.SRD$->KV$SRD.SCROLL) THEN
      914    17592    3                 NRESERVE=NRESERVE+RMS_7804.N;

  17592   2 0004B5  CA00 0000 0060  00                   ADD,R4   RMS_7804
          2 0004B8  CF47 004D                            STR,R4   NRESERVE,AUTO

      915    17593    3              CALL INSERT(BFR$->BYTS,LENGTHC(KZ$HIPHEAD)+SIZEC(KZ$OTPBFR),

  17593   2 0004BA  B855                                 LDR,R3   R5
          2 0004BB  3F12                                 MLV,R3   18
          2 0004BC  A830 0000 002A  00                   LDR,R2   VIP7814,R3
          2 0004BF  AF47 0054                            STR,R2   MAXDATA+3,AUTO
          2 0004C1  AB80 0000 0000  00                   LAB,B2   KZH_BUFFER_THROTTLE
          2 0004C4  A855                                 LDR,R2   R5
          2 0004C5  2F24                                 MLV,R2   36
          2 0004C6  2E56                                 ADV,R2   86
          2 0004C7  E847 0054                            LDR,R6   MAXDATA+3,AUTO
          2 0004C9  BCC7 000E                            LDB,B3   BFR$,AUTO
          2 0004CB  3C19                                 LDV,R3   25
          2 0004CC  F854                                 LDR,R7   R4
          2 0004CD  D380 0000 0000  xent                 LNJ,B5   X6C_ALR
          2 0004D0  E847 004D                            LDR,R6   NRESERVE,AUTO
          2 0004D2  D847 0054                            LDR,R5   MAXDATA+3,AUTO
          2 0004D4  E255                                 SUB,R6   R5
          2 0004D5  EF47 0055                            STR,R6   MAXDATA+4,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:150  
          2 0004D7  6003                                 SOL,R6   3
          2 0004D8  6A81 0011                            BLEZ,R6  s:17597,PREL
          2 0004DA  AB80 0000 0061  00                   LAB,B2   RMS_7804+1
          2 0004DD  2C00                                 LDV,R2   0
          2 0004DE  E800 0000 0060  00                   LDR,R6   RMS_7804
          2 0004E1  BCC7 000E                            LDB,B3   BFR$,AUTO
          2 0004E3  B855                                 LDR,R3   R5
          2 0004E4  3E19                                 ADV,R3   25
          2 0004E5  F847 0055                            LDR,R7   MAXDATA+4,AUTO
          2 0004E7  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

      916    17594    3                NRESERVE,
      917    17595    3                SUBSTR(VIP7814.STRS.BEFORE_TEXT(ADR),0,VIP7814.STRS.BEFORE_LEN(ADR)),
      918    17596    3                SUBSTR(RMS_7804.C,0,RMS_7804.N));
      919    17597    3              CALL INSERT(BFR$->CHR1,BYTX,VIP7814.STRS.AFTER_LEN(ADR),

  17597   2 0004EA  B847 004C                            LDR,R3   ADR,AUTO
          2 0004EC  3F12                                 MLV,R3   18
          2 0004ED  E830 0000 0033  00                   LDR,R6   VIP7814+9,R3
          2 0004F0  AB80 0000 0000  00                   LAB,B2   KZH_BUFFER_THROTTLE
          2 0004F3  A847 004C                            LDR,R2   ADR,AUTO
          2 0004F5  2F24                                 MLV,R2   36
          2 0004F6  2E68                                 ADV,R2   104
          2 0004F7  BCC7 000E                            LDB,B3   BFR$,AUTO
          2 0004F9  B847 0025                            LDR,R3   BYTX,AUTO
          2 0004FB  0008                                 MMM

      920    17598    3                SUBSTR(VIP7814.STRS.AFTER_TEXT(ADR),0,VIP7814.STRS.AFTER_LEN(ADR)));
      921    17599    3              BYTX=BYTX+VIP7814.STRS.AFTER_LEN(ADR);

  17599   2 0004FC  B847 004C                            LDR,R3   ADR,AUTO
          2 0004FE  3F12                                 MLV,R3   18
          2 0004FF  E847 0025                            LDR,R6   BYTX,AUTO
          2 000501  EA30 0000 0033  00                   ADD,R6   VIP7814+9,R3
          2 000504  EF47 0025                            STR,R6   BYTX,AUTO

      922    17600    3              END /* DO SELECT ON CONTROLLER TYPE */;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:151  

      923    17601        /**/
      924    17602    2           KZ$OTPBFR.DATA_SIZ=BYTX-SIZEC(KZ$OTPBFR);

  17602   2 000506  ECC7 000E                            LDB,B6   BFR$,AUTO
          2 000508  E847 0025                            LDR,R6   BYTX,AUTO
          2 00050A  6EF0                                 ADV,R6   -16
          2 00050B  EF46 0003                            STR,R6   3,B6

      925    17603        /**/
      926    17604        /* DISABLE while mucking with items touched by dev manager */
      927    17605                %DISABLE(INHLVL=KH_INHLVL);

  17606   2 00050D  D800 0000 0000  xsym                 LDR,R5   KH_INHLVL
          2 000510  DF47 0039                            STR,R5   DISABLE_LEVEL,AUTO

  17607   2 000512  EBC7 0039                            LAB,B6   DISABLE_LEVEL,AUTO
          2 000514  EFC7 0054                            STB,B6   MAXDATA+3,AUTO
          2 000516  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 000518  CBF0 0100                            LAB,B4   256,IMO
          2 00051A  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 00051D       0001                            DC       s:17609,PREL

      928    17609    2           KZ$OTPBFR.FLAGS.CNT#='1'B;      /* DATA_SIZ added to OTPBYTES         */

  17609   2 00051E  ECC7 000E                            LDB,B6   BFR$,AUTO
          2 000520  8946 0002                            LBT,'0020'X       2,B6
          2 000522       0020

      929    17610    2           KZ$HIPDEV.OTPBYTES=KZ$HIPDEV.OTPBYTES+KZ$OTPBFR.DATA_SIZ;

  17610   2 000523  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 000525  DCC7 000E                            LDB,B5   BFR$,AUTO
          2 000527  E846 0014                            LDR,R6   20,B6
          2 000529  EA45 0003                            ADD,R6   3,B5
          2 00052B  EF46 0014                            STR,R6   20,B6

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:152  
      930    17611        /**/
      931    17612    3           IF NOT KZ$HIPDEV.ACTIVE THEN DO;

  17612   2 00052D  82C6 0012                            LB,'4000'X        18,B6
  17612   2 00052F       4000
          2 000530  0501 0033                            BBT      s:17626,PREL

      932    17613    3              KZ$OTPBFR.CMPCOD=%KV_CMPCOD_DVCERR;

  17613   2 000532  5C0D                                 LDV,R5   13
          2 000533  D7C5 0005                            STH,R5   5,B5

      933    17614    3              T$ = BFR$;     /* NIL BFR$ pointer before release buffer call

  17614   2 000535  DCC7 000E                            LDB,B5   BFR$,AUTO
          2 000537  DFC7 0012                            STB,B5   T$,AUTO

      934    17615                      to prevent looping trying to release the same buffer */
      935    17616    3              BFR$ = ADDR(NIL); %KV_VDI.OTPBFR_.ADR$ = ADDR(NIL);

  17616   2 000539  CB80 0000 0000                       LAB,B4   0
          2 00053C  CFC7 000E                            STB,B4   BFR$,AUTO

  17616   2 00053E  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          2 000541  AC83                                 LDB,B2   ,B3
          2 000542  9B80 0000 0000                       LAB,B1   0
          2 000545  9FC2 000A                            STB,B1   10,B2

      936    17617    3              CALL KZH$RELOTPBFR(KZ$HIPDEV,T$);

  17617   2 000547  DBC7 0012                            LAB,B5   T$,AUTO
          2 000549  DFC7 0056                            STB,B5   MAXDATA+5,AUTO
          2 00054B  EFC7 0054                            STB,B6   MAXDATA+3,AUTO
          2 00054D  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 00054F  CBF0 0200                            LAB,B4   512,IMO
          2 000551  E380 0000 0000  xent                 LNJ,B6   KZH$RELOTPBFR
          2 000554       0001                            DC       s:17619,PREL
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:153  

      937    17618                   %ENABLE(INHLVL=KH_INHLVL);

  17619   2 000555  E847 0039                            LDR,R6   DISABLE_LEVEL,AUTO
          2 000557  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          2 00055A  0901 00B6                            BE       s:17709,PREL

  17621   2 00055C  CBF0 0000                            LAB,B4   0,IMO
          2 00055E  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 000561       0001                            DC       s:17624,PREL

      938    17624    3              END;

  17624   2 000562  0F81 00AE                            B        s:17709,PREL

      939    17625    2           ELSE
      940    17626    3   DEVICE_IS_ACTIVE: DO;

  17626   2                              DEVICE_IS_ACTIVEnull
      941    17627        /**/
      942    17628
      943    17629        /*  Queue up the buffer onto the device's buffer chain.
      944    17630
      945    17631            If the device is not on the list of devices waiting
      946    17632            to send a block, insert the device onto the chain.
      947    17633
      948    17634        */
      949    17635    3              IF KZ$HIPDEV.OTPCNT=0 THEN

  17635   2 000564  D846 0010            DEVICE_IS_ACTIVELDR,R5   16,B6
          2 000566  5981 0005                            BNEZ,R5  s:17638,PREL

      950    17636    3                 KZ$HIPDEV.OTPHD$=BFR$;

  17636   2 000568  DFC6 0008                            STB,B5   8,B6
          2 00056A  0F81 0004                            B        s:17639,PREL

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:154  
      951    17637    3              ELSE
      952    17638    3                 KZ$HIPDEV.OTPTL$->KZ$OTPBFR.LNK$=BFR$;

  17638   2 00056C  CCC6 000A                            LDB,B4   10,B6
          2 00056E  DF84                                 STB,B5   ,B4

      953    17639    3              KZ$HIPDEV.OTPTL$=BFR$;

  17639   2 00056F  DCC7 000E                            LDB,B5   BFR$,AUTO
          2 000571  DFC6 000A                            STB,B5   10,B6

      954    17640    3              KZ$HIPDEV.OTPCNT=KZ$HIPDEV.OTPCNT+1;

  17640   2 000573  8AC6 0010                            INC      16,B6

      955    17641    3              BFR$->KZ$OTPBFR.LNK$=ADDR(NIL);

  17641   2 000575  CB80 0000 0000                       LAB,B4   0
          2 000578  BCC7 000E                            LDB,B3   BFR$,AUTO
          2 00057A  CF83                                 STB,B4   ,B3

      956    17642
      957    17643    3              IF (NOT KZ$HIPDEV.HLT) AND ( NOT KZ$HIPDEV.ONOTP) THEN

  17643   2 00057B  82C6 0012                            LB,'00FF'X        18,B6
  17643   2 00057D       00FF
          2 00057E  0501 0037                            BBT      s:17665,PREL
          2 000580  82C6 001C                            LB,'0010'X        28,B6
          2 000582       0010
          2 000583  0501 0032                            BBT      s:17665,PREL

      958    17644    4              DO; /* INSERT THIS DEVICE AS THE TAIL OF THOSE WAITING TO SEND     */

      959    17645    4                 KZ$HIPDEV.OTPLNK$=ADDR(NIL);

  17645   2 000585  DB80 0000 0000                       LAB,B5   0
          2 000588  DFC6 001D                            STB,B5   29,B6
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:155  

      960    17646    5                 IF QUEUE_ON_TAIL THEN DO;

  17646   2 00058A  CCC7 004A                            LDB,B4   @QUEUE_ON_TAIL,AUTO
          2 00058C  8984                                 CMZ      ,B4
          2 00058D  0881 0013                            BAGE     s:17654,PREL

      961    17647    5                    IF KZ$LINCTX.OTPCNT=0 THEN

  17647   2 00058F  BCC7 000C                            LDB,B3   LIN$,AUTO
          2 000591  E843 004D                            LDR,R6   77,B3
          2 000593  6981 0005                            BNEZ,R6  s:17650,PREL

      962    17648    5                       KZ$LINCTX.OTPHD$=DEV$;

  17648   2 000595  EFC3 0052                            STB,B6   82,B3
          2 000597  0F81 0005                            B        s:17651,PREL

      963    17649    5                    ELSE
      964    17650    5                       KZ$LINCTX.OTPTL$->KZ$HIPDEV.OTPLNK$=DEV$;

  17650   2 000599  ACC3 0054                            LDB,B2   84,B3
          2 00059B  EFC2 001D                            STB,B6   29,B2

      965    17651    5                    KZ$LINCTX.OTPTL$=DEV$;

  17651   2 00059D  EFC3 0054                            STB,B6   84,B3

      966    17652    5                    END;

  17652   2 00059F  0F81 0011                            B        s:17660,PREL

      967    17653    5                 ELSE DO;

      968    17654    5                    IF KZ$LINCTX.OTPCNT=0 THEN

  17654   2 0005A1  BCC7 000C                            LDB,B3   LIN$,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:156  
          2 0005A3  E843 004D                            LDR,R6   77,B3
          2 0005A5  6981 0005                            BNEZ,R6  s:17657,PREL

      969    17655    5                       KZ$LINCTX.OTPTL$=DEV$;

  17655   2 0005A7  EFC3 0054                            STB,B6   84,B3
          2 0005A9  0F81 0005                            B        s:17658,PREL

      970    17656    5                    ELSE
      971    17657    5                       DEV$->KZ$HIPDEV.OTPLNK$=KZ$LINCTX.OTPHD$;

  17657   2 0005AB  ACC3 0052                            LDB,B2   82,B3
          2 0005AD  AFC6 001D                            STB,B2   29,B6

      972    17658    5                    KZ$LINCTX.OTPHD$=DEV$;

  17658   2 0005AF  EFC3 0052                            STB,B6   82,B3

      973    17659    5                    END;

      974    17660    4                 KZ$LINCTX.OTPCNT=KZ$LINCTX.OTPCNT+1;

  17660   2 0005B1  8AC3 004D                            INC      77,B3

      975    17661    4                 KZ$HIPDEV.ONOTP='1'B;

  17661   2 0005B3  8946 001C                            LBT,'0010'X       28,B6
  17661   2 0005B5       0010

      976    17662    4                 END;

      977    17663
      978    17664        /*       CHECK TO SEE IF THE BUFFER THROTTLING LIMIT IS REACHED */
      979    17665    3              IF KZ$HIPDEV.OTPCNT>=KZH_BUFFER_THROTTLE THEN

  17665   2 0005B6  E846 0010                            LDR,R6   16,B6
          2 0005B8  E900 0000 0000  00                   CMR,R6   KZH_BUFFER_THROTTLE
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:157  
          2 0005BB  0201 001F                            BL       s:17694,PREL

      980    17666    4              DO;

      981    17667    4                 KZ$HIPDEV.THROTL='1'B;

  17667   2 0005BD  8946 0012                            LBT,'1000'X       18,B6
  17667   2 0005BF       1000

      982    17668                      %KV$RQSOTP(RQSOTP=NO);
             17674    5           IF KV$PTR.VDI$->KV$VDI.RQSOTP THEN DO;

  17674   2 0005C0  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0005C3  CC85                                 LDB,B4   ,B5
          2 0005C4  82C4 0019                            LB,'0008'X        25,B4
          2 0005C6       0008
          2 0005C7  0581 0013                            BBF      s:17694,PREL

             17675    5              KV$PTR.VDI$->KV$VDI.RQSOTP = '0'B;

  17675   2 0005C9  8844 0019                            LBF,'0008'X       25,B4
  17675   2 0005CB       0008

             17676    5              IF KV$PTR.VDI$->KV$VDI.SSNCNT>1

  17676   2 0005CC  CC85                                 LDB,B4   ,B5
          2 0005CD  E844 000E                            LDR,R6   14,B4
          2 0005CF  6D01                                 CMV,R6   1
          2 0005D0  0381 000A                            BLE      s:17694,PREL

             17677    5              THEN CALL KVV$VDI (KV_VDH_EVT_RQSOTP);

  17677   2 0005D2  BB80 0000 0002  03                   LAB,B3   +2
          2 0005D5  CBF0 0100                            LAB,B4   256,IMO
          2 0005D7  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 0005DA       0001                            DC       s:17694,PREL

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:158  
             17678    5              END;

      983    17686    4                 END;

      984    17687
      985    17688        /* While inhibited, check to see if the line protocol has
      986    17689        suspended itself because there is nothing to do on the line.
      987    17690
      988    17691        If there is such a suspension, cancel the clock and start up
      989    17692        the line protocol again.
      990    17693        */
      991    17694    3              IF LIN$->KZ$LINCTX.PRMCTBTYP=%KZ#CTBTYP_DELAY AND

  17694   2 0005DB  ECC7 000C                            LDB,B6   LIN$,AUTO
          2 0005DD  E846 000C                            LDR,R6   12,B6
          2 0005DF  E570 00FF                            AND,R6   255,IMO
          2 0005E1  6D03                                 CMV,R6   3
          2 0005E2  0981 0021                            BNE      s:17702,PREL
          2 0005E4  8DC6 0031                            CMN      49,B6
          2 0005E6  0901 001D                            BE       s:17702,PREL

      992    17695    4                LIN$->KZ$LINCTX.CTB.PRM$~=ADDR(NIL) THEN DO;

      993    17696    4                 KH$CLK=KH_CLK_RESET;

  17696   2 0005E8  AB80 0000 0071  00                   LAB,B2   KH_CLK_RESET
          2 0005EB  2C00                                 LDV,R2   0
          2 0005EC  6C16                                 LDV,R6   22
          2 0005ED  BB87                                 LAB,B3   ,AUTO
          2 0005EE  3C5A                                 LDV,R3   90
          2 0005EF  0008                                 MMM

      994    17697    4                 KH$CLK.PRD=0;

  17697   2 0005F0  8747 0037                            CL       KH$CLK+10,AUTO

      995    17698    4                 KH$CLK.CTBCTX$=LIN$->KZ$LINCTX.CTB.PRM$;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:159  

  17698   2 0005F2  ECC7 000C                            LDB,B6   LIN$,AUTO
          2 0005F4  DCC6 0031                            LDB,B5   49,B6
          2 0005F6  DFC7 002D                            STB,B5   KH$CLK,AUTO

      996    17699    4                 CALL KHC$CLOCK(KH$CLK);

  17699   2 0005F8  CBC7 002D                            LAB,B4   KH$CLK,AUTO
          2 0005FA  CFC7 0054                            STB,B4   MAXDATA+3,AUTO
          2 0005FC  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 0005FE  CBF0 0100                            LAB,B4   256,IMO
          2 000600  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          2 000603       0001                            DC       s:17702,PREL

      997    17700    4                 END;

      998    17701                   %ENABLE(INHLVL=KH_INHLVL);

  17702   2 000604  E847 0039                            LDR,R6   DISABLE_LEVEL,AUTO
          2 000606  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          2 000609  0901 0007                            BE       s:17709,PREL

  17704   2 00060B  CBF0 0000                            LAB,B4   0,IMO
          2 00060D  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 000610       0001                            DC       s:17709,PREL

      999    17707    3              END DEVICE_IS_ACTIVE;

     1000    17708        /**/
     1001    17709    2           BFR$=ADDR(NIL);

  17709   2 000611  EB80 0000 0000                       LAB,B6   0
          2 000614  EFC7 000E                            STB,B6   BFR$,AUTO

     1002    17710    2           BYTX=0;

  17710   2 000616  8747 0025                            CL       BYTX,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:160  

     1003    17711    2           BYTSIZ=0;

  17711   2 000618  8747 0026                            CL       BYTSIZ,AUTO

     1004    17712        /**/
     1005    17713    2           RETURN;

  17713   2 00061A  ECC7 0048                            LDB,B6   @ECOL3+2,AUTO
          2 00061C  C3C6 0001                            LNJ,B4   1,B6

     1006    17714
     1007    17715    2   END DONE;
     1008    17716
     1009    17717        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:161  
     1010    17718
     1011    17719        /* INITBFR - Build and initialize a new output buffer */
     1012    17720
     1013    17721        /*F*  NAME:    INITBFR
     1014    17722              PURPOSE: To get a chunck of system memory, apply a KZ$OTPBFR
     1015    17723                       header on it then attach the buffer to the device
     1016    17724                       context block based by BREG 1.
     1017    17725        */
     1018    17726        /*D*  NAME:    INITBFR
     1019    17727              CALL:    From DONE,CHK_BFR_SIZE AND CLEAR
     1020    17728              USES DATA STRUCTURES
     1021    17729                       KZ$HIPCTX
     1022    17730                       KZ$OTPBFR
     1023    17731              INPUT:   Address of device context block (B1)
     1024    17732                       A row/col position for the Set Buffer Address command
     1025    17733                       that is inserted at the beginning of the buffer.(R2)
     1026    17734              DESCRIPTION:
     1027    17735                       This routine will get an output buffer and initialize
     1028    17736                       it with header information and attache it to the
     1029    17737                       device context block.
     1030    17738        */
     1031    17739    1   INITBFR:PROC(POWER2) ALTRET;

  17739   2 00061E  EFC7 0048            INITBFR         STB,B6   @ECOL3+2,AUTO

     1032    17740
     1033    17741    2   DCL POWER2 SBIN;
     1034    17742    2   DCL NRESERVE SBIN;
     1035    17743
     1036    17744    2           IF ADDR(POWER2)~=ADDR(NIL) THEN

  17744   2 000620  DCC7 004A                            LDB,B5   @POWER2,AUTO
          2 000622  8DD5                                 CMN      B5
          2 000623  0901 0006                            BE       s:17746,PREL

     1037    17745    2              SZX=POWER2;

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:162  
  17745   2 000625  E805                                 LDR,R6   ,B5
          2 000626  EF47 001F                            STR,R6   SZX,AUTO
          2 000628  0F81 0013                            B        s:17750,PREL

     1038    17746    2           ELSE IF KZ$HIPDEV.PRINTER THEN

  17746   2 00062A  CCC7 0008                            LDB,B4   DEV$,AUTO
          2 00062C  82C4 0012                            LB,'0800'X        18,B4
          2 00062E       0800
          2 00062F  0581 0007                            BBF      s:17748,PREL

     1039    17747    2                 SZX=KZ$HIPDEV.OTPBFRSIZ;  /* MAX ALLOWED                        */

  17747   2 000631  E844 001A                            LDR,R6   26,B4
          2 000633  EF47 001F                            STR,R6   SZX,AUTO
          2 000635  0F81 0006                            B        s:17750,PREL

     1040    17748    2              ELSE SZX=KZH_INITBFR_SIZE;   /* DEFAULT FOR TUBES                  */

  17748   2 000637  E800 0000 0080  00                   LDR,R6   KZH_INITBFR_SIZE
          2 00063A  EF47 001F                            STR,R6   SZX,AUTO

     1041    17749
     1042    17750    3           DO WHILE(SZX > 0);

  17750   2 00063C  6A81 0065                            BLEZ,R6  s:17775,PREL

     1043    17751    3              SZ=KZ_HIP_BFRSIZ(SZX);       /* Size of buffer in words            */

  17751   2 00063E  B847 001F                            LDR,R3   SZX,AUTO
          2 000640  E830 0000 0021  00                   LDR,R6   KZ_HIP_BFRSIZ,R3
          2 000643  EF47 001E                            STR,R6   SZ,AUTO

     1044    17752                   %DISABLE(INHLVL=KH_INHLVL);

  17753   2 000645  D800 0000 0000  xsym                 LDR,R5   KH_INHLVL
          2 000648  DF47 0039                            STR,R5   DISABLE_LEVEL,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:163  

  17754   2 00064A  EBC7 0039                            LAB,B6   DISABLE_LEVEL,AUTO
          2 00064C  EFC7 0054                            STB,B6   MAXDATA+3,AUTO
          2 00064E  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 000650  CBF0 0100                            LAB,B4   256,IMO
          2 000652  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 000655       0001                            DC       s:17756,PREL

     1045    17756    3              CALL KVB$GETSYS(SZ,TBFR$) ALTRET(NOBFR);

  17756   2 000656  EBC7 0010                            LAB,B6   TBFR$,AUTO
          2 000658  EFC7 0056                            STB,B6   MAXDATA+5,AUTO
          2 00065A  DBC7 001E                            LAB,B5   SZ,AUTO
          2 00065C  DFC7 0054                            STB,B5   MAXDATA+3,AUTO
          2 00065E  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 000660  CBF0 0200                            LAB,B4   512,IMO
          2 000662  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          2 000665       002A                            DC       s:17768,PREL

     1046    17757                   %ENABLE(INHLVL=KH_INHLVL);

  17758   2 000666  E847 0039                            LDR,R6   DISABLE_LEVEL,AUTO
          2 000668  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          2 00066B  0901 0007                            BE       s:17763,PREL

  17760   2 00066D  CBF0 0000                            LAB,B4   0,IMO
          2 00066F  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 000672       0001                            DC       s:17763,PREL

     1047    17763    3              KZ@HIPSTT.OTPBFRSIZ(SZX) = KZ@HIPSTT.OTPBFRSIZ(SZX)+1;

  17763   2 000673  EC80 0000 0006  xsym                 LDB,B6   KZ_HIP_HDR+6
          2 000676  B847 001F                            LDR,R3   SZX,AUTO
          2 000678  3E41                                 ADV,R3   65
          2 000679  BF47 0054                            STR,R3   MAXDATA+3,AUTO
          2 00067B  3001                                 SOL,R3   1
          2 00067C  3E01                                 ADV,R3   1
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:164  
          2 00067D  A847 0054                            LDR,R2   MAXDATA+3,AUTO
          2 00067F  2001                                 SOL,R2   1
          2 000680  8AB6                                 INC      ,B6,R3
          2 000681  8EA6                                 CAD      ,B6,R2

     1048    17764    3              KZ@HIPSTT.KHSTT.OTPBFRBYTUTL = KZ@HIPSTT.KHSTT.OTPBFRBYTUTL+SZ*2;

  17764   2 000682  EC80 0000 0006  xsym                 LDB,B6   KZ_HIP_HDR+6
          2 000685  E847 001E                            LDR,R6   SZ,AUTO
          2 000687  70F0                                 DAR,R7   16
          2 000688  7081                                 DOL,R7   1
          2 000689  8446 001E                            AID      30,B6
          2 00068B  8D46 001E                            SDI      30,B6

     1049    17765    3              GOTO GOTBFR;

  17765   2 00068D  0F81 0018                            B        s:17777,PREL

     1050    17766    3   NOBFR:
     1051    17767                   %ENABLE(INHLVL=KH_INHLVL);

  17768   2 00068F  E847 0039            NOBFR           LDR,R6   DISABLE_LEVEL,AUTO
          2 000691  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          2 000694  0901 0007                            BE       s:17773,PREL

  17770   2 000696  CBF0 0000                            LAB,B4   0,IMO
          2 000698  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 00069B       0001                            DC       s:17773,PREL

     1052    17773    3              SZX = SZX -1;

  17773   2 00069C  88C7 001F                            DEC      SZX,AUTO

     1053    17774    3              END;

  17774   2 00069E  E847 001F                            LDR,R6   SZX,AUTO
          2 0006A0  6A01 FF9D                            BGZ,R6   s:17751,PREL
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:165  

     1054    17775    2           ALTRETURN;

  17775   2 0006A2  ECC7 0048                            LDB,B6   @ECOL3+2,AUTO
          2 0006A4  B806                                 LDR,R3   ,B6
          2 0006A5  C3B6                                 LNJ,B4   ,B6,R3

     1055    17776    2   GOTBFR:
     1056    17777    2           BFR$ = TBFR$;

  17777   2 0006A6  DCC7 0010            GOTBFR          LDB,B5   TBFR$,AUTO
          2 0006A8  DFC7 000E                            STB,B5   BFR$,AUTO
          2 0006AA  0F81 0003                            B        s:17787,PREL

     1057    17778    2   INITBUFHDR: ENTRY ALTRET;

  17778   2 0006AC  EFC7 0048            INITBUFHDR      STB,B6   @ECOL3+2,AUTO

     1058    17779        /*
     1059    17780              This entry supplied so that buffers may be created in other areas
     1060    17781              of the KZH module, and still be initialized with VDH and header
     1061    17782              info here. Called after PRINTER data has been transfered from
     1062    17783              one buffer to a new buffer.
     1063    17784
     1064    17785              INIT  BUFFER  HEADER WITH FLAGS AND POINTERS.
     1065    17786        */
     1066    17787    2           KZ$OTPBFR=KZ_OTPBFR;

  17787   2 0006AE  AB80 0000 0069  00                   LAB,B2   KZ_OTPBFR
          2 0006B1  2C00                                 LDV,R2   0
          2 0006B2  6C10                                 LDV,R6   16
          2 0006B3  BCC7 000E                            LDB,B3   BFR$,AUTO
          2 0006B5  3C00                                 LDV,R3   0
          2 0006B6  0008                                 MMM

     1067    17788    2           KZ$OTPBFR.BFRSIZ = SZX;

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:166  
  17788   2 0006B7  ECC7 000E                            LDB,B6   BFR$,AUTO
          2 0006B9  E847 001F                            LDR,R6   SZX,AUTO
          2 0006BB  EF46 0004                            STR,R6   4,B6

     1068    17789    2           KZ$OTPBFR.FLAGS.FIRST#='1'B;

  17789   2 0006BD  ECC7 000E                            LDB,B6   BFR$,AUTO
          2 0006BF  8946 0002                            LBT,'0080'X       2,B6
          2 0006C1       0080

     1069    17790    2           KZ$OTPBFR.FLAGS.LAST#='1'B;

  17790   2 0006C2  ECC7 000E                            LDB,B6   BFR$,AUTO
          2 0006C4  8946 0002                            LBT,'0040'X       2,B6
          2 0006C6       0040

     1070    17791    2           KZ$OTPBFR.DEV$=ADDR(KZ$HIPDEV);

  17791   2 0006C7  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 0006C9  DCC7 000E                            LDB,B5   BFR$,AUTO
          2 0006CB  EFC5 0006                            STB,B6   6,B5

     1071    17792
     1072    17793        /*       SET BYTX,BYTSIZ TO ACCOUNT FOR HIP HEADER,TRAILER */
     1073    17794
     1074    17795    2           BYTX=SIZEC(KZ$OTPBFR)+LENGTHC(KZ$HIPHEAD);

  17795   2 0006CD  5C19                                 LDV,R5   25
          2 0006CE  DF47 0025                            STR,R5   BYTX,AUTO

     1075    17796    2           BYTSIZ = (SZ*2)-(LENGTHC(KZ$HIPHEAD)+LENGTHC(KZ$HIPTAIL)+SIZEC(KZ$OTPBFR));

  17796   2 0006D0  C847 001E                            LDR,R4   SZ,AUTO
          2 0006D2  4001                                 SOL,R4   1
          2 0006D3  4EE2                                 ADV,R4   -30
          2 0006D4  CF47 0026                            STR,R4   BYTSIZ,AUTO

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:167  
     1076    17797
     1077    17798    3           DO SELECT(KZ$HIPCTR.TYP);

  17798   2 0006D6  DCC7 000A                            LDB,B5   CTR$,AUTO
          2 0006D8  B845 0008                            LDR,R3   8,B5
          2 0006DA  B970 1E7C                            CMR,R3   7804,IMO
          2 0006DC  0201 0009                            BL       s:17798+16,PREL
          2 0006DE  0901 0014                            BE       s:17802,PREL
          2 0006E0  B970 1E86                            CMR,R3   7814,IMO
          2 0006E2  0981 004D                            BNE      s:17809,PREL
          2 0006E4  0F81 000E                            B        s:17802,PREL
          2 0006E6  B970 1E14                            CMR,R3   7700,IMO
          2 0006E8  0981 0047                            BNE      s:17809,PREL
          2 0006EA  0F81 0001                            B        s:17800,PREL

     1078    17799    3              SELECT(7700);

     1079    17800    3              T$=ADDR(NIL);

  17800   2 0006EC  CB80 0000 0000                       LAB,B4   0
          2 0006EF  CFC7 0012                            STB,B4   T$,AUTO
          2 0006F1  0F81 0043                            B        s:17811,PREL

     1080    17801    3              SELECT(7804,7814);

     1081    17802    3              NRESERVE=VIP7814.STRS.BEFORE_LEN(KZ$HIPDEV.ADR);

  17802   2 0006F3  A2C6 0015                            LLH,R2   21,B6
          2 0006F5  2F12                                 MLV,R2   18
          2 0006F6  9820 0000 002A  00                   LDR,R1   VIP7814,R2
          2 0006F9  9F47 004C                            STR,R1   NRESERVE,AUTO

     1082    17803    3              IF (KZ$HIPDEV.ADR=0) AND (%KV_MVD.ORG~=%KV#VD_ORG_FORM) AND

  17803   2 0006FB  A2C6 0015                            LLH,R2   21,B6
          2 0006FD  2981 0017                            BNEZ,R2  s:17806,PREL
          2 0006FF  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:168  
          2 000702  BCC4 0006                            LDB,B3   6,B4
          2 000704  E2C3 0015                            LLH,R6   21,B3
          2 000706  6D04                                 CMV,R6   4
          2 000707  0901 000D                            BE       s:17806,PREL
          2 000709  ACC4 000A                            LDB,B2   10,B4
          2 00070B  82C2 000E                            LB,'0008'X        14,B2
          2 00070D       0008
          2 00070E  0581 0006                            BBF      s:17806,PREL

     1083    17804    3                (KV$PTR.SRD$->KV$SRD.SCROLL) THEN
     1084    17805    3                 NRESERVE=NRESERVE+RMS_7804.N;

  17805   2 000710  9A00 0000 0060  00                   ADD,R1   RMS_7804
          2 000713  9F47 004C                            STR,R1   NRESERVE,AUTO

     1085    17806    3              BYTX=BYTX+NRESERVE;

  17806   2 000715  DA51                                 ADD,R5   R1
          2 000716  DF47 0025                            STR,R5   BYTX,AUTO

     1086    17807    3              BYTSIZ=BYTSIZ-VIP7814.STRS.BEFORE_LEN(KZ$HIPDEV.ADR)-VIP7814.STRS.
             17807                       AFTER_LEN(KZ$HIPDEV.ADR);

  17807   2 000718  AF47 0054                            STR,R2   MAXDATA+3,AUTO
          2 00071A  2F12                                 MLV,R2   18
          2 00071B  B847 0054                            LDR,R3   MAXDATA+3,AUTO
          2 00071D  3F12                                 MLV,R3   18
          2 00071E  C230 0000 002A  00                   SUB,R4   VIP7814,R3
          2 000721  A2C6 0015                            LLH,R2   21,B6
          2 000723  AF47 0055                            STR,R2   MAXDATA+4,AUTO
          2 000725  2F12                                 MLV,R2   18
          2 000726  A847 0055                            LDR,R2   MAXDATA+4,AUTO
          2 000728  2F12                                 MLV,R2   18
          2 000729  C220 0000 0033  00                   SUB,R4   VIP7814+9,R2
          2 00072C  CF47 0026                            STR,R4   BYTSIZ,AUTO
          2 00072E  0F81 0006                            B        s:17811,PREL

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:169  
     1087    17808    3              SELECT(ELSE);

     1088    17809    3           T$=ADDR(NIL);

  17809   2 000730  CB80 0000 0000                       LAB,B4   0
          2 000733  CFC7 0012                            STB,B4   T$,AUTO

     1089    17810    3              END /*DO SELECT */;

     1090    17811    2           CALL FIT_BLKBYTES;

  17811   2 000735  E3C0 0006                            LNJ,B6   s:0,PREL
          2 000737       0001                            DC       s:17812,PREL

     1091    17812    2   END INITBFR;

  17812   2 000738  ECC7 0048                            LDB,B6   @ECOL3+2,AUTO
          2 00073A  C3C6 0001                            LNJ,B4   1,B6

     1092    17813
     1093    17814
     1094    17815    1   FIT_BLKBYTES:PROC;

  17815   2 00073C  EFC7 004E            FIT_BLKBYTES    STB,B6   NRESERVE+1,AUTO

     1095    17816    2   DCL CURBYTES SBIN;
     1096    17817    2   DCL MAXDATA SBIN;
     1097    17818
     1098    17819        /* A new buffer has just been acquired, or an old
     1099    17820           buffer has just been expanded. Make sure the active
     1100    17821           region of the buffer does not overflow the profile
     1101    17822           specified blocking buffer size.
     1102    17823        */
     1103    17824
     1104    17825    2           CURBYTES=BYTX-SIZEC(KZ$OTPBFR)-LENGTHC(KZ$HIPHEAD);

  17825   2 00073E  E847 0025                            LDR,R6   BYTX,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:170  
          2 000740  6EE7                                 ADV,R6   -25
          2 000741  EF47 0050                            STR,R6   CURBYTES,AUTO

     1105    17826    2           MAXDATA=KZ$LINCTX.PRO.BLKBYTES;

  17826   2 000743  DCC7 000C                            LDB,B5   LIN$,AUTO
          2 000745  D845 003C                            LDR,R5   60,B5
          2 000747  DF47 0051                            STR,R5   MAXDATA,AUTO

     1106    17827
     1107    17828    2           IF (CURBYTES+BYTSIZ)>MAXDATA THEN

  17828   2 000749  EA47 0026                            ADD,R6   BYTSIZ,AUTO
          2 00074B  E955                                 CMR,R6   R5
          2 00074C  0A81 0005                            BALE     s:17830,PREL

     1108    17829    2              BYTSIZ=MAXDATA-CURBYTES;

  17829   2 00074E  D247 0050                            SUB,R5   CURBYTES,AUTO
          2 000750  DF47 0026                            STR,R5   BYTSIZ,AUTO

     1109    17830    2   END FIT_BLKBYTES;

  17830   2 000752  ECC7 004E                            LDB,B6   NRESERVE+1,AUTO
          2 000754  C3C6 0001                            LNJ,B4   1,B6

     1110    17831        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:171  
     1111    17832
     1112    17833        /* CHK_BFR_SIZ - Make sure there is enough room in buffer */
     1113    17834
     1114    17835        /*F*  NAME:    CHK_BFR_SIZE
     1115    17836              PURPOSE: To look at the affect that the current call will have
     1116    17837                       on the current output buffer and decide if any buffer
     1117    17838                       size modifications are in order.
     1118    17839        */
     1119    17840        /*D*  NAME:    CHK_BFR_SIZE
     1120    17841              CALL:    From ATTR,ATTRIC,CLEAR
     1121    17842              USES DATA STRUCTURES
     1122    17843                       KZ$HIPCTX
     1123    17844                       KZ$OTPBFR
     1124    17845              INPUT:   Address of device context block (B1)
     1125    17846                       No. of bytes the buffer will grow (R2)
     1126    17847              DESCRIPTION:
     1127    17848                       A call to this routine will check the size that this
     1128    17849                       buffer will grow after current data is added, and
     1129    17850                       create a bigger buffer if needed. Then copy the
     1130    17851                       old buffer into the new before executing the current
     1131    17852                       command (TEXT,ATTRIBUTE,CURSOR, or CLEAR).
     1132    17853        */
     1133    17854    1   CHK_BFR_SIZ: PROC(SIZ) ALTRET;

  17854   2 000756  EFC7 003A            CHK_BFR_SIZ     STB,B6   DISABLE_LEVEL+1,AUTO

     1134    17855        /**/
     1135    17856    2   DCL SIZ UBIN;
     1136    17857    2   DCL J UBIN;
     1137    17858    2   DCL ENTR_FLG UBIN;
     1138    17859    2   DCL CURCONTENTS CHAR(CURBYTES) BASED CALIGNED;
     1139    17860    2   DCL CURBYTES SBIN;
     1140    17861    2   DCL CURWORDS SBIN;
     1141    17862    2   DCL MARKCONTENTS CHAR(MARKBYTES) CALIGNED BASED;
     1142    17863    2   DCL MARKBYTES SBIN;
     1143    17864    2   DCL NEWBYTES SBIN;
     1144    17865    2   DCL NEWWORDS SBIN;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:172  
     1145    17866    2   DCL NEWPOWER2 SBIN;
     1146    17867    2   DCL PRODEVMAX SBIN;
     1147    17868
     1148    17869    2           IF BYTSIZ >= SIZ THEN

  17869   2 000758  DCC7 003C                            LDB,B5   @SIZ,AUTO
          2 00075A  E847 0026                            LDR,R6   BYTSIZ,AUTO
          2 00075C  E905                                 CMR,R6   ,B5
          2 00075D  0201 0005                            BL       s:17871,PREL

     1149    17870    2              RETURN;

  17870   2 00075F  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000761  C3C6 0001                            LNJ,B4   1,B6

     1150    17871    2           NEWBYTES=SIZ;

  17871   2 000763  D805                                 LDR,R5   ,B5
          2 000764  DF47 0043                            STR,R5   NEWBYTES,AUTO

     1151    17872    2           GOTO COMMON_EXPANSION;

  17872   2 000766  0F81 001B                            B        s:17876,PREL

     1152    17873
     1153    17874        /*  ENTRY TO DOUBLE SIZE OF EXISTING BUFFER */
     1154    17875    2   EXP_BFR:ENTRY(SIZ) ALTRET;

  17875   2 000768  EFC7 003A            EXP_BFR         STB,B6   DISABLE_LEVEL+1,AUTO

     1155    17876    2           IF BFR$~=ADDR(NIL) THEN

  17876   2 00076A  8DC7 000E                            CMN      BFR$,AUTO
          2 00076C  0901 000D                            BE       s:17878,PREL

     1156    17877    2              NEWBYTES=KZ_HIP_BFRSIZ(KZ$OTPBFR.BFRSIZ)*2;

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:173  
  17877   2 00076E  DCC7 000E                            LDB,B5   BFR$,AUTO
          2 000770  B845 0004                            LDR,R3   4,B5
          2 000772  E830 0000 0021  00                   LDR,R6   KZ_HIP_BFRSIZ,R3
          2 000775  6001                                 SOL,R6   1
          2 000776  EF47 0043                            STR,R6   NEWBYTES,AUTO
          2 000778  0F81 0009                            B        s:17876,PREL

     1157    17878    2           ELSE NEWBYTES=KZ_HIP_BFRSIZ(KZH_INITBFR_SIZE);

  17878   2 00077A  B800 0000 0080  00                   LDR,R3   KZH_INITBFR_SIZE
          2 00077D  E830 0000 0021  00                   LDR,R6   KZ_HIP_BFRSIZ,R3
          2 000780  EF47 0043                            STR,R6   NEWBYTES,AUTO

  17876   2                              COMMON_EXPANSIONnull
     1158    17879
     1159    17880    2   COMMON_EXPANSION:;
     1160    17881    2           NEWWORDS=NEWBYTES/2;

  17881   2 000782  E847 0043            COMMON_EXPANSIONLDR,R6   NEWBYTES,AUTO
          2 000784  E370 0002                            DIV,R6   2,IMO
          2 000786  EF47 0044                            STR,R6   NEWWORDS,AUTO

     1161    17882
     1162    17883    2           IF BFR$~=ADDR(NIL) THEN

  17883   2 000788  8DC7 000E                            CMN      BFR$,AUTO
          2 00078A  0901 016E                            BE       s:17964,PREL

     1163    17884    3   TEST_EXPAND_CURRENT: DO;

  17884   2                              TEST_EXPAND_CUR*null
     1164    17885    3              PRODEVMAX=KZ$LINCTX.PRO.BLKBYTES;

  17885   2 00078C  DCC7 000C            TEST_EXPAND_CUR*LDB,B5   LIN$,AUTO
          2 00078E  D845 003C                            LDR,R5   60,B5
          2 000790  DF47 0046                            STR,R5   PRODEVMAX,AUTO

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:174  
     1165    17886    4              DO SELECT(KZ$HIPCTR.TYP);

  17886   2 000792  CCC7 000A                            LDB,B4   CTR$,AUTO
          2 000794  C844 0008                            LDR,R4   8,B4
          2 000796  C970 1E14                            CMR,R4   7700,IMO
          2 000798  0201 001B                            BL       s:17893,PREL
          2 00079A  0901 0007                            BE       s:17888,PREL
          2 00079C  C970 1E7C                            CMR,R4   7804,IMO
          2 00079E  0981 0015                            BNE      s:17893,PREL
          2 0007A0  0F81 000B                            B        s:17890,PREL

     1166    17887    4                 SELECT(7700);

     1167    17888    4                 PRODEVMAX=MINIMUM(1920,PRODEVMAX);

  17888   2 0007A2  D970 0780                            CMR,R5   1920,IMO
          2 0007A4  0A81 0003                            BALE     s:17888+6,PREL
          2 0007A6  D870 0780                            LDR,R5   1920,IMO
          2 0007A8  DF47 0046                            STR,R5   PRODEVMAX,AUTO
          2 0007AA  0F81 0009                            B        s:17893,PREL

     1168    17889    4                 SELECT(7804);
             17889              /* CHANGE THIS WHEN SUPER IS CHANGED: 7814's allow 2048, 7804's allow 1024 */

     1169    17890    4                 PRODEVMAX=MINIMUM(2048,PRODEVMAX);

  17890   2 0007AC  D970 0800                            CMR,R5   2048,IMO
          2 0007AE  0A81 0003                            BALE     s:17890+6,PREL
          2 0007B0  D870 0800                            LDR,R5   2048,IMO
          2 0007B2  DF47 0046                            STR,R5   PRODEVMAX,AUTO

     1170    17891    4                 END;

     1171    17892
     1172    17893    3              CURWORDS=KZ_HIP_BFRSIZ(KZ$OTPBFR.BFRSIZ);

  17893   2 0007B4  BCC7 000E                            LDB,B3   BFR$,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:175  
          2 0007B6  B843 0004                            LDR,R3   4,B3
          2 0007B8  A830 0000 0021  00                   LDR,R2   KZ_HIP_BFRSIZ,R3
          2 0007BB  AF47 0041                            STR,R2   CURWORDS,AUTO

     1173    17894    3              CURBYTES=CURWORDS*2;

  17894   2 0007BD  2001                                 SOL,R2   1
          2 0007BE  AF47 0040                            STR,R2   CURBYTES,AUTO

     1174    17895    3              IF CURBYTES+NEWBYTES<PRODEVMAX THEN

  17895   2 0007C0  AA47 0043                            ADD,R2   NEWBYTES,AUTO
          2 0007C2  A955                                 CMR,R2   R5
          2 0007C3  0881 0135                            BAGE     s:17964,PREL

     1175    17896    4   EXPANDED_BUFFER_FITS:DO;

  17896   2                              EXPANDED_BUFFER*null
     1176    17897
     1177    17898        /*  TRY TO GET NEW BUFFER OF REQUIRED SIZE. IF CAN'T GET ONE,
     1178    17899            THEN FLUSH THE CURRENT BUFFER. */
     1179    17900
     1180    17901    4                 NEWPOWER2=KZH_INITBFR_SIZE;

  17901   2 0007C5  C800 0000 0080  00   EXPANDED_BUFFER*LDR,R4   KZH_INITBFR_SIZE
          2 0007C8  CF47 0045                            STR,R4   NEWPOWER2,AUTO

     1181    17902    5                 DO WHILE (NEWPOWER2< KZ$HIPDEV.OTPBFRSIZ);

  17902   2 0007CA  ACC7 0008                            LDB,B2   DEV$,AUTO
          2 0007CC  4801 0005                            BLZ,R4   s:17903,PREL
          2 0007CE  C942 001A                            CMR,R4   26,B2
          2 0007D0  0281 0018                            BGE      s:17907,PREL

     1182    17903    5                    IF KZ_HIP_BFRSIZ(NEWPOWER2)>=CURWORDS+NEWWORDS THEN

  17903   2 0007D2  E847 0041                            LDR,R6   CURWORDS,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:176  
          2 0007D4  EA47 0044                            ADD,R6   NEWWORDS,AUTO
          2 0007D6  B847 0045                            LDR,R3   NEWPOWER2,AUTO
          2 0007D8  6801 0010                            BLZ,R6   s:17907,PREL
          2 0007DA  E930 0000 0021  00                   CMR,R6   KZ_HIP_BFRSIZ,R3
          2 0007DD  0381 000B                            BLE      s:17907,PREL

     1183    17904    5                       EXIT;
     1184    17905    5                    ELSE NEWPOWER2=NEWPOWER2+1;

  17905   2 0007DF  8AC7 0045                            INC      NEWPOWER2,AUTO

     1185    17906    5                    END;

  17906   2 0007E1  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 0007E3  E847 0045                            LDR,R6   NEWPOWER2,AUTO
          2 0007E5  686D                                 BLZ,R6   s:17903,SPREL
          2 0007E6  E946 001A                            CMR,R6   26,B6
          2 0007E8  026A                                 BL       s:17903,SPREL

     1186    17907    4                 IF NEWPOWER2<=KZ$HIPDEV.OTPBFRSIZ THEN

  17907   2 0007E9  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 0007EB  E847 0045                            LDR,R6   NEWPOWER2,AUTO
          2 0007ED  6801 0005                            BLZ,R6   s:17908,PREL
          2 0007EF  E946 001A                            CMR,R6   26,B6
          2 0007F1  0301 0107                            BG       s:17964,PREL

     1187    17908    5   FOUND_RIGHT_SIZE:DO;

  17908   2                              FOUND_RIGHT_SIZEnull
     1188    17909    5                    J=KZ_HIP_BFRSIZ(NEWPOWER2); /* BUFFER THAT FITS              */

  17909   2 0007F3  B856                 FOUND_RIGHT_SIZELDR,R3   R6
          2 0007F4  D830 0000 0021  00                   LDR,R5   KZ_HIP_BFRSIZ,R3
          2 0007F7  DF47 003E                            STR,R5   J,AUTO

     1189    17910                         %DISABLE(INHLVL=KH_INHLVL);
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:177  

  17911   2 0007F9  C800 0000 0000  xsym                 LDR,R4   KH_INHLVL
          2 0007FC  CF47 0039                            STR,R4   DISABLE_LEVEL,AUTO

  17912   2 0007FE  DBC7 0039                            LAB,B5   DISABLE_LEVEL,AUTO
          2 000800  DFC7 0054                            STB,B5   MAXDATA+3,AUTO
          2 000802  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 000804  CBF0 0100                            LAB,B4   256,IMO
          2 000806  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 000809       0001                            DC       s:17914,PREL

     1190    17914    5                    CALL KVB$GETSYS(J, TBFR$)

  17914   2 00080A  EBC7 0010                            LAB,B6   TBFR$,AUTO
          2 00080C  EFC7 0056                            STB,B6   MAXDATA+5,AUTO
          2 00080E  DBC7 003E                            LAB,B5   J,AUTO
          2 000810  DFC7 0054                            STB,B5   MAXDATA+3,AUTO
          2 000812  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 000814  CBF0 0200                            LAB,B4   512,IMO
          2 000816  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          2 000819       0003                            DC       s:17918,PREL
          2 00081A  0F81 0010                            B        s:17926,PREL

     1191    17915    5                    WHENALTRETURN
     1192    17916    6                    DO;

     1193    17917                            %ENABLE(INHLVL=KH_INHLVL);

  17918   2 00081C  E847 0039                            LDR,R6   DISABLE_LEVEL,AUTO
          2 00081E  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          2 000821  0901 0007                            BE       s:17923,PREL

  17920   2 000823  CBF0 0000                            LAB,B4   0,IMO
          2 000825  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 000828       0001                            DC       s:17923,PREL

     1194    17923    6                       GOTO NEW_BFR;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:178  

  17923   2 000829  0F81 00CF                            B        s:17964,PREL

     1195    17924    6                       END;
     1196    17925                         %ENABLE(INHLVL=KH_INHLVL);

  17926   2 00082B  E847 0039                            LDR,R6   DISABLE_LEVEL,AUTO
          2 00082D  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          2 000830  0901 0007                            BE       s:17931,PREL

  17928   2 000832  CBF0 0000                            LAB,B4   0,IMO
          2 000834  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 000837       0001                            DC       s:17931,PREL

     1197    17931    5                    KZ@HIPSTT.KHSTT.OTPBFRBYTUTL = KZ@HIPSTT.KHSTT.OTPBFRBYTUTL+2*J-
             17931                             CURBYTES;

  17931   2 000838  EC80 0000 0006  xsym                 LDB,B6   KZ_HIP_HDR+6
          2 00083B  F847 003E                            LDR,R7   J,AUTO
          2 00083D  6C00                                 LDV,R6   0
          2 00083E  7081                                 DOL,R7   1
          2 00083F  8446 001E                            AID      30,B6
          2 000841  8D47 0054                            SDI      MAXDATA+3,AUTO
          2 000843  E847 0040                            LDR,R6   CURBYTES,AUTO
          2 000845  70F0                                 DAR,R7   16
          2 000846  84C7 0054                            SID      MAXDATA+3,AUTO
          2 000848  8656                                 CPL      R6
          2 000849  8657                                 CPL      R7
          2 00084A  8470 0000 0001                       AID      1,IMO
          2 00084D  8D46 001E                            SDI      30,B6

     1198    17932    5                   KZ@HIPSTT.OTPBFRSIZ(KZ$OTPBFR.BFRSIZ)=KZ@HIPSTT.OTPBFRSIZ(KZ$OTPBFR
             17932                             .BFRSIZ)-1;

  17932   2 00084F  DCC7 000E                            LDB,B5   BFR$,AUTO
          2 000851  B845 0004                            LDR,R3   4,B5
          2 000853  BF47 0054                            STR,R3   MAXDATA+3,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:179  
          2 000855  3E41                                 ADV,R3   65
          2 000856  8CB6                                 LDI      ,B6,R3
          2 000857  8470 FFFF FFFF                       AID      -1,IMO
          2 00085A  B847 0054                            LDR,R3   MAXDATA+3,AUTO
          2 00085C  3E41                                 ADV,R3   65
          2 00085D  8D36                                 SDI      ,B6,R3

     1199    17933    5                    KZ@HIPSTT.OTPBFRSIZ(NEWPOWER2)=KZ@HIPSTT.OTPBFRSIZ(NEWPOWER2)+1;

  17933   2 00085E  EC80 0000 0006  xsym                 LDB,B6   KZ_HIP_HDR+6
          2 000861  A847 0045                            LDR,R2   NEWPOWER2,AUTO
          2 000863  2E41                                 ADV,R2   65
          2 000864  AF47 0054                            STR,R2   MAXDATA+3,AUTO
          2 000866  2001                                 SOL,R2   1
          2 000867  2E01                                 ADV,R2   1
          2 000868  B847 0054                            LDR,R3   MAXDATA+3,AUTO
          2 00086A  3001                                 SOL,R3   1
          2 00086B  8AA6                                 INC      ,B6,R2
          2 00086C  8EB6                                 CAD      ,B6,R3

     1200    17934    5                    TBFR$->CURCONTENTS=BFR$->CURCONTENTS; /* Copy old to new     */

  17934   2 00086D  ACC7 000E                            LDB,B2   BFR$,AUTO
          2 00086F  2C00                                 LDV,R2   0
          2 000870  E847 0040                            LDR,R6   CURBYTES,AUTO
          2 000872  BCC7 0010                            LDB,B3   TBFR$,AUTO
          2 000874  3C00                                 LDV,R3   0
          2 000875  0008                                 MMM

     1201    17935    6                    IF KZ$OTPBFR.MRKCNT~=0 THEN DO; /* Move output markers       */

  17935   2 000876  ECC7 000E                            LDB,B6   BFR$,AUTO
          2 000878  82C6 0005                            LB,'00FF'X        5,B6
          2 00087A       00FF
          2 00087B  0581 0036                            BBF      s:17942,PREL

     1202    17936    6                       MARKBYTES=KZ$OTPBFR.MRKCNT*SIZEW(KV$OTPMRK)*2;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:180  

  17936   2 00087D  E846 0005                            LDR,R6   5,B6
          2 00087F  E570 00FF                            AND,R6   255,IMO
          2 000881  6F06                                 MLV,R6   6
          2 000882  EF47 0042                            STR,R6   MARKBYTES,AUTO

     1203    17937    6                       PINCRW(TBFR$,KZ_HIP_BFRSIZ(NEWPOWER2)-(MARKBYTES/2))->
             17937                                MARKCONTENTS=

  17937   2 000884  E370 0002                            DIV,R6   2,IMO
          2 000886  B847 0045                            LDR,R3   NEWPOWER2,AUTO
          2 000888  E230 0000 0021  00                   SUB,R6   KZ_HIP_BFRSIZ,R3
          2 00088B  70F0                                 DAR,R7   16
          2 00088C  84C7 0010                            SID      TBFR$,AUTO
          2 00088E  8656                                 CPL      R6
          2 00088F  8657                                 CPL      R7
          2 000890  8470 0000 0001                       AID      1,IMO
          2 000893  A846 0004                            LDR,R2   4,B6
          2 000895  D847 0042                            LDR,R5   MARKBYTES,AUTO
          2 000897  D370 0002                            DIV,R5   2,IMO
          2 000899  D220 0000 0021  00                   SUB,R5   KZ_HIP_BFRSIZ,R2
          2 00089C  8D47 0054                            SDI      MAXDATA+3,AUTO
          2 00089E  E855                                 LDR,R6   R5
          2 00089F  70F0                                 DAR,R7   16
          2 0008A0  84C7 000E                            SID      BFR$,AUTO
          2 0008A2  8656                                 CPL      R6
          2 0008A3  8657                                 CPL      R7
          2 0008A4  8470 0000 0001                       AID      1,IMO
          2 0008A7  8D47 0056                            SDI      MAXDATA+5,AUTO
          2 0008A9  ACC7 0056                            LDB,B2   MAXDATA+5,AUTO
          2 0008AB  2C00                                 LDV,R2   0
          2 0008AC  E847 0042                            LDR,R6   MARKBYTES,AUTO
          2 0008AE  BCC7 0054                            LDB,B3   MAXDATA+3,AUTO
          2 0008B0  3C00                                 LDV,R3   0
          2 0008B1  0008                                 MMM

     1204    17938    6                         PINCRW(BFR$,KZ_HIP_BFRSIZ(KZ$OTPBFR.BFRSIZ)-(MARKBYTES/2))->
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:181  
             17938                                  MARKCONTENTS;
     1205    17939    6                       END;

     1206    17940        /**/
     1207    17941                         %DISABLE(INHLVL=KH_INHLVL);

  17942   2 0008B2  E800 0000 0000  xsym                 LDR,R6   KH_INHLVL
          2 0008B5  EF47 0039                            STR,R6   DISABLE_LEVEL,AUTO

  17943   2 0008B7  EBC7 0039                            LAB,B6   DISABLE_LEVEL,AUTO
          2 0008B9  EFC7 0054                            STB,B6   MAXDATA+3,AUTO
          2 0008BB  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 0008BD  CBF0 0100                            LAB,B4   256,IMO
          2 0008BF  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 0008C2       0001                            DC       s:17945,PREL

     1208    17945    5                    CALL KVB$RLSSYS(CURWORDS,BFR$);

  17945   2 0008C3  EBC7 000E                            LAB,B6   BFR$,AUTO
          2 0008C5  EFC7 0056                            STB,B6   MAXDATA+5,AUTO
          2 0008C7  DBC7 0041                            LAB,B5   CURWORDS,AUTO
          2 0008C9  DFC7 0054                            STB,B5   MAXDATA+3,AUTO
          2 0008CB  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 0008CD  CBF0 0200                            LAB,B4   512,IMO
          2 0008CF  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          2 0008D2       0001                            DC       s:17947,PREL

     1209    17946                         %ENABLE(INHLVL=KH_INHLVL);

  17947   2 0008D3  E847 0039                            LDR,R6   DISABLE_LEVEL,AUTO
          2 0008D5  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          2 0008D8  0901 0007                            BE       s:17953,PREL

  17949   2 0008DA  CBF0 0000                            LAB,B4   0,IMO
          2 0008DC  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0008DF       0001                            DC       s:17953,PREL

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:182  
     1210    17952        /**/
     1211    17953    5                    BFR$=TBFR$;

  17953   2 0008E0  ECC7 0010                            LDB,B6   TBFR$,AUTO
          2 0008E2  EFC7 000E                            STB,B6   BFR$,AUTO

     1212    17954    5                    BYTSIZ=BYTSIZ+KZ_HIP_BFRSIZ(NEWPOWER2)*2-CURBYTES;

  17954   2 0008E4  B847 0045                            LDR,R3   NEWPOWER2,AUTO
          2 0008E6  E830 0000 0021  00                   LDR,R6   KZ_HIP_BFRSIZ,R3
          2 0008E9  6001                                 SOL,R6   1
          2 0008EA  EA47 0026                            ADD,R6   BYTSIZ,AUTO
          2 0008EC  E247 0040                            SUB,R6   CURBYTES,AUTO
          2 0008EE  EF47 0026                            STR,R6   BYTSIZ,AUTO

     1213    17955    5                    KZ$OTPBFR.BFRSIZ=NEWPOWER2;

  17955   2 0008F0  BF46 0004                            STR,R3   4,B6

     1214    17956    5                    CALL FIT_BLKBYTES;

  17956   2 0008F2  E3C0 FE49                            LNJ,B6   s:0,PREL
          2 0008F4       0001                            DC       s:17958,PREL

     1215    17957        /**/
     1216    17958    5                    RETURN;

  17958   2 0008F5  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 0008F7  C3C6 0001                            LNJ,B4   1,B6

     1217    17959    5                    END FOUND_RIGHT_SIZE;
     1218    17960    4                 END EXPANDED_BUFFER_FITS;
     1219    17961    3              END TEST_EXPAND_CURRENT;
     1220    17962        /**/
     1221    17963    2   NEW_BFR:
     1222    17964    2           CALL DONE(%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:183  
  17964   2 0008F9  EBF0 8000            NEW_BFR         LAB,B6   -32768,IMO
          2 0008FB  EFC7 004A                            STB,B6   @POWER2,AUTO
          2 0008FD  E3C0 FB75                            LNJ,B6   s:0,PREL
          2 0008FF       006E                            DC       s:17996,PREL

     1223    17965    2           IF ADDR(SIZ)~=ADDR(NIL) THEN

  17965   2 000900  ECC7 003C                            LDB,B6   @SIZ,AUTO
          2 000902  8DD6                                 CMN      B6
          2 000903  0901 004A                            BE       s:17983,PREL

     1224    17966    3   REQUIRED_MIN_SIZE:DO;

  17966   2                              REQUIRED_MIN_SI*null
     1225    17967    3              NEWBYTES=SIZ*2+LENGTHC(KZ$OTPBFR)+

  17967   2 000905  E806                 REQUIRED_MIN_SI*LDR,R6   ,B6
          2 000906  6001                                 SOL,R6   1
          2 000907  6E2A                                 ADV,R6   42
          2 000908  EF47 0043                            STR,R6   NEWBYTES,AUTO

     1226    17968    3                LENGTHC(KZ$HIPHEAD)+LENGTHC(KZ$HIPTAIL)+2*LENGTHC(KV$OTPMRK);
     1227    17969    3              NEWWORDS=(NEWBYTES+1)/2;

  17969   2 00090A  6E01                                 ADV,R6   1
          2 00090B  E370 0002                            DIV,R6   2,IMO
          2 00090D  EF47 0044                            STR,R6   NEWWORDS,AUTO

     1228    17970    3              NEWPOWER2=KZH_INITBFR_SIZE;

  17970   2 00090F  D800 0000 0080  00                   LDR,R5   KZH_INITBFR_SIZE
          2 000912  DF47 0045                            STR,R5   NEWPOWER2,AUTO

     1229    17971    4              DO WHILE(NEWPOWER2<=KZ$HIPDEV.OTPBFRSIZ);

  17971   2 000914  DCC7 0008                            LDB,B5   DEV$,AUTO
          2 000916  5801 0005                            BLZ,R5   s:17972,PREL
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:184  
          2 000918  D945 001A                            CMR,R5   26,B5
          2 00091A  0301 0016                            BG       s:17977,PREL

     1230    17972    4                 IF KZ_HIP_BFRSIZ(NEWPOWER2)>=NEWWORDS THEN

  17972   2 00091C  B847 0045                            LDR,R3   NEWPOWER2,AUTO
          2 00091E  E830 0000 0021  00                   LDR,R6   KZ_HIP_BFRSIZ,R3
          2 000921  6801 000F                            BLZ,R6   s:17977,PREL
          2 000923  E947 0044                            CMR,R6   NEWWORDS,AUTO
          2 000925  0881 000B                            BAGE     s:17977,PREL

     1231    17973    4                    EXIT;
     1232    17974    4                 ELSE
     1233    17975    4                    NEWPOWER2=NEWPOWER2+1;

  17975   2 000927  8AC7 0045                            INC      NEWPOWER2,AUTO

     1234    17976    4                 END;

  17976   2 000929  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 00092B  E847 0045                            LDR,R6   NEWPOWER2,AUTO
          2 00092D  686F                                 BLZ,R6   s:17972,SPREL
          2 00092E  E946 001A                            CMR,R6   26,B6
          2 000930  03EC                                 BLE      s:17972,SPREL

     1235    17977    3              IF NEWPOWER2<=KZ$HIPDEV.OTPBFRSIZ THEN

  17977   2 000931  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 000933  E847 0045                            LDR,R6   NEWPOWER2,AUTO
          2 000935  6801 0005                            BLZ,R6   s:17978,PREL
          2 000937  E946 001A                            CMR,R6   26,B6
          2 000939  0301 000A                            BG       s:17980,PREL

     1236    17978    3                 CALL INITBFR(NEWPOWER2) ALTRET(NO_MEMORY);

  17978   2 00093B  DBC7 0045                            LAB,B5   NEWPOWER2,AUTO
          2 00093D  DFC7 004A                            STB,B5   @POWER2,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:185  
          2 00093F  E3C0 FCDE                            LNJ,B6   s:0,PREL
          2 000941       002C                            DC       s:17996,PREL
          2 000942  0F81 0013                            B        s:17985,PREL

     1237    17979    3              ELSE
     1238    17980    3                 CALL INITBFR ALTRET(NO_MEMORY);

  17980   2 000944  DB80 0000 0000                       LAB,B5   0
          2 000947  DFC7 004A                            STB,B5   @POWER2,AUTO
          2 000949  E3C0 FCD4                            LNJ,B6   s:0,PREL
          2 00094B       0022                            DC       s:17996,PREL

     1239    17981    3              END REQUIRED_MIN_SIZE;

  17981   2 00094C  0F81 0009                            B        s:17985,PREL

     1240    17982    2           ELSE
     1241    17983    2              CALL INITBFR;

  17983   2 00094E  DB80 0000 0000                       LAB,B5   0
          2 000951  DFC7 004A                            STB,B5   @POWER2,AUTO
          2 000953  E3C0 FCCA                            LNJ,B6   s:0,PREL
          2 000955       0001                            DC       s:17985,PREL

     1242    17984
     1243    17985    2           IF ADDR(SIZ)~=ADDR(NIL) THEN

  17985   2 000956  ECC7 003C                            LDB,B6   @SIZ,AUTO
          2 000958  8DD6                                 CMN      B6
          2 000959  0901 000F                            BE       s:17993,PREL

     1244    17986    2              IF BYTSIZ < SIZ THEN

  17986   2 00095B  E847 0026                            LDR,R6   BYTSIZ,AUTO
          2 00095D  E906                                 CMR,R6   ,B6
          2 00095E  0281 000A                            BGE      s:17993,PREL

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:186  
     1245    17987    2                 IF BYTSIZ<SIZ THEN

  17987   2 000960  0281 0005                            BGE      s:17991,PREL

     1246    17988    2                    ALTRETURN;

  17988   2 000962  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000964  B806                                 LDR,R3   ,B6
          2 000965  C3B6                                 LNJ,B4   ,B6,R3

     1247    17989    2                 ELSE
     1248    17990    3                 DO;

     1249    17991    3                    BYTSIZ=SIZ;

  17991   2 000966  E806                                 LDR,R6   ,B6
          2 000967  EF47 0026                            STR,R6   BYTSIZ,AUTO

     1250    17992    3                    END;

     1251    17993    2           RETURN;

  17993   2 000969  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 00096B  C3C6 0001                            LNJ,B4   1,B6

     1252    17994
     1253    17995    2   NO_MEMORY:
     1254    17996    2           ALTRETURN;

  17996   2 00096D  ECC7 003A            NO_MEMORY       LDB,B6   DISABLE_LEVEL+1,AUTO
          2 00096F  B806                                 LDR,R3   ,B6
          2 000970  C3B6                                 LNJ,B4   ,B6,R3

     1255    17997
     1256    17998        /**/
     1257    17999    2   END CHK_BFR_SIZ;
     1258    18000
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:187  
     1259    18001        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:188  
     1260    18002
     1261    18003        /* SETBUFADR - Build SBA order */
     1262    18004
     1263    18005        /*F*  NAME:    SETBUFADR
     1264    18006              PURPOSE: To insert a SET BUFFER ADDRESS (SBA) command into the
     1265    18007                       device output stream.
     1266    18008        */
     1267    18009        /*D*  NAME:    SETBUFADR
     1268    18010              ENTRY:   SETBUFADR_NCHK
     1269    18011              CALL:    From ATTR,ATTRIC,IC
     1270    18012              USES DATA STRUCTURES
     1271    18013                       KZ$HIPCTX
     1272    18014                       KZ$OTPBFR
     1273    18015              DESCRIPTION:
     1274    18016                       This routine converts the ROW/COLUMN position specified
     1275    18017                       by R2/R3 into a HIP buffer address. Then inserts a set
     1276    18018                       buffer addr (SBA) command followed by the buffer addr.
     1277    18019                       SETBUFADR checks that there is room in the buffer
     1278    18020                       for all three bytes, SETBUFADR_NCHK does not.
     1279    18021        */
     1280    18022    1   SETBUFADR: PROC ALTRET;

  18022   2 000971  EFC7 003A            SETBUFADR       STB,B6   DISABLE_LEVEL+1,AUTO

     1281    18023
     1282    18024
     1283    18025    2           CALL CHK_BFR_SIZ(3) ALTRET(NO_MEMORY);

  18025   2 000973  DBF0 0003                            LAB,B5   3,IMO
          2 000975  DFC7 003C                            STB,B5   @SIZ,AUTO
          2 000977  E3C0 FDDE                            LNJ,B6   s:0,PREL
          2 000979       0005                            DC       s:18034,PREL

     1284    18026        /**/
     1285    18027                %MAC_SETBUFADR;
     1286    18030        /**/
     1287    18031    2           RETURN;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:189  

  18031   2 00097A  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 00097C  C3C6 0001                            LNJ,B4   1,B6

     1288    18032
     1289    18033    2   NO_MEMORY:
     1290    18034    2           ALTRETURN;

  18034   2 00097E  ECC7 003A            NO_MEMORY       LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000980  B806                                 LDR,R3   ,B6
          2 000981  C3B6                                 LNJ,B4   ,B6,R3

     1291    18035
     1292    18036    2   END SETBUFADR;
     1293    18037        /**/
     1294    18038        /**/
     1295    18039    1   SETBUFADR_NCHK: PROC;

  18039   2 000982  EFC7 003A            SETBUFADR_NCHK  STB,B6   DISABLE_LEVEL+1,AUTO

     1296    18040        /**/
     1297    18041              %MAC_SETBUFADR;
     1298    18044        /**/
     1299    18045    2           RETURN;

  18045   2 000984  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000986  C3C6 0001                            LNJ,B4   1,B6

     1300    18046    2   END SETBUFADR_NCHK;
     1301    18047
     1302    18048        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:190  
     1303    18049
     1304    18050        /* ATTR - Build attribute char */
     1305    18051
     1306    18052        /*F*  NAME:    ATTR
     1307    18053              PURPOSE: To insert an attribute character (followed by the
     1308    18054                       cursor if ATTRIC is called) at the specified
     1309    18055                       row/column position.
     1310    18056        */
     1311    18057        /*D*  NAME:    ATTR
     1312    18058              CALL:    From KZH$HIP
     1313    18059              USES DATA STRUCTURES
     1314    18060                       KZ$HIPCTX
     1315    18061                       KZ$OTPBFR
     1316    18062              INPUT:   Address of device context block (B1)
     1317    18063                       The value of the attribute character (R4)
     1318    18064                       Device row and column (R2)
     1319    18065              DESCRIPTION:
     1320    18066                       Inserts an attribute (or start field (SF)) character
     1321    18067                       possibly followed by an insert cursor (ATTRIC)
     1322    18068                       at the position specified by row and column (R2)
     1323    18069        */
     1324    18070    1   ATTR:   PROC;

  18070   2 000988  EFC7 003A            ATTR            STB,B6   DISABLE_LEVEL+1,AUTO

     1325    18071        /**/
     1326    18072
     1327    18073    2           CALL CHK_BFR_SIZ(5);

  18073   2 00098A  DBF0 0005                            LAB,B5   5,IMO
          2 00098C  DFC7 003C                            STB,B5   @SIZ,AUTO
          2 00098E  E3C0 FDC7                            LNJ,B6   s:0,PREL
          2 000990       0001                            DC       s:18075,PREL

     1328    18074        /**/
     1329    18075    2           CALL SETBUFADR_NCHK;       /* Set buf adr w/out checking for size     */

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:191  
  18075   2 000991  E3C0 FFF0                            LNJ,B6   s:0,PREL
          2 000993       0001                            DC       s:18077,PREL

     1330    18076        /**/
     1331    18077    2           CALL STORE_MRD(ROW,COL+1);

  18077   2 000994  E847 0016                            LDR,R6   COL,AUTO
          2 000996  6E01                                 ADV,R6   1
          2 000997  EF47 005A                            STR,R6   MAXDATA+9,AUTO
          2 000999  EBC7 005A                            LAB,B6   MAXDATA+9,AUTO
          2 00099B  EFC7 003E                            STB,B6   J,AUTO
          2 00099D  DBC7 0015                            LAB,B5   ROW,AUTO
          2 00099F  DFC7 003C                            STB,B5   @SIZ,AUTO
          2 0009A1  E3C0 001F                            LNJ,B6   s:0,PREL
          2 0009A3       0001                            DC       s:18079,PREL

     1332    18078        /**/
     1333    18079    2           BFR$->BYT(BYTX)=BITBIN(%KZ#START_FIELD);

  18079   2 0009A4  6C1D                                 LDV,R6   29
          2 0009A5  ECC7 000E                            LDB,B6   BFR$,AUTO
          2 0009A7  B847 0025                            LDR,R3   BYTX,AUTO
          2 0009A9  E7B6                                 STH,R6   ,B6,R3

     1334    18080    2           BFR$->BYT(BYTX+1)=KZ_HIPXL(ATTR_CHR);

  18080   2 0009AA  A2C7 0027                            LLH,R2   ATTR_CHAR,AUTO
          2 0009AC  D2A0 0000 0001  00                   LLH,R5   KZ_HIPXLB,R2
          2 0009AF  ECC7 000E                            LDB,B6   BFR$,AUTO
          2 0009B1  3E01                                 ADV,R3   1
          2 0009B2  D7B6                                 STH,R5   ,B6,R3

     1335    18081        /**/
     1336    18082    2           BYTX=BYTX+2;

  18082   2 0009B3  C847 0025                            LDR,R4   BYTX,AUTO
          2 0009B5  4E02                                 ADV,R4   2
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:192  
          2 0009B6  CF47 0025                            STR,R4   BYTX,AUTO

     1337    18083    2           BYTSIZ=BYTSIZ-2;

  18083   2 0009B8  B847 0026                            LDR,R3   BYTSIZ,AUTO
          2 0009BA  3EFE                                 ADV,R3   -2
          2 0009BB  BF47 0026                            STR,R3   BYTSIZ,AUTO

     1338    18084        /**/
     1339    18085    2           RETURN;

  18085   2 0009BD  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 0009BF  C3C6 0001                            LNJ,B4   1,B6

     1340    18086
     1341    18087    2   END ATTR;
     1342    18088
     1343    18089        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:193  
     1344    18090
     1345    18091    1   STORE_MRD: PROC (R,C);

  18091   2 0009C1  EFC7 003A            STORE_MRD       STB,B6   DISABLE_LEVEL+1,AUTO

     1346    18092    2   DCL R SBIN;
     1347    18093    2   DCL C SBIN;
     1348    18094    2   DCL R_MRD SBIN;
     1349    18095    2   DCL C_MRD SBIN;
     1350    18096
     1351    18097    2           R_MRD=R; C_MRD=C;

  18097   2 0009C3  DCC7 003C                            LDB,B5   @R,AUTO
          2 0009C5  E805                                 LDR,R6   ,B5
          2 0009C6  EF47 0040                            STR,R6   R_MRD,AUTO

  18097   2 0009C8  CCC7 003E                            LDB,B4   @C,AUTO
          2 0009CA  D804                                 LDR,R5   ,B4
          2 0009CB  DF47 0041                            STR,R5   C_MRD,AUTO

     1352    18098    2           IF C_MRD>MAX_COL THEN

  18098   2 0009CD  D947 001D                            CMR,R5   MAX_COL,AUTO
          2 0009CF  0A81 0006                            BALE     s:18103,PREL

     1353    18099    3           DO;

     1354    18100    3              C_MRD=1;

  18100   2 0009D1  5C01                                 LDV,R5   1
          2 0009D2  DF47 0041                            STR,R5   C_MRD,AUTO

     1355    18101    3              R_MRD=R_MRD+1;

  18101   2 0009D4  8AC7 0040                            INC      R_MRD,AUTO

     1356    18102    3              END;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:194  

     1357    18103    2           IF R_MRD>MAX_ROW THEN R_MRD=1;

  18103   2 0009D6  C847 0040                            LDR,R4   R_MRD,AUTO
          2 0009D8  C947 001C                            CMR,R4   MAX_ROW,AUTO
          2 0009DA  0A81 0004                            BALE     s:18104,PREL

  18103   2 0009DC  4C01                                 LDV,R4   1
          2 0009DD  CF47 0040                            STR,R4   R_MRD,AUTO

     1358    18104    2           %KV_MRD.DVCLIN=R_MRD;

  18104   2 0009DF  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          2 0009E2  ACC3 0008                            LDB,B2   8,B3
          2 0009E4  CF42 001D                            STR,R4   29,B2

     1359    18105    2           %KV_MRD.DVCCLM=C_MRD;

  18105   2 0009E6  ECC3 0008                            LDB,B6   8,B3
          2 0009E8  DF46 001E                            STR,R5   30,B6

     1360    18106    2           RETURN;

  18106   2 0009EA  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 0009EC  C3C6 0001                            LNJ,B4   1,B6

     1361    18107    2   END STORE_MRD;
     1362    18108        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:195  
     1363    18109        /* IC - Insert cursor */
     1364    18110
     1365    18111        /*F*  NAME:    IC
     1366    18112              PURPOSE: To insert a "INSERT CURSOR" command into the output
     1367    18113                       buffer.
     1368    18114        */
     1369    18115        /*D*  NAME:    IC
     1370    18116              CALL:    From KZH$HIP
     1371    18117              USES DATA STRUCTURES
     1372    18118                       KZ$HIPCTX
     1373    18119                       KZ$OTPBFR
     1374    18120              INPUT:   Cursor position as row/column.
     1375    18121        */
     1376    18122    1   IC:     PROC;

  18122   2 0009EE  EFC7 003A            IC              STB,B6   DISABLE_LEVEL+1,AUTO

     1377    18123        /**/
     1378    18124
     1379    18125
     1380    18126    2   END IC;

  18126   2 0009F0  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 0009F2  C3C6 0001                            LNJ,B4   1,B6

     1381    18127
     1382    18128        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:196  
     1383    18129
     1384    18130        /* ERS - Erase an area on the screen */
     1385    18131        /*F*   NAME:    ERS
     1386    18132              PURPOSE: To clear a portion of the screen by using the set
     1387    18133                       buffer address command followed by Repeat address
     1388    18134                       with the null character.
     1389    18135        */
     1390    18136        /*D*   NAME:    ERS
     1391    18137              CALL:    From KZH$HIP
     1392    18138              USES DATA STRUCTURES
     1393    18139                       KZ$HIPCTX
     1394    18140                       KZ$OTPBFR
     1395    18141                       Address of start of clear  and
     1396    18142                       Address of end of clear.
     1397    18143        */
     1398    18144
     1399    18145    1   ERS:    PROC ALTRET;

  18145   2 0009F4  EFC7 003A            ERS             STB,B6   DISABLE_LEVEL+1,AUTO

     1400    18146        /**/
     1401    18147    2   DCL   FILLCHAR UBIN BYTE UNAL;          /* CHAR TO BE REPEATED FOR SPACING    */
     1402    18148        /**/
     1403    18149
     1404    18150    2           CALL CHK_BFR_SIZ(7) ALTRET(NO_MEMORY); /* Space for SBA,RA,null,null  */

  18150   2 0009F6  DBF0 0007                            LAB,B5   7,IMO
          2 0009F8  DFC7 003C                            STB,B5   FILLCHAR,AUTO
          2 0009FA  E3C0 FD5B                            LNJ,B6   s:0,PREL
          2 0009FC       0026                            DC       s:18176,PREL

     1405    18151        /**/
     1406    18152    2           CALL SETBUFADR_NCHK;       /* Set buf adr w/out checking for size     */

  18152   2 0009FD  E3C0 FF84                            LNJ,B6   s:0,PREL
          2 0009FF       0001                            DC       s:18153,PREL

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:197  
     1407    18153    2           FILLCHAR = BITBIN(%KZ#NULL);

  18153   2 000A00  87C7 003C                            CLH      FILLCHAR,AUTO

     1408    18154        /**/
     1409    18155    2   ERS2:   ROW = ROW1; COL = COL1+1;       /* Add 1 because repeat order         */

  18155   2 000A02  E847 0017            ERS2            LDR,R6   ROW1,AUTO
          2 000A04  EF47 0015                            STR,R6   ROW,AUTO

  18155   2 000A06  D847 0018                            LDR,R5   COL1,AUTO
          2 000A08  5E01                                 ADV,R5   1
          2 000A09  DF47 0016                            STR,R5   COL,AUTO

     1410    18156                                                /* goes to addr-1                     */
     1411    18157        /**/
     1412    18158        /**/
     1413    18159    2           RETURN;

  18159   2 000A0B  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000A0D  C3C6 0001                            LNJ,B4   1,B6

     1414    18160        /**/
     1415    18161    2   ERSCUR: ENTRY;                          /* Erase from current position        */

  18161   2 000A0F  EFC7 003A            ERSCUR          STB,B6   DISABLE_LEVEL+1,AUTO

     1416    18162        /**/
     1417    18163    2           FILLCHAR = BITBIN(%KZ#NULL);

  18163   2 000A11  87C7 003C                            CLH      FILLCHAR,AUTO

     1418    18164    2   ERSC:
     1419    18165    2           ROW1 = ROW;

  18165   2 000A13  E847 0015            ERSC            LDR,R6   ROW,AUTO
          2 000A15  EF47 0017                            STR,R6   ROW1,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:198  

     1420    18166    2           COL1 = COL;

  18166   2 000A17  D847 0016                            LDR,R5   COL,AUTO
          2 000A19  DF47 0018                            STR,R5   COL1,AUTO

     1421    18167    2           GOTO ERS2;

  18167   2 000A1B  0FE7                                 B        s:18155,SPREL

     1422    18168
     1423    18169
     1424    18170    2   ERSCUR_BLNKS: ENTRY;          /* Erase from current position using blanks     */

  18170   2 000A1C  EFC7 003A            ERSCUR_BLNKS    STB,B6   DISABLE_LEVEL+1,AUTO

     1425    18171        /**/
     1426    18172    2           FILLCHAR = %KZ#EBDC_SPACE;

  18172   2 000A1E  6C40                                 LDV,R6   64
          2 000A1F  E7C7 003C                            STH,R6   FILLCHAR,AUTO

     1427    18173    2           GOTO ERSC;

  18173   2 000A21  0FF2                                 B        s:18165,SPREL

     1428    18174
     1429    18175    2   NO_MEMORY:
     1430    18176    2           ALTRETURN;

  18176   2 000A22  ECC7 003A            NO_MEMORY       LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000A24  B806                                 LDR,R3   ,B6
          2 000A25  C3B6                                 LNJ,B4   ,B6,R3

     1431    18177
     1432    18178    2   END ERS;
     1433    18179        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:199  
     1434    18180
     1435    18181        /* ERSWNDW - Erase a window */
     1436    18182
     1437    18183        /*F*   NAME: ERSWNDW
     1438    18184              PURPOSE: To clear a window on the screen of the device. Co-
     1439    18185              ordinates given are the topleft and bottom right corners of
     1440    18186              of the window with an offset column number to start from on
     1441    18187              the top line of the window.
     1442    18188        */
     1443    18189        /*D*   NAME: ERSWNDW
     1444    18190              CALL: From VDH -> VDH-user REQUEST driver.
     1445    18191              USES DATA STRUCTURES:
     1446    18192                   KZ$HIPCTX
     1447    18193                   KV$USR_ERS
     1448    18194              INPUT: Top left and Btmright and top line offset describing
     1449    18195                     window coordinates.
     1450    18196
     1451    18197                 ECOL       ECOL2
     1452    18198                 |          |
     1453    18199         EROW___            ____________________________
     1454    18200                 ___________|                           |
     1455    18201                 |                                      |
     1456    18202                 |                                      |
     1457    18203                 |                                      |
     1458    18204                 |                                      |
     1459    18205                 |                        ______________|
     1460    18206                 |________________________|             _____EROW1
     1461    18207                                          |             |
     1462    18208                                          ECOL3         ECOL1
     1463    18209
     1464    18210        */
     1465    18211    1   ERSWNDW: PROC(EROW,ECOL,EROW1,ECOL1,ECOL2,ECOL3);

  18211   2 000A26  EFC7 003A            ERSWNDW         STB,B6   DISABLE_LEVEL+1,AUTO

     1466    18212        /**/
     1467    18213    2   DCL EROW UBIN;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:200  
     1468    18214    2   DCL ECOL UBIN;
     1469    18215    2   DCL EROW1 UBIN;
     1470    18216    2   DCL ECOL1 UBIN;
     1471    18217    2   DCL ECOL2 UBIN;
     1472    18218    2   DCL ECOL3 UBIN;
     1473    18219    2   DCL I UBIN;
     1474    18220
     1475    18221
     1476    18222    2   END ERSWNDW;

  18222   2 000A28  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000A2A  C3C6 0001                            LNJ,B4   1,B6

     1477    18223
     1478    18224        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:201  
     1479    18225
     1480    18226        /* CLEAR - Clear the screen */
     1481    18227
     1482    18228    1   CLEAR:  PROC ALTRET;

  18228   2 000A2C  EFC7 003A            CLEAR           STB,B6   DISABLE_LEVEL+1,AUTO

     1483    18229
     1484    18230
     1485    18231    2   END CLEAR;

  18231   2 000A2E  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000A30  C3C6 0001                            LNJ,B4   1,B6

     1486    18232
     1487    18233        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:202  
     1488    18234
     1489    18235        /* CMPOTP - Call VDH to complete output, then send output */
     1490    18236
     1491    18237    1   CMP_OTP: PROC ALTRET;

  18237   2 000A32  EFC7 003A            CMP_OTP         STB,B6   DISABLE_LEVEL+1,AUTO

     1492    18238
     1493    18239    2           IF BFR$=ADDR(NIL) THEN

  18239   2 000A34  8DC7 000E                            CMN      BFR$,AUTO
          2 000A36  0981 0005                            BNE      s:18242,PREL

     1494    18240    2              RETURN;

  18240   2 000A38  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000A3A  C3C6 0001                            LNJ,B4   1,B6

     1495    18241
     1496    18242    2           CALL SET_VAL;                   /* Stuff values - may get re-entered  */

  18242   2 000A3C  E3C0 00D6                            LNJ,B6   s:0,PREL
          2 000A3E       0001                            DC       s:18248,PREL

     1497    18243                %KV$CMPOTP;
             18248    3           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;

  18248   2 000A3F  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000A42  DC86                                 LDB,B5   ,B6
          2 000A43  E845 001A                            LDR,R6   26,B5
          2 000A45  6901 000A                            BEZ,R6   s:18252,PREL

             18249    3              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);

  18249   2 000A47  BB80 0000 0004  03                   LAB,B3   +4
          2 000A4A  CBF0 0100                            LAB,B4   256,IMO
          2 000A4C  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:203  
          2 000A4F       0001                            DC       s:18252,PREL

             18250    3              END;                         /* END IF                             */

     1498    18252    2           CALL GET_VAL;

  18252   2 000A50  E3C0 00A1                            LNJ,B6   s:0,PREL
          2 000A52       0001                            DC       s:18253,PREL

     1499    18253    2           CALL DONE(%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  18253   2 000A53  EBF0 8000                            LAB,B6   -32768,IMO
          2 000A55  EFC7 004A                            STB,B6   @POWER2,AUTO
          2 000A57  E3C0 FA1B                            LNJ,B6   s:0,PREL
          2 000A59       000A                            DC       s:18258,PREL

     1500    18254    2           KZ$HIPDEV.DONE='0'B;

  18254   2 000A5A  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 000A5C  8846 0012                            LBF,'0200'X       18,B6
          2 000A5E       0200

     1501    18255    2           RETURN;

  18255   2 000A5F  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000A61  C3C6 0001                            LNJ,B4   1,B6

     1502    18256
     1503    18257    2   NO_MEMORY:
     1504    18258    2           ALTRETURN;

  18258   2 000A63  ECC7 003A            NO_MEMORY       LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000A65  B806                                 LDR,R3   ,B6
          2 000A66  C3B6                                 LNJ,B4   ,B6,R3

     1505    18259
     1506    18260    2   END CMP_OTP;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:204  
     1507    18261
     1508    18262        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:205  
     1509    18263
     1510    18264        /* ERRLOG - Build an ERRLOG FPT */
     1511    18265
     1512    18266    1   ERRLOG: PROC(ERROR);

  18266   2 000A67  EFC7 003A            ERRLOG          STB,B6   DISABLE_LEVEL+1,AUTO

     1513    18267    2   DCL ERROR UBIN;
     1514    18268
     1515    18269        %FPT_WRSYSLOG (STCLASS=);
     1516    18364        %FPT_WRSYSLOG (FPTN=FPT@WRSYSLOG,STCLASS=CONSTANT,FCG='KZ',MID='H');
     1517    18459
     1518    18460    2           FPT_WRSYSLOG=FPT@WRSYSLOG;

  18460   2 000A69  AB80 0000 0081  00                   LAB,B2   FPT@WRSYSLOG
          2 000A6C  2C00                                 LDV,R2   0
          2 000A6D  6C2A                                 LDV,R6   42
          2 000A6E  BB87                                 LAB,B3   ,AUTO
          2 000A6F  3C7C                                 LDV,R3   124
          2 000A70  0008                                 MMM

     1519    18461    2           FPT_WRSYSLOG.V.TERMID=KZ$HIPDEV.CTR$->KZ$HIPCTR.LIN$->KZ$LINCTX.LINID;

  18461   2 000A71  ECC7 0008                            LDB,B6   DEV$,AUTO
          2 000A73  DCC6 0002                            LDB,B5   2,B6
          2 000A75  CCC5 0004                            LDB,B4   4,B5
          2 000A77  AB84                                 LAB,B2   ,B4
          2 000A78  2C08                                 LDV,R2   8
          2 000A79  6C10                                 LDV,R6   16
          2 000A7A  BBC7 0046                            LAB,B3   @ECOL3,AUTO
          2 000A7C  3C00                                 LDV,R3   0
          2 000A7D  0008                                 MMM

     1520    18462    2           FPT_WRSYSLOG.V.ERRCODE.ERR#=ERROR;

  18462   2 000A7E  ECC7 003C                            LDB,B6   @ERROR,AUTO
          2 000A80  E806                                 LDR,R6   ,B6
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:206  
          2 000A81  6003                                 SOL,R6   3
          2 000A82  EAC7 0045                            SRM,R6,'FFF8'X    NEWPOWER2,AUTO
          2 000A84       FFF8

     1521    18463
     1522    18464    3           DO CASE (ERROR);

  18464   2 000A85  B806                                 LDR,R3   ,B6
          2 000A86  BA70 FF32                            ADD,R3   -206,IMO
          2 000A88  3D03                                 CMV,R3   3
          2 000A89  0281 0058                            BGE      s:18517,PREL
          2 000A8B  A830 0000 0A91  02                   LDR,R2   s:18464+12,R3
          2 000A8E  83A0 0000 0A94  02                   JMP      s:18480,R2
          2 000A91       001C                            DC       s:18495,PREL
          2 000A92       0000                            DC       s:18480,PREL
          2 000A93       0036                            DC       s:18511,PREL

     1523    18465    3            CASE (%E$LGNREJ);

     1524    18466        /*E* ERROR:        KZH-E$LGNREJ-7
     1525    18467             MESSAGE:      HIP  device logon rejected.
     1526    18468             DESCRIPTION:  The host rejected a HIP  device logon.
     1527    18469                           V0 = Channel number.
     1528    18470                           V1/V2 = Controller/Device numbers.
     1529    18471                           V3 = Reason:
     1530    18472                                1 = No LDCTs available
     1531    18473                                    (a NETCON parameter)
     1532    18474                                2 = No route available
     1533    18475                                3 = Protocol error
     1534    18476                                4 = Unmatching generation value
     1535    18477                                5 = User rejected connection
     1536    18478                                    (NODEADMN may be out of MEMory).
     1537    18479        */
     1538    18480    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$HIPDEV.CTR$->KZ$HIPCTR.LIN$->KZ$LINCTX.CHAN;

  18480   2 000A94  DCC7 0008                            LDB,B5   DEV$,AUTO
          2 000A96  BCC5 0002                            LDB,B3   2,B5
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:207  
          2 000A98  9CC3 0004                            LDB,B1   4,B3
          2 000A9A  E841 0033                            LDR,R6   51,B1
          2 000A9C  EF47 004E                            STR,R6   NRESERVE+1,AUTO

     1539    18481    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$HIPDEV.CTR$->KZ$HIPCTR.ADR;

  18481   2 000A9E  BCC5 0002                            LDB,B3   2,B5
          2 000AA0  D2C3 000A                            LLH,R5   10,B3
          2 000AA2  DF47 004F                            STR,R5   NRESERVE+2,AUTO

     1540    18482    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$HIPDEV.ADR;

  18482   2 000AA4  C2C5 0015                            LLH,R4   21,B5
          2 000AA6  CF47 0050                            STR,R4   CURBYTES,AUTO

     1541    18483    3              FPT_WRSYSLOG.V.VALUES(3)=KV$USR_EVT.PRM;

  18483   2 000AA8  BCC7 0006                            LDB,B3   PARM$,AUTO
          2 000AAA  B843 0001                            LDR,R3   1,B3
          2 000AAC  BF47 0051                            STR,R3   MAXDATA,AUTO
          2 000AAE  0F81 0033                            B        s:18517,PREL

     1542    18484
     1543    18485    3            CASE (%E$DATOVRFLW);

     1544    18486        /*E* ERROR:        KZH-E$DATOVRFLW-7
     1545    18487             MESSAGE:      More overprint data than buffer will allow.
     1546    18488             DESCRIPTION:  For printers, all data for a given line must be sent
     1547    18489                           in the same output block.  There is too much data in
     1548    18490                           this line to be sent in one output block.
     1549    18491                           V0 = Channel number.
     1550    18492                           V1/V2 = Controller/Device numbers.
     1551    18493                           V3 = Number of bytes needed to send in this block.
     1552    18494        */
     1553    18495    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$HIPDEV.CTR$->KZ$HIPCTR.LIN$->KZ$LINCTX.CHAN;

  18495   2 000AB0  DCC7 0008                            LDB,B5   DEV$,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:208  
          2 000AB2  BCC5 0002                            LDB,B3   2,B5
          2 000AB4  9CC3 0004                            LDB,B1   4,B3
          2 000AB6  E841 0033                            LDR,R6   51,B1
          2 000AB8  EF47 004E                            STR,R6   NRESERVE+1,AUTO

     1554    18496    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$HIPDEV.CTR$->KZ$HIPCTR.ADR;

  18496   2 000ABA  BCC5 0002                            LDB,B3   2,B5
          2 000ABC  D2C3 000A                            LLH,R5   10,B3
          2 000ABE  DF47 004F                            STR,R5   NRESERVE+2,AUTO

     1555    18497    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$HIPDEV.ADR;

  18497   2 000AC0  C2C5 0015                            LLH,R4   21,B5
          2 000AC2  CF47 0050                            STR,R4   CURBYTES,AUTO

     1556    18498    3              FPT_WRSYSLOG.V.VALUES(3)=J;

  18498   2 000AC4  B847 0024                            LDR,R3   J,AUTO
          2 000AC6  BF47 0051                            STR,R3   MAXDATA,AUTO
          2 000AC8  0F81 0019                            B        s:18517,PREL

     1557    18499
     1558    18500    3            CASE (%E$NO_MEMORY);

     1559    18501        /*E* ERROR:        KZH-E$NO_MEMORY-6
     1560    18502             MESSAGE:      Insufficient BISYNC MEMory (a NETCON parameter).
     1561    18503             DESCRIPTION:  A KVB call ALTRETed to indicate that BISYNC is out of
     1562    18504                           MEMory.  Since a necessary I/O buffer or device context
     1563    18505                           could not be allocated, the 3270 LINE associated
     1564    18506                           with the request has been disconnected.
     1565    18507                           V0 = Channel number.
     1566    18508                           V1/V2 = Controller/Device numbers.
     1567    18509                           V3 = Size of buffer, in words, which could not be allocated.
     1568    18510        */
     1569    18511    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$HIPDEV.CTR$->KZ$HIPCTR.LIN$->

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:209  
  18511   2 000ACA  DCC7 0008                            LDB,B5   DEV$,AUTO
          2 000ACC  BCC5 0002                            LDB,B3   2,B5
          2 000ACE  9CC3 0004                            LDB,B1   4,B3
          2 000AD0  E841 0033                            LDR,R6   51,B1
          2 000AD2  EF47 004E                            STR,R6   NRESERVE+1,AUTO

     1570    18512    3                KZ$LINCTX.CHAN;
     1571    18513    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$HIPDEV.CTR$->KZ$HIPCTR.ADR;

  18513   2 000AD4  BCC5 0002                            LDB,B3   2,B5
          2 000AD6  D2C3 000A                            LLH,R5   10,B3
          2 000AD8  DF47 004F                            STR,R5   NRESERVE+2,AUTO

     1572    18514    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$HIPDEV.ADR;

  18514   2 000ADA  C2C5 0015                            LLH,R4   21,B5
          2 000ADC  CF47 0050                            STR,R4   CURBYTES,AUTO

     1573    18515    3              FPT_WRSYSLOG.V.VALUES(3)=SZ;

  18515   2 000ADE  B847 001E                            LDR,R3   SZ,AUTO
          2 000AE0  BF47 0051                            STR,R3   MAXDATA,AUTO

     1574    18516    3            END;

     1575    18517    2           CALL KHA$ERRLOG(FPT_WRSYSLOG);

  18517   2 000AE2  DBC7 003E                            LAB,B5   FPT_WRSYSLOG,AUTO
          2 000AE4  DFC7 0054                            STB,B5   MAXDATA+3,AUTO
          2 000AE6  BBC7 0054                            LAB,B3   MAXDATA+3,AUTO
          2 000AE8  CBF0 0100                            LAB,B4   256,IMO
          2 000AEA  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 000AED       0001                            DC       s:18518,PREL

     1576    18518    2           RETURN;

  18518   2 000AEE  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:210  
          2 000AF0  C3C6 0001                            LNJ,B4   1,B6

     1577    18519    2   END ERRLOG;
     1578    18520        %EJECT;
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:211  
     1579    18521        /* GET_VAL - Get various interesting values from KV$VDI that describe
     1580    18522           the current buffer */
     1581    18523
     1582    18524    1   GET_VAL: PROC;

  18524   2 000AF2  EFC7 003C            GET_VAL         STB,B6   @ERROR,AUTO

     1583    18525
     1584    18526    2           BFR$=%KV_VDI.OTPBFR_.ADR$;

  18526   2 000AF4  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000AF7  CC85                                 LDB,B4   ,B5
          2 000AF8  BCC4 000A                            LDB,B3   10,B4
          2 000AFA  BFC7 000E                            STB,B3   BFR$,AUTO

     1585    18527    2           BYTX=%KV_VDI.OTPBFR_.BYTX;

  18527   2 000AFC  CC85                                 LDB,B4   ,B5
          2 000AFD  E844 000C                            LDR,R6   12,B4
          2 000AFF  EF47 0025                            STR,R6   BYTX,AUTO

     1586    18528    2           BYTSIZ=%KV_VDI.OTPBFR_.BYTSIZ;

  18528   2 000B01  D844 000D                            LDR,R5   13,B4
          2 000B03  DF47 0026                            STR,R5   BYTSIZ,AUTO

     1587    18529    2           MAX_ROW = %KV_MRD.LNG;

  18529   2 000B05  ACC5 0008                            LDB,B2   8,B5
          2 000B07  C2C2 0015                            LLH,R4   21,B2
          2 000B09  CF47 001C                            STR,R4   MAX_ROW,AUTO

     1588    18530    2           MAX_COL = %KV_MRD.WDT;

  18530   2 000B0B  B842 000B                            LDR,R3   11,B2
          2 000B0D  BF47 001D                            STR,R3   MAX_COL,AUTO

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:212  
     1589    18531    2           RETURN;

  18531   2 000B0F  ECC7 003C                            LDB,B6   @ERROR,AUTO
          2 000B11  C3C6 0001                            LNJ,B4   1,B6

     1590    18532    2   END GET_VAL;
     1591    18533
     1592    18534
     1593    18535
     1594    18536        /* SET_VAL - Update the buffer info in KV$VDI */
     1595    18537
     1596    18538    1   SET_VAL: PROC;

  18538   2 000B13  EFC7 003C            SET_VAL         STB,B6   @ERROR,AUTO

     1597    18539
     1598    18540    2           %KV_VDI.OTPBFR_.ADR$=BFR$;

  18540   2 000B15  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000B18  CC85                                 LDB,B4   ,B5
          2 000B19  BCC7 000E                            LDB,B3   BFR$,AUTO
          2 000B1B  BFC4 000A                            STB,B3   10,B4

     1599    18541    2           %KV_VDI.OTPBFR_.BYTX=BYTX;

  18541   2 000B1D  EC85                                 LDB,B6   ,B5
          2 000B1E  E847 0025                            LDR,R6   BYTX,AUTO
          2 000B20  EF46 000C                            STR,R6   12,B6

     1600    18542    2           %KV_VDI.OTPBFR_.BYTSIZ=BYTSIZ;

  18542   2 000B22  EC85                                 LDB,B6   ,B5
          2 000B23  D847 0026                            LDR,R5   BYTSIZ,AUTO
          2 000B25  DF46 000D                            STR,R5   13,B6

     1601    18543    2           RETURN;

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:213  
  18543   2 000B27  ECC7 003C                            LDB,B6   @ERROR,AUTO
          2 000B29  C3C6 0001                            LNJ,B4   1,B6

     1602    18544    2   END SET_VAL;
     1603    18545
     1604    18546    1   SEND_HTEXTC:PROC(HTEXTC) ALTRET;

  18546   2 000B2B  EFC7 003A            SEND_HTEXTC     STB,B6   DISABLE_LEVEL+1,AUTO

     1605    18547        /* BUFFERS CHARACTERS IN HTEXTC */
     1606    18548    2   DCL 1 HTEXTC,
     1607    18549    2         2 N SBIN,
     1608    18550    2         2 C CHAR(HTEXTC.N);
     1609    18551
     1610    18552    2           CALL CHK_BFR_SIZ(HTEXTC.N) ALTRET(NO_MEMORY);

  18552   2 000B2D  DCC7 003C                            LDB,B5   @HTEXTC,AUTO
          2 000B2F  DFC7 003C                            STB,B5   @HTEXTC,AUTO
          2 000B31  E3C0 FC24                            LNJ,B6   s:0,PREL
          2 000B33       0019                            DC       s:18561,PREL

     1611    18553
     1612    18554    2           CALL INSERT(BFR$->BYTS,BYTX,HTEXTC.N,HTEXTC.C);

  18554   2 000B34  ECC7 003C                            LDB,B6   @HTEXTC,AUTO
          2 000B36  E806                                 LDR,R6   ,B6
          2 000B37  AB86                                 LAB,B2   ,B6
          2 000B38  2C02                                 LDV,R2   2
          2 000B39  BCC7 000E                            LDB,B3   BFR$,AUTO
          2 000B3B  B847 0025                            LDR,R3   BYTX,AUTO
          2 000B3D  0008                                 MMM

     1613    18555    2           BYTX=BYTX+HTEXTC.N;

  18555   2 000B3E  E847 0025                            LDR,R6   BYTX,AUTO
          2 000B40  EA02                                 ADD,R6   ,B2
          2 000B41  EF47 0025                            STR,R6   BYTX,AUTO
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:214  

     1614    18556    2           BYTSIZ=BYTSIZ-HTEXTC.N;

  18556   2 000B43  D847 0026                            LDR,R5   BYTSIZ,AUTO
          2 000B45  D202                                 SUB,R5   ,B2
          2 000B46  DF47 0026                            STR,R5   BYTSIZ,AUTO

     1615    18557
     1616    18558    2           RETURN;

  18558   2 000B48  ECC7 003A                            LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000B4A  C3C6 0001                            LNJ,B4   1,B6

     1617    18559
     1618    18560    2   NO_MEMORY:
     1619    18561    2           ALTRETURN;

  18561   2 000B4C  ECC7 003A            NO_MEMORY       LDB,B6   DISABLE_LEVEL+1,AUTO
          2 000B4E  B806                                 LDR,R3   ,B6
          2 000B4F  C3B6                                 LNJ,B4   ,B6,R3
     1620    18562
     1621    18563    2   END SEND_HTEXTC;
     1622    18564    1   END KZH$HIP;

PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:215  
--  Include file information  --

   KZ_HIPTAB_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KZ$BSCSTT.:E05TOU  is referenced.
   KZ$3270STT.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$USR.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KZ_PERR_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   KZ_HIP_C.:E05TOU  is referenced.
   KZ$OTPBFR.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KZ$HIPFLDS.:E05TOU  is referenced.
   KZ$HIPCTR.:E05TOU  is referenced.
   KZ$HIPDEV.:E05TOU  is referenced.
   KZ$HIPBRACKET.:E05TOU  is referenced.
   KZ_3270_C.:E05TOU  is referenced.
   KHC_MAC_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:216  
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure KZH$HIP.
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:217  

 **** Variables and constants ****

  ****  Section 000 RoData KZH$HIP

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    81-0-0/w STRC(336)   r     1 FPT@WRSYSLOG              71-0-0/w STRC(176)   r     1 KH_CLK_RESET
     0-0-0/w UBIN(16)    r     1 KZH_BUFFER_THROTTLE       7F-0-0/w SBIN(16)    r     1 KZH_ESCAPE_RESERVE
    80-0-0/w SBIN(16)    r     1 KZH_INITBFR_SIZE
     1-0-0/c UBIN(8)     r     1 KZ_HIPXL(0:63)
     1-0-0/b BIT (8)     r     1 KZ_HIPXLB(0:63)
    21-0-0/w UBIN(16)    r     1 KZ_HIP_BFRSIZ(0:8)
    69-0-0/w STRC(128)   r     1 KZ_OTPBFR                 60-0-0/w STRC(144)   r     1 RMS_7804
    2A-0-0/w STRC(576)   r     1 VIP7814

  ****  Section 001  Data  KZH$HIP

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(112)   r     1 KV$VDH_RLSBFR              7-0-0/w STRC(128)   r     1 TABTABLE_7804

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    3E-0-0/w PTR         r     1 @C                        3E-0-0/w PTR         r     1 @ECOL
    42-0-0/w PTR         r     1 @ECOL1                    44-0-0/w PTR         r     1 @ECOL2
    46-0-0/w PTR         r     1 @ECOL3                    3C-0-0/w PTR         r     1 @EROW
    40-0-0/w PTR         r     1 @EROW1                    3C-0-0/w PTR         r     1 @ERROR
    3C-0-0/w PTR         r     1 @HTEXTC                    4-0-0/w PTR         r     1 @PARM
    4A-0-0/w PTR         r     1 @POWER2                   4A-0-0/w PTR         r     1 @QUEUE_ON_TAIL
    3C-0-0/w PTR         r     1 @R                        3C-0-0/w PTR         r     1 @SIZ
    4C-0-0/w SBIN(16)    r     1 ADR                       27-0-0/b STRC(8)     r     1 ATTR_CHAR
    27-0-0/c UBIN(8)     r     1 ATTR_CHR                   E-0-0/w PTR         r     1 BFR$
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:218  
    26-0-0/w UBIN(16)    r     1 BYTSIZ                    25-0-0/w UBIN(16)    r     1 BYTX
    *0-0-0/w SBIN(16)    r     1 C                         16-0-0/w SBIN(16)    r     1 COL
    18-0-0/w SBIN(16)    r     1 COL1                       A-0-0/w PTR         r     1 CTR$
    50-0-0/w SBIN(16)    r     1 CURBYTES                  40-0-0/w SBIN(16)    r     1 CURBYTES
    41-0-0/w SBIN(16)    r     1 CURWORDS                  41-0-0/w SBIN(16)    r     1 C_MRD
     8-0-0/w PTR         r     1 DEV$                      39-0-0/w UBIN(16)    r     1 DISABLE_LEVEL
    *0-0-0/w UBIN(16)    r     1 ECOL                      *0-0-0/w UBIN(16)    r     1 ECOL1
    *0-0-0/w UBIN(16)    r     1 ECOL2                     *0-0-0/w UBIN(16)    r     1 ECOL3
    *0-0-0/w UBIN(16)    r     1 EROW                      *0-0-0/w UBIN(16)    r     1 EROW1
    *0-0-0/w UBIN(16)    r     1 ERROR                     3C-0-0/b UBIN(8)     r     1 FILLCHAR
    3E-0-0/w STRC(336)   r     1 FPT_WRSYSLOG              *0-0-0/w ASTR(16)    r     1 HTEXTC
    23-0-0/w SBIN(16)    r     1 I                         24-0-0/w SBIN(16)    r     1 J
    3E-0-0/w UBIN(16)    r     1 J                         21-0-0/w SBIN(16)    r     1 K
    2D-0-0/w STRC(176)   r     1 KH$CLK                    28-0-0/w STRC(8)     r     1 KV$GRPRND
     C-0-0/w PTR         r     1 LIN$                      42-0-0/w SBIN(16)    r     1 MARKBYTES
    51-0-0/w SBIN(16)    r     1 MAXDATA                   1D-0-0/w SBIN(16)    r     1 MAX_COL
    1C-0-0/w SBIN(16)    r     1 MAX_ROW                   43-0-0/w SBIN(16)    r     1 NEWBYTES
    45-0-0/w SBIN(16)    r     1 NEWPOWER2                 44-0-0/w SBIN(16)    r     1 NEWWORDS
    4D-0-0/w SBIN(16)    r     1 NRESERVE                  4C-0-0/w SBIN(16)    r     1 NRESERVE
    *0-0-0/w UBIN(16)    r     1 PARM                       6-0-0/w PTR         r     1 PARM$
    *0-0-0/w SBIN(16)    r     1 POWER2                    46-0-0/w SBIN(16)    r     1 PRODEVMAX
    *0-0-0/w BIT         r     1 QUEUE_ON_TAIL             *0-0-0/w SBIN(16)    r     1 R
    15-0-0/w SBIN(16)    r     1 ROW                       17-0-0/w SBIN(16)    r     1 ROW1
    40-0-0/w SBIN(16)    r     1 R_MRD                     *0-0-0/w UBIN(16)    r     1 SIZ
    1E-0-0/w SBIN(16)    r     1 SZ                        1F-0-0/w SBIN(16)    r     1 SZX
    12-0-0/w PTR         r     1 T$                        10-0-0/w PTR         r     1 TBFR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KH_INHLVL                  0-0-0/w PTR         r     1 KV$PTR$
     0-0-0/w STRC(32)    r     1 KV_VDH_EVT_CMPOTP          0-0-0/w STRC(32)    r     1 KV_VDH_EVT_RQSOTP
     0-0-0/w STRC(272)   r     1 KZ_HIP_HDR

  ****  BASED and DCB variables  ****
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:219  

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c UBIN(8)     r     1 BYT(0:1023)                0-0-0/c ACHR        r     1 BYTS
     0-0-0/c CHAR        r     1 CHR1                       0-0-0/c ACHR        r     1 CURCONTENTS
     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(512)   r     1 KV$MRD
     0-0-0/w STRC(512)   r     1 KV$MVD                     0-0-0/w STRC(48)    r     1 KV$OTPMRK
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(496)   r     1 KV$SRD
     0-0-0/w STRC(128)   r     1 KV$USR_DAT                 0-0-0/w STRC(32)    r     1 KV$USR_EVT
     0-0-0/w STRC(32)    r     1 KV$USR_GETOTPBFR           0-0-0/w STRC(112)   r     1 KV$USR_GETPRM
     0-0-0/w STRC(64)    r     1 KV$USR_OTPMRK              0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(176)   r     1 KZ$HIPCTR                  0-0-0/w STRC(560)   r     1 KZ$HIPDEV
     0-0-0/c STRC(72)    r     1 KZ$HIPHEAD                 0-0-0/c STRC(40)    r     1 KZ$HIPTAIL
     0-0-0/w STRC(2192)  r     1 KZ$LINCTX                  0-0-0/w STRC(128)   r     1 KZ$OTPBFR
     0-0-0/w STRC(2656)  r     1 KZ@HIPSTT                  0-0-0/c ACHR        r     1 MARKCONTENTS


   Procedure KZH$HIP requires 2896 words for executable code.
   Procedure KZH$HIP requires 91 words of local(AUTO) storage.

    No errors detected in file KZH$HIP.:E05TSI    .
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:220  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:221  
          MINI XREF LISTING

ADR IN PROCEDURE DONE
     17576**DCL     17588<<ASSIGN  17593>>CALLBLT 17593>>CALLBLT 17597>>CALLBLT 17597>>CALLBLT 17597>>CALLBLT
     17599>>ASSIGN
ALTRTN
     17465**LABEL   17179--GOTO    17181--GOTO    17443--GOTO    17472--GOTO
ATTR_CHAR
     13513**DCL     13520--REDEF
ATTR_CHAR.INTENSITY
     13517**DCL     17476<<ASSIGN  17479<<ASSIGN  17482<<ASSIGN
ATTR_CHR
     13520**DCL     18080>>ASSIGN
BFR$
     13479**DCL     14496--IMP-PTR 14522--IMP-PTR 17076>>IF      17079>>IF      17080>>ASSIGN  17080>>ASSIGN
     17090>>ASSIGN  17090>>ASSIGN  17091>>ASSIGN  17091>>ASSIGN  17091>>ASSIGN  17129>>CALLBLT 17287>>IF
     17290>>ASSIGN  17292>>ASSIGN  17414>>IF      17531<<ASSIGN  17580>>IF      17593>>CALLBLT 17597>>CALLBLT
     17602>>ASSIGN  17609>>ASSIGN  17610>>ASSIGN  17613>>ASSIGN  17614>>ASSIGN  17616<<ASSIGN  17636>>ASSIGN
     17638>>ASSIGN  17639>>ASSIGN  17641>>ASSIGN  17709<<ASSIGN  17777<<ASSIGN  17787>>ASSIGN  17788>>ASSIGN
     17789>>ASSIGN  17790>>ASSIGN  17791>>ASSIGN  17876>>IF      17877>>ASSIGN  17883>>IF      17893>>ASSIGN
     17932>>ASSIGN  17932>>ASSIGN  17934>>ASSIGN  17935>>IF      17936>>ASSIGN  17937>>ASSIGN  17937>>ASSIGN
     17945<>CALL    17953<<ASSIGN  17955>>ASSIGN  18079>>ASSIGN  18080>>ASSIGN  18239>>IF      18526<<ASSIGN
     18540>>ASSIGN  18554>>CALLBLT
BYT
     15956**DCL     18079<<ASSIGN  18080<<ASSIGN
BYTS
     15955**DCL     17593<<CALLBLT 18554<<CALLBLT
BYTSIZ
     13512**DCL     17087>>IF      17094<<ASSIGN  17094>>ASSIGN  17134<<ASSIGN  17134>>ASSIGN  17471<<ASSIGN
     17711<<ASSIGN  17796<<ASSIGN  17807<<ASSIGN  17807>>ASSIGN  17828>>IF      17829<<ASSIGN  17869>>IF
     17954<<ASSIGN  17954>>ASSIGN  17986>>IF      17987>>IF      17991<<ASSIGN  18083<<ASSIGN  18083>>ASSIGN
     18528<<ASSIGN  18542>>ASSIGN  18556<<ASSIGN  18556>>ASSIGN
BYTX
     13499**DCL     17129>>CALLBLT 17133<<ASSIGN  17133>>ASSIGN  17597>>CALLBLT 17599<<ASSIGN  17599>>ASSIGN
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:222  
     17602>>ASSIGN  17710<<ASSIGN  17795<<ASSIGN  17806<<ASSIGN  17806>>ASSIGN  17825>>ASSIGN  18079>>ASSIGN
     18080>>ASSIGN  18082<<ASSIGN  18082>>ASSIGN  18527<<ASSIGN  18541>>ASSIGN  18554>>CALLBLT 18555<<ASSIGN
     18555>>ASSIGN
C IN PROCEDURE STORE_MRD
     18093**DCL     18091--PROC    18097>>ASSIGN
CHK_BFR_SIZ
     17854**PROC    17014--CALL    17124--CALL    17247--CALL    18025--CALL    18073--CALL    18150--CALL
     18552--CALL
CHR1
     15957**DCL     17129<<CALLBLT 17129>>CALLBLT 17597<<CALLBLT
CLEAR
     18228**PROC    17505--CALL    17532--CALL
CMP_OTP
     18237**PROC    17416--CALL    17421--CALL    17550--CALL
COL
     13484**DCL     18077>>CALL    18155<<ASSIGN  18166>>ASSIGN
COL1
     13486**DCL     18155>>ASSIGN  18166<<ASSIGN
COMMON_EXPANSION IN PROCEDURE CHK_BFR_SIZ
     17876**LABEL   17872--GOTO
CTR$
     13477**DCL     14278--IMP-PTR 16984<<ASSIGN  16985>>ASSIGN  17176>>DOSELCT 17304>>DOSELCT 17500<<ASSIGN
     17501>>ASSIGN  17526<<ASSIGN  17527>>ASSIGN  17546<<ASSIGN  17547>>ASSIGN  17584>>DOSELCT 17798>>DOSELCT
     17886>>DOSELCT
CURBYTES IN PROCEDURE CHK_BFR_SIZ
     17860**DCL     17859--IMP-SIZ 17894<<ASSIGN  17895>>IF      17931>>ASSIGN  17934>>ASSIGN  17934>>ASSIGN
     17954>>ASSIGN
CURBYTES IN PROCEDURE FIT_BLKBYTES
     17816**DCL     17825<<ASSIGN  17828>>IF      17829>>ASSIGN
CURCONTENTS IN PROCEDURE CHK_BFR_SIZ
     17859**DCL     17934<<ASSIGN  17934>>ASSIGN
CURWORDS IN PROCEDURE CHK_BFR_SIZ
     17861**DCL     17893<<ASSIGN  17894>>ASSIGN  17903>>IF      17945<>CALL
C_MRD IN PROCEDURE STORE_MRD
     18095**DCL     18097<<ASSIGN  18098>>IF      18100<<ASSIGN  18105>>ASSIGN
DEV$
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:223  
     13476**DCL     14315--IMP-PTR 16983<<ASSIGN  16984>>ASSIGN  16986>>ASSIGN  17042>>ASSIGN  17099>>ASSIGN
     17210>>ASSIGN  17211>>ASSIGN  17217>>IF      17223>>ASSIGN  17245>>IF      17258>>IF      17263>>ASSIGN
     17264>>ASSIGN  17265>>CALL    17286>>IF      17334>>ASSIGN  17358>>CALL    17380>>IF      17382>>ASSIGN
     17383>>CALL    17386>>IF      17387>>CALL    17389>>IF      17390>>CALL    17392>>IF      17394>>ASSIGN
     17395>>CALL    17415>>IF      17419>>ASSIGN  17420>>IF      17435>>ASSIGN  17436>>IF      17436>>IF
     17446>>ASSIGN  17470>>CALL    17499<<ASSIGN  17500>>ASSIGN  17525<<ASSIGN  17526>>ASSIGN  17534>>ASSIGN
     17536>>ASSIGN  17545<<ASSIGN  17546>>ASSIGN  17588>>ASSIGN  17589>>ASSIGN  17590>>IF      17610>>ASSIGN
     17610>>ASSIGN  17612>>IF      17617>>CALL    17635>>IF      17636>>ASSIGN  17638>>ASSIGN  17639>>ASSIGN
     17640>>ASSIGN  17640>>ASSIGN  17643>>IF      17643>>IF      17645>>ASSIGN  17648>>ASSIGN  17650>>ASSIGN
     17651>>ASSIGN  17655>>ASSIGN  17657>>ASSIGN  17658>>ASSIGN  17661>>ASSIGN  17665>>IF      17667>>ASSIGN
     17746>>IF      17747>>ASSIGN  17791>>ASSIGN  17802>>ASSIGN  17803>>IF      17807>>ASSIGN  17807>>ASSIGN
     17902>>DOWHILE 17907>>IF      17971>>DOWHILE 17977>>IF      18254>>ASSIGN  18461>>ASSIGN  18480>>ASSIGN
     18481>>ASSIGN  18482>>ASSIGN  18495>>ASSIGN  18496>>ASSIGN  18497>>ASSIGN  18511>>ASSIGN  18513>>ASSIGN
     18514>>ASSIGN
DISABLE_LEVEL
     13776**DCL     17220<<ASSIGN  17221<>CALL    17229>>IF      17260<<ASSIGN  17261<>CALL    17267>>IF
     17349<<ASSIGN  17350<>CALL    17360>>IF      17376<<ASSIGN  17377<>CALL    17398>>IF      17432<<ASSIGN
     17433<>CALL    17438>>IF      17448>>IF      17606<<ASSIGN  17607<>CALL    17619>>IF      17702>>IF
     17753<<ASSIGN  17754<>CALL    17758>>IF      17768>>IF      17911<<ASSIGN  17912<>CALL    17918>>IF
     17926>>IF      17942<<ASSIGN  17943<>CALL    17947>>IF
DONE
     17575**PROC    17101--CALL    17212--CALL    17294--CALL    17535--CALL    17964--CALL    18253--CALL
ECOL IN PROCEDURE ERSWNDW
     18214**DCL     18211--PROC
ECOL1 IN PROCEDURE ERSWNDW
     18216**DCL     18211--PROC
ECOL2 IN PROCEDURE ERSWNDW
     18217**DCL     18211--PROC
ECOL3 IN PROCEDURE ERSWNDW
     18218**DCL     18211--PROC
EROW IN PROCEDURE ERSWNDW
     18213**DCL     18211--PROC
EROW1 IN PROCEDURE ERSWNDW
     18215**DCL     18211--PROC
ERRLOG
     18266**PROC    17333--CALL    17469--CALL
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:224  
ERROR IN PROCEDURE ERRLOG
     18267**DCL     18266--PROC    18462>>ASSIGN  18464>>DOCASE
ERS2 IN PROCEDURE ERS
     18155**LABEL   18167--GOTO
ERSC IN PROCEDURE ERS
     18165**LABEL   18173--GOTO
EXP_BFR IN PROCEDURE CHK_BFR_SIZ
     17875**ENTRY   17077--CALL    17088--CALL
FILLCHAR IN PROCEDURE ERS
     18147**DCL     18153<<ASSIGN  18163<<ASSIGN  18172<<ASSIGN
FIT_BLKBYTES
     17815**PROC    17811--CALL    17956--CALL
FPT@WRSYSLOG IN PROCEDURE ERRLOG
     18377**DCL     18460>>ASSIGN
FPT@WRSYSLOG.V IN PROCEDURE ERRLOG
     18381**DCL     18379--DCLINIT
FPT@WRSYSLOG.V.TERMID.TERM IN PROCEDURE ERRLOG
     18446**DCL     18455--REDEF
FPT_WRSYSLOG IN PROCEDURE ERRLOG
     18282**DCL     18460<<ASSIGN  18517<>CALL
FPT_WRSYSLOG.V.ERRCODE.ERR# IN PROCEDURE ERRLOG
     18330**DCL     18462<<ASSIGN
FPT_WRSYSLOG.V.TERMID IN PROCEDURE ERRLOG
     18349**DCL     18461<<ASSIGN
FPT_WRSYSLOG.V.TERMID.TERM IN PROCEDURE ERRLOG
     18351**DCL     18360--REDEF
FPT_WRSYSLOG.V.VALUES IN PROCEDURE ERRLOG
     18362**DCL     18480<<ASSIGN  18481<<ASSIGN  18482<<ASSIGN  18483<<ASSIGN  18495<<ASSIGN  18496<<ASSIGN
     18497<<ASSIGN  18498<<ASSIGN  18511<<ASSIGN  18513<<ASSIGN  18514<<ASSIGN  18515<<ASSIGN
GET_VAL
     18524**PROC    16990--CALL    17503--CALL    17549--CALL    18252--CALL
GOTBFR IN PROCEDURE INITBFR
     17777**LABEL   17765--GOTO
HTEXTC IN PROCEDURE SEND_HTEXTC
     18548**DCL     18546--PROC
HTEXTC.C IN PROCEDURE SEND_HTEXTC
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:225  
     18550**DCL     18554>>CALLBLT
HTEXTC.N IN PROCEDURE SEND_HTEXTC
     18549**DCL     18550--IMP-SIZ 18552<>CALL    18554>>CALLBLT 18554>>CALLBLT 18555>>ASSIGN  18556>>ASSIGN
I
     13497**DCL     15955--IMP-SIZ 17354<<ASSIGN  17356<>CALL    17593>>CALLBLT 18554>>CALLBLT
INITBFR
     17739**PROC    17288--CALL    17978--CALL    17980--CALL    17983--CALL
J
     13498**DCL     17127<<ASSIGN  17129>>CALLBLT 18498>>ASSIGN
J IN PROCEDURE CHK_BFR_SIZ
     17857**DCL     17909<<ASSIGN  17914<>CALL    17931>>ASSIGN
K
     13495**DCL     17123<<ASSIGN  17124<>CALL    17125<<ASSIGN  17129>>CALLBLT 17129>>CALLBLT 17133>>ASSIGN
     17134>>ASSIGN
KH$CHN.LINSPD
     15898**DCL     17042>>ASSIGN
KH$CHN.TERMID.TERM
     15940**DCL     15949--REDEF
KH$CLK
     13631**DCL     17696<<ASSIGN  17699<>CALL
KH$CLK.CTBCTX$
     13637**DCL     17698<<ASSIGN
KH$CLK.PRD
     13752**DCL     17697<<ASSIGN
KH$CLK.UID
     13647**DCL     13648--REDEF   13649--REDEF
KHA$ERRLOG
     16014**DCL-ENT 18517--CALL
KHC$CLOCK
     16013**DCL-ENT 17699--CALL
KHI$DISABLE
     13770**DCL-ENT 17221--CALL    17261--CALL    17350--CALL    17377--CALL    17433--CALL    17607--CALL
     17754--CALL    17912--CALL    17943--CALL
KHI$ENABLE
     13769**DCL-ENT 17231--CALL    17269--CALL    17362--CALL    17400--CALL    17440--CALL    17450--CALL
     17621--CALL    17704--CALL    17760--CALL    17770--CALL    17920--CALL    17928--CALL    17949--CALL
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:226  
KH_CLK_RESET
     16174**DCL     17696>>ASSIGN
KH_CLK_RESET.UID
     16190**DCL     16191--REDEF   16192--REDEF
KH_INHLVL
     16397**DCL     17220>>ASSIGN  17229>>IF      17260>>ASSIGN  17267>>IF      17349>>ASSIGN  17360>>IF
     17376>>ASSIGN  17398>>IF      17432>>ASSIGN  17438>>IF      17448>>IF      17606>>ASSIGN  17619>>IF
     17702>>IF      17753>>ASSIGN  17758>>IF      17768>>IF      17911>>ASSIGN  17918>>IF      17926>>IF
     17942>>ASSIGN  17947>>IF
KV$GRPRND.DCRINT
     13544**DCL     17481>>IF
KV$GRPRND.HDN
     13544**DCL     17475>>IF
KV$GRPRND.INCINT
     13544**DCL     17478>>IF
KV$MRD.DVCCLM
     15055**DCL     18105<<ASSIGN
KV$MRD.DVCLIN
     15055**DCL     18104<<ASSIGN
KV$MRD.LNG
     15037**DCL     18529>>ASSIGN
KV$MRD.WDT
     15034**DCL     18530>>ASSIGN
KV$MVD.INPTAB$
     14642**DCL     17314>>IF      17314>>IF      17317>>ASSIGN  17322<<ASSIGN
KV$MVD.ORG
     14647**DCL     17304>>DOSELCT 17590>>IF      17803>>IF
KV$MVD.SPACEINSERT
     14648**DCL     17310<<ASSIGN
KV$MVD.TABRELATIVE
     14649**DCL     17309<<ASSIGN
KV$MVD.TABSIM
     14649**DCL     17311<<ASSIGN
KV$OTPMRK
     15821**DCL     17080--ASSIGN  17082<<ASSIGN  17087--IF      17091--ASSIGN  17093<<ASSIGN  17094--ASSIGN
     17936--ASSIGN  17967--ASSIGN
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:227  
KV$OTPMRK.ID
     15826**DCL     15826--REDEF   15827--REDEF
KV$OTPMRK.MSTRTR
     15825**DCL     17081>>IF
KV$PTR.INPCNDPND
     14604**DCL     14613--REDEF   14617--REDEF
KV$PTR.LINLST$
     14600**DCL     14601--REDEF
KV$PTR.MRD$
     14599**DCL     18104>>ASSIGN  18105>>ASSIGN  18529>>ASSIGN  18530>>ASSIGN
KV$PTR.MVD$
     14599**DCL     17304>>DOSELCT 17309>>ASSIGN  17310>>ASSIGN  17311>>ASSIGN  17314>>IF      17314>>IF
     17317>>ASSIGN  17322>>ASSIGN  17590>>IF      17803>>IF
KV$PTR.SRD$
     14600**DCL     17312>>ASSIGN  17590>>IF      17803>>IF
KV$PTR.VDI$
     14598**DCL     16983>>ASSIGN  17257>>IF      17352>>ASSIGN  17355>>ASSIGN  17616>>ASSIGN  17674>>IF
     17675>>ASSIGN  17676>>IF      18248>>IF      18526>>ASSIGN  18527>>ASSIGN  18528>>ASSIGN  18540>>ASSIGN
     18541>>ASSIGN  18542>>ASSIGN
KV$PTR$
     14592**DCL     14598--IMP-PTR 16983>>ASSIGN  17257>>IF      17304>>DOSELCT 17309>>ASSIGN  17310>>ASSIGN
     17311>>ASSIGN  17312>>ASSIGN  17314>>IF      17314>>IF      17317>>ASSIGN  17322>>ASSIGN  17352>>ASSIGN
     17355>>ASSIGN  17590>>IF      17590>>IF      17616>>ASSIGN  17674>>IF      17675>>ASSIGN  17676>>IF
     17803>>IF      17803>>IF      18104>>ASSIGN  18105>>ASSIGN  18248>>IF      18526>>ASSIGN  18527>>ASSIGN
     18528>>ASSIGN  18529>>ASSIGN  18530>>ASSIGN  18540>>ASSIGN  18541>>ASSIGN  18542>>ASSIGN
KV$SRD.BTMRHT
     14781**DCL     14786--REDEF
KV$SRD.CRT
     14857**DCL     14862--REDEF
KV$SRD.FLDEND
     14821**DCL     14826--REDEF
KV$SRD.HI_NONBLN
     14891**DCL     14896--REDEF
KV$SRD.ORG
     14713**DCL     14718--REDEF
KV$SRD.SCROLL
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:228  
     14790**DCL     17312<<ASSIGN  17590>>IF      17803>>IF
KV$SRD.SRDEND
     14926**DCL     14931--REDEF
KV$SRD.TOPLFT
     14747**DCL     14752--REDEF
KV$USR_DAT.DAT__.ADR$
     15192**DCL     17126>>ASSIGN
KV$USR_DAT.DAT__.BYTX
     15192**DCL     17127>>ASSIGN
KV$USR_DAT.DAT__.DATBYTSIZ
     15192**DCL     17123>>ASSIGN  17125>>ASSIGN
KV$USR_DAT.FNC
     15140**DCL     16987>>IF      16994>>DOCASE
KV$USR_ERS.BTMRHT
     15298**DCL     15303--REDEF
KV$USR_ERS.TOPLFT
     15264**DCL     15269--REDEF
KV$USR_EVT.ID
     15341**DCL     16988>>IF      17202>>DOCASE
KV$USR_EVT.PRM
     15341**DCL     16989>>IF      17247>>CALL    17289>>IF      17347>>IF      18483>>ASSIGN
KV$USR_GETOTPBFR.ESTBYTSIZ
     15535**DCL     17014>>CALL
KV$USR_GETPRM.PRMID
     15474**DCL     17041>>IF
KV$USR_GETPRM.VAL
     15474**DCL     17042<<ASSIGN
KV$USR_OTPMRK.CMPOTP
     15091**DCL     17096>>IF
KV$USR_OTPMRK.DAT
     15113**DCL     17082>>ASSIGN  17093>>ASSIGN
KV$USR_OTPMRK.DAT.ID
     15116**DCL     15116--REDEF   15117--REDEF
KV$USR_OTPMRK.DAT.MSTRTR
     15115**DCL     17079>>IF
KV$USR_PST.PHSPST
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:229  
     15669**DCL     15674--REDEF
KV$USR_SETATR.PHSPST
     15739**DCL     15744--REDEF
KV$VDH_DCLLCLPST.PHSPST
     13607**DCL     13612--REDEF
KV$VDH_RLSBFR
     15993**DCL     17320<>CALL
KV$VDH_RLSBFR.BFR$
     15999**DCL     17317<<ASSIGN
KV$VDH_RLSBFR.SHRBFRSRC
     16000**DCL     17319<<ASSIGN
KV$VDH_RLSBFR.STRTYP
     15999**DCL     17318<<ASSIGN
KV$VDI.OTPBFR_
     14984**DCL     17355<<ASSIGN
KV$VDI.OTPBFR_.ADR$
     14986**DCL     17352>>ASSIGN  17616<<ASSIGN  18526>>ASSIGN  18540<<ASSIGN
KV$VDI.OTPBFR_.BYTSIZ
     14986**DCL     18528>>ASSIGN  18542<<ASSIGN
KV$VDI.OTPBFR_.BYTX
     14986**DCL     18527>>ASSIGN  18541<<ASSIGN
KV$VDI.OTPCNDPND
     14997**DCL     18248>>IF
KV$VDI.RQSOTP
     14996**DCL     17674>>IF      17675<<ASSIGN
KV$VDI.SSNCNT
     14989**DCL     17257>>IF      17676>>IF
KV$VDI.USRCTX$
     14960**DCL     16983>>ASSIGN
KV@VDH_DCLLCLPST.PHSPST
     16387**DCL     16392--REDEF
KVB$GETSYS
     16016**DCL-ENT 17756--CALL    17914--CALL
KVB$RLSSYS
     16007**DCL-ENT 17356--CALL    17945--CALL
KVV$VDI
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:230  
     16006**DCL-ENT 17320--CALL    17677--CALL    18249--CALL
KV_VDH_EVT_CMPOTP
     16460**DCL     18249<>CALL
KV_VDH_EVT_RQSOTP
     16425**DCL     17677<>CALL
KZ$HIPCTR.ADR
     14294**DCL     18481>>ASSIGN  18496>>ASSIGN  18513>>ASSIGN
KZ$HIPCTR.LIN$
     14284**DCL     16985>>ASSIGN  17042>>ASSIGN  17470>>CALL    17501>>ASSIGN  17527>>ASSIGN  17547>>ASSIGN
     18461>>ASSIGN  18480>>ASSIGN  18495>>ASSIGN  18511>>ASSIGN
KZ$HIPCTR.TYP
     14288**DCL     17176>>DOSELCT 17304>>DOSELCT 17584>>DOSELCT 17798>>DOSELCT 17886>>DOSELCT
KZ$HIPDEV
     14315**DCL     17265<>CALL    17358<>CALL    17383<>CALL    17387<>CALL    17390<>CALL    17395<>CALL
     17617<>CALL    17791--ASSIGN
KZ$HIPDEV.ACTIVE
     14363**DCL     17245>>IF      17334<<ASSIGN  17612>>IF
KZ$HIPDEV.ADR
     14416**DCL     17588>>ASSIGN  17589>>ASSIGN  17590>>IF      17802>>ASSIGN  17803>>IF      17807>>ASSIGN
     17807>>ASSIGN  18482>>ASSIGN  18497>>ASSIGN  18514>>ASSIGN
KZ$HIPDEV.CTR$
     14318**DCL     16984>>ASSIGN  17042>>ASSIGN  17470>>CALL    17500>>ASSIGN  17526>>ASSIGN  17546>>ASSIGN
     18461>>ASSIGN  18480>>ASSIGN  18481>>ASSIGN  18495>>ASSIGN  18496>>ASSIGN  18511>>ASSIGN  18513>>ASSIGN
KZ$HIPDEV.DFR.CLR
     14446**DCL     17380>>IF      17382<<ASSIGN
KZ$HIPDEV.DFRHD$
     14329**DCL     17386>>IF      17436>>IF
KZ$HIPDEV.DONE
     14379**DCL     16986<<ASSIGN  17419<<ASSIGN  18254<<ASSIGN
KZ$HIPDEV.DSC
     14418**DCL     17258>>IF      17286>>IF      17389>>IF
KZ$HIPDEV.DSC.DEV_FINAL
     14431**DCL     17446<<ASSIGN
KZ$HIPDEV.DSC.INT
     14425**DCL     17263<<ASSIGN
KZ$HIPDEV.DSC.TOLD_VDH
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:231  
     14427**DCL     17264<<ASSIGN
KZ$HIPDEV.DSC.VDH_FINAL
     14429**DCL     17435<<ASSIGN
KZ$HIPDEV.DSC_LATER
     14469**DCL     17392>>IF      17394<<ASSIGN
KZ$HIPDEV.HLT
     14388**DCL     17643>>IF
KZ$HIPDEV.HLT.INP
     14403**DCL     17211<<ASSIGN
KZ$HIPDEV.HLT.PAG
     14399**DCL     17210<<ASSIGN
KZ$HIPDEV.KBDLCK
     14465**DCL     17534<<ASSIGN  17536<<ASSIGN
KZ$HIPDEV.LSTOTPLINX
     14460**DCL     17099<<ASSIGN
KZ$HIPDEV.ONOTP
     14471**DCL     17643>>IF      17661<<ASSIGN
KZ$HIPDEV.OTPBFRSIZ
     14457**DCL     17747>>ASSIGN  17902>>DOWHILE 17907>>IF      17971>>DOWHILE 17977>>IF
KZ$HIPDEV.OTPBYTES
     14412**DCL     17610<<ASSIGN  17610>>ASSIGN
KZ$HIPDEV.OTPCNT
     14335**DCL     17217>>IF      17415>>IF      17420>>IF      17635>>IF      17640<<ASSIGN  17640>>ASSIGN
     17665>>IF
KZ$HIPDEV.OTPHD$
     14324**DCL     17223>>ASSIGN  17436>>IF      17636<<ASSIGN
KZ$HIPDEV.OTPLNK$
     14477**DCL     17645<<ASSIGN  17650<<ASSIGN  17657<<ASSIGN
KZ$HIPDEV.OTPTL$
     14327**DCL     17638>>ASSIGN  17639<<ASSIGN
KZ$HIPDEV.PRINTER
     14373**DCL     17746>>IF
KZ$HIPDEV.THROTL
     14370**DCL     17667<<ASSIGN
KZ$HIPHEAD
     13795**DCL     17593--CALLBLT 17795--ASSIGN  17796--ASSIGN  17825--ASSIGN  17967--ASSIGN
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:232  
KZ$HIPHEAD.ADR_U
     13800**DCL     13801--REDEF
KZ$HIPTAIL
     13824**DCL     17796--ASSIGN  17967--ASSIGN
KZ$HIPTAIL.ADR_U
     13830**DCL     13831--REDEF
KZ$LINCTX
     13847**DCL     17470<>CALL
KZ$LINCTX.CHAN
     13938**DCL     18480>>ASSIGN  18495>>ASSIGN  18511>>ASSIGN
KZ$LINCTX.CHN$
     13850**DCL     17042>>ASSIGN
KZ$LINCTX.CTB.PRM$
     13936**DCL     17694>>IF      17698>>ASSIGN
KZ$LINCTX.LINID
     13868**DCL     18461>>ASSIGN
KZ$LINCTX.LINID.TERM
     13870**DCL     13879--REDEF
KZ$LINCTX.OTPCNT
     14135**DCL     14138--REDEF   17647>>IF      17654>>IF      17660<<ASSIGN  17660>>ASSIGN
KZ$LINCTX.OTPHD$
     14148**DCL     17648<<ASSIGN  17657>>ASSIGN  17658<<ASSIGN
KZ$LINCTX.OTPTL$
     14151**DCL     17650>>ASSIGN  17651<<ASSIGN  17655<<ASSIGN
KZ$LINCTX.POLSIZ
     14181**DCL     14183--REDEF
KZ$LINCTX.PRMCTBTYP
     13883**DCL     17694>>IF
KZ$LINCTX.PRO.BLKBYTES
     14038**DCL     17826>>ASSIGN  17885>>ASSIGN
KZ$OTPBFR
     14522**DCL     17593--CALLBLT 17602--ASSIGN  17787<<ASSIGN  17795--ASSIGN  17796--ASSIGN  17825--ASSIGN
     17967--ASSIGN
KZ$OTPBFR.BFRSIZ
     14565**DCL     17080>>ASSIGN  17091>>ASSIGN  17354>>ASSIGN  17788<<ASSIGN  17877>>ASSIGN  17893>>ASSIGN
     17932>>ASSIGN  17932>>ASSIGN  17937>>ASSIGN  17955<<ASSIGN
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:233  
KZ$OTPBFR.CMPCOD
     14568**DCL     17225<<ASSIGN  17613<<ASSIGN
KZ$OTPBFR.DATA_SIZ
     14563**DCL     17602<<ASSIGN  17610>>ASSIGN
KZ$OTPBFR.DEV$
     14573**DCL     17791<<ASSIGN
KZ$OTPBFR.FLAGS.CNT#
     14537**DCL     17609<<ASSIGN
KZ$OTPBFR.FLAGS.FIRST#
     14528**DCL     17789<<ASSIGN
KZ$OTPBFR.FLAGS.HALT.INP#
     14546**DCL     17292<<ASSIGN
KZ$OTPBFR.FLAGS.HALT.PAG#
     14544**DCL     17290<<ASSIGN
KZ$OTPBFR.FLAGS.LAST#
     14533**DCL     17790<<ASSIGN
KZ$OTPBFR.LNK$
     14523**DCL     17226>>ASSIGN  17638<<ASSIGN  17641<<ASSIGN
KZ$OTPBFR.MRKCNT
     14570**DCL     17079>>IF      17090<<ASSIGN  17090>>ASSIGN  17091>>ASSIGN  17935>>IF      17936>>ASSIGN
KZ@HIPSTT.KHSTT.OTPBFRBYTUTL
     16855**DCL     17764<<ASSIGN  17764>>ASSIGN  17931<<ASSIGN  17931>>ASSIGN
KZ@HIPSTT.OTPBFRSIZ
     16901**DCL     17763<<ASSIGN  17763>>ASSIGN  17932<<ASSIGN  17932>>ASSIGN  17933<<ASSIGN  17933>>ASSIGN
KZ@HIPSTT.REQSTATS.DSPMSK
     16783**DCL     16789--REDEF
KZ@HIPSTT.REQSTATS.SLCMSK
     16824**DCL     16831--REDEF
KZH$CLEARIMM
     17523**ENTRY   17383--CALL
KZH$DFR
     16008**DCL-ENT 17387--CALL
KZH$DSC
     16009**DCL-ENT 17265--CALL    17395--CALL
KZH$DSC_CONT
     16010**DCL-ENT 17390--CALL
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:234  
KZH$DSC_LINE
     16015**DCL-ENT 17470--CALL
KZH$RELOTPBFR
     16011**DCL-ENT 17617--CALL
KZH$RLSCTX
     16012**DCL-ENT 17358--CALL
KZH_BUFFER_THROTTLE
     13510**DCL     17665>>IF
KZH_ESCAPE_RESERVE
     16318**DCL     17014>>CALL    17247>>CALL
KZH_INITBFR_SIZE
     16323**DCL     17748>>ASSIGN  17878>>ASSIGN  17901>>ASSIGN  17970>>ASSIGN
KZ_HIPXL
     16030**DCL     18080>>ASSIGN
KZ_HIPXLB
     16021**DCL     16030--REDEF
KZ_HIP_BFRSIZ
     16032**DCL     17080>>ASSIGN  17091>>ASSIGN  17354>>ASSIGN  17751>>ASSIGN  17877>>ASSIGN  17878>>ASSIGN
     17893>>ASSIGN  17903>>IF      17909>>ASSIGN  17937>>ASSIGN  17937>>ASSIGN  17954>>ASSIGN  17972>>IF
KZ_HIP_HDR.STTBFR$
     16484**DCL     16512--IMP-PTR 17763>>ASSIGN  17763>>ASSIGN  17764>>ASSIGN  17764>>ASSIGN  17931>>ASSIGN
     17931>>ASSIGN  17932>>ASSIGN  17932>>ASSIGN  17933>>ASSIGN  17933>>ASSIGN
KZ_OTPBFR
     16106**DCL     17787>>ASSIGN
LIN$
     13478**DCL     13847--IMP-PTR 16985<<ASSIGN  17501<<ASSIGN  17527<<ASSIGN  17547<<ASSIGN  17647>>IF
     17648>>ASSIGN  17650>>ASSIGN  17651>>ASSIGN  17654>>IF      17655>>ASSIGN  17657>>ASSIGN  17658>>ASSIGN
     17660>>ASSIGN  17660>>ASSIGN  17694>>IF      17694>>IF      17698>>ASSIGN  17826>>ASSIGN  17885>>ASSIGN
MARKBYTES IN PROCEDURE CHK_BFR_SIZ
     17863**DCL     17862--IMP-SIZ 17936<<ASSIGN  17937>>ASSIGN  17937>>ASSIGN  17937>>ASSIGN  17937>>ASSIGN
MARKCONTENTS IN PROCEDURE CHK_BFR_SIZ
     17862**DCL     17937<<ASSIGN  17937>>ASSIGN
MAXDATA IN PROCEDURE FIT_BLKBYTES
     17817**DCL     17826<<ASSIGN  17828>>IF      17829>>ASSIGN
MAX_COL
     13491**DCL     18098>>IF      18530<<ASSIGN
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:235  
MAX_ROW
     13490**DCL     18103>>IF      18529<<ASSIGN
NEVER_FITS
     17135**LABEL   17124--CALLALT
NEWBYTES IN PROCEDURE CHK_BFR_SIZ
     17864**DCL     17871<<ASSIGN  17877<<ASSIGN  17878<<ASSIGN  17881>>ASSIGN  17895>>IF      17967<<ASSIGN
     17969>>ASSIGN
NEWPOWER2 IN PROCEDURE CHK_BFR_SIZ
     17866**DCL     17901<<ASSIGN  17902>>DOWHILE 17903>>IF      17905<<ASSIGN  17905>>ASSIGN  17907>>IF
     17909>>ASSIGN  17933>>ASSIGN  17933>>ASSIGN  17937>>ASSIGN  17954>>ASSIGN  17955>>ASSIGN  17970<<ASSIGN
     17971>>DOWHILE 17972>>IF      17975<<ASSIGN  17975>>ASSIGN  17977>>IF      17978<>CALL
NEWWORDS IN PROCEDURE CHK_BFR_SIZ
     17865**DCL     17881<<ASSIGN  17903>>IF      17969<<ASSIGN  17972>>IF
NEW_BFR IN PROCEDURE CHK_BFR_SIZ
     17964**LABEL   17923--GOTO
NOBFR IN PROCEDURE INITBFR
     17768**LABEL   17756--CALLALT
NO_MEMORY
     17469**LABEL   17014--CALLALT 17077--CALLALT 17088--CALLALT 17101--CALLALT 17212--CALLALT 17247--CALLALT
     17288--CALLALT 17294--CALLALT 17416--CALLALT 17421--CALLALT 17505--CALLALT 17532--CALLALT 17535--CALLALT
     17550--CALLALT
NO_MEMORY IN PROCEDURE CHK_BFR_SIZ
     17996**LABEL   17964--CALLALT 17978--CALLALT 17980--CALLALT
NO_MEMORY IN PROCEDURE CMP_OTP
     18258**LABEL   18253--CALLALT
NO_MEMORY IN PROCEDURE ERS
     18176**LABEL   18150--CALLALT
NO_MEMORY IN PROCEDURE SEND_HTEXTC
     18561**LABEL   18552--CALLALT
NO_MEMORY IN PROCEDURE SETBUFADR
     18034**LABEL   18025--CALLALT
NRESERVE IN PROCEDURE DONE
     17577**DCL     17589<<ASSIGN  17592<<ASSIGN  17592>>ASSIGN  17593>>CALLBLT
NRESERVE IN PROCEDURE INITBFR
     17742**DCL     17802<<ASSIGN  17805<<ASSIGN  17805>>ASSIGN  17806>>ASSIGN
PARM
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:236  
     13469**DCL        17--PROC    16982--ASSIGN  17497--ENTRY   17499--ASSIGN  17523--ENTRY   17525--ASSIGN
     17543--ENTRY   17545--ASSIGN
PARM$
     13475**DCL     15085--IMP-PTR 15136--IMP-PTR 15231--IMP-PTR 15335--IMP-PTR 15370--IMP-PTR 15406--IMP-PTR
     15468--IMP-PTR 15529--IMP-PTR 15564--IMP-PTR 15600--IMP-PTR 15636--IMP-PTR 15706--IMP-PTR 16982<<ASSIGN
     16987>>IF      16988>>IF      16989>>IF      16994>>DOCASE  17014>>CALL    17041>>IF      17042>>ASSIGN
     17079>>IF      17082>>ASSIGN  17093>>ASSIGN  17096>>IF      17123>>ASSIGN  17125>>ASSIGN  17126>>ASSIGN
     17127>>ASSIGN  17202>>DOCASE  17247>>CALL    17289>>IF      17347>>IF      18483>>ASSIGN
POWER2 IN PROCEDURE INITBFR
     17741**DCL     17739--PROC    17744--IF      17745>>ASSIGN
PRODEVMAX IN PROCEDURE CHK_BFR_SIZ
     17867**DCL     17885<<ASSIGN  17888<<ASSIGN  17888>>ASSIGN  17890<<ASSIGN  17890>>ASSIGN  17895>>IF
QUEUE_ON_TAIL IN PROCEDURE DONE
     17578**DCL     17575--PROC    17646>>IF
R IN PROCEDURE STORE_MRD
     18092**DCL     18091--PROC    18097>>ASSIGN
RMS_7804.C
     16086**DCL     17593>>CALLBLT
RMS_7804.CA
     16083**DCL     16086--REDEF
RMS_7804.N
     16082**DCL     17592>>ASSIGN  17593>>CALLBLT 17805>>ASSIGN
ROW
     13483**DCL     18077<>CALL    18155<<ASSIGN  18165>>ASSIGN
ROW1
     13485**DCL     18155>>ASSIGN  18165<<ASSIGN
R_MRD IN PROCEDURE STORE_MRD
     18094**DCL     18097<<ASSIGN  18101<<ASSIGN  18101>>ASSIGN  18103>>IF      18103<<ASSIGN  18104>>ASSIGN
SETBUFADR_NCHK
     18039**PROC    18075--CALL    18152--CALL
SET_VAL
     18538**PROC    17462--CALL    17465--CALL    17507--CALL    17551--CALL    18242--CALL
SIZ IN PROCEDURE CHK_BFR_SIZ
     17856**DCL     17854--PROC    17869>>IF      17871>>ASSIGN  17875--ENTRY   17965--IF      17967>>ASSIGN
     17985--IF      17986>>IF      17987>>IF      17991>>ASSIGN
SKIP_GET
PL6.E3A0      #001=KZH$HIP File=KZH$HIP.:E05TSI                                  WED 07/30/97 02:51 Page:237  
     16987**LABEL   16989--GOTO
SSR_7804.CA
     16076**DCL     16079--REDEF
SSS_7804.CA
     16070**DCL     16073--REDEF
STORE_MRD
     18091**PROC    18077--CALL
SZ
     13492**DCL     17751<<ASSIGN  17756<>CALL    17764>>ASSIGN  17796>>ASSIGN  18515>>ASSIGN
SZX
     13493**DCL     17745<<ASSIGN  17747<<ASSIGN  17748<<ASSIGN  17750>>DOWHILE 17751>>ASSIGN  17763>>ASSIGN
     17763>>ASSIGN  17773<<ASSIGN  17773>>ASSIGN  17788>>ASSIGN
T$
     13481**DCL     17080<<ASSIGN  17081>>IF      17082>>ASSIGN  17091<<ASSIGN  17093>>ASSIGN  17126<<ASSIGN
     17129>>CALLBLT 17183<<ASSIGN  17223<<ASSIGN  17224>>DOUNTIL 17225>>ASSIGN  17226<<ASSIGN  17226>>ASSIGN
     17352<<ASSIGN  17353>>IF      17354>>ASSIGN  17356<>CALL    17456<<ASSIGN  17614<<ASSIGN  17617<>CALL
     17800<<ASSIGN  17809<<ASSIGN
TABTABLE_7804
     16089**DCL     17314--IF      17322--ASSIGN
TABTABLE_7804.USRCNT
     16092**DCL     17323<<ASSIGN
TBFR$
     13480**DCL     17756<>CALL    17777>>ASSIGN  17914<>CALL    17934>>ASSIGN  17937>>ASSIGN  17953>>ASSIGN
VIP7814.STRI
     16043**DCL     16061--REDEF
VIP7814.STRS.AFTER_LEN
     16064**DCL     17597>>CALLBLT 17597>>CALLBLT 17599>>ASSIGN  17807>>ASSIGN
VIP7814.STRS.AFTER_TEXT
     16065**DCL     17597>>CALLBLT
VIP7814.STRS.BEFORE_LEN
     16062**DCL     17589>>ASSIGN  17593>>CALLBLT 17802>>ASSIGN  17807>>ASSIGN
VIP7814.STRS.BEFORE_TEXT
     16063**DCL     17593>>CALLBLT
XIT
     17462**LABEL   17083--GOTO
