VERSION E05

PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:1    
        1        1        /*M* NIJ$MCA - MCA communications POSTER/SCHEDULER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR */
        8        8        /**/
        9        9        /*P*  NAME:          NIJ$MCA
       10       10              PURPOSE:       NIJ$MCA is the MCA/SP (IMX channel 3) handler.
       11       11              REFERENCE:     RPM I/O CHANNEL 3 - J. Calle (RPM.CH3)
       12       12                             Service Processor Users' Manual, RPM-IDS-017 (Rev >= 10)
       13       13                             MCA Operator's Guide, TDM-NIO-043 (Rev >= 8)
       14       14        */
       15       15        /**/
       16       16        /*D*  NAME:          NIJ$POSTER
       17       17              CALL:          CALL NIJ$POSTER(PAR,INTLVL,STATUS);
       18       18              ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
       19       19              INPUT:         PAR - DQH
       20       20                             INTLVL - 0 = Overhead
       21       21                                      1 = Terminate
       22       22                                      2 = Marker
       23       23                                      3 = Special
       24       24                                      4 = Lost
       25       25               DESCRIPTION:  This routine handles all interrupts from channel 3
       26       26                             DPS8000 IMX.  This channel is the path for communication
       27       27                             with the MCA.
       28       28        */
       29       29
       30       30        NIJ$POSTER: PROC(PAR,INTLVL,STATUS);
       31       31        /*
       32       32                Includes
       33       33        */
       34       34        %INCLUDE                CP_6_SUBS ;
       35      574        %INCLUDE                EL_SUBS_C ;
       36      658        %INCLUDE                HF_DATA_R ;
       37      701        %INCLUDE                HF_LOCK_C ;
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:2    
       38      715        %INCLUDE                NI_DATA_C ;
       39      828        %INCLUDE                NI_DATA_R ;
       40     1265        %INCLUDE                NI_MACROS_C ;
       41     1532        %INCLUDE                N_FC_C ;
       42     1569        %INCLUDE                PM$NI ;
       43     1593        %INCLUDE                OC_SUBS_C ;
       44     2324        /*
       45     2325                Parameters
       46     2326        */
       47     2327    1   DCL 1 INTLVL            UBIN(18) PARAM ;
       48     2328    1   DCL 1 PAR           BIT(1) UNAL PARAM ; /* This is the DQH */
       49     2329    1   DCL 1 STATUS            BIT(72) DALIGNED PARAM ;
       50     2330        /*
       51     2331                Entries
       52     2332        */
       53     2333    1   DCL 1 NIA$LOGERR        ENTRY(4) ;
       54     2334    1   DCL 1 NIA$SPURINT       ENTRY(4) ;
       55     2335    1   DCL 1 NIF$ANIOM         ENTRY(2) ALTRET ;
       56     2336    1   DCL 1 NIF$ANFAULT       ENTRY(3) ALTRET ;
       57     2337    1   DCL 1 NIJ$DEVSCHED      ENTRY(1) ;
       58     2338    1   DCL 1 NIK$OPMSG         ENTRY(5) ;
       59     2339    1   DCL 1 NIO$COMP          ENTRY(2) ;
       60     2340    1   DCL 1 NIO$DCWBLD        ENTRY(1) ALTRET ;
       61     2341    1   DCL 1 NIO$SPCOMP        ENTRY(1) ;
       62     2342    1   DCL 1 NIQ$GET           ENTRY(1) ALTRET ;
       63     2343    1   DCL 1 NIQ$REL           ENTRY(1) ALTRET ;
       64     2344    1   DCL 1 NIS$MASK          ENTRY(2) ;
       65     2345    1   DCL 1 PMN$COLLECT       ENTRY(3) ;
       66     2346        /*
       67     2347                Auto
       68     2348        */
       69     2349    1   DCL 1 ABORT$            PTR ALIGNED AUTO ;
       70     2350    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
       71     2351    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
       72     2352    1   DCL 1 IOS$              PTR ALIGNED AUTO ;
       73     2353    1   DCL 1 NEWSTATE          UBIN ALIGNED AUTO ;
       74     2354    1   DCL 1 RCVR              ALIGNED AUTO,
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:3    
       75     2355    1         2 RETRY           BIT(1),
       76     2356    1         2 LOG             BIT(1),
       77     2357    1         2 OPMSG           BIT(1),
       78     2358    1         2 ABORT           BIT(1),
       79     2359    1         2 *               BIT(32) ;
       80     2360    1   DCL 1 REQ$              PTR ALIGNED AUTO ;
       81     2361    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
       82     2362        /*
       83     2363                Based
       84     2364        */
       85     2365        %NI$DCT                 ( NAME=DCT,    STCLASS="BASED(DCT$)" ) ;
       86     2413        %NI$DQH                 ( NAME=DQH,    STCLASS="BASED(DQH$)" ) ;
       87     2436        %NI$IOM                 ( NAME=IOM,    STCLASS=BASED ) ;
       88     2441        %NI$IOSTAT              ( NAME=IOSTAT, STCLASS=BASED ) ;
       89     2450        %NI$MBX                 ( NAME=MBX,    STCLASS=BASED ) ;
       90     2469        %N$REQ                  ( NAME=N$REQ,  STCLASS="BASED(REQ$)" ) ;
       91     2527        %NI$REQ                 ( NAME=NI$REQ, STCLASS="BASED(IOS$)" ) ;
       92     2552        %NI$SQH                 ( NAME=SQH,    STCLASS="BASED(SQH$)" ) ;
       93     2565        /*
       94     2566                Constant
       95     2567        */
       96     2568        %EQU RCVR_RETRY='400000000000'O;
       97     2569        %EQU RCVR_LOG=  '200000000000'O;
       98     2570        %EQU RCVR_OPMSG='100000000000'O;
       99     2571        %EQU RCVR_ABORT='040000000000'O;
      100     2572        /**/
      101     2573        /* READY STATUS */
      102     2574        /**/
      103     2575    1   DCL 1 READY_STAT CONSTANT ALIGNED,
      104     2576    1         2 TYC(0:6) BIT(36) INIT(%TYC_IOERR,'0'B,%TYC_IOERR*3,'0'B,%TYC_IOERR),
      105     2577    1         2 RCVR(0:6) BIT(36) INIT(%(RCVR_LOG|RCVR_RETRY),'0'B,
      106     2578    1                                  %(RCVR_LOG|RCVR_RETRY)*3,'0'B,%RCVR_LOG),
      107     2579    1         2 STATE(0:6) UBIN INIT(%IDLE*7);
      108     2580        /**/
      109     2581        /* ATTENTION STATUS */
      110     2582        /**/
      111     2583    1   DCL 1 ATT_STAT CONSTANT ALIGNED,
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:4    
      112     2584    1         2 TYC(0:6) BIT(36) INIT('0'B,%TYC_IOERR*1,%TYC_PROT,
      113     2585    1                                 %TYC_IOERR*3,%TYC_PROT),
      114     2586    1         2 RCVR(0:6) BIT(36) INIT('0'B,%(RCVR_OPMSG|RCVR_LOG)*6),
      115     2587    1         2 STATE(0:6) UBIN INIT(%IDLE*7);
      116     2588        /**/
      117     2589        %EJECT;
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:5    
      118     2590    2           DO INHIBIT;
      119     2591    2              DQH$=ADDR(PAR);    /* Set up pointers to DQH and SQH for later */
      120     2592    2              SQH$=DQH.SQH$;
      121     2593    3              DO CASE(INTLVL);
      122     2594    3               CASE(%TERMINATE,%LOST,%OVERHEAD);
      123     2595                      %LOCK(G#=SQH.GATE);
      124     2598    3                 IF  DQH.STATE ~= %BUSY
      125     2599    4                 THEN DO ;
      126     2600    4                    IF  ADDR(STATUS) ~= ADDR(NIL)
      127     2601    4                    THEN
      128     2602    4                       CALL NIA$SPURINT ( DQH, EL_SPURINT, INTLVL, STATUS ) ;
      129     2603    4                    ELSE IF  INTLVL = %TERMINATE
      130     2604    4                         AND DQH.IOSTATUS$ ~= ADDR(NIL)
      131     2605    4                       THEN
      132     2606    4                          CALL NIA$SPURINT ( DQH, EL_SPURINT, INTLVL, DQH.IOSTATUS$->
              2606                                   IOSTAT.STATUS ) ;
      133     2607    4                       ELSE
      134     2608    4                          CALL NIA$SPURINT ( DQH, EL_SPURINT, INTLVL, NI_DBLZERO ) ;
      135     2609                         %UNLOCK ( G#=SQH.GATE ) ;
      136     2612    4                    RETURN ;
      137     2613    4                    END ;
      138     2614    3                 REQ$=DQH.IO$;
      139     2615    3                 DCT$=N$REQ.DCT$;
      140     2616    3                 IF HW_IMX THEN
      141     2617    3                    N$REQ.FLPW=DQH.IOSTATUS$->IOSTAT.LPW_RESIDUE;
      142     2618    3                 IF INTLVL = %TERMINATE THEN
      143     2619    3                    N$REQ.STATUS=DQH.IOSTATUS$->IOSTAT.STATUS;
      144     2620    4                 ELSE DO;
      145     2621    4                    N$REQ.STATUS = STATUS;
      146     2622    4                    IF INTLVL = %LOST THEN
      147     2623    4                       CALL NIS$MASK(DQH,%IMX_CCW_MASK_CHAN);
      148     2624    4                    END;
      149     2625                      %UNLOCK(G#=SQH.GATE);
      150     2628    3               CASE(ELSE);
      151     2629    3                 IF ADDR(STATUS)~=ADDR(NIL) THEN
      152     2630    3                    CALL NIA$SPURINT(DQH,EL_SPURINT,INTLVL,STATUS);
      153     2631    3                 ELSE
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:6    
      154     2632    3                    CALL NIA$SPURINT(DQH,EL_SPURINT,INTLVL,NI_DBLZERO);
      155     2633    3                 RETURN;
      156     2634    3               END;                        /* CASE */
      157     2635    2              END;                         /* INHIBIT */
      158     2636
      159     2637    1           N$REQ.TYC='0'B;
      160     2638    1           RCVR='0'B;
      161     2639    1           NEWSTATE=%IDLE;
      162     2640    1           CALL PMN$COLLECT ( DQH.PM, %PM_IDLE ) ;
      163     2641    2           IF (N$REQ.FC~=%N_RQSTAT) AND (N$REQ.FC~=%N_RESET) THEN DO;
      164     2642    3              IF N$REQ.STATUS.POWEROFF THEN DO;
      165     2643    3                 N$REQ.TYC.IOERR='1'B;
      166     2644    3                 RCVR=%(RCVR_RETRY|RCVR_LOG);
      167     2645    3                 END;
      168     2646    3              ELSE DO CASE(N$REQ.STATUS.MAJOR);
      169     2647    3               CASE(%READY);
      170     2648    4                 IF N$REQ.STATUS.IOM THEN DO;
      171     2649    4                    CALL NIF$ANIOM (N$REQ, RCVR.RETRY);
      172     2650    4                    END;
      173     2651    3                 ELSE
      174     2652    3                    CALL CHECKMINOR(READY_STAT);
      175     2653    3               CASE(%ATTENTION);
      176     2654    3                 CALL CHECKMINOR(ATT_STAT);
      177     2655    3               CASE(%DATA_ALERT,%MPC_DATA_ALERT);
      178     2656    3                 RCVR=%(RCVR_RETRY|RCVR_LOG);
      179     2657    3                 N$REQ.TYC.IOERR='1'B;
      180     2658    3               CASE(%COMMAND_REJECT,%MPC_COMMAND_REJECT);
      181     2659    3                 RCVR.LOG='1'B;
      182     2660    3                 N$REQ.TYC.IOERR='1'B;
      183     2661    3               CASE(%MPC_ATTENTION);
      184     2662    3                 N$REQ.TYC.IOERR='1'B;
      185     2663    3                 RCVR=%(RCVR_OPMSG|RCVR_LOG);
      186     2664    3               CASE(%LOST_INTERRUPT);
      187     2665    3                 N$REQ.TYC.TIMO='1'B;
      188     2666    3                 RCVR=%(RCVR_ABORT|RCVR_LOG);
      189     2667    3               CASE(%SYSTEM_FAULT);
      190     2668    3                 CALL NIF$ANFAULT(N$REQ,RCVR.RETRY);
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:7    
      191     2669    3                 RCVR.LOG='1'B;
      192     2670    3               END;
      193     2671    2              END;
      194     2672    1           ABORT$=ADDR(NIL);
      195     2673    2           IF RCVR.RETRY THEN DO;
      196     2674    2              N$REQ.ERRCT=N$REQ.ERRCT+1;
      197     2675    3              IF N$REQ.ERRCT>6 THEN DO;
      198     2676    3                 RCVR.RETRY='0'B;
      199     2677    3                 RCVR.OPMSG='1'B;
      200     2678    3                 END;
      201     2679    2              END;
      202     2680    1           IF RCVR.LOG THEN
      203     2681    1              CALL NIA$LOGERR(N$REQ,EL_IOERR);
      204     2682    2           IF RCVR.ABORT THEN DO;
      205     2683    3              CALL NIQ$GET(ABORT$) WHENRETURN DO;
      206     2684    3                 ABORT$->N$REQ.DLA=N$REQ.DLA;
      207     2685    3                 ABORT$->N$REQ.FC=%N_RESET;
      208     2686    4                 CALL NIO$DCWBLD(ABORT$->N$REQ) WHENALTRETURN DO;
      209     2687    4                    CALL NIQ$REL(ABORT$);
      210     2688    4                    END;
      211     2689    3                 END;
      212     2690    2              END;
      213     2691                %LOCK (G#=SQH.GATE);
      214     2694    2           IF RCVR.RETRY THEN DO;
      215     2695                   %REQUEUE (P#=N$REQ,Q#=DCT.SQ$);
      216     2698    2              END;
      217     2699    2           IF ABORT$~=ADDR(NIL) THEN DO;
      218     2700                   %REQUEUE (P#="ABORT$->N$REQ",Q#=DCT.SQ$);
      219     2703    2              END;
      220     2704    1           DCT.STATE=NEWSTATE;
      221     2705    1           DQH.STATE=%IDLE;
      222     2706                %UNLOCK (G#=SQH.GATE);
      223     2709    1           IF RCVR.OPMSG OR NEWSTATE ~= %IDLE THEN
      224     2710    1              CALL NIK$OPMSG(DCT,MCA_MSG#,M_DEVC,NEWSTATE,N$REQ);
      225     2711    1           IF NOT RCVR.RETRY THEN
      226     2712    1              CALL NIO$COMP(N$REQ);
      227     2713    1           CALL NIJ$DEVSCHED(DCT);
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:8    
      228     2714    1           RETURN;
      229     2715        %EJECT;
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:9    
      230     2716    1   CHECKMINOR: PROC(TBL);
      231     2717        /**/
      232     2718        /* SET RCVR, TYC AND NEWSTATE BASED ON MINOR STATUS BITS. */
      233     2719        /**/
      234     2720    2   DCL 1 TBL ALIGNED,
      235     2721    2         2 TYC(0:6) BIT(36),
      236     2722    2         2 RCVR(0:6) BIT(36),
      237     2723    2         2 STATE(0:6) UBIN;
      238     2724    2   DCL I UBIN;
      239     2725    2   DCL 1 MNSTAT ALIGNED,
      240     2726    2         2 BT(0:5) BIT(1);
      241     2727        /**/
      242     2728        /**/
      243     2729        /**/
      244     2730    3           IF N$REQ.STATUS.MINOR='0'B THEN DO;
      245     2731    3              N$REQ.TYC=TBL.TYC(0);
      246     2732    3              RCVR=TBL.RCVR(0);
      247     2733    3              NEWSTATE=TBL.STATE(0);
      248     2734    3              END;
      249     2735    3           ELSE DO;
      250     2736    3              MNSTAT=N$REQ.STATUS.MINOR;
      251     2737    4              DO I=0 TO 5;
      252     2738    5                 IF MNSTAT.BT(I) THEN DO;
      253     2739    5                    N$REQ.TYC=N$REQ.TYC|TBL.TYC(I+1);
      254     2740    5                    RCVR=RCVR|TBL.RCVR(I+1);
      255     2741    5                    IF NEWSTATE<TBL.STATE(I+1) THEN NEWSTATE=TBL.STATE(I+1);
      256     2742    5                    END;
      257     2743    4                 END;
      258     2744    3              END;
      259     2745    2           RETURN;
      260     2746    2   END CHECKMINOR;
      261     2747    1   END NIJ$POSTER;
      262     2748        %EOD;

PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:10   
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   PM$NI.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure NIJ$POSTER.

   Procedure NIJ$POSTER requires 396 words for executable code.
   Procedure NIJ$POSTER requires 24 words of local(AUTO) storage.

PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:11   

 Object Unit name= NIJ$POSTER                                 File name= NIJ$MCA.:E05TOU
 UTS= JUL 30 '97 03:32:21.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     46     56  NIJ$POSTER
    1   Proc  even  none   396    614  NIJ$POSTER
    2  RoData even  none    13     15  NIJ$POSTER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        3  NIJ$POSTER
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:12   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       4 NIA$SPURINT
         yes           Std       1 HFC$UNLOCK
         yes           Std       2 NIS$MASK
         yes           Std       2 NIM$REQUEUE
         yes           Std       3 PMN$COLLECT
 yes     yes           Std       2 NIF$ANIOM
 yes     yes           Std       3 NIF$ANFAULT
 yes     yes           Std       1 NIQ$GET
 yes     yes           Std       1 NIQ$REL
         yes           Std       2 NIO$COMP
         yes           Std       1 NIJ$DEVSCHED
         yes           Std       4 NIA$LOGERR
 yes     yes           Std       1 NIO$DCWBLD
         yes           Std       5 NIK$OPMSG
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     HW_IMX                                N$DCT$$                               N$FQ$
     NI$FQ$                                NI$IBUF$                              NI$RP$
     NI_DBLZERO                            B_VECTNIL
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:13   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:14   


        1        1        /*M* NIJ$MCA - MCA communications POSTER/SCHEDULER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR */
        8        8        /**/
        9        9        /*P*  NAME:          NIJ$MCA
       10       10              PURPOSE:       NIJ$MCA is the MCA/SP (IMX channel 3) handler.
       11       11              REFERENCE:     RPM I/O CHANNEL 3 - J. Calle (RPM.CH3)
       12       12                             Service Processor Users' Manual, RPM-IDS-017 (Rev >= 10)
       13       13                             MCA Operator's Guide, TDM-NIO-043 (Rev >= 8)
       14       14        */
       15       15        /**/
       16       16        /*D*  NAME:          NIJ$POSTER
       17       17              CALL:          CALL NIJ$POSTER(PAR,INTLVL,STATUS);
       18       18              ENVIRONMENT:   Monitor Linkage Segment, Interrupt Level
       19       19              INPUT:         PAR - DQH
       20       20                             INTLVL - 0 = Overhead
       21       21                                      1 = Terminate
       22       22                                      2 = Marker
       23       23                                      3 = Special
       24       24                                      4 = Lost
       25       25               DESCRIPTION:  This routine handles all interrupts from channel 3
       26       26                             DPS8000 IMX.  This channel is the path for communication
       27       27                             with the MCA.
       28       28        */
       29       29
       30       30        NIJ$POSTER: PROC(PAR,INTLVL,STATUS);

     30  1 000000   000000 700200 xent  NIJ$POSTER   TSX0  ! X66_AUTO_3
         1 000001   000030 000003                    ZERO    24,3

       31       31        /*
       32       32                Includes
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:15   
       33       33        */
       34       34        %INCLUDE                CP_6_SUBS ;
       35      574        %INCLUDE                EL_SUBS_C ;
       36      658        %INCLUDE                HF_DATA_R ;
       37      701        %INCLUDE                HF_LOCK_C ;
       38      715        %INCLUDE                NI_DATA_C ;
       39      828        %INCLUDE                NI_DATA_R ;
       40     1265        %INCLUDE                NI_MACROS_C ;
       41     1532        %INCLUDE                N_FC_C ;
       42     1569        %INCLUDE                PM$NI ;
       43     1593        %INCLUDE                OC_SUBS_C ;
       44     2324        /*
       45     2325                Parameters
       46     2326        */
       47     2327    1   DCL 1 INTLVL            UBIN(18) PARAM ;
       48     2328    1   DCL 1 PAR           BIT(1) UNAL PARAM ; /* This is the DQH */
       49     2329    1   DCL 1 STATUS            BIT(72) DALIGNED PARAM ;
       50     2330        /*
       51     2331                Entries
       52     2332        */
       53     2333    1   DCL 1 NIA$LOGERR        ENTRY(4) ;
       54     2334    1   DCL 1 NIA$SPURINT       ENTRY(4) ;
       55     2335    1   DCL 1 NIF$ANIOM         ENTRY(2) ALTRET ;
       56     2336    1   DCL 1 NIF$ANFAULT       ENTRY(3) ALTRET ;
       57     2337    1   DCL 1 NIJ$DEVSCHED      ENTRY(1) ;
       58     2338    1   DCL 1 NIK$OPMSG         ENTRY(5) ;
       59     2339    1   DCL 1 NIO$COMP          ENTRY(2) ;
       60     2340    1   DCL 1 NIO$DCWBLD        ENTRY(1) ALTRET ;
       61     2341    1   DCL 1 NIO$SPCOMP        ENTRY(1) ;
       62     2342    1   DCL 1 NIQ$GET           ENTRY(1) ALTRET ;
       63     2343    1   DCL 1 NIQ$REL           ENTRY(1) ALTRET ;
       64     2344    1   DCL 1 NIS$MASK          ENTRY(2) ;
       65     2345    1   DCL 1 PMN$COLLECT       ENTRY(3) ;
       66     2346        /*
       67     2347                Auto
       68     2348        */
       69     2349    1   DCL 1 ABORT$            PTR ALIGNED AUTO ;
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:16   
       70     2350    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
       71     2351    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
       72     2352    1   DCL 1 IOS$              PTR ALIGNED AUTO ;
       73     2353    1   DCL 1 NEWSTATE          UBIN ALIGNED AUTO ;
       74     2354    1   DCL 1 RCVR              ALIGNED AUTO,
       75     2355    1         2 RETRY           BIT(1),
       76     2356    1         2 LOG             BIT(1),
       77     2357    1         2 OPMSG           BIT(1),
       78     2358    1         2 ABORT           BIT(1),
       79     2359    1         2 *               BIT(32) ;
       80     2360    1   DCL 1 REQ$              PTR ALIGNED AUTO ;
       81     2361    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
       82     2362        /*
       83     2363                Based
       84     2364        */
       85     2365        %NI$DCT                 ( NAME=DCT,    STCLASS="BASED(DCT$)" ) ;
       86     2413        %NI$DQH                 ( NAME=DQH,    STCLASS="BASED(DQH$)" ) ;
       87     2436        %NI$IOM                 ( NAME=IOM,    STCLASS=BASED ) ;
       88     2441        %NI$IOSTAT              ( NAME=IOSTAT, STCLASS=BASED ) ;
       89     2450        %NI$MBX                 ( NAME=MBX,    STCLASS=BASED ) ;
       90     2469        %N$REQ                  ( NAME=N$REQ,  STCLASS="BASED(REQ$)" ) ;
       91     2527        %NI$REQ                 ( NAME=NI$REQ, STCLASS="BASED(IOS$)" ) ;
       92     2552        %NI$SQH                 ( NAME=SQH,    STCLASS="BASED(SQH$)" ) ;
       93     2565        /*
       94     2566                Constant
       95     2567        */
       96     2568        %EQU RCVR_RETRY='400000000000'O;
       97     2569        %EQU RCVR_LOG=  '200000000000'O;
       98     2570        %EQU RCVR_OPMSG='100000000000'O;
       99     2571        %EQU RCVR_ABORT='040000000000'O;
      100     2572        /**/
      101     2573        /* READY STATUS */
      102     2574        /**/
      103     2575    1   DCL 1 READY_STAT CONSTANT ALIGNED,
      104     2576    1         2 TYC(0:6) BIT(36) INIT(%TYC_IOERR,'0'B,%TYC_IOERR*3,'0'B,%TYC_IOERR),
      105     2577    1         2 RCVR(0:6) BIT(36) INIT(%(RCVR_LOG|RCVR_RETRY),'0'B,
      106     2578    1                                  %(RCVR_LOG|RCVR_RETRY)*3,'0'B,%RCVR_LOG),
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:17   
      107     2579    1         2 STATE(0:6) UBIN INIT(%IDLE*7);
      108     2580        /**/
      109     2581        /* ATTENTION STATUS */
      110     2582        /**/
      111     2583    1   DCL 1 ATT_STAT CONSTANT ALIGNED,
      112     2584    1         2 TYC(0:6) BIT(36) INIT('0'B,%TYC_IOERR*1,%TYC_PROT,
      113     2585    1                                 %TYC_IOERR*3,%TYC_PROT),
      114     2586    1         2 RCVR(0:6) BIT(36) INIT('0'B,%(RCVR_OPMSG|RCVR_LOG)*6),
      115     2587    1         2 STATE(0:6) UBIN INIT(%IDLE*7);
      116     2588        /**/
      117     2589        %EJECT;
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:18   
      118     2590    2           DO INHIBIT;

      119     2591    2              DQH$=ADDR(PAR);    /* Set up pointers to DQH and SQH for later */

   2591  1 000002   200003 236300                    LDQ   ! @PAR,,AUTO
         1 000003   200010 756300                    STQ   ! DQH$,,AUTO

      120     2592    2              SQH$=DQH.SQH$;

   2592  1 000004   200010 470700                    LDP0  ! DQH$,,AUTO
         1 000005   000013 236300                    LDQ   ! 11,,PR0
         1 000006   200015 756300                    STQ   ! SQH$,,AUTO

      121     2593    3              DO CASE(INTLVL);

   2593  1 000007   200004 471700                    LDP1  ! @INTLVL,,AUTO
         1 000010   100000 220300                    LDX0  ! 0,,PR1
         1 000011   000005 100203                    CMPX0 ! 5,DU
         1 000012   000014 602210 1                  TNC   ! s:2593+5,X0
         1 000013   000155 710200 1                  TRA   ! s:2629
         1 000014   000021 710200 1                  TRA   ! s:2596
         1 000015   000021 710200 1                  TRA   ! s:2596
         1 000016   000155 710200 1                  TRA   ! s:2629
         1 000017   000155 710200 1                  TRA   ! s:2629
         1 000020   000021 710200 1                  TRA   ! s:2596

      122     2594    3               CASE(%TERMINATE,%LOST,%OVERHEAD);

      123     2595                      %LOCK(G#=SQH.GATE);

   2596  1 000021   200015 630700                    EPPR0 ! SQH$,,AUTO
         1 000022   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 000023   000000 701200 xent               TSX1  ! HFC$LOCK
         1 000024   000000 011200                    NOP   ! 0

      124     2598    3                 IF  DQH.STATE ~= %BUSY

PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:19   
   2598  1 000025   200010 470700                    LDP0  ! DQH$,,AUTO
         1 000026   000001 236300                    LDQ   ! 1,,PR0
         1 000027   000077 376207                    ANQ   ! 63,DL
         1 000030   000005 116207                    CMPQ  ! 5,DL
         1 000031   000111 600200 1                  TZE   ! s:2614

      125     2599    4                 THEN DO ;

      126     2600    4                    IF  ADDR(STATUS) ~= ADDR(NIL)

   2600  1 000032   200005 236300                    LDQ   ! @STATUS,,AUTO
         1 000033   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 000034   000047 600200 1                  TZE   ! s:2603

      127     2601    4                    THEN
      128     2602    4                       CALL NIA$SPURINT ( DQH, EL_SPURINT, INTLVL, STATUS ) ;

   2602  1 000035   200004 237300                    LDAQ  ! @INTLVL,,AUTO
         1 000036   200024 757300                    STAQ  ! MNSTAT+3,,AUTO
         1 000037   000001 236200 2                  LDQ   ! 1
         1 000040   200010 235300                    LDA   ! DQH$,,AUTO
         1 000041   200022 757300                    STAQ  ! MNSTAT+1,,AUTO
         1 000042   200022 630700                    EPPR0 ! MNSTAT+1,,AUTO
         1 000043   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
         1 000044   000000 701200 xent               TSX1  ! NIA$SPURINT
         1 000045   000000 011200                    NOP   ! 0
         1 000046   000104 710200 1                  TRA   ! s:2610

      129     2603    4                    ELSE IF  INTLVL = %TERMINATE

   2603  1 000047   200004 471700                    LDP1  ! @INTLVL,,AUTO
         1 000050   100000 220300                    LDX0  ! 0,,PR1
         1 000051   000001 100203                    CMPX0 ! 1,DU
         1 000052   000072 601200 1                  TNZ   ! s:2608
         1 000053   000016 236300                    LDQ   ! 14,,PR0
         1 000054   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 000055   000072 600200 1                  TZE   ! s:2608
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:20   

      130     2604    4                         AND DQH.IOSTATUS$ ~= ADDR(NIL)
      131     2605    4                       THEN
      132     2606    4                          CALL NIA$SPURINT ( DQH, EL_SPURINT, INTLVL, DQH.IOSTATUS$->
              2606                                   IOSTAT.STATUS ) ;

   2606  1 000056   000016 473700                    LDP3  ! 14,,PR0
         1 000057   200025 453700                    STP3  ! MNSTAT+4,,AUTO
         1 000060   200004 236300                    LDQ   ! @INTLVL,,AUTO
         1 000061   200024 756300                    STQ   ! MNSTAT+3,,AUTO
         1 000062   000001 236200 2                  LDQ   ! 1
         1 000063   200010 235300                    LDA   ! DQH$,,AUTO
         1 000064   200022 757300                    STAQ  ! MNSTAT+1,,AUTO
         1 000065   200022 630700                    EPPR0 ! MNSTAT+1,,AUTO
         1 000066   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
         1 000067   000000 701200 xent               TSX1  ! NIA$SPURINT
         1 000070   000000 011200                    NOP   ! 0
         1 000071   000104 710200 1                  TRA   ! s:2610

      133     2607    4                       ELSE
      134     2608    4                          CALL NIA$SPURINT ( DQH, EL_SPURINT, INTLVL, NI_DBLZERO ) ;

   2608  1 000072   000002 236200 2                  LDQ   ! 2
         1 000073   200004 235300                    LDA   ! @INTLVL,,AUTO
         1 000074   200024 757300                    STAQ  ! MNSTAT+3,,AUTO
         1 000075   000001 236200 2                  LDQ   ! 1
         1 000076   200010 235300                    LDA   ! DQH$,,AUTO
         1 000077   200022 757300                    STAQ  ! MNSTAT+1,,AUTO
         1 000100   200022 630700                    EPPR0 ! MNSTAT+1,,AUTO
         1 000101   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
         1 000102   000000 701200 xent               TSX1  ! NIA$SPURINT
         1 000103   000000 011200                    NOP   ! 0

      135     2609                         %UNLOCK ( G#=SQH.GATE ) ;

   2610  1 000104   200015 630700                    EPPR0 ! SQH$,,AUTO
         1 000105   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:21   
         1 000106   000000 701200 xent               TSX1  ! HFC$UNLOCK
         1 000107   000000 011200                    NOP   ! 0

      136     2612    4                    RETURN ;

   2612  1 000110   000000 702200 xent               TSX2  ! X66_ARET

      137     2613    4                    END ;
      138     2614    3                 REQ$=DQH.IO$;

   2614  1 000111   000014 236300                    LDQ   ! 12,,PR0
         1 000112   200014 756300                    STQ   ! REQ$,,AUTO

      139     2615    3                 DCT$=N$REQ.DCT$;

   2615  1 000113   200014 471700                    LDP1  ! REQ$,,AUTO
         1 000114   100002 236300                    LDQ   ! 2,,PR1
         1 000115   200007 756300                    STQ   ! DCT$,,AUTO

      140     2616    3                 IF HW_IMX THEN

   2616  1 000116   000000 234200 xsym               SZN   ! HW_IMX
         1 000117   000123 605200 1                  TPL   ! s:2618

      141     2617    3                    N$REQ.FLPW=DQH.IOSTATUS$->IOSTAT.LPW_RESIDUE;

   2617  1 000120   000016 473700                    LDP3  ! 14,,PR0
         1 000121   300003 236300                    LDQ   ! 3,,PR3
         1 000122   100016 756300                    STQ   ! 14,,PR1

      142     2618    3                 IF INTLVL = %TERMINATE THEN

   2618  1 000123   200004 473700                    LDP3  ! @INTLVL,,AUTO
         1 000124   300000 220300                    LDX0  ! 0,,PR3
         1 000125   000001 100203                    CMPX0 ! 1,DU
         1 000126   000133 601200 1                  TNZ   ! s:2621

PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:22   
      143     2619    3                    N$REQ.STATUS=DQH.IOSTATUS$->IOSTAT.STATUS;

   2619  1 000127   000016 474700                    LDP4  ! 14,,PR0
         1 000130   400000 237300                    LDAQ  ! 0,,PR4
         1 000131   100014 757300                    STAQ  ! 12,,PR1
         1 000132   000150 710200 1                  TRA   ! s:2626

      144     2620    4                 ELSE DO;

      145     2621    4                    N$REQ.STATUS = STATUS;

   2621  1 000133   200005 474700                    LDP4  ! @STATUS,,AUTO
         1 000134   400000 237300                    LDAQ  ! 0,,PR4
         1 000135   100014 757300                    STAQ  ! 12,,PR1

      146     2622    4                    IF INTLVL = %LOST THEN

   2622  1 000136   300000 220300                    LDX0  ! 0,,PR3
         1 000137   000004 100203                    CMPX0 ! 4,DU
         1 000140   000150 601200 1                  TNZ   ! s:2626

      147     2623    4                       CALL NIS$MASK(DQH,%IMX_CCW_MASK_CHAN);

   2623  1 000141   000003 236200 2                  LDQ   ! 3
         1 000142   200010 235300                    LDA   ! DQH$,,AUTO
         1 000143   200022 757300                    STAQ  ! MNSTAT+1,,AUTO
         1 000144   200022 630700                    EPPR0 ! MNSTAT+1,,AUTO
         1 000145   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         1 000146   000000 701200 xent               TSX1  ! NIS$MASK
         1 000147   000000 011200                    NOP   ! 0

      148     2624    4                    END;

      149     2625                      %UNLOCK(G#=SQH.GATE);

   2626  1 000150   200015 630700                    EPPR0 ! SQH$,,AUTO
         1 000151   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:23   
         1 000152   000000 701200 xent               TSX1  ! HFC$UNLOCK
         1 000153   000000 011200                    NOP   ! 0
         1 000154   000205 710200 1                  TRA   ! s:2637

      150     2628    3               CASE(ELSE);

      151     2629    3                 IF ADDR(STATUS)~=ADDR(NIL) THEN

   2629  1 000155   200005 236300                    LDQ   ! @STATUS,,AUTO
         1 000156   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 000157   000172 600200 1                  TZE   ! s:2632

      152     2630    3                    CALL NIA$SPURINT(DQH,EL_SPURINT,INTLVL,STATUS);

   2630  1 000160   200004 237300                    LDAQ  ! @INTLVL,,AUTO
         1 000161   200024 757300                    STAQ  ! MNSTAT+3,,AUTO
         1 000162   000001 236200 2                  LDQ   ! 1
         1 000163   200010 235300                    LDA   ! DQH$,,AUTO
         1 000164   200022 757300                    STAQ  ! MNSTAT+1,,AUTO
         1 000165   200022 630700                    EPPR0 ! MNSTAT+1,,AUTO
         1 000166   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
         1 000167   000000 701200 xent               TSX1  ! NIA$SPURINT
         1 000170   000000 011200                    NOP   ! 0
         1 000171   000204 710200 1                  TRA   ! s:2633

      153     2631    3                 ELSE
      154     2632    3                    CALL NIA$SPURINT(DQH,EL_SPURINT,INTLVL,NI_DBLZERO);

   2632  1 000172   000002 236200 2                  LDQ   ! 2
         1 000173   200004 235300                    LDA   ! @INTLVL,,AUTO
         1 000174   200024 757300                    STAQ  ! MNSTAT+3,,AUTO
         1 000175   000001 236200 2                  LDQ   ! 1
         1 000176   200010 235300                    LDA   ! DQH$,,AUTO
         1 000177   200022 757300                    STAQ  ! MNSTAT+1,,AUTO
         1 000200   200022 630700                    EPPR0 ! MNSTAT+1,,AUTO
         1 000201   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
         1 000202   000000 701200 xent               TSX1  ! NIA$SPURINT
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:24   
         1 000203   000000 011200                    NOP   ! 0

      155     2633    3                 RETURN;

   2633  1 000204   000000 702200 xent               TSX2  ! X66_ARET

      156     2634    3               END;                        /* CASE */

      157     2635    2              END;                         /* INHIBIT */

      158     2636
      159     2637    1           N$REQ.TYC='0'B;

   2637  1 000205   200014 470500                    LDP0    REQ$,,AUTO
         1 000206   000021 450100                    STZ     17,,PR0

      160     2638    1           RCVR='0'B;

   2638  1 000207   200013 450100                    STZ     RCVR,,AUTO

      161     2639    1           NEWSTATE=%IDLE;

   2639  1 000210   200012 450100                    STZ     NEWSTATE,,AUTO

      162     2640    1           CALL PMN$COLLECT ( DQH.PM, %PM_IDLE ) ;

   2640  1 000211   000004 236000 2                  LDQ     4
         1 000212   200023 756100                    STQ     MNSTAT+2,,AUTO
         1 000213   200010 236100                    LDQ     DQH$,,AUTO
         1 000214   000002 036003                    ADLQ    2,DU
         1 000215   200022 756100                    STQ     MNSTAT+1,,AUTO
         1 000216   200022 630500                    EPPR0   MNSTAT+1,,AUTO
         1 000217   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000220   000000 701000 xent               TSX1    PMN$COLLECT
         1 000221   000000 011000                    NOP     0

      163     2641    2           IF (N$REQ.FC~=%N_RQSTAT) AND (N$REQ.FC~=%N_RESET) THEN DO;
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:25   

   2641  1 000222   200014 470500                    LDP0    REQ$,,AUTO
         1 000223   000003 236100                    LDQ     3,,PR0
         1 000224   000777 376007                    ANQ     511,DL
         1 000225   000001 116007                    CMPQ    1,DL
         1 000226   000353 600000 1                  TZE     s:2672
         1 000227   000022 116007                    CMPQ    18,DL
         1 000230   000353 600000 1                  TZE     s:2672

      164     2642    3              IF N$REQ.STATUS.POWEROFF THEN DO;

   2642  1 000231   000014 236100                    LDQ     12,,PR0
         1 000232   200000 316003                    CANQ    65536,DU
         1 000233   000241 600000 1                  TZE     s:2646

      165     2643    3                 N$REQ.TYC.IOERR='1'B;

   2643  1 000234   001000 236003                    LDQ     512,DU
         1 000235   000021 256100                    ORSQ    17,,PR0

      166     2644    3                 RCVR=%(RCVR_RETRY|RCVR_LOG);

   2644  1 000236   000053 236000 0                  LDQ     ATT_STAT+22
         1 000237   200013 756100                    STQ     RCVR,,AUTO

      167     2645    3                 END;

   2645  1 000240   000353 710000 1                  TRA     s:2672

      168     2646    3              ELSE DO CASE(N$REQ.STATUS.MAJOR);

   2646  1 000241   000014 236100                    LDQ     12,,PR0
         1 000242   000036 772000                    QRL     30
         1 000243   000017 376007                    ANQ     15,DL
         1 000244   000020 116007                    CMPQ    16,DL
         1 000245   000247 602006 1                  TNC     s:2646+6,QL
         1 000246   000353 710000 1                  TRA     s:2672
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:26   
         1 000247   000267 710000 1                  TRA     s:2648
         1 000250   000353 710000 1                  TRA     s:2672
         1 000251   000310 710000 1                  TRA     s:2654
         1 000252   000315 710000 1                  TRA     s:2656
         1 000253   000353 710000 1                  TRA     s:2672
         1 000254   000322 710000 1                  TRA     s:2659
         1 000255   000353 710000 1                  TRA     s:2672
         1 000256   000353 710000 1                  TRA     s:2672
         1 000257   000334 710000 1                  TRA     s:2665
         1 000260   000353 710000 1                  TRA     s:2672
         1 000261   000327 710000 1                  TRA     s:2662
         1 000262   000315 710000 1                  TRA     s:2656
         1 000263   000353 710000 1                  TRA     s:2672
         1 000264   000322 710000 1                  TRA     s:2659
         1 000265   000353 710000 1                  TRA     s:2672
         1 000266   000341 710000 1                  TRA     s:2668

      169     2647    3               CASE(%READY);

      170     2648    4                 IF N$REQ.STATUS.IOM THEN DO;

   2648  1 000267   000014 236100                    LDQ     12,,PR0
         1 000270   770000 316007                    CANQ    -4096,DL
         1 000271   000303 600000 1                  TZE     s:2652

      171     2649    4                    CALL NIF$ANIOM (N$REQ, RCVR.RETRY);

   2649  1 000272   200013 631500                    EPPR1   RCVR,,AUTO
         1 000273   200023 451500                    STP1    MNSTAT+2,,AUTO
         1 000274   200014 236100                    LDQ     REQ$,,AUTO
         1 000275   200022 756100                    STQ     MNSTAT+1,,AUTO
         1 000276   200022 630500                    EPPR0   MNSTAT+1,,AUTO
         1 000277   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000300   000000 701000 xent               TSX1    NIF$ANIOM
         1 000301   000000 011000                    NOP     0

      172     2650    4                    END;
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:27   

   2650  1 000302   000353 710000 1                  TRA     s:2672

      173     2651    3                 ELSE
      174     2652    3                    CALL CHECKMINOR(READY_STAT);

   2652  1 000303   000005 236000 2                  LDQ     5
         1 000304   200017 756100                    STQ     SQH$+2,,AUTO
         1 000305   000540 701000 1                  TSX1    CHECKMINOR
         1 000306   000000 011000                    NOP     0
         1 000307   000353 710000 1                  TRA     s:2672

      175     2653    3               CASE(%ATTENTION);

      176     2654    3                 CALL CHECKMINOR(ATT_STAT);

   2654  1 000310   000006 236000 2                  LDQ     6
         1 000311   200017 756100                    STQ     SQH$+2,,AUTO
         1 000312   000540 701000 1                  TSX1    CHECKMINOR
         1 000313   000000 011000                    NOP     0
         1 000314   000353 710000 1                  TRA     s:2672

      177     2655    3               CASE(%DATA_ALERT,%MPC_DATA_ALERT);

      178     2656    3                 RCVR=%(RCVR_RETRY|RCVR_LOG);

   2656  1 000315   000053 236000 0                  LDQ     ATT_STAT+22
         1 000316   200013 756100                    STQ     RCVR,,AUTO

      179     2657    3                 N$REQ.TYC.IOERR='1'B;

   2657  1 000317   001000 236003                    LDQ     512,DU
         1 000320   000021 256100                    ORSQ    17,,PR0
         1 000321   000353 710000 1                  TRA     s:2672

      180     2658    3               CASE(%COMMAND_REJECT,%MPC_COMMAND_REJECT);

PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:28   
      181     2659    3                 RCVR.LOG='1'B;

   2659  1 000322   200000 236003                    LDQ     65536,DU
         1 000323   200013 256100                    ORSQ    RCVR,,AUTO

      182     2660    3                 N$REQ.TYC.IOERR='1'B;

   2660  1 000324   001000 236003                    LDQ     512,DU
         1 000325   000021 256100                    ORSQ    17,,PR0
         1 000326   000353 710000 1                  TRA     s:2672

      183     2661    3               CASE(%MPC_ATTENTION);

      184     2662    3                 N$REQ.TYC.IOERR='1'B;

   2662  1 000327   001000 236003                    LDQ     512,DU
         1 000330   000021 256100                    ORSQ    17,,PR0

      185     2663    3                 RCVR=%(RCVR_OPMSG|RCVR_LOG);

   2663  1 000331   000054 236000 0                  LDQ     ATT_STAT+23
         1 000332   200013 756100                    STQ     RCVR,,AUTO
         1 000333   000353 710000 1                  TRA     s:2672

      186     2664    3               CASE(%LOST_INTERRUPT);

      187     2665    3                 N$REQ.TYC.TIMO='1'B;

   2665  1 000334   000010 236003                    LDQ     8,DU
         1 000335   000021 256100                    ORSQ    17,,PR0

      188     2666    3                 RCVR=%(RCVR_ABORT|RCVR_LOG);

   2666  1 000336   000055 236000 0                  LDQ     ATT_STAT+24
         1 000337   200013 756100                    STQ     RCVR,,AUTO
         1 000340   000353 710000 1                  TRA     s:2672

PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:29   
      189     2667    3               CASE(%SYSTEM_FAULT);

      190     2668    3                 CALL NIF$ANFAULT(N$REQ,RCVR.RETRY);

   2668  1 000341   200013 631500                    EPPR1   RCVR,,AUTO
         1 000342   200023 451500                    STP1    MNSTAT+2,,AUTO
         1 000343   200014 236100                    LDQ     REQ$,,AUTO
         1 000344   200022 756100                    STQ     MNSTAT+1,,AUTO
         1 000345   200022 630500                    EPPR0   MNSTAT+1,,AUTO
         1 000346   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000347   000000 701000 xent               TSX1    NIF$ANFAULT
         1 000350   000000 011000                    NOP     0

      191     2669    3                 RCVR.LOG='1'B;

   2669  1 000351   200000 236003                    LDQ     65536,DU
         1 000352   200013 256100                    ORSQ    RCVR,,AUTO

      192     2670    3               END;

      193     2671    2              END;

      194     2672    1           ABORT$=ADDR(NIL);

   2672  1 000353   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000354   200006 756100                    STQ     ABORT$,,AUTO

      195     2673    2           IF RCVR.RETRY THEN DO;

   2673  1 000355   200013 234100                    SZN     RCVR,,AUTO
         1 000356   000373 605000 1                  TPL     s:2680

      196     2674    2              N$REQ.ERRCT=N$REQ.ERRCT+1;

   2674  1 000357   200014 470500                    LDP0    REQ$,,AUTO
         1 000360   000003 236100                    LDQ     3,,PR0
         1 000361   001000 036003                    ADLQ    512,DU
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:30   
         1 000362   000003 552140                    STBQ    3,'40'O,PR0

      197     2675    3              IF N$REQ.ERRCT>6 THEN DO;

   2675  1 000363   000003 236100                    LDQ     3,,PR0
         1 000364   777000 376003                    ANQ     -512,DU
         1 000365   007000 116003                    CMPQ    3584,DU
         1 000366   000373 602000 1                  TNC     s:2680

      198     2676    3                 RCVR.RETRY='0'B;

   2676  1 000367   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000370   200013 356100                    ANSQ    RCVR,,AUTO

      199     2677    3                 RCVR.OPMSG='1'B;

   2677  1 000371   100000 236003                    LDQ     32768,DU
         1 000372   200013 256100                    ORSQ    RCVR,,AUTO

      200     2678    3                 END;

      201     2679    2              END;

      202     2680    1           IF RCVR.LOG THEN

   2680  1 000373   200013 236100                    LDQ     RCVR,,AUTO
         1 000374   200000 316003                    CANQ    65536,DU
         1 000375   000405 600000 1                  TZE     s:2682

      203     2681    1              CALL NIA$LOGERR(N$REQ,EL_IOERR);

   2681  1 000376   000010 236000 2                  LDQ     8
         1 000377   200014 235100                    LDA     REQ$,,AUTO
         1 000400   200022 757100                    STAQ    MNSTAT+1,,AUTO
         1 000401   200022 630500                    EPPR0   MNSTAT+1,,AUTO
         1 000402   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000403   000000 701000 xent               TSX1    NIA$LOGERR
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:31   
         1 000404   000000 011000                    NOP     0

      204     2682    2           IF RCVR.ABORT THEN DO;

   2682  1 000405   200013 236100                    LDQ     RCVR,,AUTO
         1 000406   040000 316003                    CANQ    16384,DU
         1 000407   000440 600000 1                  TZE     s:2692

      205     2683    3              CALL NIQ$GET(ABORT$) WHENRETURN DO;

   2683  1 000410   200006 630500                    EPPR0   ABORT$,,AUTO
         1 000411   200022 450500                    STP0    MNSTAT+1,,AUTO
         1 000412   200022 630500                    EPPR0   MNSTAT+1,,AUTO
         1 000413   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000414   000000 701000 xent               TSX1    NIQ$GET
         1 000415   000440 702000 1                  TSX2    s:2692

      206     2684    3                 ABORT$->N$REQ.DLA=N$REQ.DLA;

   2684  1 000416   200014 470500                    LDP0    REQ$,,AUTO
         1 000417   000001 236100                    LDQ     1,,PR0
         1 000420   200006 471500                    LDP1    ABORT$,,AUTO
         1 000421   100001 756100                    STQ     1,,PR1

      207     2685    3                 ABORT$->N$REQ.FC=%N_RESET;

   2685  1 000422   200006 471500                    LDP1    ABORT$,,AUTO
         1 000423   000022 236007                    LDQ     18,DL
         1 000424   100003 552104                    STBQ    3,'04'O,PR1

      208     2686    4                 CALL NIO$DCWBLD(ABORT$->N$REQ) WHENALTRETURN DO;

   2686  1 000425   200006 630500                    EPPR0   ABORT$,,AUTO
         1 000426   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000427   000000 701000 xent               TSX1    NIO$DCWBLD
         1 000430   000432 702000 1                  TSX2    s:2687
         1 000431   000440 710000 1                  TRA     s:2692
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:32   

      209     2687    4                    CALL NIQ$REL(ABORT$);

   2687  1 000432   200006 630500                    EPPR0   ABORT$,,AUTO
         1 000433   200022 450500                    STP0    MNSTAT+1,,AUTO
         1 000434   200022 630500                    EPPR0   MNSTAT+1,,AUTO
         1 000435   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000436   000000 701000 xent               TSX1    NIQ$REL
         1 000437   000000 011000                    NOP     0

      210     2688    4                    END;

      211     2689    3                 END;

      212     2690    2              END;

      213     2691                %LOCK (G#=SQH.GATE);

   2692  1 000440   200015 630500                    EPPR0   SQH$,,AUTO
         1 000441   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000442   000000 701000 xent               TSX1    HFC$LOCK
         1 000443   000000 011000                    NOP     0

      214     2694    2           IF RCVR.RETRY THEN DO;

   2694  1 000444   200013 234100                    SZN     RCVR,,AUTO
         1 000445   000456 605000 1                  TPL     s:2699

      215     2695                   %REQUEUE (P#=N$REQ,Q#=DCT.SQ$);

   2696  1 000446   200007 236100                    LDQ     DCT$,,AUTO
         1 000447   000001 036003                    ADLQ    1,DU
         1 000450   200014 235100                    LDA     REQ$,,AUTO
         1 000451   200022 757100                    STAQ    MNSTAT+1,,AUTO
         1 000452   200022 630500                    EPPR0   MNSTAT+1,,AUTO
         1 000453   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000454   000000 701000 xent               TSX1    NIM$REQUEUE
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:33   
         1 000455   000000 011000                    NOP     0

      216     2698    2              END;

      217     2699    2           IF ABORT$~=ADDR(NIL) THEN DO;

   2699  1 000456   200006 236100                    LDQ     ABORT$,,AUTO
         1 000457   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000460   000471 600000 1                  TZE     s:2704

      218     2700                   %REQUEUE (P#="ABORT$->N$REQ",Q#=DCT.SQ$);

   2701  1 000461   200007 236100                    LDQ     DCT$,,AUTO
         1 000462   000001 036003                    ADLQ    1,DU
         1 000463   200006 235100                    LDA     ABORT$,,AUTO
         1 000464   200022 757100                    STAQ    MNSTAT+1,,AUTO
         1 000465   200022 630500                    EPPR0   MNSTAT+1,,AUTO
         1 000466   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000467   000000 701000 xent               TSX1    NIM$REQUEUE
         1 000470   000000 011000                    NOP     0

      219     2703    2              END;

      220     2704    1           DCT.STATE=NEWSTATE;

   2704  1 000471   200007 470500                    LDP0    DCT$,,AUTO
         1 000472   200012 236100                    LDQ     NEWSTATE,,AUTO
         1 000473   000007 752101                    STCQ    7,'01'O,PR0

      221     2705    1           DQH.STATE=%IDLE;

   2705  1 000474   200010 471500                    LDP1    DQH$,,AUTO
         1 000475   000000 236003                    LDQ     0,DU
         1 000476   100001 752101                    STCQ    1,'01'O,PR1

      222     2706                %UNLOCK (G#=SQH.GATE);

PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:34   
   2707  1 000477   200015 630500                    EPPR0   SQH$,,AUTO
         1 000500   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000501   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000502   000000 011000                    NOP     0

      223     2709    1           IF RCVR.OPMSG OR NEWSTATE ~= %IDLE THEN

   2709  1 000503   200013 236100                    LDQ     RCVR,,AUTO
         1 000504   100000 316003                    CANQ    32768,DU
         1 000505   000510 601000 1                  TNZ     s:2710
         1 000506   200012 235100                    LDA     NEWSTATE,,AUTO
         1 000507   000525 600000 1                  TZE     s:2711

      224     2710    1              CALL NIK$OPMSG(DCT,MCA_MSG#,M_DEVC,NEWSTATE,N$REQ);

   2710  1 000510   200014 236100                    LDQ     REQ$,,AUTO
         1 000511   200026 756100                    STQ     MNSTAT+5,,AUTO
         1 000512   200012 630500                    EPPR0   NEWSTATE,,AUTO
         1 000513   200025 450500                    STP0    MNSTAT+4,,AUTO
         1 000514   000013 236000 2                  LDQ     11
         1 000515   200024 756100                    STQ     MNSTAT+3,,AUTO
         1 000516   000014 236000 2                  LDQ     12
         1 000517   200007 235100                    LDA     DCT$,,AUTO
         1 000520   200022 757100                    STAQ    MNSTAT+1,,AUTO
         1 000521   200022 630500                    EPPR0   MNSTAT+1,,AUTO
         1 000522   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000523   000000 701000 xent               TSX1    NIK$OPMSG
         1 000524   000000 011000                    NOP     0

      225     2711    1           IF NOT RCVR.RETRY THEN

   2711  1 000525   200013 234100                    SZN     RCVR,,AUTO
         1 000526   000533 604000 1                  TMI     s:2713

      226     2712    1              CALL NIO$COMP(N$REQ);

   2712  1 000527   200014 630500                    EPPR0   REQ$,,AUTO
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:35   
         1 000530   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000531   000000 701000 xent               TSX1    NIO$COMP
         1 000532   000000 011000                    NOP     0

      227     2713    1           CALL NIJ$DEVSCHED(DCT);

   2713  1 000533   200007 630500                    EPPR0   DCT$,,AUTO
         1 000534   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000535   000000 701000 xent               TSX1    NIJ$DEVSCHED
         1 000536   000000 011000                    NOP     0

      228     2714    1           RETURN;

   2714  1 000537   000000 702200 xent               TSX2  ! X66_ARET

      229     2715        %EJECT;
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:36   
      230     2716    1   CHECKMINOR: PROC(TBL);

   2716  1 000540   200016 741300       CHECKMINOR   STX1  ! SQH$+1,,AUTO

      231     2717        /**/
      232     2718        /* SET RCVR, TYC AND NEWSTATE BASED ON MINOR STATUS BITS. */
      233     2719        /**/
      234     2720    2   DCL 1 TBL ALIGNED,
      235     2721    2         2 TYC(0:6) BIT(36),
      236     2722    2         2 RCVR(0:6) BIT(36),
      237     2723    2         2 STATE(0:6) UBIN;
      238     2724    2   DCL I UBIN;
      239     2725    2   DCL 1 MNSTAT ALIGNED,
      240     2726    2         2 BT(0:5) BIT(1);
      241     2727        /**/
      242     2728        /**/
      243     2729        /**/
      244     2730    3           IF N$REQ.STATUS.MINOR='0'B THEN DO;

   2730  1 000541   200014 470500                    LDP0    REQ$,,AUTO
         1 000542   000014 236100                    LDQ     12,,PR0
         1 000543   007700 316003                    CANQ    4032,DU
         1 000544   000555 601000 1                  TNZ     s:2736

      245     2731    3              N$REQ.TYC=TBL.TYC(0);

   2731  1 000545   200017 471500                    LDP1    @TBL,,AUTO
         1 000546   100000 236100                    LDQ     0,,PR1
         1 000547   000021 756100                    STQ     17,,PR0

      246     2732    3              RCVR=TBL.RCVR(0);

   2732  1 000550   100007 236100                    LDQ     7,,PR1
         1 000551   200013 756100                    STQ     RCVR,,AUTO

      247     2733    3              NEWSTATE=TBL.STATE(0);

PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:37   
   2733  1 000552   100016 235100                    LDA     14,,PR1
         1 000553   200012 755100                    STA     NEWSTATE,,AUTO

      248     2734    3              END;

   2734  1 000554   000612 710000 1                  TRA     s:2745

      249     2735    3           ELSE DO;

      250     2736    3              MNSTAT=N$REQ.STATUS.MINOR;

   2736  1 000555   000014 236100                    LDQ     12,,PR0
         1 000556   000006 736000                    QLS     6
         1 000557   770000 376003                    ANQ     -4096,DU
         1 000560   200021 756100                    STQ     MNSTAT,,AUTO

      251     2737    4              DO I=0 TO 5;

   2737  1 000561   200020 450100                    STZ     I,,AUTO

      252     2738    5                 IF MNSTAT.BT(I) THEN DO;

   2738  1 000562   200020 235100                    LDA     I,,AUTO
         1 000563   000000 066505                    CMPB    filb='0'B
         1 000564   200021 000001                    BDSC    MNSTAT,A,AUTO            by=0,bit=0,n=1
         1 000565   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000566   000605 600000 1                  TZE     s:2743

      253     2739    5                    N$REQ.TYC=N$REQ.TYC|TBL.TYC(I+1);

   2739  1 000567   200014 470500                    LDP0    REQ$,,AUTO
         1 000570   200017 471500                    LDP1    @TBL,,AUTO
         1 000571   000021 236100                    LDQ     17,,PR0
         1 000572   100001 276105                    ORQ     1,AL,PR1
         1 000573   000021 756100                    STQ     17,,PR0

      254     2740    5                    RCVR=RCVR|TBL.RCVR(I+1);
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:38   

   2740  1 000574   200020 720100                    LXL0    I,,AUTO
         1 000575   200013 236100                    LDQ     RCVR,,AUTO
         1 000576   100010 276110                    ORQ     8,X0,PR1
         1 000577   200013 756100                    STQ     RCVR,,AUTO

      255     2741    5                    IF NEWSTATE<TBL.STATE(I+1) THEN NEWSTATE=TBL.STATE(I+1);

   2741  1 000600   200012 236100                    LDQ     NEWSTATE,,AUTO
         1 000601   100017 116110                    CMPQ    15,X0,PR1
         1 000602   000605 603000 1                  TRC     s:2743

   2741  1 000603   100017 235110                    LDA     15,X0,PR1
         1 000604   200012 755100                    STA     NEWSTATE,,AUTO

      256     2742    5                    END;

      257     2743    4                 END;

   2743  1 000605   200020 235100                    LDA     I,,AUTO
         1 000606   000001 035007                    ADLA    1,DL
         1 000607   200020 755100                    STA     I,,AUTO
         1 000610   000006 115007                    CMPA    6,DL
         1 000611   000562 602000 1                  TNC     s:2738

      258     2744    3              END;

      259     2745    2           RETURN;

   2745  1 000612   200016 221300                    LDX1  ! SQH$+1,,AUTO
         1 000613   000001 702211                    TSX2  ! 1,X1

READY_STAT
 Sect OctLoc
   0     000   001000 000000   000000 000000   001000 000000   001000 000000    ................
   0     004   001000 000000   000000 000000   001000 000000   600000 000000    ................
   0     010   000000 000000   600000 000000   600000 000000   600000 000000    ................
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:39   
   0     014   000000 000000   200000 000000   000000 000000   000000 000000    ................
   0     020   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     024   000000 000000                                                    ....

ATT_STAT
 Sect OctLoc
   0     025   000000 000000   001000 000000   000004 000000   001000 000000    ................
   0     031   001000 000000   001000 000000   000004 000000   000000 000000    ................
   0     035   300000 000000   300000 000000   300000 000000   300000 000000    ................
   0     041   300000 000000   300000 000000   000000 000000   000000 000000    ................
   0     045   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     051   000000 000000                                                    ....

(unnamed)
 Sect OctLoc
   0     052   604000 000000   600000 000000   300000 000000   240000 000000    ................

(unnamed)
 Sect OctLoc
   2     000   000000 000315   000000 006000   000000 006000   000052 006000    .............*..
   2     004   000002 006000   000000 006000   000025 006000   000000 000311    ................
   2     010   000007 006000   000000 000233   100000 000000   000012 006000    ........@.......
   2     014   000011 006000                                                    ....
      260     2746    2   END CHECKMINOR;
      261     2747    1   END NIJ$POSTER;
      262     2748        %EOD;

PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:40   
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   PM$NI.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure NIJ$POSTER.
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:41   

 **** Variables and constants ****

  ****  Section 000 RoData NIJ$POSTER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    25-0-0/w STRC(756)   r     1 ATT_STAT                   0-0-0/w STRC(756)   r     1 READY_STAT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @INTLVL                    3-0-0/w PTR         r     1 @PAR
     5-0-0/w PTR         r     1 @STATUS                   17-0-0/w PTR         r     1 @TBL
     6-0-0/w PTR         r     1 ABORT$                     7-0-0/w PTR         r     1 DCT$
    10-0-0/w PTR         r     1 DQH$                      20-0-0/w UBIN        r     1 I
    *0-0-0/w UBIN(18)    r     1 INTLVL                    11-0-0/w PTR         r     1 IOS$
    21-0-0/w STRC(6)     r     1 MNSTAT                    12-0-0/w UBIN        r     1 NEWSTATE
    *0-0-0/b BIT         r     1 PAR                       13-0-0/w STRC        r     1 RCVR
    14-0-0/w PTR         r     1 REQ$                      15-0-0/w PTR         r     1 SQH$
    *0-0-0/d BIT (72)    r     1 STATUS                    *0-0-0/w STRC(756)   r     1 TBL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 HW_IMX                     0-0-0/w PTR         r     1 N$DCT$$
     0-0-0/w PTR         r     1 N$FQ$                      0-0-0/w PTR         r     1 NI$FQ$
     0-0-0/w PTR         r     1 NI$IBUF$                   0-0-0/w PTR         r     1 NI$RP$
     0-0-0/d BIT (72)    r     1 NI_DBLZERO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:42   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1332)  r     1 DCT                        0-0-0/w STRC(648)   r     1 DQH
     0-0-0/d STRC(576)   r     1 IOSTAT                     0-0-0/d STRC(1080)  r     1 N$REQ
     0-0-0/w STRC(252)   r     1 SQH


   Procedure NIJ$POSTER requires 396 words for executable code.
   Procedure NIJ$POSTER requires 24 words of local(AUTO) storage.
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:43   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:44   
          MINI XREF LISTING

ABORT$
      2349**DCL      2672<<ASSIGN   2683<>CALL     2684>>ASSIGN   2685>>ASSIGN   2686>>CALL     2687<>CALL
      2699>>IF       2701>>CALL
ATT_STAT
      2583**DCL      2654<>CALL
CHECKMINOR
      2716**PROC     2652--CALL     2654--CALL
DCT
      2374**DCL      2710<>CALL     2713<>CALL
DCT.DP
      2394**DCL      2401--REDEF    2404--REDEF    2405--REDEF    2407--REDEF    2407--REDEF    2408--REDEF
      2409--REDEF    2409--REDEF
DCT.MPC.IOCHANX
      2402**DCL      2402--REDEF
DCT.SQ$
      2374**DCL      2696<>CALL     2701<>CALL
DCT.STATE
      2384**DCL      2704<<ASSIGN
DCT$
      2350**DCL      2374--IMP-PTR  2615<<ASSIGN   2696>>CALL     2701>>CALL     2704>>ASSIGN   2710>>CALL
      2713>>CALL
DQH
      2422**DCL      2602<>CALL     2606<>CALL     2608<>CALL     2623<>CALL     2630<>CALL     2632<>CALL
DQH.IO$
      2429**DCL      2614>>ASSIGN
DQH.IOCHANX
      2424**DCL      2425--REDEF
DQH.IOSTATUS$
      2429**DCL      2603>>IF       2606>>CALL     2617>>ASSIGN   2619>>ASSIGN
DQH.MBX$
      2433**DCL      2434--REDEF
DQH.PM
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:45   
      2426**DCL      2640<>CALL
DQH.SQH$
      2428**DCL      2592>>ASSIGN
DQH.STATE
      2426**DCL      2598>>IF       2705<<ASSIGN
DQH$
      2351**DCL      2422--IMP-PTR  2591<<ASSIGN   2592>>ASSIGN   2598>>IF       2602>>CALL     2603>>IF
      2606>>CALL     2606>>CALL     2608>>CALL     2614>>ASSIGN   2617>>ASSIGN   2619>>ASSIGN   2623>>CALL
      2630>>CALL     2632>>CALL     2640>>CALL     2705>>ASSIGN
HFC$LOCK
       714**DCL-ENT  2596--CALL     2692--CALL
HFC$UNLOCK
       714**DCL-ENT  2610--CALL     2626--CALL     2707--CALL
HW_IMX
       700**DCL      2616>>IF
I IN PROCEDURE CHECKMINOR
      2724**DCL      2737<<DOINDEX  2738>>IF       2739>>ASSIGN   2740>>ASSIGN   2741>>IF       2741>>ASSIGN
INTLVL
      2327**DCL        30--PROC     2593>>DOCASE   2602<>CALL     2603>>IF       2606<>CALL     2608<>CALL
      2618>>IF       2622>>IF       2630<>CALL     2632<>CALL
IOS$
      2352**DCL      2536--IMP-PTR
IOSTAT.AESDCW
      2447**DCL      2447--REDEF
IOSTAT.LPW_RESIDUE
      2445**DCL      2617>>ASSIGN
IOSTAT.STATUS
      2442**DCL      2606<>CALL     2619>>ASSIGN
MBX.DCW.CONTROL.AE
      2466**DCL      2466--REDEF
MBX.LPW.CONTROL.AE
      2462**DCL      2462--REDEF
MNSTAT IN PROCEDURE CHECKMINOR
      2725**DCL      2736<<ASSIGN
MNSTAT.BT IN PROCEDURE CHECKMINOR
      2726**DCL      2738>>IF
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:46   
N$DCT$$
      1126**DCL      1260--IMP-PTR
N$FQ$
      1126**DCL      1261--IMP-PTR
N$REQ
      2478**DCL      2649<>CALL     2668<>CALL     2681<>CALL     2686<>CALL     2696<>CALL     2701<>CALL
      2710<>CALL     2712<>CALL
N$REQ.BUFADDR
      2487**DCL      2488--REDEF    2488--REDEF
N$REQ.DCT$
      2479**DCL      2615>>ASSIGN
N$REQ.DLA
      2478**DCL      2684<<ASSIGN   2684>>ASSIGN
N$REQ.DLA.DRELADDR
      2479**DCL      2479--REDEF
N$REQ.DVE.EOMCHAR
      2516**DCL      2517--REDEF
N$REQ.EAINFO
      2510**DCL      2510--REDEF
N$REQ.EAINFOX
      2510**DCL      2511--REDEF
N$REQ.ERRCT
      2480**DCL      2674<<ASSIGN   2674>>ASSIGN   2675>>IF
N$REQ.EVNTINFO
      2511**DCL      2511--REDEF
N$REQ.FC
      2481**DCL      2641>>IF       2641>>IF       2685<<ASSIGN
N$REQ.FLPW
      2499**DCL      2617<<ASSIGN
N$REQ.STATUS
      2492**DCL      2498--REDEF    2619<<ASSIGN   2621<<ASSIGN
N$REQ.STATUS.IOM
      2495**DCL      2648>>IF
N$REQ.STATUS.MAJOR
      2492**DCL      2646>>DOCASE
N$REQ.STATUS.MINOR
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:47   
      2493**DCL      2730>>IF       2736>>ASSIGN
N$REQ.STATUS.POWEROFF
      2492**DCL      2642>>IF
N$REQ.TYC
      2500**DCL      2637<<ASSIGN   2731<<ASSIGN   2739<<ASSIGN   2739>>ASSIGN
N$REQ.TYC.IOERR
      2503**DCL      2643<<ASSIGN   2657<<ASSIGN   2660<<ASSIGN   2662<<ASSIGN
N$REQ.TYC.TIMO
      2505**DCL      2665<<ASSIGN
N$REQ_INIT.BUFADDR
      1145**DCL      1146--REDEF    1146--REDEF
N$REQ_INIT.DLA.DRELADDR
      1137**DCL      1137--REDEF
N$REQ_INIT.DVE.EOMCHAR
      1174**DCL      1175--REDEF
N$REQ_INIT.EAINFO
      1168**DCL      1168--REDEF
N$REQ_INIT.EAINFOX
      1168**DCL      1169--REDEF
N$REQ_INIT.EVNTINFO
      1169**DCL      1169--REDEF
N$REQ_INIT.STATUS
      1150**DCL      1156--REDEF
NEWSTATE
      2353**DCL      2639<<ASSIGN   2704>>ASSIGN   2709>>IF       2710<>CALL     2733<<ASSIGN   2741>>IF
      2741<<ASSIGN
NI$FQ$
      1186**DCL      1262--IMP-PTR
NI$IBUF$
      1186**DCL      1262--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
      1196**DCL      1197--REDEF    1197--REDEF
NI$IMXMBX_INIT.SIZE
      1198**DCL      1198--REDEF
NI$REQ.DCW
      2538**DCL      2541--REDEF
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:48   
NI$REQ.DCW.TALLY
      2539**DCL      2539--REDEF
NI$REQ.IDCW.EXTA
      2541**DCL      2541--REDEF
NI$REQ.PCW
      2543**DCL      2547--REDEF
NI$REQ.SEEK
      2548**DCL      2549--REDEF    2550--REDEF
NI$REQ_INIT.DCW
      1220**DCL      1223--REDEF
NI$REQ_INIT.DCW.TALLY
      1221**DCL      1221--REDEF
NI$REQ_INIT.IDCW.EXTA
      1223**DCL      1223--REDEF
NI$REQ_INIT.PCW
      1225**DCL      1229--REDEF
NI$REQ_INIT.SEEK
      1230**DCL      1231--REDEF    1232--REDEF
NI$RP$
      1234**DCL      1264--IMP-PTR
NIA$LOGERR
      2333**DCL-ENT  2681--CALL
NIA$SPURINT
      2334**DCL-ENT  2602--CALL     2606--CALL     2608--CALL     2630--CALL     2632--CALL
NIF$ANFAULT
      2336**DCL-ENT  2668--CALL
NIF$ANIOM
      2335**DCL-ENT  2649--CALL
NIJ$DEVSCHED
      2337**DCL-ENT  2713--CALL
NIK$OPMSG
      2338**DCL-ENT  2710--CALL
NIM$REQUEUE
      1291**DCL-ENT  2696--CALL     2701--CALL
NIO$COMP
      2339**DCL-ENT  2712--CALL
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:49   
NIO$DCWBLD
      2340**DCL-ENT  2686--CALL
NIQ$GET
      2342**DCL-ENT  2683--CALL
NIQ$REL
      2343**DCL-ENT  2687--CALL
NIS$MASK
      2344**DCL-ENT  2623--CALL
NI_DBLZERO
      1235**DCL      2608<>CALL     2632<>CALL
NI_MBX_INIT.DCW.CONTROL.AE
      1256**DCL      1256--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
      1252**DCL      1252--REDEF
PAR
      2328**DCL        30--PROC     2591--ASSIGN
PMN$COLLECT
      2345**DCL-ENT  2640--CALL
RCVR
      2354**DCL      2638<<ASSIGN   2644<<ASSIGN   2656<<ASSIGN   2663<<ASSIGN   2666<<ASSIGN   2732<<ASSIGN
      2740<<ASSIGN   2740>>ASSIGN
RCVR.ABORT
      2358**DCL      2682>>IF
RCVR.LOG
      2356**DCL      2659<<ASSIGN   2669<<ASSIGN   2680>>IF
RCVR.OPMSG
      2357**DCL      2677<<ASSIGN   2709>>IF
RCVR.RETRY
      2355**DCL      2649<>CALL     2668<>CALL     2673>>IF       2676<<ASSIGN   2694>>IF       2711>>IF
READY_STAT
      2575**DCL      2652<>CALL
REQ$
      2360**DCL      2478--IMP-PTR  2614<<ASSIGN   2615>>ASSIGN   2617>>ASSIGN   2619>>ASSIGN   2621>>ASSIGN
      2637>>ASSIGN   2641>>IF       2641>>IF       2642>>IF       2643>>ASSIGN   2646>>DOCASE   2648>>IF
      2649>>CALL     2657>>ASSIGN   2660>>ASSIGN   2662>>ASSIGN   2665>>ASSIGN   2668>>CALL     2674>>ASSIGN
      2674>>ASSIGN   2675>>IF       2681>>CALL     2684>>ASSIGN   2696>>CALL     2710>>CALL     2712>>CALL
PL6.E3A0      #001=NIJ$POSTER File=NIJ$MCA.:E05TSI                               WED 07/30/97 03:32 Page:50   
      2730>>IF       2731>>ASSIGN   2736>>ASSIGN   2739>>ASSIGN   2739>>ASSIGN
SQH.DOOR
      2561**DCL      2561--REDEF
SQH.GATE
      2561**DCL      2596<>CALL     2610<>CALL     2626<>CALL     2692<>CALL     2707<>CALL
SQH$
      2361**DCL      2561--IMP-PTR  2592<<ASSIGN   2596>>CALL     2610>>CALL     2626>>CALL     2692>>CALL
      2707>>CALL
STATUS
      2329**DCL        30--PROC     2600--IF       2602<>CALL     2621>>ASSIGN   2629--IF       2630<>CALL
TBL IN PROCEDURE CHECKMINOR
      2720**DCL      2716--PROC
TBL.RCVR IN PROCEDURE CHECKMINOR
      2722**DCL      2732>>ASSIGN   2740>>ASSIGN
TBL.STATE IN PROCEDURE CHECKMINOR
      2723**DCL      2733>>ASSIGN   2741>>IF       2741>>ASSIGN
TBL.TYC IN PROCEDURE CHECKMINOR
      2721**DCL      2731>>ASSIGN   2739>>ASSIGN

PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:51   
      263        1        /*T***********************************************************/
      264        2        /*T*                                                         */
      265        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      266        4        /*T*                                                         */
      267        5        /*T***********************************************************/
      268        6        /*D*  NAME:          NIJ$REQSCHED
      269        7              CALL:          CALL NIJ$REQSCHED(PAR);
      270        8              ENVIRONMENT:   Monitor, not privileged, not inhibited.
      271        9              INPUT:         N$REQ (IOQ request packet)
      272       10              DESCRIPTION:   NIJ$REQSCHED enqueues a request on the appropriate
      273       11                             MCA's scheduler queue and then goes to the common code
      274       12                             at SCHED.
      275       13        */
      276       14        NIJ$REQSCHED: PROC(PAR);
      277       15        /*
      278       16                Includes
      279       17        */
      280       18        %INCLUDE                HF_LOCK_C ;
      281       32        %INCLUDE                NI_DATA_C ;
      282      145        %INCLUDE                NI_DATA_R ;
      283      582        %INCLUDE                NI_MACROS_C ;
      284      849        %INCLUDE                N_FC_C ;
      285      886        %INCLUDE                PM$NI ;
      286      910        /*
      287      911                Parameters
      288      912        */
      289      913    1   DCL 1 PAR               UBIN PARAM ;
      290      914        /*
      291      915                Entries
      292      916        */
      293      917    1   DCL 1 NIS$DRIVER        ENTRY(1) ;
      294      918    1   DCL 1 PMN$COLLECT       ENTRY(3)  ;
      295      919        /*
      296      920                Auto
      297      921        */
      298      922    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
      299      923    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:52   
      300      924    1   DCL 1 REQ$              PTR ALIGNED AUTO ;
      301      925    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
      302      926        /*
      303      927                Based
      304      928        */
      305      929        %NI$DCT                 ( NAME=DCT,   STCLASS="BASED(DCT$)" ) ;
      306      977        %NI$DQH                 ( NAME=DQH,   STCLASS="BASED(DQH$)" ) ;
      307     1000        %N$REQ                  ( NAME=N$REQ, STCLASS="BASED(REQ$)" ) ;
      308     1058        %NI$SQH                 ( NAME=SQH,   STCLASS="BASED(SQH$)" ) ;
      309     1071        %EJECT;
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:53   
      310     1072    1           REQ$=ADDR(PAR);
      311     1073    1           DCT$=N$REQ.DCT$;
      312     1074    1           SQH$=DCT.SQH$;
      313     1075                %LOCK(G#=SQH.GATE);
      314     1078    2           IF DCT.SQ$ = ADDR(NIL) THEN DO ;
      315     1079    2              N$REQ.FL$ = REQ$ ;
      316     1080    2              DCT.SQ$ = REQ$ ;
      317     1081    2              END ;
      318     1082    2           ELSE DO ;
      319     1083                   %ENQUEUE ( P#=N$REQ, Q#=DCT.SQ$ ) ;
      320     1086    2              CALL PMN$COLLECT ( DCT.PM, %PM_QUED )  ;
      321     1087    2              END ;
      322     1088    1           GOTO SCHED;
      323     1089        %EJECT;
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:54   
      324     1090        /*D*  NAME:          NIJ$DEVSCHED
      325     1091              CALL:          CALL NIJ$DEVSCHED(PAR);
      326     1092              ENVIRONMENT:   Monitor, not privileged, not inhibited.
      327     1093              INPUT:         NI$DCT (Device Control Table Entry)
      328     1094              DESCRIPTION:   NIJ$DEVSCHED locks the SQH and goes to the common code
      329     1095                             at SCHED where a waiting request, if any, is started
      330     1096                             if that MCA is idle.
      331     1097        */
      332     1098    1   NIJ$DEVSCHED: ENTRY(PAR);
      333     1099
      334     1100    1           DCT$=ADDR(PAR);
      335     1101    1           SQH$=DCT.SQH$;
      336     1102                %LOCK(G#=SQH.GATE);
      337     1105    1   SCHED:
      338     1106    2           IF DCT.STATE = %IDLE THEN DO ;
      339     1107    2              IF DCT.SQ$ = ADDR(NIL) THEN
      340     1108    2                 CALL PMN$COLLECT ( DCT.PM, %PM_IDLE ) ;
      341     1109    3              ELSE DO ;
      342     1110    3                 DQH$ = DCT.DQH$ ;
      343     1111                      %DEQUEUE ( P#=REQ$, Q#=DCT.SQ$ ) ;
      344     1118    3                 DQH.IO$ = REQ$ ;
      345     1119    3                 IF DCT.SQ$ = ADDR(NIL) THEN
      346     1120    3                    CALL PMN$COLLECT ( DCT.PM, %PM_BUSY ) ;
      347     1121    3                 ELSE
      348     1122    3                    CALL PMN$COLLECT ( DCT.PM, %PM_QUED ) ;
      349     1123    3                 CALL NIS$DRIVER ( DQH ) ;
      350     1124    3                 DCT.STATE = %BUSY ;
      351     1125    3                 END ;
      352     1126    2              END ;
      353     1127                %UNLOCK(G#=SQH.GATE);
      354     1130    1           RETURN;
      355     1131    1   END NIJ$REQSCHED;

PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:55   
--  Include file information  --

   PM$NI.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NIJ$REQSCHED.

   Procedure NIJ$REQSCHED requires 119 words for executable code.
   Procedure NIJ$REQSCHED requires 10 words of local(AUTO) storage.

    No errors detected in file NIJ$MCA.:E05TSI    .

PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:56   

 Object Unit name= NIJ$REQSCHED                               File name= NIJ$MCA.:E05TOU
 UTS= JUL 30 '97 03:33:01.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   119    167  NIJ$REQSCHED
    1  RoData even  none     3      3  NIJ$REQSCHED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  NIJ$REQSCHED
     0     52                  yes      Std        1  NIJ$DEVSCHED

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       3 PMN$COLLECT
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       2 NIM$DEQUEUE
         yes           Std       1 NIS$DRIVER
         yes           Std       2 NIM$ENQUEUE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:57   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     N$DCT$$                               N$FQ$                                 NI$FQ$
     NI$IBUF$                              NI$RP$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:58   


      263        1        /*T***********************************************************/
      264        2        /*T*                                                         */
      265        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      266        4        /*T*                                                         */
      267        5        /*T***********************************************************/
      268        6        /*D*  NAME:          NIJ$REQSCHED
      269        7              CALL:          CALL NIJ$REQSCHED(PAR);
      270        8              ENVIRONMENT:   Monitor, not privileged, not inhibited.
      271        9              INPUT:         N$REQ (IOQ request packet)
      272       10              DESCRIPTION:   NIJ$REQSCHED enqueues a request on the appropriate
      273       11                             MCA's scheduler queue and then goes to the common code
      274       12                             at SCHED.
      275       13        */
      276       14        NIJ$REQSCHED: PROC(PAR);

     14  0 000000   000000 700200 xent  NIJ$REQSCHED TSX0  ! X66_AUTO_1
         0 000001   000012 000001                    ZERO    10,1

      277       15        /*
      278       16                Includes
      279       17        */
      280       18        %INCLUDE                HF_LOCK_C ;
      281       32        %INCLUDE                NI_DATA_C ;
      282      145        %INCLUDE                NI_DATA_R ;
      283      582        %INCLUDE                NI_MACROS_C ;
      284      849        %INCLUDE                N_FC_C ;
      285      886        %INCLUDE                PM$NI ;
      286      910        /*
      287      911                Parameters
      288      912        */
      289      913    1   DCL 1 PAR               UBIN PARAM ;
      290      914        /*
      291      915                Entries
      292      916        */
      293      917    1   DCL 1 NIS$DRIVER        ENTRY(1) ;
      294      918    1   DCL 1 PMN$COLLECT       ENTRY(3)  ;
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:59   
      295      919        /*
      296      920                Auto
      297      921        */
      298      922    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
      299      923    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
      300      924    1   DCL 1 REQ$              PTR ALIGNED AUTO ;
      301      925    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
      302      926        /*
      303      927                Based
      304      928        */
      305      929        %NI$DCT                 ( NAME=DCT,   STCLASS="BASED(DCT$)" ) ;
      306      977        %NI$DQH                 ( NAME=DQH,   STCLASS="BASED(DQH$)" ) ;
      307     1000        %N$REQ                  ( NAME=N$REQ, STCLASS="BASED(REQ$)" ) ;
      308     1058        %NI$SQH                 ( NAME=SQH,   STCLASS="BASED(SQH$)" ) ;
      309     1071        %EJECT;
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:60   
      310     1072    1           REQ$=ADDR(PAR);

   1072  0 000002   200003 236100                    LDQ     @PAR,,AUTO
         0 000003   200006 756100                    STQ     REQ$,,AUTO

      311     1073    1           DCT$=N$REQ.DCT$;

   1073  0 000004   200006 470500                    LDP0    REQ$,,AUTO
         0 000005   000002 236100                    LDQ     2,,PR0
         0 000006   200004 756100                    STQ     DCT$,,AUTO

      312     1074    1           SQH$=DCT.SQH$;

   1074  0 000007   200004 471500                    LDP1    DCT$,,AUTO
         0 000010   100022 236100                    LDQ     18,,PR1
         0 000011   200007 756100                    STQ     SQH$,,AUTO

      313     1075                %LOCK(G#=SQH.GATE);

   1076  0 000012   200007 630500                    EPPR0   SQH$,,AUTO
         0 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000014   000000 701000 xent               TSX1    HFC$LOCK
         0 000015   000000 011000                    NOP     0

      314     1078    2           IF DCT.SQ$ = ADDR(NIL) THEN DO ;

   1078  0 000016   200004 470500                    LDP0    DCT$,,AUTO
         0 000017   000001 236100                    LDQ     1,,PR0
         0 000020   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000021   000030 601000 0                  TNZ     s:1084

      315     1079    2              N$REQ.FL$ = REQ$ ;

   1079  0 000022   200006 236100                    LDQ     REQ$,,AUTO
         0 000023   200006 471500                    LDP1    REQ$,,AUTO
         0 000024   100000 756100                    STQ     0,,PR1

PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:61   
      316     1080    2              DCT.SQ$ = REQ$ ;

   1080  0 000025   200006 236100                    LDQ     REQ$,,AUTO
         0 000026   000001 756100                    STQ     1,,PR0

      317     1081    2              END ;

   1081  0 000027   000051 710000 0                  TRA     s:1088

      318     1082    2           ELSE DO ;

      319     1083                   %ENQUEUE ( P#=N$REQ, Q#=DCT.SQ$ ) ;

   1084  0 000030   200004 236100                    LDQ     DCT$,,AUTO
         0 000031   000001 036003                    ADLQ    1,DU
         0 000032   200006 235100                    LDA     REQ$,,AUTO
         0 000033   200010 757100                    STAQ    SQH$+1,,AUTO
         0 000034   200010 630500                    EPPR0   SQH$+1,,AUTO
         0 000035   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000036   000000 701000 xent               TSX1    NIM$ENQUEUE
         0 000037   000000 011000                    NOP     0

      320     1086    2              CALL PMN$COLLECT ( DCT.PM, %PM_QUED )  ;

   1086  0 000040   000000 236000 1                  LDQ     0
         0 000041   200011 756100                    STQ     SQH$+2,,AUTO
         0 000042   200004 236100                    LDQ     DCT$,,AUTO
         0 000043   000010 036003                    ADLQ    8,DU
         0 000044   200010 756100                    STQ     SQH$+1,,AUTO
         0 000045   200010 630500                    EPPR0   SQH$+1,,AUTO
         0 000046   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000047   000000 701000 xent               TSX1    PMN$COLLECT
         0 000050   000000 011000                    NOP     0

      321     1087    2              END ;

      322     1088    1           GOTO SCHED;
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:62   

   1088  0 000051   000065 710000 0                  TRA     SCHED

      323     1089        %EJECT;
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:63   
      324     1090        /*D*  NAME:          NIJ$DEVSCHED
      325     1091              CALL:          CALL NIJ$DEVSCHED(PAR);
      326     1092              ENVIRONMENT:   Monitor, not privileged, not inhibited.
      327     1093              INPUT:         NI$DCT (Device Control Table Entry)
      328     1094              DESCRIPTION:   NIJ$DEVSCHED locks the SQH and goes to the common code
      329     1095                             at SCHED where a waiting request, if any, is started
      330     1096                             if that MCA is idle.
      331     1097        */
      332     1098    1   NIJ$DEVSCHED: ENTRY(PAR);

   1098  0 000052   000000 700200 xent  NIJ$DEVSCHED TSX0  ! X66_AUTO_1
         0 000053   000012 000001                    ZERO    10,1

      333     1099
      334     1100    1           DCT$=ADDR(PAR);

   1100  0 000054   200003 236100                    LDQ     @PAR,,AUTO
         0 000055   200004 756100                    STQ     DCT$,,AUTO

      335     1101    1           SQH$=DCT.SQH$;

   1101  0 000056   200004 470500                    LDP0    DCT$,,AUTO
         0 000057   000022 236100                    LDQ     18,,PR0
         0 000060   200007 756100                    STQ     SQH$,,AUTO

      336     1102                %LOCK(G#=SQH.GATE);

   1103  0 000061   200007 630500                    EPPR0   SQH$,,AUTO
         0 000062   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000063   000000 701000 xent               TSX1    HFC$LOCK
         0 000064   000000 011000                    NOP     0

      337     1105    1   SCHED:
      338     1106    2           IF DCT.STATE = %IDLE THEN DO ;

   1106  0 000065   200004 470500       SCHED        LDP0    DCT$,,AUTO
         0 000066   000007 236100                    LDQ     7,,PR0
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:64   
         0 000067   000077 316007                    CANQ    63,DL
         0 000070   000162 601000 0                  TNZ     s:1128

      339     1107    2              IF DCT.SQ$ = ADDR(NIL) THEN

   1107  0 000071   000001 236100                    LDQ     1,,PR0
         0 000072   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000073   000106 601000 0                  TNZ     s:1110

      340     1108    2                 CALL PMN$COLLECT ( DCT.PM, %PM_IDLE ) ;

   1108  0 000074   000001 236000 1                  LDQ     1
         0 000075   200011 756100                    STQ     SQH$+2,,AUTO
         0 000076   200004 236100                    LDQ     DCT$,,AUTO
         0 000077   000010 036003                    ADLQ    8,DU
         0 000100   200010 756100                    STQ     SQH$+1,,AUTO
         0 000101   200010 630500                    EPPR0   SQH$+1,,AUTO
         0 000102   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000103   000000 701000 xent               TSX1    PMN$COLLECT
         0 000104   000000 011000                    NOP     0
         0 000105   000162 710000 0                  TRA     s:1128

      341     1109    3              ELSE DO ;

      342     1110    3                 DQH$ = DCT.DQH$ ;

   1110  0 000106   000023 236100                    LDQ     19,,PR0
         0 000107   200005 756100                    STQ     DQH$,,AUTO

      343     1111                      %DEQUEUE ( P#=REQ$, Q#=DCT.SQ$ ) ;

   1115  0 000110   200004 236100                    LDQ     DCT$,,AUTO
         0 000111   000001 036003                    ADLQ    1,DU
         0 000112   200011 756100                    STQ     SQH$+2,,AUTO
         0 000113   200006 631500                    EPPR1   REQ$,,AUTO
         0 000114   200010 451500                    STP1    SQH$+1,,AUTO
         0 000115   200010 630500                    EPPR0   SQH$+1,,AUTO
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:65   
         0 000116   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000117   000000 701000 xent               TSX1    NIM$DEQUEUE
         0 000120   000000 011000                    NOP     0

      344     1118    3                 DQH.IO$ = REQ$ ;

   1118  0 000121   200006 236100                    LDQ     REQ$,,AUTO
         0 000122   200005 470500                    LDP0    DQH$,,AUTO
         0 000123   000014 756100                    STQ     12,,PR0

      345     1119    3                 IF DCT.SQ$ = ADDR(NIL) THEN

   1119  0 000124   200004 471500                    LDP1    DCT$,,AUTO
         0 000125   100001 236100                    LDQ     1,,PR1
         0 000126   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000127   000142 601000 0                  TNZ     s:1122

      346     1120    3                    CALL PMN$COLLECT ( DCT.PM, %PM_BUSY ) ;

   1120  0 000130   000002 236000 1                  LDQ     2
         0 000131   200011 756100                    STQ     SQH$+2,,AUTO
         0 000132   200004 236100                    LDQ     DCT$,,AUTO
         0 000133   000010 036003                    ADLQ    8,DU
         0 000134   200010 756100                    STQ     SQH$+1,,AUTO
         0 000135   200010 630500                    EPPR0   SQH$+1,,AUTO
         0 000136   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000137   000000 701000 xent               TSX1    PMN$COLLECT
         0 000140   000000 011000                    NOP     0
         0 000141   000153 710000 0                  TRA     s:1123

      347     1121    3                 ELSE
      348     1122    3                    CALL PMN$COLLECT ( DCT.PM, %PM_QUED ) ;

   1122  0 000142   000000 236000 1                  LDQ     0
         0 000143   200011 756100                    STQ     SQH$+2,,AUTO
         0 000144   200004 236100                    LDQ     DCT$,,AUTO
         0 000145   000010 036003                    ADLQ    8,DU
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:66   
         0 000146   200010 756100                    STQ     SQH$+1,,AUTO
         0 000147   200010 630500                    EPPR0   SQH$+1,,AUTO
         0 000150   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000151   000000 701000 xent               TSX1    PMN$COLLECT
         0 000152   000000 011000                    NOP     0

      349     1123    3                 CALL NIS$DRIVER ( DQH ) ;

   1123  0 000153   200005 630500                    EPPR0   DQH$,,AUTO
         0 000154   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000155   000000 701000 xent               TSX1    NIS$DRIVER
         0 000156   000000 011000                    NOP     0

      350     1124    3                 DCT.STATE = %BUSY ;

   1124  0 000157   200004 470500                    LDP0    DCT$,,AUTO
         0 000160   000005 236007                    LDQ     5,DL
         0 000161   000007 752101                    STCQ    7,'01'O,PR0

      351     1125    3                 END ;

      352     1126    2              END ;

      353     1127                %UNLOCK(G#=SQH.GATE);

   1128  0 000162   200007 630500                    EPPR0   SQH$,,AUTO
         0 000163   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000164   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000165   000000 011000                    NOP     0

      354     1130    1           RETURN;

   1130  0 000166   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000005 006000   000002 006000   000004 006000                    ............
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:67   
      355     1131    1   END NIJ$REQSCHED;

PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:68   
--  Include file information  --

   PM$NI.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NIJ$REQSCHED.
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:69   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PAR                       4-0-0/w PTR         r     1 DCT$
     5-0-0/w PTR         r     1 DQH$                      *0-0-0/w UBIN        r     1 PAR
     6-0-0/w PTR         r     1 REQ$                       7-0-0/w PTR         r     1 SQH$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 N$FQ$
     0-0-0/w PTR         r     1 NI$FQ$                     0-0-0/w PTR         r     1 NI$IBUF$
     0-0-0/w PTR         r     1 NI$RP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1332)  r     1 DCT                        0-0-0/w STRC(648)   r     1 DQH
     0-0-0/d STRC(1080)  r     1 N$REQ                      0-0-0/w STRC(252)   r     1 SQH


   Procedure NIJ$REQSCHED requires 119 words for executable code.
   Procedure NIJ$REQSCHED requires 10 words of local(AUTO) storage.

    No errors detected in file NIJ$MCA.:E05TSI    .
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:70   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:71   
          MINI XREF LISTING

DCT.DP
       958**DCL       965--REDEF     968--REDEF     969--REDEF     971--REDEF     971--REDEF     972--REDEF
       973--REDEF     973--REDEF
DCT.DQH$
       954**DCL      1110>>ASSIGN
DCT.MPC.IOCHANX
       966**DCL       966--REDEF
DCT.PM
       949**DCL      1086<>CALL     1108<>CALL     1120<>CALL     1122<>CALL
DCT.SQ$
       938**DCL      1078>>IF       1080<<ASSIGN   1084<>CALL     1107>>IF       1115<>CALL     1119>>IF
DCT.SQH$
       953**DCL      1074>>ASSIGN   1101>>ASSIGN
DCT.STATE
       948**DCL      1106>>IF       1124<<ASSIGN
DCT$
       922**DCL       938--IMP-PTR  1073<<ASSIGN   1074>>ASSIGN   1078>>IF       1080>>ASSIGN   1084>>CALL
      1086>>CALL     1100<<ASSIGN   1101>>ASSIGN   1106>>IF       1107>>IF       1108>>CALL     1110>>ASSIGN
      1115>>CALL     1119>>IF       1120>>CALL     1122>>CALL     1124>>ASSIGN
DQH
       986**DCL      1123<>CALL
DQH.IO$
       993**DCL      1118<<ASSIGN
DQH.IOCHANX
       988**DCL       989--REDEF
DQH.MBX$
       997**DCL       998--REDEF
DQH$
       923**DCL       986--IMP-PTR  1110<<ASSIGN   1118>>ASSIGN   1123>>CALL
HFC$LOCK
        31**DCL-ENT  1076--CALL     1103--CALL
HFC$UNLOCK
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:72   
        31**DCL-ENT  1128--CALL
N$DCT$$
       443**DCL       577--IMP-PTR
N$FQ$
       443**DCL       578--IMP-PTR
N$REQ
      1009**DCL      1084<>CALL
N$REQ.BUFADDR
      1018**DCL      1019--REDEF    1019--REDEF
N$REQ.DCT$
      1010**DCL      1073>>ASSIGN
N$REQ.DLA.DRELADDR
      1010**DCL      1010--REDEF
N$REQ.DVE.EOMCHAR
      1047**DCL      1048--REDEF
N$REQ.EAINFO
      1041**DCL      1041--REDEF
N$REQ.EAINFOX
      1041**DCL      1042--REDEF
N$REQ.EVNTINFO
      1042**DCL      1042--REDEF
N$REQ.FL$
      1009**DCL      1079<<ASSIGN
N$REQ.STATUS
      1023**DCL      1029--REDEF
N$REQ_INIT.BUFADDR
       462**DCL       463--REDEF     463--REDEF
N$REQ_INIT.DLA.DRELADDR
       454**DCL       454--REDEF
N$REQ_INIT.DVE.EOMCHAR
       491**DCL       492--REDEF
N$REQ_INIT.EAINFO
       485**DCL       485--REDEF
N$REQ_INIT.EAINFOX
       485**DCL       486--REDEF
N$REQ_INIT.EVNTINFO
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:73   
       486**DCL       486--REDEF
N$REQ_INIT.STATUS
       467**DCL       473--REDEF
NI$FQ$
       503**DCL       579--IMP-PTR
NI$IBUF$
       503**DCL       579--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
       513**DCL       514--REDEF     514--REDEF
NI$IMXMBX_INIT.SIZE
       515**DCL       515--REDEF
NI$REQ_INIT.DCW
       537**DCL       540--REDEF
NI$REQ_INIT.DCW.TALLY
       538**DCL       538--REDEF
NI$REQ_INIT.IDCW.EXTA
       540**DCL       540--REDEF
NI$REQ_INIT.PCW
       542**DCL       546--REDEF
NI$REQ_INIT.SEEK
       547**DCL       548--REDEF     549--REDEF
NI$RP$
       551**DCL       581--IMP-PTR
NIM$DEQUEUE
       606**DCL-ENT  1115--CALL
NIM$ENQUEUE
       607**DCL-ENT  1084--CALL
NIS$DRIVER
       917**DCL-ENT  1123--CALL
NI_MBX_INIT.DCW.CONTROL.AE
       573**DCL       573--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
       569**DCL       569--REDEF
PAR
       913**DCL        14--PROC     1072--ASSIGN   1098--ENTRY    1100--ASSIGN
PMN$COLLECT
PL6.E3A0      #002=NIJ$REQSCHED File=NIJ$MCA.:E05TSI                             WED 07/30/97 03:33 Page:74   
       918**DCL-ENT  1086--CALL     1108--CALL     1120--CALL     1122--CALL
REQ$
       924**DCL      1009--IMP-PTR  1072<<ASSIGN   1073>>ASSIGN   1079>>ASSIGN   1079>>ASSIGN   1080>>ASSIGN
      1084>>CALL     1115<>CALL     1118>>ASSIGN
SCHED
      1106**LABEL    1088--GOTO
SQH.DOOR
      1067**DCL      1067--REDEF
SQH.GATE
      1067**DCL      1076<>CALL     1103<>CALL     1128<>CALL
SQH$
       925**DCL      1067--IMP-PTR  1074<<ASSIGN   1076>>CALL     1101<<ASSIGN   1103>>CALL     1128>>CALL
