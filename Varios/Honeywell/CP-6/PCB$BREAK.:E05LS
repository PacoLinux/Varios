VERSION E05

PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:1    
        1        1        /*M* PCB$BREAK - BREAK HANDLER FOR CONTROL */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /**/
        8        8        PCB$BREAK: PROC ASYNC;
        9        9        /**/
       10       10        /*********************************************************************/
       11       11        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
       12       12        /*********************************************************************/
       13       13        /**/
       14       14        %INCLUDE PC_PERR_C;
       15       47        %INCLUDE PC_SUBS_C;
       16      379        %INCLUDE CP_6;
       17      460        %INCLUDE F$DCB;
       18      509        /**/
       19      510        /********************************************************************/
       20      511        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
       21      512        /********************************************************************/
       22      513        /**/
       23      514        %FPT_WRITE (FPTN = WRITE_UC,
       24      515                      DCB = M$UC,
       25      516                      BUF = BRKMSG,
       26      517                      VFC = YES);
       27      548        /**/
       28      549        %FPT_READ     (FPTN = READ_UC,
       29      550                      DCB = M$UC,
       30      551                      BUF = CMD_BUF);
       31      590        /**/
       32      591        /***********************************************************/
       33      592        /*   ENTRYS   ENTRYS   ENTRYS   ENTRYS   ENTRYS   ENTRYS   */
       34      593        /***********************************************************/
       35      594        /**/
       36      595    1   DCL PCE$ERROR ENTRY(2) ALTRET;
       37      596        /**/
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:2    
       38      597        /*****************************************************************/
       39      598        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       40      599        /*****************************************************************/
       41      600        /**/
       42      601    1   DCL REMEM_CMD_READ REMEMBER SYMREF;      /* UNWIND TO CMD_READ                 */
       43      602    1   DCL CMD_BUF CHAR(256) SYMREF;
       44      603    1   DCL PC_REASON UBIN SYMREF;
       45      604        /**/
       46      605        /*****************************************************************/
       47      606        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       48      607        /*****************************************************************/
       49      608        /**/
       50      609    1   DCL M$UC$ PTR AUTO;
       51      610        /**/
       52      611        /*****************************************************************************/
       53      612        /*   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   */
       54      613        /*****************************************************************************/
       55      614        /**/
       56      615    1   DCL BRKMSG CHAR(23) CONSTANT INIT('@Enter ''C'' to continue ');
       57      616        /**/
       58      617        /*****************************************************************/
       59      618        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       60      619        /*****************************************************************/
       61      620        /**/
       62      621    1      M$UC$ = DCBADDR(DCBNUM(M$UC));
       63      622        /**/
       64      623    1      CALL M$WRITE(WRITE_UC) ALTRET(BREAKOUT);
       65      624    1           READ_UC.BUF_.BOUND = 0;         /* READ ONE BYTE                      */
       66      625    1      CALL M$READ(READ_UC) ALTRET(BREAKOUT);
       67      626        /**/
       68      627    1      IF ((M$UC$ -> F$DCB.ARS = 1)AND
       69      628    1       ((SUBSTR(CMD_BUF,0,1) = 'C')OR
       70      629    1       (SUBSTR(CMD_BUF,0,1) = 'c'))) THEN RETURN;
       71      630        /**/
       72      631    1   BREAKOUT:
       73      632    1      CALL M$CLRSTK;
       74      633    1      UNWIND TO REMEM_CMD_READ;
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:3    
       75      634        /**/
       76      635    1   PCB$BREAKSET: ENTRY ASYNC;
       77      636        /**/
       78      637    1      CALL PCE$ERROR(%E$P_CANTBREAK,3);
       79      638    1      RETURN;
       80      639        /**/
       81      640        /*E*     ERROR:    PCC-E$P_CANTBREAK-0
       82      641                 MESSAGE: Cant break out of a SET or STORE command.
       83      642                 MESSAGE1: Because CONTROL is changing MONITOR tables
       84      643                           Break is not allowed in the SET and STORE commands.
       85      644                 DESCRIPTION: BREAK DURING SET IS NOT ALLOWED      */
       86      645
       87      646    1   PCB$TRAP: ENTRY ASYNC;
       88      647        /**/
       89      648    1         IF PC_REASON=%PC_TP_CNTRL_D THEN
       90      649    2            DO;
       91      650    2               CALL PCE$ERROR (%E$P_TP_CNTRL_D,3);
       92      651        /*E* ERROR: PCC-E$P_TP_CNTRL_D-0
       93      652           MESSAGE: TP_CNTRL_D file is trashed, CONTROL exitting.
       94      653        */
       95      654    2               END;
       96      655        /**/
       97      656    1         CALL M$MERCS;
       98      657    1   END;

PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:4    
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   PC_SUBS_C.:E05TOU  is referenced.
   PC_PERR_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PCB$BREAK.

   Procedure PCB$BREAK requires 54 words for executable code.
   Procedure PCB$BREAK requires 4 words of local(AUTO) storage.

    No errors detected in file PCB$BREAK.:E05TSI    .

PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:5    

 Object Unit name= PCB$BREAK                                  File name= PCB$BREAK.:E05TOU
 UTS= JUL 30 '97 04:19:05.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    26     32  PCB$BREAK
    2  RoData even  UTS      6      6  PCB$BREAK
    3   Proc  even  none    54     66  PCB$BREAK
    4  RoData even  none     7      7  PCB$BREAK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes     Async       0  PCB$BREAK
     3     43                  yes     Async       0  PCB$BREAKSET
     3     52                  yes     Async       0  PCB$TRAP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 PCE$ERROR
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AARET
                       nStd      0 X66_AAUNWIND
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  REMEM_CMD_READ                        CMD_BUF
     PC_REASON                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:7    


        1        1        /*M* PCB$BREAK - BREAK HANDLER FOR CONTROL */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /**/
        8        8        PCB$BREAK: PROC ASYNC;

      8  3 000000   000000 700200 xent  PCB$BREAK    TSX0  ! X66_AAUTO
         3 000001   000004 000000                    ZERO    4,0

        9        9        /**/
       10       10        /*********************************************************************/
       11       11        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
       12       12        /*********************************************************************/
       13       13        /**/
       14       14        %INCLUDE PC_PERR_C;
       15       47        %INCLUDE PC_SUBS_C;
       16      379        %INCLUDE CP_6;
       17      460        %INCLUDE F$DCB;
       18      509        /**/
       19      510        /********************************************************************/
       20      511        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
       21      512        /********************************************************************/
       22      513        /**/
       23      514        %FPT_WRITE (FPTN = WRITE_UC,
       24      515                      DCB = M$UC,
       25      516                      BUF = BRKMSG,
       26      517                      VFC = YES);
       27      548        /**/
       28      549        %FPT_READ     (FPTN = READ_UC,
       29      550                      DCB = M$UC,
       30      551                      BUF = CMD_BUF);
       31      590        /**/
       32      591        /***********************************************************/
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:8    
       33      592        /*   ENTRYS   ENTRYS   ENTRYS   ENTRYS   ENTRYS   ENTRYS   */
       34      593        /***********************************************************/
       35      594        /**/
       36      595    1   DCL PCE$ERROR ENTRY(2) ALTRET;
       37      596        /**/
       38      597        /*****************************************************************/
       39      598        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       40      599        /*****************************************************************/
       41      600        /**/
       42      601    1   DCL REMEM_CMD_READ REMEMBER SYMREF;      /* UNWIND TO CMD_READ                 */
       43      602    1   DCL CMD_BUF CHAR(256) SYMREF;
       44      603    1   DCL PC_REASON UBIN SYMREF;
       45      604        /**/
       46      605        /*****************************************************************/
       47      606        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       48      607        /*****************************************************************/
       49      608        /**/
       50      609    1   DCL M$UC$ PTR AUTO;
       51      610        /**/
       52      611        /*****************************************************************************/
       53      612        /*   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   CONSTANTS   */
       54      613        /*****************************************************************************/
       55      614        /**/
       56      615    1   DCL BRKMSG CHAR(23) CONSTANT INIT('@Enter ''C'' to continue ');
       57      616        /**/
       58      617        /*****************************************************************/
       59      618        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       60      619        /*****************************************************************/
       61      620        /**/
       62      621    1      M$UC$ = DCBADDR(DCBNUM(M$UC));

    621  3 000002   000000 236007 xsym               LDQ     M$UC,DL
         3 000003   000000 470400 4                  LDP0    0
         3 000004   000000 471500                    LDP1    0,,PR0
         3 000005   100000 236106                    LDQ     0,QL,PR1
         3 000006   200003 756100                    STQ     M$UC$,,AUTO

PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:9    
       63      622        /**/
       64      623    1      CALL M$WRITE(WRITE_UC) ALTRET(BREAKOUT);

    623  3 000007   000000 630400 1                  EPPR0   WRITE_UC
         3 000010   440001 713400                    CLIMB   alt,write
         3 000011   401400 401760                    pmme    nvectors=4
         3 000012   000036 702000 3                  TSX2    BREAKOUT

       65      624    1           READ_UC.BUF_.BOUND = 0;         /* READ ONE BYTE                      */

    624  3 000013   177777 236007                    LDQ     65535,DL
         3 000014   000020 356000 1                  ANSQ    READ_UC+4

       66      625    1      CALL M$READ(READ_UC) ALTRET(BREAKOUT);

    625  3 000015   000014 630400 1                  EPPR0   READ_UC
         3 000016   440000 713400                    CLIMB   alt,read
         3 000017   401400 401760                    pmme    nvectors=4
         3 000020   000036 702000 3                  TSX2    BREAKOUT

       67      626        /**/
       68      627    1      IF ((M$UC$ -> F$DCB.ARS = 1)AND

    627  3 000021   200003 470500                    LDP0    M$UC$,,AUTO
         3 000022   000000 235100                    LDA     0,,PR0
         3 000023   000001 115007                    CMPA    1,DL
         3 000024   000036 601000 3                  TNZ     BREAKOUT
         3 000025   000000 236000 xsym               LDQ     CMD_BUF
         3 000026   777000 376003                    ANQ     -512,DU
         3 000027   103000 116003                    CMPQ    34304,DU
         3 000030   000035 600000 3                  TZE     s:629
         3 000031   000000 236000 xsym               LDQ     CMD_BUF
         3 000032   777000 376003                    ANQ     -512,DU
         3 000033   143000 116003                    CMPQ    50688,DU
         3 000034   000036 601000 3                  TNZ     BREAKOUT

       69      628    1       ((SUBSTR(CMD_BUF,0,1) = 'C')OR
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:10   
       70      629    1       (SUBSTR(CMD_BUF,0,1) = 'c'))) THEN RETURN;

    629  3 000035   000000 702200 xent               TSX2  ! X66_AARET

       71      630        /**/
       72      631    1   BREAKOUT:
       73      632    1      CALL M$CLRSTK;

    632  3 000036   010013 713400       BREAKOUT     CLIMB   4107
         3 000037   000000 401760                    pmme    nvectors=0

       74      633    1      UNWIND TO REMEM_CMD_READ;

    633  3 000040   000000 237200 xsym               LDAQ  ! REMEM_CMD_READ
         3 000041   000000 700200 xent               TSX0  ! X66_AAUNWIND
         3 000042   000000 000200                    ZERO    0,128

       75      634        /**/
       76      635    1   PCB$BREAKSET: ENTRY ASYNC;

    635  3 000043   000000 700200 xent  PCB$BREAKSET TSX0  ! X66_AAUTO
         3 000044   000004 000000                    ZERO    4,0

       77      636        /**/
       78      637    1      CALL PCE$ERROR(%E$P_CANTBREAK,3);

    637  3 000045   000002 630400 4                  EPPR0   2
         3 000046   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000047   000000 701000 xent               TSX1    PCE$ERROR
         3 000050   000000 011000                    NOP     0

       79      638    1      RETURN;

    638  3 000051   000000 702200 xent               TSX2  ! X66_AARET

       80      639        /**/
       81      640        /*E*     ERROR:    PCC-E$P_CANTBREAK-0
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:11   
       82      641                 MESSAGE: Cant break out of a SET or STORE command.
       83      642                 MESSAGE1: Because CONTROL is changing MONITOR tables
       84      643                           Break is not allowed in the SET and STORE commands.
       85      644                 DESCRIPTION: BREAK DURING SET IS NOT ALLOWED      */
       86      645
       87      646    1   PCB$TRAP: ENTRY ASYNC;

    646  3 000052   000000 700200 xent  PCB$TRAP     TSX0  ! X66_AAUTO
         3 000053   000004 000000                    ZERO    4,0

       88      647        /**/
       89      648    1         IF PC_REASON=%PC_TP_CNTRL_D THEN

    648  3 000054   000000 235000 xsym               LDA     PC_REASON
         3 000055   000001 115007                    CMPA    1,DL
         3 000056   000063 601000 3                  TNZ     s:656

       90      649    2            DO;

       91      650    2               CALL PCE$ERROR (%E$P_TP_CNTRL_D,3);

    650  3 000057   000005 630400 4                  EPPR0   5
         3 000060   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000061   000000 701000 xent               TSX1    PCE$ERROR
         3 000062   000000 011000                    NOP     0

       92      651        /*E* ERROR: PCC-E$P_TP_CNTRL_D-0
       93      652           MESSAGE: TP_CNTRL_D file is trashed, CONTROL exitting.
       94      653        */
       95      654    2               END;

       96      655        /**/
       97      656    1         CALL M$MERCS;

    656  3 000063   010014 713400                    CLIMB   4108
         3 000064   000000 401760                    pmme    nvectors=0

PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:12   
       98      657    1   END;

    657  3 000065   000000 702200 xent               TSX2  ! X66_AARET

PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:13   
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   PC_SUBS_C.:E05TOU  is referenced.
   PC_PERR_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PCB$BREAK.
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:14   

 **** Variables and constants ****

  ****  Section 001  Data  PCB$BREAK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    14-0-0/d STRC(504)   r     1 READ_UC                    0-0-0/d STRC(432)   r     1 WRITE_UC

  ****  Section 002 RoData PCB$BREAK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(23)    r     1 BRKMSG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 M$UC$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(256)   r     1 CMD_BUF                    0-0-0/w UBIN        r     1 PC_REASON
     0-0-0/d REMB        r     1 REMEM_CMD_READ

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$UC
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:15   


   Procedure PCB$BREAK requires 54 words for executable code.
   Procedure PCB$BREAK requires 4 words of local(AUTO) storage.

    No errors detected in file PCB$BREAK.:E05TSI    .
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:16   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:17   
          MINI XREF LISTING

BREAKOUT
       632**LABEL     623--CALLALT   625--CALLALT
BRKMSG
       615**DCL       535--DCLINIT   536--DCLINIT
CMD_BUF
       602**DCL       570--DCLINIT   571--DCLINIT   627>>IF        627>>IF
F$DCB.ACTPOS
       486**DCL       486--REDEF
F$DCB.ARS
       461**DCL       461--REDEF     627>>IF
F$DCB.ATTR
       479**DCL       480--REDEF
F$DCB.BORROW
       494**DCL       494--REDEF     494--REDEF     494--REDEF
F$DCB.DCBNAME.L
       508**DCL       508--IMP-SIZ
F$DCB.EOMCHAR
       465**DCL       465--REDEF
F$DCB.FLDID
       489**DCL       489--REDEF
F$DCB.FORM$
       483**DCL       483--REDEF
F$DCB.FSECT
       499**DCL       499--REDEF
F$DCB.FSN
       476**DCL       476--REDEF     476--REDEF     477--REDEF
F$DCB.HEADER$
       482**DCL       482--REDEF
F$DCB.IXTNSIZE
       480**DCL       480--REDEF
F$DCB.LASTSTA$
       470**DCL       470--REDEF
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:18   
F$DCB.LVL
       495**DCL       495--REDEF
F$DCB.NAME.C
       470**DCL       470--REDEF
F$DCB.NOEOF
       491**DCL       491--REDEF
F$DCB.NRECS
       481**DCL       481--REDEF
F$DCB.NRECX
       500**DCL       500--REDEF
F$DCB.OHDR
       492**DCL       492--REDEF
F$DCB.ORG
       475**DCL       475--REDEF
F$DCB.PRECNO
       498**DCL       498--REDEF
F$DCB.RCSZ
       503**DCL       503--REDEF
F$DCB.RES
       471**DCL       471--REDEF
F$DCB.SETX
       483**DCL       483--REDEF
F$DCB.TAB$
       482**DCL       483--REDEF
F$DCB.TDA
       497**DCL       497--REDEF
F$DCB.WSN
       472**DCL       472--REDEF
M$CLRSTK
       446**DCL-ENT   632--CALL
M$MERCS
       445**DCL-ENT   656--CALL
M$READ
       389**DCL-ENT   625--CALL
M$UC
       412**DCL       621--ASSIGN
PL6.E3A0      #001=PCB$BREAK File=PCB$BREAK.:E05TSI                              WED 07/30/97 04:19 Page:19   
M$UC$
       609**DCL       621<<ASSIGN    627>>IF
M$WRITE
       389**DCL-ENT   623--CALL
PCE$ERROR
       595**DCL-ENT   637--CALL      650--CALL
PC_REASON
       603**DCL       648>>IF
READ_UC
       568**DCL       625<>CALL
READ_UC.BUF_.BOUND
       570**DCL       624<<ASSIGN
READ_UC.STATION_
       571**DCL       572--REDEF
READ_UC.V
       572**DCL       568--DCLINIT
READ_UC.V.DVBYTE.REREAD#
       583**DCL       583--REDEF
READ_UC.V.INDX#
       581**DCL       581--REDEF
REMEM_CMD_READ
       601**DCL       633>>UNWIND
WRITE_UC
       534**DCL       623<>CALL
WRITE_UC.STATION_
       536**DCL       536--REDEF
WRITE_UC.V
       537**DCL       534--DCLINIT
WRITE_UC.V.DVBYTE.VFC#
       543**DCL       543--REDEF
