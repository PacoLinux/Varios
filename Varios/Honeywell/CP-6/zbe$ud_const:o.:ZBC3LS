

CC.C03    File=zbe$ud_const:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=1  
        1         1             /* $Header: ud_const.c,v 1.3 87/03/10 11:47:20 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /* C O N S T A N T   P R O P A G A T I O N */
        7         7
        8         8             #include "types:h"
        9         9             #include "ud:h"
       10        10             #include "debug:h"
       11        11             #include "global:h"
       12        12             #include "alloc:h"
       13        13             #include "lset:h"
       14        14             #include "cset:h"
       15        15             #include "def:h"
       16        16             #include "aux:h"
       17        17             #include "locals:h"
       18        18             #include "em_mnem:h"
       19        19             #include "em_pseu:h"
       20        20             #include "em_spec:h"
       21        21             #include "ud_defs:h"
       22        22             #include "ud_const:h"
       23        23             #include "ud_aux:h"
       24        24
       25        25
       26        26             #define CHANGE_INDIR(p)  (p->p_change->c_flags & CF_INDIR)
       27        27             #define IS_REG(v)  (locals[TO_LOCAL(v)]->lc_flags & LCF_REG)
       28        28             #define BODY_KNOWN(p) (p->p_flags1 & (byte) PF_BODYSEEN)
       29        29             #define CALLS_UNKNOWN(p) (p->p_flags1 & (byte) PF_CALUNKNOWN)
       30        30
       31        31
       32        32             bool is_use(l)
       33        33              line_p l;
       34        34             {
       35        35    1         /* See if 'l' is a use of a variable */
       36        36    1
CC.C03    File=zbe$ud_const:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=2  
       37        37    1         switch(INSTR(l)) {
       38        38    2             case op_lde:
       39        39    2             case op_ldl:
       40        40    2             case op_loe:
       41        41    2             case op_lol:
       42        42    2               return TRUE;
       43        43    2            default:
       44        44    2               return FALSE;
       45        45    2         }
       46        46    1         /* NOTREACHED  */
       47        47    1        }
       48        48
       49        49
       50        50
       51        51
       52        52             bool value_known(def,val_out)
       53        53              line_p def;
       54        54              offset *val_out;
       55        55             {
       56        56    1         /* See if the value stored by definition 'def'
       57        57    1          * is known statically (i.e. is a constant).
       58        58    1          */
       59        59    1
       60        60    1         short sz1, sz2;
       61        61    1         offset v;
       62        62    1         line_p l;
       63        63    1
       64        64    1         sz1 = ws;
       65        65    1         switch(INSTR(def)) {
       66        66    2            case op_inl:
       67        67    2            case op_ine:
       68        68    2            case op_del:
       69        69    2            case op_dee:
       70        70    2               return FALSE;
       71        71    2            case op_zrl:
       72        72    2            case op_zre:
       73        73    2               v = (offset) 0;
CC.C03    File=zbe$ud_const:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=3  
       74        74    2               break;
       75        75    2            case op_sdl:
       76        76    2            case op_sde:
       77        77    2               sz1 += ws;
       78        78    2               /* fall through ... */
       79        79    2            case op_stl:
       80        80    2            case op_ste:
       81        81    2               l = PREV(def);
       82        82    2               if (l == (line_p) 0) return FALSE;
       83        83    2               sz2 = ws;
       84        84    2               switch(INSTR(l)) {
       85        85    3                  case op_zer:
       86        86    3                     if (SHORT(l) >= sz1) {
       87        87    4                        v = (offset) 0;
       88        88    4                        break;
       89        89    4                     }
       90        90    3                     return FALSE;
       91        91    3                  case op_ldc:
       92        92    3                     sz2 += ws;
       93        93    3                     /* fall through ...*/
       94        94    3                  case op_loc:
       95        95    3                     if (sz1 == sz2) {
       96        96    4                        v = off_set(l);
       97        97    4                        break;
       98        98    4                     }
       99        99    3                     /* fall through ... */
      100       100    3                  default:
      101       101    3                     return FALSE;
      102       102    3               }
      103       103    2               break;
      104       104    2            default:
      105       105    2               assert(FALSE);
      106       106    2         }
      107       107    1         *val_out = v;
      108       108    1         return TRUE;
      109       109    1        }
      110       110
CC.C03    File=zbe$ud_const:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=4  
      111       111
      112       112
      113       113
      114       114             bool affected(use,v,l)
      115       115              line_p use,l;
      116       116              short  v;
      117       117             {
      118       118    1         /* See if the variable referenced by 'use' may be
      119       119    1          * changed by instruction l, which is either a cal, cai or
      120       120    1          * an indirect assignment.
      121       121    1          */
      122       122    1
      123       123    1         if (INSTR(l) == op_cal &&
      124       124    1             TYPE(use) == OPOBJECT &&
      125       125    1             BODY_KNOWN(PROC(l)) &&
      126       126    1             !CALLS_UNKNOWN(PROC(l)) &&
      127       127    1             !CHANGE_INDIR(PROC(l))) {
      128       128    2            return Cis_elem(OBJ(use)->o_id,PROC(l)->p_change->c_ext);
      129       129    2         }
      130       130    1         return TYPE(use) == OPOBJECT || !IS_REG(v);
      131       131    1        }
      132       132
      133       133
      134       134
      135       135
      136       136             STATIC search_backwards(use,v,found,def)
      137       137              line_p use, *def;
      138       138              short v;
      139       139              bool *found;
      140       140             {
      141       141    1         /* Search backwards in the current basic block,
      142       142    1          * starting at 'use', trying to find a definition
      143       143    1          * of the variable referenced by 'use', whose variable
      144       144    1          * number is v. If the definition found is an
      145       145    1          * implicit one, return 0 as def.
      146       146    1          */
      147       147    1
CC.C03    File=zbe$ud_const:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=5  
      148       148    1         register line_p l;
      149       149    1
      150       150    1         for (l = PREV(use); l != (line_p) 0; l = PREV(l)) {
      151       151    2            if (does_expl_def(l) && same_var(use,l)) {
      152       152    3               *found = TRUE;
      153       153    3               *def = l;
      154       154    3               return;
      155       155    3            }
      156       156    2            if (does_impl_def(l) && affected(use,v,l)) {
      157       157    3               *found = TRUE;
      158       158    3               *def = (line_p) 0;
      159       159    3               return;
      160       160    3            }
      161       161    2         }
      162       162    1         *found = FALSE;
      163       163    1        }
      164       164
      165       165
      166       166
      167       167
      168       168             STATIC short outer_def(vdefs,in)
      169       169              cset vdefs, in;
      170       170             {
      171       171    1         /* See if there is a unique definition of variable
      172       172    1          * v reaching the beginning of block b.
      173       173    1          * 'vdefs' is vardefs[v], 'in' is IN(b).
      174       174    1          */
      175       175    1
      176       176    1         short n,defnr = 0;
      177       177    1         Cindex i;
      178       178    1
      179       179    1         for (i = Cfirst(vdefs); i != (Cindex) 0; i = Cnext(i,vdefs)) {
      180       180    2            n = Celem(i);
      181       181    2            if (Cis_elem(EXPL_TO_DEFNR(n),in)) {
      182       182    3               if (defnr != 0) return  0;
      183       183    3               /* If there was already a def., there's no unique one */
      184       184    3               defnr = n;
CC.C03    File=zbe$ud_const:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=6  
      185       185    3            }
      186       186    2         }
      187       187    1         return defnr;
      188       188    1        }
      189       189
      190       190
      191       191
      192       192
      193       193             line_p unique_def(use,b,defnr_out)
      194       194              line_p use;
      195       195              bblock_p b;
      196       196              short *defnr_out;
      197       197             {
      198       198    1         /* See if there is one unique explicit definition
      199       199    1          * of the variable used by 'use', that reaches 'use'.
      200       200    1          */
      201       201    1
      202       202    1         short v;
      203       203    1         bool found;
      204       204    1         line_p def =  (line_p) 0;
      205       205    1
      206       206    1         *defnr_out = 0;
      207       207    1         var_nr(use,&v,&found);
      208       208    1         if (found) {
      209       209    2            /* We do maintain ud-info for this variable.
      210       210    2             * See if there is a previous explicit definition
      211       211    2             * in the current basic block.
      212       212    2             */
      213       213    2            search_backwards(use,v,&found,&def);
      214       214    2            if (!found && !Cis_elem(IMPLICIT_DEF(v),IN(b))) {
      215       215    3               /* See if there is a unique explicit definition
      216       216    3                * outside the current block, reaching the
      217       217    3                * beginning of the current block.
      218       218    3                */
      219       219    3               *defnr_out = outer_def(vardefs[v],IN(b));
      220       220    3               def = (*defnr_out == 0 ? (line_p) 0 : defs[*defnr_out]);
      221       221    3            }
CC.C03    File=zbe$ud_const:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=7  
      222       222    2         }
      223       223    1         return def;
      224       224    1        }
      225       225
      226       226
      227       227
      228       228             fold_const(l,b,val)
      229       229              line_p l;
      230       230              bblock_p b;
      231       231              offset val;
      232       232             {
      233       233    1         /* Perform the substitutions required for constant folding */
      234       234    1
      235       235    1         line_p n;
      236       236    1
      237       237    1         n = int_line(val);
      238       238    1         switch(INSTR(l)) {
      239       239    2            case op_lol:
      240       240    2            case op_loe:
      241       241    2               n->l_instr = op_loc;
      242       242    2               break;
      243       243    2            case op_ldl:
      244       244    2            case op_lde:
      245       245    2               n->l_instr = op_ldc;
      246       246    2               break;
      247       247    2            default:
      248       248    2               assert (FALSE);
      249       249    2         }
      250       250    1         repl_line(l,n,b);
      251       251    1        }
      252       252
---  Include file information  ---

   zbe$types:h.:ZBC3TOU. is referenced
   zbe$ud:h.:ZBC3TOU. is referenced
   zbe$debug:h.:ZBC3TOU. is referenced
   zbe$global:h.:ZBC3TOU. is referenced
CC.C03    File=zbe$ud_const:c.:ZBC3TSI                                              Fri Aug 22 1997  Page=8  
   zbe$alloc:h.:ZBC3TOU. is referenced
   zbe$lset:h.:ZBC3TOU. is referenced
   zbe$cset:h.:ZBC3TOU. is referenced
   zbe$def:h.:ZBC3TOU. is referenced
   zbe$aux:h.:ZBC3TOU. is referenced
   zbe$locals:h.:ZBC3TOU. is referenced
   em_mnem:h.:ZBC3TOU. is referenced
   em_pseu:h.:ZBC3TOU. is referenced
   em_spec:h.:ZBC3TOU. is referenced
   zbe$ud_defs:h.:ZBC3TOU. is referenced
   zbe$ud_const:h.:ZBC3TOU. is referenced
   zbe$ud_aux:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbe$ud_const:c.:ZBC3TSI
