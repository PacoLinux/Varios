VERSION E05

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:1    
        1        1        /*M* QXA$XCON - TPCP XCON processing */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        QXA$XCON:
        9        9                PROC ASYNC;
       10       10
       11       11        %INCLUDE Q_PAGE_C;
       12       43        %SET LISTEXP = '1'B;
       13       44        %PAGE(ARG="Includes");

                61        /***************************************************************************
                62         *                                                                         *
                63         *                                  Includes                               *
                64         *                                                                         *
                65         ***************************************************************************/

       14       69        %INCLUDE CP_6;
       15      150        %INCLUDE Q_SCODE_C;
       16      161        %INCLUDE CP_6_SUBS;
       17      701        %INCLUDE B$JIT;
       18      991        %INCLUDE QX_PERR_C;
       19     1001        %INCLUDE QX_MACROS_C;
       20     1136        %PAGE(ARG="Subs");

              1153    1   /***************************************************************************
              1154    1    *                                                                         *
              1155    1    *                                    Subs                                 *
              1156    1    *                                                                         *
              1157    1    ***************************************************************************/

       21     1161        %SUB_EXC;
       22     1208        %PAGE(ARG="Externally defined routines");

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:2    
              1225    1   /***************************************************************************
              1226    1    *                                                                         *
              1227    1    *                        Externally defined routines                      *
              1228    1    *                                                                         *
              1229    1    ***************************************************************************/

       23     1233    1   DCL QXA$TPCP ENTRY;
       24     1234        %PAGE(ARG="Symrefs");

              1251    1   /***************************************************************************
              1252    1    *                                                                         *
              1253    1    *                                  Symrefs                                *
              1254    1    *                                                                         *
              1255    1    ***************************************************************************/

       25     1259    1   DCL B$TCB$ PTR SYMREF;
       26     1260    1   DCL B$JIT$ PTR SYMREF;
       27     1261        %PAGE(ARG="Dcbs");

              1278    1   /***************************************************************************
              1279    1    *                                                                         *
              1280    1    *                                    Dcbs                                 *
              1281    1    *                                                                         *
              1282    1    ***************************************************************************/

       28     1286    1   DCL M$DO DCB;
       29     1287        %PAGE(ARG="Based");

              1304    1   /***************************************************************************
              1305    1    *                                                                         *
              1306    1    *                                   Based                                 *
              1307    1    *                                                                         *
              1308    1    ***************************************************************************/

       30     1312        %B$TCB;
       31     1315        %B$XCON;
       32     1325        %B$EXCFR;
PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:3    
       33     1343        %PAGE(ARG="Auto");

              1360    1   /***************************************************************************
              1361    1    *                                                                         *
              1362    1    *                                    Auto                                 *
              1363    1    *                                                                         *
              1364    1    ***************************************************************************/

       34     1368    1   DCL P$ PTR;
       35     1369        %PAGE(ARG="Screech codes", PAGE=YES);

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:4    
              1386    1   /***************************************************************************
              1387    1    *                                                                         *
              1388    1    *                               Screech codes                             *
              1389    1    *                                                                         *
              1390    1    ***************************************************************************/

       36     1394        /*S* SCREECH_CODE: QXA-S$QXXCON
       37     1395
       38     1396             TYPE:        SNAP
       39     1397
       40     1398             MESSAGE:     TPCP Unexpected entry to XCON
       41     1399
       42     1400             REMARKS:     For some reason TPCP was entered at its
       43     1401                          XCON handler.  See B$JIT.USRERR for further info
       44     1402        */
       45     1403        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:5    
              1420    1   /***************************************************************************
              1421    1    *                                                                         *
              1422    1    *                                    FPTs                                 *
              1423    1    *                                                                         *
              1424    1    ***************************************************************************/

       46     1428        %FPT_SCREECH(STCLASS=CONSTANT);
       47     1442
       48     1443        %FPT_SCREECH(FPTN=FPT$SCREECH, STCLASS=);
       49     1457
       50     1458        %VLP_SCODE(FPTN=SC_SCODE, STCLASS=CONSTANT, FCG=QX, MON=NO,
       51     1459        CUSR=YES, CGDATA=YES, CURCG=YES, PPUT=YES, FMBUF=YES, DDSEG=YES,
       52     1460        MID=A, CODE=%S$QXXCON, SPBUF=NO, ROSEG=YES, ISEG=YES, CPSEG=YES);
       53     1521
       54     1522        %VLP_SCODE(FPTN=SC$SCODE, STCLASS=AUTO);
       55     1583        %PAGE(ARG="QXA$PXCON", PAGE=YES);

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:6    
              1600    1   /***************************************************************************
              1601    1    *                                                                         *
              1602    1    *                                 QXA$PXCON                               *
              1603    1    *                                                                         *
              1604    1    ***************************************************************************/

       56     1608    2           DO INHIBIT;
       57     1609    2             P$ = B$TCB$ -> B$TCB.STK$;
       58     1610    2             IF P$ -> B$XCON.RNST.OPERR OR
       59     1611    2                 P$ -> B$XCON.RNST.OPXXX OR
       60     1612    2                 P$ -> B$XCON.ECSC = 1 THEN
       61     1613    3               DO;
       62     1614    3                 CALL M$EXIT;
       63     1615    3               END;
       64     1616        /* What should we do about B$XCON.CECCB.LIMIT? */
       65     1617    2             B$JIT.USRERR = B$TCB$ -> B$TCB.STK$ -> B$XCON.ERR;
       66     1618    2             FPT$SCREECH = FPT_SCREECH;
       67     1619    2             FPT$SCREECH.SCODE_ = VECTOR(SC$SCODE);
       68     1620    2             FPT$SCREECH.JERR_ = VECTOR(B$JIT.USRERR);
       69     1621    2             SC$SCODE = SC_SCODE;
       70     1622
       71     1623    2             IF B$JIT.CPFLAGS1 & '000000000002'O /* CP_SCREECH# */ THEN
       72     1624    3               DO;
       73     1625    3                 SC$SCODE.SEV# = 6;
       74     1626    3                 CALL M$SCREECH(FPT$SCREECH); /* SUA dump                        */
       75     1627    3               END;
       76     1628
       77     1629    2             B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | '000000000002'O /* CP_SCREECH# */;
       78     1630    2             SC$SCODE.SEV# = 5;
       79     1631    2             CALL M$SCREECH(FPT$SCREECH);  /* SNAP dump                          */
       80     1632
       81     1633    2             CALL QXA$TPCP;                /* Try to log the guy off             */
       82     1634    2           END /* INHIBIT */;
       83     1635    1   END QXA$XCON;

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:7    
--  Include file information  --

   QX_MACROS_C.:E05TOU  is referenced.
   QX_PERR_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   Q_SCODE_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QXA$XCON.

   Procedure QXA$XCON requires 60 words for executable code.
   Procedure QXA$XCON requires 14 words of local(AUTO) storage.

    No errors detected in file QXA$XCON.:E05TSI    .

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:8    

 Object Unit name= QXA$XCON                                   File name= QXA$XCON.:E05TOU
 UTS= JUL 30 '97 05:54:28.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$DO
    2  RoData even  UTS      8     10  QXA$XCON
    3   Proc  even  none    60     74  QXA$XCON
    4  RoData even  none     2      2  QXA$XCON

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes     Async       0  QXA$XCON

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 QXA$TPCP
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AARET
PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                B$JIT$
     M$DO                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:10   


        1        1        /*M* QXA$XCON - TPCP XCON processing */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        QXA$XCON:
        9        9                PROC ASYNC;

      9  3 000000   000000 700200 xent  QXA$XCON     TSX0  ! X66_AAUTO
         3 000001   000016 000000                    ZERO    14,0

       10       10
       11       11        %INCLUDE Q_PAGE_C;
       12       43        %SET LISTEXP = '1'B;
       13       44        %PAGE(ARG="Includes");

                61        /***************************************************************************
                62         *                                                                         *
                63         *                                  Includes                               *
                64         *                                                                         *
                65         ***************************************************************************/

       14       69        %INCLUDE CP_6;
       15      150        %INCLUDE Q_SCODE_C;
       16      161        %INCLUDE CP_6_SUBS;
       17      701        %INCLUDE B$JIT;
       18      991        %INCLUDE QX_PERR_C;
       19     1001        %INCLUDE QX_MACROS_C;
       20     1136        %PAGE(ARG="Subs");

              1153    1   /***************************************************************************
              1154    1    *                                                                         *
              1155    1    *                                    Subs                                 *
              1156    1    *                                                                         *
PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:11   
              1157    1    ***************************************************************************/

       21     1161        %SUB_EXC;
       22     1208        %PAGE(ARG="Externally defined routines");

              1225    1   /***************************************************************************
              1226    1    *                                                                         *
              1227    1    *                        Externally defined routines                      *
              1228    1    *                                                                         *
              1229    1    ***************************************************************************/

       23     1233    1   DCL QXA$TPCP ENTRY;
       24     1234        %PAGE(ARG="Symrefs");

              1251    1   /***************************************************************************
              1252    1    *                                                                         *
              1253    1    *                                  Symrefs                                *
              1254    1    *                                                                         *
              1255    1    ***************************************************************************/

       25     1259    1   DCL B$TCB$ PTR SYMREF;
       26     1260    1   DCL B$JIT$ PTR SYMREF;
       27     1261        %PAGE(ARG="Dcbs");

              1278    1   /***************************************************************************
              1279    1    *                                                                         *
              1280    1    *                                    Dcbs                                 *
              1281    1    *                                                                         *
              1282    1    ***************************************************************************/

       28     1286    1   DCL M$DO DCB;
       29     1287        %PAGE(ARG="Based");

              1304    1   /***************************************************************************
              1305    1    *                                                                         *
              1306    1    *                                   Based                                 *
              1307    1    *                                                                         *
PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:12   
              1308    1    ***************************************************************************/

       30     1312        %B$TCB;
       31     1315        %B$XCON;
       32     1325        %B$EXCFR;
       33     1343        %PAGE(ARG="Auto");

              1360    1   /***************************************************************************
              1361    1    *                                                                         *
              1362    1    *                                    Auto                                 *
              1363    1    *                                                                         *
              1364    1    ***************************************************************************/

       34     1368    1   DCL P$ PTR;
       35     1369        %PAGE(ARG="Screech codes", PAGE=YES);

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:13   
              1386    1   /***************************************************************************
              1387    1    *                                                                         *
              1388    1    *                               Screech codes                             *
              1389    1    *                                                                         *
              1390    1    ***************************************************************************/

       36     1394        /*S* SCREECH_CODE: QXA-S$QXXCON
       37     1395
       38     1396             TYPE:        SNAP
       39     1397
       40     1398             MESSAGE:     TPCP Unexpected entry to XCON
       41     1399
       42     1400             REMARKS:     For some reason TPCP was entered at its
       43     1401                          XCON handler.  See B$JIT.USRERR for further info
       44     1402        */
       45     1403        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:14   
              1420    1   /***************************************************************************
              1421    1    *                                                                         *
              1422    1    *                                    FPTs                                 *
              1423    1    *                                                                         *
              1424    1    ***************************************************************************/

       46     1428        %FPT_SCREECH(STCLASS=CONSTANT);
       47     1442
       48     1443        %FPT_SCREECH(FPTN=FPT$SCREECH, STCLASS=);
       49     1457
       50     1458        %VLP_SCODE(FPTN=SC_SCODE, STCLASS=CONSTANT, FCG=QX, MON=NO,
       51     1459        CUSR=YES, CGDATA=YES, CURCG=YES, PPUT=YES, FMBUF=YES, DDSEG=YES,
       52     1460        MID=A, CODE=%S$QXXCON, SPBUF=NO, ROSEG=YES, ISEG=YES, CPSEG=YES);
       53     1521
       54     1522        %VLP_SCODE(FPTN=SC$SCODE, STCLASS=AUTO);
       55     1583        %PAGE(ARG="QXA$PXCON", PAGE=YES);

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:15   
              1600    1   /***************************************************************************
              1601    1    *                                                                         *
              1602    1    *                                 QXA$PXCON                               *
              1603    1    *                                                                         *
              1604    1    ***************************************************************************/

       56     1608    2           DO INHIBIT;

       57     1609    2             P$ = B$TCB$ -> B$TCB.STK$;

   1609  3 000002   000000 470600 xsym               LDP0  ! B$TCB$
         3 000003   000001 236300                    LDQ   ! 1,,PR0
         3 000004   200003 756300                    STQ   ! P$,,AUTO

       58     1610    2             IF P$ -> B$XCON.RNST.OPERR OR

   1610  3 000005   200003 471700                    LDP1  ! P$,,AUTO
         3 000006   100101 236300                    LDQ   ! 65,,PR1
         3 000007   020000 316203                    CANQ  ! 8192,DU
         3 000010   000016 601200 3                  TNZ   ! s:1614
         3 000011   100101 234300                    SZN   ! 65,,PR1
         3 000012   000016 604200 3                  TMI   ! s:1614
         3 000013   100100 720300                    LXL0  ! 64,,PR1
         3 000014   000001 100203                    CMPX0 ! 1,DU
         3 000015   000020 601200 3                  TNZ   ! s:1617

       59     1611    2                 P$ -> B$XCON.RNST.OPXXX OR
       60     1612    2                 P$ -> B$XCON.ECSC = 1 THEN
       61     1613    3               DO;

       62     1614    3                 CALL M$EXIT;

   1614  3 000016   000001 713600                    CLIMB ! exit
         3 000017   000000 401760                    pmme    nvectors=0

       63     1615    3               END;

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:16   
       64     1616        /* What should we do about B$XCON.CECCB.LIMIT? */
       65     1617    2             B$JIT.USRERR = B$TCB$ -> B$TCB.STK$ -> B$XCON.ERR;

   1617  3 000020   000000 470600 xsym               LDP0  ! B$TCB$
         3 000021   000001 471700                    LDP1  ! 1,,PR0
         3 000022   100102 236300                    LDQ   ! 66,,PR1
         3 000023   000000 473600 xsym               LDP3  ! B$JIT$
         3 000024   300144 756300                    STQ   ! 100,,PR3

       66     1618    2             FPT$SCREECH = FPT_SCREECH;

   1618  3 000025   000100 100600                    MLR   ! fill='000'O
         3 000026   000000 000030 2                  ADSC9   FPT_SCREECH              cn=0,n=24
         3 000027   200004 000030                    ADSC9   FPT$SCREECH,,AUTO        cn=0,n=24

       67     1619    2             FPT$SCREECH.SCODE_ = VECTOR(SC$SCODE);

   1619  3 000030   000000 235200 4                  LDA   ! 0
         3 000031   200014 452700                    STP2  ! SC$SCODE+2,,AUTO
         3 000032   200014 236300                    LDQ   ! SC$SCODE+2,,AUTO
         3 000033   000012 036203                    ADLQ  ! 10,DU
         3 000034   200004 757300                    STAQ  ! FPT$SCREECH,,AUTO

       68     1620    2             FPT$SCREECH.JERR_ = VECTOR(B$JIT.USRERR);

   1620  3 000035   777640 235207                    LDA   ! -96,DL
         3 000036   000000 236200 xsym               LDQ   ! B$JIT$
         3 000037   000144 036203                    ADLQ  ! 100,DU
         3 000040   200006 757300                    STAQ  ! FPT$SCREECH+2,,AUTO

       69     1621    2             SC$SCODE = SC_SCODE;

   1621  3 000041   000006 237200 2                  LDAQ  ! SC_SCODE
         3 000042   200012 757300                    STAQ  ! SC$SCODE,,AUTO

       70     1622
       71     1623    2             IF B$JIT.CPFLAGS1 & '000000000002'O /* CP_SCREECH# */ THEN
PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:17   

   1623  3 000043   300143 236300                    LDQ   ! 99,,PR3
         3 000044   000004 376200 xsym               ANQ   ! B_VECTNIL+4
         3 000045   000055 600200 3                  TZE   ! s:1629

       72     1624    3               DO;

       73     1625    3                 SC$SCODE.SEV# = 6;

   1625  3 000046   200012 236300                    LDQ   ! SC$SCODE,,AUTO
         3 000047   000001 376200 4                  ANQ   ! 1
         3 000050   000006 276207                    ORQ   ! 6,DL
         3 000051   200012 756300                    STQ   ! SC$SCODE,,AUTO

       74     1626    3                 CALL M$SCREECH(FPT$SCREECH); /* SUA dump                        */

   1626  3 000052   200004 630700                    EPPR0 ! FPT$SCREECH,,AUTO
         3 000053   000013 713600                    CLIMB ! 11
         3 000054   401000 401760                    pmme    nvectors=3

       75     1627    3               END;

       76     1628
       77     1629    2             B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | '000000000002'O /* CP_SCREECH# */;

   1629  3 000055   000000 470600 xsym               LDP0  ! B$JIT$
         3 000056   000143 236300                    LDQ   ! 99,,PR0
         3 000057   000004 276200 xsym               ORQ   ! B_VECTNIL+4
         3 000060   000143 756300                    STQ   ! 99,,PR0

       78     1630    2             SC$SCODE.SEV# = 5;

   1630  3 000061   200012 236300                    LDQ   ! SC$SCODE,,AUTO
         3 000062   000001 376200 4                  ANQ   ! 1
         3 000063   000005 276207                    ORQ   ! 5,DL
         3 000064   200012 756300                    STQ   ! SC$SCODE,,AUTO

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:18   
       79     1631    2             CALL M$SCREECH(FPT$SCREECH);  /* SNAP dump                          */

   1631  3 000065   200004 630700                    EPPR0 ! FPT$SCREECH,,AUTO
         3 000066   000013 713600                    CLIMB ! 11
         3 000067   401000 401760                    pmme    nvectors=3

       80     1632
       81     1633    2             CALL QXA$TPCP;                /* Try to log the guy off             */

   1633  3 000070   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         3 000071   000000 701200 xent               TSX1  ! QXA$TPCP
         3 000072   000000 011200                    NOP   ! 0

       82     1634    2           END /* INHIBIT */;

       83     1635    1   END QXA$XCON;

   1635  3 000073   000000 702200 xent               TSX2  ! X66_AARET

PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:19   
--  Include file information  --

   QX_MACROS_C.:E05TOU  is referenced.
   QX_PERR_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   Q_SCODE_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QXA$XCON.
PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:20   

 **** Variables and constants ****

  ****  Section 002 RoData QXA$XCON

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(216)   r     1 FPT_SCREECH                6-0-0/d STRC(72)    r     1 SC_SCODE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/d STRC(216)   r     1 FPT$SCREECH                3-0-0/w PTR         r     1 P$
    12-0-0/d STRC(72)    r     1 SC$SCODE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(2448)  r     1 B$XCON


   Procedure QXA$XCON requires 60 words for executable code.
   Procedure QXA$XCON requires 14 words of local(AUTO) storage.
PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:21   

    No errors detected in file QXA$XCON.:E05TSI    .
PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:22   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:23   
          MINI XREF LISTING

B$EXCFR.ASL
      1326**DCL      1326--REDEF
B$EXCFR.ERR.ERR#
      1340**DCL      1340--REDEF
B$EXCFR.EVID
      1339**DCL      1339--REDEF    1340--REDEF
B$EXCFR.IR
      1327**DCL      1327--REDEF
B$EXCFR.PREVSZ
      1326**DCL      1326--REDEF
B$EXCFR.SUBC
      1338**DCL      1338--REDEF    1339--REDEF    1339--REDEF
B$JIT.CPFLAGS1
       804**DCL      1623>>IF       1629<<ASSIGN   1629>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       809**DCL       809--REDEF
B$JIT.ERR.MID
       716**DCL       716--REDEF
B$JIT.JRESPEAK
       877**DCL       878--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       986**DCL       986--REDEF     987--REDEF
B$JIT.PNR
       890**DCL       890--REDEF
B$JIT.TSLINE
       984**DCL       985--REDEF
B$JIT.USRERR
       851**DCL      1617<<ASSIGN   1620--ASSIGN
B$JIT$
      1260**DCL       710--IMP-PTR  1617>>ASSIGN   1620>>ASSIGN   1623>>IF       1629>>ASSIGN   1629>>ASSIGN
B$TCB.STK$
      1313**DCL      1609>>ASSIGN   1617>>ASSIGN
PL6.E3A0      #001=QXA$XCON File=QXA$XCON.:E05TSI                                WED 07/30/97 05:54 Page:24   
B$TCB$
      1259**DCL      1609>>ASSIGN   1617>>ASSIGN
B$XCON.ECSC
      1317**DCL      1610>>IF
B$XCON.ERR
      1322**DCL      1617>>ASSIGN
B$XCON.ERR.ERR#
      1322**DCL      1322--REDEF
B$XCON.LIMIT.MEM
      1320**DCL      1320--REDEF
B$XCON.RNST.OPERR
      1318**DCL      1610>>IF
B$XCON.RNST.OPXXX
      1317**DCL      1610>>IF
FPT$SCREECH
      1454**DCL      1618<<ASSIGN   1626<>CALL     1631<>CALL
FPT$SCREECH.JERR_
      1454**DCL      1620<<ASSIGN
FPT$SCREECH.SCODE_
      1454**DCL      1619<<ASSIGN
FPT_SCREECH
      1439**DCL      1618>>ASSIGN
M$EXIT
        90**DCL-ENT  1614--CALL
M$SCREECH
        92**DCL-ENT  1626--CALL     1631--CALL
P$
      1368**DCL      1609<<ASSIGN   1610>>IF       1610>>IF       1610>>IF
QXA$TPCP
      1233**DCL-ENT  1633--CALL
SC$SCODE
      1537**DCL      1619--ASSIGN   1621<<ASSIGN
SC$SCODE.SEV#
      1564**DCL      1625<<ASSIGN   1630<<ASSIGN
SC_SCODE
      1475**DCL      1621>>ASSIGN
