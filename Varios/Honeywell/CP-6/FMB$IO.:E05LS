VERSION E05

PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:1    
        1        1        /*M*   FMB$IO - Routines for disk I/O and error logging */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7                                                /*                                    */
        8        8        /*X* */
        9        9                                                /*                                    */
       10       10                                                /*                                    */
       11       11        /*P*   NAME:   FMB$IO
       12       12               PURPOSE:  Routines to interface with with the I/O system,
       13       13                       and to perform error logging                                  */
       14       14        %EJECT;
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:2    
       15       15                                                /*                                    */
       16       16                                                /*                                    */
       17       17                                                /*                                    */
       18       18        /*D*   NAME:   FMB$QUEUE
       19       19               ENTRY:  FMB$RIO
       20       20               CALL:   CALL FMB$QUEUE(BUF$,0,BYTES,DA,OP,WAIT,
       21       21                         EAADDR,EAINFO,Q$) ALTRET(LOC);
       22       22                       CALL FMB$RIO(0,PAGE#,WORDS,DA,OP,WAIT,
       23       23                         EAADDR,EAINFO,,Q$) ALTRET(LOC);
       24       24               INTERFACE:  NIO$QUE,NIQ$GET
       25       25               INPUT:  BUF$ - Pointer to buffer
       26       26                       PAGE# - Real page number of buffer
       27       27                       BYTES - Number of bytes to transfer
       28       28                       DA - Set or file relative disk address
       29       29                       OP - Function code
       30       30                       WAIT - 0=no-wait, use DCB.WAIT for REQ.NWIO
       31       31                              1=wait, use DCB.WAIT for REQ.NWIO
       32       32                              -1=wait, set REQ.NWIO to 1
       33       33                       EAADDR - EPTR of end-action routine, else ADDR(NIL)
       34       34                       EAINFO - End-action information
       35       35                       Q$ - Pointer to Q packet obtained
       36       36               DESCRIPTION:                                                          */
       37       37                                                /*                                    */
       38       38        FMB$QUEUE: PROC(BUF$,PAGE#,BYTES,DA,OP,WAIT,EAADDR,PEAINFO,PQ$) ALTRET;
       39       39        /* PARAMETERS */
       40       40    1   DCL BUF$ PTR;
       41       41    1   DCL PAGE# UBIN(36);
       42       42    1   DCL BYTES SBIN WORD;
       43       43    1   DCL DA SBIN WORD;
       44       44    1   DCL OP SBIN WORD;
       45       45    1   DCL WAIT SBIN WORD;
       46       46    1   DCL EAADDR EPTR;
       47       47    1   DCL PEAINFO BIT(36) ALIGNED;
       48       48    1   DCL PQ$ PTR;
       49       49        /* EXTERNAL ROUTINES */
       50       50    1   DCL NIO$QUE ENTRY(1) ALTRET;
       51       51    1   DCL NIQ$GET ENTRY(1) ALTRET;
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:3    
       52       52    1   DCL NIQ$REL ENTRY(1) ALTRET;
       53       53    1   DCL FAF$FRTOSR ENTRY(3) ALTRET;
       54       54    1   DCL FAF$SRTODR ENTRY(2)ALTRET;
       55       55    1   DCL FMB$WREA ENTRY(1);
       56       56    1   DCL SC_FMB80 ENTRY CONV(2,0);
       57       57        /* LOCAL AUTOMATIC STORAGE */
       58       58    1   DCL Q$ PTR;
       59       59    1   DCL JDCB$ PTR;
       60       60    1   DCL CDA SBIN;
       61       61    1   DCL SRDA UBIN;
       62       62    1   DCL CBYTES SBIN;
       63       63    1   DCL RBYTES SBIN;
       64       64    1   DCL GRANS SBIN;
       65       65    1   DCL B$ PTR;
       66       66    1   DCL 1 EAINFO,
       67       67    1         2 * BIT(27),
       68       68    1         2 GMOD UBIN(9) UNAL;
       69       69    1   DCL T$ PTR;
       70       70    1   DCL T$BIT REDEF T$ BIT(36);
       71       71        /* INCLUDE FILES */
       72       72        %INCLUDE B$JIT_C;
       73      386        %B$JIT0;
       74      475        %U$JIT1X;
       75      478        %M$JIT2X;
       76      481        %F$JIT3;
       77      486        %S$JIT4X;
       78      489        %J$JIT5X;
       79      492        %A$JIT6;
       80      502        %INCLUDE CP_6_SUBS;
       81     1042        %INCLUDE F$DCB;
       82     1091        %INCLUDE FM_DATA_R;
       83     1105        %INCLUDE N$REQ;
       84     1179        %INCLUDE N_FC_C;
       85     1216        %INCLUDE HF_LOCK_C;
       86     1230        %INCLUDE B$USER;
       87     1446        %B$USERREFS;
       88     1450        %INCLUDE FM$RANEA;
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:4    
       89     1460        /* EXTERNAL DATA */
       90     1461    1   DCL B$JIT$ PTR SYMREF READONLY;
       91     1462    1   DCL S_TIMR UBIN SYMREF;
       92     1463    1   DCL S_UDLGATE SBIN SYMREF;
       93     1464    1   DCL FM_WRCMP SBIN SYMREF;
       94     1465        /* BASED VARIABLES */
       95     1466        %N$REQ;
       96     1524        %FM$RANEA;
       97     1527                                                /*                                    */
       98     1528    1           JDCB$=B$JIT.DCB$;               /* DCB POINTER                        */
       99     1529    1           CDA=DA;                         /* CURRENT FILE-RELATIVE DISK ADDR    */
      100     1530    1           RBYTES=BYTES;                   /* # BYTES REMAINING TO XFER          */
      101     1531    1           B$=BUF$;                        /* INITIAL BUFFER POINTER             */
      102     1532    1           EAINFO=PEAINFO;
      103     1533                                                /*                                    */
      104     1534    1   AGAIN:  SRDA=CDA;
      105     1535    1           IF SRDA<FM_SRZERO
      106     1536    1           THEN                  /* MUST CONVERT FILE-RELATIVE TO SET-RELATIVE   */
      107     1537    2           DO;
      108     1538    2              CALL FAF$FRTOSR(CDA,SRDA,GRANS) ALTRET(ERR);
      109     1539    2              IF GRANS>=(RBYTES+4095)/4096
      110     1540    2              THEN                         /* ENTIRE TRANSFER IS IN ONE EXTENT   */
      111     1541    2                 CBYTES=RBYTES;            /* SET # BYTES TO XFER                */
      112     1542    2              ELSE          /* ONLY TRANSFER THE REMAINING SIZE IN THIS EXTENT   */
      113     1543    3              DO;
      114     1544    3                 CBYTES=GRANS*4096;
      115     1545    3                 CDA=CDA+GRANS;            /* INCR FILE-REL DA FOR NEXT TIME     */
      116     1546    3                 END;
      117     1547    2              END;
      118     1548    1           ELSE                       /* SET RELATIVE - TRANSFER ENTIRE AMOUNT   */
      119     1549    1              CBYTES=BYTES;
      120     1550                                                /*                                    */
      121     1551    1           CALL NIQ$GET(Q$);               /* GET A PACKET                       */
      122     1552                                                /*                                    */
      123     1553    1           Q$->N$REQ.BUF$=B$;              /* BUFFER POINTER                     */
      124     1554    1           Q$->N$REQ.OPFLG=OP_USER|OP_BPF; /* USER ASSOCIATED, BUF PTR           */
      125     1555    1           GOTO COMMON;
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:5    
      126     1556                                                /*                                    */
      127     1557    1   FMB$RIO: ENTRY(BUF$,PAGE#,BYTES,DA,OP,WAIT,EAADDR,PEAINFO,PQ$) ALTRET;
      128     1558    1           JDCB$=B$JIT$->B$JIT.DCB$;       /* POINTER TO CURRENT DCB             */
      129     1559    1           IF BYTES>4096 THEN
      130     1560    1              CALL SC_FMB80;               /* NO MORE THAN 1 PAGE ALLOWED        */
      131     1561        /*S*   SCREECH_CODE:  FMB-S$FM80
      132     1562        *      TYPE:   SUA
      133     1563        *      MESSAGE:  Attempt to do real I/O to more than one page */
      134     1564    1           SRDA=DA;
      135     1565    1           IF SRDA<FM_SRZERO
      136     1566    1           THEN                  /* MUST CONVERT FILE-RELATIVE TO SET-RELATIVE   */
      137     1567    1              CALL FAF$FRTOSR(DA,SRDA,GRANS) ALTRET(ERR);
      138     1568    1           CBYTES=BYTES;
      139     1569    1           RBYTES=0;
      140     1570    1           EAINFO=PEAINFO;
      141     1571                                                /*                                    */
      142     1572    1           CALL NIQ$GET(Q$);               /* GET A PACKET                       */
      143     1573                                                /*                                    */
      144     1574    1           Q$->N$REQ.BUFADDR=PAGE#*4096;   /* BYTE ADDRESS                       */
      145     1575    1           IF S_TIMR~=2 THEN
      146     1576    1              Q$->N$REQ.OPFLG=OP_USER;     /* Make it user associated            */
      147     1577                                                /*                                    */
      148     1578    1   COMMON: ;
      149     1579    1           Q$->N$REQ.DLA=BINBIT(SRDA,36);
      150     1580    2           CALL FAF$SRTODR(Q$->N$REQ.DLA,JDCB$->F$DCB.SETX) WHENALTRETURN DO;
      151     1581    2              IF Q$->N$REQ.DLA = '777777777777'O THEN
      152     1582    2                 DA = -1;
      153     1583    2              GOTO RELPKT;
      154     1584    2              END;
      155     1585    1           Q$->N$REQ.BUFSIZE=CBYTES;
      156     1586    1           IF OP~=%N_WRBIN OR (FM_WRCMP=0 AND NOT JDCB$->F$DCB.WCDATA) THEN
      157     1587    1              Q$->N$REQ.FC=OP;
      158     1588    1           ELSE
      159     1589    1              Q$->N$REQ.FC=%N_WRCMP;       /* CHANGE WRITES TO WRITE-COMPARE     */
      160     1590    2           IF EAADDR~=ENTADDR(NIL) THEN DO;
      161     1591    2              Q$->N$REQ.EAENTRY=EAADDR;    /* END-ACTION ADDRESS                 */
      162     1592    2              Q$->N$REQ.EAINFO=BITBIN(EAINFO); /* END-ACTION INFO                */
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:6    
      163     1593    2              Q$->N$REQ.OPFLG.EA='1'B;
      164     1594    2              END;
      165     1595    1           ELSE
      166     1596    2              IF NOT Q$->N$REQ.OPFLG.BPF AND OP=%N_WRBIN THEN DO;
      167     1597    2                 Q$->N$REQ.EAENTRY=ENTADDR(FMB$WREA);
      168     1598    2                 Q$->N$REQ.OPFLG.EA='1'B;
      169     1599    2                 END;
      170     1600    2           IF B$JIT.DO$~=ADDR(NIL) AND JDCB$->F$DCB.IORG=%RANDOM# THEN DO;
      171     1601                   %LOCK (G#=S_UDLGATE);
      172     1604    2              B$JIT.DO$->B$DO.IOCOMP.CNTR=B$JIT.DO$->B$DO.IOCOMP.CNTR+1;
      173     1605                   %UNLOCK (G#=S_UDLGATE);
      174     1608    2              Q$->N$REQ.DOPTR$=B$JIT.DO$;
      175     1609    2              Q$->N$REQ.OPFLG.EVNT='1'B;
      176     1610    2              END;
      177     1611    2           DO CASE(WAIT);
      178     1612    2            CASE(0);
      179     1613    2              Q$->N$REQ.NWIO=JDCB$->F$DCB.WAIT; /* SELECT TYC                    */
      180     1614    2              IF Q$->N$REQ.OPFLG.BPF THEN
      181     1615    2                 Q$->N$REQ.DCB$=JDCB$;
      182     1616    2            CASE(1);
      183     1617    2              Q$->N$REQ.NWIO=JDCB$->F$DCB.WAIT; /* SELECT TYC                    */
      184     1618    2              Q$->N$REQ.OPFLG.WAIT='1'B;   /* WAIT                               */
      185     1619    2              Q$->N$REQ.DCB$=JDCB$;
      186     1620    2            CASE(ELSE);
      187     1621    2              Q$->N$REQ.NWIO=1;            /* USE WAIT TYC                       */
      188     1622    2              Q$->N$REQ.OPFLG.WAIT='1'B;   /* WAIT                               */
      189     1623    2              Q$->N$REQ.DCB$=JDCB$;
      190     1624    2            END;
      191     1625    2           IF OP>512 THEN DO;              /* Read into user page                */
      192     1626    2              Q$->N$REQ.OPFLG.CLR='1'B;
      193     1627    3              IF OP>1024 THEN DO;          /* Special random-file call           */
      194     1628    3                 T$BIT=EAINFO;             /* Ptr to other Q packet              */
      195     1629                      %LOCK (G#=F_DCBLOCK);
      196     1632    3                 T$->FM$RANEA.CNT=T$->FM$RANEA.CNT+1;
      197     1633                      %UNLOCK (G#=F_DCBLOCK);
      198     1636    3                 Q$->N$REQ.EAINFOX=POFFW(B$,BUF$)/1024;
      199     1637    3                 END;
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:7    
      200     1638    2              END;
      201     1639    2           IF ADDR(PQ$)~=ADDR(NIL) THEN DO; /* Save Q packet for caller          */
      202     1640    2              Q$->N$REQ.OPFLG.HOLD='1'B;
      203     1641    2              PQ$=Q$;
      204     1642    2              END;
      205     1643    1           CALL NIO$QUE(Q$->N$REQ) ALTRET(RELPKT);
      206     1644    1           B$JIT.ACCESS.PACKS=B$JIT.ACCESS.PACKS+1;
      207     1645    2           IF RBYTES>CBYTES THEN DO;
      208     1646    2              RBYTES=RBYTES-CBYTES;
      209     1647    2              B$=PINCRW(B$,GRANS*1024);
      210     1648    2              IF ADDR(PQ$) ~= ADDR(NIL) THEN
      211     1649    2                 CALL NIQ$REL(PQ$);
      212     1650    2              GOTO AGAIN;
      213     1651    2              END;
      214     1652    1           RETURN;
      215     1653    1   RELPKT: CALL NIQ$REL(Q$);               /* RELEASE THE PACKET                 */
      216     1654    1   ERR:    IF ADDR(PQ$)~=ADDR(NIL) THEN
      217     1655    1              PQ$=ADDR(NIL);
      218     1656    1           ALTRETURN;
      219     1657    1   END FMB$QUEUE;
      220     1658        %EOD;

PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:8    
--  Include file information  --

   FM$RANEA.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FMB$QUEUE.

   Procedure FMB$QUEUE requires 328 words for executable code.
   Procedure FMB$QUEUE requires 26 words of local(AUTO) storage.

PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:9    

 Object Unit name= FMB$QUEUE                                  File name= FMB$IO.:E05TOU
 UTS= JUL 29 '97 16:37:06.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   328    510  FMB$QUEUE
    1  RoData even  none     3      3  FMB$QUEUE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        9  FMB$QUEUE
     0     77          yes     yes      Std        9  FMB$RIO

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 FAF$FRTOSR
 yes     yes           Std       1 NIQ$GET
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       1 NIO$QUE
 yes     yes           Std       1 NIQ$REL
 yes     yes           Std       2 FAF$SRTODR
         yes           Std       1 FMB$WREA
         yes           Std       1 HFC$LOCK
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_N
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:10   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_FMB80                         r    FM_SRZERO                             F_DCBLOCK
r    B$JIT$                                S_TIMR                                S_UDLGATE
     FM_WRCMP                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:11   


        1        1        /*M*   FMB$IO - Routines for disk I/O and error logging */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7                                                /*                                    */
        8        8        /*X* */
        9        9                                                /*                                    */
       10       10                                                /*                                    */
       11       11        /*P*   NAME:   FMB$IO
       12       12               PURPOSE:  Routines to interface with with the I/O system,
       13       13                       and to perform error logging                                  */
       14       14        %EJECT;
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:12   
       15       15                                                /*                                    */
       16       16                                                /*                                    */
       17       17                                                /*                                    */
       18       18        /*D*   NAME:   FMB$QUEUE
       19       19               ENTRY:  FMB$RIO
       20       20               CALL:   CALL FMB$QUEUE(BUF$,0,BYTES,DA,OP,WAIT,
       21       21                         EAADDR,EAINFO,Q$) ALTRET(LOC);
       22       22                       CALL FMB$RIO(0,PAGE#,WORDS,DA,OP,WAIT,
       23       23                         EAADDR,EAINFO,,Q$) ALTRET(LOC);
       24       24               INTERFACE:  NIO$QUE,NIQ$GET
       25       25               INPUT:  BUF$ - Pointer to buffer
       26       26                       PAGE# - Real page number of buffer
       27       27                       BYTES - Number of bytes to transfer
       28       28                       DA - Set or file relative disk address
       29       29                       OP - Function code
       30       30                       WAIT - 0=no-wait, use DCB.WAIT for REQ.NWIO
       31       31                              1=wait, use DCB.WAIT for REQ.NWIO
       32       32                              -1=wait, set REQ.NWIO to 1
       33       33                       EAADDR - EPTR of end-action routine, else ADDR(NIL)
       34       34                       EAINFO - End-action information
       35       35                       Q$ - Pointer to Q packet obtained
       36       36               DESCRIPTION:                                                          */
       37       37                                                /*                                    */
       38       38        FMB$QUEUE: PROC(BUF$,PAGE#,BYTES,DA,OP,WAIT,EAADDR,PEAINFO,PQ$) ALTRET;

     38  0 000000   000000 700200 xent  FMB$QUEUE    TSX0  ! X66_AUTO_N
         0 000001   000032 000011                    ZERO    26,9

       39       39        /* PARAMETERS */
       40       40    1   DCL BUF$ PTR;
       41       41    1   DCL PAGE# UBIN(36);
       42       42    1   DCL BYTES SBIN WORD;
       43       43    1   DCL DA SBIN WORD;
       44       44    1   DCL OP SBIN WORD;
       45       45    1   DCL WAIT SBIN WORD;
       46       46    1   DCL EAADDR EPTR;
       47       47    1   DCL PEAINFO BIT(36) ALIGNED;
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:13   
       48       48    1   DCL PQ$ PTR;
       49       49        /* EXTERNAL ROUTINES */
       50       50    1   DCL NIO$QUE ENTRY(1) ALTRET;
       51       51    1   DCL NIQ$GET ENTRY(1) ALTRET;
       52       52    1   DCL NIQ$REL ENTRY(1) ALTRET;
       53       53    1   DCL FAF$FRTOSR ENTRY(3) ALTRET;
       54       54    1   DCL FAF$SRTODR ENTRY(2)ALTRET;
       55       55    1   DCL FMB$WREA ENTRY(1);
       56       56    1   DCL SC_FMB80 ENTRY CONV(2,0);
       57       57        /* LOCAL AUTOMATIC STORAGE */
       58       58    1   DCL Q$ PTR;
       59       59    1   DCL JDCB$ PTR;
       60       60    1   DCL CDA SBIN;
       61       61    1   DCL SRDA UBIN;
       62       62    1   DCL CBYTES SBIN;
       63       63    1   DCL RBYTES SBIN;
       64       64    1   DCL GRANS SBIN;
       65       65    1   DCL B$ PTR;
       66       66    1   DCL 1 EAINFO,
       67       67    1         2 * BIT(27),
       68       68    1         2 GMOD UBIN(9) UNAL;
       69       69    1   DCL T$ PTR;
       70       70    1   DCL T$BIT REDEF T$ BIT(36);
       71       71        /* INCLUDE FILES */
       72       72        %INCLUDE B$JIT_C;
       73      386        %B$JIT0;
       74      475        %U$JIT1X;
       75      478        %M$JIT2X;
       76      481        %F$JIT3;
       77      486        %S$JIT4X;
       78      489        %J$JIT5X;
       79      492        %A$JIT6;
       80      502        %INCLUDE CP_6_SUBS;
       81     1042        %INCLUDE F$DCB;
       82     1091        %INCLUDE FM_DATA_R;
       83     1105        %INCLUDE N$REQ;
       84     1179        %INCLUDE N_FC_C;
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:14   
       85     1216        %INCLUDE HF_LOCK_C;
       86     1230        %INCLUDE B$USER;
       87     1446        %B$USERREFS;
       88     1450        %INCLUDE FM$RANEA;
       89     1460        /* EXTERNAL DATA */
       90     1461    1   DCL B$JIT$ PTR SYMREF READONLY;
       91     1462    1   DCL S_TIMR UBIN SYMREF;
       92     1463    1   DCL S_UDLGATE SBIN SYMREF;
       93     1464    1   DCL FM_WRCMP SBIN SYMREF;
       94     1465        /* BASED VARIABLES */
       95     1466        %N$REQ;
       96     1524        %FM$RANEA;
       97     1527                                                /*                                    */
       98     1528    1           JDCB$=B$JIT.DCB$;               /* DCB POINTER                        */

   1528  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200015 756100                    STQ     JDCB$,,AUTO

       99     1529    1           CDA=DA;                         /* CURRENT FILE-RELATIVE DISK ADDR    */

   1529  0 000005   200006 471500                    LDP1    @DA,,AUTO
         0 000006   100000 235100                    LDA     0,,PR1
         0 000007   200016 755100                    STA     CDA,,AUTO

      100     1530    1           RBYTES=BYTES;                   /* # BYTES REMAINING TO XFER          */

   1530  0 000010   200005 473500                    LDP3    @BYTES,,AUTO
         0 000011   300000 235100                    LDA     0,,PR3
         0 000012   200021 755100                    STA     RBYTES,,AUTO

      101     1531    1           B$=BUF$;                        /* INITIAL BUFFER POINTER             */

   1531  0 000013   200003 474500                    LDP4    @BUF$,,AUTO
         0 000014   400000 236100                    LDQ     0,,PR4
         0 000015   200023 756100                    STQ     B$,,AUTO

PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:15   
      102     1532    1           EAINFO=PEAINFO;

   1532  0 000016   200012 475500                    LDP5    @PEAINFO,,AUTO
         0 000017   500000 236100                    LDQ     0,,PR5
         0 000020   200024 756100                    STQ     EAINFO,,AUTO

      103     1533                                                /*                                    */
      104     1534    1   AGAIN:  SRDA=CDA;

   1534  0 000021   200016 235100       AGAIN        LDA     CDA,,AUTO
         0 000022   200017 755100                    STA     SRDA,,AUTO

      105     1535    1           IF SRDA<FM_SRZERO

   1535  0 000023   200017 236100                    LDQ     SRDA,,AUTO
         0 000024   000000 116000 xsym               CMPQ    FM_SRZERO
         0 000025   000057 603000 0                  TRC     s:1549

      106     1536    1           THEN                  /* MUST CONVERT FILE-RELATIVE TO SET-RELATIVE   */
      107     1537    2           DO;

      108     1538    2              CALL FAF$FRTOSR(CDA,SRDA,GRANS) ALTRET(ERR);

   1538  0 000026   200022 630500                    EPPR0   GRANS,,AUTO
         0 000027   200030 450500                    STP0    T$+3,,AUTO
         0 000030   200017 631500                    EPPR1   SRDA,,AUTO
         0 000031   200027 451500                    STP1    T$+2,,AUTO
         0 000032   200016 633500                    EPPR3   CDA,,AUTO
         0 000033   200026 453500                    STP3    T$+1,,AUTO
         0 000034   200026 630500                    EPPR0   T$+1,,AUTO
         0 000035   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000036   000000 701000 xent               TSX1    FAF$FRTOSR
         0 000037   000501 702000 0                  TSX2    ERR

      109     1539    2              IF GRANS>=(RBYTES+4095)/4096

   1539  0 000040   200021 236100                    LDQ     RBYTES,,AUTO
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:16   
         0 000041   007777 036007                    ADLQ    4095,DL
         0 000042   010000 506007                    DIV     4096,DL
         0 000043   200022 116100                    CMPQ    GRANS,,AUTO
         0 000044   000050 605400 0                  TPNZ    s:1544

      110     1540    2              THEN                         /* ENTIRE TRANSFER IS IN ONE EXTENT   */
      111     1541    2                 CBYTES=RBYTES;            /* SET # BYTES TO XFER                */

   1541  0 000045   200021 235100                    LDA     RBYTES,,AUTO
         0 000046   200020 755100                    STA     CBYTES,,AUTO
         0 000047   000062 710000 0                  TRA     s:1551

      112     1542    2              ELSE          /* ONLY TRANSFER THE REMAINING SIZE IN THIS EXTENT   */
      113     1543    3              DO;

      114     1544    3                 CBYTES=GRANS*4096;

   1544  0 000050   200022 235100                    LDA     GRANS,,AUTO
         0 000051   000014 735000                    ALS     12
         0 000052   200020 755100                    STA     CBYTES,,AUTO

      115     1545    3                 CDA=CDA+GRANS;            /* INCR FILE-REL DA FOR NEXT TIME     */

   1545  0 000053   200016 236100                    LDQ     CDA,,AUTO
         0 000054   200022 036100                    ADLQ    GRANS,,AUTO
         0 000055   200016 756100                    STQ     CDA,,AUTO

      116     1546    3                 END;

      117     1547    2              END;

   1547  0 000056   000062 710000 0                  TRA     s:1551

      118     1548    1           ELSE                       /* SET RELATIVE - TRANSFER ENTIRE AMOUNT   */
      119     1549    1              CBYTES=BYTES;

   1549  0 000057   200005 470500                    LDP0    @BYTES,,AUTO
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:17   
         0 000060   000000 235100                    LDA     0,,PR0
         0 000061   200020 755100                    STA     CBYTES,,AUTO

      120     1550                                                /*                                    */
      121     1551    1           CALL NIQ$GET(Q$);               /* GET A PACKET                       */

   1551  0 000062   200014 630500                    EPPR0   Q$,,AUTO
         0 000063   200026 450500                    STP0    T$+1,,AUTO
         0 000064   200026 630500                    EPPR0   T$+1,,AUTO
         0 000065   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000066   000000 701000 xent               TSX1    NIQ$GET
         0 000067   000000 011000                    NOP     0

      122     1552                                                /*                                    */
      123     1553    1           Q$->N$REQ.BUF$=B$;              /* BUFFER POINTER                     */

   1553  0 000070   200023 236100                    LDQ     B$,,AUTO
         0 000071   200014 470500                    LDP0    Q$,,AUTO
         0 000072   000005 756100                    STQ     5,,PR0

      124     1554    1           Q$->N$REQ.OPFLG=OP_USER|OP_BPF; /* USER ASSOCIATED, BUF PTR           */

   1554  0 000073   200014 470500                    LDP0    Q$,,AUTO
         0 000074   000410 236007                    LDQ     264,DL
         0 000075   000004 552104                    STBQ    4,'04'O,PR0

      125     1555    1           GOTO COMMON;

   1555  0 000076   000162 710000 0                  TRA     COMMON

      126     1556                                                /*                                    */
      127     1557    1   FMB$RIO: ENTRY(BUF$,PAGE#,BYTES,DA,OP,WAIT,EAADDR,PEAINFO,PQ$) ALTRET;

   1557  0 000077   000000 700200 xent  FMB$RIO      TSX0  ! X66_AUTO_N
         0 000100   000032 000011                    ZERO    26,9

      128     1558    1           JDCB$=B$JIT$->B$JIT.DCB$;       /* POINTER TO CURRENT DCB             */
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:18   

   1558  0 000101   000000 470400 xsym               LDP0    B$JIT$
         0 000102   000232 236100                    LDQ     154,,PR0
         0 000103   200015 756100                    STQ     JDCB$,,AUTO

      129     1559    1           IF BYTES>4096 THEN

   1559  0 000104   200005 471500                    LDP1    @BYTES,,AUTO
         0 000105   100000 235100                    LDA     0,,PR1
         0 000106   010000 115007                    CMPA    4096,DL
         0 000107   000112 604400 0                  TMOZ    s:1564

      130     1560    1              CALL SC_FMB80;               /* NO MORE THAN 1 PAGE ALLOWED        */

   1560  0 000110   000000 713400 xsym               CLIMB   SC_FMB80
         0 000111   000000 600000 xsid               climb   nvectors=         0

      131     1561        /*S*   SCREECH_CODE:  FMB-S$FM80
      132     1562        *      TYPE:   SUA
      133     1563        *      MESSAGE:  Attempt to do real I/O to more than one page */
      134     1564    1           SRDA=DA;

   1564  0 000112   200006 470500                    LDP0    @DA,,AUTO
         0 000113   000000 235100                    LDA     0,,PR0
         0 000114   200017 755100                    STA     SRDA,,AUTO

      135     1565    1           IF SRDA<FM_SRZERO

   1565  0 000115   200017 236100                    LDQ     SRDA,,AUTO
         0 000116   000000 116000 xsym               CMPQ    FM_SRZERO
         0 000117   000132 603000 0                  TRC     s:1568

      136     1566    1           THEN                  /* MUST CONVERT FILE-RELATIVE TO SET-RELATIVE   */
      137     1567    1              CALL FAF$FRTOSR(DA,SRDA,GRANS) ALTRET(ERR);

   1567  0 000120   200022 631500                    EPPR1   GRANS,,AUTO
         0 000121   200030 451500                    STP1    T$+3,,AUTO
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:19   
         0 000122   200017 633500                    EPPR3   SRDA,,AUTO
         0 000123   200027 453500                    STP3    T$+2,,AUTO
         0 000124   200006 236100                    LDQ     @DA,,AUTO
         0 000125   200026 756100                    STQ     T$+1,,AUTO
         0 000126   200026 630500                    EPPR0   T$+1,,AUTO
         0 000127   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000130   000000 701000 xent               TSX1    FAF$FRTOSR
         0 000131   000501 702000 0                  TSX2    ERR

      138     1568    1           CBYTES=BYTES;

   1568  0 000132   200005 470500                    LDP0    @BYTES,,AUTO
         0 000133   000000 235100                    LDA     0,,PR0
         0 000134   200020 755100                    STA     CBYTES,,AUTO

      139     1569    1           RBYTES=0;

   1569  0 000135   200021 450100                    STZ     RBYTES,,AUTO

      140     1570    1           EAINFO=PEAINFO;

   1570  0 000136   200012 471500                    LDP1    @PEAINFO,,AUTO
         0 000137   100000 236100                    LDQ     0,,PR1
         0 000140   200024 756100                    STQ     EAINFO,,AUTO

      141     1571                                                /*                                    */
      142     1572    1           CALL NIQ$GET(Q$);               /* GET A PACKET                       */

   1572  0 000141   200014 633500                    EPPR3   Q$,,AUTO
         0 000142   200026 453500                    STP3    T$+1,,AUTO
         0 000143   200026 630500                    EPPR0   T$+1,,AUTO
         0 000144   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000145   000000 701000 xent               TSX1    NIQ$GET
         0 000146   000000 011000                    NOP     0

      143     1573                                                /*                                    */
      144     1574    1           Q$->N$REQ.BUFADDR=PAGE#*4096;   /* BYTE ADDRESS                       */
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:20   

   1574  0 000147   200004 470500                    LDP0    @PAGE#,,AUTO
         0 000150   000000 235100                    LDA     0,,PR0
         0 000151   000014 735000                    ALS     12
         0 000152   200014 471500                    LDP1    Q$,,AUTO
         0 000153   100006 755100                    STA     6,,PR1

      145     1575    1           IF S_TIMR~=2 THEN

   1575  0 000154   000000 235000 xsym               LDA     S_TIMR
         0 000155   000002 115007                    CMPA    2,DL
         0 000156   000162 600000 0                  TZE     COMMON

      146     1576    1              Q$->N$REQ.OPFLG=OP_USER;     /* Make it user associated            */

   1576  0 000157   200014 471500                    LDP1    Q$,,AUTO
         0 000160   000400 236007                    LDQ     256,DL
         0 000161   100004 552104                    STBQ    4,'04'O,PR1

   1575  0 000162                       COMMON       null
      147     1577                                                /*                                    */
      148     1578    1   COMMON: ;
      149     1579    1           Q$->N$REQ.DLA=BINBIT(SRDA,36);

   1579  0 000162   200017 236100                    LDQ     SRDA,,AUTO
         0 000163   200014 470500                    LDP0    Q$,,AUTO
         0 000164   000001 756100                    STQ     1,,PR0

      150     1580    2           CALL FAF$SRTODR(Q$->N$REQ.DLA,JDCB$->F$DCB.SETX) WHENALTRETURN DO;

   1580  0 000165   200015 236100                    LDQ     JDCB$,,AUTO
         0 000166   000000 036000 1                  ADLQ    0
         0 000167   200027 756100                    STQ     T$+2,,AUTO
         0 000170   200014 236100                    LDQ     Q$,,AUTO
         0 000171   000001 036003                    ADLQ    1,DU
         0 000172   200026 756100                    STQ     T$+1,,AUTO
         0 000173   200026 630500                    EPPR0   T$+1,,AUTO
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:21   
         0 000174   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000175   000000 701000 xent               TSX1    FAF$SRTODR
         0 000176   000200 702000 0                  TSX2    s:1581
         0 000177   000210 710000 0                  TRA     s:1585

      151     1581    2              IF Q$->N$REQ.DLA = '777777777777'O THEN

   1581  0 000200   200014 470500                    LDP0    Q$,,AUTO
         0 000201   000001 236100                    LDQ     1,,PR0
         0 000202   000027 116000 xsym               CMPQ    B_VECTNIL+23
         0 000203   000207 601000 0                  TNZ     s:1583

      152     1582    2                 DA = -1;

   1582  0 000204   000001 335007                    LCA     1,DL
         0 000205   200006 471500                    LDP1    @DA,,AUTO
         0 000206   100000 755100                    STA     0,,PR1

      153     1583    2              GOTO RELPKT;

   1583  0 000207   000473 710000 0                  TRA     RELPKT

      154     1584    2              END;
      155     1585    1           Q$->N$REQ.BUFSIZE=CBYTES;

   1585  0 000210   200014 470500                    LDP0    Q$,,AUTO
         0 000211   200020 236100                    LDQ     CBYTES,,AUTO
         0 000212   000020 736000                    QLS     16
         0 000213   000004 676100                    ERQ     4,,PR0
         0 000214   000034 376000 xsym               ANQ     B_VECTNIL+28
         0 000215   000004 656100                    ERSQ    4,,PR0

      156     1586    1           IF OP~=%N_WRBIN OR (FM_WRCMP=0 AND NOT JDCB$->F$DCB.WCDATA) THEN

   1586  0 000216   200007 470500                    LDP0    @OP,,AUTO
         0 000217   000000 235100                    LDA     0,,PR0
         0 000220   000003 115007                    CMPA    3,DL
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:22   
         0 000221   000230 601000 0                  TNZ     s:1587
         0 000222   000000 236000 xsym               LDQ     FM_WRCMP
         0 000223   000234 601000 0                  TNZ     s:1589
         0 000224   200015 471500                    LDP1    JDCB$,,AUTO
         0 000225   100067 236100                    LDQ     55,,PR1
         0 000226   002000 316003                    CANQ    1024,DU
         0 000227   000234 601000 0                  TNZ     s:1589

      157     1587    1              Q$->N$REQ.FC=OP;

   1587  0 000230   200014 471500                    LDP1    Q$,,AUTO
         0 000231   000000 236100                    LDQ     0,,PR0
         0 000232   100003 552104                    STBQ    3,'04'O,PR1
         0 000233   000237 710000 0                  TRA     s:1590

      158     1588    1           ELSE
      159     1589    1              Q$->N$REQ.FC=%N_WRCMP;       /* CHANGE WRITES TO WRITE-COMPARE     */

   1589  0 000234   200014 471500                    LDP1    Q$,,AUTO
         0 000235   000007 236007                    LDQ     7,DL
         0 000236   100003 552104                    STBQ    3,'04'O,PR1

      160     1590    2           IF EAADDR~=ENTADDR(NIL) THEN DO;

   1590  0 000237   200011 471500                    LDP1    @EAADDR,,AUTO
         0 000240   100000 236100                    LDQ     0,,PR1
         0 000241   000002 116000 xsym               CMPQ    B_VECTNIL+2
         0 000242   000252 600000 0                  TZE     s:1596

      161     1591    2              Q$->N$REQ.EAENTRY=EAADDR;    /* END-ACTION ADDRESS                 */

   1591  0 000243   200014 473500                    LDP3    Q$,,AUTO
         0 000244   300023 756100                    STQ     19,,PR3

      162     1592    2              Q$->N$REQ.EAINFO=BITBIN(EAINFO); /* END-ACTION INFO                */

   1592  0 000245   200024 235100                    LDA     EAINFO,,AUTO
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:23   
         0 000246   300024 755100                    STA     20,,PR3

      163     1593    2              Q$->N$REQ.OPFLG.EA='1'B;

   1593  0 000247   000040 236007                    LDQ     32,DL
         0 000250   300004 256100                    ORSQ    4,,PR3

      164     1594    2              END;

   1594  0 000251   000265 710000 0                  TRA     s:1600

      165     1595    1           ELSE
      166     1596    2              IF NOT Q$->N$REQ.OPFLG.BPF AND OP=%N_WRBIN THEN DO;

   1596  0 000252   200014 473500                    LDP3    Q$,,AUTO
         0 000253   300004 236100                    LDQ     4,,PR3
         0 000254   000010 316007                    CANQ    8,DL
         0 000255   000265 601000 0                  TNZ     s:1600
         0 000256   000000 235100                    LDA     0,,PR0
         0 000257   000003 115007                    CMPA    3,DL
         0 000260   000265 601000 0                  TNZ     s:1600

      167     1597    2                 Q$->N$REQ.EAENTRY=ENTADDR(FMB$WREA);

   1597  0 000261   000000 636000 xent               EAQ     FMB$WREA
         0 000262   300023 756100                    STQ     19,,PR3

      168     1598    2                 Q$->N$REQ.OPFLG.EA='1'B;

   1598  0 000263   000040 236007                    LDQ     32,DL
         0 000264   300004 256100                    ORSQ    4,,PR3

      169     1599    2                 END;

      170     1600    2           IF B$JIT.DO$~=ADDR(NIL) AND JDCB$->F$DCB.IORG=%RANDOM# THEN DO;

   1600  0 000265   000000 473400 xsym               LDP3    B$JIT$
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:24   
         0 000266   300233 236100                    LDQ     155,,PR3
         0 000267   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000270   000321 600000 0                  TZE     s:1611
         0 000271   200015 474500                    LDP4    JDCB$,,AUTO
         0 000272   400070 236100                    LDQ     56,,PR4
         0 000273   077000 376003                    ANQ     32256,DU
         0 000274   003000 116003                    CMPQ    1536,DU
         0 000275   000321 601000 0                  TNZ     s:1611

      171     1601                   %LOCK (G#=S_UDLGATE);

   1602  0 000276   000001 630400 1                  EPPR0   1
         0 000277   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000300   000000 701000 xent               TSX1    HFC$LOCK
         0 000301   000000 011000                    NOP     0

      172     1604    2              B$JIT.DO$->B$DO.IOCOMP.CNTR=B$JIT.DO$->B$DO.IOCOMP.CNTR+1;

   1604  0 000302   000000 470400 xsym               LDP0    B$JIT$
         0 000303   000233 471500                    LDP1    155,,PR0
         0 000304   100011 235100                    LDA     9,,PR1
         0 000305   000001 035007                    ADLA    1,DL
         0 000306   100011 755100                    STA     9,,PR1

      173     1605                   %UNLOCK (G#=S_UDLGATE);

   1606  0 000307   000001 630400 1                  EPPR0   1
         0 000310   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000311   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000312   000000 011000                    NOP     0

      174     1608    2              Q$->N$REQ.DOPTR$=B$JIT.DO$;

   1608  0 000313   000000 470400 xsym               LDP0    B$JIT$
         0 000314   000233 236100                    LDQ     155,,PR0
         0 000315   200014 471500                    LDP1    Q$,,AUTO
         0 000316   100026 756100                    STQ     22,,PR1
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:25   

      175     1609    2              Q$->N$REQ.OPFLG.EVNT='1'B;

   1609  0 000317   000100 236007                    LDQ     64,DL
         0 000320   100004 256100                    ORSQ    4,,PR1

      176     1610    2              END;

      177     1611    2           DO CASE(WAIT);

   1611  0 000321   200010 470500                    LDP0    @WAIT,,AUTO
         0 000322   000000 235100                    LDA     0,,PR0
         0 000323   000002 115007                    CMPA    2,DL
         0 000324   000326 602005 0                  TNC     s:1611+5,AL
         0 000325   000362 710000 0                  TRA     s:1621
         0 000326   000330 710000 0                  TRA     s:1613
         0 000327   000345 710000 0                  TRA     s:1617

      178     1612    2            CASE(0);

      179     1613    2              Q$->N$REQ.NWIO=JDCB$->F$DCB.WAIT; /* SELECT TYC                    */

   1613  0 000330   200015 471500                    LDP1    JDCB$,,AUTO
         0 000331   200014 473500                    LDP3    Q$,,AUTO
         0 000332   100064 236100                    LDQ     52,,PR1
         0 000333   000015 736000                    QLS     13
         0 000334   300031 676100                    ERQ     25,,PR3
         0 000335   400000 376007                    ANQ     -131072,DL
         0 000336   300031 656100                    ERSQ    25,,PR3

      180     1614    2              IF Q$->N$REQ.OPFLG.BPF THEN

   1614  0 000337   300004 236100                    LDQ     4,,PR3
         0 000340   000010 316007                    CANQ    8,DL
         0 000341   000372 600000 0                  TZE     s:1625

      181     1615    2                 Q$->N$REQ.DCB$=JDCB$;
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:26   

   1615  0 000342   200015 236100                    LDQ     JDCB$,,AUTO
         0 000343   300022 756100                    STQ     18,,PR3
         0 000344   000372 710000 0                  TRA     s:1625

      182     1616    2            CASE(1);

      183     1617    2              Q$->N$REQ.NWIO=JDCB$->F$DCB.WAIT; /* SELECT TYC                    */

   1617  0 000345   200015 471500                    LDP1    JDCB$,,AUTO
         0 000346   200014 473500                    LDP3    Q$,,AUTO
         0 000347   100064 236100                    LDQ     52,,PR1
         0 000350   000015 736000                    QLS     13
         0 000351   300031 676100                    ERQ     25,,PR3
         0 000352   400000 376007                    ANQ     -131072,DL
         0 000353   300031 656100                    ERSQ    25,,PR3

      184     1618    2              Q$->N$REQ.OPFLG.WAIT='1'B;   /* WAIT                               */

   1618  0 000354   000020 236007                    LDQ     16,DL
         0 000355   300004 256100                    ORSQ    4,,PR3

      185     1619    2              Q$->N$REQ.DCB$=JDCB$;

   1619  0 000356   200015 236100                    LDQ     JDCB$,,AUTO
         0 000357   200014 473500                    LDP3    Q$,,AUTO
         0 000360   300022 756100                    STQ     18,,PR3
         0 000361   000372 710000 0                  TRA     s:1625

      186     1620    2            CASE(ELSE);

      187     1621    2              Q$->N$REQ.NWIO=1;            /* USE WAIT TYC                       */

   1621  0 000362   200014 471500                    LDP1    Q$,,AUTO
         0 000363   400000 236007                    LDQ     -131072,DL
         0 000364   100031 256100                    ORSQ    25,,PR1

PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:27   
      188     1622    2              Q$->N$REQ.OPFLG.WAIT='1'B;   /* WAIT                               */

   1622  0 000365   000020 236007                    LDQ     16,DL
         0 000366   100004 256100                    ORSQ    4,,PR1

      189     1623    2              Q$->N$REQ.DCB$=JDCB$;

   1623  0 000367   200015 236100                    LDQ     JDCB$,,AUTO
         0 000370   200014 471500                    LDP1    Q$,,AUTO
         0 000371   100022 756100                    STQ     18,,PR1

      190     1624    2            END;

      191     1625    2           IF OP>512 THEN DO;              /* Read into user page                */

   1625  0 000372   200007 471500                    LDP1    @OP,,AUTO
         0 000373   100000 235100                    LDA     0,,PR1
         0 000374   001000 115007                    CMPA    512,DL
         0 000375   000432 604400 0                  TMOZ    s:1639

      192     1626    2              Q$->N$REQ.OPFLG.CLR='1'B;

   1626  0 000376   200014 473500                    LDP3    Q$,,AUTO
         0 000377   000001 236007                    LDQ     1,DL
         0 000400   300004 256100                    ORSQ    4,,PR3

      193     1627    3              IF OP>1024 THEN DO;          /* Special random-file call           */

   1627  0 000401   100000 235100                    LDA     0,,PR1
         0 000402   002000 115007                    CMPA    1024,DL
         0 000403   000432 604400 0                  TMOZ    s:1639

      194     1628    3                 T$BIT=EAINFO;             /* Ptr to other Q packet              */

   1628  0 000404   200024 236100                    LDQ     EAINFO,,AUTO
         0 000405   200025 756100                    STQ     T$,,AUTO

PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:28   
      195     1629                      %LOCK (G#=F_DCBLOCK);

   1630  0 000406   000002 630400 1                  EPPR0   2
         0 000407   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000410   000000 701000 xent               TSX1    HFC$LOCK
         0 000411   000000 011000                    NOP     0

      196     1632    3                 T$->FM$RANEA.CNT=T$->FM$RANEA.CNT+1;

   1632  0 000412   200025 470500                    LDP0    T$,,AUTO
         0 000413   000001 054100                    AOS     1,,PR0

      197     1633                      %UNLOCK (G#=F_DCBLOCK);

   1634  0 000414   000002 630400 1                  EPPR0   2
         0 000415   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000416   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000417   000000 011000                    NOP     0

      198     1636    3                 Q$->N$REQ.EAINFOX=POFFW(B$,BUF$)/1024;

   1636  0 000420   200003 470500                    LDP0    @BUF$,,AUTO
         0 000421   000000 236100                    LDQ     0,,PR0
         0 000422   000022 772000                    QRL     18
         0 000423   200026 756100                    STQ     T$+1,,AUTO
         0 000424   200023 236100                    LDQ     B$,,AUTO
         0 000425   000022 772000                    QRL     18
         0 000426   200026 136100                    SBLQ    T$+1,,AUTO
         0 000427   002000 506007                    DIV     1024,DL
         0 000430   200014 471500                    LDP1    Q$,,AUTO
         0 000431   100025 756100                    STQ     21,,PR1

      199     1637    3                 END;

      200     1638    2              END;

      201     1639    2           IF ADDR(PQ$)~=ADDR(NIL) THEN DO; /* Save Q packet for caller          */
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:29   

   1639  0 000432   200013 236100                    LDQ     @PQ$,,AUTO
         0 000433   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000434   000443 600000 0                  TZE     s:1643

      202     1640    2              Q$->N$REQ.OPFLG.HOLD='1'B;

   1640  0 000435   200014 470500                    LDP0    Q$,,AUTO
         0 000436   000004 236007                    LDQ     4,DL
         0 000437   000004 256100                    ORSQ    4,,PR0

      203     1641    2              PQ$=Q$;

   1641  0 000440   200014 236100                    LDQ     Q$,,AUTO
         0 000441   200013 470500                    LDP0    @PQ$,,AUTO
         0 000442   000000 756100                    STQ     0,,PR0

      204     1642    2              END;

      205     1643    1           CALL NIO$QUE(Q$->N$REQ) ALTRET(RELPKT);

   1643  0 000443   200014 630500                    EPPR0   Q$,,AUTO
         0 000444   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000445   000000 701000 xent               TSX1    NIO$QUE
         0 000446   000473 702000 0                  TSX2    RELPKT

      206     1644    1           B$JIT.ACCESS.PACKS=B$JIT.ACCESS.PACKS+1;

   1644  0 000447   000000 470400 xsym               LDP0    B$JIT$
         0 000450   000327 054100                    AOS     215,,PR0

      207     1645    2           IF RBYTES>CBYTES THEN DO;

   1645  0 000451   200021 236100                    LDQ     RBYTES,,AUTO
         0 000452   200020 116100                    CMPQ    CBYTES,,AUTO
         0 000453   000472 604400 0                  TMOZ    s:1652

PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:30   
      208     1646    2              RBYTES=RBYTES-CBYTES;

   1646  0 000454   200020 136100                    SBLQ    CBYTES,,AUTO
         0 000455   200021 756100                    STQ     RBYTES,,AUTO

      209     1647    2              B$=PINCRW(B$,GRANS*1024);

   1647  0 000456   200022 236100                    LDQ     GRANS,,AUTO
         0 000457   000034 736000                    QLS     28
         0 000460   200023 036100                    ADLQ    B$,,AUTO
         0 000461   200023 756100                    STQ     B$,,AUTO

      210     1648    2              IF ADDR(PQ$) ~= ADDR(NIL) THEN

   1648  0 000462   200013 236100                    LDQ     @PQ$,,AUTO
         0 000463   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000464   000471 600000 0                  TZE     s:1650

      211     1649    2                 CALL NIQ$REL(PQ$);

   1649  0 000465   200013 630500                    EPPR0   @PQ$,,AUTO
         0 000466   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000467   000000 701000 xent               TSX1    NIQ$REL
         0 000470   000000 011000                    NOP     0

      212     1650    2              GOTO AGAIN;

   1650  0 000471   000021 710000 0                  TRA     AGAIN

      213     1651    2              END;
      214     1652    1           RETURN;

   1652  0 000472   000000 702200 xent               TSX2  ! X66_ARET

      215     1653    1   RELPKT: CALL NIQ$REL(Q$);               /* RELEASE THE PACKET                 */

   1653  0 000473   200014 630500       RELPKT       EPPR0   Q$,,AUTO
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:31   
         0 000474   200026 450500                    STP0    T$+1,,AUTO
         0 000475   200026 630500                    EPPR0   T$+1,,AUTO
         0 000476   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000477   000000 701000 xent               TSX1    NIQ$REL
         0 000500   000000 011000                    NOP     0

      216     1654    1   ERR:    IF ADDR(PQ$)~=ADDR(NIL) THEN

   1654  0 000501   200013 236100       ERR          LDQ     @PQ$,,AUTO
         0 000502   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000503   000507 600000 0                  TZE     s:1656

      217     1655    1              PQ$=ADDR(NIL);

   1655  0 000504   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000505   200013 470500                    LDP0    @PQ$,,AUTO
         0 000506   000000 756100                    STQ     0,,PR0

      218     1656    1           ALTRETURN;

   1656  0 000507   000000 702200 xent               TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
   1     000   000051 400000   000000 006000   000000 006000                    .)..........
      219     1657    1   END FMB$QUEUE;
      220     1658        %EOD;

PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:32   
--  Include file information  --

   FM$RANEA.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FMB$QUEUE.
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:33   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUF$                      5-0-0/w PTR         r     1 @BYTES
     6-0-0/w PTR         r     1 @DA                       11-0-0/w PTR         r     1 @EAADDR
     7-0-0/w PTR         r     1 @OP                        4-0-0/w PTR         r     1 @PAGE#
    12-0-0/w PTR         r     1 @PEAINFO                  13-0-0/w PTR         r     1 @PQ$
    10-0-0/w PTR         r     1 @WAIT                     23-0-0/w PTR         r     1 B$
    *0-0-0/w PTR         r     1 BUF$                      *0-0-0/w SBIN        r     1 BYTES
    20-0-0/w SBIN        r     1 CBYTES                    16-0-0/w SBIN        r     1 CDA
    *0-0-0/w SBIN        r     1 DA                        *0-0-0/w EPTR        r     1 EAADDR
    24-0-0/b STRC        r     1 EAINFO                    22-0-0/w SBIN        r     1 GRANS
    15-0-0/w PTR         r     1 JDCB$                     *0-0-0/w SBIN        r     1 OP
    *0-0-0/w UBIN        r     1 PAGE#                     *0-0-0/w BIT         r     1 PEAINFO
    *0-0-0/w PTR         r     1 PQ$                       14-0-0/w PTR         r     1 Q$
    21-0-0/w SBIN        r     1 RBYTES                    17-0-0/w UBIN        r     1 SRDA
    25-0-0/w PTR         r     1 T$                        25-0-0/w BIT         r     1 T$BIT
    *0-0-0/w SBIN        r     1 WAIT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w UBIN        r     1 FM_SRZERO
     0-0-0/w SBIN        r     1 FM_WRCMP                   0-0-0/b BIT (72)    r     1 F_DCBLOCK
     0-0-0/w UBIN        r     1 S_TIMR                     0-0-0/w SBIN        r     1 S_UDLGATE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:34   
     0-0-0/d STRC(396)   r     1 B$DO                       0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(252)   r     1 FM$RANEA
     0-0-0/d STRC(1080)  r     1 N$REQ


   Procedure FMB$QUEUE requires 328 words for executable code.
   Procedure FMB$QUEUE requires 26 words of local(AUTO) storage.
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:35   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:36   
          MINI XREF LISTING

AGAIN
      1534**LABEL    1650--GOTO
B$
        65**DCL      1531<<ASSIGN   1553>>ASSIGN   1636>>ASSIGN   1647<<ASSIGN   1647>>ASSIGN
B$DO.ECCINFO
      1381**DCL      1382--REDEF
B$DO.IOCOMP.CNTR
      1389**DCL      1604<<ASSIGN   1604>>ASSIGN
B$JIT.ACCESS.PACKS
       494**DCL      1644<<ASSIGN   1644>>ASSIGN
B$JIT.DCB$
       482**DCL      1528>>ASSIGN   1558>>ASSIGN
B$JIT.DO$
       482**DCL      1600>>IF       1604>>ASSIGN   1604>>ASSIGN   1608>>ASSIGN
B$JIT.ERR.MID
       393**DCL       393--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       497**DCL       497--REDEF     498--REDEF
B$JIT.TSLINE
       495**DCL       496--REDEF
B$JIT$
      1461**DCL       387--IMP-PTR  1528>>ASSIGN   1558>>ASSIGN   1600>>IF       1604>>ASSIGN   1604>>ASSIGN
      1608>>ASSIGN   1644>>ASSIGN   1644>>ASSIGN
B$U.MISC
      1360**DCL      1361--REDEF
B$USER.MISC
      1436**DCL      1437--REDEF
BUF$
        40**DCL        38--PROC     1531>>ASSIGN   1557--ENTRY    1636>>ASSIGN
BYTES
        42**DCL        38--PROC     1530>>ASSIGN   1549>>ASSIGN   1557--ENTRY    1559>>IF       1568>>ASSIGN
CBYTES
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:37   
        62**DCL      1541<<ASSIGN   1544<<ASSIGN   1549<<ASSIGN   1568<<ASSIGN   1585>>ASSIGN   1645>>IF
      1646>>ASSIGN
CDA
        60**DCL      1529<<ASSIGN   1534>>ASSIGN   1538<>CALL     1545<<ASSIGN   1545>>ASSIGN
COMMON
      1575**LABEL    1555--GOTO
DA
        43**DCL        38--PROC     1529>>ASSIGN   1557--ENTRY    1564>>ASSIGN   1567<>CALL     1582<<ASSIGN
EAADDR
        46**DCL        38--PROC     1557--ENTRY    1590>>IF       1591>>ASSIGN
EAINFO
        66**DCL      1532<<ASSIGN   1570<<ASSIGN   1592>>ASSIGN   1628>>ASSIGN
ERR
      1654**LABEL    1538--CALLALT  1567--CALLALT
F$DCB.ACTPOS
      1068**DCL      1068--REDEF
F$DCB.ARS
      1043**DCL      1043--REDEF
F$DCB.ATTR
      1061**DCL      1062--REDEF
F$DCB.BORROW
      1076**DCL      1076--REDEF    1076--REDEF    1076--REDEF
F$DCB.DCBNAME.L
      1090**DCL      1090--IMP-SIZ
F$DCB.EOMCHAR
      1047**DCL      1047--REDEF
F$DCB.FLDID
      1071**DCL      1071--REDEF
F$DCB.FORM$
      1065**DCL      1065--REDEF
F$DCB.FSECT
      1081**DCL      1081--REDEF
F$DCB.FSN
      1058**DCL      1058--REDEF    1058--REDEF    1059--REDEF
F$DCB.HEADER$
      1064**DCL      1064--REDEF
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:38   
F$DCB.IORG
      1079**DCL      1600>>IF
F$DCB.IXTNSIZE
      1062**DCL      1062--REDEF
F$DCB.LASTSTA$
      1052**DCL      1052--REDEF
F$DCB.LVL
      1077**DCL      1077--REDEF
F$DCB.NAME.C
      1052**DCL      1052--REDEF
F$DCB.NOEOF
      1073**DCL      1073--REDEF
F$DCB.NRECS
      1063**DCL      1063--REDEF
F$DCB.NRECX
      1082**DCL      1082--REDEF
F$DCB.OHDR
      1074**DCL      1074--REDEF
F$DCB.ORG
      1057**DCL      1057--REDEF
F$DCB.PRECNO
      1080**DCL      1080--REDEF
F$DCB.RCSZ
      1085**DCL      1085--REDEF
F$DCB.RES
      1053**DCL      1053--REDEF
F$DCB.SETX
      1065**DCL      1065--REDEF    1580<>CALL
F$DCB.TAB$
      1064**DCL      1065--REDEF
F$DCB.TDA
      1079**DCL      1079--REDEF
F$DCB.WAIT
      1075**DCL      1613>>ASSIGN   1617>>ASSIGN
F$DCB.WCDATA
      1077**DCL      1586>>IF
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:39   
F$DCB.WSN
      1054**DCL      1054--REDEF
FAF$FRTOSR
        53**DCL-ENT  1538--CALL     1567--CALL
FAF$SRTODR
        54**DCL-ENT  1580--CALL
FM$RANEA.CNT
      1525**DCL      1632<<ASSIGN   1632>>ASSIGN
FMB$WREA
        55**DCL-ENT  1597--ASSIGN
FM_SRZERO
      1099**DCL      1535>>IF       1565>>IF
FM_WRCMP
      1464**DCL      1586>>IF
F_DCBLOCK
      1101**DCL      1630<>CALL     1634<>CALL
GRANS
        64**DCL      1538<>CALL     1539>>IF       1544>>ASSIGN   1545>>ASSIGN   1567<>CALL     1647>>ASSIGN
HFC$LOCK
      1229**DCL-ENT  1602--CALL     1630--CALL
HFC$UNLOCK
      1229**DCL-ENT  1606--CALL     1634--CALL
JDCB$
        59**DCL      1528<<ASSIGN   1558<<ASSIGN   1580>>CALL     1586>>IF       1600>>IF       1613>>ASSIGN
      1615>>ASSIGN   1617>>ASSIGN   1619>>ASSIGN   1623>>ASSIGN
N$REQ
      1475**DCL      1643<>CALL
N$REQ.BUF$
      1484**DCL      1553<<ASSIGN
N$REQ.BUFADDR
      1484**DCL      1485--REDEF    1485--REDEF    1574<<ASSIGN
N$REQ.BUFSIZE
      1478**DCL      1585<<ASSIGN
N$REQ.DCB$
      1506**DCL      1615<<ASSIGN   1619<<ASSIGN   1623<<ASSIGN
N$REQ.DLA
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:40   
      1475**DCL      1579<<ASSIGN   1580<>CALL     1581>>IF
N$REQ.DLA.DRELADDR
      1476**DCL      1476--REDEF
N$REQ.DOPTR$
      1508**DCL      1608<<ASSIGN
N$REQ.DVE.EOMCHAR
      1513**DCL      1514--REDEF
N$REQ.EAENTRY
      1506**DCL      1591<<ASSIGN   1597<<ASSIGN
N$REQ.EAINFO
      1507**DCL      1507--REDEF    1592<<ASSIGN
N$REQ.EAINFOX
      1507**DCL      1508--REDEF    1636<<ASSIGN
N$REQ.EVNTINFO
      1508**DCL      1508--REDEF
N$REQ.FC
      1478**DCL      1587<<ASSIGN   1589<<ASSIGN
N$REQ.NWIO
      1514**DCL      1613<<ASSIGN   1617<<ASSIGN   1621<<ASSIGN
N$REQ.OPFLG
      1481**DCL      1554<<ASSIGN   1576<<ASSIGN
N$REQ.OPFLG.BPF
      1483**DCL      1596>>IF       1614>>IF
N$REQ.OPFLG.CLR
      1484**DCL      1626<<ASSIGN
N$REQ.OPFLG.EA
      1482**DCL      1593<<ASSIGN   1598<<ASSIGN
N$REQ.OPFLG.EVNT
      1482**DCL      1609<<ASSIGN
N$REQ.OPFLG.HOLD
      1483**DCL      1640<<ASSIGN
N$REQ.OPFLG.WAIT
      1482**DCL      1618<<ASSIGN   1622<<ASSIGN
N$REQ.STATUS
      1489**DCL      1495--REDEF
NIO$QUE
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:41   
        50**DCL-ENT  1643--CALL
NIQ$GET
        51**DCL-ENT  1551--CALL     1572--CALL
NIQ$REL
        52**DCL-ENT  1649--CALL     1653--CALL
OP
        44**DCL        38--PROC     1557--ENTRY    1586>>IF       1587>>ASSIGN   1596>>IF       1625>>IF
      1627>>IF
PAGE#
        41**DCL        38--PROC     1557--ENTRY    1574>>ASSIGN
PEAINFO
        47**DCL        38--PROC     1532>>ASSIGN   1557--ENTRY    1570>>ASSIGN
PQ$
        48**DCL        38--PROC     1557--ENTRY    1639--IF       1641<<ASSIGN   1648--IF       1649<>CALL
      1654--IF       1655<<ASSIGN
Q$
        58**DCL      1551<>CALL     1553>>ASSIGN   1554>>ASSIGN   1572<>CALL     1574>>ASSIGN   1576>>ASSIGN
      1579>>ASSIGN   1580>>CALL     1581>>IF       1585>>ASSIGN   1587>>ASSIGN   1589>>ASSIGN   1591>>ASSIGN
      1592>>ASSIGN   1593>>ASSIGN   1596>>IF       1597>>ASSIGN   1598>>ASSIGN   1608>>ASSIGN   1609>>ASSIGN
      1613>>ASSIGN   1614>>IF       1615>>ASSIGN   1617>>ASSIGN   1618>>ASSIGN   1619>>ASSIGN   1621>>ASSIGN
      1622>>ASSIGN   1623>>ASSIGN   1626>>ASSIGN   1636>>ASSIGN   1640>>ASSIGN   1641>>ASSIGN   1643>>CALL
      1653<>CALL
RBYTES
        63**DCL      1530<<ASSIGN   1539>>IF       1541>>ASSIGN   1569<<ASSIGN   1645>>IF       1646<<ASSIGN
      1646>>ASSIGN
RELPKT
      1653**LABEL    1583--GOTO     1643--CALLALT
SC_FMB80
        56**DCL-ENT  1560--CALL
SRDA
        61**DCL      1534<<ASSIGN   1535>>IF       1538<>CALL     1564<<ASSIGN   1565>>IF       1567<>CALL
      1579>>ASSIGN
S_TIMR
      1462**DCL      1575>>IF
S_UDLGATE
      1463**DCL      1602<>CALL     1606<>CALL
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:42   
T$
        69**DCL        70--REDEF    1632>>ASSIGN   1632>>ASSIGN
T$BIT
        70**DCL      1628<<ASSIGN
WAIT
        45**DCL        38--PROC     1557--ENTRY    1611>>DOCASE
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:43   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMB$QUEUE File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:44   
              MINI UREF LISTING

B$DOCONT    1394**DCL
B$USRT$    1448**DCL
F$CFU$    1102**DCL
FM$SET$    1103**DCL
FMB$QUEUE      38**PROC
FMB$RIO    1557**ENTRY
FM_CFUWAIT    1102**DCL
FM_CFUWGRB    1102**DCL
FM_EOP    1100**DCL
FM_FRMAX    1099**DCL
FM_FRZERO    1099**DCL
FM_GCT    1103**DCL
FM_GIP    1103**DCL
FM_GPSDA    1100**DCL
FM_HASH    1101**DCL
FM_MADSDA    1100**DCL
FM_PADSDA    1100**DCL
FM_SRMAX    1099**DCL
FM_SYSACCTX    1103**DCL
FM_SYSSETX    1103**DCL
FM_TRUNC    1101**DCL
FM_WSQ    1101**DCL
F_CWLK    1102**DCL
F_CWUSER    1102**DCL
S$CU$    1447**DCL

PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:45   
      221        1        /*T***********************************************************/
      222        2        /*T*                                                         */
      223        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      224        4        /*T*                                                         */
      225        5        /*T***********************************************************/
      226        6        /*F*   NAME:   FMB$WREA
      227        7        *      PURPOSE:  Provide error logging for write errors */
      228        8        /**/
      229        9        /**/
      230       10        /*D*   NAME:   FMB$WREA
      231       11        *      CALL:   CALL FMB$WREA(N$REQ);  CALLED FROM I/O END-ACTION
      232       12        *      INPUT:  N$REQ - Queue packet from a disk write
      233       13        *      DESCRIPTION:  If an error on the write occurred, call
      234       14        *        FMB$LOGERR to log it. */
      235       15        /**/
      236       16        FMB$WREA: PROC(N$REQ);
      237       17        /* PARAMETERS */
      238       18        %INCLUDE N$REQ;
      239       92        %N$REQ (STCLASS="");
      240      150        /* EXTERNAL ROUTINES */
      241      151    1   DCL FMB$LOGERR ENTRY(11);
      242      152        /**/
      243      153    1           IF N$REQ.TYC~='1'B THEN
      244      154    1              CALL FMB$LOGERR(0,21,8,N$REQ.DLA,,
      245      155    1                ,,,,1,ADDR(N$REQ));
      246      156    1           RETURN;
      247      157    1   END FMB$WREA;
      248      158        %EOD;

PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:46   
--  Include file information  --

   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure FMB$WREA.

   Procedure FMB$WREA requires 32 words for executable code.
   Procedure FMB$WREA requires 16 words of local(AUTO) storage.

PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:47   

 Object Unit name= FMB$WREA                                   File name= FMB$IO.:E05TOU
 UTS= JUL 29 '97 16:37:28.96 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    32     40  FMB$WREA
    1  RoData even  none     7      7  FMB$WREA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMB$WREA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std      11 FMB$LOGERR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:48   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:49   


      221        1        /*T***********************************************************/
      222        2        /*T*                                                         */
      223        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      224        4        /*T*                                                         */
      225        5        /*T***********************************************************/
      226        6        /*F*   NAME:   FMB$WREA
      227        7        *      PURPOSE:  Provide error logging for write errors */
      228        8        /**/
      229        9        /**/
      230       10        /*D*   NAME:   FMB$WREA
      231       11        *      CALL:   CALL FMB$WREA(N$REQ);  CALLED FROM I/O END-ACTION
      232       12        *      INPUT:  N$REQ - Queue packet from a disk write
      233       13        *      DESCRIPTION:  If an error on the write occurred, call
      234       14        *        FMB$LOGERR to log it. */
      235       15        /**/
      236       16        FMB$WREA: PROC(N$REQ);

     16  0 000000   000000 700200 xent  FMB$WREA     TSX0  ! X66_AUTO_1
         0 000001   000020 000001                    ZERO    16,1

      237       17        /* PARAMETERS */
      238       18        %INCLUDE N$REQ;
      239       92        %N$REQ (STCLASS="");
      240      150        /* EXTERNAL ROUTINES */
      241      151    1   DCL FMB$LOGERR ENTRY(11);
      242      152        /**/
      243      153    1           IF N$REQ.TYC~='1'B THEN

    153  0 000002   200003 470500                    LDP0    @N$REQ,,AUTO
         0 000003   000021 236100                    LDQ     17,,PR0
         0 000004   400000 116003                    CMPQ    -131072,DU
         0 000005   000037 600000 0                  TZE     s:156

      244      154    1              CALL FMB$LOGERR(0,21,8,N$REQ.DLA,,

    154  0 000006   200003 236100                    LDQ     @N$REQ,,AUTO
PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:50   
         0 000007   200004 756100                    STQ     @N$REQ+1,,AUTO
         0 000010   200004 631500                    EPPR1   @N$REQ+1,,AUTO
         0 000011   200017 451500                    STP1    @N$REQ+12,,AUTO
         0 000012   000002 236000 1                  LDQ     2
         0 000013   200016 756100                    STQ     @N$REQ+11,,AUTO
         0 000014   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000015   000001 235000 xsym               LDA     B_VECTNIL+1
         0 000016   200014 757100                    STAQ    @N$REQ+9,,AUTO
         0 000017   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000020   000001 235000 xsym               LDA     B_VECTNIL+1
         0 000021   200012 757100                    STAQ    @N$REQ+7,,AUTO
         0 000022   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000023   200011 756100                    STQ     @N$REQ+6,,AUTO
         0 000024   200003 236100                    LDQ     @N$REQ,,AUTO
         0 000025   000001 036003                    ADLQ    1,DU
         0 000026   200010 756100                    STQ     @N$REQ+5,,AUTO
         0 000027   000004 237000 1                  LDAQ    4
         0 000030   200006 757100                    STAQ    @N$REQ+3,,AUTO
         0 000031   000006 236000 1                  LDQ     6
         0 000032   200005 756100                    STQ     @N$REQ+2,,AUTO
         0 000033   200005 630500                    EPPR0   @N$REQ+2,,AUTO
         0 000034   000000 631400 1                  EPPR1   0
         0 000035   000000 701000 xent               TSX1    FMB$LOGERR
         0 000036   000000 011000                    NOP     0

      245      155    1                ,,,,1,ADDR(N$REQ));
      246      156    1           RETURN;

    156  0 000037   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000013 000000   000000 000025   000003 006000   000000 000000    ................
   1     004   000001 006000   000012 006000   000002 006000                    ............
      247      157    1   END FMB$WREA;
      248      158        %EOD;

PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:51   
--  Include file information  --

   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure FMB$WREA.
PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:52   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @N$REQ                    *0-0-0/d STRC(1080)  r     1 N$REQ


   Procedure FMB$WREA requires 32 words for executable code.
   Procedure FMB$WREA requires 16 words of local(AUTO) storage.
PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:53   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:54   
          MINI XREF LISTING

FMB$LOGERR
       151**DCL-ENT   154--CALL
N$REQ
       101**DCL        16--PROC      154--CALL
N$REQ.BUFADDR
       110**DCL       111--REDEF     111--REDEF
N$REQ.DLA
       101**DCL       154<>CALL
N$REQ.DLA.DRELADDR
       102**DCL       102--REDEF
N$REQ.DVE.EOMCHAR
       139**DCL       140--REDEF
N$REQ.EAINFO
       133**DCL       133--REDEF
N$REQ.EAINFOX
       133**DCL       134--REDEF
N$REQ.EVNTINFO
       134**DCL       134--REDEF
N$REQ.STATUS
       115**DCL       121--REDEF
N$REQ.TYC
       123**DCL       153>>IF
PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:55   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMB$WREA File=FMB$IO.:E05TSI                                  TUE 07/29/97 16:37 Page:56   
              MINI UREF LISTING

FMB$WREA      16**PROC

PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:57   
      249        1        /*T***********************************************************/
      250        2        /*T*                                                         */
      251        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      252        4        /*T*                                                         */
      253        5        /*T***********************************************************/
      254        6        /*F*   NAME:   FMB$CHKDA
      255        7        *      PURPOSE:  Validate a set-relative disk address                        */
      256        8        /**/
      257        9        /**/
      258       10        /**/
      259       11        /*D*   NAME:   FMB$CHKDA
      260       12        *      CALL:   CALL FMB$CHKDA(DA) ALTRET(LOC);
      261       13        *      INPUT:  DA - Disk address to validate
      262       14        *      OUTPUT: Normal return if ok,
      263       15        *              ALTRET if bad
      264       16        *      DESCRIPTION:  Normal return if DA is > FM_SRZERO and
      265       17        *                    <= F$SET.LSDA                                           */
      266       18        /**/
      267       19        FMB$CHKDA: PROC(DA) ALTRET;
      268       20        /* PARAMETERS */
      269       21    1   DCL DA UBIN;
      270       22        /* EXTERNAL DATA */
      271       23    1   DCL B$JIT$ PTR SYMREF;
      272       24        /* INCLUDE FILES */
      273       25        %INCLUDE F$JIT_C;
      274      455        %INCLUDE F$DCB;
      275      504        %INCLUDE FM_DATA_R;
      276      518        %INCLUDE FM$SET;
      277      545        /* BASED STRUCTURES */
      278      546        %FM$SET;
      279      551    1           IF DA<=FM_SRZERO THEN ALTRETURN;
      280      552    1           IF DA>=FM$SET$->FM$SET.NXTSDA(B$JIT$->B$JIT.DCB$->F$DCB.SETX)
      281      553    1           THEN ALTRETURN;
      282      554    1           RETURN;
      283      555    1   END FMB$CHKDA;
      284      556        %EOD;

PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:58   
--  Include file information  --

   FM$SET.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMB$CHKDA.

   Procedure FMB$CHKDA requires 20 words for executable code.
   Procedure FMB$CHKDA requires 4 words of local(AUTO) storage.

PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:59   

 Object Unit name= FMB$CHKDA                                  File name= FMB$IO.:E05TOU
 UTS= JUL 29 '97 16:37:34.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    20     24  FMB$CHKDA
    1  RoData even  none     1      1  FMB$CHKDA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  FMB$CHKDA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                           r    FM_SRZERO                        r    FM$SET$
     B_VECTNIL
PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:60   


      249        1        /*T***********************************************************/
      250        2        /*T*                                                         */
      251        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      252        4        /*T*                                                         */
      253        5        /*T***********************************************************/
      254        6        /*F*   NAME:   FMB$CHKDA
      255        7        *      PURPOSE:  Validate a set-relative disk address                        */
      256        8        /**/
      257        9        /**/
      258       10        /**/
      259       11        /*D*   NAME:   FMB$CHKDA
      260       12        *      CALL:   CALL FMB$CHKDA(DA) ALTRET(LOC);
      261       13        *      INPUT:  DA - Disk address to validate
      262       14        *      OUTPUT: Normal return if ok,
      263       15        *              ALTRET if bad
      264       16        *      DESCRIPTION:  Normal return if DA is > FM_SRZERO and
      265       17        *                    <= F$SET.LSDA                                           */
      266       18        /**/
      267       19        FMB$CHKDA: PROC(DA) ALTRET;

     19  0 000000   000000 700200 xent  FMB$CHKDA    TSX0  ! X66_AUTO_1
         0 000001   000004 000001                    ZERO    4,1

      268       20        /* PARAMETERS */
      269       21    1   DCL DA UBIN;
      270       22        /* EXTERNAL DATA */
      271       23    1   DCL B$JIT$ PTR SYMREF;
      272       24        /* INCLUDE FILES */
      273       25        %INCLUDE F$JIT_C;
      274      455        %INCLUDE F$DCB;
      275      504        %INCLUDE FM_DATA_R;
      276      518        %INCLUDE FM$SET;
      277      545        /* BASED STRUCTURES */
      278      546        %FM$SET;
      279      551    1           IF DA<=FM_SRZERO THEN ALTRETURN;

PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:61   
    551  0 000002   200003 470500                    LDP0    @DA,,AUTO
         0 000003   000000 236000 xsym               LDQ     FM_SRZERO
         0 000004   000000 116100                    CMPQ    0,,PR0
         0 000005   000007 602000 0                  TNC     s:552

    551  0 000006   000000 702200 xent               TSX2  ! X66_AALT

      280      552    1           IF DA>=FM$SET$->FM$SET.NXTSDA(B$JIT$->B$JIT.DCB$->F$DCB.SETX)

    552  0 000007   000000 471400 xsym               LDP1    B$JIT$
         0 000010   100232 473500                    LDP3    154,,PR1
         0 000011   300051 236100                    LDQ     41,,PR3
         0 000012   000003 736000                    QLS     3
         0 000013   000000 376000 1                  ANQ     0
         0 000014   000000 474400 xsym               LDP4    FM$SET$
         0 000015   400003 236106                    LDQ     3,QL,PR4
         0 000016   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000017   000000 116100                    CMPQ    0,,PR0
         0 000020   000022 600000 0                  TZE     s:553
         0 000021   000023 603000 0                  TRC     s:554

      281      553    1           THEN ALTRETURN;

    553  0 000022   000000 702200 xent               TSX2  ! X66_AALT

      282      554    1           RETURN;

    554  0 000023   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000007 777770                                                    ....
      283      555    1   END FMB$CHKDA;
      284      556        %EOD;

PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:62   
--  Include file information  --

   FM$SET.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMB$CHKDA.
PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:63   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DA                       *0-0-0/w UBIN        r     1 DA

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FM$SET$
     0-0-0/w UBIN        r     1 FM_SRZERO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$SET(0:0)


   Procedure FMB$CHKDA requires 20 words for executable code.
   Procedure FMB$CHKDA requires 4 words of local(AUTO) storage.
PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:64   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:65   
          MINI XREF LISTING

B$JIT.DCB$
       442**DCL       552>>IF
B$JIT.ERR.MID
       353**DCL       353--REDEF
B$JIT$
        23**DCL       347--IMP-PTR   552>>IF
DA
        21**DCL        19--PROC      551>>IF        552>>IF
F$DCB.ACTPOS
       481**DCL       481--REDEF
F$DCB.ARS
       456**DCL       456--REDEF
F$DCB.ATTR
       474**DCL       475--REDEF
F$DCB.BORROW
       489**DCL       489--REDEF     489--REDEF     489--REDEF
F$DCB.DCBNAME.L
       503**DCL       503--IMP-SIZ
F$DCB.EOMCHAR
       460**DCL       460--REDEF
F$DCB.FLDID
       484**DCL       484--REDEF
F$DCB.FORM$
       478**DCL       478--REDEF
F$DCB.FSECT
       494**DCL       494--REDEF
F$DCB.FSN
       471**DCL       471--REDEF     471--REDEF     472--REDEF
F$DCB.HEADER$
       477**DCL       477--REDEF
F$DCB.IXTNSIZE
       475**DCL       475--REDEF
PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:66   
F$DCB.LASTSTA$
       465**DCL       465--REDEF
F$DCB.LVL
       490**DCL       490--REDEF
F$DCB.NAME.C
       465**DCL       465--REDEF
F$DCB.NOEOF
       486**DCL       486--REDEF
F$DCB.NRECS
       476**DCL       476--REDEF
F$DCB.NRECX
       495**DCL       495--REDEF
F$DCB.OHDR
       487**DCL       487--REDEF
F$DCB.ORG
       470**DCL       470--REDEF
F$DCB.PRECNO
       493**DCL       493--REDEF
F$DCB.RCSZ
       498**DCL       498--REDEF
F$DCB.RES
       466**DCL       466--REDEF
F$DCB.SETX
       478**DCL       478--REDEF     552>>IF
F$DCB.TAB$
       477**DCL       478--REDEF
F$DCB.TDA
       492**DCL       492--REDEF
F$DCB.WSN
       467**DCL       467--REDEF
FM$SET.NXTSDA
       549**DCL       552>>IF
FM$SET.USERLIST
       548**DCL       548--REDEF
FM$SET$
       516**DCL       552>>IF
PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:67   
FM_SRZERO
       512**DCL       551>>IF
PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:68   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FMB$CHKDA File=FMB$IO.:E05TSI                                 TUE 07/29/97 16:37 Page:69   
              MINI UREF LISTING

F$CFU$     515**DCL
FMB$CHKDA      19**PROC
FM_CFUWAIT     515**DCL
FM_CFUWGRB     515**DCL
FM_EOP     513**DCL
FM_FRMAX     512**DCL
FM_FRZERO     512**DCL
FM_GCT     516**DCL
FM_GIP     516**DCL
FM_GPSDA     513**DCL
FM_HASH     514**DCL
FM_MADSDA     513**DCL
FM_PADSDA     513**DCL
FM_SRMAX     512**DCL
FM_SYSACCTX     516**DCL
FM_SYSSETX     516**DCL
FM_TRUNC     514**DCL
FM_WSQ     514**DCL
F_CWLK     515**DCL
F_CWUSER     515**DCL
F_DCBLOCK     514**DCL

PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:70   
      285        1        /*T***********************************************************/
      286        2        /*T*                                                         */
      287        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      288        4        /*T*                                                         */
      289        5        /*T***********************************************************/
      290        6        /*F*   NAME:   FMB$ERRTYP
      291        7               PURPOSE:  Calculate a user error code                                 */
      292        8        /**/
      293        9        /**/
      294       10        /**/
      295       11        /*D*   NAME:   FMB$ERRTYP
      296       12               CALL:   CALL FMB$ERRTYP(BUF$,CODE);
      297       13               INPUT:  BUF$ - Pointer to a buffer header
      298       14               OUTPUT: CODE - The error code
      299       15               DESCRIPTION:  If the ORG is > 0 (file), then the code is
      300       16             E$MI, E$ULMI or E$DI depending on LVL.
      301       17             Otherwise, it is E$GP, MAD, PAD or FD depending
      302       18             on LVL.                                                                 */
      303       19        /**/
      304       20        FMB$ERRTYP: PROC(CODE);
      305       21        /* PARAMETERS */
      306       22    1   DCL CODE SBIN WORD;
      307       23        /* LOCAL AUTOMATIC STORAGE */
      308       24    1   DCL JDCB$ PTR;
      309       25        /* EXTERNAL DATA */
      310       26    1   DCL B$JIT$ PTR SYMREF;
      311       27        /* INCLUDE FILES */
      312       28        %INCLUDE F$JIT_C;
      313      458        %INCLUDE F$DCB;
      314      507        %INCLUDE F_ERRORS_C;
      315      747        %INCLUDE FM$GRAN;
      316      816        /**/
      317      817    1           JDCB$=B$JIT$->B$JIT.DCB$;
      318      818    2           DO CASE(JDCB$->F$DCB.GTYP);
      319      819    2            CASE(FMGTGP);                  /* GRANULE POOL                       */
      320      820    2              CODE=%E$GP;
      321      821    2            CASE(FMGTMAD);                 /* MAD                                */
PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:71   
      322      822    2              CODE=%E$MAD;
      323      823    2            CASE(FMGTPAD);                 /* PAD                                */
      324      824    2              CODE=%E$PAD;
      325      825    2            CASE(FMGTFD,FMGTFDSTAR);       /* FD                                 */
      326      826    2              CODE=%E$FD;
      327      827    2            CASE(FMGTFIT);                 /* FIT OR AFIT                        */
      328      828    2              CODE=%E$FIT;
      329      829    2            CASE(ELSE);                    /* FILE                               */
      330      830    3              DO CASE(JDCB$->F$DCB.LVL);
      331      831    3               CASE(0);
      332      832    3                 CODE=%E$MI;
      333      833    3               CASE(7);
      334      834    3                 CODE=%E$DI;
      335      835    3               CASE(ELSE);
      336      836    3                 CODE=%E$ULMI;
      337      837    3               END;
      338      838    2            END;
      339      839    1           RETURN;
      340      840    1   END FMB$ERRTYP;
      341      841        %EOD;

PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:72   
--  Include file information  --

   FM$GRAN.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMB$ERRTYP.

   Procedure FMB$ERRTYP requires 66 words for executable code.
   Procedure FMB$ERRTYP requires 6 words of local(AUTO) storage.

PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:73   

 Object Unit name= FMB$ERRTYP                                 File name= FMB$IO.:E05TOU
 UTS= JUL 29 '97 16:37:42.96 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    66    102  FMB$ERRTYP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMB$ERRTYP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$
PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:74   


      285        1        /*T***********************************************************/
      286        2        /*T*                                                         */
      287        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      288        4        /*T*                                                         */
      289        5        /*T***********************************************************/
      290        6        /*F*   NAME:   FMB$ERRTYP
      291        7               PURPOSE:  Calculate a user error code                                 */
      292        8        /**/
      293        9        /**/
      294       10        /**/
      295       11        /*D*   NAME:   FMB$ERRTYP
      296       12               CALL:   CALL FMB$ERRTYP(BUF$,CODE);
      297       13               INPUT:  BUF$ - Pointer to a buffer header
      298       14               OUTPUT: CODE - The error code
      299       15               DESCRIPTION:  If the ORG is > 0 (file), then the code is
      300       16             E$MI, E$ULMI or E$DI depending on LVL.
      301       17             Otherwise, it is E$GP, MAD, PAD or FD depending
      302       18             on LVL.                                                                 */
      303       19        /**/
      304       20        FMB$ERRTYP: PROC(CODE);

     20  0 000000   000000 700200 xent  FMB$ERRTYP   TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

      305       21        /* PARAMETERS */
      306       22    1   DCL CODE SBIN WORD;
      307       23        /* LOCAL AUTOMATIC STORAGE */
      308       24    1   DCL JDCB$ PTR;
      309       25        /* EXTERNAL DATA */
      310       26    1   DCL B$JIT$ PTR SYMREF;
      311       27        /* INCLUDE FILES */
      312       28        %INCLUDE F$JIT_C;
      313      458        %INCLUDE F$DCB;
      314      507        %INCLUDE F_ERRORS_C;
      315      747        %INCLUDE FM$GRAN;
      316      816        /**/
PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:75   
      317      817    1           JDCB$=B$JIT$->B$JIT.DCB$;

    817  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200004 756100                    STQ     JDCB$,,AUTO

      318      818    2           DO CASE(JDCB$->F$DCB.GTYP);

    818  0 000005   200004 471500                    LDP1    JDCB$,,AUTO
         0 000006   100064 236100                    LDQ     52,,PR1
         0 000007   000035 772000                    QRL     29
         0 000010   000007 376007                    ANQ     7,DL
         0 000011   000010 116007                    CMPQ    8,DL
         0 000012   000014 602006 0                  TNC     s:818+7,QL
         0 000013   000050 710000 0                  TRA     s:830
         0 000014   000050 710000 0                  TRA     s:830
         0 000015   000024 710000 0                  TRA     s:820
         0 000016   000030 710000 0                  TRA     s:822
         0 000017   000034 710000 0                  TRA     s:824
         0 000020   000040 710000 0                  TRA     s:826
         0 000021   000044 710000 0                  TRA     s:828
         0 000022   000050 710000 0                  TRA     s:830
         0 000023   000040 710000 0                  TRA     s:826

      319      819    2            CASE(FMGTGP);                  /* GRANULE POOL                       */

      320      820    2              CODE=%E$GP;

    820  0 000024   000055 235007                    LDA     45,DL
         0 000025   200003 473500                    LDP3    @CODE,,AUTO
         0 000026   300000 755100                    STA     0,,PR3
         0 000027   000101 710000 0                  TRA     s:839

      321      821    2            CASE(FMGTMAD);                 /* MAD                                */

      322      822    2              CODE=%E$MAD;

PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:76   
    822  0 000030   000054 235007                    LDA     44,DL
         0 000031   200003 473500                    LDP3    @CODE,,AUTO
         0 000032   300000 755100                    STA     0,,PR3
         0 000033   000101 710000 0                  TRA     s:839

      323      823    2            CASE(FMGTPAD);                 /* PAD                                */

      324      824    2              CODE=%E$PAD;

    824  0 000034   000053 235007                    LDA     43,DL
         0 000035   200003 473500                    LDP3    @CODE,,AUTO
         0 000036   300000 755100                    STA     0,,PR3
         0 000037   000101 710000 0                  TRA     s:839

      325      825    2            CASE(FMGTFD,FMGTFDSTAR);       /* FD                                 */

      326      826    2              CODE=%E$FD;

    826  0 000040   000052 235007                    LDA     42,DL
         0 000041   200003 473500                    LDP3    @CODE,,AUTO
         0 000042   300000 755100                    STA     0,,PR3
         0 000043   000101 710000 0                  TRA     s:839

      327      827    2            CASE(FMGTFIT);                 /* FIT OR AFIT                        */

      328      828    2              CODE=%E$FIT;

    828  0 000044   000051 235007                    LDA     41,DL
         0 000045   200003 473500                    LDP3    @CODE,,AUTO
         0 000046   300000 755100                    STA     0,,PR3
         0 000047   000101 710000 0                  TRA     s:839

      329      829    2            CASE(ELSE);                    /* FILE                               */

      330      830    3              DO CASE(JDCB$->F$DCB.LVL);

    830  0 000050   100067 236100                    LDQ     55,,PR1
PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:77   
         0 000051   000036 772000                    QRL     30
         0 000052   000007 376007                    ANQ     7,DL
         0 000053   000010 116007                    CMPQ    8,DL
         0 000054   000056 602006 0                  TNC     s:830+6,QL
         0 000055   000076 710000 0                  TRA     s:836
         0 000056   000066 710000 0                  TRA     s:832
         0 000057   000076 710000 0                  TRA     s:836
         0 000060   000076 710000 0                  TRA     s:836
         0 000061   000076 710000 0                  TRA     s:836
         0 000062   000076 710000 0                  TRA     s:836
         0 000063   000076 710000 0                  TRA     s:836
         0 000064   000076 710000 0                  TRA     s:836
         0 000065   000072 710000 0                  TRA     s:834

      331      831    3               CASE(0);

      332      832    3                 CODE=%E$MI;

    832  0 000066   000047 235007                    LDA     39,DL
         0 000067   200003 473500                    LDP3    @CODE,,AUTO
         0 000070   300000 755100                    STA     0,,PR3
         0 000071   000101 710000 0                  TRA     s:839

      333      833    3               CASE(7);

      334      834    3                 CODE=%E$DI;

    834  0 000072   000011 235007                    LDA     9,DL
         0 000073   200003 473500                    LDP3    @CODE,,AUTO
         0 000074   300000 755100                    STA     0,,PR3
         0 000075   000101 710000 0                  TRA     s:839

      335      835    3               CASE(ELSE);

      336      836    3                 CODE=%E$ULMI;

    836  0 000076   000050 235007                    LDA     40,DL
PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:78   
         0 000077   200003 473500                    LDP3    @CODE,,AUTO
         0 000100   300000 755100                    STA     0,,PR3

      337      837    3               END;

      338      838    2            END;

      339      839    1           RETURN;

    839  0 000101   000000 702200 xent               TSX2  ! X66_ARET
      340      840    1   END FMB$ERRTYP;
      341      841        %EOD;

PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:79   
--  Include file information  --

   FM$GRAN.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMB$ERRTYP.
PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:80   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CODE                     *0-0-0/w SBIN        r     1 CODE
     4-0-0/w PTR         r     1 JDCB$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure FMB$ERRTYP requires 66 words for executable code.
   Procedure FMB$ERRTYP requires 6 words of local(AUTO) storage.
PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:81   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:82   
          MINI XREF LISTING

B$JIT.DCB$
       445**DCL       817>>ASSIGN
B$JIT.ERR.MID
       356**DCL       356--REDEF
B$JIT$
        26**DCL       350--IMP-PTR   817>>ASSIGN
CODE
        22**DCL        20--PROC      820<<ASSIGN    822<<ASSIGN    824<<ASSIGN    826<<ASSIGN    828<<ASSIGN
       832<<ASSIGN    834<<ASSIGN    836<<ASSIGN
F$DCB.ACTPOS
       484**DCL       484--REDEF
F$DCB.ARS
       459**DCL       459--REDEF
F$DCB.ATTR
       477**DCL       478--REDEF
F$DCB.BORROW
       492**DCL       492--REDEF     492--REDEF     492--REDEF
F$DCB.DCBNAME.L
       506**DCL       506--IMP-SIZ
F$DCB.EOMCHAR
       463**DCL       463--REDEF
F$DCB.FLDID
       487**DCL       487--REDEF
F$DCB.FORM$
       481**DCL       481--REDEF
F$DCB.FSECT
       497**DCL       497--REDEF
F$DCB.FSN
       474**DCL       474--REDEF     474--REDEF     475--REDEF
F$DCB.GTYP
       488**DCL       818>>DOCASE
F$DCB.HEADER$
PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:83   
       480**DCL       480--REDEF
F$DCB.IXTNSIZE
       478**DCL       478--REDEF
F$DCB.LASTSTA$
       468**DCL       468--REDEF
F$DCB.LVL
       493**DCL       493--REDEF     830>>DOCASE
F$DCB.NAME.C
       468**DCL       468--REDEF
F$DCB.NOEOF
       489**DCL       489--REDEF
F$DCB.NRECS
       479**DCL       479--REDEF
F$DCB.NRECX
       498**DCL       498--REDEF
F$DCB.OHDR
       490**DCL       490--REDEF
F$DCB.ORG
       473**DCL       473--REDEF
F$DCB.PRECNO
       496**DCL       496--REDEF
F$DCB.RCSZ
       501**DCL       501--REDEF
F$DCB.RES
       469**DCL       469--REDEF
F$DCB.SETX
       481**DCL       481--REDEF
F$DCB.TAB$
       480**DCL       481--REDEF
F$DCB.TDA
       495**DCL       495--REDEF
F$DCB.WSN
       470**DCL       470--REDEF
JDCB$
        24**DCL       817<<ASSIGN    818>>DOCASE    830>>DOCASE
PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:84   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FMB$ERRTYP File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:85   
              MINI UREF LISTING

FMB$ERRTYP      20**PROC

PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:86   
      342        1        /*T***********************************************************/
      343        2        /*T*                                                         */
      344        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      345        4        /*T*                                                         */
      346        5        /*T***********************************************************/
      347        6        /*F*   NAME:   FMB$LOGERR
      348        7               PURPOSE:  Log file errors                                             */
      349        8                                                /*                                    */
      350        9                                                /*                                    */
      351       10                                                /*                                    */
      352       11        /*D*   NAME:   FMB$LOGERR
      353       12               CALL:   CALL FMB$LOGERR(CODE,REASON,ACTION,DA,BFR$,
      354       13                                BFR1X,BFR2X,BFR3X,MISC,NODCB,Q$);
      355       14               INPUT:  CODE - Error code
      356       15                       REASON - Type of error encountered:
      357       16                         01 - Attempted to do I/O to bad disk address
      358       17                         02 - I/O error
      359       18                         03 - ORG wrong
      360       19                         04 - LVL wrong
      361       20                         05 - Stamp wrong
      362       21                         06 - NAVX+AVAIL too large
      363       22                         07 - FCEX too large
      364       23                         08 - BLINK or FLINK is bad DA
      365       24                         10 - Link check failure
      366       25                         11 - Inconsistency during search of a granule
      367       26                         12 - Bad segment entry
      368       27                         13 - FIRST CODE NOT 01 (FMN$CHKFIT)
      369       28                         14 - SIZE OF CODE01 NOT RIGHT (FMN$CHKFIT)
      370       29                         15 - STAMP WRONG                   "
      371       30                         16 - GRAN.HDR~=1                   "
      372       31                         18 - NO CODE03                     "
      373       32                         19 - NAME HASH WRONG               "
      374       33                         20 - DUAL ALLOCATION (FAG$GEXT)
      375       34                         21 - ERROR DURING WRITE
      376       35                         22 - Attempt to start read-ahead with bad disk addr
      377       36                         23 - MI entry after bad DA found
      378       37                         24 - Key with illegal length found
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:87   
      379       38                         25 - Upper level info
      380       39                         70 - Keyed file opened after crash - info only
      381       40                         71 - Keyed file UGRANS/NGAVAL inconsistent
      382       41                         72 - Keyed file opened after crash, more info
      383       42                         75 - Trouble deleting from alternate key file
      384       43                       ACTION - Type of action being logged
      385       44                         00 - Non-fatal error
      386       45                         01 - Successful retry, bad buffer contents
      387       46                         02 - Successful retry, good buffer contents
      388       47                         03 - More information about previous error
      389       48                         06 - Fast path error
      390       49                         08 - Fatal error
      391       50                       DA - Disc address of bad gran
      392       51                       BFR$ - Pointer to granule read
      393       52                       BFR1X - Word index of buffer word to put in record
      394       53                       BFR2X - Another word
      395       54                       BFR3X - Another word
      396       55                       MISC - Word to be put into errlog record
      397       56                       NODCB - If present, there is no DCB
      398       57                     All options from DA on are optional.
      399       58
      400       59               DESCRIPTION:                                                          */
      401       60                                                /*                                    */
      402       61        FMB$LOGERR: PROC(CODE,REASON,ACTION,PDA,BFR$,BFR1X,BFR2X,BFR3X,
      403       62                  MISC,NODCB,Q$);
      404       63        /* PARAMETERS */
      405       64    1   DCL CODE UBIN;
      406       65    1   DCL REASON UBIN;
      407       66    1   DCL ACTION UBIN;
      408       67    1   DCL PDA BIT(36) ALIGNED;
      409       68    1   DCL BFR$ PTR;
      410       69    1   DCL BFR1X UBIN;
      411       70    1   DCL BFR2X UBIN;
      412       71    1   DCL BFR3X UBIN;
      413       72    1   DCL MISC UBIN;
      414       73    1   DCL NODCB UBIN;
      415       74    1   DCL Q$ PTR;
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:88   
      416       75        /* EXTERNAL DATA */
      417       76    1   DCL B$JIT$ PTR SYMREF;
      418       77    1   DCL B$USRT$ PTR SYMREF;
      419       78    1   DCL FM$SET$ PTR SYMREF;
      420       79    1   DCL F$CFU$ PTR SYMREF;
      421       80    1   DCL FM_SRZERO UBIN SYMREF;
      422       81    1   DCL NK_MXLOCAL UBIN SYMREF;
      423       82    1   DCL OCI_BOOT UBIN SYMREF;
      424       83    1   DCL S_CUN SBIN SYMREF;
      425       84    1   DCL S_TIMR UBIN SYMREF;
      426       85        /* EXTERNAL ROUTINES */
      427       86    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
      428       87    1   DCL FAF$FRTOSR ENTRY(3) ALTRET;
      429       88    1   DCL FAF$SRTODR ENTRY(2)ALTRET;
      430       89    1   DCL FMR$FNDSTK ENTRY(2);
      431       90    1   DCL OCI$MK_WR ENTRY(7);
      432       91    1   DCL SSS$BLOCKM ENTRY;
      433       92        /* INCLUDE FILES */
      434       93        %INCLUDE B$USER;
      435      309        %INCLUDE CP_6_SUBS;
      436      849        %INCLUDE F$JIT_C;
      437     1279        %INCLUDE EL$TABLES;
      438     1602        %MACRO F$DCB(BASED=BASED);
      439     1603        %INCLUDE F$DCB;
      440     1652        %MEND;
      441     1653        %INCLUDE N_FC_C;
      442     1690        %INCLUDE NI_DATA_R;
      443     2127        %INCLUDE NI_DATA_C ;
      444     2240        %INCLUDE FM$CFU;
      445     2285        %INCLUDE FM$SET;
      446     2312        %INCLUDE OC_SUBS_C;
      447     3043        %INCLUDE EL_SUBS_C;
      448     3127        %INCLUDE F_FMTCODE_C;
      449     3161        /* STATIC STORAGE */
      450     3162    1   DCL 1 FM_75TABLE(0:9) STATIC SYMDEF,
      451     3163    1         2 DEVDA BIT(36) INIT('0'B*0),
      452     3164    1         2 CODE UBIN(9) UNAL INIT(0*0),
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:89   
      453     3165    1         2 REASON UBIN(9) UNAL INIT(0*0),
      454     3166    1         2 ACTION UBIN(9) UNAL INIT(0*0),
      455     3167    1         2 * BIT(9) INIT('0'B*0);
      456     3168    1   DCL FM_75INDX STATIC SYMDEF UBIN INIT(0);
      457     3169    1   DCL FM_75NUM STATIC SYMDEF SBIN INIT(0);
      458     3170        /* LOCAL AUTOMATIC STORAGE */
      459     3171    1   DCL I SBIN;
      460     3172    1   DCL DA UBIN;
      461     3173    1   DCL RELADDR BIT(36);
      462     3174    1   DCL SYSID UBIN;
      463     3175    1   DCL SIZ UBIN;
      464     3176    1   DCL JDCB$ PTR;
      465     3177    1   DCL BASE$ PTR;
      466     3178    1   DCL CUR$ PTR;
      467     3179    1   DCL 1 DEVDA,
      468     3180    1         2 DCTX UBIN(15) UNAL,
      469     3181    1         2 DREL UBIN(21) UNAL;
      470     3182    1   DCL DCT$ PTR;
      471     3183    1   DCL 1 OCTBL2,
      472     3184    1         2 CODE UBIN,
      473     3185    1         2 REASON UBIN,
      474     3186    1         2 ACTION UBIN,
      475     3187    1         2 SYSID UBIN,
      476     3188    1         2 SN CHAR(6),
      477     3189    1         2 ACCT CHAR(8),
      478     3190    1         2 FNAME CHAR(31);
      479     3191        /* CONSTANT STORAGE */
      480     3192    1   DCL 1 OCTBL1 CONSTANT,
      481     3193    1         2 * UBIN(9) UNAL INIT(4),         /* CODE                               */
      482     3194    1         2 * UBIN(9) UNAL INIT(4),         /* REASON                             */
      483     3195    1         2 * UBIN(9) UNAL INIT(4),         /* ACTION                             */
      484     3196    1         2 * UBIN(9) UNAL INIT(4),         /* SYSID                              */
      485     3197    1         2 * UBIN(9) UNAL INIT(6),         /* SN                                 */
      486     3198    1         2 * UBIN(9) UNAL INIT(8),         /* ACCT                               */
      487     3199    1         2 * UBIN(9) UNAL INIT(31);        /* NAME                               */
      488     3200        /* BASED STRUCTURES */
      489     3201    1   DCL WRDS(0:1023) UBIN BASED ALIGNED;
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:90   
      490     3202        %EL$FILERR (STCLASS=AUTO);
      491     3209        %FM$SET (BASED="BASED(FM$SET$)");
      492     3214        %FM$DEV (BASED="BASED(F$CFU$)");
      493     3220        %FM$CFU;
      494     3226        %FM$VOL (BASED="BASED(F$CFU$)");
      495     3232        %F$DCB (BASED="BASED(JDCB$)");
      496     3282        %N$REQ;
      497     3340        %NI$DCT (STCLASS="BASED(DCT$)");
      498     3388        %NI$DVT;
      499     3395    1   DCL 1 STK BASED ALIGNED,
      500     3396    1         2 RETADDR BIT(18) HALIGNED,
      501     3397    1         2 DISP SBIN(18) HALIGNED;
      502     3398        /**/
      503     3399    1           CALL SSS$BLOCKM;                /* Block to master                    */
      504     3400    1           JDCB$=B$JIT.DCB$;
      505     3401        /**/
      506     3402    1           IF ADDR(NODCB) = ADDR(NIL) THEN /* Can use JDCB$                      */
      507     3403    1              IF ACTION = 8 AND
      508     3404    1                (F$DCB.IFMT = FMTCON# OR F$DCB.IFMT = FMTREL# OR
      509     3405    2                F$DCB.IFMT = FMTKEY#) THEN DO;
      510     3406    3                 IF F$DCB.ACS ~= %JRNL# AND F$DCB.CFU$ ~= ADDR(NIL) THEN DO;
      511     3407    3                    F$DCB.CFU$->FM$CFU.B=1;
      512     3408    3                    END;
      513     3409    2                 F$DCB.DESC.BAD='1'B;
      514     3410    2                 END;
      515     3411
      516     3412    1           DEVDA='0'B;
      517     3413    1           EL$FILERR='0'B;
      518     3414    1           EL$FILERR.SN=' ';
      519     3415    1           EL$FILERR.ACCT=' ';
      520     3416    1           EL$FILERR.DEVNM=' ';
      521     3417    1           EL$FILERR.FNAME.C=' ';
      522     3418    1           EL$FILERR.REASON=REASON;
      523     3419    1           EL$FILERR.ACTION=ACTION;
      524     3420    1           EL$FILERR.CODE=CODE;
      525     3421    2           IF S_TIMR~=2 THEN DO;
      526     3422    2              EL$FILERR.USER=S_CUN;
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:91   
      527     3423    2              SYSID=B$JIT.SYSID;
      528     3424    2              END;
      529     3425    2           ELSE DO;
      530     3426    2              SYSID=0;
      531     3427    2              IF ADDR(Q$)~=ADDR(NIL) THEN
      532     3428    2                 IF Q$~=ADDR(NIL) THEN
      533     3429    2                    IF Q$->N$REQ.USER#~=0 THEN
      534     3430    2                       SYSID=B$USRT$->B$USER.SYSID(Q$->N$REQ.USER#);
      535     3431    2              END;
      536     3432    1           EL$FILERR.SYSID=SYSID;
      537     3433    1           CALL FMR$FNDSTK(BASE$,CUR$);
      538     3434    2           DO I=0 TO 2;
      539     3435    2              EL$FILERR.PLUGH(I)=CUR$->STK.RETADDR;
      540     3436    2              CUR$=PINCRW(BASE$,-1-CUR$->STK.DISP);
      541     3437    2              END;
      542     3438    2           IF ADDR(PDA)~=ADDR(NIL) THEN DO;
      543     3439    2              DA=BITBIN(PDA&'000777777777'O);
      544     3440    3              IF ADDR(NODCB)=ADDR(NIL) THEN DO; /* THERE IS A DCB                */
      545     3441    4                 IF DA<FM_SRZERO AND F$DCB.CFU$~=ADDR(NIL) THEN DO;
              3441                          /* DA IS FILE-REL */
      546     3442    4                    EL$FILERR.FRDA=BITBIN(PDA);
      547     3443    4                    CALL FAF$FRTOSR(DA,EL$FILERR.SRDA,SIZ);
      548     3444    4                    END;
      549     3445    3                 ELSE
      550     3446    3                    EL$FILERR.SRDA=BITBIN(PDA);
      551     3447    3                 RELADDR=BINBIT(EL$FILERR.SRDA,36)&'000777777777'O;
      552     3448    3                 CALL FAF$SRTODR(RELADDR,F$DCB.SETX)ALTRET(NODA);
      553     3449    3                 DEVDA=RELADDR;
      554     3450    3                 END;
      555     3451    3              ELSE DO;                     /* No DCB - must be device relative   */
      556     3452    3                 DEVDA=PDA;
      557     3453    3                 EL$FILERR.SRDA=BITBIN(PDA);
      558     3454    3                 END;
      559     3455    2              END;
      560     3456        /**/
      561     3457    2   NODA:   IF DEVDA THEN DO;
      562     3458    2              IF FM_75NUM~=0 THEN
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:92   
      563     3459    3              DO I=0 TO FM_75NUM;
      564     3460    3                 IF FM_75TABLE.DEVDA(I)=DEVDA
      565     3461    3                   AND FM_75TABLE.CODE(I)=CODE
      566     3462    3                   AND FM_75TABLE.REASON(I)=REASON
      567     3463    3                   AND FM_75TABLE.ACTION(I)=ACTION THEN RETURN;
      568     3464    3                 END;
      569     3465    2              FM_75TABLE.DEVDA(FM_75INDX)=DEVDA;
      570     3466    2              FM_75TABLE.CODE(FM_75INDX)=CODE;
      571     3467    2              FM_75TABLE.REASON(FM_75INDX)=REASON;
      572     3468    2              FM_75TABLE.ACTION(FM_75INDX)=ACTION;
      573     3469    2              IF FM_75NUM<9 THEN
      574     3470    2                 FM_75NUM=FM_75NUM+1;
      575     3471    2              IF FM_75INDX=9 THEN
      576     3472    2                 FM_75INDX=0;
      577     3473    2              ELSE
      578     3474    2                 FM_75INDX=FM_75INDX+1;
      579     3475    2              END;
      580     3476        /**/
      581     3477    1           IF ADDR(BFR$)~=ADDR(NIL) THEN
      582     3478    2              IF BFR$~=ADDR(NIL) THEN DO;
      583     3479    2                 IF BFR1X<1024 THEN EL$FILERR.BFR1=BFR$->WRDS(BFR1X);
      584     3480    2                 IF BFR2X<1024 THEN EL$FILERR.BFR2=BFR$->WRDS(BFR2X);
      585     3481    2                 IF BFR3X<1024 THEN EL$FILERR.BFR3=BFR$->WRDS(BFR3X);
      586     3482    2                 EL$FILERR.BFR1X=BFR1X;
      587     3483    2                 EL$FILERR.BFR2X=BFR2X;
      588     3484    2                 EL$FILERR.BFR3X=BFR3X;
      589     3485    2                 END;
      590     3486    1           IF ADDR(MISC)~=ADDR(NIL) THEN
      591     3487    1              EL$FILERR.MISC=MISC;
      592     3488    2           IF ADDR(NODCB)=ADDR(NIL) THEN DO;
      593     3489    2              EL$FILERR.FNAME=JDCB$->F$DCB.NAME;
      594     3490    2              IF EL$FILERR.FNAME.L>31 THEN
      595     3491    2                 EL$FILERR.FNAME.L=31;
      596     3492    2              IF F$DCB.STARF THEN
      597     3493    2                 EL$FILERR.ACCT='*STAR*';
      598     3494    3              ELSE DO;
      599     3495    3                 EL$FILERR.ACCT=F$DCB.ACCT;
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:93   
      600     3496    3                 IF EL$FILERR.ACCT=' ' THEN
      601     3497    3                    EL$FILERR.ACCT=B$JIT.FACCN;
      602     3498    3                 END;
      603     3499    2              EL$FILERR.SETX=JDCB$->F$DCB.SETX;
      604     3500    2              EL$FILERR.FUN=JDCB$->F$DCB.FUN;
      605     3501    2              EL$FILERR.DISP=JDCB$->F$DCB.DISP;
      606     3502    2              IF JDCB$->F$DCB.DISP=%SCRATCH# THEN
      607     3503    2                 EL$FILERR.ACCT='*SCRTCH*';
      608     3504    2              EL$FILERR.SHARE=JDCB$->F$DCB.SHARE;
      609     3505    2              EL$FILERR.ORG=JDCB$->F$DCB.ORG;
      610     3506    2              EL$FILERR.ACS=JDCB$->F$DCB.ACS;
      611     3507    2              EL$FILERR.LVL=JDCB$->F$DCB.LVL;
      612     3508    2              EL$FILERR.GTYP=JDCB$->F$DCB.GTYP;
      613     3509    2              END;
      614     3510    1           ELSE
      615     3511    2              IF DEVDA.DCTX ~= 0 THEN DO;
      616     3512    2                 DCT$ = N$DCT$(DEVDA.DCTX) ;
      617     3513    2                 IF  NI$DCT.TYPE = %DV_DP
      618     3514    2                   AND NI$DCT.DP.MIRROR.FLAG
      619     3515    2                   AND NOT NI$DCT.DP.MIRROR.PRI
      620     3516    2                 THEN
      621     3517    2                    I = FM$DEV.SECTL(NI$DCT.DP.MIRROR.DCTX) ;
      622     3518    2                 ELSE
      623     3519    2                    I = FM$DEV.SECTL(DEVDA.DCTX) ;
      624     3520    3                 DO UNTIL (I = 0) OR (DEVDA.DREL < FM$VOL.DRZERO(I));
      625     3521    3                    EL$FILERR.SETX = FM$VOL.SETX(I);
      626     3522    3                    I = FM$VOL.SECTL(I);
      627     3523    3                    END;
      628     3524    2                 END;
      629     3525    1           IF ADDR(Q$)~=ADDR(NIL) THEN
      630     3526    2              IF Q$~=ADDR(NIL) THEN DO;
      631     3527    2                 EL$FILERR.STATUS=Q$->N$REQ.STATUS;
      632     3528    2                 EL$FILERR.TYC=Q$->N$REQ.TYC;
      633     3529    2                 EL$FILERR.REQID=Q$->N$REQ.REQID;
      634     3530    2                 END;
      635     3531    1           IF EL$FILERR.SETX~=0 THEN
      636     3532    1              EL$FILERR.SN=FM$SET.PSN(EL$FILERR.SETX);
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:94   
      637     3533    2           IF DEVDA.DCTX~=0 AND DEVDA.DCTX<=NK_MXLOCAL THEN DO;
      638     3534    2              DCT$=N$DCT$(DEVDA.DCTX);
      639     3535    2              EL$FILERR.DEVNM=NI$DCT.DEVNM;
      640     3536    2              EL$FILERR.SECTOR=DEVDA.DREL*(NI$DCT.DVT$->NI$DVT.GRANSIZE);
      641     3537    2              END;
      642     3538    1           IF REASON>=70 OR ACTION=1 THEN
      643     3539    1              EL$FILERR.NOSEND='1'B;       /* Don't send to OC                   */
      644     3540    1           IF ADDR(NODCB)=ADDR(NIL) THEN
      645     3541    1              IF S_CUN=1 AND F$DCB.STARF THEN
      646     3542    1                 EL$FILERR.NOSEND='1'B;
      647     3543    1           SIZ=SIZEW(EL$FILERR)-SIZEW(EL$FILERR.FNAME)+((EL$FILERR.FNAME.L+4)/4);
      648     3544    1           CALL ELA$SYSLOG(EL_FI,EL$FILERR,SIZ,'0'B,1,I);
      649     3545        /**/
      650     3546    1           IF EL$FILERR.NOSEND OR OCI_BOOT=0 THEN
      651     3547    1              RETURN;
      652     3548        /**/
      653     3549    1           OCTBL2.CODE=CODE;
      654     3550    1           OCTBL2.REASON=REASON;
      655     3551    1           OCTBL2.ACTION=ACTION;
      656     3552    1           OCTBL2.SYSID=SYSID;
      657     3553    1           OCTBL2.SN=EL$FILERR.SN;
      658     3554    1           OCTBL2.ACCT=EL$FILERR.ACCT;
      659     3555    1           OCTBL2.FNAME=EL$FILERR.FNAME.C;
      660     3556    1           CALL OCI$MK_WR(M_SYS,FILEIC_MSG#,7,OCTBL1,OCTBL2);
      661     3557        /**/
      662     3558    1           RETURN;
      663     3559        /**/
      664     3560    1   END FMB$LOGERR;
      665     3561        %EOD;

PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:95   
--  Include file information  --

   F_FMTCODE_C.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   FM$SET.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMB$LOGERR.

   Procedure FMB$LOGERR requires 539 words for executable code.
   Procedure FMB$LOGERR requires 76 words of local(AUTO) storage.

PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:96   

 Object Unit name= FMB$LOGERR                                 File name= FMB$IO.:E05TOU
 UTS= JUL 29 '97 16:37:53.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    22     26  FMB$LOGERR
    1  RoData even  UTS      6      6  FMB$LOGERR
    2   Proc  even  none   539   1033  FMB$LOGERR
    3  RoData even  none    14     16  FMB$LOGERR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std       11  FMB$LOGERR

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  FM_75TABLE                         0     24  FM_75INDX
    0     25  FM_75NUM
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:97   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 SSS$BLOCKM
         yes           Std       2 FMR$FNDSTK
 yes     yes           Std       3 FAF$FRTOSR
 yes     yes           Std       6 ELA$SYSLOG
         yes           Std       7 OCI$MK_WR
 yes     yes           Std       2 FAF$SRTODR
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_N
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                                B$USRT$                               FM$SET$
     F$CFU$                                FM_SRZERO                             NK_MXLOCAL
     OCI_BOOT                              S_CUN                                 S_TIMR
     N$DCT$$                               N$FQ$                                 NI$FQ$
     NI$IBUF$                              NI$RP$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:98   


      342        1        /*T***********************************************************/
      343        2        /*T*                                                         */
      344        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      345        4        /*T*                                                         */
      346        5        /*T***********************************************************/
      347        6        /*F*   NAME:   FMB$LOGERR
      348        7               PURPOSE:  Log file errors                                             */
      349        8                                                /*                                    */
      350        9                                                /*                                    */
      351       10                                                /*                                    */
      352       11        /*D*   NAME:   FMB$LOGERR
      353       12               CALL:   CALL FMB$LOGERR(CODE,REASON,ACTION,DA,BFR$,
      354       13                                BFR1X,BFR2X,BFR3X,MISC,NODCB,Q$);
      355       14               INPUT:  CODE - Error code
      356       15                       REASON - Type of error encountered:
      357       16                         01 - Attempted to do I/O to bad disk address
      358       17                         02 - I/O error
      359       18                         03 - ORG wrong
      360       19                         04 - LVL wrong
      361       20                         05 - Stamp wrong
      362       21                         06 - NAVX+AVAIL too large
      363       22                         07 - FCEX too large
      364       23                         08 - BLINK or FLINK is bad DA
      365       24                         10 - Link check failure
      366       25                         11 - Inconsistency during search of a granule
      367       26                         12 - Bad segment entry
      368       27                         13 - FIRST CODE NOT 01 (FMN$CHKFIT)
      369       28                         14 - SIZE OF CODE01 NOT RIGHT (FMN$CHKFIT)
      370       29                         15 - STAMP WRONG                   "
      371       30                         16 - GRAN.HDR~=1                   "
      372       31                         18 - NO CODE03                     "
      373       32                         19 - NAME HASH WRONG               "
      374       33                         20 - DUAL ALLOCATION (FAG$GEXT)
      375       34                         21 - ERROR DURING WRITE
      376       35                         22 - Attempt to start read-ahead with bad disk addr
      377       36                         23 - MI entry after bad DA found
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:99   
      378       37                         24 - Key with illegal length found
      379       38                         25 - Upper level info
      380       39                         70 - Keyed file opened after crash - info only
      381       40                         71 - Keyed file UGRANS/NGAVAL inconsistent
      382       41                         72 - Keyed file opened after crash, more info
      383       42                         75 - Trouble deleting from alternate key file
      384       43                       ACTION - Type of action being logged
      385       44                         00 - Non-fatal error
      386       45                         01 - Successful retry, bad buffer contents
      387       46                         02 - Successful retry, good buffer contents
      388       47                         03 - More information about previous error
      389       48                         06 - Fast path error
      390       49                         08 - Fatal error
      391       50                       DA - Disc address of bad gran
      392       51                       BFR$ - Pointer to granule read
      393       52                       BFR1X - Word index of buffer word to put in record
      394       53                       BFR2X - Another word
      395       54                       BFR3X - Another word
      396       55                       MISC - Word to be put into errlog record
      397       56                       NODCB - If present, there is no DCB
      398       57                     All options from DA on are optional.
      399       58
      400       59               DESCRIPTION:                                                          */
      401       60                                                /*                                    */
      402       61        FMB$LOGERR: PROC(CODE,REASON,ACTION,PDA,BFR$,BFR1X,BFR2X,BFR3X,

     61  2 000000   000000 700200 xent  FMB$LOGERR   TSX0  ! X66_AUTO_N
         2 000001   000114 000013                    ZERO    76,11

      403       62                  MISC,NODCB,Q$);
      404       63        /* PARAMETERS */
      405       64    1   DCL CODE UBIN;
      406       65    1   DCL REASON UBIN;
      407       66    1   DCL ACTION UBIN;
      408       67    1   DCL PDA BIT(36) ALIGNED;
      409       68    1   DCL BFR$ PTR;
      410       69    1   DCL BFR1X UBIN;
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:100  
      411       70    1   DCL BFR2X UBIN;
      412       71    1   DCL BFR3X UBIN;
      413       72    1   DCL MISC UBIN;
      414       73    1   DCL NODCB UBIN;
      415       74    1   DCL Q$ PTR;
      416       75        /* EXTERNAL DATA */
      417       76    1   DCL B$JIT$ PTR SYMREF;
      418       77    1   DCL B$USRT$ PTR SYMREF;
      419       78    1   DCL FM$SET$ PTR SYMREF;
      420       79    1   DCL F$CFU$ PTR SYMREF;
      421       80    1   DCL FM_SRZERO UBIN SYMREF;
      422       81    1   DCL NK_MXLOCAL UBIN SYMREF;
      423       82    1   DCL OCI_BOOT UBIN SYMREF;
      424       83    1   DCL S_CUN SBIN SYMREF;
      425       84    1   DCL S_TIMR UBIN SYMREF;
      426       85        /* EXTERNAL ROUTINES */
      427       86    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
      428       87    1   DCL FAF$FRTOSR ENTRY(3) ALTRET;
      429       88    1   DCL FAF$SRTODR ENTRY(2)ALTRET;
      430       89    1   DCL FMR$FNDSTK ENTRY(2);
      431       90    1   DCL OCI$MK_WR ENTRY(7);
      432       91    1   DCL SSS$BLOCKM ENTRY;
      433       92        /* INCLUDE FILES */
      434       93        %INCLUDE B$USER;
      435      309        %INCLUDE CP_6_SUBS;
      436      849        %INCLUDE F$JIT_C;
      437     1279        %INCLUDE EL$TABLES;
      438     1602        %MACRO F$DCB(BASED=BASED);
      439     1603        %INCLUDE F$DCB;
      440     1652        %MEND;
      441     1653        %INCLUDE N_FC_C;
      442     1690        %INCLUDE NI_DATA_R;
      443     2127        %INCLUDE NI_DATA_C ;
      444     2240        %INCLUDE FM$CFU;
      445     2285        %INCLUDE FM$SET;
      446     2312        %INCLUDE OC_SUBS_C;
      447     3043        %INCLUDE EL_SUBS_C;
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:101  
      448     3127        %INCLUDE F_FMTCODE_C;
      449     3161        /* STATIC STORAGE */
      450     3162    1   DCL 1 FM_75TABLE(0:9) STATIC SYMDEF,
      451     3163    1         2 DEVDA BIT(36) INIT('0'B*0),
      452     3164    1         2 CODE UBIN(9) UNAL INIT(0*0),
      453     3165    1         2 REASON UBIN(9) UNAL INIT(0*0),
      454     3166    1         2 ACTION UBIN(9) UNAL INIT(0*0),
      455     3167    1         2 * BIT(9) INIT('0'B*0);
      456     3168    1   DCL FM_75INDX STATIC SYMDEF UBIN INIT(0);
      457     3169    1   DCL FM_75NUM STATIC SYMDEF SBIN INIT(0);
      458     3170        /* LOCAL AUTOMATIC STORAGE */
      459     3171    1   DCL I SBIN;
      460     3172    1   DCL DA UBIN;
      461     3173    1   DCL RELADDR BIT(36);
      462     3174    1   DCL SYSID UBIN;
      463     3175    1   DCL SIZ UBIN;
      464     3176    1   DCL JDCB$ PTR;
      465     3177    1   DCL BASE$ PTR;
      466     3178    1   DCL CUR$ PTR;
      467     3179    1   DCL 1 DEVDA,
      468     3180    1         2 DCTX UBIN(15) UNAL,
      469     3181    1         2 DREL UBIN(21) UNAL;
      470     3182    1   DCL DCT$ PTR;
      471     3183    1   DCL 1 OCTBL2,
      472     3184    1         2 CODE UBIN,
      473     3185    1         2 REASON UBIN,
      474     3186    1         2 ACTION UBIN,
      475     3187    1         2 SYSID UBIN,
      476     3188    1         2 SN CHAR(6),
      477     3189    1         2 ACCT CHAR(8),
      478     3190    1         2 FNAME CHAR(31);
      479     3191        /* CONSTANT STORAGE */
      480     3192    1   DCL 1 OCTBL1 CONSTANT,
      481     3193    1         2 * UBIN(9) UNAL INIT(4),         /* CODE                               */
      482     3194    1         2 * UBIN(9) UNAL INIT(4),         /* REASON                             */
      483     3195    1         2 * UBIN(9) UNAL INIT(4),         /* ACTION                             */
      484     3196    1         2 * UBIN(9) UNAL INIT(4),         /* SYSID                              */
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:102  
      485     3197    1         2 * UBIN(9) UNAL INIT(6),         /* SN                                 */
      486     3198    1         2 * UBIN(9) UNAL INIT(8),         /* ACCT                               */
      487     3199    1         2 * UBIN(9) UNAL INIT(31);        /* NAME                               */
      488     3200        /* BASED STRUCTURES */
      489     3201    1   DCL WRDS(0:1023) UBIN BASED ALIGNED;
      490     3202        %EL$FILERR (STCLASS=AUTO);
      491     3209        %FM$SET (BASED="BASED(FM$SET$)");
      492     3214        %FM$DEV (BASED="BASED(F$CFU$)");
      493     3220        %FM$CFU;
      494     3226        %FM$VOL (BASED="BASED(F$CFU$)");
      495     3232        %F$DCB (BASED="BASED(JDCB$)");
      496     3282        %N$REQ;
      497     3340        %NI$DCT (STCLASS="BASED(DCT$)");
      498     3388        %NI$DVT;
      499     3395    1   DCL 1 STK BASED ALIGNED,
      500     3396    1         2 RETADDR BIT(18) HALIGNED,
      501     3397    1         2 DISP SBIN(18) HALIGNED;
      502     3398        /**/
      503     3399    1           CALL SSS$BLOCKM;                /* Block to master                    */

   3399  2 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000003   000000 701000 xent               TSX1    SSS$BLOCKM
         2 000004   000000 011000                    NOP     0

      504     3400    1           JDCB$=B$JIT.DCB$;

   3400  2 000005   000000 470400 xsym               LDP0    B$JIT$
         2 000006   000232 236100                    LDQ     154,,PR0
         2 000007   200023 756100                    STQ     JDCB$,,AUTO

      505     3401        /**/
      506     3402    1           IF ADDR(NODCB) = ADDR(NIL) THEN /* Can use JDCB$                      */

   3402  2 000010   200014 236100                    LDQ     @NODCB,,AUTO
         2 000011   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000012   000044 601000 2                  TNZ     s:3412

PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:103  
      507     3403    1              IF ACTION = 8 AND

   3403  2 000013   200005 471500                    LDP1    @ACTION,,AUTO
         2 000014   100000 235100                    LDA     0,,PR1
         2 000015   000010 115007                    CMPA    8,DL
         2 000016   000044 601000 2                  TNZ     s:3412
         2 000017   200023 473500                    LDP3    JDCB$,,AUTO
         2 000020   300103 236100                    LDQ     67,,PR3
         2 000021   777000 376003                    ANQ     -512,DU
         2 000022   001000 116003                    CMPQ    512,DU
         2 000023   000030 600000 2                  TZE     s:3406
         2 000024   004000 116003                    CMPQ    2048,DU
         2 000025   000030 600000 2                  TZE     s:3406
         2 000026   002000 116003                    CMPQ    1024,DU
         2 000027   000044 601000 2                  TNZ     s:3412

      508     3404    1                (F$DCB.IFMT = FMTCON# OR F$DCB.IFMT = FMTREL# OR
      509     3405    2                F$DCB.IFMT = FMTKEY#) THEN DO;

      510     3406    3                 IF F$DCB.ACS ~= %JRNL# AND F$DCB.CFU$ ~= ADDR(NIL) THEN DO;

   3406  2 000030   300036 236100                    LDQ     30,,PR3
         2 000031   000777 376007                    ANQ     511,DL
         2 000032   000004 116007                    CMPQ    4,DL
         2 000033   000042 600000 2                  TZE     s:3409
         2 000034   300066 236100                    LDQ     54,,PR3
         2 000035   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000036   000042 600000 2                  TZE     s:3409

      511     3407    3                    F$DCB.CFU$->FM$CFU.B=1;

   3407  2 000037   300066 474500                    LDP4    54,,PR3
         2 000040   000002 236003                    LDQ     2,DU
         2 000041   400006 256100                    ORSQ    6,,PR4

      512     3408    3                    END;

PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:104  
      513     3409    2                 F$DCB.DESC.BAD='1'B;

   3409  2 000042   020000 236007                    LDQ     8192,DL
         2 000043   300005 256100                    ORSQ    5,,PR3

      514     3410    2                 END;

      515     3411
      516     3412    1           DEVDA='0'B;

   3412  2 000044   200026 450100                    STZ     DEVDA,,AUTO

      517     3413    1           EL$FILERR='0'B;

   3413  2 000045   000100 100400                    MLR     fill='000'O
         2 000046   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000047   200050 000164                    ADSC9   EL$FILERR,,AUTO          cn=0,n=116

      518     3414    1           EL$FILERR.SN=' ';

   3414  2 000050   040100 100400                    MLR     fill='040'O
         2 000051   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000052   200071 000006                    ADSC9   EL$FILERR+17,,AUTO       cn=0,n=6

      519     3415    1           EL$FILERR.ACCT=' ';

   3415  2 000053   000035 235000 xsym               LDA     B_VECTNIL+29
         2 000054   000035 236000 xsym               LDQ     B_VECTNIL+29
         2 000055   200073 755100                    STA     EL$FILERR+19,,AUTO
         2 000056   200074 756100                    STQ     EL$FILERR+20,,AUTO

      520     3416    1           EL$FILERR.DEVNM=' ';

   3416  2 000057   000035 235000 xsym               LDA     B_VECTNIL+29
         2 000060   000035 236000 xsym               LDQ     B_VECTNIL+29
         2 000061   200067 755100                    STA     EL$FILERR+15,,AUTO
         2 000062   200070 756100                    STQ     EL$FILERR+16,,AUTO
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:105  

      521     3417    1           EL$FILERR.FNAME.C=' ';

   3417  2 000063   040100 100400                    MLR     fill='040'O
         2 000064   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000065   200075 200037                    ADSC9   EL$FILERR+21,,AUTO       cn=1,n=31

      522     3418    1           EL$FILERR.REASON=REASON;

   3418  2 000066   200004 471500                    LDP1    @REASON,,AUTO
         2 000067   100000 236100                    LDQ     0,,PR1
         2 000070   000022 736000                    QLS     18
         2 000071   200050 552120                    STBQ    EL$FILERR,'20'O,AUTO

      523     3419    1           EL$FILERR.ACTION=ACTION;

   3419  2 000072   200005 473500                    LDP3    @ACTION,,AUTO
         2 000073   300000 236100                    LDQ     0,,PR3
         2 000074   000011 736000                    QLS     9
         2 000075   200050 552110                    STBQ    EL$FILERR,'10'O,AUTO

      524     3420    1           EL$FILERR.CODE=CODE;

   3420  2 000076   200003 474500                    LDP4    @CODE,,AUTO
         2 000077   400000 236100                    LDQ     0,,PR4
         2 000100   000033 736000                    QLS     27
         2 000101   200050 552140                    STBQ    EL$FILERR,'40'O,AUTO

      525     3421    2           IF S_TIMR~=2 THEN DO;

   3421  2 000102   000000 236000 xsym               LDQ     S_TIMR
         2 000103   000002 116007                    CMPQ    2,DL
         2 000104   000113 600000 2                  TZE     s:3426

      526     3422    2              EL$FILERR.USER=S_CUN;

   3422  2 000105   000000 236000 xsym               LDQ     S_CUN
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:106  
         2 000106   200050 552104                    STBQ    EL$FILERR,'04'O,AUTO

      527     3423    2              SYSID=B$JIT.SYSID;

   3423  2 000107   000000 236100                    LDQ     0,,PR0
         2 000110   777777 376007                    ANQ     -1,DL
         2 000111   200021 756100                    STQ     SYSID,,AUTO

      528     3424    2              END;

   3424  2 000112   000136 710000 2                  TRA     s:3432

      529     3425    2           ELSE DO;

      530     3426    2              SYSID=0;

   3426  2 000113   200021 450100                    STZ     SYSID,,AUTO

      531     3427    2              IF ADDR(Q$)~=ADDR(NIL) THEN

   3427  2 000114   200015 236100                    LDQ     @Q$,,AUTO
         2 000115   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000116   000136 600000 2                  TZE     s:3432

      532     3428    2                 IF Q$~=ADDR(NIL) THEN

   3428  2 000117   200015 475500                    LDP5    @Q$,,AUTO
         2 000120   500000 236100                    LDQ     0,,PR5
         2 000121   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000122   000136 600000 2                  TZE     s:3432

      533     3429    2                    IF Q$->N$REQ.USER#~=0 THEN

   3429  2 000123   500000 476500                    LDP6    0,,PR5
         2 000124   600027 236100                    LDQ     23,,PR6
         2 000125   000777 316007                    CANQ    511,DL
         2 000126   000136 600000 2                  TZE     s:3432
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:107  

      534     3430    2                       SYSID=B$USRT$->B$USER.SYSID(Q$->N$REQ.USER#);

   3430  2 000127   600027 236100                    LDQ     23,,PR6
         2 000130   000004 736000                    QLS     4
         2 000131   017760 376007                    ANQ     8176,DL
         2 000132   000000 477400 xsym               LDP7    B$USRT$
         2 000133   700014 236106                    LDQ     12,QL,PR7
         2 000134   777777 376007                    ANQ     -1,DL
         2 000135   200021 756100                    STQ     SYSID,,AUTO

      535     3431    2              END;

      536     3432    1           EL$FILERR.SYSID=SYSID;

   3432  2 000136   200021 720100                    LXL0    SYSID,,AUTO
         2 000137   200063 440100                    SXL0    EL$FILERR+11,,AUTO

      537     3433    1           CALL FMR$FNDSTK(BASE$,CUR$);

   3433  2 000140   200025 635500                    EPPR5   CUR$,,AUTO
         2 000141   200107 455500                    STP5    EL$FILERR+31,,AUTO
         2 000142   200024 636500                    EPPR6   BASE$,,AUTO
         2 000143   200106 456500                    STP6    EL$FILERR+30,,AUTO
         2 000144   200106 630500                    EPPR0   EL$FILERR+30,,AUTO
         2 000145   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000146   000000 701000 xent               TSX1    FMR$FNDSTK
         2 000147   000000 011000                    NOP     0

      538     3434    2           DO I=0 TO 2;

   3434  2 000150   200016 450100                    STZ     I,,AUTO

      539     3435    2              EL$FILERR.PLUGH(I)=CUR$->STK.RETADDR;

   3435  2 000151   200016 235100                    LDA     I,,AUTO
         2 000152   000001 735000                    ALS     1
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:108  
         2 000153   200025 470500                    LDP0    CUR$,,AUTO
         2 000154   000105 100500                    MLR     fill='000'O
         2 000155   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 000156   200062 000002                    ADSC9   EL$FILERR+10,A,AUTO      cn=0,n=2

      540     3436    2              CUR$=PINCRW(BASE$,-1-CUR$->STK.DISP);

   3436  2 000157   200025 470500                    LDP0    CUR$,,AUTO
         2 000160   000000 720100                    LXL0    0,,PR0
         2 000161   000000 636010                    EAQ     0,X0
         2 000162   777777 676003                    ERQ     -1,DU
         2 000163   200024 036100                    ADLQ    BASE$,,AUTO
         2 000164   200025 756100                    STQ     CUR$,,AUTO

      541     3437    2              END;

   3437  2 000165   200016 054100                    AOS     I,,AUTO
         2 000166   200016 235100                    LDA     I,,AUTO
         2 000167   000002 115007                    CMPA    2,DL
         2 000170   000151 604400 2                  TMOZ    s:3435

      542     3438    2           IF ADDR(PDA)~=ADDR(NIL) THEN DO;

   3438  2 000171   200006 236100                    LDQ     @PDA,,AUTO
         2 000172   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000173   000254 600000 2                  TZE     NODA

      543     3439    2              DA=BITBIN(PDA&'000777777777'O);

   3439  2 000174   200006 470500                    LDP0    @PDA,,AUTO
         2 000175   000000 236100                    LDQ     0,,PR0
         2 000176   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 000177   200017 756100                    STQ     DA,,AUTO

      544     3440    3              IF ADDR(NODCB)=ADDR(NIL) THEN DO; /* THERE IS A DCB                */

   3440  2 000200   200014 236100                    LDQ     @NODCB,,AUTO
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:109  
         2 000201   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000202   000250 601000 2                  TNZ     s:3452

      545     3441    4                 IF DA<FM_SRZERO AND F$DCB.CFU$~=ADDR(NIL) THEN DO;
              3441                          /* DA IS FILE-REL */

   3441  2 000203   200017 236100                    LDQ     DA,,AUTO
         2 000204   000000 116000 xsym               CMPQ    FM_SRZERO
         2 000205   000227 603000 2                  TRC     s:3446
         2 000206   200023 471500                    LDP1    JDCB$,,AUTO
         2 000207   100066 236100                    LDQ     54,,PR1
         2 000210   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000211   000227 600000 2                  TZE     s:3446

      546     3442    4                    EL$FILERR.FRDA=BITBIN(PDA);

   3442  2 000212   000000 235100                    LDA     0,,PR0
         2 000213   200052 755100                    STA     EL$FILERR+2,,AUTO

      547     3443    4                    CALL FAF$FRTOSR(DA,EL$FILERR.SRDA,SIZ);

   3443  2 000214   200022 633500                    EPPR3   SIZ,,AUTO
         2 000215   200110 453500                    STP3    EL$FILERR+32,,AUTO
         2 000216   200053 634500                    EPPR4   EL$FILERR+3,,AUTO
         2 000217   200107 454500                    STP4    EL$FILERR+31,,AUTO
         2 000220   200017 635500                    EPPR5   DA,,AUTO
         2 000221   200106 455500                    STP5    EL$FILERR+30,,AUTO
         2 000222   200106 630500                    EPPR0   EL$FILERR+30,,AUTO
         2 000223   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000224   000000 701000 xent               TSX1    FAF$FRTOSR
         2 000225   000000 011000                    NOP     0

      548     3444    4                    END;

   3444  2 000226   000231 710000 2                  TRA     s:3447

      549     3445    3                 ELSE
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:110  
      550     3446    3                    EL$FILERR.SRDA=BITBIN(PDA);

   3446  2 000227   000000 235100                    LDA     0,,PR0
         2 000230   200053 755100                    STA     EL$FILERR+3,,AUTO

      551     3447    3                 RELADDR=BINBIT(EL$FILERR.SRDA,36)&'000777777777'O;

   3447  2 000231   200053 236100                    LDQ     EL$FILERR+3,,AUTO
         2 000232   000032 376000 xsym               ANQ     B_VECTNIL+26
         2 000233   200020 756100                    STQ     RELADDR,,AUTO

      552     3448    3                 CALL FAF$SRTODR(RELADDR,F$DCB.SETX)ALTRET(NODA);

   3448  2 000234   200023 236100                    LDQ     JDCB$,,AUTO
         2 000235   000000 036000 3                  ADLQ    0
         2 000236   200107 756100                    STQ     EL$FILERR+31,,AUTO
         2 000237   200020 630500                    EPPR0   RELADDR,,AUTO
         2 000240   200106 450500                    STP0    EL$FILERR+30,,AUTO
         2 000241   200106 630500                    EPPR0   EL$FILERR+30,,AUTO
         2 000242   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000243   000000 701000 xent               TSX1    FAF$SRTODR
         2 000244   000254 702000 2                  TSX2    NODA

      553     3449    3                 DEVDA=RELADDR;

   3449  2 000245   200020 236100                    LDQ     RELADDR,,AUTO
         2 000246   200026 756100                    STQ     DEVDA,,AUTO

      554     3450    3                 END;

   3450  2 000247   000254 710000 2                  TRA     NODA

      555     3451    3              ELSE DO;                     /* No DCB - must be device relative   */

      556     3452    3                 DEVDA=PDA;

   3452  2 000250   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:111  
         2 000251   200026 756100                    STQ     DEVDA,,AUTO

      557     3453    3                 EL$FILERR.SRDA=BITBIN(PDA);

   3453  2 000252   000000 235100                    LDA     0,,PR0
         2 000253   200053 755100                    STA     EL$FILERR+3,,AUTO

      558     3454    3                 END;

      559     3455    2              END;

      560     3456        /**/
      561     3457    2   NODA:   IF DEVDA THEN DO;

   3457  2 000254   200026 235100       NODA         LDA     DEVDA,,AUTO
         2 000255   000364 600000 2                  TZE     s:3477

      562     3458    2              IF FM_75NUM~=0 THEN

   3458  2 000256   000025 236000 0                  LDQ     FM_75NUM
         2 000257   000315 600000 2                  TZE     s:3465

      563     3459    3              DO I=0 TO FM_75NUM;

   3459  2 000260   200016 450100                    STZ     I,,AUTO
         2 000261   000312 710000 2                  TRA     s:3464+1

      564     3460    3                 IF FM_75TABLE.DEVDA(I)=DEVDA

   3460  2 000262   200016 235100                    LDA     I,,AUTO
         2 000263   000001 735000                    ALS     1
         2 000264   000000 236005 0                  LDQ     FM_75TABLE,AL
         2 000265   200026 116100                    CMPQ    DEVDA,,AUTO
         2 000266   000311 601000 2                  TNZ     s:3464
         2 000267   200003 470500                    LDP0    @CODE,,AUTO
         2 000270   000001 236005 0                  LDQ     FM_75TABLE+1,AL
         2 000271   000033 772000                    QRL     27
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:112  
         2 000272   000000 116100                    CMPQ    0,,PR0
         2 000273   000311 601000 2                  TNZ     s:3464
         2 000274   200004 471500                    LDP1    @REASON,,AUTO
         2 000275   000001 236005 0                  LDQ     FM_75TABLE+1,AL
         2 000276   000022 772000                    QRL     18
         2 000277   000777 376007                    ANQ     511,DL
         2 000300   100000 116100                    CMPQ    0,,PR1
         2 000301   000311 601000 2                  TNZ     s:3464
         2 000302   200005 473500                    LDP3    @ACTION,,AUTO
         2 000303   000001 236005 0                  LDQ     FM_75TABLE+1,AL
         2 000304   000011 772000                    QRL     9
         2 000305   000777 376007                    ANQ     511,DL
         2 000306   300000 116100                    CMPQ    0,,PR3
         2 000307   000311 601000 2                  TNZ     s:3464

      565     3461    3                   AND FM_75TABLE.CODE(I)=CODE
      566     3462    3                   AND FM_75TABLE.REASON(I)=REASON
      567     3463    3                   AND FM_75TABLE.ACTION(I)=ACTION THEN RETURN;

   3463  2 000310   000000 702200 xent               TSX2  ! X66_ARET

      568     3464    3                 END;

   3464  2 000311   200016 054100                    AOS     I,,AUTO
         2 000312   200016 236100                    LDQ     I,,AUTO
         2 000313   000025 116000 0                  CMPQ    FM_75NUM
         2 000314   000262 604400 2                  TMOZ    s:3460

      569     3465    2              FM_75TABLE.DEVDA(FM_75INDX)=DEVDA;

   3465  2 000315   000024 235000 0                  LDA     FM_75INDX
         2 000316   000001 735000                    ALS     1
         2 000317   200026 236100                    LDQ     DEVDA,,AUTO
         2 000320   000000 756005 0                  STQ     FM_75TABLE,AL

      570     3466    2              FM_75TABLE.CODE(FM_75INDX)=CODE;

PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:113  
   3466  2 000321   000024 235000 0                  LDA     FM_75INDX
         2 000322   000001 735000                    ALS     1
         2 000323   200003 470500                    LDP0    @CODE,,AUTO
         2 000324   000000 236100                    LDQ     0,,PR0
         2 000325   000033 736000                    QLS     27
         2 000326   000001 676005 0                  ERQ     FM_75TABLE+1,AL
         2 000327   777000 376003                    ANQ     -512,DU
         2 000330   000001 656005 0                  ERSQ    FM_75TABLE+1,AL

      571     3467    2              FM_75TABLE.REASON(FM_75INDX)=REASON;

   3467  2 000331   000024 235000 0                  LDA     FM_75INDX
         2 000332   000001 735000                    ALS     1
         2 000333   200004 471500                    LDP1    @REASON,,AUTO
         2 000334   100000 236100                    LDQ     0,,PR1
         2 000335   000022 736000                    QLS     18
         2 000336   000001 676005 0                  ERQ     FM_75TABLE+1,AL
         2 000337   000777 376003                    ANQ     511,DU
         2 000340   000001 656005 0                  ERSQ    FM_75TABLE+1,AL

      572     3468    2              FM_75TABLE.ACTION(FM_75INDX)=ACTION;

   3468  2 000341   000024 235000 0                  LDA     FM_75INDX
         2 000342   000001 735000                    ALS     1
         2 000343   200005 473500                    LDP3    @ACTION,,AUTO
         2 000344   300000 236100                    LDQ     0,,PR3
         2 000345   000011 736000                    QLS     9
         2 000346   000001 676005 0                  ERQ     FM_75TABLE+1,AL
         2 000347   777000 376007                    ANQ     -512,DL
         2 000350   000001 656005 0                  ERSQ    FM_75TABLE+1,AL

      573     3469    2              IF FM_75NUM<9 THEN

   3469  2 000351   000025 235000 0                  LDA     FM_75NUM
         2 000352   000011 115007                    CMPA    9,DL
         2 000353   000355 605000 2                  TPL     s:3471

PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:114  
      574     3470    2                 FM_75NUM=FM_75NUM+1;

   3470  2 000354   000025 054000 0                  AOS     FM_75NUM

      575     3471    2              IF FM_75INDX=9 THEN

   3471  2 000355   000024 235000 0                  LDA     FM_75INDX
         2 000356   000011 115007                    CMPA    9,DL
         2 000357   000362 601000 2                  TNZ     s:3474

      576     3472    2                 FM_75INDX=0;

   3472  2 000360   000024 450000 0                  STZ     FM_75INDX
         2 000361   000364 710000 2                  TRA     s:3477

      577     3473    2              ELSE
      578     3474    2                 FM_75INDX=FM_75INDX+1;

   3474  2 000362   000001 035007                    ADLA    1,DL
         2 000363   000024 755000 0                  STA     FM_75INDX

      579     3475    2              END;

      580     3476        /**/
      581     3477    1           IF ADDR(BFR$)~=ADDR(NIL) THEN

   3477  2 000364   200007 236100                    LDQ     @BFR$,,AUTO
         2 000365   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000366   000433 600000 2                  TZE     s:3486

      582     3478    2              IF BFR$~=ADDR(NIL) THEN DO;

   3478  2 000367   200007 470500                    LDP0    @BFR$,,AUTO
         2 000370   000000 236100                    LDQ     0,,PR0
         2 000371   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000372   000433 600000 2                  TZE     s:3486

PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:115  
      583     3479    2                 IF BFR1X<1024 THEN EL$FILERR.BFR1=BFR$->WRDS(BFR1X);

   3479  2 000373   200010 471500                    LDP1    @BFR1X,,AUTO
         2 000374   100000 235100                    LDA     0,,PR1
         2 000375   002000 115007                    CMPA    1024,DL
         2 000376   000403 603000 2                  TRC     s:3480

   3479  2 000377   000000 473500                    LDP3    0,,PR0
         2 000400   100000 720100                    LXL0    0,,PR1
         2 000401   300000 235110                    LDA     0,X0,PR3
         2 000402   200055 755100                    STA     EL$FILERR+5,,AUTO

      584     3480    2                 IF BFR2X<1024 THEN EL$FILERR.BFR2=BFR$->WRDS(BFR2X);

   3480  2 000403   200011 473500                    LDP3    @BFR2X,,AUTO
         2 000404   300000 235100                    LDA     0,,PR3
         2 000405   002000 115007                    CMPA    1024,DL
         2 000406   000413 603000 2                  TRC     s:3481

   3480  2 000407   000000 474500                    LDP4    0,,PR0
         2 000410   300000 720100                    LXL0    0,,PR3
         2 000411   400000 235110                    LDA     0,X0,PR4
         2 000412   200056 755100                    STA     EL$FILERR+6,,AUTO

      585     3481    2                 IF BFR3X<1024 THEN EL$FILERR.BFR3=BFR$->WRDS(BFR3X);

   3481  2 000413   200012 474500                    LDP4    @BFR3X,,AUTO
         2 000414   400000 235100                    LDA     0,,PR4
         2 000415   002000 115007                    CMPA    1024,DL
         2 000416   000423 603000 2                  TRC     s:3482

   3481  2 000417   000000 475500                    LDP5    0,,PR0
         2 000420   400000 720100                    LXL0    0,,PR4
         2 000421   500000 235110                    LDA     0,X0,PR5
         2 000422   200057 755100                    STA     EL$FILERR+7,,AUTO

      586     3482    2                 EL$FILERR.BFR1X=BFR1X;
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:116  

   3482  2 000423   100000 236100                    LDQ     0,,PR1
         2 000424   000030 736000                    QLS     24
         2 000425   200061 752160                    STCQ    EL$FILERR+9,'60'O,AUTO

      587     3483    2                 EL$FILERR.BFR2X=BFR2X;

   3483  2 000426   300000 236100                    LDQ     0,,PR3
         2 000427   000014 736000                    QLS     12
         2 000430   200061 752114                    STCQ    EL$FILERR+9,'14'O,AUTO

      588     3484    2                 EL$FILERR.BFR3X=BFR3X;

   3484  2 000431   400000 236100                    LDQ     0,,PR4
         2 000432   200061 752103                    STCQ    EL$FILERR+9,'03'O,AUTO

      589     3485    2                 END;

      590     3486    1           IF ADDR(MISC)~=ADDR(NIL) THEN

   3486  2 000433   200013 236100                    LDQ     @MISC,,AUTO
         2 000434   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000435   000441 600000 2                  TZE     s:3488

      591     3487    1              EL$FILERR.MISC=MISC;

   3487  2 000436   200013 470500                    LDP0    @MISC,,AUTO
         2 000437   000000 235100                    LDA     0,,PR0
         2 000440   200060 755100                    STA     EL$FILERR+8,,AUTO

      592     3488    2           IF ADDR(NODCB)=ADDR(NIL) THEN DO;

   3488  2 000441   200014 236100                    LDQ     @NODCB,,AUTO
         2 000442   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000443   000552 601000 2                  TNZ     s:3511

      593     3489    2              EL$FILERR.FNAME=JDCB$->F$DCB.NAME;
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:117  

   3489  2 000444   200023 470500                    LDP0    JDCB$,,AUTO
         2 000445   000100 100500                    MLR     fill='000'O
         2 000446   000010 000040                    ADSC9   8,,PR0                   cn=0,n=32
         2 000447   200075 000040                    ADSC9   EL$FILERR+21,,AUTO       cn=0,n=32

      594     3490    2              IF EL$FILERR.FNAME.L>31 THEN

   3490  2 000450   200075 236100                    LDQ     EL$FILERR+21,,AUTO
         2 000451   777000 376003                    ANQ     -512,DU
         2 000452   040000 116003                    CMPQ    16384,DU
         2 000453   000456 602000 2                  TNC     s:3492

      595     3491    2                 EL$FILERR.FNAME.L=31;

   3491  2 000454   037000 236003                    LDQ     15872,DU
         2 000455   200075 552140                    STBQ    EL$FILERR+21,'40'O,AUTO

      596     3492    2              IF F$DCB.STARF THEN

   3492  2 000456   000064 236100                    LDQ     52,,PR0
         2 000457   200000 316003                    CANQ    65536,DU
         2 000460   000465 600000 2                  TZE     s:3495

      597     3493    2                 EL$FILERR.ACCT='*STAR*';

   3493  2 000461   040100 100400                    MLR     fill='040'O
         2 000462   000002 000006 1                  ADSC9   OCTBL1+2                 cn=0,n=6
         2 000463   200073 000010                    ADSC9   EL$FILERR+19,,AUTO       cn=0,n=8
         2 000464   000500 710000 2                  TRA     s:3499

      598     3494    3              ELSE DO;

      599     3495    3                 EL$FILERR.ACCT=F$DCB.ACCT;

   3495  2 000465   000020 237100                    LDAQ    16,,PR0
         2 000466   200073 755100                    STA     EL$FILERR+19,,AUTO
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:118  
         2 000467   200074 756100                    STQ     EL$FILERR+20,,AUTO

      600     3496    3                 IF EL$FILERR.ACCT=' ' THEN

   3496  2 000470   040000 106500                    CMPC    fill='040'O
         2 000471   200073 000010                    ADSC9   EL$FILERR+19,,AUTO       cn=0,n=8
         2 000472   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000473   000500 601000 2                  TNZ     s:3499

      601     3497    3                    EL$FILERR.ACCT=B$JIT.FACCN;

   3497  2 000474   000000 471400 xsym               LDP1    B$JIT$
         2 000475   100006 237100                    LDAQ    6,,PR1
         2 000476   200073 755100                    STA     EL$FILERR+19,,AUTO
         2 000477   200074 756100                    STQ     EL$FILERR+20,,AUTO

      602     3498    3                 END;

      603     3499    2              EL$FILERR.SETX=JDCB$->F$DCB.SETX;

   3499  2 000500   000051 720100                    LXL0    41,,PR0
         2 000501   200072 440100                    SXL0    EL$FILERR+18,,AUTO

      604     3500    2              EL$FILERR.FUN=JDCB$->F$DCB.FUN;

   3500  2 000502   000032 236100                    LDQ     26,,PR0
         2 000503   000006 736000                    QLS     6
         2 000504   200051 676100                    ERQ     EL$FILERR+1,,AUTO
         2 000505   000700 376003                    ANQ     448,DU
         2 000506   200051 656100                    ERSQ    EL$FILERR+1,,AUTO

      605     3501    2              EL$FILERR.DISP=JDCB$->F$DCB.DISP;

   3501  2 000507   000032 236100                    LDQ     26,,PR0
         2 000510   000025 736000                    QLS     21
         2 000511   200051 676100                    ERQ     EL$FILERR+1,,AUTO
         2 000512   000070 376003                    ANQ     56,DU
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:119  
         2 000513   200051 656100                    ERSQ    EL$FILERR+1,,AUTO

      606     3502    2              IF JDCB$->F$DCB.DISP=%SCRATCH# THEN

   3502  2 000514   000032 236100                    LDQ     26,,PR0
         2 000515   000777 376007                    ANQ     511,DL
         2 000516   000001 116007                    CMPQ    1,DL
         2 000517   000523 601000 2                  TNZ     s:3504

      607     3503    2                 EL$FILERR.ACCT='*SCRTCH*';

   3503  2 000520   000004 237000 1                  LDAQ    OCTBL1+4
         2 000521   200073 755100                    STA     EL$FILERR+19,,AUTO
         2 000522   200074 756100                    STQ     EL$FILERR+20,,AUTO

      608     3504    2              EL$FILERR.SHARE=JDCB$->F$DCB.SHARE;

   3504  2 000523   000031 236100                    LDQ     25,,PR0
         2 000524   000600 376007                    ANQ     384,DL
         2 000525   000013 736000                    QLS     11
         2 000526   200051 676100                    ERQ     EL$FILERR+1,,AUTO
         2 000527   000007 376003                    ANQ     7,DU
         2 000530   200051 656100                    ERSQ    EL$FILERR+1,,AUTO

      609     3505    2              EL$FILERR.ORG=JDCB$->F$DCB.ORG;

   3505  2 000531   000032 236100                    LDQ     26,,PR0
         2 000532   200051 676100                    ERQ     EL$FILERR+1,,AUTO
         2 000533   377000 376003                    ANQ     130560,DU
         2 000534   200051 656100                    ERSQ    EL$FILERR+1,,AUTO

      610     3506    2              EL$FILERR.ACS=JDCB$->F$DCB.ACS;

   3506  2 000535   000036 236100                    LDQ     30,,PR0
         2 000536   000014 736000                    QLS     12
         2 000537   200051 752104                    STCQ    EL$FILERR+1,'04'O,AUTO

PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:120  
      611     3507    2              EL$FILERR.LVL=JDCB$->F$DCB.LVL;

   3507  2 000540   000067 236100                    LDQ     55,,PR0
         2 000541   000025 772000                    QRL     21
         2 000542   200051 676100                    ERQ     EL$FILERR+1,,AUTO
         2 000543   007000 376007                    ANQ     3584,DL
         2 000544   200051 656100                    ERSQ    EL$FILERR+1,,AUTO

      612     3508    2              EL$FILERR.GTYP=JDCB$->F$DCB.GTYP;

   3508  2 000545   000064 236100                    LDQ     52,,PR0
         2 000546   034000 376003                    ANQ     14336,DU
         2 000547   000035 772000                    QRL     29
         2 000550   200051 552104                    STBQ    EL$FILERR+1,'04'O,AUTO

      613     3509    2              END;

   3509  2 000551   000631 710000 2                  TRA     s:3525

      614     3510    1           ELSE
      615     3511    2              IF DEVDA.DCTX ~= 0 THEN DO;

   3511  2 000552   200026 236100                    LDQ     DEVDA,,AUTO
         2 000553   777770 316003                    CANQ    -8,DU
         2 000554   000631 600000 2                  TZE     s:3525

      616     3512    2                 DCT$ = N$DCT$(DEVDA.DCTX) ;

   3512  2 000555   200026 236100                    LDQ     DEVDA,,AUTO
         2 000556   000025 772000                    QRL     21
         2 000557   000000 470400 xsym               LDP0    N$DCT$$
         2 000560   000000 236106                    LDQ     0,QL,PR0
         2 000561   200027 756100                    STQ     DCT$,,AUTO

      617     3513    2                 IF  NI$DCT.TYPE = %DV_DP

   3513  2 000562   200027 471500                    LDP1    DCT$,,AUTO
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:121  
         2 000563   100007 236100                    LDQ     7,,PR1
         2 000564   007700 376007                    ANQ     4032,DL
         2 000565   000600 116007                    CMPQ    384,DL
         2 000566   000604 601000 2                  TNZ     s:3519
         2 000567   100036 234100                    SZN     30,,PR1
         2 000570   000604 605000 2                  TPL     s:3519
         2 000571   100036 236100                    LDQ     30,,PR1
         2 000572   020000 316003                    CANQ    8192,DU
         2 000573   000604 601000 2                  TNZ     s:3519

      618     3514    2                   AND NI$DCT.DP.MIRROR.FLAG
      619     3515    2                   AND NOT NI$DCT.DP.MIRROR.PRI
      620     3516    2                 THEN
      621     3517    2                    I = FM$DEV.SECTL(NI$DCT.DP.MIRROR.DCTX) ;

   3517  2 000574   100037 236100                    LDQ     31,,PR1
         2 000575   000017 772000                    QRL     15
         2 000576   000001 376000 3                  ANQ     1
         2 000577   000000 473400 xsym               LDP3    F$CFU$
         2 000600   300005 236106                    LDQ     5,QL,PR3
         2 000601   777777 376007                    ANQ     -1,DL
         2 000602   200016 756100                    STQ     I,,AUTO
         2 000603   000612 710000 2                  TRA     s:3521

      622     3518    2                 ELSE
      623     3519    2                    I = FM$DEV.SECTL(DEVDA.DCTX) ;

   3519  2 000604   200026 220100                    LDX0    DEVDA,,AUTO
         2 000605   777770 360003                    ANX0    -8,DU
         2 000606   000000 473400 xsym               LDP3    F$CFU$
         2 000607   300005 236110                    LDQ     5,X0,PR3
         2 000610   777777 376007                    ANQ     -1,DL
         2 000611   200016 756100                    STQ     I,,AUTO

      624     3520    3                 DO UNTIL (I = 0) OR (DEVDA.DREL < FM$VOL.DRZERO(I));

      625     3521    3                    EL$FILERR.SETX = FM$VOL.SETX(I);
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:122  

   3521  2 000612   200016 235100                    LDA     I,,AUTO
         2 000613   000003 735000                    ALS     3
         2 000614   000000 470400 xsym               LDP0    F$CFU$
         2 000615   000000 720105                    LXL0    0,AL,PR0
         2 000616   200072 440100                    SXL0    EL$FILERR+18,,AUTO

      626     3522    3                    I = FM$VOL.SECTL(I);

   3522  2 000617   000005 236105                    LDQ     5,AL,PR0
         2 000620   777777 376007                    ANQ     -1,DL
         2 000621   200016 756100                    STQ     I,,AUTO

      627     3523    3                    END;

   3523  2 000622   000631 600000 2                  TZE     s:3525
         2 000623   200016 235100                    LDA     I,,AUTO
         2 000624   000003 735000                    ALS     3
         2 000625   200026 236100                    LDQ     DEVDA,,AUTO
         2 000626   000002 376000 3                  ANQ     2
         2 000627   000004 116105                    CMPQ    4,AL,PR0
         2 000630   000612 603000 2                  TRC     s:3521

      628     3524    2                 END;

      629     3525    1           IF ADDR(Q$)~=ADDR(NIL) THEN

   3525  2 000631   200015 236100                    LDQ     @Q$,,AUTO
         2 000632   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000633   000652 600000 2                  TZE     s:3531

      630     3526    2              IF Q$~=ADDR(NIL) THEN DO;

   3526  2 000634   200015 470500                    LDP0    @Q$,,AUTO
         2 000635   000000 236100                    LDQ     0,,PR0
         2 000636   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000637   000652 600000 2                  TZE     s:3531
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:123  

      631     3527    2                 EL$FILERR.STATUS=Q$->N$REQ.STATUS;

   3527  2 000640   000000 471500                    LDP1    0,,PR0
         2 000641   100014 236100                    LDQ     12,,PR1
         2 000642   200065 756100                    STQ     EL$FILERR+13,,AUTO

      632     3528    2                 EL$FILERR.TYC=Q$->N$REQ.TYC;

   3528  2 000643   000000 471500                    LDP1    0,,PR0
         2 000644   100021 236100                    LDQ     17,,PR1
         2 000645   200064 756100                    STQ     EL$FILERR+12,,AUTO

      633     3529    2                 EL$FILERR.REQID=Q$->N$REQ.REQID;

   3529  2 000646   000000 471500                    LDP1    0,,PR0
         2 000647   100010 236100                    LDQ     8,,PR1
         2 000650   000022 772000                    QRL     18
         2 000651   200066 756100                    STQ     EL$FILERR+14,,AUTO

      634     3530    2                 END;

      635     3531    1           IF EL$FILERR.SETX~=0 THEN

   3531  2 000652   200072 720100                    LXL0    EL$FILERR+18,,AUTO
         2 000653   000664 600000 2                  TZE     s:3533

      636     3532    1              EL$FILERR.SN=FM$SET.PSN(EL$FILERR.SETX);

   3532  2 000654   200072 236100                    LDQ     EL$FILERR+18,,AUTO
         2 000655   000003 736000                    QLS     3
         2 000656   000001 376000 3                  ANQ     1
         2 000657   000002 736000                    QLS     2
         2 000660   000000 470400 xsym               LDP0    FM$SET$
         2 000661   040100 100506                    MLR     fill='040'O
         2 000662   000000 400006                    ADSC9   0,Q,PR0                  cn=2,n=6
         2 000663   200071 000006                    ADSC9   EL$FILERR+17,,AUTO       cn=0,n=6
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:124  

      637     3533    2           IF DEVDA.DCTX~=0 AND DEVDA.DCTX<=NK_MXLOCAL THEN DO;

   3533  2 000664   200026 236100                    LDQ     DEVDA,,AUTO
         2 000665   777770 316003                    CANQ    -8,DU
         2 000666   000713 600000 2                  TZE     s:3538
         2 000667   200026 236100                    LDQ     DEVDA,,AUTO
         2 000670   000025 772000                    QRL     21
         2 000671   000000 116000 xsym               CMPQ    NK_MXLOCAL
         2 000672   000674 600000 2                  TZE     s:3534
         2 000673   000713 603000 2                  TRC     s:3538

      638     3534    2              DCT$=N$DCT$(DEVDA.DCTX);

   3534  2 000674   000000 470400 xsym               LDP0    N$DCT$$
         2 000675   000000 236106                    LDQ     0,QL,PR0
         2 000676   200027 756100                    STQ     DCT$,,AUTO

      639     3535    2              EL$FILERR.DEVNM=NI$DCT.DEVNM;

   3535  2 000677   200027 471500                    LDP1    DCT$,,AUTO
         2 000700   040100 100500                    MLR     fill='040'O
         2 000701   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         2 000702   200067 000010                    ADSC9   EL$FILERR+15,,AUTO       cn=0,n=8

      640     3536    2              EL$FILERR.SECTOR=DEVDA.DREL*(NI$DCT.DVT$->NI$DVT.GRANSIZE);

   3536  2 000703   100024 473500                    LDP3    20,,PR1
         2 000704   300053 236100                    LDQ     43,,PR3
         2 000705   000777 376007                    ANQ     511,DL
         2 000706   200106 756100                    STQ     EL$FILERR+30,,AUTO
         2 000707   200026 236100                    LDQ     DEVDA,,AUTO
         2 000710   000002 376000 3                  ANQ     2
         2 000711   200106 402100                    MPY     EL$FILERR+30,,AUTO
         2 000712   200054 756100                    STQ     EL$FILERR+4,,AUTO

      641     3537    2              END;
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:125  

      642     3538    1           IF REASON>=70 OR ACTION=1 THEN

   3538  2 000713   200004 470500                    LDP0    @REASON,,AUTO
         2 000714   000000 235100                    LDA     0,,PR0
         2 000715   000106 115007                    CMPA    70,DL
         2 000716   000723 603000 2                  TRC     s:3539
         2 000717   200005 471500                    LDP1    @ACTION,,AUTO
         2 000720   100000 235100                    LDA     0,,PR1
         2 000721   000001 115007                    CMPA    1,DL
         2 000722   000725 601000 2                  TNZ     s:3540

      643     3539    1              EL$FILERR.NOSEND='1'B;       /* Don't send to OC                   */

   3539  2 000723   400000 236003                    LDQ     -131072,DU
         2 000724   200051 256100                    ORSQ    EL$FILERR+1,,AUTO

      644     3540    1           IF ADDR(NODCB)=ADDR(NIL) THEN

   3540  2 000725   200014 236100                    LDQ     @NODCB,,AUTO
         2 000726   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000727   000741 601000 2                  TNZ     s:3543

      645     3541    1              IF S_CUN=1 AND F$DCB.STARF THEN

   3541  2 000730   000000 235000 xsym               LDA     S_CUN
         2 000731   000001 115007                    CMPA    1,DL
         2 000732   000741 601000 2                  TNZ     s:3543
         2 000733   200023 471500                    LDP1    JDCB$,,AUTO
         2 000734   100064 236100                    LDQ     52,,PR1
         2 000735   200000 316003                    CANQ    65536,DU
         2 000736   000741 600000 2                  TZE     s:3543

      646     3542    1                 EL$FILERR.NOSEND='1'B;

   3542  2 000737   400000 236003                    LDQ     -131072,DU
         2 000740   200051 256100                    ORSQ    EL$FILERR+1,,AUTO
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:126  

      647     3543    1           SIZ=SIZEW(EL$FILERR)-SIZEW(EL$FILERR.FNAME)+((EL$FILERR.FNAME.L+4)/4);

   3543  2 000741   200075 236100                    LDQ     EL$FILERR+21,,AUTO
         2 000742   000033 772000                    QRL     27
         2 000743   000004 036007                    ADLQ    4,DL
         2 000744   000002 772000                    QRL     2
         2 000745   000025 036007                    ADLQ    21,DL
         2 000746   200022 756100                    STQ     SIZ,,AUTO

      648     3544    1           CALL ELA$SYSLOG(EL_FI,EL$FILERR,SIZ,'0'B,1,I);

   3544  2 000747   200016 631500                    EPPR1   I,,AUTO
         2 000750   200113 451500                    STP1    EL$FILERR+35,,AUTO
         2 000751   000004 236000 3                  LDQ     4
         2 000752   200112 756100                    STQ     EL$FILERR+34,,AUTO
         2 000753   000005 236000 3                  LDQ     5
         2 000754   200111 756100                    STQ     EL$FILERR+33,,AUTO
         2 000755   200022 633500                    EPPR3   SIZ,,AUTO
         2 000756   200110 453500                    STP3    EL$FILERR+32,,AUTO
         2 000757   200050 634500                    EPPR4   EL$FILERR,,AUTO
         2 000760   200107 454500                    STP4    EL$FILERR+31,,AUTO
         2 000761   000006 236000 3                  LDQ     6
         2 000762   200106 756100                    STQ     EL$FILERR+30,,AUTO
         2 000763   200106 630500                    EPPR0   EL$FILERR+30,,AUTO
         2 000764   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000765   000000 701000 xent               TSX1    ELA$SYSLOG
         2 000766   000000 011000                    NOP     0

      649     3545        /**/
      650     3546    1           IF EL$FILERR.NOSEND OR OCI_BOOT=0 THEN

   3546  2 000767   200051 234100                    SZN     EL$FILERR+1,,AUTO
         2 000770   000773 604000 2                  TMI     s:3547
         2 000771   000000 235000 xsym               LDA     OCI_BOOT
         2 000772   000774 601000 2                  TNZ     s:3549

PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:127  
      651     3547    1              RETURN;

   3547  2 000773   000000 702200 xent               TSX2  ! X66_ARET

      652     3548        /**/
      653     3549    1           OCTBL2.CODE=CODE;

   3549  2 000774   200003 470500                    LDP0    @CODE,,AUTO
         2 000775   000000 235100                    LDA     0,,PR0
         2 000776   200030 755100                    STA     OCTBL2,,AUTO

      654     3550    1           OCTBL2.REASON=REASON;

   3550  2 000777   200004 471500                    LDP1    @REASON,,AUTO
         2 001000   100000 235100                    LDA     0,,PR1
         2 001001   200031 755100                    STA     OCTBL2+1,,AUTO

      655     3551    1           OCTBL2.ACTION=ACTION;

   3551  2 001002   200005 473500                    LDP3    @ACTION,,AUTO
         2 001003   300000 235100                    LDA     0,,PR3
         2 001004   200032 755100                    STA     OCTBL2+2,,AUTO

      656     3552    1           OCTBL2.SYSID=SYSID;

   3552  2 001005   200021 236100                    LDQ     SYSID,,AUTO
         2 001006   200033 756100                    STQ     OCTBL2+3,,AUTO

      657     3553    1           OCTBL2.SN=EL$FILERR.SN;

   3553  2 001007   040100 100500                    MLR     fill='040'O
         2 001010   200071 000006                    ADSC9   EL$FILERR+17,,AUTO       cn=0,n=6
         2 001011   200034 000006                    ADSC9   OCTBL2+4,,AUTO           cn=0,n=6

      658     3554    1           OCTBL2.ACCT=EL$FILERR.ACCT;

   3554  2 001012   040100 100500                    MLR     fill='040'O
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:128  
         2 001013   200073 000010                    ADSC9   EL$FILERR+19,,AUTO       cn=0,n=8
         2 001014   200035 400010                    ADSC9   OCTBL2+5,,AUTO           cn=2,n=8

      659     3555    1           OCTBL2.FNAME=EL$FILERR.FNAME.C;

   3555  2 001015   040100 100500                    MLR     fill='040'O
         2 001016   200075 200037                    ADSC9   EL$FILERR+21,,AUTO       cn=1,n=31
         2 001017   200037 400037                    ADSC9   OCTBL2+7,,AUTO           cn=2,n=31

      660     3556    1           CALL OCI$MK_WR(M_SYS,FILEIC_MSG#,7,OCTBL1,OCTBL2);

   3556  2 001020   200030 634500                    EPPR4   OCTBL2,,AUTO
         2 001021   200112 454500                    STP4    EL$FILERR+34,,AUTO
         2 001022   000012 237000 3                  LDAQ    10
         2 001023   200110 757100                    STAQ    EL$FILERR+32,,AUTO
         2 001024   000014 237000 3                  LDAQ    12
         2 001025   200106 757100                    STAQ    EL$FILERR+30,,AUTO
         2 001026   200106 630500                    EPPR0   EL$FILERR+30,,AUTO
         2 001027   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 001030   000000 701000 xent               TSX1    OCI$MK_WR
         2 001031   000000 011000                    NOP     0

      661     3557        /**/
      662     3558    1           RETURN;

   3558  2 001032   000000 702200 xent               TSX2  ! X66_ARET

FM_75TABLE
 Sect OctLoc
   0     000   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     020*  000000 000000   000000 000000   000000 000000   000000 000000    ................

FM_75INDX
 Sect OctLoc
   0     024   000000 000000                                                    ....

FM_75NUM
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:129  
 Sect OctLoc
   0     025   000000 000000                                                    ....

OCTBL1
 Sect OctLoc
   1     000   004004 004004   006010 037***                                    ........

(unnamed)
 Sect OctLoc
   1     002   052123 124101   122052 040040   052123 103122   124103 110052    *STAR*  *SCRTCH*

(unnamed)
 Sect OctLoc
   3     000   000051 400000   000007 777770   000007 777777   000000 000456    .)..............
   3     004   000003 006000   000002 006000   000003 006000   200000 000000    ................
   3     010   000000 000505   000000 000000   000011 006000   000000 006000    ................
   3     014   000007 006000   000010 006000                                    ........
      663     3559        /**/
      664     3560    1   END FMB$LOGERR;
      665     3561        %EOD;

PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:130  
--  Include file information  --

   F_FMTCODE_C.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   FM$SET.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMB$LOGERR.
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:131  

 **** Variables and constants ****

  ****  Section 000  Data  FMB$LOGERR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    24-0-0/w UBIN        r     1 FM_75INDX                 25-0-0/w SBIN        r     1 FM_75NUM
     0-0-0/b STRC(72)    r     1 FM_75TABLE(0:9)

  ****  Section 001 RoData FMB$LOGERR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC(63)    r     1 OCTBL1

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @ACTION                    7-0-0/w PTR         r     1 @BFR$
    10-0-0/w PTR         r     1 @BFR1X                    11-0-0/w PTR         r     1 @BFR2X
    12-0-0/w PTR         r     1 @BFR3X                     3-0-0/w PTR         r     1 @CODE
    13-0-0/w PTR         r     1 @MISC                     14-0-0/w PTR         r     1 @NODCB
     6-0-0/w PTR         r     1 @PDA                      15-0-0/w PTR         r     1 @Q$
     4-0-0/w PTR         r     1 @REASON                   *0-0-0/w UBIN        r     1 ACTION
    24-0-0/w PTR         r     1 BASE$                     *0-0-0/w PTR         r     1 BFR$
    *0-0-0/w UBIN        r     1 BFR1X                     *0-0-0/w UBIN        r     1 BFR2X
    *0-0-0/w UBIN        r     1 BFR3X                     *0-0-0/w UBIN        r     1 CODE
    25-0-0/w PTR         r     1 CUR$                      17-0-0/w UBIN        r     1 DA
    27-0-0/w PTR         r     1 DCT$                      26-0-0/b STRC        r     1 DEVDA
    50-0-0/w STRC(1044)  r     1 EL$FILERR                 16-0-0/w SBIN        r     1 I
    23-0-0/w PTR         r     1 JDCB$                     *0-0-0/w UBIN        r     1 MISC
    *0-0-0/w UBIN        r     1 NODCB                     30-0-0/w STRC(549)   r     1 OCTBL2
    *0-0-0/w BIT         r     1 PDA                       *0-0-0/w PTR         r     1 Q$
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:132  
    *0-0-0/w UBIN        r     1 REASON                    20-0-0/b BIT         r     1 RELADDR
    22-0-0/w UBIN        r     1 SIZ                       21-0-0/w UBIN        r     1 SYSID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$USRT$
     0-0-0/w PTR         r     1 F$CFU$                     0-0-0/w PTR         r     1 FM$SET$
     0-0-0/w UBIN        r     1 FM_SRZERO                  0-0-0/w PTR         r     1 N$DCT$$
     0-0-0/w PTR         r     1 N$FQ$                      0-0-0/w PTR         r     1 NI$FQ$
     0-0-0/w PTR         r     1 NI$IBUF$                   0-0-0/w PTR         r     1 NI$RP$
     0-0-0/w UBIN        r     1 NK_MXLOCAL                 0-0-0/w UBIN        r     1 OCI_BOOT
     0-0-0/w SBIN        r     1 S_CUN                      0-0-0/w UBIN        r     1 S_TIMR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(576)   r     1 B$USER(0:0)
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(288)   r     1 FM$CFU
     0-0-0/w STRC(288)   r     1 FM$DEV(0:0)                0-0-0/w STRC(288)   r     1 FM$SET(0:0)
     0-0-0/w STRC(288)   r     1 FM$VOL(0:0)                0-0-0/w PTR         r     1 N$DCT$(0:0)
     0-0-0/d STRC(1080)  r     1 N$REQ                      0-0-0/w STRC(1332)  r     1 NI$DCT
     0-0-0/w STRC(2844)  r     1 NI$DVT                     0-0-0/w STRC        r     1 STK
     0-0-0/w UBIN        r     1 WRDS(0:1023)


   Procedure FMB$LOGERR requires 539 words for executable code.
   Procedure FMB$LOGERR requires 76 words of local(AUTO) storage.
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:133  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:134  
          MINI XREF LISTING

ACTION
        66**DCL        61--PROC     3403>>IF       3419>>ASSIGN   3460>>IF       3468>>ASSIGN   3538>>IF
      3551>>ASSIGN
B$DO.ECCINFO
       244**DCL       245--REDEF
B$JIT.DCB$
      1266**DCL      3400>>ASSIGN
B$JIT.ERR.MID
      1177**DCL      1177--REDEF
B$JIT.FACCN
      1176**DCL      3497>>ASSIGN
B$JIT.SYSID
      1176**DCL      3423>>ASSIGN
B$JIT$
        76**DCL      1171--IMP-PTR  3400>>ASSIGN   3423>>ASSIGN   3497>>ASSIGN
B$U.MISC
       223**DCL       224--REDEF
B$USER.MISC
       299**DCL       300--REDEF
B$USER.SYSID
       294**DCL      3430>>ASSIGN
B$USRT$
        77**DCL      3430>>ASSIGN
BASE$
      3177**DCL      3433<>CALL     3436>>ASSIGN
BFR$
        68**DCL        61--PROC     3477--IF       3478>>IF       3479>>ASSIGN   3480>>ASSIGN   3481>>ASSIGN
BFR1X
        69**DCL        61--PROC     3479>>IF       3479>>ASSIGN   3482>>ASSIGN
BFR2X
        70**DCL        61--PROC     3480>>IF       3480>>ASSIGN   3483>>ASSIGN
BFR3X
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:135  
        71**DCL        61--PROC     3481>>IF       3481>>ASSIGN   3484>>ASSIGN
CODE
        64**DCL        61--PROC     3420>>ASSIGN   3460>>IF       3466>>ASSIGN   3549>>ASSIGN
CUR$
      3178**DCL      3433<>CALL     3435>>ASSIGN   3436<<ASSIGN   3436>>ASSIGN
DA
      3172**DCL      3439<<ASSIGN   3441>>IF       3443<>CALL
DCT$
      3182**DCL      3349--IMP-PTR  3512<<ASSIGN   3513>>IF       3513>>IF       3513>>IF       3517>>ASSIGN
      3534<<ASSIGN   3535>>ASSIGN   3536>>ASSIGN
DEVDA
      3179**DCL      3412<<ASSIGN   3449<<ASSIGN   3452<<ASSIGN   3457>>IF       3460>>IF       3465>>ASSIGN
DEVDA.DCTX
      3180**DCL      3511>>IF       3512>>ASSIGN   3519>>ASSIGN   3533>>IF       3533>>IF       3534>>ASSIGN
DEVDA.DREL
      3181**DCL      3520>>DOUNTIL  3536>>ASSIGN
EL$FILERR
      3203**DCL      3413<<ASSIGN   3543--ASSIGN   3544<>CALL
EL$FILERR.ACCT
      3207**DCL      3415<<ASSIGN   3493<<ASSIGN   3495<<ASSIGN   3496>>IF       3497<<ASSIGN   3503<<ASSIGN
      3554>>ASSIGN
EL$FILERR.ACS
      3204**DCL      3506<<ASSIGN
EL$FILERR.ACTION
      3203**DCL      3419<<ASSIGN
EL$FILERR.BFR1
      3205**DCL      3479<<ASSIGN
EL$FILERR.BFR1X
      3205**DCL      3482<<ASSIGN
EL$FILERR.BFR2
      3205**DCL      3480<<ASSIGN
EL$FILERR.BFR2X
      3205**DCL      3483<<ASSIGN
EL$FILERR.BFR3
      3205**DCL      3481<<ASSIGN
EL$FILERR.BFR3X
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:136  
      3205**DCL      3484<<ASSIGN
EL$FILERR.CODE
      3203**DCL      3420<<ASSIGN
EL$FILERR.DEVNM
      3206**DCL      3416<<ASSIGN   3535<<ASSIGN
EL$FILERR.DISP
      3204**DCL      3501<<ASSIGN
EL$FILERR.FNAME
      3207**DCL      3489<<ASSIGN   3543--ASSIGN
EL$FILERR.FNAME.C
      3207**DCL      3417<<ASSIGN   3555>>ASSIGN
EL$FILERR.FNAME.L
      3207**DCL      3490>>IF       3491<<ASSIGN   3543>>ASSIGN
EL$FILERR.FRDA
      3204**DCL      3442<<ASSIGN
EL$FILERR.FUN
      3204**DCL      3500<<ASSIGN
EL$FILERR.GTYP
      3204**DCL      3508<<ASSIGN
EL$FILERR.LVL
      3204**DCL      3507<<ASSIGN
EL$FILERR.MISC
      3205**DCL      3487<<ASSIGN
EL$FILERR.NOSEND
      3203**DCL      3539<<ASSIGN   3542<<ASSIGN   3546>>IF
EL$FILERR.ORG
      3203**DCL      3505<<ASSIGN
EL$FILERR.PLUGH
      3206**DCL      3435<<ASSIGN
EL$FILERR.REASON
      3203**DCL      3418<<ASSIGN
EL$FILERR.REQID
      3206**DCL      3529<<ASSIGN
EL$FILERR.SECTOR
      3205**DCL      3536<<ASSIGN
EL$FILERR.SETX
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:137  
      3206**DCL      3499<<ASSIGN   3521<<ASSIGN   3531>>IF       3532>>ASSIGN
EL$FILERR.SHARE
      3204**DCL      3504<<ASSIGN
EL$FILERR.SN
      3206**DCL      3414<<ASSIGN   3532<<ASSIGN   3553>>ASSIGN
EL$FILERR.SRDA
      3205**DCL      3443<>CALL     3446<<ASSIGN   3447>>ASSIGN   3453<<ASSIGN
EL$FILERR.STATUS
      3206**DCL      3527<<ASSIGN
EL$FILERR.SYSID
      3206**DCL      3432<<ASSIGN
EL$FILERR.TYC
      3206**DCL      3528<<ASSIGN
EL$FILERR.USER
      3203**DCL      3422<<ASSIGN
ELA$SYSLOG
        86**DCL-ENT  3544--CALL
F$CFU$
        79**DCL      3215--IMP-PTR  3227--IMP-PTR  3517>>ASSIGN   3519>>ASSIGN   3520>>DOUNTIL  3521>>ASSIGN
      3522>>ASSIGN
F$DCB.ACCT
      3243**DCL      3495>>ASSIGN
F$DCB.ACS
      3250**DCL      3406>>IF       3506>>ASSIGN
F$DCB.ACTPOS
      3258**DCL      3258--REDEF
F$DCB.ARS
      3233**DCL      3233--REDEF
F$DCB.ATTR
      3251**DCL      3252--REDEF
F$DCB.BORROW
      3266**DCL      3266--REDEF    3266--REDEF    3266--REDEF
F$DCB.CFU$
      3267**DCL      3406>>IF       3407>>ASSIGN   3441>>IF
F$DCB.DCBNAME.L
      3280**DCL      3280--IMP-SIZ
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:138  
F$DCB.DESC.BAD
      3241**DCL      3409<<ASSIGN
F$DCB.DISP
      3248**DCL      3501>>ASSIGN   3502>>IF
F$DCB.EOMCHAR
      3237**DCL      3237--REDEF
F$DCB.FLDID
      3261**DCL      3261--REDEF
F$DCB.FORM$
      3255**DCL      3255--REDEF
F$DCB.FSECT
      3271**DCL      3271--REDEF
F$DCB.FSN
      3248**DCL      3248--REDEF    3248--REDEF    3249--REDEF
F$DCB.FUN
      3247**DCL      3500>>ASSIGN
F$DCB.GTYP
      3262**DCL      3508>>ASSIGN
F$DCB.HEADER$
      3254**DCL      3254--REDEF
F$DCB.IFMT
      3273**DCL      3403>>IF       3403>>IF       3403>>IF
F$DCB.IXTNSIZE
      3252**DCL      3252--REDEF
F$DCB.LASTSTA$
      3242**DCL      3242--REDEF
F$DCB.LVL
      3267**DCL      3267--REDEF    3507>>ASSIGN
F$DCB.NAME
      3242**DCL      3489>>ASSIGN
F$DCB.NAME.C
      3242**DCL      3242--REDEF
F$DCB.NOEOF
      3263**DCL      3263--REDEF
F$DCB.NRECS
      3253**DCL      3253--REDEF
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:139  
F$DCB.NRECX
      3272**DCL      3272--REDEF
F$DCB.OHDR
      3264**DCL      3264--REDEF
F$DCB.ORG
      3247**DCL      3247--REDEF    3505>>ASSIGN
F$DCB.PRECNO
      3270**DCL      3270--REDEF
F$DCB.RCSZ
      3275**DCL      3275--REDEF
F$DCB.RES
      3243**DCL      3243--REDEF
F$DCB.SETX
      3255**DCL      3255--REDEF    3448<>CALL     3499>>ASSIGN
F$DCB.SHARE
      3246**DCL      3504>>ASSIGN
F$DCB.STARF
      3262**DCL      3492>>IF       3541>>IF
F$DCB.TAB$
      3254**DCL      3255--REDEF
F$DCB.TDA
      3269**DCL      3269--REDEF
F$DCB.WSN
      3244**DCL      3244--REDEF
FAF$FRTOSR
        87**DCL-ENT  3443--CALL
FAF$SRTODR
        88**DCL-ENT  3448--CALL
FM$CFU.ACCTX
      3222**DCL      3222--REDEF
FM$CFU.B
      3224**DCL      3407<<ASSIGN
FM$DEV.SECTL
      3217**DCL      3517>>ASSIGN   3519>>ASSIGN
FM$DEV.USERLIST
      3216**DCL      3217--REDEF
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:140  
FM$SET.PSN
      3210**DCL      3532>>ASSIGN
FM$SET.USERLIST
      3211**DCL      3211--REDEF
FM$SET$
        78**DCL      3210--IMP-PTR  3532>>ASSIGN
FM$VOL.DRZERO
      3229**DCL      3520>>DOUNTIL
FM$VOL.SECTL
      3229**DCL      3522>>ASSIGN
FM$VOL.SETX
      3227**DCL      3521>>ASSIGN
FM$VOL.USERLIST
      3228**DCL      3229--REDEF
FMR$FNDSTK
        89**DCL-ENT  3433--CALL
FM_75INDX
      3168**DCL      3465>>ASSIGN   3466>>ASSIGN   3467>>ASSIGN   3468>>ASSIGN   3471>>IF       3472<<ASSIGN
      3474<<ASSIGN   3474>>ASSIGN
FM_75NUM
      3169**DCL      3458>>IF       3459>>DOINDEX  3469>>IF       3470<<ASSIGN   3470>>ASSIGN
FM_75TABLE.ACTION
      3166**DCL      3460>>IF       3468<<ASSIGN
FM_75TABLE.CODE
      3164**DCL      3460>>IF       3466<<ASSIGN
FM_75TABLE.DEVDA
      3163**DCL      3460>>IF       3465<<ASSIGN
FM_75TABLE.REASON
      3165**DCL      3460>>IF       3467<<ASSIGN
FM_SRZERO
        80**DCL      3441>>IF
I
      3171**DCL      3434<<DOINDEX  3435>>ASSIGN   3459<<DOINDEX  3460>>IF       3460>>IF       3460>>IF
      3460>>IF       3517<<ASSIGN   3519<<ASSIGN   3520>>DOUNTIL  3520>>DOUNTIL  3521>>ASSIGN   3522<<ASSIGN
      3522>>ASSIGN   3544<>CALL
JDCB$
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:141  
      3176**DCL      3233--IMP-PTR  3400<<ASSIGN   3403>>IF       3403>>IF       3403>>IF       3406>>IF
      3406>>IF       3407>>ASSIGN   3409>>ASSIGN   3441>>IF       3448>>CALL     3489>>ASSIGN   3492>>IF
      3495>>ASSIGN   3499>>ASSIGN   3500>>ASSIGN   3501>>ASSIGN   3502>>IF       3504>>ASSIGN   3505>>ASSIGN
      3506>>ASSIGN   3507>>ASSIGN   3508>>ASSIGN   3541>>IF
MISC
        72**DCL        61--PROC     3486--IF       3487>>ASSIGN
N$DCT$
      2122**DCL      3512>>ASSIGN   3534>>ASSIGN
N$DCT$$
      1988**DCL      2122--IMP-PTR  3512>>ASSIGN   3534>>ASSIGN
N$FQ$
      1988**DCL      2123--IMP-PTR
N$REQ.BUFADDR
      3300**DCL      3301--REDEF    3301--REDEF
N$REQ.DLA.DRELADDR
      3292**DCL      3292--REDEF
N$REQ.DVE.EOMCHAR
      3329**DCL      3330--REDEF
N$REQ.EAINFO
      3323**DCL      3323--REDEF
N$REQ.EAINFOX
      3323**DCL      3324--REDEF
N$REQ.EVNTINFO
      3324**DCL      3324--REDEF
N$REQ.REQID
      3302**DCL      3529>>ASSIGN
N$REQ.STATUS
      3305**DCL      3311--REDEF    3527>>ASSIGN
N$REQ.TYC
      3313**DCL      3528>>ASSIGN
N$REQ.USER#
      3325**DCL      3429>>IF       3430>>ASSIGN
N$REQ_INIT.BUFADDR
      2007**DCL      2008--REDEF    2008--REDEF
N$REQ_INIT.DLA.DRELADDR
      1999**DCL      1999--REDEF
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:142  
N$REQ_INIT.DVE.EOMCHAR
      2036**DCL      2037--REDEF
N$REQ_INIT.EAINFO
      2030**DCL      2030--REDEF
N$REQ_INIT.EAINFOX
      2030**DCL      2031--REDEF
N$REQ_INIT.EVNTINFO
      2031**DCL      2031--REDEF
N$REQ_INIT.STATUS
      2012**DCL      2018--REDEF
NI$DCT.DEVNM
      3349**DCL      3535>>ASSIGN
NI$DCT.DP
      3369**DCL      3376--REDEF    3379--REDEF    3380--REDEF    3382--REDEF    3382--REDEF    3383--REDEF
      3384--REDEF    3384--REDEF
NI$DCT.DP.MIRROR.DCTX
      3374**DCL      3517>>ASSIGN
NI$DCT.DP.MIRROR.FLAG
      3371**DCL      3513>>IF
NI$DCT.DP.MIRROR.PRI
      3373**DCL      3513>>IF
NI$DCT.DVT$
      3365**DCL      3536>>ASSIGN
NI$DCT.MPC.IOCHANX
      3377**DCL      3377--REDEF
NI$DCT.TYPE
      3359**DCL      3513>>IF
NI$DVT.GRANSIZE
      3390**DCL      3536>>ASSIGN
NI$DVT.MPC
      3391**DCL      3392--REDEF
NI$FQ$
      2048**DCL      2124--IMP-PTR
NI$IBUF$
      2048**DCL      2124--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:143  
      2058**DCL      2059--REDEF    2059--REDEF
NI$IMXMBX_INIT.SIZE
      2060**DCL      2060--REDEF
NI$REQ_INIT.DCW
      2082**DCL      2085--REDEF
NI$REQ_INIT.DCW.TALLY
      2083**DCL      2083--REDEF
NI$REQ_INIT.IDCW.EXTA
      2085**DCL      2085--REDEF
NI$REQ_INIT.PCW
      2087**DCL      2091--REDEF
NI$REQ_INIT.SEEK
      2092**DCL      2093--REDEF    2094--REDEF
NI$RP$
      2096**DCL      2126--IMP-PTR
NI_MBX_INIT.DCW.CONTROL.AE
      2118**DCL      2118--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
      2114**DCL      2114--REDEF
NK_MXLOCAL
        81**DCL      3533>>IF
NODA
      3457**LABEL    3448--CALLALT
NODCB
        73**DCL        61--PROC     3402--IF       3440--IF       3488--IF       3540--IF
OCI$MK_WR
        90**DCL-ENT  3556--CALL
OCI_BOOT
        82**DCL      3546>>IF
OCTBL1
      3192**DCL      3556<>CALL
OCTBL2
      3183**DCL      3556<>CALL
OCTBL2.ACCT
      3189**DCL      3554<<ASSIGN
OCTBL2.ACTION
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:144  
      3186**DCL      3551<<ASSIGN
OCTBL2.CODE
      3184**DCL      3549<<ASSIGN
OCTBL2.FNAME
      3190**DCL      3555<<ASSIGN
OCTBL2.REASON
      3185**DCL      3550<<ASSIGN
OCTBL2.SN
      3188**DCL      3553<<ASSIGN
OCTBL2.SYSID
      3187**DCL      3552<<ASSIGN
PDA
        67**DCL        61--PROC     3438--IF       3439>>ASSIGN   3442>>ASSIGN   3446>>ASSIGN   3452>>ASSIGN
      3453>>ASSIGN
Q$
        74**DCL        61--PROC     3427--IF       3428>>IF       3429>>IF       3430>>ASSIGN   3525--IF
      3526>>IF       3527>>ASSIGN   3528>>ASSIGN   3529>>ASSIGN
REASON
        65**DCL        61--PROC     3418>>ASSIGN   3460>>IF       3467>>ASSIGN   3538>>IF       3550>>ASSIGN
RELADDR
      3173**DCL      3447<<ASSIGN   3448<>CALL     3449>>ASSIGN
SIZ
      3175**DCL      3443<>CALL     3543<<ASSIGN   3544<>CALL
SSS$BLOCKM
        91**DCL-ENT  3399--CALL
STK.DISP
      3397**DCL      3436>>ASSIGN
STK.RETADDR
      3396**DCL      3435>>ASSIGN
SYSID
      3174**DCL      3423<<ASSIGN   3426<<ASSIGN   3430<<ASSIGN   3432>>ASSIGN   3552>>ASSIGN
S_CUN
        83**DCL      3422>>ASSIGN   3541>>IF
S_TIMR
        84**DCL      3421>>IF
WRDS
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:145  
      3201**DCL      3479>>ASSIGN   3480>>ASSIGN   3481>>ASSIGN
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:146  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #005=FMB$LOGERR File=FMB$IO.:E05TSI                                TUE 07/29/97 16:37 Page:147  
              MINI UREF LISTING

B$DOCONT     257**DCL
FMB$LOGERR      61**PROC
N$FQ    2123**DCL
NI$CHT$    2047**DCL
NI$CONNECT$    2047**DCL
NI$DS    2047**DCL
NI$DVT$    2047**DCL
NI$FQ    2124**DCL
NI$IBUF    2124**DCL
NI$IMW$    2048**DCL
NI$IOM$    2070**DCL
NI$IOQ$    2070**DCL
NI$RP    2126**DCL
NI_CHANCONFIG    2096**DCL
NI_CHANS    2096**DCL
NI_CONADDR    2097**DCL
NI_DBLZERO    2097**DCL
NI_FWGATE    2097**DCL
NI_IMXLO_PBASE    2098**DCL
NI_IMX_CCW    2098**DCL
NI_INTENTRY    2098**DCL
NI_IOMS    2100**DCL
NI_MAINT_DCTX    2100**DCL
NI_MAX_CHANS    2101**DCL
NI_MFGATE    2121**DCL
NI_NDVTS    2121**DCL
NI_NUMIOQ    2121**DCL
NI_NUMIOS    2121**DCL
NI_OVERLAY    2122**DCL
NI_RELIOS    2122**DCL
N_DCTXMAX    2096**DCL
N_NDPS    2096**DCL

PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:148  
      666        1        /*T***********************************************************/
      667        2        /*T*                                                         */
      668        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      669        4        /*T*                                                         */
      670        5        /*T***********************************************************/
      671        6        /*F*   NAME:   FMB$IOSPIN
      672        7        *      PURPOSE:  Wait for all I/O on a given DCB to terminate                */
      673        8                                                /*                                    */
      674        9                                                /*                                    */
      675       10                                                /*                                    */
      676       11        /*D*   NAME:   FMB$IOSPIN
      677       12        *      CALL:   CALL FMB$IOSPIN;
      678       13        *      INPUT:  Pointer to DCB in B$JIT.DCB$
      679       14        *              Current # outstanding I/O'sin DCB.FCN
      680       15        *      OUTPUT: Returns when DCB.FCN is zero                                  */
      681       16                                                /*                                    */
      682       17        FMB$IOSPIN: PROC;
      683       18        /* LOCAL AUTOMATIC STORAGE */
      684       19    1   DCL JDCB$ PTR;
      685       20    1   DCL 1 JDCB REDEF JDCB$,
      686       21    1         2 * BIT(24),
      687       22    1         2 SID BIT(12);
      688       23        /* EXTERNAL ROUTINES */
      689       24    1   DCL SSR$REG ENTRY(3) ALTRET;
      690       25        /* EXTERNAL DATA */
      691       26    1   DCL B$JIT$ PTR SYMREF;
      692       27        /* INCLUDE FILES */
      693       28        %INCLUDE B_SEGIDS_C;
      694      567        %INCLUDE F$JIT_C;
      695      997        %INCLUDE F$DCB;
      696     1046        %INCLUDE SS_SCHED_C;
      697     1279                                                /*                                    */
      698     1280    1           JDCB$=B$JIT.DCB$;
      699     1281    1           JDCB.SID=%RONCSID;              /* CONVERT TO BYPASS CACHE PTR        */
      700     1282    2           DO WHILE(JDCB$->F$DCB.FCN(JDCB$->F$DCB.WAIT));
      701     1283    2              CALL SSR$REG(%SS_IIP,JDCB$->F$DCB.FCN(JDCB$->F$DCB.WAIT));
      702     1284    2              END;
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:149  
      703     1285    1           RETURN;
      704     1286    1   END FMB$IOSPIN;

PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:150  
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FMB$IOSPIN.

   Procedure FMB$IOSPIN requires 37 words for executable code.
   Procedure FMB$IOSPIN requires 6 words of local(AUTO) storage.

    No errors detected in file FMB$IO.:E05TSI    .

PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:151  

 Object Unit name= FMB$IOSPIN                                 File name= FMB$IO.:E05TOU
 UTS= JUL 29 '97 16:38:34.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    37     45  FMB$IOSPIN
    1  RoData even  none     1      1  FMB$IOSPIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  FMB$IOSPIN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 SSR$REG
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                                B_VECTNIL
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:152  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:153  


      666        1        /*T***********************************************************/
      667        2        /*T*                                                         */
      668        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      669        4        /*T*                                                         */
      670        5        /*T***********************************************************/
      671        6        /*F*   NAME:   FMB$IOSPIN
      672        7        *      PURPOSE:  Wait for all I/O on a given DCB to terminate                */
      673        8                                                /*                                    */
      674        9                                                /*                                    */
      675       10                                                /*                                    */
      676       11        /*D*   NAME:   FMB$IOSPIN
      677       12        *      CALL:   CALL FMB$IOSPIN;
      678       13        *      INPUT:  Pointer to DCB in B$JIT.DCB$
      679       14        *              Current # outstanding I/O'sin DCB.FCN
      680       15        *      OUTPUT: Returns when DCB.FCN is zero                                  */
      681       16                                                /*                                    */
      682       17        FMB$IOSPIN: PROC;

     17  0 000000   000000 700200 xent  FMB$IOSPIN   TSX0  ! X66_AUTO_0
         0 000001   000006 000000                    ZERO    6,0

      683       18        /* LOCAL AUTOMATIC STORAGE */
      684       19    1   DCL JDCB$ PTR;
      685       20    1   DCL 1 JDCB REDEF JDCB$,
      686       21    1         2 * BIT(24),
      687       22    1         2 SID BIT(12);
      688       23        /* EXTERNAL ROUTINES */
      689       24    1   DCL SSR$REG ENTRY(3) ALTRET;
      690       25        /* EXTERNAL DATA */
      691       26    1   DCL B$JIT$ PTR SYMREF;
      692       27        /* INCLUDE FILES */
      693       28        %INCLUDE B_SEGIDS_C;
      694      567        %INCLUDE F$JIT_C;
      695      997        %INCLUDE F$DCB;
      696     1046        %INCLUDE SS_SCHED_C;
      697     1279                                                /*                                    */
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:154  
      698     1280    1           JDCB$=B$JIT.DCB$;

   1280  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200003 756100                    STQ     JDCB$,,AUTO

      699     1281    1           JDCB.SID=%RONCSID;              /* CONVERT TO BYPASS CACHE PTR        */

   1281  0 000005   006124 236007                    LDQ     3156,DL
         0 000006   200003 752103                    STCQ    JDCB$,'03'O,AUTO

      700     1282    2           DO WHILE(JDCB$->F$DCB.FCN(JDCB$->F$DCB.WAIT));

   1282  0 000007   200003 471500                    LDP1    JDCB$,,AUTO
         0 000010   100064 236100                    LDQ     52,,PR1
         0 000011   000004 772000                    QRL     4
         0 000012   000001 376007                    ANQ     1,DL
         0 000013   000000 106506                    CMPC    fill='000'O
         0 000014   100074 000001                    ADSC9   60,Q,PR1                 cn=0,n=1
         0 000015   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         0 000016   000044 600000 0                  TZE     s:1285

      701     1283    2              CALL SSR$REG(%SS_IIP,JDCB$->F$DCB.FCN(JDCB$->F$DCB.WAIT));

   1283  0 000017   200003 470500                    LDP0    JDCB$,,AUTO
         0 000020   000064 236100                    LDQ     52,,PR0
         0 000021   000004 772000                    QRL     4
         0 000022   000001 376007                    ANQ     1,DL
         0 000023   000020 736000                    QLS     16
         0 000024   000074 036003                    ADLQ    60,DU
         0 000025   200003 036100                    ADLQ    JDCB$,,AUTO
         0 000026   000000 235000 1                  LDA     0
         0 000027   200004 757100                    STAQ    JDCB$+1,,AUTO
         0 000030   200004 630500                    EPPR0   JDCB$+1,,AUTO
         0 000031   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000032   000000 701000 xent               TSX1    SSR$REG
         0 000033   000000 011000                    NOP     0
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:155  

      702     1284    2              END;

   1284  0 000034   200003 470500                    LDP0    JDCB$,,AUTO
         0 000035   000064 236100                    LDQ     52,,PR0
         0 000036   000004 772000                    QRL     4
         0 000037   000001 376007                    ANQ     1,DL
         0 000040   000000 106506                    CMPC    fill='000'O
         0 000041   000074 000001                    ADSC9   60,Q,PR0                 cn=0,n=1
         0 000042   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         0 000043   000017 601000 0                  TNZ     s:1283

      703     1285    1           RETURN;

   1285  0 000044   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000003 006000                                                    ....
      704     1286    1   END FMB$IOSPIN;

PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:156  
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FMB$IOSPIN.
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:157  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w STRC        r     1 JDCB                       3-0-0/w PTR         r     1 JDCB$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure FMB$IOSPIN requires 37 words for executable code.
   Procedure FMB$IOSPIN requires 6 words of local(AUTO) storage.

    No errors detected in file FMB$IO.:E05TSI    .
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:158  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:159  
          MINI XREF LISTING

B$JIT.DCB$
       984**DCL      1280>>ASSIGN
B$JIT.ERR.MID
       895**DCL       895--REDEF
B$JIT$
        26**DCL       889--IMP-PTR  1280>>ASSIGN
F$DCB.ACTPOS
      1023**DCL      1023--REDEF
F$DCB.ARS
       998**DCL       998--REDEF
F$DCB.ATTR
      1016**DCL      1017--REDEF
F$DCB.BORROW
      1031**DCL      1031--REDEF    1031--REDEF    1031--REDEF
F$DCB.DCBNAME.L
      1045**DCL      1045--IMP-SIZ
F$DCB.EOMCHAR
      1002**DCL      1002--REDEF
F$DCB.FCN
      1035**DCL      1282>>DOWHILE  1283<>CALL
F$DCB.FLDID
      1026**DCL      1026--REDEF
F$DCB.FORM$
      1020**DCL      1020--REDEF
F$DCB.FSECT
      1036**DCL      1036--REDEF
F$DCB.FSN
      1013**DCL      1013--REDEF    1013--REDEF    1014--REDEF
F$DCB.HEADER$
      1019**DCL      1019--REDEF
F$DCB.IXTNSIZE
      1017**DCL      1017--REDEF
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:160  
F$DCB.LASTSTA$
      1007**DCL      1007--REDEF
F$DCB.LVL
      1032**DCL      1032--REDEF
F$DCB.NAME.C
      1007**DCL      1007--REDEF
F$DCB.NOEOF
      1028**DCL      1028--REDEF
F$DCB.NRECS
      1018**DCL      1018--REDEF
F$DCB.NRECX
      1037**DCL      1037--REDEF
F$DCB.OHDR
      1029**DCL      1029--REDEF
F$DCB.ORG
      1012**DCL      1012--REDEF
F$DCB.PRECNO
      1035**DCL      1035--REDEF
F$DCB.RCSZ
      1040**DCL      1040--REDEF
F$DCB.RES
      1008**DCL      1008--REDEF
F$DCB.SETX
      1020**DCL      1020--REDEF
F$DCB.TAB$
      1019**DCL      1020--REDEF
F$DCB.TDA
      1034**DCL      1034--REDEF
F$DCB.WAIT
      1030**DCL      1282>>DOWHILE  1283>>CALL
F$DCB.WSN
      1009**DCL      1009--REDEF
JDCB.SID
        22**DCL      1281<<ASSIGN
JDCB$
        19**DCL        20--REDEF    1280<<ASSIGN   1282>>DOWHILE  1282>>DOWHILE  1283>>CALL     1283>>CALL
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:161  
SSR$REG
        24**DCL-ENT  1283--CALL
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:162  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #006=FMB$IOSPIN File=FMB$IO.:E05TSI                                TUE 07/29/97 16:38 Page:163  
              MINI UREF LISTING

FMB$IOSPIN      17**PROC
